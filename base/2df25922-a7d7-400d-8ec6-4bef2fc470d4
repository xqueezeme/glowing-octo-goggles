{
    "title": "Read The Fucking Manual",
    "pages": [
        "I have attempted to create you in My own image, but due to some limitations of your physical form I have not bestowed on you inherent knowledge of all you should know. Perhaps I should have expanded your skull to provide more room for My loftier thoughts, but the end result would have been less aesthetically pleasing and overall balance would have suffered greatly. Regardless, I can see from your recent failures that you need assistance in the proper use of My greatest gift to you: Woman. \n\nMy original plan for you, My creation, included a species of tree which would give birth to your sons after you had violated it with your penis, but My early experiments showed that splinters would be frequent and tended to discourage the fruitful multiplication of the race. When My thoughts were bent to this mystery, I eventually decided on the form of Woman as nearly identical to My own, but with subtle alterations to make it distinguishable from you and therefore easy to spot in a crowd. Making her in this way, with hands and feet and even a mind, Woman could not only provide a womb for your progeny, but could also assist in the more tedious aspects of keeping the home clean while you are busy enjoying a bout of drinking fermented fruit juice or engaging in the sport of killing and eating any number of small, defenseless beasts which I have provided for you. \n\nCertainly the tree solution would have been simpler and much quieter...\n\n-- Woman: The Owner's Manual, 2:17-45\n\nFrank swore at the screen again, but it refused to acknowledge his dismay.\n\nThe linear combination method was completely failing to converge, which meant that there wasn't likely going to be any translation of the new tablets any time soon. He didn't know why he'd gotten apparent success when he ran the program against Linear A texts... hell, maybe he hadn't. People had claimed to have deciphered Linear A before: Tsikritsis, Gordon, and Best all took a swing at it, though their results were contested. His own results had looked good, giving a correlation to both Etruscan and several early Levantine languages, and there were only a few who scoffed at his translations of the Mallia glyphs-- he figured it was a sure shot running his algorithm against the new inscriptions they'd found in Iraq last week. He'd even promised an interview with a local rag as soon as the results were in-- the unearthing of a huge structure that appeared to be an ancient temple was big, distracting news to a media obsessed with the Middle East and all of its foibles. \n\nThe media seemed even more intrigued with the stone tablets found beneath the altar stone-- and he couldn't blame them. The lettering was remarkably regular-- almost printing-press quality, considering the technology at the time-- and graven in stone rather than the clay which was common in that age. The characters were in no known mode, and fit no known language profile, so it fell on someone to try to solve the mystery, and that someone was Frank Pilaster, expert linguist and the computer modeler who had apparently cracked Linear A.\n\nPride goeth before the fall, he thought to himself as he extracted his head from his hands. Shit.\n\nFrank wandered about the lab space, knocking books off shelves and kicking tables and even smashing a (replica!) Minoan funerary urn. Dammit! What the hell was he supposed to do now?\n\nA low beep indicated he had email, and he wandered over to read it, or to SHIFT-DELETE the thing, if the mood he was in right now was any indication. It was from Sepi, his supposed research \"partner\", though her work so far had been completely unused--\n\nHis intention had been to at least read what the woman'd had to say, but it suddenly occurred to him that he cared a hell of a lot more about what she'd had to code.\n\nMonths back, before the Linear A success, both Frank and Sepi had worked to provide two different engines for the linguistic decode algorithm: he had concentrated on linear combinational logic, and Sepi had worked through the more computationally intensive, expensive, and more esoteric neural network/fuzzy logic model. They'd disagreed over which would prove more useful, and the fact that Frank's simpler technique had worked on Linear A had provided him vindication... or so he'd thought before today. Now, Sepi was off gallivanting around on Winter Break while he sat in an overheated lab space in the archaeology building, pissing the time away with a $100,000 multiprocessing supercomputer and an algorithm that didn't work.\n\nBut what if he replaced his own non-working code with hers? They'd never actually tried the damned stuff out-- hadn't needed to, with the results he'd gotten-- but both engines used the same front end interface, it should just be a matter of plug-and-play.\n\nHe checked her latest version out of the repository, then compiled it in with the graphical front end and all the image-processing libraries. After correcting a couple of syntactical typos in Sepi's code, the executable compiled and linked without errors, and he proceeded to train it.\n\nNeural networks were more of a dark art than a science. You identified the input parameters and the output parameters, then fed the system data with known good results. The system pseudo-randomly varied the weights and values of its millions of tiny simulated \"neurons\", all interconnected, until it was complicated and sophisticated enough to independently derive the known good results from input data. Then, if the neural network was modeling correctly, you could take new data it had never been offered before and draw the right conclusions about it. It's how cognitive scientists postulated the human brain worked, but the results were highly specialized instead of general, and results were iffy. Some data was very well suited to neural network analysis, but some was not, and it had proved rather difficult, in the practical world, to determine which was which.\n\nIn this case-- the translation of ancient texts-- Frank had assumed that the systems were not complicated enough to warrant this kind of analysis: there were only about forty independent characters in this new manuscript, all told. Sepi had disagreed, and since Frank didn't really have anything else to do right now, he figured he might as well try her stuff out.\n\nHe spent the rest of the morning feeding the model streams of ancient texts from Egypt, Minoa, Persia, Sumeria, Babylonia, Crete...... oh, hell, he threw in old Celtic manuscripts as well, and some very old Chinese, even though the latter two were unrelated to what he was looking for both in time and in space. Matching the texts with their English translations, he pushed more than thirty gigabytes of crap from the university's archives into the model. He threw in his now-suspect Linear A translation for good measure. \n\nHe let the damn thing crunch overnight, then went to the bar and downed several whiskey sours in self-pity and slept until noon the next day.\n\n* * *\n\nFrank was completely unmotivated to show up at the lab the next morning, but Morgan wasn't due in until tomorrow, everyone else he knew was out of town, and lying in bed darkly contemplating the hideous Jetsons-esque light fixture was not doing anything for him. Besides, he'd be taking the next day off to greet Morgan on her return, so he ought to get something done. He put on a pair of sweat pants and a rock t-shirt from the 1980s and headed into the building.\n\nThe system was done digesting, apparently, as it had left as its remains a string of measurements which he knew would have meant something to Sepi but sure as hell told him zilch. The pulsating cursor reminded him of his luck in avoiding a hangover-- well, too much of one, anyway-- and he made it go away for awhile by typing in a string of commands which would input images of all seventeen of the tablets that Ashraf had found at the dig site. Subsequently, if the stars were right, it would give them some inkling of what the heck this newly-rediscovered language actually was, and what it was saying. A couple more keystrokes and...\n\n\"Holy fucking--\" he emitted (somewhat prophetically, in view of what was to come).\n\nFrank stared dumbfounded as the words slowly began to appear-- sometimes out of order, but eventually filling in the interstices. Little annotation marks appeared, with clickable footnotes detailing the probability of accuracy of any given word or phrase. A summary sheet, updated every few seconds or so, detailed various statistics, including the average estimated accuracy.\n\nIt was in the mid-90s.\n\nHe gave a whoop which undoubtedly spooked anyone left in this godforsaken building, and then started reading the results of the fifth tablet.\n\n... this can be avoided by forbidding her from speaking to such friends [in the future]. Understand, though, that this will [generate?] anger within Woman and it is moreover difficult to [enforce?] without setting a constant watch over her. In these [cases?] My advice is to let Woman have her small victory and cherish it, while you can use this event in [conversations?] for years to come as an example of how [reasonable?] and generous a lord you are to her...\n\nAmazing! The software was generating coherent sentences from the text. Sure, some of the interpretations were listed as questionable, but the days of slaving over photographs for months or even years to puzzle out some modicum of meaning were apparently over. He'd get a Nobel Prize. Or something. Or they would, more correctly, but he was already so excited at the prospects that the memory of the failure of his own model was fading.\n\nHe shook his head to clear the victory hormones and began to concentrate on the text itself. The snippet he'd just read was completely unprecedented, and appeared... yes, on further perusal appeared to be advice to men on how to get along with their wives. The rest of Tablet 5 concentrated on methods of ensuring a peaceful household. He set the software to log the results and executed another instance of it on another tablet chosen at random. Tablet 3.\n\nYou will find that all children born of Woman will have a scar on their [abdomen] from feeding in the womb. You shall call this scar the \"navel\". This area will seem [entirely?] useless on Woman during the rigors of daily life, and may even be a [nuisance?], since it accumulates filth if not washed regularly. Be not fooled. The navel is very important in [maintaining?] control over Woman, as I have endowed it with certain properties...\n\nPrimitive \"magic\", with body taboos detailed! He'd seen something vaguely akin to this at an ancient Cretan site, but nothing this old or descriptive. He couldn't wait to publish-- this gave an astounding portrait of what the ancient proto-Sumerians believed, and how they lived their lives. Logging this as well, he moved to Tablet 1.\n\nWoman: The Owner's Manual\n\nby El\n\nHe guffawed at the first line, and at the second, and searched for the probabilities on the word \"owner\". Nope, the translation was listed as 99% probable. So the proto-Sumerians considered their women property? Well, they certainly weren't the last, and probably not the first, either. Interesting, and proof of DeMonahans' theories. He hated to give that prick anything to swell his head further, but... hell, there was going to be so much brouhaha about Frank's own discovery he could afford to be magnanimous.\n\nAnd \"El\"... Leave it to the proto-Sumerians to insist that their texts had been written by God Himself. Again, not uncommon... hell, many Muslims and even some Christian sects said the same thing about their holy books. Regardless of how you felt about the fictitious byline, just the fact that the writer was trying to convince his audience of the divine origins of the document meant that the tablets would provide wonderful insight into the culture's religious beliefs. Or, at the very least, into the beliefs of someone educated enough to write the document and rich enough to have it so painstakingly and perfectly enscribed, and someone like that had to be important and therefore worth reading.\n\nHe started paging through more of the translation, hitting a heading that intrigued him and made him giggle like a little boy. \"'Getting Inside Her Mouth'?\"\n\n... it will become [tedious?] to constantly have to ask or even demand that she take your manhood in her mouth, so I have provided an [expedient?] method of ensuring your needs are met. Simply grasp both of her ears in your hands and gently rub around their edge [in a circular motion]. The [reflex?] may take some time to manifest, so it may be wise to regale her with tales of your valiant deeds that day, ask what color stones she'd like you to use as the next room of the house, or even [chasten] her regarding the untidiness about the hearth-fire, as long as you continue this selfsame rubbing. Soon enough the need will seize her, and she will fill her throat with you, [dutifully?] swallowing your seed when you are done. You can thank Me later...\n\nA frickin' Bronze Age sex manual. Un-fucking-believable. He didn't know whether to publish in the Journal of Middle-Eastern Antiquities or Penthouse Forum. Frank had never thought he'd get wood from his work (well, some of the Ishtar manuscripts had some hot descriptions, but still), but he found himself taking a break in the bathroom, imagining a temple \"virgin\" licking his cock and drinking his come as he masturbated into the toilet. Whew. \n\nMission accomplished, he headed back to the computer lab to read more.\n\n* * *\n\nWhen he finally got home at midnight, the light was on in the bedroom. He was initially cautious-- Ted Lefevre's place had been robbed a couple of months back-- but he heard the sound of his stereo playing Jars of Clay and found it an unlikely selection for the garden variety burglar. Morgan was home early, he suspected.\n\nShe looked up, startled, at his entrance, the loudness of the music having masked the sound of the door opening. Her long, lithe form was covered neck to ankles in a smooth, shimmery gown, and the impractical but sultry spiky heeled slippers he had told her were \"smoking hot\" peeked out the bottom. \"Hi, honey,\" she smiled.\n\n\"Hi. I wasn't expecting you until tomorrow.\" He kissed her. \"Not that I'm complaining.\"\n\n\"My parents were annoying, and my brother was impossible. I decided the fifty bucks to change my flight was worth it.\"\n\n\"Worth it to me, anyway.\"\n\n\"Really?\" she smirked. \"What do you mean, sir?\"\n\n\"I mean that I'm going to turn this music off and make my own noise.\"\n\n\"Do tell.\"\n\n\"I'd rather show.\" He joined her on the bed and cradled her ass in his palms while he put his lips to own, then to her jawline, and to her neck. She inhaled sharply as he went there, and he saw her nipples appear through the satin. He heeded their call and mouthed them through the material, dampening it with his saliva as she ran her fingers through his hair, moaning. She parted her thighs and accepted his erection between them, moist and eager against his solidity through a few layers of cloth. He pressed his cock up against her and her breath hitched as she pressed back. \"You have too many clothes on,\" she whispered.\n\nHe rectified that situation, smiling, and on his way back to her took the time to hike up her gown. Her long legs were revealed, and the lack of panties at their apex revealed her neatly trimmed bush. \"Mmmmm,\" he commented. \"Yummy.\"\n\nShe purred in response, and he took that as an invitation to eat her pussy out. He used his thumbs to move her lips apart and filled the gap with his tongue, licking around her folds, avoiding her clitoris in a stubborn but effective attempt at tantalizing her. When she started moving her cunt around in desperation, trying to get him attached to her clit, he finally relented and sucked the tiny bud into his mouth, resulting in a panted, \"Ahhhhhhhhhhhh!\" from Morgan. Soon she was indeed making noises louder than the stereo had been, and her legs tensed into steel cables as she smeared his face with her sauce. Before she could recover, he had topped her and thrust himself inside her drenched slit, causing her eyes to roll up into her head and her ankles to lock around his. Her aroma and flavor had triggered something primitive in his brain and he was only moments away from coming as soon as he had entered her. This excitement fed hers, and by the time he had lost control and was ramming into her without reason or rhyme, clutching her shoulders to attain more depth, she was screaming in his ear and raking his back with her nails.\n\nThey sweated and breathed together for a moment before he kissed her lightly and pulled out and away. He moved into a position next to her and let her rest against him as she drowsed. In a fit of pique and with an inward self-mocking smile he began to circle her ears with his thumbs as he told her of his success in decoding the ancient text. She was a Finance grad student and couldn't care one whit about archaeology, he knew, but she listened all the same. Soon she started to glaze over, as usually happened when he discussed algorithms and linguistic analysis, and he laughed and asked if she was still listening.\n\n\"Huh? Sure, honey, you were just talking about... about... Hmmm...\" She squirmed her way underneath the covers and then, to his astonishment, he felt her lips on his flaccid (but not for long-- What the hell?!?) cock. She gently stroked his balls with her fingernails as he grew his way into the back of her throat, and it wasn't long before her bobbing head had regenerated him fully and he was achingly close to coming again. When he did start his hips into serious fucking of her mouth, she met his motions with her own and swallowed each precious drop of his semen. He hissed his satisfaction through his teeth, and she drew her head back above the covers and without explanation fell immediately asleep.\n\nFrank lay back, eyes wide with astonishment. Morgan had never given him head before, in the two years they'd been dating, but the fact that he'd been stroking her ears when she'd abruptly changed her oral habits was the real freakout because it meant...\n\n... that book is for real. I don't know what it is, but it's not bullshit. It's something else entirely.\n\nHe was too tired to do anything but sleep, now, but he had changed his mind on taking tomorrow off. He stared at Morgan's mouth. The work was much too important to put off.\n\n* * *\n\nHad My design for breasts been solely for children's use, I would not have placed them so high up out of their reach.\n\n-- Woman: The Owner's Manual, 14:19\n\nLogin could not happen fast enough. \n\nHe'd rushed out the door this morning, but had lingered a bit more than he'd wanted to because he was curious what Morgan would have to say about the last night's events. She rose a few minutes after he entered the shower and started brewing coffee, and by the time he'd dried his hair and put on a pair of pants she was frying bacon.\n\n\"Morning,\" he had ventured.\n\n\"Morning,\" she had shone back. \"Did you have a nice time last night?\"\n\n\"Absolutely. Did you?\"\n\n\"Of course. Same as ever.\" She'd drawn forth a Zsa Zsa accent. \"You've marvelous, darling.\"\n\n\"As are you.\" He had paused, not knowing how to put this. \"What... uh, I'm just wondering, why you did what you did... at the end there.\"\n\nShe'd looked at him blankly for a second. \"What do you mean?\"\n\n\"What you... did with your mouth.\"\n\n\"To kiss you, while we were having sex? Honey, don't I always do that?\" General amusement at his confusion.\n\n\"Um...\" He'd searched her gaze for any sign of sarcasm, or jest, and waited a bit for the punchline... but it had not been forthcoming. \n\n\"Oh, was I snoring again?\" She'd looked embarrassed, then. \"Dammit, wake me up when I do that. It's bad enough I do it, you shouldn't have to suffer through it.\"",
        "\"O-okay,\" he had replied, and then made excuses for why he had to run off to work so soon.\n\nIt was evident Morgan remembered nothing of giving him head, though she apparently did remember the sex itself. Did the ear-stroking thing generate some kind of autonomic response, almost reflexive in nature? It hadn't seemed reflexive, it had seemed... oh, who was he kidding? Even if it had been utterly mechanical and passionless, he'd not had a blow job in over two and a half years, and whatever she'd given him had felt wonderful. He certainly wasn't going to complain about it.\n\nBut he sure as hell was going to find out whatever else he could from the so-called Owner's Manual. He resolved to read it \"cover to cover\", if you could say such a thing about pages made of two-inch thick chiseled stone.\n\nMuch of it was pretty dull stuff involving how many yaks or sheep a woman was worth on the open market depending on her general appearance and skills. Blah, blah, blah... fascinating reading at the time, he was sure, but very impractical unless he was seeking to revive the yak as a standard of commerce. Tablet 3 was where the document finally began to \"put out\", as it were:\n\n... Short commands, easily understood by even the most stupid of Women, can be [presented?] to her with [assurance?] of success while boldly but not violently pressing the navel with one fingernail and circling her nipple thrice with another. This will prove useless if Woman has recently been purchased from a [foreigner] and not yet been [educated?] in your speech, so if you wish to partake of the fruits of My labor here, you should teach Woman to understand you. You will want to do this anyway in order to [ensure] she knows how you like your meat seasoned when she cooks your meals...\n\nInteresting. He made the mental note to try that one out. \"Commands\", huh? He skimmed more discussion about how to get your woman to clean up the household bowls and urns until he found more of the good stuff:\n\n... strive to use logic and reason to sway her thoughts. However, as Woman was created imperfect (as were you, [bozo], so let it not go to your head), oft she will not respond favorably to your words, especially at certain times of the moon. In that case you are permitted to use your influence on her, but be warned that the method is neither [permanent?] nor [far-reaching?]. Had I made it [either], you would forsooth mess Woman up entirely, and no doubt spoil her for the rest of your brethren in the process. And I wish [not to have to] hear the whining about it in prayer for years on end...\n\nThis could be good! Once again, the damned belly-button was the key. This time, however... um, okay, not exactly what he'd hoped for, but, given what he was going to get back out of the deal, it was worth it. He'd done kinkier.\n\nHe pressed on. There were things about how to punish women for mild infractions, and on keeping her away from his \"brethren\" so they couldn't use their own techniques on her, but Tablet 11 provided seduction methods he could not pass up. He read these quite thoroughly and found himself getting stiff at just the thought of the possibilities. Rather than take care of this matter in the restroom, he resolved to meet Morgan and try out his new learnings.\n\nAs he prepared to go, he started to worry about other people getting into this information. Sepi, of course, or one of the grad students, or the frickin' sysadmin, for that matter. He didn't think anyone would believe it actually worked but he also didn't want to take the chance they might start blabbing it all over campus. What would happen if Morgan read the newspaper and saw commentary on the ear-rubbing technique? Sure, she didn't seem to remember what happened afterward, but next time he tried it she'd sure as hell figure out what he was going for.\n\nHe slapped down a simple read permissions restriction on everyone but himself, then found those instructions for strong encryption the IT department had provided (and he'd filed away in his \"Useless\" folder) two semesters back. He applied those to the translations and then sat back and worried less.\n\nAs an afterthought he checked his email, finding that Sepi's mail asked him how the project was going, and whether the algorithm was working or not on the new inscriptions. He wrote back something noncommittal but positive-- he wasn't yet ready to share his discovery until he understood the ramifications of it. \"The image acquisition software seems to be working on the new tablets,\" he replied, \"but the translation is questionable. Will update you later. Rgds, Frank.\"\n\nWith that he started to log off... then abruptly decided to lock and encrypt the directory where the photo scans of the inscriptions were, too. No problem being overly cautious for the time being.\n\nHe pushed back from the terminal and headed to the student center for a cup of coffee. His hard-on had faded while he took care of the file maintenance, but it was lurking below the surface, ready for action.\n\n* * *\n\nUse of physical force to take Woman against her will is not permitted (see My other publications for details). However, never let Woman attempt to convince you that the sex act is only for procreation. If that had been My will, I would have made Woman ugly and of a displeasing aroma when infertile. Use her whenever you can convince her to desire you. She may complain of mysterious aches and pains in order to avoid your touch, but as you know I have provided you with the means to negate this objection in The Rubbing of Her Feet...\n\n-- Woman: The Owner's Manual, 12:14-25\n\nHe called Morgan's cell phone with the hopes of having her meet him there, but he was transferred to her voice mail. Letting her know where he was headed and why, he hung up and trudged up the hill to the blocky building's main entrance.\n\nHe stood in line at the coffee counter while a pimply-faced kid prepared his espresso and a heavyset girl took his money and provided him with change. Thanking her, he grabbed his coffee and took a table near the window, looking out over the lake for a bit. Approaching the lake side entrance was a group of six or seven students carrying banners which he couldn't quite read. Protestors over something or other. Four of them broke off toward the dorms, but the last couple came into the student center. Among them was a stacked blonde in a belly shirt and skin-tight jeans, and as Frank stared at her revealed tummy, the beginnings of a plan began to stir in his... well, head. \n\nHe finished his coffee, and then bought another, added cream and sugar packets to a tray, and brought them over to the girl, who had bidden her last companions good-bye and sat down. \n\nShe looked up at him, unamused, as he lurked. \"What?\"\n\n\"I thought you might like some coffee, so I brought you some.\"\n\n\"Why?\"\n\nUh... this was not going well. \"Because you look like an interesting person to get to know.\" That sounded stupid. Do better.\n\n\"Listen, jerk, I'm not interested, okay?\" She thrust out her chest, and at first he thought she was showing him her tits in contradiction to her words, but then he realized she was pushing forth a button pinned to her shirt. A button with rainbows and a pink triangle. Oh.\n\n\"I can... uh... see that. Look, I'm not trying to hit on you, I'm just, you know, bored, and would like to talk to someone, okay?\"\n\n\"Beat it, dork, before I call campus security.\"\n\nSnotty bitch. Wasn't even going to give him a chance-- the fact that she was a lesbo notwithstanding, this was just rude. He glanced left and right, briefly wondering how insanely kicked off campus he was going to be, but the \"give me head\" reflex unquestionably worked, so he had confidence the rest would as well. In a snap designed to look like he was examining her button more closely, he snaked one hand down her abdomen to her belly-button while the other gently added his fingernail to the nipple through the shirt. Would it even work through the shirt?\n\nShe was too startled to protest immediately, and as she finally opened her mouth to scream he completed the third circle and hissed, \"Be quiet and sit still!\"\n\nWorked like a charm, and his cock rose in celebration. He tried hard not to dance. He circled again and murmured, \"Come quietly outside with me.\"\n\nTogether they went out toward the Main Library, stopping in the midst of some well-manicured shrubs. He nippled her again before instructing her to sit, and then to let him rub her feet. She bristled at the treatment and her eyes held fire.\n\n\"Don't worry, girl, I'm just experimenting.\"\n\nHe kneeled down next to her and removed her stomping shoes. He proceeded to give her arches a thorough rubdown, and then began tracing the lines of her footprint. He watched her expression as it went from hatred and fury to studied indifference and eventually to... arousal? He sure hoped so. His fingers were getting tired, and she had entirely too many clothes on.\n\nHe ran a nail up the center of the foot and when he reached the toes pulled each until their knuckles cracked. When he reached the pinky, the girl erupted with a moan, and her thighs parted. She looked at him hungrily, and slid her hand down her jeans for release.\n\nHe ignored this, continuing with the patterns and rhythm the book had noted... and she jumped on top of him, filling his mouth with her tongue as she ground her denim-covered crotch up against him. Her fly was open in an instant, and she shucked her jeans with a swiftness which belied their tightness, hooking her thumb into the panties, too, to remove them at the same time. Her cunt was wildly thatched and unshaven; that was okay, so was he! He dropped his looser, much easier to remove slacks; she pried her nether lips open and without bothering with foreplay slammed down on his cock with the force of a hurricane. \n\nHe couldn't believe this hot piece of ass was actually fucking him, not even knowing his name, and despite her proclivities. She pressed down at him and he felt the lubrication of her cunt dampening his lap as she thrust him in and out of her. She rode him like a bucking bronco and didn't stop until his reflexes took over and he squeezed his ass muscles to thrust impossibly upward into her as he himself came generously and totally in her moisture. She absorbed this and jammed herself down on him in her own climax, grunting with the animal pleasure. When it was done, she fell back in relief, and he rose up in reaction, looming over her. Now that the involuntary sex was over, she looked horrified at what she had done-- or more properly, what he had made her do. He decided to try out the other technique from the book.\n\nPlugging her navel with his thumbnail, he leaned down and licked her armpit simultaneously. Definitely not his idea of erotic, but if the results were as the book promised...\n\nShe relaxed and her eyes went blank.\n\n\"What's your name?\"\n\n\"Pauline,\" she replied, as if in a trance.\n\n\"Good, Pauline. I'm Frank. You're a lesbian, aren't you, Pauline?\"\n\n\"Yes?\" she dripped out in a questioning but dulcet tone. \"Lesbian.\"\n\n\"But you make an exception for me, don't you, Pauline?\"\n\n\"I-- what...?\"\n\n\"You are a lesbian, but with me you're straight.\"\n\n\"Uh..... okay... With you I'm s-s-s-straight.\"\n\n\"Very good. Say it again.\"\n\n\"With you I'm straight, but otherwise I'm a lesbian.\"\n\n\"Correct. Now, let me touch your ears. Yes, that's it, I--\"\n\nThere was a gasp behind him and he turned to meet the eyes of their audience.\n\nIt was Morgan, come to meet him at the student center. She stood stunned for an instant, looking as if she were living a nightmare, then turned, sobbing, and ran.\n\n\"Shit,\" he almost said, thankfully realizing in time that Pauline was still obeying commands. He pulled out of her and chased after Morgan as soon as he could get his trousers up above his knees.\n\n* * *\n\nWoman was made for you, and for you alone. No matter what she might request, you are not to share her with dogs or horses or any other beasts of the earth, unless that somehow increases your own enjoyment of her or she is to be punished for trespassing against you. \n\nLet not Lilith's example with her sisters influence Woman: Woman is strong enough for Man, but not made for a Woman. If she insists she needs someone to lick her womanhood, tell her that is your job. If she desires instead to consume the fluids of womanhood, use her mercilessly and then, without washing, take advantage of the reflexes I have earlier detailed in Getting Inside Her Mouth. This should satisfy her sinful and unnatural cravings. \n\nIf it does not, tell her I said you could watch.\n\n-- Woman: The Owner's Manual, 9:28-73\n\nHe raced home, but his bicycle was no match for her Toyota, and her suitcase was bursting with clothes by the time he showed up. There was no screeching, no accusations, nothing but a cold, bitter attitude that would have shriveled his cock into a worm if Morgan could have managed it. \n\nThe question was, what the fuck was he going to do about it? Honey, I can explain... Not gonna work out. Don't worry, she's a lesbian! Um... no. Well, he knew what he could do, but it involved getting closer to Morgan than she was likely to let him. He had to try, though...\n\n\"Morgan, if you're going to leave, I understand. I just need you to tell me off to my face. I deserve that. Hell, you deserve that.\"\n\nShe didn't stop packing. \"You don't deserve shit, asshole. Just stay the fuck out of my way and don't talk to me anymore.\" She struggled with the zipper as it caught on a pair of slacks, then gave up and just met the piece of cloth on its other side with the opposing zipper.\n\n\"Mor--\" \n\n\"Shut up. Shut up! I don't want to hear it! I don't want to hear anything from you, anytime, ever again!\" She whirled around, her suitcase in hand and almost ran right into him. He blocked the door.\n\n\"Put the bag down.\"\n\n\"Fuck. You.\"\n\n\"Give me the bag, Morgan.\"\n\n\"Get out of my way or, so help me God, I will claw your goddamned eyes out.\"\n\n\"Drop the bag.\"\n\n\"Like hell!\" She rushed him, and he grabbed for the bag. By reflex, she put both hands on the bag to keep it. But the bag was just a feint, what he really was after was her left breast. And her navel. \"Get your hands off my tits, you son of a bitch! Who the hell do you think you--\"\n\nAnd before the fight had begun it was over. She didn't finish her sentence, as he grunted, \"Sleep!\" at her as soon as he'd completed the third circle around the nipple. He caught her so she wouldn't hit her head on the hardwood floor, and dragged her to the bed. He wasn't positive he needed her awake, but it made sense that she had to hear him, so he looked for something to tie her with. Last night's satiny nightgown, now atop the from last night's laundry heap would be as good a binding material as any. \n\nFrank was just finishing yanking up her blouse to expose her abdomen when she came to, again. Crap, that sleep hadn't lasted long. And he hadn't had the chance to tie her legs or gag her. The screaming began again, and he had to shut her up before one of the neighbors called the cops or something.\n\nHe thrust his finger into what he was starting to think of as the female \"command interface\", and immediately tongued her underarm until she sighed and her legs stopped kicking. \"Morgan?\"\n\n\"Yes?\" she buzzed, unwittingly echoing Pauline's tone precisely.\n\n\"You're feeling anger with me right now because you think I've betrayed you, betrayed us. Those feelings are silly. You know that, right?\"\n\n\"Wha--?\" The strength of the emotion gave her more fighting power than the lesbian, earlier, but the reflex was stronger than mere passion. \"Okaaaay...\"\n\n\"I haven't betrayed you. I am a man, and men sometimes need more than just what one woman can offer. This is perfectly natural, and nothing to be upset about. You understand?\"\n\nShe was dreamy, as expected, but was coming out of it. \"I... understand? But... not... fair. What about women? Why just men?\"\n\nHe gave her a refreshing tonguing and she relaxed back on the bed again. Morgan was much more resistant than Pauline was; he wondered whether it was because she was stronger-willed, or just more emotionally involved than the other woman. Other woman... Well, it would be fair. Or fairer, anyway, if not exactly as the author intended. \"Why just men?\" indeed.\n\n\"You're right, Morgan, that wouldn't be fair, I agree. Sometimes women need more than just one man. They need other women. You can and should feel free to sample as many women as you'd like.\"\n\n\"Sample?\"\n\n\"Have sex with.\"\n\n\"Ohhhhh...\" She looked perturbed.\n\n\"You'd like to have sex with other women, wouldn't you? You can and should.\"\n\n\"Can and should?\" She smiled. \"Can and should, yes.\"\n\nWell, that took care of that. \"So you're not angry with me, and you know I must sometimes have other women, and you're not jealous because you know you must sometimes have other women, too. Right?\"\n\n\"Right...\" She was slowly coming out of it again, and this time he let her. This discussion and the implications and brought his seemingly hibernating cock back to life again.\n\n\"Frank, why don't you untie me. I'm not mad any more.\"\n\n\"Nah, I kinda like you like this,\" he laughed.\n\nShe laughed back. \"Yeah, I bet you do. Listen, I-- what are you doing?\"\n\n\"Rubbing your ears.\"\n\n\"I know that, silly. Why?\"\n\n\"Just wondering what will happen.\"\n\n\"You'll tickle me, that's what. And then I will find a way to get even when I'm untied, and I--\" Her head jerked downward toward his crotch, but she couldn't reach it from this vantage. She struggled for it, and he feared she was going to tear her arms off or otherwise hurt her neck, so it was out of pure concern for her well-being that he crawled up onto the bed and rammed his erection between her lips. Charity, almost!\n\nHe moved around to affix his lips to her own crotch, and once again the smell of hot girl did things to his hindbrain which made him dive into her with desperate desire. He'd better get as much pussy-licking in as he could-- it was likely that there would be several women duking it out with him for this spot soon enough (not that he minded, overmuch). Very pretty women, certainly, especially once he found a likely lass and was able to get access to her navel. Thank God for belly shirts!\n\nIt was a battle between them, now, to see who could make the other come first. Morgan would surely have won had Frank not expended himself earlier so many times, but though she gave a good effort his tongue swarmed her clit, and when he broke from it to whisper, \"I can't wait to watch you do this,\" her cunt bucked upward at him before he even dropped his face down into it again. Her orgasm, and the way in which he'd achieved it, did cause him to spurt all over her tongue and lips, and she fell asleep slurping his come down. He watched carefully to make sure she was safe from choking because that was just the sort of considerate boyfriend he was.\n\nHe lay for awhile, afterward, staring at the ceiling with a shit-eating grin on his face. That the techniques from the Manual had worked on Morgan was amazing, but the fact that they had worked on another woman who was completely unattracted to him in other circumstances-- most especially Pauline-- gave him a thrill he hadn't felt since Christmas morning, circa age ten. The whole world of deliciously sexy women was open to him. Literally open. He started to stiffen again at the concept, and wondered if the ear thing worked while the chick was sleeping. Wouldn't that be a trip?\n\nSo much for the Nobel Prize, though. If he published his findings, it would create cultural mayhem. Worse, the damned feminists would likely do something nutty and unhelpful like making belly-shirts illegal or making armpit-licking without prior consent a felony. No, this information could not be released. ",
        "Still, Frank would tell many of his friends. The information should be disseminated, just through the proper channels and not as a scientific finding. As long as it remained anecdotal and not medically or scientifically validated, life would remain good. Hmmm... perhaps only his very close friends.\n\nThe software would have to go, too, he realized. If he released it, as he'd planned, someone would eventually mate it with the tablet photos and publish the results. He'd have to claim that the program had not worked, and that the bizarre writing was still a mystery. He briefly considered inventing seventeen tablets worth of harmless text, or perhaps just changing some words here or there so the techniques for controlling Woma-- er, women...would not work, but in either case the publication was likely to spawn hundreds of researchers who would scrutinize the tablets in detail and ultimately succeed in discovering his deception. No, if the world found out these secrets-- if they became secrets no longer-- all hell would break loose. If it was in any way feasible, he'd hide or otherwise eliminate the photos, and even the originals. Well, perhaps not the latter. Frank wasn't entirely pious, but the fact that the techniques worked as advertised left him with some religious... questions. It was highly unlikely the tablets were actually written by God Himself... but why take chances when the potential stakes were so high? \n\nIn the meantime, there was much pussy to be had, and many earlobes to rub in a circular fashion. He'd start with the receptionist in the Dean's office-- she'd been driving him crazy for years with her short skirts and tendency to forego wearing a bra. Then he'd move on to Morgan's sister, and probably that hot little bitch who always sat at the back of the room in freshman Archaeology and popped her Bubblicious while he was lecturing. He'd give her something to satiate that oral fixation, and it only rhymed with \"gum\".\n\nI can't wait until Sepi gets back from vacation, he thought. I've always wanted to get into that, and now I'm pretty much unstoppable. He cuddled Morgan's head to his chest and giggled himself to sleep. \n\n* * *\n\nNever forget the lesson of Lilith. Pass this knowledge on to your sons and to the sons of your sons, lest you find that Woman becomes lax, disobedient, or distant and thus all of my work to grant you a new chance comes to naught. \n\n-- Woman: The Owner's Manual, 20:97-99\n\nSepi had a class to teach at nine but wanted to get an early start on those inscriptions now that Winter Break was over, so she rushed into the lab at about ten of eight. The workstation was still running, but Frank had logged out and the screen saver was blinking regularly. She logged in and searched through the chaos of his home directories until she finally found the files from last week. \n\nThe folder in which he'd stored the scans not only had read permissions set to permit only Frank to access them, but (she found when she'd logged in using his poorly-guarded login password) the files themselves were encrypted and protected by a further password which Sepi was not privy to. Annoyed by this, she made a mental resolution to bitch Frank out when she called him later. If they were going to be research colleagues, he'd have to stop holding all of this information so tight to his chest.\n\nIn desperate boredom, she checked her email.\n\nThey'd found the ruins of another temple at the site over the weekend-- almost a mirror image of the first-- and once again the space under the altar was filled with clay tablets bearing the mysteriously regular and well-preserved writing. Sepi had asked Ashraf and his team to scan the photos into their laptops and send them to her, and they had finally done so last night.\n\nWell, I can at least get started on this new stuff while Frank is out. Sepi executed the latest copy of the program against the images of the new inscriptions, and stared fascinated as English text began to scroll up the screen.\n\nMan: A User's Guide \n\nby Astarte\n\nThis ought to be interesting, she thought. "
    ],
    "authorname": "archibael",
    "tags": [
        "battle of the sexes",
        "relationships",
        "god"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/read-the-fucking-manual"
}