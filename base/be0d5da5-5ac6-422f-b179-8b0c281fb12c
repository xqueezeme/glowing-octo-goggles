{
    "title": "The Shepherd of Ashburn Court Pt. 04",
    "pages": [
        "Author's Notes:\n\nIn Part 4 Ben gets a little help from his friends... and more than a little loving.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nChapter 15\n\nBen sat in his living room with tears slowly rolling down his cheeks. Hannah sat on the ottoman in front of him. When she'd arrived first thing in the morning he'd been a little surprised. He'd let her in and taken her coat. As he turned back her open palm caught him on the cheek. It wasn't a particularly hard slap but it rang his head as he'd been completely unprepared. Once he regained stability she stepped forward and hugged him fiercely, calling him her hero. His whole body locked up until she stepped back.\n\n\"Ben, which of those two things hurt the most?\" Hannah said with compassion in her eyes.\n\nThe question was so odd he froze and actually thought about it. The slap had been a surprise but the hug and praise had a far more uncomfortable impact on his body.\n\nHe stared at Hannah. \"The hug.\"\n\n\"You see how backwards that is, right?\" she asked hopefully.\n\nHe nodded and she led him into the living room to sit on the couch. She pulled up the ottoman directly in front of him. He had tears in his eyes as she sat before her friend.\n\n\"Ben, I spoke with a large and concerned group of your friends last night. We can all see you're hurting. The source of the pain isn't quite clear but I think I can make a few educated guesses. Much of your past is still unknown to us but from what we've pieced together, we see that you don't believe you are worthy of being loved. You did an amazing job of bringing Beth back to her vivacious self by showing her what a fun, wonderful, and loving person she is. You helped me by reminding me I was a loving person who had so much to offer and deserved to be loved. Yet you continue to fail to take that same message into your own heart. I don't know what experiences you had in your life that made that you believe you shouldn't or couldn't have love but that belief is wrong. Everyone deserves love. You deserve love and there are people who DO love you. You just have to be willing to accept it.\" She squeezed his hands and looked in his eyes to emphasize the point.\n\n\"We want you to speak to someone with training in dealing with these kinds of self-esteem issues. We see your value, now it's your turn. Will you do that?\" Hannah asked gently.\n\nBen nodded, not trusting himself to speak.\n\n\"I will make arrangements today and I will bring you the appointment information; the place, time, and name of the councillor you will speak with. Alright?\"\n\nHe nodded again.\n\n\"We want you to be happy Ben. You deserve to be happy. We will check in with you every now and then and see how you are doing. To remind you that you have friends that love you.\" she said to him as she watched his tears slide down his cheeks. She was worried about the man. She didn't feel she could leave him alone. It was too soon to subject him to Tina but she knew Gabriella was taking some time off. \n\n\"Ben, I'm going to call someone to sit with you today. I think you need the company.\" Hannah said firmly and he didn't argue which made her even more convinced she was correct. She dialed the number and Gabriella picked up on first ring.\n\n\"Hi, could you sit with our friend today?\" Hannah asked.\n\n\"I'll be right over.\" \n\nHannah put away her phone and patted Ben's knee.\n\n\"I'm sorry.\" Ben said, his voice deep and gravelly.\n\n\"Ben you have nothing to be sorry for. Whatever got you to where you are now, please know you are surrounded by people who love you and want to help. The only way that could have happened was because you are worthy of it. You reap what you sow.\" Hannah replied.\n\nThe doorbell rang and Hannah got up and answered it.\n\nGabriella stepped inside with a look of concern on her face.\n\nHannah leaned in close and spoke quietly \"Ben has agreed to see a councillor but he's pretty shaky this morning. He needs someone to keep an eye on him. See if you can get him to talk. I have to go to the hospital as I have a board of directors meeting at ten.\"\n\nGabriella nodded and slipped her coat and boots off. She had on the black knit sweater and black yoga pants. The sweater was long on her and reached just below her bottom. She wore it for comfort when she was at home.\n\nHannah poked her head around the corner and looked in on Ben who was still on the couch. \"I'm heading off to work now Ben. I'll see you later with the details I promised. Gabriella is going to spend some time with you, ok?\"\n\nBen nodded and gave her a small smile.\n\nWith that and a look at Gabriella Hannah headed out.\n\nGabriella locked up and walked into the living room.\n\n\"Hi Ben!\" she said and saw Ben straighten up his posture on the couch.\n\n\"Hello Gabriella, how was your trip?\" he asked.\n\nShe smiled at him and saw his eyes light up just a little. Her heart made a little zing sensation when she saw that. \"It was lovely! Have you ever been to Europe?\"\n\n\"No, I've never travelled anywhere.\" he said, thinking about the trip to Hawaii he'd planned for Wendy.\n\n\"I highly recommend you plan a trip somewhere and someplace in Europe should be one of your first destinations. France, Spain, Germany, Italy and England are all excellent first trip candidates. Travelling broadens your perspective and gives you a real insight into different ways of living and the people who live there.\" she sighed. \"You can take a group tour or travel with someone who has experience in the place you choose and can act as guide.\"\n\n\"I'd like that.\" Ben said. \"Maybe I will.\"\n\nShe smiled at him and he smiled a little back at her.\n\n\"So I hear you've agreed to speak to someone.\" Gabriella said gently.\n\n\"Yes.\" he said nervously.\n\n\"I think that is a brave and smart move, Ben. It will help a lot!\" she said, smiling.\n\n\"I've never talked to anyone about my past. I- I feel uncomfortable about telling... a stranger... personal things about me.\" Ben fidgeted.\n\n\"The councillor keeps anything you say to them in strictest confidence. You can say anything to them. It should feel easier to open up to them.\" she explained.\n\n\"The only time I've felt comfortable talking about me was with you and Catherine... and... I don't know why.\" He said looking down at his hands with a confused look on his face.\n\nGabriella looked at him. He really didn't see that they loved him or even could. That hurt her a little and it must have shown on her face as Ben noticed. \n\n\"What's wrong?\" he asked.\n\n\"Nothing Ben, it's fine.\" she said and forced a smile onto her face. She hoped that after his counselling he'd be more receptive to their love.\n\n\"This is why I'm going to see this councillor. I can't seem to stop hurting people I care about!\" he growled at himself.\n\n\"No Ben, you're going to see the councillor to find out why you feel you're not worthy of being loved. To find out what events in your past led you to that conclusion. Those of us who do love you... who are IN LOVE with you... feel pain when we see you hurting because of your misconceptions. But you shouldn't worry about our pain because healing yourself will eliminate ours.\"\n\n\"In love?\" he whispered.\n\n\"Yes, you silly man! You have a few women who are in love with you and they accept the fact that others are in love with you too. Something else you need to understand is that love CAN work that way.\" Gabriella smiled and shook her head. \"I wasn't supposed to be here as your councillor, just a friend. What else would you like to talk about?\"\n\nHe'd only had bad experiences with people who said that they loved him, Wendy being only the most recent. These experiences went back... a long way. He looked at Gabriella's open and friendly expression. He wished she WAS his councillor but then he'd feel bad about burdening her with his baggage. Maybe he should do some ground work to prepare for his sessions with the councillor.\n\n\"What is love?\" he asked her.\n\nGabriella snorted gently in surprise. \n\n\"I mean, what does love mean to you? I've been 'in love' a few times in my life and it's never worked out for me so maybe if I could hear what love means to others I could see what I've done wrong.\" he amended quickly.\n\n\"Why do you think you're the one who did something wrong?\" she asked. \"You weren't alone in these relationships, were you?\"\n\nBen blinked at her and she smiled.\n\n\"When I met Daniel in University I was smitten. He was young and dashing and so in charge of his future. I came from a very poor family and I found his confidence with money and finance to be very attractive. He also said the right things to me and made me feel important. I was completely dazzled. He played the courting game very well. That doesn't mean I was faultless the eventual state of our marriage. I put Daniel up on a pedestal. My expectations of him didn't match reality. When I discovered that I tried to work with him to recapture what made me fall in love with him but some of that never existed outside of my mind and his passions had moved on from me to money. He had no desire to change anything as he had what he wanted. Instead of leaving Daniel who genuinely loved his children I gave up on finding happiness for myself so my children would have a stable home.\"\n\n\"I'm sorry.\" Ben said.\n\n\"My point in all that was that the two young people we were when we met in University weren't honest with each other. We let our expectations and desires cloud our decisions. During courting, people always present their best attributes and hide the negative. Human nature I suppose. But we should have taken more time to get to know the real people we were before making the decision to get married. I don't regret having my two wonderful children. There are other things I do regret but now I get to start over.\"\n\n\"Find happiness.\" he said\n\n\"Yes Ben. I'm going to find happiness!\" she smiled at him.\n\n\"OK, so maybe I'm not solely to blame in the failures of my relationships. But maybe my expectations are interfering with my ability to sustain a healthy relationship.\"\n\n\"List them.\" Gabriella said.\n\n\"What?\" he asked.\n\n\"You've just said you have expectations. What are they? If you can itemize them then maybe you can see if any truly are holding you back.\"\n\n\"Fidelity.\" he immediately said.\n\n\"You are particularly sensitive to that one based on how your marriage ended?\" she asked.\n\n\"Yes. Discovering she'd been having an affair for potentially years hurt me more than I thought possible.\"\n\n\"So maybe honesty is more of a critical item for you. If she had come to you before she had the affair and told you why she felt the need to have one, maybe you might not have been as hurt as you were?\" Gabriella asked.\n\nBen thought about that for a bit. \"I think it would have still hurt a great deal but... yes, I think if she'd been honest the pain would have been far less.\"\n\n\"What else?\" she asked.\n\n\"Communication.\" he said.\n\n\"I think we just described that. Open communication but it needs to be truthful.\" Gabriella said. \"Next.\"\n\n\"Uh. Loyal, friendly, kind, caring...\" he struggled to name other expectations he had.\n\n\"These aren't really outrageous expectations. Where are the 'must be a nobel prize willing scientist, run a humanitarian aid station, and bench press 300 pounds' requirements? How about must be able to cook, do book keeping, and laundry.\" she smiled.\n\nBen smiled. \"Reasonably intelligent, genuinely compassionate, and fit will do. The rest I can do myself.\"\n\n\"So it sounds like your current expectations may not be as big a factor as you thought. What were your expectations when you got married? You said were planning on having a big family. When that turned out to be not in the cards, how did you react in your relationship? You still had a chance at being fertile with someone at that time, just not your wife. What did you do?\" Gabriella pushed.\n\n\"I told her it wasn't important. And it wasn't.\" he murmured.\n\n\"You adapted your expectations to protect what you had, right?\" Gabriella clarified.\n\n\"Yes.\" \n\n\"So maybe your past expectations weren't so rigid and difficult to live with either.\" She said looking him in the eye. \"What about sex? Did you want it more often than her or less often? Were you incompatible with how you wanted to have sex?\"\n\n\"The only time she complained was after she discovered she couldn't have babies. She wanted to cut back significantly. Then near the end of our marriage she wanted sex much less often. She even cut back on the cuddling before sleeping.\"\n\n\"Near the end she was likely trying to distance herself from you. Limiting the intimacy in preparation for the separation.\" Gabriella suggested. \"But before that, generally, you two were compatible?\"\n\nBen frowned. \"Uh, I've mentioned that my body acts like a teenager. My libido has always been a little... over active. Wendy was sometimes annoyed by that. Not angry, really, just annoyed.\"\n\nGabriella smirked. \"More than one woman could endure?\"\n\nBen smiled then caught the nuance of Gabriella's question. Her frowned again.\n\n\"What?\" she asked, seeing his quick mood swing.\n\n\"I'm not that kind of man.\" he rumbled.\n\n\"What kind of man?\" she asked.\n\n\"I don't- I'm not promiscuous! I'm not unfaithful!\" he growled.\n\n\"Have you made promises of fidelity to any of the women you've been with recently? I understand you've specifically told one the exact opposite yet she still wants to be with you. Another promised you no strings attached relationship. Neither calls you unfaithful. Neither has anything but praise for what a good person you are. Why do you think that is?\" Gabriella asked gently.\n\nBen scowled and thought hard. Obviously she was talking about Tina and Trish. \n\nGabriella pressed on. \"You did mention in your expectations that fidelity is the most important one. May I suggest that may have a lot to do with the type of relationship you were in? A traditional marriage is a contract with terms specifically defining the promise of fidelity. That's a traditional marriage. There are open marriages that don't have that clause and allow the spouses to seek emotional and physical enjoyment with other partners.\"\n\n\"That's unrealistic!\" he growled.\n\n\"Really? We've talked about expectations. Let's talk about beliefs. Do you believe the heart can only love one person at a time? Do you believe the traditional marriage is the only successful kind of relationship between adults?\"\n\nBen thought about his complicated feelings for Gabriella, Catherine, Tina, and Trish. She saw it on his face so he couldn't deny it. \"No, people can love more than one person. But that leads to heartache when one partner feels unfulfilled!\"\n\n\"That could definitely happen if there was no communication. No relationship will last in a vacuum. People just aren't built to function that way. We need to be constantly in touch with each other to see if we can do something to ease the other's way in life or if they can ease ours. That's what make a rich relationship! Were you unwilling to communicate your feelings and needs with your wife?\"\n\n\"No.\" he mumbled.\n\n\"So communication shouldn't be an issue for you.\" she smiled.\n\n\"You can't marry more than one person!\" Ben argued.\n\n\"Back to the question of marriage then. Is that the only viable outcome of a relationship for you?\" Gabriella asked.\n\n\"Well, traditionally. You meet someone. You date. You fall in love. You get married. You start a family. You grow old together.\" Ben said.\n\n\"What about friends?\" she asked. \"How do you see that relationship working?\"\n\n\"Friends you nurture for life.\" Ben replied.\n\n\"That's a really nice way of putting it. I think I like your idea of friendship more than that model of a traditional marriage. The idea of the nurturing never ending but being an integral part of the relationship sounds lovely!\" she smiled. \"Can I ask you how you define friendships? What are the benefits and limits? Can you love a friend, romantically, physically?\"\n\nBen thought about friends. He thought about how he had been interacting with his neighbors, his friends. About how he was emotionally connected to them and cared about their well-being. How he HAD used sex to help them feel better. The light came on behind his eyes and Gabriella's smile grew wider as she saw him understanding.\n\n\"Yes, you're already there. It's working and no one is hurt. Everyone wants you to feel as happy as you make us feel but the only one stopping that from happening is you.\" Gabriella said gently.\n\n\"I hurt Tina.\" Ben said through gritted teeth.\n\n\"And how did that happen?\" she asked.\n\nBen looked at Gabriella sharply. \n\n\"Tina told us the whole story of your evening of dancing, minus the intimate details, so we are aware of the circumstances but I'd like to hear your opinion of what went wrong.\" she added.\n\n\"I led her on. We had a wonderful evening and in the morning she told me how sad I'd made her. How I'd ruined her!\" Ben said in anguish.\n\n\"Tina believes you don't want her. Is that true?\" Gabriella said bluntly.\n\nBen rocked back. \"Don't want her?!? Of course I want her! She's beautiful, smart, loving, but SHE'S NOT FOR ME!\" he barked.\n\n\"Who says?\" she asked sternly.\n\nBen's mouth opened but nothing came out at first. Then he recalled something. \"Ah... I do... and Trish! Trish agrees with me! Tina is almost half my age! It's unfair to her!\"\n\n\"I think if you spoke with Trish now that she's had time to understand Tina better she'd give you a different answer but let's leave that alone for a minute. Instead let's take a look at the word you just used. Unfair. I think you'd agree with me that finding a compatible mate is difficult. Someone you can love. Someone that loves you back. The push and pull of personalities, wants, needs, and desires can make that very difficult. Tina is a special case. She's a submissive. Her needs are very specific and the risks for her is much greater. How much more difficult do you think her submissiveness makes it for her to find a compatible mate. She's had a very bad experience in her marriage. In you she's found someone who is willing to give her what she needs without fear of abuse. Then you pushed her away because you believe she needs to find someone else.\" Ben began to protest but Gabriella held up her hand so she could continue. \"Do you understand she doesn't need to be the ONLY person in your life? She just wants to be part of yours. You're right, she's young. She's going to be going to University. She will meet people. Maybe she will meet someone closer to her age that can fulfil that special need she has. Wouldn't that be easier for her if she had a support system in place until it happened?\"\n\n\"But- but she said I ruined her for everyone else. How would I make that better by allowing it to continue?\" he argued\n\n\"First true loves are always the best. That doesn't mean life doesn't move you along. Sure you always compare new relationships to the first and Ben you are pretty tough to beat, but life goes on. Tina is YOUNG! Everything is a little more immediate and dramatic for the young. Don't be trapped by her current angst.\" she said with an understanding smile.\n\n\"So... are you telling me I should let her live with me and be my lover?\" Ben said, confused.\n\nGabriella still felt a little uncomfortable with the idea but realized that was exactly what she had to be ok with it for everyone's sake including hers.\n\n\"Look, you set out a life plan for Tina. It's hugely generous of you and truly demonstrates you care about her future. I'm not saying you change the plan significantly. Just let her into your life on the condition that she keeps her heart and mind open to possibility of love in the future from someone she may meet. You in turn will have to be aware that what you two have may not be permanent. Kind of like friends with benefits. Someday she may meet 'the one' and you two will just remain friends. Special friends.\"",
        "\"Friends with benefits? I've never thought of myself in those terms before. I've always considered myself the marriage type. Old fashioned.\" Ben said and looked inwards. He was surprised to discover that he truly felt a lot better. He still had trouble accepting the fact that they loved him but the fear of hurting them by returning the emotions was greatly reduced. It was like a weight had been lifted from his heart. \n\nHe looked at Gabriella in wonder. \"How could Daniel have been so blind to not see how incredible you are and how damn lucky he was to have you?\"\n\nShe looked at Ben in surprise and blushed deeply. He reached out and took her hands in his. He brought them up to his lips and gently kissed her knuckles. She gasped softly. \n\n\"Gabriella, I feel so much better, I can't begin to describe how grateful I am to have you in my life. You...\" Ben was at a loss for words as his heart filled with love for the beautiful woman sitting next to him on the couch. A tear rolled down his cheek.\n\nTears began to well up in her eyes as she saw what she mistook for simple admiration in his. Then his lips were on hers and she squeaked in surprise. He pulled back slightly thinking he'd made a mistake but she immediately pressed forward and kissed him urgently. She slipped her hand behind his head into his hair so she could kiss him deeper and he gently slid his fingers into her raven locks to return the kiss. He sucked hungrily at her tongue and she moaned into his mouth. \n\nShe loved the feeling of his hands on her. So powerful yet gentle. One of his hands left her hair and travelled down to the small of her back and he pulled her body closer to his. When her breasts were pressing against his broad chest she whimpered with the delicious sensations going through her body. \n\nSuddenly Ben scooped her up in his arms and carried her down the hall to his bedroom. He knee walked across his bed with her in his arms and laid her down gently before him. He leaned down over her and captured her mouth in slow sensuous kiss, tasting her full lips and gently sucking them between his. \n\nHe leaned back and pulled his shirt up and over his head. She gasped when she saw his bare chest, thick with muscles, his hard stomach, and the three scars. She reached out and for the first time touched the remnants of his bullet wounds. His eyes flared with passion at her touch on his bare skin and he lifted her up to her knees on the bed so he could pull her sweater over her head. Soon there was just the thinnest of lace between the heat of his skin and her full breasts. She put her arms around him and pulled their bodies together. She ran her hands up his powerful back as he tilted his head down to kiss her once more. Their tongues explored and caressed each other and their breathing became heavy with need.\n\nHe released the clasp on her bra and slid his hands down her back and under the waistband of the yoga pants and panties. Gabriella cried out when his hands gripped the flesh of her ass. He pressed her strongly against the bulge rising in his pants. She gasped and grabbed his ass to pull him tighter against her.\n\nWhen he pulled back Gabriella moved her hands immediately to the buckle of his belt and undid it. She popped the button on his pants and pulled the zipper down with shaking hands. Ben caught her hands and pulled them gently away. She looked up into his eyes with a worried expression. He just smiled at her and kissed her hands again. He released them and slid down his own pants and pulled them free. \n\nThen he was kneeling on the bed in front of her completely naked.\n\nGabriella's breath caught when she finally saw Ben fully erect. She thought it was beautiful!\n\nBen reached forward and slid her bra straps down her shoulders and followed the dropping fabric with his hands until he had the soft flesh of her breasts resting in his palms. He gently squeezed her hard nipples and shocks went through her nerves.\n\nGabriella pushed her yoga pants and panties down and lost her balance while trying to pull them from under her knees on the bed. She fell forward against Ben's chest and he caught her. She yanked the clinging fabric off while her face remained pressed against his skin. The clean masculine smell of his skin was making her head spin. \n\nBen lifted her once more and laid her out against the pillows. He moved his lips to her breasts and kissed and sucked them, alternating between them, until she thought she'd go mad. She pressed his head against her breast so he would take more into his mouth and he did. The sensations were going directly to the heat between her legs. \n\nBen began to kiss his way down her belly and beyond. She became nervous. Daniel had never kissed her where Ben was headed and she had no idea what to expect. She found herself holding her breath. As he kissed her inner thighs and slowly made his way closer she began to gasp. When Ben's hot breath finally blew across her sensitive flesh she arched up and his tongue made contact. It was incredible! Her hands immediately went to the back of his head and ran through his hair. Ben's tongue stroked across the outer folds and she arched again as she gasped. When it reached and circled the hooded flesh of her clit she cried out her pleasure. He gently sucked the stiffening bud between his lips and she pulled his head tight against her and writhed as the bliss flowed over her. Her orgasm was quick, intense and completely took her by surprise. She'd never had such an intense orgasm before.\n\nBen felt her body cresting through an orgasm so he moved his kisses up her trembling stomach and brushed his lips across the sensitive skin on the undersides of her breasts. Gabriella's nipples begged to he kissed so he sucked them into his mouth and she arched her back once more and cried out in pleasure.\n\n\"God! Ben, I need you inside me! Please!\" she gasped as he moved further up her body. He kissed her neck and the underside of her chin. Then her lips were on his kissing him deeply, her tongue insistent.\n\nGabriella sucked in her breath as the hot head of his cock stroked across her wet opening. Ben moved it across her a few more times slowly pressing forward lubricating himself with her excitement. Finally she felt him positioned at her opening. He gradually increased the pressure and the thick head pressed its way inside. It was so good but such a tease! Ben slipped back out then slowly pressed inside again. Gabriella was going mad! She wanted all of him but he was being so careful because he caught her wincing as he stretched her wider than she'd ever been. Her body reacted by sending more lubricant to ease his way.\n\nThree more strokes and Ben pulled out to the tip again. She whined with need and he slid deep in one stroke. Her legs shot out and she screamed in surprise. Her eyes were wide and she was panting as she gazed up at him. He held still to let her get used to the sensation.\n\n\"Oh my god Ben you're so deep! You're filling me up!\" she said looking up at his face which was showing his bliss. His expression turned embarrassed then concerned. \"What is it?\" she asked.\n\n\"I'm only half way in.\" he said quietly.\n\nHer body immediately clamped down on him in fear. Half?!? She couldn't imagine more. This was a deep as Daniel ever got and his wasn't as thick! She'd never felt so complete. It was perfect! How could there be more?\n\nBen kissed her and her mind filled with stars. To feel the bliss of his lips on hers and his heat deep between her legs was too much! He began to move, sliding out to the head then back to where he was before. She felt herself relaxing and he was able to slide just a little deeper. He had to go slow as it was all virgin territory from this point and was definitely not used to the pressure. With the slow strokes the teasing sensation was back and her legs curled up around his ass so she could pull in. This seemed to make it easier for him to go deeper. Soon his strokes were long and deep and Gabriella could feel the rapid build-up of an enormous orgasm. She clutched at him and made little yelping noises as their bodies got closer together. Finally Ben made one hard thrust as she squeezed him tight with her legs and he reached bottom.\n\nShe cried out in ecstasy as his pelvis slammed into her overly sensitive clit and she began to rock through a world shattering orgasm. Ben was only able to do five more deep strokes, bumping her up to higher plateaus of heaven before his orgasm exploded through his body and he gushed into her depths. She had a moment of panic before she recalled that he couldn't make babies. Then the pleasure over took her and she just held onto him as tightly as she could as her nerves flashed and tingled over her entire body. \n\nWhen the explosions died down she pulled his face to hers for a kiss and he caressed her lips with his.\n\n\"Oh that was so good!\" she smiled up at him when he pulled back. She marvelled at the how deep he was inside her and the heat coming from his cock. Then she noticed that he wasn't getting soft. If anything he felt harder. She looked at his face in surprise and saw the hunger in his eyes. He began to thrust into her in long, slow strokes. Her breath caught in her throat as he began to move faster and faster. At the bottom of each stroke he gently twisted his hips which gave her the most delicious sensation on her over charged clit. She was stunned to feel the beginnings of another orgasm building, her third one!\n\nBen suddenly surprised her by lifting her legs and bracing them around his powerful arms. This raised her ass off the bed and allowed him to thrust harder and deeper. Their bodies slapped together and it was too much for Gabriella. She could no longer think coherently. All she could do was make whimpering sounds as her body rushed towards another explosion. Ben's orgasm struck first and he rocked himself against her jetting one more deep inside. This pushed her over the top. She screamed silently and passed out.\n\nWhen Gabriella came to she was lying on Ben's chest and his cock was slowly slipping from her body. His hands were gently kneading her back muscles searching out and relaxing any knots he found. She discovered she'd drooled a little on his chest and wiped her face in embarrassment.\n\n\"Welcome back.\" he said with a smile in his voice. She tilted her head to look at him and he was looking at her fondly. She smiled at him then stretched languidly across his large body. He grabbed a tissue and wiped up the drool. She blushed again.\n\n\"So, is this what you meant by 'friends with benefits'?\" he asked.\n\nShe looked up into his eyes. She felt her entire body tingling and heard the roar of her blood in her ears. \"Maybe just a little more than friends with benefits.\" she whispered and pressed her face against his chest in fear of his reaction to what she'd just said.\n\n\"I was hoping you felt the same way.\" he whispered back.\n\nShe looked up again and saw the love in his eyes. He pulled her up on his body and kissed her deeply.\n\nAfterwards she rested on him luxuriating in the feel of his skin on hers. She'd never felt this good before. Of course she was also aching a little from his enthusiastic treatment of her sensitive parts. But it was a good ache.\n\nNow that she had a rational moment to think about what they'd done she started to worry. Hannah had quite specifically told them that Ben wasn't ready for a relationship and there was to be 'no more unsolicited sexual contact'. Well, Ben started it so it couldn't be called unsolicited. Still she was worried that she might have done him some harm emotionally.\n\nShe must have been frowning as she felt his fingers smoothing out the crease between her eyes. \n\n\"This is a no frown zone.\" Ben teased. \"Any thoughts that may cause them must be banished.\"\n\nShe looked up at him and smiled. \"Sorry.\"\n\n\"Maybe we should get cleaned up.\" he suggested. \"I've been told my shower can fit three.\"\n\n\"Are you suggesting I shower with you?\" she said with a raised eyebrow.\n\n\"Not if you feel that would be too intimate.\" he smiled.\n\nShe chuckled and slid off of him. Ben led the way into the bathroom and she couldn't tear her eyes away from his naked body to notice the shower.\n\n\"Hello! Amazing bathroom reno here!\" Ben scowled playfully at Gabriella while he gestured at the room when he caught her staring. He shook his head and stepped in to get the water going. She followed.\n\nGabriella gasped in surprise when Ben activated the side jets and wonderfully hot water shot inwards from all sides.\n\n\"You've never been in a shower with surround jets before?\" he asked.\n\n\"No, it's wonderful! Of course, I've never been in the shower with a man before either.\" she smiled up at him. \n\nShe dipped her head under the stream from the ceiling mounted rainshower head. Ben ran his fingers through her long black hair making sure the water got to every strand. She purred at the feeling of his strong hands in her hair. She stepped back from the downpour and he tilted her head up as he brought his lips down to hers. A thrill shot through her body as his tongue caressed her bottom lip and she moaned into his mouth.\n\nHe reached out and poured some shampoo into his hands and worked it into her hair. His fingers massaged her scalp as the bubbles spread through her hair. Ben gently worked shampoo all the way to the ends of her hair and once he was sure he got it all he pulled her back under the dropping spray. Once more he massaged her scalp thoroughly rinsing her hair. He repeated the process taking a kiss between each stage. Gabriella's nipples were stiff with need so he bent down and took one into his mouth and ran the tip of his tongue over the sensitive bud. She gasped and pulled his head tighter against her breast. He treated the other nipple to the same and Gabriella's knees started to tremble.\n\nBen poured some body wash into his hands and rubbed it over Gabriella's arms, then her back and chest. He was careful not to over stimulate her nipples and worked his way down her body. He gently cleaned between her legs and she gasped as one then two fingers stroked inside her. He kept up the internal massage as he kissed his way down her stomach. When his mouth reached her lower lips she cried out and pulled his head tightly against her as she crested through a gentle yet powerful release. Ben braced her body against his as her muscles shook and trembled. He pulled her under the shower to rinse the suds away then gently sat her on the bench to recuperate while he quickly washed his hair and body.\n\nHe helped her to her feet and they stepped out to get fluffy towels to dry themselves off. He finished first as she was still languidly coming down from her last orgasm so he moved to help her. She loved the feel of his strong hands rubbing her body through the towel. He used the towel to squeeze most of the water from her hair then sat her on a stool in front of the mirror and pulled out a hair dryer and brush.\n\n\"Wendy used to let me dry her hair for her. May I?\" Ben asked.\n\nShe smiled and nodded. He got to work. She got to admire his naked body in the mirror as he worked. While she had a towel wrapped around herself Ben was totally unselfconscious about being naked with her as he concentrated on her hair and she loved it.\n\nHe did a passable job at styling her drying hair and she grinned at his happy smile as he finished up. Not exactly as she would have done it but she didn't look bad!\n\nWhen Ben shut off the hair dryer they heard the doorbell. They looked at each other but it was Gabriella that wore a guilty look. \n\nBen saw the look and wondered what it meant. \"What's with that look? Did you invite someone over?\" he asked.\n\n\"No! I don't know who that is.\" she said but the look remained. He raised his eyebrow and waited for her to explain.\n\nThe doorbell rang again. She jumped up and rushed into the bedroom to pull on her clothes. Ben walked out and pulled on his robe. He left the bedroom to go answer the door as Gabriella struggled to get her panties from insider the leg of her yoga pants.\n\nThe doorbell rang once more and Ben opened it to see Catherine looking up at him with a worried expression. He stood back and she stepped in quickly. \n\n\"What's wrong? What happened?\" he asked \n\n\"What? Nothing's wrong, you just didn't answer your door for a long time.\" Cat said quietly, the look still on her face.\n\n\"Sorry, I was in the shower.\" Ben answered as he hung up her coat. \"To what do I owe the honor of your midday visit?\" He knew she worked downtown so seeing her at, he looked at the clock, 12:30pm was out of the norm.\n\n\"I spoke with Hannah this morning and she said you were feeling a little blue. I heard Gabriella had come to see you-\" she froze as her friend came down the hallway from Ben's room. Cat took in the slight tenderness in her movements, the guilty look, and the new hairstyle. Her mouth dropped open.\n\nBen looked from Catherine to Gabriella and saw the guilty look was back full force.\n\n\"Could someone please tell me what is going on with you two?\" he asked.\n\nCat's eyes began to well up with tears and she looked back at Ben. He saw her stricken expression and his heart clenched in his chest. This was what he was afraid of.\n\n\"NO!\" Gabriella yelled angrily and the other's froze. \"Stop right there! NO ONE gets to feel bad until we clear the air!\" she said staring at her friend.\n\n\"I think it's pretty clear-\" Cat began.\n\n\"Then you'd be wrong!\" Gabriella stressed and stepped up and took her friend's arms in hers so she could look directly into her eyes. \"Ben knows we love him, both of us AND Tina. He still needs to work with his councillor to resolve his issues with accepting that he's worthy of love but one thing he DOES NOT have to worry about is hurting us by our loving him. I don't need to ask Ben for an exclusive relationship. I know his heart is capable of so much love I'm not threatened by his loving another. He cares deeply for Tina and she needs him so much! I think that's beautiful! I know you love him as much as I do. I would never try to keep you two apart. I love you too much to be that mean!\"\n\nCatherine pulled her friend into a hug and they cried on each other's shoulders. Ben watched them with tears in his own eyes but the pain he'd felt was gone. This actually felt like medicine for his soul. The words Gabriella had spoken earlier were being demonstrated right before his eyes and his heart felt lighter for it. She'd surprised and impressed him once more. He was still confused by her guilty look and wanted an answer.\n\nWhen the two friends got control of themselves he led them into the living room and they sat on the couch with Catherine in the middle.\n\n\"Why did you look so guilty when Catherine showed up?\" Ben asked.\n\nGabriella smiled at Cat. \"Well, I broke the spirit of the agreement we all made last night when the women got together to talk about what we could do to help you. Hannah told us 'no more unsolicited sexual contact'. You kissed me first so it wasn't unsolicited but the point was to give you some breathing room, some time to heal emotionally.\"\n\n\"Gabriella, your talk with me this morning was more healing than anything I've ever experienced. What you and Catherine did just now has proven your words. The pressure I've felt on my heart has been lifted. Yes, I'm still anxious about why such beautiful and wonderful women are showing interest in me. I'm worried that love will disappear suddenly like a soap bubble. It's happened so many times in my past. But you've helped me so much, I can't begin to describe it!\"\n\n\"I wish I'd been here!\" Cat said longingly.\n\nBen turned her face towards him with a finger on her chin and kissed her. She moaned loudly as he sucked her lower lip between his and ran his tongue across the plump flesh before slipping into her mouth. Catherine immediately climbed onto his lap and Gabriella grinned at the surprised look on Ben's face before it was hidden beneath Cat's white blond hair as she pushed him back on the couch. ",
        "Gabriella stood up and looked back at her friends with a smile. Ben managed to push Catherine up so he could see past her hair. \n\n\"You're leaving?\" he asked, surprised. Catherine looked over with a feverish look in her eyes.\n\n\"Yes Ben, I'm going to head home. Unlike you I don't have a body that thinks it's a teenager and I think you should spend a little quality time with Cat. Maybe you both could come over for dinner tonight? 6PM? The kids would love to see you both again.\" she said.\n\nBen smiled and Cat pushed off of him to run over to her friend. She threw her arms around her and squeezed her tight.\n\n\"I love you so much Gabriella!\" Catherine gushed.\n\n\"I love you too, Cat. See if you can't wear him out a little.\" she grinned.\n\nGabriella slipped on her coat and boots and headed home. Catherine locked up behind her then rushed back into the living room with a delighted grin on her face. She stopped short when she saw Ben was no longer on there. \n\nSuddenly hands grabbed her from behind and lifted her in the air. She squealed in excitement and thrashed but it was no use against Ben's strength. She went over his shoulder to hang down his back and he hustled down the hallway to his bedroom. He came to a halt just inside.\n\n\"Dammit! Well, this is embarrassing!\" he growled.\n\n\"What? What's wrong?\" Catherine asked unable to see what he saw.\n\n\"This has never happened to me before. I can do this.\" he said.\n\nKeeping a firm grip with one arm around her legs, Ben pulled up the first corner of the sheets on the bed. He walked around the bed pulling up the rest of the sheets. He tossed them in the corner then got new sheets from the linen closet all the while balancing the giggling blond on his shoulder. Finally, he settled with just opening a single flat sheet across the mattress and put Catherine down on the center of the bed. She grinned up at him as he smiled down at her. He yanked off his robe and had a moment of deja vu when he realized he'd been in this exact position with Gabriella just... what, an hour ago? The moment threw off his concentration and Cat noticed his confusion. Not wanting him to stop she rolled to her knees and pulled off her top in one quick sweep. A sexy white lace bra held her smallish breasts which immediately caught Ben's eye. He smiled in delight and noticed a tremble in her tight stomach muscles. He knew she was a swimmer and she obviously kept herself in excellent condition. \n\nShe yanked off her pants and as Ben tossed his robe onto the floor he felt Catherine's hands on his stiffening cock. \n\nCat wasted no time in feeling the heat and weight of the beast she'd bumped her face into. She felt his pulse jump inside and it hardened in her grip.\n\nBen slid his hand into the hair on the back of her head and pulled her to him in a fierce kiss. His other hand popped the clasp on her bra as he tasted her mouth deeply. Cat's nipples immediately stiffened in anticipation of this touch. He pulled the bra away and she pressed her bare breasts against his chest. She moaned into his mouth then squealed as his hands slid down to squeeze her ass.\n\nShe pushed him down on his back on the bed and straddled his legs. She looked down at him hungrily, admiring the view. The three bullet scars caught her attention and she dipped down to kiss them. \n\nBen's breath rushed out with the sensation of her lips so close to his groin so he was completely unprepared for the sensation of her mouth sliding over the thick head of his cock. She ran her tongue in circles around the head and popped her lips over the sensitive edges. The sensation caused him to curl up into a seated position but she put a hand on his chest and pushed him back down, keeping his cock firmly in her mouth. She bobbed up and down, managing to get almost half of him into her mouth.\n\nOnce she had gotten him good and wet she knee walked up his legs until she was resting her wet pussy on his hard shaft. She rocked her hips along its length and made it slick with her wetness. When he thought he'd go out of his mind she lifted him vertical and squatted over him rubbing the thick head across her opening. He was moaning in need and she wore a seductive grin as she settled herself down over him squeezing the head inside her. She raised herself off then dropped herself down, driving a third of his length into her. She stopped and got used to his thickness prying her open. \n\nWhen she was ready she lifted herself again and began to slowly pump him in and out of her. Once she was easily taking that much of him she dropped her weight on him again and felt him surge deeper still. Not yet to the root of his cock but almost. She squirmed on him feeling completely full.\n\nBen looked up at the beautiful blond riding him. He couldn't believe he was making love to her. Ben felt her legs tremble with the effort to keep her poised above him. Then she moved again and his mind was filling with the blissful sensations of her hot flesh gripping him. \n\nShe managed a few more shaky bounces before her legs gave out. His cock rammed all the way to the bottom of her pussy and she cried out in bliss. \n\nCatherine was almost delirious. He was so thick and reached so far inside her she almost couldn't tell where he ended and she began, her pussy was gripping him so tightly. It was so much better than her dream! She leaned down over his chest and planted a kiss on his lips as she smiled at him. She began to roll her hips, gently sliding him in and out no more than an inch. The tease was excruciating so Ben grabbed her hips and began to move his own pelvis in time with hers to make longer strokes. \n\nShe cried out as his hard flesh pistoned into her and her clit ground against his hard muscles. Her orgasm was rushing up on her when his hands began to slam her down on his body. This added pressure pushed her over the top and she was suddenly screaming out as ecstasy shot through her body. He moved his hands to her ass and squeezed her tight as he buried himself once more to her depth. His orgasm was fast and intense. He took her lovely face between his hands and kissed her deeply and he gushed into her hot center. Catherine moaned as she felt his hot spend fill her.\n\nShe lay upon his chest trying to catch her breath. She still felt stuffed with cock, a sensation she'd never felt before and wanted to feel forever. Once she'd recovered from her orgasm she waited for him to begin to soften but it didn't happen. She pushed up on her arms and looked at him.\n\n\"Again?\" she asked then giggled as he rolled over pinning her under him.\n\nShe felt a spike of pleasure as his pelvis pressed against hers. She pulled her knees up and out and felt him begin to move in little circles. She moaned and thrashed under him with her eyes closed in bliss as their wet bodies slid against each other. The circling picked up in speed and began to include pulling out and thrusting back in deep at the bottom of each circle. The direct contact was driving her mad and her breath gusted out with each thrust. \n\nBen felt his second orgasm rushing up fast. Catherine's muscles were starting to tighten and tremble heralding her own imminent release. He picked up the pace once more until he was moving in a blur and Catherine was yelling out his name. She clung to him as hard as she could then her body went totally stiff as she gushed against his cock. Her eyes flew open and her jaw dropped as the intensity took her completely by surprise. He slammed all the way to the bottom one last time and jetted his load deep into her body.\n\nThe two breathed hoarsely as they recovered. Ben pulled back and Catherine whimpered at the sudden emptiness left behind. When he was finally out he rolled over onto his back to take his weight off of her.\n\n\"Oh god Ben! That was better than I dreamed it could be!\" she panted.\n\n\"It seems like a dream to me as well. I'm having a hard time believing today is real. It's like I'm going to suddenly wake up and I'll be alone again.\" he said quietly, his voice dazed. \n\nCatherine rolled over onto her side and propped her head up on her hand. She looked at Ben's troubled expression then leaned over him to give him a gentle kiss. \n\n\"Ben, it's real. Gabriella and I love you very much. So does Tina. We'd like to share your life with you if you'll have us.\" she said with a hopeful smile.\n\nTears came to Ben's eyes and he pulled her on top of him in a fierce hug. \"I want that very much!\" he whispered into her ear as if afraid saying it out loud would ruin his chances at happiness.\n\nThe phone rang.\n\nCatherine got one more passionate kiss from him before she'd let him roll over to the side of the bed to get the handset.\n\n\"Hello?\" \n\n\"Ben? It's Hannah. I just wanted to see how you were doing.\"\n\n\"Hi Hannah. I'm- I'm actually doing much better thanks. Gabriella and I had a really good talk this morning and she really helped me come to terms with some things that have been tormenting me.\"\n\n\"Really? That's excellent! You're... still going to see the councillor though, right?\" she asked, concerned that he was looking for an excuse to avoid it.\n\n\"Yes. I can see that I have some work to do to deal with these issues. Gabriella also insisted it was necessary. I have to tell you I am feeling much b-ETTER!\" he gasped as Cat ran her tongue up the length of his resting cock.\n\n\"Are you ok?\" Hannah asked, concerned.\n\n\"Yeah- ohhh... yeah, I'm good.\" Ben tried to push Catherine's head away from his groin as she continued to tease him with the tip of her tongue. She giggled then slapped her hand over her mouth and sat up with wide eyes.\n\n\"BEN, IS CATHERINE HAVING SEX WITH YOU?\" Hannah yelled. Cat heard her and looked worried.\n\n\"...yes.\" Ben said blushing, cursing his obsession for honesty.\n\n\"THAT BITCH! I told her last night you were hands off until you got help! When she told me she was going to check in on you I should have known!\" she ranted.\n\n\"Hannah! It's ok! That was something Gabriella and I talked about this morning. She was wonderful!\"\n\n\"OH MY GOD! GABRIELLA HAD SEX WITH YOU TOO!\" she shrieked into the phone.\n\n\"That's not what I meant...but, yes. But it's ok!\" he tried to calm her.\n\n\"No Ben, it is definitely NOT ok! I will speak with you tonight. I have the details for the councillor. I'll bring them over at 6 tonight.\" Hannah insisted, sounding very upset.\n\n\"We'll be over at Gabriella's for dinner tonight at that time.\" Ben said.\n\nThere was silence at the other end of the phone as Hannah struggled to throttle her rage. \"Then I will see you there then. Goodbye.\" And she hung up.\n\n\"Hannah? Oh, that's not good.\" Ben said, putting the handset back on its base.\n\n\"I'm so sorry Ben. I just can't stop myself sometimes.\" Catherine said sadly.\n\n\"You can definitely be an imp!\" he smiled and she returned it. \"We'll talk with her tonight. At Gabriella's.\" he said meaningfully.\n\nHer worried look returned.\n\nFor dinner Gabriella made a large lasagna with fresh garlic bread. Gelato for dessert if anyone had room. \n\nEverything was ready and her guests would be arriving shortly. Ben had called to warn her that Hannah found out about their... physical activities and was very upset with her and Cat.\n\nShe sighed. She knew Hannah was just concerned with Ben's well-being but when she'd left Ben he was looking happier and more at peace than she'd seen him in weeks. Hannah was just going to have to be convinced that what they had done was helpful, not harmful.\n\nThe doorbell rang at ten minutes to the hour and she went to answer it. She saw Hannah's stern face through the window. She had hoped Ben and Catherine would be here first but... she opened the door.\n\n\"Gabriella.\" \n\n\"Hannah, come in please. Let me get your coat.\"\n\nMiriam and Daniel showed up to see if it was Ben.\n\n\"Oh! Hello Mrs. Cooper!\" Miriam said happily.\n\n\"Hello Miriam, Daniel!\" the woman smiled.\n\n\"Could you two wait here for Ben and Cat and bring them to my office when they get here?\" Gabriella asked her children.\n\n\"Yes mom.\" her daughter answered.\n\nShe gestured for Hannah to follow her to her office at the back of the house and closed the door behind them. The two women took seats across from each other. \n\nHannah seemed to be trying to get control over her emotions. Gabriella gave her the time she needed and sat quietly.\n\n\"How... I... what were you thinking?\" Hannah ground out before she clamped down again. Gabriella saw the pain and anger in her face.\n\n\"While it may not seem like it from where you are right now, please know I would never do anything to hurt Ben.\" she began.\n\nHannah gasped and her eyes went wide as she stared at Gabriella. \"Are you kidding me? The man has intimacy issues and you and Catherine HAD SEX WITH HIM!\" she yelled.\n\n\"Ben is afraid to love because he's terrified of hurting the ones he loves. He's afraid of driving them away. I told Ben this morning that he is loved. I love him. Catherine loves him. Tina loves him. I know he loves us back but he couldn't cope with the fear of hurting one of us by showing love to any of us. His concept of love didn't include the possibility that being loved by more than one partner could work. His experience with betrayal left him convinced that love from more than one person leads to heartbreak. We're not insisting on exclusive relationships as that would just hurt him. Catherine is my best friend. I love her. She loves Ben as much as I do. I wouldn't keep them a part! Tina needs Ben and he's so good for her. That's wonderful! Speak to Ben before you pass judgement on us. He is much happier than I've ever seen him.\"\n\n\"But why did you have sex with him!\" Hannah asked.\n\n\"Ben is a very... physical person. Do you recall when you first brought Beth over to Catherine's? Remember how he was all over her? Comforting her with hugs and rubbing against her? For all that he has trouble mentally and emotionally accepting love he is the opposite physically in giving it. I had no intentions of having sex with Ben when I went to his place. Then he kissed me. Yes, I kissed him back and when he picked me up and carried me to his bedroom, my intentions were moot.\"\n\nThere was a gentle knock on the door. \n\n\"Come in!\" Gabriella called.\n\nCat poked her head around the door with a worried look. Ben reached over her and pushed the door open with a look of annoyance.\n\n\"She said come in, not look in.\" he said.\n\n\"Hi! Sorry we're late.\" Catherine said with a blush.\n\nHannah closed her eyes and struggled to control her anger.\n\nBen slipped into the room and knelt down in front of Hannah's chair. When she opened her eyes she yelped in surprise since he was right up next to her. He took her hands in his and looked into her eyes. \"Please don't be angry with Gabriella and Catherine. They really helped me a great deal today. I can't begin to tell you how much Gabriella's talk helped me this morning. She really eased my fears and made me re-examine some of my damaged views on love, relationships, and my place in the lives of people I care for. Gabriella and Catherine, their love for me may be saving my sanity. I won't break my promise about speaking to the councillor. I know I'm not 'cured' by any stretch of the imagination but at least one of my fears has been greatly reduced.\" He kissed her knuckles and she gasped gently. Her eyes darted to Gabriella as she recalled her words about his 'physicality'.\n\n\"I know you are worried about me and I truly appreciate that. You are an amazing friend and I consider myself lucky to have you in my corner. I'm also concerned about you. We've talked about how unhealthy it is to hold onto anger and now that you know there is no value in anger for this I want you to release it like we practiced.\" he said looking her directly in the eye.\n\nShe smiled and leaned forward to pull him into a big hug.\n\n\"That's not how we did it but I suppose hugs also work really well.\" he said, squeezing his friend warmly.\n\n\"Are you ready to eat?\" Gabriella asked.\n\n\"YES! I'm STARVING!\" Ben said. He stood up and kept his arms around Hannah so she left the ground and hung against his broad chest. She yelped as her breasts were squeezed against him. She put her hands on his shoulders to push him away but his grip was too strong.\n\n\"Ben! Put me down! NOW!\" she shrieked. \n\nMiriam and Daniel were standing in the doorway grinning at Ben. He winked at them. \n\n\"Oh! I didn't see you there Hannah. Down you go.\" He said as he gently set her back on her feet.\n\nShe straightened her blouse and jacket then had to turn her back to them as she tugged her bra back into place. She turned back to look at his grinning face with a scowl but she couldn't maintain the look. She gave him a playful swat. \"Bad man! Bad BIG man!\" she growled as she tried to ignore the tingles and the flush running up her neck.\n\nThe kids came in and grabbed Ben's hands to drag him out to the dining room. They sat him at the head of the table then took chairs on either side of him. Gabriella and Catherine went into the kitchen. Miriam indicated that Hannah should sit next to her. The two friends brought the food out to the table and Gabriella served it onto the plates, Ben getting a very generous amount much to his delight. \n\nMiriam and Daniel dug in and were surprised when Ben mimicked their enthusiasm. More giggling ensued.\n\nBen's face showed his enjoyment and his food quickly disappeared.\n\nDaniel watched in awe as Ben finished off the enormous portion. \"Wow! You must have been playing hard today to work up THAT kind of appetite!\" he blurted.\n\nHannah was sipping her water at that moment and it spurted right back into her glass. Her face went red and she began coughing as the water had gone straight through her nose. She held her napkin to her face and tried to catch her breath. Gabriella looked at Hannah with an embarrassed expression.\n\nCatherine had a big mischievous grin on her face as she watched the blush grow redder on Ben's frozen face. \"Did you have fun today, Ben?\" she asked.\n\nBen gave her an exasperated look. \"Yes, I did very much.\"\n\nMiriam had missed the not quite so subtle nuances of the conversation and looked at Ben in delight. \"What did you do today?\"\n\nBen was trapped. He couldn't tell her he'd made love to her mother and her mother's best friend but he couldn't lie either. Hannah came to his rescue. \n\n\"I'm sorry for interrupting Miriam. Ben, before I forget, could you get my purse by the front door?\" she asked.\n\nBen gratefully left the table and Gabriella asked her kids to start tidying the kitchen. Once they'd left the room Gabriella swatted her friend's arm.\n\n\"OW! Why-\"\n\n\"Don't put Ben on the spot in front of the kids like that?\" she said quietly but firmly.\n\n\"I was just teasing!\" Cat sulked.\n\n\"Yes, but Ben can't or at least won't lie.\"\n\n\"Oh! Right! Sorry, I forgot.\" Cat said \n\n\"Forgot what?\" Ben asked as he returned to the dining room with the purse.\n\n\"Sorry I teased you Ben.\" Catherine apologized contritely.\n\n\"Not in front of the kids, please.\" was all he said.\n\n\"Don't do what in front of us?\" Miriam asked Ben when she returned. \n\n\"Never mind Miriam.\" Gabriella said firmly. The young woman scowled at her mother. She'd obviously been left out of something adult and therefor interesting to a 16 year old. The fact that it was about Ben just made it all the more interesting.\n\nBen gave Hannah her purse and she dug out the appointment card. She handed it to Ben. \"Tomorrow morning is the initial consultation. Dr. Rao is brilliant but this is a very personal interaction and you have to feel comfortable. If you don't click with him I have others I will introduce you to. OK?\"\n\n\"Thank you, Hannah.\" Ben said and kissed her forehead.\n\nShe looked over at Gabriella once more to acknowledge she was right about how physical Ben was.\n\n\"Dessert anyone? We have Gelato!\" Gabriella said with a smile.",
        "Once the meal was done the kids cleared the dishes and cleaned up. Hannah had to pick up her son from Trish's place so she thanked Gabriella and Catherine and Ben gave her a big hug which sent the flush up her neck once more. She headed home before she did something silly... like kiss him.\n\nThey settled into the living room and played it cool, the women taking the chairs and Ben on the couch. Miriam and Daniel finished up so they raced into the living room and plopped down on the couch on either side of Ben. Daniel looked up at Ben and did the eye pointing gesture again and his mother got upset but Ben just smiled.\n\nBen put his arms up along the back of the couch and the kids tucked themselves in against him. He looked down in surprise and Gabriella beamed. Catherine grinned as well.\n\n\"Ben told me this morning that he's never traveled anywhere.\" Gabriella opened with.\n\nMiriam spun to look up at Ben in shock. \"Never?\"\n\nHe grinned down at her look. \"No, I've never been anywhere but here.\"\n\n\"Mom! We have to bring him with us to France!\" the young girl gasped.\n\nGabriella hadn't expected that but now that the idea was out there she saw the appeal. Especially after the events of the morning. \n\nCatherine looked at her curiously so she answered. \"After I returned from my last trip to Europe I promised the kids I'd take them to France for two weeks this summer. I've taken them to the big theme parks in Florida and we flew out west and did a driving tour ending up at the Grand Canyon. The kids are a joy to travel with. I've never taken them to Europe so I thought France would be the nicest place to start. We'll start in Paris then drive south, stopping in little boutique hotels and bed & breakfasts and end our trip in Nice.\" \n\nMiriam was still looking up at Ben in excitement. \"You could come with us!\"\n\n\"But this is a family trip. I wouldn't want to intrude.\" he argued.\n\n\"Cat, would you be available to join us too?\" Gabriella asked.\n\nCatherine's smile was threatening to split her face in two. \"I'd love to go to France, especially Paris!\" She leapt out of her chair and jumped on Gabriella's lap to give her a big hug. \n\nBen smiled over at the two ladies squealing like teenagers. He looked down at Miriam who was just shaking her head in embarrassment. \"If Catherine is going I guess it's OK for me to join you too.\" he said. Then it was Miriam squealing and jumping up to hug him. \n\nHe looked down at Daniel. \"That is, if it's ok with you Daniel.\"\n\nThe boy pretended to consider it carefully then nodded. \"I think that would be fine.\" he said.\n\n\"Thank you.\" Ben said.\n\nDaniel nodded.\n\nGabriella looked at her kids with pride. \n\nCatherine crawled off of her friends lap. \"Oh, damn. I promised my girls I'd go on a trip with them this summer. France would have been incredible but there's no way.\" she said sadly.\n\n\"Bring them. I'll pay for the trip. First class all the way.\" Ben said. Gabriella and Catherine stared at Ben blankly.\n\n\"I was going to use my points for the flight and car rental.\" Gabriella mumbled.\n\n\"You said this morning I should travel and find someone experienced with the location to guide me. Well, if you'll have me I'd love to go with you all to France. But I insist on paying.\" Ben said. \"Shouldn't we book now to ensure we all get seats and places to stay?\"\n\nCatherine and Gabriella jumped on Ben and much squealing and playful kissing ensued. Daniel was the recipient of many of those kisses and finally managed to crawl out from under the pile and stomp off to his room. Ben caught the smile the boy was struggling to hide. \n\n\"Cat, call your daughters and make sure they are available.\" Gabriella said and Cat immediately dialed her house first as Megan was home. Gabriella grabbed Ben's hand and dragged him to her office. Miriam followed holding Ben's other hand. \n\nCatherine waited in the living room and told her youngest to come over immediately. She hung up and dialed her oldest, Sophia, as she walked to the front door. Moments later Megan came in breathing hard from the run took off her coat and boots. Her face was filled with curiosity.\n\nSophia picked up. \"Hi Mom! What's up?\"\n\n\"Is Rachel with you?\" Cat asked.\n\n\"Yes, she's right here. What's going on?\" the daughter asked curiously.\n\n\"Put the phone on speaker. I've got Megan with me here.\" She put her phone on speaker and heard Sophia's speaker activating. \"Do you remember our plan to go away together this summer?\" Catherine asked.\n\n\"Yes?\" all three of her daughters said anxiously, fearing their mother was going to cancel.\n\n\"How would you feel about going to France?\" Cat said with a grin. She grinned at the phone as Sophia and Rachel screamed in glee. Megan jumped up to cling to her mother as she squealed as well.\n\n\"Wait! Wait! We can't afford France!\" Sophia exclaimed.\n\n\"Ben is paying for the trip!\" Catherine told her excitedly. \"First class!\"\n\n\"Mr. Shepherd? Why is he paying for our trip?\" Megan asked.\n\n\"Because Ben has never travelled anywhere before and he'd like company on his first trip. He's bringing us and Gabriella and her kids. We're working out the logistics but it sounds like we will be starting in Paris then travelling south to explore and finishing off in Nice.\"\n\n\"Mom, that's eight people! How can he afford that?\" Sophia asked.\n\n\"Sweetie, don't worry about that. Ben does very well in his business.\" she deflected.\n\n\"No way! He's built like a Sex God and he's rich? I'm SO gonna marry that man!\" Rachel said.\n\nCatherine snorted as she saw Ben standing in the doorway. He'd come looking for her to help them in the office.\n\n\"Uh, he's in the room now and he heard that right?\" Rachel said weakly.\n\n\"Good evening, Rachel.\" Ben said.\n\n\"Good evening Mr. Shepherd.\" Rachel and Sophia said in reply.\n\n\"Please call me Ben. Catherine, we need your help working out the number of rooms we'll need to book, starting with the hotel in Paris.\" he said.\n\n\"Oh my god this is happening!\" Sophia's voice blurted from the phone, her excitement clear.\n\n\"I hope you don't mind me tagging along on your family vacation.\" Ben said seriously.\n\nThe girls spoke all at once to assure him they were more than fine with his being there. Catherine just grinned at him. Megan rushed up and hugged him fiercely and Catherine joined her. \"Sophia and Rachel, make hugging sounds! We're giving Ben a group hug!\" the mother called out to her daughters.\n\n\"God, I wish I was there.\" Rachel moaned.\n\n\"Yeah, why is it that Megan gets all the glory?\" Sophia complained.\n\n\"Born under a lucky star I guess!\" the youngest gloated to her sisters.\n\nBen peeled himself away and tugged Catherine down to Gabriella's office. She promised her daughters to email them the details once they were set.\n\nThe group spent the next three and a half hours roughing out an itinerary. Most of the calls to the smaller hotels and B&B's would have to happen when their reservation desks and booking people were open for business. Gabriella promised to get started on that in the morning. Ben would help her in the afternoon after speaking with the councillor. \n\nIt was just past midnight when they decided to call it a night. Everyone was tired yet excited. Catherine, Megan, and Ben got their coats on and gave Miriam a hug good night. She headed off to bed. Once the coast was clear Ben gave Gabriella a kiss good night and she slipped her tongue into his mouth and kissed him passionately. He returned it and when their lips parted you could have heard a pin drop. Miriam had snuck back down the stairs and had witnessed the most beautiful kiss she'd ever seen. She was so happy for her mother who deserved happiness and she loved Ben dearly. She smiled at them when they turned to spot her on the stairs then raced back up to her room.\n\nGabriella looked up at Ben to make sure he wasn't worried about Miriam. He just looked a little embarrassed so that was ok.\n\nThey turned back to Catherine and Megan. Cat had a loving smile on her face but Megan's eyes were wide with surprise. More embarrassment for Ben.\n\n\"I want my kiss goodnight here inside where it's warm.\" Catherine said to Ben. She squeezed herself against him and used her hands to hold his face and block his view of Megan. When her lips caressed his Ben's attention locked onto her and she was able to truly enjoy his attentions. God! He was an amazing kisser! Tingles shot through her body and she had to pull back or she'd tear off their clothes and take him right there in Gabriella's foyer. As she turned from Ben she saw her daughter's shocked expression had doubled.\n\nBen was trembling. \"OK, new rule! No more kisses like that before we go our separate ways.\" He said hoarsely.\n\n\"Sorry Ben.\" Cat said sincerely.\n\n\"Can- can I hug him?\" Megan asked her mother.\n\n\"I think you'd better keep it to just a hug.\" she said quietly.\n\nMegan stepped forward quickly and pressed her body hard against Ben and hugged him tight. Sure enough, the evidence of his excitement pressed against her and she gasped silently before he gently pushed her back. \n\n\"Sophie and Rachel are gonna scream!\" she whispered to her mother as they left amidst shared giggles.\n\nGabriella grabbed Ben's arm as he turned to leave. He looked back at her. She pointed to the lights which were on at Trish's place. He looked back in surprise at her. She smiled and nodded. He gave her one more loving kiss as he touched her cheek.\n\nBen made his way over to Trish's place and noticed a car in the driveway that looked familiar but he couldn't place where he'd seen it. He walked up to the door and knocked. He didn't want to use the doorbell in case he woke the kids.\n\nThe inner door opened and he was looking down at Tina. Her eyes lit up then she squashed the emotion and looked down. She opened the door and he stepped inside. \n\n\"Good evening, Mr. Shepherd.\" Tina said quietly.\n\n\"Tina...\" he began but realized he didn't know what to say. Brutal honesty. \"I want you to come home with me. I want you and Christopher to live in my house. I want you in my life. But all of these things are dependent on you agreeing to one very important thing.\"\n\nShe looked up at him in shock. Her mouth worked but no sound came out.\n\n\"I'm amending my previous conditions. Before, I told you that you had to find a mate who was closer to your age. Now, all I am asking is that you keep your heart open for the possibility of love. You are very young. You may meet someone who is more compatible, someone you connect with deeply, someone you can truly love. You must be open to that. I can't be the reason you miss the opportunity for true love. Can you do that? Please?\"\n\nTears were streaming down her cheeks and a beautiful smile was on her lovely face. Not able to trust her voice she nodded quickly. He bent down, pulled her into his arms and kissed her deeply. She kissed him back as she cried and laughed at the same time. He heard crying from further down the hall and looked over Tina's shoulder as she clung to his chest.\n\nTrish and her cousin were standing in the doorway to the living room watching them. The two were clinging to each other and crying.\n\n\"What?\" he asked setting Tina back on her feet.\n\nTrish and Shelly rushed forward and hugged Ben after Tina hustled upstairs to get her things.\n\n\"You are such a good man Ben! Tina needs you so much and you are so good for her. What changed your mind?\" Trish asked.\n\nBen considered Gabriella's words from earlier in the day about Trish's opinion changing and saw she was right about that too. \"Gabriella talked with me and set my mind at ease over a number of misconceptions I had regarding love and relationships. She sent me over here to open up to Tina about how I truly feel.\"\n\n\"I want to meet Gabriella! She sounds like a truly wise and beautiful soul!\" Shelly sighed.\n\nBen's body was reminding him that he had two beautiful women pressing their large firm breasts into his chest. Trish noticed immediately as the ridge was climbing up the leg she was pressed against. His heat and thickness was pressing directly against her pussy through her yoga pants.\n\n\"Oh God Ben! That feels so fucking good!\" she moaned as she ground against him. Shelly looked at her cousin in surprise.\n\nTina came down the stairs with her suitcases. Truthfully she hadn't really unpacked as she'd prayed Ben would take her back.\n\nShe saw Ben's flushed expression and Trish rubbing against him. Shelly was also squeezed tightly against him. She smiled, put her suitcases down and walked up to the three. \n\nTrish noticed Tina and pulled away from Ben. Damn her horniness! Ben was here for Tina not her! Shelly stepped back as well. Tina pulled Ben's coat off and knelt to help him remove his boots. Then she put her hand in Ben's larger one and pulled him into the living room. She could feel him trembling with need as she glanced over to ensure the blinds were closed. Trish and Shelly followed her in and she gestured for them to move the coffee table away from the couch. She led Ben to stand in front of the couch.\n\nTina looked up at Ben. \"May I please remove your pants?\" she asked quietly.\n\nBen looked at her then the other women who stood frozen in the room.\n\n\"Please.\" she repeated, looking up at him with her head tilted.\n\nHe nodded faintly and she efficiently undid his belt, button and zipper and slid his pants down. He stepped out of them.\n\n\"May I please remove your underwear?\" she asked.\n\nBen was starting to recover from his over stimulation and was becoming nervous about being naked in front of the women. Tina stepped close and looked up sweetly at his face.\n\n\"Please.\"\n\nHe shivered and gave her another nod. She slid back down his legs sliding the garment down with her. His heavy cock swung free and touched her cheek. She gasped and shivered with delight at the feel of him. She heard Shelly moan as she finally got to see Ben's cock. Tina smiled. She'd heard Trish's story of Shelly's skills. She wanted Ben to experience them. She was his to command but he was hers to pleasure.\n\nTina put her hands on Ben's chest and gently pushed him to sit on the couch. She moved his knees apart then looked over at Shelly. The blonde's eyes were locked onto his cock and her breathing was fast. Tina gestured for her to approach. Trish gave her cousin a little push and she finally began to move closer. \n\nWhen Shelly was close enough Tina reached out and took her hand. She pulled the woman closer and made her kneel between Ben's legs. He was looking between Tina and Shelly confused at how this little woman was controlling the much taller blonde. He didn't realize how desperately Shelly wanted exactly what Tina was freeing her to do.\n\n\"Ben is a very special man. Please make him feel good.\" Tina said quietly to Shelly and gently pushed her head towards his stiff cock. \n\nShelly's eyes closed in bliss as his hot flesh pressed against her cheek. It had been so long since she'd done this. Not since her trust had been so horribly betrayed. She'd never met a man she'd felt comfortable expressing her passion with until Ben. Her cousin's obvious trust in him dissolved her last fears. \n\nShe rubbed her face against him and moved her hands to grip the root and cup his balls. She gasped as a surge of pleasure went through her body. She'd missed this so much! She felt the weight of his balls and dipped her head down to run her tongue over their surface. Shelly sucked one into her mouth and moaned in pleasure. \n\nBen held his hand out for Tina and she sat next to him on the couch, her feet tucked up under her. He pulled her in close and kissed her tenderly as he gasped at the sensations Shelly was sending through his body.\n\nTrish approached the couch from Ben's other side and he held his hand out to her as well. She sat next to him with her legs tucked like Tina's. Her eyes were on her cousin though.\n\nShelly started to kiss his cock starting at the base. She pressed her full lips against his hot skin and sensually moved her kisses from side to side as she made her way up. She made little cooing sounds as she felt his pulse pounding in the hard flesh. When she reached the head she smiled in great satisfaction to see a large droplet of precum beading there. She dipped the tip of her tongue into the liquid and rubbed it in circles across the fat head of his cock as she ever so slowly lowered her head over him. Another shock went through her body as her lips reached the soft skin of the head and began to stretch over its thickness. Her moaning increased.\n\nBen writhed as he felt her working her lush lips over the sensitive glans. He fought the urge to reached down to her head and push his cock deeper into her hot, wet mouth. \n\nTrish reached behind herself and dragged Ben's arm off the back of the sofa and slid it down her back and inside the waistband of yoga pants. Ben automatically slid his hand down between her legs and rubbed in circles over her pussy and clit. She gasped and jolted with pleasure as she watched Shelly.\n\nBen's cock slowly disappeared into Shelly's working mouth. She slathered her spit over his skin with her tongue and began to work her way down the shaft. Occasionally she'd slide back up to the head and kiss the tip with her full lips. Then she'd slide back down to the depth she'd reached before and push a little further. She made little needful sounds when she'd reach a new depth and pull back, as if she was fighting with herself to go deeper.\n\nHer descents were becoming faster though the ascents continued to be slow to the point where Ben was losing his mind. \n\nHe slipped two fingers deep into Trish's wet pussy and ran his slick thumb back and forth across her anus with each pump. Every time his thumb caressed the opening Trish hissed her breath through her teeth in anticipation. Her body was trembling and her breathing was ragged.\n\nBen looked into Tina's eyes and he saw her love for him shining back. He was mirroring that love so she leaned in and kissed him tenderly once more.\n\nShelly had a firm grip around the root of Ben's cock which held him back from the orgasm he felt building to monstrous levels. She used the nails on her other hand to gently scrape the surface of this tightening balls and Ben yelped from the suddenly intense sensation. Then Shelly dropped her mouth over his cock all the way to the base, pushing the head deep into her throat. \n\nBen gasped and his body went rigid. His hand clenched on Trish's ass and the tip of his thumb squeezed past the tight ring into her hot rear passage. Trish's eyes rolled back and she leaned back against his hand feeling his thumb sliding deeper into her ass until it was all the way in. She wiggled her hips to get just a little more in.\n\nShelly squeezed him tight with her throat then pulled all the way off. She looked at Ben with raw lust in her eyes and then looked back at his cock with hunger. She plunged down once more and Ben's entire body jolted. She began to make long deep strokes from the head to the root. She looked at her cousin who looked back with lust in her own eyes as Ben thrust up into both her ass and pussy. She was very close to her orgasm.\n\nBen whispered into Tina's ear. Her grin was wide and mischievous. She nodded to Ben then carefully got off the couch and circled behind Shelly. She stopped and rested a hand on the back of Shelly's head. The woman immediately began to whimper and her hand left Ben's balls to start touching herself. Tina went back to Ben and whispered in his ear. He glanced at her and she nodded. Ben moved his free hand to the back of Shelly's head and he took a grip on the hair there. He didn't try to control her movements but Shelly immediately began to whimper loudly and moan as she increased her speed, almost brutally slamming his cock into her throat. Tina rushed around behind Trish to follow Ben's instructions. She reached around Trish and pinched her nipples tightly and tugged on them. Trish's head went back in a silent scream as she convulsed on Ben's hand.",
        "Shelly loosened her grip on the base of Ben's cock and he suddenly felt that enormous orgasm crashing through his senses. He'd spent the morning making love to Gabriella and the afternoon with Catherine so he really didn't expect to have much left but it appeared he was wrong. The first burst went down her throat but she quickly pulled out so just the fat head rested on her tongue. Shot after shot filled her mouth. He moaned as Shelly's eyes rolled back in ecstasy. Tina moved behind her and squeezed her nipples and pulled them, just not as hard as she'd done for Trish. Shelly squealed through her orgasm with Ben's cock acting as a gag.\n\nBen gently disengaged his hand from Trish's body and felt her convulse in aftershocks. He loosened his grip on Shelly's hair and gently ran his fingers through it to smooth the knots out. She looked up at him lovingly then carefully pulled her mouth off of his cock. She pushed herself to her feet then knelt on the edge of the couch in front of her cousin. \n\nTrish was resting back on her feet but her head was drooping down. Shelly reached out and tilted her chin up. Trish's eyes opened in question then Shelly's mouth was against hers in a deep kiss. Trish squealed in surprise then moaned and leaned into the kiss. Ben watched with wide eyes as the two women shared his essence between them. He realized Shelly was completing the threesome from Trish's story. Both women were clutching each other and when the kiss was over they hugged tightly with tears in their eyes.\n\n\"I love you Trish.\" Shelly whispered to her cousin.\n\n\"I love you Shelly, forever!\" Trish whispered back and rested her head against the blonde's shoulder.\n\nTina had slipped away and quickly returned with a warm, damp face cloth. She immediately began cleaning Ben's spent cock. When she squeezed out a final dollop of sperm she smiled wickedly up at Ben and licked it off. He gasped and raised an eyebrow at her. Once his cock was clean she moved to clean the hand he'd pleasured Trish with then helped him put his clothes back on.\n\nEveryone climbed to their feet and hugged. \n\nTrish looked at Tina. \"Thank you for sharing Ben with us! And Ben, thank you for letting us complete that beautiful act of love that was stolen from us so many years ago.\"\n\nBen kissed Trish and Shelly and tasted something odd, then realized it was him. They smiled at him as they realized what he'd just done.\n\n\"Oh my god, he's just the sexiest man ever!\" Shelly gushed.\n\nHe glanced at a clock and saw it was a little past 1AM. \"No, just a tired one.\" he smiled. \"Good night to you both! Tina do you want to come home tonight or in the morning? What about Christopher?\"\n\n\"Tonight please. Can you carry him in his bassinette? I will just put some blankets on him for the short distance to your place.\" she replied.\n\nHe nodded and went upstairs to carry him down. Trish and Shelly saw them off with another round of kisses. Ben brought Tina and Christopher home and got them settled into his home and his room. Tina and Ben brushed their teeth together enjoying the simple domestic bliss.\n\nAs he turned the light off with Tina tucked up against his body he sighed with happiness. Tina responded with one of her own and he fell asleep quickly with a smile on his face.\n\nChapter 16\n\nBen met with Dr. Rao and while he seemed very nice Ben found himself uncomfortable discussing anything personal with the man. Once the session was over the secretary sent Ben to speak with Hannah. \n\n\"So how was your session with Dr. Rao?\" she asked\n\n\"Well, he's nice...\" Ben started.\n\n\"There's a 'but' in there isn't there.\" she said. \"It's ok Ben, speak freely.\"\n\n\"He didn't put me at ease. I felt awkward speaking with him.\" he said.\n\n\"Sure. Ok. Let me see. Do you think you might be more at ease speaking with a woman because I can get you in to see Dr. Granger tomorrow morning at the same time?\" she asked.\n\n\"Well, I have no trouble speaking with you and Gabriella. So maybe, yeah.\" he agreed.\n\nHannah made a request for the appointment for the following morning and received a confirmation in moments. \"OK, you are set. What are your plans for the rest of the day? Are you up for a session with Beth and I tonight?\"\n\nBen had been thinking about how he'd bolted from Daphne's house the last night he'd been there. He felt bad about that. \"I think I'll stop by Daphne's on the way back to see how they are doing. I left in a bad way when I was last there. I am definitely up for another session tonight. What time?\"\n\n\"We could come over at 7:30?\"\n\nBen remembered something. \"Are you aware that I've brought Tina and Christopher back to my place to live with me while she's attending University?\"\n\n\"Oh! Uh, no I wasn't aware of that. Don't you think that's a bit premature?\" she said cautiously.\n\n\"Actually, it feels right. My anxiety over how I had been treating Tina is gone. I'm even becoming more comfortable with fulfilling her need for a dominant partner though quite frankly I think that's more due to her being a very mature and responsible young woman. There is thankfully very little drama with Tina.\"\n\n\"With her living with you where are we going to have our sessions?\" Hannah asked.\n\n\"In my media room like last time. We'll just close the door for privacy. It's soundproof.\" he smiled.\n\n\"Excellent! See you at 7:30 then.\" Hannah smiled. Ben headed out and Hannah made a quick call to Daphne to let her know he was heading over and to keep her daughters in check.\n\nBen stopped by the florist and picked up a beautiful flower arrangement for Daphne and her daughters to wish them luck with their new venture.\n\nDaphne opened the door and beamed a broad smile at him as she ushered him inside. He hung up his jacket, kicked off his boots and followed her back into the playroom which had quickly become their favorite room.\n\n\"I was told that this is a congratulations and good luck arrangement.\" Ben said handing the flowers to Daphne.\n\n\"Oh Ben! You didn't need to do that! They're lovely! Thank you! Let me put them in the kitchen for now. Girls! Ben is here!\" Daphne called out. When Ben gave her a nervous look she patted his arm. \"They just wanted to say thank you personally for the incredible job you did on the daycare. They promised me no hanky panky.\"\n\nDaphne left to go into the kitchen and Ben sat on a big red couch in the playroom. He smiled as he looked around at how much natural light filled the room. It really had turned out so well! He couldn't wait to hear the excited voices and laughter of kids in the neighborhood again.\n\nSpeaking of excited voices, he heard Lisa and Lori rushing from the back of the house. They slid into the room in their socks with wide grins on their faces. Both had their hair up in pigtails. They wore white blouses with rolled up sleeves and grey plaid skirts which only reached mid-thigh. They walked over to the couch holding hands as they had back in the days when he'd seen them walking to school. Ben realized the clothes they wore matched their old school uniforms but they never looked like THIS. He froze as they stood before him. He could faintly see their crimson push-up bras through their tight white tops. He had no trouble seeing the resulting cleavage.\n\n\"We want to thank you Ben for the amazing job you did on the daycare! The workmanship is second to none, the attention to detail is incredible and there is no question we have the best facilities of any daycare in the county if not the state. Thank you so much!\" Lisa said earnestly. \n\n\"Thank you Ben!\" Lori joined in.\n\nBen began to relax when they didn't jump on him or try to kiss him. Instead they behaved in a friendly and polite way. He still couldn't get over the similarity in their outfits to their old school uniforms, aside from the overly abundant cleavage and their long smooth legs.\n\nThey sat on the couch on either side of him but they didn't crowd in, rub against him, or touch him in any way. They just smiled. Again, Ben began to relax.\n\nDaphne came back out into the playroom and froze when she saw her daughters sitting on the couch with Ben. They hadn't been dressed like that when she'd told them this morning to behave when Ben arrived. And pigtails? Still, Ben didn't seem too nervous, just a little confused. Like she was.\n\n\"Have you begun advertising?\" Ben asked as he got used to the ladies sitting next to him on the couch.\n\n\"Yes, actually the girls took care of that.\" Daphne said with a big smile. Lori jumped up and skipped over to the kitchen counter and brought back some of the printed material. She returned to her spot on the couch and handed the papers over to Ben with a bright smile. \"Trish did all of our design work and it looks incredible. It really set us above the others and there has huge response! We are actually preparing to begin the interview process next week. There will be a Spring/Summer program and a Fall/Winter program. We're actually approved to have 25 kids in the daycare based on the new design. One spot is reserved for Tina's Christopher so we are interviewing for 24 more.\" Daphne smiled.\n\n\"We also have Jacob and Emma Brown's two daughters coming to work for us. They currently work in one of the city run daycares which is all the way on the opposite side of the city. They're just across the street and three doors over so their new commute is less than a minute's walk. Natalie is 20 and Victoria is 19 so we'll have sufficient adult supervision. They got a very good reference from their former employer and are fully certified.\"\n\nBen looked at the twins again. \"Uh, is there going to be a uniform for the staff?\" he asked curiously.\n\nThe twins giggled and swatted him playfully. \"No silly! We were just excited about the new beginning and remembering our own school days. It made us feel a little nostalgic.\" Lisa grinned, her bosom straining to break free from the tight white fabric. \n\n\"Nostalgic.\" Ben repeated quietly as he took in Lori's matching efforts to burst from her own garment. He began to sweat.\n\nHe didn't catch the little spark of victory in Lori's eye that she shared with her sister. They sat demurely on the couch and crossed their legs. Ben's eyes widened when he saw their lovely, long limbs on display. When he glanced at their faces the twins seemed to be completely unaware of their effect on him so he sighed a quiet breath of relief.\n\nDaphne missed this as she was digging through the paperwork she had to find an application form for Ben. \n\n\"You will need to fill these out and get them back to us. We need to have a file for each child we sign up.\" Daphne said handing a set of forms to Ben.\n\nHe folded them and with a final nervous glance at the twins he stood up. \"I guess I'll be going. I told Tina I would take her shopping this afternoon at the mall. She barely has any clothes since the ass- sorry, her husband wouldn't buy her any.\"\n\nThe twins suddenly looked at him in shock. \"The mall?\" Lisa gasped. \"You can't buy her good clothes at the mall!\" Lori exclaimed.\n\nDaphne and Ben looked at the two young women in surprise.\n\n\"You wait right here, we'll be right back!\" Lisa said and took her sister's hand as they rushed from the room.\n\n\"I swear they get stranger every day!\" Daphne said shaking her head with a smile. \"I seriously don't know where they got it into their heads to dress up in school uniforms.\"\n\n\"I suppose it was a lot simpler when they were just kids in school.\" Ben agreed. Daphne stood up to put away the printed brochures. He pictured the twins so many years ago walking hand in hand down the sidewalk on their way to school. The smile slipped from his face as he realized his mind was picturing them as they looked today. He struggled to bring back that original memory but his mind wanted nothing to do with that. Finally in frustration he just gave his head a shake trying to drive the corrupting images from his head.\n\n\"What's wrong?\" Daphne asked as she returned.\n\n\"What? Oh, it's nothing. I really should get goi-\" he started then froze as the twins returned. \n\nThey were wearing matching outfits again but this time it was skin tight white leggings with equally tight black turtleneck sweaters. Each was carrying a leopard pattern clutch purse. Their luxurious red hair was free of the ponytails and hung loose around their shoulders. They collected Ben on their way to the front door.\n\n\"Ben, you can't take Tina to the mall. We'll show you where you can dress her as she deserves to be seen.\" Lisa insisted.\n\n\"The woman is petite perfection. You won't find anything to flatter that in a mall.\" Lori stated emphatically.\n\n\"Were you bringing Christopher along?\" Lisa asked.\n\n\"Of course.\" Ben replied.\n\n\"Mom, could you watch over Christopher while we take them to the proper places to get clothes?\" Lori asked.\n\n\"If it's ok with Tina, I'd love to.\" Daphne said. She'd played with the sweet natured little boy when they were staying with Trish and he was a joy to take care of.\n\nBen couldn't argue as he knew next to nothing about fashion. The twins pulled on their coats and Ben grabbed his on the way out the door. They hopped into the back seat of his truck and he drove to his place. They followed him in and waited in the foyer as he kicked off his boots and went looking for Tina. \n\n\"Hi Ben!\" Tina smiled as she pushed the roasting pan into the oven. She'd prepared another wonderful meal for him. \"Dinner is at 6.\"\n\nBen glanced at the clock. \"That gives us just a little over five hours to take you on a shopping trip. I have two fashion experts with me who informed me I was taking you to the wrong place for clothes.\" he said with a grin as he took in her puzzled smile. \n\nShe pulled off the oversized apron she'd borrowed from him (something else he was going to have to buy for her) and followed him out to the foyer after bundling up Christopher and grabbing his diaper bag. Ben explained that Daphne would be watching over her son that afternoon. \n\n\"You remember Lisa and Lori McKellan?\" Ben introduced them.\n\n\"Hello!\" Tina beamed at the twins.\n\n\"Hi!\" they replied. \"Ready for a shopping extravaganza?\" Lisa gushed. \"This is going to be SO much fun!\" Lori enthused.\n\nTina was all smiles as Ben helped her on with her jacket. They all piled into his SUV, dropped off the boy with a delighted Daphne, and headed off. Lori directed them downtown, away from the land of malls. As Ben drove the twins grilled Tina on what kinds of clothes she thought she needed and where she was going to be wearing them. \n\nSoon Lori had guided them to a parking lot just outside of one of the older sections of the city. It was a densely packed neighborhood of coffee shops, trendy restaurants, and most importantly clothing boutiques. Lisa and Lori immediately guided Tina into a shop specializing in petite sizes. Ben followed them in. Lisa took Ben's arm, led him to a chair near the back, hung up his jacket on a hook, and sat him down to wait. The twins hung up their jackets and Tina's as well as the shop was quite warm.\n\nThe woman who owned the shop came forward to speak with them. Lori introduced Tina and explained they needed clothes for her for the spring and summer when she would be attending some courses in the University. Also some outfits for casual wear and evening wear. The shop owner cast a critical eye over Tina and directed her to the change area where Ben was already sitting. He smiled at her excited expression. She was practically trembling!\n\nWith several outfits dangling from her fingers, the woman put them into a change room and indicated to Tina which should be tried on together.\n\nLisa and Lori sat in chairs on either side of Ben. Each placed a hand on his arm. A few minutes later Tina stepped slowly out of the change room wearing a soft yet classic white blouse and black skirt. Ben's eyes widened and he smiled in appreciation. This was a new look for Tina. It was simple and subtle but gave her such a sophisticated look. He was sure that when she wore this outfit she would be taken seriously. He knew he had to buy it for her. \n\n\"Sold!\" he said with a grin. \n\nTina's smile was a little shaky and he gestured her over to his side. \"What's wrong?\"\n\nShe turned her wrist over and he saw the intricate detail that was just in the sleeve alone- $300 for a blouse!?! The tag on the skirt said $500! He had a momentary attack of sticker shock but then he took a more critical look at the workmanship. Both items were exquisitely made and of the highest quality. He noticed that the owner was watching him carefully. He turned his eyes to her and nodded. The clothing was worth the price. She nodded back with a pleased smile.\n\n\"Sold.\" he said firmly looking Tina directly in the eye.\n\n\"Oh Ben, it is too-\" she began.\n\n\"Are you questioning me?\" he said in a quiet rumble. \"Do you think I would dress you in less than the best?\"\n\nTina was back to trembling but this time it was her emotions overflowing.\n\n\"No tears. Go try the next outfit. Go.\" he commanded. Tina spun and dashed for the change room with a huge smile on her face. The shop keeper gave him an approving look as she moved back to the cashier's desk.\n\nLisa and Lori watched the exchange and looked at Ben with new eyes. From their own observation they knew he was gorgeous and his body was incredible. From what Trish had told them they understood he was a tiger in bed. But seeing him show his dominant side put him over the top. The twins were so used to controlling their eager dates they'd never been exposed to this before. They liked it. They wanted it. \n\nBen noticed the girls were beginning to dig their red lacquered claws into his arms. He wasn't going to sit still if they started pawing him again. His brain was still in Tina mode and he was not pleased with how they were acting.\n\n\"Stop that. Put your hands in your laps and sit quietly.\" he growled.\n\nImmediately they pulled back and watched him. \n\nTina stepped out of the change room in a beautiful sun dress. She saw Ben's eyes light up in delight and felt a zing of pleasure shoot through her body. Then she saw the two sisters sitting on either side of him squeezing their thighs together with a strange look on their faces as they watched her man. She immediately recognized the look and understood its source. She wasn't sure what Ben said to them but she trusted Ben implicitly and knew they deserved it. She smiled at him and walked closer.\n\nBen was dazzled by how beautiful Tina looked in the flowing dress. It clung to her in the right places yet flowed around her. God, he was starting to react to her. His look smouldered as a deep rumble began in his chest. \n\nTina heard him and saw the fire in his eyes. She felt a tingling warmth spreading through her loins. A blush rushed across her face. \n\nThe twins also heard it and moaned quietly as they squirmed to appease their own tingling.\n\n\"Sold. Next.\" Ben smiled up at Tina with promise in his eyes. She scurried back to the change room, her smile beginning to ache from being so wide.\n\nShe came out three more times, two more outfits for university and one more casual dress. All of them looked amazing on Tina and Ben decided to get them all.\n\nThe shop keeper arrived with one final item. A simple black party dress. More of a sleeveless shimmering skin. Ben was struggling to discreetly adjust his erection when he saw the new dress. Tina came out of the dressing room carrying all of the clothes. Her mind was reeling with the cost of the clothes she was carrying but Ben had spoken. The woman took the clothes from Tina and looked at Ben.\n\n\"We'll take them all. I'd like to see the black dress on her.\" he said and the woman smiled and nodded to him. She handed the party dress to Tina whose eyes went wide. She looked at Ben and he gestured to the change room. She fast stepped back into the room as the woman took their purchases to the cash.\n",
        "Ben stood and quickly adjusted himself in his pants, completely forgetting the twins were sitting quietly next to him. Their moans as they watched him brought their presence back to his mind. His cock was still straining against the fabric of his pants but at least the pinching was gone. He looked to the two ladies and saw they were biting their lips and staring at the large ridge in his pants. \"Dammit!\" he thought. He sat back down uncomfortably between them and leaned back as much as he could to relieve the pressure. Unfortunately this just put him on display for the twins and he saw them squirming. He had the sudden thought of how their roles were now reversed from this morning when they were dressed in those outrageous school uniforms. Unfortunately that image didn't help and he felt himself surge to his full length. The twins moaned when they caught the motion in his pants.\n\nHe forgot completely about the twins as soon as Tina stepped out of the change room. The shimmering black dress clung to her like a second skin. A single strap went around the back of her neck and ran down her chest to cover her breasts while exposing her cleavage. Her back was half exposed and the dress ended at mid-thigh. The gentle swell of her breasts and her ass were accentuated, perhaps even a little exaggerated and he desperately wanted to run his hands all over her body. He leaned forward in his chair and beckoned her closer. She glided up to him. \n\nExerting tremendous will power he reached out and placed his hands upon her hips and felt the heat of her skin through the smooth, soft fabric. This was definitely a summer dress as it would allow her to shed heat as they danced. He pulled his hands back and looked up into her eyes which were half lidded with lust as she trembled from the sensation of his hands on her. \n\n\"We'll be taking this dress as well. Go get changed.\" he said roughly.\n\nShe spun and rushed back to the change room.\n\nBen lasted thirty seconds before he surged to his feet. He needed to move. He walked over to the door of the change room. \"Tina, hand me the dress once you've taken it off and I'll take it up to the cash.\" he said. \n\nThe door opened and she stood before him in her bra and panties only. Her nipples were showing clearly against the fabric. She looked down and saw his excitement was showing as well. She licked her lips and looked back up at him.\n\nBen took the dress from her. \"Get dressed.\" he said, his voice rough with need.\n\nOnce the door closed he turned back to Lisa and Lori. \"Get the coats and meet me at the cash please.\" he said, his voice still deep and rough.\n\nHe headed over to the cash and missed seeing the girls leap from the chairs to get to his jacket first. Lori snatched it up and pulled it tight against her nose as she breathed in deeply. She sighed and held it out to her sister with a smile. Lisa pulled it in for a deep breath and sighed as well. They heard a gentle throat clearing and looked over to see Tina watching them with a raised eyebrow. Embarrassed they handed Ben's jacket to her and her own as well.\n\nLisa leaned forward to speak quietly. \"We are so jealous of you Tina! We had no idea Ben was so...\"\n\n\"...dominant! Assertive! HOT!\" Lori blurted as Lisa struggled to put a word on it. She nodded and grinned at her sister's explosion.\n\n\"Ben is full of surprises. I believe he sometimes discovers more in himself than he thought he was capable of.\" Tina smiled gently. \"I think tonight he is going to surprise me greatly. Maybe all night long.\" she teased and the twins whined in frustration.\n\nThey walked up to the cashier's desk and the woman was handing Ben the bag and a business card. There was a hand written name and number of the back. Tina sighed and smiled. There was a display case by the desk and something caught her eye. She looked into the case and admired a simple black choker necklace with a single blood red stone in a black setting. There were matching earrings.\n\nShe felt Ben's breath on her neck as he peered into the case over her shoulder. \"That would look spectacular with that black dress we just got, wouldn't it?\" he said. Her eyes immediately went to the price tag. She gasped.\n\n\"May we look at this, please?\" Ben said to the woman behind the desk. She came around with a key and opened the case to put the necklace and earrings on the glass surface with a mirror. Tina couldn't move so Ben lifted the choker and fastened it around her throat. She trembled at the feel of his hands on her and her eyes closed. The woman was watching her responses with fascination.\n\nTina felt Ben holding the earrings next to her ears and felt his warm breath on her ear. \"Open your eyes Tina. Look at how beautiful you look.\" he whispered.\n\nShe looked into the mirror and the woman looking back was a stranger. It took her a second to realize that beauty was her. She gasped and tears sprung to her eyes.\n\n\"I take it that means you like it.\" Ben smiled.\n\nShe couldn't trust her voice so she just nodded. As her body was vibrating so rapidly her nod was almost frantic.\n\nBen looked at the woman and told her to ring them up. He placed the earrings back on the display with the choker. The woman locked the case and took their purchases away to wrap them.\n\n\"Please may I kiss you? Please?\" Tina whispered to Ben fiercely.\n\nBen looked at Tina and saw her desperate need. He also saw the twins eyeing him with similar expressions. The shop owner was unfortunately close enough to have heard as well so she looked at him to see what he'd do.\n\n\"A small one, only.\" Ben agreed though the audience made him uncomfortable. He leaned down to bring his mouth to hers. She captured his lower lip between hers and he caressed her upper lip with his tongue before pulling away. She made a little squeak of need then looked down as a large tremble went through her body.\n\nBen turned back to the women who had gone still as she watched the kiss. Flustered, the woman completed packaging the necklace and earrings and rang the sale through for him. Her neck was flushed and she unconsciously unbuttoned the top button of her blouse in an effort to cool her neck. He thanked her and put the purchase in the bag with the clothes and turned back to Tina. He put on his jacket and helped her put hers on as the twins yanked theirs on. Once they were outside Ben turned to the twins. \"Where to now?\" \n\n\"Could we get a coffee and a snack? There is a really nice little bakery on the next street over and next to it two door down is another great petite's shop. Three doors beyond that is a great place to get casual, sexy and fun clothes.\" Lisa suggested.\n\nBen's stomach rumbled as he'd missed lunch. He smiled at Lisa. \"I like that plan.\"\n\nTina looked up at Ben in surprise. \"More clothes?\"\n\n\"The items you have are lovely but not enough to call a wardrobe.\" Lori said.\n\nBen leaned over and whispered in Lisa's ear. She smiled and patted Ben on the arm. \"Yes, I know just the place! That will be our last stop.\"\n\nTina looked at Ben curiously but Ben gave nothing away.\n\nThey made their way to the bakery which was as small and lovely as Lisa said. They placed their orders at the counter, Ben paid, and they grabbed the booth in the back corner with a small circular table and wraparound bench. Ben slid in first and went around to the back wall to give the other's room. Tina directed Lisa to slide in after him and Lori to slide in the other side. Then she slid in last which put her opposite Ben. There wasn't a lot of room under the table for three sets of long legs even with Tina's shorter ones leaving some space so it was unavoidable that knees and or thighs touched. Ben found himself between the two sisters again and looked curiously at Tina but it was her turn to hide her intentions.\n\nLisa explained to Tina what outfits they should look for in the next store which made Tina smile. Ben tuned himself out of their conversation and began to relax until he felt someone rubbing the insides of his thigh gently. He immediately looked at the twins but they both seemed to be paying attention to what Tina was saying. Their drinks and snacks arrived and the touching ended as everyone turned to their food.\n\nBen tried to ignore the feel of the twin's legs on his but his body was acting like a jerk as usual and his pants were become tight again. Then he felt someone stroking his hardening cock through his pants and he once more shot a look to the twins but they both had their hands on the table. He looked over at Tina in surprise. It was then he noticed that she had slid down on the bench so she could reach across under the table to get her bare foot on his crotch. She gave him a mischievous smile which he returned. Two could play this game. He gripped her ankle and started to rake his nails gently across the bottom of her foot. \n\nTina's eyes went wide and she squirmed as the tickling made her body jerk. Lisa and Lori immediately knew something was up. They looked at Tina's grimacing and then down at Ben's lap where they saw him holding her ankle and tickling her foot.\n\n\"Help me!\" Tina gasped to them then she clapped a hand over her mouth to keep her shrieks inside. The twins immediately joined in the tickle fight... against Ben. They started running their nails along the insides of both of his thighs and it was Ben's turn to squirm. Their legs prevented him from closing his and he didn't want to let go of Tina as she had moved her other foot into play, stroking him unmercifully until he had to finally stop tickling and grab her other ankle. The damage was done though. He was hard as rock and his pants were pinching once more. \n\nWhat Ben wasn't aware of was that Tina had managed to tug his zipper down to the bottom with her toes. Tina struggled to get her legs free and he clung tenaciously. He shifted position on the bench to relieve the pinch and suddenly he felt much better. No pressure at all. \n\nThe grinning twins looked over the edge of the table to see if Ben had released Tina's legs yet and froze when they saw his thick cock extending well outside his open zipper. They looked at each other then back at Tina who nodded to them. \n\nWhile Ben was occupied with looking at Tina. Lisa and Lori each reached a hand out and took a solid grip on Ben's cock, Lisa's hand above Lori's. They gasped at its hardness and heat. Ben gasped at the sudden sensation of their grip on him and lost his grip on Tina's legs. Tina used the opportunity to grip the base of his cock with her feet. She pumped him a few times. Lori pick up the motion and Lisa followed. By the third pump they were moving in unison.\n\nBen grabbed the wrists of the twins and pulled their hands away from him. \"Tina! Stop. Now.\" he growled. She immediately pulled her legs back and slipped her socks and boots back on. Ben released the twins and they sat back waiting for him to yell at them. He struggled to get his erection back into his pants but he was pinned beneath the table and couldn't adjust his pants. He felt totally helpless and the ridiculous nature of the struggle made him snort. \n\nLisa, Lori, and Tina hadn't been expecting THAT reaction from Ben. He started to laugh and slumped back against the booth. His tight pants were preventing him from going soft so he just covered himself with his paper napkin. The ladies all picked up his laugh with giggles of their own.\n\n\"What are you going to do now Ben? You seem to be caught between a table and hard place.\" Lisa said.\n\nHe tried to scowl at the beauty but his heart just wasn't in it. He shook his head.\n\n\"We could take care of that for you.\" Lori suggested. \"It doesn't seem to be going away on its own. Just sayin'.\" She licked her lips eagerly.\n\n\"I'm not having sex in public.\" Ben said firmly. \"I need to stand up so I can stuff myself back into my pants. Lisa, please slide out of the booth and block the view.\"\n\nLisa slid out and stood beside the booth facing him. He had expected her to look the other way but it was a little late now to be shy. He carefully slid out of the booth and stood up. He dropped the napkin and the twins gasped as they finally got a clear look at him. He scowled and popped the button on his pants and tucked himself away. Once he was wedged back in his pants uncomfortably he excused himself to use the washroom as that sometimes settled these... distractions.\n\nOnce he was gone Lisa and Lori pounced on Tina.\n\n\"OH MY GOD! That was incredible! How did you free the beast?\" Lisa gushed.\n\n\"I just got his zipper down. It did the rest. I guess it doesn't like to be confined.\" Tina grinned.\n\n\"I know where I'd like to confine it!\" Lisa replied with a hot look.\n\n\"Are you going to be in trouble?\" Lori asked a little worried.\n\nTina thought about his reaction. He was actually having fun and was able to laugh afterwards so she thought it might be alright. Still, she would take preventative measures and apologize as soon as they were outside. She shook her head and Lori looked relieved.\n\nBen returned and asked if they were ready to move on. They left the restaurant and Tina slipped up beside Ben and tugged his hand gently. He bent down so she could whisper to him.\n\n\"I am very sorry if I embarrassed you but it was nice to play with you and I liked hearing you laugh.\" she said sweetly.\n\nBen took her face between her hands and kissed her softly. Her eyes went a little dreamy. \"I'm ok but let's try to avoid the public indecency charges in the future, alright?\" He carried her parcel in his right hand and held her hand in his left as they went to the next shop. Once more the twins spoke with the shop keeper only this time they greeted him with kisses on the cheek and hugs. They introduced him as Alois and a fashion genius. Once Tina was presented without her coat, Alois looked her over and sent her to the back with the twins and Ben. Lori plunked Ben down on a couch and sat next to him with Lisa on the other side. It was a bit of the tight fit but they tried not to lean on him so he tried to relax. Lisa got up and tugged Ben over a little on the couch so he had more room. He smiled his thanks. She then pulled a small stool over in front of the couch and she sat on that at his feet and leaned back against the couch with her arm casually resting over his legs as she watched Alois return with an armload of clothes. The man held them up against Tina and the twins helped fine tune his selection based on how they thought she'd wear them.\n\nTina went into the change room with six outfits and they left the shop with five of them. Ben had been nervous about Lisa's casual touching but aside from using his legs as an armrest she behaved and he finally relaxed. He was feeling much more comfortable around them... even though they'd both grabbed his cock earlier. He missed seeing Lori giving her sister a high five as they left the shop.\n\nThe second to last stop was a large three story shop with lots of casual clothing. Here the twins were in their element. They moved from rack to rack with Tina in tow and showed her options. Tina would try some on and if they all agreed she looked good the item went into the shop's bag. When Tina came out of the change room with the Yoga pants Ben leaned down to whisper in Lori's ear.\n\n\"Get one in every color!\" he said. Lori snorted and Tina grinned at Ben's awestruck look.\n\nBen was loaded down with bags as they left the store and they had one final stop of the day. Lisa led them two streets over to a lingerie shop. Tina looked at Ben in surprise.\n\n\"You should have something nice to wear to bed at night instead of my old t-shirt.\" he responded. \"And you need a dressing gown!\"\n\nShe gave him a brilliant smile.\n\nThey went inside and Lisa spoke with the manager. She took one look at the haul Ben was carrying and nodded. She led them into a private seating area behind the regular change rooms. Ben set all the bags down and had a seat. Tina showed the sales woman the clothes she just purchased including the tight black party dress and asked for underwear that would go with these items. The sales woman smiled at Ben as she left and a few minutes later returned with a selection of beautiful bra and panty sets. Tina approved the selection and looked over at Ben. He nodded and the sales woman took the items to the cashier's desk. \n\nLisa and Lori came into the back room with an armful of nighties. The three women looked through the items and Tina selected a lovely black satin nightie and walked back into the center change room. Lisa and Lori stepped into the change rooms on each side of Tina's. This surprised Ben and he felt a little apprehensive.\n\nThree minutes later Ben heard a gentle tapping then all three door opened and the women walked out wearing... very little.\n\nLisa and Lori were wearing matching white baby doll nighties and Tina contrasted beautifully in her black satin. The two red heads stood 5' 10\"which made Tina's 5' height in the middle seem all the more petite. It wasn't until the three women got much closer that Ben noticed what the twin's nighties were missing. He could clearly see their stiff pink nipples and their panties were missing material to cover, well, anything.\n\n\"It's only fair Ben.\" Lori said. \n\n\"We got to see your goodies, so you get to see ours.\" Lisa giggled nervously.\n\nBoth had trimmed their red nether hair into small triangles just above their exposed lower lips which were shining with more than a little wetness. \n\nBen tore his eyes away and looked at Tina who stood demurely between the two amazons. She looked shyly at Ben and his eyes assured her of everything she needed to know. She blushed and a warm tingle shot through her body. \"You look exquisite.\" he said. \n\n\"This comes in emerald green and royal blue as well.\" She said, sliding her hands across the smooth fabric on her stomach.\n\n\"You should have one of each and don't forget to get a dressing gown.\" Ben said. He crooked his finger and she leaned down so he could give her a kiss. She rushed back to the change room.\n\n\"Now, what to do with you two?\" he growled.\n\nThey bit their lips and shifted nervously. They'd hoped he would drag them to the floor and ravage them. To do to them what he'd done to Trish. After seeing the size of his cock and feeling its hardness that's pretty much all they could think of. God, just thinking about it made them wetter than they currently were, now that they were standing here boldly exposing themselves to Ben's fierce gaze.\n\n\"I assume you were hoping I'd be overcome with lust, seduced by your \"goodies\" and have my way with you. Perhaps re-enact that little story Trish told you about our night together.\" They moaned in unison as the idea made them tingle madly. They were actually getting pretty close and he hadn't touched them yet. He growled and they trembled, their knees going weak.\n\nHe saw them getting a little wobbly and he didn't want them falling. \"Get on your knees.\" he said. They immediately dropped to their knees before him. They kept their eyes down so they didn't see him look up to see Tina exit from the change room. \n\nShe saw Ben's stern and exasperated expression and the two ladies on their knees, heads down. They were trembling. She smiled at Ben and pantomimed him spanking them. He nodded at first then shook his head quickly with a scowl indicating he couldn't do that. Tina had a better idea. She gestured that he should spank their pussies. His eyebrows rose and he shook his head again but she put her hands together beseechingly and begged him silently to do it. He looked askance at her but then saw the women were shaking and he could smell their excitement. He looked at Tina one last time to ask her to reconsider but she continued to beg for her friends. He turned back to the ladies and sighed.\n\n\"I guess a spanking is in order.\" he growled and they moaned.\n\nHe leaned forward and brought his palms under their wetness. They barely had time to gasp when he slapped them gently over the surface of their wet pussies. They lurched forward and grabbed his powerful arms and he slapped them again, his fingertip dipping quickly between their wet lips."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "mature",
        "harem",
        "romance",
        "interracial",
        "novels and novellas"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-shepherd-of-ashburn-court-pt-04"
}