{
    "title": "Secret Smiles and Three Little Words Pt. 45",
    "pages": [
        "Chapter 62 \n\nAlex scanned the room nervously. There was a subtle blur of voices as people milled about. Some in random conversation, some admiring and discussing her work. Maole stood with a group of men as they looked at one of her pieces. It seemed they were each wanting it, but there was just the one. \n\nMadelyn and Charles were near another piece, it was marked 'sold' already, but they continued to look at it. As Alex thought about it, it had been marked 'sold' before the showing officially started. \n\n\"That woman had better not have bought that piece,\" Alex growled as she watched. \"If she did, she will get a good look at a kitten in need of a spanking!\" Alex smiled at her bravado as she stood there alone. She knew she would never had said that if Madelyn was in earshot. \n\nTurning she found Mike and Lena, wandering in and out among the rich and stately. They looked uncomfortable, which didn't surprise her. Like her, they didn't really belong in this group of people. \n\n\"Looks like another successful night,\" came a voice from behind her. Alex's smile grew as she looked over her shoulder as Elizabeth hooked her arm into Alex's. \n\n\"It appears so,\" Alex agreed. \"I'm so happy you are here!\" Alex said taking the raven haired goddess into her arms and hugging her. \n\n\"I'm so happy to have received an invitation!\" Elizabeth said with a gentle kiss to Alex's cheek. \"I was afraid Gavin wouldn't have allowed it, especially after my disruption of your engagement party...and the New Year's Eve fiasco!\" \n\n\"I don't want us to be enemies,\" Alex told her. \"I owe you so much...and I want to be able to repay you!\" \n\n\"There is nothing to repay, my beautiful Alexandria,\" Elizabeth smiled as she brushed her fingers down Alex's cheek. \"We helped each other.\" \n\n\"Are you happy with the way things worked out?\" Alex asked her. Elizabeth gave a noncommittal shrug. \n\n\"Things are what they are,\" Elizabeth sighed. She found Gavin walking around with Nora. Her small hand in his as they moved through the crowd. \n\n\"There is something I never thought I would see,\" Elizabeth told her as she moved closer to Alex. \n\n\"What's that?\" Alex asked her following her eyes to see Gavin and Nora. \n\n\"Gavin with a child,\" Elizabeth smiled ruefully. \"In the entire time I was with him, I never even saw him look at a child let alone show a fatherly touch.\" \n\n\"He is an excellent father figure,\" Alex told her. \n\n\"I doubt that there isn't anything Gavin couldn't exceed at,\" Elizabeth sighed. \n\n\"I agree,\" Alex nodded. \"I detect a bit of regret in your voice.\" \n\n\"Regret?\" Elizabeth whispered. \"Yeah, I have a few. But in the end, things always happen for a reason.\" \n\nAlex looked at Elizabeth for a few moments, then realized Elizabeth was done with that conversation by the way she sighed deeply then began to scan the room, turning her eyes from Gavin and Nora. \n\n\"Is Royce here with you?\" Alex asked her looking about. \n\n\"He is,\" Elizabeth frowned, her voice filled with disappointment. She nodded to a corner where it seemed all the politicians had congregated. \n\n\"Ouch,\" Alex smiled. \"Tell me how you really feel.\" Alex laughed pointing out the disdain. \n\n\"It is, what it is,\" Elizabeth shrugged. \"We are using each other for our own purposes, so there are no innocents in our relationship. He needs a wife to play the part, and I need him to get me to the White House.\" \n\n\"So your plan is still in place?\" Alex said with a shake of her head. \n\n\"It is,\" Elizabeth assured her. \n\n\"You know, my dad always said, 'Have a plan...then have a backup plan, then, just to be safe, have a backup plan, to the backup plan',\" Alex laughed as she recited the words he had spoken so many times. \n\n\"Check, check and double check,\" Elizabeth smiled secretively. \"Trust me...this girl knows how to play the game. I'm an expert at it! Royce may underestimate me, his father definitely underestimates me, but in the end, they will regret it.\" She looked to Alex with a fire in her eyes. \n\n\"They think, just because they are men, they play the game better,\" Elizabeth smiled. \"No one, no one, plays the game better than me. I have my ducks in a row! Sure, I play the pretty little piece of eye candy. Sure, I act like I don't understand...but make no mistake. I understand, and if I don't? That's what I want them to think.\" \n\nAlex stared at her for a minute. Watching her jaw tighten as she said this. Her voice brimming in both confidence and anger. Alex nodded when Elizabeth finally turned her head to her after a few moments. \n\n\"Somehow I don't doubt that one bit!\" Alex laughed. \n\n\"I am sorry about your sister,\" Elizabeth said softly after some time of just standing there being quiet, letting the anger seep out and disappear from the goddess. \n\n\"Thank you,\" Alex choked out, she didn't know Elizabeth knew. \n\n\"I know it's still painful, but...\" Elizabeth started then stopped. \n\n\"But?\" \n\n\"But behind every dark cloud, there is a silver lining,\" Elizabeth smiled as Gavin and Nora made their way towards them. \"You have a family now...a great man, a beautiful daughter and a happy life.\" \n\n\"True,\" Alex agreed. \n\nShe watched the anger flash through Gavin's eyes as he saw Elizabeth standing with Alex. Alex took in a deep breath and let it out slowly. There would be repercussions when he found out Elizabeth was here at Alex's invitation. \n\n\"I take it by the anger in his eyes and your sudden uncomfortableness that he didn't know I was going to be here,\" Elizabeth said softly. \n\n\"No,\" Alex told her. \"I sent the invitation.\" \n\n\"Girl,\" Elizabeth chastised with a shake of her head. \"I'm the last person you should be risking everything for!\" \n\n\"For my friends, 'risk' is not in my vocabulary,\" Alex told her firmly taking hold of her hand so she wouldn't leave. \n\n\"Oh my precious Alexandria,\" Elizabeth said with a disappointed shake of her head. \"That's going to cost you.\" \n\n\"Hello Beth,\" Gavin greeted casting a quick scowl at Alex. \n\n\"Gavin,\" Elizabeth smiled. \"You must be Nora.\" Nora nodded and stuck her hand out and Elizabeth shook it with a smile. \"You look like Alex!\" \n\n\"I get that a lot!\" Nora smiled. \"Grandpa says I'm too much like her!\" \n\nElizabeth nodded with a soft laugh. \n\n\"Can I go see Queen Madelyn now?\" Nora asked looking up at Gavin. \n\n\"Yes,\" Gavin agreed quickly. \"Why don't you do that, drive her crazy with your never ending questions!\" Gavin teased the little girl. Nora let out a small growl and left them there, weaving in and out of the large group of people until she found Charles who immediately bowed to her. \n\n\"What are you doing here,\" Gavin asked her coldly. Elizabeth tightened her jaw at the sudden temperature drop in the room. \n\n\"Party crashing,\" Elizabeth told him softly. \n\n\"She is not,\" Alex immediately corrected. \"I invited her.\" Gavin shifted his eyes from Elizabeth to Alex. \n\n\"You didn't have to send her away, Gavin,\" Elizabeth teased, drawing Gavin's eyes from scolding Alex back to her. \"I wouldn't have eaten her or anything...I've had my monthly quota of devouring innocent children...being the witch that I am!\" \n\n\"Don't flatter yourself,\" Gavin chuckled. \"I put you in a room with that one...she would eat you alive!\" Gavin told her with a nod of his head towards Nora. \n\n\"Seems like a perfect little princess to me,\" Elizabeth said looking at her. \n\n\"Yeah,\" Gavin grunted. \"Ask Lance just how much of a princess that one is!\" This caused Alex to laugh with him. \n\n\"Who's Lance? Her boyfriend?\" Elizabeth asked. \n\n\"No,\" Alex shook her head. \"He was the bully whose nose got broken by Nora.\" \n\n\"Holy shit!\" Elizabeth gasped. \n\n\"Yeah,\" Gavin nodded. \n\n\"Well,\" Elizabeth shrugged. \"You won't have to worry about her come dating time!\" \n\n\"She isn't going to date,\" Gavin said dryly. The girls looked to one another with a grin. Gavin turned when his name was called and he shook his head. Kissing Alex on the cheek in way of apology for being pulled away he made his leave. \n\n\"Damn,\" Elisabeth frowned. \"I'm wet and he didn't even kiss me!\" \n\n\"That's my Sir you are talking about lady,\" Alex mocked in anger. \n\n\"Damn rule abiding people!\" Elizabeth laughed with her, referencing Gavin's rules. \n\n\"How is Royce treating you?\" Alex asked. \n\n\"Royce,\" Elizabeth huffed out a laugh. Alex looked to her. \"Royce is suffering from middle aged man syndrome, if you catch my drift!\" Elizabeth held out a finger straight only to let it pretend to deflate and hang down. \n\n\"Oh my God!\" Alex gasped. She shook her head at Elizabeth. \"They make a pill for that!\" \n\n\"Yeah, so I said,\" Elizabeth shrugged and then shook her head. \n\n\"What happened?\" \n\n\"A fury I do not wish to see again,\" Elizabeth grimaced. \"It doesn't matter...the only thing that matters is where he is taking me. I play the good wifey wife, he plays the upstanding citizen. At the end of the summer, Royce will take over his father's senate seat, then next cycle, we make a move to the big dance.\" \n\n\"Then what?\" Alex asked her. \n\n\"Then? Who knows? Maybe Hillary breaks the ice and I follow in her footsteps, get my own senate seat then...\" Elizabeth shrugged. \n\n\"You want to be like Hillary?\" Alex asked her. \n\n\"God no!\" Elizabeth laughed. \"But, she is blazing a trail...one that I can follow if I play the game.\" \n\n\"It's a sad statement about our society where you call getting into our government a game,\" Alex pointed out. \"I wonder if the Revolutionary leaders ever thought of what they fought and died for, if they knew it would end up in the cesspool we have now, if they would have even come in from the outhouse to fight.\" \n\n\"If the Founding Fathers could see what we have now,\" Elizabeth frowned. \"They would turn over in their grave and ask for King George to forgive them!\" Elizabeth sighed. \"We are not the country we once were, and until we have another revolution, it will be this cesspool you so affectionately called it!\" \n\n\"Wow,\" Alex smiled. \"Listen to us! A couple of ripe old cynics!\" \n\n\"Well I'm not sure I like the word 'old' in there, but cynic is true enough!\" Elizabeth teased. \n\n\"Syurpriz krasivaya!\" Came a loud voice that accompanied an accosting from behind as Alex was lifted off the floor in a hug from behind. \n\nAlex let out a short shout of surprise and spun to see Pavy. \n\n\"Oh my God!\" Alex screamed out as she jumped in his arms and hugged him. \"Ya rad videt' vas!\" \n\n\"Damn are you working on your Russian?\" Pavy asked her as he put her down. \"You are beginning to speak it better than me!\" \n\n\"I'm trying,\" Alex teased. \n\n\"Yesli vy ne byli s neudchnikom, ID vas v posteli,\" Pavy said with a flick of his eyebrows. \n\n\"What did you just say?\" Alex asked him with a smile, knowing by the look on his face it wasn't good. \n\n\"I merely said,\" Pavy laughed, then shook his head. \"No, I had better not!\" \n\n\"He said, 'If you weren't with such a loser, I'd bed you myself',\" came Gavin's voice. \n\n\"You could have told me the asshole was right behind me,\" Pavy grumbled to Alex with a wink. \n\n\"No, it's better this way!\" Alex laughed. \n\nPavy turned and took Gavin in a big hug and then dipped him in a dance before planting a kiss on his lips. \n\n\"You crazy Russian!\" Gavin gasped as he blushed. \n\n\"Oh my God,\" Alex teased. \"Are you blushing?\" \n\n\"I just got kissed by a pig!\" Gavin defended. \"I'm trying not to vomit!\" \n\n\"C'mon,\" Pavy said confidently. \"You wanted it...and it is the best kiss you have had in years!\" \n\n\"Hey!\" Alex complained. This got both men laughing. \"You two, disappear to somewhere where you are not distracting my potential customers! Please?\" The men walked away jabbering at a hundred miles an hour. \n\n\"Must be dog and pony show time,\" Alex frowned. She knew Pavy wouldn't stay long, but she wanted him to stay a while. She loved the way Pavy could make Gavin a completely different person. One free of his formality. Free of his responsibility. \n\n\"Get the bail money ready,\" Elizabeth frowned. \n\n\"He's not that bad,\" Alex defended as she watched the two men double over in laughter as Pavy explained something in story with large arm gestures. \n\n\"Well,\" Elizabeth frowned. \"It looks like I am being summoned.\" Alex shifted her eyes to Royce who was waving at Elizabeth to come on. \n\n\"I wish you didn't have to go,\" Alex told her as Elizabeth hugged her. \n\n\"We need to get together sometime and talk. Soon,\" Elizabeth said from the embrace. \n\n\"Anytime,\" Alex said releasing her. \n\nShe watched Elizabeth move away and ease by Royce who continued to stare at Alex. The stare alone made her uncomfortable so she turned away. It made her feel like she needed a shower, his undressing of her with his eyes. It was obvious what he was doing. Picturing what she looked like undressed. Perhaps even doing things with her in his mind. If he had the balls he may have made a move. But he knew Gavin would be there in an instant, and with Pavy there now, Gavin wouldn't be alone. This made Alex look to the two men, they were deep in laughter with one another. \n\nShe didn't like the man, even after all this time, the only thing she could think of was Kelly and what the animal had done to her. \n\n*** \n\n\"So how are the King and Queen of the BDSM world?\" Royce asked as the driver closed the door. \n\n\"They're fine,\" Elizabeth frowned. \n\nRoyce had been calling them that for a while now. resentment spewed as he talked about them. It seemed anytime they went to a lifestyle party the talk in the room seemed to drift, at some point, to Alexandria and Gavin. Wedding plans and invitation, how Alexandria looked. The way Gavin doted on her. All made Royce bristle with jealousy. \n\n\"They make me want to puke,\" Royce said pulling his tie loose. \n\n\"I notice it didn't stop you from attending,\" Elizabeth pointed out. \n\n\"Any chance I get to rub elbows with the elite, it greases the money wheel,\" Royce admitted. \"Something my father has taught me.\" \n\n\"He actually taught you something?\" Elizabeth scoffed as she looked out the window. \n\nRoyce turning had her looking to him, the slap was sudden and harsh, but not powerful due to the fact of their positioning in the limo didn't allow for it. Elizabeth let her eyes fire up. \n\n\"That's my father you're talking about,\" Royce growled as the driver electronically raised the partition. He had seen enough of the couple to know what was coming, and he knew he shouldn't witness it. \n\n\"I meant it as a compliment,\" Elizabeth told him. \"You are a self-made man, that's all I meant.\" Elizabeth turned to look out the window again. Royce hook her jaw and turned her to look at him. \n\n\"What are you up to?\" Royce asked her. \n\n\"Nothing,\" Elizabeth sighed. \"I was just trying to say, I don't think he has taught you anything that you didn't already know.\" She pulled her face loose from his grip. \"You know...a compliment?\" \n\n\"Don't think, for one second, I don't know you are up to something,\" he pointed out to her. \n\n\"Don't think, for one second, that I'm na\u00efve! Treat me as such and you will be in for a rude awakening,\" Elizabeth countered. \n\n\"Is that a threat?\" Royce laughed dismissively. \"I can replace you in a heartbeat! Don't you ever forget that!\" \n\n\"Don't you ever forget, we have a deal,\" Elizabeth barked back. \"Renege on that, and you will never see the White House!\" \n\n\"Name me a President that hasn't had some whore come out and make claims such as yours!\" Royce said sitting back. \n\n\"Name me a man who was running for President that got elected after such a salacious scandal?\" Elizabeth said turning back to the window. \"You aren't President yet, my dear, you do what you agreed to do, I will do what I agreed to do...we both win.\" \n\n*** \n\n\"So how long is Pavy here for?\" Alex asked as they got ready for bed. \n\n\"A couple of days,\" Gavin smiled as he kissed the back of her neck sending shivers of pleasure down her spine. \n\n\"Is everything ok?\" she asked him in the mirror as he nibbled down her neck. \n\n\"I guess so,\" he smiled. \"Why?\" \n\n\"He normally only stays a day, if that,\" she pointed out. Gavin nodded. \n\n\"He has the big meeting here in Chicago,\" Gavin whispered as he continued his manipulations. \n\n\"It makes it hard to breathe when you do that,\" Alex whispered as she gasped softly. \n\n\"Don't worry,\" he smiled sinisterly in the mirror. \"I'm about to make you breathe heavy.\" \n\n\"Here or in the bedroom?\" Alex asked, matching his smile. \n\n\"Yes,\" was his one-word answer. \n\nHe spun her and lifter her up and set her on the bathroom counter, her eyes sparkled as he ran his fingers down her skin, across her breasts to encircle her nipples. He took them in between this thumb and forefinger and watched her tighten her jaw as he began a long slow squeeze of her nipples. Pressing harder and harder watching the pressure cause her face to twitch in increments along with the pain he was causing. \n\nRight before she was about cry out he stopped and released them causing a rush of blood to flow back in, triggering a tingling sensations that made her mouth gape slightly. He used the palm of his hands to rub ever so gently on the now engorged and sensitive nipples. This caused her to shiver with goosebumps. \n\nThe little tweak of a smile on his lips told her everything she needed to know. He was pleased. He ran his fingers down her stomach pushing apart her legs and slid his hand behind her, never letting his touch leave her body, hooking his fingers around her hips and pulling her forward to the very edge of the counter. \n\nDropping to his knees he slowly lowered his lips to her sensitive sex and made her jump at the first contact of his mouth to her outer lips. From there he pushed his tongue through, into her, causing her to arch her neck into the mirror forcing her chest out as he ravaged her from below. \n\nShe tilted her hips as best she could to pull him deeper within her, hoping to pull him so deep she would lose where she ended and he began. Her hips began rocking slowly against his face as she tried to hurry along her orgasm. After a long night of pent up stress, this was the great release she was hoping for. Something that only her Sir could give her and she wanted it. No she shook her head as her stomach began tightening. She needed it! \n\nHer hand slithered in amongst his dark hair and gripped it, pulling it gently into her folds. \n\n\"Take your fucking hand from my head,\" he growled, sending vibrations through her sex that nearly pushed her over the edge. He never stopped devouring her, instead his command was muffled slightly with his activity as he continued to tongue her closer and closer to climax. She whimpered and took firm hold of the marble counter top and held on. She couldn't stop her hips from disobeying however, as they seemed to have a mind of their own, as they continued to rock against his face. \n\nHer back began to arch, her head, stuck on the mirror as a pivot, craned her body outward as her orgasm bubbled to the surface. With the angle of her bottom half changed due to her muscle flex, Gavin let his hand slide up her body and took hold of a nipple, he squeezed and that seemed the magic button to cause her body to stop arching. Her angle returned to where he had complete access and he continued his late night snack. \n\nWith a sudden convulsion she came, her teeth digging into her lip to keep from calling out and waking both Pavy and Nora, who were upstairs, but she was sure she would not be able to control the volume of her cries if she let it go. \n\nGavin continued to lap, dip and swirl his tongue as she rode it through her orgasm. It seemed she had an eel loose within her body and it was hitting every perfect point of sexual excitement. Like some sci-fi creature created to slither into women to bring orgasm after orgasm. \n\nOnce her muscles released Gavin stood up and lifted her legs into the crooks of his arms and buried his cock in one thrust, his balls slapping her ass gently from below, the sudden intrusion of his hard cock had her gasping and yipping at the same time. ",
        "His mouth covered hers and they began kissing passionately, their tongues dueling one another in a dance reminiscent of the Tango. Strong and forceful but erotically sensual. Her eyes locked onto his and saw the passion she was feeling in his eyes. God she loved fucking this man! \n\nHe picked her up, his cock still deeply buried within her and began to carry her to the bed. With every step there was a mini-movement of his cock as it moved with his body. She hung around his neck, still dancing the Tango with their tongues. \n\nWhen he fell with her onto the bed, his cock reaching deep within her as the weight of his body forced it to, she gasped with pleasure but instantly released her hands and wrapped them in the blankets of the bed, her own makeshift bondage to keep from touching him in the throes of passion. \n\nHe lifted his lips from hers and let his wicked little smile come across his face. She matched him and they continued to pleasure each other into exhaustion. \n\n*** \n\nChapter 63 \n\nThe next day, Kari and Nora, were playing in Kari's yard, using Kari's swing set to jump from. Something Reese continually warned them to be careful doing. \n\n\"She is going to get hurt jumping from the swing like that,\" a male voice pointed out. Reese closed her eyes and hoped it was just a bad dream. When she turned she realized it wasn't. \n\n\"She'll be fine,\" Reese said as calmly as she could, looking back the girls. \n\n\"I don't like it,\" he said putting his hands on his hips. \n\n\"You worry about your own little girl,\" Reese semi-snapped. \"I'll worry about Kari.\" \n\n\"Kari is my little girl as well,\" the man growled back still staring at the two girls playing. \"And Shannon isn't a little girl!\" \n\n\"She is half your age and young enough to be your daughter,\" Reese exhaled deeply. \"What do you want Robert?\" \n\nHer soon to be ex-husband turned to look at her. \n\n\"Why haven't you signed the papers yet?\" he asked her. \n\n\"You know why,\" Reese frowned. \"My lawyers don't like the language in it.\" \n\n\"That's bullshit,\" he barked. \n\n\"Inside,\" Reese growled and got up from her chair. Robert followed her into the house and the two began to bark at each other standing in front of the sliding glass doors. \n\nNora turned her head at the voices and saw Reese and the man fighting. She looked to Kari who seemed to be unaware of the argument between her parents. \n\n\"Hey!\" Nora laughed as Kari fell into her after her jump. \"Race you to the treehouse!\" \n\n\"Yeah!\" Kari agreed and the two girls sped out the side gate and around to Nora's backyard. \n\nNora looked back as she climbed the stairs to her treehouse and saw Reese watching the girls still while the man continued to talk to her. Reese waved to Nora in thanks and Nora nodded. Nora knew what fighting parents looked like and she wanted to protect Kari from that. \n\nLater that evening, as Gavin served steaks brought in off the grill Nora sat quietly as the three adults laughed and joked about this and that. \n\n\"What's going on kiddo?\" Gavin asked her as he put her hot dog in her bun and set it on her plate. \n\n\"Nothing,\" Nora said trying to hide her true feelings. \n\n\"Really?\" Gavin smiled sitting down next to her. \"Gonna try that with me? Has that ever worked?\" \n\n\"No,\" Nora smiled. She hadn't been able to keep her true emotions from Gavin, she wished he wasn't so good at picking up her mood. \n\n\"Is it my friend Pavy?\" Gavin asked her softly. \n\n\"NO!\" Nora shook her head. \"I saw Kari's dad today...,\" Nora admitted. \n\n\"Ok,\" Gavin said waiting for her to finish. \n\n\"Why do all parents divorce?\" she asked him. \n\n\"Not all parents divorce,\" Gavin assured her stroking the side of her hair. \"In reality, half do, which is entirely too many but that's just the way it is.\" Nora nodded. \n\n\"What about him has you upset?\" Gavin asked. \n\n\"They were arguing,\" Nora told him looking to Pavy and Alex who were having their own conversation. Alex was watching though, Nora knew that because of the way Alex kept looking over at her. \n\n\"Why do they always yell at each other?\" Nora asked him. \n\n\"It's hard to explain,\" Gavin said with twisted lips as he tried to think of a way to explain it to the young girl. \"Usually, in a divorce, one of the two is very hurt.\" Gavin finally shrugged. \"I mean sometimes both want the divorce and they both know they will be better off separated. But a lot of times, one is hurt, they don't want to be divorced, but the other does. That causes resentment.\" \n\nNora turned her head to him. \n\n\"Do you know what resentment means?\" Gavin asked her. She shook her head. \"Remember the way your Grandmother made you feel...at the funeral?\" Nora bowed her head and nodded. \"That's resentment...it's an anger and sadness combined. It's probably the worst of all feelings.\" Nora nodded that she agreed. \n\n\"How did Kari handle it?\" Gavin asked her. \n\n\"I kind of hid her from it,\" Nora admitted. \n\n\"How did you do that?\" \n\n\"I told her I wanted to play in the treehouse, so we ran over there and played in it until he left,\" Nora told him. Gavin smiled and pulled Nora into a hug and kissed her head. \n\n\"You are such a sweet girl,\" Gavin said as he held her. \"But it hurts my heart that you are so knowledgeable about the way adults fight!\" \n\n\"Do you and Aunt Alex fight?\" Nora asked him. \n\n\"Everybody fights,\" Gavin told her. \"We don't do it often, but yes, we have argued.\" \n\n\"What about?\" \n\n\"The last big fight we had, was when she got pneumonia because she was being so stubborn!\" Gavin teased with a smile. \"She made me really mad!\" \n\n\"Why?\" \n\n\"Because she scared me!\" Gavin shrugged. \"She was really sick, she didn't want to take care of herself and she made her flu worse.\" \n\n\"Can the ammonia hurt you?\" Nora asked. \n\n\"Pneumonia,\" Gavin corrected with a smile. \"And yes, it can kill you if you don't take care of yourself. Which is why when you are sick you should do what your doctor tells you...But your Aunt Alex can be a bad patient!\" \n\n\"I thought we weren't going to bring that up anymore,\" Alex smiled joining in the conversation. \n\n\"Aunt Alex!\" Nora chided. \"You should do what Uncle Gavin tells you to! He's a doctor!\" \n\n\"Hey, I thought you were on my side?\" Alex laughed as Pavy chuckled. \n\n\"No,\" Nora smiled. \n\n\"Yeah,\" Gavin nodded looking over his shoulder looking at Alex. \"Like Nora says, you should listen to me!\" \n\n\"Yes Sir,\" Alex smiled while shaking her head. \n\n\"You ok now?\" Gavin asked looking at Nora again. She nodded. \n\n*** \n\nMarylyn pushed her cart slowly down the aisle of the store. Living on her own now she didn't need a whole lot of groceries so she didn't know why she was pushing a cart. Habit she guessed. \n\n\"Marylyn!\" a voice called out causing her to turn. She held her breath and frowned. \n\n\"Rev. Sellers,\" she managed to recover. \n\n\"I've been so worried about you!\" he said coming up to her quickly. \"It's been months!\" \n\n\"I know,\" Marylyn said steeling herself. \"I figured my daughters would have told you I was ok.\" \n\n\"They say that, but you don't return to the church!\" Sellers pointed out. \n\n\"I have no intention of ever returning,\" Marylyn told him causing him to blink rapidly. \n\n\"Why?\" \n\n\"Why?\" she laughed. \"Oh my!\" \n\nMarylyn shook her head. How does she handle this? Like she wants to, with bitter words meant to destroy the man before her, or like Jack and Livy would want her to? \n\n\"Rev. Sellers,\" Marylyn began slowly. \"You and your church has cost me one daughter, my marriage is barely starting to recover and I'm estranged from my granddaughter and my youngest daughter. All because of you and your church.\" \n\n\"I don't understand,\" he told her. \n\n\"God is all about love and forgiveness,\" Marylyn pointed out. \"You teach something different, your flock is judgmental and elitist.\" Sellers opened his mouth to say something, but Marylyn continued, stopping him from speaking. \n\n\"But I have learned it's not their fault,\" Marylyn smiled. \"It's yours.\" \n\n\"Mine?\" he gasped. \n\n\"You were placed in responsibility for your flock, once you accept that, the onus is on you to deliver them,\" Marylyn told him. \n\n\"Father Jack has led me to God,\" Marylyn told him. \"Truly led me to God...I don't pretend to worship Him and then go against Him when you feel it just...to shun others for something beyond their control, or because you feel it is just.\" \n\n\"I don't...,\" \n\n\"You made me push my daughter to suicide,\" Marylyn began to cry cutting him off. \"Instead of loving her unconditionally as God does me...I shunned her as you instructed. I pushed her to her end.\" \n\n\"Your daughter, had fallen so far from God that she committed a sin that cannot be forgiven,\" Sellers began, his temper swelling. \n\n\"Wrong again,\" Marylyn smiled. \"See, that's what I'm talking about...you are no closer to God than a man who has never set foot in a church. God doesn't want us to judge others. He commands us to love one another, to leave the judgement to Him for He is the only one who knows a person's heart.\" \n\n\"I learned that lesson too late,\" Marylyn said wiping her tears from her cheek. \"I lost my precious Olivia...I am trying desperately to save my relationships with Alex and Nora...and my husband.\" \n\n\"You need to come in and let me council you, it appears this Father Jack is leading you astray!\" Sellers told her. \n\n\"No,\" Marylyn shook her head. \"For the first time in my life, I am on the path with God. Not a path that leads me to God, as you have taught, but a path He walks with me on, sometimes carries me on.\" \n\n\"And you think I'm not?\" he barked. \n\n\"It's not my place,\" Marylyn pointed out again. \"God will judge you, not me. I pray He judges you well and you find yourself in Heaven, but I'm afraid for you, for you don't preach the word of God. I'm afraid He will be very unhappy with the fact He charged you with bringing others to Him but you instead lead them on some crusade not of His making.\" \n\n\"I preach from the Bible every day!\" Sellers countered. \n\n\"No,\" Marylyn disagreed. \"You read the words on the page, but you don't live them. You don't breathe them. You don't let them into your heart! You don't let the love that is there come from your lips. You instead twist them to suit your purpose!\"  \n\n\"I'm not standing here listening to a heathen who has fallen from God,\" Sellers said turning. \n\n\"I'll pray for you tonight,\" Marylyn told him. \"But know this, I won't rest until my entire family is out of your church, for it doesn't serve God!\" \n\nThat evening as Marylyn clutched her Rosary in her hand in what had become her usual back pew. It was the same one Livy had sat in. She thought of the conversation earlier that day with Sellers. \n\n\"How are you doing tonight?\" Jack asked her as he sat down. \n\n\"Good,\" Marylyn smiled. \"How is Al? Did you see him today?\" \n\n\"He's fine,\" Jack laughed. It was always her first question. All about her husband. \"Quite a comedian your husband!\" \n\n\"I know, it was one of the things that made me fall in love with him,\" Marylyn smiled. \"Is he taking his medicine?\" \n\n\"Why don't you go home and find out yourself?\" Jack asked her. \n\n\"I have to right my heart,\" Marylyn said shaking her head. \"Until then, I'm not worthy of him.\" \n\n\"He's getting kind of upset that you won't come home,\" Jack told her. \"He loves you.\" \n\nFor the past several months, Jack had been running as go between for the two. Marylyn had rented a small apartment while Al worked on getting well and going through his physical therapy. \n\n\"I love him,\" Marylyn smiled. \"But first things first, I have to right my relationship with God, Nora and Alex...in that order!\" Jack nodded. \n\n\"I saw Rev. Sellers today,\" Marylyn told him. \n\n\"How did that go?\" Jack asked her turning in his seat. \n\n\"He was a bit angry with me,\" Marylyn admitted. \"I told him I would pray for him.\" \n\n\"Well then,\" Jack smiled standing up. \"You are right with God.\" She looked up at him. \n\n\"When you can love your enemy enough to pray for him? That's what God would call Christianly,\" he pointed out with a hand to her shoulder. \n\n\"He isn't my enemy!\" Marylyn gasped. \n\n\"No?\" Jack tilted his head. \"In our conversations, your resentment and anger at his leadership says otherwise.\" Marylyn looked forward and then bowed her head. \n\n\"What if I'm wrong?\" Marylyn asked him. \"I'm just so confused with all the contradictory teachings!\" \n\n\"What does your heart tell you?\" Jack asked her. She looked up at him. \"See that is the only way to know you are doing what the Father wants. You listen to your heart. That is the big tell. Satan can tempt you with anger, hatred and lust in the guise of love. But love...love is God's domain. Satan has no knowledge of it, he was cast from heaven because of it, he can't grasp the idea. So I ask you...what does your heart tell you?\" \n\n\"That I'm right where God wants me,\" Marylyn smiled after she sat there a few moments with her eyes closed. \n\n\"You are right with the Father...now you need to work on your family. The only way that happens, is to show them you are a changed person, that you now walk with God. Trust that He will act as a liaison with your family and speak to them as well for you.\" \n\n\"Ok,\" Marylyn smiled. \"Now I just have to find the right time!\" \n\n\"And the Father provides,\" Jack smiled. \"I'm going to Chicago this weekend. Nora is having her First Communion. Alex has invited me as Nora wants me to administer the sacrament to her, in respect to Livy.\" \n\nMarylyn looked up at him. \n\n\"So, we leave Saturday morning, they are doing Mass that evening,\" Jack smiled as he left her. \"I'll pick you up.\" \n\n\"How do I convince them I am a changed person?\" Marylyn asked him. \n\n\"You don't,\" Jack said turning back to her. \"You live the way God wants you to, God will do the rest.\" \n\n\"But I want them to know I'm a saved woman!\" Marylyn said through her tears. \n\n\"In Matthew 6:1, 'Beware of practicing your piety before men in order to be seen by them, for then you will have no reward from your Father who is in heaven.'\" Jack told her. \"Live your life as God would want, let Him take care of the rest.\" Marylyn laughed. \n\n\"What?\" Jack asked her. \n\n\"I remember a dinner, some time ago, where Alex said something similar,\" she smiled. \"Can someone who doesn't go to church be saved?\" \n\n\"Of course,\" Jack shrugged. \"You mustn't think of church as being the savior. Church is only a building where like believers come together to worship and give strength to one another. Church is not a replacement for God. There will be those who attend Church religiously, if you will forgive the pun, but not enter the Kingdom of Heaven. Then there will be those who have never set foot in a Church that will be welcomed with open arms. God doesn't care what church you go to, or if you go to church, just as long as you keep the faith. Accept Jesus, live the way God wants. That's the way to Heaven.\" \n\n*** \n\n\"Why do I have to get all dressed up?\" Nora asked with a frown as Alex finished curling her hair. \n\n\"Because this is a big deal in the Church,\" Alex reminded. \"Everybody else will be dressed up as well.\" She reassured the small girl. \n\n\"Can Kari come with us?\" Nora asked. \n\n\"I guess so,\" Alex shrugged. \"It's supposed to be with family and friends.\" \n\n\"She isn't Catholic,\" Nora pointed out. \n\n\"Neither am I, neither is Gavin,\" Alex countered. \"God won't care at that moment, for He will be watching you.\" \n\nAfter a few frantic minutes of Kari rushing around to get dressed up the four of them piled into Alex's SUV. Walking into the church Nora dipped her fingertips in the basin and made the cross on her body, head to heart, shoulder to shoulder. Her priest smiled down at her. \n\n\"Hello Alex, Gavin,\" he greeted. \n\n\"Father,\" Alex said watching Nora. \n\n\"Am I supposed to do that?\" Kari asked. Nora shrugged and looked to the priest. \n\n\"You don't have to,\" he told her. \"In our faith we do it, but it is up to you.\" \n\n\"What is it?\" she asked looking in the basin. \n\n\"Holy water,\" the priest smiled. \n\n\"This is how they sort out the demons!\" Gavin teased causing the priest to chuckle. \"If it burns, you probably should wait outside!\" \n\n\"Gavin!\" Alex gasped. \n\n\"It would definitely be a good hint!\" the priest joined in. \n\n\"Go ahead,\" Nora encouraged her friend. \"Just do what I do.\" She led Kari through the motions. \"See? Nothing to it!\" \n\n\"Little Miss Nora!\" \n\n\"Father Jack!\" Nora screamed and ran to him. Jack knelt and took the girl in his arms and hugged her warmly. \"I've missed you!\" \n\n\"I have missed you so much!\" Jack said as a tear escaped from the edge of his eye. \n\n\"How do you drive in this town?\" Trevor's voice caused Alex and Gavin to turn. \n\n\"The only way to drive in this town and survive, is to drive like an idiot!\" Gavin laughed. \n\n\"Dad!\" Alex smiled hugging him. \"You look good!\" \n\n\"I always look good!\" Al teased. Alex rolled her eyes. \n\n\"What are you doing here? You shouldn't be driving!\" Alex chastised. \n\n\"I didn't drive, Trevor did!\" Al pointed. \n\n\"Hey Al,\" Jack smiled shaking his hand. Al picked up Nora and gave her a squeeze. \n\n\"Grandpa, you are going to wrinkle my dress!\" Nora warned and he put her down. \n\n\"Oh, well excuse me!\" Al told her with a wink. \n\n\"This is my best friend Kari!\" Nora introduced her. She gave a little wave. \n\n\"Marylyn,\" Al gasped when he saw her walk up. \n\n\"Al,\" Marylyn smiled. She looked to Nora who turned. \"Hello Nora.\" She said to her, her eyes already beginning to water. \"I hope you don't mind my coming, Father Jack thought it might be a good idea for me to see you on this very important day.\" Nora looked to Father Jack then back. \n\n\"You've been talking with Father Jack?\" Nora asked her. \n\n\"I have,\" Marylyn nodded. \"I go to your mother's church now...he has been helping me with my life. Helping me find the right path.\" Nora looked to Jack who nodded that what she spoke was the truth. \n\n\"I don't expect you to forgive me,\" Marylyn told her. \"But I would like the opportunity...if you let me.\" \n\nThere was a silence as the other families filtered in. Jack waited to see what Nora would do. He hoped she would be like Livy and make this easier on Marylyn, but he certainly wouldn't blame the child if she didn't. \n\n\"Grandma,\" Nora said softly. \"This is my best friend, Kari.\" Nora smiled. \"Kari, this is my Grandma.\" Kari gave her a wave and Marylyn waved back. She didn't know what to expect but it was a start. \n\n\"Nora, why don't you take Kari and find her a pew,\" the priest suggested. \n\n\"Will you sit with us Grandma?\" Nora asked her as she walked by her. \n\n\"I will if you want me to,\" Marylyn said as the tears sprinted down her face. \n\n\"I want you to,\" Nora told her. She hugged Marylyn and even Alex had to clasp her lips together to keep from blubbering. \n\nMarylyn let her hug linger and Nora smiled from within the embrace. \n\n\"Thank you,\" Marylyn whispered as she kissed her cheek. \"I would be honored to sit with you.\" \n\nNora led Kari into the sanctuary leaving the adults in the vestibule. \n\n\"Alex,\" Marylyn smiled. \"Gavin.\" She greeted them. \n\n\"Glad you could come,\" Gavin said sticking out his hand. She shook it. \n\n\"So am I,\" Marylyn smiled looking to Alex. \"Hello baby.\" Marylyn smiled at Alex. \n\n\"You are going to Livy's church?\" Alex asked her dumbfounded. Marylyn nodded. \"Why?\" \n\n\"I don't know,\" Marylyn admitted. \"I was visiting Livy one day, met Father Jack. We wound up having coffee and he invited me to come. I was surprised when I said yes.\" \n\n\"So am I,\" Alex said cautiously. \"What does Rev. Sellers think about that?\" \n\n\"Well, he doesn't like it,\" Marylyn admitted with a laugh. \"But I don't care. For the first time...well in a long time...I'm happy.\" \n\n\"You're happy?\" Alex asked. \n\n\"I'm happy with myself,\" Marylyn corrected. \"I appreciate what I have.\" \n\n\"Ok,\" Alex said not sure as to what else she should say. It was all a bit overwhelming. Part of her was jumping for joy and wanted to hug her mother. Part was telling her to be cautious. ",
        "Marylyn looked to Al. \n\n\"Did you take your medicine today?\" she asked him shortly. \n\n\"Yes,\" he mocked. \n\n\"Don't make me get my broomstick and fly over there!\" Marylyn teased. Al laughed as did the group. \n\n\"Well you could make it a lot easier on yourself if you moved back in,\" Al told her. Marylyn began to cry in earnest now. Al moved closer to her and pulled her tightly into his arms and Alex turned to Gavin who put an arm around her and gave her his handkerchief. \n\n\"I've missed you,\" Marylyn whispered. \n\n\"I love you,\" Al whispered back. \"I want my wife back.\" \n\n\"I want to be your wife again,\" she said from his embrace. \"If you'll have me.\" \n\n\"I never let you go,\" he told her. \"We just needed to find each other again...and we have.\" \n\nSitting in the pew with the girls, Marylyn sat in between Al and Alex. Al with his arm draped around the back of the pew, touching her gently with his arm as he had it behind her. The mass started and Marylyn pulled out her Rosary and Alex looked to Gavin who smiled. He gave her a half shrug. \n\nAlex carefully placed her hand over her mother's as it held the rosary and Marylyn took her other hand and enclosed it over Alex's. They watched Nora get called up with the other children that were getting their First Communion. Nora was last as she had been told by her priest. \n\nWhen her time came, Father Jack came forward in his robes and stood before Nora giving her a wink and went through the sacrament with her, carefully placing the wafer on her tongue with a proud smile. While he couldn't see her, he could feel Livy and knew she was pleased. \n\n*** \n\nAlex pulled out extra towels from the closet and went towards the room her parents were going to share. Walking in she found them kissing one another. \n\n\"Gross,\" Alex teased. \n\n\"Do we comment when you kiss Gavin?\" Al asked her. \n\n\"Yeah, but you guys are my parents for Pete's sake...it was gross when I was a kid and it's still gross!\" Alex said setting the towels down on the dresser. She gave them a wink and left them alone. \n\nWalking down to Father Jack's room she tapped on the door. \n\n\"Come in,\" Jack called through the door. \n\n\"I just brought you some towels,\" Alex told him holding them up. \n\n\"Thank you,\" Jack smiled. \"And thank you for letting me stay here tonight.\" \n\n\"You're welcome,\" Alex told him. She stood there thinking of how to put her question. \n\n\"Is my mother really going to your church?\" Alex finally asked him. \n\n\"She is,\" Jack confirmed. \"She is trying to find God...she is on the right path.\" Alex nodded. \n\n\"That in turn will lead her back to Al and righting that marriage,\" Jack pointed out. \"Seems to have taken a big step today.\" \n\n\"It has,\" Alex agreed. \"Thank you for that.\" \n\n\"I didn't have much to do with it,\" Jack shrugged. \"God was the big player.\" \n\n\"Yes, but you initiated that meeting,\" Alex laughed. \n\n\"No,\" Jack disagreed. \"That was Livy.\" \n\n\"What?\" Alex asked him. \n\n\"For a while there,\" Jack said sitting down. \"I was...seeing her even though I knew she was gone. Having conversations with her.\" \n\n\"Like hallucinations?\" Alex asked him. \n\n\"I don't think so,\" Jack sighed. \n\n\"You mean ghosts?\" Alex asked coming to sit next to him on the bed. He nodded. \"Is that a good thing or a bad thing? I mean...does that mean she is in...,\" \n\n\"She told me she was in a 'very good place',\" Jack assured her. \"If you believe in ghosts that is.\" He looked to see a perplexed look on Alex's face. \"What?\" \n\n\"Nothing,\" Alex shook her head. \"Something Nora asked a while back. Do you see her anymore?\" \n\n\"No,\" he smiled. \"I wish I was, but no.\" Alex nodded and made for the door. \"What did Nora ask?\" He asked her stopping her. \n\n\"She asked Gavin if he believed in ghosts,\" Alex told him. \"And there are times I hear her talking to someone...but I know she is alone.\" \n\n\"Kids play,\" Jack told her. Alex nodded. \n\n\"Yeah, that's what I thought too,\" Alex said turning at the doorway. \"Then you told me you were seeing Livy.\" \n\n\"I was distraught,\" Jack pointed out. \n\n\"Did you believe it was her?\" Alex asked. He nodded. \"Maybe there are ghosts, maybe she is talking to Nora now.\" Alex shrugged and left him. Jack then closed his eyes and thought of his last encounter with Livy there in his bedroom in the rectory. \n\n\"I'm going to watch Nora for a while,\" she had told him that night. \n\nWalking outside Jack found Nora and Kari saying goodbye to each other through the fence. Kari ran off to where her mother was waiting by the back door and Nora turned and smiled at Jack. \n\n\"Hey,\" he smiled. \"I have something for you.\" \n\n\"What is it?\" Nora asked running to him. He sat in the grass and she joined him. \n\nHe pulled out a rosary and handed it to her. \n\n\"I have one,\" she said looking at it. \n\n\"Yeah, I know, but this one,\" Jack waited until his breath was back as this was difficult. \"This one belonged to your mother.\" Nora looked at it and her hand shook. \"I think she would want you to have it. I have been using it myself for a while, but now I think she would want you to take care of it for her.\" \n\nNora nodded and began to cry. Jack picked her up and put her on his lap. \n\n\"Your mommy would be so proud of you today,\" Jack smiled kissing her head. \n\n\"I miss her,\" Nora whispered. \"I love being with Aunt Alex, but...,\" \n\n\"But you wish you were still with your mother?\" Jack finished for her. Nora nodded. \"There is nothing wrong with that. I don't think Alex or Gavin would be upset you feel that way, they love you and are going to take care of you, that's all that is important.\" \n\n\"Father?\" Nora began slowly. \n\n\"Yes?\" \n\n\"In my school some of the kids say if you kill yourself you can't go to Heaven,\" Nora whispered. \n\n\"In some cases that is true,\" Jack told her causing her bottom lip to tremble. \"But that is not always the truth.\" \n\n\"What about my mom?\" Nora asked him. \n\n\"What I'm about to tell you will be very difficult for you to understand, but I want you to hear it,\" Jack told her turning her chin to face him. \"As your mother was...dying...she realized what a horrible mistake she had made! She couldn't believe that she had done what she did! She was so worried about you.\" Nora was crying now and Jack was as well so he pulled her tighter. \"The Bible says, all we have to do is ask and truly be repentant and we are forgiven...your mother asked...she was repentant. I gave her Last Rites and she was forgiven.\" He held her chin. \n\n\"Now look at me and pay close attention,\" he commanded. Nora nodded. \"Your mother is in Heaven, she is waiting for you there and watching over you always. Don't ever think otherwise.\" Nora wrapped her arms around Jack and they both shared a good cry. \n\n*** \n\nAlex was finishing the dishes when she saw the light on in her studio. She wiped her hands off and went to shut it off. She found her mother in there surveying some of the artwork. \n\n\"Oh, sorry,\" Marylyn said standing up. \"I hope you don't mind? Gavin showed me the room.\" \n\n\"No,\" Alex said crossing her arms across her chest. \"I don't mind.\" \n\n\"What is this?\" Marylyn asked pointing to an African sunset. \n\n\"Gavin and I went to Africa, remember?\" Alex asked her. \"I was up all night giving vaccinations, as I was headed to bed I saw the sun coming up, I couldn't pass it up so I painted it.\" \n\n\"It's beautiful,\" Marylyn smiled. \"I love the way the colors wash into one another.\" Alex said nothing and didn't join her mother in the studio, instead standing in the doorway. \n\n\"Still don't know how to take me, huh?\" Marylyn asked picking up another painting. This one was of a scene of villagers. \n\n\"I'm still...,\" Alex shrugged. \"It's just...hell I don't know...shocking.\" \n\n\"I agree,\" Marylyn smiled. She walked over to her daughter. \"Of all the people who have a right to hate me...you do. So I don't blame you if you do.\" \n\n\"I don't hate you,\" Alex said carefully. \"I have never hated you...I...I just wanted your approval more than anything I guess.\" \n\n\"And I was a fool not to give it,\" Marylyn smiled. \"So let me say this. I am happy you found a man who makes you smile, a man who loves you. I am happy that you continued with your art despite my awful attempts to keep you from it because you have a gift!\" Marylyn moved closer to her daughter. \n\n\"In all the things I wish I could change,\" Marylyn whispered. \"It's the relationship you and I don't have.\" Alex nodded as the tear leaked from the side of her eye. \"I hope in time, we will have the relationship you wanted so long ago. I want it badly now that I know just how precious it is.\" \n\n\"Mom,\" Alex shook her head. \n\n\"No,\" Marylyn smiled. \"I know it's a lot to process but know I am truly sorry for all the wrongs I have done to you. I don't deserve your forgiveness, but I hope one day to receive it.\" Alex nodded and Marylyn put her arms around her daughter. Alex followed suit. \n\n\"I love you Alexandria, I wish I had been a better mother to you,\" Marylyn choked out. Marylyn kissed Alex's head and then stepped back. \"Goodnight.\" \n\n\"Goodnight Mom,\" Alex whispered as Marylyn walked past her. \n\n*** \n\nAl carried Marylyn's bag into the house despite her protests. Walking into her home she found it comforting to be back. She looked around and found it exactly as she had left it. Al set the bags down and followed his wife from room to room. Walking into the living room she stopped. Things were not exactly as they were. In place of where the family photo once was proudly displayed, there sat a painting, one she remembered without a problem. \n\n\"Oh,\" Al frowned as he looked to where she was looking. There on the wall was Alex's recreation of Andromeda, painted from memory from the New York Metropolitan Museum. \"I will flip that back around to the family portrait.\" Al told her as she touched the paint gently. \n\n\"No,\" Marylyn smiled. \"Don't you dare cover up Alex's work! We will just have to update the family portrait and hang it somewhere else. But she stays right here.\" Marylyn smiled turning to him. Al nodded. \n\n\"She is quite good isn't she?\" Marylyn asked going back to him. \n\n\"She is,\" Al agreed. \"That comes from my side!\" He teased. \n\n\"That I don't doubt,\" Marylyn smiled taking the jab. \n\n***"
    ],
    "authorname": "CJT",
    "tags": [
        "oral sex",
        "bathroom sex",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-45"
}