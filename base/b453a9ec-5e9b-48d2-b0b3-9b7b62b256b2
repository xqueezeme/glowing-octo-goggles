{
    "title": "Annie & June Ch. 03",
    "pages": [
        "<p align=center>PREFACE</p>\n\nThe following is a \"true story of my imagination\" and continues the affair between two nursing moms which began in \"Annie & June\". While reading parts 1 and 2 are encouraged, I don't believe it's necessary to enjoy this story. In these next few episodes, Annie and June get away for a weekend \"shopping\" trip that turns into two incredible nights of debauchery when the local sales girl joins the fun! This chapter focuses on day 1 of the 2 day shopping trip. Chapter 4 will focus on day two. \n\nA special thank you to Matron222 for help in refining and improving the story. Thank you!!!\n\nI hope you enjoy reading it as much as I enjoyed writing it! As always, names, places, situations, etc. are all a figment of my imagination and any resemblance to someone or some place you know is purely coincidental (but probably enjoyable for you)!\n\n* * * * *\n\n<p align=center>PLANNING THE \"SHOPPING\" TRIP</p>\n\nThe telephone in the Kitterly household was on its third ring when Jack picked it up. \n\n\"Hello?\"\n\n\"Jack?\"\n\n\"Yes?\"\n\n\"It's June.\"\n\n\"Hey, June, how are you?\"\n\n\"Fine. I was calling to talk to Annie about a getaway weekend of 'shop 'til you drop' that we discussed at the picnic,\" June said.\n\n\"Ah, yes, the 'shop or die' weekend, as Annie referred to it!\" Jack replied before adding, \"Let me get her for you.\"\n\nHalf a minute later, Annie's pleasant voice came on the other end of the phone line.\n\n\"Hello?\"\n\n\"Hey, Annie!\"\n\n\"Hi June, how's it goin'?\"\n\n\"Good. Hey, I was wondering if you were still interested in getting away for a weekend of unadulterated...uhm...shopping?\" June asked, somewhat hesitantly, pausing intentionally before the word 'shopping' to make it clear to Annie that she was referring to a weekend of more than shopping. \n\nEven now, after having had two encounters with Annie, June was unsure of Annie's reaction. It wasn't because she thought Annie didn't like her. It was more because of the situation. Heck, even June, herself, still wasn't sure she should be pursuing this. She was married to a wonderful man with two beautiful children! And, so was Annie! But then, June's senses would recall their first encounter together and the delightful taste of Annie's pussy, not to mention the sweet taste of Annie's milk on her tongue. June's rational thought would vanish, as her own pussy would begin to wet at the memories. Annie's tanned body...her pussy, her tits, and especially her milk, were an aphrodisiac, a drug from which June could not stay away.\n\n\"Of course I'm still interested!\" Annie replied excitedly. \"In fact, I've been looking forward to it very much!\" The younger woman had begun to wonder if the weekend would really happen, and if she would have another chance to be alone with June. The idea of being intimate with the older woman excited Annie more than her own husband. Unlike June, Annie had not given much thought to the consequences this relationship could bring, primarily because Jack had been somewhat of an asshole the last year or so, and Annie was, quite frankly, tiring of him. She loved her children and would die for them, but after the first night with June, Annie realized two things. First, that her sexual relationship with Jack was worse than she'd thought. And second, she realized that she may have been a closet lesbian, or at a minimum a definite bi-sexual, for she found that she absolutely loved the taste of another woman's pussy, particularly June's pussy. Perhaps, it was the added dimension of the whole nursing thing that made it so kinky for Annie, but whatever it was, she knew she had to have more. Soon.\n\n\"Good, glad to hear it!\" Replied June. \"I was thinking about driving up to the Tellville Outlet Mall,\" she added.\n\n\"Oh, I've never been there. That's the one up north, about two hours away, right? I heard they have tons of stores,\" Annie replied half-sincerely.\n\n\"Yeah, that's the one. They have over a hundred outlets ranging from children's clothes to camping stuff to lingerie to kitchenware! There are also two or three decent hotels right there, if I remember correctly,\" June ended.\n\n\"Great! When were you thinking of going up?\" Annie asked while making a mental note to drag June into the lingerie outlet.\n\n\"Well,\" June replied, \"it depends. Did you ever pick up an electric pump as we talked about and have you been saving your milk for Timmy?\"\n\n\"Yes, I did! I went out the day after the picnic and got the same model you have. It took a few days to get used to it, but once I got the hang of it, I thought maybe I had a future in the dairy business!\" Annie quipped. June laughed loudly as Annie giggled herself.\n\n\"Yeah, the electric pumps make a world of difference, don't they?\" June asked.\n\n\"Yeah, they do,\" Annie replied automatically.\n\n\"So, when's a good weekend for you?\" June asked.\n\n\"Well, we have to go out of town in two weeks and then I have my sister in-law's baby shower the following weekend, so either this weekend coming up or in about four weeks.\"\n\nJune cringed at the thought of going four weeks without having Annie. The older woman didn't know how Annie could hold off any longer. June found herself masturbating more and more, waiting for their next encounter.\n\n\"Actually, Annie, this weekend would work for me. Al has no plans, and I've already cleared it with him.\"\n\n\"Okay, well hold on, let me talk to Jack,\" Annie replied.\n\nJune could hear muffled voices over Annie's hand cupping the phone, and it sounded like heated words were being passed. Finally, after nearly a minute, Annie came back on and said, \"Okay, this weekend it is!\"\n\n\"Are you sure?\" Annie asked, not wanting to pry but not wanting to cause problems either.\n\n\"Yeah, this weekend's fine. Jack wanted to watch some stupid poker tournament or something, but he can do that and watch the kids. He's just spoiled,\" Annie replied.\n\n\"Well, he won't be so spoiled now that he has to get up to give Timmy the bottle!\" June mentioned.\n\n\"That's right,\" Annie said indignantly.\n\n\"Okay,\" June replied.. \"So this weekend it is. I can't imagine all the hotels would be full. I'll make the reservations and drive. \n\n\"How do you want to split the cost?\" Annie asked.\n\n\"Oh, I dunno...we'll figure it out later,\" June replied.\n\n\"Okay, sounds like a plan!\" Annie replied getting excited again at the thought of seeing her friend.\n\n\"Okay, I'll send you an e-mail with the details,\" June said.\n\n\"Okay!\"\n\n\"Okay, well, I better go. Billy's touching Tess, and you know how that goes?\"\n\n\"Oh...yeah! I'll see you soon!\"\n\n\"Okay, bye!\"\n\n\"Bye!\" \n\nBoth women hung up their respective telephones, each in their own minds following their fantasies of what it will be like to feel the other. June let her hand slither down her jeans and massage her crotch. Across town, Annie put her hand up her short skirt to feel the cotton fabric of her panties. She rubbed the gusset intensely, feeling the initial spark of sexual arousal. Neither woman really understood how they had become so attracted to one another.\n\nLater that night, with the children and Jack asleep, Annie checked her e-mail. Amidst all the Spam, there was an e-mail from June, titled 'This weekend'. Annie clicked on it and read:\n\nAnnie,\n\nI booked us into the Tellville Inn for two nights, this Friday and Saturday. I'm leaving work at noon and was hoping to pick you up around two so we can get an early start. I remember you saying that Jack had every other Friday off, so let me know if that works. Check-in's anytime after 3. I thought we could keep it low-keyed Friday night and maybe order room service so we don't have to \"leave the room\" We can hit the shops on Saturday morning and be back by Saturday afternoon for...whatever.\n\nLet me know. June\n\nAnnie couldn't hit the reply button fast enough:\n\nJune,\n\nThat'll work! Yes, Jack's company gives him the choice of working 4, 10-hour days every other week, so that he can get Friday off! And this Friday, he's off! I'm free too. Ever since I quit work to be a full-time Mom, I find my schedule to be a lot more flexible! J\n\nRoom service sounds good. Can't wait to \"taste the food.\"\n\nA\n\nAnnie hit 'send' and then deleted June's note and her own reply for precautionary measures, committing the contents to memory. It was only Tuesday, so she would have to wait three long days before sinking her tongue between her friend's nether lips. Annie groaned and closed her eyes, letting her hand fall to her crotch again, the sensations already buzzing in her pussy. She must, she thought, remember to shave her pussy and prepare herself for her lover's mouth.\n\n<p align=center>THE WEEKEND SHOPPING TRIP FINALLY ARRIVES \u2013 DAY 1</p>\n\nFinally, the weekend had arrived as Annie waited patiently in her living room for June to arrive. The kids' laughter emanated from the basement, where they were playing while Jack watched television. Annie stared at her watch for the umpteenth time...twenty after two.\n\n\"C'mon,\" she whispered to no one. A loud thump downstairs caused her to turn toward the basement door.\n\nJust then, the car horn from June's minivan startled Annie as she looked out and saw June wave. Annie motioned with her index finger to wait a moment and ran downstairs to kiss her kids and husband goodbye. Walking briskly through the front room, she snatched up her overnight bag and headed out toward June's minivan.\n\nJune gazed at Annie intently, admiring her outfit and body, as she threw her overnight bag in the back and climbed into the passenger side. \n\n\"Hey,\" Annie said to June as she climbed into the vehicle, her black skirt riding high and offering June a glimpse of the inside of her thigh.\n\n\"Hi! You look great!\" June said referring to Annie's appearance. Perhaps subconsciously for June's sake, Annie had made herself up a bit more than usual as she had dressed in a tight, black skirt that ended at mid-thigh and was complemented by matching colored shoes and a black-and-white striped blouse that bulged with her ripe breasts. Natural, sheer pantyhose, June's favorite, covered Annie's toned legs. Her long, brown hair tumbled perfectly over her shoulders and complemented her bronze, glowing skin acquired through years of tanning. Some natural-tone eye shadow and blush, along with a dark eyeliner and dark lipstick completed her appearance. \n\n\"Thanks! And you remind me of the old days at the office!\" Annie said referring to June's appearance. \"But on you, it looks...wow!\" Was all she could say. June still had on her work outfit; a striking, navy-blue, two-piece suit, the snug jacket buttoned completely and pants perfectly pressed; along with a rose blouse underneath, its lapel laying over the jacket's lapels. Sexy, three-inch heeled pumps completed the outfit as beautiful, 18-karat gold earrings and bracelet did not go unnoticed to Annie. June's short, brown hair framed a beautiful face; touched up with some light make-up \u2013 a bit of tiel-colored eye shadow and very soft, natural blush and lipstick \u2013 nothing more. In her position as a Manager over a team of mostly men, June had to tone things down in order to keep the focus on work and not on her.\n\nAnnie couldn't stop staring at June. This was the first time she'd seen her friend in her work attire, and Annie couldn't get over how confident and in control June looked. Annie suddenly realized the missing dimension of their relationship. It was June's maturity and her ability to take control. Annie felt good about that, as if June had suddenly turned into her surrogate mother. \n\n\"Thanks,\" was all June said as she pulled away from Annie's house, making her way toward the freeway. The women made small talk for over thirty minutes, talking about everything from work, to their husbands, their kids and mutual friends. \n\nFinally, Annie turned the subject to sex. \"So, are you looking forward to the weekend?\" She asked.\n\nJune gazed between the road and her passenger, before responding in barely above a whisper, \"Yes, very much. Don't let the professional look fool you, Annie. I had to masturbate twice today, in the restroom at work, to take the edge off, thinking about what lay in store.\"\n\nAnnie stared with amazement at June. \"What a compliment,\" she thought! Not even her husband would have admitted to masturbating midday thinking of her. Images flooded Annie's mind, as she pictured June enter the women's restroom at her work; pull down her pants and begin rubbing herself. The images sent shivers of pleasure up Annie's spine.\n\n\"And just what were you thinking about,\" Annie replied teasingly, as she sucked an index finger and ran it's long, red fingernail casually across her bottom lip.\n\nJune continued flipping her gaze between Annie and the road, simply replying, \"What do you think I was thinking about?\" She wanted to make a wiseass comment but was unable due to her need to focus on driving.\n\n\"Oh...I dunno,\" Annie teased. \"Maybe my cute, little, bald pussy?\" She added, suddenly turning sideways in the seat to face June and spreading her legs.\n\nJune's gaze now alternated between the road and Annie's crotch. Her bald mound pressed snugly against the pink thong clearly visible between the thigh high hose she was wearing. June stared hungrily at Annie's pussy before glancing into Annie's eyes and licking her lips. \"Yes,\" she said, \"I played with myself thinking of your smooth, wet cunt, and I can't wait to taste you again.\"\n\n\"Want an appetizer?\" Annie teased further, as she pulled the thong aside, exposing her bare, glistening pussy. Annie ran an index finger longingly through her moist slit and into her pussy, letting her finger soak up her feminine wetness. Raising her hand, she leaned over and gently ran the wet finger across June's bottom lip before slipping it inside her mouth, watching the nicely colored lips of her friend suck in the gift.\n\n\"How do I taste...mommy?\" Annie continued to tease her older friend.\n\nJune let out a soft groan and her pussy twitched involuntarily as she softly licked and sucked on Annie's finger. Her eyes were afraid to leave to road for fear of driving off of it. Annie watched amused as June let one hand fall from the steering wheel to her crotch, rubbing her pussy through her neatly pressed pants. Annie's arousal grew immensely as she watched her proper looking friend, so well dressed and confident looking, crumble with the least bit of sexual provocation. \n\nEnding the teasing game, Annie removed her finger and leaned back into her seat. She turned to face forward and adjusted her skirt. June glanced over at her friend and pictured her face buried in Annie's pussy, her tongue piercing her soft lips and scooping up her sweet nectar.\n\nAnnie turned and made eye contact with June, offering an innocent smile, as if the lusty act just performed had never taken place. June smiled at her bosomed friend, before turning her attention back to the road, thinking how she'd like to soon dominate this little vixen beside her. It was obvious that Annie enjoyed teasing and exhibitionism, so for the rest of the trip, June fantasized how she could make it happen. They had a little over an hour to go, and the rest of the trip was made in horny silence. \n\nApproximately seventy minutes later, they pulled into the parking lot of the Tellville Inn. June found a parking spot and cut the engine. Annie stretched and said, \"That wasn't too bad,\" and before she could react, June grabbed the back of Annie's head and kissed her passionately. June's tongue drove into Annie's mouth and coiled around her tongue as their saliva mingled. Annie let out a soft moan, as the kiss grew tender. \n\nWhen the kiss broke, June kept her face only inches from Annie and whispered, \"I'm gonna make you cum like you've never cum before, you little teasing bitch!\"\n\nAnnie groaned again in anticipation.\n\nJune retreated and exited the vehicle followed by Annie. \"Wow, did you remember the kitchen sink?\" Annie said sarcastically, referring to June's oversized, huge overnight bag. \"What do you have in there?\"\n\n\"Oh, just stuff,\" June replied and picked up the pace. \n\nWith both of their bags in tow, they checked in and went up to their room. The hotel was a non-descript, square building that was nicely landscaped and sat conveniently about five hundred yards from the outlet mall. The interior was clean and pleasantly appointed. After checking in, June and Annie made their way up to the top floor and into their room. \n\nTwitching her nose, Annie said, \"Is this a smoking room?\"\n\n\"Yes,\" June replied dropping her bag on the suitcase rack, as Annie threw hers onto the bed.\n\n\"I didn't know you smoked?\"\n\n\"I don't. It's for the candles I brought,\" June answered as she made her way into the restroom to urinate.\n\nAnnie scanned the room. Directly across from her, two Queen Anne chairs sat with their backs to the window; a small, round table with a built-in lamp rested between them. A large walnut-stained hutch rested along the long wall to her left; its door opened to reveal a 25-inch television inside. Next to the TV, an assortment of liquor in small bottles seemed to beckon Annie. The bottom half of the hutch contain a mini-fridge and microwave. Next to the hutch was a matching desk and chair to conduct business. Across from the hutch and desk was the centerpiece of the room \u2013 a huge, king-size bed with what looked like a pillow-top mattress. By comparison to the huge bed, Annie noticed a rather small bedside table that matched the hutch and desk. As Annie crawled onto the bed and laid on her stomach to relish its comfort, she noticed a small gift basket atop the pillows. Crawling to it, she saw it contained a small bottle of California sparkling wine, two fluted champagne glasses and some gourmet chocolates. Next to the basket, a single rose lay atop the pillow.\n\n\"Hmmm...that's interesting,\" Annie said loud enough for June to hear, \"there's champagne, chocolates and a rose on the bed! Wonder what that's all about?\"\n\n\"Oh, I got the romance package,\" June said amusingly. \"This is their 'Lover's Suite' from what I gathered when I made the reservation. Come check out the tub.\"\n\nAnnie made her way into the bathroom and stared at the large, two-person Jacuzzi tub, obviously a big investment for a $60 per night hotel. \"Nice!\" Annie groaned as she caressed the tub.\n\n\"They have three of these kinds of suites. This one is their best, but I'm not sure what that means.\"\n\n\"You get better chocolates,\" Annie joked. Both women laughed.\n\n\"I'm going to shower. I feel grungy from working all day. I shouldn't be long,\" June said, grabbing Annie's hand momentarily and squeezing it.\n\n\"Okay,\" Annie replied flashing her friend a quick smile. To June's surprise, Annie didn't exit the bathroom, but stood, with arms folded, against the doorframe. The younger woman looked at June, with a deep starry eyed gaze, as if she was looking at a Goddess. \n\nJune understood what Annie wanted but felt a little intimidated. Yet, she wanted to do this for the younger woman. The older woman coughed to gain her composure, seeing how this would be the first time she ever officially stripped while another woman watched intently. Unbuttoning her pants, she slipped them off and put them neatly on a hanger. Annie was amazed at June for being so logical, knowing that hanging pants came first on hotel hangers. There, she stood in her white; high cut panties, blouse and jacket, pretending Annie wasn't staring at her lover. Next came off the jacket, followed by the blouse. Annie looked on with awe, unable to describe how beautiful June looked in her large bra and panties. In preparation for the weekend, June had foregone wearing her nursing bra for a more fashionable lacy one that nonetheless gave solid support to her milk-filled tits. June's face reddened as she undid her bra and let it slip to the floor. She had been intimate with this woman, yet she couldn't explain her shyness. There was something about undressing, she figured. Her large, red aureoles were immediately visible as the large breasts flopped freely from June's chest. Annie admired June's body, her broad shoulders and the way the older woman's breast's hung from her chest. Looking away from Annie, June put her thumbs in her panty band and slid them to the floor. The older woman's pussy came into view as June stood there, with her underwear at her feet. Annie still marveled at the stark contrast between June's neatly trimmed, yet, hairy pussy and her own bare, smooth cunt. Annie licked her lips.",
        "Annie felt spasms of pleasure spark in her body as she watched June undress. The formal executive of only moments ago was now a naked, porcelain-like doll, ready to be played and pleasured. \n\nWith June standing still and apprehensive, Annie found herself staring at June's panties on the floor. On impulse, Annie bent and retrieved them. She stared at them for a second before glancing at June, cracking a wicked grin and bringing the panties to her nose and inhaling June's musky scent as her eyes closed. June could tell Annie was seeking evidence that June's admission was true, that she had masturbated earlier that day. Bringing the panties close again, Annie's eyes fluttered as her nostrils flared; smelling the unmistakable scent of a woman's cum. Annie shivered again, imagining June in the stall of her work restroom, her pants and underwear around her ankles, sitting on the toilet, as she strummed her exposed nub. All the while, thinking of Annie.\n\n\"Thanks, baby, for telling me,\" Annie whispered to June as she hugged the older woman, panties still in her hand. \n\n\"I'd love to see you do it sometime, June, just for me,\"\n\n\"I'd like that,\" June replied, kissing the young mother before her. The two stood silent for a moment, acknowledging the growing bond between them. \n\nJune turned and entered the shower. \n\nAnnie began to undress, carefully removing her skirt and blouse. She had slipped off her shoes upon entering the hotel room. Standing in her thigh highs and black bra, she slipped off her thong and ran June's panties through her pussy. She closed her eyes momentarily, stifling a moan. She knew already she wanted to keep the panties, something she'd never done before. Annie removed her bra and slipped off her hosiery. Quietly, but ready to surprise June, she moved the curtain aside. June had her back to Annie; her eyes closed as she shampooed her hair. Annie slipped into the tub behind her and embraced her from behind.\n\nJune yelped in surprise before relaxing as Annie ran her hands around June's stomach and up to her tits; cupping the large, fleshy orbs. \"Mmmm...that feels good,\" June remarked rinsing the soap from her hair and face as Annie's hands massaged her breasts and tweaked her nipples. With her hair rinsed, June opened her eyes and turned into Annie to face her. Annie wasted no time to kiss her friend. Her tongue forced June's mouth open and sucked it, as June moaned again into Annie's mouth. Annie's hands moved to June's backside, the tips of her fingers slipping into the crack of June's ass, gently squeezing it. Their large, wet tits crushed together as their respective nipples contracted upon contact. Their pussies grazed against each other as they both moaned simultaneously. The kiss grew hotter as June likewise ran her hands over Annie's ass; both women pulling the other into her as their tongues dueled in delight. The fleshy folds of their cunts rubbed together, bringing their nipples to stiff peaks as they poked into the other.\n\n\"Mmmm,\" June moaned before breaking the kiss and gasping, \"My little girl can't wait, can she?\" She resumed their kiss.\n\nAnnie kissed June feverishly before breaking the kiss and moving her lips to June's breasts. Taking a nipple between her lips, Annie flicked the rubbery flesh with her tongue before sucking voraciously. June threw her head back and into the path of the cascading water as she felt her breast milk rush out of her breast and into Annie's mouth. \n\n\"Mmmm,\" Annie moaned at the taste, again, of her friend's milk, the sweet nectar splashing her tongue before trickling down her throat.\n\n\"Fuck!\" June gasped raising a hand to her other breast and squeezing it roughly. \"Oh, it's been so long, baby!! Suck my nipple, Annie!! Drink mommy's milk!!\"\n\n\"Mmmm!!!\" Annie moaned into June's tits as her hands continued to massage June's heart-shaped ass, her hands gently spreading the cheeks and grazing her nether hole with her fingers.\n\n\"Mmmm!! You like my ass?\" June asked, moaning.\n\n\"Mmmm-hmmm,\" Annie moaned into June's breast as she continued sucking and drinking while staring into June's eyes. Detaching herself from June, she hissed, \"I love your ass. I've wanted it ever since I saw it that first night,\" she said, kissing June hard, before shifting her attention to June's other breast. She latched onto it and sucked. Within seconds, the sweet milk flowed again down her throat. June was grateful for the relief from the build-up of pressure in her full breasts.\n\n\"Come on baby, empty Mommy's jugs for her!\" June groaned. \"Harder Annie, harder,\" she encouraged the younger woman. June felt momentarily ashamed for saying such things, especially considering that recently, she had begun to get turned on when nursing. As an expert in nursing, June knew that it was only natural for a woman to feel sensations of pleasure when nursing a child. But, those sensations had been more frequent, lately, and more intense, as June's mind would recall her encounters with Annie.\n\n\"Let's take this to the bed!\" June said finally, feeling her breasts less tight.\n\nAnnie released her hold on June's nipple as a stream of milk hit her in the face. June liked the milked-smeared face of her friend, and smiled wickedly before she stopped for a moment.\n\n\"Wait!\" June cried as she took hold of her two breasts, squirting the last drops of her milk onto the younger woman's face. Annie stood there and felt the milk splash over her face, licking what came close to her mouth. June never felt so proud of her womanhood, her breasts big and bold in front of her, squirting her milk like two small fountains. Annie sneaked a hand to her bald mound and rubbed it, as milk ran down her face. She moaned as June smiled again and then finally turned and switched the shower off. June stepped out and grabbed a towel. Both women dried off quickly before moving to the bed\n\nAs both women knelt on the bed facing each other, Annie smelled the rose while gazing into June's eyes, smiled and tossed it over her shoulder before moving into her friend for a kiss. June pushed Annie down into the soft pillow top mattress and continued kissing as she massaged Annie's grapefruit size tits. Breaking the kiss, she moved to Annie's breasts, all the while staring at Annie and whispering, \"my turn,\" before taking the tip of Annie's breasts into her mouth and sucking on the nipple. A few seconds later, Annie's own milk trickled into June's mouth, as she swallowed, savoring the sweet taste.\n\n\"Ah, yeessss!!!!\" Annie hissed, arching her back and closing her eyes. \"Suck my tits, Juney!!! That's it baby!!!\" She added running a hand through June's wet hair and gazing down at her. Annie was excited all over again at the idea that an adult would suckle her tits. Annie liked the mature body against her and the feeling of her tits being sucked and pulled by her friend.\n\n\"Mmm-hmmm,\" June moaned into Annie's breast, as milk leaked from the corners of her mouth, running down her chin and neck. June sucked in the milk, feeling the warm liquid slide down her throat. Not your wildest fantasy could have prepared her for the pleasure Annie's tit was giving her. Annie's nipple grew to the size of the tip of June's pinky, as she flicked it with her tongue and urged the milk out with her sucking. The sweet, white, nectar splashed her tongue and trickled down her throat as Annie continued running her hand through her wet hair. June let the breast milk collect in her mouth before swallowing gulps of it. Over the intervening weeks since they last met sexually, June had craved the taste of Annie's milk, wanting to feel the texture of her nipple and the warm taste of the fluid.\n\n\"Yeah, that's it, June, suck it. Oh!!! Feels sooo good!! Pinch my nipple, June!! Pinch it, hard, you bitch!!\" Annie screamed, her ecstasy rising and her inhibitions disappearing.\n\n\"Mmmm!!\" June moaned, accepting the idea that she was indeed a bitch in heat as she squeezed Annie's breast hard, twisting the fat nipple slightly, forcing more white milk to spurt out! \n\n\"Ah!!!\" Annie moaned, partly from pleasure and partly from pain. \"Yes!! Yes!!! Suck it, bitch! Hurt me!!!\" Annie screamed, her hand running through her slit and rubbing her clit.\n\nJune released her hold on Annie's breast and replaced it with her other hand, whispering, \"Mmmm...sooo good!\" With both hands massaging Annie's breasts and squeezing her nipples hard, June began to kiss Annie's stomach, pausing briefly to dip her tongue into Annie's navel. Continuing her way southward toward Annie's pussy, June gazed into Annie's eyes and added, \"but I'm hungry for something else!\"\n\nInstinctually, Annie spread her legs and smiled, maintaining her fingers in her friend's hair. June gazed at Annie's pussy and her mouth watered. The smooth, bare mound showed no sign of stubble, indicating Annie had shaved earlier that day. Its small, tender pink lips flared open, as its moist interior beckoned June's tongue. June glanced into Annie's eyes one last time before shifting her focus on the nether lips and gently dipping her tongue into its recess. Annie closed her eyes and tightened her grip on June's hair as June's tongue licked Annie's pussy. \n\n\"Oh!!!! Juney, baby, you suck my cunt sooo good!\" Annie moaned squirming and pulling June's head into her pussy as she spread her legs further and replaced June's hands on her breast with her own. June continued licking Annie's pussy, placing her hands under Annie's ass and starting each lick by dipping her tongue into her moist interior and running it up to her clit, flicking the tender nub before repeating the act. \"Ah!!! Oh!! Fuck, June. Eat my pussy!! Make me come, baby!!\" Annie squirmed more urgently, her eyes closed. \"Yes! Yes! Yes!\"\n\n\"Mmmm!\" June moaned into Annie's pussy before latching on to her friend's clit and driving two fingers violently into her pussy.\n\n\"Ugh!!!\" Annie groaned deeply raising her head momentarily at the rough intrusion and staring at June. Holding herself up on her elbows, Annie gasped, \"Yeah, that's it! Oh! Oh! Ah!!!\" She wailed dropping her head back onto the pillow and squealing. Her orgasm hit her like a bolt of lightning as she grabbed June's head and pulled it forcibly into her pussy, as she tightened her thighs. \"I'm cumming!!!! I'm cumming, Juney!!!! Fuck!!!!!\" She screamed as her body convulsed, while June mercilessly continued her attack on Annie's swollen clit, fingering her through her orgasm.\n\nAfter a few minutes, Annie's orgasm mellowed, as June licked Annie's drenched pussy, her body twitching one final time before June stopped. Annie lay panting, her cheeks flushed as the back of one hand rested on her forehead. She watched June make her way back up. Once June reached Annie, she kissed her tenderly as she relaxed atop of her. Their milk-stained tits coming together as Annie tasted her own juices on June's tongue.\n\n\"Mmmm,\" Annie moaned when the kiss ended, \"I needed that sooo badly. Thanks!\"\n\nJune smiled and said, \"Your welcome,\" as they kissed again. June reveled in her newfound power to make the younger woman cum so violently. Not even sex with her husband made her feel so good about her sexual ability. Perhaps being lesbian had hidden benefits that she had failed to realize before.\n\n\"I have to pee, now, of course!\" Annie remarked.\n\n\"Of course!\" June replied rolling to the side and watching Annie's toned body flex, as she made her way to the bathroom.\n\nAfter half a minute, June rose and walked over to the bathroom. Standing in the doorway, she watched as Annie sat on the commode, her legs spread slightly as a golden stream of urine rushed out of her. Noticing June leaning against the doorjamb and watching her, Annie whispered, \"What?\" The golden stream came to a trickle and her pussy spasmed from the moment.\n\n\"You are so sexy,\" June whispered, her pussy lips swollen with desire.\n\nButterflies danced in Annie's stomach at the thought that June might be as perverse as her. Annie stared at June for a long second, one eyebrow rising, before replying; \"You think I'm sexy while peeing?\"\n\n\"You're sexy period. But, yes...while peeing too! \n\nStaring at her friend, Annie marveled at June's beauty, standing naked in the doorway with her hanging breasts and the hairy, feminine triangle between her legs. Annie had an overwhelming desire to taste her. \"Come here,\" she whispered hoarsely, unfamiliar with the voice that was speaking.\n\nJune swayed over to Annie, who was still seated on the toilet. Glancing up into June's eyes, Annie wrapped her arms around June's hips and pulled her pussy onto her mouth. Annie massaged June's ass as she ate her pussy.\n\n\"Ugh!!!\" June groaned as she raised a leg and placed a foot on the edge of the sink counter, giving Annie better access to her opened lips. \"Yeah! Eat my pussy you dirty little slut!!!\" She grabbed Annie's head and held it against her pussy, as she continued, \"Yeah, that's it! That's a good girl! Eat Mommy's pussy, while you pee!!\" Her desire overwhelming her at the thought of Annie eating her pussy while she sat on the toilet, her bare pussy hanging on to the last few droplets of golden urine.\n\nAnnie held June steady as her mouth covered her friend's pussy, her tongue driving into her pussy and scooping out her sweet nectar, some of it running down her neck.\n\n\"Ah!! Yeah, Annie!!! That's it!! That's it!!! I'm gonna come! I'm gonna come!!!\"\n\nAnnie moved her fingers deeper into June's crack, an index finger grazing the rosebud opening of her asshole.\n\n\"Oh!!! Here it comes, Annie!! I'm cumming!!!\" June screamed, and just then, Annie slipped the tip of her index finger into June's asshole to the first knuckle! \n\nJune had never let anyone penetrate her ass, and the new sensation shook her to her core, as her orgasm ripped through her. Her asshole spasming around Annie's finger with every jolt of her orgasm!\n\n\"Ugh!!!! Fuck!!!!!\" June groaned deeply and loudly. The bathroom echoed as her orgasm ripped through her. \"Oh!!!! I'm cum....ming!!!! Fuck!!! Fuck yeah!!! That feels good!! Ugh!!!\" She cried as her body convulsed, forcing Annie's finger deeper into her rectum. \"Ugh!!!!\" She groaned one last time as she held on to Annie's head for dear life.\n\nFinally, with her orgasm passing, Annie slowly slipped her finger from June's ass. June released her hold on Annie, only to see her face covered in her juices. \"Kiss me,\" Annie whispered hoarsely and adding, \"taste yourself.\"\n\nJune removed her foot from the counter and straddling Annie, sat gently on her knees facing her. They shared an open, wet kiss. June tasted her own tangy juices in her friend's mouth and tongue. She broke the kiss and licked Annie's face momentarily before resuming her kiss. Their lips caressing as smacking sounds echoed around the room.\n\n\"Wow,\" June moaned. \"I didn't think an orgasm like that was possible,\" she added kissing Annie one last time before straightening.\n\n\"I hope you didn't mind my finger? I sort of... lost control?\" Annie asked, a coy expression on her face.\n\n\"No baby, I want to share everything with you. If you liked it, it was ok,\" June replied, still feeling the tingle of having had a finger up her asshole; still amazed at the intensity it added to her climax. She thought of doing it herself next time she masturbated alone.\n\nBoth women returned to the bed and ordered room service. After a satisfying meal of surf and turf for June and pasta primavera for Annie, they broke into the champagne and turned on some music. Naked, they danced wildly around the room doing an occasional bump n grind and sharing a hot kiss or two, as the sun settled. Feeling giddy and happy, they played like teenagers, just happy to be away from everyone and together. With eyes glazing over, they fed each other chocolates, their lips smudging from the sweet confection, as they kissed hungrily. \n\nSatiated, they lay in bed curled into one another. Annie's head rested on June's chest as she gently played with June's nipple. It was then that Annie opened up, and revealed how her relationship with her husband was not going well and that the sex had basically dried up. June listened intently and after a while, felt the need to comfort her friend. She asked Annie to nurse, again. Annie smiled as she latched on to the dangling breast above her. Annie sucked deeply, wanting to be held by the older woman and sucking in the warm milk that calmed her fears. Drinking the milk made her feel secure and safe but also sensuous and aroused. \n\nAnnie sucked for a long time as June relaxed and stroked Annie's hair, humming. Annie changed breasts, emptying each one. June's nipples never felt so engorged and large. Satiating Annie gave June a sense of pride, not to mention control. Alas, she felt the guilt return momentarily but blocked out of her mind as she continued humming.\n\n\"Beautiful! Simply beautiful!!\" Annie whispered, when she was finished nursing, as she lay her head back on June's chest and stared at June's breast, her fingertips caressing a milky white orb. \n\nWith her eyes now closed and her head resting back on the pillow, June smiled. Her forearm covered her eyes as she whispered, \"Thanks, but they're not that great!\"\n\n\"Are you kidding? They're marvelous!\"\n\n\"No...they're not!\" June said insistently but not moving.\n\n\"Yes...they are!!\" Annie remarked louder and more insistently, raising her head briefly and glancing at June, who still lay with her eyes closed.\n\nAnnie laid her head back onto June's chest and resumed caressing her breast. \"Perfect.\" She whispered tenderly.\n\n\"No...Theresa's are perfect...not mine!\" June replied in an even tone.\n\n\"Who?\" Annie asked knowing she should know to whom June was referring but momentarily drawing a blank.\n\n\"Theresa... from our breastfeeding support group,\" June added.\n\n\"Oh...Oh!\" Annie replied, emphasizing the second 'oh'. \"Yeah, Theresa's got an incredible body! And she's beautiful too!\"\n\n\"God, she's got that classic look! The kind that makes you just stare at her in awe!\"\n\n\"She reminds me of Jenny McCarthy\"\n\n\"Yes!\" June replied emphatically, suddenly realizing, and agreeing to, the resemblance.\n\n\"God, how I'd love to dip my tongue between her pussy lips,\" Annie said dreamily.\n\n\"Mmmm\" June moaned in response. \"I bet her pussy taste just like honey!\"\n\n\"And those tits! My god, those tits! Can you imagine nursing from those! God, I think I'm gonna cum just from the thought!\"\n\n\"Who else from the gang do you think is hot?\" June asked, now staring at the ceiling, her mind running through the members of their breastfeeding support group.\n\nWithout hesitating, Annie replied, \"Joan!\"\n\n\"Yeah, Joan's got a certain...adunno...'innocence' about her,\" June responded.\n\n\"Submissive,\" Annie said, adding her two cents worth.\n\n\"Yes...yes...you're right!\" June said smiling at the ceiling. \"I wonder if that's partly because she's Asian?\" she added.\n\n\"She's from Taiwan, right?\" Annie asked, unsure.\n\n\"No, Japan,\" June corrected.\n\n\"Mmmm...I think Asian women are so exotic! She reminds me of Lucy Liu with nice, plump, milk-filled tits!\"\n\n\"Yeah, she does have very nice, pert, grapefruit-sized tits. And they seem even bigger and nicer on that tiny frame of hers,\" June remarked.\n\n\"Mmmm,\" Annie moaned thinking of nursing off of their Asian friend's breasts. \n\nThis was the first time both women had discussed other women sexually, and both were amazed and shocked at how sexually arousing it had been.\n\n\"Hey, let's watch a porno!\" Annie asked, wanting to break the serious atmosphere. She noticed the cardboard tri-fold sitting atop the television advertising the hotel's pay-per-view service.\n\nJune glanced at her incredulously for a moment and then said, \"Okay! Let's light some candles, too!\" She rose and made her way toward her bag, as Annie reviewed the instructions for the Pay-Per-View.\n\nAfter setting up some well-placed candles and dimming the lights, the girls settled into each other on the bed to watch an all-girl video. The movie was your basic, shot-on-video porno with little plot, but the women were simply gorgeous, all with large, silicone orbs for tits. Sex scenes were abundant coming about every five minutes and included a love scene between two lovers that included some pussy-to-pussy grinding; a neighborly seduction between two housewives; a threesome among best friends that included shaving and anal rimming; and the finale of an all-girl night out that ended in an orgy using dildos, vibrators and other assorted toys. Throughout the video, Annie and June caressed each other with their fingers and tongues, kissing, nursing, and gently fingering each other's pussy. The ministrations kept both women highly aroused and just on the brink of orgasm as they watched the hot action.",
        "When the movie was over, Annie rolled on top of June, her tits mashing into her friend's, their nipples grazing as June's thigh wedged itself between Annie's legs. June could feel Annie's bare, raw and humid pussy rubbing against her thigh as Annie kissed her.\n\nThe kiss grew hotter as smacking sounds filled the room. Breaking the kiss, Annie gasped, \"God, that movie got me so horny!\" They kissed again before Annie added, \"I'm so wet right now! I wish you had a cock to fuck me with!\" She kissed June hotly again.\n\nJune moaned into Annie's mouth before breaking the kiss and whispering, \"Maybe that can be arranged?\"\n\nWith her brow furrowing, Annie stared at June before replying, \"Oh?\" \n\nJune kissed her friend briefly before sliding from underneath her. \"Close your eyes for a minute,\" she asked standing at the side of the bed.\n\n\"Oh, oh,\" Annie said with a smirk, rising to her knees on the bed and adding, \"okay,\" as she closed her eyes.\n\nJune walked to her suitcase and rummaged for a second before pulling out a large, ten-inch strap on dildo. Sliding into the harness, she adjusted herself and slapped the dildo playfully with her hand before walking over to the side of the bed and whispering hoarsely, \"Okay, open your eyes.\"\n\nAnnie opened her eyes and immediately zeroed in on the huge, fake cock that June was stroking. \"Oh...my...god!\" she gasped laughing. \n\n\"Your wish is my command,\" June said with a smile.\n\n\"Oh my god!\" Annie repeated, \"I can't fuckin' believe it!\"\n\n\"You like?\" June asked still stroking the dildo with one hand while her other hand massaged a breast.\n\n\"Yes!\" Annie replied excitedly. \"But, where? How? When?\" she asked staring at the huge cock.\n\n\"I made a discrete trip to the seedy side of town one night and bought a bunch of 'assorted' toys, especially for this weekend!\" June answered, still stroking the dildo.\n\nAnnie stared up at June in amazement and shook her head in disbelief. Her stare returned to the dildo before she whispered, \"It's fucking huge\"! Glancing back at Annie she added excitedly, \"you look so fucking hot!\" Her excitement overwhelming her as she begged, \"stroke it, June! Stroke your big, fat cock!\" Annie slid back onto the bed and spread her legs. Her bare, soaked pussy came into view as her fingers slid between her labia, a finger dipping into its hole.\n\nJune smiled wickedly as she stood there stroking her fake cock and squeezing a breast. She'd seen men stroke their cock but now she knew how it must feel with the large phallus sticking out between her loins. She stared down at her breast and squeezed firmly on a nipple. She repeated the gesture a second and third time before her milk letdown and trickled out of her nipple.\n\n\"Oh!!!!\" Annie moaned, as she watched June's actions. Her fingers strummed her clit and rubbed her cunt as her eyes closed momentarily. She opened them when she felt drops of liquid hit her calf.\n\nJune's mouth hung open as her arousal increased. She fought to keep focused as she continued squeezing her breast and stroking her fake cock. She loved her new sense of power and the way it may her body feel. The milk now streamed in spurts each time her hand squeezed the breast. Once June was satisfied that the milk letdown was sufficient, she leaned down and sucked on her own nipple.\n\n\"Oh!! Fuck!!!\" Annie moaned again. \"That is sooo fucking hot, June!!\" She hissed as she alternated slipping a long, slender finger into her hole and strumming her clit. June liked Annie's ability to openly play with herself, exposing her cunt without shame.\n\nJune sucked on her own breast for a good, long minute as she stroked her cock and stared at Annie playing with herself. The unnatural position of her breast, however, caused her milk flow to stop. Releasing her breast, she looked down at Annie through the strands of hair hanging over her eyes. \"You like that, Annie? You like me sucking my tit and stroking my cock?\"\n\n\"Mmmm!\" Annie moaned before replying, \"Yes! Oh, yes!! I want you to fuck me, Mommy! I want you to fuck me with your big cock! I want to suck your big tit!! I want to drink your milk, Mommy! Come fuck me!!\"\n\nJune smiled wickedly, loving the dirty talk, something she could never do with her husband. She loved to hear the dirty words and use them, working Annie into a sexual frenzy.\n\n\"You need to get it nice and wet first before I fuck you, baby! So suck it!\" June demanded sternly, jabbing the dong against Annie's waiting mouth.\n\nAnnie responded to the rude gesture, immediately shifting into a seated position over the edge of the bed with June standing in front of her. The ten-inch cock dangled inches from Annie's mouth as she stared at it before grasping it firmly. \n\n\"It's bigger than Jack's!\" Annie said giggling before taking the tip of the cock into her mouth. The fake dildo felt very realistic, complete with rippling veins and bulbous head. The life-like, latex material felt remarkably close to human skin as Annie's mouth moved over its length. Her head began to bob back-and-forth as her hand found the fake testicles and cupped them. What she liked best was June's feminine hips and her female smell that was somewhere between pee, sweat and the natural lubricant her vagina excreted, as she sucked her \"cock\".\n\nAnnie could feel June's pussy just behind the testicles and was able to continue cupping them while slipping her middle finger into June's soaked pussy.\n\nUpon feeling Annie's long, slender finger slide inside her, June threw her head back as she held Annie's head gently and moaned, \"Ah!!! Yeah, suck my cock! That's it!! Suck it!!\" June could feel a little of what it was like for a man to stand and have his cock sucked, looking down at the woman's cheeks, sucking in his member. \n\nAnnie began to suck the fake cock feverishly as her finger pistoned in and out of June's pussy. Her other hand gripped the base of the fake cock and instead of stroking it, as she normally would for her husband, she pressed it into June's pussy and rubbed it around as she continued sucking.\n\n\"Ah!!! Oh!!!! Fuck!!! That's it, you slut! You little cock-sucking slut!!! Suck my cock!!!!!\" June gasped grabbing Annie's head with both hands and moving her hips back and forth, helping to drive the cock in and out of Annie's mouth. June loved the feeling of power and control the dildo gave her and she liked seeing Annie's mouth fill and deflate with every thrust of the dong in her friend's mouth. She held Annie's head for a long time, wanting to make Annie understand who was in control.\n\n\"Mmmph!!\" Annie gagged and moaned into the cock, her eyes watering. After a few minutes of heated passion between the two women, June released the dildo from Annie's mouth and slapped her cheeks, like her husband sometimes did with her.\n\n\"Do you like Mommy's cock, Annie,\" June asked rudely. \n\nAnnie just nodded as the black dildo bounced against her lips and face. \n\nFinally, Annie looked lustfully into June's eyes, whispering, \"Please fuck me Mommy!\"\n\nJune leaned down and kissed Annie passionately while pushing her back onto the bed. Instinctually, Annie eased herself back onto the bed. She spread her legs and lifted her knees as a hand petted her wet slit. \n\n\"That's good, show Mommy how you play with yourself!\" June said. It was the first time she'd ever seen a woman openly play with her pussy, and she enjoyed looking at the younger woman quickly flick her fingers over her clit. Every woman masturbates differently, June thought, fascinated by Annie's rapid finger movement. \n\nJune moved over her lover as she gripped the base of the cock and held it menacingly at the entrance of Annie's pussy. She rubbed the tip over Annie's slit momentarily as Annie groaned. The dildo slipped easily into Annie's bare, soaked pussy. \n\n\"Ah!!!! Yes!!! Mmmm! That feels so good, Juney! Fuck me!! Fuck me with your big cock!!!\" Annie moaned as June settled herself atop Annie, her hips moving back and forth slowly as the fake cock fucked Annie.\n\nJune knew that Annie was craving for good sex and wanted to fuck her good. Annie loved the feel of the large dildo driving deep inside her to the hilt. The dong was longer than her husband's cock and much more rigid. Her cunt never felt so full.\n\nJune's large breasts presented themselves just above Annie, so Annie did what came naturally. She lifted her head slightly and took June's stiff, candy-colored nipple between her lips and flicked it with her tongue.\n\nJune moaned upon feeling Annie's lips wrap around her stiff, turgid nipple. While continuing to move her fake cock in and out of Annie, June shifted slightly higher to allow more of her breast into Annie's mouth. With June's movement, Annie was able to wrap her mouth around June's entire areole and suck voraciously until she felt the letdown of June's milk. Annie closed her eyes and moaned as the sweet, white nectar splashed her tongue and trickled down her throat, as she gulped. \n\nJune never felt so womanly, her breast was feeding Annie and her hips found a movement that easily drove the dildo into the younger mother.\n\nThe back of the dildo was textured with tiny little nubs designed to pleasure the woman wearing it. This, combined with Annie's sucking, began to have an effect on June as she closed her eyes and moaned.\n\n\"Ugh!!!\" she groaned as all of her senses seemed to zero in on her cunt. \"Fuck, that feels good, Annie! Suck my tits, you little bitch!! Drink my milk!!!\"\n\n\"Ah!!!! Fuck me, Mommy!! Fuck me with your big cock!!!! Oh!!!!\" Annie responded as she latched back onto June's breast and sucked, as the milk flowed again. Annie reached up and massaged June's other breast, squeezing the tip of the breast forcibly and pinching the nipple.\n\n\"Ah!!!!\" June moaned, the sensations were too much for her as milk began to seep out of the breast that Annie was massaging.\n\nNoticing the leaking milk from the breast she was massaging with her hand, Annie stopped sucking and released June's other breast from her mouth. The act was too immediate and milk continued to stream out of the turgid nipple, spraying Annie's nose, lips and chin before she latched on to the other leaking breast. \"Mmmmph!\" she moaned into June's breast as she resumed squeezing the breast she had just sucked. Again, milk began to flow from both of June's breast \u2013 one into Annie's sucking mouth and the other spraying Annie's hands, shoulder and pillow.\n\n\"Ah!!! Oh!!!! Fuck!!!!\" June moaned as she felt the initial stirrings of an orgasm building. She loved the way her breasts were spewing milk on Annie, making the mother look wet and wild. June was also admiring herself for being able to produce so much fluid.\n\nAnnie released June's breast from her mouth and again was rewarded with a splash of milk to the neck and chin. \"Ah!!!\" she wailed, sticking her tongue out and capturing a few droplets before the stream stopped. \"Yeah, Mommy, fuck me! I'm getting close! Cum all over me! Milk all over me!!\" Annie hissed as she reached up with both hands and grasped each of June's breasts squeezing them together. The stiff, raw, milk-soaked nipples stood proudly as Annie alternated sucking one then the other for a minute or two, each time, getting covered with a spray of milk as the respective breast's milk streamed to an end. \"Yeah, baby, cum! Cum for me!! Cover me with your cum! I want you to cum all over my face!!!\" Annie hissed again, sucking voraciously on the breasts and intentionally aiming the milk across her face. Her entire face was now doused with June's sweet milk. Her forehead glistened as her hair matted to her cheeks. White droplets of milk ran down Annie's face as she lost control and went over the edge with her climax! \"Ah!!!! Fuck me, Fuck me!!!!\"\n\nThe sight of Annie's face covered in her milk, and Annie obviously taking great pleasure in it; combined with the sensation of the ribbed dildo sent June over the edge too. \"Ah!!! I'm cumming baby!!! Here it comes! I'm cumming all over your face!!!\" as she pistoned in and out of Annie, her orgasm tearing through her as the textured dildo rubbed frantically across her clit. \"Ugh!!!!!!\" she screamed as her orgasm peaked.\n\n\"Me too!!!\" Annie yelled. \"I'm cumming too! Cum all over my face!!!\" she added continuing to suck and spray milk all over her face. Her face was now completely soaked from June's milk, as white streaks dribbled across her lips and cheek, just as if it was cum covering her face. \"Oh!!!! Fuck!!!!!\" Annie screamed as her body convulsed and shook. The fake cock filling her inside and rubbing her clit along with the erotic sensation of her friend's breast milk splashing her face and trickling down her throat were too much. \n\nAnnie blacked out.\n\nMoments later, she came to. June was still on top of her gasping, as both women relished in post orgasmic bliss. June's head had been laying face down next to Annie's head. She raised it and stared down at her friend covered with milk. She kissed Annie lovingly at first, but then drove her tongue into Annie's waiting mouth. She could taste her milk on Annie's tongue, as Annie moaned.\n\nWhen the kiss broke, they gazed lustfully into one another's eyes. \"Wow!\" Annie simply said. \n\n\"Yeah! Wow!\" June responded, as they kissed again. This time, it was a slow, tender kiss to reflect the love and respect they had for each other. \n\nWhen this kiss broke, they continued staring at each other, as June lay atop Annie, their wet, milk-covered breasts slipping against one another. June smiled as she wiped a milk droplet from Annie's cheek. Annie smiled in return. Neither said anything. Shadows danced across the ceiling and walls from the almost burnt out candles. Slowly, June pulled out of Annie and rolled over next to her on the bed. The dildo stood erect, pointing toward the air, causing Annie to remark, \"It's got staying power,\" as she flicked the rubbery cock.\n\nJune laughed as Annie stood and ran to the bathroom. June remained in the bed, stroking the strap-on dildo as she heard Annie peeing. In the deepest, darkest recess of her mind, she had a passing vision of Annie peeing on her, and a moan escaped June's lips. Watching Annie piss earlier was the first time someone was aware of her watching, and the thought had almost made her cum on the spot. June thought about heading into the bathroom for a repeat performance, but she was exhausted and a glance at the clock showed that it was nearly midnight. June crawled onto the bed and immediately realized that the sheets and pillows were soaked.\n\n\"Ugh!\" she said, staring at her hands in disgust. \n\n\"What?\" Annie asked strolling back into the room.\n\n\"The bed is soaked!\" June replied staring at the bed.\n\n\"Oops!\" Annie said shrugging. \"Sorry!\"\n\n\"No, no, it's not your fault,\" June replied, \"but we need to change the bed!\" She stood and perused the list of telephone codes for the front desk. \n\nAnnie came up behind June, who was still wearing the dildo, and embraced her, making sure to rub her bare pussy against June's ass. \n\nJune turned her head and the two women kissed again. \n\n\"I dare you to answer the door naked,\" June whispered the challenge in Annie's ear.\n\nAnnie stared at June for a moment before replying, \"Okay. What do I get if I do it?\"\n\n\"Anything you want,\" June answered without hesitation, trusting her friend, her lover, completely and giving in to whatever wishes Annie desired.\n\n\"Anything?\"\n\n\"Everything.\"\n\nAnnie looked back at the telephone as she returned to the bed and sat on a dry spot, listening to June complete the dare.\n\n\"Uh, hello, this is room 307. We need new sheets and pillows as soon as possible. No...no accident,\" June said into the phone and glancing at Annie, \"just new sheets and pillows, please.\" A moment passed before June added, \"Thank you,\" and hung up. Staring at Annie, she said, \"Let's strip the bed,\" and both women quickly and efficiently stripped the bed down. \n\nTen minutes later there was a soft knock at the door. June glanced at Annie and pointed her toward the door. Annie's face turned to dread, realizing this wasn't a joke. \n\n\"I'm going into the bathroom, Annie,\" she said in her strong executive voice, as she stroked her \"cock\". \"I will watch you through the door. Ask her to help you put the sheets on.\"\n\nAnnie stood there, dumbfounded. Perhaps this was too much of a dare. June disappeared into the bathroom, leaving the door ajar. The younger woman went to her purse and fished out a ten-dollar bill. A second knock came as she moved to the door. She threw June one last glance. She could hear her heart pounding in her chest as she peaked through the peep-hole and saw a pretty Latino woman in a blue uniform dress and white apron holding folded sheets and four pillows. Taking a deep breath, Annie unlocked the door and opened it halfway. She stood naked in the doorway as the look on the housekeeper's face went from one of complacency to one of surprise.\n\n\"Ah...\" the housekeeper muttered as her eyes zeroed in on Annie's milky-white tits.\n\nAnnie stood for a second without saying a word, allowing the housekeeper to drink in her nudity. She noticed the housekeeper's eyes move from her tits to her shaved, glistening cunt. Annie's skin tingled as she watched the housekeeper gaze intently at her pussy and lick her lips subconsciously. Annie's arousal grew, as she noticed the Latino woman's features; this was a reaction she hadn't anticipated. The maid was quite pretty, perhaps in her early thirties, with brown hair and dark smoky eyes. She was short but well built, with long brown hair tied back away from her face. She might have had a size-able bust, but it was well hidden in her bra and uniform. Their eyes met and they gazed at each other for a brief second, neither saying a word before Annie asked the Latino woman in and closed the door. \n\n\"The bed needs sheets,\" Annie said, forcing a smile.\n\n\"Si, Senora,\" the maid said and took her eyes off of Annie as she marched quickly to the bed and began to spread the sheets. \n\nThe naked woman helped the maid, hoping to move things along quicker. \n\n\"You have child, Senora?\" The maid asked, seeing the mother's breasts on Annie.\n\n\"Oh yes, I do. And you, do you have children?\" Annie asked nervously.\n\n\"Si, three,\" the dark woman responded politely, trying to put Annie at ease. \"Child accident?\" The maid asked.\n\n\"What? Oh...no,\" Annie responded, in reference to the maid's mistaken assumption that one of Annie's children had spilled something.\n\nSuddenly, the bathroom door opened and June appeared wearing her pink blouse, black panties and the strap-on dildo. She looked fabulous as she sauntered out, confident and serious with the large cock flopping between the tails of her blouse.\n\n\"Actually, it's breast milk,\" she said matter-of-factly, walking right up to the olive skinned woman and shaking her hand. \"Hello, I'm June. This is Annie, my lover.\"\n\n\"My...my...name...is Maria,\" the woman said in a pleasant accent, staring at the dildo and the two wet dots on the blouse that hid June's leaking tits\n\nThe maid returned to making the bed, making fleeting glances at the two women. June put her arm around Annie, watching the maid finish. Annie's face was red with embarrassment, as she let her hand fall to cover her sex.\n\n\"Take your hand away, Annie!\" June commanded. Annie complied.\n\n\"You must see a lot, working in the hotel, Maria?\" June asked\n\n\"Oh, most people come for the stores,\" she responded with a smile. Then boldly added, \"But some times... people come to...play\" She smiled briefly, her pearly whites shone against her dark skin, as she turned her attention to the bed.\n\n\"Have you ever seen a more beautiful lover then my Annie here?\" June asked, boldly.\n\n\"No, she is very nice,\" the woman answered finishing the bed, smiling.\n\n\"Would you like her to turn around,\"\n\nThe maid stopped, looked seriously at the two women and shyly nodded affirmatively.",
        "\"Annie, go and stand in front of Maria and turn around for her!\" June ordered.\n\nAs if in a trance, Annie walked slowly toward the maid, hardly believing she was obeying the request. Yet, a new spasm of arousal shot through her body. She liked June's assertiveness and wanted to obey her, regardless of how shameful she felt about her nudity and how embarrassing this made the poor hotel maid.\n\nStanding in front of the smaller Latino, Annie looked into Maria's eyes. As Annie's hands fidgeted, Maria gazed up and down at Annie's naked body, drinking in the fat nipples, the flat stomach and shaved, moist pussy.\n\n\"Do you like her, Maria?\" June asked naughtily.\n\nAgain, Maria shyly nodded yes.\n\n\"Turn, Annie!\" Came June's next instruction.\n\nAnnie turned. She stood facing June, gazing steadily into her friend's eyes, as Maria admired her taut ass.\n\n\"Bend over,\" June instructed. Annie bent over. \"Farther!\" June shouted. Annie bent as far as her muscles allowed, knowing that her pussy was visible to the pretty maid from behind. Her face was red with shame. But, to her surprise, Annie suddenly felt something very different than ever before. It was pride. First, June admits to masturbating while thinking about her hot, little body and now, here she was showing her nakedness to a stranger. She hadn't thought of herself as being that attractive - until now. \n\n\"You are beautiful, senora,\" Maria finally whispered. \"She is beautiful, everywhere,\" she added, beads of sweat having formed on her forehead, as she licked her lips. Yet, she never turned away, and this intrigued June. Maria seemed mesmerized by the beautiful tan marks that outlined Annie's ass, seemingly amazed by Annie's shaved pussy and wrinkled anus. It gave Annie a look of youth, the maid thought.\n\nBent over, Annie spied Maria's hosiery and suddenly wondered what the woman was thinking and feeling? Was she turned on? Was her pussy wet for Annie? Annie could hardly resist her own feelings of arousal, bewildered by her sudden desire to exhibit herself, to be submissive for June, and to gain the attraction of other women.\n\n\"I think so too, Maria. Thank you for your help,\" June answered.\n\n\"Gracias,\" the woman said, \"perhaps you need towels?\" Maria asked, smiling. She reached into her pocket for a hotel card with her name written on the back. She walked up to June clumsily and handed the card to her, unable to keep the large cock from glancing her apron. Even June squirmed from the small infraction. \n\nMaria turned and walked quickly to the door, but not before glancing one more time to see June's long dildo hanging between her legs, as June stroked it. Annie straightened and gave the woman the large tip. \n\n\"Gracias, senora,\" Maria whispered, as she exited the room. Just before Annie closed the door, Maria looked back, their eyes meeting again, and they smiled at each other. Annie couldn't explain the spasm of arousal that burst through her body.\n\nAnnie closed the door, just as June came up behind her, slipping her hands under Annie's arms and grabbing her breasts. She bit Annie's ear lobe gently, whispering: \"You're a hot little bitch, did you know that?\"\n\nAnnie felt the long cock slide up against her ass cheeks and squirmed, liking June's compliment. She turned her head and kissed June hard.\n\n\"You want to collect now?\" June asked when the kiss was over. Annie was too aroused and shocked by what had just transpired to think of anything. Sensations shot through her body and clouded her mind, as she simply stood feeling the dildo brushing against her ass. \n\nWithout saying a word, June pushed Annie forward so she was again touching her ankles and her ass fully exposed. The long black cock slid easily into Annie's vaginal canal, causing the mother to groan as the cock pressed into her, right to her cervix. At this angle, the cock brushed her swollen clit, sending spasms of pleasure to all parts of her body. June, to her surprise, quickly found the correct rhythm to her hips, as she rudely grabbed Annie's flanks and thrust the cock into her sucking pussy. \n\n\"Is Mommy's little girl a bitch in heat?\" June said, breathing hard as the cock pounded Annie. \"You like showing that pretty little cunt of yours off, don't you?\"\n\n\"Oh, yes. Please, I'm so horny. Fuck me, Mommy. Fuck me, please,\" Annie cried out.\n\nAnnie came immediately, hardly understanding how she could come so fast. For June's part, she enjoyed the newfound sense of domination, as she looked at herself in the full-length mirror, fucking Annie from behind. She liked commanding the younger woman and watching her react. June pounded hard, harder than she imagined was possible; yet she thought of how her husband sometime took her and pounded her with the same gusto. June watched in the mirror as Annie's breasts flopped and wobbled with every thrust, her hair flashing over her head.\n\n\"Is my baby cumming?\" June asked mockingly.\n\n\"Oh yes Mommy, I'm cum-ming!\" Annie squealed as the orgasm spasmed her body; it was the best quick-fuck she'd enjoyed in years. \n\nEven after Annie's orgasm mellowed, June thrust her hips hard into Annie's cunt, enjoying the grunts Annie made and the sensation the base of the dildo made against her own pussy. \n\nFinished with fucking her, June had a panting Annie stand with her back against the wall. June began sucking the mother's milk from Annie's breasts, knowing the younger woman needed to letdown her milk before sleeping. June also wanted to taste the sweet warm fluid and quench her own need for sucking a woman's nipple. In her post-orgasmic bliss, Annie let the older woman expertly take each breast in hand and suck deeply and rudely until the tension was gone.\n\nSatiated, June looked lovingly at Annie. \"Let's get some sleep,\" June said before adding, \"I'm looking forward to tomorrow.\" She winked as she watched Annie crawl into the crisp, clean sheets.\n\nLooking up, Annie watched as June stripped off her blouse and slowly slid the dildo and the panties off. Naked again, she curled beside Annie\n\n\"Thank you for making me do that, June,\" Annie could hardly believe what she was saying.\n\n\"It felt good, didn't it?\" June asked, somewhat rhetorically. \n\n\"Yes,\" Annie mumbled, hardly understanding what had happened. Again, June listened to Annie tell her about her fears and sadness, gently stroking her hair and face. And again like before, June let the younger woman suck her breast, letting mother's milk calm her. Once the talking stopped, June listened to the sucking sounds of Annie's mouth on her plump, glistening tit, shivers running through her body. \n\nShamelessly, she touched her own pussy, just letting a finger feel her moist slit. She thought about how much she enjoyed the dirty talk and hard sex, something she'd wanted to do for years. Her touching continued as Annie sucked, adding to the wonderful feelings of pleasure flowing in her motherly body. Slowly and sensually, June coaxed a mild orgasm from deep inside, as Annie sucked harder feeling June's body quake. \n\nMoments later, before the two fell asleep, Annie asked about the plan for the next day.\n\n\"Oh, I was thinking we can get up in the morning and go to breakfast. There's a pancake house across the street, and then we can hit the shops.\"\n\n\"Sounds good,\" Annie whispered, which turned into a yawn.\n\n\"Goodnight, sweet Annie,\" June whispered.\n\n\"Goodnight,\" Annie replied before they kissed briefly. \"June?\"\n\n\"Yes?\"\n\n\"I...\" Annie hesitated to tell June she was falling in love with her. So she gingerly whispered, \"...uhm...I'm glad I came.\"\n\n\"Me too,\" June replied, realizing that their relationship had just gone to a different level, but choosing to say nothing nor push anything. \"Goodnight,\" she repeated to Annie as she wrapped her arms around the young mother and pulled her close, her hand nicely cupping the woman's large breast. \n\n\"Goodnight,\" Annie whispered.\n\nEmotionally and sexually satisfied, both bodies lay calmly together. Each woman having learned how enjoyable it had been to be free and play sexually with each other. Moments later the even breathing of two women asleep filled the room.\n\nOutside, a half moon cast a dim blue light across the hotel parking lot, as flags rustled gently in the wind.\n\nTo Be Continued...  "
    ],
    "authorname": "writerotica",
    "tags": [
        "milk",
        "nursing",
        "breastfeeding",
        "lesbian",
        "bisexual",
        "best friends",
        "married",
        "mother",
        "housewife",
        "dominant"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/annie-and-june-ch-03"
}