{
    "title": "The Ponytail Express Ch. 11",
    "pages": [
        "Disclaimer--I use a couple of Ukrainian words in the episode: o bozhe and harazd, in case you get confused. Niamh is Celtic, and it's pronounced Neev.\n\nAlso, very little sex in this episode.\n\nThanks for your continued feedback and support! On with the story!\n\nPonytail Express\n\nChapter 11: The Chameleon\n\nIt was just a tick or so off 7pm as Fred stood in the lot by the side of the Aquatic Center, waiting for the last remnants of the Ponytail Express to come outside. He drank a bottle of water and munched on some leftover pineapple. He had a list of things he needed to do, not including studying for finals.\n\n1) Find out if the guy who sewed up his wound earlier today put something inside, like a tracking device.\n\n2) Who the mystery man \"Dr. Cavanaugh\" works for.\n\n3) How much they know.\n\n4) Go on a date with Deb.\n\n5) Get his first tattoo tomorrow with Deb.\n\n6) Take punishment for the Kelly thing.\n\n7) Check out Yull, Petechons and Graham law offices.\n\n8) Make sure Rick is Ok.\n\n9) Get Minka on the payroll if she isn't in jail.\n\n10) Find out who owns the Casino now.\n\n11) Try not to throw a hip or injure his groin.\n\nA week ago, Fred's one sexual adventure had been more like a short tragedy. Over the last week, however, he'd scratched off almost every sexual fantasy he ever had; the last 24 hours being something he hoped to always remember. It had been a few minutes since he'd finished watching the women get to know each other better in the showers. They had meant to pull him in, but in a complete surprise, he'd been resolute, much to the chagrin of his harem. As they exited the Aquatic Center into the warm orange hued evening sky, he realized how beautiful they were, both individually and as a group.\n\nThe elder stateswoman, Professor Alexandra Muniz, soon to be den mother of Deb's former sorority, director of operations for the Ponytail Express and now harem sister. The only woman in the group with more air of authority than Deb, but not by much. She had kept up with the younger women just fine today. Among the harem, she had the second biggest pair of tits and was the best at sucking cock. Fred found that out in the women's locker room as well. Her chestnut brown hair was tied back in a high ponytail. She kept a respectful distance from the younger women.\n\nOnvipa Sakul Dasna, aka Oni, was the shortest but strolled with a fluidity that made both her agility and athleticism apparent. However, she didn't belong to any campus sports other than the softball team Fred knew about. Her flexibility was impressive, her fellatio skills even more so as she was second only to Alexandra. Mia not having sucked his cock yet meant the jury was still out, but top three at least. She also had the tightest vaginal tunnel, but Fred remembered their monster fuck from last night and wanted to fill her womb again soon. Oni smiled beatifically when she saw him, and her pace picked up as she walked towards him, dragging Thalina along by the hand. Her long, lustrous jet-black hair and dark, piercing eyes used to be intimidating, but now just added to her overall sexiness. She'd done her hair up in double ponytails, making her look younger.\n\nThalina Hughes, computer nerd and easily the most important of the bunch from a tactical point of view, was the tech specialist of the group. Lina majored in electrical engineering with robotics as a specialty. She was crucial to his plans, so surrounding her with excellent help, like Oni, was a definite plus. They got along well too, so that was a bonus. Lina cared about her appearance more than she let on, probably because her big chop tapered cut hairstyle was challenging to maintain, and it matched with her exacting nature. Lina's lifestyle was still active but nowhere near the level of the others, but she was still thin and owned a pair of long, graceful legs that were both distinctive and alluring.\n\nJessica D'Amico strode out like she owned not only the place, but the entire campus, her resting bitch face on display. Used to being doted on and listened to, she now found herself on the bottom rung of the harem. She obviously would not let it intrude on her own sense of self-worth, which Fred supposed a noteworthy trait on its own. As a jump rope zealot, her body was in peak condition, but even without that, she was an attractive young woman of twenty years. Honey blond hair pulled back using a maroon scrunchy, she wore a yellow dress that complimented her olive skin. The woman had style, no doubt about it. In a world without Deb, Jessica would be fighting for the right to be apex predator.\n\nDeb brought up the rear of the group, both captain and brainchild of the Ponytail Express. She had the look of someone who had just taken the first steps on a goal they'd been planning for a while. Fred was proud to be both a part of the team and Deb's boyfriend. A blond like Jessica, her hair was lighter, more golden, and shorter at just past shoulder length. She had a resting kind face, warm brown eyes and a generous, no-nonsense nature which made her confident demeanor less intimidating. For those who knew her, she had a competitive streak that was almost comical. It was her generosity that first led her to want to help Fred, but having fallen under the sway of his scent, she was the alpha of his harem.\n\nIt would be understandable for a passer-by to mistake the group of ladies for members of the swim team, especially if they knew Deb. They might see the women glancing at each other and conclude they were bisexual or lesbians. They might conclude they were caught up in some sort of poly sexual sex cult who were getting ready to sacrifice some poor male schlub in the parking lot to their death sex god or goddess to stay unnaturally beautiful.\n\nReality was stranger than fiction. Making sure he stowed the grill in the bed of his truck, Fred strolled over to meet the group of women. Oni broke ranks first, easily the fastest and most flexible of the bunch, leaping into his arms and making his shoulder ache only slightly. There would probably a be a little more blood when he changed bandages. She felt good in his arms. They kissed intimately.\n\n\"I love you Fred, but we have to talk first as a group,\" she forewarned. \"we need to talk alone soon, too. I want you to meet my parents.\"\n\n\"I love you too, Oni,\" Fred responded to the exotic beauty, not really wanting the awkward task of meeting parents, knowing it was bound to happen. She possessed the nicest little heart-shaped ass and Fred couldn't resist squeezing it while she had her legs and arms wrapped intimately around him.\n\n\"There'll be time for that later,\" the exotic woman promised, before letting herself down and out of his grasp.\n\nThe rest of the group arrived. A hug from Jessica followed a simple, innocent hug from Lina with a low-voiced request, \"Fred, we all need to have a conversation with you.\" Alexandra relegated herself to the background, but looked at him hungrily.\n\nUnlike the others, Deb kept a noticeable distance. Fred sensed too much anxiety among them. He understood Alexandra's and Jessica's anxiety for different reasons. It wasn't like she was risking her job being sociable with the group, but teacher-student relations carried a steep social penalty, and Fred didn't want to ruin that.\n\n\"Freddy, before you look, Mia will send you a text informing you she agrees, in principle, with what we're about to propose. While group outings can be fun, we also all want time alone with you.\"\n\nFred agreed. He knew why Deb looked the way she did; the girls worried he would veto them. Spending time with Deb ranked high on his list. Fred wasn't angling to spend a lot of time either with Alexandra or Jessica. Christ, one of them had a husband and a college career while the other showed up mainly to give Deb shit for being in a relationship with a loser. To say the table had turned for Jessica was an understatement.\n\nHe knew Mia and Oni wanted one-on-one time as well. The only woman he didn't get that vibe from was Thalina, of course. She seemed to prefer the group stuff.\n\n\"For that reason,\" Deb continued, \"we'll be coming up with a dating schedule, to be changed as the group grows.\"\n\nFred sniffed before answering, \"I couldn't agree more, Deb. I don't know many of you as well as I should. In fact, I don't really know all that much about Deb, and we haven't even gone on an actual date yet.\"\n\n\"Didn't you spend last night together?\" Jessica said.\n\nLina corrected, \"Fred spent last night with Oni, Deb, and Mia.\"\n\n\"The big redhead who's going to help us win the Championship?\" Jessica asked.\n\n\"Fred,\" Deb began, \"could you look at your cellphone, please?\"\n\nHe looked at his phone, narrowing his eyes at what he saw.\n\n\"Please order Jessica to tell us if she's spying on us, and if so, who for?\" read Deb's text from four minutes ago. Fred cursed himself for being slow. Was this why Deb wanted Fred to induct her into the harem?.\n\n\"As I was saying, I want to get to know all of you, including you, Alexandra.\"\n\nFred thought to himself that as of now, it didn't matter that she was married; she was now his woman.\n\nShrugging noncommittally, the professor licked her lips before answering.\n\n\"I have a busy schedule this week, Ma... Fred, but I have some openings if that would be okay.\"\n\nFred remained neutral, but inwardly he was pleased with the professor. The mature woman almost called him \"Master\". That subtle slip of the tongue turned every single woman in the harem on. Jessica and Lina suddenly chewed their lower lip. Oni fidgeted, bouncing subtly on the balls of her feet, staring at him. Deb's nipples suddenly stood at attention. Fred knew he could have all of them right now, and suddenly, his cock woke up as well.\n\n\"Calm down everyone,\" he cautioned, \"in the spirit of continuing with the date night planning, I'd like to invite all of you on a date tomorrow night at the Venture Club. It's a dance club inside the Hotel. I'm thinking drinks, dancing, and debauchery, but I'm game for anything else.\"\n\nThere was a collection of both smiles and grins, even Deb in her current state. She was still waiting patiently for him to drop the boom on Jessica.\n\n\"I can date you at almost any time you want. Even with finals all week, I want to spend time with each of you. I propose Alexandra get first dibs on scheduling because of her circumstances.\"\n\nDeb nodded, shooting Fred a \"get to it\" glance. He gave her a nod he hoped conveyed \"Okey dokey\".\n\n\"Cool, sir,\" Lina answered, giving him a bright smile, her braces gleaming.\n\nOni wore a bit of a pout. \"I'd like to go next, Fred,\" she proposed.\n\nJessica cleared her throat loudly before cutting in. \"Fred, I've got a busier schedule than Professor Muniz, but I don't want to take her spot. I feel like I should go next, though.\"\n\nThe Italian jump rose artist gave him the opening he'd been waiting for.\n\n\"You bring up a valid point, Jessica,\" He began, \"but before we discuss our date, you're going to tell me the primary reason you were at the meeting today.\" The order caught her flat-footed. If a word were a weapon, his order would have drawn blood.\n\nShe blinked, then her eyelids fluttered as she tried to fight the compulsion.\n\n\"Alicia paid me to show up and do what I could to sabotage Deb's team,\" she admitted.\n\nWhatever sexual tension present in the warm evening air vanished in a heartbeat..\n\n\"You cunt!\" Lina spat, outrage in her voice.\n\nOni shook her head, slipping her sandals off her feet. Jessica was about to get a beat down by a woman exceedingly capable of doing so. Alexandra was more above the drama playing out in front of her and clearly wanted to leave. Fred was in Deb's camp; there was an opportunity to turn the tables. Jessica looked terrified, and for good reason.\n\n\"I hate to interrupt, but if we're done here, I'll be going home,\" Alexandra interrupted. The Latin beauty looked first at himself, then at Deb. Fred nodded and Deb said, \"It was nice meeting you, Alexandra.\"\n\nIt was almost a hitch in a serious matter. The group pivoted from wanting to destroy Jessica, to giving Alexandra a polite farewell, before returning to the turncoat.\n\n\"Alicia Waters?\" Deb asked Jessica. The sexy Italian nodded an affirmative.\n\n\"Deb, I'm so sorry! That was before I knew!\" she blurted.\n\nFred wondered what sort of damage Jessica could have done to undermine the team. Turn key players against Deb, maybe? Funneling intelligence would be valuable. The meeting revealed Mia Riley had returned from her suspension. If you knew who the key players on the team were, you could do almost anything, including slashing tires to get them to not show up. Who knew the city softball league would be so cutthroat?\n\n\"Jessica, explain more of what Alicia paid you to do.\"\n\n\"Um, I was supposed to report to Alicia, do what I could to undermine Deb, I was s-supposed to st-steal you from Deb, but when I found out it was you, I didn't want to because I-I thought you were s-so lame!\"\n\nFred finished for her, \"and someone like me was beneath you.\" Jessica nodded in the affirmative. Fucking cutthroat for women's softball.\n\nOni and Lina were getting ready to burn Jessica at the stake, so Fred held out his hand to both of them.\n\n\"Both of you stop for a second. Oni, think about it. Five days ago, you weren't far from where Jessica is now regarding how you felt about me.\" It was like he threw cold water on her. Oni hadn't been a big fan of Fred all school year until last night. Her look of guilt spelled out her own realization of that fact.\n\n\"That's alright, Oni. I only say that because it's possible for feelings to change. Isn't it, Jessica?\"\n\nJessica nodded eagerly. \"You changed me when you turned me into your...your slave.\"\n\nFred turned from Jessica to Deb.\n\n\"How do you want to play it, dear?\"\n\n\"Jessica, I'm going to use you as a double agent. Maybe we can work out some sort of disinformation system. I want to avoid using Freddy's ScSc directly, but sending Jessica into their team would influence them. I'm a softball purist, so I'd like to beat the Nightingales on the field.\"\n\nJessica shook her head, \"If you don't mind my saying, it seemed less that she wanted to sabotage the team, more she was looking for personal stuff regarding you.\"\n\nDeb looked at the Italian beauty. \"Jessica, your mission that you have no choice to accept will be to report on why Alicia is making the softball season personal.\"\n\nFred waited before saying anything, assessing the ladies. It was clear Oni and Lina were furious. Deb was angry too, but she knew her foe was Alicia, not Jessica.\n\n\"Jessica, I want you to calm down,\" Fred ordered. The fit italian's body responded to his command. She looked at him, looking both relieved and hopeful she was going to get out of this.\n\n\"If our group is going to grow, I'm going to need a personal assistant. Until I find someone more qualified, you're going to be my gopher,\" He explained to Jessica.\n\n\"Gopher?\" she asked, confused.\n\nOni interjected, \"Go for this, go for that, you ignorant twat. Even I know that.\"\n\nLina tittered. Jessica was going to mount a comeback, but Fred stopped her with a hand.\n\nFred began, \"You will be my personal assistant, Jessica. You will do anything I tell you to. You will be loyal to me on pain of death.\" Fred watched her body and face react to what he was saying. The scent stimulated her, while her suggestibility to both his orders and Deb's was taking hold, changing her core values and needs. All she could do was nod her head.\n\nDeb asked, \"Jessica, how much money do you have?\"\n\n\"I currently have $825 in the bank. My parents send me $2000 a week,\" Jessica answered.\n\nFred's eyes got big. Deb sported a rueful grin.\n\n\"Holy shit,\" Lina exclaimed.\n\nOni smile didn't reach her dark eyes as she stared daggers at Jessica, \"If you're getting that much per week, how much is Alicia paying you?\"\n\n\"Free salon visits for the next three months,\" Jessica replied meekly.\n\nDeb mused, \"I think you'll be able to use some of that money to take Fred shopping. You could fit that in tomorrow.\"\n\n\"We have tattoos and the date tomorrow,\" Fred spoke. Deb gifted him with a smile and an eyebrow raise.\n\n\"Anyone can come on the date,\" he reminded the other girls.\n\n\"I can make the time,\" Lina smiled.\n\n\"I'm there, Fred,\" Oni promised. Fred reminded himself he needed to talk to Oni alone. Something was up there; since they'd had sex, she seemed more emotional. Maybe Deb knew something.\n\n\"If you're going out with me tomorrow night, please wear a dress.\"\n\n\"Why does Jessica get to go shopping with you?\" Oni asked, a slight whine crept into her usual silky voice.\n\n\"It's the best version of date time Jessica will get this week. I'll be spending more time with each of you, but Jessica has to earn the honor of an actual date. Except for tomorrow night, since we'll need someone to get us drinks and possibly run errands for the group.\"\n\nHe looked at Jessica, resigned to her new role.\n\n\"You'll be there tomorrow night, and you'll serve all of us, is that clear?\"\n\nJessica nodded her head.\n\n\"Is that clear, slave?\" Fred reiterated.\n\n\"Yes, Master,\" Jessica obeyed. Her erect nipples suddenly made an appearance. She had an impressive body, but aside from that, Fred had no feelings for her.\n\n\"What now, gang?\" Thalina asked, holding Oni's hand.\n\nFred was going to say something, but was cut off by an approaching Ford F-250 Super Duty diesel. The daytime running lights were on, and he knew enough about the quad lights to know when it got dark, those babies would light up the night well. To Fred's relief, it was Rick.\n\n\"Is that Rick?\" Lina asked. Fred nodded.\n\n\"Everyone, this is Rick. He's one of us,\" Fred announced, glad his guy was still running free.\n\nDeb was beside him, her hand in his. Fred squeezed it, leaning in.\n\n\"Did you tell him to be here?\" she questioned.\n\n\"Nope,\"\n\nRick parked and got out. Fred and Deb came over, followed by the rest of the group. Oni circled around back, while Lina and Jessica stood at a safe distance.\n\n\"How's it going, Rick?\" Fred asked. Rick walked over and Deb interposed, stopping the powerfully built beady eyed man.\n\n\"Please, call me Detective Rogers,\" he grinned, looking at Deb, \"I take it you're Deborah Stallings?\"\n\nShe nodded yes, staring at him impassively. Rick suddenly realized he was in unfriendly company. Oni was behind him, while Deb stood in front of him, resolute. He raised his hands in surrender.\n\n\"I come bearing gifts, we'll need to move them from the back. I'll need some help with that, Fred. How's your shoulder?\" Steve asked, interested.\n\n\"Slightly uncomfortable, but could be worse,\" Fred answered.\n\nRick, or Steve's appearance hadn't changed. He was still clean shaven and had his crewcut.\n\nThe gang followed Rick around back to the bed of the truck. Rick had the key in his hand and pressed a button, dropping the tailgate, then pulled out a step to make it easier to walk into the bed of the truck. There were four non-descript duffle bags in the bed.\n\n\"I'd like to keep the olive drab one,\" Detective Rogers requested.\n\n\"What are they full of?\" Jessica asked meekly.\n\n\"See for yourself. Find a place to store these, hopefully somewhere safe.\"\n\nDeb and Oni were still on alert, but Fred followed Steve into the bed of the truck.\n\n\"I hoped you'd stay around and report to Yull, Petechons, and Graham,\" Fred got the impression Steve was getting the hell out of dodge.\n\n\"Fred, if it was just the Casino and the Mr. Terry stuff, I'd stay, but there's more going on.\"\n\nFred unzipped a duffle and saw multiple stacks of hundred-dollar bills. He lifted, and it had to be fifty pounds. He tried to guess how much money fifty pounds' worth of hundred-dollar bills was and came up with \"shitloads\". He handed the duffle bag to Deb. She strained a bit with the weight, but she wasn't in incredible shape for nothing. She put it on the ground behind her and Oni crouched to open it.",
        "\"Holey Moley,\" she exclaimed. Lina and Jessica walked over, both looking over each of Oni's shoulders.\n\n\"Are they all hundreds?\" The computer nerd asked, braces flashing.\n\nSteve answered from the truck, \"As far as I know. My bag is closer to seventy-five pounds.\" He turned to Fred, who gave Deb the second bag.\n\n\"More stuff going on?\"\n\n\"Yeah. FBI is involved because of the human trafficking element, but they'll vacate when they get to a certain point. It won't surprise me if Mr. Terry goes missing within the next week or two. I'm not sure why he spilled the beans, but I'm guessing that's because of you.\"\n\n\"I had something to do with that, yeah,\" Fred confessed, moving the last bag to Deb, then stepping down off the bed.\n\nFred noted Lina kneeling beside Oni and whispering something in her ear. Oni's eyes widened.\n\n\"Why is a government agency going to stop its investigation into human trafficking?\" Fred asked.\n\n\"Everyone assumed Mr. Terry managed to get women from all over in exchange for some from the area. A couple of us knew that wasn't true. He never handled the nuts and bolts of it. Minka and I know who was supplying most of the fodder.\"\n\n\"Tell me, Steve,\" Fred commanded.\n\nHe nodded, \"It was plain to see some of the women had been experimented on. Most had no memories of their experiences. They paid Mr. Terry to use his human trafficking contacts to funnel them to other locations worldwide. You're looking at some of the money they paid him to do this.\"\n\nFred exchanged a knowing look with Deb.\n\n\"You're going to say you told me so, aren't you,\" Fred began.\n\nDeb answered her lover by raising an eyebrow. They both knew it was NireCue, and Steve thought they were large enough to warn off the FBI. And Fred had just shut down that operation. The only question was if Yull, Petechons and Graham were working with them. The answer had to be yes.\n\n\"Fred, I know you're the inquisitive type, but you need to stay away from the Casino thing for a while. Forget about the defense attorneys. Find a finance lawyer and do that thing you do.\"\n\n\"That's good advice, Steve,\" Fred said, suddenly feeling like he was back in the deep end of the pool.\n\n\"There is one more option,\" The clean-shaven fugitive added, \"take one of those bags and disappear. I can get you identification and a new life on a beach in a country with no extradition. Fred, I'll flat-out say it so you can damn well hear it-they'll find you. You can't win.\"\n\n\"Thanks Steve, but I have too much right here.\" Fred looked at the women, suddenly quite intent on his reaction to what Steve was saying. Suddenly there were more serious things to worry about than women's softball.\n\nHe looked at his lover and grinned, \"I'm scorekeeper for the Ponytail Express. I can't leave just yet.\"\n\nSteve sighed. \"Can't say I didn't try.\"\n\nThe group closed the back end of the truck, and Steve hugged Fred.\n\n\"I know you made me loyal to you. You could have done a lot worse and for that, I'm obliged. However, If I see you again, I'm going to assume you're working for NireCue and I'll take steps.\"\n\nFred patted Steve on the back. \"Ammonia cuts it drastically. Vinegar or cleaning chemicals can do the trick, too. A bullet to the brain from range would also work.\"\n\nThe pair both chuckled at the last mention.\n\n\"I'd say stay safe, but we both know that won't happen. How about I wish you good fortune instead.\"\n\n\"That'll work, Steve,\" Fred said, surprisingly emotional. He didn't know the guy well, but he'd been without a father figure for a long time, and he nearly choked up as old memories resurfaced.\n\n\"Sorry we never properly met, Mr. Rogers,\" Deb shook his hand.\n\nHe chuckled again, \"if you're sticking around, you should try to find Minka. The defense attorneys have both her, Guppy, and a few other employees of Mr. Terry's holed up somewhere.\"\n\nDeb's eyes widened. \"Minka might be staying at the same hotel we're in?\"\n\n\"Probably under an assumed name. We could find out from the legal team I suspect,\" Lina suggested.\n\nOni and Deb exchanged worried looks.\n\n\"I'll say one thing,\" Steve said as he got into the truck, \"Deborah Stallings name came up and Mr. Terry nearly had an aneurism when he found out you were Ned Stalling's daughter. That name meant something to him.\"\n\n\"Any idea what it meant, exactly?\" The fit blond asked.\n\n\"Only that you were off limits,\" Steve said, starting the truck.\n\n\"I'm surprised Fords start on the first try,\" Fred teased.\n\n\"For fuck's sakes, Fred, buy a new truck that doesn't suck,\" Steve teased right back. With that, he backed out and drove away.\n\n\"Well, shit,\" Fred said.\n\n\"What just happened?\" Jessica asked.\n\n\"Santa Claus came early this year, twat,\" Oni answered before adding, \"Fred, I'll take one of the bags and hide it at home.\" Her tone was softer than usual, probably because she was still digesting what happened. Unlike Jessica, the other girls had a better idea what was going on, and were more somber as a result.\n\n\"I'll take the other one,\" Lina offered, \"I'll hold it until you've spoken with a lawyer, should you go that route.\"\n\n\"I'll find us some help with the funds,\" Fred mused.\n\n\"What about the Minka situation,\" Deb added.\n\nFred answered, \"She had a distinctive smell. If she's in the hotel, I'll find her.\"\n\n\"Are we going to kick her ass again?\" Oni wondered.\n\n\"Who is Minka?\" Jessica asked, exasperated. It wasn't hard to see she was relieved the group wasn't concentrating on her transgressions but alarmed at how serious things were that she was being ignored.\n\nLina answered, \"Minka is the reason for Oni's bruises and Fred's knife wound. Deb and Oni kicked her ass twice.\"\n\nDeb added, \"with an assist from Fred's ScSc.\"\n\n\"Okay, two bags with Oni, let me know if you can't move it, I can call Benji.\"\n\nJessica asked, \"Fred, did you say you need a financial attorney?\"\n\n\"Yes Jessica, I did.\"\n\n\"My dad is a financial attorney.\"\n\nDeb snickered, \"Of course he is.\"\n\nThe group loaded two bags in Oni's car, one into the bed of Fred's truck, the group hugged and kissed, and disbanded.\n\nDeb and Fred drove by the dorm, deciding to drop the duffle bag off in Kelly's room. They hadn't left the parking lot before Deb began.\n\n\"We need to talk about Oni, Freddy,\" her tone was calm, but serious. Her body was against his in the cab of his ancient dodge.\n\n\"Yeah, what's going on?\"\n\n\"I did not know how smitten she was with you! Before I say anything, tell me you didn't command her to do anything funky or wildly inappropriate.\"\n\nHe shook his head no, glancing her way while he drove. He couldn't help but notice how good she smelled; it was better than usual. Fred noticed the presence of a stronger fragrance that accompanied her own natural aroma. If he had to describe it, he'd call it a harem smell. It was hard to believe that until last night, he'd only been with Deborah. Heading into 24 hours later, one woman had grown into five.\n\n\"Deb, the only thing I've done is what you've seen with the hypnotic suggestions, and I've removed those.\"\n\nHis lover seemed satisfied enough to continue. \"Oni is head over heels in love with you, Freddy. She talked to me about it a bit. I'm not sure she'd want me to tell you what was said, but I want to prepare you.\"\n\n\"Deb, you can't say something like that and then not say, it's just bad form.\"\n\n\"Oni wants to have kids with you. She is hoping there's a bun in the oven already. It's damn odd.\"\n\nGiven the revelation, Fred thought he should be surprised or taken aback. Instead, he was deeply moved and a little turned on. There was a part of him that wanted to impregnate Onvipa. However, there were long term consequences that suggested it was a shitty idea.\n\n\"Earth to Freddy!\"\n\nDeb's tone brought him out of his reverie.\n\n\"I have no idea why she would think that. Does anyone else in the harem want to have my children?\" He asked.\n\n\"Not that I know of, which is why I'm wondering if it's not some sort of command you gave her, like the fuckup in the hot tub when you made me your slave.\"\n\nFuck, Fred thought. He felt bad about that one. Would making Deb his slave take away her personality?\n\n\"Deb, I order you to be resistant to anyone who commands you to be their slave.\"\n\n\"Um,\" Deb paused before answering, \"yes, Master.\"\n\nWhat the fuck, Fred thought, before he heard his girlfriend giggle.\n\n\"Oh, having fun at my expense now,\" Fred chuckled.\n\nThey parked and hauled the duffle bag full of money up to the fourth-floor west wing, storing it in Kelly's room instead of their own. Fred instructed everyone on the wing to know it was in Kelly's room and to guard it with their lives and not tell anyone else about it.\n\nThe couple changed clothes, getting ready for their evening with Mia. As they did, they conversed.\n\n\"What should I do about Oni, Deb?\"\n\n\"Talk to her, Freddy. Find out what she really wants, then what you can to help.\"\n\n\"So be a good friend.\"\n\n\"Just share how you feel and work together to establish boundaries, should the need arise. Then don't waffle on those boundaries.\"\n\n\"That sounds like some Dr Phil shit, dear.\"\n\n\"Failing that, if you feel that things are going badly, command her to at least see reason.\"\n\n\"I don't want to rely on the ScSc, but if things go south, I'll have to.\"\n\n\"Just be gentle with her Freddy. She's my best friend.\"\n\nThe pair stopped to talk to Kelly for a bit. She shared the great news that she and Edward were going to see each other tomorrow night. Hugs were given, Kelly and Deb embraced for an inappropriate length of time, and it was time to get ready to go. They changed clothes, packing light for a couple of days. It was on the ground level that Fred noticed a curious scent. It was faint but there.\n\n\"I noticed at the aquatic center you really got in the master-slave thing with our new recruits.\" Fred could feel Deb scrutinizing him, but she had a point.\n\n\"I may have gone overboard, and that's not a pun, by the way,\" Fred admitted.\n\nThe athletic blond smirked. \"If you meant the pun, I'd have to kill you.\"\n\nFred smiled. The two held hands as they strolled outside on the way to Fred's pickup. As he brought Deb in for a kiss and snuggle, he scanned over her shoulder, sensing the scent trail. Deb kissed back, sticking her tongue into his mouth. Even after cleaning up, Fred could taste Alexandra on her tongue.\n\n\"Aren't you feisty,\" Deb purred as they broke from the kiss.\n\n\"That's me, feisty Freddy who fucks flirty females.\"\n\nThe trail was faint, but he couldn't follow it.\n\n\"Say Deb, can you keep an eye out?\"\n\n\"For what, more wordplay?\" she giggled.\n\n\"No, I think Minka is stalking me.\"\n\nDeb was as happy and relaxed as she'd been all day, apart from the morning debauchery in the Executive Suite. She was with her man, watching him, noting how far he'd come since just six days ago. At the mention of Minka, she switched back to guarded.\n\n\"If she's set a trap, it'll be close to your truck.\"\n\nHe nodded as they walked.\n\n\"Her scent doesn't lead in that direction, dear.\"\n\n\"Doesn't matter. She could be throwing you off. And you never answered the question. What made you decide to make both Alexandra and Jessica sex slaves?\"\n\n\"But she doesn't know what I can do. I'm experimenting with a certain aspect of sex. Different women have different needs, and Alexandra is in a position of authority, and I reasoned she'd like a chance for someone else to take control of her. Jessica is going to be a morality test for me.\"\n\n\"You don't know for sure that she doesn't know about you. I wouldn't assume, Freddy. Okay, I agree with your call on Alexandra. It was clear she liked it when other people took charge. What about Jessica makes you say that she'll be a test?\" The pair separated slightly in the parking lot; Deb wanted both hands free.\n\n\"Fair point, safer to play it safe. It's possible she found a way to cut her scent and is ready to spring a trap. In Jessica's case, I'm thinking about changing her personality. Making her my personal assistant is a first step in that direction. I trust that either you or Mia will keep me grounded. Also, I liked how you took charge in the hot tub. Very sexy, Deb.\"\n\n\"I don't like Jessica, but I don't approve of making outright slaves, Freddy. Remember who you are.\"\n\nHe conceded the point. \"Always, Deb. I want you to know the slavery thing is just a sexual thing that won't extend outside the bedroom, so to speak.\" While it wasn't a lie, it wasn't honesty, either. Subservience in sex was just as fun as a woman who took charge. Fred liked both types.\n\nThe pair approached the truck. \"Doesn't look like the tires are flat, but I'm checking the brake line just in case,\" Fred said.\n\nDeb was on guard, going to the driver's side with Fred instead of around to the passenger side. Even though the lot was nearly empty on a Saturday evening, there was a tree line not far away. That was what Deb eyed as the pair strolled to the vehicle. Fred always parked out here in order to get a good walk to Deb's room.\n\nHe crouched to the ground, taking a big sniff on the underside of his truck, smelling nothing out of the ordinary.\n\n\"I think we're good, Deb. No tampering.\"\n\n\"Looks okay to me, too.\"\n\nSatisfied but still cautious, the couple piled into the truck. Fred checked his cell and had messages from about a dozen different people, about eleven more than he was used to.\n\nSeparate text messages from Mary and Martha Boltzman needed to be replied to. He told them apart in his head by giving them nicknames: Tattoo Mary and Holy Roller Martha. A text from Oni read, \"I know you said you were busy tonight, Fred, but I'll be in room 402 in the hotel waiting. I love you.\" He decided to text her an \"I love you too, Oni,\" before tending to the other texts. Fred confirmed tomorrow's appointments. Deb and he were getting tattoos, then shopping with Jessica D'Amico. Tomorrow evening was a 3D event - dinner, drinks, and dancing.\n\n\"Hey Deb, can you answer a question for me?\"\n\n\"I'll try, babe.\"\n\n\"What was the deal with the punch at the meeting today?\"\n\nDeb blushed. \"Short version or long version?\"\n\nFred was officially intrigued. \"Let's try short and see where that goes.\"\n\n\"We spiked the punch with your sperm.\"\n\nIf Fred were drinking water he would have done a spit take. \"Well holy shit and what the fuck, Deb?\"\n\nShe calmly explained, \"Your ability doesn't work as well in chlorine, but if they all had a little bit of your pheromones inside them, they would be more pliant.\"\n\n\"I don't recall donating for that little operation,\" Fred spoke, still incredulous.\n\n\"Remember when we had sex a couple of times? I made sure there was enough sperm to mix into the punch. It was a pretty good amount, Freddy. You're an awesome sperm generator.\"\n\nThey arrived at the next leg of their journey, which was the medical center to pick up Mia and her cousin, Niamh.\n\n\"Deb, we have trouble,\" Fred announced as he pulled to the curb. It was dark and Mia and Niamh were waiting outside to meet but there were also three guys around them. One of them was David, Mary's boyfriend prick from the meeting earlier.\n\n\"Three boys need a beating,\" Deb murmured, opening the passenger door and leaping out before the truck came to a stop.\n\nMia saw her opening, throwing an overhand right at the guy nearest her cousin. By some miracle, the blow didn't land cleanly, but it was still hard enough to rock the guy back and make an audible sound Fred heard.\n\n\"You fuckers!\" David yelled, recognizing both the driver and passenger, face transforming into a rictus of hate. He drew something out of his pocket.\n\nFred got out on the driver's side, deciding to run around the front of the pickup. What he didn't see was Deb coming out of her roll on a jog toward the second guy, who apparently was so confused about sudden change in situation that he backed up, almost breaking ranks but it was too late. She caught his weak, untrained jab, transitioning perfectly into an O-soto Garuma judo throw, sweeping both legs cleanly as he fell to the ground on his back. Deb still had his arm and knelt on his shoulder, striking him in the solar plexus. Her man was down.\n\nMia blocked the other guy's kick, using her footwork to step inside his weak guard and deliver a forearm shiver to his chin, stripping him of all his defenses before lunging into him with her shoulder, putting him on the ground.\n\nIt was only seconds, as Fred rounded the front of his truck, he saw David waiting for him. There was something in his hand that looked sharp.\n\n\"Fucking scorekeeper!\" he mocked, lunging with the knife. Fred saw it coming but still barely side-stepped. He was trying to work his way back to the ladies for more seasoned assistance, but for a change he didn't think he was outclassed. He wished he had a tire iron, though.\n\nFred maneuvered around David, backing away from him as he did so, toward the sound of a man screaming in agony. David looked around Fred and saw the other two fights coming to an end.\n\n\"This isn't over!\" He yelled before running away.\n\nFred ran after David and tackled him, which was stupid for two reasons. One, David was running with an edged weapon. Two, they were on pavement, which doesn't feel good when you land on it.\n\nLuckily, the knife went clattering away into a nearby bush. Fred's ill-advised tackle added new cuts and abrasions to his body, but he landed mostly on top of David, who took the brunt, landing hard on his chest, hands and face.\n\nFred rose to his feet, panting like he'd just run a marathon. \"It's over, David. You come at me again with a knife and I'll press charges.\"\n\n\"You took my girl!\"\n\n\"Oh, bullshit! You lost her because you're an arrogant prick. Then you decided to try to find me with your buddies to hurt me, or worse. Look where that got you, Sunshine.\"\n\n\"I hope you get hit by a car!\" David screamed, still on the ground.\n\n\"Stay the fuck away from me, David. Final warning.\"\n\nFred backed away, giving David both middle fingers. When he turned to look at the situation, two more guys were on the ground, Mia had a goofy grin plastered on her freckled face, Deb stood by Niamh but eyed Fred with a similar. \"Babe, we have to get you self-defense training.\"\n\n\"Did you call him 'Sunshine'?\" Mia asked.\n\nThe group piled into the ancient dodge, all four packed in tight.\n\n\"Well, that was awesome,\" Niamh said, breathless. They'd piled into the truck, Mia and Fred bookending Deb and Niamh. The last 24 hours of rest and medical care had been kind to the pretty brunette. Niamh possessed a voluptuous figure, but drug use and generally bad habits had caused a deterioration to what was a dark beauty. Niamh's blue eyes and dark eyebrows reminded Fred of Rachel Weisz or Katie McGrath. Her body was still emaciated, but with the proper care she would be heartbreakingly beautiful. Fred supposed this was why Mr. Terry had kept her.\n\n\"It's never too dull with you, is it Fred?\" Mia asked, facetiously.\n\n\"I try, Mia, I try,\" Fred answered with a sigh.\n\n\"It smells incredible in here,\" Niamh murmured, her creamy thighs shifting, sandwiched by her redheaded cousin and the athletic blond.\n\nHer skin was alabaster, with cuts, scars, and abrasions from prolonged physical and sexual abuse. Deb was a stark contrast, her skin bronzed well enough that she had tan lines where a proper woman should have them. Mia was somewhere between the two. As a proper ginger, staying in the sun too long would be like sticking tin foil into a microwave.\n\n\"You feel funny because of me,\" Fred admitted. He wanted to command Niamh but left that to her redheaded cousin. \"Mia, did you want to do the honors?\"\n\n\"Niamh, you feel drowsy. You should go to sleep, and dream of something nice.\"\n\n\"It does smell fantastic in here,\" Deb agreed, \"better than usual.\"\n\nMia sniffed. \"Yeah, it does. What's up with that, Fred?\"",
        "\"I can only smell you ladies,\" he admitted.\n\n\"What do I smell like, Freddy?\" Deb asked.\n\n\"Lilacs with a hint of musk and chlorine.\"\n\nShe grinned. \"Nothing else?\"\n\n\"When you're aroused, the lilac and musk scent intensify. It's pretty awesome,\" Fred complimented.\n\n\"I'm almost afraid to ask, but what do I smell like?\" the redhead asked.\n\n\"Popcorn, and leather, primarily.\"\n\n\"That's an odd mix. Does my pussy smell that way, too?\"\n\n\"Your pussy smells like all of the above, plus about a dozen more that are tough to explain. You taste even better than you smell. You both do.\"\n\n\"Smooth customer.\" Mia had no idea how sexy she was with that low tenor still feminine voice coupled with that \"Oh Shucks\" grin; his dick pulsed.\n\nNiamh mumbled something about nice, and even dozing began to masturbate herself.\n\n\"Jesus. She's done this before,\" Mia spoke, exasperated.\n\n\"She should just keep going if she feels good. I don't mind,\" Deb offered.\n\n\"You're not helping, cheerleader.\"\n\nDeb decided to change the subject abruptly.\n\n\"On the bright side, I think I know what your punishment should be, Freddy\"\n\n\"Hit me with it, dear.\"\n\nNiamh continued to finger herself slowly. She smelled like orchids.\n\n\"For the length of my punishment, you must refrain from sex with anyone.\"\n\nFred winced.\n\nMia broke the silence. \"Sound's harsh.\"\n\n\"Well, I'm going to be someone's slave for the next week,\" Deb countered.\n\n\"Why?\" Mia asked, confused.\n\n\"We broke up a couple that we shouldn't have.\"\n\n\"Yeah, but you can get them back together, right?\" The redhead asked.\n\n\"Trying to,\" Fred answered, \"I'll know for sure tomorrow morning when I talk to Edward, but it's looking good.\"\n\n\"Then what's the deal with the punishments?\"\n\n\"It's a reminder not to that kind of thing. Consider it a self-grounding.\"\n\n\"Do you still get to have sex, Deb?\"\n\n\"Yes.\"\n\n\"Ouch. That's not very fair to Fred, then.\"\n\nFred listened to Mia counter. She was good at that, but he wanted to support Deb. He didn't think the punishment was very realistic.\n\n\"Deb, I would like to add terms to the punishment. If I need to control someone like for instance Minka, I reserve the right to have sex with them. However, not having sex with any member of the current group is acceptable.\"\n\nMia's voice cracked. \"Why the hell would you bring that bitch up?\"\n\n\"She's recently been inside Deb's dorm hall, stalking either me or Deb. Either way, I may need to be able to take her.\"\n\n\"You mean take her out like killing her, right?\"\n\n\"I mean, fuck her brains out. Inject her with some ScSc.\"\n\n\"No. Not her, Fred. Fuck that bitch!\" Mia bristled.\n\n\"Mia, I know you don't like her. Hell, she made me into a pincushion, but with a shady organization keeping tabs on me, I'd like to get as many capable people around me as I can, and she fits that description.\"\n\n\"Dammit Fred, I see your point. Just keep her away from me, okay?\"\n\n\"That's fair. And hey, it might not even happen. I'm throwing out hypotheticals.\"\n\nThe group eventually parked outside the hotel. Mia woke her cousin up.\n\nFred and Deb got out on the driver's side, Mia and Niamh scooted out the passenger's side. The valet took Fred's keys and jumped into the truck. His eyes bugged out, because as soon as he did, his cock was rock hard and the inside of the truck smelled awesome. The valet parked, then made a beeline to the restroom and rubbed one out, thinking of the gorgeous women who exited the vehicle.\n\nNot thirty minutes later that same valet would get a car come through, sit inside of it, and feel almost the exact same way, as he parked the car for a lone young woman with asian features and raven black hair.\n\nThe quartet entered the lobby of the hotel and Fred immediately discovered three familiar scents. They were Mr. Terry, Guppy, and Minka. Judging from the scent trails, Mr Terry and Guppy were a group whereas Minka was alone and passed through within 15 minutes. Fred knew he could follow all three scent trails until tomorrow morning, when the cleaning crew came through.\n\nThere was another note to Minka's scent that he couldn't quite put his finger on. It was still her, just a bit different.\n\nOn the way up to the Executive Suite, the ladies were looking at their cellphones, except for Niamh, whose hand wandered down under the waistband of her shorts. She looked at Fred with a cross between embarrassment and desire.\n\n\"Sorry,\" she offered.\n\n\"Nothing I haven't seen before,\" Fred answered.\n\nIt was silly, but Fred was impressed that Mia had gotten to a point where she trusted both him and Deb with Niamh's well-being, even though the scent was influencing her cousin. Fred had the urge to take her in the elevator while ordering Deb and Mia to do filthy things to each other, but it wasn't an overriding one. He'd been sated since the meeting, patiently anticipating the carnal plans Mia had for both him and Deb.\n\nHe hoped Minka wasn't waiting for them near the suite. He texted Oni, \"Mr. Terry and Guppy are in the hotel. If you're coming here alone, be careful, please.\"\n\n\"Guys, before we get to the top, Mr. Terry, Guppy and Minka are staying in the hotel.\"\n\nAll three women tensed.\n\n\"That's good to know,\" Deb said looking at him.\n\nNiamh's hand flew out of her shorts. \"That's not good to know. We have to run.\" She was on the verge of losing her composure.\n\n\"Don't worry,\" Fred soothed, \"this might be an opportunity to find out more about who their defense team is.\"\n\n\"It might be a trap,\" Mia spoke, clearly not liking the news.\n\n\"We're not running,\" Deb spoke to Niamh but also to everyone else, \"we're going to roll them up and we're going to do it as a team.\"\n\nMia looked at her cousin. \"But without Niamh.\"\n\nThe pale brunette looked almost relieved until the elevator doors opened. Everyone was on guard. There was no one in the foyer and the quartet moved in, Mia taking point while Fred and Niamh were in the middle, with Deb in tow.\n\nOver the next five minutes, the group went through both rooms in order to ensure the coast was clear.\n\nFred said, \"I think something's up with Minka. I'll grant you it may be a trap of some sort, but I think she's separate from Mr Terry.\"\n\n\"Fred, you don't know them like I do. If you decided to kill them all, not only would I help, I'd bring music to dance on their graves.\"\n\nMia was out for blood and Fred couldn't blame her, but that was a dark road to go down.\n\n\"What's better than killing is finding out what they know, then making their lives a living hell,\" Fred countered. He approached Mia slowly but surely. It had been since the morning he'd felt her embrace.\n\nShe saw him coming and was angry but didn't resist when he came in to give her a hug. She hesitantly wrapped her arms around him.\n\n\"I take it this wasn't what you had planned for tonight,\" Fred spoke lowly into her ear. She chuckled in response, hugging him tightly. Niamh grinned slightly, obviously happy for her cousin. Deb watched from across the room, still sweeping the area for listening devices.\n\n\"It's the opposite of what I had in mind.\"\n\nThe room suddenly buzzed, letting everyone know someone was at the door.\n\n\"Maintenance with the massage tables,\" a man's voice spoke from the other side of the door.\n\n\"Oh shit! My surprise,\" Mia said, releasing Fred from the pleasant hug and moving to the door. Mia was no idiot; she looked through the hole and whispered to everyone there were two people outside. Fred knew there could well be more but decided if they were going to storm the place they were done anyway.\n\nMia opened the door, and a man and woman came in, each with a massage table, along with blankets, towels, and squeeze bottles of requested oils. What amazed Fred wasn't the massage setup, but the fact that one of the maintenance staff was a pleasant looking woman with short, shoulder length platinum blond hair. Everything about the woman screamed average, but the smell of burnt oranges and musk were unmistakeably Minka's. Now he had to add master of disguise to the killer's repertoire. He wondered if any of the girls would be able to figure it out. Fred fugured out what the extra smell was; Minka had a large cut across her back.\n\nYou had to look hard to see the mark on her chin from the kick she took last night from Oni. In the end, the women didn't figure it out. Before the maintenance staff exited, Fred wrote \"laundry room 4th floor ten minutes\" on a post it note. He took out two ten-dollar bills and tipped each of them, putting the note into her tip.\n\n\"Thank you very much for supplying us with this,\" he complimented, seeing them both out. She didn't seem to shy away from his hand; in fact, her touch lingered.\n\n\"Mia, were you going to give us a massage?\" Deb asked after they left, smile on her lips.\n\nThe tall redhead blushed slightly, \"Seemed the thing to do.\"\n\n\"Well, that is awesome. I know I'm looking forward to it, aren't you, Freddy?\"\n\n\"It's incredible, Mia. You're incredible. Thank you,\" Fred smiled.\n\nThe redhead's \"Oh shucks\" grin surfaced again.\n\n\"Before I give out massages, we need to take care of the criminal element in this hotel,\" she announced.\n\n\"We'll have to sleep in shifts,\" Deb agreed.\n\n\"Fuck that, we deal with them tonight to make sure they don't fuck with us.\"\n\n\"Mia, there's more than just that going on. Mr. Terry may have been running a trafficking ring for the NireCue Institute.\"\n\n\"Really? Those assclowns?\"\n\n\"Yeah, those assclowns.\"\n\n\"If that's the case, the more Mr Terry spills, the more chance NireCue has of shutting him up by killing him. I take it he hasn't shared this information with the FBI?\"\n\n\"Freddy?\" Deb asked.\n\n\"I didn't know last night, so I couldn't get him to admit it then. Now that I know, I can have him go in and admit it for next time.\"\n\nAs the group talked, Fred waited for 7 minutes to go by before accouncing he was going to grab some ice as the group discussed multiple options.\n\n\"As an addition to everything else,\" Fred began, causing both Mia and Deb to look at him, \"Oni snagged a separate room. She wants to talk to me privately sometime later tonight. I was going to relay this earlier before all the other shit hit the fan.\"\n\n\"Oni's having...problems with her feelings for Fred,\" Deb spoke. She was uncomfortable talking about Oni in front of the other women.\n\n\"Say no more,\" the redhead offered, \"on the plus side she's reinforcements, right? You both kicked Minka's ass last night, against the three of us she doesn't stand a chance.\"\n\n\"While you ladies talk strategy, I'll get some ice. I'll bring my cell and be back in a bit.\" He motioned for Deb to walk him out, and she caught his look.\n\n\"Any chance we could order some room service? Niamh, Mia are you guys hungry?\"\n\n\"I could eat!\" Niamh admitted.\n\nMia shook her head. \"I'm still stuffed from the meeting, but we should order for Niamh at least and some apps, maybe.\"\n\nDeb walked Fred out. He pulled her in for a kiss. God, he loved kissing her. She was so hard, yet so soft and her kisses were like erotic tidal waves. She had the most active salivary glands around. He swooned momentarily, then broke the kiss.\n\n\"I'm meeting Minka in the laundry. I'll have my cell on in case things go pear shaped. I know you can follow my scent if you need to.\"\n\n\"I'll back your play, babe. Go and fuck your merc.\" Deb teased.\n\nMinutes later, Fred keyed the door to the laundry with his pass card. He stepped in and it was empty except for the maintenance woman, who stood about fifteen feet away. Fred closed the door; judging by the lack of foot traffic, either he'd made a terrific choice, or a deadly one.\n\n\"I'm Fred. Is Minka your real name?\"\n\nThe woman didn't grin. \"Perceptive of you,\" she spoke softly, with a Slavic accent, \"what gave me away?\"\n\n\"Nothing. Just played a hunch,\" he lied.\n\n\"And the others?\"\n\n\"Don't know I'm here, or that you were just in our room,\" Fred confessed.\n\n\"Then this is just as dangerous for you as it is for me.\"\n\nShe began walking towards him, producing what looked like a cross between a walkie talkie and a star trek tri-corder.\n\n\"What's that?\" Fred asked, fighting the urge to run. She stopped at five feet away.\n\n\"Turn around.\"\n\nSomething made him want to trust her, and it wasn't because of her looks. Fred knew he was looking at a chameleon; she could be ugly or gorgeous. It wasn't just masks, it was the way she carried herself. He turned around before she had a chance to repeat herself.\n\n\"Is that from the first Matrix movie? You going to pull some weird mechanical insect out of me...\"\n\nShe pushed him up against the door, then Fred felt heat in his wounded shoulder, replaced by cold. The whole thing was over inside twenty seconds.\n\n\"How do you feel?\" Minka asked.\n\n\"Like you reopened the wound you made yesterday when you hit me with one of your throwing knives,\" he answered through gritted teeth, \"can I turn around?\"\n\n\"You may. And you are welcome for getting rid of your tracker. They will succeed in tagging you again, but not until you and I have spoken.\"\n\nFred turned around, and she was right in front of him, tricorder on a washing machine. In her current alias she was about six inches shorter than his six-foot-one-inch height. She inhaled him deeply, her eyelids fluttering. \"O Bozhe,\" she muttered.\n\nFred smelled her growing desire, and he wanted to fuck her brains out.\n\n\"Minka, why are you helping me? What's in this for you?\"\n\n\"You think I'm helping you, but what I am doing,\" her features faltered for a mere second, \"is payment of debt.\"\n\n\"You really should be more vague when you answer questions,\" he replied with as much sarcasm as he could muster, \"what did you want to talk about?\"\n\n\"Did I say talk? I meant the other thing,\" Minka replied coyly.\n\nFred understood what she meant.\n\n\"Okay, Minka, mouth or pussy.\"\n\nShe chuckled, \"Sweet-talker.\" Her hands began exploring his body.\n\n\"Mouth. And you may not touch me, Fred,\" it was both a command and a threat.\n\nFred didn't like that, but decided two could play that game, \"In that case Minka, suck my cock.\"\n\nShe blinked several times before responding, \"Harazd.\"\n\nFred guessed it meant something like \"Okay\", because she knelt in front of him, unzipping his shorts. Seconds later, both shorts and briefs pooled around his ankles as the plain-faced killer stroked his erection. Fred marveled at the fact this was the same woman who had thrown a knife into his shoulder 24 hours ago. What a difference a day makes.\n\nHe told himself he wanted to make Minka his because she was a dangerous commodity; a wild card running loose who could cause real pain. While that was a legitimate reason, it was also true having a trained killer in his harem would be fucking cool. He stared as she slowly took him into her thin, moist lips.\n\nShe grabbed Fred's ass with one hand while grabbing his shaft with the other. Fred moved to grab either side of her head, and she batted him away, his cock still inside her mouth. He felt her teeth bear down on his manhood painfully, the threat clear.\n\n\"Don't. Bite. Me.\" He snarled, his command hitting her with tangible force. Minka was trying to exert her own control in the sexual tug of war. He moved to take her head in his hands and again she batted him away, while managing to still suck his cock. It was like she was trying to swat flies.\n\n\"I am going to cum inside your mouth and you are going to swallow every fucking drop,\" he ordered. She began bobbing on his prick, concentrating on the task like it was her sole mission. Fred was aroused, but not in his usual way, and not in a way he was comfortable with.\n\n\"Look at me,\" he commanded through clenched teeth.\n\nShe shot him a look, stopping her polishing of his knob.\n\n\"Keep going and look at me. I want you to enjoy sucking my cock,\" he commanded.\n\nShe began humming into his cock while going faster, sometimes moving her head from side to side, which didn't affect Fred in the least. He decided she really wasn't very good at sucking cock, which was something coming from a guy who hadn't received many of them. Fred imagined it was Alexandra and Oni sucking his cock in tandem, and he felt his nuts tighten. He kept his hands from her but pumped his hips into her mouth anyway while she kneaded his ass. She released his balls with her other hand, moving down to please herself.\n\n\"Do not masturbate yourself,\" Fred ordered.\n\nFred could tell she tried to stare daggers at him, but was too aroused. The action scrunched her face and looked adorable. He suddenly realized the reason she didn't want him to touch her was because he might ruin her disguise. Grabbing her hair would pull of her wig. Maybe the reason he didn't give good head was due to either a mask, or the persona of the non-descript woman she portrayed. All this was fascinating, but he was at the point of no return.\n\n\"Use your tongue,\" Fred spoke to her with annoyance, \"I want you to love sucking my cock.\" Once he felt her tongue on his glans, even as unskilled as she seemed, it pushed him over the edge.\n\n\"Swallow it all,\" Fred insisted as his dick shot ropes of cum into her mouth a half dozen times. Suddenly, he pulled out to shoot a load across her face, landing in a line across the bridge of her nose and onto her left cheek before Minka dove for his cock in accordance with his order.\n\n\"I want you rub the sperm that is on your face into your skin like lotion.\"\n\nAs she obediently performed the task, Fred noted she scooped the sperm onto her finger and rubbed it across her lower neck. So she was wearing a mask. He put his hand on her shoulder this time and she let him, albeit warily.\n\n\"Where are you hurt?\"\n\nShe blinked away a haze of lust enough to ask, \"What?\"\n\nFred heard her ask the question with a southern lilt to her voice. Was it her actual dialect, or just another ploy?\n\n\"Where are you injured? And who injured you?\"\n\nMinka looked up at him, still cradling Fred's deflating member in her hand. There was a rivulet of Fred's cum slowly running down her chin.\n\n\"My lower back is hurt. Knife wound by a rival agent.\"\n\n\"Jesus. You don't work for Mr. Terry do you?\"\n\nShe didn't answer, just shook her head, confirming his suspicions. She rose from her crouch, still fully clothed.\n\n\"I want you to let me get you off.\"\n\nFred stepped up into her, close but not kissing, their faces inches apart. Neither embraced the other; instead, Fred unbuckled her belt, and she unzipped, opening her pants to give him the space he needed. His hand glided over her pelvic region into her stubbly sex, feeling how utterly drenched she was as he began rubbing her vulva at a good pace. He felt her breath on his face as she gazed up at him with lust filled eyes.\n\n\"I don't want you to work for me, but you must work with me. We can do that, yes?\" he asked.\n\n\"Y-yes,\" came her breathless reply.\n\n\"I'm being watched by people I don't like watching me. I'd like you to help me out with that,\" he moved from rubbing her vulva to inserting two fingers into her dripping cunt. He began slowly moving them in, using his index finger to twist in a \"come here\" motion inside her pussy. Minka responded with a half snort, half ecstatic sob while she bucked her hips into his hand.\n\n\"You can help me out with that, can't you,\" Fred requested, twisting his fingers betwixt her vaginal walls.\n\n\"Yesyesyesyesyes!!\" Minka replied, almost incoherently, as her hips swiveled.\n\nFred chuckled, staring into her half-lidded eyes, \"Good.\"\n\nMinka moved to kiss him, but he moved back.\n\n\"You may not kiss me, but I want you to dream about it until our next meeting. Until then, keep tabs on me, protect me, keep interested parties off my trail if possible, and report.\"\n\nWhen Fred got to the word \"until\", Minka's insides quivered as her pussy convulsed around Fred's delving digits.\n\n\"If your mission runs counter to my survival, I want you to let me know. There's a bulletin board in the commons area of the Student Union. There will be a job posting for a clerk at Mel's Diner. It'll give directions on where to meet. Now repeat back what I just said.\"",
        "\"You may not kiss me, but I want you to dream about it--\", Minka spoke as she composed herself.\n\n\"Wise ass,\" Fred interrupted, grinning slightly, \"there won't be a message there tomorrow but starting Monday there will be.\"\n\n\"And now it is time for me to get back to work,\" the plain faced killer announced as she let herself out the door.\n\n\"Before you do, tell me if Mr. Terry knows we're all here,\" Fred framed it as a command, but tonally made it more of a polite request.\n\n\"Those attorneys have us all in one place so they can keep tabs on us,\" Minka answered before letting herself out the door.\n\nFred texted Deb he was on his way up. He was going to run this new information by his team and see what they thought. He really wanted Mia to give him a massage."
    ],
    "authorname": "A_Gavin_MaCross29",
    "tags": [
        "harem",
        "violence",
        "oral sex",
        "male dominant",
        "masturbation"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-ponytail-express-ch-11"
}