{
    "title": "All Under Control Ch. 02",
    "pages": [
        "It was surprising how quickly Mina and I fell into a pattern. I tried to keep her guessing but we naturally fell into a weekly cadence, with teasing through the working week punctuated with Mina giving me oral relief. She seemed much more willing to do this than before and I realised that she craved the feeling of being brought to the edge and then having to experience my orgasm while being denied herself. Afterwards, she would snuggle up next to me, aroused but now more happy and relaxed, as if the act was bringing her some measure of release from her own otherwise semi-constant craving.\n\nI would admit to feeding that craving, ensuring that we showered together and making sure that I cleaned her very thoroughly until I couldn't discern the difference between the slickness of the body wash between her thighs and her own flow. Even in public, I would be able to slip my hand up to her chest and gently roll her nipple between my thumb and finger through the fabric. She allowed this to happen, so long as it was done discreetly, even on packed commuter trains. It was as if being able to fully live out her teasing and denial fantasy had opened up all sorts of doors in her mind, allowing her to go further with me than she would ever have considered before.\n\nI would alter the timing of her release, but always at the weekend. If she'd had a rough week at work, I would save myself up and we'd have an explosive Friday night with orgasms fully allowed right through until Monday morning. To keep her guessing, sometimes I would deny her until Sunday night, letting her have a single orgasm early on and then asking her to service me later with Mina firmly back in denial.\n\nThen, on one otherwise unremarkable Thursday, the game changed.\n\nWe were on the couch, cuddled up, fully clothed. I had been teasing Mina pretty mercilessly throughout the week and I could see that it was taking its toll on her.\n\n\"What do you get out of it?\" I asked, \"How do you feel right now?\"\n\nMina stretched her lithe body out, taking a moment before replying.\n\n\"I'm feeling horny,\" she replied.\n\n\"You're always horny. I couldn't bear it,\" I confessed.\n\n\"I would never expect you to,\" Mina said, stroking my leg. \"I, uh, I guess I've just gotten used to feeling horny. Before, I'd get horny when you kissed me, or when we were in the shower, or something, but then I could go the entire day without thinking about it. It had to be triggered by something.\"\n\nShe paused, trying to frame the words.\n\n\"Now it just feels constant, but like it's part of me, the feeling that at any moment you could tell me I was allowed to orgasm. I'd just have no choice but to go for it, before you changed your mind.\"\n\n\"What, even in public?\"\n\n\"I don't know. I trust you not to embarrass me.\"\n\nShe shifted her hips slightly and I got the impression the conversation itself was turning her on. She seemed to have so many little triggers these days.\n\nMina sat upright and looked me in the eyes.\n\n\"I want you to fuck me,\" she said. \"Please.\"\n\n\"Ah, babe,\" I replied, \"You know the rules. You know what I have to do if you ask. That's going to cost you a day.\"\n\nMina nodded. Her face drew close to mine and she kissed me.\n\n\"Please, I want you to make me cum.\"\n\nI was confused, but replied, \"That's another day.\"\n\nHer hand snaked down to my waist and began to unfasten my trousers. I felt her hand slip into my underwear, felt her fingers wrap around my cock.\n\n\"I'm going to get you hard,\" she said, \"And I'm going to ride you until I cum.\"\n\nMy cock sprang to life, enflamed by the passion in her eyes. She shucked off her jeans and panties, positioned herself in my lap and lowered herself down onto my rigid member. She was already fully lubricated; the feeling of being enveloped by her pussy walls was exquisite. It reminded me, despite oral sex having become our new normal, how good it felt to be actually inside her.\n\n\"What are you doing?\" I asked, incredulously.\n\nMina didn't answer, but began to slide herself up and down my cock vigorously, building up quite obviously to an unsanctioned orgasm. She pulled her t-shirt over her head and quickly unclasped her bra. Her beautiful grey-blue eyes were fixed on the sight of my cock disappearing inside her, her ample breasts bouncing up and down at my eye level with every thrust. I grabbed a handful of her dark hair and pulled her head back so she was looking into my eyes.\n\n\"This isn't allowed,\" I said, \"You know you can't ask for an orgasm. You sure as shit can't just...\" I winced slightly as I felt her pussy muscles clamp down on my cock as she enveloped me deep inside her. It sent a thrill through my entire body. I just wanted to take her breasts in my hands and thrust upwards into her until we both came. She was already close, a consequence of being teased and denied for days. I didn't understand why she had suddenly decided to break the game after weeks of....\n\nThen I understood. I slotted my hands under her armpits and heaved her off me, depositing her on the floor between my legs. Mina was panting heavily, from the exertion of riding me and also, I could see, from being right on the edge of her orgasm.`\n\n\"That's really going to cost you,\" I said sternly. I laced my fingers through her long dark hair and drew her face towards my upright, rigid manhood, slick with her juices and my pre-cum. I teased her lips open and slid myself into her mouth.\n\n\"Suck, while I think,\" I said.\n\nMina began to move her lips up and down my shaft, swirling her tongue around my tip, sending waves of pleasure down my cock and deep into my groin. I felt my balls contract. She applied suction, popping off the top before engulfing me again, taking me as far in as she could manage without choking. I watched her bobbing up and down on me, feeling my own pressure build, aroused by the sight of my girlfriend's lips wrapped around my engorged shaft. She looked up at me, those grey-blue eyes wide and earnest, awaiting her sentence. It was the look that pushed me over the edge: my girlfriend putting herself completely at my mercy. I came and she finally closed her eyes, her throat muscles clenching as she swallowed my load and continued to milk me.\n\nFinally, I pushed her off my cock and she sat still, hands in her lap, kneeling in front of me.\n\n\"I'm going to have to add another week for that,\" I said.\n\nHer pretty face scrunched up.\n\n\"Do you have anything you want to say?\"\n\nMina bowed her head, and said only, \"Thank you. I deserve that.\"\n\n---\n\nI understood why Mina did it. I could see that she wanted to suffer for an extra week, and it wasn't a case of being able to ask me to deny her for twice as long as she'd ever gone before, she had to have it imposed on her. She had to feel that she was in denial for a very good reason.\n\nOn the Tuesday after the weekend that I would normally have granted her respite, I decided to try something different. I hadn't touched her all day, and had forbidden her to go anywhere near her most sensitive area, even in the shower. I waited until the evening and then asked her to relieve me. Such was the rhythm that we had gotten into, Mina didn't bat an eyelid at the request and bent to the task of getting me hard and then taking me into her mouth. I told her to strip and led her into the bedroom, where I made her lay down on the bed. I straddled her chest and angled my cock towards her waiting mouth. She resumed, sucking me without a word and I could feel myself building to release. This time, though, I waited until I was on the edge and then slipped down her body to plunge myself into her pussy. It was already slick and warm, but she was unprepared and given that I was already teetering it took me a dozen quick strokes to unload inside her.\n\nI felt her clench in frustration around me, unable to get there herself.\n\nShe knew why I'd done it. The feeling of her around me and cumming inside her was something that her denial game had taken away from me. It had become obvious to her that I was being denied something also.\n\nIt was a couple of days before she sat me down and we embarked on a very strange conversation.\n\nMina had made dinner, and we were sitting at the table finishing off, drinking red wine. I could see that she'd done this for a reason, since mid-week we'd usually eat on the couch in front of a show. She obviously wanted a more formal discussion and it wouldn't involve physical contact.\n\n\"How did you feel on Tuesday?\" she began, \"Was it nice inside me, for a change?\"\n\n\"Yes,\" I admitted. I took a sip of wine.\n\n\"I'm sorry that you don't get to do that as much as you want.\"\n\n\"Me too,\" I confessed.\n\n\"As much as I want,\" she continued.\n\nI was puzzled.\n\n\"I want you to be able to finish in me,\" Mina said, \"I know you prefer it, and you shouldn't have to deny yourself because of my game.\"\n\nI tipped my glass towards her in acknowledgement.\n\n\"But there's no way you'd hold out if I did,\" I said. \"Definitely not in your current state. You orgasm too easily, it would be like riding a hair trigger.\"\n\nMina didn't respond. Instead, she took a mouthful of wine. I knew she was building up to another revelation from deep with the depths.\n\n\"Maybe if we found a way to control it,\" Mina said.\n\n\"How? You mean numbing creams? I'd have to empty the tube right inside you to get all the spots,\" I laughed, \"Then I'd be numb as a brick myself. We'd just be going at it with neither of us feeling anything. Or are you talking about condoms?\"\n\n\"No,\" she said, \"I want to feel everything, and I want you to feel everything.\"\n\n\"Then how?\"\n\n\"I want you to hypnotise me.\"\n\nI stopped, mid-sip.\n\n\"How would that work?\" I asked at last. \"It's just mumbo jumbo isn't it?\"\n\nMina put down her glass carefully and spread her hands on the table.\n\n\"What have you done?\" I asked, slowly.\n\n\"I did some research. There are resources on the net. Audio files.\"\n\n\"Oh Mina, you should really have talked to me about this. There's some pretty freaky shit out there.\"\n\n\"I skipped through them, made sure that there weren't any, uh, hidden suggestions.\"\n\n\"That's really dangerous.\"\n\n\"I realise that,\" Mina said, eyes bright, \"But it worked.\"\n\nI sat back.\n\n\"You already did it?\" I gasped, \"What the fuck?\"\n\nMina held up a hand, trying to head me off. \"It was just a vanilla one. I went under and then came back up around half an hour later.\"\n\n\"Half an hour?\" I fumed.\n\n\"It was all harmless,\" she insisted. \"I felt fine afterwards.\"\n\n\"So now what?\" I continued, \"You graduate on to file number two in the series?\"\n\nMina shook her head. \"No. I stick on that one. But you....\"\n\nI could tell that she was struggling. I was angry that she'd gone and taken such a risk without talking to me, but I also knew that she'd been driven to it. It was a means to an end, and it was up to me to work out what the end-game was. I took a deep breath and tried to calm down.\n\n\"What do I?\" I asked.\n\n\"I thought that you could pause it. Then you can tell me things. Then you can wake me up.\"\n\nThat was it. Simple.\n\n\"You want me to have control?\"\n\n\"Yes.\"\n\n\"And you're happy with letting me into your head?\"\n\n\"Babe, you're already in there.\"\n\n\"What if I make you do something you don't want to do?\"\n\n\"You can't, that's not how it works.\"\n\n\"Then how does it work?\" I asked, exasperated.\n\n\"It's like you're coaching me to do something. It lets me go along with your suggestions.\"\n\n\"Like what?\"\n\nMina reached across the table, taking my hands in hers.\n\n\"Like fucking me and telling me not to cum. No matter how hard or how long you want to go.\"\n\nShe squeezed my hands gently.\n\n\"We both get to have what we want,\" she said.\n\nI could see her expression, open and pleading. I realised that she knew what the denial game was doing to me, and she'd found a way to still give me pleasure. Mina had realised that the denial games would only go on for as long as we were both getting something out of them, and she intended for me to get everything I needed, because she intended for us to keep going with the game.\n\nIt took a long time for me to respond, but I could see how much she wanted to do this.\n\n\"Okay,\" I said at last, \"How do we start?\"\n\n---\n\nI spent the rest of the week getting up to speed. Mina pointed me towards videos showing real-life inductions and gave me a heap of links to read through. It was immediately apparent that this wasn't just some passing phase for Mina. She had already invested a lot of time in it.\n\nWe were sitting on the couch on Friday night when I finally asked the question that had been on my mind all week. I was looking through another one of Mina's references on the laptop. I sighed and closed the screen.\n\n\"I feel like I'm the one being conditioned here,\" I said. \"You've been bombarding me all week.\"\n\n\"Are you ready to give in and do it?\" Mina asked, tentatively.\n\n\"Just answer me one thing.\"\n\n\"Sure.\"\n\n\"How long have you been planning this?\"\n\nMina seemed to struggle to find the words. I took her hand in mine.\n\n\"Since we've been together?\" I prompted.\n\nMina shook her head.\n\n\"How far back?\" I asked.\n\nShe looked at me nervously before admitting the truth. \"Years,\" she said, \"It's been something I've always wanted to try.\"\n\nI must have looked shocked at the revelation because she continued, hurriedly.\n\n\"I want to be able to get right to the edge and just sit there, not tipping over, feeling you moving inside me as I'm so close to finding my release. I guess I want that feeling to go on forever.\"\n\n\"And never ever cum?\"\n\nMina shook her head. \"No,\" she said, \"I want to cum, but only when you think I should. I want to have no say in it.\"\n\n\"And this is really what you've always wanted? You sure?\"\n\nMina took my hand and squeezed it excitedly, feeling that I was about to capitulate.\n\n\"Ok,\" I said, finally. \"Let's start.\"\n\nI had expected Mina to perk up, but instead she became more serious, arranging cushions carefully behind her head, stretching herself out on the couch and pushing her earpods into each ear. She handed me her phone; the recording was already queued up, I noticed.\n\n\"Twenty two minutes, fifteen. That's when it happens.\"\n\nI could see the concern on her face, so I bent over her and gave her a kiss on the lips.\n\n\"See you on the other side,\" I said and pressed play.\n\nMina's eyes fixed on a spot on the ceiling and she began to regulate her breathing, slowing the intake of air, releasing her breath in long, steady exhalations. I watched her face carefully. She continued to stare at the same spot above her head.\n\nAfter several minutes, I saw her eyelids flutter as if momentarily exposed to a breeze. They fluttered again and I could see that she was now fighting to keep her eyes open as she stared at the ceiling. The audio file kept playing, passing the fifteen minute mark and I began to wish I could hear what the soft voice was saying to her as the words took her deeper and deeper. Her eyelids were flickering now, lids heavy and eyes unfocused, no longer seeing the spot on the ceiling, her mind now only focused on the one thing: waiting for the command to sleep.\n\nMina took a single deep breath, held it and began to exhale. Twenty two minutes exactly. I stopped the recording. I knew from the videos what came next but I felt that I needed to do this part myself.\n\nMy voice was low and quiet, my lips next to her ear.\n\n\"Relax. Take a deep breath.\"\n\nI watched Mina fill her lungs.\n\n\"Let it go.\"\n\nShe obeyed, emitting a long exhalation.\n\n\"So relaxed now. Mind completely free and empty. Wanting to drop into a deep sleep. Waiting for the command.\"\n\nMina appeared completely calm, eyelids heavy showing only the slits of her eyes. She was ready to go deep.\n\n\"I will count down from five to one, and at one you will be ready to sleep.\"\n\nI was summoning up a technique from one of the videos, battling to keep my voice steady and calm even as I felt the nerves in my stomach.\n\n\"Five. Feel your body completely relax. Completely warm and safe.\"\n\n\"Four. So easy to listen to my voice. Concentrate on my voice.\"\n\n\"Three. Going deeper. So ready to sleep.\"\n\n\"Two. Mind emptying completely. Ready to drop.\"\n\n\"One. Sleep.\"\n\nMina's eyes closed and I gaped in awe at her expressionless, peaceful face. She was under.\n\n\"You don't need to move,\" I told her. \"You don't need to think. Just listen to my voice and let yourself go deeper and deeper. Body totally relaxed, mind totally empty, waiting for my instructions.\"\n\nI picked up Mina's arm by the wrist and released it. Her arm fell back to the couch with a soft thud. She had gone deep.\n\nFor the next few minutes I worked my way through a deepening and reinforcing sequence that Mina had found for me on a chat forum. She seemed to take my instructions without resistance.\n\n\"Mina, I'm going to ask you some questions now. You are going to find that you can only answer me truthfully, and it will give you pleasure when you do so. Are you ready?\"\n\nMina's mouth opened and she breathed a single word, \"Yes.\"\n\nEncouraged, I continued.\n\n\"Do you feel safe and protected?\"\n\n\"Yes.\"\n\n\"Would you like me to take you further or do you want to stop?\"\n\nMina licked her lips. \"Further.\"\n\n\"I want you to repeat after me. You will remember these phrases and repeat them until I tell you to stop. Are you ready?\"\n\n\"Yes.\"\n\nI bent close to her and whispered in her ear. I leaned back and surveyed Mina for a few moments, seeing her in a new way. Her body was still in front of me on the couch, but Mina herself was missing.\n\n\"Begin,\" I said.\n\nMina breathed in, and began to speak: \"My mind is empty, my mind is open, my mind is waiting to be filled. I hear these words and I drop deeper.\" She breathed out.\n\nI waited. Mina took another long, slow, steady breath and her lips began to move again, repeating the same phrase. Careful so as not to disturb her, I got to my feet and stood over her, watching her reciting the mantra that I had given her, setting her into an endless loop that would take her deep into her own mind.\n\n\"Open and ready. Concentrate on your words. Feel them sink into you until you realise that they are true. Your mind is open and empty, you are yearning to be filled. You are yearning to obey. Would you like me to give you your new commands?\"\n\nMina's cheeks were flushed and I could see the outline of her nipples standing hard and proud under her top. I looked down to her yoga pants and I could see a discolouration in the fabric between her legs. Mina was becoming aroused.\n\nMy mouth was parched, and I could feel the nerves in the pit of my stomach. We were in new territory, and I felt the pressure of not messing it up. I watched her lips move as she repeated the mantra I had given her. I needed a glass of water, and a few moments to think.\n\nI went to the kitchen and filled a glass from the tap. Taking a sip of the cool liquid, I returned to the couch and stood over Mina's motionless body, the only sign of life being the steady rise and fall of her chest and the movement of her lips, still whispering the words that were driving her deeper and deeper into her trance. It had worked perfectly because Mina wanted it to.\n\nI sat down next to her and bent down to whisper my final set of commands into her ear.\n\n---\n\n\"One,\" I said.\n\nMina's eyes fluttered open. She appeared to be disorientated, scanning around until she saw me, sitting next to her on the couch.\n\n\"Uhh... I... Is that it?\"\n\n\"Is that what?\"\n\n\"I just...,\" she stammered, and sat up, blinking. \"I mean, did it work? That was too quick.\"\n\nI laughed and showed her my watch.\n\n\"You've been down for an hour, end to end.\"\n\nMina's jaw slackened.\n\n\"Fuck.\"\n\n\"Fuck indeed. Do you need a drink of water?\"\n\nMina seemed to have so many questions, but answered with, \"I just need a pee. Why are you grinning?\"\n\n\"Just go and come back. We need to talk.\"",
        "Mina dashed to the toilet as if she was about to empty her bladder on the spot. I waited for her to return, checking my phone as if this was just another Friday night on the couch. When she came back, I patted the space next to me, pointing at the damp patch between her legs.\n\n\"Get there in time?\"\n\nMina frowned and then looked down.\n\n\"Uh, sure. That's... uh... that's not pee.\"\n\n\"You seem a little confused.\"\n\nMina looked at me strangely.\n\n\"I just went to the toilet, but...,\" she looked back over her shoulder at the door, as if mentally tracing her steps.\n\n\"What?\"\n\n\"As soon as I sat on the seat, I didn't need to pee anymore.\"\n\nShe regarded me suspiciously.\n\n\"What did you do?\"\n\nI leaned back and put my arms behind my head, smiling.\n\n\"That was you, wasn't it.\"\n\n\"I needed to make sure, so yes, I gave you a little post-hypnotic suggestion to see how you'd take it.\"\n\n\"Seemed to have worked. What's the trigger?\"\n\n\"Ah, that would be telling.\"\n\n\"I really want to know.\"\n\n\"So you can resist it?\"\n\n\"Yes.\"\n\nA thought occurred to me.\n\n\"Okay, what did I ask you as soon as you woke up? Let's see if you can resist this time.\"\n\n\"Water. You asked me if I wanted a drink of water.\"\n\n\"Ready?\"\n\nMina nodded, resolved.\n\n\"Do you want a drink of water?\"\n\nMina's eyes widened in surprise.\n\n\"No,\" she said, \"But I really gotta go and pee.\"\n\n---\n\nI waited a few more days before I thought Mina was ready. She protested because I think she wanted to try it all straight away, but in the end she went along with it. Each session was easier, as she became more and more used to dropping into a trance for me. I realised it was a trust exercise and so long as she trusted it to work, she was able to drop faster and deeper each time.\n\n\"And count of one. Wide awake.\"\n\nMina came back to life, stretching her legs as if waking from a long sleep.\n\n\"What time...? How long was I down for that time?\" she asked.\n\n\"Long enough.\"\n\n\"Enough?\"\n\nI could see the excitement building in her.\n\n\"Yep. I think we're good.\"\n\nMina kissed me passionately.\n\n\"Why don't you change into something nice? Let's make a night of it.\"\n\nShe kissed me again, just a peck on my cheek this time, disappearing into the bedroom without another word.\n\nIt was half an hour before she poked her head around the corner.\n\n\"Hey, I need some advice.\"\n\nI looked up from my phone.\n\n\"In here. Wardrobe decisions.\"\n\nI got up from the couch and followed her through into the bedroom. Mina was standing next to the bed in a blue, knee-length dress. It picked up the grey-blue of her eyes, lighting up her face. The material gathered at her petite waist, rolling over her hips, showing off the hourglass figure beneath. The neckline was a v-cut, not plunging but enough to show off the cleavage of her ample breasts. I stood in front of her and, unbidden, stooped to plant a kiss on the top of each delicious mound.\n\n\"I'm confused,\" I confessed, \"I can't see any wardrobe issues.\"\n\nMina stepped back and began to hitch up her dress, showing off toned, golden thighs. I watched the fabric rise until she had exposed her naked, waxed crotch.\n\n\"I just don't know what to wear down there.\"\n\nInstinctively, my hand reached out to caress her slit. I could feel the heat: she was already moist.\n\n\"Something lacy, maybe?\" I ventured.\n\nMina looked me in the eyes, playing cute, and said in her most girly voice, \"But whatever I wear gets saturated.\"\n\n\"Maybe take several pairs?\"\n\n\"What, and then change them regularly?\" she pouted delectably, \"In front of you? All night?\"\n\n\"I was already thinking about this. I had a present for you for later, but if you want it now, I guess....\"\n\n\"Yes!\" Mina interrupted.\n\nMy thumb drifted up her pussy lips to rest on the hardening nub of her clit.\n\n\"Let me just get it.\"\n\nI went to the wardrobe and dug into the back of my sock drawer, producing a little package. I handed it to Mina.\n\n\"What...?\"\n\n\"Don't ask what it is. You're the one holding it. Open it.\"\n\nMina's fingers moved quickly, opening the package. She held up a soft, white g-string. I watched as she rubbed the material between finger and thumb.\n\n\"I don't get it. I have some of these already.\"\n\n\"Feel it.\"\n\n\"Is that latex?\"\n\nI grinned, and said, \"Moisture-proof.\"\n\nI held out my hand. Mina looked puzzled, but then understood. She handed me the garment and I dropped to my knees in front of her.\n\n\"Let me dress you.\"\n\nMina stepped into the panties and allowed me to pull them up her shapely legs until the shiny white latex was stretched tightly over her moistening pussy. I ran a finger over the glossy surface, feeling the contours of her lips beneath, the hard button of her clit.\n\n\"How does that feel?\" I asked, standing back up and watching her closely.\n\n\"Oh my God,\" she replied, stroking the slick material gently, \"That feels incredible.\"\n\nHer eyes met mine, accusingly.\n\n\"What did you do to me?\"\n\nI frowned. \"What do you mean?\"\n\n\"You planted this, didn't you. The way it feels. It's a trigger to make me so fucking... hot.\"\n\nI stepped in close to Mina, taking her hands in mine, letting her dress go so it covered her down to her knees again.\n\n\"I swear that's not me. That's all you.\"\n\nIt hadn't occurred to me that objects could be triggers too: maybe that would be something to explore in future. I kissed her delicately on the lips, but Mina slid her tongue into my mouth.\n\n\"Can we skip going out?\" she murmured, kissing me with surprising passion. \"Can we skip straight to the part where I'm begging you for release?\"\n\n\"Not a hope. I've booked a really nice dinner. It's a six course degustation menu. It'll take hours to eat.\"\n\n\"But....\"\n\n\"They asked for a deposit. It's non-refundable.\"\n\nMina looked like she was about to protest again, but clamped her jaw closed.\n\n\"That's the spirit. It's going to be a long night, and now that you're in your non-leak panties, I'm going to be merciless.\"\n\n---\n\nBy dessert, Mina was done. Not as in having had enough to eat, although there had been plenty of food in the end, despite it arriving in small servings. No, Mina was over the idea of being in the restaurant, in her beautiful blue dress, with me sitting across from her, my big toe circling gently over the latex covering her clit.\n\nThe waiter approached our table. Mina barely looked up.\n\n\"Would you like coffees?\" he asked.\n\n\"Mina? Would you like a coffee? Or should we get the bill?\"\n\n\"I'm fine with the bill.\"\n\nI made a show of considering my options.\n\n\"Maybe I could do with a coffee after all that delicious food,\" I said, my toe pressing lightly into Mina's slit. At that, she clamped her thighs tightly together to show her displeasure. I continued to wiggle my toe against the latex.\n\n\"On second thoughts, maybe just the bill.\"\n\nThe waiter nodded and went away to prepare the bill for us.\n\n\"Smart move.\"\n\nI raised an eyebrow nonchalantly.\n\n\"And you can cut that shit out.\"\n\nI leaned closer, so that we wouldn't be overheard.\n\n\"However unbearable this is,\" I whispered to her, \"Just bear this in mind. I don't have to let you come.\"\n\nShe pulled back, so she could read my face. I could see concern in her eyes.\n\n\"What I've done to you means I don't have to let you come,\" I paused for effect, \"Ever.\"\n\nHer expression became serious.\n\n\"I can just leave you as horny as this, indefinitely. There's nothing you can do about it, now that there's that little padlock,\" I tapped her forehead, \"Right in there.\"\n\nMina was silent, contemplating what I'd just told her.\n\n\"So now you finally understand just how deep you're in it.\"\n\nJust then, the waiter reappeared. I paid the bill and we left without saying a word to each other, Mina now deep in thought. Out in the car park, she turned to me.\n\n\"You are going to let me though, aren't you? Tonight?\"\n\n\"I'm going to let you try. I promise that if you do manage an orgasm, I won't punish you.\"\n\n\"But that's not the same as allowing me. What if... what if I can't? Will you...?\"\n\nI took Mina's face tenderly in my hands and kissed her. Her pretty grey-blue eyes sparkled and she smiled at me, I could see the relief in her face as I smiled back. I let the moment go on a little longer.\n\n\"No,\" I said, simply.\n\nThe realisation of what I'd said hit her like a blow.\n\nWe reached the car and I opened the passenger-side door for her. She slipped into her seat forlornly. I circled around to the other side and dropped into the driver's seat. Without speaking, I undid my pants. Mina bent over and I felt her cool fingers reaching into my underwear as I started the engine and pulled out onto the street.\n\nMy hand settled on the back of her head as I felt her lips slide down my stiffening shaft. As I drove, my hand slid down her body, under the hem of her dress, and began to trace languid circles over her latex-enclosed pussy. I could feel her heat through the material.\n\n---\n\nBack home I led her to the bedroom, my hand in hers. She seemed resigned to her fate now, sullen and horny, almost resentful of the control that she had so willingly given up.\n\n\"Strip.\"\n\nFor a moment, I thought Mina was going to say something. There was a brief glimmer of defiance in her eyes, a surfacing of my sassy, opinionated girlfriend, objecting to being given an order to strip. The war within her was over before it began and she started to unzip her dress. I could see that she was beyond the point of no return; the hours of teasing at dinner had ground the fight out of her and now only the desperately horny submissive remained.\n\n\"Did you want to say something?\" I asked.\n\n\"No.\"\n\nThe dress fell to her feet. Mina unhooked her bra and then hesitated, thumbs in the waist of her new latex g-string.\n\n\"All of it.\"\n\nShe obeyed silently and stood before me completely naked, watching me nervously.\n\n\"Why the long face?\"\n\nMina frowned. \"Because I know you're going to make me suffer. Even more.\"\n\n\"Don't you want that though?\" I said, reaching out to stroke her firm breasts, tracing a thumb over her hardened nipples.\n\n\"I... yes. I suppose.\"\n\nI stepped closer to kiss her lips.\n\n\"Didn't you want me to take away your ability to orgasm?\"\n\n\"Uh huh.\"\n\n\"And I've done that, right?\"\n\nI kissed her again. She nodded.\n\n\"So you've got exactly what you always wished for.\"\n\nMina hesitated for a long time. My hands continued to toy with her breasts.\n\n\"I'm just really ready to cum, now.\"\n\n\"So do it.\"\n\n\"But do you mean what you said in the car park?\"\n\nThat was it. She genuinely didn't know if she would be able to cum. She believed that my conditioning would stop her. From what I had learned of the process, belief was the key. If I demonstrated tonight that she couldn't cum, she wouldn't question the control ever again: it would become her reality. I knew what I had to say to her.\n\n\"Yes. I meant what I said in the carpark. This is your one chance to prove you're still in control of your own body. Then you can tell me if this is over and we go back to how we were. But, if I reverse the conditioning then we'll never come back to this again.\"\n\nI began to undress in front of her. I could see her concern.\n\n\"Lie down on the bed.\"\n\nMina complied, resting her head on the pillows and spreading her legs wide. I could see how puffy her pussy lips were already after a night of edging. There would be very little foreplay: I felt an irresistible need to cum inside her, I had waited long enough. I kicked off my trousers and stripped my socks, joining her on the bed, both our bodies naked.\n\nI kissed Mina's clit, tasting the juices welling up from within her.\n\n\"Oh... yes,\" she gasped.\n\n\"Feels good?\" I asked, kissing again. I ran my tongue between her engorged lips. Mina grunted in reply.\n\nI slid a finger into her, feeling the moisture of her body. She was almost frictionless. I pressed on her clit with my thumb and began to wiggle my embedded finger in a beckoning motion against the front wall of her vagina.\n\nMina responded immediately, her hips grinding into my knuckle. Her hands bunched in the bedsheets as she let out a long, hissing sigh. I planted more kisses on her pussy, taking my time.\n\n\"Let's bring you to the edge.\"\n\n\"Please... yes.\"\n\nMina was hopelessly aroused now, as my hand and mouth worked between her legs. The muscles of her stomach tensed as she began to hump my hand, reflexively.\n\n\"Ohh... please,\" she groaned.\n\nI buried a second finger inside her, stretching her opening, pushing deep enough to circle the cone of her cervix.\n\nMina gasped.\n\n\"You must be so close now.\"\n\n\"I am, babe... I....\"\n\nI looked up. Her face was contorted with effort, eyes screwed tightly closed. She was focusing with all her strength on the feelings in her crotch, trying to push herself over. My hard-on was raging beneath me, demanding to sink into her willing flesh, but this was all about Mina. She needed to be pushed further.\n\nI worked my way up her body, my fingers now relentless inside her, and circled the hard pebble of her nipple with my tongue. Mina arched her back, pressing her breast against my face, demanding. I took her nipple into my mouth and began to suck.\n\n\"Fuck,\" she gasped, \"Fuuuck. I can't... I can't.\"\n\nShe was slick with sweat and I slithered up her body until my face was level with hers. My hand slipped out of her pussy and I brought my fingers up to her mouth. I parted her lips and slid my fingers inside. Mina sucked greedily, seemingly oblivious to being served her own juices.\n\n\"Open your eyes. Look at me.\"\n\nMina's eyes opened, but they were unfocused and far away.\n\nI slid my rigid member into her sopping pussy and felt her contract around me as she took my entire length. Her eyes locked onto mine.\n\n\"There you are.\"\n\nI began to move, sliding into Mina in long, deliberate strokes, letting her feel how swollen and rigid I was, the head of my cock a deep purple hue, engorged with blood. I kept my pace even, trying to enjoy the exquisite feeling of finally being back inside my girlfriend, without pushing myself over the brink.\n\n\"I've never been this hard,\" I breathed, \"Look at what you did to me.\"\n\n\"Fuck me,\" Mina mewled. \"Please, just fuck me.\"\n\n\"Do you want to cum?\"\n\nMina's face creased. Tears formed at the corners of her eyes.\n\n\"So... much.\"\n\nI began to thrust harder, the desire building in me, not able to be refused. My loins were tense with anticipation\n\n\"Try. Try hard.\"\n\nMy breathing became ragged as my stomach muscles contracted. Mina's hips moved in time with my rhythm, her pussy lips smacking against my balls as I thrusted into her. I could hear myself grunting with the effort.\n\n\"I can't,\" she cried.\n\nI could feel the pressure building within me, and there was something else driving it now; the knowledge that the woman beneath me was truly locked. I could feel the walls of her pussy feathering as she tried to clamp down on me. It was how Mina's body worked, and I was so very familiar with it. It told me she was on the crest of orgasm, but there was no final squeeze, no crescendo to push her over the edge. Her own body was betraying her.\n\n\"I'm gonna cum,\" I growled, \"Last chance.\"\n\nMina cried out in frustration, delirious, \"Please... please let me. I need to cum. I... I need....\"\n\nI erupted inside her, thrusting mightily and spurting at each stroke. Mina could feel me filling her, my own climax achieved.\n\n\"No! Babe, no, please,\" she howled.\n\nI kept up the tempo, still pounding into her, seeing the desperation in her face. I was spent but still hard. I gripped her head in my hands, staring into those perfect grey-blue eyes, so wide with tears of frustration. She was so horny, and so crushed. I could see that Mina now realised her ability to reach orgasm on her own had been completely and permanently denied.\n\n\"Wonderland,\" I said.\n\nMina's eyes rolled back in her head and her entire body arched under me. I could see the tendons standing out in her neck as she went rigid. Her pussy walls clamped around me like a vice as all the days and days of teasing, edging and denial were swept away in a single incredible climax.\n\n---\n\nMina held herself against me for what felt like hours, the sweat from our bodies mingling in the dark.\n\n\"Did you like that?\" I asked. \"Was it worth the wait?\"\n\nI felt the warmth of her breath across my chest.\n\n\"I can't describe it,\" she murmured.\n\nI waited patiently for her to elaborate.\n\n\"It was like every cell in my body wanted to orgasm, but I just couldn't. And when you said it I kinda... um... kinda....\"\n\n\"You kinda blacked out.\"\n\n\"I felt like I was somewhere else. It was mindblowing.\"\n\nHer hand brushed across my chest and I felt her lips kiss the side of my neck.\n\n\"You're in charge now, I guess.\"\n\nI wrapped her in my arms, holding her tightly.\n\n\"This is something you gave me. You can take it back whenever you like.\"\n\n\"No. I can't. I don't want to.\"\n\n\"Then I promise to be considerate.\"\n\nShe kissed me again, sighing.\n\n\"Don't be considerate. Be what you want, even if it's how you were tonight.\"\n\n\"If that's really you and not just your pussy talking.\"\n\nMina managed a little laugh.\n\n\"My pussy's all like...,\" she said and mimed a goldfish mouth, panting. \"I think she's had her say for tonight.\"\n\nI held Mina in my arms until I felt her breathing change, as she fell into sleep. Laid there in the dark with her body next to mine I remembered the tears of frustration in her eyes as I came in her, how real it all was. I didn't quite understand how, but I knew that it worked because Mina believed it worked. It worked because she wanted me in control. I felt awed by the responsibility, but there was something else.\n\nTonight had given me more ideas."
    ],
    "authorname": "oneagainst",
    "tags": [
        "orgasm denial",
        "teasing",
        "female submissive",
        "chastity",
        "tease and denial",
        "edging",
        "control",
        "mind control",
        "hypnosis",
        "cunnilingus"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/all-under-control-ch-02"
}