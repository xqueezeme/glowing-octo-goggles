{
    "title": "Alex - The Novella",
    "pages": [
        "Although I've strived for perfection over the years, I've come to accept that 'Alex' will never be perfect. I've edited / rewritten it for over 8 years and I can't seem to figure out what I'm missing. So, here you go. I hope each word makes you as nostalgic as it does me. \n\nYes, the story has been overhauled entirely and is now a novella (including a preview of my work in progress). If you're just going to point out the differences between the old version and the new one (or the slow start) in the comments section, please don't. Just enjoy it! \n\nCheers, \n\nLily \n\n***** \n\nPresent Day \n\nNew York and Singapore - two cities where taxi drivers had way too much power. \n\nI flung my arm out yet again, hoping that flashing my underarm sweat would gain a pity stop. The old bastard drove right past without so much as a glance, only to come to a stop at a traffic light ten feet in front of me. I knew an act of fate when I saw one. I rushed forward and grabbed at the handle - once, twice, three times. It didn't budge. The passenger side window whizzed down. \n\n\"No, lady. No taxi.\" An old Asian man shifted in his seat to stare at the crazy blonde woman pawing at his cab. \n\n\"Come on. Please? Your light is green - you're supposed to take passengers.\" \n\nHe looked up to where I was pointing, as though he could see the sign from inside the vehicle. Then he reached over with a scraggly old finger and switched the sign off. \n\n\"Now red.\" \n\nThe traffic light turned green and he put the taxi into gear. \n\n\"I'll pay you twice the fare!\" \n\nHe skidded to a stop, forcing the cars behind him to step on their emergency brakes. The locks popped open and I barreled in, head first. \n\n\"Where you go?\" \n\n\"Uh...\" Where was I going? How was I supposed to get to Alex if I didn't know where she'd gone? I looked down at my phone on instinct. \n\n\"Lady!\" the old man's voice was sharp. Grating. \"Where you go?\" \n\nPressed, I rattled off the name of the college. Maybe I could look up her address? \n\nThe driver mumbled under his breath and signaled for a U-turn. I put my head in my hands and tried to take a big, calming gulp of air. But all I could smell was her on my skin. \n\nChapter One \n\nTwo Years Earlier \n\n\"Miss Summers, you have a student here to see you. Please proceed to the General Office.\" \n\nThe bleep of the intercom on my desk sent a spark of excitement - or was it relief? - through me. It was the third day of the open house for Junior Colleges, and this was the first time that I'd been beeped to meet with a student. It was a depressing fact, especially when the other teachers seated around me couldn't get back to their seats for ten minutes before they were paged to be met with again. Finally, I thought. Someone who cared enough about the English language to want to speak with me. \n\nMaking sure the oppressive heat hadn't deflated my topknot hair bun, I quickly descended the stairs from the Staff Room that led directly to the General Office. The five-inch heels on my feet clicked loudly as I flung the glass doors open with way too much flair for a drab day in school. \n\n\"Peggy,\" I said, slightly breathlessly to the receptionist. \"You paged?\" \n\n\"Yes. Someone wants to speak to you,\" Peggy returned in her sharp, Chinese accent. I followed her nod to a lean figure casually leaning against the notice boards, her hands shoved deep in the pockets of her jeans. The fitted denim was faded and bore holes at the knees. A black slogan tee and a one-strapped plaid backpack completed the decidedly hipster look. \n\nI cleared my throat. She turned and the first thing I noticed was her eyebrow ring, something I hadn't seen on anyone in a very long time. Any type of alternative lifestyle wasn't particularly encouraged in Singapore and she'd be severely punished in college if she ever dared to pair an eyebrow ring with her uniform. Still, the glint of silver looked absolutely stunning against her dark, sepia-toned skin, which I assumed, was indicative of her Indian heritage. \n\nI extended my hand. \"I'm Cady Summers, English Lit and Creative Writing lecturer.\" \n\nHer hand was warm in mine. The handshake was strong and confident, not like most people's, who shook my hand as though they were afraid that they'd break the petite little blonde expat teacher. \n\n\"Hey, it's nice to meet you. I'm Alex.\" \n\nHer first words confirmed my niggling suspicion that she wasn't the average student. Believe me when I say that not many students in Singapore use 'Hey' as part of their daily vocabulary - many didn't even employ the rules of grammar. They were usually more interested in how they could use English to excel at Math and Science rather than learn the intricacies of the language itself. Instead of 'it's nice to meet you', here, most students stuck to 'Hello', 'Hi' or simply, 'Wassup, 'cher.' \n\n\"I'm actually,\" she continued, reaching into her backpack for her notebook, \"interested in the Creative Writing course that the school offers.\" \n\n\"Of course, sure. Let's take a seat and we can discuss it.\" I smiled, thinking that this girl in my class would be a godsend. Good grammar? Check. The ability to string a sentence together? Check. A Sylvia Plath slogan tee? Check. What more could a teacher ask for? Only I knew how grumpy the students could get when they were posted to a Literature class because they hadn't done well enough to get into their beloved Science and Math classes. Having one student who was actually interested in the subject would be a really nice change. \n\nWe sat. She flipped open an exceedingly worn black notebook and started asking me questions pertaining to the course. I answered each one of them as carefully as possible, my eyes flickering to the eyebrow piercing every one in a while when she raised her brow at something I said. It was oddly mesmerizing. \n\nAfter she was all out of questions, I decided to ask her some, just to pick at her brain a little. I wanted to know if she was as good as seemed to be, or if it was just a front she put on. \n\nI un-crossed my legs as she leaned forward to listen to me. As she did so, a slight whiff of her perfume drifted to me... wait, was that perfume or cologne? I shook my head clear of those thoughts. \n\n\"As you know, we're going to re-visit various styles of writing and literary periods, just as a class exercise. Which is your favorite literary period?\" I asked, trying to sound as formal as the informal thoughts running through my head. It wouldn't do me any good to admire a student in that way! \n\n\"That's tough,\" she said with a smile. Well, it wasn't really a smile. Just a tilt of a corner of her shapely lips. \n\n\"...I suppose Modernism would be my pick.\" \n\n\"What?\" Her brows furrowed. I'd lost track of the conversation. I tried to reel it back in. \"Oh, of course. That's great! Any favorite authors?\" \n\nShe leaned back a little and waved a hand in front of her tee. \"Well, there's Plath.\" \n\nI smiled. \"I noticed that. It's a great shirt. Unusual.\" \n\n\"Thanks. A friend made it for me at her printing shop. A birthday gift.\" \n\n\"That's very cool.\" \n\n\"But I do love Beckett as well. Huge Beckett fan. I love how his settings and characters are always minimal but the overarching message is bleak and profound.\" \n\nIt had been so long since I heard a student speak passionately about literature. I was still smiling and I didn't think my face would stop doing that anytime soon. The girl held so much potential that if she got into my class, I knew I'd be squeezing every last drop of creativity and imagination from her. I mean, after years of teaching kids who didn't want to learn, won't any teacher get excited when she managed to catch someone who actually did want to excel in the subject? \n\n\"That's an excellent analysis of Beckett. I think his work speaks to different people in different ways. Some see it as a warning; others as a sign to just give up.\" \n\n\"Exactly.\" She tucked a lock of dark hair behind her ears and I couldn't look away. \n\n\"Can I ask you something?\" she said as she put away her notebook. \n\n\"Sure.\" I watched the way her jeans hugged her thighs as she reached over for her backpack. They were nice thighs; I could tell that they were well-muscled. My mind was definitely in the gutter today. \n\n\"Where do you call home? It sounds like an American accent but I can't place it and it's killing me,\" she said, then licked her lips. I had to force myself to look away. \n\n\"Home's New York,\" I replied, perusing the notice boards behind her as casually as I could. \"It's just that I've been in Singapore for a while and I studied in the UK. It's kind of mangled my accent.\" \n\n\"Oh. Yeah, figures,\" she nodded, rising to her feet. I followed suit, adjusting my skirt as I did so. When I turned to her, I came to realize that even in my heels, she still had a couple of inches on me. Granted, I was only five foot two without the extra height, but she was really tall. Where most Asian women were usually my height, she was definitely at least five foot nine. \n\n\"I've got to get going,\" she said, looking at her watch, \"I've got a couple more schools to check out before the day's out.\" \n\n\"Yes, of course,\" I said, holding out my hand again. \"It was a pleasure to meet you, Alex.\" I meant it; it truly had been a pleasure for me. It wasn't every day that I found someone genuinely interested in language and literature. Not in this part of the world. \n\n\"It most definitely was,\" she said, holding the glass door open for me. \n\n\"Do you need help finding the bus stop?\" I asked when we exited the General Office. I knew how confusing the school compound could be on a first visit, but I hadn't expected Alex to take me up in my offer for directions. She seemed like the macho I-don't-need-any-help-from-you kind of person. Obviously, I was wrong in that aspect. \n\n\"Yeah. That'll be nice. I think I walked in that way? \" She pointed to the right. \n\nI started to draw a mental map out for her, but decided against the confusing thing. \"Oh, hell. Come on. I'll show you.\" \n\nI walked a couple of steps ahead of her, leading her away from the main building. A wind was picking up, and I looked back at her as it blew against us. \n\nI commanded my salivary glands to stop working on overdrive, but it was no use. The sight of Alex's black shirt plastered to her flat tummy was too sexy for me not to ogle for a few seconds. God, she looked like one of the guys on Baywatch. With boobs. Nice boobs. \n\nMidway through my ogle-fest, I misjudged a step and lost my footing. Being the klutz that I was, coupled with the heels, would've sent me sprawling down the excitingly long flight of stairs. But you-know-who just had to step in at the last minute and grab me by the arm. \n\n\"Whoa,\" she said, a little more loudly than what I now assumed was her usual drawl. \"Careful there. Those heels weren't meant for brisk walking.\" \n\nI gave her a tight smile; her hand on my shoulder was unnerving. If I'd been absolutely truthful to myself, I would've said her touch had made me hot. \n\nBut I wasn't being truthful. \n\n\"Yeah. I'd have to agree with that. Thank you. Well, um, the main road's just a hundred meters that way. You can find the bus stop on your left.\" I pointed in to the right, feeling my heart rate accelerating for some unknown reason. OK, I knew the reason. It was because she was standing so close to me again. I got a whiff of something masculine - cologne? Hair wax? I took a step back. Was it just me, or was that the second time I'd had to do that? \n\n\"All right, then. Thank you, Miss Summers,\" she replied with a twinkle in her eye. I narrowed my eyes at her retreating back. There had been something wrong with the way she had said my name, like she was trying to hit on me, or as though we were in a role-play session. Weird. I kinda liked it. \n\nThe little voice in my head chose that moment to come alive. \n\nShe thinks you're cute. \n\nYeah, but I'm also her teacher, and probably at least five years older than her. \n\nSo? \n\nWhat do you mean, 'so'? \n\nSo, what difference does it make? \n\nIt's not appropriate! \n\nSure it is. Why are you denying this? You always knew you were attracted to females. You're just too chickenshit to do anything about it. \n\nNo, I'm not. \n\nYes, you are! \n\nOh, just shut up. \n\nChapter Two \n\nShe didn't sign up for the course. \n\nThat was the first thing that hit me as I scanned the attendance sheet on the first day of college. No matter how many times I looked through it, the names didn't change - I clearly didn't see an 'Alex' on the Junior College 1 attendance sheet. To say that I was disappointed didn't cut it. Over the past three weeks, I'd looked forward to having her in my class. Not for the fact that I thought she'd hit on me (by now, I'd convinced myself that she had), but for the fact that I knew she was good in English. I'd already begun looking forward to reading her creative exploits. I'd thought about her frequently, especially when the students in my Junior College 2 classes bored the hell out of me with their calculated, pre-packaged answers from their English text or guidebooks. Somehow, I knew that Alex would have answers of her own, one I didn't have to teach her. \n\nSo, when I didn't see her on the attendance sheet, I marched into my new class like a cranky old witch, hiding the frown on my face with a plastic smile. The students stood as I came in, looking identical in their uniforms. They sat, one by one, as I ticked off their names for attendance. Then, when I came to the final name on my fifteen-name list, someone interrupted me just as I began reading it. \n\n\"You can call me Alex, Miss Summers.\" \n\nI started. Damn it! That voice! I didn't know if I was happy to hear it or not. On one hand, it made my gut tie up into funny knots. But on the other, it meant that I would be having her in my class for the next two years! I decided to look on the positive side. I'd at least have one student who was devoted to the class. \n\n\"Alex,\" I announced, \"I see you made it.\" \n\n\"Yes, ma'am.\" There was just something about the way she said it... was she mocking me? \n\nIf anyone should be mocked, I thought, it should be her. The compulsory uniform she wore looked pretty ridiculous on her, after the jeans and T-shirt I'd seen her in. The red skirt almost made her look girly. It was laughable, especially since she looked darned uncomfortable in her attire. \n\n\"All right,\" I said, turning away from the class and picking up a marker. It was time to get down to business. \"My name is Miss Cady Summers...\" \n\nThe rest of the class flew right by, especially when I realized that some of the pupils in the class were also genuinely interested in the art of writing creatively. I answered as many questions as possible before the bell rang, noticing that Alex never did raise her hand to ask me a thing. But, I was curious about my students' abilities, and so, before they left, I handed out an assignment: 800 words on a modernist author of their choice by next week. A few of them groaned at this, but some of them looked intrigued. \n\nThey came forward to grab the instruction sheet as they left, and as I guessed, Alex was the last one. I smiled when I noticed that one side of her skirt was higher than the other, and that her shirt was hanging out partially. She could've gotten in trouble for that, but I doubted that she cared, and I wasn't about to start nagging. I tried to keep the laugh to myself, but as she passed my table, I could've sworn she murmured, \"It's not funny.\" \n\nBut that just made it a hell of a lot funnier. \n\n* \n\nAs I'd predicted, Alex turned out to be one of my best students. No, she still didn't ask many questions in class - probably playing up to her 'cool' image - but the assignments she handed in were better than most of the short stories that published authors churned out. The first story I read by her was one entitled, 'Stranger'. She talked about a man whom she'd just met, and how they were having a very normal conversation about life, the weather, sea lions. But in the end, there was a twist in the story, and the man she'd been talking to was actually her father. That was the start of a very long list of interesting stories she sent my way. I mean, the other students in class were pretty good as well, but she was outstanding. The eloquent way she used her vocabulary really drew the reader in and played with their minds. That, and the fact that she was the only student who cussed in her assignments. Cussing was all right with me, as long as it furthered the plot. And with her, it definitely did. \n\nI saw her around school almost everyday, hanging out with a group of girls who looked like they had really bad-ass attitudes. There was also this petite, fragile-looking Chinese girl who hung around Alex a lot. And more than once, I'd seen Alex put her arms around the girl. I'd raised my eyebrows at that, but didn't say anything. \n\nI was so not affected. \n\nIt was late one evening, about six months into the school year, when I had some sort of confirmation that Alex was indeed gay. I'd just finished meeting with the Arts faculty in the school, and it was really late - later than I usually cared to stay. I was usually home by six every day so I could wind down and have a gabfest with my mom before her workday started at Macy's. Anyway, the meeting room had been unreasonably cold that day and it had kicked my bladder into overdrive. \n\nBriefcase already in hand, I glanced up the winding stairs that led from the ground floor to the teachers' room and staff toilets. Call me lazy but I just didn't want to climb two flights of stairs in my heels at the end of a workday just to use the ladies'. So I made my way to the nearest student toilet on the first floor instead. Teachers didn't normally use student toilets (I didn't think it was forbidden, though), but I was willing to bet that there weren't any students in school anymore, so what harm could it do? \n\nAt first, I didn't hear anything, and I thought the whole place was empty since it was nearly six. I ducked into a stall and unzipped my pleated black skirt - it was while I was handling business when I heard the ruffling. With a frown, I listened closely to the noise. It was coming from the last stall. Faint rustling of clothes, then a giggle. I rolled my eyes, sighing. College kids. They knew that sexual activities on campus weren't allowed, but they had to break the rules. Well, I thought - been there, done that, burnt the t-shirt. \n\nAs I pushed my way out of the stall, the door to the last stall opened and out came the little China-doll that hung around Alex all the time. Her face was flushed and her eyes held a just-fucked twinkle that I really didn't want to see... especially when I noticed the person who was standing behind her. \n\n\"Alex,\" I said, giving her a once-over. There was nothing amiss about her except for locks of her hair puffed up like a bouffant on her head. I could just imagine how her normally flaccid curls had become bouffant-like. \n\n\"Miss Summers,\" she replied, giving me that lazy smile. She obviously knew that I knew what they'd been doing. And it brought a lick of flame to my cheeks. Her eyes met mine and I couldn't look away. \n\n\"Who's your friend?\" My voice sounded weird, even to myself. \n\n\"Oh, this is Mindy, my girlfriend.\" It was said without the slightest hesitation, as though she was proud of the little porcelain doll. As though being gay wasn't frowned upon - or was it illegal? - in Singapore. \n\nI gritted my teeth. \n\n\"Mindy, hello,\" I said, grabbing a paper towel to dry my wet hands. \"Well, it was very nice to meet you, but I'm afraid that I have to leave now. I'll see you in class tomorrow, Alex.\" I hesitated before adding, \"Please be careful, you two. Anyone could've walked in.\" Then I turned on my heels and walked out the swinging toilet doors, clenching my fists when I heard the giggling in the toilet start again. ",
        "Okay, I was pissed, but I didn't know why. Alex was just a student, and it shouldn't matter to me if she was fucking anyone. That was her business! As long as she produced results and gave me no trouble, I shouldn't find any fault with her. But the problem was, I had felt this searing pain when dollface had stepped out of the stall in front of Alex. I couldn't really explain it; I couldn't really place what I felt, either. It was a feeling of something between anger, pain and jealousy. And why either feeling should rise in me... it didn't make any sense at all. \n\nI drove home in a pretty shitty mood, honking at drivers that I normally wouldn't honk at. Every radio station seemed to hate me, and even the traffic lights had plotted against me. But after the third honk at some poor soul, I managed to convince myself that I was merely PMSing and wasn't angry at what I'd seen back in school. It took me a whole ten minutes of drive time to tell myself that, and even after that, I didn't feel a whole lot better. \n\nThat night, I did nothing but indulge in a tub of Cookies and Cream ice cream, neglecting the scripts I had to look through for my Lit class. That was a first for me. I'd never neglected work before. \n\nAs I stared at another episode of a Friends re-run, my mind couldn't resist wandering back to the episode this evening. The look on Alex's face - like a contented, well-satisfied woman - pissed me off something fierce. I realized that I wanted to put that look there - which was absurd, since I wasn't even gay! I shoved a large spoonful of ice cream into my mouth. No, I definitely wasn't a lesbian, and I needed to stop thinking of my student as a sex toy. I needed to be professional. \n\nI suppose what irked me the most was that I was mourning something I could never have. Even with Peter, the real estate agent I'd dated for a few months when I first arrived in Singapore, I'd never mourned. Sure, I was a little sad when I realized it would never go anywhere and I'd felt guilty for not having the courage to end it sooner (and using him to get a condo under market value, but that was another issue), but I'd never mourned him on the couch with ice cream. \n\nAnd, I recalled, it had been the same for Connor, my boyfriend at Sheffield. I mean, my visa ran out. The practical thing was to move on. Connor had been upset when I told him that I'd gotten a job in Singapore, but really, all I'd felt was relief. No mourning needed. On to new horizons and all that jazz. \n\nSo why the hell was I having a pity party on the couch now? \n\nI sifted through the sixty channels I had, thinking about the way Alex's dark eyes could look at me as though they were reading my soul and the way her smile made my heart jump just a little. \n\nI became lost in a dream-plagued sleep after that, filled with the smell of melted ice cream and visions of beautiful, haunting onyx eyes. \n\n* \n\nI kept clear of her radar for the next few months. I'd see her in class, yes, but that was it. Whenever I spotted her hanging out in the canteen or near the basketball courts, I'd walk in the opposite direction, knowing exactly how much one appreciative look from her could cause my student-crush to exacerbate. \n\nThat's what I'd decided to call it - a student-crush. I'd done some research about it, and realized that it was pretty common amongst teachers to have a crush on a student, especially when he or she was a class-topper. The crushes usually came and faded quickly, an anonymous teacher had said, and I took courage in that. Maybe one day, I'd wake up and find that I hadn't had a dream about her. \n\nIt was one of those nights - those hot, stuffy September nights - when I couldn't sleep, that I decided to log on to Skype to see who was available for a chat. It was about two in the morning and I couldn't resist a yawn as I waited for the little whoosh to say that I was online. It would be two in the afternoon back home and I hoped Charm would be online to chat with. It had been a while since I talked to anyone close, and I'd begun to miss having family close-by, although I'd rather pull my own teeth out than tell my mom that. \n\nA notification popped up just as I clicked on the first unread e-mail in my inbox. The contact's screen name was Alex0809, and my mind went from sleep-hazy to electrifyingly alert in two seconds. I vaguely remembered that I'd passed my e-mail address out to my students so that they could e-mail a soft copy of their assignments to me. So, this had to be... \n\nI clicked 'accept' and the first message said: 'Couldn't sleep?' \n\nMy brows furrowed at the message. It sounded way too personal. \n\nYes, I replied. Why are you up so late? \n\nAlex: Oh, I'm working on an e-novel right now, and I need to submit the second chapter of it by tomorrow night, so... deadlines suck. \n\nMe: Wow. A novel. Really? What is it about? \n\nI was intrigued. None of my students had ever worked on a novel before. Or at least, I didn't know if they had. \n\nAlex: It's not much yet. Quite generic supernatural crap. I write for a website that churns out romance novels - terrible stuff. \n\nMe: Ah, I see. Still, that's a good way to make some cash as a student. I can imagine you writing a supernatural novel. You have a natural flair for it. \n\nAlex: Really? \n\nMe: Absolutely. \n\nAlex: That a really nice compliment... especially coming from you. \n\nOh, dear. Was she hitting on me again? My gut twisted into an anxious knot of desire at the thought. \n\nMe: No problem. I was only being truthful. \n\nAlex: Thanks. \n\nThere was a pause, then she said: Hey, Miss S? \n\nCady: Yes? \n\nAlex: Why are you online if you can't sleep? \n\nA flush stole across my cheeks as I stared down at the words in front of me. I knew what she was thinking; I could envision the smirk on her face as she thought it. But I wasn't going to shy away from her taunts any longer. \n\nMe: I wanted to reply to some e-mails since I have the time. \n\nAlex: Of course. \n\nMy face was definitely on fire. \n\nMe: It's getting late, isn't it? I should probably get to sleep. Long day tomorrow! I'll see you in school. \n\nAlex: Yeah, of course. Sleep tight. \n\nMe: Goodnight to you, too. \n\nI sighed in relief as I shut my laptop down, feeling as though I'd just fought a battle. My palms were slick and I was pretty sure I'd gotten a great start on some serious boob sweat. I had no idea why Alex made me so nervous. It's not like I hadn't had crushes before. There'd been Rob in third grade, Haden in seventh, and the first guy I'd slept with - Vince in the tenth grade. They'd all been really nice - except for Rob, he hated me - but they sure as hell hadn't made me nervous. I didn't know why just talking to Alex made me feel like there my insides were on fire. It was weird. \n\nI rolled over in bed, staring up at the ceiling. Speaking to Alex had gotten the adrenaline running through my veins, and now, I couldn't sleep. Groaning, I stumbled out of bed and headed for the bathroom. Maybe a nice, cold bath would help soothe the heat in my body, or perhaps the detachable showerhead could be put to better use... \n\n* \n\nIntimate encounters with Alex were few and spread out through the two school years that I had with her. The first was the toilet debacle and the last was when she had buzzed the teacher's lounge looking for me. A meeting had just let out when I'd been extremely surprised to hear that she had been waiting for me for the past half hour. \n\nShe stood as I walked over to her, balancing a stack of assignments in one hand and my briefcase in another. Without my asking, she hefted the papers out of my hands and set it on the park-style bench she'd been sitting on. I was impressed by her manners, and quickly lapsed into small talk. She replied appropriately, but the look on her face was unreadable as I sank down onto the bench, asking her what she needed. \n\n\"So...what did you want to see me about, Alex?\" Thank god my voice didn't betray the suddenly eccentric thump of my heart. \n\nShe just looked so sexy when she frowned. Damn it! No, I didn't just think that. It wasn't me. \n\n\"I just, um...well, I was wondering if you could...\" I nodded slowly to encourage her as she seemed to have some trouble in getting the words out of her throat. Her fingers began fiddling with the little 'I Miss You' keychain that hung on the briefcase I'd set by my side. \n\n\"Present from a boyfriend?\" \n\nI was pretty thrown from the change of topic, and normally, if anyone else had asked me that question, I'd have laughed at them and told them Grandma Ellie had sent me that two years ago as part of a care package. But with Alex... the question seemed pretty loaded, somehow. I mean, I should know. I was the one who was analyzing her monthly assignments. The girl was pretty deep. \n\n\"Does that have anything to do with why you're here?\" I said a little too sharply after a moment of awkward silence. She let the keychain clink back into place. \n\n\"No, Miss Summers. I just... I wanted to ask you something...\" she trailed off and rose from the chair. As I watched, she bit her lip, probably debating how to say what she had to say. \n\n\"Miss S, I'm having a little trouble.\" \n\nNow, of all things I'd expected to hear, that was surely not one of them. I'd never thought that Alex would be the one who would come to her teacher to ask for assistance. It just wasn't very... Alex. \n\n\"What kind of trouble?\" I asked slowly, knowing that this might very well be a delicate subject. She turned around and stared intently at a spot above my before murmuring: \n\n\"I've hit a rut.\" \n\nAgain, I gave her that slow nod. A rut? What exactly did she mean? Financially, emotionally... what? When she didn't expound on her statement, I extended a question of my own. \n\n\"What kind of rut? Can I help?\" \n\nWith a sigh, she looked back at me. I crossed my legs and stared up at her, a little worried by her countenance. She was looking more unkempt than usual, with her hair sticking out in odd directions and her uniform in total disarray. \n\nSomething was up and it was serious. I could feel it now. The air around her was humming with what seemed to be dread. \n\n\"What's wrong, Alex?\" I asked again, quietly. I knew that if I showed her how worried and concerned I was about her, she might shut me out, like most teens tended to do when someone cared too much about them. Hell, I used to do the same thing. But I was her teacher and couldn't help but worry. \n\n\"I have this thing, see. And I can't...\" \n\n\"You can't?\" I prompted. \n\nShe sighed heavily, looking down at her fingers - what lean fingers they were. \n\n\"I can't seem to write anymore,\" she said in something that resembled a whisper. Her eyes flickered to mine hesitantly before she looked away. \"It's like... whenever I think of the topic I'm supposed to be working on, nothing comes up. It's blank. And it freaks me out. A lot.\" \n\nAt that moment in time, she looked so much like the insecure teenager that she was, that I ached to take her into my arms and coddle her. I knew what she had was writer's block, something that all writers stumbled upon one time or another, but I wanted to wipe the worried frown off her face with more than just words. \n\n\"Miss S, I've considered everything. This isn't writer's block. Writer's block can't possibly feel like that. Like I can't string a plausible sentence together. Nothing seems right.\" \n\nAnd then, there was the fighter in her again. I knew the writer in her was fighting for an explanation to cling onto, to dispel the notion that it was not a long-term thing. And that spirit made me want to pull her close and give her a reassuring hug. \n\n\"Have you thought about other explanations? Do you have something on your mind that you're supposed to do, but aren't doing? Something important? Maybe some personal issues? All these things can explain a temporary block.\" I proposed. \n\n\"I don't know,\" she said, sounding rather pissed off and annoyed at something. I stood, gathering my things. \n\n\"Do you need an extension for the next assignment?\" \n\n\"Yes. I thought I could get a draft done by today or something, but I couldn't. Can I have another week or so? I hope something comes to me by then.\" \n\nI assessed the honesty in her eyes, half-knowing I could trust her. The other half was the deviant inside me that wanted to back her up against the wall and kiss the crap out of her. \n\nI cleared my throat. \n\n\"I trust you,\" I told her frankly, \"and if you need an extension, you have until the end of the month. That gives you ten days to hand in whatever you can for your Prelim score. Let's just hope that this block of yours doesn't extend into the A Levels. I'd hate to see you get anything but an A for Creative.\" \n\nHer smile was infectious, and I found myself smiling back. Her lips were perfectly proportionate and infinitely inviting, with the lower lip slightly thicker than the upper. \n\n\"Yeah. You and me both, Miss S,\" she said on a sigh. \"Thank you.\" \n\n\"No problem. I was a student once, too, you know.\" \n\nAnother smile, this one brighter than the previous, and it reached her eyes. She stuffed her hands into the pockets of her school skirt. \n\n\"So, I'll see you tomorrow?\" \n\n\"Yep. In class tomorrow.\" \n\nShe turned away from me with a little wave, then looked back after she took two steps. \"Thanks again, Miss S. You have no idea how much this means to me.\" \n\n\"Anytime, Alex.\" \n\nI walked straight into Staff Room, past the several empty desks and dropped myself onto the swivel chair in my little cubicle. I cleared the papers off my desk and rested my head on the table, rapping it on the table once, twice, thrice, trying to dispel the terrible thoughts from my head. But it was no use. The only thing that did was give me a botchy red patch on my head that made my colleagues ask if I'd had an accident. \n\nChapter Three \n\nAt the end of three years in Singapore, I found myself gazing at the cityscape from the window of my condo, trying to memorize every detail of the place I'd be leaving in a month. It had been a hectic few years and all that remained were fine memories of a fine time spent in a fine city. \n\nIf I had regrets about the time that I spent here, I buried it, because I knew that I only regretted doing - or should I say, not doing - one thing. In about a month, I would be out of here, far, far away from her and she wouldn't bother me anymore. \n\nI still remembered the moment when she'd come up to me after her final paper, which happened to be Creative Writing, wearing the smile that I'd come to dream about through fitful nights. \n\nShe'd told me that the paper had been easy, and the topic to write on had been do-able. There had been something in her eyes, a sadness that I could identify with, that made my heart clench, and I knew that she was trying to come around to saying goodbye. She took her time about it, too, talking about everything and anything until one of her badass friends came up to her and pulled her away. And even then, she'd looked back at me with a smile that mirrored more than the gratefulness a student shows her teacher... or maybe I'd finally cracked. \n\nI sighed heavily and turned away from the window, mentally calculating that it had been exactly two months and ten days since the time I had seen her last. I hated to admit that I was yearning to see her again, but I knew that that was the truth.  \n\nThere were big, cardboard boxes strewn all over the condo, and some of them were already filled and scotch-taped to be shipped over to my grandmother's (and mother's) place in NY. The place looked very bare now, and lacked the character that my pretty throw cushions gave it. I sighed again as I flopped onto the bare couch and reached out for the stack of mail on the coffee table. \n\n\"Bills, bills, bills...\" I muttered under my breath just as the phone started to ring. \n\nOkay, I knew it was pathetic, but phone calls always got me excited, because it usually meant that someone was calling from home. And over the past few days, I'd become so homesick that I'd actually called Mom twice in a day. Being away from family for years kinda had that effect on most people. \n\n\"Hello?\" I said cheerily into the phone as I flicked lint off my black tank top. \n\n\"Hey.\" \n\nI think my heart stopped for a moment, and my fingers stilled on my stomach. That voice. I knew that voice. But it couldn't be. She didn't know my number. How could she? \n\n\"Um, hi. Do I know you?\" I asked quizzically into the phone, hesitance in my voice. \n\n\"Yeah, you do, Miss S.\" \n\nI swallowed thickly. I never really got over that drawl. \n\n\"Alex.\" \n\n\"Yeah. How are you?\" \n\n\"I'm good. Alex, is something up?\" \n\nIt was a bad habit of mine to start pacing when I got worked up about something. My feet were already making tracks through the thick carpet in the living room. Why was she calling? God! Now I'd be thinking about this conversation for the next few weeks. \n\nYou're a sad little shit, you know, the little voice in my head said. \n\nYeah, I know. \n\n\"Nothing's up, Miss S. Just wanted to talk to you.\" \n\nI raised an arched brow in response. \n\n\"Really?\" I said in the most sarcastic voice possible. \"You call your teacher, whom you haven't seen in two months, in the middle of the afternoon to tell her that you 'just wanted to talk to her'?\" \n\nShe laughed, the husky vibrations of it emanating from the phone and sluicing down my body. I bit my lip. Damn her. \n\n\"Well, yeah. And besides, you aren't my teacher anymore.\" \n\nThat last comment took me by surprise. I wouldn't say that the thought hadn't crossed my mind - that she had, indeed, graduated from school already and that I was not her teacher anymore - but hearing her say it had a profound effect on me. Mostly, my tummy just coiled in tighter knots. \n\nHad she lain in bed thinking what I'd been thinking? That there was nothing stopping us now if we wanted something more? Somehow, the fact that I wasn't even gay didn't stop me from thinking of going out with her. \n\nI decided to be forward with Alex. \n\n\"Alex, did you want something?\" \n\nThere was a long pause. Then I heard her breath rasp over the phone. \n\n\"Yeah, I do, Miss S. I want you.\" For a moment, my world stilled and every muscle in my body went limp. I leaned against the wall, wondering what the hell was wrong with the world, when she continued with her sentence. \"...to go out with me next Friday.\" \n\nA gush of air rushed past my lips as I started breathing again. Did she know that she was killing me? Was she doing this on purpose? \n\nI shouldn't go out with her, should I? It would be like a date, wouldn't it? Oh, hell. \n\n\"What? Like a date?\" my voice was high and a little squeaky. I hadn't been this nervous in... forever. \n\n\"Well, now that you mention it, I think a date would be nice, don't you think?\" \n\nWhoa. Wait. What? \n\n\"Wait. You weren't gonna ask me out on a date?\" I asked with a very confused frown. \n\n\"I was about to, but since you already asked me...\" she trailed off as I tried to come up with a proper rebuff. I could see her shrugging in my mind's eye. \"I'll pick you up at seven, Miss S.\" \n\nThe line went dead. I stared at the plastic in my hand as though it had taken a bite out of me. What had just happened? \n\nI moved forward on shaky legs and daintily seated myself on the couch, the phone call replaying itself in my head. I was going on a date. With Alex. The very Alex that had been off-limits for two years. \n\n\"Oh my god,\" I said aloud as I felt the blood starting to pulse faster through my veins. This was huge. ",
        "Teachers dating students - correction, ex-students - wasn't very uncommon, was it? I knew of a few teachers who were married to their ex-students. But this was different. I was in a different country, and hell if I knew if they had a law against dating students. I could get into trouble... \n\nFor what? The nagging voice returned. For going on one date with an ex-student? \n\nI needed advice. Lesbian advice. Lesbivice? I FaceTimed Charm, my oldest and gayest friend. She answered on the 20<sup>th</sup> ring. \n\n\"Hey, Charm. I need your help with something.\" \n\n\"Cee? What the...? Fuck, it's two thirty in the morning!\" I winced as I heard the gruffness in Charm's voice; I could barely see her face in the dark. \n\n\"Yeah, I know. But I needed to talk to you. I have a problem. Like a huge problem. And I'm so confused, I don't know what to do...\" \n\n\"Wait up, hun. Slowly, okay? I'm still kinda half-asleep.\" There was another voice in the background, sounding suspiciously like a mewl. \"Hey, baby. No, nothing. Get back to sleep. I'll be back.\" \n\nCharm slowly slid out of bed, leaving her bed partner behind. I told her the whole story, starting from the very beginning, and watched her pop M&amp;Ms in her mouth to wake herself up. I knew that if anyone could give me good advice about girls, it would be Charm. Aside from the fact that she's known me for most of my life, she'd also exclusively dated women all her life. She'd be able to unravel the significance behind the odd yet exciting conversation I'd had with Alex. \n\n\"You're saying that you've been hung up on this girl for two years?\" Charm's voice was incredulous. I was instantly defensive. \n\n\"No! Of course not...\" Then I stopped, realizing it was foolish. Charm could see through every fib that slipped past my lips. \"Please tell me what I'm supposed to do about Alex! Decode her or something.\" \n\n\"Okay, okay. Hmm. What does she look like?\" \n\n\"Tall, dark, lean muscles. Gorgeous, short hair. Eyebrow piercing.\" Charm's bark of laughter had me grinning. \n\n\"I know that look, babe. You're totally sunk. I need to meet this girl. Damn,\" she said. \n\n\"Oh god, Charm. She's my student, you know, and I can get into trouble.\" \n\n\"Cady, you're such an idiot. You should go! There's nothing wrong with dating your ex-student. Unless it's the fact that she's a girl...\" \n\n\"I don't know. Maybe. It's just that I can barely think whenever I'm near her. Do you know how hard I've tried to avoid her over the past two years? I run when I hear her voice. It's that bad. Stop laughing! You're such an ass,\" I hissed. \n\n\"Sorry,\" Charm sobered. \"You should hear what you sound like. Jesus, Cee, just go for the damn date! You won't forgive yourself if you don't explore this attraction. I know you well enough to say that. I want you to go for this date, okay? And whatever happens, you'll know you gave it a shot.\" \n\nI nodded. Charm had a point there. She always had a point. That was why I'd called her. \n\n\"So... when's the big night?\" she asked, shoveling another handful of M&amp;Ms into her mouth. \n\n\"Next Friday,\" I said absently, my mind awhirl with discomforting thoughts. \n\n\"Quick words of advice. Don't wear anything with starch. Maybe that skinny black jeans of yours with the see-through pink top. Or the thin strappy yellow dress we bought at Macy's...\" \n\n\"You really have a mental list of my wardrobe, don't you?\" \n\n\"Yeah - I'm not ashamed. Anyway, just don't wear something teacher-y. If you want the relationship to develop, you need to treat her like a friend, not her superior. Got that?\" \n\n\"Wow. You make it sound like I'm 50. But I get it, thanks, Charm. Do you have to get off so soon?\" I could tell she was going to say goodbye already. \n\n\"Yeah, I have an early meeting in the morning. But I'm excited for you, Cee. Have fun, okay? Wish I were there with you.\" \n\nShe dragged her lean fingers through her short, dark hair. \n\n\"I know. Me, too. I miss you.\" \n\n\"Miss you, too, babe. Oh, and um, if you sleep with her, we'll have a tell-all session once you get back.\" \n\n\"Ha! No way!\" \n\n\"Fine, fine. Twenty questions?\" \n\n\"Make it ten.\" \n\n\"Deal.\" \n\n\"All right. I'll see you on the 1<sup>st</sup>?\" \n\n\"Yeah. That's about right. You're picking me up from the airport, right?\" \n\nThere was a pause. \"Cee, does Alex know that you're leaving at the end of the month?\" \n\nUh-oh. \"I don't think so.\" \n\n\"You might want to speak with her about that... and think about what you want from your date.\" \n\n\"Okay.\" My voice was small and squeaky. I cleared my throat. \"Yeah, I will. Thanks, babe.\" \n\n\"No problem. Take care. I'll hang up now. Oh wait.\" \n\n\"Yeah?\" \n\n\"Trim your nails, okay?\" \n\n\"What? Why?\" I glanced down at the long nails I'd painstakingly grown over the past few months. I'd spent two hours last night trying to paint them the perfect shade of pink while binge watching Seinfeld. \n\n\"You don't want to tear her shit up,\" she said, matter-of-fact. I took two seconds for me to understand what she meant. I winced. \"Gotta go! Love ya.\" \n\n\"Wait, wait!\" \n\nCharm yawned. \"Yeah?\" \n\n\"Charm, I - I just wanted to say I'm sorry.\" I swallowed thickly as images from the past caught up with me... things that I'd wanted to block out because they'd been just plain awkward. \n\n\"For what?\" \n\n\"For... this.\" I didn't want to say it out loud. \n\nThere was a lengthy pause before she laughed. \"Cee, we're cool. So I thought I loved you one summer over ten years ago. We were teenagers. I was a walking hormone. And you were always so sexy trying to fight my battles for me.\" \n\n\"I just... I never thought...\" \n\nCharm sighed loudly. \"Cee, relax, okay? No, I don't feel betrayed by this. Things happen. I'm happy for you. Maybe we just weren't written in the stars or some shit.\" \n\n\"Or some shit.\" \n\nI knew she was trying to make light of it. Although she tried to pull off the 'give no fucks' vibe, Charm was a really sentimental person at heart. But it wouldn't have felt right keeping this from her. \n\n\"I'm going back to bed now but I'll call you over the weekend, okay? I promise.\" \n\nI nodded. That was the first time she'd ever hung up without saying she loved me. \n\n* \n\nI fussed through the whole week. The only excuse I had was nerves. There was nothing to do at home because I was officially off work. The teaching contract was done and over with, and the only reason I was staying till the end of the month was to wait for the A level results to be released. I wanted to know how my students had done. \n\nThe date had me tied up in knots. I wanted it, I soon came to realize. I wanted the date with Alex but I was scared. Going out with a girl was a big leap for me, especially a girl who was my ex-student. If you were a teacher, you'd understand how difficult it was to cross the line between a student and yourself because there was always a professional line between the both of you. All these thoughts were confusing the hell out of me, and I'd called Charm a few more times before she started warning me not to. Every time I called, I'd asked her the same questions - 'what if it doesn't go well?' or 'what if I'm not what she expected?' Yeah, she got tired of hearing that as well. \n\nOn the afternoon of the big day, I raided my closet for the black jeans and slinky button-down top that Charm had told me to wear. I'd bought them on my last visit home almost a year ago, but they still looked as good as new. I tried them on, just in case, and was pretty satisfied with the way the jeans hugged my hips. I'd always been a girl with too much ass, and the black denim hid the extra pounds efficiently. The blouse was just transparent enough to provide an enticing glimpse of skin. I bit my lip and considered my reflection... the whole outfit looked like something an off-duty teacher would wear. I sighed and pulled the clothes off, tossing them to a corner of the room. \n\nMy other option was a strappy yellow dress that Charm had picked out last year. It had a cute but modest sweetheart neckline and a scallop-edged hem that stopped just above my knee. I threw it on and struggled with the zipper for a few minutes. \n\nFinally, panting and hair undone, I took in my reflection. I looked... flirty. The skirt kept its shape when I moved, and it actually covered my ass. Well, win-win, I suppose. \n\nI carefully took the dress off and ironed it, placing it flat on the bed before heading for a shower. I'd promised myself I wouldn't panic, and that's exactly what I was doing. Not panicking. I was going to take a nice, hour-long shower, do my hair and get all dolled up before seven. \n\nI was not going to panic. \n\nKeeping true to my word, I got out of the tub just shy of five in the evening. I toweled myself off and stared at the mirror for a couple of minutes before deciding to blow my hair out so that it hung in over my shoulders. That done, I carefully slipped into the dress and applied a thin layer of foundation to cover up the light sprinkle of freckles on my nose. A slick line of winged eyeliner, a tinge of pink blush and a 10-minute YouTube video tutorial on 'How to Highlight Your Lips' later, I was ready with little less than an hour to spare. \n\nBy six thirty, I was ready as ever to leave. I sat on the couch impatiently, flicking through TV channels and trying my hardest not to worry my lips. My eyes landed on the pile of moving boxes in the corner of the room and I kicked them into the small storage closet with the owners' stuff. It definitely felt like I was hiding a crime. \n\nAt six forty five, I switched the TV off and decided to go down to the lobby to wait for her. \n\n* \n\nI heard a thunderous roar the moment I stepped into the lobby. The security guard, a heavyset middle-aged man, looked startled by it as well. He looked through the glass doors inquisitively just as I walked past him. Our eyes focused instantly on the black bike parked on the street. \n\nI swallowed audibly. \n\nAlex pulled the helmet from her head and threw her leg over the monstrous machine, looking sexy as hell in her tight-fitting black blazer and skinny jeans. Under the blazer, she wore a white tee that veed sharply between her small breasts. A long black chain and Oxfords punctuated the look. \n\nIt felt like a punch to the gut after seeing her in uniform for two years. \n\nI still stood in front of the lobby, apprehensive about the bike but unable to stop myself from ogling her. Those dark jeans really made her legs look incredibly, impossibly long. The plunging V-neck of her shirt revealed two prominent collarbones with an enticing hollow in between. I watched the black chain slap against her chest as she jogged over. I wondered - not so briefly - if she was wearing a bra. \n\n\"Hi,\" she said, coming to a stop in front of me. My gaze was still fixated on her chest. I couldn't seem to look away. My face was heating, and I was also sure that my chest would soon be red, too. How do men surreptitiously check out women's boobs all the time? I need to Google that skill. It seems like a useful skill to have right now. \n\n\"You look beautiful,\" she continued when I didn't respond. Finally, after a few awkward seconds, my eyes managed to receive the message my brain had been fast tracking. I looked up and saw that her eyes glinted with humor, as though she was trying her best not to laugh at my expense. \n\nSay words! Put a sentence together. A phrase, a greeting - anything! \n\n\"So do you,\" I managed to croak out. \"I-I like that chain.\" \n\nI think I said that as an excuse just to conduct more research on my hypothesis regarding her bra(less) state. \n\n\"Thanks. I really couldn't decide what to wear tonight,\" she confessed a little sheepishly. That statement snapped me out of my daze. \n\n\"You couldn't decide? Imagine my ordeal!\" I gestured to my outfit. \"What does one wear to a kinda sorta date with an ex student?\" \n\n\"Well,\" she said as she held out her arm. I hesitated only a second before I curled my fingers over her bicep lightly. Jeez, she felt much more solid than I'd expected. \"For the record, this isn't a kinda sorta date. It's a date. I'm taking you out and we're going to have a great time - two people enjoying each other's company.\" \n\nWe walked in silence as I processed what she'd said. When we reached her bike, she turned towards me. \"Are you okay with that?\" \n\nOne perfectly manicured brow was arched; the missing eyebrow ring had left a sexy indent in the wing of her brow. I wondered what it would feel like to trace that arch with my fingers... and then my lips. \n\nI looked into her eyes. Like the first time we'd met, we'd kind of gravitated towards each other where we stood and there was barely a few inches of space between us. A dark, earthy scent filled my nose. I really wanted to lean forward and bury my face in her neck. I couldn't help but wonder why, though. Why Alex? Why a woman? Why did I have such an intense reaction to her? Why did my heartbeat feel so irregular? Why was that scent driving me crazy? Why did I not want to care about anything and just take her upstairs and figure out what it truly meant to be with a woman, especially a woman like Alex? Why did I only want to do it with her? \n\nI inhaled deeply, trying to craft a response to her question, but her hands suddenly bracketed my hips. \n\n\"Hop,\" she instructed, and she placed me on her bike, side saddle-style. \"Now, if you're too uncomfortable with this, we can just call this off-.\" \n\n\"No!\" I interjected, probably a little too quickly. I placed a hand on her arm to punctuate my words. \n\n\"No, I don't want to call this off,\" I clarified. \"I want this date, Alex. I've obsessed over the pros and cons for the past few days and the truth is, if I don't do this, I'll regret it.\" \n\n\"Why?\" \n\nI exhaled, long and hard. \"Because I find you devastatingly attractive.\" There. I said it. It's out there now. In the worst-case scenario, I'll leave in two weeks and never have to see her again. \n\nI watched as a small, ridiculously sexy smile twisted her lips. \n\n\"Cady.\" Her voice was low. That was the first time she'd ever said my name. \"I've been fighting my attraction to you for two years. Every single person in my life told me how stupid I was to be pining after my ang moh teacher. But I still had to try.\" \n\nI swallowed thickly. Her eyes were so sincere; I didn't doubt her words. \"But Alex, \n\nI don't want to disappoint you... I'll level with you. I've never been on a date with a girl before. And, I mean, you're exceedingly attractive but what if I-.\" \n\nI felt her finger under my chin, tilting it up. It was hard to meet her eyes, but when I did, I only saw understanding and probably a little mischief. She leaned towards me, the single finger on my chin slowly following the curve of my throat down to the sweetheart neckline of my dress. Our noses were almost touching. My breath hitched and goosebumps spread on my bare arms. It felt like she was trying to coax the insecurity out of me. \n\nI felt a sigh - of relief? - escape. \n\n\"By the way, I'm not wearing a bra. Just in case you're still wondering.\" \n\nMy eyes widened. I flushed guiltily and she chuckled, leaning away. She took the tiny bit of contact with her and I felt it keenly. \n\n\"Your pupils are dilated,\" she observed, looking rather pleased with herself. \"I don't think I'll be disappointed with this date. Now, strap in.\" \n\nShe handed me a helmet. \n\nChapter Four \n\nWe pulled up in front of a row of beautifully decorated shophouses. As Alex helped me off the bike - I mostly just paid attention to keeping my skirt closed - and paid for parking, I looked up at the mint green and cream building we were standing in front of. The white lattice design over the mint paint reminded me of 3-D lace. Most of the traditional buildings had obviously been revamped to suit the rapid developments in Singapore but this neighborhood still seemed to have a relaxed old-school vibe to it. In front of several shophouses on the street, patrons were sitting in the shade, sipping their rapidly cooling beers and feeding their nicotine habits. \n\nAlex led us to a tiny restaurant on the corner of the street. It literally looked like a hole in a wall, albeit a chic one. As she ducked slightly through the entrance, I heard a sharp scream before a body brushed past me to envelop Alex in a hug. \n\nAlex smiled widely and hugged the woman back, patting her fondly on her shoulder. \"Auntie Lin,\" she said, when she could extricate herself. \"This is Cady, my date.\" \n\n\"Of course! Ai, so rude. Hello, hello!\" A plump Chinese woman in her 40s, face pink with excitement, Lin offered me her hand. \"Alex use to work here every weekend when she seventeen. Now I don't see her anymore. I just excited!\" \n\nI shook her hand warmly. \"Don't worry about it. You have a lovely place. Feels more like home than a restaurant.\" \n\nAuntie Lin looked at Alex and then back at me. \"That's what I always want it to be. More of a home than anything else.\" \n\nThe d\u00e9cor was very inviting - warm browns and beige you would use for a nook in your favorite part of the house rather than a small restaurant. Handmade artwork, each of them unique, only accentuated the home-y vibe. The few patrons were already seated and looked like regulars. One of them waved at Alex. \n\nI smiled. \"You've done a very good job.\" \n\nLin beamed at Alex. \"I like her already. You should come more often. Look at you - so skinny. Have you been eating or not?\" \n\nAlex winced when Lin pinched her arm. \"Yes, Auntie, I have. You've known me for a long time - have you ever seen me look differently?\" \n\nLin made a dismissive sound at the back of her throat. \"I just need to try my best to fatten you up. So skinny.\" She tutted. \"Anyway, your table ready.\" \n\nShe turned to Alex and gave her a deliberate, conspiring wink. \n\nMy brows furrowed when we exited the main room and entered a dark walkway, which was lit only by a small, electric lamp that hung from the ceiling. There was a flight of steep stairs, and Lin panted as she ascended them. I felt Alex's hand on my waist, steadying me as I carefully climbed the wooden death-trap in my heels. On the very top step, I felt a knuckle brush against the back of my thigh and jerked forward - on level ground, thankfully - and heard Alex chuckle behind me. \n\nThere was a small table set up in the middle of the none-too-wide balcony. It was covered in a burgundy tablecloth and on top of it sat an array of flowers, a bottle of wine, and a single lit candle. I smiled when I saw it; it had been so long since anyone had done anything romantic for me. I couldn't even remember the last date I'd been on. But this, the effort she'd so obviously put into making things special, started a little glow in my already aflutter tummy. \n\nLin stood to one side, watching my reaction. \n\nAlex pulled herself up the steep steps, her silhouette lean and tall against the cityscape in the setting sun. When her eyes met mine, the longing in them called to me in deep, emotive way. \n\nSee, here's the thing. Guys have given me that look before - the 'I want you so bad it hurts' look. And it had made me feel great. Sexy, powerful. In charge. But, looking at Alex, all I felt was a reactive pull, a need to soothe her desires with my fingers against her skin, my lips against hers. \n\nShe looked away, her hands shoved deep in her pockets. I hadn't said anything and she now looked apprehensive, as though she wasn't sure if I would like the place she had chosen. I reached up and stroked her arm. \n\n\"It's beautiful, Alex,\" I murmured, and jolted a little when her hand reached up to cover mine. She gave my hand a little squeeze, led me to the table and made sure I was seated first. ",
        "\"Look at you two,\" Lin commented. \"So sweet.\" \n\nAlex looked a little sheepish. \"Thanks, Auntie Lin. What do you have on the menu today?\" \n\n\"Anything you want, I cook for you.\" \n\nShe turned to me. \"How are you with spice?\" \n\n\"Um...\" Wussy. Terrible. Several negative words came to mind. \"I can't take too much of it.\" \n\nLin nodded. \"Okay, I bring you two something delicious but no spicy.\" \n\nShe carefully made her way back down the rickety steps. \n\n\"So.\" Alex palmed the bottle of wine and began the corkscrew process - which was good because her next question made my mouth completely dry. \"How's work going?\" \n\nMy conversation with Charm reared its ugly head. Does Alex know that you're leaving at the end of the month? You might want to speak with her about that... and think about what you want from your relationship. I tried not to wince outwardly. But this wasn't the time or place. I didn't want to ruin a lovely evening by being too forthcoming - or was I just avoiding hard decisions again? \n\n\"It's good,\" I said instead. \"Same old, though. What about you? What have you been doing after JC?\" \n\nShe handed me a glass of wine. \"I'm taking a gap year to think about what I really want to study. I always assumed it would be English but it's not a marketable degree. Sorry,\" she added when she remembered I had an English degree. \n\nI took a sip of my wine and waved her apology away. \"Don't apologize. You're absolutely right. I remember being in such a panic in my final year at Sheffield. At the time, things with my mom hadn't been great and I was desperate to get a job to extend my visa... so I wouldn't have to go home and deal with that crap. As it turns out, though, English is not a niche skill that the UK job market looks out for.\" I shrugged. \n\n\"So how did you end up here?\" she asked, leaning back in her chair casually. My eyes were again drawn to her prominent collarbones and how startlingly sexy they looked in the glow of the candlelight. I forced my eyes to flick back up to her face again. \n\n\"Well, there was a job fair thing at Sheffield. The reps from Singapore liked that I had a degree from the UK, plus they paid for teacher training. It seemed like a pretty good deal at the time for a fresh grad in complete panic.\" \n\nShe swirled the wine in her glass around. \"But you don't think it's a good deal anymore?\" \n\n\"Well,\" I edged, \"It certainly is a good deal tonight. Here.\" I raised my glass, hoping to steer the conversation away from a precarious topic. \"Here's to a lovely evening.\" \n\nI noticed that she only took a light sip of her wine but I didn't comment. I assumed she was trying to stick to a two-drink limit and it was still early. \n\nI sat back in my chair and sipped my wine, swirling the flavor around my tongue and feeling the slight burn of the alcohol in my throat. Alex watched me. Her eyes were intense, almost hungry. She held my gaze long enough for me to feel a flush creeping up my face and a spark of pleasure spiraling in my core. I bit my lip, trying in vain not to smudge the pink lipstick I'd so painstakingly applied. Her gaze dropped to my lips and then back up to my eyes. Her smile was... rakish. \n\nI set my wineglass down, realizing a little too late that it was already half empty. I was a real lightweight with alcohol - always have been. Mom had once told me it was genetic but to be honest, she's a bit of a questionable source. I don't think she remembers most of her twenties. \n\nI rose from the table, going over to stand by the concrete railing overlooking the neighborhood of colorful shophouses. I heard Alex's chair scrape backwards and then she was next to me, resting her elbows on the railing. Soft waves of her dark hair curled around her jawline and I had the urge to reach up and comb my hair through the tendrils. \n\nI'd read somewhere that the principle behind attraction is mystery. The more mystery that surrounds the object of your desire, the more you want them. But chasing the mystery, that slow churn of desire, the unhurried ascent to fulfillment, is usually far more satisfying than taking something apart and ruining its magic. But as I cast a sidelong glance at Alex, despite my musings, I couldn't take my mind off the idea of unwrapping her mysteries. Or her unwrapping me. Or we could always unwrap each other. Quickly. Up here on this balcony... \n\nAlex cleared her throat and I swallowed thickly, wondering if I should surreptitiously check the corners of my mouth for drool. \n\n\"You know,\" she said, her voice low. \"You really shouldn't look at me like that.\" \n\n\"Like what?\" \n\nShe leaned in close and her lips brushed against the shell of my ear. \"You shouldn't look at me like all you want to do is push me back against this railing and slide your fingers down my jeans. Because,\" she pulled away again, \"you're not gay, right?\" \n\nMy breath had caught in my chest the moment she'd come so close. Although I felt a burst of heat of my cheeks, I couldn't breathe as I stared into her eyes. The smile on her lips was cheeky, playful, but her gaze fairly smoldered. My core answered with a delicious tightening. \n\nTwo years, I thought. Two years of fantasizing about this girl. \n\nI reached out and grabbed a fistful of her blazer, pulling her towards me. She placed her hands lightly on my arms - to steady herself at first but then her hands curled around my flesh, holding me in place, her torso pressed up against mine. I swear I could feel how thin her tee was as I ran my fingers along the edges of her blazer, over her enticing collarbones and into the softness of her hair, slowly fingering the tendrils. \n\nHer eyes were hooded as she watched me and I wondered briefly if she thought I was brazen for touching her so boldly - did anyone really use the word 'brazen' anymore? But I just couldn't help it. I didn't want to help it anymore. I loved the way her skin felt under my fingers and the delicious contrast between our skins stirred the already bubbling desire that threatened to overwhelm my senses. Kiss me, I thought desperately. Now, now, now. \n\nShe leaned in, her lips an inch away from mine. My breath caught again and I froze, kind of like bracing for impact. Her hands tightened on my arm as she hesitated, paused seconds away from pleasure. I could almost taste it. \n\n\"Alex...\" I whispered. \n\n\"The table so nice and you two want to stand over there?\" Auntie Lin's voice cut through the fog of desire that bogged us down. I stepped back, away from Alex's grasp, and felt air whoosh back into my body. Alex spoke to Lin as she deposited various dishes on the table but I heard nothing, fighting hard to get my body under control. Controlled, deep breaths. Controlled, deep breaths. \n\nI wanted to fucking scream! But I plastered a smile on my face and turned instead. \n\n\"The food looks amazing,\" I said, and even to me, my voice sounded wooden and weird. \n\n\"I hope you like,\" Lin said, stepping back from the table to count off the dishes. \"It's no so spicy.\" \n\n\"Thank you. I can't wait.\" \n\nAs Lin left, Alex turned to me again, \"If you smile like that some more, your face might break.\" \n\nI crossed my hands in front of my chest. I saw no reason to lie. \"Well, I'm frustrated!\" \n\nShe chuckled. She actually chuckled. I glared at her. \n\n\"Here.\" She topped up my glass. \"Relax. We have all the time in the world, don't we?\" \n\nThe glass paused halfway to my lips. \n\n\"Yeah, you're right,\" I croaked, and took a big swig. \n\nChapter Five \n\nShe was, without a doubt, the sexiest and most entertaining date I'd ever had. Gentlemanly, too, I added in my mind, remembering how she'd climbed down the stairs before I did so that she could offer me a hand down the steep, rickety deathtrap. Then, on the last step, she'd grasped my waist and lifted me down. That really got my heart racing. \n\nI protested when she insisted on paying for both of us, but it was no use. She paid up anyway, making me mumble beneath my breath about stubborn females. We strolled to her bike, saying nothing, just reveling in the comfortable silence between us, taking in the raucous laughter of drunk patrons and the cacophony of different genres of music escaping the doors of various pubs. \n\nHalf an hour later, I found myself in a crowded new age pub, staring up at a trio on stage that looked odd and mismatched. \n\n\"Who are they?\" I shouted over the music to Alex, who was in the process of trying to get the attention of the bartender for two beers. \n\nShe handed me a cold bottle of Tiger before answering. \"They're rappers, and very good ones at that. They're on in a few. You'll see.\" \n\nAlex leaned back against the bartop, resting her elbows on the wood. I was seated on a high stool, which put me almost at eye-level with her. My eyes roamed over the slender column of her neck to the small swells of her breasts, stopping at the point where her hipbones were visible through her thin tee. My throat was suddenly dry and I tilted the beer to my lips. \n\nI looked up and blushed fiercely when I realized that Alex had been watching me the whole time. That rakish grin appeared on her face again and I felt my insides become goo in response. I didn't pull away when she leaned over. \n\n\"The view from up here ain't that bad neither, honey,\" she drawled in my ear with a distinct New Yorker accent - a pretty darn accurate one! \n\n\"Well, well. If it isn't my favorite girl,\" a distinctly Australian accent pierced through the thumping music. \n\nWe turned to find an older Indian man smiling down at us. A broad smile split Alex's lips before she threw her arms around him in a long bear hug. Even though he was caught in Alex's hug, the man's eyes never left me. He wagged his eyebrows and I gave him a mini-wave. \n\n\"Cady, this is Jack. He's a friend. And the best mentor I could ever ask for.\" \n\nJack shook my hand. \"That's a very nice boost to my ego. It's nice to meet you, Cady. How do you like Echoes?\" \n\nEchoes was the name of the lounge / club we were in. \"It's lovely, Jack. Is this your place?\" \n\nHe nodded. \"Yeah, it's my baby. I owned a bar in Sydney for years, but when my son moved here, I decided to be the tagalong dad.\" He shrugged. \"It keeps me occupied at least.\" \n\nBefore he could say anymore, the lights lowered and the trio took center stage. Jack mouthed the word 'enjoy' before sliding behind the bar and handing me another beer. \n\nThe concert was a blur. Alex hadn't been wrong - the trio was good. They rapped, mostly, and the female singers in the background filled in the rhythm part. The concert lasted a little over an hour, and mid-way through it, people who'd been lounging before started dancing. \n\nNeedless to say, I joined Alex on the dance floor as well, and we became a part of the body of wriggling limbs. I wasn't a great dancer, but I could hold my own on the dance floor, especially when heels helped my posture. When I draped my arms over Alex's shoulder and moved against her, I could see the surprise in her eyes. But that didn't stop her from placing her hands on my hips and dancing with me. We attracted quite a lot of attention - not all good, but those who frowned did nothing about our public display of intimacy. \n\nI was on my third bottle of beer and tipsy by the time Alex pulled me out the door of the club. She had stopped with only one, being the responsible driver. She put her arms around my shoulders as we walked to her bike. \n\n\"Is the night over?\" I asked as we reached her bike. Looking around, I saw a trash can and disposed of the half-empty bottle of beer. \n\n\"Do you want it to be over?\" Alex asked, withdrawing my helmet from the in-built storage unit. She'd stored hers behind the counter at the bar. \n\n\"Not really,\" I confessed as I took my helmet from her. She smiled. \n\n\"Right, then. Hop on. Let me take you somewhere.\" \n\nI pressed myself to her tightly as she drove through the city. I recognized a couple of places we passed, but when she turned onto an unknown road, the mental map I had became useless. We zipped past an empty park, resorts and a row of houses before she stopped the bike around a corner. In front of us was a short walk that led to a long stretch of sand. \n\n\"The beach,\" I stated, somewhat surprised. Alex didn't seem like the type who'd bring a girl to the beach on the first date. \n\n\"Yeah. It's special,\" she said, getting off the bike after I did. \"Come on. I'll show you my favorite spot.\" \n\nShe took my hand and led me across a quiet beach. I'd taken my heels off before I stepped on the sand, and tiny little pebbles of it squidged between my toes. When the wind blew, I stepped closer to Alex, pressing myself against her body heat. \n\nAnd just like that, I felt the last of my reservation of being with her fade away. This rightness had never been present in my life before, and I wanted more of it, more of her. I lifted her hand and placed it over my shoulder, burrowing into the familiar smell of her cologne. I could swear that she smiled, even though I didn't look up to see it. \n\nWe came to a small clump of trees at one end of the beach, and she led me through it, up a slope, and to a cliff-like boulder. Below us, the water lapped at the rocks, and in front of us was the skyline of Malaysia. Alex seated herself with her legs hanging over the edge, and I followed suit. We sat in silence for a while, listening to the waves and the occasional coo of an owl. It was peaceful, so damn comfortable to sit with her, not talking, not doing anything but basking in each other's presence. I smiled to myself. \n\n\"I used to come here a lot when I was younger,\" Alex said, still staring out at the waves. I looked over at her, and her eyes had a far-away look in them, as though she was remembering a time that had passed. I scooted closer. \n\n\"I can see why you did,\" I remarked, just as softly as she'd spoken. \"It's very peaceful.\" \n\n\"I made some very important decisions in my life here.\" \n\n\"Really? Like what?\" I asked, looking down at where my bare feet were dangling about ten feet above the rocks. \n\n\"Like, what to do when your parents are dicks.\" \n\n\"Everyone's parents are dicks at some point, Alex. I happened to think my mom didn't come with a setting other than 'shrew'.\" I laughed to myself but her smile was sad. \n\n\"What?\" I asked, nudging her with an elbow. \"What's wrong?\" \n\nShe shook her head. \"Just lost in thought, I suppose.\" \n\nI saw the pain in her eyes before she turned away to watch the waves swoosh onto the shore. I lifted a hand to her chin and turned her around to face me. \"No matter what it is, Alex, you can talk to me about it. But not before you're good and ready.\" \n\n\"Thank you,\" she said. I smiled. \n\nWe sat in silence for a little while, enjoying the quiet and the feel of each other. \n\n\"I have a question,\" I piped up after a while. \n\n\"Anything,\" she responded with a shrug. \n\n\"Why me? I know you have your pick of girls. Don't deny it,\" I added when I felt her start to protest. \"So why me?\" \n\nShe looked into my eyes for an intense few seconds. \"You know, the first time I looked at you, I saw this dolled-up, amazingly attractive woman who was so out of my league. My brilliant teacher, no less.\" I bumped shoulders with her. \"I was so attracted to you, Cady. Then we talked, and there was something that pulled me to you, and I couldn't explain it, but it felt right. I knew you wouldn't date me if I'd asked you out while I was still in school, so I waited.\" \n\nShe shook her head. \"All my friends took every opportunity to tell me how ridiculously stupid I was to pursue whatever I felt for you. But you know what? I had nothing to lose... except maybe a little bit of my ego.\" \n\nI had to smile. \n\n\"Do you know what you want from this, Alex?\" I asked, moving closer to rest my head on her shoulder again. \n\nPause. Then, \"Yeah.\" \n\n\"Me, too.\" \n\n\"And what is that?\" she asked, her breath ruffling my hair. \n\n\"You. I just want to be with you, and figure out what all this means.\" I couldn't have been more honest if my heart was being ripped open and checked for its contents. \n\nAlex sighed, and I looked up at her, wondering if I'd been too honest. But she turned to me with a silly smile on her face. \n\n\"I must be dreaming,\" she said. \n\nI rapped on her chest with a curled finger. \"You're not.\" \n\n\"This is way too good to be real,\" she muttered, leaning close again. My fingers rose to her hair, brushing back the curly strands that fell on her forehead. \n\n\"Good things happen sometimes,\" I reminded her. She stared at me for a long while. \n\n\"Not to me.\" \n\nIt was one of those moments when time was suspended, and you could do nothing else but stare into someone else's eyes and queue the cheesy music. \n\n\"I've been waiting for this moment for so long,\" she murmured, her breath grazing my lips. \n\nHer kiss was light. Unusual. Sensual. There was something about yearning for a firmer press of her lips on mine that seemed to sensitize every inch of skin of my body. Then she slanted her lips over mine and blocked all thought. I think I trembled. My hands found her cheek, cupping it as her tongue traced the soft curve of my lower lip. I sighed, trickles of pleasure running through my body as her fingers tangled in my hair, caressing my scalp. \n\nI've been waiting for this moment for so long... \n\nHer words echoed through my mind, and I pressed myself harder against her, my other hand coming up to rest lightly over her heart. She jerked at the touch, but didn't break the kiss. Her teeth nipped at my lip, and I felt her smile against me before her tongue dipped into my mouth. \n\nTo say that the friction was electric would be an understatement. I melted into a pool of incoherent thought as she tangled her tongue with mine, muddling my mind. Lick, retreat, lick, retreat. That was exactly how she drove me mad. And when she pulled back, I was breathless, needy, already edging towards her again. \n\nShe laughed softly at the look on my face. \n\n\"I still think I'm dreaming,\" she murmured. I lowered her head and pressed another kiss on her dreamy lips. \n\n\"You're not dreaming, Alex.\" \n\nThis time, it was she who trembled, and I basked in her pleasure. \n\nShe rested her forehead against mine when I pulled away. As we caught out breaths, head to head, nose to nose, she made little circles at the sides of my breasts, where her fingers had ended up. It was really distracting me from getting my breath back. In fact, it was driving the air out of my lungs. She pulled me closer to her side and I tucked my head in the crook of her neck. Her hand rested on my hip. \n\nA gust of wind blew, and I shivered. \n\n\"It gets cold around here after midnight,\" Alex admitted. \"We should go.\" \n\nWe indulged in one more kiss before rising from the ledge and trudging back to her bike. This time, when my hands went around her waist, I felt a spurt of possessiveness rush through me when she slid an arm around my neck. \n\nI'm with Alex. \n\nAlex! \n\nChapter Six \n\n\"So, um... thanks for tonight,\" I said, swinging down from the bike, undoing the helmet. \n\n\"Anytime,\" she replied, unstrapping her own. \n\nThe silence followed that was just a bit awkward. I didn't want this night to end. But... would she think I was too forward if I asked her to come up for coffee? \n\n\"I, um, I... Hmm.\" She grinned at my loss for words. \n\n\"I'll call you\" was what she said, her voice still low and husky. I nodded and walked toward the lobby of the condo. Mid-way there, I turned back and walked briskly to her bike. Without stopping, I leaned forward and pressed a kiss to her startled lips, unable to hold back the longing that I felt upon separation. \n\n\"Do you, um, want to come up for, um, coffee?\" I asked when we pulled apart. The look in her eyes told me that if we went up, she'd be having a little more than coffee. I didn't care. ",
        "She nodded, pulling the keys out of the ignition and we made our way towards the lobby. \n\nIt started out as little nuzzles, with her burying her nose against my shoulder. The elevator was taking long, longer than usual to get to my floor, and I supposed Alex, like me, was impatient. \n\nWhen my hand rose to her shoulder, and I turned toward her, her tongue flicked out and licked my neck. I shivered, fingers digging into her, and she backed me up against the side of the elevator. Her seeking fingers traveled over my stomach to settle above my navel, stroking the sensitive area there through my dress. I gasped, my fingers moving down from her shoulders to clutch her biceps, turned on as hell. \n\nI knew I should've been the adult, knew I should've told her to wait till we got to the condo, but damn if I could form the words on my tongue. My body felt like it was on fire, claiming all my attention, and I couldn't spare any to stop her. She bit down on my exposed shoulder, little nips that sent prickles of excitement through me. Her thumbs moved to massage the tops of my breasts, making me ache for her to pull the dress down and touch the aching nubs. \n\nBut she didn't. She kept teasing me with those gentle, feminine flicks and I couldn't bear it any longer. Groaning, I reached up and pulled her hands down to the mounds of my breasts, just as she ducked her head to kiss me. The pressure of her mouth and hands was a sweet heaven that teetered on the brink of an orgasmic high. However, when her forefinger found the end of my nipples through the dress and flicked it, I felt a spasm run through my body. And the spasm only got rawer when she pushed one of her thighs against my core. \n\nThe words of caution that had been on the tip of my tongue became a rush of breath when she moved against me. Distantly, I heard a ding, but I couldn't concentrate on anything but Alex and the intense pleasure rioting in my body. \n\nShe leaned close, placing a kiss on my forehead, inhaling the scent of my hair, grinding against me with such a feral rhythm that every thought in my being was only of her, of the high that was just out of reach. In a heartbeat, I felt the change in her, moving from gentle to rough passion. Her thigh angled downward now, instead of the horizontal it was before. It flicked downward, across my clit, and her thumb and forefinger pinched my right breast a little too sharply. I felt something in my body misfire. I arched sharply as my cry echoed through the elevator, clinging to her for support as the pleasure shot through me, sharper and quicker than ever before. All I could do was let her take care of me as I throbbed. \n\n\"Cady?\" \n\nI stirred, feeling deliciously satisfied. My limbs were languid. For a moment, everything was a blur. \n\n\"Alex?\" \n\n\"Good to see you're awake,\" Alex said. She was sitting cross-legged on the floor next to the couch, my copy of Thomas King's Green Grass, Running Water propped open in her lap. It was then that I realized that I was lying on the couch. I struggled to get up, trying to remember what had happened after the elevator... but came up with nothing. How did I get in here? \n\n\"What happened?\" I asked, raising a hand to my mussed hair, trying to shake some order into it. \n\n\"You passed out,\" Alex said with a self-indulgent smile. She was so pleased with herself. \n\n\"Yeah, I got that part.\" I couldn't keep the sarcasm out of my voice. \n\nAlex's hand rose to my face, caressing one slightly freckled cheek. \"Not used to having orgasms, huh?\" she teased. \n\nI narrowed my eyes at her, daring her to take the joke further. She was smart enough not to. \n\n\"You all right?\" There was concern in her eyes. \n\n\"Fine, fine. Can't believe I passed out.\" \n\n\"I can't decide if that's a good thing or a bad thing.\" \n\nShe rose from the floor and sat on the space my legs had vacated. \n\n\"Uh, do you want that coffee now?\" I asked, filling in the silence that followed. \n\nShe shook her head with a smile. \"I didn't really come up for the coffee, nice as that offer is. I need to talk to you.\" \n\n\"Okay.\" I crossed my legs and sat up. \"What's up?\" \n\n\"Do you feel like we're rushing into this? I don't want you to feel like I'm pushing you into something. I really should have waited to... you know. We should've talked about things first and instead...\" \n\nShe wasn't looking at me as she said that. Instead, her eyes were fixed unseeingly on the TV opposite her. I contemplated her words and thought well about my response before it left my lips. \n\n\"You didn't do anything I didn't want you to - trust me, Alex. I want this, and I've dreamed about this for two years.\" \n\nShe turned toward me. \"But you don't know anything about me. I wanted us to feel connected before we became intimate...\" \n\nI raised my brow in a challenge. \"You're wrong. I know a fair bit about you.\" \n\n\"Really?\" \n\n\"Really.\" \n\n\"What's my favorite color?\" \n\n\"Blue.\" \n\nThe look on her face was priceless. \n\n\"How'd you know?\" Alex asked incredulously. I shrugged. \n\n\"Elements in your work are always blue. Blue shirts, blue cars, blue walls... inference, sweetheart.\" \n\nShe nodded. \"Okay... Okay, that's reasonable. Uh, birthday?\" \n\n\"5<sup>th</sup> of June.\" \n\nI could tell that she was starting to freak. \"What? I'm your teacher! I know these things.\" \n\n\"Fine. Favorite food?\" \n\nShe got me with that one. I shook my head. \n\n\"Thai. I love Thai food,\" she said, slipping her shoes off so that she could curl her legs onto the couch. \"You?\" \n\n\"Japanese. I'd take miso soup over a cheeseburger any day.\" \n\nI scooted closer to her so that our shoulders touched. \n\n\"You know, I can barely think when you do that,\" she confessed, leaning away just a tiny bit. I laughed. \n\n\"It's good to know, cause I go totally insane when you do.\" \n\nShe raised her eyes to the ceiling, as though she were pleading a divine intervention. \"What's happening to me?\" \n\nI put my arms around her waist, wondering about the new kind of ache in my heart. I'd never felt it before. There it was again... squeeze, squeeze, squeeze. It felt so good to have my arm around her, like a safe haven that smelt wonderful. I could live with that smell, I realized. And I wanted that smell on me, too. \n\n\"Alex?\" \n\n\"Hmm?\" \n\n\"I want you to take me to bed.\" \n\nShe pulled away slightly. \n\n\"I really don't want you to regret this. I can wait...\" \n\n\"Shh,\" I placed my finger over her lips. \"I want this. Really. The only thing I'll regret about tonight will be the fact that you didn't make love to me, if you don't go about it soon.\" \n\nShe took my hand and kissed it. \"If you're sure...\" \n\nI silenced her with a kiss, staring into her eyes as I did so. I always knew that there was something different about Alex's kisses, but in that moment, I figured out what it was. Alex kissed me without a demand for authority. With every guy who'd dated me, a kiss had meant a devouring of one person's lips - mine. But with Alex... there was a give and a take that I could feel. And that feeling was marvelous, glorious, especially when she curled her lips around my tongue and sucked on it. \n\nI moaned against her lips, bringing forth a shiver from her. Her fingers entangled themselves in my hair, tugging at the blonde strands as she slanted her lips over mine once more, taking my upper lip between hers and biting lightly. \n\nWanting her was killing me, slowly fucking with my self-control. She kissed me like that for a long time, seducing me with nothing but her lips on mine and her fingers in my hair. I did nothing but lay my hands on her shoulders and accepted what she was giving me... and giving what I could feel she was taking. \n\nWhen her mouth finally lifted from mine, I was shaking uncontrollably, fingers ready to unzip my dress. But she stalled me, whispering: \"Bedroom?\" \n\nWe stumbled into the darkened bedroom, not bothering to turn the lights on before we collapsed onto the bed, a tangle of limbs and clothing. Alex ended up on top, kissing me again, drugging me with her taste. \n\nHer fingers roved over my stomach, moving upwards, stroking their way to the ultimate goal, but never really getting there. She leaned back and chuckled when I groaned from the pure hell of it, moving against her fingers restlessly. \n\n\"Please,\" I whispered in her ear when her fingers traced the underside of my breasts through the dress, making goosebumps cover the pale skin of my stomach. \n\nShe kissed my cheek before moving back to pull the zipper of my dress down. I was wearing a lacy black bra underneath - I'd prepared for the what-if situation, so what! - and it was Alex's turn to groan when she took in the delicious contrast between the bra and my skin. Ducking, she trailed kisses over the tops of my breasts, working her way to the valley between. \n\nHer fingers undid the front clasp and she placed a chaste kiss on the small patch of exposed skin, feeling me move beneath her. \n\nHer blazer was gone, and she reached down, pulling her tee over her head. Her breasts were small mounds covered with dark, chocolate-brown nipples. I was only allowed a second to ogle her before she lowered her body to mine, pressing our heated skin together, and we gasped. \n\n\"Jesus,\" was what came out of my mouth. \n\n\"It's never felt like this,\" she whispered against my ear, her voice hoarse and deep. I couldn't suppress the involuntary shiver that ran through me. \n\n\"Never for me either,\" I whispered in reply as I felt her breath scorch the tops of my breasts again. Gently, she lowered her head and licked at one swollen bud, making me buck in surprised intensity of the touch. She held me down, swirling her tongue around one nipple while playing with another using her thumb and forefinger. \n\nShe paid equal attention to both my nipples. She was still suckling on the second one when I felt her fingers slipping past the hem of my dress and into my lacy underwear. It was an excruciating pleasure to feel her fingers delve through the layers of clothing to find the one sweet place that was pulsing just for her. \n\nI made a strangled sound at the back of my throat when her fingers sifted through the thatch of pale hair at the top of my core. Pleased with my reaction, she repeated it, making me lift my hips in silent pleas for her to move her fingers lower. \n\nAnd she did move lower. One finger moved down to massage the tip of my aching sex, making me buck and writhe wildly. \n\n\"Please.\" It was a chant that I couldn't rid my mind of. \n\n\"Wrap your legs around me.\" It was a command, and I felt it stir my already dripping wetness. \n\nI wrapped both legs around her lean waist just as she leaned down to kiss me, her tongue moving into my mouth with the pent up ardor in her body. At the same time, her finger moved down, pressing between my nether lips, coating it with my copious juices. Slowly, she pushed into me, and I felt myself embracing the thrust of her curved fingers, whimpering as I did so. \n\nShe whispered something against my neck but I couldn't hear it over the roar of pleasure in my body. She began moving in and out of me, gradually making me accept more of her lean fingers. The pleasure was sinful, making me lift my hips for more of it each time she withdrew. \n\nOne of her palms was braced on the bed, holding her weight up, the other in my pussy. But that didn't deter her from leaning down and capturing a pouting nipple between her lips. Her thumb flicked over my clit as she bit down on one pink crown, making a spiraling sensation unfurl between my legs. It grew as she sucked none-too-gently on my sensitized nipple, drawing it away from my body before letting it bounce back. \n\nBy this time, my vocabulary had whittled down to 'oh my god', and as her thumb pressed down onto my clit, I felt myself tense for that final, exquisite release. \n\nI whimpered - something I never did, as I came. She kept her finger inside me, moving it as I thrashed, wave after wave of an orgasm trickling through my body. It was bliss, pure bliss that overwhelmed me and I basked in every second of it. \n\nIt was quite a while before I got my breathing under control. Alex had collapsed on top of me, her breathing raw against my neck. I was luxuriously satisfied and felt sleep creep up on me. Then I remembered. \n\n\"Alex?\" \n\nThe sound that came out of her throat wasn't even a growl. There wasn't a category to put it under. \n\n\"I should return the favor, shouldn't I?\" Okay, I couldn't help the yawn that I said that around. \n\nShe chuckled. \"Tomorrow. We'll have Lesbian Sex 101.\" \n\n\"Mmm.\" I could feel sleep creeping up on me again, my body still rolling with the aftershocks. \n\nI watched her through half-closed eyelids as she shucked her jeans and pulled the comforter around us. The smell of sex and Alex surrounded me and I smiled. \n\n\"Alex?\" I whispered just before I was dragged down by sleep. \n\n\"Yeah?\" \n\n\"Wear your eyebrow ring.\" \n\nI could hear her soft laughter. \"Why?\" \n\n\"'S Sexy,\" I heard myself say... but then again, I couldn't be sure. \n\nChapter Seven \n\nI awoke hours later, burning up under the covers despite the air conditioning. I flipped the lightweight sheets off me but it caught on something. I turned over groggily, unprepared for the sight of Alex in my bed. \n\nIt was... surreal. \n\nHow many times had I dreamt of a moment like this? There was a faint glow from between the partially drawn curtains, casting a soft pre-dawn light on her exposed torso. My breath hitched as I took in her lithe, toned frame. I hadn't had the time to appreciate her body last night before she'd drugged me with her kisses. \n\nI let my eyes roam across her breasts. On her back, they lay flat against her body, the dark nipples enticingly thick. My fingers reached out and touched one, tracing the bunching areola. Alex made a noise at the back of her throat but didn't seem close to waking up. \n\nI let my fingers explore her, following the glow that the rising sun had cast on her body - from the dip in her stomach to the cradle of her belly button to the soft curve of her mound. She was flawless, every inch of her silky and smooth. \n\nI scooted lower on the bed and let my hands trail over her thigh, letting my lips follow the sensual trail. Desire blossomed in the pit of my stomach and uncurled between my thighs. I shivered, pausing at the curve of her knee. \n\nThe doubt of inexperience made me hesitate but I knew that there was no better way to learn than trial and error. After all, I'd read up as much as I could on lesbian lifestyles and even braved a few seasons of The L Word online... that was as much drama as I could handle. \n\nI can do this. My body almost vibrated with how much I wanted to do this. \n\nI kissed her knees apart and wiggled into the gap in between. I glanced back down at the clean-shaven mound in front of me - her lips that were beautifully curved and plump. Curious, I ducked my head and inhaled deeply. Her natural scent was magnified here - a mixture of herbal soap and skin. Using my thumbs, I slowly spread her lips apart and breathed deep. \n\nI wasn't prepared for it. The heady scent wafted over me and overwhelmed my senses. I stroked her lips with my thumb as I absorbed it, getting used to it, memorizing it. I placed a kiss on the top of her slit, using the tip of my tongue to get a taste of her skin. \n\nI'm not sure what I expected - my research had said to expect 'musk' but what is musk anyway? Certainly not the rich, slightly salty flavor that erupted on my tongue. I took a bigger swipe of her pussy with the flat of my tongue and savored the taste and texture. It was probably an acquired taste but definitely one of mine. \n\nI tried to control the moan that rose in my throat as my tongue explored further. The truth was, I had a feeling that this sexy seduction was affecting me more than it did Alex. She still remained asleep. Her breathing pattern had changed but otherwise, she hadn't moved. \n\nI took my time to learn every curve of her sex intimately with my tongue. My hands were now hooked around her thighs, spreading them open for my ministrations. Then, nose pressed against the top of her mound, I dragged my tongue over her clit slowly, punctuating it with a suckle. Her hips bucked but I held her down and continued, feeling an odd kind of power wash over me. I wanted to watch her come apart, to see that look in her eyes as pleasure washed over her, pleasure that I'd licked into overwhelming existence. \n\nI alternated between suckling her clit and teasing her opening but what she was really responding to was the pressure on her clit. So I stayed on it, varying the suction and pattern experimentally as her hips thrust beneath me. \n\nI gasped when I felt fingers in my hair. \n\n\"Fuck, Cady,\" I heard, her voice rough from sleep. \"Don't stop. Please don't stop.\" \n\nThe need in her voice shot straight to my core and I doubled my efforts, now teasing her entrance with my thumb. She repositioned the angle of her hips nominally until her back bowed off the bed and a short, sharp gasp reached my ears. I watched her features contort in surprised ecstasy and reveled in the tight tug of her fingers in my hair. \n\nShe took her pleasure quietly - only a sharp intake of air was an indication that she was coming. Seconds later, she fell back on the bed, her widened eyes blinking dramatically, as though she were trying to get her bearings. \n\n\"Fuck,\" she breathed, noticeably out of breath. I watched the rise and fall of her chest, fascinated. \"What was that?\" \n\nShe propped her head up slightly to look at me. I knew I was a mess. Her juices had flowed everywhere - my cheeks, my fingers, my hair. I was sure I was covered in her. It only made me feel so dirty and so good. The satisfied, dazed look on her face only added to my triumph. \n\nA wide smile split my lips. \"Good morning.\" \n\nShe laughed, still trying to catch her breath. Then in two surprise moves, she rolled me over the foot of the bed and tackled me to the ground. \n\nWe landed with a thump on the small patch of carpet with her palm cupping the back of my head and her frame covering mine completely. \n\nI was giggling until she pulled me snugly towards her with her hands under my thighs. I stared up at her with my thighs spread open as wide as they could possibly go. She was watching me, her eyes intense in the light morning sun as she sat back and ran her hands over the soft parts of my thigh and grazed over the softer parts of my pelvis. I bit my lip and watched the movement of her hands. The movement of those knowing fingers, more than the sensations they caused, seemed to fan the already burgeoning fire inside me. \n\nI moaned as she combed her fingers through the thatch of hair at my core, the sensation a little like a drug. She was taking too long. I'd been turned on since I'd woken up to find her naked in my bed. My body seemed to be screaming for a release. \n\nShe covered me again, leaning her weight on her forearm, putting us stomach to stomach, chest to chest. She took my lips fiercely, her kiss tinged with need and longing. I ran my hands over the skin of her back, running my short nails up and down until she shivered. \n\n\"Touch me, please, Alex.\" I hadn't even realized the words had left my lips until she made a noise of assent at the back of her throat and bit down lightly on my neck. But her fingers still lingered everywhere except where I needed it most. I tried - I really did - to be patient, but with each bite, each suckle, each sigh that left my lips, my pussy just felt more and more empty, more needy. I tugged on her hair, hoping she'd understand the kind of pain she was putting me through. \n\nShe just chuckled against my breast before flicking the distended tip of my nipple with her tongue. I think I was pretty incoherent by that point. Was this her version of revenge? I writhed under her, my body vibrating with need. ",
        "She grasped my wrist and brought it down to her sex. \"Rub my clit. Hard.\" I could barely think. I just obeyed. She shuddered on top of me as her own fingers snaked down to my pussy. I gasped sharply when her fingers brushed over my swollen, needy clit. \n\n\"Don't stop,\" she murmured, her breath hot against my ear. I hadn't even realized I'd stopped. \n\nThen I felt two fingers enter me and it was all I could do to remember to keep going. Our moans mingled, echoing in the room. As her fingers curled inside me, my back arched and I felt release coiling inside me. I was so close. Please, please, please... \n\nI felt my eyes drift closed as the first wave of pleasure shot through me. I heard Alex's voice from a distance, her fingers pushing my hair out of my eyes as she shifted her weight to her forearm. \"Don't, don't, don't. Don't close your eyes. Watch me. Watch us.\" \n\nHer eyes were so dark, so intense, they pinned me to the floor as another wave of pleasure washed over me. I flicked her clit with my thumb, harder this time, and she cursed, throwing her head back, shuddering violently. I watched in utter lust as she came apart in my hands, her juices trickling down my fingers. \n\nBut her fingers didn't stop. They curled, harder this time, inside me, and the pressure on my clit increased. The pleasure was so close that I could taste it. God, so close... \n\nAlex buried her teeth in my shoulder and my body seized, trying to make sense of the pain and pleasure. Yes, my eyes closed, but I held on tightly to her, my only anchor in a world I was so unfamiliar with. The roiling pleasure made me clench down on her fingers once, twice, three times... and I lost count. \n\nFor the first time in my life, as I stared into her sated onyx eyes, let her wipe the sweat off my forehead and listened to her sweet words, I knew what it meant to feel at peace. \n\nWe stayed on the carpet, on our sides, talking and touching until the rumbling of my stomach made conversation impossible. Alex helped me up and promised to have breakfast ready by the time I'd cleaned up. I wanted to tell her not to but I gathered that she liked the idea of taking care of me. Truthfully, it didn't sound half bad to me, either. \n\nAfter a long, searing kiss and loving pinch to my ass, she threw her boyshorts and tee on - watching her do this really made me question the need for breakfast - and went off to the kitchen. \n\nI was so smitten. There was no denying it. I'd never fallen so quickly or so hard before. It wasn't the sex - though, god knows, it was a nice perk - but it was the way she treated me. It was the way I was when I was with her. We seemed to work, to mesh, without even trying. \n\nAs I brushed my teeth, I wondered if this was a lesbian thing or an Alex thing. Maybe women were just more in tune with each other? Maybe it was a natural thing? I would've to ask Charm; I had no clue. \n\nAs I slid my robe around my shoulders, I realized I hadn't stopped smiling. My body was singing and I hadn't felt so truly sated... ever. In every way. I stretched languidly, watching the way the robe glided over my body in the mirror. \n\nThe silly smile was still on my face when I popped open the bathroom door... and ran right into Alex. Surprised, I placed a hand over my suddenly racing heart. \n\n\"Jeez, you scared me.\" My eyes ran over her. \"Why are you dressed?\" \n\nHer face was blank. A nagging sense of foreboding settled in my stomach. \n\n\"What's wrong?\" I asked when she didn't reply. \n\nShe held a slip of paper right in front of my face. I had to lean back to read it. \n\nShit. \n\nIt was the flight ticket I'd booked for the end of the month - the one I'd stuck on the refrigerator. \n\nOh god. \n\nWhat was she thinking? I started to shake my head. \n\n\"When were you going to tell me?\" Her voice was low, angry. \n\nI stared blankly at the piece of paper, dread creeping into my veins, trying to explain myself. My mouth opened and closed, but nothing came out. \n\n\"Were you even going to tell me?\" she repeated, her words bitter and hard. I don't think a slap could've hurt worse. My brain scrambled for an explanation. \n\n\"Alex, listen, I booked this a couple of weeks back...\" \n\nI couldn't find the words to answer her after that - I didn't know how to, especially when she asked me in that tone. I'd really wanted to tell her but I also wanted to see how the date would go first. There had just been too many things up in the air last night. My lips parted for me to say just that, but she moved away and placed the ticket on the edge of the bed. \n\n\"I believed you, you know. When you said you wanted something with me, I believed you,\" she said quietly. \"I didn't know why I did.\" \n\nA bitter laugh. It pained me to hear it. She shook her head. I wanted so badly to say something, but my throat felt tight and I couldn't bring myself to utter even a word. \n\n\"It's a fucking one-way ticket. Fuck this. I'll just... go.\" \n\nMy eyes followed her movement towards the door; I remained unmoving. It felt like I was outside my body, watching all this shit unfold after such a magical night. But when I saw her frame move past my doorway, my legs and my voice box jerked into action. \n\n\"Alex, wait!\" I called out as I grabbed the first article of clothing I could find. Somehow, I knew that running after Alex clad only in a short silky robe wouldn't fly in my building. I kept calling for Alex to wait, but when I raced out to the hall, she wasn't there. I opened the front door, hoping that she'd be waiting for the lift, but she wasn't there either. I heard a distant rumble and ran across the small corridor in bare feet, towards the windows that overlooked the carpark. I was just in time to see Alex pulling away from the lot without her helmet on. Something painful twisted in me as I watched her go, and the further she went, the worst the pain became. \n\nI didn't know how long I stood there, staring at the route she'd taken. I was crying, too, silent tears that I'd never cried before. What the hell had I done? How could I have fucked this up so quickly? \n\nI went back into the condo, looking at the couch where we'd made out last night. She had it all wrong. I wanted a relationship with her, and I didn't care if I had to miss flights to make it work. I'd even stay in this eternally hot country if it meant I could spend my days with her. \n\nI swiped the tears from my cheeks and grabbed my phone. If she could find me, I would sure as hell find her. \n\nChapter Eight \n\nThe taxi came to a stop in front of a quaint little one-storey house in pseudo-suburbia adjacent to a highway. I thought it odd that there were no children playing in the street until I remembered that it was probably around 9AM on a Saturday. \n\n\"This is the house,\" the driver said, his fingers tapping impatiently on the steering wheel. I leaned forward, noting the BMW in the driveway and the framed picture of a Hindu deity hanging over the front door - a front door that was open. This really didn't seem like the kind of place Alex would be living in. I couldn't even imagine her being any kind of religious. But this was the address - the post-it I'd taken from the school confirmed it. \n\nI handed the driver a couple of notes and mumbled a thank-you before braving the heat again. \n\nAs the taxi pulled away, I scoured the entrance for a doorbell. Couldn't find one. So I yelled out, \"Hello!\" \n\nA middle-aged man came to the door, dressed in a polo T-shirt and a traditional Indian wrap-around men's garment. He stopped when he saw me, looked me up and down and pointed to the picture of the deity above his head. \n\n\"You see this?\" he asked. \n\n\"Yes, I-\" \n\n\"So you know we are Hindu?\" \n\nI blinked. \"Yes, I do.\" \n\n\"So why do you always come here talking about your Jesus stuff, huh? We don't believe in Christianity. We are Hindu. Don't come here again. Okay?\" He had a rather deep, resonant voice. I was a little scared. The salt and pepper handlebar moustache didn't help. \n\n\"I'm not from the church,\" I corrected. \"I'm here to see Alex.\" \n\n\"Who? Who is this Alex? We don't have any Alex here.\" \n\nA young girl, probably thirteen or so, came up behind him and said something I couldn't hear. But the effect on him was profound. His chest puffed up and out like an exotic bird and his expression grew grave. \n\n\"We do not know anyone by that name.\" \n\nI shifted restlessly in the heat. \"Look, I don't want to cause any trouble but I know you're somehow related to her. I got this address from the JC I work for.\" \n\nThere was a quick exchange of words between him and the girl. \n\n\"Are you her teacher?\" \n\nUh, ethical conundrum? \"Yes. And she was my best student. I'd like to speak with her regarding something important before I leave.\" \n\nAnother quick exchange of words and the girl turned away with a huff, clearly upset. \"If she's not here -\" I began, but Handlebar cut me off. \n\n\"If you are her teacher, you should know that that girl is dead to us. She disgraced this family.\" He spat on the ground. \"We do not want anything to do with her.\" \n\nThe elaborate white curtains framing the front window parted and the girl's face appeared in the middle, forlorn. I looked back towards Handlebar, his chest still puffed and indignant. \n\n\"Do you know how I could contact her?\" I ventured. Hey, I'd already taxi-ed this far; I might as well try. \n\n\"You should go before I call the police.\" He shut the door and I heard several locks click in place. \n\nThe girl in the window raised her hand, almost as though she were about to wave, when she was jerked backwards. The curtains fell back into place. I heard a lot of yelling, propelling me backward, away from the house. \n\nI'd wanted to say so many things - anything, really - to stick up for Alex. But was it my place? \n\nThe sign in front of the club said 'Closed - Come Again Please'. Still, I got out of the cab and rapped sharply on the ornately carved wooden door. No response. I tried the handle and the door pushed inwards. I peeked around it, calling out as I went in. \n\n\"In the back,\" a voice called out. I followed it to a loading bay where a goods van was parked. Jack stood with his t-shirt tied around his waist, unloading crates of beer. He was in pretty good shape for a guy pushing sixty. A similarly muscular girl with a buzz cut worked alongside him. \n\n\"Just leave the flyers there,\" he instructed, and I looked around, hoping he wasn't speaking to me. What was it with people today mistaking me for someone else? \n\n\"Uh, Jack?\" I ventured. He looked up, surprised, and set down a heavy crate on one of those wheely transport things. It took a moment but he soon smiled and shouted out a greeting. \n\n\"It's Candy, isn't it? You were here last night?\" As he walked over, he untied his shirt and slipped it across his head. \n\nHis hand in mine was warm. \n\n\"It's Cady, actually. I'm surprised that you remember. There were quite a few people in here last night.\" \n\n\"Yeah, but I remember all the important names,\" he said with a wink. \"Now, what can I do for you? Did you leave something at the bar?\" \n\n\"Oh, no. No. Not that. I, uh, I was wondering if you could tell me where Alex lives.\" \n\nHis smiled faltered a little. \n\n\"Why? Did somethin' happen between you two?\" \n\nHis assistant had stopped stacking boxes and was listening to our conversation without hiding the fact. My eyes darted towards her uncomfortably. \n\n\"Right,\" he said. \"How about some morning tequila, huh?\" He rubbed his hands together as my gag reflex activated at the thought of alcohol this early in the day. \"Ai Tee, keep stacking and I'll be back soon.\" \n\nHe brought me to his office where, thankfully, he made me a cup of tea. I sipped it as he poured himself coffee, chatting about the terrible weather back in Sydney. I made the appropriate sounds, gratefully hydrating after running around like a lunatic all morning. \n\nAs he sat behind his desk, I tried to direct the conversation back to my main concern. \"Alex said she used to work here?\" \n\nHe nodded. \n\n\"Yeah, she used to do what Ai Tee's doing today. They're all under 18 and can only work on the premises during the day when the courtyard is transformed into a bistro. Would you like something from the kitchen? I can call for some breakfast.\" \n\n\"You're very sweet, Jack, but I can't right now. I really need to see Alex and I thought you might know where she lives.\" \n\nHe sighed, leaning back in his chair. \n\n\"You've yet to tell me why.\" \n\n\"It's a little personal...\" I edged. \"Just a misunderstanding that I really need to fix.\" \n\nHe seemed to think about it for a long minute. \n\n\"You know, when I first met Alex, it was just after her grandmother had passed away. I run a shelter out of my home for at risk teenagers and she came to me for help.\" \n\nA lump rose in my throat as a picture of Alex, alone and grieving, entered my mind. I set the mug down. \n\n\"She was different... like someone who knew exactly who she was and was living her truth. It's hard to see that in these parts. Most people keep it on the DL.\" He shrugged. \"So I helped her. She stayed at the house for a while, mentored a few younger kids. But she's had her share of bumps.\" \n\n\"What happened?\" \n\nHe shook his head. \"You should ask her that.\" \n\n\"Where is she now?\" \n\n\"You have a one-track mind, Cady. Look, I know there's something going on between you and her but I can't in good conscience tell you that.\" \n\nI shut my eyes and took a deep breath. \"I just need to see her for a few minutes. I need to set something straight.\" He started to shake his head. \"You don't understand, she thinks I'm leaving her. And judging from what you've said and the \"family\" I met today, I have a feeling that she may have... abandonment issues. I just... I can't let her think that of me. Do you understand, Jack?\" \n\nHe dragged a hand through his greying hair, assessing me closely. Finally, he rose and said, \"Fine. But only because I have a good feeling about you.\" Plucking a piece of paper from his desk, he wrote down the street name and a block number. \n\n\"She's on the second floor balcony flat, the one with the red door. I can't remember the door number, I'm sorry.\" \n\n\"Thank you, Jack.\" I went around the table and hugged him tightly, so thankful that I was almost in tears. \n\n\"Don't make me regret it,\" he grunted. \n\nJack had said it would be a quick walk and he hadn't been wrong. Fifteen minutes later - 8 blocks past the club and behind a market - was block 149. I didn't even have to look for her flat because there she was, leaning against the second floor balcony railing with a cigarette dangling from her fingers. \n\nI stood, watching her for longer than was appropriate, even for a lover. Her shoulders were tense and she lifted her fingers every few minutes to tuck her curls behind her ear. The muscles in her arms bunched and moved, her warm, brown skin cast gold in the sunlight. \n\n\"Alex,\" I called out. She froze, the cigarette halfway to her lips. \n\nThen, gathering her cool, she flicked the ash away and turned toward me, a frown creasing her forehead. \n\n\"Are you done harassing everyone I know?\" \n\nI crossed my arms. \"What do you mean?\" \n\n\"I got a text from my cousin earlier today, saying my \"white teacher\" had come looking for me. Then half an hour ago, a friend texted to say that she saw you at the club, asking for me.\" \n\nI licked my lips. When she put it that way, it sounded a tiny bit stalker-ish. \"Well, you weren't answering any of my calls and I really needed to talk to you!\" \n\nShe took a final drag of her cigarette and put it out. \"About what? Look, Cady. If you're leaving, just leave. You don't owe me anything, including an explanation. We'll pretend like last night never happened.\" \n\n\"No!\" I yelled as she turned away. \"No, I don't want that.\" \n\n\"Then what do you want?\" \n\nI took a deep breath and yelled, \"I want you, Alex.\" \n\nA Chinese lady passing by let out a disgusted 'tsk' and ushered her kids along quickly. \n\nAlex shook her head, clearly unimpressed by my Romeo-style admission of affection. \n\n\"Can I come up?\" \n\nShe made an off-hand gesture. I took it to mean 'yes'. \n\nSmokey air hit me in the face when she opened the door. \n\n\"You stink,\" I chastised, wrinkling my nose. She rolled her eyes. A voice called out from behind her. \n\n\"I know, right? She crawled home this morning smelling like sex.\" \n\nI felt the color rush to my face. A Chinese girl with a PlayStation controller glued to her fingers looked up briefly at me before her eyes swiveled back to the TV. From her short buzz cut to the arms that looked like they could dead lift a tonka truck, she was what my friend Charm would call a 'stone butch'. \n\n\"Shut up, Heng,\" Alex called over her shoulder. \n\n\"Ya, she's been pouting all morning, too.\" Heng was undeterred. \n\n\"Seriously? Can't you go somewhere else?\" \n\n\"No, no,\" I stepped in, trying to defuse the situation. Teacher training put to good use! \"Look, can we just talk? I'm sorry about this morning.\" \n\n\"Why? What happened?\" Heng again, from the couch. The sounds from the TV could only mean an apocalypse. \"Did you go down on her and get a nosebleed?\" \n\n\"What?!\" The color had just started to recede from my cheeks but I could feel it crawling its way back up again. \n\n\"Sometimes it happens.\" Heng shrugged, her eyes still glued to the TV. \n\n\"What?\" I whispered again to Alex but she just shook her head and waved me into the flat. It was a small, very cluttered space that seemed rather mismatched. On the small balcony was a home gym set-up consisting of a treadmill and some weights. Little knick-knacks like feminine throws and scented candles brightened up the otherwise masculine furniture. \n\n\"Do we have an extra person for lunch?\" another voice called out from the kitchen. It was distinctly male. \n\n\"Uh... it's Cady,\" Alex called out. \n\nWe heard a bunch of pots and pans clatter to the floor. \n\n\"Seriously? The Cady? She's here? Oh, my god!\" As his voice rose in pitch, we heard a lot more clattering before a tall, tan male body exited the kitchen, wiping his hands on the bikini bum apron he wore with the word 'Bali' written in gold. He extended a hand. \n\n\"It's so nice to finally meet you. Alex has said so much about you.\" \n\nI shook his hand. \"Really?\" I looked at Alex, who shrugged. \n\n\"Oh yes,\" he continued. \"The last year it's been like, 'Oh, she's so inspiring, you should hear her speak' or 'you should see those high heels, Daniel, they kill me every time'.\" \n\n\"Ya.\" It was Heng's turn to contribute. Her game was paused. She leaned over the back of the couch, the controls dangling from her fingers. \"Or 'you should see her ass, its'-\". \n\n\"Okay!\" Alex interrupted in a near shout. \"All of you need to shut the fuck up.\" \n\nDaniel raised his arms, indicating surrender. \"I'm just excited, Alex.\" \n\n\"Go be excited in the kitchen.\" \n\n\"Fine.\" With a huff, he turned on his heel and left. \n\nAlex turned and shot a warning look at Heng, who slowly lapsed back onto the couch, looking somewhat chastised. \n\n\"My room,\" she said, ushering me to the nearest door. \n\nHer room was sparsely decorated. A single bed with a wooden frame was pushed against one wall, leaving quite a bit of room for the large, plain Ikea-style bookcase and matching desk. An old HP laptop sat amidst badly fraying notebooks. \n\n\"I don't get what you want to talk to me about,\" she said, locking the door. \"I know you intend to leave Singapore for good - you could have just told me that last night. Or when I asked you out. Or when I asked how work was. Why didn't you?\" \n\n\"Alex, I - yes, I did book a ticket home and I should have told you that. I'm sorry.\" I took a step towards her. \"My contract's over. And I was getting a little bored of this place and I wanted to go home.\" "
    ],
    "authorname": "KillerRomance",
    "tags": [
        "lesbian",
        "sapphic",
        "singapore",
        "college",
        "teacher",
        "lesbian love",
        "interracial lesbian",
        "interracial"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/alex-the-novella"
}