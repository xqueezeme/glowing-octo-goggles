{
    "title": "Home for Horny Monsters Ch. 76",
    "pages": [
        "Hi all! I'm here once again to share this tail of love, loss, and monstergirl sauce!\n\nNew reader? Yeah, don't start here. Unless confusion is your kink, cause there are a lot of words between Ch. 01 and here. The good news is that you can jump straight to the first chapter and binge all the way up to here! The bad news is that when you catch up, you can join the anxiety of waiting for my next post.\n\nReturning readers, welcome back! I hope the holiday season is treating you well already, I have been busy as fuck. I've officially reached \"carrying my laptop around and writing in my car when I have time\" levels of business. Car engineers definitely didn't consider computer screen glare when designing their cars, but you can't plan for everything.\n\nThanks again to my beta readers for helping me keep my work relatively clean. Special shout outs to the Mikes (there are two of them), Eduardo, and Dannan. They carried me through these last few chapters like those New Yorkers did in Spider-Man 2 with Toby McGuire. And thanks to all of you who remember to vote and keep this story discoverable. I'll keep working hard to impress you.\n\nDon't forget you can follow me for notifications or just check my bio for posting dates. I work real hard to stick to them, but will update if necessary (life happens and all that).\n\nNow on with the show!\n\nA Pruned Branch\n\nThe world was quiet, save for the occasional thump of melting snow. Abella trudged along what may have been a trail. She had some sense of where Mike was, but dreaded meeting up with him. The dog tags around her neck were far heavier than anything she had ever carried, and she would often pause and touch them for strength. How would she break the news to him?\n\nShe wished she could fly, but that was out of the question. Her wing throbbed painfully as she pushed her way through the deeper drifts and there was no way it would support her weight.\n\nA few of the forest children were scattered through the woods. They were animals and hybrids she was unfamiliar with, but some Nirumbi children came out of hiding to greet her. She was surprised when they hooted to get her attention, but even more so when they took her by the hand and led her away from the trail.\n\nMinutes later, she found herself looking at a small camp of Nirumbi. They were huddled around a couple of fires for warmth. The children led her through the refugee camp to a large makeshift tent made of animal hides.\n\nAbella pushed the flaps aside and walked in. Blankets had been placed on the ground, and each one was occupied by a Nirumbi. Upon closer inspection, she realized that they were all injured.\n\n\"Why have you brought me here?\" she asked, only to realize that the children were gone.\n\n\"Because I told them to.\" Bigfoot rose from the corner, his eyes tired. The dim light of the tent made him look like a hairy shadow, and he stepped toward her. \"I tracked Vee to the mountain, but lost the trail. The mountain imploded sometime last night. This whole area is a mess. The Nirumbi needed my help, so...\" He let out a heavy sigh. \"Leeds had formed a cult, using the young warriors of the tribe. They slaughtered each other in the caves, and these were the ones who were lucky enough to get away. I told everyone to keep an eye out for anyone from the cabin and to bring them here.\"\n\n\"Where is the owl-woman? Shouldn't she be here?\"\n\n\"Gone. Leeds had her killed.\" Bigfoot knelt down to help one of the Nirumbi sip water from a ceramic bowl. \"Did you ever catch up to Velvet?\"\n\nAbella didn't know what to say. The moment of indecision was not missed by Bigfoot, who stood slowly with his fists at his side.\n\n\"Well?\" he asked, an edge to his voice that she didn't like.\n\n\"I'm so sorry,\" she whispered, then let go of the dog tags she had unconsciously been holding. They jingled against her chest and then went still. \"Leeds destroyed the cave while we were inside. Velvet saved my life, but lost hers in the process.\"\n\nBigfoot let out a groan as if struck, then stomped past her and outside of the tent. She followed. The forest children gave him plenty of room as he stormed out of the camp, his breaths accompanied by a growl. Once safely away from the camp, he let out a roar and kicked down a tree.\n\n\"NO!\" He grabbed onto his hair and pulled, ripping out giant clumps of fur before letting out a howl that scared the birds out of nearby trees. With a strangled cry, he fell to his knees and sobbed.\n\n\"I'm sorry, Darren, I'm so sorry.\" As he wept, Abella moved to his side and put a hand on his shoulder. His fur was surprisingly soft in her hands, and she wrapped her arms around his mighty neck and hugged him.\n\n\"I need you to help me get to Mike,\" she told him. \"When he finds out... he's going to need us.\"\n\nBigfoot snarled, his body expanding with every breath he took until he was enormous. He cracked his knuckles and let out a growl.\n\n\"You point, I'll get us there.\"\n\nAbella obeyed, and Bigfoot walked to a nearby clump of trees,opening a portal between them. Abella felt the distance between her and Mike shrink considerably and let out a sigh of relief.\n\nSoon, they would be together again.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nThe air was so cold that every breath inward felt like daggers, tearing away at Mike's lungs as he ran through the forest. He had been hunting Leeds for a few hours now, the Jersey Devil bouncing around the woods seemingly at random. Leeds would often stop for a bit, which made him think that the demon was meeting with his followers.\n\nThe chill of the night had long ago permeated his boots and his coat, but his magic sustained him, warming him from within. With every step he took, he was that much closer to catching Leeds, to ripping the demon apart with his bare hands.\n\nA tiny voice inside fought to gain his attention, but he was so consumed with rage that he ignored it. Behind him, Yuki and Dana struggled to keep up, the kitsune's labored breaths filling the silence of the woods. They had given up trying to speak with him, for he was a man possessed and could not be reached.\n\nHis magic had formed a tiny storm around him as he ran, sending ice and snow billowing outward as tendrils of light connected with the trees and animals around. He could sense the forest waking up as it eased his passage and guided him to wherever Leeds had gone next.\n\nIn those brief moments of clarity, thoughts of Velvet bubbled to the surface. They were brief, yet intense, and he was fairly certain that frozen tears clung to his cheeks.\n\nHe caught movement in his peripheral vision and saw a white stag bound ahead of him and then vanish. It had been doing this for the last hour, and would be waiting up ahead just to watch him. Sure enough, the stag stood on a rock that Mike was forced to go around, but he couldn't help but notice that the beast stared him directly in the eyes.\n\nSucceeding at a hunt doesn't mean you can skin a deer. The voice was faint, but very persistent.\n\nHe ignored it and kept running. The stag outpaced him again, and waited for him on top of a fallen tree.\n\nA heart that lends itself so easily to others is easily broken. The stag grunted, sending a cloud of vapor into the air. You've only had one branch pruned, Caretaker. Do you think you're ready to be a spear?\n\nHe bared his teeth and hissed. Yelling would only alert Leeds that he was coming, and he didn't want the demon to have any time to prepare. Leeds was always one step ahead of them, and Mike needed every advantage he could get.\n\nThrow not spears in a dark wood, Mike Radley! The stag stepped off of the log and vanished.\n\n\"Fuck your metaphors,\" he spat between breaths in a low tone. He didn't need a lecture, an explanation, or even advice. What he needed was revenge, plain and simple. To hear Leeds beg, to squeeze whatever color blood could be spilled from his body.\n\nThe trees rustled around him, and he could see it in his mind. Up ahead there was a clearing where several creatures stood in a circle. At its center was a darkness that felt like poison, a stain on the landscape yearning for removal.\n\nA guttural growl snuck free of his lips, and flickering motes of blue light formed in the air around him. They crackled in the crisp air, shifting colors until they turned red. Now transformed, they flew toward him and disappeared, hidden just below the surface of his skin.\n\nHis fingers trembled, but he couldn't tell if it was from anger or the cold. Yuki, in fox form, jumped onto a nearby rock and did a quick turn, her tails twirling widely as she shifted into human form. She opened her mouth to scold him, but he held a finger to his lips.\n\n\"Leeds is nearby.\" He pointed off towards where he sensed the darkness. \"There are others. Nirumbi, I assume. Won't be easy.\"\n\n\"And then what? An ambush?\" He could hear the anger in her whispering voice. \"What the fuck do you think you're doing?\"\n\n\"Revenge.\" Dana had caught up to them, her blade still folded up in her right hand. \"Don't tell me you can't sense it. Something happened back at the cabin, and now we're out here to fuck up his day, right?\"\n\nMike nodded.\n\n\"What happened, Mike?\" Yuki crossed her arms. \"We have a few seconds. Tell us.\"\n\n\"Velvet's dead.\" There were no tears to be shed, not right now. The words only served to fuel the fire that raged inside him.\n\nYuki gasped. \"How?\" she asked.\n\n\"Don't know. Felt her being ripped away in the Dreamscape.\" He looked over at Dana and was surprised to see that her bloodshot eyes were now brimming with tears. \"Dana?\"\n\n\"What?\" She looked at the two of them in puzzlement, then wiped a tear from her face and examined it. \"That's weird. It's like I feel it, but I don't.\"\n\n\"We can worry about it later. I'm going in. Anyone with Leeds is fair game.\" He turned to go, but a wall of snow blocked his departure.\n\n\"Not good enough.\" Yuki hopped over him and stood on the snow pile with her arms out. \"You're mad, and that's fine. But you're also being stupid about this.\"\n\nThe red lights briefly appeared, swirling around Yuki like angry bees, but he pulled them back inside his body.\n\n\"You don't understand, Yuki. He has to pay.\" The trees around him groaned in agreement, and he could feel the ground rumble in anticipation. The forest was silent as a tomb, and had been for most of his hunt. The wildlife had recognized that he was the top predator and was doing its best to stay out of his way.\n\n\"And he will, but we have a plan. Capture him, yes, but tear him apart? He can't be killed. If you go in there looking for murder, all you are doing is costing us time.\"\n\nMike growled. \"And so what if I am? Let's tear him apart, devote every day to a unique brand of torture! Drown him, stab him, set him on fire, rip off--\"\n\nSharp icicles appeared in a circle around him, trapping him in the center. Their sharpened points were at neck level, and even the act of turning his head pressed one into the soft flesh beneath his ear.\n\n\"We made each other a promise, do you remember?\" Her ears twitched as she glared at him. \"I would be your weapon, remember? And in return, if you should ever lose yourself like Emily did...\"\n\n\"You would stop me.\" He glowered at her through the ice. \"But this isn't about learning dark magic or trying to gain power. This is about justice, Yuki!\" The swirling lights shifted around him, passing through the ice and melting it.\n\n\"Don't.\" Dana got in between them. \"Take it from someone who gets it. You aren't being logical, Mike. Not only are your emotions out of control, but so is your magic.\"\n\n\"Why are you stopping me?\" He pushed forward against the nearest icicle, his magic circling the conical shape and turning it to ice crystals. \"You both understand how this feels!\"\n\n\"And that's exactly why we're stopping you.\" Yuki shook her head. \"We came to help you, but you need to do this the right way.\"\n\nHe took a deep breath, focusing on her words. Of all people, Yuki would know best how this had felt. Emily had been the love of her life, and that same woman would abandon her on another world and steal her eye.\n\nThe eye. Mike put his hand in his pocket and caressed the glassy orb. The owl had hastened her own death just to hand over a way to contain Leeds. Was he really willing to risk everything just to feed his own desires?\n\nYes, you are. A band of darkness stole through the forest, seizing both Yuki and Dana around the waist. They both cried out in surprise as they were ripped away from him. Dana dropped her sword, the blade pinging off of a nearby rock. Come for me, Caretaker! Show me how strong you are without your allies!\n\nHis magic ignited, destroying his icy prison and scattering the snow around his feet. He paused just long enough to pick up Dana's sword and then sprinted through the woods.\n\nHesitation had cost him. He had decided to hear out his friends rather than act, and he was about to lose someone else, he could feel it. One by one, the branches would be pruned until all that was left of him was a weapon.\n\nYes, that's right. Come for me, mortal. Take your revenge.\n\nThe red motes were now spreading out into the forest, each one hissing with sinister energy as it disappeared into the woods. His footfalls were so fast that he almost didn't feel the ground. It was almost like flying.\n\nYou're worthless, you little pervert. His mother's voice was harsh, grating against his very soul. You only care about them because you can stick your dick in them.\n\n\"No!\" He screamed in response, desperate to stay focused on Leeds' location.\n\nThey represent power. Amir's voice was smug. You fear losing access to the power they provide. And you will fail.\n\n\"Not true!\" Trees were now bending out of his way, their branches moving up to allow him safe passage. \"They're important to me because of who they are, not what they can give!\"\n\nYou'll make a mistake. Sarah laughed in his mind. It won't be the first time, or the last. So who's gonna die this time?\n\nThey were all laughing now, his mind filled with their echoes.\n\nWhen he burst into the clearing, he saw that in the middle Leeds had constructed an altar out of wood and stone. At its center was an upside down cross, and a group of Nirumbi were frantically trying to strap Yuki onto it. The kitsune was fighting them, but the shadow bands kept grabbing at her hands and feet. Standing above the altar, Leeds was doing a little dance as the Nirumbi worshipping him from below turned to face Mike. There were maybe a hundred of them, each one with a fanatical glint in their eyes.\n\nBehind the altar, a bonfire had been lit. Dana was being dragged toward it, a panicked look on her face.\n\nYour world is going to burn, Mike Radley! The shadow cackled with glee. Your world is going to--\n\nMike let out a horrifying screech, forcing his magic free of his lips, willing death on his enemies. The banshee's scream was accompanied by a wave of force and light that scattered the Nirumbi lurking nearby and blasted Leeds from his perch. The demon fell backwards into his own bonfire, and the shadows pinning Yuki in place vanished.\n\n\"Mike!\" She screamed his name, her fur turning white as she grabbed the Nirumbi nearest to her and flash froze him. Spinning around, she used the Nirumbi as a projectile and sent it flying toward Dana's captors. \"He's in your head, don't listen to him!\"\n\nClenching his hands, Mike sprinted toward Dana, his own magic forming bands of light that scattered his enemies. His whole body tingled as he casually dodged arrows, clubs, and even rocks that were thrown at him. Some of the Nirumbi, each marked with a bloody handprint, panicked and ran, but his magic grabbed them and pulled them back into the fray.\n\n\"Mike, stop!\" Yuki's words were lost when he howled again. Those closest to him were blown away, their bodies smashing into trees and rocks. The clearing was already red with blood, and he licked his lips in anticipation.\n\nDana was wrestling with one of the Nirumbi, so he tossed her the sword. She snatched it out of the air and killed her foe with a bloody thrust.\n\n\"LEEDS!\" Mike sent his magic into the fire, tearing it apart and scattering ashes to the sky. \"I CAN FEEL YOU IN THERE!\"\n\nThe Jersey Devil burst into the sky, his wings pumping as he tried to get away. Desperate, Mike reached into his pocket and pulled out the orb. Pointing the pupil at the devil, he willed it to work.\n\nIntent. It may not be the first rule of magic, but it was going to be his. \"No escape, you shadowy fuck!\" Magic crackled along his forearm and sank into the orb before turning into a crimson beam of energy that roped itself around Leeds' legs. The devil, now caught, looked back at Mike in dismay.\n\nHe waved the orb toward the ground, causing Leeds to slam into the ice and snow. Satisfied, he swung it from side to side, smashing the Jersey Devil against the trees as he crossed the distance between them. His precognition triggered, and he threw himself backwards to avoid a cluster of arrows that littered the ground around him.\n\nYuki pincushioned his attackers, then raised clawed hands and created a barrier of ice around the clearing. She collapsed to one knee, panting from the exertion.\n\n\"You may have won the battle, Caretaker, but this is a war of attrition!\" Leeds tried to crawl, his hands digging in the snow. Mike leapt on his back and fought to roll him over. The crimson light disappeared as the orb fell to the side, forgotten.\n\n\"You killed her!\" He smashed a fist into Leeds face. The devil brayed like a donkey in pain as red light flashed from Mike's knuckles. \"You killed her, you killed her!\"\n\nI did, Leeds replied in his mind. And I killed the gargoyle, too!\n\nMike screamed in the devil's face, his magic shredding the flesh from along his muzzle. Leeds flinched, then tried to kick Mike off of him.\n\n\"Not going to happen!\" He smashed his fists into Leeds over and over. Leeds retaliated by pushing images of Velvet begging into his mind.\n\nSomething popped in Mike's hand, and he could no longer hold his fist shut. Howling in desperation, Mike picked up the owl's eye and used it to bash Leeds' skull in.\n\nAfter the third hit, his magic flowed into the orb and sent a shockwave through his body. His muscles tensed as images flitted through his mind, thousands of them.\n\nMemories flooded his mind, centuries worth of magical lore, of exploring the limits of enchantment and spell casting. He could see them now, the owl and her sisters, feel the possibilities that had been open to them. They had hunted, they had killed. They had survived on knowledge and power alone, and he craved that for himself.\n\nHis magic curled around him, forming into crimson bands of light that hovered over his body like a spider trapping its prey. Panic crossed Leeds' features as those limbs descended and sank into his flesh. Black blood flowed from open wounds that no longer healed. Shadows tried to rip Mike free, but his magic would not allow it.\n\nHe could see it now, the intricate process that had put Leeds together. A human soul bonded to demonic flesh, incapable of transformation. That was his weakness, his inability to be anything other than the monster that he was. The magic was like lines of code now, and code was something Mike understood.\n\nIt was suddenly simple. He could see the flow of magic, understood what it would take to disrupt it. Leeds was now bared before him as a being before a god, and Mike was ready to pass judgment.\n\nAround him, Yuki and Dana were screaming his name as the magic swirled overhead, forming into a crimson tempest of energy. Chunks of the Jersey Devil were being ripped free and sucked up into the maelstrom. If he wanted to, he could destroy Leeds. Not just his body, but his soul as well. There would be no resurrections, no coming back to taunt him.",
        "Energy flowed through his limbs as he cackled madly, then raised the hand holding the orb to the sky. The energy coalesced around it, forming into a vibrating blade.\n\nMy sister was never much of a fighter, and she doesn't attract them.\n\nHe hesitated, unsure if the voice was just a memory or something else. The world around him was moving slowly, almost as if reality itself were holding its breath.\n\nMore images came. This time, he was seeing the forest from the owl's point of view, watching as she met the Nirumbi for the first time. They had been afraid of her, but she had gained their trust.\n\nA maternal feeling overwhelmed him as more images came. The Nirumbi hunting deer in the woods. Sitting around the owl as she told them stories. Letting her play with their children.\n\nShe spoke to the mystical creatures of the woods, pleaded with them to band together and find someplace safe, somewhere away from humans. He watched as many of them died, from forest fires, deforestation, and even men in white coats with swords. So many painful memories surfaced, and the pain filled him up until he threatened to burst.\n\nAnd then it would shift. Long walks with Nirumbi elders, speaking about philosophy to a giant bear that walked on stilted legs, flying through the sky with an emerald serpent. There were peaceful times amidst the chaos, and almost none of them involved power or magic of any kind. She had formed bonds with the others, bonds that had eventually cost her life.\n\nHis own face appeared. There was an upswell of hope that was almost scary to experience, and then she was speaking to him with her clacking beak. The world was still now, save for the sound of his own heart beating deep within.\n\n\"You should know that magic like yours can be quite powerful, but only if it can be controlled. Be warned that it has a life of its own, very much like a roaring fire. If you aren't careful, it will consume you.\"\n\nThe words resonated with him, and he contemplated the blade of magic in his right hand. He could drive it into Leeds right now, sever the bond between spirit and body and banish him from the world.\n\nThere's always a cost. They were his own words now, and they gave him pause. For the first time in hours, he truly saw the brutality of the magic he had summoned. It had indeed become a wildfire, one that threatened to escape him. If he destroyed Leeds, it wasn't just on a physical level, but a spiritual one. Immortality required a high price to achieve, but what was the cost of destroying a soul?\n\nThere were suddenly too many questions, and he could feel the pressure building in his head. He had summoned this magic, and it demanded an outlet, craved the change that would come once it was released.\n\nI am not just a structure in the forest. The stag was watching him from the edge of the clearing, its dark eyes brimming with power. I am also the ground beneath your feet, and the trees around you.\n\nMike screamed, desperately trying to regain control of his hand. The blade was swinging down in slow motion, aimed for the center of Leeds's chest. The magic had been born of rage, and it hungered for the demon's blood.\n\nYour true power isn't something that grows from within. The stag walked toward the trees, immune to the slowing of time. It flicked its tail once and then looked back at him. It is also your connection with me and with others.\n\n\"Aagh!\" Fiery pain lanced through his shoulder as he tried to force the blade to stop. Leeds' eyes had widened in terror as the blade moved closer to the demon, now, less than a foot away.\n\nWhen last we spoke, you did not carry such an earthen aura. He saw himself through the owl-woman's eyes once more, but now he saw the magical aura that surrounded him. It was a cloud of colors that sank deep into the ground and spread out like tree roots. It is very much like the fae, but also the magic of the forest.\n\nThe fae. The forest. His mind flashed to Titania, then back to the incident in the clearing with Abella. The Queen of the Fae was triggering a memory of his own.\n\nThis little shit stain wants to be king of the forest. Besides fucking up the flow of my woods, he is also the reason you cannot get home. He couldn't tell if he was remembering the cabin's words or hearing them live in his head. Your compassion and kindness have brought you some very powerful allies.\n\nAllies. From the corner of his eye, he saw Yuki summoning a barrage of ice and skewering the Nirumbi. Dana was frozen mid-kick, sending another one of their warriors across the clearing.\n\nSomeone must care for the forest children. He was the owl-woman now, holding out her eye to Mike. He could see the concern in his own face, the lines of despair that were already forming. This was the Mike he had been, the one who didn't know that he would never see Velvet alive again.\n\nYuki took the eye from the owl-woman's hands, and then Bigfoot leaned in, his body smelling of cloves. Below him, the steady humming of the forest was beating in time with his own heart as the owl-woman's final memory came to a close.\n\nNow sleep and be one with the woods, Bigfoot told her as everything went dark.\n\nThe blade was inches away, and Mike's eyes locked on his hand. He had become so lost in his rage that he had forgotten who he was, what he was meant to be. His magic had been summoned in a fit of rage, and he could now feel it simmering beneath his skin, spreading through his body like a poison.\n\nDriving that blade into Leeds would kill him, but it would change Mike forever. Over the last nine months, his actions had not only shaped his magic, but had changed him. Acts of love, lust, and kindness had changed him for the better. Would participating in this act of rage do the same?\n\nHe tried to withdraw the magic, but it burned deep inside him, like inhaling hot smoke. Time was going back to normal, and the next few moments of his life would change everything. He had come into this fight with the attitude that nothing else mattered, but he knew now that it wasn't true. No matter what was going on in his life, there were still plenty of people who mattered to him.\n\nAnd right now, they needed him to come back alive.\n\n\"No,\" he muttered through gritted teeth, feeling his magic try to feed his rage back into him. It was trying to establish a feedback loop and he fought back. The anger needed to go somewhere else, but where?\n\nThe magic couldn't be stopped, the spell had already begun. He thought back to sitting at the table with Dana, wondering if magic was like energy. The sparks had sunk into the wood of the table and vanished. He couldn't let it back into his own body, nor could he use it to kill Leeds. It would have to go somewhere else, but where could he put it without causing destruction?\n\nBe one with the woods. It wasn't Bigfoot's voice he heard, but the owl-woman. He could almost feel her gaze on him, see those intense eyes peering through his very soul.\n\nScreaming in fury, he stopped fighting the magic and fought to adjust his aim. The blade twisted and missed Leeds' chest, piercing the demon's wing and sinking deep into the ground. Blue and red flames ate away at the membrane of the wing, searing the flesh as Leeds howled in agony.\n\nCrimson bands of light swirled around the two of them as Mike forced his mind into the ground, seeking out every strand of life he could find. He could feel the land beneath him, his magic touching every tree, bush and animal. Their minds were briefly part of him, and he was them, and then he was everywhere. For a split second, he and the land were one, and it felt like his head would explode from the pressure.\n\nHe channeled his anger, grief, and rage into the spell, willing it to depart from him, to feed the land and make it grow. In that moment, he felt how everything was connected, saw how he could turn tragedy and death into beauty and life.\n\n\"Velvet.\" He whispered her name like a prayer, letting her go.\n\nThe swirling maelstrom of magic channeled itself through his elbow and down into the bowels of the Earth itself, spreading far and wide. His rage was sucked along with it as the magic spread out like a blanket and warmed the tired soil beneath. Stubborn foliage pushed its way through the snow, and the trees shook off their snow and held their branches high in pride.\n\nThere was a loud snap, and pain flared up Mike's arm as the last of the magic passed through it. Gasping in agony, he was unable to stop Leeds from kicking him hard in the chest, which sent him sprawling across the snow.\n\n\"Fool!\" Leeds leapt to his feet and laughed. \"You were so close, closer than anyone's ever gotten!\" He flapped his wings and jumped into the air, only to tumble about before coming to rest in the low branches of a tree. Puzzled, the Jersey Devil extended the wing Mike had pierced to reveal a large hole.\n\n\"Looks like your flying days are over,\" Mike told him between gritted teeth.\n\n\"This? This will heal.\" Leeds summoned the shadows around him. \"But your friends? They will be dead fore--\"\n\nThe tree swung one of its upper branches into Leeds, cracking him in the back of the skull and knocking him down to the ground. He landed with a thud, then cried out in pain when flowers burst out of the snow and wrapped around his neck.\n\nWhat few Nirumbi were left frozen as the trees around them came to life. Tree roots ripped free from beneath the snow and grabbed Leeds by the ankles to drag him away. He let out a cry of terror as the beasts of the woods descended on him, scratching and biting as he passed. The roots passed him from trunk to trunk as nearby bushes scoured his flesh with thorns and sharp branches.\n\nMike stood, wincing as he tucked his arm into his belly. Nearby trees smashed the altar as he followed after Leeds.\n\n\"What happened?\" Dana sniffed the air, then looked at him. \"It's your magic, I can smell it everywhere.\"\n\n\"I woke up the forest,\" he told them as he followed Leeds' cries. \"It might not be alive in a way we can understand it, but it knows a shitstain when it sees one.\"\n\nThe trees were unable to move Leeds quickly, but between his damaged wing and the consecutive animal attacks, he was unable to escape. Occasionally a portal would open between the trees and the devil would be tossed through and carried away. Mike was surprised at first when the portals remained open for him and the others, but the trees that touched him conveyed feelings of mutual grief and respect. When he touched their branches, it felt like greeting an old friend.\n\nA song played in his mind, one that only he could hear. The forest shared more memories with him, memories of Darren and his daughters as they played in the woods. There was an older Arachne who looked startlingly like Eulalie, and he caught brief glimpses of their lives in no particular order. The girls as children, chasing their mother through the trees. Darren trying to give Eulalie a piggy back ride. Velvet trying to sneak up on Bigfoot while he was reading a Harlequin romance novel with Fabio on the cover. They had been the keepers of this land for decades, and the forest had not forgotten.\n\nThe forest would never forget.\n\nLeeds shouted in agony. Wolves had emerged from the woods to tear chunks out of him as he went past. Mike had worried that he might end up dying, but the animals seemed to know and understand the limit of what the demon could survive. The land was pissed, and it was letting him know.\n\n\"Mike, you're bleeding.\"\n\n\"Huh?\" He held up his injured arm and winced. The owl's orb had shattered in his hand, the shards of glass slicing up his flesh. His arm was numb from the bicep down, which probably wasn't a good sign.\n\n\"Gods.\" Yuki reached into her coat and pulled out a piece of fabric. \"Your hand is a mess.\"\n\n\"We can deal with that later.\" He nodded toward Leeds, who was being pulled up a stream. \"I need to see this through.\"\n\n\"Mike, what happened back there, I...\" Yuki grabbed his good hand and squeezed it. \"I thought we were going to lose you. Your eyes, they were--\"\n\n\"Don't.\" He leaned onto her and was surprised at how warm she felt. \"I don't want to talk about it. I know how close I came. And you would have been right to stop me. You need to hear me say that.\"\n\nShe nodded, and he suddenly felt so tired. Dana got on his other side and they helped him through the woods as they neared the boundary. They had come down in elevation, enough that the snow was actually gone from several places, and the forest was making sure to drag Leeds through all the muddy parts.\n\nThey were at the boundary when a roar came through the forest. It was a howl of pain, and Mike saw a portal between the trees. Bigfoot stepped through it, his features borderline feral. Behind him was Abella, her eyes widening at the sight of Mike.\n\nHis eyes flicked to the dogtags on her chest.\n\n\"LEEDS!\" Bigfoot stomped over toward the devil, his huge body making the ground tremble. He swatted away the branches as they tried to form a barrier, then roared to chase away the animals. Relief shined in the devil's eyes as Bigfoot raised a giant fist to strike him.\n\n\"What do you think you're doing, you damned yeti?\" Mike wasn't even sure why he said those particular words, but they caused Bigfoot to spin around, anger in his eyes.\n\n\"He killed Vee! He killed my fluffy girl!\" He grabbed Leeds by the ankle and picked him up, ripping the roots that held him down. \"He has to pay!\"\n\n\"And he will. But right now, stomping his ugly ass is what he wants.\" Mike approached Bigfoot and stared into the sasquatch's eyes. \"He wants you to take a piece out of him. Don't give him what he wants.\"\n\nBigfoot huffed for a couple of seconds, then roared in Mike's face, spraying him with spit. \"You don't understand, he--\"\n\n\"I know.\" He put his good hand on Bigfoot's arm and squeezed. \"This piece of shit owes you a pound of flesh. But you have to understand, he's banking on it. He's been playing us since we got here, and your only response so far is to go storming off in a rage. If you do that here, if you crush his skull just to feel a little bit better, she will have died for nothing.\"\n\nBigfoot hesitated, his hot breath filling the air with vapor. His fur was ruffled like a cornered animal's, and his lips kept pulling back to reveal his teeth.\n\n\"There are better ways to make him pay.\" Mike stared at Leeds. \"I have a whole house full of people who would love to sit down and discuss how to punish him. You and Eulalie will be part of that discussion, she deserves a say as well. But right now I need you to stand down.\"\n\n\"Pathetic.\" Leeds spat on the ground as he dangled upside down, his tail whipping uselessly against Bigfoot's chest. \"It's because you don't have the guts to kill me. Go ahead, yeti. Break the barrier first and then crush me, snap my neck, torture me until I beg for death! You've gotten soft, listening to filthy fucking humans!\"\n\nBigfoot looked at Leeds, then Mike. Doubt, grief and anger all played about behind his furry visage before he let out a pained groan as if injured. With a grunt, he threw Leeds through the air. The Jersey Devil's body passed through the red barrier at the edge of the property. With a quiet pop, the spell dissipated, and Leeds bounced off a tree and fell to the ground.\n\n\"You're the big hero now, aren't you, Caretaker?\" Leeds chuckled and stood. \"Gonna run home to your family and try to save them. Don't look so surprised, I can hear your thoughts, I know all about the angel, the horsemen. I'm willing to bet that--\"\n\n\"Shut this fucker up,\" Mike snapped, and a massive pine outside of the boundary bent itself over and smashed Leeds into the ground with a pair of long branches. The demon was flattened beneath heavy boughs, then roots ripped free of the earth to wrap him up tight into a bundle.\n\n\"How?\" Leeds asked, his fiery coal eyes blazing. \"These trees aren't part of your land!\"\n\nMike approached Leeds, then crouched down and smirked. \"The forest doesn't belong to anyone,\" he told the Jersey Devil. \"The land doesn't belong to me, either. I had the choice to destroy you and we both know it. I think maybe you even welcomed it, you poor, tormented soul. But that's not who I am.\" He stood and walked over to the nearest tree, then placed his hand on it. \"And it isn't who I plan to become. All I did was let the land know how I felt about you. And it agreed.\"\n\nHe felt a presence over his shoulder, then turned and saw the stag watching him from between the trees.\n\n\"I know you said you would keep him out,\" he told the beast. \"But would you consider letting him back in? I need somewhere to keep him for a little bit.\"\n\n\"Who are you talking to?\" Bigfoot asked, craning his neck to look around.\n\nMike shrugged. \"I'm not entirely sure, to be honest,\" he replied.\n\nThe stag bowed its head, and the trees outside the boundary passed Leeds back over. Animals appeared from the trees and bit into Leeds' flesh, then dragged him through the woods.\n\n\"The forest is going to hold him for us.\" He put a hand on Bigfoot's forearm. \"Follow him and figure out where that is, make sure he can't escape. Meet us at the cabin after, so we can plan our next steps.\"\n\nThe sasquatch deflated, his eyes brimming with tears. \"You speak for the forest,\" he muttered beneath his breath. \"You're just full of surprises.\" He wandered off with Leeds, his shoulders drooping. It was clear that the sasquatch had mixed feelings, but even clearer to Mike that this was the correct choice. Allowing Leeds to wander off again would just create a problem in the future that he might not have a solution for.\n\nEven worse, someone else could die because of it. He winced, feeling the pain of Velvet's death anew. Though his anger was gone, his sorrow had been planted deep.\n\n\"Abella.\" He walked over to the gargoyle and put his hands on her shoulders. \"Are you okay?\"\n\nShe looked at him for several moments, then shrugged. \"I've had better days,\" she told him.\n\nWith a sigh, he touched the dog tags around her neck. The soft jingle reminded him of Velvet, her head tilted to one side with a smile on her face.\n\n\"Here.\" Abella started to lift the tags off her neck, but he stopped her.\n\n\"Hold onto them for me,\" he said. \"I'm about to be neck deep in shit soon, and I know you'll take care of them.\"\n\nShe looked away from him, her tail thumping on the ground. \"I can barely take care of myself, much less anyone else.\" Her voice was harsh and laced with venom.\n\n\"You are nothing short of amazing,\" he said, then placed his forehead against hers, his voice wavering. \"I'm broken inside, and it feels like the world is spinning, but if I had lost you too, I want you to know it would have killed me.\"\n\nFirm hands gripped his back as she held him close.\n\n\"She lost her life saving me,\" she whispered. \"How can I live with that?\"\n\nHe tried to answer her, but the spinning sensation intensified. He mumbled something, the words dripping from his mouth like molasses as he lost consciousness.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nIt would have taken them far longer to return to the cabin if not for the fact that the forest seemed to sense their urgency to return. Abella cradled Mike's unconscious form as they were led by deer through a series of glittering portals that returned them to the cabin.\n\nSmoke rose from the chimney, and Quetzalli burst out of the front door, her cheeks and eyes red from crying.\n\n\"You left me here!\" she shouted, then paused when she saw Mike. \"Is he okay?\"\n\n\"Exhausted,\" Dana replied, then took Quetzalli by the hand. \"Sorry we ran off, it was everything we could do to even keep up with him.\"\n\nYuki put her hand on Quetzalli's shoulder. \"We need to get him inside, he's freezing.\"\n\n\"Yeah, okay.\" She walked back toward the cabin and opened the door. Emery shot out through the gap and hovered overhead.",
        "\"Big sister!\" he cried, then zoomed down to hover in front of her face. \"You've been injured!\"\n\n\"I'll be fine,\" she replied, a little surprised that the imp could tell she had been hurt.\n\n\"Where is Miss Velvet?\" he asked. \"Did you catch up to her?\"\n\n\"She didn't make it.\"\n\nThe little imp let out a pained cry and simply fell out of the sky, clutching his chest and landing on the ground with his wings outstretched. Dana picked him up and held him to her chest as they went into the cabin.\n\nDespite the warmth of the fire, the space felt lonely, as if the building itself knew that something had changed. Abella took Mike to his room and placed him on the bed. Yuki helped cover him up with blankets as Quetzalli pulled his shoes off.\n\n\"What happened to his arm?\" Quetzalli asked, staring at the purple mass.\n\n\"I'm not sure.\" They had walked back in silence, so she hadn't bothered asking. However, Abella had noticed that everything from his right elbow down to his fingers had turned a mottled purple color, like one giant bruise.\n\n\"He channeled a massive spell through it,\" Yuki replied softly. \"Essentially used living tissue as a magic wand. His fingers are all cut up, we may need to stitch the wounds.\"\n\n\"On it.\" Dana walked in carrying the suture kit Eulalie had made for her last year.\n\nMike groaned in his sleep as Dana and Yuki started working on his arm. The kitsune was fairly certain that there were broken bones, and Dana stitched up the worst wounds on his hands, licking her fingers off when she was done. Yuki created some ice compresses to help mitigate swelling in his arms, then used a tarot card and a kitchen knife to fashion him a makeshift brace.\n\nAbella watched them in silence. When they were done, they tucked him in. Yuki transformed into a fox and took her place at the foot of the bed. Dana and Quetzalli left, leaving Abella to watch over him.\n\nAlmost an hour passed before she took off the dog tags and set them on the bedside table. Trying to move silently, she walked out of the room and shut the door behind her.\n\nEmery sat on the kitchen table across from Dana, the little imp was staring forlornly at nothing. Quetzalli was scrounging up food for a proper meal, which consisted solely of soup cans that hadn't gotten consumed earlier.\n\nDespite Abella's phenomenal hearing, the house was eerily quiet.\n\nUnable to do anything of use, she went outside. The air was crisp, and the forest around the cabin was actively shaking off snow. It was surreal to see trees moving their own branches, and the animals of the forest seemed to pay their movement no attention.\n\nAbella walked over to the remains of the barn. The fire had burned hot, and there wasn't much of anything to go through. Still, she picked her way through the scorched timbers until she found the melted remains of the jeep.\n\n\"Merde,\" she muttered, then spent several minutes clearing debris off the top of it. Once the cabin was revealed, she dug her talons into the dashboard and ripped it away to reveal the contents of the glovebox. Inside there were chunks of melted plastic and what looked like melted wax from a box of crayons. She dug through the mess, grumbling to herself as she paused every couple of minutes to wipe her fingers off on a nearby piece of metal.\n\n\"Big sister?\"\n\nAbella turned around and saw Emery sitting on the burnt remains of a stud. He was hugging his knees to his chest.\n\n\"Hey.\" She wiped her fingers off again, then turned to face the little imp. \"How are you feeling?\"\n\n\"Miserable.\" He hunched forward, looking almost like he would disappear into his wings. \"It feels like there's a pressure inside my body, like I'm going to explode if I can't let it out. I don't know what to do with myself.\"\n\n\"That is called grief.\" She moved closer to him and crouched so that they were eye level. \"Have you never experienced it before?\"\n\nHe shrugged. \"I don't think so,\" he informed her. \"When I was created, my job was to take care of this place and any who were welcome here. I'm an elemental, I'm only happy when I'm doing my job. It's really the only thing I've ever known for sure. I learned about sadness when Darren and Ana died, but it never felt anything like this.\"\n\nShe nodded, then touched his foot with a finger. \"You have lived more in the last few decades than you have in all the rest of your life, haven't you?\"\n\nHe pondered this for a moment, his eyes widening at the revelation.\n\n\"It is something I have come to realize myself,\" she added. \"Creatures like us can live for centuries, not realizing the joy and warmth that can come from a loving home. Darren and Ana, they got a chance to live full lives here. I think maybe you understand that an entire lifetime was stolen from Velvet, a life that should have been full of laughter and happiness. Now that we know how much joy can be crammed into such a short time, we recognize the true tragedy of a life cut short. My own heart feels broken, and I was not as close to her as you were.\"\n\nThe imp let out a sigh, then shook out his wings.\n\n\"I feel like I can't fly anymore,\" he told her. \"I feel too heavy now. Like I'm carrying a giant weight in my chest.\"\n\nShe patted him on the head. \"It may take some time, but you will know the joy of the sky once again.\"\n\n\"But is that okay?\" He tilted his head to one side, considering her words. \"I feel guilty wanting to feel better. It feels so wrong.\"\n\n\"Wanting to feel better doesn't betray those we have lost. After all, our time here is still limited.\" She looked up at the sun, squinting into its harsh rays. Knowing now that it was a sight that she might not have seen if not for Velvet, she closed her eyes and cherished the warmth. \"No matter how long you think you have, death has a way of sneaking up on you.\"\n\n\"My kind doesn't have souls,\" he told her. \"When I die, I just become rocks and sand once again.\"\n\n\"Perhaps that is true,\" she told him. \"But I am starting to learn that nothing is as simple as we believe it to be.\"\n\n\"You are hurt.\" He cleared his throat and stood. \"I can tell by the way you hold your wing. I almost lost a wing myself, one time. Velvet...\" Emery choked on her name. \"She got into an argument with her mom and slammed the front door as I was coming in.\"\n\nAbella winced. \"I am indeed damaged,\" she told him. What she didn't tell him was that she was afraid to look closer at the damage. She was still in shock from discovering Velvet's body, and may have lied to herself about how bad her wing actually was.\n\n\"I may be able to help,\" he told her, standing to his full height.\n\n\"I'm not sure you can.\" She smiled at him. \"But thank you for offering.\"\n\n\"You misunderstand.\" He stomped his foot in indignation. \"I am an earth elemental. In the same way that they are stitching together the master's wounds, I may be able to assist you with yours.\"\n\n\"You can do that?\" she asked, incredulous.\n\nEmery nodded. \"I can. It would give me something to do,\" he told her with confidence. \"I could use something to do right now.\"\n\nShrugging, she unfurled her wings. The look of shock on Emery's face when he saw what was left of her damaged wing almost made her walk away, but he demanded that she hold still while he inspected her joints. The little imp's wings fluttered as he checked her body, pausing every now and then to mutter under his breath.\n\n\"The structure is good,\" he declared after landing on her shoulder. \"The joint here is the most important, and it remains undamaged.\" He kicked at the base of her wing where it met her shoulder blade for emphasis. \"These holes that you have will not close on their own. They are too ragged, and the wound will become like a human scar. Useless for flying.\"\n\n\"So you can't help me.\"\n\n\"I never said that.\" He leapt off her shoulder and flew toward the house. When he was about twenty feet away, he turned around. \"Come, I have just the thing.\"\n\nFiguring she had nothing to lose, she followed him. He took her back inside the cabin, where Quetzalli greeted them with a ladle in her hand. The cabin was still quiet, but felt less like a tomb.\n\n\"Can you keep a secret?' he asked.\n\nAbella nodded.\n\nEmery looked over her shoulder. She turned around and saw that Quetzalli was busy in the kitchen while Dana sat on the couch with a pair of earbuds in. The imp held a finger to his lips and led her beneath the stairs and into a small storage area.\n\n\"Down here,\" he whispered, then put his hands on the wall. Green light surrounded his fingers and a section of wood paneling slid to one side. Inside, she could see light glittering off of a stash of silver coins.\n\n\"I don't understand,\" she said as he pulled several out and handed them over to her. \"What are we doing?\"\n\n\"We need this,\" he informed her. \"You need to have silver for powerful earth magic. It's why my kind love it so much, it's a powerful catalyst. Same applies to dragons, especially of the earth variety. With enough of it, I can help you fix your wing.\"\n\n\"You really think so?\" She looked at the coins in her hand, afraid to let herself hope.\n\n\"I know so,\" he stated matter-of-factly. \"My leg got broken off once by a hunter who shot me. I used a silver dollar from the late eighteen hundreds, and...oh no!\"\n\nEmery's wings flapped frantically as he dug deeper into his stash. The little imp was making choking sounds as he tossed coins onto the ground. Abella picked one up and saw that the silver on it was tarnished badly. The profile on the coin was almost nonexistent, as if it had been rubbed away.\n\n\"What's wrong?\" she asked, but he threw a few more coins out. These ones weren't just tarnished, but looked as if acid had etched away their features, leaving behind dark pits.\n\n\"It's all gone bad!\" he declared, then crawled into the hole and grunted. When he scooted back out, he threw a blackened stone on the ground. Abella picked it up and recognized it immediately. She had pulled it out of the head of the serpent from the lake.\n\n\"Silver tarnishes, but it doesn't go bad,\" she said, then held the stone up to the light. It felt like weeks ago that she had pulled it from the serpent's head. She could have sworn that the stone had been a ruby.\n\n\"Something happened, it's...\" Emery went quiet, his gaze locked on something in the hole. \"Oh. Oh my.\"\n\nCurious what had his attention, Abella flattened her body to the floor to see what he was looking at. The inside panel of the wall went further back than she realized, revealing the size of Emery's secret stash. The coins inside looked as if the silver had been stripped away from them, and she could see where it had gone.\n\nIn the middle of the stash, as if sitting in a nest, was a metallic blue egg with silver swirls running along its outside edges.\n\n\"Where did you find this?\" she asked.\n\nEmery folded his hands between his legs and sat down. \"After you destroyed the others,\" he whispered. \"I was there when Velvet was laying them, in case she needed help. Sometimes her mom needed help. She hid this one in the glove box, and I snuck it out when Dana started working on the car.\"\n\n\"I see.\" She reached toward the egg, but Emery blocked her hand.\n\n\"Please.\" He shook his head fervently. \"Don't break it. I was only going to grab enough coins to help you, you weren't supposed to see it. It's all that I have left of her, I--\"\n\n\"Emery.\" She touched him calmly on the head, her eyes on the egg. It looked vastly different from the clutch she had shattered. \"I owe Velvet my life. The least I can do is ensure that her legacy lives on.\"\n\nHe bit his lip, then let out a sigh and stepped aside.\n\nAbella reached into the stash and picked the egg up and held it gently in both hands. Pain blossomed in her chest as she held the egg against her chest and mourned once more for the dead.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nMike sat on the shore of the Dreamscape, his eyes out on the horizon. Spectral arms clutched him from behind as Tink sat on his lap. He had wrapped his arms around the goblin and was using her as a head rest while Cecilia hugged him tight.\n\nThe others sat on the beach with him, but nobody spoke. A gloom had settled over the island, one that pressed down so hard that it threatened to squeeze out any remaining joy. The technicolors were all gray now, and moved about sluggishly where the ocean gripped the sand.\n\nHis right arm was smoky. The few times he had contemplated it, it kept blurring itself out as if being censored on a show.\n\nDark shadows watched him with angry eyes from beneath the waves. He wasn't entirely certain what they were, but he could feel their anger whenever they breached the surface and hissed. Were they a manifestation of his wrath? Or perhaps something far more sinister that had been waiting to catch him if he fell from grace?\n\n\"That's a good way to think of them.\"\n\nThe voice startled him, and he looked over his shoulder to see the woman from the cabin standing a few yards away. She was barefoot in the sand, but he noticed that she wasn't leaving any footprints.\n\n\"What are you doing here?\" he asked.\n\n\"Mourning, like you.\" She smiled sadly and he noticed that she was wearing black. Her hair flowed behind her, blowing by a non-existent breeze. \"The forest grieves for its fallen child.\"\n\n\"So you're the forest.\"\n\n\"Nope.\" She winked. \"It's far more complicated than that.\"\n\n\"Dare I ask?\"\n\n\"You really shouldn't.\" She squinted at the creatures below the water. \"If you hadn't heeded my advice when you did, you would probably be dead. Or worse, with them.\"\n\n\"What are they?\"\n\n\"Trouble.\" She summoned a bow from the air and pulled back on its string. A golden arrow appeared moments before she fired. It streaked through the air and pierced one of the creatures the moment it surfaced. It let out a screech of pain, causing the water around it to turn black and then freeze. \"There isn't a word for them. They're scavengers, hovering at the boundaries of reality while patiently waiting for their next meal. Most of the time they feed on fear, sustaining themselves on sheer terror alone. But you? You're not just a meal, not anymore. You may be a means for them to cross over into this realm, which is something you must never allow to happen.\"\n\nHe frowned. \"That sounds very much like the kind of warning you gave me earlier. Did you know that Velvet was going to die?\" He tried to muster some anger to go along with his words, but he had given it all to the forest.\n\n\"I didn't, but I've been part of the game for a very long time, Caretaker. There are certain patterns that repeat themselves, and all I did was warn you about a potential threat.\" She nocked another arrow and let it fly, piercing another creature. When this one shrieked, the water exploded and sent a geyser of steam into the air.\n\n\"Is that even hurting them?\" he asked.\n\n\"It breaks their connection, albeit temporarily. They shouldn't even be here, but your misery has allowed them in. As long as you don't hand yourself over to them, they can't hurt you. They are a natural consequence of becoming a bigger player in the game.\"\n\n\"I don't want to play the game,\" he said, then lowered his gaze. \"Not if it means losing people I love.\"\n\n\"We're always playing someone's game, Caretaker.\" She dismissed the bow and sat down next to him. \"Order and chaos. Life or death. Some games can't ever be won, you're simply playing until you lose.\"\n\n\"Sounds grim.\" He sighed, squeezing Tink so tight that she let out a squeak. \"I know that you can't tell me your name, but what do I call you, anyway? Cabin? Forest? Autumn? Meadow?\"\n\nWhen she didn't respond, he turned to see that she had vanished.\n\n\"Figures,\" he muttered. Out in the water, he saw something briefly surface and then disappear. It was roughly between the two creatures that had been shot, a black mass that moved toward the shore.\n\nSuddenly worried, Mike stood up as the black creature rode a sudden wave up onto the shore and then crawled its way through the surf until it stood on its back legs. it regarded him from beneath a thick layer of seaweed before yanking it off.\n\n\"Kisa?\" He turned around and saw that Kisa still stood behind him on the beach. There were two of them.\n\n\"That was way harder than I thought it would be,\" she said, then coughed up a bunch of water. \"I feel so loopy, it's from all that swimming.\"\n\n\"What are you doing here?\" he moved toward the water and then hesitated. Was this a trap of some kind?\n\n\"Being a messenger girl, apparently.\" She tilted her head to one side and smacked it. Water splooshed free of her ears, followed by a small fish. \"You've got to be fucking kidding me,\" she mumbled. \"This place is weirder than I thought.\"\n\nMike remained silent, waiting for an answer.\n\n\"Things have gone from bad to worse,\" Kisa explained. \"Lily knocked me out with her venom and is doing some sort of trick to try and bridge the gap between us because I need to talk to you. No questions until the end, I don't know how long I'll be in here.\"\n\nShe then told him all about how an ancient priestess had taken over Murray's body, and that the horsemen were back and hitching a ride to Earth. As heartbreaking as his own situation was, the one at the house had become dire.\n\nOnce Kisa finished, she let out her breath in a rush. \"We need you to figure out how to help us. It's just Beth and I, and we're out of food and water. Beth thinks she can cause a diversion using the Grimoire, but it's risky.\"\n\nMike groaned and then flopped over on the sand. He was exhausted, both physically and spiritually, but the house needed him. Even here, in the Dreamscape, he could feel the dull ache in his shattered arm. He needed a plan, and he needed it yesterday. The stress of the situation had him staring blankly at the sky as his mind struggled to function.\n\n\"Oh, and one more thing.\" Kisa knelt down and pinched Mike's nipple through his shirt, giving it a twist.\n\n\"Ouch, what the hell?\" He rubbed at it with his left hand, wincing.\n\n\"That's from Lily. She says to tell you that--\" Kisa's mouth kept moving, but it was like someone had muted her. She scrunched up her face in concentration, then tried to speak again and failed. Mike was fairly certain she was trying to tell him to quit being a little bitch and come help them.\n\n\"Tell the others I'm on my way,\" he said. \"The barrier is down, so I'll be there soon.\"\n\nKisa nodded, relief spreading across her face in a wave that turned into a smile. She blew him a kiss and then evaporated into smoke that drifted away into the Dreamscape.\n\nHe opened his eyes and sat up in bed. Yuki lifted her head and yawned, revealing all of her teeth.\n\n\"We need to go home,\" he said, then turned to slide out of bed. The splint on his arm caught the blankets, sending a painful twinge up his shoulder.\n\nYuki transformed, her hands on her hips. \"Hold it right there. The last time you tried to bolt, you almost tore yourself apart with magic.\"\n\nMike knelt down, looking for his shoes. \"This is different. Things at the house have gotten worse. If we don't figure out how to stop them, it might be the end of the world.\"\n\n\"Shit.\" Yuki reached under the bed and pulled his shoes out. She coaxed him back onto the bed and then helped him tie the laces while he told her what Kisa had said. As he spoke, he saw Velvet's dog tags sitting on the nightstand. Doing his best to maintain his composure, he stuck them in his pocket.\n\nMinutes later, they were outside the bedroom. Quetzalli was ready with a bowl of hot soup that she had been keeping warm on the stove while Dana stood at the window, her gaze locked on something he couldn't see.\n\n\"Where's Abella?\" he asked. \"We need to head home.\"\n\n\"She's been outside with Emery,\" Dana replied. \"He thinks he can fix her wing, but they need plenty of room to do it.\"\n\nYuki explained the severity of the situation as Mike devoured the soup Quetzalli had made. Abella appeared a few minutes later, her wings wrapped tight around her body as Mike got his things together.",
        "\"Has Bigfoot checked in?\" he asked.\n\n\"No.\" Abella replied. \"But I can explain to him what is happening when he returns.\"\n\n\"You aren't coming with us?\"\n\nShe shook her head sadly. \"What Emery has promised me will take many days. I do not move quickly, and will not be able to fight for you. Not this time.\"\n\n\"Besides that, we have a problem. Even with the barrier down, we've somehow managed to end up with no way to contact the others to have the rats chew us a portal.\" Dana pulled out her broken cellphone. \"I could call Eulalie if we get our hands on a new phone, but that means heading into town. Then we'll have to find a phone place, and then hope she answers calls from unlisted numbers. Find somewhere good for the rats to chew a portal...shit, can they even do that if Reggie is trapped? Don't they need his permission?\"\n\nQuetzalli sighed and sat down at the table. \"If you are planning on running off again, then I will just slow you down as well. This body is far too jiggly to run for long, and I hate all the sweat that comes along with it. Time is of the essence, and this is a wise decision.\"\n\nMike looked at Abella, and then Quetzalli. \"Thank you for coming here with me,\" he told them. \"The selfish part of me wishes you could come with us, but there are important things to do here as well. As for getting home, we'll figure something out, but it won't be by standing around here.\"\n\nIt was agreed that Quetzalli and Abella would assist Bigfoot in keeping Leeds locked away until he could return. Dana and Yuki got their stuff together and were waiting for him outside as he told the others goodbye. Emery seemed particularly choked up at his departure, but he promised the imp he would return.\n\nWhen he hugged Abella, she surprised him with a small envelope. It was sealed shut and had Eulalie's name written on the outside.\n\n\"This is for her,\" she told him. \"It's about her sister. Once I knew that I wouldn't be coming with you, I needed a way to get Eulalie a message. These are words that cannot wait for my return.\"\n\nHe put a hand on her shoulder and squeezed. \"It must have been hard to write,\" he said.\n\nShe nodded. \"It was. Now go. I have plenty to protect here without worrying about you.\" She wrapped an arm around his waist and pulled him in for a hard kiss, then hugged him hard enough that his back popped.\n\n\"Come back to me,\" she whispered. \"Or I will make you regret it.\"\n\n\"I have no doubt,\" he replied with a smile.\n\nOnce outside, they ran toward the nearest clump of trees and came to a stop as Mike put his hand on the nearest one.\n\nWe need to go home, he thought toward the forest. Will you help me?\n\nA portal appeared off to their left. He pulled the straps on his bag tight and they ran through it together. Animals on the other side led them through the woods for half an hour until they approached the next portal. The miles became easier as the snow disappeared, and Dana carried Yuki in her arms as they ran. Even in fox form, the kitsune had finally hit the wall for physical exhaustion and needed some help.\n\nSeveral portals later, he stood on the edge of his property. He could feel the land beneath his feet, vibrating with energy and magic as he stepped off of it. They took a break while he drank some water and ate another can of soup. His arm throbbed with pain, but he did his best to ignore it.\n\n\"So where to from here?\" Dana asked.\n\n\"I suppose we could hitch a ride to the nearest airport,\" he replied. \"Maybe charter something private, I don't know.\" He looked back at the boundary and wiped some tears from his eyes. Only a few days ago, he had walked into that place a completely different person. In such a brief span of time, he had loved, lost, and walked the boundary of death itself. It had been a crucible of sorts, and he could only hope that he had come out strong enough for the trials yet ahead.\n\nAn owl hooted from a nearby tree. He turned his attention upward and was surprised to see a familiar face up in the branches. The spectral owl clicked her beak at him several times, and then Bigfoot emerged from the shadows beneath.\n\n\"The forest told me you were leaving.\" Bigfoot spoke softly as he approached Mike. \"I would not see you leave without saying goodbye.\"\n\nMike nodded. \"I would have waited for you, but the situation at home has taken a turn for the worse.\"\n\n\"You're a busy man, Caretaker.\" Bigfoot put his hand on Mike's shoulder. \"Tell Eulalie that I'm sorry.\"\n\n\"The blame falls squarely on Leeds,\" Mike replied, his hand slipping into his pocket to squeeze the dog tags reassuringly. \"His actions are not your failures.\"\n\nBigfoot licked his lips and nodded. \"Then if nothing else, tell her that I'm sorry I could not be the one to tell her about her sister. The forest has done its best to imprison Leeds, but he still has allies among the forest children. I would not see him escape.\"\n\n\"Nor would I. Abella and Quetzalli have agreed to help, they're back at the cabin. When I'm done fixing things at home, I'll have the rats open a portal and come right back to help you figure out what to do with him.\" Mike narrowed his eyes. \"I promise you that the punishment will be fitting.\"\n\n\"I would like that.\" Bigfoot stepped toward Dana and pulled her in for a big hug. \"Make sure you get that to Eulalie,\" he told her.\n\n\"I think you broke a rib,\" Dana muttered from beneath his fur.\n\n\"That's why I gave it to you and not him. He looks too soft.\" Bigfoot winked at Mike, then put Dana down.\n\n\"I'm not that fragile,\" Mike muttered, then yelled in surprise as Bigfoot lifted him into the air and squeezed him tight.\n\n\"You sound like a squeaky toy!\" Bigfoot declared loudly as Dana and Yuki laughed. He put his lips against Mike's ear and dropped his voice to a whisper. \"You ever call me a yeti again and I'll rip your arm off and fist your asshole with it.\"\n\n\"Don't threaten...me with...a good time,\" Mike gasped in response.\n\nThe sasquatch laughed and set him down. He offered Yuki a fist bump and headed toward the trees behind him. \"As for how you're getting home, just ask the trees. Looks like you've learned their language without my help.\" With that, he vanished into the woods without a sound.\n\nMike contemplated Bigfoot's words with a smile, then looked up at the owl. She hooted her agreement and flapped her wings.\n\n\"What are you looking at?\" Dana asked as she scanned the trees.\n\n\"Just a spirit of the woods,\" he replied with a grin. Though he was leaving this place behind, he knew it would be in good hands.\n\nThe owl flapped her wings and flew back into the woods, disappearing through a tree. Mike took one more swig of water and thought about home. A portal opened to his right, about thirty feet away.\n\n\"Looks like we're taking some shortcuts,\" he said, then looked at the others. \"Who's up for a run? Should just be a couple thousand miles.\"\n\nYuki groaned and turned back into a fox. Dana ran ahead of Mike, her ponytail bouncing on her shoulders.\n\n\"Try to keep up,\" she hollered as she sprinted ahead.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nBeth looked up from the Grimoire in time to see Kisa snap awake dramatically. The catgirl clutched her head and dry heaved over the side of the couch as Lily's tail twitched back and forth. They were sitting in the front room so that they could keep an eye on what was happening outside.\n\n\"Well?\" she asked, afraid to hear the answer.\n\n\"Success.\" Lily smirked as she stroked Kisa's back. \"We made contact with Romeo.\"\n\n\"Finally some good news.\" She closed the Grimoire and turned to look out the window. Murray was hovering in the air, his mouth stretched wide as the mist swirled around him. He and the others now stood between Death and the house, ensuring that nobody could go to the Grim Reaper's aid. \"Any idea how long it will be?\"\n\n\"No,\" Kisa groaned. \"But he's coming right now.\"\n\nSighing, Beth looked back at the grimoire and focused on the spell she had chosen. The words weren't complicated and she felt a rush of energy move through her body as a ball of water formed over the table and then fell. It made quite a mess, but did fill up all of the coffee mugs they had set out to catch the moisture.\n\nReggie picked one up and slurped greedily, his tail twitching as he did so. When he got toward the end of his mug, Jenny (who was sitting next to him) tipped it up far enough that water ran down his face.\n\n\"I don't even care,\" he declared as water beaded up on his whiskers. He wiped his face off and flicked the water at Jenny.\n\nSmiling, Beth picked up a couple of mugs and drank it down. The house was much warmer without the priestess, so they had that going for them. Summoning water made a mess, but she didn't dare move away from the front windows. The horsemen occasionally wandered, and she wanted to know where they were at all times.\n\n\"Any chance you're gonna make snacks later?\" asked Kisa as she picked up a mug.\n\n\"Spontaneous generation is trickier than expected,\" Beth replied. \"This was just a way to condense the moisture already in the air. If I do it enough times, the spell won't work anymore because of the lack of humidity.\"\n\n\"Think we'll live long enough to run out of water?\" Kisa asked. \"Once we're back on Earth, I don't see these guys being content to just chill on our front yard.\"\n\nBeth frowned, then looked back outside. Unless she was mistaken, the swirling mists circling the house had thickened.\n\n\"Doubt it,\" she replied, then turned her attention to Opal. The slime girl was only a foot tall right now, and had crawled under the table to absorb the moisture from the carpet. As Opal sucked the water out with a wide mouth, Beth watched the slime's body expand a little.\n\nThe ooze had emerged from her crystalline core a couple of hours ago and had signed some seriously foul language in regards to the priestess. Apparently her consciousness resided inside of the crystalline vial. Whatever spell had latched onto the vessel had caused it to create a little bit of primordial ooze every day. Any type of moisture could be absorbed and used to create more slime, allowing Opal to be far larger than the contents of a magic jar.\n\nThis little fact had actually inspired Beth to attempt the spell in the first place. She was already getting dehydration headaches and had seen the bags under her eyes while looking in a mirror.\n\nShe looked at the others, then back out the window. The mood was grim, and she didn't like it.\n\n\"We're going to need a plan,\" she declared. \"For when Mike arrives, or maybe even before. I have no idea what he's going to do when he gets here, but I want to have something ready in case we need to buy him time or create a distraction. Any ideas?\"\n\n\"You're not gonna get a lot of opportunities,\" Lily declared with her arms crossed. \"As soon as you step out there, I bet you get blasted. Or stabbed. Or both.\"\n\nBeth looked down at Opal, who paused to return her gaze.\n\n\"Maybe...that's something we can use?\" she asked the slime.\n\nOpal gave her a thumbs up, then signed the word for thirsty. Without delay, Beth summoned another sphere of water. The inkling of a plan had formed in her head and she was fairly certain that she and Opal were in agreement.\n\n\"You've got something, don't you?\" Lily grinned and leaned forward. \"Let's hear it.\"\n\n\"Oh, it's a good one. Like everything else we do, it'll be dangerous, borderline stupid, and cause a lot of chaos.\"\n\n\"I'm in.\" Lily put her hands together and leaned forward. \"I'm not sure what I can do, but I'm itching for action.\"\n\n\"Same.\" Kisa looked out the window. \"Wouldn't mind a second crack at that bitch.\"\n\nBeth looked at Jenny and Reggie. The rat king gave her a thumbs up while sipping some more water. Jenny nodded, then tried to slap the mug out of Reggie's hand.\n\n\"Excellent!\" Beth said, clapping her hands together. \"First thing's first--it's time to teach the new girl how to walk.\"\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nTwo chapters left in this book, people! I'm gonna wrap it all up with a bow like the girl scouts do at the mall to raise money (is that even still a thing?)!\n\nI hope you enjoyed this chapter as much as I enjoyed writing it. It was very cathartic to write about Mike getting lost in rage and pulling himself back from the brink of a bad decision (I've been there, and I'm sure some of you have, too). These characters live and breathe in my head, and I know I mourned the events of last chapter and really wanted to depict it through Mike's eyes. But that's just an author thing.\n\nDon't forget to rate after reading, tip your server if you've been sitting in a bar drinking this whole time, and I will see you next time! The holidays can be hard for everybody, so above all else, be kind to yourself and to others!\n\n~Annabelle Hawthorne\n\np.s. The book is ending, not the series. I get so many emails whenever I bring this up, figured I would head them off is all. (To clarify, the HFHM universe does and will have an actual ending, just FYI)"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "story driven erotica",
        "monstergirls",
        "harem",
        "gargoyle",
        "bigfoot",
        "faberge collection",
        "rage and magic",
        "goodbye oregon"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-76"
}