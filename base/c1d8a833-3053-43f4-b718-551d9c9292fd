{
    "title": "The Marine Ch. 06",
    "pages": [
        "I slept pretty much the entire way to Manchester. The only time I woke up was on the M5 when Amy pulled the car into a services, stopped and turned off the engine before she clambered over to straddle my lap to simply kiss me for what felt like half an hour. My hands ended up underneath her shirt, running down her back while getting a good feel of her tits.\n\nWhen we finally pulled apart, both of us breathing heavily and definitely desperate to fuck, she leaned back. \"So how was Hannah?\" I gave her a look that made her pout. \"I'm teasing but... You looked after her?\"\n\n\"I did.\"\n\n\"Love her?\"\n\n\"As much as I love you, Amy. But it's why I also let her go. She could barely cope with training, and we knew that, once I graduated, she couldn't handle the life I was going to live. I haven't really heard from her since she sent me the text. I know why. She's worried that, as soon as she sees me, she'll want to be with me again.\"\n\n\"And how do you feel?\"\n\n\"I'm going to be living a couple of hundred miles away. And, to be honest, I'm just going to focus on my career for the time being. I'm still not even 22. There's plenty of time to worry about my personal life.\" I leaned forward and kissed her. \"Why don't we continue this conversation in a more comfortable setting?\"\n\n\"I really want your dick, Nate.\"\n\n\"Good. Get us to the hotel and you can have it.\"\n\nShe groaned but opened the door, sliding off my lap and walking around the back of the car. When she sat back behind the wheel, she made me laugh by laying her panties on my leg. With a smirk, she started the car and re-joined the motorway taking us north. It was dark by the time she pulled into the car park. I let her take care of the checking in process, heading upstairs in the elevator. Dropping my bag, she asked if I wanted to get some food first. I answered that by pulling her towards me and kissing her.\n\n\"Food can wait,\" I growled.\n\nI wanted to see my sister naked for the first time in two years. She definitely wanted to see her brother naked in return. So clothing was removed incredibly quickly. Once I was naked, she stepped back and just looked me up and down. \"Holy shit!\" she exclaimed. I simply smiled at her reaction. \"I mean, you were fit before you left, Nate.\" She pressed a finger into my chest. \"Are you just hard muscle now?\"\n\n\"Mostly. Want me to tell you about my morning exercise regime?\"\n\n\"You'll probably wear me out just telling me.\"\n\nI laughed. \"True. But I feel... great, Amy. Better than great, to be honest. Sixteen months of hard graft has got me to where I am. And this is still only the start of my career. This is just training done. I still have to get used to living the life itself.\"\n\nA smile lit up her face as she would have heard the enthusiasm. I couldn't help it. \"You really love it, don't you?\"\n\n\"It's been worth the pain I'd feel waking up after a day of exercise and marching, the agony of making a massive fuck up and being yelled at for being such a dunce, the endless cold and feeling of being wet. But now? I wouldn't change a damned thing. It was all worth it to be here now. I passed, Amy. I've completed what I set out to do. The whole reason I left home to begin with.\"\n\nTaking her hand, I led her to the bed, lying her down before joining her. Feeling her hand immediately gasp my cock, I gently held her wrist as I spread her legs with my other hand. She grinned, knowing exactly what I wanted to do. \"I got a taste of your scent from your panties, Amy. I was nursing a stiffy half of the time.\"\n\n\"That was the whole point.\"\n\nI would have spent a long time teasing her at first, but I wanted to eat her out them make love before heading out for food. Running my tongue down her body, that first taste was as good as I remembered. She shuddered immediately as I wasted no time getting to work on making my big sister orgasm. And I had a feeling it wasn't going to take long as she was obviously turned on.\n\nShe moaned softly as my tongue plunged her depths, remembering how her body reacted to anything I did, almost grinning to myself as I could sense it wasn't going to take much. Sliding a pair of fingers into her pussy, she moaned again as I teased everywhere except her clit. She looked up and met my eyes, pleading with me to touch it.\n\n\"I really need to cum,\" she pleaded.\n\nI relented easily, remembering just how she loved her clit pleased, and with my fingers pleasing her by finding that particular spot all women enjoyed men finding, her hips were soon moving, her breathing rapid but ragged, and she was moaning gibberish. It was utterly mesmerising and beautiful to watch, the fact I could turn my sister on to such a degree.\n\nThen she had an orgasm. Quite a large one, from my vantage point. As soon as she recovered, she begged for my cock. Slowly sliding inside her, I didn't know if she'd burst into tears or smile. To my relief, it was the latter, and as excited as I was feeling, I knew I'd last another couple of minutes at most. I don't think she cared, hearing her whisper how great it felt that my cock inside her once again.\n\n\"No longer my little brother,\" she whispered, \"He's just... big now, and he's got a lovely big cock. Is it bigger?\"\n\n\"Well, technically I am still growing. Not taller, but I'll get even broader, and might even get smarter!\"\n\n\"And your dick?\"\n\n\"That just feels big because I'm excited to be making love with my sister once again.\"\n\nThat set off the tears, or at least just a couple, pumping her for a couple more minutes until I came inside her. First time I'd done that in two years. Meant a lot to me as well as I kissed her deeply, arms wrapped around the back of my neck, feeling her legs wrap around my hips. I was easily able to roll onto my back, taking her with me so she was resting on my chest.\n\nI was still mostly hard, so she immediately started riding me, siting up so I could get one of those still perfectly perky breasts in my mouth. Gasps and moans followed as she rode me nice and slow, feeling her hand on the back of my neck, running up and over the back of my head. I'd kept my head practically shaved the entire time.\n\n\"So the hair will stay gone?\" she wondered.\n\n\"Yep. I've grown used to keeping it trimmed with clippers.\"\n\nShe smiled, running her fingers over the stubble on my scalp. \"I like it. Your face has changed, but when you look at me... You still love me?\"\n\n\"Never stopped, Amy. Thought about you all the damned time.\"\n\n\"Except when with Hannah?\"\n\nI lay back down as she rode me, waiting until she enjoyed another orgasm before she relaxed on my chest again. I finally replied, \"Amy, does it bother you?\"\n\n\"Of course not! She's our cousin, and I could see, even during our last trip here, that she was nursing a little crush. I've caught up with her since we landed here, and we've already talked. We both love you to bits, that's what we agreed on.\"\n\nRolling off my chest, I turned onto my side she could spoon back against me. I felt her move more than once so she was pressed back against me as much as was humanly possible, not that I minded. Holding her then reminded me of how much I'd missed her. I'd just buried all those feelings since I'd boarded the plane to Hong Kong.\n\nWaking the next morning, early as always, Amy had turned to snuggle against me during the night. I simply milked in the view until she woke up, chuckling as she started to blush immediately, whispering I was just used to waking up bloody early, though I wasn't going to complain about just gazing at her while she seemed so peaceful.\n\nAfter making love, the sort that simply reinforced our feelings hadn't changed one iota since I'd boarded that plane, we enjoyed a shower together before walking downstairs for breakfast. I ate my fill as usual, Amy giggling as I packed away bacon, sausages, eggs and hash browns. I had to explain that, on most days, I burned off thousands of calories. Sure, I'd not burn off anywhere near as many when not training, but I was just used to eating a lot, and my body would hopefully still burn it all off.\n\n\"Nate, can you wear your dress uniform today?\" Amy asked, \"I mean the one that means the most.\"\n\n\"It's in my bag. Any reason?\"\n\n\"I loved seeing you in it.\"\n\nWhat my sister wanted, my sister got. Plus, I'll admit, I thought I looked pretty good in my dress uniform. When I walked out of the bathroom once I showered again, then shaved and dressed, her eyes simply lit up. Good idea she wasn't naked. Walking outside hand in hand, she turned towards me just before getting into the car. \"Can I ask another favour?\"\n\n\"Of course.\"\n\n\"I need you to... wear a blindfold...\"\n\n\"Are we going to get kinky, Amy? I mean, you are my sister so...\"\n\n\"Humour me.\"\n\nI humoured my sister, of course. Once I'd settled in the passenger seat, she placed the blindfold over my eyes. Did a pretty good job. Couldn't see a damned thing, so although I knew when we were on a motorway, it was when she turned off onto A-roads and otherwise, that's when I lost track of where we were going.\n\nThe car she was driving eventually stopped, hearing her switch off the engine then get out of the car. The passenger door opened and she helped me out, taking my hand to guide me into somewhere. I was left thinking it wasn't a pub as there was usually far more noise. But I felt carpet underneath my shoes and I assumed we were in some sort of club.\n\nI had no idea what to expect as she asked me to stop. Asking me to close my eyes, I felt her remove the blindfold before she took my right hand again. \"Okay, Nate, open your eyes.\"\n\nThe first person I saw was my grandfather. He wore his Royal Marines dress uniform, green beret on his head. He saluted, tears slowly running down his cheeks. I returned the salute immediately before stepping forward to shake his hand. We grinned like fools at each other. \"I don't know what to fucking say,\" he exclaimed.\n\n\"I'm pretty fucking speechless myself, Grandad!\"\n\nWe both laughed before we embraced. \"Nothing but pride,\" he said softly, \"I'm proud to call you my grandson.\"\n\nThat got to me. It really did. I hugged him just that little bit tighter. \"Thank you,\" I said softly.\n\nLetting him go, I looked around the room to see the family around us, including family I simply hadn't seen in years, the extended lines that were related to us but not close. But what I didn't expect to see was my two best mates from back in Australia. Once I saw them, I strode across the room. \"What the fuck are you two cunts doing here?!!?\"\n\nWe all laughed before there were handshakes and hugs. \"Your family insisted we fly here to see you,\" Steve replied.\n\n\"Plus, we've done some reading,\" Patrick added, \"We know what you've been through, mate. We had to come.\"\n\nI stood back a pace and just looked at them, feeling my cheeks almost hurt as I grinned at them. \"You cheeky fucking bastards. Not a word in any of your messages.\"\n\n\"Um, surprise!\" Mum exclaimed softly.\n\nI turned towards her. \"Your idea?\"\n\n\"They were going to come regardless. You've been gone two years, Nate.\"\n\nI sighed, \"I know, but I thought...\" I sighed again. \"Never mind. It's good to see everyone, even these two clowns.\"\n\nThen I noticed Hannah. She was standing alone behind everyone. They seemed to part as I slowly stepped towards her. Eyes were for no-one else but me in return. The only person I sensed nearby was Amy, glancing to see she was by my side, as I stepped towards my cousin.\n\n\"Hannah,\" I whispered, immediately caressing her cheek, \"Where's...\"\n\n\"Not here. We're not together anymore. I couldn't bring myself to even get naked in front of him, god forbid... you know, sex...\"\n\nI sighed. \"Hannah...\"\n\n\"Nate... Just let it happen,\" Amy whispered, \"She loves you. I love you. That's all that matters.\"\n\nWhen Amy stood next to Hannah, I glanced from one to the other. They were... beautiful. They looked completely different. Their personalities were nothing alike. But I'd fallen in love with both of them. But the pair standing in front of me then and there? I had no fucking idea what they intended. Okay, that's a little lie, but I wasn't going to get ahead of myself.\n\nFeeling a hand on my shoulder, I glanced left to see my father. Checking as everyone else was taking a seat at one of the tables, I turned towards him. \"Nate, we accepted what was going on with Amy. No, we didn't just accept, we approved.\"\n\n\"Dad...\" Amy whispered.\n\n\"It's been obvious since the day we arrived how Hannah feels about you, simply because she hasn't shut up about you. You will live your life how you seem fit, but just know these two women adore the hell out of you.\"\n\n\"I know, Dad,\" I said softly.\n\n\"Your mother and I don't exactly understand. It was difficult at the time, but we accepted. We could see the love. We will do nothing to stand in the way of whatever happens.\"\n\n\"Dad,\" Amy whispered again.\n\nThe conversation took place quietly so no-one else heard what was said. The room was decorated to celebrate my graduation to become a Royal Marines officer. It was your typical English buffet dinner, though thankfully most of the food was hot. The English and enjoyment of certain things cold instead of hot was something I'd never get used to.\n\nNo idea how long the party lasted. I talked with everyone, fielding plenty of questions about my training, while Mum wanted to hear about my trip to the United States, needing to explain I spent the entire time working, not playing tourist. Stories about my trips around the United Kingdom. Impending trips to northern Norway for cold weather training.\n\nAsking what plans I had with my two weeks, I admitted to having none except getting some regular sleep. Instead of waking at 0500 every morning, I'd wake up at 0700, as now that I'd finished training, my work day would be somewhat regular going forward. When asked what I'd be doing day to day at my home base, I admitted that's something I'd have to learn to adapt. I'd have a regular exercise routine as keeping the level of fitness is something expected of everyone, but mostly I'd actually continue training while in charge of my own troops of Royal Marines.\n\n\"Maybe you'd like to see a bit of the UK as a tourist?\" Hannah wondered.\n\n\"Guess a trip to London would be good. See all the sights. But, to be honest, two weeks of just chilling out sounds perfect, though I'll be going for a long run every morning and I'll need a daily gym session.\"\n\n\"Never stop?\" Amy asked.\n\n\"Nope. And I want to arrive at my new home as fit as I was leaving CTCRM.\" I glanced back at Hannah. \"You got time off?\"\n\nShe smiled. \"Two weeks. Amy has already suggested a trip together.\"\n\nI almost snorted as the insinuation was clear to me. Glancing at Amy, she smiled before resting her head against my shoulder. Katie eventually joined us, sitting on my lap, leaning against me, whispering that she'd missed her big brother. Asking what my two mates would be doing, they admitted that they would be going on a European trip, but just had to spend at least a day with me before they headed off.\n\nIt was great seeing my family again for the first time in two years. When the party slowly but surely ended, we ended up outside, Mum almost refusing to let me go as I hugged her, mentioning more than once about how tall and broad I now was. Dad, Mum and Katie, who did leave with a rather longing look in my direction, eventually left, Amy and Hannah remaining by my side.\n\n\"Sooo... Back to the hotel, Amy?\"\n\n\"Hannah is joining us, Nate.\"\n\nChuckling, I just nodded. \"Do you like the idea?\" Hannah wondered.\n\n\"I think we should get back rather quickly, don't you think?\"\n\nThe three of us piled in Amy's hire car and she practically raced us back to the hotel. Walking through the lobby in my uniform with a girl on each arm certainly earned a couple of glances in our direction. Soon as we were the bedroom, the two girls were stripping off. I was a little more careful with my uniform, laying it down so it didn't get wrinkled.\n\nTurning back to the bed, Amy and Hannah were already naked. While I preferred to take off their underwear while teasing them, they quickly dropped to the floor before me, pawing at my underwear to free my cock. \"So is this how it's going to be the next two weeks?\" I wondered.\n\n\"Not all the time. We'll want you alone from time to time,\" Hannah replied, \"Though Amy will obviously get you more.\"\n\n\"Just want him in my pussy all the time, Hannah. I've got two weeks for him to fuck me as much as possible.\"\n\n\"Feel the same way,\" I replied, before looking at Hannah, \"You?\"\n\n\"I couldn't cheat on him, so I ended it. Plenty of fish in the sea, Nate.\"\n\n\"You ended it just for two weeks?\"\n\n\"I'm tempted to move further south... maybe Bristol...\"\n\n\"That's not too far away.\"\n\nShe smiled as Amy wasted no time swallowing my cock, head bobbing up and done as I couldn't help the groan that escaped me. \"Your role should be more in line with a normal job, right?\" I managed to nod. \"So you should have weekends free?\" I nodded again. \"So I'll get a transfer to Bristol and we'll just meet up when we can.\"\n\nAmy removed her mouth as Hannah swallowed me immediately, reaching down to caress a cheek each. Amy couldn't stop smiling up at me, though Hannah provoked another groan. She knew exactly how to suck my cock nowadays and bring me to orgasm. She stopped, though, allowing Amy to bring me off. \"Watching you suck your brother's cock, Amy...\"\n\n\"Hot?\" Amy asked before resuming the blowjob.\n\n\"So fucking hot. Can't wait to see him slide his big cock in you too. Sibling sex... I'll admit, I might have watched some videos after he told me. Obviously fake as fuck, but still...\"\n\nAmy was now looking at me, eagerness in her eyes for me to cum and fill her mouth. Hannah sat on her knees, simply watching, and it was obvious how turned on she was watching my sister suck my cock. Any time I glanced her way, I knew Hannah's turned on 'God, I really need to be fucked' face, and that was in full bloom.\n\n\"Fuck,\" I groaned, Amy moaning softly at the first spurt that fired into her mouth. Gently grabbing her hair, I kept her in place as her eyes never stopped looking up into mine as I unloaded. Amy kept on sucking long after I'd finished, glancing again at Hannah to see she was fondling herself.\n\n\"Are... you two...\" Amy removed her mouth from my cock and giggled, Hannah joining in. \"Well, I know Hannah has had a little fun before...\"\n\n\"It's a threesome, Nate, so there's going to be at least a little experimentation. I'd happily eat my cousin's pussy though.\"\n\nAmy looked at her, noticing the blush form. \"You would?\"\n\n\"We've discussed it already, I figured he'd like to hear it put bluntly.\"\n\n\"Yes. Yes, I did like hearing it put that bluntly.\"\n\nWhile they might have been comfortable fooling around, I was the major object of their affection, love and desire. Lying them down side by side, I sat back on my knees a moment and just gazed down at them, realising how fortunate I was. The pair started to giggle as I was already rock hard again and rather happy just looking over their naked bodies. Completely different. Amy was tanned, Hannah was pale. Hannah had bigger tits than Amy. Hannah had dark hair above her pussy, Amy's was fair compared to her cousin. They were as tall as each other. Amy had great legs. Not that I had a fetish, but Hannah did have cute little feet, her toenails always painted.\n\nLowering my mouth to Amy, I focused on her pussy while fondling Hannah at the same time. \"Wow, a man who can do two things at once,\" Hannah moaned, no surprise she turned to look at Amy. She turned to look at her cousin and they kissed without any hesitation.\n\nLifting my head a moment, I had to say, \"Okay, that's fucking hot too.\"\n\n\"Nate, is this not a fantasy of young men? Two women at once?\" Amy asked.\n\n\"While it probably is, fantasy likely never matches reality. Still, not going to look a gift horse in the mouth and all that nonsense.\"",
        "Lowering my mouth again, Amy was turned on, Hannah eventually grabbing my wrist, suggesting I just focus on my sister, turning onto her side as her lips were soon wrapped around one of Amy's nipples. Sensory overload for my sister, feeling her squeeze the fingers I'd only just slid inside her. Moaning that I needed to give undivided attention to her clit, I switched my tongue to focus on that, fingers gently thrusting into her. With Hannah giving her breasts plenty of attention at the same time, little wonder the orgasm tore through her body.\n\nHannah then had the same treatment as Amy lay next to her, still shuddering every few seconds while Hannah moaned and gasped as I knew her body just as well. She was remarkably flexible now, spreading and pushing her legs right back, amused when Amy eventually moved to lie next to me. \"My cousin has a very pretty pussy, Nate,\" she whispered, \"I've never tasted another pussy before.\"\n\n\"Tasted yourself?\" Hannah wondered.\n\n\"Of course. Love licking the dildo I have after its been inside me.\"\n\n\"Okay, that's fucking hot,\" I murmured before returning attention to Hannah.\n\n\"Want to taste me?\" Hannah asked.\n\n\"Later, when he's pounding me from behind, I'll give licking some pussy a go. I knew that it was going to happen when we agreed to this.\"\n\n\"I'll return the favour,\" Hannah whispered.\n\nHannah enjoyed her own orgasm, moaning loudly as Amy giggled next to me. \"Well, my brother certainly knows what he's doing, at least. I think you could have just me cum from looking at you, though.\" I felt her fingers run up my arm, down my back. \"Fucking hell, Nate...\"\n\nMore than recovered from my blowjob, I lifted Amy to her knees so I could kiss her, both of us unable stop smiling. Hannah joined us, kissing me deeply before kissing Amy again, the kiss followed by compliments being shared between both of them. Hands were stroking my cock at the same time, little surprise Amy ended up on her back as I slowly slid my cock inside her. Hannah lay to our side, a broad grin on her face. \"Okay if I masturbate to a live sibling fuck show?\"\n\n\"Knock yourself out, Hannah,\" I replied softly before giving my attention to Amy.\n\n\"He'll have you next, then we'll figure out how it'll work with three of us,\" Amy added.\n\nHannah didn't end up masturbating as she was far too enthralled in just watching my sister and I make love. We made sure she felt involved though, Amy and I both kissing her, until Amy wrapped an arm around her, pulling her as close as practically possible. \"Love your brother's big cock?\"\n\n\"Missed it, that's for damned sure. He looks different now. He's definitely a man.\"\n\n\"That he is. I've noticed the difference every time he's visited. Just broader, stronger, and his eyes... They only change when looking at me, just how he looks at you. Nothing but love.\"\n\n\"I love you both,\" I whispered, kissing both of them again before I focused on Amy, the feeling of her tight, hot pussy around my cock, the feeling of her fingers on my body, her soft lips as I kissed her, eyes full of love and desire as she enjoyed the intimacy of being with her brother again.\n\n\"I love my brother and his big cock,\" she said humorously.\n\n\"Well, my sister has a fantastic pussy.\"\n\nHannah giggled. \"You two get off on it, don't you?\"\n\n\"Fuck yes. My little brother is no longer little, that's for damned sure. And his cock is still the best I've had.\"\n\n\"God yes,\" Hannah whispered, \"All I do is find myself lying there and thinking 'Nate would do this instead and make me cum ever so hard.' Feel bad at the time, then when I'm alone, I'll masturbate\n\nthinking about him.\"\n\nI stopped a moment, cock buried in Amy. \"I'm not stupid enough to compare you two, just so you know,\" I said before resuming my gentle thrusts.\n\nThen Amy wrapped her legs around me and begged me to fuck her. What my older sister wants, she gets, and I was soon pumping away into her. That's when Hannah had to give into temptation and start to play with her pussy as she whispered watching us just fuck was far too hot to just lie there. Kissing Amy deeply, tongue playing as always, I felt her fingers dig into my back as I was really driving into her now.\n\n\"Oh god, pound my pussy, brother!\" she cried.\n\n\"I'm not going to cum anytime soon,\" I warned.\n\n\"Don't care. I've got two weeks for you to fuck me as often and as long as you can.\"\n\nI growled into her ear, lifting her arse off the bed to really give her everything I could. Fingers digging into my back further, I think the orgasm that ripped through her surprised even herself. First time for everything, she came from sex but usually not on her back. Wasn't going to complain, felt great making her orgasm. \"Keep going,\" she whimpered, lifting my head to see her eyes glistening, \"Good tear, Nate. Great tears actually.\" Feeling her fingers move, I glanced to see her take Hannah's hand. \"He's fucking you next, beautiful.\"\n\n\"Can't wait to see him fill you with his sibling cum.\"\n\nI couldn't help laugh, despite still fucking Amy. \"God, I think you're worse than the two of us about this.\"\n\n\"Nate, it's totally fucking hot. Wish my brother was old enough to fool around, because telling you the truth, I'd let him after seeing you two together.\"\n\nI didn't say anything, focusing on pumping Amy until I did finally cum. Groaned ever so loud, I expected someone to knock on the door, asking us to keep the noise down. Once my balls were drained, leaving Amy feeling rather full instead, I stopped and left a soft kiss on my sister's lips, her fingers trailing up and down my back.\n\n\"You should fuck your cousin now,\" she whispered, grinning at me.\n\nI didn't quite get to that first as I sat back, Hannah moving around so she could suck my cock again, happily noting she could taste Amy's pussy at the same time. \"Want to eat her out?\" I wondered, \"Amy?\"\n\nShe nodded eagerly so, after a few minutes until I was hard again, we moved around so Hannah could get her mouth between Amy's legs, while I sat behind Hannah, teasing her with my cock as she slowly started to give Amy's pussy some attention.\n\n\"Oh god,\" Amy murmured.\n\nHannah made an approving noise. \"Well, my female cousin tastes delicious, plus I can taste Nate's cum too.\" Then she giggled. \"I think Nate's cock just got thicker inside me.\"\n\n\"Whatever happened to Cheryl?\" I wondered as I continued to tease my cousin.\n\n\"Oh, she's in a full blown lesbian relationship now. Moved in together and everything.\" She glanced back. \"Will you please stick your cock inside me?\"\n\nI did as she asked, making her moan before she lowered her mouth back to Amy's pussy. I met her eyes and she blushed slightly. No real surprise as she hadn't really given any indication of being interested in women, but I think doing this with Hannah meant a lot to her too. As I started to pump Hannah nice and hard without delay, I was definitely a distraction, more than once watching her resting her head on Amy's body as I leaned over her, kissing her cheek, driving my cock into her.\n\n\"Fuck her, Nate!\" Amy cried\n\n\"God yes, fuck me, you big dicked bastard!\"\n\nSo I fucked her even harder. She went silent except for moans, trying to lick Amy's pussy whenever she managed but Amy was far too interested in watching her cousin being fucked by her brother. And since I'd cum in Amy only recently, Hannah knew well enough she was going to be fucked for quite a while.\n\nThen I sat back, leaning forward to take a handful of hair, and gave her right cheek an almighty slap. Amy's eyes went wide but Hannah shuddered. \"Oh god, that felt good.\"\n\n\"Holy shit!\" Amy exclaimed.\n\n\"Even better when he's in my arse,\" Hannah moaned, \"I've got lube for later.\"\n\nWith Hannah's head now pulled back, Amy played with herself, the only sounds being Hannah's moans and the slap of my skin against hers as I pounded her, with the occasional slap of each arse cheek. Amy then sat up to kiss Hannah, and that just set of her orgasm. She loved me to keep fucking her through an orgasm so barely stopped. But it must have been a good one. Felt like it considering her pussy gripped my cock like it was in a vice, so it was little surprise she did ask me to stop after a few minutes.\n\nBut I hadn't cum in her, so she happily turned around, swallowed my cock, and had me orgasm within five minutes. Left me breathless, rather impressed, and eager to lie down, a gorgeous woman in each arm. With that out of our system, the three of us spent time just catching up. I would be going out with my two friends the next day before they flew out to Europe, then the Australian family, Hannah and I would be heading to London for a couple of nights to go sightseeing. After that, there were no real plans, but I had a feeling most days would involve being with Amy and Hannah, one way or another.\n\nOnce we'd all recovered, the night ended with Amy riding my cock, Hannah happily straddling my face. It was the greatest experience of my life, at least when it came to being with a woman or women, Amy riding me until she enjoyed an orgasm, before she happily slid off me so Hannah could ride me, Amy stated I'd cum in her, now I needed to cum in my cousin. Hannah leaned forward, running my hands down to her arse, and I fucked her hard again, giving her breasts plenty of attention at the same time. She orgasmed twice before I finally left a load inside her.\n\nThat was the end of the night. Hannah was feeling a little tender, Amy was happy after a couple of orgasms, and I needed a shower. Back in bed, Amy spooned against me, Hannah spooned against her, continuing to talk about the two weeks they'd have my company before I was required at work.\n\nA day out with my two best mates was just what the doctor ordered. They were surprised when they enjoyed English beer and I knew enough pubs by now that we could do a proper pub crawl during the afternoon and into the evening. They were not flying out of Manchester until the day after next, but knew they were going to have horrendous hangovers, so it was best we did it that night.\n\nWe were at least half a dozen pints in, sitting in a smoke-filled boozer, chewing on some peanuts thankfully bought from behind the bar in a packet. The three of us didn't smoke, though I had the occasional smoke when in training as it helped calm the nerves at times.\n\n\"So, Nate, got to ask you a question,\" Steve started to say. I glanced at him as he looked awkward. \"Um, Hannah... She seems quite into you. I mean, she's looking at you with those sort of eyes that speak of love. And you seem to...\"\n\n\"You asking if we're doing the deed?\"\n\n\"Yeah.\"\n\n\"Guilty as charged. We've been on and off for most of the time I've been here.\"\n\n\"No shit?\"\n\nI shrugged. \"Why would I lie? It's not illegal, it's not really that weird, and we do genuinely love each other.\"\n\n\"What about Amy?\" Patrick asked.\n\n\"What about her?\"\n\n\"Well, you've always been close with your sisters, or that's the way it seemed, but there seems to be something there. I could be totally off base there, mate, but I guess we're just curious.\"\n\n\"Wouldn't be the first guy to fuck his sister, though,\" Steve added, \"Remember Mark at high school? Totally banging his older sister.\"\n\n\"I heard Will was fucking his mum,\" Patrick added.\n\n\"Truth be told, I'm fairly sure Suzy has had a crush on me for years,\" Steve admitted.\n\n\"Yeah?\" I asked.\n\nHe nodded. \"But she's my little sister. That's just... Okay, there's that small part of my brain thinking it would be fantastic. Who do you love more than your parents and siblings? But it's too big a leap.\"\n\n\"Okay, yes,\" I confessed, \"Amy and were fooling around for about the last year before I came over here.\"\n\n\"Fucking knew it!\" Patrick exclaimed. Steve just grinned at me.\n\n\"You guys are fine with it?\"\n\nBoth shrugged. \"Your personal life is just that, mate,\" Steve replied, \"Plus, Amy's gorgeous. Don't blame you for tasting the forbidden fruit.\"\n\n\"Do your parents know?\" Patrick wondered.\n\nI nodded. \"Yeah. They were surprisingly fine with it too. I guess they knew why. I was leaving, Amy was devastated I was leaving, and it was a nice way to say a long farewell to each other.\" I looked between them again. \"Sure you're not weirded out?\"\n\n\"Nope,\" Steve replied, both shaking their heads, \"Noticed at the buffet yesterday how Amy and Hannah were looking at you. And if we noticed it, everyone there noticed it. I'm guessing you'll either get a lot of questions, maybe an accusation or two, or people will simply say the matter is between consenting adults and they should just keep their noses out of it.\"\n\n\"And you're certainly not the first,\" Patrick added, \"There were rumours everywhere about brothers and sisters getting it on. I'm sure people think it doesn't happen, but I reckon it happens more regularly than people care to admit. Then add the amount of young men with mother issues.\"\n\n\"Well, I don't have that problem, at least,\" I joked.\n\nThey were staying in a hotel in the city centre, so once we'd had enough and had a good buzz going, we walked back there while I text Hannah, asking her to pick me up. They were already upstairs and likely passed out by the time she arrived. Managing to get my frame onto the passenger seat, she laughed, suggesting I stank of beer and smokes. She was probably right, and as soon as we made it back to the hotel room, Amy pointed me in the direction of the bathroom to shower. Though the mind wanted to fool around, the body was telling me to get some sleep.\n\nChecking out the next morning, I was informed of the itinerary as Hannah drove us to our grandparents. A day spent with the family around Altrincham, then we'd catch a train south to London, four nights there, then back to Manchester for the rest of the time until I had to leave for my first command. Asking about the sleeping arrangements, Amy assured me that enough rooms had been booked so I would have my own, and that herself or Hannah would join me, and if I played my cards right, both of them.\n\n\"We just have to behave in front of everyone else,\" Amy added, \"But Mum and Dad are obviously cool with it.\"\n\n\"And Katie?\" I wondered, \"Does she know?\"\n\n\"Of course. She was the airport, remember? And that kiss was not a brotherly one. She has a boyfriend back home but... Nate, you do realise she's had a crush on you for years, right?\"\n\n\"Yeah, I kind of assumed really.\"\n\n\"We've talked a lot since you left. She admitted that's why she got so awkward with you, because she was experiencing all these feelings she thought were wrong, and so she thought pushing you away the best thing. But that just made her feel even worse, so when you almost went overboard in making her feel loved, after you told us what you were going to do, she accepted her feelings but knew that you'd never try anything with her.\"\n\n\"Does she still... have those feelings?\"\n\nAmy laughed. \"Her boyfriend does share certain features that remind me of my brother. He's a nice young man though. And she does seem to genuinely love him, so that's a good thing. But I've seen how she's looked at you more than once since we saw you graduate. I reckon you could have taken off her panties and squeezed them, all her juices pouring out.\"\n\nI laughed. \"Fucking hell, Amy. That's... descriptive.\"\n\n\"Do you remember my panties, Nate?\"\n\n\"Certainly do.\"\n\n\"Fucking hot in his uniform, isn't he?\" Hannah murmured, \"Always wet as fuck around him in it. I'm sure he could probably get a good whiff of my scent if he inhaled enough.\"\n\n\"You trying to turn me on here?\" I wondered.\n\nAmy leaned forward from her seat in the back of the car, kissing my cheek. \"Just teasing you,\" she whispered, \"Though I'm glad I did bring a lot of panties with me.\"\n\n\"I would say just don't wear any,\" Hannah started to suggest, \"But I love it when he slowly removes them from me, particularly when he's got me all turned on...\"\n\nThey shut up as I had no doubt they were both aroused, and considering we were going to our grandparents, while Hannah and I being affectionate wasn't a problem, Amy and I would have to behave. It perhaps wasn't a surprise that, once we'd arrived and headed inside, the pair of them occupied themselves by chatting with anyone else except me, and I eventually slept on the couch that night.\n\nI'd been through London a couple of times during my time in the UK but never spent time there as I was always heading somewhere else instead. We'd been before during previous family trips anyway, but there was also something new to do whenever we travelled to the city. The train south from Manchester Piccadilly to London Euston only took a little over two hours and was more comfortable than I thought it would be. Arriving at our hotel at check-in time, my parents had their own room, Katie and Amy were supposed to be sharing, while Hannah and I would be sharing. My father gave me a knowing look as he was handing out the keycards.\n\nDumping our bags, there was no surprise that Amy quickly walked into our room, surprised that Katie followed her, Amy sitting next to Hannah on her side, while Katie sat next to me. Mum had already been in my ear about everything she wanted to see while we were there. We'd visited London before during previous trips, but Mum still wanted to go see all the sights again. Dad just went along with it to keep her happy.\n\nThankfully, my little sister didn't make it awkward, wanting nothing more than just some brother hugs, eventually ending up on my lap with her head against my chest. She was happy so that's what mattered. Mum eventually knocked on the door, letting us known we'd go out for dinner soon enough, seeing Katie nestled on my lap. The smile was immediate. \"She's missed her big brother.\"\n\nKatie was a petite little thing, even compared to Amy. Stroking her back, I kissed the top of her head, feeling her sigh happily. \"I've missed my family, Mum.\"\n\nThat earned me a kiss on the cheek from my mother. \"Nice to see the family back together, even if it's only briefly.\"\n\n\"We'll get ready soon, Mum.\"\n\nWhen she disappeared, Katie lifted her head from my chest and gazed at me, unable to stop smiling. I kissed her cheek and whispered I loved her, holding her tight to me again. \"I love you too, Nate,\" she whispered back.\n\nConsidering I'd barely had more than a few days off at once in the past sixteen months, I found myself thoroughly enjoying our four days and nights in London. We were completely tourist mad regarding everything we visited, but knew enough to not eat or drink in the major tourist spots. Every night, we returned late to the hotel, and on the last night we were in London, Katie knocked on the door and asked if she could stay with me. She was now 19 years old and... I did wonder if she wanted something more. Wearing rather short shorts and a cami, there was a lot of skin on show.\n\nI held back the sheets and gestured, glancing across at Hannah, who smiled at me. \"Maybe I'll go keep Amy company tonight?\"\n\nLeaving me alone with Katie a minute later, she happily snuggled back against me as I held her in my arms. \"I know, Katie,\" I whispered.\n\n\"I can't do anything with you,\" she said softly, \"Though I really want to. But I can't cheat. My boyfriend is a lovely young man and I do love him but... I'll always have these feelings for you, Nate.\"\n\n\"Amy explained your conversation. I'm just glad I didn't let you push me away.\"\n\n\"Sorry,\" she whispered.\n\n\"Not necessary. We were in a good place before I left.\"\n\n\"Still hate that you left.\"\n\n\"I know. But now we're here in bed together, so it's not all bad.\"\n\n\"My big brother is... fit as fuck.\" I chuckled as she added, \"But he's still the kind soul I remember too.\" She turned around, her head nestling under my chin. \"Nate, would you...\"\n\n\"God yes, Katie. You're absolutely fucking gorgeous and adorable all at once.\"\n\n\"Okay,\" she said, hearing the happiness in her tone, \"I just wondered... Would Amy or Hannah care?\"",
        "\"Katie, I'm obviously intimate with both, so no, you're my little sister and they wouldn't care. I'm sure they think we're fucking right now.\"\n\nThat made her giggle. \"I'm just liking the cuddles, to be honest.\"\n\n\"I can do cuddles any time you want while you're here. Long as I'm not naked though. Might give into temptation.\"\n\n\"The idea of me on my back, legs in the air as you just...\" she trailed off. \"I'll shut up, otherwise I'm just going to get even hornier than I am.\" Turning around again, she snuggled back against me and she giggled again. \"Nate, you're... you know...\"\n\n\"Yep.\"\n\n\"Okay,\" she said softly.\n\n\"Uncomfortable?\"\n\n\"Not at all. Are you hard because of me?\"\n\n\"Absolutely.\"\n\nShe took my hand and slid it under her cami so I could feel her soft skin. She was rather warm considering we were under a sheet and thick blanket. \"Need to take care of it?\"\n\n\"Do you want me to?\"\n\n\"No, it feels... nice. I feel desirable.\"\n\n\"Because you fucking are, Katie.\" I didn't move my hand too far, just gently running my fingers along her skin, feeling her relax against me. \"This is nice,\" I whispered.\n\n\"I'm feeling very relaxed and comfortable with my big brother,\" she whispered back, ending with a sweet giggle.\n\nI kissed her cheek again. \"I'm going to crash in a minute. I look forward to waking up in the morning though.\"\n\nWaking the next morning, Katie couldn't help herself by almost rubbing herself against me considering I'd woken up with what I could call a raging erection. Realising I was awake, she turned over to meet my eyes, biting her lower lip, definitely considering. When she started to blink rapidly, I hugged her tightly. \"I want to but I can't do it either,\" she murmured.\n\n\"So we don't, sweetheart. We behave ourselves, no matter how difficult it is.\"\n\n\"Can I ask a favour?\"\n\n\"Anything.\"\n\n\"Can I watch... you and Amy?\"\n\n\"Are you sure?\"\n\nShe returned a firm nod, so I sent a text to Amy. She appeared within a minute with Hannah, closing and locking the door before Amy immediately asked if Katie was sure she wanted to watch us be intimate. Katie was adamant, and Amy wasn't going to ask twice, stripping off immediately as I removed my underwear. Katie moved enough that Amy could straddle my lap.\n\n\"Look at Katie, Nate,\" Amy said, \"I'll enjoy your cock and let her know how good it is.\"\n\nAmy lowered herself down my cock, causing a groan to escape me, while Katie was mesmerised by my cock and the fact Amy quite happily rode me. The colour that appeared in her cheeks suggested she was increasingly turned on, and it was little surprise her hand ended up beneath her shorts.\n\n\"Okay, this is totally fucking hot,\" Hannah said, joining alongside Katie and wasting no time playing with herself at the same time. \"Want to get naked, Katie?\"\n\n\"No. If I do, I'll want to do stuff with him. Watching my brother and sister make love is enough for me.\"\n\nTo my surprise, Amy enjoyed an orgasm rather quickly, I think rather turned on by riding me in front of our cousin and our sister. No surprise Katie must have enjoyed a rather intense orgasm, and when she turned to cuddle into me, I kissed her forehead as she kept fondling herself. Hannah was now naked and really going at her pussy with three fingers, Amy laughing away, calling her an exhibitionist.\n\nAmy ended up on her back and Katie definitely enjoyed me fucking her sister nice and hard. Amy loved it too, and when I did finally cum inside her, the last kiss we shared before I pulled out was rather intense.\n\nOf course, that was the time Mum knocked on the door. \"Breakfast is downstairs when you're ready.\"\n\n\"Fuck, they're going to think we've all been fooling around,\" Amy said, laughing away.\n\n\"Dad will either be proud of his son or want to wring his neck,\" Hannah replied.\n\nWe all dressed, figuring we'd shower before packing for our departure, joining the parents' downstairs. I grabbed myself a plate and piled my plate high, Mum laughing away as I tucked into the usual fare. While my face was obviously blank, the three women I'd been in the bedroom with couldn't stop grinning, while Katie was obviously sitting very close to me.\n\nDad eventually cleared his throat. \"Nate, it's none of my business. We've accepted that you and Amy... but...\"\n\nI met his eyes. \"No, Dad. Don't worry about it.\"\n\n\"Okay. It's just...\"\n\n\"Dad, I just wanted to spend a night being cuddled by my brother. Haven't been able to do that in two years. Nothing happened,\" Katie replied, \"The only reason why I'm blushing is because I can see you and Mum no doubt thinking something. I don't blame you because of the reasons explained, but trust me, if it were to happen, I'd be all over him, not just sitting close and basking in his presence.\"\n\nDad grinned. \"Okay, that's me told, sweetie. Consider the matter forgotten.\"\n\n\"It is nice to see my children, and my niece, getting along so well. Guess all of your being adults helps.\"\n\n\"And the sex,\" Amy said, immediately chewing on a bit of bacon to hide her smile. Mum just rolled her eyes, Dad shook his head. I glanced at Amy, who did her best to look completely innocent. \"What?\" she finally asked.\n\nI made sure I grinned. \"I do wonder what Mum and Dad would have thought if I hadn't been leaving.\"\n\n\"It would have been weird, but you're our children, Nate. We would have worked it out,\" Dad replied, \"Once we realised what was going on, we knew trying to stop you would only force you away.\"\n\n\"We love you, no matter what,\" Mum added.\n\nAfter showering and packing, we took two cabs to London Euston for the return trip to Manchester Piccadilly. Katie sat next to me the entire way, snuggling into my side again. If she gave me the green light to doing anything with her, I'd find it difficult to say no. Her affection and love for me was obvious, but I wasn't sure I could be the person she was to cheat with. Plus, I had a feeling she'd do nothing more than cuddle with me. She wouldn't want to do that to her boyfriend. Being her brother, at least it could still be innocent if we only cuddled, despite the obvious feelings.\n\nThe rest of the time was spent in and around the north. There was a day trip to Liverpool, a day trip to Chester, a day trip to York, with the rest of the time spent wandering the Greater Manchester area, if we could be bothered heading out. Sometimes, there was nothing better than a beer in the backyard or a session at a beer garden, spending the entire time still catching up on everything I'd missed for two years.\n\nHannah definitely took a back seat during that time. She didn't say anything to me about it, but I didn't miss the fact Amy would end up coming into my bedroom. Katie spent a couple of nights too, still nothing more than cuddling the entire night. Didn't even kiss her, at least how I'd kiss Amy or Hannah. The last night before I was to head south, I booked a hotel for Amy and I, with an invitation for Hannah to join us, but she insisted the night was just for Amy and I.\n\nWe arrived early in the afternoon for check-in, and apart for heading out for dinner and a drink, we never left the bedroom. While I spent a lot of time between her legs, mouth busy working her pussy, and she certainly made sure my cock received plenty of attention from hers, we must have made love until early morning. Whenever she was worried about me getting sleep, I assured her it would be fine. I was being driven south in the morning and I knew she'd be joining with the rest of the family to see me off.\n\nNot sure how many Royal Marine Officers are dropped off at their barracks by their entire family, but I knew Mum wouldn't hear of anything except that I was being driven all the way to Taunton so she could say goodbye to her son, aware we might not be seeing each other again for a few years now. Dad shook my hand before we embraced, Mum must have hugged me for ten minutes this time, though her eyes remained dry. Amy handled it far better, a little teary but she'd been happy to see me and be intimate again. Katie just wanted me to cuddle her until I simply had to leave. Hannah kissed me, whispered she was already looking to move to Bristol, and that I'd better stay in contact with her.\n\n\"Any chance of a visit home?\" Mum did ask before getting in the car.\n\n\"I knew they send us around the world for training opportunities. If we ever get offered a chance to go to Australia, I'll snap their hand off.\"\n\nShe glanced back at the car, where my sisters and cousin were busy chatting away. \"Would you have been intimate with Katie?\"\n\n\"In a heartbeat, Mum.\"\n\n\"I think she's been in love with you longer than Amy. I should be... well, I should feel a lot of different emotions about it, but all I know is that my son is a good man and would treat both his sisters with love and respect. But I'm glad you didn't do anything. She'd feel nothing but guilty. Her boyfriend is a good sort, though a slight reminder of you. Not as tall, nowhere near as broad, but there are enough reminders.\"\n\n\"You suggesting something, Mum? Trying to set me up with your other daughter?\"\n\nShe laughed. \"No. Amy said she'd start dating again once we got home, but she didn't want to cheat on her ex. She came here intent on being intimate with you nearly the entire time. She was rather vocal about it.\"\n\n\"I'm glad you accept it, Mum. Thanks.\"\n\nWe hugged a last time. \"I love you, Nathan.\"\n\n\"Love you back, Mum. Miss you guys like hell at times.\"\n\n\"So you bloody well should!\" We hugged a little longer before she sighed. \"I'd better go, otherwise I'm going to cry and then I won't want to leave.\"\n\n\"I'll stay in contact, Mum. Don't worry.\"\n\nShe kissed my cheek before getting into the car. I waved them off before I walked towards the guard house. I had all my papers with me, and wasn't too surprised a vehicle was sent to collect me, escorting me to HQ. Everything was sorted out rather quickly, including the fact that, since I was single, a place in barracks was already sorted out for my arrival, so that was something.\n\nMy new life would begin at 0700 the next day."
    ],
    "authorname": "UltimateSin",
    "tags": [
        "cousins",
        "romance",
        "threesome",
        "brother",
        "sister"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-marine-ch-06"
}