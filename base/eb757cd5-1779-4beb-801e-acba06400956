{
    "title": "Women's Studies Ch. 05",
    "pages": [
        "There was a strong chill in the night air. Not nearly as bad as it would have been back home in Colorado, but harsh just the same considering that only a few weeks ago the smallest amount of sunlight left you dashing for cover and thanking the air conditioning Gods. It was such a strong contrast for such a short amount of time. One day you are enjoying tiny dresses and open toed heels, and the next you can't leave the indoors without pants, thick socks and a jacket.\n\nSpeaking of pants, that was a whole new set of nervous emotions. My life was so much easier when I could wear skirts and dresses. I didn't realize it at the time, but it was so much easier to keep my extra lady bits hidden away when there was so much open room down there. Now that I needed pants to keep myself from freezing to death, in what was promising to be a dreary desert winter, I needed a little more support to hide my bulge.\n\nStill being rather new to being a woman, I had questions, and thankfully I knew the person with all the answers. My good friend Google. Not knowing exactly what I was looking for at the time, I did a random search and found just the thing I needed right away, a gaff. A lot of stores sold them online, but what I found that really suited my needs was one of the do it yourself ones. After seeing a video of how well it worked, I quickly went out and bought some pantyhose and a thick sock. With some liberal use of my scissors, I ended up with something that looked similar to a sling shot. Following the instructions, I slipped it over my legs and up into place. When I was sure I was all tucked away, I slipped on a pair of my sexiest panties, and then a tight-fitting pair of jeans.\n\nI looked fantastic. I couldn't see any trace of the cock between my legs, which made me as giddy as the schoolgirl I was. Even with my own appraisal of my handy work, I still couldn't bring myself to leave my room. I was worried that I was missing something, or that if I moved wrong, I would come out of place. I called Kennedy for assistance, and after nearly an hour of moving around\u2014walking, skipping, jumping and bending\u2014Kennedy assured me that I looked just as smooth and womanly down there as she did.\n\nI've said it before, and I'll say it again; it's hard work being a woman, but it's totally worth it.\n\nI was at a cafe near campus, sitting outside on a couch by a fire, watching the last traces of sunset fade away. After our felony bonding experience, and Abigail's transformation from shy reserved innocence to her now outgoing and carefree attitude, we had been spending a lot more time together. Almost every night we came to this cafe to sit outside drinking hot coco or coffee.\n\n\"Here you go, Lexi,\" Abigail said holding out a warm coffee container as she sat down next to me. \"Be careful. It's hot.\"\n\nAnd hot it was. Delicious too. I loved having hot coco on nights like this. Abigail was in full blown relax mode as she slouched down on the couch leaning against me.\n\n\"Where's Kennedy at?\" Abigail asked, checking her watch. \"She was supposed to be here ten minutes ago.\"\n\n\"I'm sure she's fine,\" I said, running my hand through her dark brown hair. \"Speaking of Kennedy, how are things with you two?\" I asked, trying to be casual.\n\nI knew pretty well how things were going between them. Almost every night since they first hooked up, Kennedy had spent the night in Abigail's bed; and sadly, not in mine once. I missed the feel of her next to me, her warm skin, and her arms holding on to me. I even missed the way her wild hair tickled my skin, waking me randomly throughout the night. I felt like an ass for being jealous of one of my best friends, and her relationship with my other best friend, especially since Abigail was so much more alive now. I just couldn't help but miss what Kennedy and I used to have.\n\n\"They're so great!\" Abigail gushed. \"I mean...wow! I mean, I've used Fred before (her vibrator), a lot actually, but I never knew it could feel like that. And the way her lips feel against mine. And that crazy tongue of hers too! And it's all the time. How does she have the energy?\" she went on rambling happily.\n\nI couldn't help but smile for her. I knew firsthand what she was talking about. Kennedy could be insatiable.\n\n\"Oh my God. Did she tell you what she did to me last Thursday?\" Abigail went on. \"She decided to sit in on one of my Art History classes, and she spent the entire time fingering me in the back row,\" Abigail said laughing. \"I came like four times, all the while praying that I wouldn't scream and let everyone know that I had her fingers buried inside me!\"\n\n\"That definitely sounds like Kennedy all right!\" I said laughing with her.\n\nI vividly remembered Kennedy sucking my cock in the back row of my Gender Studies class, and then stealing my panties, forcing me to walk back to the dorm in my dress with a gigantic hardon.\n\n\"I'm glad that you're happy,\" I told Abigail truthfully.\n\n\"I just wish you were happy too,\" Abigail sighed.\n\nI should have remembered that she wouldn't be so near sighted. Abigail might usually keep things to herself, but it didn't mean she didn't notice things.\n\n\"I am happy Abigail,\" I said leaning my head against hers. \"Look at you! You are so much happier now. You were so alone and closed off before, and now you're so full of life!\" I explained. \"I'm happy for you!\"\n\n\"I'm not blind,\" Abigail said, taking my hand in hers. \"You miss Kennedy. You two had been inseparable since school started, and now, in the span of a couple of hours, I somehow stole her from you. I can't help the way she makes me feel, but I also can't avoid what I did to you. And you're still being so nice to me, even after what I did.\"\n\n\"You didn't steal anything Abigail,\" I assured her. \"Kennedy and I have only just been friends.\"\n\n\"You guys slept together all the time. And I don't mean with actual sleep,\" she said, confused. \"Well, I guess she did do most of her actual sleeping with you as well.\"\n\n\"Yeah, those things are true,\" I agreed. \"But we both knew from the beginning that we were just really good friends; that we wouldn't be each other's girlfriend. We just enjoyed playing, and loved how we made each other feel,\" I said. \"To be honest, she's more like a sister than a best friend.\"\n\n\"So, you're basically sleeping with your sister?\" Abigail joked.\n\nYes. \"No, of course not,\" I said, covering quickly. \"It's not like that at all.\" It was exactly like that, come to think of it. My feelings for Kennedy were nearly identical to my feelings for Audrey. And I was sleeping with both of them.\n\n\"What I meant is that we're so close, it's like we could be sisters,\" I said, trying to make it sound less dirty.\n\n\"All right,\" Abigail said with a mirthful sigh. \"I don't have any siblings myself, but I think I remember reading somewhere that sleeping with them would be wrong.\"\n\n\"Stop it!\" I laughed tickling Abigail's sides.\n\n\"Fine! Fine! I'm done, I promise!\" Abigail screamed, laughing. \"Ugh, you're horrible!\" she said when I finally relented.\n\nThe glow from the fire danced across us as we settled back down to enjoy our hot beverages. I really was happy for Abigail, but to be honest this whole situation felt kind of impossible. We both cared for Kennedy as more than mere friends, just the same as we both craved her touch and sensual embrace. All I knew was that I couldn't hurt Abigail.\n\n\"I don't know what Kennedy and I are,\" Abigail said staring into the fire. \"We haven't talked about it. But I do know one thing,\" she said, turning to face me. \"You are the only person I wouldn't fight over her with. You and Kennedy are both my friends,\" she finished, giving me a soft kiss on the cheek.\n\nFeeling her lips on me again took me back to the night we helped Kennedy break into the Admin building, stirring up a whole new problem. Abigail and I had made out on a park bench, making a very sexual scene, in order to distract security from catching Kennedy as she made her exit. It was supposed to just be a distraction, but I let myself get carried away. Now, even more thoughts than usual of her would creep into my mind.\n\nNone of this was helped by the fact that Kennedy didn't mind an audience when she and Abigail would fool around in bed together late at night. A girl can only take so much.\n\n\"Where the hell is Kennedy?\" I asked in an attempt to distract my thoughts.\n\nAs if my words were finally a summons, she appeared.\n\n\"Kennedy where have you been?\" I asked, before I noticed the look on her face. \"What happened? Is everything okay?\"\n\n\"Can I get a large non-fat mocha? Thank you,\" Kennedy said to the server before diving into her explanation.\n\nShe had been in the Administration building, reserving a couple of classes for the spring semester when she thought she would take a quick detour by the Assistant Deans office. \"I was only in the outer office for a couple of seconds before Mr. Decker walked in behind me. For some reason he was pissed. He kept asking me what I was up to and getting angrier by the second. It was scary. I tried to say that I had gotten lost, but he was losing control. Thankfully someone heard the shouting and came to check it out.\"\n\n\"Christ, Kennedy! What were you doing in there?\" I asked. \"I thought we were in this together. You didn't even have a plan. You just went in blind!\"\n\n\"I know,\" she said. \"but I had just seen him on the first floor, and I thought I might have a couple minutes to see if his door was unlocked.\"\n\n\"Was it?\" Abigail asked.\n\n\"No,\" Kennedy sighed.\n\n\"How much trouble did you get in?\" I asked.\n\n\"Not much surprisingly,\" Kennedy said. \"I thought I was a goner for sure. Before one of the secretaries came to see what the commotion was all about, I thought he might actually hit me, he was that furious. After there was a witness around, I just thought I was going to be expelled or something. He kept saying that I was done at this school, and that I had messed with the wrong person. The weird thing was, when the Dean arrived, he pulled Mr. Decker aside for a few moments in private, and afterwards, he told me that the second floor was off limits to students without an appointment. He put me on probation and told me that any other infractions would result in disciplinary action.\"\n\n\"That's crazy. Why was he so mad?\" Abigail asked.\n\n\"I don't know,\" Kennedy said, shivering. \"But before that secretary came in, I had never been so scared in my life.\"\n\n\"That just seems weird to me,\" I said, thinking aloud. \"I can understand you getting into trouble for being somewhere you shouldn't be, but why was he so angry? And why did the Dean let you off so easy if Mr. Decker was so determined to expel you?\"\n\n\"I don't know. I'm just glad that it's over, and that I'm not being kicked out,\" Kennedy said.\n\nIt was quiet again while we all absorbed the latest news. We would definitely need to be more careful in the future. Maybe we would have to slow things down a little bit and let the dust settle before we tried getting into his office again.\n\n\"In other news, I think we need to have an intervention for Lexi,\" Abigail said, trying to lighten the mood.\n\n\"I'm right here you know!\" I exclaimed, nudging her with my elbow.\n\n\"Her hand is still glued to that phone I see,\" Kennedy said smiling.\n\nI very deliberately folded my arms to hide my phone from view. \"I was holding it because I was about to call and see what was taking you so long,\" I lied.\n\n\"Bull shit,\" Abigail smiled. \"You were waiting for Danny to text you when he got off work!\"\n\nI had given Danny my phone number when we had our girl's night out at The Blacklist, and he began texting me almost immediately. I couldn't really figure out what I was doing with this though. I enjoyed our conversations, even more than I thought I would. Before, he was just a great memory of a kind stranger that had made me feel desirable, and now it was becoming more. As we talked over the last few weeks, I began to know more and more about him, and I couldn't help but think of him as a friend. The problem was, I knew he wanted more.\n\nFirstly, I still didn't know where I stood with my feeling when it came to boys, and secondly, even if I did know where I stood, how exactly do you tell a boy that likes you, that you have a penis too?\n\n\"Whatever,\" I said. \"We're just friends anyway.\"\n\nThankfully, before they could torment me further, all of our phones rang with a message from our Dorm Leaders.\n\n~EMERGENCY MEETING IN 15 MIN. PLEASE NOTIFY HOLLY IF YOU CANNOT MAKE IT~\n\n\"Looks like we have to go,\" I said hopping up before they could tease me any more about Danny. I didn't know what it was, but I just couldn't take any of that right now.\n\nWe were only a block away from campus when we got the text, so we made it back in great time. Once we entered Evens Hall, we noticed the dorms were abuzz. It was usually a busy place, with people always moving through the halls, but there seemed to be an energy in the air tonight.\n\n\"Great! You guys made it!\" Holly said as we stepped into our common room. \"We have some last-minute news we need to share.\"\n\nI peered around, and I noticed that all the other girls that shared our flat were in attendance as well. They were sitting with what could only be described as anticipation. Whether it was for the news, or our arrival, I was unsure.\n\n\"You might have noticed that there have been no school festivities planned for Halloween,\" Holly said standing up to address all of us. \"As a somewhat unspoken tradition, our school never hosts anything for Halloween. When Mayweather first opened, it was a pretty strict place, designed solely for women to come and learn. In an act of rebellion, the students took it upon themselves to make the most of it, and every year since its founding the students of Mayweather have sponsored their own Halloween scavenger hunt.\"\n\n\"Call it a night of mischief,\" Jessica, our other Dorm Leader chimed in smiling.\n\n\"As the years went on, alumni began donating prizes for the winners, and it has been like that ever since. We thought we would have to cancel it this year when we hadn't heard from any of our alumni, but we just received word that a Miss...\" she began looking at a piece of paper, \"Marilyn Brooks, has graciously pledged to match any funds we raise for the event, to be split among the winners!\"\n\nThe room was abuzz with excited voices at this announcement. Personally, I wasn't sure how much fun a scavenger hunt would be, but a cash prize definitely got my attention. Some of these students came from wealthy families, but I wasn't one of them, and I knew I wasn't alone in that regard.\n\n\"The Student Union has decided that there will be a twenty-dollar entry fee per participant. You will be working together in groups of four, and the prize will be split evenly between the members of the winning team.\"\n\n\"In true Mayweather fashion,\" Jessica added, \"there will be no points for second place. In the real world there are no prizes for doing your best, only for doing the best.\"\n\n\"On Friday evening, all participants will meet at The Library, where they will hear the rules and receive their objectives,\" Holly said before adding, \"And this is Halloween, so costumes will be mandatory.\"\n\nWith that, Jessica and Holly retreated to their room, leaving us to discuss the news amongst ourselves. Now that the speech was over, all of the girls began talking at once. Some were already pairing up, while others were discussing the contest and the looming prize.\n\n\"Do you guys want to do it?\" Kennedy asked. \"It sounds like fun!\"\n\n\"I'm in,\" I said quickly. I was doing the sums, and even if only a fraction of the twelve-hundred or so students participated, it would be a nice bit of money.\n\n\"Abigail?\" Kennedy asked before realizing that Abigail wasn't with us any longer. \"Where did she go?\"\n\nI hadn't even seen her leave. Finding her was rather easy though. With a quick check of our room, we found her sitting on her bed staring out the window.\n\n\"What's wrong Abigail?\" I asked. \"Why didn't you stick around?\"\n\n\"That was my mom,\" Abigail said quietly.\n\n\"What? I thought your mom was...\" Kennedy began before stopping herself. \"I thought she passed away?\"\n\n\"She did, but that was her, Marilyn Brooks. It was her maiden name,\" Abigail had a sad look in her eyes, and she seemed to be fighting back tears. \"I'm sure it was my dad. He must have sent the letter in her name.\"\n\nKennedy sat down next to Abigail and put an arm around her. Abigail didn't talk about her mother much, but I knew that she had passed away when Abigail was really young. One of the main reasons she was here at Mayweather was to live a small part of her mother's life, and to maybe find some sort of connection to what she lost.\n\n\"Ugh,\" Abigail said, drying her eyes. \"I'm all right. It was just a bit of a shock is all. So, do you guys want to do it with me?\"\n\n\"Hell yes!\" Kennedy purred before kissing her cheek.\n\n\"Okay! Okay! Stop! That tickles!\" Abigail shrieked laughing as Kennedy continued to kiss down her neck. \"I meant do you guys want to do the scavenger hunt with me, not do me!\"\n\n\"Party pooper,\" Kennedy said with a sigh. \"Lexi and I already decided to team up.\"\n\n\"We need one more though,\" I said. \"It's teams of four.\"\n\n\"How about Skylar?\" Kennedy proposed.\n\nSkylar was Kennedy's roommate, not that Kennedy spent much time in her own room. In the beginning, Kennedy had spent a lot of time in mine and Abigail's room with me, but since her and Abigail began their new relationship, she hardly spent a single night in her own room at all.\n\nTo be fair, Skylar might not have noticed. Skylar was... promiscuous. She frequently had men coming by to pick her up, and she was not shy about her sexual experience. She had probably spent more nights in other guys' beds than her own since school started.\n\nAll the times that I had spent around Skylar had been memorable, but she wasn't around very much. She attended classes, and turned in her assignments, but other than that she was usually gone. I swear, if she wasn't as smart as she was, she wouldn't be able to keep the social life she had. I honestly didn't know how she did it.\n\n\"Do you think she'll want to team up with us?\" Abigail asked.\n\n\"Please, she's been looking forward to getting dressed up for Halloween for weeks,\" Kennedy said. \"Besides, she's here on a scholarship too, so she could use the prize money as well.\"\n\n\"I'm okay with Skylar as our fourth,\" I said.\n\n\"All right, go ask her Kennedy,\" Abigail said reaching for her laptop. While Kennedy went to go find Skylar, Abigail's fingers flew across the keyboard on her lap.\n\n\"Did you forget some homework?\" I asked, watching her work.\n\n\"Nope,\" she said, smiling as she continued on her laptop. \"I'm shopping.\"\n\n\"So that's why you look so happy!\" I laughed, taking a seat next to her to take a look.\n\nAbigail was browsing Halloween costumes, and the prices were outrageous. Some of the costumes she was looking at were over four hundred dollars!\n\n\"Holy crap!\" I exclaimed. \"Are you really going to spend that much money on a Halloween costume?\"\n\n\"What?\" Abigail said, looking up at me as I broke her concentration. \"Oh, yeah they do cost a little bit, don't they?\"\n\n\"We have very different definitions of 'a little bit',\" I said, shaking my head.\n\n\"Well feel better, because I'm buying yours and Kennedy's as well,\" she said offhandedly.\n\n\"You don't have to do that,\" I explained. \"I'm sure I can find something on my own.\"\n\n\"I'm sure you could too,\" Abigail said. \"Think of it as a thank you. You and Kennedy have been so great to me, it's the least I can do. Besides it's daddies Am-Ex card.\"\n\n\"Are you sure?\" I asked. I felt a little uncomfortable having her buy something for me.\n\n\"Yeah, it's not a problem. When I started school here my dad set a weekly allowance for me and I have been coming in severely under budget,\" Abigail explained.",
        "\"Skylar's in!\" Kennedy exclaimed as she returned.\n\n*** *** ***\n\n\"Hold still!\" Abigail scolded a few hours later.\n\nShe was on her knees in front of me with a tape measure. Since she had decided to buy us custom costumes, she was getting all of our measurements, something she had been familiar with from a young age, having been fitted numerous times.\n\n\"Sorry, you're just getting a little handsy down there,\" I said, trying not to move. To be honest, it wasn't just her hands. I couldn't help but imagine her naked, down there on her knees, with my cock in her mouth. I had become aroused the moment she knelt in front of me, and her touching me hadn't helped.\n\n\"Oh please, you make it seem as if no one's ever touched you before,\" she said as she finished her last measurements.\n\nAbigail had contacted a custom costume boutique in California. At first, they refused to take on any last minute orders, but after Abigail reluctantly told them her last name, and that she would pay a premium price if our costumes could be made and delivered before Friday, the shop owner agreed, and as soon as Abigail could send in our measurements they would begin their work.\n\nAfter a long discussion of what we would all go as, we finally relented to Abigail and decided to go as our alter-egos. Kennedy would be Black Widow, I would be Bat Girl, and Abigail would go as Rogue from the X-Men. Skylar claimed to already have her costume, and dodged any questions about what she was going as.\n\n*** *** ***\n\nThe week leading up to the contest was filled with anticipation. Some of the upperclassmen were telling wild stories about previous scavenger hunts they were either a part of, or that they had heard of secondhand. Some of them were...graphic, and I could see why it was strictly student sponsored. There was no way the school would approve of some of this if they had any say.\n\nAll of these stories affected people differently. Some feared what might be asked of them if they wanted to win, while others seemed ready to let loose and rise to the challenge. I wasn't sure which side I fell on, but either way I was in it to win it.\n\nFriday eventually arrived and it was time to put on our game faces. Abigail had taken some sweet pleasure in not letting us see our costumes until it was time to put them on. She claimed that she wanted it to be a surprise. The more she refused to let us see them, the more I worried about that sneaky smile she was always trying to hide. All she would say was she wanted us to be surprised, and a surprise it was.\n\nWe had seen some basic ideas of what our costumes would look like, but reality was a different thing all together.\n\nBesides Kennedy's Black widow costume being so skintight it precluded the option of underwear; it was about what I assumed it would be. It was all black with a plunging neckline, exposing her deep cleavage, and a utility belt. It was so realistic I could have sworn it was the exact costume that Scarlett Johansson wore for the movies.\n\nAbigail's costume was skintight as well, in yellow and green, reminiscent of the old X-Men comics, and it came complete with a short brown leather jacket and white hair extensions giving her the Rogue streak.\n\nBy the time they had both squeezed their tight little bodies into their outfits every delicious curve was on display. From what Abigail had shown us on her computer, I had expected theirs to be body suits, but nothing compared to what I was seeing before me. My costume, however, was not what I had envisioned at all. They gave me some privacy to dress, and when I opened the box, I didn't know whether to feel sexy or scared. Carefully placed inside was an expensive black corset with the Batman emblem over the bust, a small eye-mask, black thigh high boots, and the shortest skirt I had ever seen.\n\n\"Maybe it won't be that bad,\" I said aloud, trying to calm myself.\n\nMaking sure the door was locked, I undressed and began changing into my costume. My fake breasts jiggled as I removed my bra, and I immediately began slipping on the corset very carefully. Even before lacing it up it had a very snug fit that restricted my breathing. It covered my breast well and made them look great in the mirror. Next came the skirt. I slid it up my legs and into place, and I couldn't believe what Abigail had been thinking when she bought this for me. In the front, it barely covered my crotch, and in the back my ass cheeks were hanging out. I was lucky that my gaff kept me looking smooth down there, but if I got any kind of erection whatsoever, I would have a huge lump in my panties.\n\nI finished putting on the rest of the items, the black thigh high boots, the tiny black shorts that left my ass cheeks exposed, the mask, and a black cape that thankfully came down to mid-thigh. At least I would have some cover back there. The cape cleverly hooked to the top of the corset in front and rested on my shoulders.\n\n\"Are you done yet?\" Kennedy called through the door.\n\n\"Yeah, you're taking forever!\" Abigail chimed in.\n\n\"Just a second,\" I called back. After a scrutinizing look in the mirror, making sure nothing was out of place, or showing where it shouldn't be, I put on the small eye-mask and opened the door.\n\n\"Oh my God!\" Abigail exclaimed as she came into the room. \"You look so hot!\"\n\n\"Why did you have to buy a skirt this small?\" I whined playfully. \"I have belts that cover more!\"\n\n\"Because I knew you would look sexy in it,\" Abigail responded while she fussed with my hair and smoothed out the cape.\n\n\"You could definitely wear those boots with other outfits,\" Kennedy put in while she admired my costume.\n\n\"Screw the boots!\" I exclaimed, realizing that there was no way to avoid going out dressed like this. \"If I bend over wrong, someone will see my cervix!\" Kennedy snorted at this. Okay, so maybe I didn't actually have a cervix, but the idea was the same.\n\n\"That's why I had them make the cape a little longer,\" Abigail explained as she adjusted parts of my costume.\n\n\"I think you look great babe,\" Kennedy said, watching as Abigail continued her adjustments.\n\nWith Abigail continuing to touch parts of my costume, and Kennedy eyeing me like a piece of dessert, I began to feel ridiculously exposed. Sure, I had worn some short skirts and dresses before, but this was worse. I felt like a total slut. What made this worse, was I had some twisted part in my mind that always got turned on by the thought of being a slut. Before I knew it, I could feel my cock slowly beginning to grow.\n\n\"I umm...I think I should...Going to use the bathroom before we go,\" I stammered, fidgeting as I awkwardly made a quick exit in search of some much-needed privacy.\n\n\"We have to leave in about thirty minutes,\" Abigail called after me, while Kennedy's laughter echoed behind her.\n\nI got some looks as I made my way out of our dorm suite and down the hall for the bathroom. People watched as I went past, and it only made me feel more like the slutty little girl I was. I opened the bathroom to find it packed with women who were doing makeup while others were putting on the last finishing touches to their costumes.\n\nThere were just too many people. I quickly made a U-turn and kept walking down the hall. I was now holding my cape tight around me, desperate to hide the bulge I knew must be there. It was getting painful now. In a last-ditch effort, I turned into the showers to find them blessedly empty and made a dash for my favorite cubicle, locking the door behind me.\n\nAs soon as I was safe, I pulled down those little black panty-shorts, along with my underwear and gaff. The moment I pulled them away, my cock sprung free to bounce in front of me, and I quickly took my problem in hand.\n\nWith a little spit, I began stroking myself with a fury. I was such a dirty little girl, dressed so slutty in a skirt that didn't even cover my ass! Oh god, I was so horny. I came twice before I couldn't cum anymore. I couldn't stop thinking about how slutty people would think I was tonight. All of those guys who would be staring and wanting me. All of the girls that would be jealous, or possibly wanting me as well. It was just too much.\n\nIt was exhausting. I was panting as I carefully cleaned myself up and put myself away. I took special care to make sure my little secret was as smooth as any other girls before I was finally confident enough to head back to my room.\n\n\"What took you so long, Lexi?\" Abigail asked.\n\n\"Sorry, I was just...\" I began, trying to think of a quick excuse.\n\n\"It doesn't matter,\" Kennedy said, coming to my rescue. \"We've got to go.\"\n\nI mouthed a silent thank you to Kennedy when Abigail wasn't looking, and she mouthed 'was it good' while making a jerking motion with her hand. I couldn't help my blushes.\n\nAs we were leaving, we met up with our fourth for the night, Skylar. It appeared she had decided to go as a villain instead of joining our super heroine theme. Harley Quinn to be exact. The Suicide Squad version...well sort of. Her 'Daddies Lil Monster' t-shirt was cut so short a large portion of the bottom of her breasts were exposed. Dressed as she was, and her tiny body, her double D's looked even larger. She had on torn fishnets with those tiny red and blue shorts. Her makeup matched the gritty, Suicide Squad Harley to a T, as well as her red and blue stained long blonde pigtails.\n\n\"You ladies ready for some fun!\" Skylar asked in her creepiest Harley impression.\n\n\"Wow you look...\" I began.\n\n\"Elegant?\" she cut in, smiling manically. \"Sophisticated? Or maybe you were going to say, 'good enough to eat?'\" she said, making a biting motion towards me, continuing her creepy act, slipping an arm around my shoulders. \"Why, Bat Girl, they must have shrunk your suit at the dry cleaners!\"\n\n\"It was Abigail's idea,\" I tried.\n\n\"I'm sure it was, Beautiful,\" she said, not believing me.\n\n\"We have fifteen minutes to get there, the pussy play will have to wait, Harley,\" Kennedy said smiling. \"Let's get going.\"\n\nAs we were leaving, I could feel my heart racing in my chest and my hands trembling. I hadn't felt this sexy and scared since the first time my sister took me out in public while I was dressed as a woman. As we stepped outside, I said a silent prayer that I would make it through this night.\n\nTen minutes later, we were waiting in line to get into The Library. We were surrounded by all different kinds of costumes. Some people went for scary or realistic, but the majority of women were exploiting the excuse to be a little slutty...and in some cases, extremely slutty. Nurses, schoolgirls, policewomen, you name it and there was a slutty costume to fill that void. I had the naughty feeling that I was standing in line for some kind of kinky sex club. I was relieved to see that I wasn't even close to being the sluttiest dressed though.\n\nBefore long we were inside, and the place was packed. I had never seen The Library this full before and they must have been stretching the maximum capacity. We nudged our way into the waiting crowd and in no time, someone stepped onto the stage, microphone in hand, to address the mass of scantily clad women.\n\n\"Welcome ladies, to the sixty eighth annual Halloween Scavenger Hunt!\" The Student Union President said loudly. She was dressed as a character of the Hunger Games, and I immediately began to get a bad feeling. \"Our former sisters here at Mayweather began this tradition as a way to have a little fun, and rebel from the constraints of their era. It was a simple and innocent way to cut loose. Over the years it has changed. For one, it isn't as innocent as it was in their day,\" she said with a sly grin. \"Some of these tasks are not for the faint at heart. That being said, nothing in these envelopes is illegal...well it depends on how you accomplish said tasks, I guess. Another change from back in the day is you must get photographic proof of said accomplishment.\"\n\n\"Here on the stage are bundles of envelopes with your tasks. No two bundles have exactly the same lists, and your choice is completely random. Some are easier and others are harder. Each objective is worth five points, but some have opportunities for bonus points. Every bundle has the same potential points to make it fair.\"\n\n\"Now here's the catch. If you open an envelope and can't find the objective, you lose three points. If you don't get a picture, negative points. Also, all participants must be in the photo unless otherwise stated for points to be awarded, so no splitting up. The winner will be the team with the most points. Ties will be broken by the team who finishes first, and you must turn in your list by 3am.\"\n\n\"Now for the prize!\" she said. \"We have five-hundred and twenty-four participants. That's one-hundred and thirty-one teams, which brings our prize to just over ten-thousand dollars which our generous alumni, Marilyn Brooks, has pledged to match. That's twenty thousand dollars to the victors!\" she finished to a loud cheer from the crowd.\n\n\"Teams, pick your representatives, and claim your lists. And for those of you who think to be sneaky,\" she said with a smile, \"you cannot use a Mayweather student to complete any of these challenges.\"\n\nAt that announcement, I saw a few sour faces that thought to get an edge in the competition somehow.\n\n\"Let the sixty-eighth annual Scavenger Hunt begin! And may the odds be ever in your favor.\"\n\nWe quickly elected Kennedy to claim our list, and while some groups gathered to open their first envelope, or discuss their plan of action, we were already rushing to Kennedy's car.\n\n\"Where to?\" Kennedy asked as we clamored into the car.\n\n\"It doesn't matter,\" Skylar said. \"We need to get out of this parking lot. In a few minutes it's going to be a madhouse.\"\n\nKennedy slammed the car into gear and made a quick getaway while the rest of us made a plan. The race was on.\n\n\"Should we open our first envelope?\" Abigail asked in anticipation.\n\n\"Where should we go?\" Skylar piped in.\n\n\"I think we should open them all right now,\" I added, explaining. \"If we open them one at a time, we risk missing an objective later in the night that we could have easily completed earlier.\"\n\n\"What about losing points if we don't finish one?\" Abigail asked.\n\n\"We'll just have to not let that happen,\" I said firmly.\n\n\"I agree with Lexi. We should open them all right now and then decide where to go,\" Kennedy said, pulling off to the side of the road. \"Let's have them.\"\n\nKennedy handed each of us some envelopes and we tore into them. The ones I opened didn't seem that bad, but the other girls kept gasping and giggling over theirs. After all of the envelopes were opened, we had our list.\n\nTake a photo of the inside of a Men's Bathroom. All teammates. 5 points.\n\nPicture with police officer. All teammates. 5 points.\n\nSexy kiss with a slutty witch. One teammate. No Mayweather students. 5 points. No bonus.\n\nConvince a stranger to make a condom balloon. 5 points. No bonus.\n\nMolly Ringwald. Acquire woman's panties. Must have a picture of them wearing them for points. No Mayweather students. 5 points. No bonus.\n\nKeg stand or beer bong. 3 points each. 12 points max.\n\nPicture of a penis. One person needs to be in this picture. 5 points. +5 Bonus if you are touching it.\n\nFind at least one person dressed as Carmen San Diego, Waldo, or a Ninja Turtle. 5 points. Plus 2 points if you find more than one. No doubles.\n\nCharity. Give a guy a lap dance. 3 points each. 12 points max.\n\nWrite your names on a guy. All names must be on the same guy for points. 5 points. No bonus.\n\nI wasn't sure what I was expecting, but most of these weren't that bad. The way some of the upper classmen were talking, I was surprised we didn't have to blow anybody. Sure, someone had to take a picture with a penis, but that could be one of the other girls. Getting another girls underwear might be a challenge but kissing a slutty witch would be easy tonight, especially with all the drinking and sex in the air.\n\n\"That's some list,\" Abigail said dejectedly.\n\n\"This? I think we lucked out,\" Skylar said happily. \"We can get most of this done on Mill Ave. We should start there and then go to an ASU party when it gets later.\"\n\nFollowing Skylar's lead, Kennedy made her way to Mill Ave. Mill Avenue was famous for college kids. It was an entire street lined with bars and restaurants on both sides, packed with ASU students and people who wanted to party like ASU students. We could easily check off half of our list there.\n\n\"When we get there, we are on the buddy system. Nobody goes off on their own and nobody drinks anything that they do not see the bartender pour,\" Skylar instructed as Kennedy found a parking spot.\n\nI was sure Kennedy already knew about not drinking a questionable drink, but I was assuming that that little tid-bit was meant for Abigail; she could be so trusting. Most of our outings were at The Library, and being the designated hang out for Mayweather students, the staff looked out for us. The world wasn't always a nice place, and away from that safety and protection, we were on our own.\n\n\"I'll be our designated driver,\" Kennedy added, putting the car into park. \"It's 8:45pm. We have plenty of time to get these done.\"\n\n\"Okay girls!\" Skylar said with a wicked smile. \"It's time to slut up or shut up!\"\n\n*** *** ***\n\nWe got our picture with a cop right off the bat. There were several walking the sidewalks in preparation for a wild night of college partiers. All it took was a sweet smile from Kennedy, and he had his partner snapping a picture for us. The bathroom picture was easy as well. It was still early so we found the most empty bar we could, and casually slipped into the men's room and took a picture next to a urinal. It was a little embarrassing running into a guy coming in while we were leaving, but worth the blushes. Ten points as easy as that!\n\nWe hit a small lull after that. Sure, we had a lot of time to finish these objectives, but the downside to starting so early was the rest of the challenges required strangers, and there weren't that many out yet. It should have made it easier to do some of these things without a crowd, but without the crowd to get lost in, it made it too personal. I could see that the others felt the same.\n\n\"We need alcohol,\" Abigail said, leaning over the table we were sitting at in a nearly empty bar.\n\nI couldn't agree more. We flagged down a server, and in no time, we were sipping on drinks of delicious courage.\n\n\"What's up ladies?\" Kennedy asked. \"We only have two down and this is a race.\"\n\n\"I don't know if I can do some of these,\" Abigail protested.\n\n\"There are not enough people out, and I feel a little exposed,\" I said, embarrassed. I hoped she recognize my reluctance with some of these. I didn't think I could get myself to take a picture with a guy's penis, and I would need more alcohol if I was going to give some guy a lap dance.\n\nDancing close with a guy was one thing, you could call it an accident, or just dancing. A lap dance was just that. You couldn't call it anything else, and it was most certainly not an accident.\n\n\"Skylar, do you have a condom?\" Kennedy asked.\n\n\"Why are you asking me?\" she said, avoiding Kennedy's eyes.\n\n\"Because I know they don't,\" Kennedy answered, gesturing to Abigail and I.\n\nAfter a second, Skylar reached into the waist of her tiny red and blue shorts and pulled out a condom.\n\n\"Don't waste that one, I only have two left,\" Skylar said, holding out the golden square. She must have been anticipating a really good night if she brought three condoms!\n\nKennedy smiled as she snatched the condom, and confidently made her way to a nearby table with a couple of guys and sat down to talk to them. One of them was pretty good looking, but his companion was nothing special. Neither of them were in costume, just jeans and t-shirts.",
        "The two couldn't keep their eyes off of Kennedy, and I couldn't blame them. Her body looked amazing, and she was the perfect Black Widow. To tip the scales in her favor, it seemed Kennedy had pulled the zipper on her top down a few inches below her breast, making them virtual lodestones to their eyes.\n\nKennedy focused in on the okay looking one, and in no time, they were talking and laughing. We couldn't hear their conversation, but eventually Kennedy smiled and pulled out the condom. We were all surprised when he eagerly took the condom from her and opened it. Before we knew it, he was blowing it up with a fury.\n\n\"Holy shit that's huge!\" Skylar said as it got bigger and bigger.\n\nIt was impressive. It was almost two feet long and as big around as a basketball.\n\n\"Oh shit!\" I exclaimed, grabbing my phone. In our amazement that Kennedy had gotten this guy to do it, we forgot about the picture. I quickly snapped a couple from across the room, making sure to get both Kennedy and the guy in the frame.\n\nIn no time the guy blew himself out and was seriously out of breath. Kennedy gave him a consoling smile and a pat on the arm before getting up and coming back to our table.\n\n\"How the hell did you get him to do that so easily?\" I asked.\n\n\"Easy,\" Kennedy said, sitting down. \"I told him that we would all blow him if he could blow up that condom until it popped in under a minute.\"\n\n\"You what?\" Abigail said, shocked and a little outraged. I had to admit, I didn't like hearing that I had narrowly escaped having to give a stranger a blow job.\n\n\"Relax, it's impossible to blow one up that fast. He only got about halfway before the time was up,\" Kennedy explained. \"Those things can get to like four feet long.\"\n\n\"Fine, but let's not barter each other for sex. All right?\" Abigail said shifting around in her seat. It appeared she didn't like the thought of having possibly been required to suck on a strangers cock.\n\n\"Okay, no more. I promise,\" Kennedy said looking a little ashamed with herself. Less for me and Skylar, and more for Abigail I was sure. Their relationship was still new, and Abigail, despite her growing exploits with Kennedy, was still rather innocent.\n\n\"While you two kiss and make up, I think I just found my lap dance,\" Skylar announced, peering around me at a guy sitting in a cushioned chair in the corner with some friends. \"Get your camera ready.\"\n\n\"I need another drink,\" Abigail stated before walking over to the bar.\n\nWith Abigail occupied, and Skylar making her move on an objective, Kennedy moved in close and asked me a question.\n\n\"Can we just take a picture of your cock for the challenge?\" Kennedy whispered to me. \"We can just slip away and get it done really quick.\"\n\nIt sounded so easy, but the more I thought about it, the more I was scared. What if somebody happened across us while I had my cock out? What if part of my costume was in the picture and someone recognized it? I couldn't think of all of the things that could go wrong, but my mind was still screaming no.\n\n\"I don't think so,\" I said slowly. \"It would be cheating, and I really don't want someone to walk in on us and see...me.\"\n\n\"Come on! It would be so easy!\" Kennedy persisted.\n\nI could see the argument from her side, but I was still scared, and my nerves won out. \"Sorry Kennedy, but no.\"\n\nShe seemed a little upset by my response.\n\nBy the time Abigail returned with her new drink, Skylar was well on her way to checking off her lap dance. A nice slow beat had just started over the speakers, and she had casually sat down in the lap of a handsome Jack Sparrow. It looked like a nice conversation with him rubbing the bare skin of her back, courtesy of her tiny shirt. Very subtly she began to move her ass in the guy's lap until she was eventually fully grinding on his crotch. After developing a nice solid rhythm, she easily shifted her position so she was facing away from him, and sat between his spread legs. Her back was resting against his chest as she continued her gyrating motions. Skylar leaned her head back to whisper in his ear as she took both of his hands in hers. She placed them on her fishnet thighs, and slowly pulled them up, passing her short shorts and onto her smooth stomach, even letting his fingers brush the exposed undersides of her breasts.\n\nThe whole time, Kennedy was snapping away pictures until the song ended and Skylar eased herself off of Jack Sparrows lap. She gave him a sweet kiss on the cheek before violently grabbing his face and licking him from jaw to forehead. She was completely crazy! With a laugh, she blew him a kiss and skipped away.\n\n\"How was that?\" Skylar asked with a smile.\n\n\"See for yourself,\" Kennedy said, smiling. She held out the phone for Skylar to see. Apparently, she hadn't been taking pictures, but had videotaped the entire thing instead. When the video finally reached the end where she kissed and then licked this guy's face, she was laughing so hard.\n\n\"I look like a total nut job!\" she laughed. \"You have to send that to my phone!\"\n\nAfter Skylar's little dance things settled down for a bit. With Kennedy being our designated driver, the rest of us began to drink more heavily in anticipation for the night to really begin. Abigail seemed a little more withdrawn, almost like the old Abigail, and I was sure it had something to do with Kennedy. It seemed that she wasn't over the bet she made, and even though Kennedy had been adamant that it wasn't possible for someone to do it, she was upset at the idea of being wagered like that.\n\nAs we waited for the evening crowd to arrive, we made our way from bar to bar in an attempt to find likely candidates for our other objectives, as well as the elusive Waldo, Carmen San Diego, and Ninja Turtles. Together we had agreed that if we kept moving, we would increase our odds.\n\nIt was around 11pm before we tackled another challenge. We were at a place called El Hefe's when Abigail spotted our sexy witch on the dance floor. She was a tall stunning blonde, wearing a black hat and a dress with a lace up front and skirt that barely covered her ass.\n\n\"Dibs!\" Kennedy called immediately after Abigail pointed her out.\n\n\"Kennedy!\" Abigail said a little hurt. I knew that protective look on her face. I had seen it when Abigail had told me that I was the only person she wouldn't fight regarding Kennedy's affections. It seemed that, even while mad at Kennedy, she was still unwilling to let anyone else get their hands on what was hers.\n\n\"Don't worry baby, I'm just doing this for the team,\" Kennedy said, pulling Abigail close. \"You know I'm going home with you,\" she reassured her as she sweetly kissed Abigail's perfect pouty lips.\n\nI watched as Abigail's reluctance faded and she began to kiss back. Their arms wrapped around each other as their tongues dueled between their soft lips, their hands roaming over skintight clothing. Then out of nowhere Abigail squeezed Kennedy's ass causing a startled squeak to slip through Kennedy's lips. When they finally parted, Abigail had a huge grin and a faraway look in her eyes as she gazed back at Kennedy.\n\n\"Maybe you want to come and help me?\" Kennedy asked brushing her hair back.\n\nIgnoring Abigail's shy blushes, Kennedy pulled her along behind her. None of this really surprised me, this was classic Kennedy. She enjoyed pushing people's boundaries in and out of the bedroom, but always sexually.\n\n\"When did that start?\" Skylar asked surprised. \"Did I miss something?\"\n\n\"It happened a few weeks ago when we went to The Blacklist across town,\" I said smiling.\n\n\"Wow!\" Skylar exclaimed. \"But it's Abigail...I mean...Wow!\"\n\n\"Yeah. I know,\" I said watching Kennedy and Abigail make their approach to our slutty witch.\n\nThe slutty witch was dancing with a few guys when Kennedy pulled Abigail between them, and began dancing with the girl. It started innocent, but quickly progressed to something more. Kennedy moved closer, taking Abigail with her, and began rubbing their bodies against hers. Hands began to roam as their bodies slid against each other's and the guys were eating it up.\n\nJust inches away from our slutty witch, Kennedy pulled Abigail in for a sensual kiss, and when their lips finally parted, she pulled the witch in for one as well and I snapped my picture. When Kennedy broke it off, the witch surprised all of us by planting her lips on Abigail as well.\n\nShe had one hand gripped in Abigail's hair while the other moved over her body. I didn't know if it was the alcohol lowering her inhibitions, but after only a small resistance Abigail began to kiss her back, wrapping her arms around her. For several minutes, it was a sexy mess of roaming hands and grinding bodies while their tongues danced between their lips.\n\nI snapped a few more pictures...just for posterity I assure you. When the kiss finally ended, they danced for a brief moment longer before Kennedy pulled Abigail away and back toward us.\n\n\"Did you get it?\" Kennedy asked.\n\n\"Oh, we got it alright!\" Skylar said giving Kennedy a high five and Abigail a hug. \"I don't even go for girls, and that was still hot!\"\n\n\"Speaking of hot, I found my lap dance!\" Kennedy announced before walking away.\n\nI wasn't sure, but I had the feeling Kennedy was a little upset about Abigail's enthusiasm with our witch, and if her performance was any indication, I was right. Lacking any subtlety, she walked over to a crowd of guys, and without a word she grabbed her target and dragged him a few feet away to a chair and pushed him onto it.\n\nI must say, Kennedy giving a lap dance in a crowded bar was everything I expected and more. Like it was the most natural thing in the world, she plopped herself into his lap and proceeded to grind on him every which way for the next five minutes or so. By the end of it, there was a huge crowd gathered around her, chanting for the Black Widow, and Kennedy didn't disappoint them. Skylar, Abigail and I watched in amazement as Kennedy ate it up and worked her magic.\n\nThe downside to Kennedy's lap dance was the need to change venues. It seemed that every guy there thought he deserved the same treatment from her, or the rest of us. We did still need to tick a few more lap dances off of our list, but we all agreed, some of these guys were starting to creep us out with the way they were hovering around us, and if we stuck around we might be the unintentional cause of a riot.\n\nWe hopped through a few more bars and Abigail managed to take care of her own lap dance in a nice piano bar. She was drunkenly enthusiastic, and it seemed like she was trying to outdo Kennedy, but in reality, it was almost hard to watch. She might be a good dancer when she was upright, but it was hard not to giggle at her attempt.\n\nThere had been long stretches where we just danced, or sat at our table being hit on by a constant stream of guys, and it was during one of these breaks that Kennedy began to feed me drinks. I wasn't aware of what was doing, I was having a great time, and it seemed like my glass never quite managed to get empty.\n\n\"Lexi and I will be right back,\" Kennedy said loudly. \"Stick together.\"\n\n\"What?\" I asked a little drunkenly. \"Where are we going?\"\n\nKennedy hauled me to my feet and pulled me along behind her. Once we rounded a corner, Kennedy turned to me and her smiling attitude changed.\n\n\"You, Missy, are being a big pussy!\" she said jabbing her finger between my breasts. \"You haven't even been trying to help out with the challenges! Hell, even Abigail has done more. I never would have thought you of all people would be chickening out like this. You need to find some big girl panties and start taking some for the team,\" she said firmly.\n\nI had been nervous about some of the things we had to do, but being caught up in the fun of watching, I hadn't really realized how much I was letting everyone down.\n\n\"I'm so sorry!\" I said, almost tearing up. \"I'm just so scared. I mean I'm not...I'm...I have a...and...I'm not a real girl,\" I finished, feeling the tears in my eyes.\n\n\"Fuck that!\" Kennedy said, slapping me. \"The hell you aren't. Just look at yourself for fucks sake. If you're not a girl, I don't know who is. Sure, you have a little extra,\" Kennedy said smiling now, \"but that doesn't mean you're not a woman.\"\n\n\"How am I going to give a guy a lap dance?\" I asked. \"I don't even know how. What if he feels my...you know...And touch a penis? I...\" I began swallowing hard, thinking about another challenge that was still waiting to be completed.\n\nThis was something I had been fighting for a while. I loved how sexy and desirable I felt as a woman. I loved the attention I received from guys, and I couldn't help but flirt with the cute ones. I even enjoyed dancing with them and the close touching. And Danny...I had Kissed Danny. A guy. And I loved the way I felt in his arms with his hands roaming my body. I even enjoyed the feeling of his hard cock pressed against my ass and stomach.\n\nIt had happened. I still thought about it, but at the same time I had been ignoring something. I had a penis. As much as I felt like a woman as Lexi, I was still hiding, even if it felt more true to myself to be like this. I had been drawing invisible lines of what I could and couldn't do. Even though I felt like a woman, deep down somewhere I was still thinking like Alex. I was still thinking like the homophobic virgin, effeminate-looking teenage boy.\n\n\"What's so wrong with touching a penis?\" Kennedy asked. \"I've touched yours many times. Hell, you have more experience with a penis than Abigail, Skylar and I put together.\"\n\n\"It's not the same,\" I protested.\n\n\"How so? It's a penis. You've touched one every day of your life. I'm pretty sure you've given it more hand jobs than you can count,\" Kennedy said. \"And don't give me any of that gay shit either. You're a lady. Cock handling is your business!\"\n\nI couldn't hold it in any longer. The damn broke and the tears flew free. Kennedy pulled me into her arms and held me as I let it all out. I couldn't control myself as I cried into her shoulder. I won't go into the specifics, but it wasn't pretty. It was however what I needed.\n\nI had been so conflicted about this for so long. I still didn't really know if I was gay, but I had been so worried about it, and feeling guilty about the thoughts I'd been having. Here Kennedy was saying that it was all right. She was someone I admired and looked up to, and it meant so much hearing it from her.\n\nMy sister Audrey had told me once that I might have a bi side, and that it would be okay if I did. It felt like so long ago, and even though I still remember the sincerity on her face when she said it, it wasn't the same as having Kennedy in front of me saying that it was okay. When my sister had told me, it was at a time when I was confused and in firm denial. Part of me wished she was still around to help me navigate through this new world, but I was glad that I had Kennedy with me in her place.\n\n\"Shh, it's okay Sweety. Everything's okay,\" Kennedy whispered to me as she stroked my hair. \"You're okay.\"\n\nWhen my tears finally subsided Kennedy just held me until I had settled down.\n\n\"Now that we got that out of the way. I guess I understand you not wanting some guy to feel you rubbing your lady bits on him, but next time talk to me about it. When we get back to the table you are going to sit in my lap, and we'll do a little test run,\" Kennedy said, fixing my hair. \"And if all goes well, you should be able to give some lucky guy a pretty nice lap dance that he won't soon forget.\"\n\n\"Now, you need to clean yourself up,\" Kennedy said. \"No one wants to get a lap dance from a girl that's been crying.\"\n\nAfter another big hug, Kennedy and I went to the lady's room to freshen ourselves up. Well, mostly just for me to freshen up. I washed away my tears and reapplied my makeup, and made sure my hair was in order before donning my cute eye-mask and returning to our table with Kennedy. At that moment I was thankful for my mask. It hid the redness around my eyes so my friends wouldn't see how much of a wreck I had been.\n\nWe made it back to our table with a fresh round of drinks waiting for us. Kennedy sat down in her spot by the wall and gently pulled me into her lap.\n\n\"Our little Lexi's been worried all night because she doesn't know how to give a lap dance,\" Kennedy explained to our cheery group.\n\n\"Really?\" Skylar asked. \"I would have thought you would be a pro at them. Not that you're a slut. You're hot,\" she said rather quickly, beginning to ramble. \"Haven't you ever been grinding up against some guy while you were making out?\"\n\n\"I kind of hadn't done anything until I came here,\" I explained.\n\nIt was true. I was still a hopeless virgin until my sister drove down with me to send me off to college. Sure, I did have that one memorable time with Tiffany Scott, but I was on the receiving end of the grinding, and there was a difference between seeing something done, and knowing how to do it yourself.\n\n\"What about that friend of yours that helped you move into the dorm in the beginning of the year?\" Abigail asked.\n\n\"She was my first,\" I said, avoiding eye contact. I could feel the blood rushing to my cheeks and at that moment I was wishing I had a larger mask. Two out of three people at this table didn't know that 'Dreya' was my sister, but I couldn't help but realize that I still just told them that I lost my virginity to my sister.\n\n\"She was very pretty,\" Abigail mused.\n\n\"Did any of you think she looked familiar?\" Skylar asked. \"I kept thinking I'd seen her somewhere before?\"\n\nKennedy suddenly burst out laughing.\n\n\"Oh, that tickles!\" she squealed, quickly covering herself. When she calmed down, she grabbed my hips and slowly began to move them.\n\n\"Just follow my lead,\" Kennedy said into my ear. \"That's it. Arch your back and stick your butt out. Now keep your body still and rock your hips forward in a rolling motion,\" she instructed.\n\nI continued to let Kennedy's hands guide me as my friends watched on. It was a little awkward at first, but I seemed to quickly get the hang of it as Kennedy moved on to instructing me in a gyrating technique that she claimed men loved.\n\n\"This is so hot,\" Abigail said as she stared on in a trance.\n\nI didn't know how long I had been sitting on Kennedy's lap. I had really gotten into it and was enjoying the feeling and the rhythm. While I was still lost in the moment Kennedy broke the spell, whispering into my ear. \"I think that should be enough practice for now doll. I couldn't feel anything but that beautiful ass on me. You should be okay, as long as you don't get too excited.\"\n\nAs much as I enjoyed it, Kennedy was right, it was enough practice for now. With a quiet sigh, I eased myself off Kennedy and sat down in my own seat. It was nice to have had a little closeness with Kennedy again, but before I could reminisce, we were interrupted by a man that must have been carved by Michelangelo himself.\n\n\"Hi, I'm Tarzan,\" said the beautifully sculpted man in a tattered loin cloth. \"That was truly breathtaking.\"\n\n\"I'm sorry Tarzan, but she's not Jane,\" Abigail said in a sweet voice dripping with sarcasm.\n\n\"Hold on a second,\" I chided Abigail. I was still pretty buzzed, and after giving Kennedy that lap dance I was still running on my endorphin high. \"Hello Tarzan, I'm Bat Girl, and these are my friends, Black Widow, Harley Quinn, and Rogue.\"\n\n\"It is a pleasure to meet you ladies,\" he said, taking my hand to shake it. \"Could I get you guys some drinks?\"\n\n\"How about you just sit with us?\" I asked.\n\nI had been letting down our team, whether anyone else but Kennedy knew it or not. It was time to start checking off some boxes, and god help me I was going big or going home.\n\nNo one knew what was about to happen, but I did. I offered him the empty seat next to mine and he quickly sat down with us. Tarzan was really Greg, who was in his third year at ASU, pursuing a degree in political science...if you could believe anything you hear from a guy in a bar. The only thing I believed so far was the fact that he worked as a personal trainer. He was incredibly fit. Shirtless as he was, and only wearing a tattered brown loin cloth, I could see every muscle he had, and they were remarkable...Well, maybe not every muscle.",
        "\"And then he said, 'What about the swordfish?'\" Tarzan finished, receiving loud laughs from all of us.\n\nThe conversation was nice, but I was beginning to get more and more nervous the longer I waited. With great effort, I stilled my shaking hands and placed one on his muscled arm.\n\n\"These are nice,\" I said, running my hands over the smooth curves and firm ridges. \"You don't mind, do you?\" I asked, holding his blue eyes with mine.\n\nHe smiled at me, giving his assent, and I let my hand roam further. I was already sitting very close, so with little effort I let my hand slip from his arm to his chest. It was a delicate touch, and I was sure he could feel the sensual nature behind it. I brushed his nipple with my fingers before pausing to give it a playful squeeze.\n\nMy heart was hammering into my rib cage, and my tightened corset was causing my breath to come short. Still staring into his eyes, I moved my hand down his rock-hard abs, feeling the rise and fall of each hard muscle until my fingertips brushed the rough fabric of his loin cloth.\n\nI could see him swallow hard. I traced my fingers along the cloth until I reached the tie at his waist and then I made my way down his thigh.\n\nI couldn't tell if the table had just gone quiet, or if my mind was so overloaded that I could no longer process sound. His flesh felt so warm under my touch. As I slid my hand back up, I let my fingers dip to the inside of his leg, where they eventually disappeared under his cloth. As soon as my hand disappeared from view, I slowed my progress, moving inch by inch. I wanted to do this, but I couldn't deny that I was still scared.\n\nWe both jumped a little when my fingers made contact, and Tarzan jerked his head away to see if anyone noticed what was happening. All the girls at our table knew exactly what was going on, but as for the rest of the club, they were completely oblivious.\n\nI had been expecting to feel warm flesh under my fingers, but instead I felt soft fabric. It seemed our Tarzan wasn't as authentic as he appeared. Still, I was not to be deterred. I found the waist of the underwear he was wearing and gently tugged them down.\n\nTarzan eased off his seat as I slipped them off of him, and I hid his brown banana hammock in between my thigh and chair. With his underwear gone, there was an obvious tent in his loin cloth, lifting it a few inches off of his lap.\n\nI edged my chair even closer and placed my hand back on his thigh and smiled. This time, when I slid my hand underneath, I met no obstruction. As I made my way closer to his crotch, I felt his hardened shaft brush against the back of my hand, causing a quick intake of breath that was echoed by my Tarzan.\n\nStill a little timid, I gently traced his length with my fingertips, feeling his silky soft flesh combined with the firmness of iron underneath. I made the trip up and down twice before I concurred that he was definitely larger than I was. He must have been at least nine inches.\n\nI licked my lips nervously, and then eased my hand around his shaft. It felt so strong in my hand. So firm. I had felt my own, but it wasn't anywhere near the same when it was someone else's. It felt so hot to my touch, and I could feel the blood pulsing into it. I gave it a little squeeze and it jumped in my hand giving me a shock.\n\nGiggling at my foolishness, I resumed my work. With his cock firmly in my hand, I began to stroke him in a slow deliberate motion. I knew what I liked, and I made sure to put all of that into my efforts.\n\nI could feel Tarzan twitching under my ministrations, fighting back the urge to thrust himself faster into my fist. I began to pump him harder, adding a cork-screw motion, and before long, his eyes were closed tight, begging for his release.\n\nAs I continued to pleasure his shaft, I felt his hand on my thigh, slowly inching its way higher and higher. The feel of his rough strong hands on my soft skin felt exhilarating. I desperately wanted him to go higher, but in a panic, I stopped his hand with my own, holding it in place just inches from my panties.\n\nI could see Kennedy sitting on the other side of him, smiling widely at me with her phone in her hand. Remembering why I was doing this, I angled his cock up more, letting the loin cloth fall away to expose him.\n\nStill holding his hand firmly against my thigh, I leaned in close resting my head on his bare muscled chest. I could feel him begin to swell in my hand, and I began to stroke faster. His strong hand gripped my thigh tighter, causing his fingers to dig into my smooth, toned flesh.\n\nI knew he was going to cum, and my mind was screaming for him to do it for me. My body felt possessed, I flicked my tongue out across his nipple and sucked it into my mouth. As if that was the cue he had been waiting for, Tarzan grunted like the wild beast he was, and I felt his cock erupt in my hand. With every throbbing pulse, cum sprayed out, arching up and onto the table in front of us.\n\nThere was a single solitary moment of silence as his orgasm ended, and we both attempted to catch our breath. Everyone around the table was staring at me, and then the last thing I expected happened, they cheered. My teammates let out a raucous shout of victory for my accomplishment.\n\nSeeing the semen on the table in front of me, and all of my girlfriends excited about what I had just done, I began to feel nervous again. I smiled awkwardly as I blushed like a fury. Knowing they had watched the whole thing, me jerking off a complete stranger in public, was making me even hornier than I had been while I was doing it.\n\nWhen I had his cock in my hand it felt amazing, but I was still a little in shock that I was actually doing it. Now that it was done, it all came flooding back to me and I couldn't stop the erection that was growing under my dangerously short skirt.\n\n\"Excuse me, I'm just going to wash up really quick,\" I told Tarzan and my friends. \"I'll be right back.\"\n\nI most definitely was not going to be right back. I slid off my chair, and making sure my cape covered my backside, and any bulge I might have in my panties, I rushed to the women's room. There was a small line, but to the protests of the women standing in it, I skipped to the front. My need was greater than theirs. You could always hold it just a little bit longer, you could not stop a painful erection. It seemed like the more pain they endured, the more they demanded to grow and break free from their captivity.\n\nI quickly shut the door to the stall and freed my torment. With my cock firmly in hand, I stroked myself furiously, replaying the sight and feel of my hand around Tarzan's huge cock. I could still feel his brutish hand on my thigh, sliding slowly up to touch me, and then gripping me painfully as he came by my hand. In no time, I was shooting my load onto the dirty bathroom floor with a gasp of relief.\n\nI leaned against the wall as I caught my breath and texted my friends to meet me outside while my cock shrank back to a more manageable size. I didn't know how to go back to that table and have a nice conversation with some strange guy I had just jerked off, and the good news was I didn't have to. Besides, we still had more challenges to get through.\n\n\"I can't believe you just did that!\" Abigail squealed as I met them outside.\n\n\"I'm so proud of you,\" Kennedy whispered as she gave me a big hug.\n\n\"Thank you!\" I whispered back. \"It means so much that your here to support me.\"\n\n\"Speaking of support...\" Kennedy said, reaching into a pouch on her utility belt. \"I thought you might like these.\" She was holding up what looked to be Tarzan's thong.\n\n\"How did you get those?\" I asked, surprised.\n\n\"They fell on the floor when you went to go wash up,\" she explained. \"Just think, Tarzan is going to spend the rest of the night with his junk swinging away under that cloth,\" she said, causing gales of laughter as we took in the image.\n\n\"You are so cruel!\" Abigail exclaimed, shaking her head.\n\n\"Hey, life's all about balance,\" Kennedy explained. \"He got a great hand job from a hot girl, and then he went and lost his Pickle Pouch. See? Balance.\"\n\n\"You guys are some hardcore bitches!\" Skylar said, giving us high fives.\n\nAfter that, the rest of the night felt like a breeze. We found our way to a couple of frat parties where we ticked off all of our beer bong challenges, and managed to write our names on a guy that was passed out in a lounge chair by a pool. With my new confidence, I even managed my lap dance. I didn't do as well as Kennedy, but it was good enough for the points. Carmen San Diego and Waldo were elusive as ever, but we did find all four ninja turtles which started a heated debate about if each turtle was worth its own points.\n\n\"It just says Ninja Turtle,\" Abigail explained. \"No doubles. We'll only get credit for one.\"\n\n\"They're not doubles, they are each a different turtle,\" Skylar protested for the fifth time. \"That one's Donatello, that's Rafael, and Leo and Mikey are over by the barbecue. See, different turtles... No doubles.\"\n\nI had stepped out of this argument almost ten minutes ago. I was still pretty drunk, but I wasn't so drunk that I needed to argue about Ninja Turtles drunk. Personally, I was more interested in what Kennedy was up to. We only had one challenge left, and an hour to get back to The Library to turn them in, and it seemed like Kennedy was getting ready to close.\n\nAbigail's mood had been all over the place tonight. She was happy go lucky one minute, and hurt or upset the next. I was beginning to think we had let her have too much alcohol, along with too much stimulus, to be honest. She would get happy or upset at the slightest provocation. Her arguing with Skylar was actually a blessing because we were at the Molly Ringwald challenge, and in her state, she didn't need to see this.\n\nWe all knew that Kennedy was the panty whisperer, and this challenge was hers from the beginning. She had kept putting it off because she didn't want to upset Abigail. They had their relationship, and it was a good one, but right now Abigail would not be able to comprehend that Kennedy was just doing this for the team, and just because she enjoyed doing it as well, didn't mean that Kennedy would have done it otherwise.\n\nSo, while Skylar and Abigail discussed the exact wording of a challenge that we had already completed, I watched on as Kennedy pulled out all of her moves on a slutty Red Riding Hood. Kennedy had her pressed up against the wall on a deserted side of the frat house, kissing her neck while running her hands through her long black hair. Red's hands were being blocked by Kennedy's body, but I could only guess that they were rubbing furiously over the crotch of her Black Widow body suit.\n\nAs if they were completely alone, Kennedy reached underneath Red's skirt and slowly peeled down her panties. Already ready and waiting, I snapped a few pictures of them both, making sure to catch the tiny black G-string while it was still around Red's thighs.\n\nKennedy reached back underneath Red's skirt and went to work as she continued kissing her. I watched the short but quick movements of her forearm in fascination. While Kennedy strummed her pussy, Red kicked off her panties and hooked a leg around Kennedy, pulling her closer.\n\n\"But there not the same Turtle!\" I heard Skylar yelling again.\n\nAfter a few more minutes of Kennedy's fingers, Red pushed her off gasping for breath. Eager for more, she grabbed Kennedy's hand and led her back into the frat house, presumably to a more private or comfortable location. As they rounded the corner, I stealthily moved in, worthy of the dark night himself, and retrieved our prize.\n\nI wadded them up and tucked them into my cleavage before whipping out my phone to shoot a text to Kennedy.\n\n~I GOT THEM!~\n\n\"Okay ladies,\" I said, wrapping my cape around Skylar, who was now shivering from her severe lack of clothing. \"It's time to go turn in our list before it's too late.\"\n\n\"T-t-thank y-y-ou,\" Skylar said rubbing her shoulders. Her skin was pebbled with goosebumps, and her nipples were pressing hard into the shirt fabric that was stretched tight across her breasts.\n\nShe really hadn't planned this whole costume thing out that well. I was basically wearing a corset and booty shorts, as far as my tiny skirt was concerned, and she was wearing less than I was. Phoenix might have been a desert, but it could get a little chilly at night, especially when you compared it to the near hundred-degree weather we were suffering through a few weeks ago.\n\n\"Come on, Abigail,\" I said, holding her hand. \"Let's all go and get warmed up. I bet we have hot coco at the dorm.\"\n\nBy the time I got them out to the car, Kennedy was waiting for us with the heater already running. Still huddling together for warmth, the three of us clamored into the back seat together and Kennedy began to drive us back.\n\n\"Did we get all of them done?\" Abigail asked, breaking the silence of the ride.\n\n\"We didn't get Carmen San Diego or Waldo,\" Kennedy said, keeping her eyes on the road.\n\n\"But we did get all four Ninja Turtles,\" Skylar piped in.\n\n\"We only get credit for one of them!\" Abigail insisted.\n\n\"Enough about the damn Turtles!\" Kennedy and I said in unison.\n\nWe made it to the Library with twenty minutes to spare. Abigail and Skylar were down for the count in the back seat, leaving Kennedy and I to turn in our envelopes and pictures, along with a pair of black panties that were still slightly damp.\n\n\"So, what did you do with Red Riding Hood?\" I asked Kennedy while I had her away from Abigail.\n\n\"She took me up to a room and I told her I was going to grab us a couple drinks and be right back,\" Kennedy replied.\n\n\"Poor girl,\" I sighed.\n\n\"She was pretty, she'll be okay,\" Kennedy smiled.\n\nAfter talking with one of the officials, we in fact did not receive extra points for each extra ninja turtle. They apologized for the unclear wording of the challenge, but in our case it didn't really matter. We had claimed Sixty-Nine points and held a twenty-point lead on everyone else that had turned theirs in so far. Unless someone showed up in the next twenty minutes who had completed all of their objectives, and managed to find Carmen San Diego or Waldo, then we would be the winners. Apparently, everyone received that particular envelope.\n\nKennedy and I wanted to stick around to see if anyone turned up, but the other girls were still drunk and passed out in the car. Kennedy drove us all back to Evens Hall, and it took some doing, but we managed to get Skylar and Abigail both back to the dorm and tucked warm in their beds.\n\n\"That was a lot of work,\" Kennedy said, collapsing onto the couch next to me after she tucked in Abigail.\n\n\"Tell me about it,\" I sighed tiredly. \"Next year we should really pace our drinking if we do this again.\"\n\n\"Are you talking about the drunk wonder twins?\" Kennedy asked, \"Because I was talking about that hand job. You sure your arms not tired from all that stroking?\" she asked, making a jerking motion with her hand, and causing my cheeks to burn with embarrassment. \"You do remember that you only needed to touch it for the extra points, right? We didn't need a semen sample.\"\n\nJust when I was wishing that I could melt from embarrassment, Kennedy leaned in and kissed me on the side of the forehead.\n\n\"I'm so proud of you,\" she said pulling me into a hug.\n\n\"I love you!\" I said feeling tears in my eyes as my heart lifted from her words and embrace.\n\n\"I love you to, Sweety.\" "
    ],
    "authorname": "Son_of_Battles",
    "tags": [
        "lexi",
        "abigail",
        "kennedy",
        "halloween",
        "costume",
        "cock",
        "slutty",
        "college",
        "crossdressing",
        "public"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/womens-studies-ch-05"
}