{
    "title": "Dawn over Sun Valley Ch. 08",
    "pages": [
        "Author's note: \n\nIt is 23:54 on November 30<sup>th</sup>, and I just wrote 'The End' for this story. 11K words on this chapter, 71K words total in 30 days, and most of them not complete drivel! I am officially stoked. \n\nSo, what can you expect in this chapter? Well, lots of twists and turns, but, eventually, Joe will manage to do *something* right. I promise. \n\nAre you ready, y'all? Let's do thiiiiiiiiissssss!! \n\n***** \n\n\"How are you feeling this morning, Leanne? Still in pain?\" \n\nYes, but not the kind your pills would help with, Leanne thought. \"No, no real pain. More like mild discomfort, really. I think I'm good, honest.\" \n\n\"Let's check, shall we?\" \n\nDr. Lewis proceeded to check on her wound, sounding content to see that it was starting to heal, and then asked her to sit on the side of the bed. He had her follow his light with her eyes, do some simple math calculations in her head, and checked her reflexes. Then he asked her to stand up, and checked her balance and space orientation through a series of peculiar tests. She managed everything with no issues save for minimal dizziness. \n\n\"From the neurological angle you're fine, Leanne. Have a seat, and let's give you a quick physical, okay?\" Leanne did, and Dr. Lewis continued. \"Joe mentioned you haven't been feeling well lately; could you tell me more about that?\" \n\n\"Um, there's not much to tell, really.\" \n\n\"Hmm. Any problems sleeping? Changes in eating? Feeling sick?\" He asked matter-of-factly, while looking into her ears and her throat for signs of infection. It was strange, being checked over like that. Leanne couldn't remember the last time she'd been seen by a doctor. She tried not to flinch at the unfamiliar sensations. \n\n\"I've been under some stress so that may had something to do with it.\" \n\n\"Hmm. And how did it manifest itself?\" \n\n\"I - haven't been sleeping great, that's true. And I think I may have had a virus in my guts; I did have some spells of nausea.\" \n\n\"Any diarrhea? Vomiting?\" The doctor fit his stethoscope to his ears, pulling her shirt up her back so that he could place the scope in different spots. \n\n\"No. None.\" She said, and then at his indication, took deep, steady breaths. Dr. Lewis spent a few moments listening through her back, and then moved to her front, although he made sure to keep her covered, for which Leanne was grateful. \n\n\"Okay. So far so good. Let's have a feel for your internal organs real quick, shall we? Lie down on your back again for me, please.\" \n\nLeanne lay down and pulled her top up to her breasts, and Dr. Lewis tugged her pants slightly down to her hipbones, and then started pressing at different points, deeper than she had anticipated, starting from the top, just under her ribs, and moving methodically down. \n\n\"Tell me if anything hurts or feels uncomfortable, okay?\" He said even as he kept going, already around her midriff. \n\n\"Um, okay. So far so good.\" \n\nWhen he got to her lower abdomen he paused and then pressed again, going at it from different angles, looking up to her face as if expecting to see something there. \n\n\"Something wrong, doctor?\" She asked nervously \n\nInstead of answering, he rearranged her pants for her, and indicated she could straighten her shirt. While she did, he turned to pull the ottoman from its corner and sat down next to the bed so that they were more or less at eye level. \n\n\"Can you tell me when was your last period?\" \n\nLeanne thought back, and then shrugged. \"I honestly can't remember. I've never really kept track of it.\" She did briefly, when Joe and her were together, but once they'd broken up it didn't really matter. \n\n\"Okay. Can you try and pinpoint the last time you positively remember having had your period?\" \n\n\"Um... in the summer. I can remember having it twice during the high season, so both in July and in August.\" \n\nShe wasn't bleeding on Labor Day, she remembered. The next moment, her stomach dropped. Shit, shit, SHIT. He didn't use a condom. Her pulse kicked and her hands shook as adrenaline shot into her bloodstream. No. This can't be - \n\n\"From your expression, you know where I'm going with these questions.\" Dr. Lewis said quietly, and Leanne braved a look into his eyes. There was no judgment in them, only compassion, and she felt her throat constrict with sudden tears. \n\n\"It was only that one time we didn't use protection.\" She whispered. Dr. Lewis repled gently. \n\n\"Sometimes that's all it takes.\" \n\n\"No... God. This can't - I can't be pregnant. I can't be. Please.\" \n\nHis pressed his lips, and gave her a level look. \"While this isn't one-hundred-percent proof, your uterus is enlarged, and in my estimate the size fits about eight weeks gestation, which correlates with the last time you remember getting your period, and with the time you had unprotected sex.\" \n\nShe stared at him, her mind trying to catch up with the implications of his words. Dr. Lewis patted her hand. \n\n\"I can see this is a shock. The good news is, you're young and healthy, and it is still very early pregnancy. There's time to think this through and make plans. I understand you and Joe hadn't planned this, but -\" \n\nAt her gasp he stopped, and then grinned knowingly. \"Come on. I may be old, but I'm not blind, you know. I've seen the way he looks at you. And he did insist to bring you here.\" Dr. Lewis gestured around them; at the rumpled bed, which indicated more than one person had slept in it the night before. Leanne blushed red, and the older man sobered. \n\n\"I've known Joe since the day I helped his mother bring him into this world, Leanne. He's a good man, and he'll do right by you.\" \n\nHer tears, so close to the surface ever since last night, spilled again. She tried several times before she managed to whimper - \"It's more complicated than that.\" \n\nDr. Lewis's face grew serious. \"It usually is. And there are other options, too, obviously. All I'm saying is, there's time to make these decisions, and it's best to make them together with the father.\" \n\nLeanne swallowed hard. \"Are you - are you going to tell him about - about this?\" \n\nDr. Lewis gave her a long, hard look, and then spoke grudgingly. \"I'm not allowed to discuss the specifics of your condition with anyone without your consent, Leanne. All I am going to tell him is if and when you will be fit to work again.\" \n\nShe breathed her relief. \"Thank you.\" \n\nDr. Lewis shook his head as he got to his feet. \"Look -\" he sighed. \"As your doctor, I am obligated to confidentiality, and I will abide by it. But as an old man who had seen a thing or two in his lifetime, I will say this: sometimes, life calls for a leap of faith. Do the right thing, and trust that he'd do the same.\" \n\nLeanne sniffled, and wiped her tears impatiently. \"I'll think about it.\" \n\nDr. Lewis nodded, and patted her hand once more. \"You do that. I'll be on my way. I'll call to see how you're doing in a few days.\" He turned to leave, and then paused. \"In any event, you should schedule an appointment with an OB/Gyn as soon as possible, just to verify everything is normal - listen to the baby's heartbeat, and make sure the pregnancy is located in-utero.\" \n\nLeanne looked at him, wide-eyed. Listen to the baby's heartbeat? The concept was surreal. Her head started pounding from her mile-a-minute thoughts running around in it. \n\n\"Oh - okay, yeah. I'll do that.\" \n\nWith a nod, Dr. Lewis turned and descended the stairs, leaving her feeling lightheaded and dizzy. \n\nShe was pregnant with Joe's baby. Dear God. What was she going to do? \n\n* \n\n\"What's wrong with her?\" \n\nJoe's lungs felt constricted when he saw Dr. Lewis's dark expression. The older man looked startled and then schooled his features and answered in measured tones. \n\n\"She is recovering well, Joe. Have her keep it light for a few days longer; I wouldn't want her straining herself too soon. Let's keep her away from the fields for the time being, and no heavy lifting; I'll check on her again next week and we can re-evaluate.\" \n\nJoe blew the air he'd been holding. \"So, 'keep it light' - is that full bed rest, or simply off work for a few more days?\" \n\nDr. Lewis shook his head. \"No, no need for bed rest. In fact, it would do her good to get up and walk around. But, yeah, no farm work for now.\" \n\nJoe nodded. \"Okay. Thank you very much, doctor.\" \n\n\"Of course. That's what I'm here for. You take care, Joe.\" \n\nJoe walked the older man to the door, and held it open for him. \"Thanks again. I'll see you soon.\" \n\nWith a wave of his hand, Dr. Lewis was gone. Joe closed the door behind him, and then turned and climbed up the stairs two at a time. But when he saw Leanne, he paused. She was sitting on the ottoman, putting on her work boots, and crying. \n\n\"What's wrong?\" \n\nLeanne shrugged and wiped her eyes impatiently. \"I need to get to my room. Pack up my things.\" \n\n\"What?! What the heck are you talking about?!\" \n\nShe looked desperate. \"Please, Joe. I can't do this.\" \n\n\"Do what, Leanne? Rest? Heal?\" He knew he sounded angry, but he couldn't help himself. She fainted yesterday. She still wasn't well. She can't be serious. \n\n\"I can't prolong this - this breakup between us. I won't survive a week-long goodbye. I - I need to go.\" \n\n\"How, Leanne? Where to? Who's going to take care of you until you're fully recovered? You can't be on your own yet. That's irresponsible.\" He was probably exaggerating. He stood by it, anyway. \n\nLeanne gave him a 'come on' look, but then answered. \"I'll be at Elaine's. My friend in Sacramento. I won't be alone.\" \n\nJoe breathed deep. He knew that name. She was listed as 'next of kin'. \"Alright, and then what?\" \n\n\"And then I'll find another job, and another place to live.\" Her tone softened. \"I'm a big girl, Joe. I'll be fine.\" \n\nHe stood there helplessly, and watched her finish lacing and tying up her boots, and then stand up and square her shoulders, clearly ready to butt heads with him some more. He stifled a curse. \n\n\"How will you get to Sacramento?\" \n\n\"I'll hitch a ride to Santa Rosa, and then take the Greyhound. It's a little less than four hours ride.\" \n\n\"Are you sure you're well enough for that? Can't you wait until tomorrow, or the next day?\" It wasn't going to change anything, he knew. But dammit, he didn't want to see her go. \n\nLeanne shook her head miserably. \"It'll only hurt more, Joe.\" \n\nJoe exhaled heavily, finally acknowledging defeat. \"Okay. Let's go get you packed, and then swing by Tammy's office to handle the administrative stuff. I'll take you to Santa Rosa this afternoon, and make sure you get to the bus station on time.\"  \n\nHer eyes swam with tears, but she gave him a brave smile. \n\n\"Yeah. Let's do this, cowboy.\" \n\n* \n\nThey stepped outside into the bright sunlight, and walked hand-in-hand, crossing the large gravel courtyard toward the dorms. Leanne looked down at herself. \n\n\"I look like I'd escaped the asylum with this pink princess pajama and work boots combo.\" \n\nJoe stopped and looked at her. \"I think this outfit suits you.\" \n\n\"Yeah? You dig the crazy look on me?\" She joked self-consciously, and he shook his head. \n\n\"You are a hard-working princess, Leanne. I love that about you.\" \n\nShe gulped hard, and quickened her steps. She needed to get out of there as soon as possible. \n\n* \n\nAt her dorm room, she grabbed a set of clothes and went into the bathroom to change. Two minutes later she was out and pulling her backpack from under the bed, and five minutes after that all her worldly possessions were inside, and she was ready to go. \n\nJoe took her bag and reached for her hand as they walked back across the courtyard to Tammy's office. She looked up and frowned when they came in, but then gestured for Leanne to sit. Joe remained standing, leaning against the wall at her side, since there was no other chair in the tiny space. \n\n\"You're leaving, then. You sure you feel well enough to travel?\" Tammy looked at her, not unkindly, which, under the circumstances, was touching. \n\n\"There's no point in me staying further. I cannot work, and lounging in bed at your expense isn't what you've signed me up for.\" \n\nTammy frowned. \"You were hurt while working the fields, Leanne. If you need a few days of rest to recover, it is only fair that you get them. We're not complete ogres, you know.\" \n\nLeanne shook her head. \"If this were the middle of the season, maybe. But by the time I'm cleared for work it'll be Halloween, and my contract would be up. Might as well cut it short.\" \n\nTammy sighed. \"Okay. It's your call.\" She pulled out Leanne's green HR folder, and opened it to reveal a new checklist, yet to be marked, titled 'end of contract'. She started down the list with Leanne while Joe brooded behind her shoulder. The two women did their best to ignore him as they covered the short list. Key to dorm room, check. Two sets of work clothes, check. Work boots, check. \n\n\"All right. We're all done here.\" Tammy said as she marked the last item, while handing Leanne her last due paycheck. \"By the way, I noticed you haven't yet cashed any of your previous checks.\" Her eyebrows rose in question, although her voice stated it as a fact. \n\nLeanne bit her lip. \"Yeah, well, I - I didn't get a chance to do it yet. I will, just as soon as I get to Sacramento and settle down.\" It wasn't a complete lie, she told herself. \n\nTammy nodded. \"Yeah, I figured as much. Just see that you do as soon as possible, okay? I need to keep track of our cash flow and this much money out can be a problem if we don't plan for it.\" \n\n\"I - I understand. I'll take care of it, promise.\" \n\n\"Good. So, when is your bus scheduled to Sacramento?\" \n\n\"Leaving Santa Rosa at 2:50 PM.\" \n\nTammy smiled. \"Good! We have time enough for one last lunch with everyone. We'll make it a little goodbye party for you. See you at Noon at the dining hall? I'll let everyone know.\" \n\nLeanne was going to protest but Joe just put his hand on her shoulder and answered for her. \"That'd be great. See you there, sis.\" \n\nAt Leanne's startled look he gave her a half-smile. \"Come. We've got just enough time to bid proper goodbye to the animals. I know they'll all miss you, too.\" \n\nLeanne nodded and stood eagerly. Hugging her ponies and petting her fluffy rabbits may be just what her aching heart needed. \"That'd be lovely. Thank you.\" Joe squeezed her hand. \"Let's go.\" \n\n* \n\nThe tables were drawn together so they would all be able to sit as one group. Michael McConnel sat across from her, and Joe was at her side. Then there were Tammy and Todd, Mrs. Rojas and Julio, all as friendly and warm as they'd ever been, talking and laughing while sharing the hearty, delicious food. \n\nIf Joe's father - or anyone else - was surprised seeing his son reconciled with his soon-to-be-leaving, ex-girlfriend, nobody said anything. Maybe Joe had spoken to him, too, Leanne mused. But Mr. McConnel looked at her kindly, and she didn't think he knew who she really was. \n\nHer throat hurt, and she couldn't taste the food over the salt of tears. She will miss them all. She'll miss this place so much. \n\nWhen they were mostly done eating, Joe's father clinked his spoon to his water glass. \"Ahem, quiet down, people, I want to say a few words.\" \n\nEveryone hushed and looked at him expectantly. Leanne's heart hammered in her chest. She didn't do well at situations like these. Her cheeks flushed. Joe squeezed her knee under the table in reassurance. \n\n\"Leanne, I want to thank you for choosing Sun Valley Farm for your first seasonal experience, and for the excellent work you've done for us over the summer and fall. You are a dedicated employee and a lovely person, and it was a pleasure getting to know you. I hope you have found your stay here as valuable as we all have.\" \n\nLeanne coughed. \"Ahem, thank you. So much.\" She barely managed. She couldn't breathe. \n\nHe seemed to start saying something else, but then thought better of it, and stopped, after throwing a quick look at his son. All he said was - \"Good luck in your future endeavors. I know Tammy gave you a brilliant and well-deserved letter of recommendation, but if you need any further references, please do not hesitate to give my name, too.\" \n\n\"Thank you, sir.\" She choked. She needed to get out of there before she broke in front of them all. Leanne pulled her phone from her pocket and made a show of looking at the time. \n\n\"Gosh, Joe, we really should get going or I'll miss my bus.\" \n\nJoe looked at the time, then at her face, and nodded. \"Yeah, okay.\" Turning to everyone else, he spoke up. \"Guys, we need to get going.\" \n\n* \n\nEveryone stood. Leanne went from one to the other around the table for a final goodbye. \n\nJoe watched his father shake her hand and squeeze her shoulder fondly, and his stomach churned. If only I could keep her here under her false identity, he thought, but immediately banished the idea. His own sense of betrayal would pale in comparison to his father's, if he ever found out. \n\nMrs. Rojas and Julio each gave Leanne a big, warm hug, and she returned them wholeheartedly. When Todd bent to take her in her arms as well, and said something that made her laugh through her tears, Joe stiffened and cursed under his breath. Tammy looked up at him in surprise. \n\n\"What's wrong?\" She mumbled, and Joe gritted his teeth, but then admitted to her - \n\n\"I think they may have slept together. The night of the party. I saw her leave his room the next day.\" \n\nTammy grabbed his arm and pulled him to the side, then hissed into his ear: \"You are such a blind jerk, you know that?!\" \n\nJoe's startled, 'what did I do now' expression seemed to only grate on his sister's nerves. Her short fingernails bit into his arm as she leaned close to his ear. \n\n\"One,\" she pointed a single finger at his face, \"you really think after what you did to her that night she'd turn around and look for another man to fuck her?!\" He opened his mouth, but his sister wouldn't let him get a word in. \"Two, having sex with a woman who's passed out drunk isn't 'sleeping with them' - it's rape. You accusing Todd of that is downright insulting.\" Her voice shook with her emotion. \"Three,\" a third finger joint her first two, \"yeah, she crashed at his room that night because she literally couldn't walk all the way to hers, but Todd didn't spend the night with her.\" \n\n\"How can you know that?!\" Joe hissed back at his sister, and got a pitying look in return. \n\n\"Because he spent it with me, you moron.\" \n\n\"With - what?!\" \n\n\"With me. In my bed. Like he'd been doing for months before.\" \n\n\"You - you and Todd?!\" Once he said it, he realized it shouldn't be such a shock. They had been spending a ton of time together. He just assumed - \n\n\"Yeah. You got a problem with that?\" His sister stood taller, hands on hips, and Joe was quick to raise his hands in surrender to prevent her from starting World War Three right there in the dining hall, while everyone else were staring at them curiously. \n\n\"Not a single one, sis. No Problem at all. You are right, and I'm sorry for - for being such a dick. We'll talk more later; right now Leanne and I need to get going.\" \n\nTammy deflated. \"Okay, yeah. You guys go.\" She turned to Leanne, paused, and then stepped forward to wrap her in a warm hug. \"I wish you could stay.\" She murmured, and Leanne nodded. \"Me, too.\" \n\nWhen they drew apart Joe put his hand at the small of her back, and together they walked out to his truck, where her backpack had already been waiting. Within moments they were leaving the wrought iron gates behind them. \n\n\"Goodbye, Sun Valley Farm.\" Leanne murmured, and Joe reached for her hand, and squeezed. ",
        "* \n\nShe wouldn't let him wait with her at the Santa Rosa Greyhound Station. \n\n\"Give me a hug and tell me you love me,\" she asked, and he did, and then he kissed her. He wanted to tell her she didn't have to go, but they both knew that she did. And then her hands came between them and pressed. Reluctantly, he took a step back. \n\n\"I love you, Leanne. Be happy.\" \n\n\"I love you too, Joe. Take care.\" \n\nHer tears tore at him. He tried to reach for her, but she stepped aside and turned her back. \"No. Don't. Please go.\" \n\nAgainst every burning emotion in his heart, against every cell in his body that shouted at him to take her in his arms and never let her go, Joe turned, and walked away. \n\n* \n\nLeanne cried herself to sleep, curled on her side across two chairs toward the back of the bus with her head pillowed on her backpack. She woke up around Fairfield, lightheaded and disoriented, and then sat up and stared out the window, lost in thoughts. \n\nPutting distance between them was the right thing to do. She needed some perspective. There were big decisions that she needed to make, and she couldn't make them based on naive wishful thinking and fairytale dreams. But her heart was heavier than she could ever remember. \n\n* \n\nJoe sat in his truck and watched the Greyhound bus leave. He drove by the bus station again, hoping against hope that he'd see Leanne there, but she was gone. \n\nShe was gone. \n\nBack on the main street, The Lounge at The Santa Rosa Inn mocked him. See you soon, cowboy, it seemed to whisper, and Joe hit the steering wheel with his clenched fist. He hated that thought. The idea of going back to the hookup circle made his skin crawl. \n\nHe didn't want anyone else. He wanted Leanne. Just her. \n\nHe made a terrible mistake letting her go. \n\nAnd yet, what other choice did he have? \n\nHis knuckles turned white. There's always a choice, some part of him insisted, but he'd been through that in his mind already, over and over. Yes, there was another choice, but the risk was too big for him to take. He couldn't put his own happiness ahead of his family's. \n\nHe could still remember, all too vividly, his father's breakdown all those years ago, after his mother died. He seemed to lose his will to live, and for too long they were afraid they'd lose him, too. Then he watched the man pick himself up, piece by piece, somehow gluing them together to become the head of their crippled family once more. But although he seemed whole again, Joe couldn't forget those cracks. And he would never, ever, risk another blow. \n\nIf his father shattered now, he may never be put together again. \n\n* \n\nHe couldn't return home. Not yet. Once he did, it would truly be over. \n\nJoe sat at his usual spot, watching his favorite place in the world changing colors under the setting sun. \n\nBut today, no bliss descended, only vast emptiness. Pulling his phone out of his pocket, he flipped through his photos until he found the one that was etched to his heart. Leanne, laughing, her face brightly lit by the dawn, her strawberry-blond hair streaming behind her head, its highlights glittering like a princess's tiara. \n\nHe tried positioning the picture inside the view. It didn't work. The lighting was all off. It was as if she never belonged there at all. Maybe it was a sign. \n\nWith a heavy sigh, he pushed to his feet and shuffled back to his truck. \n\n* \n\nShe was sitting at the familiar, worn kitchen table across from her friend, both of them hugging warm cups of cocoa. \n\nShe was exhausted. She had arrived at Sacramento a little after six thirty in the evening, and Elaine was there at the bus station to pick her up. When they got home the kids were all over her; their excitement and their sweet hugs heartwarming and heartbreaking at the same time. \n\nWas she ready for that kind of commitment? Could she do it on her own? \n\nShe managed to keep it together until they were all tucked in after having read them their stories, and then escaped to the shower and cried her eyes out. She hoped the warm water would help calm her down, but even snuggled in Elaine's soft fleece pajama under the fluffy blanket in her old bed off Sophie's room, she couldn't go to sleep. Not with the insistent churning in her belly. She needed to unload; she needed her friend's clear, unbiased point of view and her steadfast support. \n\nSo she padded back down to the kitchen, where Elaine and Jim were speaking in hushed, worried tones. They stopped when they saw her, and Jim promptly excused himself to his study, leaving the women alone together in the cozy space. \n\nElaine made them cocoa, like she always did when they needed to talk, and then sat down across from her. \n\n\"Okay, sweetie. Spill. What happened?\" \n\nLeanne burst up crying. It took several long moments wrapped in Elaine's warm hug before she managed to get any words out. \n\n\"I'm pregnant, Elaine. And I don't know what to do.\" \n\n\"Aw, sweetie...\" Elaine hugged her again and Leanne clung to her, thankful beyond measure for the lack of judgment in the older woman's voice. When they finally drew back, Elaine looked at her expectantly, but said nothing. With a deep breath, Leanne told her everything. \n\n\"He doesn't know. I just found out this morning. I love him, Elaine. And he says he loves me, too, but we can't be together; not with our histories. He said if it were just him and me he would want to, but as it is...\" She shook her head. \"I don't know what to do. I couldn't stay there.\" \n\n\"I'm glad you came here, sweetie.\" Elaine paused, and then found her eyes. \"You need to tell him.\" \n\nLeanne swallowed. \"What good would it do? It won't change our histories.\" \n\n\"It's the right thing to do.\" Her friend gently insisted. Leanne bowed her head. \"Trying to do the right thing is what got me in this mess in the first place.\" \n\n\"It's not the same thing, and you know it. What you decided to do for William may have been noble, but honestly, I never understood it. It was never your debt to pay. This - telling Joe he had fathered a baby - this is your moral obligation, Leanne. It's on you, one hundred percent.\" \n\nLeanne buried her face in her hands. \"God, what a mess.\" \n\nElaine squeezed her wrist, and then let her go and leaned slightly back. \"You don't have to do it tonight or tomorrow, sweetie. But you know you'll need to, eventually. Better start working up that courage of yours. I know you have it in you. And you know I've got your back.\" \n\nLeanne swallowed hard. \"I - I'll think about it, I promise.\" She breathed in. \"Will you - keep this to yourself for now?\" \n\nElaine's look shot daggers at her. \"After everything we've been through, you even need to ask?\" And then her face softened. \"Go to bed, sweetie. I promise everything will be clearer after you've had a good night's sleep.\" \n\nLeanne nodded, and did as she was told. \n\n* \n\nThe next day, she called Melissa. Bill's fianc\u00e9 answered on the second ring. \n\n\"Leanne, oh gosh, it is so good to hear from you. I thought you decided you didn't want anything to do with us.\" \n\n\"Um, yeah, hi. I'm - could we meet, maybe? Just you and me again?\" \n\nMelissa agreed heartily. A few hours later, they met at the same coffee shop as they did months before. \n\n\"So, you've given my request some more thought? Any chance you'd meet with William?\" The older woman's voice held so much hope, Leanne hated to disappoint her. With a grimace, she clarified. \"I - no, I don't want to meet him.\" \n\n\"Oh -\" The excitement died in the other woman's face. \n\n\"I do, however, have something for you.\" Leanne interrupted her, and, with unsteady hands, pulled out the envelope that seemed to have weighed a ton in her purse. She placed it on the table between them. \n\n\"What is it? A letter to William?\" Melissa asked with renewed curiosity, and Leanne shook her head, and then, softly, explained what she did. Bill's fianc\u00e9 sat back, her eyes wide and her jaw slack, so shocked Leanne worried for a moment she may actually pass out. \n\n\"You did WHAT?!\" \n\nLeanne shrugged helplessly. \"I thought it would work in everyone's favor. I was planning on temping on one of those farms, anyways. It seemed - it seemed like a good idea at the time.\" \n\nMelissa shook her head. \"I don't know what to say. I can't take this money from you, Leanne. This - this is mind-boggling.\" \n\nLeanne reached for the older woman's hand. \"The checks are already cancelled. I crossed them out. The money is in the MaConnels' bank, and it won't be going anywhere. It's a done deal. I just want William to know that - that I want you two to be free to - to start over together.\" She swallowed hard. \"Please, take this. Give it to William. Tell him I said it was my wedding gift to you both.\" \n\nMelissa sat across from her, twin streams of tears running down her soft, wrinkled cheeks. \"I don't know what to say.\" \n\n\"Say you'll be happy.\" Leanne whispered. \"Please.\" \n\nThe older woman rose and came around to hug Leanne tight. \"Thank you. Thank you so much.\" \n\nLeanne returned her hug, and then withdrew. \"I need to go.\" \n\nMelissa released her reluctantly, and sat back, still looking dazed, as Leanne stood up and walked away with a new, unfamiliar spring to her step. Despite everything else, she was glad that she did it. It may not have been her debt to pay, but somehow, it made her feel better to know that it was settled. \n\n* \n\nThey were halfway through their sync-up on Halloween morning when Tammy's desk phone rang. His father stopped mid-sentence and looked at his daughter, who winced apologetically, and picked up on speaker. \n\n\"Sun Valley Farm, this is Tammy.\" \n\n\"Tammy, good morning. This is Dr. Lewis calling to hear how our patient is doing.\" \n\nTammy rose her eyes in question to him. Joe's answered grimly, loud enough for the mic to catch his voice. \n\n\"Dr. Lewis, this is Joe. Leanne left the farm last week. She went back to Sacramento.\" \n\nThere was silence on the other side of the line, followed by a terse - \"I see.\" \n\nEveryone in the room - his father, his sister, and even Todd, looked at him questioningly. Joe cleared his throat. \"Ahem, is there a problem we should be aware of, doctor?\" \n\nThere was another long pause. \"I - no. There isn't. I was just following up.\" \n\nUnlike some other people who simply let her go, Joe's conscience was poking at him mercilessly. Not that it was true; he had thought of little other than Leanne in the days since she'd left. Still, he didn't do that basic, decent thing - call and see how she was doing, if she were recovering properly. \n\nJoe cursed under his breath, and then turned to leave. \"Excuse me, everybody.\" he muttered, and marched over into his own office, shutting the door closed behind him. Once there, he pulled his phone out, and called Leanne. \n\nIt rang and rang until it went to voicemail. Joe hung up, and texted her instead. \n\n*Leanne, are you okay? Please call me. J.* \n\nHe threw his phone on his desk. There was a knock on his door, and a moment later it opened and his father entered, closing it quietly behind him. \n\n\"What's going on between you and Leanne?\" His father didn't beat around the bush. \n\n\"Nothing, dad. She's gone. I'm just worried about her, that's all.\" He evaded his father's look. \n\n\"Why the hell did you break up with her, son? Obviously you care for her.\" His father's gaze was disapproving. Joe wanted to hit something. You don't want to know, dad. \n\n\"I do, dammit. I care about her. A whole damn lot. But there were - fundamental incompatibilities between us that we couldn't get past.\" \n\nHis father looked at him with open skepticism. \"That sounds like a load of BS.\" \n\nFor a moment, Joe was sorely tempted to tell his father the truth. But in the end, he chickened out. You can't risk it, Joe. Remember? That's why you had to let her go in the first place. \n\n\"It's none of your business, dad.\" He hissed instead. His father raised his eyebrows as if to challenge that statement - over the years, his kids had made their private issues his business more often than not, and he was proud of that fact - but seeing Joe's dark expression, decided to give it up. \n\n\"Fine. Mope if you want to. You know where to find me when you want to talk.\" \n\nJoe nodded tersely, and his father turned on his heel and left without another word. \n\n* \n\n\"I spoke to my doctor. The OB/Gyn. She agreed to take you on pro-bono, and scheduled an appointment for you tomorrow.\" \n\nLeanne raised her head to look at Elaine. Her knee-jerk reaction was to protest - pro-bono?! She wasn't a charity case! - but then she thought better of it. She was, in fact, a charity case. And she needed the doctor's appointment. Leanne breathed in, and pasted on a smile. \n\n\"Thank you. I'll put it in my calendar. What time will it be?\" She was patting her back pocket for her phone, but then remembered she left it charging in her room. \n\n\"Ten AM!\" Elaine called after her as she disappeared into the hallway to get it. Leanne grabbed the device from her nightstand and punched in a new appointment in her calendar, and then noticed the small icons notifying her about an unanswered call and a new text message. Switching over, she sat down heavily as Joe's text glared back at her from her screen. \n\n*Leanne, are you okay? Please call me. J.* \n\n\"Leanne?\" \n\nShe looked up to see Elaine at the doorway, a crease marring her forehead. \n\n\"I - I got a text message from Joe.\" \n\n\"Oh.\" Elaine came to sit next to her on the bed, and read the message over Leanne's hunched shoulder. \n\n\"You need to tell him.\" Elaine said quietly. \n\nBiting her lips so hard she tasted blood, Leanne nodded. \n\n\"I know.\" She whispered. Then she straightened, took a deep breath, and keyed in her message. \n\n*Yes, I'm okay. I'll call tonight. L.* \n\nShe hit 'send', and turned to look at Elaine. \"I have until tonight to figure out what I want to say.\" \n\nElaine smiled gently. \"You'll be fine, sweetie. Now, wanna take your mind off of this for a little while? I've got three kids to dress up for Halloween, and we need to go candy shopping. You'll have the house for yourself tonight when we take the kids trick-or-treating.\" \n\nLeanne nodded gratefully. \"Sounds like a plan. Thanks, Elaine.\" \n\n* \n\nHalloween was an exceptionally quiet day at the farm, a fitting start to the low season. No families ever visited on the day of the holiday; even the worst procrastinators had bought their last pumpkins the day before. With the morning chores and midday milking behind them, and with no more tasks to do out on the fields that day, lunch was a laid back affair. Everyone was looking forward to a more-or-less free afternoon. \n\nJoe, Tammy and their dad were walking back around the house from the dining hall to the main door when an old, beat-up Toyota appeared at the gates, and crawled to a stop in front of them. \n\nAn older couple stepped out. The woman who had been driving looked somewhere in her fifties. The man, who was slower to come around, leaning against the car as he walked across the uneven gravel, seemed older. They stood there, looking uncertain and anxious. \n\nJoe stepped toward them, motioning to his father and sister to hold on. \n\n\"Hi. Welcome to Sun Valley Farm. May I help you?\" \n\nThe man was at a loss for words. The woman threw him a worried look, and then turned and stretched her hand out. \n\n\"Hi, my name is Melissa Berns, and this is my fianc\u00e9, William. We were looking for Mr. McConnel?\" \n\nJoe turned to see his father step forward and put a heavy, unexpected hand on his shoulder, as if to restrain him. \n\n\"I'm Michael McConnel, and this is my son, Joe, and my daughter Tammy.\" He looked at the older man. \"And I know who you are, Mr. Richardson.\" He stopped, squeezing his son's shoulder hard when he felt Joe take a step back as recognition hit him. Joe could hear Tammy's choked gasp behind them, but couldn't tear his eyes away from the weathered old man who looked grimly back at his father, his lined eyes dark and anguished. The woman next to him laced her fingers in his and then raised her chin and broke the deafening silence. \n\n\"Mr. McConnel, could we - could we sit down and talk somewhere?\" \n\nJoe could feel the trembling start somewhere around his knees - fear and rage pouring together into a dangerous, potent mixture. But before he could say or do anything, his father's fingers grabbed his arm in a vice-like hold, biting into his flesh, stopping him in his tracks. \n\n\"Come on inside. We'll sit in the kitchen.\" \n\nHis father's voice was surprisingly steady and low, darn near polite. Joe couldn't breathe. Tammy recovered first, and found her voice, too. \"Follow me, please.\" she said, and started toward the house. A moment later, the older couple followed, and Joe noticed how the woman supported the man - that man - as they ascended the stairs slowly. He himself felt planted to the ground; he couldn't make his legs move. \n\nHis father released him and turned as if to go after the others, and now it was Joe's turn to grab his arm. \n\n\"What the f- dad?! How can you invite him into our home like that?!\" He meant to shout the words, but they came out only as a hoarse whisper. \n\nHis father stopped and looked at him evenly. \"It took a hell of a lot of courage for him to come here, Joe. I might as well listen to what he has to say.\" \n\n\"What difference does it make what he has to say?!\" His voice was getting stronger, and he had to shout over the roar of blood in his own ears. \"This man is a killer. What the fuck do I care what he has to say?\" \n\nHis father inhaled sharply, and then levelled his son with a look that left no room for argument. \n\n\"Listen to me, son. This man killed your mother. Yes. But that was twenty years ago. None of us are the same people. If he were still the same careless, reckless drunk, he wouldn't be here now. Thank God I'm no longer the clinically depressed emotional wreck that I was. And you and Tammy are no longer little kids terrified by their family falling apart. This man came here to talk to us after all this time, and, by God, we are going to listen.\" \n\nJoe paled, his breath stolen by swift, merciless realization. He folded over, leaning his hands on his knees as he fought for breath. \n\n\"Are you okay, son?\" His father's face softened in concern. A moment later, at his father's urging, Joe stumbled over to the stairs and sat down heavily. His father settled next to him, his arm hugging him by his shoulders as if to keep him from collapse. \n\n\"What's going on, Joe? Talk to me.\" \n\nJoe took a shuddering breath, and forced himself to look into his father's eyes. \n\n\"You all may have grown up in the last twenty years, but me - I never stopped acting like a scared shitless ten year old. God!\" \n\nHe buried his face in his hands. Shame and guilt sliced at his gut, making it damn hard to breathe. \n\n\"What are you talking about, Joe?\" \n\n\"I'm talking about Leanne, Dad. I -\" His throat closed, clogged with his emotions. His father fell silent next to him, rubbing his back soothingly. When he finally raised his head, his father spoke carefully. \n\n\"I may be a little slow here, but - what the hell does Leanne has to do with all this?\" \n\nJoe's head snapped back, and barked a surprised, wholly inappropriate laugh. His father tilted his head, and waited. Joe took a few slow, steadying breaths, and finally met his eyes. \n\n\"Leanne is William Richardson's daughter, dad.\" \n\nHis father blinked and gasped, and then dropped his gaze, shaking his head slightly. Joe shifted toward him, feeling the familiar panic climbing quickly toward his throat. \"Dad -\" \n\nHis father looked up, and Joe stopped short at the disappointment - the sadness - he saw in them. \n\n\"Is that why you broke up with her, Joe?\" He asked quietly. ",
        "Joe nodded. \n\nMichael McConnel studied his son intently. \n\n\"And yet, you love her.\" \n\nHe swallowed hard. \"With all my heart, dad.\" \n\n\"Well then.\" his father said conversationally. \"You don't exactly make an exemplary Westley, now, do you?\" \n\nJoe gasped. \"I -\" \n\nHis father rose to his feet. \"Although you do look like you've been put through The Machine down at the Pit of Despair. I'll give you that\" \n\nJoe was rendered speechless. His father chuckled. \"You can go after your princess, farm boy, but not before we hear Mr. Richardson out. Now, Tammy is probably getting frantic. Let's go.\" \n\nJoe took his father's offered hand and let him help him to his feet. Just as they were stepping inside, his phone buzzed in his pocket, indicating an incoming message. His step faltered, and he paused to take a look. \n\n*Yes, I'm okay. I'll call tonight. L.* \n\nHe had to lean against the wall as relief swamped him, fierce and sweet. He took another moment to compose himself, and then stood up, walked into the kitchen, and took his seat next to his family, across the table from William Richardson and his fianc\u00e9. \n\n* \n\n\"Th-thank you for - for this.\" William Richardson's gravelly voice shook badly as he gestured around the table, where the five of them sat, each with a steaming hot, ignored cup of coffee in front of them. \n\nThe older man swallowed hard and coughed a few times. Joe watched his fiance squeeze his fingers, giving him an encouraging look. Mr. Richardson nodded, and returned his eyes to his father's. \n\n\"I came here to tell you how sorry I am, how sorry I have been every single day since - since I -\" he heaved a breath, and it came out shuddering while tears filled his eyes and slipped down his creased, hollowed cheeks. \"I made a horrible, horrible mistake, and there's no way I can undo it. I am so, so, sorry.\" \n\nThe older man sniffled hard, and managed to contain himself enough to continue. \n\n\"I have grieved for your wife - for Claire - every single day since. Every day, I've thought of her - of you, of your kids. How I've hurt you. The pain I had caused.\" He gulped. \"I am so sorry.\" he whispered. \"I know nothing I can say will change anything, but I wanted you to know that. I am sorry.\" \n\nJoe's father breathed deep, and finally nodded. \"Thank you.\" Joe saw his eyes were red-rimmed, as well. Tammy and Melissa were both wiping at their cheeks. \n\nJoe cleared his throat. There were no coincidences, he thought. But for once, he wasn't being paranoid; only curious to learn the truth. It had to have something to do with Leanne. He wanted to know everything before they spoke tonight. He wanted no more secrets between them, ever again. \n\n\"What - what made you come here today, after all these years?\" \n\nWilliam and Melissa exchanged looks, and, at his nod, she reached into her purse and pulled out an envelope. It carried the Sun Valley Farm logo. \n\nMichael looked between the envelope, the couple in front of them, and his own children. \"What's that?\" \n\nMr. Richardson looked undecided, and then replied haltingly. \"I - I know this - I know the money was never the point to you, Mr. McConnel. But I still owe you some - some of the compensations.\" \n\nMichael looked back and forth between Tammy and Mr. Richardson. \"I don't understand. The compensation was paid in full right after the trial ended, no?\" \n\nMr. Richardson shook his head, and Tammy intervened. \"Technically, a tiny portion of it remained, dad. I've seen it in the books; I just never mentioned it because, well, you know.\" \n\nMr. Richardson cleaned his throat. \"It's not a lot, but it is your money, and I wanted you to have it.\" \n\nMichael shook his head and sat back. \"I don't want any money, Mr. Richardson. As far as I'm concerned, that debt had been paid and done with more than nineteen years ago. I appreciate your coming here to say you're sorry. I do. Please, don't insult me with this.\" He pushed the envelope across the table toward William. \n\nMelissa fidgeted uncomfortably in her chair, and then spoke up. \n\n\"Um, technically, the money is already in your bank, Mr. McConnel. We just - just wanted to let you know.\" \n\nMichael looked startled between her and Tammy. \"What? How?\" \n\nJoe could see understanding rise in his sister's gaze even as she reached a shaky hand to the white paper rectangle. And she was looking at him as she hesitated opening it. What the fuck? \n\nWith a determined set of her shoulders, his sister tore the envelope open, and pulled out a piece of paper, though he could see there were more inside. She read it out loud. \n\n\"To: The McConnel Family \n\nPlease use any outstanding payments directed to me to cover the remaining debt of Mr. William Richardson. \n\nSigned: Leanne Sommers.\" \n\nThere was silence around the table. For long moments, nobody spoke. \n\n\"When - when did you see Leanne?\" Joe forced himself to look into William Richardson's eyes. The man lowered his gaze. \n\n\"I - I didn't. She wouldn't meet with me.\" \n\n\"Then - how?\" He choked. \n\n\"She met me, a couple of days ago.\" Melissa interjected quietly. \"And she brought me the envelope. I was blown away, I had no idea she worked here, and certainly no clue that she was saving up her paychecks to - to help us.\" \n\n\"Why would she do that?\" His sister's voice surprised him. \"She told me a little bit about her childhood. I know you have not been part of her life since the accident.\" Tammy looked straight into William Richardson's eyes, but she didn't sound accusatory. Rather, she sounded like she really wanted to know. \n\nWilliam shook his head helplessly. \"I really don't know. I had no idea about any of this.\" \n\nAgain, it was Melissa who spoke up. \"I met with her about eight months ago. I tried to get her to meet with her father, but she refused. She did ask me then when we were getting married and I told her there was no date set, and likely won't be any, since William won't marry me as long as he wasn't debt-free, and there was no way he was going to be able to pay this. She just said 'I'm sorry.\" I thought that was it. Then, two days ago, she called, and then gave me these checks. Told me it was her wedding gift to us, and that she hoped we'd be happy.\" \n\nBe happy. He made her promise that, too. \n\nEveryone fell silent. And then his father's voice sounded, in a deadpan imitation of Inigo Montoya: \"True love! You could not ask for a more noble cause than that.\" then he changed his pitch, taking on the exact nasal tone of Miracle Max. \"Sonny, true love is the greatest thing in the world. Except for a nice M.L.T.\" He even smacked his lips. \n\nJoe barked a laugh, and then, unable to sit any longer, he jumped to his feet. \"I gotta go.\" \n\nHis father winked at him. \"Yes, you do.\" \n\nTammy looked between them. \"What did I miss?\" \n\n\"I'll fill you in later.\" he promised. \"Joe, good luck, son. Don't come back without her.\" \n\n* \n\nSam, Steve and Sophia were all dressed as Minions, and were the cutest kids ever to go trick-or-treating. Jim and Elaine donned matching goggles and crazy purple hair, and the family had left the house at five PM with plans to conclude the holiday tradition at Chuck-E-Cheese's, giving Leanne ample privacy. \n\nElaine left Leanne with a huge bowl of candy to hand out, a quick hug and a whispered \"Call him!\" before she joined the rest of her family for the adventurous festivities. Leanne merely nodded. \n\nThe next hour was busy with kids ringing the front door every few moments. But with sunset the steady stream dwindled down to a trickle. Looking at her almost-empty bowl of candy Leanne decided she could no longer postpone the inevitable. She closed the curtains facing the street and turned off the porch lights, locked the door, and flopped down on the sofa, phone in hand. \n\nShe placed the call and held her breath until it connected. Joe picked up on the first ring. \n\n\"Hey.\" he sounded anxious. There was some undefinable background noise. \n\n\"Hey.\" she mumbled, unsure what to say. \n\n\"Are you at Elaine's?\" \n\n\"Um - yes. Why?\" \n\n\"How's the bump?\" \n\nHis question threw her off at first - how can he know about the bump?! - and then she realized he was asking about her head. \n\n\"Oh - it's gone, I think. Mostly.\" She felt tongue tied. \n\n\"Good. Good.\" There were some more indescribable noises around him, and then it sounded like he was walking outside. \"What about your dizziness? You haven't fainted again, have you?\" \n\nShe felt close to it right then, with her heart beating so crazily. \"No, no. I'm good. I promise.\" She knew she was stalling. You need to tell him, Leanne. She was just about to open her mouth when the doorbell rang loudly. \n\n\"Just a sec, Joe. I need to get the door and hand out candy. Hold on.\" \n\nKeeping the phone pressed between her shoulder and her ear Leanne reached for the candy bowl and unlocked the door, swinging it open even as she pasted a smile on. \n\nThe smile froze on her face as her phone plopped on to the carpet below, as did the plastic bowl. \n\nJoe was standing in front of her, waving his phone at her. \"Trick or treat?\" he said lamely, and then, probably seeing the color leave her face, reached out to grab her arms before she fell. \n\n* \n\n\"Hey, hey! I thought you said you were feeling good! Shit. Come here.\" \n\nJoe wrapped his arms around Leanne's trembling form and then, in one decisive move, picked her up in his arms and walked into the living room to sit down in one of the recliners with Leanne cuddled in his arms. \n\nShe twisted until her shocked eyes could find his. \"Joe! What the hell are you doing here?\" \n\n\"I came for you, princess.\" \n\n\"You came for me? What does that even mean?\" \n\nJoe chuckled. \"Sorry. That was me referencing Westley. I forget you don't know the movie by heart yet.\" \n\n\"Joe, I - I don't understand. Your father -\" \n\n\"Knows who you are, and knows that I love you, and that I intend to bring you back to Sun Valley with me. In fact, his words were, and I quote, 'don't come back without her.'\" \n\n\"But - how?\" She looked dazed. \n\n\"I'll tell you all about it later. There's something I need to do first.\" \n\n\"Oh?\" The tiny lilt of her mouth told him she was onto him, and Joe smiled wide. \n\n\"Yeah.\" \n\nHer lips were already open in invitation when he met them with his own. \n\n* \n\nWhen she came up for air she was straddling his hips, and his hands were each grabbing an ass cheek, urging her to grind her the spread, jean-covered apex of her thighs against his solid ridge. Leanne pulled back and inhaled deep. \n\n\"Joe - Joe, stop. We can't do this. Not here, anyway. Elaine and her family will be here soon.\" \n\nHe wasn't really listening. His mouth moved to her exposed neck, and his nibbles there were driving her insane. \"Joe, please -\" \n\nReluctantly, he drew back. \"Okay. Not here. Come back to my hotel room with me.\" \n\nLeanne bit her lip, and then nodded shyly. \"Okay.\" \n\nHe sat up straight, holding her closer to his chest. \"Okay? Really?\" \n\nLeanne giggled. \"We have two months of catching up to do, cowboy. I've even been too depressed to do my homework properly; I think I may need some special tutoring.\" \n\nJoe's arms tightened around her as he took her mouth in a swift, hot kiss, before pulling back and looking in her eyes. \"If you're telling me you've been a bad girl, princess, I'm be more than happy to play it that way, too.\" \n\nHer pussy clenched, even if she wasn't sure exactly what he meant by that. She only knew the delicious glint in his eyes and the dark undertone of his words made her heart race and her insides melt. \n\n\"I've never done it at a hotel room before, you know. Last time I asked, you refused.\" she reminded him teasingly. \n\nJoe groaned and pushed up, making her slide slowly down the length of his body until she stood more or less steadily on her own two feet. \"I am eternally glad then that the only room left in the whole of Sacramento was in one of the nicest hotels in town. I'm going to treat you right tonight, princess. And every single night from now on, too.\" \n\nShe was trembling with need, and they haven't even gotten naked yet. \"Let's go.\" She breathed. \n\n\"Wait. Let's get your stuff first. I want to drive back to Sun Valley in the morning.\" \n\n\"Um, we can't go right at dawn. I have an appointment scheduled tomorrow.\" \n\n\"An appointment? What, like at the hair salon or something?\" \n\nLeanne started to answer, and then stopped herself. Just to be on the safe side, she will keep her news until *after* their night at the hotel. She wasn't taking any chances in ruining the mood right now! \n\n\"Yeah. Or something. Point is, I'll have time to pack up in the morning.\" She took a step back and tugged his hand to have him follow. \"Now, are you going to treat me right tonight at the fancy hotel, cowboy?\" \n\nHe grabbed her around the waist and kissed her silly before taking her hand and practically marching her out the door, pausing just long enough to let her lock up after her. \n\n* \n\nOn the way over, Leanne texted to Elaine. \n\n*Don't freak out. Joe came over. I'm spending the night at his hotel.* \n\nHer response was almost instantaneous. \n\n*Eeek!! Have fun!! xoxo* \n\nLeanne giggled, and Joe threw her a look from across the truck's cabin. \"What?\" \n\nShe winked. \"Elaine approves of our shenanigans.\" \n\n\"Shenanigans. How old are you, again?\" \n\nHer smile broadened. \"Old enough for shenanigans to be legal.\" \n\nHe nodded. \"Right. Not complaining.\" and stepped on the gas. \n\n* \n\nWith the heavy door to his room closed behind him Joe stood, and watched Leanne look around the elegant setting with a bit of a star-struck expression. He was thankful for the small distraction. His nerves were making him queasy. \n\nThe ring was burning a hole in his pocket. \n\nLeanne turned to look at him. \"Okay, cowboy. I'm seriously impressed.\" she smiled. \n\nHe took a step forward, and then another, and another, until they were almost touching, and then guided her the couple of steps back to sit down on the snowy-white down comforter, and kneeled in front of her. \n\n\"Leanne, I - I have a confession to make.\" \n\nHer eyes widened as he took her hands in his, and she nodded at him nervously. \"Oh - okay.\" \n\n\"I didn't bring you here tonight just for - for shenanigans and private lessons. I want all that, too, but I really needed to ask you something.\" \n\nA tiny crease appeared on her smooth forehead, and she sobered. \"Okay, ask away.\" \n\nHis shaking fingers fumbled in his pocket until they grabbed the ring, its smooth surface slippery against his pads. He closed his eyes, sent a prayer to the heavens, and then presented the ring to her, trembling so bad he just hoped it wouldn't slip his hold. \n\n\"Will you marry me, Leanne?\" \n\nHis eyes locked with hers, registering every emotion running in their baby-blue depths. Shock and disbelief, slowly but surely chased away by clear, wholehearted joy. He almost laughed out loud with relief. \n\n\"Yes, please!\" she squealed, and he pretty much tackled her, so she was pinned under him on the huge bed, and kissed her thoroughly. His knee moved in between hers and was working her pussy, pressing in rhythm to the heavy thud of his heart. By the time he remembered he had yet to slip the ring onto her finger she was whimpering and grinding against him. \n\nJoe tugged at her hand to get her attention, and they both watched with baited breath as he slipped the antique-looking gold band with its intricate etching of tiny little meadow flowers onto Leanne's finger. It gleamed in the dim light. \n\n\"Oh my gosh, Joe. It's beautiful.\" \n\nHe swallowed hard. \"It was my mother's.\" \n\nShe nodded, choking back tears. Joe spoke again, playing with the ring between his thumb and forefinger. \"My father gave it to me when I was eighteen, and told me I'll know when the right woman came along.\" He looked up and into her eyes. \"He was right.\" \n\nLeanne threw her arms around his neck, and pulled him close. \"I love the ring, and I love you.\" she said, and then kissed him, opening her lips to invite his tongue inside. With a deep growl, Joe took her up on that invitation. \n\n* \n\nThe pleasure was so acute, it was almost too much. Leanne's little toes curled and her hands fisted in the pristine white sheets, while Joe's tongue kept stroking her clit that was captured between his lips, and his fingers stroked slowly, fully, in and out of her sleek tunnel. \n\nAnother peak was coming, and she wasn't sure if she'd be able to take any more. Joe, on the other hand, seemed confident enough for both of them, speaking in-between sucks and licks. \n\n\"That's right princess... let it come again... mmmm... yeah... God you taste good!\" \n\nShe cried out as his mouth and fingers pushed her over the edge, making her body convulse and gush small amounts of girl juice with every spasm. Joe lapped it up, grunting his pleasure, making her shudder in return. \n\n\"Please, no more... I can't. Too sensitive.\" She whimpered, and thankfully, he relented. \n\nJoe extracted his two fingers slowly, allowing them both to enjoy her aftershocks as she squeezed and released around his thick digits. He sucked them clean as he moved up her body, his mouth finally leaving her swollen, pink pussy to inch up to her belly, kissing and nibbling the soft skin of her abdomen while his hands held her hips captive, his thumbs caressing over her protruding hip-bones. Leanne squirmed. \n\n\"I'm going to have Mrs. Rojas fatten you up in no time, princess. A farm girl needs to have some more curves on her body.\" Joe was speaking against her skin, and Leanne trembled. Oh, you've already done some fattening yourself, cowboy. You just don't know it yet. She thought, but then all thoughts were gone when his mouth reached the underside of her breasts, and he started nibbling there, catching her soft flesh between his teeth in tiny little bites. \n\n\"Oh my gosh that feels incredible! Harder, please...\" she begged, and he complied, letting his teeth sink a little deeper into her skin, leaving tiny white grooves in their wake, which turned pink before disappearing. \n\n\"Ahh! More. Harder. Please.\" \n\nJoe bared his teeth as he looked down at her splayed form. \"You want me to leave teeth marks on your breasts, baby?\" \n\n\"Yes. I do. Please!\" \n\nJoe shook his head. \"There's a shortage of perfect breasts in this world. It would be a pity to damage yours.\" he quipped, and then chuckled as her eyes widened in recognition. \"Just a little bit harder then. Not long-term damage, I promise.\" His wet fingers returned to stroke her clit slowly, leisurely, and then he bent his head and captured more of her breasts in his mouth, biting just a little harder as he lifted his head, pulling her breast back with it. \n\n\"Ohmygod-ohmygod-ohmygod ahhh!!\" \n\nLeanne screamed her pleasure as one more climax, swift and unexpected, seized her. Joe released her breast and moved up, and entered her still convulsing body, sinking slowly in, hissing with every tightening of her inner folds around his rigid, swollen cock. \n\n\"God.\" He gasped, and then moved to take her head in his hands, holding her in place so that his eyes could capture hers while he claimed her, body and soul. Her own hands came up to his back to pull him close. Joe moved, stroking deep and steady, making each one count. Leanne arched and opened her legs wider, tilting her pelvis to take as much of him as she could inside. Joe's movements quickened, even as his face seemed to soften as he watched her take him into her body. \n\n\"God, you're beautiful like that, Leanne.\" \n\nHer breath hitched, and so did his a moment later, and then he was coming, shuddering in her arms, his forehead buried in the nook between her neck and shoulder. Leanne hugged him close, smiling and teary-eyed. ",
        "\"I love you, Joe.\" \n\nHe squeezed her in response, still beyond words. \n\n* \n\nHe returned from the bathroom, where he'd rid himself of the condom, and slipped under the covers, taking her into his arms once more. Leanne turned to her side and snuggled her sweet ass against his groin. Joe could feel himself stir, and growled a warning in her ear. \n\n\"Keep still, princess, unless you want to go again. I'm totally up for that, but you did say something about having an appointment to get to in the morning.\" \n\nShe stiffened in his arms at that, and then turned to her back, all sleepiness gone from her eyes. In fact, if he was reading her correctly in the near-darkness, she looked downright nervous. \n\n\"What is it, baby?\" He propped himself on an elbow to see her better. Leanne bit her lip. \n\n\"Um, I have a confession to make, too.\" \n\n\"Oh-oh. Is it good or bad?\" \n\nShe was quiet for a moment, and then whispered - \"I think it's good. Really, really good. I just hope you think so too.\" \n\nJoe heaved a breath. \"Okay then. Shoot.\" \n\nShe caught his eyes, and held them, unflinching. \n\n\"I think I'm pregnant.\" \n\nJoe swallowed through his suddenly dry throat. \"Wh-what?\" \n\n\"I'm pregnant. With your baby. I think. That's what the appointment is all about. To get an ultrasound. First checkup.\" \n\n\"Wow. Okay then. Gosh.\" Elation pretty much short-circuited his brain. Leanne's forehead was furrowed. \"What are you thinking? Are you angry?\" \n\n\"Angry?!\" He looked at her, astonished. \"No! I'm overjoyed. Seriously. I may not look it because I think part of my brain just evaporated but I promise you, I'm happy. And - also relieved, I guess, for having asked you to marry me already. I'd hate to face Elaine's shotgun. Or my dad's, for that matter.\" \n\nLeanne chuckled. \"You know,\" she winked, \"you finally did something right.\" \n\nJoe nodded humbly, and murmured against her lips, \"Don't worry. I won't let it go to my head.\" \n\n \n\n~~ The End ~~ \n\n------------------- \n\nAuthor's note: So, did you like this story? Tell me! VOTE, FAVORITE and COMMENT. Thanks!"
    ],
    "authorname": "small_town_girl",
    "tags": [
        "farm",
        "cowboy",
        "pregnant",
        "hea"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/dawn-over-sun-valley-ch-08"
}