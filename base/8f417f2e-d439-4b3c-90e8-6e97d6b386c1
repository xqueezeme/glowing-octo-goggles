{
    "title": "When We Were Married Ch. 05C",
    "pages": [
        "Chapter 05C\n\nYOU KNOW I'M SUCH A FOOL FOR YOU! \n\nMy name is William Maitland. Six months ago I was married. Today I am single. \n\nSix months ago I was in love with a woman I thought loved me. Today I know she doesn't love me. Today I have feelings for a French woman that loves another man. Even though she may love me a little bit.\n\nI don't know if that counts as progress in my personal life.\n\nSix months ago I was the lead prosecutor or managing prosecutor of the State Attorney's Office in Jacksonville. People in the Courthouse knew me and I think thought well of me professionally.\n\nToday, after a near breakdown for a number of reasons I don't need to go into here, I have been dubbed \"The Angel of Death\" and, through the virtue of the Internet and Internet web sites, apparently I've become a famous figure. \n\nAfter I convicted the Killer Granny in a high stakes murder prosecution I have become even more famous and apparently cause callow defense attorneys to piss in their pants when I glare at them.\n\nOf course it's all bullshit. If there's anyone less inclined to use publicity to advance themselves anywhere in the civilized world than myself, I don't know who it would be. \n\nI don't want to endorse cereals, or run for higher office, and start a second career in Hollywood. I just want to do what I do, what I'm good at, why I'm here, which is to put bad people behind bars and keep them from hurting any more innocents. \n\nAnd since I don't want anything more than what I had professionally, I'm not sure if that counts as progress in my professional life.\n\nSix months ago I had a 17-year-old beautiful daughter that looked at me with a combination of bemused daughterly affection and contempt, while my 14-year-old son tried not to think about me much but basically looked at me as the nothing that put a damper on his personal life. \n\nToday the bonds aren't completely restored, but they know that I loved them and I still do after years of neglecting them for my job.\n\nSix months ago I got an occasional lay from my gorgeous blonde wife Debbie. But I couldn't really blame her for not pulling me down into her bed all that often. \n\nI was flabby, fat, balding, and I'd let her treat me like that for years. I know from my professional life that people treat you the way you let them, and I never let anybody in my professional life treat me the way Debbie treated me in our personal life, or the bedroom.\n\nBut I loved her and I knew I was a disappointment and that I could never really be good enough for her in bed and I made myself grateful for the crumbs she threw my way because even crumbs are better than nothing.\n\nToday I have fucked a cute little dimpled darling that used to work for me in the State Attorney's office, fucked the shit out of a hot grandmother of a vice cop -- in an empty State Attorney's office of all places -- and made mad, passionate hot sex/love to a beautiful French woman who is married to a man who'd been a friend.\n\nSexually I've come a long way in six months, but until my Frenchwoman Aline came back to me two days ago, I wouldn't have said my sex life has improved by leaps and bounds. \n\nBecause I realized with a sharp pain to the cavity where my heart used to be at, even crumbs from Debbie meant more than hot sex with Dimples or my hot Granny Cop.\n\nBut Aline was different. I thought I'd lost a woman I'd never really had, and tried to live with two defeats in the realm of romance until SHE walked back into my life....\n\n############################################# \n\nWEDNESDAY, AUGUST 31, 2005 -- 9:15 p.m.\n\nWe walked along the shore line with our shoes and socks in our hands. A light blanket I'd taken from my car was draped over my shoulder. \n\nEven in late August, the ghostly foam carried by the incoming waves was cold as hell on my flesh. I shivered. Aline just laughed at me. I knew that French beachgoers were tough, dashing into water that would have sent Americans into cardiac arrest. We held hands like teenagers.\n\n\"I haven't done this since I was a teen,\" she told me.\n\n\"You're kidding me? All the islands and tropical paradises you visit and you've never strolled through the surf?\"\n\n\"I've gone swimming, but walking like this....holding hands...it's something you do with a boyfriend...or a husband....\"\n\n\"There's something very sad about that, Aline. You travel the world to the most romanatic islands and cities, and you don't have anyone to share it with. Philippe has never traveled with you?\"\n\n\"In the early years, he'd come in for a few days, sometimes a week. But as he progressed in his career, the demands just grew too great And then there wasn't any more free time. Even when I'm home, we have to work for time together, and that usually centers around Andre.\"\n\n\"Something about that sounds familiar, very familiar. But...I can see why you'd have fallen in love with him. He was..is a very dynamic guy. Besides all the tallness, good looking, superficial stuff. I imagine for a woman, he'd be a very appealing guy.\"\n\nShe leaned into me and I caught my balance as a bigger wave splashed us up to the knees. I could hear sea birds in the distance, and other bird calls on the shore side.. On the other side of the inlet, on the far side of the A1A bridge that bisected the inlet, was a federally protected bird preserve where a number of migrating species had protected nests.\n\n\"He was...is...you worked with him. You saw how -- women react to him. He doesn't have to work at it. They just...respond to him. And I guess I did too. But that isn't why I fell in love with him, at first sight. \n\n\"You know how clich\u00e9d that sounds, and we French don't really put much stock in that. We are much harder-headed about relationships than you Americans, despite the stereotypes. But, there's no other way to describe it. And....it happened again when I saw you.\n\n\"I didn't mean for it to happen, either time.\"\n\nShe turned into me and I stopped and held her to keep the waves around our knees from throwing us into the surf. She took my hand and placed it over her right breast and I felt the nipple harden.\n\n. \"There wouldn't be a problem, Ma ch\u00e9rie, if we were just -- as you Americans say -- fuck buddies...friends with benefits....I could stay here for two weeks and fuck that lovely hard cock of yours and suck it and give you myself and pull myself together in two weeks and go home to Philippe. I told you I have had lovers before on the Bonne Chance, and it didn't bother me that much to go home to Philippe afterwards.\"\n\n\"But we are fuck buddies,\" I said squeezing the nipple hard between my fingers and making her moan softly.\n\nShe grabbed me by the chin with her right hand and stared into my eyes.\n\n\"Don't ever say that, Bill. Don't ever! I don't know what we are...and it scares me...but I know what we aren't....fuck buddies...friends with benefits.\"\n\nShe melted into me and I remembered old time movies about lovers on beaches. This felt like something from a tragic romance. All it needed was a musical score, but there was only the sounds of birds in the night nesting and a few far off cars against the wind blowing in off the ocean.\n\n\"We are lovers,\" she said finally.\n\n\"I know. And that's why you're going to rip my heart out again when you leave. And you will leave. No matter what you say, no matter how much we try not to think about it, you'll go home. And I'll stay here.\"\n\nShe buried her face against the side of my neck.\n\n\"Don't say that.\"\n\n\"I won't say it again, Aline. Not another time. But I want you to know I did this willingly. I could have sent you off yesterday. I know I should have. But I didn't. The fault is mine. And all the hurt that's going to be left when you're gone, that's on me too.\n\nI held her so tightly I could feel her heart beating in her chest.\n\n\"When you leave and fly home to Philippe, I don't want you to look back or regret a moment of our time together. I'm doing this because I realized that you are special. I'm feeling old and jaded and that my life is pretty much over, but I know there will be other women. I don't know that I'll ever marry again, and if I did it would be for convenience.\n\n\"But you are something else entirely. I'm not a fatalist and I'm damned sure I don't really want to believe in the God that tears the wings off flies and crashes airplanes and sends tidal waves to destroy cities, but it couldn't be coincidence that brought us together. Somehow I think we were meant to be together.\n\n\"It's silly, but somehow I think that if I hadn't met Debbie that year at UF, and if we hadn't gotten together, I wouldn't have found anyone I could have loved as much. And if I had wound up going to France and meeting you BEFORE Philippe, I think it would have been us together.\"\n\nTears filled her eyes.\n\n\"Don't even dream about it....\"\n\nI put my hand over her mouth to shush her.\n\n\"Instead of a life with you, I'll have to settle for two weeks. But, if you do it right, sometimes two weeks can be forever.\"\n\nShe was nibbling on my ear as she pumped and jerked on my cock and whispered, \"I want you inside of me, Bill. God, I want you inside of me so bad. Take me somewhere and fuck me until I can't think straight anymore.\"\n\nI had to put my hand over hers and stop her.\n\n\"Keep that up and in a minute I'm going to squirt all over inside my underwear and I kind of think you'd rather have it squirting some place else. And at my age, I'm not sure how quick I could get it up again.\"\n\nShe grinned at me.\n\n\"Want to bet I couldn't get your mighty cudgel rock hard in 60 seconds, Mr. Maitland?\"\n\n\"I would never bet against you, but let's not put it to the test. Come on.\"\n\nI led her by the up from the beach into the dunes. Cars were passing by us occasionally 30 feet away, but in the rolling dunes topped with high growing sea oats, we were invisible.\n\nI threw the light blanket down on the sand and pushed her down onto it. I unsnapped my belt and my slacks slid down around my ankles. Before I could drop down beside her she had reached out, pulled my Hanes down and had planted those luscious lips around my already semi-rock hard cock. A few seconds later I could easily have hammered nails with it.\n\n\"Oh shit! Aline...\"\n\nNormally I would have enjoyed emptying myself into that pretty mouth but I wanted the real thing tonight so I pushed her head away and she fell back onto the blanket.\n\n\"Spoilsport!\"\n\n\"Tell me that in 30 seconds,\" I said, as I pushed her dress up around her hips and in the same motion pulled the sheer black panties away from her pussy. Then I dived in. She was dripping but in 30 seconds my face was soaked.\n\n\"Oh, God, God, God..that feels so good. Lick it, lick it darling..stick your tongue way in...like that...that...Oh...I missed this....every day....every day.....ohhhh\"\n\nThen she grabbed my head and with superhuman will, she pushed my tongue away from where it wanted to be, made me look into her eyes and asked, \"Did you miss me like that, Bill? Was I on your mind all the time...\"\n\n\"I missed you every day, Aline. And...almost...every minute..\"\n\nI couldn't help giving her a little smile thinking of Dimples and sexy granny Heather and she picked up on it. She swatted me on the head, and then let her grip go.\n\n\"You bastard....I know men well enough to know when you weren't missing me...I guess you got over Debbie...I'm very angry at you.\"\n\nAs I dived back into her soaking pussy she gasped, pushed herself up at me and said, \"But I'll forgive you if you keep doing that...just like THAT!\"\n\nShe brought her knees up around my head and squeezed as she spasmed and I remembered she had very strong legs As the force of her first orgasm shook her I pulled my mouth away and said, \"I'm sorry. No more tongue for you tonight, young lady.\"\n\nHer mouth opened in surprise as I lifted her ass with both hands, placed both those luscious legs over my shoulders, and with her pussy wide open, rammed my cock into it as deep and hard and fast as I could.\n\n\"Umm..uh.uh..ohhhh....god damn...bill....it's going to....going to.....shit can't think...going to come out.....uh...my throat...\"\n\nAnd then she lost the breath and the will to talk as I tongue wrestled her, letting her taste herself on my tongue, while I fucked her missionary style. There are a lot of things to be said for other positions, but I guess I'm conservative there too. \n\nMissionary is still the easiest way to get off, the way that lets you look into the eyes of woman you're fucking. The old poets are right. The eyes can speak.\n\nAll too soon, it couldn't have been more than two or three minutes, I felt myself getting ready to pour out into her and gave her the chance to stop me.\n\n\"Aline....getting close....can pull....do this longer...\"\n\nShe bit my tongue gently.\n\n\"You better give me what I've been waiting weeks for...now.....\"\n\nAnd being the gentleman I was, naturally I did. Once, twice, three, four and five hard shots and she moaned with each one and tried to swallow my dick whole inside the hot pussy of hers.\n\nFinally I stopped and let her legs slip to the ground while I held myself up over her, leaning on my elbows.\n\n\"Wow.\"\n\n\"How about magnifique!\"\n\n\"You were definitely magnifique!\"\n\n\"For an old man you weren't too bad.\"\n\n\"You're only saying that because you know you've disarmed me and I can't punish you anymore tonight.\"\n\nShe leaned over and grabbed my wilting manhood with a firm grip and said, \"You remember our bet\"\n\n\"Yes, baby, but I really feel like I need an IV right now. I gave you everything I had and then some....\"\n\n\"Why don't you let me be the judge of that.\"\n\nShe turned out to be wrong. She couldn't get my magnificent cudgel hard again in 60 seconds. It took her a full five minutes, including sticking a slim finger up my ass while she sucked on my weary dick. But get it up, she did. And kept it up for 25 minutes this time as we did it doggy, some version of the Kama Sutra she introduced me to, cowboy style and finally up her ass.\n\nAs she lay in my arms after that workout we listened to the increasingly more rare cars passing by us on the road about five feet higher than the valley between dunes we rested in. Frogs or crickets or whatever the hell they were made the dunes alive with the sound of their music. \n\n\"You really thought of me every day?\"\n\nI placed my hand on the side of her face and stared into those dark eyes that had held me captive since the first moment I saw her on the Bonne Chance before I even knew who she was. And I knew that my intuition had been correct. She was dangerous as only someone who can destroy you is dangerous. \n\n\"Every day.\"\n\n\"Would you have forgotten me? You're a man, and I know you've had sex since we saw each other, you dog. Would I eventually have become just another one of your old conquests?\"\n\n\"Is that what I would become to you, when you return to Andre and Philippe and the Bonne Chance and your life in Paris?'\n\nShe looked at me with a sad look on her face.\n\n\"You are always going to be the dark secret in my heart, standing between me and Philippe. The one I pray to God Philippe never learns about.\"\n\n'And you will always be the One that Got Away.\"\n\nTHURSDAY, SEPTEMBER 1, 2005 11 a..m.\n\nI was probably dragging a little bit when I finally walked into my office, but staying until 2 a.m. and having sex until my poor abused male organ had been whipped into a state of total exhaustion by a Frenchwoman's pussy, ass, mouth and hands will do that to you. I think she would have used her toes if we could have figured out a way to do it and if I'd had any bent in that direction.\n\nI had gotten up at 6 a.m., literally dragged myself into the gym and went through the motions of a workout. My legs felt like I was walking on rubber bands. They were just tired and I felt every one of my almost 42 years. \n\nBut I forced myself. If I let every temptation keep me out of the gym, I knew in a few months I'd be the same old flabby loser I'd been for years. That wasn't going to happen.\n\nI waved at Susie as I walked in and found out that Cheryl was still out with the bug that had knocked her down two days before. \n\nI wasn't happy that Cheryl had gotten sick, but in hindsight I was damned glad she hadn't been around when Aline showed up. Somehow I knew she'd have discovered who Aline was and somehow the word would have gotten back to Debbie.\n\nI had no reason to be afraid of a confrontation. We were through and there was nothing that Debbie could do to screw things up and in a very real way, I'd love to rub Debbie's nose in the fact that I could still attract a woman like Aline to my bed. \n\nBut it would complicate things. For now it was just Aline and myself in our little bubble, me trying as hard as I could to shrink our world down to just two of us over the next two weeks. I knew it was impossible, but I wanted to keep Aline away from as much of my regular life as I could.\n\nWhen I opened my office and switched on my laptop, I took a moment to yawn and rub the tiredness out of my eyes and then my phone rang.\n\n\"You have a caller,\" Susie said. \"She wouldn't identify herself.\"\n\n\"I'll take it. And who would this be?\"\n\n\"Is anyone listening?\"\n\n\"No.\"\n\n\"Good. I just wanted to let you know what I was doing, Mr. Maitland. Can you guess?\"\n\n\"Probably reading a good book or maybe getting ready to take a taxi out to look around Jacksonville?\"\n\n\"Would you believe I have my fingers in a certain place and I'm doing something that is making me feel very, very good.\"\n\n\"I can't imagine what you're talking about.\"\n\n\"And I'm imagining that it's a part of you that's rammed up real far inside that is making me feel wonderful. I miss you. I know you have a job. But I miss you and wish you were here.\"\n\n\"I'm going to have to hang up in just a moment, Miss. I'm afraid this conversation is going in a direction that will lead to me being very unproductive today, and I do have business to take care of.\"\n\n\"Very well, Mr. Maitland. I'll let you get back to business, but I want you to know what I'm doing and what I'm thinking about and to remember that you have very, very important business to take care of tonight.\"\n\n\"Trust me, I won't forget.\"\n\nAfter I'd hung up I felt a little twinge in a part of my anatomy that I was sure was going to be out of action at least until tonight. Jesus, the woman was like walking Viagra. But I forced my attention back to business. \n\nThe first order of business was to make plans to be in court next week to ask the court to give Judy Johansen, The Killer Granny, the death penalty. I'd managed to convict her of first degree murder a few days before, but there was still a long way to go to get the judge to hand down a death penalty. \n\nThe penalty phase was where Lew Walters would pull out all the stops, using family, friends, the sobbing defendant, to convince the judge that the 67-year-old grandmother should not be strapped down a prison gurney while poison was pumped into her veins to stop her heart. It was up to the judge, and I honestly, despite my nickname of Angel of Death, didn't have any great urge to see her put to death.\n\nLiving out the balance of her life in a prison jump suit, having to see her family in a prison visiting room with guards around, having to use her personal funds or family funds to buy cigarettes or other items from a prison canteen instead of vactioning on a beach in Bali would be enough of a punishment. \n\nI didn't need to see her die on that gurney. But on the following Wednesday Lew Walters and her family would be pulling out all the stops to see that she didn't get the death penalty. I could live with that. \n\nBut I didn't want her to get five or ten years, be out earlier with good behavior, and get out with years ahead of her as a free woman. I didn't necessarily want her to be put to death, but I needed her to die in prison.",
        "I made my plans to be in the courtroom next Wednesday to make sure things went the way I wanted them to. After that I started working on other cases. \n\nOne of the ones that bothered me the most was a guy named William Sutton. I was virtually certain he had beaten his pregnant soon-to-be ex-wife, and his unborn son, to death with a tire iron. But there was a too-great chance that he was going to walk away a rich and free man as the result of his brutal crime.\n\nSutton was a 37-year-old stock advisor for a Ponte Vedra-based financial consulting firm with clients up and down the East Coast. The firm was fairly successful and so was Sutton, but he hadn't come from money and all he had to his name was a fairly middle-class income.\n\nBut he'd lucked into finding a marrying a pretty registered nurse named Sheila Conroy and they both thought she was as lower/upper-middle class as he. She was a pretty blonde with an infectious smile and a nice shape including, from pictures, a world-class ass. \n\nThey apparently had loved each other. At least from the smiles on the pictures taken in the first few years of their marriage it appeared so. \n\nAnd Sutton wasn't hard on the eyes. 6-2, brown hair, fairly well built. But I'd seen the pictures when I was reviewing the case and there was something about his eyes that caught my attention from the first moment I saw him. And what we'd learned about him in our investigations bore out that impression.\n\nWilliam Sutton was, to put it succinctly, an asshole. He was the kind of guy that blamed all his losses on someone else, all his triumphs on his overwhelming abilities. He was the kind of guy who made it his mission to make his co-workers look bad, and reveled in screwing a competitor.\n\nHe was the kind of guy that never forget a slight or a hurt anyone did him. He was smart enough to play nice until he was in a position to stab you in the back, and he never missed an opportunity. But he did it in such a way that it couldn't be traced back to him. Sneaky, vindictive, determined...that was William Sutton.\n\nHe was also the kind of guy, we deduced from numerous interrogations, that loved woman....a lot of them...before and after marriage. He was good looking and smooth and didn't have any conscience at all so he fucked a lot of them. \n\nAnd naturally enough, while doing so, he became insanely jealous of his pretty -- as far as we could tell, faithful -- wife and made her life a living hell following her and checking her phone messages and questioning her every move for two years.\n\nUntil she finally snapped, they had a violent fight, she wound up in the hospital and he wound up accused of assault. Sutton's widowed mother had put up the money for a decent attorney and the attorney muddied up the water enough that it was dropped to a misdemeanor. \n\nThey split and it was then that they both made the discovery that Sheila's estranged father, who had walked out on her and her family when she was a year old, had become a very wealthy man. He had no family of his own when a stroke got him at age 55 and left Sheila and her two sibilings a $15 million estate which would be divided equally.\n\nSo Sutton was facing a divorce and the loss of at least half of $5 million. Which did not make Sutton happy. He was a man with a hot temper and a lot of character flaws and I think he really believed his pretty wife had been running around on him. \n\nHe and Sheila split and he went lived in an apartment on the Southside for several months before moving back in with his mother in her home in a subdivision of Ocala, a famous racehorse raising community about a hundred miles south of Jacksonville off I-75.\n\nAnd then one night in March Sheila had gotten off a shift at St. Vincent's in downtown Jacksonville after telling friends that she'd gotten a call from William Sutton asking for one last chance to meet and talk. And Sutton had been, as everyone who knew him told us, one charming son of a bitch. \n\nShe said she wasn't sure she would meet with him, but after five years of marriage, and carrying his son, she felt he deserved a last chance to talk with her.\n\nShe wasn't due back until two days later on her next shift and although some of her friends tried to call her the next day, they weren't too alarmed when they couldn't reach her. Anything could have happened and ex-wives having a last fling with ex-husbands wasn't the most unusual thing in the world.\n\nThey became alarmed when she didn't show up for her shift and checked her apartment. They couldn't find her and police in Jacksonville contacted Ocala police. \n\nThey found Sutton playing golf on a local range and were told he hadn't been out of Ocala in a week. His mother backed his alibi. A few neighbors reported seeing his car when they went to sleep that night and still in front of his house when they woke up a 6 a.m. the next morning.\n\nTwo weeks after the night she disappeared, a body was found in the dunes off Regency in Jacksonville heading toward the Beaches. It had been beaten so badly and the animals had already done enough damage that it was only by dental records and then one finger remaining on the body that gave a good print that Sheila and her unborn child had been identified.\n\nIt was hard to tell, but forensics told us that somebody had used a hard object, like a tire iron for example, to beat her head in, to smash her ribs and arms and legs and it looked like all of her teeth out, probably before she died. There wasn't much of the fetus left, but it looked as if her attacker had taken the tire iron to it too.\n\nWe had brought Sutton in for questioning a dozen times. We'd interviewed his neighbors, Sheila's friends and co-workers, Sutton's mother and assorted girlfriends. \n\nAnd what we were left with was the certainty that he had driven from his home in Ocala at night after his mostly elderly neighbors turned in, met with his soon-to-be ex, overpowered her, taken her into the deserted dunes, and beaten her and his unborn son to death.\n\nBut we couldn't prove it. There was no physical evidence. No one had seen the two of them together. No one could swear that he had even left his mother's home. \n\nHe could have reached Jacksonville in a couple of hours on the Interstate, killed her, and gotten back in five or six hours tops. But we had no proof he'd done so.\n\nAnd she was a rock, swearing very believably that she had been up and down with an upset stomach all night the night that Sheila was murdered. And she had spoken to and seen her son sleeping in his bed four or five times during the night. She said it was impossible that he had left her home.\n\nFor nearly seven months we had investigated, we had questioned, we had probed, we had interrogated Sutton a half dozen times here and there and couldn't develop a crack in his story. It was driving me crazy. \n\nI was picking up the phone to call Ned Colman, the homicide detective with the Marion County Sheriff's Office to check in with him when Cheryl buzzed me.\n\n\"Mr. Maitland, Detective Colman from Marion County is on the line.\"\n\n\"Colman, talk about great minds. I was picking up the phone to call you and see if anything new was shaking down there.\"\n\n\"Are you sitting down?\"\n\n\"Oh, shit, don't tell me...\"\n\n\"Billy Boy might be up shit creek without a paddle.\"\n\n\"Give.\"\n\n\"There's an old guy named Edgar Bell who lives about 200 yards down that dirt road from Sutton's mom. There are only five houses on that cul de sac and you know the other three residents are half dead with age and nobody was up that night. We couldn't reach Edgar because he has a habit of taking off from weeks or months at a time to visit relatives or just to RV around the country.\n\n\"He came back into town two days ago and called us this morning. I went out to talk to him and I think we have the son-of-a-bitch. Edgar left town the day after Sheila was murdered and didn't hear anything about it until he got back into town. He hates Sutton's mom because of some boundary dispute they've been squabbling about for years. And he hates Sutton.\n\n\"But he's clear as a bell. He was up at midnight the night Sheila was killed. He remembers very distinctly Sutton's MOTHER's car pulling down the road, slowly, with its LIGHTS OFF. He thought that was very weird. The old lady never goes anywhere at night.\n\n\"At 6 a.m. the next morning the sun was just rising, but it still wasn't full light. He had gotten up to catch the early morning news when he looked out his window and saw the old lady's car pulling back down the road and into her driveway. The lights were off and it was going slowly and quietly. \n\n\"He says he was looking at the car when he saw Sutton get out, walk over to a burn barrel in their back yard and dump something that might have been clothes into it. Then he went inside his mother's home. Wilbur thought that was weird but didn't think much of it. \n\n\"He left on a tour of the Canadian Rockies the next day and didn't know anything until he got back and heard all the news. He called my office five minutes later and I've got his entire statement.\"\n\n\"Damn. You believe him? He's not just some disgruntled angry neighbor trying to get back at the old lady?\"\n\n\"He could be lying, but I doubt it. The story rings true. And he says he'll take a lie detector test. He could have been where he said he was and seen what he said he'd seen. I made it very clear to him that if we go ahead on his story, and prosecute Sutton on his testimony, and we find out he's lying, we'll nail his ass for perjury and he won't ever be going on any jaunts ever again.\"\n\nI just sat there silently for a few minutes.\n\n\"Alright,you've got to get his testimony. Video tape it. I want a clear chain of evidence if he drops dead tomorrow. Something we can still introduce. Have him take a lie detector test.\n\n\"Then I want you to convince him to move out of his house and contact us so we can put him someplace up in Jacksonville at our expense where he can vacation. I'll assign security for him up here. If he balks, tell him I'll arrest him, hold him as a material witness and he can spend the next few months sitting in a comfortable jail cell instead of a condo somewhere.\n\n\"Then I want you to get your Sheriff to assign someone on a regular basis to keep an eye on Sutton. I don't want him leaving town without us knowing about it. And where he winds up. Tell him we'll help with funding if you need overtime.\"\n\n\"You think he'd go after Bell?\"\n\n\"You think a guy who'd beat his own wife and son to death would hesitate to kill or arrange an accident for an old man trying to send him to the death chamber? Anyway, get him up here so I can interrogate him. If this works out, we have to decide whether to go ahead now while the old man is alive and healthy. Is he?\n\n\"He's alive. He's 79. Got a bad heart, diabetes, a pacemaker. I wouldn't place a large bet that he'll be around if Sutton doesn't go to trial for another year or so.\"\n\n\"Alright, we need to move on it.\"\n\nAfter I'd thanked Colman again I tried to decide if it was worth rolling the dice. We still had no hard evidence. There had been no bloody clothes recovered after Sutton's house was searched, no other evidence of murder, no murder weapon. He or his mother's car hadn't been spotted in Jacksonville. \n\nWe now had what would probably be a strong eye-witness to testify against him, but he had a mother to testify for him. Who would the jury believe? This was a much bigger crapshoot than the Killer Granny.\n\nAnd I could never forget, we'd get only one bite of the apple. If I brought him to trial and he walked and we later got the goods on him, he'd be free forever. We could never try him again for the murder. And trying him for violating her civil rights only worked for the Feds.\n\nBut we had to at least get ready. I was on the phone for the next three hours and it was 2 p.m. before I came up for air and realized I was hungry. I was going to ask Susie to call in something when I changed my mind and decided I wanted to get out and stretch my legs. \n\nI walked across the street to a little sandwich shop that strangely enough served pretty good salads and I ordered one with broiled chicken. There was a day my stomach would have rebelled at the very idea of broiled chicken, but I had changed. I had changed.\n\nI was sitting at a counter running along the plate glass window at the front when I realized someone was standing behind me.\n\nI turned and looked into the eyes of a black cop standing there with his hand on his holster.\n\n\"Officer Smith. What can I do for you?\"\n\nHe was about 5-foot-10, slender but muscular. He was one of those black guys so black his skin was almost blue. Good looking. Hair cropped short and tight to the skull. He had that typical cop stare. He was looking straight at me, but his eyes shifted almost constantly so that he was aware of everything going on around us.\n\n\"Could I talk to you for a minute, Maitland?\"\n\n\"I think your sheriff would say that's Mr. Maitland.\"\n\n\"No one died and appointed you God. It's Mr. Edwards, but you're just an Assistant.\"\n\n\"No one ever gave you the lecture on how to make friends and influence people? How to deal with prosecutors\"\n\n\"I deal with them fine, except when they're screwing me over.\"\n\n\"I see you're back in uniform. What's your beef?\"\n\n\"I'm back in uniform, but that possible homicide charge is still hanging over my head. You've never come back with a finding on my case, just told the Sheriff the resolution was still waiting on a final decision. You gave me back my street job, but the cloud's still over my head. Those rednecks' family has filed a lawsuit for $ 1 million against me and I can't shut it down while you're holding the criminal case open.\"\n\nHe stepped closer and lower his voice so only I could hear him.\n\n\"Melanie left me. She couldn't deal with the pressure of never knowing if I was going to be charged. And her family said she was a nigger lover for hanging with the man that had killed her husband and two brothers. \n\n\"She couldn't defend me, couldn't say I was defending myself because your office won't clear the case. And one day she just told me she couldn't take the pressure and the looks and walked out of me.\"\n\nHe leaned in closer and gave me a contemptuous look.\n\n\"Is that what it was, Maitland? You couldn't hold that whore of yours with your tiny dick so you get a kick out of costing me my woman?\"\n\nI leaned back and looked at his quiet, tense face.\n\n\"I would never accuse one of Jacksonville's finest of being stupid, but did you really think you were going to come in here, insult me, get me to swing on you or so something equally stupid that would get me tossed off your case? You figured another SA would yield to the pressure and just give you a clearance on a fatal triple shooting?\"\n\n\"My woman didn't have to go off and suck another man's cock to get her jollies. She liked what I had, a lot more than that pencil-dicked husband of hers.\"\n\nI just shrugged.\n\n\"I'm sorry your woman left you. I'm sorry three men are dead that didn't have to be dead. I'm sorry your career has been in limbo for more than a half year. I'm sorry you might wind up before a grand jury. I'm sorry you might close out a pretty good career in law enforcement behind bars yourself. \n\n\"But, that's out of my hands. If I send this to a grand jury, it's up to a bunch of strangers how your life works out.\n\n\"But,\" I said, straightening up and staring into his eyes, \"It's all on you, Shawn. You pulled out a department Glock and killed two men. One of them was your girlfriend's husband. Granted, they broke into your house, but they were pinheads from everything I've heard.\n\n\"You're a seven-year veteran cop. You've been in shooting incidents. You've won a couple of awards for heroism and public service. You weren't panicked. Most men would have been but I don't think you were. You could have shot one or two of them and let the other one go and likely you would have skated. \n\n\"I don't think you were panicked, but with the Sheriff's Office and the NAACP backing you, I don't think I could have gotten any traction. There would have been a hearing in a couple of weeks or a month, you'd have been exonerated. You'd have had your career and your woman.\n\n\"But you couldn't let the last one go, could you? They had the nerve to enter your home, they tried to beat you up, they grabbed your woman, and knowing them to be the rednecks they were, I'm sure they called you a nigger.\n\n\"They pissed you off and you made the mistake of thinking because you were a cop you could get away with breaking the law.\n\n\"You killed the husband and brother and the other brother broke and ran. And you couldn't let him get away with it. You shot him in the back and when you looked around and couldn't find any weapons on them, you used a drop gun, one that couldn't be placed, and put it on the third brother. \n\n\"You were too smart, Shawn. We checked and they didn't have guns. They didn't use guns. If they'd come after you with clubs, that would be believable. But not guns. And a weapon that can't be traced! We can't find prior ownership. No numbers. \n\n\"Somehow they just wound up with the perfect untraceable weapon. \n\n\"It stinks. It stinks to high heaven. All your bother officers know it. The Sheriff knows it. My boss knows it. Even the NAACP knows it. And the only reason we haven't rolled on you is that you're a decorated cop -- and you're black.\n\n\"But that's not enough Shawn. I'm tied up now, but in the next couple of weeks I'm going to let the Sheriff and my boss know I'm taking this to the grand jury. I'll leave it in their hands what to do with you. But you will go to the grand jury and nothing's going to keep you out of there.\"\n\nHis hand dropped to the butt of his Glock and I wondered for just a moment if he could possibly be stupid enough to do something in front of a whole room full of witnesses, including a few plaincothes cop detectives.\n\n\"You do that and it would be the worst mistake you ever made, Maitland. You're not so big that you can't be crushed by the people on my side, and the Sheriff. Edwards is a politician. When they put enough pressure on him, he'll step on you. \n\n\"And no matter what happens, you son of a bitch, I won't forget this. I'm going to be watching you, and someday I'll get my turn. Wait and see.\"\n\nHe walked away, I finished my salad and turned to look at the detectives sitting toward the back of the sandwich shop. They found something irrestibly interesting to stare at where I wasn't. Didn't surprise me. Cops stick up for each other. Even the murdering assholes.\n\nI had just walked back into my office when the phone rang.\n\n\"Hi, Dad.\"\n\n\"Hi, BJ. What's happening?\"\n\n\"Look Dad, I know you said you didn't want to do anything for your birthday, but Kelly and Mom and I were talking. We would really like to take you out Saturday night for your birthday. Just a quiet dinner at a restaurant. A couple of hours. How about it?\"\n\n\"BJ, I do thank you and your sister....and your mother...but I'm in the middle of two really big cases right now. You know how it is when I get a hot one. I don't have the time to see or talk to anyone. I promise you that in two weeks -- say Mid-September -- I'll make the arrangements and we'll do something nice.\"\n\n\"But you're going to be working until all hours Saturday night?\"\n\n\"Probably, and if not, I'll be at my condo sleeping. Running like this is really taking it out of me. I'll probably just go to bed very early. I'd be rotten company. Come on, the birthday will be appreciated more in a couple of weeks when I come up for air. Please, do it that way for me, okay?\"\n\n\"Okay, I'll pass it on to Kelly and Mom. But it's a promise that in two weeks -- no later -- we'll go out for your birthday. Right?\"\n\n\"I promise.\"\n\nIt was past five thirty and I was in the middle of three phone calls when Susie buzzed me and I put everybody on hold.",
        "\"That lady is on the phone again.\"\n\n\"Oh....I'll take it. Aline, I'm sorry. I just realized it's almost 6 p.m. I never meant -- but shit. I said I wasn't going to say those words again. Give me 15 minutes to clear up and I'll be out of here. I'll meet you back at condo.\"\n\n\"It's okay, Bill. I know how it goes. You think that's the first time I've ever heard those words. I'm back at the condo. I went out looking around today. That will give me time to shower and get naked for you.\"\n\nI tried. I honestly tried. But it was 7 p.m. before I managed to get out the door. And it was nearly 7:30 before I walked in the door. I could have called her on the condo phone, but I wanted to be looking into her eyes when I apologized. No one could be that stupid on a continuing basis.\n\nShe really was naked, a symphony in pink and red and black as I walked in the door. Five minutes later I was inside her. Fifteen minutes later I was lying next to her while we talked about where we'd go and eat. Thirty minutes later I opened my eyes and realized I was lying in bed and her head was nestled in my groin and I felt very good down there. \n\n\"Oh, God Aline, I'm such a shit. I fell asleep on you. I really am a hundred years old. But you don't have-\"\n\n\"Shut up,\" and she went back to sucking and licking. I wouldn't have thought I had it in me but in about five minutes I was bucking upward while she tried to stay with me. And she did. I lay back and debated sticking myself with an ink pen to keep my eyes open.\n\nThen she was lying with her head nestled against my shoulder.\n\n\"You deserve so much better than me.\"\n\n\"You're no spring chicken,\" she said with a small giggle. \"An old man needs his rest. And you were up very late last night and I kept you very busy.\"\n\nI pulled her mouth up to mine and kissed her for a little while. \n\n\"Not that old, I hope. You want to go out now? We can still grab a bite. Maybe hit a club. And then come back for....\"\n\nHer face was buried against me as she whispered, \"You're not an old man. But you're human. I kept you up almost all night fucking me very hard. And then you got up and went for a workout. And if I know you, you've been busy every minute of this day on things that are life and death to a lot of people.\n\n\"And you're trying to meet those obligations and still be be a true lover to a woman who shows up with no warning on your doorstep. You are a very strong man. And you just fucked me -- as you Americans say, I think -- crosseyed and then I got you to come in my mouth one more time.\"\n\nShe literally climbed up me until we were eye to eye again.\n\n\"I'd rather be lying here next to you, listening to you breath, than eating in any restaurant and dancing in any club. You don't have to entertain me. I came here to be with you, not to be entertained. Understand.\"\n\n\"Understand. Yes ma'am.\"\n\n\"Now go to sleep. You need your rest. And I believe we've got a birthday to celebrate Saturday. I need you rested for that, because I intend to celebrate you straight into the ground on your birthday.\"\n\nI don't remember anything else. Not until four a.m. by the alarm clock. I found myself awake and rolling over onto her naked body. Somehow I was hard and when I slid between her legs she was already wet and welcoming. She came awake slowly as I slid into and out of her warm, liquid center. I felt and smelled and tasted the femaleness of her body and skin, then held the globes of her ass in my hands as I pushed deeper and deeper into her.\n\nI think she came, shuddering against me and I came without much force inside her. Then I slid down beside her and we both drifted off into sleep again. And I remember thinking that this was what I wanted.\n\nIt was married sex. Easy, undramatic sex. No dining and dancing and getting a woman drunk until you get got into that pussy and rammed it hard while the woman under you screamed. There was no conquest.\n\nJust two bodies together naked and comfortable together, drifting into and out of sleep. How much more boring and middle aged could that be. But I realized it was what I needed. What I wanted. Before it had gotten bad, it was what I had had with Debbie. And I hadn't realized until this moment how badly I missed it.\n\nAnd then I was asleep again.\n\n##################################################\n\nFRIDAY, SEPTEMBER 2, 2005 4 p.m\n\nShe came out of the dream gasping. Teller held her tight against him until the shivering stopped. He'd prepared her, but as he'd expected, he hadn't needed to empty her stomach this time. Although she heaved and gasped, she didn't spew any vomit.\n\n\"oh...oh.....oh....\"\n\nHe laid her back against the couch and watched her as the tears streamed down her face. She gasped for air, caught her breath and closed her eyes tight, then opened them and wiped then tears off.\n\n\"Doctor.\"\n\n\"How are you feeling, Debbie?\"\n\n\"I feel....terrible...disgusted....I can smell that bathroom....\"\n\nHe sat watching her without speaking. He wanted to see what she brought back from the experience.\n\n\"I saw their faces. Clearly this time. The last time it was....foggy...or something. But I could pick them out of a lineup this time. I remembered them. Her hands curled into fists.\n\n\"The motherfucking bastards. If I could find them, I'd-\"\n\n\"What else?\"\n\nI saw the bathroom more clearly. It had to be in a big restaurant or hotel. There were a half dozen stalls and four or five urinals. The floor had been clean, but then it there was....urine...piss... all over the floor....all over me.\"\n\nHe continued his silence.\n\n\"I tasted....piss....and....semen....cum......not the first time...cum I mean....\"\n\nShe gave him an embarrassed little smile.\n\n\"I mean...doctor, most women know what cum...semen tastes like....guys love it when you swallow....so I knew that...but piss....God, I can't understand women that like that....my God...\"\n\nHe leaned toward her and caught her gaze.\n\n\"Do you realize how this experience was different from the last time?\"\n\n\"What do you mean?\"\n\n\"Do you remember how you were last time?\"\n\n\"I -- what are you saying?\"\n\n\"Think back to the last time. When you came back. What did you do?\"\n\n\"I-\"\n\nShe looked at him in surprise.\n\n\"I was vomiting...not as bad as the first time since you'd gotten me cleaned out, but I still have thrown up my lungs if I could.\"\n\n\"So you had a violent physical reaction to the memory of what happened/\"\n\n\"Yeah, yes I did.\"\n\n\"And what else?\"\n\nShe rubbed her face.\n\n\"I....I....guess,,,I'm not as upset as I was the last time....\"\n\n\"Remember, you were panicked...this time you were upset when you first awoke, but....now you're calm again. Very quickly this time. Did you notice?\"\n\n'Yes...but.....why? The memory is even clearer now. It should be worse, shouldn't it?\"\n\n\"Not necessarily. It was a nightmarish experience the first time and to a certain extent the second time. Nightmares act on a subconscious level. What you're afraid of isn't necessarily what you remember. Now you're remembering what happened more clearly, and it isn't affecting you as strongly.\"\n\nShe sat up on the couch, putting her feet under her and brushing her skirt which had risen up almost to her panties down with her hands.\n\n\"Why wouldn't it hit me as hard? It was so damned disgusting....so.....I told you that I like dominant men. I did....do....like men that take control of me...but not rape...not like that....\"\n\n\"It was pretty bad even from an objective, male point of view...but...\"\n\n\"But what?\"\n\n\"There's a reason why it's losing its impact on you, Debbie. A reason you realize even as you can't get it clear in your mind.\n\n\"I don't....I'm not sure.....I.....I don't know why but I....do feel it...why doesn't it bother me as much?\"\n\n\"Think about it.\"\n\nShe looked down at the Rorschach design on the coffee table and tried to get the memory clearer in her head. But while parts of it were crystal clear, it...didn't....feel right....\n\n\"I don't know, Doctor...it's just that....something....something doesn't feel right.\"\n\nHe took one of her hands in his and looked into her eyes.\n\n\"I know. Tell me what your assailants looked like.\"\n\n\"One of them was....dark haired....tall, maybe six foot one or two....slender....another was a few inches shorter, still taller than me...he was thinning on top....light brown hair...they were all wearing suits...not real fancy...dress, but business suits....the third one was blonde, heavy...a little chubby...\"\n\n\"And how old did they appear?\"\n\n\"I...uh....maybe in their late 20s...early 30s...not old...\"\n\n\"They weren't teenagers?\"\n\n\"No.\"\n\n\"Okay, tell me what you were doing before you went into the restroom with them?\"\n\nShe tried to remember how they'd gotten her to go in there. She couldn't be a big enough slut to walk into a restroom on the spur of the moment with three strangers for a gangbang. It had to have been arranged. But the memory didn't come.\n\n\"Nothing? What happened after they left you covered in their urine and semen on that bathroom floor?\"\n\nAgain, nothing would come to her. The memory started with her in the restroom and ended with her on the floor.\n\n\"I can't remember.\"\n\n\"I'm not surprised.\"\n\n\"What do you mean?\"\n\n\"Think about this. Do you remember how they talked to you as they assaulted you, as you fellated them?\"\n\nShe thought about it. She remembered the insults, the jeers.\n\n\"And there's nothing about that that struck you as odd?\"\n\n\"Just that...\"\n\nHe saw the realization strike her. She looked at him with surprise in her eyes.\n\n\"They weren't teenagers, were they? And yet they were calling you an old slut and expressing their disgust for you, to the point of refusing to rape you for fear of disease. Unless it occurred last week, you must have been in your mid to late 30s because it wasn't until that time that you said your marriage started to fall apart.\"\n\nHe looked her body up and down again and said, \"I'm not flattering you to say that you are an attractive woman who doesn't look your age. And your description of the three men makes them look roughly your age. There's no reason they would be talking about you in those terms as an older woman, unless.....\"\n\n\"Unless I were an older woman.\"\n\nHe smiled.\n\n\"And since you are not an older woman, that means that....\"\n\nShe shook her head, unable to grasp what she'd just said.\n\n\"How could the memory not be real? It felt so real. It was just a....dream...a nightmare?\"\n\n\"It was a memory....but not one....\"\n\n\"I don't understand.\"\n\n\"Everyone, I think, has heard of people who can remember where they were when the Twin Towers were struck. Or when Pearl Harbor was hit. Or during the big football game that was the biggest event of their childhood. People that were nowhere near a television screen will remember seeing it in vivid detail years from now. And they'll swear under oath they actually did see it. And they'll believe they saw it.\n\n\"It's a false memory. A fake memory. It's built on other knowledge and...wanting...to have seen it.\"\n\n\"How could that be the case in this?\"\n\n\"I'm not sure right now. But, everything fits. A true memory has broader scope and it...has more detail. Your detail is crysal clear, but sharply limited. You can't remember anything before or after...how it happened...the aftermath...Eventually or by this time \n\nsome of those details would have been working their way into your conscious mind.\n\n\"But, at the same time, you have a clearer view of what happened, of the people involved, than anyone could have...if they weren't there when it happened. You couldn't have those events so clearly established if it was something you only heard about.\" \n\nShe shook her head again.\n\n\"I still don't see. I was there, but I wasn't?\"\n\n\"If I'm guessing right, you were there. You saw the assault, or its aftermath, but you weren't the victim. It had to be someone very close to you to have had the emotional impact that this incident had on you personally. And it had to be an older woman. Does anyone fit that profile?\"\n\n\"Clarice...my Aunt Clarice.\"\n\n\"That was my thought. I think something happened to her and you were close by or involved in some way. I think that over time, especially after she died, the incident festered in your subconscious and eventually worked its way into your mind as a dreamlike memory.\"\n\nThey stared at each other. Debbie listened to the muted rhythm of the Grandfather clock and thought about her aunt.\n\n\"But there's something else, Debbie. Something that doesn't make sense right now.\"\n\n\"A lot of this doesn't' make sense, Doctor, but at least I'm not hurling and I don't feel sick to my stomach. What?\"\n\n\"The repressed, transformed, memory, has been in your mind since before your aunt died -- committed suicide. What triggered it?\"\n\nIt didn't take a moment.\n\n\"The divorce.\"\n\n\"That's what it seems like. It rumbled around inside your mind until your divorce was finalized, and then it came roaring back. So not only does your ex arouse feelings of rage and anger, but your final breakup brought a false memory of yourself being raped and abused to the forefront on your memory.\"\n\nShe put her head in her hands.\n\n\"That doesn't make sense, Doctor. Every bad thing I could ever think of to say about Bill, would never include involvement in something like that. Why would I associate the attack with him? With our divorce?\"\n\nHe sat back and stretched.\n\n'I don't know, Debbie. Like I said, that's what makes psychiatry fascinating. There has to be a link. We just haven't discovered it yet.\"\n\nShe looked up at him and he was surprised to find her smiling.\n\n\"What?\"\n\n\"I just realized, doctor. I didn't.....I didn't cheat on him....the way I thought I had. I might have been a bad wife, but I wasn't a complete slut. I didn't think I'd ever be able to look him in the eye again. Now maybe I can.\"\n\n######################################### \n\nFRIDAY, SEPTEMBER 2, 2005 4 p.m\n\nI was waiting at the door to the Duval County Jail booking office as the cruiser pulled up into the parking lot behind the jail entrance. It was a Marion County Sheriff's Office cruiser. \n\nColman stepped out of the passenger side and while the driver went to open the back door of the cruiser he walked over to me with a big smile.\n\nColman wasn't that much bigger than me, but his damned cowboy hat had to give him another eight inches in height. I'd never seen a man wearing a hat that big, but other than that, Colman was a pretty nice guy. I figured he must have a Napoleonic complex. He grinned as he took my hand in his and tried to shake it off.\n\n\"I'm glad you rolled the dice, Bill. I was starting to get a damned ulcer worrying that son of a bitch would get away with it.\"\n\nThe taller driver was helping a handcuffed, dark haired man dressed in shorts and a tee-shirt out of the back of the cruiser.\n\n\"We nabbed him mowing the grass,\" Colman said laughing. \"He wanted to get changed but I said he needed to get used to a prison jump suit because that's what he'll be in for the rest of his life. \n\n\"Talk about chewing nails. I was hoping he'd take a swing at me and I think he almost did. But at the last minute he remembered I was carrying a .345 magnum and he thought better of it.\"\n\nSutton was 6-foot-2, slender but broad in the chest and well muscled. He was probably 220 or 230. A bigger man than he looked at first glance; a big, strong man capable of doing a lot of damage with his bare hands or a metal bar.\n\nIt would have been nice if he'd lost control of that volcanic temper, but bastards like that never lost control when you wanted them to.\n\nColman's deputy walked him over to us. He looked down on me with that instinctive air of contempt big men have for men who are shorter. \n\n\"Maitland. I see you finally developed some balls. It was the old fart's story that pushed you into filing charges, wasn't it?\"\n\n\"Why do you assume it was Bell who dropped the dime on you? And what could he have possibly told us that would have convinced us to charge you?\"\n\nI thought he was too smart to fall for it, but if he indicated he knew anything about Bell watching him drive off and come back he'd be digging his grave with his own mouth.\n\nBut he was too smart.\n\n\"I don't have to be a genius. You screw me around for months, but you don't file charges so I can clear my name. You just leave me twisting in the wind. \n\n\"And then the crazy old bastard that's hated my mother and me for 20 years comes back into town and a couple of days later this redneck prick puts cuffs on me. I guessed he's probably behind it.\"\n\n\"You'll get the whole story pretty soon, Mr. Sutton, but you sure you wouldn't like to confess? I think you'd sleep better if you got it off your conscience. It must be hard at night seeing the face of your wife after you finished working her over with that tire iron. \n\n\"And they said you smashed her stomach in so badly that you probably saw part of your son's ripped apart body. He was your son, you miserable son of a bitch. Even if you hated your wife, how could you do that to your own blood?\"\n\nHe just looked at me like you'd look at a bug on a windshield.\n\n\"It might bother me a little if I'd done it. But I'm an innocent man. I didn't touch that miserable whore that was screwing around on me behind my back for years. And I didn't touch her bastard. God knows who his father was, but it wasn't me. I hadn't dipped my dick into that diseased cunt for months before she got pregnant.\"\n\n\"That's strange,\" I said, staring into those dark, bottomless eyes. \"I never made it public because I wanted to save it for the jury, but we were able to run a DNA analysis on the embryo's remains and we got your DNA with a court order. The baby boy you dismembered was William Sutton Jr.\"\n\nHe just kept staring at me with no change of expression.\n\n\"He was your son, Sutton. He probably would have had your eyes, your features. No matter how terrible a slut your ex might have been, he would have been yours. \n\n\"Did you really think she might have gotten pregnant by another man? All we've been able to discover indicates she never cheated on you. There's nothing to indicate it. Does your mother know you murdered her grandson?\"\n\n\"I didn't murder anyone,\" he said, and smiled at me. \"You think you've got supernatural powers or something, Maitland? You taking your press clippings seriously? All that Angel of Death bullshit? You're just a cheap little lawyer...a cheap little lawyer whose wife I'm going to fuck someday after I beat this charge.\"\n\nHe looked down at me and grinned.\n\n\"Yeah, everybody knows your story, Maitland. Pitiful little punk. Couldn't keep your pussy happy at home so she went and found someone younger. I should have some sympathy because I was married to the same kind of bitch. But I don't. I will walk. There's no way in hell you're ever going to convict me with no evidence.\n\n\"You don't have prints. You don't have blood evidence. You don't have a weapon. You don't have anyone who even saw me with the bitch the night someone did the world a favor and beat her brains in. You don't have anyone who ever heard me talking to her that night, despite her lying bitch friends.\n\n\"I'm glad you let the old bastard convince you to go for it. I don't want this hanging over my head for months or years. Now I can beat this shit and start my life over - $5 million richer. There's no way her fucking brother and sister can keep me from getting it. We were still legally married when some good samaritan did me the big favor of sending her to hell.\"\n\nHe stepped closer to me and I sensed Colman putting his hand on his Magnum but I waved him off.\n\n\"In a few months or a year I'm going to be rich, and free. And you better fucking believe I'm going to spend a chunk of that meeting and wining and dining your bitch ex-wife. And after I spread her legs and fuck her pussy and ass until you could run a two-by-four up here, I'll send you a video and polaroids to pass the time late at night.\"",
        "He turned his gaze down at Colman and sneered.\n\n\"That pig wife of yours is going to be harder to swallow, no pun intended, but I'll fuck her just for the pleasure of getting pictures and sending them to you. \n\n\"And when you come after me with the big-ass gun, I'll have security blow you to hell. You're going to be easy, because at least you've got balls and you won't be able to stand me turning your wife into a whore. Maitland is such a pussy he'll just lay there and take it.\"\n\nI put my hand on Colman's gun hand and squeezed.\n\n\"\"You are welcome to fantasize as much as you like, Mr. Sutton. But you're never leaving the confines of the state penal system again while you're upright. \n\n\"And the only hot sex you're going to enjoy is some inmate's big cock stuck up your ass or down your throat. Probably two of three of them at the same time. And probably coal black because I hear they love good looking white boys like you.\"\n\nHe just shook his head and kept smiling.\n\n\"It's a date. See you in court, Angel of Death. \n\nAs Colman and the deputy led Sutton in the jail, a late model Caddy swung into the parking lot. A white haired old man got out from behind the driver's side and helped a little old white haired lady out of the passenger side. Leaning heavily on a cane and the old man, she limped toward me. Her gaze chilled me.\n\n\"Mr. Maitland, you are going to be sorry you did this.\"\n\n\"Hello, Mrs. Sutton. I expected you to be along pretty soon. Come to lend moral support to your son. I can't blame you.\"\n\n\"You are filth, Mr. Maitland. Just like that bitch wife of his. She deserved everything that was done to her. I just wish I could have seen it.\"\n\n\"You know her baby was your grandson?\"\n\n\"That piece of trash was no relation to me. And I'm glad it was tossed into the woods for animals to eat.\"\n\nI looked at her and for once words failed me.\n\n\"I was 49, Mr. Maitland, when I became pregnant with William. All the doctors told me to abort him. My husband -- my fortunately dead husband -- tried to make me abort him. But I refused. It was hell, but I bore him and he lived. \n\n\"He has always been mine and I have always been his. Someday we will be buried in the same grave, together for eternity. Nothing can ever separate us. Certainly not a miserable ambulance chaser like you.\"\n\nI just stared through the ice at her, feeling sorry for the miserable old man who must have been a boyfriend. Although God knows I couldn't imagine have the nerve to try to shove a penis up inside that frozen vagina.\n\n\"Thank you, Mrs. Sutton. I was feeling a slight degree of pity for you. No matter what, no matter how twisted and just plain mean you have been, no matter that you're lying to help your son get away with beating a woman and embryo to death, I told myself that you're a mother and mothers have blind spots for their sons.\n\n\" But, I don't have any pity for you any more. You're the reason he's the monster he is today. You molded him into the man he is. If there was any way, I'd have you on the gurney with poison being pumped into your veins alongside him.\"\n\nIf she had had a weapon in her hands, I would have been apprehensive.\n\n\"But it's better this way, Mrs. Sutton. You're old, but tough. I think you'll hang on long enough to see him taken to the Death Chamber at Raiford. I think they'll probably let you be a witness. If I can, I'll be there. I want to see your eyes when his eyes close for the last time. \n\n\"I'm going to be thinking of Sheila and her baby. I'm going to be thinking of what went through her mind as he beat her and her baby to death. And I hope to God, he hurts like hell as he's dying and you feel every bit of his agony.\n\n\"And then I hope you burn in hell with him.\"\n\nI turned and walked away from her although I could feel her gaze burning into my back all the way into the Jail.\n\nSATURDAY, SEPTEMBER 3, 2005 1 p.m\n\nThe beach curved out and bent to the right as the coast curved away to the south down beyond St. Augustine. We were on a stretch of isolated white sand beach tucked in away behind an undeveloped spit of land between St. Augustine and Marineland. There was a newish-paved two-lane highway a few hundred feet away but we could have been on a deserted island. \n\nThere were three or four long palm trees that storms had toppled in past years and the action of wind and water and sun over the years had basically fossilized them. \n\nAs the beach eroded, they were left behind, stark black monuments set against the blinding white sand and the clear blue ocean beyond.\n\nI loved Matanzas for its wildness and those boulders set in the sea, but this didn't even seem to be on the same earth that existed a few miles away. I'd taken Debbie and the kids here when they were little and those visits were among the greatest memories of my life.\n\nAline looked up and down the beach. She was wearing a fairly skimpy red bikini but wore shorts and a shirt over it. We leaned against one of the tree trunks. We could have been the only people on earth. I wished we were.\n\n\"It's like another world,\" she said, reaching out to drape her arms around me. \"Thank you for bringing me here.\"\n\n\"It's not on any maps, but I've always thought it's one of the most special spots on this coast. The only people who know about it are people who grew up here like me or tourists who stumble on it by accident. This is something I could give a French visitor that you couldn't get from any tour.\"\n\nWe lay in each other's arms and smelled the salt breeze coming in off the ocean. There were a lot of things we could have been doing, but nothing that I wanted to do more than hold this woman and stare out at the whitecaps rolling in toward the shore.\n\nFinally, I kissed her on the forehead, pulled her to her feet and we walked through the sand, back through a strip of wooded land and found ourselves back at my Escalade parked on the shoulder of the road, which was deserted.\n\n\"Where to now, my personal guide?\" she said smiling.\n\n\"A little history lesson, Ms. des-Jardins, that someone from Europe might appreciate.\"\n\nIt was only noon and even in early September, the cramped, crowded, tiny little European brick-paved streets of St. Augustine were crowded with cars and strolling tourists from all over the world. \n\nI parked a few streets over from the Castillo de San Marcos and we made our way past the restaurants and the little shops selling fudge and souvenirs of the Old City. In places the little streets were barely wide enough for two small cars to get past each other.\n\nShe stopped at one corner and looked one way and then down the other street. Something flashed in her face that she didn't want me to see and she looked away as if a store awning advertising Authentic 19th Century Salt Water Taffy was the most fascinating thing in all the world.\n\nI let her stand there alone for a few minutes and I could tell from the way she breathed that she was holding in sobs. I came to stand behind her and put my arms around her shoulders and pulled her back to me. I let her hide her face and her eyes because I knew what I'd see if I forced her to look at me.\n\nThis was too much like her real life. Although this was anachronistic today even in Paris, it had the feel of France and Italy and Belgium. I knew it brought back memories of other days and I knew who she remembered standing next to, who she remembered holding her in his arms.\n\nAfter a few moments she wiped her face and without looking back at me, said, \"I am sorry, Ma ch\u00e9rie. I was just...just remembering....how Andre looked when we took him to a small village on the Portuguese coast last Fall. It looked like this, without the tourist shops. He ran along the beach making a mess of his new clothes and harassing the fishermen working on their nets in the sun.\"\n\nShe turned and buried her face against me.\n\n\"I'm sorry. So sorry. But I miss him.\"\n\nI didn't say anything. Just held her. And it didn't matter that she was lying. She missed her son. And her husband. And her life. Which was far from here. But it had been my choice. This was part of it all. And no matter how bad it hurt to know who she should have been with, I had made the deal with the Devil to take the bad with the good of having her here. \n\nWe walked hand in hand to the Castillo de San Marcos, or as everyone in North Florida has called it since well before I was a twinkle in my daddy's eye, The Old Fort. Its rolling green approach was covered with kids and picnicers. We walked up to the entrance and I paid the $14 for two tickets and I led the way.\n\nI wasn't a professional guide, but I had been in here so many times as a kid I felt like I could have done a professional job. I took her through the powder magazine, a dark prison cell, the chapel and guard rooms. The walls seemed to close in, the coquina walls felt colder than the underground location could account for.\n\nWhen I'd been a kid I sometimes fantasized that there were real ghosts here. I imagined that the short -- even shorter than me -- dark haired men in the funny armor and their eyes in paintings both disturbingly cold and at the same time fiery, had left behind their spirits when they had died of disease or enemy attacks. \n\nI knew it was all bullshit, but there had been a lot of pain and dying inside and outside these rugged walls and if there was anyplace in Northeast Florida that deserved a few ghosts rattling chains, the Old Fort would have been the place.\n\nOr sometimes, I thought when I became a teenager and old enough to have my heart broken by the some luscious young lady who didn't see the stud I was underneath the nerd costume I wore, I imagined a dark-haired Spanish soldier with a cool goatee coming down with a fever and dying of a broken heart when the woman he loved returned to Spain with a rival.\n\nWhen I got a little older, I realized that lovesick soldier would probably just purchase a whore, camp follower or possibly one of the Creek, Choctaw or Seminole women who'd been captured by slavers. I got to be very cynical after the tenth time I saw the love of my life walk away with some idiot who just happened to be tall enough to pat me on the head condescendingly as he took my girl away.\n\nWe walked to an upper level where we could look out over the Bridge of Lions and the Matanzas Harbor. The sun was blinding on the choppy waters as an early Fall nor'easter blew the wind ahead of it. In a few hours the sky would be overcast and then the sky would fall in, but right now it was Florida at its best.\n\nI grabbed Aline's hand and said, \"Let's go down.\"\n\nWe walked out onto the rolling hillside that led from the Fort's entrance to the street. \n\n\"I've got to do this,\" I said, and I started trotting. Holding her hand, she stumbled and then as long legged as she was she started to catch up with me. Then we were racing and laughing like crazy, laughing like kids while tourists and mothers and fathers and small children just stared at us. Finally, just before we ran out of grass and tumbled onto the bricks, I fell to my knees and dragged her along with me.\n\nShe was laughing so hard she could barely speak, but she managed to say, \"What....what...what was that all about?\"\n\n\"I loved to do that from the time I was nine or ten. My friends and I would go up to the Fort and run down as fast as we could and try not to sail out into traffic. Of course, nobody ever drove more than 15 miles an hour by here, but even so it's a wonder any of us survived.\"\n\n\"You are crazy, a crazy man,\" she said, kissing my check.\n\n\"That's me, a wild and crazy guy.\"\n\nFor just those few seconds I hadn't felt every second of my 42 years. It had felt good.\n\n#####################################\n\nTHREE HOURS LATER\n\nI tried to untangle my tongue so I could catch my breath. I thought that Philippe's ghost had gone back into whatever limbo he'd come out of because I couldn't feel him between us. She lay back on the couch naked to the waist, her breasts dripping with my spit from the sucking I'd been giving them for the last 10 minutes. We could have fucked, but we both were putting it off.\n\n\"Oh,\" she said finally. \"What time did you say we had that reservation at The Top Floor?\"\n\n\"7:30. We have 45 minutes. Plenty of time.\"\n\n\"Well, I need to get in and get a long bath and....get some things done.\"\n\nI just gave her a look and she gave me a shrug.\"\n\n\"Wait and see.\"\n\nI leaned back on the couch and let go of her. The Top Floor is a restaurant located on the 15th floor of the Barnett Bank Building. It takes up the entire floor and through its windows you can see all of Jacksonville spread out below and around you. \n\nJacksonville, and all of Florida, for that matter, is about six inches above sea level so there's nothing to block your view for miles around. \n\nIt's one of the most impressive sights in the city and I wanted to share that with Aline on my birthday. And the food isn't bad, if you like steak and potatoes. I'm not a huge steak guy, but it felt appropriate for such landmark birthday.\n\nAs Aline stepped into the bathroom my cell rang. I almost didn't check it, but there was always the chance that it was important. \n\nI saw the number and realized it had to be Kelly. I couldn't imagine Debbie calling me on a Saturday night.\n\n\"Dad, hi.\"\n\n\"Hey Kelly. What are you up to?\"\n\n\"BJ and I wanted to check one more time. Neither one of us is out tonight and we wanted to give you one last chance to change your mind and go out tonight for your birthday.\"\n\nI waited a decent interval to reply and then lied my ass off.\n\n\"I'm sorry baby. I know this sounds like an old recording, but I have been hot and heavy on some important cases the last week. I'm in my underwear at the condo watching a movie on television and I'll probably be snoring before 9. I'd fall asleep on you. \n\n\"The date's just a number. Give me a couple of weeks and we'll go out and do something special, something you guys will enjoy. Can you give me a raincheck?\"\n\n\"Okay. I'll find something to do tonight. You get some rest. You've an old man, now you know.\"\n\n\"Don't rub it in. I promise, I'll contact you when the smoke settles and arrange a nice night out.\"\n\nSomething entered my head then and it popped out of my mouth before I had a chance to stop myself. I found myself lowering my voice, even though there was no way Aline could have heard me in the bathroom, over the running water.\n\n\"We can all get together. You, your brother, your grandmother and grandfather. Even...tell your mother she's welcome if she wants to come out for dinner with us. Tell her...I promise...truce. We're going to have to learn...to be around each other...someday.\"\n\nThe other words in my head wouldn't come out. It would be the first time in nearly 20 years I had a birthday party where she wasn't. I knew that was the reality of it now, but it suddenly hit me all over again. I was in my apartment with a beautiful naked woman and I was missing my ex-wife.\n\n\"I'll tell her, dad. I...think she might like that. Okay, I'll let you go. Get some rest.\"\n\nI clicked the phone off. And sat on the couch wondering if I was doing the right thing. But we'd have the rest of our lives together. I had less than two weeks with Aline, and it would probably have to last me for the rest of my life.\n\nAnd how could I leave Aline alone, a secret from my family while I went out for a birthday celebration. On the other hand, how could I introduce Aline to my kids and say, \"By the way, kids, this is the married lady that is cheating on her husband with me. She's a really nice lady.\"\n\nMaybe they could do that in Europe. But not in Jacksonville, Florida. I shook my head just thinking about it. \n\nI yelled at Aline, but she had a small casette player she'd brought with her going in the bathroom with some French pop tune and I was sure she couldn't hear me. I went to the closet, pulled out a nice pair of slacks and a V-necked blue pullover. The Top Floor was expensive, but not formal. \n\nI was slipping some black loafers on when the doorbell rang.\n\nWho the hell would be at my door on a Saturday evening? I wondered if something had happened at the jail with Sutton, or...it could be anything. But the phone hadn't beeped while I was on the phone with Kelly to indicate another call was holding. \n\nThe universe did a 180 and I felt like Alice falling through the Looking Glass. I had reached the door and looked through the peep hole. \n\nEven though this wasn't a bad neighborhood, it was still downtown Jacksonville and I wasn't opening the door without knowing what was waiting on the other side. I recognized what I was looking at, but my eyes weren't transmitting the signals to my brain.\n\nBefore I could move, a key turned in the lock and I moved backward without thinking as the door opened outward.\n\n\"Surprise...\"\n\n\"Hi, Dad...we....\"\n\n\"Dad....I thought...\"\n\n\"Bill, Happy Birthday son...\"\n\nThey all stared at me in my slacks and pullover and shoes and I stared back.\n\n\"Hi....Kelly..BJ....Mom...Charles....Roy?\n\n...Cathy?.....Clarice....Ricky......Amy\"\n\nI couldn't believe it but I said, \"Debbie??\"\n\nI stared at my son and daughter at the front of the parade, followed closely by my mother and my stepfather, my ex-mother and father-in-law, my ex-sister-in-law, her six-year-old daughter Amy and 8-year-old son Ricky, and MY EX WIFE? What Circle of Hell had I been dumped into?\n\n\"Dad...what...I thought...\"\n\n\"Yeah, Dad,\" Kelly said, \"You said you were going to bed. We came by to surprise you and take you out for a cool birthday dinner.\"\n\n\"Yes, son,\" my mother said, advancing on me like a stalking lioness. \"We thought we were going to have to get you dressed and take you out. But it looks like you beat us to it. Where were you going, and why didn't you want us to know about it?\"\n\nI didn't realize that she was backing me into my lair until I realized I'd passed beyond the couch and the whole expedition was inside my condo.\n\n\"Boy, this place is really small,\" Ricky said, looking around.\n\n\"Sh....baby, no....\" Clarice said.\n\nI heard a sound behind me and I realized that my entire life had been building to this moment. The door to the bathroom was turning and as it opened outward I heard a Cranberry's tune we had heard at O'Brien's. When Aline realized how much I loved it, she'd downloaded it. \n\nAs the door opened and I spun around in dreamlike slow motion, I heard:\n\nYou know I'm such a fool for you\n\nYou got me wrapped around your finger\n\nDo you have to let it linger....\n\nShe stepped out like Botticelli's painting of Aphrodite rising from the sea, all pink and white and jet black wet hair hanging around her shoulders. With the Cranberries spilling out behind her, she advanced toward me on catlike feet, her attention focused on the pink slit of her shaved pussy which she was holding open with her thumb and index finger.\n\n\"Do you like? I thought we might...test it out...before we-\"\n\nOnly a few times in my life have I seen a person's jaw literally drop. She stared at me and what stood behind me and her voice died away.\n\n\"Mommy, that lady doesn't have any clothes on.\"\n\nIt was one of those moments when you can hear the blood pumping through your carotid artery, you can hear the elements inside your apartment's AC system humming, you can hear the individual breaths of a half dozen human beings against a canvas of silence.\n\nAnd then Aline was scrambling backwards, shifting her hands from her groin to her breasts and back again, gaze flashing from one set of astonished eyes to another as she disappeared into the bathroom whose door slammed shut.\n\n\"...do you have to let it linger....\"\n\nSomehow the old Vaudeville punchline about \"slowly I turned...\" rang in my head as I turned to face my parents and children and inlaws and outlaws. I couldn't read Charles' expression, but there was surprise and the beginnings of a small smile on my mother's face; shock and sadness on Cathy Bascomb's face mirrored in her husband and daughter, Clarice. ",
        "Kelly had put her fingers to her lips and was looking at me in a way I'd never seen before. I realized she wasn't seeing me as Daddy. She had never seen me with another woman in her entire life. BJ was grinning and mouthed the words silently, \"way to go, dad.\"\n\nI locked eyes with Debbie and couldn't read her at all. All I knew was that seeing her without warning just made me realize all over again how fucking, unfairly beautiful she was.\n\n\"Look, I realize you guys were trying to surprise me.....\"\n\n\"And we did,\" my mother said, throwing a look back over her shoulder at Debbie. \n\n\"You did. I'm sorry....you got a big shock....but I did -- we did -- too.\"\n\n\"Who-\" began Kelly.\n\n\"Just a minute,\" and I turned my back on them and opened the bathroom door and stepped inside. Aline had her back to me, her panties pulled up and she was vigorously drying her mane of black hair.\n\n\"I'm sorry, baby, it's like something out of a bad situation comedy. I had no idea they were coming. They thought they were going to give me a nice surprise.\"\n\n\"Your family,\" she said, turning to face me. Her entire body was still mottled with red splotches indicating a body-wide blush. \"I feel like such an idiot. How can I show my face now?\"\n\nI pushed her hands aside, swept her bangs back from her face and kissed her hard.\n\n\"You put on that dress, and a bra, and come outside with me. You're a friend of mine from the cruise ship and you're visiting. I don't have anything to apologize for, and neither do you. I'm a grown man, a free man, and you're a grown woman. A beautiful woman. I want to show you off to my family.\"\n\nShe kissed me back, then said, \"That's the first time I've seen her in the flesh, Bill. I had no idea -- she's impressive. What is she doing here?\"\n\n\"I have no damned idea at all. Probably, I'm guessing the kids talked her into it. Something about burying the hatchet. But let her eat her heart out seeing me with you. The bitch deserves that and a lot worse.\"\n\nI started to open the bathroom door, then added, \"And make sure you wear the Fleur de Lis.\"\n\nWhen I stepped out the whole crew was crowding into the area between the kitchen and small living room. Debbie was standing between Kelly and BJ at the front.\n\n\"Who is she, Dad?\" Kelly started again.\n\n\"Her name is Aline des-Jardins. She was an officer, a crew member, on the French ship I took that cruise on, the Bonne Chance. We got to know each other on the cruise. She had two weeks off from the ship and she honored me by becoming my guest here.\"\n\nBJ just grinned and high-fived me. I returned it.\n\n\"Why didn't you just tell us you had other plans,\" my mother said. \"It wouldn't have hurt my feelings. We could have gotten together some other time and you'd have been able to spend time with her without...us showing up and trampling all over your apartment.\"\n\n\"I wasn't lying, purposely, Mom. I've been working hard and trying to spend time with Aline. She's only here a short time and I thought it would get...complicated..introducing her and explaining...things. I had no idea everyone would pop in. We were just going to grab a bite to eat and then hit the bed.\"\n\nClarice just rolled her eyes when I said that and grinned. I got the impression she was enjoying her sister's discomfort.\n\n\"She's....,\" Debbie spoke for the first time. \"She's very beautiful, Bill. I'm glad....you've found a...friend.\"\n\n\"Thank you. Yes, she is very beautiful, and I'm very lucky.\"\n\nThe bathroom door opened and I looked back to see a vision in black step out. She was wearing the classic \"little black dress\" which looked like it had been painted on her. Even though she was wearing a bra, it didn't look like it. The Fleur-de-Lis looked as big as an orange gleaming in the center of the black dress.\n\nI stepped back and put my arm around her and faced my family. \n\n\"Aline, this is my family. This is Debbie, my ex, Kelly, my daughter and BJ, my son. And...\"\n\nWhen I'd finished she stepped away from me and faced them.\n\n\"I...wish to apologize.....I...am...embarrassed to have put on such a display...\"\n\nMy mother stepped around Debbie to take Aline's hand in her own. She looked up at Aline and said, \"You have nothing to apologize for. We barged in on you. People that show up where they're not expected can't take offense at what they're not supposed to see.\"\n\n\"Thank you. You should be proud of your son. He is a very well respected litigator. He is the kind of man other attorneys want to be like.\"\n\n\"I am proud of him. And I know that if he likes you, you must be a special woman.\"\n\nShe reached out and touched the Fleur de Lis.\n\n\"That is so beautiful.\"\n\nAline touched the stone.\n\n\"Yes. It will always be very special to me, because it was a gift to me from your son.\"\n\n\"It is very beautiful. They can do wonderful things with costume jewelry. It looks real.\"\n\nDebbie had stepped to within a foot of Aline. I wasn't holding my breath, but it felt like I should be.\n\n\"Yes, they can, but this is real gold and a real diamond. But I would treasure it if it were paste. It is not what it's made of, but what it represents.\"\n\n\"Shipboard romances are sweet. Ephemeral, but sweet. You were together for what, a week? Bill moved very quickly. Bill was a nice man, but he never moved that quickly when we were together. And he was never that dashing.\"\n\n\"Bill is a dashing man, a very...seductive man. Perhaps after a long marriage, you just didn't make him feel that...dashing...anymore.\"\n\nThe two woman, hot and blonde and cool and brunette held each other's eyes, Debbie looking down slightly. She stared at the Fleur de Lis and then looked over Aline's chest.\n\n\"I had thought that France was a more advanced nation, more medically and technologically advanced.\"\n\nAline just stared back. The question was implicit in her gaze.\n\n\"I would have thought that more French women would be aware of, and take advantage of implants where....nature has been...not quite so generous. In today's world, no woman has to remain flat chested.\"\n\nAnd she took a deep breath and slowly let those heavy breasts jiggle to drive home her point.\n\nA small smile played on Aline's lips.\n\n\"In France women do have implants...where they're needed and wanted. I would have thought, however, that in a country as great as this, more women would be aware of the possibilities of liposuction. After all, today there is no need to have those ugly rolls of fat on the stomach, thighs or the ass.\"\n\nHer gaze played on Debbie's golden body and then the two women just locked eyes.\n\nThere was another lingering silence and then Debbie looked at me and said, \"Happy Birthday, Bill. I do hope you have a good time tonight. And, Ms. des-Jardins, I hope you enjoy the remainder of your time in our country.\"\n\nLooking at Kelly and BJ, she said, \"If your father wants to go out tonight, I want you to go and have a good time. I'm just not feeling real well right now. I'm tired and I'm going home to get some sleep.\"\n\nShe shrugged off her mother's attempt to talk to her and just stared at Clarice for a moment, then shook her head, and walked out of my condo. I should have felt better at that moment than I did. I should have felt better than I had in the last five months since I'd first heard that phrase, \"when we were married.\" I had a beautiful woman at my side. I should have felt better than I did. \n\nLife is funny sometimes."
    ],
    "authorname": "DanielQSteele1",
    "tags": [
        "cheating",
        "courtroom action",
        "crime",
        "romance",
        "divorce"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/when-we-were-married-ch-05c"
}