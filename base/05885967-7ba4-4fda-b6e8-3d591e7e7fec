{
    "title": "My Voyage of Submission Ch. 19",
    "pages": [
        "Police investigate the two Pakistani men who held slaves. They die in jail. A freed slave helps narrow down Mahmoud's location. Felicity Sadiq chooses to submit to her husband. They are given some general guidelines to follow after Beth convinces Dr. Sadiq to accept her submission. The ship begins cruising to Norway. This chapter contains oral, anal, group and lesbian sex. There is no COVID-19 or STD's in this fantasy world. My thanks to JohnnyGalt for his editorial assistance.\n\n<p align=\"center\">My Voyage of Submission, Ch 19 - A Surprise</p>\n\nI was getting ready to go to the mess the next morning when Dr. Sadiq stopped me.\n\n\"What did you do to my wife?\"\n\n\"I didn't do anything to your wife, sir. What's happened to her?\"\n\n\"Are you saying you didn't tell her to ask me to take complete control of her?\"\n\n\"No, I'm not saying that. I'm saying I didn't cause her to want to say that. She wanted to say something to you and I told her it might be appropriate to ask in that way.\"\n\n\"Are you saying my wife wants to be a submissive?\"\n\n\"Yes, and she wants you to be her Dominant.\"\n\n\"Why would she want that?\"\n\n\"I would say it's in her nature.\"\n\n\"Why would she never say anything about this before?\"\n\n\"Because she didn't think she could ask based upon your faith and occupation. Doesn't mean she didn't want to before now, but didn't feel she could express it to you.\"\n\n\"Why ask now?\"\n\n\"I suspect because of her awareness of knowing what you were speaking to me about.\"\n\n\"What was done to those women was criminal.\"\n\n\"Of course it was. You do know some women have rape fantasies, don't you? You've been exposed to this in your education?\"\n\n\"Yes.\"\n\n\"It doesn't mean women want to be raped. It's a fantasy about not having control, of someone else having control over them, forcing them to do things they don't want to do, or secretly wish they could do. Submission is a similar fantasy. Your wife fantasizes about losing control to someone else. She wants you to take control of her.\"\n\n\"I can't do that.\"\n\n\"Why not?\"\n\n\"Well, my religion, of course. So much of Dominant/submissive relationships is haram.\"\n\n\"I don't know enough about Islam to say much in regards to your faith and what is allowed and not allowed, but let's say for the moment I do. Since any true D/s relationship is based upon the rules that they make for each other, is there anything prohibiting the two of you from making rules which follow the dictates of the Qur'an? For instance, let's say that it was absolutely forbidden for a husband to strike his wife. I know that isn't true, but let's say it is. Then in your relationship, you would prohibit corporal punishment. Instead of striking her, you would practice orgasm denial instead. Or you could make her stand quietly in a corner. If it were forbidden she wear a collar, you could give her other jewelry or objects which would signify her submission instead. Something which could go under her clothing, like a belly chain or ankle chain. You make up the rules together, so make up rules following the dictates of your faith.\n\n\"Any rules you agree on together ensures her safety and the ability to stop anything with which either of you is uncomfortable. She has a safe word. She's not like the involuntary slaves we've freed. She can stop it at any time she wishes. So can you for that matter. It allows both of you to explore fantasies without harm to the other.\n\n\"The sex isn't an issue. She's allowed sex with her husband. I don't believe tying or binding is prohibited as long as it's not used for something else which would be forbidden. Keeping her naked in your house isn't forbidden. The very concept of harems is Islamic if I'm not mistaken. Exposing herself outside the house is. Islam, to the best of my knowledge, wishes women to be subservient to their husbands, for the males of the family to be in charge of the family. She merely wants to take this one step further. What did you feel when she knelt at your feet asking you to be her Master?\"\n\nHe didn't respond, by which I took it to mean he reacted like most males reacted. He got an erection, but was too polite to say so in mixed company.\n\n\"Something else which you might want to consider. If there are any things in your marriage which result in marital discord, those things will now be gone. If she's willing to be your submissive, she's turning over to your control all subjects which could be points of contention in your marriage. While most Dominants prefer to use their power to increase the nakedness of their sub, the opposite is also true. If she sometimes wears something which you think is too revealing, you have only to pick out her clothes for her. She should wear what you wish her to wear without argument. If there are certain foods you wish cooked, order them cooked. Household chores which she resists doing, order them done. Your control exists outside of the bedroom as well as in it.\n\n\"Let me put it another way, Dr. Sadiq. I came across this in my research into submission, by someone known as Madam Michele. I don't know if she got it somewhere else or made it up. She said, 'Being a submissive has never been about being powerless. It's about a conscious decision to gift that power to the person you deem most worthy of it.' By asking you to be her Master, Felicity has deemed you worthy of relinquishing that power to you. She knows you would never willingly harm her or do something to make her regret giving you that power over her. She's telling you she trusts you to take care of her. I don't believe that's a bad thing in a marital relationship. The only thing you need to determine is what that relationship looks like in order to comply with your faith. Everything else is meaningless. What did you tell her when she asked?\"\n\n\"I was shocked and disturbed she would ask me. I was angered and thought it evil she'd even consider such a thing. I rejected the very notion of it.\"\n\n\"I'm sure part of the reason you felt that way is because you immediately thought of other D/s relationships you may be aware of. It doesn't have to be one of those. She's not asking a stranger to take control. She's asking her husband. You would be setting the parameters of your relationship. You would be helping to ensure that relationship did not violate your religious concerns. You seem to be a man of high moral character. Nothing you do has to violate the tenets of your morality. Perhaps you're right and it would be impossible to do under the Qur'an. Is there any reason you couldn't try to establish rules for yourselves which were not haram? Why not consider what those rules would be and see if it's possible for you to accept your wife's submission? She clearly wishes to give it to you.\"\n\n\"You make it sound very enticing.\"\n\n\"It certainly could be. Excuse me, I must eat before the police arrive.\"\n\nI hoped I'd given him reason to consider Felicity's submission. She seemed like a beautiful woman who would make a delicious slave. A man would be lucky to have such a woman subservient to him.\n\n******\n\nThe Scotland Yard detectives were ferried over at nine. A number of things had already occurred by the time they arrived. In searching the residences of the two men in London, two more slaves had been found, one at each. The other two slaves were not Pakistani. One was another of Mahmoud's victims, the other Chinese. I suppose it's hard to pretend one is a niece and another a ward if neither was from Pakistan. They didn't even speak Urdu fluently, although they spoke smatterings of both English and Urdu, enough to follow the commands of their Masters.\n\nBoth of the detectives spoke Urdu because the large Pakistani population in London frequently required a facility in that language, so Doctor Sadiq's translation skills were not required for their statements, but he helped soothe the women as they were questioned. Sahar actually sat in on the questioning because she provided a calming influence on the two. She'd been looking after them since their Masters were arrested, conversing through the iPads. Since she didn't speak Urdu, it wasn't as if she would be overhearing confidential information and they were much calmer with her present. Since Master's cabin offered the most privacy and room, the questioning was being done there.\n\nWhile her husband was busy, Felicity sought me out.\n\n\"What did you say to my husband?\" she asked.\n\n\"About what?\"\n\n\"When I spoke to him last night about the topic you and I discussed, he was angry and upset. He refused to have sex with me, turning on his side with his back to me. He seemed to blame you for my 'perverted desires'. He got up early and when he came back to the room, he was insatiable. After climaxing, he even had me suck his cock, which he very seldom allows me to do, then made love again. He was like a changed man from last night. He told me he'd speak to me later about my desire to be his submissive. I can't imagine he could change that much over the course of the night without speaking to someone about it. I thought perhaps it was you since he was so angry and now he's not.\"\n\n\"We did speak this morning early. I just told him your relationship did not have to be like what he assumed a Dominant/submissive relationship was like. Between the two of you, you could set rules and guidelines which would keep you from violating the laws of Islam and the Qur'an.\"\n\n\"Whatever you said worked wonderfully. I feel like we're going to enter a wonderful new part of my marriage and I'm so happy.\"\n\n\"May the blessings of Allah make your marriage stronger and deepen your love for one another.\"\n\n\"Thank you.\"\n\n******\n\nBoth of the women were questioned for over two hours by the detectives, getting as many details as possible. Master was not present as he didn't speak the language anyway. He asked that they share any details which might help end the human trafficking with Representative Ward, his wife.\n\nWhen they finished, Dr. Sadiq showed evidence he'd been weeping. The two detectives, more accustomed to hearing about and investigating brutal crimes, hadn't been crying, but they weren't exactly ecstatic either. Sahar hadn't understood what was said, so she looked much as she always did, hard as steel, but not as brittle.\n\nA place had been found for the four slaves with someone who'd look after them until the trial. Master told the detectives they had to be sure whoever tended to them was of the highest moral character because the slaves would likely do whatever they were ordered to do, no holds barred.\n\n\"Did you get everything you needed?\" Master asked as the Inspectors got ready to leave, the two women accompanied by a female officer who spoke the language.\n\n\"We hoped to get more information about the place where they were held and trained to pass to Pakistani authorities. All they knew was that it was in the mountains someplace.\"\n\n\"Why not speak to Isam Rasheed? From what we were told last night, he visited the place on multiple occasions and should know exactly where it is. Might help shut the whole Pakistani human trafficking ring down.\"\n\nThe two inspectors glanced at each other.\n\n\"They're both dead, aren't they?\" I said.\n\n\"How did you know?\" one asked.\n\n\"Because every time we seem to get close to uncovering who's behind this, the links to those in charge are killed. It happened in France as well. A man who might have known more about the upper echelons of the trafficking ring was killed in police custody.\"\n\n\"Do you know if anyone in Scotland Yard informed Interpol?\" Master asked.\n\n\"I don't know. Why?\"\n\n\"We suspect someone in Interpol is providing information to the Human Traffickers. We don't know who, but we and my wife's House Committee have stopped communicating with Interpol until we find out. You might want to do the same, at least in regards to Human Trafficking. How were they killed?\"\n\n\"Poison. A fairly delayed sort. Apparently, they could have been given the poison any time since they were arrested last night until an hour before they were found dead. It's been hard pinning down who might have administered the stuff.\"\n\n\"How are the women going to be supported now. Do they become government wards?\" Master asked.\n\n\"For the time being. The British assets of the two men have been frozen. Eventually, I suspect they'll be compensated for their slavery from those assets.\"\n\n\"Please let me know if they need financial or any other type of assistance. I don't want them slipping through the cracks somewhere. Perhaps Dr. Sadiq could look in on them occasionally and provide me with news of their progress to a more normal life. I feel somewhat responsible for their well being now.\"\n\n\"Why?\"\n\n\"Because we've uncovered so many of them and know how much they've all suffered. Also, we've been working to find Mahmoud's hideout. If at all possible, we'd like to speak to the slave who was taken in Africa. We're hoping we can get additional information from her about where his headquarters are. She might be able to add another piece to the puzzle. The American government is extremely interested in finding the man. He kidnapped and ransomed a Peace Corps volunteer a few months back, plus we've already rescued five of his other slaves. We can speak to her at Scotland Yard if necessary.\"\n\n\"We might be able to work something out. The Home Secretary has asked us to help all we can.\"\n\n\"I appreciate it inspector.\"\n\nThey nodded and Dr. Sadiq gave them each one of his cards. Ateefah hugged both of the freed slaves and spoke quietly in Urdu to them. I don't know what they said, but both women looked somewhat happier when they left.\n\n\"What did she tell them?\" I asked Dr. Sadiq.\n\n\"She told them there are still good people in the world and it was possible someone would love them and marry them.\"\n\n\"As soon as the boat returns,\" Master said, \"I'll see to it you and your wife gets home\"\n\n\"Mr. Greenbriar, exactly how many women do you Dominate, besides your wife and Beth?\"\n\nThere was a sudden silence. We all looked at each other. Felicity looked surprised. She hadn't known.\n\n\"You're not denying it, I see.\"\n\n\"I don't want to treat you like an idiot,\" Master said.\n\n\"So how many?\"\n\n\"Four. In addition to Miranda and Beth, Francesca and Belle, also submit to me. What gave it away. Did Beth say something?\"\n\n\"So, a small harem yourself. Beth didn't say a word. There's a lot of subtle body language between you, denoting deference, let's say. I could see more of it between the three of you, but there was some interplay towards other females. It made me wonder if there weren't more. Why don't we have a seat someplace so we can speak with some privacy.\"\n\n\"My cabin?\"\n\n\"That would be fine.\"\n\n\"Some refreshments, perhaps.\"\n\n\"Hot tea for both Felicity and myself.\"\n\n\"Beth, please see to it. Bring a pot.\"\n\n\"Yes, Master.\" No point in hiding anything now. Felicity looked at me differently.\n\nI hurried to the galley. They had a hot water dispenser there which could provide near boiling water at any time. I got a large pot and the best tea Pierre recommended, bringing it, milk, sugar, lemon and several cups on a tray up to Master's cabin. Miranda and Master were seated speaking to Dr. and Mrs. Sadiq, talking over what appeared to be inconsequential matters at the moment. I poured tea for everyone who wanted some, then had a seat myself, wondering what would happen.\n\nAfter everyone was served, Master leaned back appraising Dr. Sadiq. \"What did you wish to talk about, Doctor?\"\n\n\"Can you tell me about your situation? Your involvement with one another?\"\n\n\"Before we open up with you, could you tell us what you plan to do with the information? Will it be splashed in the tabloids and ruin my wife's career? I have no concern for myself. I've been a Dominant for over fifteen years and I'm sure a lot of people know, and it wouldn't affect my business much. Some people might even respect me more, but I do highly regard Miranda's reputation and her political career.\"\n\n\"Oh, no, this information is for me only. I don't intend to reveal it to anyone. Let's say my wife made an unusual request last night and I'm trying to sort through my feelings on the matter.\"\n\nMaster then told his part of the story, when he became involved in Dominance and why, having run through several submissives over the span of fifteen years, putting an ad in the paper to acquire another for this trip round the world. He then turned it over to me.\n\nI explained being at a loss for a topic for my thesis, seeing the ad, thinking I'd like to investigate submission, which had less research done on it than Dominants had received, applying for the position and training for it for two weeks and being accepted as Master's submissive.\n\n\"I was giving a vast number of surveys to Dominants and submissives to correlate their responses and noticed that I could predict where a normal person who'd never engaged in these behaviors might fall personally; submissive, Dominant, switch or none of them. I noticed the results first in Representative Ward, who'd come on a secret vacation with Master because single women in politics aren't allowed to behave like normal people. She showed as very submissive. She became Master's second submissive on our trip. Master asked me to marry him and I told him Miranda was a far superior choice as a wife. Essentially, her submission was over if she wasn't, plus their marriage made for better politics. I, on the other hand, could continue as Master's submissive with the agreement of his wife, where she never could if not married to him.\"\n\n\"You gave up the possibility of marriage so Miranda could marry and remain submissive?\"\n\n\"Marriage itself was not important. I loved him and got to remain with him. I cared for Miranda and could see how happy she was as Master's submissive. I didn't want to spoil that for her. The other two were added later and I suppose I'm responsible for them as well as I first met Francesca while in training for my application. Belle was her submissive first, and Francesca came with Belle to receive additional training for Belle and herself. When Francesca decided she was also a submissive to Dominant men, she became Master's third submissive with Belle attached to Master through her.\"\n\n\"Are you all happy? Does it make any difference to you that Joshua has four of you?\"\n\n\"I'm the happiest I've ever been in my life,\" I replied, \"not that I was unhappy before, but I feel fulfilled in a way I never felt before. I was initially supposed to remain as a submissive for one year to complete my research, but I've bonded to Master for the balance of my life. My thesis advisor, Professor Kline, thought I was unbalanced when I told him and he came to observe me for two weeks. Not only did he find I have a very rewarding and positive relationship, but he and his wife entered into their own Dominant/submissive relationship after observing mine.\n\n\"I actually approached him and his wife about taking Yasmine on as a submissive because she wants to remain submissive to somebody nicer than her old owner. He didn't believe it was possible for him to do considering his career and position in a rather parochial college town. I love my sister slaves and as I've disclosed to you, don't mind sex with women, even enjoying it as much as sex with my Master. I believe my willingness to share sex with some of the freed slaves has helped them to overcome some of the trauma they experienced. To the best of my knowledge all the women submissive to Master feel the same. We don't begrudge our sister slaves relationships to Master, or anyone else for that matter. We have no need for a conventional, exclusive relationship to one person.\"\n\n\"What about you, Joshua? How do you feel about them having sex with others?\"\n\n\"I've never been in love with any of my previous submissives. I didn't intend to form permanent relationships with any of them, so whoever else they had sex with didn't matter to me. It was of no consequence. Beth is the first woman I've loved and is the ideal submissive. Her having sex with other women was still of no consequence, but she's the first one I cared whether she had sex with other men. It was more meaningful and more painful emotionally when she did. The moment I accepted her as my submissive, I knew my life had changed forever. I was afraid of how I felt for her, how weak I felt around her.",
        "\"The same with the others who've become my submissives since. I now consider them permanent additions to my family. Beth was the first person I ever worried about losing to another person. It's part of the reason I wanted to marry her, to bond to her for the rest of my life. Not only did she refuse my proposal and insist I marry Miranda, she told me she didn't need marriage and was willing to stay with me forever anyway, she didn't need marriage to make her mine.\n\nAll four of them are committed to their submission, so even though I now share them with others, including other men, I'm not fearful of losing any of them to someone else. I know they won't cheat on me in the conventional sense, that nothing will ever be done behind my back or without my knowledge and permission. On the other hand, having four beautiful, delightful women who enchant me and need me to meet their sexual and emotional needs is difficult. It's part of why I let them have sex with others. I can't possibly meet all their sexual needs all the time. I'd be having sex all day. Allowing others to do some of it, makes it easier on myself. It's still at my direction and control, so I feel I'm the one satisfying their sexual cravings, even though I'm using a surrogate.\n\n\"I suppose if I had to do without Francesca and Belle, I could, but I don't want to. I can no longer lose either Beth or Miranda. They're both a part of my heart and my life. To lose either would be like losing a part of myself. I can't express how deeply I feel for both of them.\"\n\n\"Would you agree with both Beth and Joshua, Miranda?\"\n\n\"Absolutely. I feel attached to everyone on board this ship more than anyone else in my life except my sister. They've loved me, cared for me, saved me, in so many different ways. Being a single woman in Washington was a loveless, joyless experience. Every moment since becoming Joshua's submissive has been better than all the moments before.\"\n\n\"What do you do when you're away from your husband?\"\n\n\"Joshua sees to it my sexual needs are taken care of by others, at a time and in the way he wants. Some of it is with other people; my maid, gardener and personal fitness trainer answer to him and see to most of my needs. Other times he controls my sexuality by using sex toys which he can control remotely. Sometimes he watches, other times he doesn't, but I never have sex with anyone he has not told me to; from the number of orgasms I can have to how they have sex with me or I with them. I'm trying to have a child now, and anyone having vaginal sex with me but him, must use a condom. He'll be the only person to give us a child. The others are on birth control at the moment and aren't limited in that way.\"\n\n\"I see. This is very odd to me and completely outside of my experience and frame of reference. Felicity told me last night that she wants to become my submissive. She actually got down on her knees and asked to become mine. As aroused as it made me, I dismissed it out of hand initially, thinking there was no way I could remain a Muslim in good standing with Allah if I accepted such a request. Beth pointed out to me this morning that if Felicity and I developed our own rules of Dominance and submission in accordance with the Qur'an, there might be a way for this to work. Part of my hesitance in doing so, is that to the best of my knowledge, Felicity has never been exposed to Dominance and submission in reality. She has an idealized fantasy in her head of what it would be like; a romantic notion it would be all flowers and sunshine, and perhaps sex.\n\n\"Initially, I was thinking of asking Beth to join us for a few days so she could see what the reality would be like, but I realized it wouldn't work without a Dominant, as I can't be Beth's Dominant without committing adultery or some other sins too numerous to mention. I have another notion instead. Are you an honorable man, Joshua?\"\n\n\"I like to think so. I try to conduct myself honorably.\"\n\n\"That was my impression in dealing with you and some of the women you've helped. That you try to act in such a way you don't harm anyone else.\"\n\n\"Glad you think so. Where's this going?\"\n\n\"I want you to Dominate my wife for a few days....\" Felicity gasped, her hand over her mouth.\n\n\"Sir, if you think that having me at your home would be haram, leaving Felicity here would be that, a hundred times worse,\" I said.\n\n\"Let me finish. There are conditions. She can't have sex with anyone, man or woman, but she can watch you have sex. She can watch you be punished. She should be punished herself, at least once. She should witness everything about your submission so she knows all that's involved in it. How can she make a decision about something so important without knowing exactly what is involved. I just think...\"\n\n\"Dr. Sadiq, I understand what you're trying to do,\" Master said, \"but I don't think you understand, my slaves go naked. Not in the middle of London, out on deck, but elsewhere on the ship.\"\n\n\"Fine, she can be naked, as long as it's in your quarters and not anywhere she can be seen by others. Just no sex. \"\n\n\"And that includes punishment if she's disobedient. I'm to lay hands on her naked body? To spank her on her bare buttocks?\"\n\n\"If that's how your submissives are punished. She should witness it and she should experience it. It's not some fantasy she's asking for, it's a reality. She should know what it's like.\"\n\n\"But not our reality, Dr. Sadiq. It was my impression that if you wanted to accept Felicity's submission,\" I said, \"it would be with rules you developed so as not to violate your religious tenets, to abide by the laws of the Qur'an. As part of establishing Dominance over us, Master feeds us naked in his lap while caressing us, he makes us do things like masturbate for an audience. Often we're punished in front of others as well. Sex toys are used on us, both those designed to make us orgasm, and those which keep us on the edge of climax but prevent us from releasing. He's taking control of our sexuality, so much of my submission is wrapped in the trappings of sex.\n\n\"Even if Master promised he would not have sexual penetration with your wife, she may be given orgasms. I've orgasmed from being punished as odd as that might seem to you. All of my sister slaves have. There's a certain bit of sexual excitement which comes from being naked and often humiliated in front of others, for submissives anyway. If Felicity is truly submissive, she would feel it too. She might even feel it more because of her religious traditions. She's expected to be more modest than we would normally be, so being naked in front of other people might be more arousing, because it's more taboo. Even before my submission, I was used to wearing brief bikinis to the beach or pool. Going naked isn't as large a step for me as it is for Felicity. Honorable intentions or not, your wife would receive pleasure from other people, not her husband. That would seem like a violation of your faith to me. Ask her, right now, what this discussion is doing to her. How thinking about being naked in front of all of us is making her feel. My guess would be, it wouldn't take much to make her orgasm.\"\n\n\"Is this true, Felicity?\"\n\nShe lowered her eyes. \"It's true, husband. The thought of it is very stimulating to me. I'm very aroused right now.\"\n\n\"Part of the allure of submission is surrendering control to another person and 'made' to do things we wouldn't normally do. Felicity would be mortified to be undressed in front of others, to be paraded naked about the ship. She couldn't do it herself, but under the guise of submission, she'd be forced to do such a thing, which has tinges of danger, of shame, of loss of control. It's like a shot of adrenaline straight to the heart. My pulse is racing, my hands are sweaty, my mouth is dry, but my sex is wet. I'm close to my flight or fight response, and it goes straight to my sex.\n\n\"When I first came aboard, and we were at sea, I was led about on a leash. I had to find someone to lead me somewhere and then surrender to their touch for a minute for them taking their time to take me where I wanted to go. Sometimes, only a minute of stimulation was enough for me to orgasm because I'm so keyed up from behaving this way. It's why you need to develop your own rules. Master's rules are designed to make us orgasmic sluts. I'm not sure if that's what you want for your wife, unless it's directed at you.\"\n\n\"Is this true, Joshua?\"\n\n\"I don't think of it in those terms, but it's fairly accurate. All submissives tend to develop increased sexual libido under submission. They tend to be easily aroused and more orgasmic. That's part of why I enjoy it. Beth is right, being with us wouldn't be her reality either. It's still a fantasy. She can't live like this without causing problems in your marriage.\"\n\n\"If I might make a suggestion, Doctor Sadiq,\" I said. \"Don't leave your wife in a position of submission to anyone here. It would be better if you perhaps saw some of the things we did and then practiced them in the privacy of your home. That way, what you practice doesn't violate your religious beliefs or moral code, nor your wife's. If you think your wife should witness a punishment, let Master punish one of us, then you punish her, so she knows what she's in for. It allows you both to see what Domination and submission is like, as we practice it. And practice anything which wouldn't violate your rules on each other. You can witness how Master can punish me or Miranda without risking our safety or materially harming us in any way, because harming your loved one is not the goal. It's to establish your Domination and control, and the feeling of subservience and submission in your sub.\n\n\"The other thing which we should discuss is what you hope to gain out of the relationship. As a submissive, I'm fairly certain what your wife gets out of it, but what do you want? Do you wish her to be more compliant in the bedroom, to be more open about her needs and desires? To tend to your every need and hunger? My Master wishes me to be available to him at all times, sexually, to refuse him nothing he wants within the parameters we established before my submission began. What would you want your wife to do?\"\n\n\"If we weren't having this conversation right now, what would you be doing?\"\n\n\"Easy one. Miranda and I would be naked, competing for the affections of our Master, attempting to get him to fuck one or both of us.\"\n\n\"Might I observe what that would be like?\"\n\nI looked at Master and he nodded. I removed my clothes, as did Miranda. We both knelt in front of him and removed his cock from his pants. We took turns sucking him and had him erect in no time, Each time we switched, I watched Mahdi and Felicity. He was also erect. His religion did not affect his biological response to visual stimuli. He might not seek out pornography, but he wasn't immune to it. We were putting on a live sex show. Felicity was flushed and had a sheen of perspiration, though Master's cabin wasn't warm. Her hands looked as if they wanted to touch herself but she restrained her impulses.\n\nHer eyes were wide when she saw how easily both Miranda and I could take Master down our throats. While Miranda sucked his shaft, I spoke.\n\n\"I learned to do this during my training period when seeing if I could be submissive. My Mistress at the time thought it would be beneficial for me to know for my potential Master. I taught what I knew to Miranda and the others. This is relatively easy for us despite his size. We've done larger ones as well. I learned a few things about Islamic rules regarding sex so I could consult with the two men who married freed slaves. I figured a freed slave would do whatever she'd been trained to do, but it would be against all of her upbringing if she did things in opposition to her faith. That would be a warning sign if she willingly did something antithetical to her beliefs.\n\n\"Please tell me if I'm wrong, but I learned oral sex is okay as long as it's part of foreplay and not the goal. If this were you, Felicity, you would have to stop before making your Master orgasm, and proceed to reproductive intercourse. Is that right?\"\n\nHer mouth sounded dry when she answered, \"Yes,\" almost a whisper.\n\n\"That would be a primary difference in your submission and ours. Master frequently uses our mouth for more than foreplay, nor is he shy in doing the same for us, although we frequently use each other for oral sex as well.\"\n\nWhile Miranda finished off Master, I licked my sister slave. Miranda was ripe and easily ready to climax when Master was.\n\n\"Master,\" Miranda begged, \"may I have permission to cum?\"\n\nAs I imagined, Master would also wish to demonstrate a punishment, so he declined her permission. She attempted to resist my tongue, but could not for long, squirming through her climax as Master orgasmed into her mouth. As she sucked his cock clean and tucked him away, I continued speaking.\n\n\"We have surrendered our pleasure to Master. He gets to decide if and when we orgasm. We don't have control all the time, though we do make an effort to obey. If we cannot obey, we're punished. We'll demonstrate that for you. The purpose is so we know we owe our pleasure to our Master. We can't have sex without his approval. He can deny it, allow it, allow it while denying orgasm. One of the worst punishments we suffer is from a device called a Slave Trainer. It keeps us on the edge of climax but won't let us achieve it. Orgasms are a good way to control us as we want them frequently, but may not have them without permission. Other punishments effective in applying discipline include a harsh word, being denied access to our Master, say by confinement under the bed while he enjoys another slave, and humiliation. Being punished in front of others is more humiliating than being punished in private. Then everyone knows we've been disobedient, which is shaming to us.\n\n\"A second difference between us as far as I could determine is anal sex. It's prohibited in the Qur'an, but we enjoy engaging in it. Henderson wasn't having anal sex with Maahnoor, because he was trying to comply with Islamic traditions for his wife. She desired it and had it with a man who didn't respect her marriage and Master's orders to deny any requests for sex by the wives or any freed slave who hasn't been cleared for sex. I would assume you would not engage in anal sex?\"\n\n\"No,\" Dr. Sadiq said, though Felicity looked as if she'd be willing to try.\n\n\"This is where I don't clearly understand Islamic law. It appeared that use of some sexual toys may be considered okay, but others are prohibited. I'm unsure where the line is drawn, although I read mention that toys which penetrate the sexual organs are considered more haram than others, and that the use of sexual toys alone to achieve orgasm might be frowned upon. A suggestion for you. To avoid anal sex but still take advantage of the many nerve endings available for stimulation around the anus, perhaps an anal plug could be used to simulate anal intercourse, while having sex together. Having a plug in while engaging in regular intercourse provides extra stimulation to the male organ and the female because she feels so full. Since I'm unsure of the forbidden nature of the act, this would be something for you to determine together.\n\n\"If sexual toys alone are haram, then perhaps using them in conjunction with regular intercourse might be possible. For example, using clitoral stimulators in conjunction with intercourse to increase the pleasure received. Of course, using sexual stimulation while denying your submissive an orgasm gives reason for a punishment. Master enjoys a squirming slave over his lap as he administers swats to her bare bottom. It frequently leads to more sex after. Contrary to what either of you might think, punishment is as often a form of foreplay as much as it is punishment. Master, how would you like to punish Miranda for cumming without permission.\"\n\n\"Over my lap. Bring me The Enforcer and I'll use my hand for some and the paddle for the rest.\"\n\nAs Miranda maneuvered her naked buttocks on Master's lap, I retrieved The Enforcer.\n\nI handed him the device and asked him to discuss punishment.\n\n\"Beth mentioned punishment as sometimes being as much foreplay as penalty. Punishment is never administered in anger. Tempers should be allowed time to cool before punishment is administered. I do not want to leave bruises or mark skin or make scars. I love these women dearly and anything which actually harmed them offends me and when observed in others, angers me. There are only a few people I trust to administer punishment to my subs, and they're usually other Dominant's I've approved of and have witnessed and monitored in the past myself. I don't consider myself a Sadist, nor do I let anyone I consider a sadist near my women.\n\n\"Because some punishments are harsher than others, I frequently give an orgasm either before, during or after the punishment to mitigate any pain they feel. An instrument of punishment is usually chosen for specific areas of the body. Heavier paddles only for the bottom, lighter ones may be applied to other meatier parts of the body, light whips anywhere but the face. There is pain feedback between my hand and a bottom. I can tell how hard I'm striking someone by how much it hurts my hand. If I use anything other than a hand, there's no feedback, so I use the instrument on myself first to test it. I won't use anything which hasn't been tested on me first.\n\n\"Miranda, I'm going to give you five swats with my hand, then ten more with The Enforcer. Since you'd normally only get ten for cumming without permission, I'm asking permission to give the other five. Is that okay?\"\n\n\"Yes, Master.\"\n\n\"Count for me and thank me for each one.\"\n\n\"Yes, sir.\"\n\nMaster gave her five swats with his hand. After each, she counted the stroke, thanked him and asked for the next one. When they were done, he used the handle of the paddle and gave her another climax. Miranda squirmed wildly over his lap, a truly lewd display. Felicity seemed to be holding her breath, Mahdi to be breathing heavier. I don't care what religion you practiced, this was sexy stuff.\n\nHe used The Enforcer four times on her bottom, once on the backs of both her thighs, once on the inside of both thighs, and once to each of her breasts, fucking her with the handle to a third orgasm when he was done. The handle was dripping with her orgasmic fluids.\n\n\"How are you, love?\" Master asked.\n\n\"Wonderful, sir,\" Miranda asked.\n\nMaster then cuddled her in his lap. As he did, I explained. \"While this was quite tame compared to some, if it's really intense for the sub, we can experience what is called sub drop. There are lots of different chemicals and hormones released in the bloodstream during a scene such as this, including adrenaline and endorphins. As those chemicals begin to be eliminated from the blood stream, there's a period of mild depression, almost like coming off a drug high, for the sub which a good Master wishes to address. This usually consists of cuddling, stroking, words of love and encouragement and praise for being good, or strong or pleasing. This allows us to come down slower and have fewer negative affects. This is what Master is doing now, though because it was so brief, Miranda doesn't really need it. You should see how it's done though. Master, why don't you use the whip on me, twenty strokes, all to my front.\"\n\nHe said yes and I got the flogger, the cat we usually enjoyed. Master fastened my wrist and ankle cuffs to the bed posts, spreading me out. I was aware of my juices leaking down my thighs. Felicity couldn't stop staring at one drop which was headed for my knee. Master told Miranda to give me two orgasms. Miranda was soon lapping at my core, catching the leaks including the one Felicity had followed so closely.",
        "\"Before, during, or after a punishment, I need never worry about receiving orgasms. It's one of the reasons I don't mind punishments such as this one too much. Master wants us to have orgasms for a punishment as it makes it less likely he'll hurt us. He'll always grant permission under those circumstances, or possibly our unallowed orgasms were the reason for the punishment. If he doesn't give us an orgasm, the ensuing punishment would be lighter and less strenuous so as to not exceed our limits.\"\n\nI was so needy, I had both of them within five minutes, straining my pussy against my sister slave. Since Master was wearing pants, he whipped his own arm to demonstrate how he tested it on himself.\n\nFelicity gave a little gasp each time Master struck me, from my breasts to my cunt. I'd suggested twenty because I felt I could orgasm that quickly. Performing for others always putting me on a hair trigger, and not having cum since our morning sex until now. I did, in fact, orgasm, around the nineteenth stroke, the second of them to my clit area, one of the leather strips striking it just right to send me over the top. Mine weren't the only orgasmic cries I heard. Felicity seemed to be cumming as well. Dr. Sadiq was watching her quiver with a great deal of surprise.\n\n\"Did you just orgasm?\" Mahdi asked.\n\n\"Yes,\" she squeaked ashamedly.\n\n\"Were you touching yourself, masturbating.\"\n\n\"No.\"\n\n\"Take off your clothes.\"\n\n\"Mahdi?\"\n\nHe didn't say anything further, just looked at her and after about ten seconds she removed her outer clothes, standing in her bra and panties.\n\n\"All of them.\"\n\nShe looked at all of us. Not much help there. Two of us were already naked and had orgasmed several times in addition to giving Master a blow job. She slowly removed her bra, hoping her husband would stop her. Even more slowly removing her panties, a rather functional instead of pretty pair. When she was naked, she stood there with a hand across her breasts, her thighs clutched together and another hand over her groin. She didn't shave or trim at all and her pubic hair puffed out around her hand. She was a lovely girl though. Mahdi was a lucky man.\n\n\"Move your hands away, spread your legs.\"\n\nWhen she obeyed, we could see her fluids running down her legs. She knew we could all see it. It shamed her to know we knew.\n\n\"Did anyone give you permission to orgasm?\"\n\n\"No, sir.\" Shocked at the question.\n\n\"Joshua, may I please borrow that paddle you just used.\"\n\n\"Of course, I'll have Beth wash the handle first.\"\n\n\"No need.\"\n\nMaster handed it to Dr. Sadiq who used the handle to fuck Felicity to an orgasm. After she climaxed again, once more without permission, which took almost no time at all, he told Felicity to open her mouth. He pushed the messy cum covered handle into her mouth telling her to lick it clean. Since it had Miranda's and my cum on it, I expected her to hesitate but she sucked every drop of cum off it, looking at her new Master as she did.\n\nWhen she was done, he told her to kneel on the couch with her ass facing the rest of us.\n\n\"Ten strokes per orgasm without permission, you say,\" he paused for a moment to hear Master's answer.\n\n\"It's ten for me,\" Master said smiling. \"You can impose any punishment you both agree on.\"\n\n\"I think it should be twenty per time,\" Mahdi said, \"or forty for you for cumming twice without permission, once even without being touched. What say you, slave?\"\n\n\"That seems fair, sir.\" Felicity was smiling as she said it.\n\nMahdi tested it on his thigh, recognizing how much it stung even through his pants. He took a little off and gave her twenty stiff strokes, turning her English bottom a nice rosy red. He started on the second twenty. About six in, she asked for permission to cum.\n\nHe looked at us. Master shrugged. I said, \"She's a slut slave, Master Sadiq. She needs to cum. Whether she does is up to you.\"\n\n\"You may cum, slave.\"\n\nWith the next stroke she shivered into a violent orgasm, her pussy winking at all of us as she spasmed.\n\nDr. Sadiq finished giving her the remainder of her forty swats, then fucked her with the handle again to her fourth.\n\nShe was out of breath and panting when it was over. \"Is this what you want, Felicity?\" Mahdi asked. \"This is what you want for yourself?\"\n\n\"Yes, Master.\"\n\n\"Talaq. I divorce you.\" She started to turn, her face a mask of anguish. Mahdi smacked her ass. \"Hold still, whore. Keep your whore ass pointing at these strangers.\"\n\nTears started flowing down her face but she faced forward and held still. Dr. Sadiq released his cock. It was a nice cock. Not quite a big as Master's but with a good shape and nice upward curve and plump head. He pushed into her cunt, smacking hard against her ass. She squelched when he smacked up against her damp pussy. He fucked her hard. She climaxed two more times despite her tears, neither time with permission, not even asking for it. She'd learn.\n\n\"I thought I was marrying a prim and proper English lady who willingly accepted my religion instead of another westernized whore slut. Apparently, I was mistaken.\" She was sobbing quite loudly as her husband fucked her.\n\nIt didn't take him long and he orgasmed, shooting a full load of cum into her already wet, puffy, pussy. He wiped his cock off on her ass when he pulled out.\n\n\"Get dressed,\" he ordered as he zipped up.\n\nGenerally speaking, we were quiet as she dressed, allowing her some silence to contemplate her situation.\n\nBefore they left, I asked, \"Is it true that under Islamic law, the divorce doesn't become final until the passage of three menstrual cycles and you have to abstain from sex during the entire time?\"\n\nDr. Sadiq smiled and said that was true. \"How long do you think you'll be able to abstain from fucking this delightful pleasure slave?\" I asked.\n\n\"No longer than it takes to get home, I imagine.\"\n\n\"I would suppose it will be hard to keep your hands off and cock out of a naked slave as pleasing as she is?\"\n\nFelicity started to get a smile on her face, realizing what was happening. It was unlikely she was ever getting divorced if she was pleasing to her new Master.\n\n\"I'll probably have to fuck her every day, perhaps more than once.\"\n\n\"Good slaves should be kept on their hands and knees serving powerful Masters.\"\n\n\"I think so too.\"\n\n\"Thank you for your help, Dr. Sadiq. I hope you enjoy your new slave. Allah's blessings on you both.\"\n\n\"And on you and yours, Beth. Joshua, Miranda, salaam.\"\n\n\"Shalom Dr. Sadiq. It's been interesting.\"\n\n\"Hasn't it. Keep me updated on the status of your patients, Beth.\"\n\n\"Absolutely, Doctor. Let us know how Hafsa and Sumrah do.\"\n\n\"I will. Come along, slave.\"\n\n\"Yes, Master.\"\n\nAfter they left, Miranda said, \"Aren't they getting divorced?\"\n\nI laughed. \"Not unless he can stop fucking her for over three months. She'll be like you, wife and whore, although I doubt it will be anyone other than her Master who she fucks. There are limits for Muslims. I think he was messing with her a bit. He has more of a sense of humor than I gave him credit for.\"\n\n\"I didn't think it would turn so quickly,\" Master said. \"I thought there'd be a little more testing the waters, exploring the nature of the relationship.\"\n\n\"I didn't expect it either, sir. Perhaps it was your example.\"\n\n\"Or yours.\"\n\n******\n\nAfter eating a late lunch, I held my first group. Yasmine, our newest freed slave was the only one who didn't attend as she didn't speak enough English yet. Even Sahar attended, which surprised me some as she seemed settled in her ways, becoming lethal and accepting she'd have sex with women the rest of her life.\n\n\"One of the goals of therapy is to confront the things that happened to you. To find ways to deal with it. I'm not here to treat you. I'm here to help lead the group, to get you talking amongst yourselves. You've all been through similar things. You'll need to help each other heal. I haven't been through what you went through. Part of the reason we put you together as much as possible is you understand each other better than anyone else can who hasn't gone through it. One of you will have a way that helps you deal with your pain and you'll pass that on to someone else and it will help them. I'll help you talk to each other, to keep you focused on helping each other and not talking about Ateefah's marriage or your new jobs on the ship.\n\n\"To start off, why don't each of you talk about one of the worst things that happened to you as a slave; how it made you feel when it happened, how you feel about it now with the perspective of time? Does it still bother you, give you nightmares? Have you had a flashback memory to that particular incident? Have you found some way of dealing with it that seems to be working for you, then share that with the others who might not have found a way to deal with it yet. Fatima, why don't you begin as you've been freed the longest and might have more perspective.\"\n\nSo Fatima discussed something which happened to her. It had been fairly common for the slaves captured by Mahmoud, to be forced to eat feces and to drink the piss of the guards and it reached the point it no longer mattered to her. It was like eating food. Each of the other Mahmoud captives had undergone the same, so each of them could add to the discussion. Maahnoor went next and she talked about being taken anally and coming to enjoy this sinful sex, even to sucking the cocks of the men who fucked her, going ass to mouth. She talked about missing it once it stopped and how it caused problems in her marriage.\n\nHibbah spoke about losing her virginity to a man with a large cock and how painful it had been and how it added to her fear of men. It was Sahar's turn and she suddenly got up and started to walk out.\n\n\"Sahar, it's important to talk about this so you can confront your pain and learn how to deal with it,\" I said.\n\n\"I would rather shoot myself dead than ever speak about what happened to me. I'll deal with it when I kill the bastards who did it.\"\n\nIt was the last session she ever attended. The rest of them talked for about two hours, and I thought it was productive although we all cried quite a bit. It was hard, but since it was perhaps the worst thing that happened, perhaps the rest would get easier. I went looking for Sahar and found her at the gun range on Hogan's Alley. Edgar had gotten other scenarios added to the programming and she was working on clearing a skyscraper, the ship clearing exercise no longer presenting a challenge to her. She'd never been inside a skyscraper, so this was a bit more challenging, the bad guys going up and down multiple stories on elevators and stairs, getting behind her. It was designed to have a four man squad of men clearing it. She was working it herself, eventually losing but getting further each time.\n\n\"Can we talk, Sahar?\"\n\n\"Not if you want to talk about what happened to me. I didn't want to speak about it in group, nor do I want to talk about it with you.\"\n\n\"Don't you want to get rid of the blackness inside you?\"\n\n\"Not if I have to talk about it. I'll keep my blackness and live with it. I won't live with talking about it. As I said, I'd rather kill myself.\"\n\n\"Even if you don't talk about your pain, you could come back to the group and hopefully something said will help you.\"\n\n\"I don't want to add their pain to my own. The weight of it is already almost more than I can bear. Listening to more of it might make me snap. I'll live with what I have and hope to live long enough to see everyone who hurt me and the others in their graves. That's all I want. It's all I need. Except maybe a little sex once in a while. If you want to have sex, we can talk in the bedroom, what you westerners call pillow talk. I'll talk pillow talk, not the past. Are we done now? Ethan is going to work out with me later. I'd like to see how much further I can get before dying.\"\n\n\"No, we're done. If you don't see the value in it, you probably won't get much out of it.\"\n\nSahar nodded and resumed killing people.\n\n******\n\n\"Sahar said she'd rather kill herself than discuss what happened to her. How bad must something be that you'd rather die than discuss it, Master?\"\n\n\"Pretty damn bad,\" Master said.\n\nHe was trailing a fingernail down my spine to my ass crevice after some awesome sex. I still had some of Miranda's dried cum around my lips. All five of us were rather exhausted with the lassitude which comes after multiple orgasms.\n\n\"How did the group go other than her lack of participation?\"\n\n\"It went well for a first one, sir, but the topic was rough. I wanted to start off with some of the worst things they could remember, so they could get that out of the way and the topics would get easier.\"\n\n\"Do I want to know what those were?\"\n\n\"I don't think so, Master. You'd have a damn poor opinion of the human race if you know all we're capable of. I'd prefer to think of all the good people I've met. I've met a lot of really good people, nice people, this cruise. Almost like family. We've helped a lot of people, for which I can't thank you enough. You impress me. I had no idea of what to expect when I first signed up for this gig. Obviously, I expected a lot of sex, which until I went under Mistress Layton, I thought I'd be merely tolerating instead of enjoying with all my heart. I liked sex, but it wasn't as if I needed sex as much as I do now.\"\n\nHis finger had moved over my anal opening and was currently sliding over my perineum and was approaching my well used pussy. I spread my legs further apart to grant him more access if he wanted it. It belonged to him now. It was still wet, a mixture of fluids, mine and his despite the excellent cleaning provided by Francesca earlier.\n\n\"Everyone is enjoying more sex now,\" Master said. \"I almost feel like I own the Love Boat instead of the American Entrepreneur. Everyone has discovered how good sex can be, instead of something to be gotten through to get to an orgasm.\"\n\n\"Amen,\" said Francesca.\n\nBelle and Miranda were in a sixty-nine at the moment, their soft lapping in the background, but one of them squeezed my hand.\n\n\"I'm going to miss all of you when you have to go back,\" I said. \"How much longer?\"\n\n\"A couple more days in London. Two days sailing to Oslo. Five days in Norway for Bjorn and Lynn's wedding,\" Master said. \"Nine more days before they have to go back. Edgar is going to question the other rescued Mahmoud slave tomorrow. Fatima is going with. Would you like to go?\"\n\n\"You're going to let me off the ship, sir? Be still my beating heart.\"\n\n\"It won't be for sightseeing. You'll be flown direct to Scotland Yard. You'll be able to see some of the sights by air though. Perhaps I can have Leo do fly bys of the Houses of Parliament, Big Ben, and Buckingham Palace on the way back, though a lot of it might be restricted airspace. Maybe a short jaunt up and down the river as we came in after dark.\"\n\n\"Sure, I'll take that trip. Will we ever be able to come back to London and really sightsee?\"\n\n\"Of course. I do a lot of business in Great Britain. As soon as things die down a little and we figure out why and by whom those attacks were made on us.\"\n\n\"When does Delphine join Hannah, Master?\"\n\n\"One of the last days in Oslo. She'll be along for the rest of the Norway leg.\"\n\nTwo of Master's fingers penetrated my sex and I gasped, arching my back, then moaned as he quickly found my g-spot. He bent to kiss me, stealing my breath.\n\n\"I'll let Francesca lick you while I fuck her,\" Master said.\n\n\"Can I cum, sir?\"\n\n\"I haven't decided yet. I'm still thinking about it.\"\n\n\"I wonder how Felicity is doing, Master?\" I asked, panting, my back arching my cunt against his probing fingers.\n\n\"If she's anything like you, I'm sure she's doing quite well.\"\n\nI laughed, then gasped again as his fingers moved inside of me. No doubt he was right. Submissives such as myself tended to do quite well when paired with a good Master. Master's fingers withdrew and Francesca's lips and tongue replaced it. I heard him grunt as he entered her. Not by any indication did I know Master fucked her. She was a well trained slave.\n\n******\n\nEdgar, Ethan and Thomas went with Fatima and me to Scotland Yard. They were our security detail, but Master usually used the Brits as much as possible when in England so they got to associate with their countrymen. It was also important they return to England so they maintain their British citizenship. They had to surrender their weapons when they entered the building, but no one expected an attack on the police building.\n\nThey had a room set aside for our interview. Only Edgar came into the room with us. We felt having too many tough men speaking to her would be too much. Edgar needed to be there because he was coordinating the search for Mahmoud. The woman wasn't staying at Scotland Yard, but had been brought here so we could talk to her. Her name was Cyrine and she'd been taken in Tunisia. She spoke Arabic, with smattering's of English and Urdu due to her Master, Isam. She'd been a slave for over two years. She had Mahmoud's brand.\n\nFatima introduced us. They spoke for a while in Arabic, our purpose in speaking to her, wishing to find Mahmoud and being able to stop him from taking young women as slaves. She agreed to speak to us because we'd helped free her and Hafsa from Isam. She was surprised to find Fatima had been a slave taken by Mahmoud himself. I had an iPad with the translation set for Arabic so I follow along as much as possible. Edgar was looking over my shoulder so he could read along with me.\n\n\"You aren't a slave anymore even though you're branded?\"\n\n\"No, and you aren't either. We've learned Isam is dead and we understand the British government will be giving you money from his holdings in England to compensate you for your slavery.\"\n\nI slid one of Master's business cards over to Fatima and told her to give it to Cyrine. If she ever needed help, she could call the phone number and help would be forthcoming. Help with job, financial help, anything at all.\n\nFatima gave her the card. \"Why does he want to help Cyrine?\" she asked.\n\n\"Because he's helping lots of people freed from slavery, including me and several others.\"\n\n\"He wants sex with me?\"\n\n\"No. You never have to have sex again unless you want to.\"\n\n\"What do you want?\"\n\n\"To find Mahmoud and arrest or kill him,\" Fatima said.\n\n\"Mahmoud too powerful, too many men. He never be killed or arrested.\"\n\n\"We have many men too; and can get many more if needed. We have freed many slaves already. Governments are looking for him. Many police. We just have to find where he is. We've managed to trace him to the Atlas Mountains in North Africa near Morocco, Any information you give us will be added to the information we already have to find him.\"\n\n\"I know where Mahmoud is. Well, not exactly, but fairly close. Isam have a map I see one time showing where he purchased me from.\"\n\nEdgar grabbed my iPad and pulled up a map of North Africa and put it in front of Cyrine. \"Where?\" he asked.\n\nFatima asked where and Cyrine pointed to Morocco, damned near the center of the country. \"Someplace in this general area.\"\n\nEdgar zoomed in on the map to see if she could narrow it down further. There were definitely tall mountains in the vicinity. \"Can you be more specific?\" Edgar asked and Fatima repeated the question.\n\n\"It was not a big map, so I can't be more specific, but it's somewhere in there.\"\n\n\"God, look at how close it is to major population centers,\" Edgar said. \"Casablanca, Rabat, Tangier and Marrakech are all within 150-300 miles. I thought it would be in one of the border regions which tend to be more lawless.\"\n\n\"Does it help?\" I asked.\n\n\"It narrows the search from several thousand square miles to a few hundred. It's eminently more doable.\"\n\n\"Where did Cyrine see the map? Was it here or in Pakistan?\" I asked. \"Maybe it's still in his house.\"",
        "Fatima asked the question and even I could understand the answer. Pakistan.\n\n\"Shit. Always harder than it has to be,\" I bitched.\n\n\"Still doable. Joshua has an office in Karachi. We might be able to get Isam's house searched for the information. This could save weeks worth of looking. I wonder why the driving always took so long?\"\n\n\"Perhaps whoever kidnaps the women doesn't bring them straight there. Perhaps they drive around in circles for awhile to confuse people as to how far away it is from the everything. If you could estimate driving times from certain population centers, you'd be able to triangulate a location fairly quickly.\"\n\n\"You're so smart,\" Edgar said. \"Good for a whole lot more than fucking.\"\n\n\"I'd like to think so,\" I replied. \"I think Master admires me as much or more for my brain than he does my body. I certainly wasn't the prettiest he could have chosen for this cruise.\"\n\n\"Well you've given me a far better appreciation for brains in a bird than I used to have. It's why I'm so attracted to Fatima. She's smart as a whip.\"\n\nFatima smiled at him. \"When are you going to take me out on a date?\"\n\n\"I still can't ask you for things. If you want a date, you have to ask me. And it probably can't happen until Joshua is comfortable letting you off the ship without an army of security. I don't want to do my courting with eight to ten other guys looking on.\"\n\nEdgar added a flag to the map in the center of the suspected search area. \"I'm starting to get a little tingly thinking we might be close to getting our claws in this monster.\"\n\n\"You're not the only one,\" I said. \"I'm sure all of Mahmoud's former slaves will be glad to see him gone.\"\n\n\"Amen,\" Fatima said.\n\n\"Please tell Cyrine she's given us a lot of help, and they'll be a reward. She'll be a relatively wealthy young woman regardless of what she gets from the Brits,\" Edgar said.\n\n\"How much?\" I asked.\n\n\"A hundred grand US.\"\n\n\"How much is that in something she might know? Let's tell her in something she might be familiar with.\"\n\nEdgar looked at currency conversion app on his phone. \"Around 15.8 million Pakistani rupees.\"\n\n\"She was owned by a Pakistani, but probably has no concept of their money. She's Tunisian, try Tunisian currency.\"\n\nEdgar checked again. \"275 thousand Tunisian Dinar.\"\n\nFatima told Cyrine she would be getting 275 thousand Tunisian Dinar for her help in finding Mahmoud. Her jaw hit the table. That might be more than she'd ever hoped to see in her lifetime. Mahmoud's slaves tended to be pulled from the lower classes where they wouldn't have servants, security and families that could afford to search for them.\n\n\"I wonder if she even knows about banks and how to use one,\" Edgar said. \"Can't have her walking around with wads of cash in her purse.\"\n\n\"Maybe whoever's looking out for her can teach her how the modern banking system works.\"\n\n\"She'll need to know eventually. I'm pretty sure the British Government isn't going to hand her a bunch of pound notes either.\"\n\n\"I wish she didn't have to stay here. I worry about them,\" I said. \"Fatima, tell her an account will be opened in her name at a bank and someone will tell her how to access her money.\"\n\nFatima told Cyrine and we thanked her again for her help and left, picking Ethan and Thomas up on the way to the helipad.\n\n******\n\nWhen Master finished his business meetings that day, we met in his cabin.\n\n\"We've got a much closer bead on where Mahmoud is,\" Edgar said enthusiastically. \"Cyrine was a big help. I feel she should get the $100,000 dollar reward you offered. We've got his location narrowed down to a few hundred square miles of terrain, with the chance to pinpoint it even more closely if we get into Isam's residence in Pakistan. Cyrine saw a map there.\"\n\n\"I'll see if we can't get access,\" Master said. \"I'll make inquiries immediately.\"\n\n\"Master, we have something else we need to work on.\"\n\n\"What's that, Beth.\"\n\n\"I don't think any of the freed slaves know anything about the modern banking world. I don't know if they realize you're giving them money every week for their work. They probably expect to be paid in cash. I doubt they know how to use a bank, a checkbook or ATM card. All but Fatima came from poor families where they may not have used banks. I thought Cyrine wouldn't know how to handle her reward money.\"\n\n\"You're probably right.\"\n\n\"I think one of the richest, most successful, men in the world should teach the freed slaves about money, banking, investing, saving. When we're sailing and you're not planning for a meeting or fucking, you should be teaching. Turn them all into mini moguls.\"\n\n\"I can't teach Cyrine. But perhaps we have a friend who could teach her the basics of modern financial systems.\"\n\n\"Who, sir?\"\n\n\"What about Felicity? She has no job. She could teach Cyrine how to take care of her money. I'll contact Dr. Sadiq and see if he's willing to allow his wife to work with her.\"\n\n\"Would you be willing to teach the others, maybe thirty minutes to an hour a day when we're at sea, Master? Please?\"\n\n\"I can refuse you nothing but orgasms apparently. Fine. But it will cost you. Nothing you can't afford to pay, but it will cost you.\"\n\n\"Yes, sir. You know you can have anything I have.\"\n\n\"Edgar, contact the Karachi office when it opens tomorrow and let's see if we can get fucking lucky for once.\"\n\n\"You've got it boss.\"\n\n\"Miranda, see if you can nudge the NRO into making satellite overflights in the part of Morocco we're interested in and see if they'll share the data with us.\"\n\n\"Of course. sir.\"\n\n\"Edgar, you're an unwelcome fourth wheel at the moment. I need to start extracting some of Beth's debt.\"\n\n\"Sounds more like she'll be extracting some of your cum, Joshua.\"\n\n\"You're a perceptive man, Edgar. Have a pleasant evening.\"\n\n******\n\nMaster had wall to wall meetings our last day in London, including some he'd had to put off because of the investigation the day after the wedding. Since we couldn't do any sightseeing, I was spending a lot of time down in the gym. Sahar was working out with Ethan. I watched for awhile. Ethan was strong enough, he was winning most of their matches. He had better or equal skills, a weight and reach advantage, and years of experience. He was still being pressed fairly hard. What she lacked in all those things was partially compensated for by her ferocity.\n\nWhey they quit, Sahar went back to the range, working on the skyscraper scenario. I approached Ethan.\n\n\"How's our girl doing?\"\n\n\"If she was my size, she'd be kicking my ass. Every guy who comes down here, she's bugging them for fighting tips. I swear she's got parts of ten or twelve different fighting styles. Roberta's into that mixed martial arts shit, so five or six are from her, but she has no fucking give to her. I swear she's spending 12-15 hours a day down here, more so now her English is better. She used to spend time on that. Not much anymore.\"\n\n\"How's she doing on the range?\"\n\n\"Edgar may be the only one who can give her a run for the money. I always thought shooting for Edgar was instinctual, like he was born with a gun in his hand, and of course he worked for years to hone that craft. Tickled me to death when you made him miss all those shots giving him a blow job. Sahar is driven. I've never seen anything like it. She hardly breaks a sweat running ten miles with twenty pound packs. She doesn't look strong, but she's whipcord tough. If I don't stay in practice, she will be whipping my ass. She's pressing everyone pretty hard. The new guys can't believe her. She's taking money off them betting on the best times through the different scenarios. Even if someone springs a new one on her she hasn't practiced on, she'll beat someone over half the time.\"\n\n\"I wish she'd attend group. She refuses to talk about what happened to her. Said she'd rather die.\"\n\n\"Sounds pretty definitive to me. I'd take her at her word.\"\n\n\"Are there things you won't talk about?\"\n\n\"I think everyone who's gone into battle has things they don't talk about. Maybe to someone who was there with them, who understood the heat and chaos of battle, but certainly to no one else.\"\n\n\"The other slaves do understand what she went through. They went through the same hell.\"\n\n\"But you didn't, and perhaps there are things she thinks no one else had to do. She was in it longer than anyone else and although Hibbah was also owned by Tadeo, Sahar had a previous owner, so even Hibbah doesn't know all she went through. I think there's a reason she's so driven and whatever it is, the others didn't experience it.\"\n\n\"You're right. Thanks, Ethan.\"\n\n******\n\nI had another group that afternoon. It went well for a second meeting. We were still hashing out some of the revelations from the first group. At supper, Master was feeding Miranda the way he usually did, a slave squirming in his lap. Yasmine looked as if she'd happily take Miranda's place. She'd been freed for two weeks and over a week since Professor Kline indicated we should give her more time to see if her submissive tendencies would decrease with time. If anything, they'd seemed to increase. Something would have to be done with her. I'd speak to Bj\u00f6rn and Lynn again after dinner.\n\nMaster informed us Dr. Sadiq was going to treat the four freed slaves, Sumrah, Hafsa, Cyrine and Lotus. Felicity was going to work with them and ensure they knew how to handle their money and teach them all English. Master told Dr. Sadiq he was giving the other three slaves $20,000 apiece to start to cover the costs of any treatment he provided and for incidentals they might need and he could contact Hannah for more if he needed it.\n\nHe also said Dave was going to talk to the other freed slaves about their wages and accessing their accounts. Hannah had seen that all of them had received $50,000 for their support if they'd left the ship, and all but Ateefah and Yasmine now had jobs on board the ship. Hibbah was working in sick bay, Farah in the helicopter section, Maahnoor in food and laundry, and Sahar had advanced enough she was getting paid what the spec ops people were getting paid, less the extra jobs they also did. Sahar had no job but lethality. Yasmine had no job because she didn't understand English enough. Ateefah was still in a honeymoon phase with James and she was fucking him every chance she got. I'm not sure the freed slaves knew they were getting paid. They had room and board and it might have been all they expected. They just wanted to contribute.\n\nMaahnoor and Henderson had settled back into domesticity to an extent, but there wasn't the easy familiarity there had been when they were first married. It seemed more formal and strained. Infidelity could do that to a marriage. Maahnoor was doing all she could to obtain Henry's forgiveness, and perhaps she had it, but she couldn't extract the memories.\n\nEdgar gave us all bad news. Isam's and Bakir's residences in Pakistan had been burned down, in clear cases of arson. Perhaps the human traffickers realized the men could be a source of information. Isam had been involved in the training of Ateefah and others including Sumrah and Hafsa. They weren't going to be able to pinpoint Mahmoud more than Cyrine had done.\n\nMiranda said the National Reconnaissance Office would do some satellite overflights of the area we wanted them to look, but there were some other trouble spots around the world so it might take longer than we hoped. Miranda could petition the Defense Department to get copies of the photos shot of the region.\n\nTomorrow we would weigh anchor at 0500 for Oslo and Bj\u00f6rn's and Lynn's wedding. I asked to speak with them privately after dinner. Lynn raised her eyebrow inquisitively.\n\n\"It's about Yasmine,\" I said. \"I think we need to make a decision about her. She's not showing any signs she has lost her desire for a Dominant. She was practically drooling watching Miranda with Master tonight.\"\n\n\"We've talked it over and I'm willing to accept her as a submissive if she's willing to have me,\" Bj\u00f6rn said. \"I won't force myself on the poor girl.\"\n\n\"Bring her to Bj\u00f6rn's cabin at 1900. I'll have Manuel and Sherry there too. In all probability, she'll end up fucking all four of us at some point. If she is, she should know who she's going to be having sex with and agree to sex with everyone,\" Lynn said. \"We won't expect her to have sex with anyone else until we've seen how it goes.\"\n\n\"That's fair, Mistress\" I said. \"I'll speak to her first and confirm by verbal consent she wants to proceed. I'd say the hardest part about this is she may not know or understand the purpose of rules and a safe word. I'd make sure the rules established to begin with be rather innocuous and don't push her too hard. She may not use a safe word even if she has one, so you have to make sure you don't exceed safe limits. I'd also stay away from corporal punishments until her back and ass are healed more. Use voice, confinement, orgasm denial, and other non-physical punishment. Due to the colder weather, don't have her naked except in your quarters. Stay out of the play room until she's had time to adapt. The other slaves still react negatively to being in there, even though they know it's not for them.\"\n\n\"Good advice, Beth. Thank you. See you and Yasmine at 1900,\" Bj\u00f6rn said.\n\nI found Yasmine and Sahar together in their room.\n\n\"You come for sex, pillow talk?\" Sahar asked.\n\n\"No, I've actually come to speak to Yasmine. I'll need her iPad to speak to her.\"\n\nSahar told Yasmine in Arabic to get her iPad, that I wanted to speak with her. When we had it set up for Arabic/English translation, I asked her, \"It appeared to me at dinner that you still desired to have a Master. Is this true?\"\n\n\"Yes. Sahar say I should not have a Master anymore, but I want one still. I would be happier than I am now.\"\n\n\"I want you to have a good Master. One who will not hurt you anymore. I have talked to several people and I believe I have a good Master for you. You don't have to pick him. You have every right to get someone else, but the choices are limited on this ship. My Master won't take another submissive. He says four is enough. Lynn and Hannah both have two slaves now. Fatima is still new to Dominance and I worry because she's been a slave herself and may be harsher based upon that. Her current slave knows how to say no to her. But you don't want a Mistress anyway, so I would eliminate those three.\n\nYou said you want a Master. There is only one more on this ship who could do it. If you don't want this one, we'll keep looking. There are a couple others I know of who might be acceptable, but I've yet to speak to them and they both live elsewhere. One is in the United States, and he has two female slaves already. One lives on a French island in the Caribbean. His wife is his only submissive. He speaks French, so that's a plus. My main concern with him is he has three Dominant children and I'm concerned about them because I don't know what type of Dominants they are, and if they are around you all the time, they may interact with you in negative ways. I trust him, but I don't know them.\n\n\"For either of those men, we need to get you paperwork, either a US passport, or French passport. I'm going to bring you up to meet your prospective Master and others. You may speak to him to determine if you want him based upon what he says. If you say no, I will keep looking.\"\n\n\"I will take him.\"\n\n\"Talk to him first. You may not like him.\"\n\n\"It makes no difference. I will take him.\"\n\n\"Who is it?\" Sahar asked.\n\n\"Captain Amundsen.\"\n\n\"I probably wouldn't have to kill him. I approve.\" She smiled, but I'm not sure if she was joking. Sahar was very protective of the women. This was the first one who'd chosen to remain a slave.\n\n\"He'll be happy to hear that,\" I said. \"Come along, Yasmine. Bring your iPad so you can talk.\"\n\nYasmine started removing her clothes. \"Leave your clothes on. It's not decided yet, plus it's cold outside.\"\n\nShe shrugged and put them on again. We arrived at 1900 and I knocked, waiting to be invited in. Bj\u00f6rn bid us enter and we went in. Bj\u00f6rn and Lynn were dressed, Manuel and Sherry were not. Yasmine started to strip, seeing the others.\n\nI put my hand on her, pushing the microphone button to talk. \"Not yet. You don't have a Master yet and until you do, don't take your clothes off for anyone,\" I told her.\n\n\"Do you know who I am, Yasmine?\" Bj\u00f6rn began, his words translated.\n\n\"You're the Captain. You control the ship.\"\n\n\"That's correct. Beth tells me you want a Master still.\"\n\n\"Yes. Only way I have control. Otherwise, I will fuck everyone as soon as they let me. Master will keep me in line, limit who I have sex with.\"\n\n\"It won't be just me. I'm to be married to Lynn in a few days and she will often share my bed, as will her two slaves. I expect you will have sex with all three of them at some point. Is this okay with you?\"\n\n\"I will have sex with anyone you tell me to have sex with.\"\n\n\"But do you want to have sex with them? Do you accept having sex with women?\"\n\n\"It is no difference to me. I said I would fuck anyone who asked if I had no Master. That includes women. I want sex all of the time. I can't have any until Beth says it's okay.\"\n\nI turned off her app for the moment. \"Do you see what I mean when I say she may not have any limits unless you impose them and you need to be careful what you're willing to allow?\"\n\n\"I do.\"\n\n\"I'd like her to have some love and affection instead of just random fucking. I need you to provide that for her. Set good limits for her and be careful, because she may not use her safe word.\"\n\n\"I understand.\"\n\nTurning the app back on, Bj\u00f6rn continued. \"Knowing what you know now, Yasmine, do you want me as your Master?\"\n\n\"I think you'll be a better Master than Jean-Paul. I want to be your slave. Should I remove my clothing now?\"\n\n\"A couple quick rules first. You won't be naked except in this cabin unless I tell you otherwise. We'll give you clothes we wish you to wear. There will be a lot more rules, those will be developed with Lynn's assistance after we're well underway tomorrow. Your slavery will be announced to everyone tomorrow morning at our muster. You will address Lynn as Mistress as she's soon to be my wife. You will obey every order from Mistress Lynn as if it's an order from me. I am the only one who may counteract her orders. You will obey no one else but Lynn and me. No one else may order you to do anything. If anyone else tries to order you to do anything, you will speak to me. Is that understood?\"\n\n\"Yes, Master. I understand.\"\n\n\"You may undress now. You will spend the night with us and you'll get up in the morning when I get up to depart London. You will wait on me on the bridge, bringing me food and coffee and anything else I may need. Every moment you're not obeying a direct order from Mistress or myself, you will be learning English so we may more easily communicate. You may ask for help from Sherry and Manuel if you need help with your English studies, as long as it doesn't interfere with their work in sick bay.\"\n\nYasmine had started stripping as soon as she heard the orders in her earphones. By the time he was done, she was naked. I could see where her pubic hair had started growing back. I wondered if Bj\u00f6rn would make her shave it.\n\n\"Yes, Master. Thank you for accepting me as your slave.\"\n\n\"Come here.\"\n\nYasmine approached her new Master and knelt at his feet. He grabbed her arms and pulled her up into his embrace and she was soon surrounded by the other three, all hugging her. Yasmine started crying.\n\n\"Sahar said she didn't think she'd have to kill you, Captain,\" I said. \"Apparently she trusts you to do right by this slave.\"\n\n\"I think she'll be okay,\" he said, smiling over the top of her head.\n\n\"I think so too. Goodnight Master, Mistress. Have a good night.\"\n",
        "\"You too.\"\n\nUpon returning to my Master's cabin, I found Master fucking Francesca while Belle licked her from below their sixty-nine. Miranda was watching from the side of the bed. She greeted me and kissed me.\n\n\"That looks like fun,\" I said. \"Care to join me, Miranda.\"\n\n\"You can fool around all you want,\" Master said, \"but no cumming.\"\n\n\"Perhaps we should just kiss and pet,\" Miranda said. \"I'm reasonably certain I'll cum in no time if we lick each other.\"\n\n\"You don't want to push it?\"\n\n\"Not tonight. I know I won't last.\"\n\n\"Where were you?\" Master asked, a little breathless as he was getting close to his tipping point.\n\n\"Bj\u00f6rn has accepted Yasmine as his submissive, sir. I was discussing with them the best way to handle her. Talking to Yasmine to ensure this was something she still wanted, then watching as Bj\u00f6rn accepted her. It will be announced at the morning muster.\"\n\n\"Are you sure she should be doing this?\"\n\nHe suddenly grunted throatily as his balls pumped his seed into Francesca's lovely cunt, his cock flexing hypnotically as he injected his seed into her welcoming depths. Master's nuts drained, he collapsed to the side and Miranda cleaned off his cock, Belle perfectly positioned to lave her Mistress' creamy pussy.\n\n\"Yasmine tested as submissive on her survey and tonight, she was looking with such longing as you fondled Miranda at supper, sir. I've seen no decrease in her desire to be a slave. She admitted that if she were allowed to have sex, she'd be having sex with anyone and everyone, like Darla, but with less control. She thinks having a Master is the only way to rein in the sexual desires which were ignited while she was Jean-Paul's slave. She'll be obedient and Bj\u00f6rn will treat her well. It's possible she might be toned down by a responsible Master who won't make her fuck everything on two feet. Miranda, if you can get Master hard again, maybe he can fuck you while we sixty-nine and we'll get to cum?\"\n\n\"I defer to your expertise,\" Master said, then moaning as Miranda lowered her mouth over the length of him. \"Fuck, it was the rare woman who could deep throat me like that, and now I've got four experts.\"\n\nI chuckled and kissed him, tasting girl on his lips. He'd been munching someone's snatch tonight.\n\n\"Master, if I hadn't known how, I would have had to learn to deep throat, just because I love you so much. I know you've got boatloads of money, but even the women the Brits are responsible for, you've provided money to help them. You treat everyone as an equal and as a human, even your cock hungry slave bitches. You not only paid Johanna's ransom, you overpaid. I know you felt guilty for what happened to her, but it wasn't your fault. You gave a hundred million dollars to The Bahamas. You didn't have to do that. You overpaid for lumber to save the Amazon rain forest. You didn't have to do that. You're a good man and I'd love you even if I couldn't get enough of your cock. You're doing everything in your power to find Mahmoud and other assholes of his ilk. You don't have to care, but you do anyway. If your cock was twice as big as it is, I'd find some way to suck it all down, that's how much you mean to me. Every day, you give me another reason to love you.\"\n\n\"You just want permission to cum, don't you?\"\n\n\"Is it working?\"\n\n\"Probably.\"\n\nI kissed him again, playing tongue tag this time. I glanced down to see his cock was hard again. Bingo. I brushed his lips once more, then lay on my back, waiting for Miranda to cover me, going straight for her clit. Master sliding his precious prick into her pretty pussy right above me. I nibbled a nut as it rolled over my face.\n\n\"Ahh,\" he gasped as I rolled it around in my mouth. He began thrusting, so I released it, occasionally switching from her tempting tidbit to his wrinkled sack as they fucked, the sexual sloshing like music, the tangy honey leaking from Miranda so tasty. Despite his fucking, Miranda paid perfect attention to my pussy through his relentless, energetic, thrusting. She got more orgasms out of it than I did, but mine were every bit as fabulous.\n\n******\n\nThere was a bite to the air as we left London early. I was up on the bridge for our Departure, having missed most of our arrival. Fatima was with the Captain, taking the ship out on the Thames. Thomas was on the wheel, but she was giving the orders, closely watched by Bj\u00f6rn. Yasmine was seated on a chair in the corner, dressed in warm clothes, studying English. At one point, the Captain asked her to get coffee and sweet rolls for the crew from the galley. As soon as the order was translated by Fatima, she left and returned a short time later with a pot of coffee and a plate of Danish.\n\nThe Captain hugged and kissed her, then sent her to her corner to resume studying. She looked quite happy. I watched for a couple hours as we put London behind us, then headed to the crew's mess for breakfast for myself. Master and his other three slaves were eating. I joined them after getting my food.\n\n\"Yasmine seems happy this morning,\" I said. \"As happy as I've seen her. I don't think she should only be Bj\u00f6rn's slave though. She should have a job as well. I'll talk to Bj\u00f6rn about it later.\"\n\n\"After muster, Dave is going to talk to all the ex-slaves about their money and wages, help them set up on-line access to their accounts and order debit cards and how to use them when they receive them. Then I'll talk to them briefly about investing afterward.\"\n\n\"Are we going to be able to sightsee in Oslo or will we be confined to the ship again?\"\n\n\"Well, there are far fewer swarthy types in Norway, so they'd have to hire Scandinavians to attack us there. I've got Smitty's group hanging around some of the dives. Also, fewer mercenaries from Norway and Sweden, so harder to hire them. We'll probably let you out with a doubled guard. We've gotten permission to go armed to protect Miranda, so I'm inclined to let you off the ship. They do have criminals, including motorcycle gangs, but I'm more concerned with better trained individuals than just violent ones.\"\n\n\"Are we going to house Lynn's children on the ship or put them up in a hotel?\"\n\n\"I haven't spoken to her about it. I'll add that to today's agenda. Do you have an opinion?\"\n\n\"If she hasn't spoken to her children about her slaves, I'd say a hotel. If she has and they're prepared for what they might see, then we could house them on the ship, although I don't expect anyone to be running around naked in Norway in October. We've only got the one suite left though. We'd need to double up some others unless we put them together. I don't think some of the people would mind being together. A lot of them are only using one bunk anyway sleeping together. If we put the kids together, I think the oldest one is married, so that might be an issue.\"\n\n\"Perhaps we'll put them in a hotel then, but invite them aboard for meals. I'll ask Lynn what she wants to do. What were your plans for the next couple days?\"\n\n\"I haven't given any of new security men my survey. I was going to start giving it to them two or three a day, plus I have another slave group tomorrow afternoon. The rest of the time, I plan on working out. Have you noticed how solid Sahar is becoming?\"\n\n\"Yes, I have. She did a lot of work while we were gallivanting around Europe.\"\n\n\"Ethan says only Edgar may have an edge on shooting anymore, and she's giving the men a run for their money in the unarmed combat. It's almost all she does but eat and sleep. Her English is so much better she spends no time on that unless someone asks her for help.\"\n\nThey held muster after we were safely out of the Thames and someone else took over the bridge. In addition to the daily drawing, Captain Amundsen announced he had a new slave, Yasmine. She wasn't to be treated like any of the other slaves at this time. She was only supposed to obey him and Mistress Lynn. She wouldn't be naked, nor led around the ship on a leash, so don't expect any of the other frills of slavery at this time. She knelt and was collared, but didn't pleasure her Master publicly afterwards, though they went straight to his cabin, so I'm sure she was used quickly.\n\nI got one of the new guys for the daily drawing, Ronald, nicknamed Mac. He of the James sized cock. I took him back to his cabin after muster, bringing my iPad with me.\n\n\"Ronald, I want to give you a survey I've developed. If you take it, you're entitled to an oral orgasm. You're also entitled to another orgasm of your choice for sailor of the day. My suggestion to you is you take the survey, then fuck my cunt with your big cock, and after you've cum, I'll clean your cock off and suck you to another orgasm. Would you like to take my survey?\"\n\n\"Hell, yes.\"\n\nWe both removed our clothes and as he took the survey, I started playing with his junk, learning a little about what turned him on. I might have made it a little harder for him to concentrate on the survey, but he did take it. When he finished, he fucked me to four marvelous orgasms before I felt him throbbing out his load in my cunt. When it seemed to die down, I pulled off him and cleaned him good, then started the blow job, taking my time. Twenty minutes later, he surrendered another load of cum, thrusting his hips off the bed into my sucking mouth.\n\n\"Damn, that was fine fucking and sucking.\"\n\n\"I need to be pleasing. It's in my nature.\" I got up and started to dress.\n\n\"I ain't had nothing like it. Can I ask you a question?\"\n\n\"Of course.\"\n\n\"Why did the Captain take Yasmine as a slave? I thought she was off limits.\"\n\n\"She was. Yasmine was not like the other freed slaves. She had submissive tendencies before her slavery. They were reinforced by her slavery. She wanted another Master. I wanted her to have a good one. You saw how her slave owner beat her. I actively looked for a good Master for her and the Captain agreed that if she chose him, he'd be good to her. None of the others were submissive before although they were forced to be by their owners. Perhaps five to ten percent of females are naturally submissive. It's fairly common. Male submissives are less common, perhaps less than one percent. I've run across six I personally know so far. Pierre and Manuel are the least submissive of the five I've run across. The first two I met was an Army Ranger and firefighter and former seminary student. The two most submissive are both cuckolds, (Ben Hoffler and Gaston) allowing their wives to be fucked by other men.\"\n\n\"So how does one become a Dominant?\"\n\n\"I think primarily, you're born one. That's what my survey might tell me. But even if you are one, you should be trained and educated by someone who practices it, because being a Dominant isn't just about sex. There's a lot more that goes into it than just fucking someone. If you're a skilled lover, you can fuck lots of people, but there has to be more with a submissive, an emotional connection, unless you're just fucking around in a club or something. People in D/s relationships often feel they're more significant than their marriages are.\"\n\n\"Isn't the Captain marrying Lynn?\"\n\n\"He is, but she also has submissives. He can't fuck hers. Their agreement with Lynn only allows both of them to have sex with other women. Manuel and Sherry are engaged. Manuel didn't want Sherry to have sex with other men, nor did he want to himself, so they built it into their agreement.\"\n\n\"Would you tell me if I test out as Dominant?\"\n\n\"If you want to know, but it still doesn't mean you can have any of the current submissives. They're taken.\"\n\n\"Thanks for everything.\"\n\nI did one more, Fermin, nickname 'Vermin'. He took the test and got his blow job. He enjoyed it as much as Mac did. At lunch, I talked to Bj\u00f6rn about finding something useful for Yasmine to do besides be his sex slave. He said he'd look into finding her something after her English improved. After eating lunch, I put on my exercise clothes and went to work out for four hours, taking a shower before approaching Master.\n\n\"How did the money class go today, Master?\" I asked.\n\n\"It went well. The women were surprised they were being paid. The ones who hadn't been married didn't know money had been deposited in their bank accounts already and were shocked at how much it was. Even Maahnoor and Ateefah, who'd gotten the Mehers, didn't know they had the money already. They're so used to dealing in cash. Dave showed them how to access their accounts and see how much is in there, how they can pay bills, transfer money, buy things once they get debit cards. It was quite the little education.\"\n\n\"I hope they know they don't have to spend it all, sir.\"\n\n\"I talked to them about investing. How leaving it in savings causes the money to grow and there are other investments which make even more than savings do. I'll need to discuss inflation, bonds, stocks, and other things with them along the way. It was actually quite fun. They were surprised at how quickly their money could grow with interest. It really is a whole new world to them. How many surveys did you get through today?\"\n\n\"Only two, sir. I did a twofer for Mac, got him to take the survey, gave his sailor of the day award, then his survey award, so he took longer than normal.\"\n\n\"May I ask a favor, Beth?\"\n\n\"Of course, sir. Anything.\"\n\n\"Miranda, Francesca and Belle will be going home in a few days. I'd like to spend time fucking them as much as possible. You won't be hurt if I do so, will you?\"\n\n\"No, Master. I shall want to fuck them more myself for the same reason. I hope you can let us have a few more orgasms than normal so I have chances to give them proper goodbyes before they go?\"\n\n\"How about no limit on orgasms with them until they leave? Of course, you'll still be restricted with others.\"\n\n\"Sounds wonderful, sir. Thank you.\"\n\nMaster fucked all three of them that night while I was the bottom bitch, but I loved it, getting to savor all that tasty snatch seasoned with some salty cum. Master still held me close all night. I didn't even mind falling asleep with a facial mask of three girls and a guy. I loved them all dearly.\n\n******\n\nI got J\u00ecngyi for the daily drawing. She was working in the morning so I made arrangements to meet her after lunch. One of the new guys, Oz, got Miranda, the first one of the new folks to fuck Master's wife. Dave got Francesca, Sahar got Belle. They also had to collect their rewards after lunch as Master spent the morning fucking them, before working on his Norway meetings with Hannah in the afternoon.\n\nMy morning was spent on surveys and the consequent blow jobs given to Shed, Manny and Simple. I also entered all the results in my matrix database. Mac was showing up as a little Dominant, kind of like Manuel was a little submissive. Perhaps he could turn into a good enough one with a little training if another submissive showed up. I'd discuss it with Master later to see if he wanted to put some time into training one, just in case.\n\nAfter lunch, I went to J\u00ecngyi's room and she spent a pleasant twenty minutes with my mouth plastered to her pussy. I didn't have permission to cum with her unless she'd chosen me to fuck her with the strapless. She could do that with a lot of the women, so wasn't in the mood for fucking at the moment. I spent two hours in the gym before showering and holding another group. This one was a little rougher than the first ones in that they were confronting their current activities in relation to what had been done to them during their slavery and their religious upbringing.\n\nMaahnoor and Ateefah were bemoaning the fact that they still enjoyed anal sex even though their husbands were trying to abstain from those things Islam considered haram or forbidden.\n\n\"Why does Qur'an forbid something which feels good to us,\" Maahnoor complained. \"Doesn't this mean we don't repent of what was done to us and will go to the everlasting flames?\"\n\n\"Ladies, I don't want you to deny your own religious upbringing, but I'd like to bring something to your attention. Religions predate most science and all we've learned since the Bible, Torah and Qur'an were written. The priests, teachers, prophets and others who developed the rules by which religion governed us didn't know the science we know today. Pork was banned because people got sick from eating undercooked pork. Anal sex was banned because the religious leaders didn't know about germs, sanitation and disease. All they knew is if people engaged in anal sex, then engaged in regular sex, women got sick and infected. Germs which live in the bowels are not supposed to go into our vaginas. They didn't know if you properly cleaned up after anal sex, you could then engage in regular sex without getting sick. Because they didn't know, they banned it, made rules prohibiting it. Those rules worked for the times in which they were created, keeping us healthier and living longer.\n\n\"Now we know that if we cook pork long enough, we won't get sick. If we properly clean up and sanitize after anal sex, we won't get sick or suffer infections, but religions didn't keep up with science. Because we revere the people who gave us the rules, the rules are not often changed without great struggle. All the major religions of the book, Christianity, Judaism and Islam, believed in slavery at one time. It was common. In my country, blacks and native Americans were seen as inferior people, who it was the duty of the white man to educate, train, give them our religion, and because they were inferior, could be enslaved. They believed slavery was justified by the Bible and it wasn't against God's law. It is only in the last one hundred years, most countries of the world have banned slavery, regardless of the religion practiced in the country, and you know personally, how even though it's illegal almost everywhere, it's still prevalent.\n\n\"The same thing is happening right now in regard to women. At one point, women were second class citizens in most of the nations of the world, unable to vote, to decide who they loved and could marry, often considered chattel to their husbands and unable to hold property. Those rules have changed slowly. Women are still fighting for equal educational opportunity in places like Afghanistan, the right to drive automobiles in Saudi Arabia. What you have to ask yourselves is what do you still find valuable about your religious beliefs and how much you should still follow them?\n\n\"I don't ask you to abandon all you have ever believed. I believe all religions of the world offer something to their believers, a belief in a higher power, no matter what you call it, a moral code which does more good than harm. In many ways, religion is a tempering influence on the people who truly live it. On the other hand, religion has been used to justify horrible things; the Crusades, Jihad, slavery, seeing a segment of society that practices a different religion as inferior or less human. I believe it is important to have rules for society until humans have evolved to the point where rules are no longer necessary because we're more godly than we are now.\n\n\"When no one wants to kill us, or steal from us, or attempt to wreck our relationships with each other, and we treat each other the way the religions of the world tell us to behave with each other, then maybe we won't need religions anymore telling us what to do. We'll do them because it's the right thing to do.\"\n\n\"Now, the Qur'an tells you anal sex is bad. It was bad when the Qur'an was written because we could get sick if we had anal sex. If you do it properly now, you won't get sick. If you believe you'll suffer hellfire in the afterlife for engaging in anal sex, you need to balance that with your desire to have anal sex. Do you do what you were taught, or do what you want, as long as it does no harm to another person? Maahnoor, you did harm to Henry by having anal sex with another man. Would it be better to tell Henry you're ready to forgo your religious beliefs and have anal sex with him, and take the chance that you won't suffer damnation by doing so? Do you believe Allah wishes you to suffer in hell because you do something with your husband you both enjoy? That's my question regarding all religion. Does what you want to do harm any other person and do you think God will punish you if you do it?",
        "\"Don't abandon your entire belief system because one thing seems wrong. The Qur'an doesn't want you to use alcohol. Many bad things are done by people who are drunk. Sometimes, a person who drinks becomes an alcoholic and cannot control their drinking and they hurt many people. There's a good reason not to drink. You never need worry about becoming an alcoholic if you never drink. Alcoholism tends to be genetic. Unless you're genetically tested, you don't know if you're susceptible to become an alcoholic. Do you risk becoming one, or abstain from alcohol?\n\n\"There are good reasons for many of the rules, but are some outdated now because we know more about the science. Think of all the things that didn't exist when the Qur'an was written; airplanes, space flight, TV's, computers, movies, modern medicine. Do we say because they didn't exist in the Qur'an we shouldn't have those things, or do we temper our belief systems to include those things? That's what you need to decide for yourself. I should not make those choices for you, nor should anyone else. You need to decide if something is wrong for you and why it's wrong for you. Is anal sex one of those things. If you believe you could be damned for having anal sex, are you willing to take the risk of damnation to live the life you want to live now?\"\n\n\"You enjoy anal sex, don't you?\" Maahnoor asked.\n\n\"I do, but I don't think I'm going to hell for any of the things I do. I believe I would if I killed someone, or stole from someone or hurt someone, but not for any consensual sex with anyone, man or woman. That's the reason I can't tell you what to do. I don't believe there are any future consequences for me in the afterlife. You do. It's easy to say 'do this, don't do that' when there are no consequences to me, but it's different for you. That's why you're in a group together and I'm not counseling you one on one. I don't understand Islam the way you all do. Your Muslim sisters are in a far better position to make recommendations for your life than I am, but eventually, you all have to make up your own mind what's right for you. They can't decide for you either. You listen to what each other is saying and then decide.\"\n\n\"What if Joshua's wife decided she didn't want him having sex with anyone else?\" Ateefah said.\n\n\"Then I suppose I would have to give up sex with my Master until that was resolved. I wouldn't want to hurt Miranda, nor my Master, but the harm of a positive action like continuing to have sex is worse than the harm of abstinence. It would probably need to resolve itself with Master deciding if he wished to remain married to Miranda. We care for each other so I don't think that would ever be a problem.\"\n\n\"What if she changed her mind after having a child?\" Farah asked.\n\n\"Master is rich enough, he can support many children. Providing for Miranda's child would not affect his ability to support a child I might wish to have with him. I would consider one of Miranda's children to be as one of my own. I would love it as one of my own. I would not seek to raise my child above hers. Provided we continue to love one another, I do not foresee that ever being a problem. Two of you have somewhat the same problem. You are married to men who are not the fathers of your children. Will they treat this child the way all children should be treated or treat it differently because someone else is the father? They were raised in a society where it is more normal to raise another person's child, so I believe they will treat any child as it should be treated, but I don't know what's in their hearts.\"\n\nThey all nodded, contemplating my words.\n\n\"The group today ran longer than intended, but it was a good session. Think about these things and discuss them amongst yourselves.\"\n\n\"Thank you, Beth,\" Maahnoor said.\n\n\"You're welcome. All of you are welcome.\"\n\nMaster and Hannah were still engaged in work so I went up to the top deck where I found my sister slaves sitting in the warm water. It was too cold to be sunning ourselves, but the water was wonderful.\n\n\"Did Master tell you we can have as many orgasms with each other as we want because you're going away?\" I asked.\n\n\"He didn't!\" Miranda said. \"Are you sure?\"\n\n\"He said he'd be fucking you three more than me because you were leaving soon and asked if I had a problem if he did so. I said I understood and said I had the same impulse as I would miss you when you were gone. He said we could give each other unlimited orgasms, though we were still limited in those we got from others.\"\n\n\"That hardly sounds like Master,\" Francesca said.\n\n\"God's honest truth. That's what he said.\"\n\n\"Was that just for you?\" Belle asked. \"You could have as many as you wanted?\"\n\n\"He said all of us.\"\n\n\"I don't want a repetition of what happened after the bordello,\" Francesca said. \"That was a disaster. What exactly did he say?\"\n\n\"How about no limit on orgasms with them until they leave.\"\n\n\"So he didn't specify no limit on your orgasms. But he didn't say our orgasms either? I'm going to play it safe. I'll give you as many as you want, but I'm not taking any unless I have his specific permission.\"\n\n\"Fine. I think you're cheating yourself, but I'm game.\"\n\nIt was too cold to sit on the edge of the spa for a good licking, but I kissed my sisters and made out with them while they fondled me to distraction and gave me several nice fingered orgasms. I got two from each of them and I was quite happy. They were all quite horny before we finished.\n\nHenderson came up and found us before supper.\n\n\"Are you giving Maahnoor permission to have anal sex, Beth?\"\n\n\"No, Henry. I told her I couldn't give her permission to have anal sex because I'm not Muslim and don't know enough about their religion to make decisions for them. I did tell her she might need to decide what was more important to her; having anal sex or worrying about whether she was going to hell if she did. I did tell her the Qur'an was written at a time when anal sex was dangerous to women because people didn't understand about germs and sanitation, so like a lot of things which were dangerous, it was just prohibited. I said I didn't believe I was going to hell if I had anal sex, but I wasn't raised as they were so they needed to decide for themselves if they wanted to risk whether God really cared about her doing something with her husband that you both enjoyed and would damn her for it, versus how much she enjoyed it.\"\n\n\"But you don't think it could bring up a PTSD episode or anything?\"\n\n\"It could. Anything could, but I would think it more likely if she was being forced or harmed. If it's something she truly wants and is asking for, and you're being gentle and considerate and loving, like the first time you had sex with her, it's unlikely. What they had as slaves was not a loving, kind relationship. Everything was forced and against their will. Don't force her to have anal sex. Respond lovingly if she wants it and you should be okay. From this point on, consider anything Maahnoor requests which doesn't seem way out there, like hitting her as you're having sex, or asking for others to be included in your sex acts, as something you can try if you proceed slowly and carefully. Stop and regroup if she seems to be having trouble with it. All of the women ordered some sex toys through me, so when we get those, you might see them integrated into your sex play. If it seems too freaky, talk to me about it. From the sounds of it, she did think about it and is wondering if it's as bad as her religion makes it out to be.\"\n\n\"Okay. So we're not worrying about what her father would think about what we're doing?\"\n\n\"Not if she's requesting it. She can make the decision about if she's concerned about her father. Theoretically, he never knows what goes on in your bedroom anyway. This is something she'd never talk about with anyone. The things you should be concerned about are things you'd consider off the wall, for instance if she wanted you to piss on her. That's something we'd need to deal with.\"\n\n\"Would she do that?\"\n\n\"Hopefully, no. Never ask her all the things she had to do to be pleasing to her owner. Some of it would make you ill. The rapes were bad enough, but they may not have been the worst things to happen to her.\"\n\n\"I want to kill the bastards who did this to her.\"\n\n\"Join the club.\"\n\n******\n\nAt supper, Master was feeding Belle, who was squirming frequently on his lap. She had on a long sleeved shirt and skirt for the weather, but Master's hand was up her skirt any time it wasn't engaged in using a fork. For the first time, Bj\u00f6rn was feeding Yasmine. She was similarly dressed and also climaxed as Bj\u00f6rn played with her. He frequently cuddled with her and kissed her. Lynn was feeding Sherry. Pierre was helping to serve, so Fatima wasn't feeding him. The freed slaves were unused to temperatures this low and had on more clothing than the rest of us.\n\nDuring supper, my sister slaves asked Master if they could have unlimited orgasms with each other and me.\n\n\"Except for Francesca and Belle, who live together and will see each other after they return to the States. The rest of you won't see each other on a regular basis, so they're unlimited. Francesca and Belle can have as many as they want with Beth and Miranda, but not each other. This is preparatory to saying goodbye to each other, so since they're not, they can't with each other.\"\n\n\"That's fair,\" they agreed.\n\n\"Captain, who's taking us into Oslo tomorrow morning,\" Master asked.\n\n\"Fatima, Joshua. Right now, we're in the Skagerrak, between Denmark and Norway. We'll be reaching the mouth of the Oslo Fjord around 0300 which is when Fatima will command the vessel with my overwatch. At that time, we'll be roughly forty miles from Oslo through the fjord. We'll have to slow to five knots to navigate through the narrow waters and boat traffic in and out of Oslo. Fatima will be docking us around 1030 tomorrow morning. We'll be heading to bed after dinner. Thomas will be in charge until we reach the fjord.\"\n\n\"What can you tell us about Oslo, Captain,\" I asked.\n\n\"It lies at around 60 degrees North Latitude, about the same as the southernmost tip of Greenland. That means it's only 7 degrees South of the Arctic circle. This time of year, it means sunshine is in short supply, eight to nine hours of sunlight. The temperatures are milder than they are at similar latitudes of the United States because the Gulf Stream moderates temperatures in Europe and the Labrador Current lowers temps along the East Coast of the US.\n\n\"Oslo is the capital of Norway and its largest city. It's not tremendously large as European capitals go, roughly 700,000 in the city proper, a little over a million if you include the surrounding metro area. Temperatures will be 50-60 degrees during the day, high thirties, low forties at night. Before we leave Norway, we'll head north of the Arctic Circle and have reduced sunlight, a few hours with the sun low in the southern sky only, before it gives way to night all day in December. We will have some outstanding views of the Aurora Borealis.\n\n\"It's a lovely city, with many nice museums and shops and restaurants for you to enjoy. The bakeries are excellent and offer treats you can't find except in Scandinavian countries.\"\n\n\"Will we be able to leave the ship, Master?\" Miranda asked.\n\n\"Yes, but you'll go in a group and eight men will go with you. I need you to stick together and not go wandering off. Do whatever the person in charge tells you to do.\"\n\n\"The bridesmaids need to try on their dresses immediately,\" Lynn said, \"in case minor alterations need to be made. We should do that the day after tomorrow, first thing in the morning.\"\n\n\"Who are your bridesmaids?\" Darla asked, serving tonight.\n\n\"Beth is Maid of Honor, Sherry and my daughter, Alexandra. Joshua is walking me down the aisle. Bj\u00f6rn's brother, Sven, is best man, a good friend from the Norwegian Navy, Peter, is one of the groomsmen, and his nephew, Carl, son of his sister, Herdis, is the other. He's around Alexandra's age.\"\n\n\"I'd like to do some more shopping. I wasn't able to get everything I wanted in London,\" I said. \"After trying on our dresses might be a good time to do more shopping. I'm thinking some more cold weather clothes, some wedding gifts. Lynn, when is your family flying in and have you told them you have a couple of slaves yet?\"\n\n\"1623 tomorrow afternoon and no I haven't told them. I wanted to tell them in person so they can see how happy I am.\"\n\n\"What is your son's name, Lynn?\" Francesca asked.\n\n\"My son, Richard, is married, and turning twenty-three in December. His wife's name is Marnie. Alexandra, younger, is twenty. She's called Alexa for short. She's still in college. Richard graduated in May, which is when he and Marnie got married, just before I came on this cruise.\"\n\n\"Does she have a boyfriend?\" Ethan asked.\n\n\"Or girlfriend?\" Darla asked, serving tonight.\n\n\"I don't know. She hasn't really discussed her romances with me since high school. She did date boys then.\"\n\n\"Where are they going to be staying?\" Belle asked.\n\n\"The Thief Hotel,\" Hannah said. \"It's fairly close to where we'll be berthed, but we're thinking we'll pick them up by tender and bring them to the ship. We may not put a gangway out at all. All travel may be by boat, to keep the ship locked down. It allows us to pick and choose where we go ashore. We're speaking to the government now about having a police presence on the end of R\u00e5dhusbrygga 2, the pier we'll be docked at. Unlike pier 3, which has yacht charter and city tours, there is nothing which requires public access on two. The police should be able to limit access with a barricade.\"\n\n\"When is Delphine due to arrive, Mistress Hannah?\" I asked. I thought it would be enjoyable seeing her again.\n\n\"The day before the wedding,\" Hannah said. \"She arrives at 1154 on Air France. She'll be staying in my cabin with Angelique and me.\"\n\n\"Will the wedding be held on the ship?\" Belle asked.\n\n\"No,\" Bj\u00f6rn said. \"I have too many friends and family coming to hold it on the ship. It will be held at Uranienborg Kirke near the Royal Palace. It is quite the big church. Herdis, has been making the preparations.\"\n\n\"I have an announcement to make,\" Miranda said, \"though it's earlier than these things are supposed to be reported. My period was supposed to start two days ago. I gave it a day to ensure I just wasn't late, then had a pregnancy test done today. Master and I are going to have a baby together.\"\n\nMaster's jaw dropped, then he got the sappiest look on his face. \"You're sure?\"\n\n\"I ran the test twice, Master Joshua,\" Manuel said. \"There's a three to four percent chance of a false positive on a single test, but it's only infinitesimal if you run two. I think it's safe to say she's knocked up.\"\n\n\"Miranda,\" I exclaimed, \"I'm so happy for you. This is wonderful news.\"\n\n\"You only think it's wonderful because I'm going to get fat and ugly and Master will fuck you more frequently,\" she laughed, which made the freed slaves realize she wasn't really upset.\n\n\"No, but it is a perk,\" I said, laughing with her.\n\n\"Can you be sure the child is Joshua's?\" Fatima asked.\n\n\"Reasonably certain,\" Miranda replied. \"Anyone else I had sex with vaginally wore condoms after I stopped birth control. I suppose condoms aren't 100% effective, but mostly, I had other types of sex with anyone else.\"\n\n\"What would you do if the child is anyone else's, Joshua?\" Fatima asked.\n\n\"Raise it as my own,\" Joshua said. \"It was my choice to let her be used by others. I'll accept the consequences.\"\n\nThe freed slaves looked at each other. It was odd for Muslim women to hear anyone talk like this. On the other hand, two of them knew they were carrying babies who men other than their husbands had planted in their bellies. Their children would be half-siblings. That sounded like something we should discuss in one of our next groups. Neither of them had cared for their owner, despising him. Nevertheless, their children would be related. Perhaps I should bring Henry and James into the discussion too.\n\nFatima said, \"I want to ask Edgar to go out with me, Joshua. Is there any chance we can have some privacy off the ship or are we doomed to have bodyguards hanging around?\"\n\n\"If you went somewhere like the National Theater, I could arrange for several bodyguards to take you there, drop you off, then come pick you up when you're finished,\" Master said. \"Some place like that with their own security should be fine.\"\n\n\"I have a suggestion,\" I said. \"You could have Pierre prepare a nice meal for you and serve it to you in the stern room which could be put off limits to others for you both. It could be like a restaurant experience. Perhaps the other married couples could do the same at various times, since they didn't have any opportunity to date and have normal dating experiences either. Perhaps two or three couples at widely separated tables at a time, at least until we don't have to remain on a higher security footing. I'm sure Master and Miranda would enjoy a date night as well, something to celebrate the upcoming rug rat.\"\n\nMaster laughed. \"Edgar, what do you think of the idea of having a nice dinner aboard, and attending the National Theater on your date with Miranda and me?\" Master asked. \"Perhaps Lynn and Bj\u00f6rn could join us, a couple nights from now?\"\n\n\"Won't I be required to dress up for the Theater?\"\n\n\"You'll need something nice for the wedding. Perhaps I'll get you a tux when the bridesmaids get their dresses fitted. I still feel I owe you something for saving my women in France. We'll get something nice for the ladies too. Fatima should have some nice clothes for going out. Let's make it a jaunt and buy everyone something nice.\"\n\n\"You would buy clothes for us?\" Farah asked.\n\n\"Yes, of course. Maahnoor and Ateefah should have some maternity clothes as well. Might as well get that while we're here.\"\n\n\"Do we need to pay you back?\" Farah asked.\n\n\"Not for this. I'll buy the wedding clothes. I'll pay for half of the maternity clothes since you weren't able to plan for a child and I'll take half out of James and Henry's pay. We might want to plan ahead for baby showers. It's about three, four months until they're both due, isn't it, Manuel?\"\n\n\"Give or take a week either way,\" he answered.\n\n\"I suppose we could wait until we got to the Mediterranean to buy baby clothes. It will be warmer where we're going. Maybe Barcelona or Italy, but we should keep it in mind and the baby clothes purchased in warmer climes will be better for warmer climes.\"\n\n\"They're going to be born on this cruise,\" I said. \"Are we going to send them to shore and a hospital when they're due? Will we send James and Henry with them? Are we going to open up a nursery on the ship or send them back to New York. They've got papers now except for Yasmine.\"\n\n\"Hannah and I were discussing that very matter earlier. We were thinking of converting one of the smaller cabins to a nursery. Maahnoor and Ateefah and anyone else who wanted to help with the babies could take turns sleeping with them so the mothers don't suffer too much from lack of sleep. Since Delphine will be staying with Hannah, and Yasmine will be staying in the Captain's cabin, it should be doable. Of course, if we pick up more slaves, those plans might go out the window.\"\n\n\"Are we going to be able to go armed around Oslo?\" Edgar asked.\n\n\"We were told we could, but are waiting for final confirmation,\" Master said. \"We might not know until we dock tomorrow.\"\n\n\"I'd have to say the news today has been momentous,\" I said. \"I'm excited for all the changes coming.\"\n\n\"Definitely lots of changes,\" Hannah said. \"We've never had a cruise like this one before.\"\n\nThat night, I gave Miranda three of the very best orgasms I could in honor of her child. I made her scream for the first time since she first came aboard. Master fucked her right after I was finished, giving her two more. I felt so good. I couldn't imagine being happier than I was now.",
        "******"
    ],
    "authorname": "Thors_Fist",
    "tags": [
        "oral sex",
        "anal sex",
        "group sex",
        "lesbian sex",
        "public sex",
        "bdsm",
        "punishment",
        "yasmine"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/my-voyage-of-submission-ch-19"
}