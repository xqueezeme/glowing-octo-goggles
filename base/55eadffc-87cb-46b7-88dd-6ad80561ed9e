{
    "title": "The Temptation of Sammi Woo",
    "pages": [
        "\u00a9 2016 Chloe Tzang. All rights reserved. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the author except for the use of brief quotations in a review.\n\nOkay, this is my second entry for the 2017 Summer Lovin' competition and it looks like I just scraped this one in before the deadline. Yes!!!! It started life as an old story I came up with a year or two before I started writing on Literotica. I kind of liked it at the time, but I'd put it aside back then. When I was looking for a quick story for the 2017 Literotica Nude Day Story Competition (coz I was working on a bunch of other stories and I didn't have much spare time for a story for the Nude Day competition) I remembered this one. After I hauled it out and looked at it, I kind of shuddered at how badly it was written from way back then, which I guess just goes to show how you can improve your writing if you sit down and work at it, and then I sat myself down and started rewriting it. \n\nRewriting a lot -- it started out rather different from the story you're reading here. It didn't make it (sob) for the 2017 Nude Day competition so I recycled it just now for the 2017 Summer Lovin' competition after I finished \"Summertime Sadness\" -- and if you haven't read \"Summertime Sadness\", that's my other 2017 Summer Lovin' competition story and go read it after this. Please -- it needs your views and your votes and if you enjoyed \"Fingerprints on my Heart\", I'm sure you'll get \"Summertime Sadness.\" Anyhow, \"The Temptation of Sammi Woo\" wasn't a quickie in the end but this is the end result, and here it is. I hope you all enjoy reading it as much as I did writing it and as much as Sammi enjoyed ...well, you'll find out what Sammi enjoyed soon enough. Again, it's a little on the long side, like a lot of my stories here, but then, Sammi does have a lot to enjoy ... and be warned, there's a long lead in before the sex but okay, it's worth it ... Sammi thought so, anyhow ... just pace yourself, guys, okay .... Chloe\n\n<Center>* * * * * * * * * * * *</center>\n\n<center>Everything is made from dreams\n\nTime is made from honey slow and sweet\n\nOnly the fools know what it means\n\nTemptation, temptation, temptation\n\nOh, temptation, temptation, I can't resist</center>\n\nTemptation, Diana Krall\n\n<Center>* * *The Temptation of Sammi Woo* * *</center>\n\n\"Summer's here, Vicky. What're we gonna do for our birthday party?\" I asked that question on the first week of our Summer Break. Last year of High School completed. Check. College enrollment done. Signed, sealed, accepted, decision made. Check. High School was over, in a couple of months we'd both be leaving home, leaving town, going away to College. Same college. We'd been best friends since we were born, we'd never been apart. Why change now?\n\nWell, hello! Exaggeration. \n\nWe had so been apart, but not for, like, very long. Vicky went away with her parents sometimes. But they usually took me with them on vacations. My parents didn't take vacations. Ever. Summer camps? Vicky went to Summer Camps. I worked in my parents' restaurant. The smiling girl behind the till at the Red Dragon Grill? That was me. Vicky joined me there quite a lot. My parents didn't mind. One more free pair of hands. And Vicky loved Chinese food.\n\nAnyhow, so we'd both been born on the same day, a few minutes apart. Nine in the morning. Our Mom's had shared a room in hospital when we were born. They hadn't known each other before but somehow, god knows how coz they were poles apart, our Mom's bonded. Vicky and I, we'd grown up together. We were closer than sisters. We'd been friends since, like, forever. We'd always organized a combined birthday party coz we shared the same birthday. Our Mom's had started it although honestly, I think it was Vicky's Mom coz she felt sorry for me. Whatever, Vicky and I continued with it when we were older. It always made for a fun party. \n\nEspecially for me.\n\n\"Birthday Party?\" Vicky looked up from the fashion mag she was buried in. Giggled. \"How about we get your v-card swiped?\" She looked around, laughing. \"Whaddaya say, guys? Isn't it time Sammi lost it? She's already eighteen and she still hasn't. Any longer and it's gonna close up.\"\n\n\"Vicky! That's just, like, so gross!\" Okay, I squealed, I really did. I turned bright pink as well. She was just so over the top sometimes and Cindy and Alex were just giggling like maniacs. \"Perverts,\" I added. Okay, they were my friends as well, all of them, but still, just coz I was the only one of us that hadn't lost it yet, that was no reason to go so gross on me. \n\n\"Be serious.\" I mean, they all knew my problem. Between my parents and my boyfriend, well, it was lucky I knew a bit more than just how to kiss. Not a whole lot more, mind.\n\nVicky relented. \"We just don't want a repeat of last year, okay.\"\n\n<Center>* * *</center>\n\nShe was right. \n\nWe didn't.\n\nLast year had been a nightmare. We'd had our seventeenth birthday party at my house. It'd been my turn and my Mom had treated everyone like we were all seven, which had been okay when we actually were seven, and even when we were ten or twelve or, god help me, thirteen or fourteen. But not when we were seventeen. That, and she'd done a very Chinese party. At least there'd been lots of food. Everyone had been really nice about it to me, but the party had ended before midnight and I knew nobody ever wanted to have a party at my parents' house ever again.\n\nLeast of all me.\n\n\"My parents', they'd let us have a party here,\" Vicky said.\n\n\"They're almost as bad as mine.\" Someone had to say it, I might as well. They were, really strict. No noise after eleven. No alcohol. No weed. Boys, okay but they checked the list first. Everything. Mind you, they did have a point. These days, you gotta be soooo careful. There was Hannah, back in spring. She'd sent out an invite to friends on Facebook when her parents went away for the weekend. All she'd meant to do was ask a couple of dozen friends over for a fun night dancing and watching movies and eating pizza down in the basement and maybe a couple of drinks.\n\nPoor Hannah.\n\nFive hundred people turned up, some of them came a couple of hundred miles. The house was trashed. Like, literally, trashed. Walls torn out, doors gone, every window broken, everything smashed. That kind of trashed. Every cop in town turned up. They had to send for reinforcements. Cars got set on fire, the neighbors had their gardens trashed. Poor Hannah. I was so glad I hadn't gone to that one with Wilson, although hey. I'd been so bugged that he'd wanted to stay at home and watch some awful kung fu movie. \n\nHe wouldn't know kung fu if it bit his ass. \n\nAnyhow, Hannah? Her parents insurance didn't cover that one either. They'd lived in a trailer for three months while the house was fixed and she'd been grounded for life. She'd even missed the Prom. Even my parents had given me an evening off from the Red Dragon Grill for that. Of course, my Prom Date had been Wilson. And my parents picked us up from outside the Prom after it was over.\n\nSo maybe Vicky's parents had a point. But still, I wanted a real party and so did Vicky. Looking at each other, we both shared the same thought. Not happening.\n\n\"Maybe a pool party at your place?\" I said to Vicky.\n\n\"Hey guys,\" Alex wrinkled her nose. A sign she was deep in thought. Things always got a bit crazy when Alex started thinking.\n\n\"What?\" Cindy said suspiciously. Alex had landed all of us in trouble too many times for anything she suggested to be considered without some serious risk assessment. \n\nI didn't want to be grounded for the summer. Mind you, I couldn't see it making much difference. I was working to midnight almost every night in the Grill anyhow. My only nights off were on a date with Wilson, after Wilson asked my Mom. Sucked to be me. My friends' would come in for some takeout on the way home from a night out with their dates and there I'd be. But at least I got to see them. Count your blessings, right?\n\n\"Uh, we're all going to the same College, aren't we?\" Alex eyed us one by one. We all nodded, slowly. Yeah, we were. We all thought that was cool too.\n\n\"And we're going to lease a house or an apartment or something together?\"\n\nWe all nodded. That was the plan. Cindy's Mom was a real estate agent. We were all driving over with her and Vicky's Dad, we'd find somewhere, lease it. Cindy's Mom'd do all the guarantees and everything, whatever was needed. She knew what to do and she was a real estate agent. She was already doing some looking for us.\n\n\"So, you know, we all need time to settle in, right? Get the place sorted out, get to know the campus and everything, we don't want to be rushed of our feet in the first week, do we?\"\n\n\"No,\" Cindy said, hesitantly. We were all trying to figure out where Alex was going and what could possibly go wrong. Something always did with Alex's inspirations.\n\n\"So,\" Alex said triumphantly, and I knew what all of us were thinking. Wait for it, it's coming. And it did. \"We move in a couple of weeks early, tell our folks it's to help us get our feet on the ground, so we're not rushed that first week at College. And your Mom was already planning to go over early, right Cindy? We'll just all come with you.\" She grinned. \"And then we'll have Sammi's party. An End of Summer Party, Vicky and Sammi's birthday and hey, Sammi might even get her v-card swiped before she's officially a College Girl.\"\n\n\"Aleeeeeex!\" I squealed. I did. \"Just forget the v-card stuff, okay!\"\n\nThey all laughed.\n\nFor one of Alex's ideas, it sounded really not too bad. We spent the next hour looking for flaws but no, it all kind of made sense. Get a place early, move in. Get to know the College, relax, have some fun. Have our birthday party. Sure, it'd be without a lot of our friends back here but hey, we were girls, we were gonna be College Girls. How hard is it for college girls to make friends and party, honestly?\n\n<Center>* * * </center>\n\nWe had our eighteenth birthday party at Vicky's that summer anyhow. About two weeks after we all talked about that early move. Vicky's Mom organized it. Family, friends, barbeque by the pool. We all had fun coz, well, us girls, we knew where the REAL party was going to be and when. Cindy sold her Mom on the whole early move thing. Cindy's Mom sold Alex's and Vicky's parents and Vicky's Mom sold mine. Everything was cool and the summer was golden. Three more weeks and we'd be moving. Leaving home, going to college.\n\nCollege time? Party time!\n\nFor me, there was only one fly in the ointment remaining. That fly? He was the boyfriend I didn't really want anymore. The boyfriend I hadn't wanted for quite a while now if we're being honest here. Wilson. Wilson Wong. I knew he was going to try and get into my panties before I left for College. Three weeks and counting. He tried, every time we dated. He'd been trying since, like, forever and now, with only three weeks to go before I moved away, it was getting to be a nuisance.\n\nWilson was getting too darn pushy. Whenever we dated, it was like I was with an octopus with tentacles everywhere. I gave up wearing skirts and switched to jeans. Really tight jeans. No more tops that buttoned. Heck, I even dug out some bodysuit thing with long sleeves to keep his paws off my boobs. I mean, enough was enough. I didn't mind a little making out. I enjoyed it, even with Wilson Wong. I just didn't want it going further than it already was.\n\nProblem was, Wilson Wong did. He was a couple of years older than me. Force of circumstances had led me into dating Wilson Wong through my last three years of High School.\n\nYeah, that long. \n\nWith a guy I'd really have preferred not to date.\n\nAnd yeah, I was datable. Jeez, give me a break, even I knew that. \n\nNot being overly modest, I'm Chinese, okay, but I'm not a complete nerd even though, yes, I do wear glasses, but I have contacts as well, okay! I'm cute, I'm vivacious and I'm not shy at all. I'm noisy and I'm outgoing and even if I say it myself I definitely look okay. Better than okay if your taste runs to slender Chinese girls with small boobs. Being honest with myself (and honest with you, coz, well, you can't see me so I'm gonna tell you), I have to say that my boobs are way on the small side and yeah, I do wear a padded bra coz, you know, a girl likes to be looked at even if there isn't much to look at. Nice, but very small and I know that. \n\nI'm sort of almost skinny rather than curvy but there are curves and there's that Asian flat-butt thing that a lot of guys don't like coz they like bubble butts but hey, in twenty years' time those cute bubble butts are gonna be the size of the rear end of an F150 and my butt's still gonna be small and cute and everything. And hey, it's my butt and I like it a lot just the way it is. For sure I make up in personality what I don't have in looks. It's not like I'm shy or anything. I'm not.\n\nOkay, my boobs are small, okay, honestly, they're almost non-existent but I do have really nice legs. Like, nice, long, really long and the guys all look at them legs. So it's not like I'm being, like, overly modest. And I have a very strong self-image. I won't win any beauty contests but hey, I look good. Really, I could've dated half the guys back at our High School. Easily.\n\nIf I'd been allowed to.\n\nI wasn't allowed to. \n\nNot when I lived at home. My parents were real traditional Chinese, they didn't permit me to date gweilo guys (that's you white guys if you don't already know we call you guys gweilo's -- if you're Cantonese-speaking like my family, anyhow). No way was I allowed to date a gweilo. Not. Never. Never Ever. Every Chinese Mom knows what gweilo guys want to do with cute Chinese girls. Gweilo guys? Verboten. \n\nAnd me, I wasn't the sort of girl that rebelled against her parents. Not when I lived at home, anyhow. Wilson Wong was the only guy my parents would let me date. \n\nWilson was permitted. \n\nBecause he was Chinese and I was Chinese and my parents knew his family and there weren't any other Chinese families around our town with any son's the right age for me to date although they might have let me date a Korean guy. There weren't any of those where I lived though. \n\nSo I dated Wilson who was, let's face it, as unlike me as could be and an almost total nerd. Not a very smart nerd either. There were guys other than Wilson that I'd far rather have dated through High School. Gweilo guys. A couple of Latino guys. There was even that one black guy, Steve, I was kinda hot for although I'd have been a bit scared dating a black guy but he did give me the hot shivers when I thought about him. Lots of guys I'd have dated in fact. \n\nLet's be honest again here, I'd have happily dated half the guys I went to High School with. My parents might be conservative about me dating guys and stuff. I'm not.\n\nThose guys, they all thought I was stuck up because I turned down the guys that asked me out on a date. None of those guys who'd asked me out knew my parents outside of buying takeout from the Red Dragon Grill. If they had've met them and gotten to know them, they'd have understood. Chinese Tiger Mom. Chinese Tiger Dad. Two sets of Chinese Tiger Grandparents. There was no way my Mom and Dad would allow me to date a gweilo guy. \n\nThey'd have killed me if I'd dated a Latino or a black guy. Not quite, but I'd have been completely grounded. Probably sent back to China or something. Besides, what with all the after school programs and swimming and gymnastics and music and that extra math and science and English tuition and my parents and grandparents on my case to come first in everything plus working at the Grill when I wasn't studying, I'd barely squeezed in one date a week with Wilson over the last couple of years. A supervised date. \n\nYou get the big picture.\n\nIt sucked.\n\nRight through High School, I'd made do with Wilson Wong. He was Chinese, he was chubby, he had a face like a dumpling and his idea of small talk was to ask if I'd like to cook him noodles or rice for dinner when his parents were out. Now I was going to be away from home, at College. Three states away from home. Free and on my own and able to make my own choices. Supposedly. \n\nI was so looking forward to the end of summer and going off to College. \n\nSmiling. Dancing. Singing. Knowing that in three weeks' time I could leave Wilson Wong behind and go ahead and date anyone I wanted to. I can't tell you how much I was looking forward to that. No parents. No parental vetting. No \"be home by midnight, Sammi.\" Okay, I knew my parents' had their sights set on a nice eligible Chinese boy for me but that wasn't what I wanted. I wanted to have fun. Date around. Party. There'd be plenty of time to find the right guy after I graduated.\n\nCollege? I wanted College to be fun. I wanted guy fun. Nothing serious.\n\nMaybe there was a Chinese guy in my future. Maybe not. I wasn't at all hung up on that like my parents were. In fact, I wasn't hung up on that one at all. My parents saw College as a good place to meet a nice Chinese boy from a good family who was getting a good education with a job-worthy qualification at the end of it. Meet, pin down, get that ring on my finger, marriage and then those grandkids after a year or two of working. \n\nThat was what my parents wanted for Sammi Woo. \n\nThat was definitely not what Sammi Woo wanted for Sammi Woo.\n\nTo give my parents their due, they didn't consider Wilson Wong good enough as a long term match. Even for my parents he was a stand-in until a bigger and better fish came along. We were agreed on that at least. At College, they intended me to find that better fish, hook him, reel him in and walk up the aisle with him.\n\nI'd heard my Mom talking to my Dad, \"...Wilson? He's such a nice polite boy and he always brings Sammi home on time, never takes her anywhere that I'd worry about....I'm so glad she likes him. He'll do until she meets someone better when she goes College. Did you have that talk with the Auyeung's yet? Their oldest son's at the College Sammi wants to go to. Very eligible and he hasn't got a steady girlfriend, I talked to his Mom last week, she was interested.\" \n\nAnd Wilson Wong? Well, Wilson was already in College, but in our local one. He'd tried to persuade me to enroll there. No way. I'd had my sights set higher. This was my last year at home, and when this summer ended, I intended that to be the end of Wilson Wong as well coz, well, in the long term Wilson Wong was wrong for me. I just hadn't told Wilson that. Wilson suspected, I'd been sure of that. He just hadn't wanted to know. I wasn't going to tell him either. My plan was to just quietly fade out of Wilson's life once and for all. He'd get over it. \n\nHis parent's would find him some Green Card Girl from China. They'd be happy ever after.\n\nSo would I.\n\n<Center>* * *</center>\n\nHonestly, I didn't want to hurt Wilson Wong. We'd dated for, like, over two years. Almost three. I wanted to let him down lightly, gently. Wean him away over what was left of summer, then vanish from his life in three weeks' time. I didn't want to dump him hard. Just fade out. He'd meet someone else soon enough. If not, well, there really were plenty of those girls in China who'd marry a guy with a face like a dumpling for a Green Card. Wilson's parents could arrange that for him. Lots of Chinese parents with sons like Wilson did that sort of thing. All the time. \n\nOkay, not being mean here, I liked Wilson. I just didn't love Wilson. He wasn't, like, a hunk but he wasn't all that bad. I liked kissing Wilson, even if he wasn't the greatest looking guy in the world. I liked making out with Wilson. Even if he did have a face like a dumpling. Heck, I just closed my eyes and pretended he was one of those guys I really liked a lot and that kind of worked for me. It wasn't exactly hard for me to get excited, even with Wilson.",
        "I mean, I liked making out, full stop. I wasn't, like, one of those girls that pledges their virginity or any stupid shit like that. Not telling any lies, there were half a dozen gweilo guys at High School I'd gladly have given my all to on the first date if I'd been allowed to date any of them, or even, forgetting dates, just been alone with them for long enough for them to do the deed with me. My panties would've been off in a second.\n\nThat black guy, Steve? I'd have done it with him anytime. He was a total hunk. I wasn't in love with any of them though. Of course not, but I would've liked to have dated any one of them. Heck, ALL of them if I'd had a chance. Just, no way was I giving my all to Wilson Wong, even if I did like making out. My first time was going to be with someone I really wanted to lose it too. \n\nWhen that precious little pearl went, I wanted it to go with a spectacular bang to a guy to die for. When my v-card finally got swiped, it was gonna be by someone really hot. Something spectacular. Like that girl from my High School that did it with five guys at that party. I'd been there at that party with Wilson but I hadn't realized what had happened, not until the gossip started the following week. \n\nAll the other girls had been shocked.\n\nMe? I been shocked. I'd also been jealous. I knew those guys. I'd have done it with any one of them. God, maybe I'd have done it with all of them just like she had. That night, the night I'd caught up on the gossip, I lay in bed with my eyes closed just fantasizing about that one and playing with myself. And yeah, I'd been doing that for a long time. Coz Wilson wasn't getting to touch me there. \n\nFive guys? I climaxed half a dozen times that night just imagining that. Would I have done it with those five guys? I knew them all. I'd have done it with any one of them. With all five? Like Lindsey? Maybe I would've. I did it with all five in my head anyhow, while I teased myself to one climax after another. But with Wilson Wong? No chance. Nada. Zippo.\n\nSo, yeah, okay, I knew Wilson was in love with me, even if I wasn't in love with him. I'd told him that too, a lot of times, but he didn't want to listen. I did like Wilson, I did, obviously. I mean, like I said, I'd been dating him for over two years and I could've just not dated him at all. He was actually rather sweet. Honest to god, Wilson was a nice guy, he was polite and he tried his best. Just, he didn't push my buttons. He tried, I'd give him that. Tried hard. \n\nOn our last few weeks of dating over summer he really tried hard to push my envelope. \n\nJust, not very successfully. \n\nI mean, we kissed. He got to play with my boobs and kiss them and I really enjoyed that. I loved it when he kissed my boobs and sucked on my nipples. I'd close my eyes and pretend it was one of those guys I really liked enough to do it with and then it felt even better. No below the waist stuff though, except he got to rub himself up against me. A few times I'd let him get himself off rubbing up against me and I'd actually enjoyed that in a vaguely exciting sort of way. But neither his hands nor anything else of his was getting inside my panties. Ever.\n\nTrouble was, he kept trying and it'd gotten so bad that now I was wearing jeans and a body suit under me tee-shirts just to stop him trying to go further. I hated that, coz, well, yeah, I did like making out. A lot. Even with Wilson Wong. Just, he wasn't the guy I wanted to swipe my V-card. \n\nIt was all very frustrating.\n\n<Center>* * *</center>\n\n\"Dump him before we go,\" Vicky said, rather callously, right at the end of July, with two weeks to go before we left home. \"Just do it, Sammi. Do it now, don't leave any lose ends.\" \n\nVicky wasn't soft like me. She dumped guys on a moment's notice. Less, sometimes. God, I still remembered that time her boyfriend had climbed out of the bedroom window onto the roof at that party and she'd shut the window and gone at it on her bed with another guy she'd just met. Her boyfriend thought he'd been locked out by accident. She'd only let him in after the other guy had left and then she'd done it with her boyfriend. I still thought that was really slutty but Vicky had just laughed. She'd dumped that boyfriend the next week. \n\nShe kept telling me to dump Wilson.\n\n\"I can't do that to him,\" I'd said. \"We've been dating for, like, almost three years. I'm not like you, Vicky. I can't just dump him, that's so cold. I'm just gonna leave him behind.\"\n\n\"You gotta be tough now, Sammi, or it's just gonna be worse in the end,\" Vicky had said. \n\n\"I can't,\" I said. I kind of knew she was right though. I just couldn't do it.\n\nOkay, honestly, I knew Wilson thought he was in love with me. He'd said it a few times and I'd been hoping it was just him trying to get into my panties. I'd been hoping he didn't mean it. I'd been hoping going away to College would let me dump him gently, without actually saying so. Just leave for College, leave him behind. Let it fade away. Once I wasn't here and he didn't hear from me, he'd forget me. Find another girl or something. I mean, I'm not a nasty bitch or anything. I'm not. \n\nBut July had been a pain. I'd tried weaning Wilson. I'd been busy. I'd had to work. I was studying. I was round at Vicky's. None of those worked coz he just hung around and the minute I showed my face, there he was. It was almost like being stalked or something. It was a real pain.\n\nCoz Wilson was really getting, like, totally serious. Those first few weeks of summer he'd been making a real major effort to get into my panties and I'd really had to say no a lot more forcefully than I wanted to. I think he thought if he did that, if he got into my panties, if I let him, I'd be his forever or something. There were two chances of that. None and ....well, absolutely none at all. Wilson getting into my panties was a step that just wasn't happening in my life. Ever. He was probably going to try again every time we dated.\n\nDidn't matter. Wasn't going to happen.\n\nAlthough Wilson didn't know it, by that first week in early August, I'd actually decided. Vicky was right. Enough was enough and the longer I left it, the worse it was going to be. I didn't want to hurt him, but this was just hurting me too much. I wanted to date other guys at College, I didn't want Wilson hanging over me like a shadow. I wanted to have fun at College. For all that, I wasn't going to cheat on Wilson. I wasn't that kind of girl. I wasn't going to go behind his back. I'd made up my mind. Painful or not, Wilson Wong was going to be my ex-boyfriend before I left for College. Very soon. It'd hurt me. It'd hurt him. \n\nBut I didn't want any loose ends. It was going to happen. I was going to break it off with Wilson Wong. But I was going to leave it to just before we left. No way I wanted to deal with all the angst, negativity, upsetness and pure guilt-tripping that Wilson Wong was sure to unload on me when I broke it off. Coz nice guy or not, I was totally sure he would. I just hoped he didn't go totally freaky on me. Whatever. I'd date him as little as I could for the next couple of weeks and then dump him.\n\nSounds like a plan, Sammi, I told myself. I even scripted it out.\n\nBut I wasn't looking forward to telling him.\n\n<Center>* * *</center>\n\nTurns out I didn't dump Wilson Wong fast enough. Right after I put him off for a date the evening he called me, he asked me out on a date the coming weekend instead and he'd already checked with my Mom. When I said I was working at the Grill, he told me my Mom had already said I could take the evening off. That was a bit creepy, but honestly, I just didn't have the heart to say no. I'd have to make too many excuses and, well, I was kind of thinking this would be just about my last date with Wilson before I dumped him. I'd be nice to him coz this date would be his last.\n\nThat was a mistake. Never be nice to a guy you're planning to dump.\n\nHe'd taken me home to his parents. They were out. It was just him and me.\n\n\"To watch a movie.\" That's what he'd said.\n\nHe didn't say it was a porn movie. Well, maybe not porn, but close. Really close. I didn't say anything about the movie choice coz actually, when he'd put it on, I'd had no idea. I mean, \"Natalie,\" that's not like a clue or anything. Besides, it was some Korean movie and I liked Korean movies. Anyhow, that starting scene, there was this couple just going at it on a couch. And it was definitely hot. I mean, not quite explicit, but close. Real close.\n\nI'd never actually watched anything like this before and okay, I was curious. That first long sex scene had me hot. I had no idea you could do it like that. I mean, that girl sitting on the guy? After that, well, I got my breath back but half way into the movie it got all hot and heavy again as this sculptor artist guy made love to this Korean model. God, I could just see myself being her, taken to his bed and, well, bedded. Yes please. Bed me.\n\nWilson obviously agreed. When he started kissing me, well, like an idiot I didn't push him away. Okay, bite me. I like making out. Even with Wilson Wong and, well, I knew this was our last date. I'm not, like, a tease or anything and yeah, making out with Wilson was way better than not making out at all and in my head I knew this was our last date. I'd kind of made up my mind I'd let himself rub himself up against me until he got off. Why not?\n\nOnly problem was, I hadn't dressed to keep Wilson's hands out. Not this time. I was wearing a skirt. And a loose tee.\n\nThat sex scene? Well, there was already another one on and oh my god, it was exciting and my heart was kind of pounding as Wilson got my tee-shirt pushed up enough to get a hand under. Once Wilson got my bra unhooked, so was his hand on my boobs. Exciting, I mean. God, watching that movie was pantie-wetting excitement. When Wilson pushed my top all the way up to my armpits and started sucking and licking my nipples, I wasn't saying no.\n\nWilson wasn't saying a word and I wasn't saying much either actually, just making little noises. Excited little noises coz yes, I really did enjoy my boobs and my nipples being sucked and licked and touched. A lot. Even by Wilson, who was a bit rough on me with his hands at the best of times. His mouth was great though. Good enough that I didn't object at all to his hand squeezing me just a bit too hard.\n\nOn the screen, Natalie was on her hands and knees and that guy was behind her, doing it with her and, well, I'd never imagined doing it like that. In those little fantasies in my head at night in bed, it'd been me, on my back, with whichever hunk I was fantasizing about on top of me. I'd never even thought about kneeling like that with some guy behind me, just doing what that guy in the movie was doing. Just watching had me hotter than hot. And on the couch, Wilson's mouth was lapping at one of my boobs and Wilson's hand was under my skirt and about to slide inside my panties and my heart was pounding.\n\nShould I let him? Should I stop him? \n\nMy hand rested on his. I should stop him. I should, I knew. If I didn't, he'd get more than ideas. Not that he didn't have more than ideas now. I watched that girl in the movie getting what I knew I wanted. Wilson's fingertips eased under the top of my panties, eased down slowly. Heart beating faster, I didn't stop him. His hand moved beneath mine, sliding slowly downwards, further still. Wet. I was wet and excited and his mouth was sucking on one of my breasts. Closing my eyes, I listened to the sounds of the lovemaking from the movie, the sounds of that Korean girl being taken. She sounded like she was enjoying what was happening. She looked like she was enjoying it. \n\nBut then, it was a movie. \n\nShe would sound like she was enjoying herself, wouldn't she? She was acting. God, she really was naked though. And it was in a movie so there must have been a film crew filming all of this. She must have been doing all of that in front of the film crew. Naked. Acting as if she and that actor were having sex. With everyone there watching them. How could she do that? Closing my eyes, I thought about it. What if that was me? On the bed with that actor? Naked? Everyone looking at me. Being filmed. People watching. Seeing me like that. How could she do that? Oh my god that was just sooooo exciting.\n\nMe? Right now, I wasn't acting. Not at all. Even if it was with Wilson Wong, I was totally enjoying what was happening.\n\nSort of. \n\nOkay, honestly, a lot more that sort of. Wilson was making these sucking noises as he mouthed my breast, his tongue was all over me, running over my nipples, which was really nice, making me shiver and tingle. He was licking my breasts with his tongue and his hand, it was inside my panties and I couldn't help it, I didn't want to but I did. I eased my knees apart, making more room for his hand. I lifted my head a little to watch him, supporting myself on one elbow, the other stroking his hair. This was actually rather more than exciting. I kind of wished I'd let him do this to me before. \n\nNo I didn't. \n\nThat'd have given him ideas. This was our last date. Okay, nothing else. I was going to let him touch me there and nothing else. And oh sweet Jesus, his fingers really were touching me and I wanted to moan out loud coz oh my god it was so exciting. Fall back into the couch and just lie there and let him keep touching me there.\n\nJesus Jesus Jesus it was too much but I wanted more and his fingers, they were touching me there where I was so wet and I was shivering with excitement now and there was no \"no\" left in me. His hand, his hand was all the way inside my panties, his fingers exploring now, touching me, easing further down towards right between my thighs where I was all hot and wet. I found myself easing my knees even wider apart, making room for his hand coz really, his fingers felt so good on me and I was just so wet. This was so good and I couldn't stop myself from wanting more even if it was Wilson.\n\n\"Ooooooohhhhhh.\" His fingertip eased inwards between my labia. Trembling, almost sobbing, I parted for his finger, it slid inwards where I was shiveringly sensitive, his fingertip found my wet center. \n\nMy mouth opened wide. My eyes opened wide. My knees fell apart. Well, they were already apart. Wider apart. Giving Wilson Wong's hand open access. Wilson Wong went for it without any hesitation. He might have been a nerd, but he was a nerd that knew what he wanted and he was on the verge of getting it.\n\nI wasn't doing a thing to stop him.\n\n\"Uuuhhhhh.\" His fingertip pushed through my entrance, paused. I gasped, shivered. One of my hands held his head coz he hadn't stopped sucking and licking at my boob. My other hand rested on his, outside my panties where his was inside. God, I couldn't breathe. I could feel his finger partly in me, I wanted all his finger in me. Badly.\n\n\"Ohhhhh.\" I could sigh though. Sigh with pleasure as I just relaxed, went limp. That touch. His hand there. I wanted more. Maybe I should've let him do this to me two years ago, when we first started dating? I'd missed out on this when I could have been doing this for two whole years. Even if it was with Wilson Wong.\n\n\"Ooooohhhhh.\" What an idiot I'd been not to. I could do this with him and still dump him. Girls dumped guys all the time. Like Vicky. She slept with guys and dumped them. I could do that too. Even to Wilson Wong. Even after I let him get his hand inside my panties. I could still dump him. I could.\n\nHis finger eased all the way into me, very slowly. His hand cupped me and I was wet everywhere, wet all over his hand where he was cupping me, where his finger had worked its way all the way inside me and it was impossible to think of anything else except that it felt so good in me there and I could feel him, feel his finger inside me touching me and I wanted it. I wanted it and I got it. \n\nI sobbed for breath, my insides doing a nervous little dance as his hand ground against my clitoris, probably completely by accident but it didn't matter coz oh fuck, that felt so good. Jesus, it was wildly totally so good. Way better than when I did it myself. So much better. \n\n\"Oooohhhhhhhh.\" My head arched back, my back arched, pushing my breast into his mouth, my knees spread themselves even wider apart, stretching the muscles of my inner thighs. My feet flat on the bed, my hips jerked. His finger pushed deeper inside me, deeper still while I started sightlessly at the ceiling, breathing in sobbing gasps now.\n\n\"Ooohhhhhhh.\" I sobbed again. His finger, it was all the way inside me, as far as he could get it and his hand was cupping my sex and I was so wet there, his hand, his fingers all pressing against me, pressing against the most intimate part of my body, moving on me, moving in me. I couldn't believe how wet I was, how good his finger inside me felt, touching me inside where I'd never even touched myself, so far inside me.\n\n\"Ohhhhhh.\" Just like that, his finger inside me opened up a whole new world to me, a world of heated excitement and pleasure that I'd never imagined. Well, I'd kind of imagined it, but I'd never actually believed it could feel so good. Good? It felt exquisitely wonderful, even with Wilson Wong. My eyes had been opened and all of a sudden I wanted this. I wanted Wilson's mouth on my breasts, his hand inside my panties, his finger inside my sex, exploring me, touching me. \n\nWanted? I welcomed it as I lay there, sobbing for breath, almost moaning out loud as Wilson's hand cupped me there, driving me half-crazy. If Wilson had actually known what he was doing, I would've had my v-card swiped then and there. But Wilson knew as much as I did. Pretty much nothing. He wanted what my body offered, what my body could give him. Me? In that moment I was willing to give him everything he wanted. \n\nBut he didn't know how to get it.\n\nOkay, he tried. I sure wasn't stopping him. I wasn't making any attempt to stop him. Not at all. Not that night, not then. I was worked up enough, excited enough that when his hand slipped out from inside my panties, I missed his finger inside me and I let him tug my panties down to my knees. I made no objection. Objection? I kicked them the rest of the way off myself and just as eagerly welcomed his hand back on my now exposed and naked sex. His finger plunged back inside me greedily now and even though he was a little rough, it was just as eagerly accepted as it had been the first time. \n\nGod, this was so exciting.\n\nLying there on my back, my top up around my armpits, my skirt up round my waist, my panties gone, I was as ready as I was ever going to be for Wilson to take what he wanted. Ready? God, I was handing it to him on a plate coz now? Now I wanted him to do whatever he wanted to do. I was reveling in what was happening to me, what Wilson was doing to me with his hand, his finger, my excitement growing and growing and growing along with the wet noises from where his finger was probing and sliding and exploring and caressing me inside and just driving me completely out of my mind. \n\nI didn't say it, but I wanted more without actually admitting it to either myself or to Wilson. I didn't so much want Wilson as I wanted what Wilson was doing to me, the pleasure he was bringing to my body. Of course I wasn't thinking any of that. I was experiencing it. That hot wet excitement, that limply willing surrender to his finger inside me, his hand on me, his finger touching me inside, my body almost naked beside him as he looked down at me. That willing acceptance as his hand and his mouth explored me. I wanted more without really knowing what I wanted.\n\nWilson Wong certainly intended to give me more. \n\nHis hand left me for a moment. Suddenly empty, I sobbed for breath, moaning now, wanting his hand back on me. It was a long moment before I realized Wilson was easing his jeans and his boxers down. His erection sprang free, bounced against my thigh as I lay there. Feeling it without seeing, I knew what it was and in that moment, I knew Wilson Wong was going to give me what I both wanted and feared. ",
        "That touch of his hand back on me, that intimate touch, that slow penetrating slide of his finger into me, my channel clasping his finger as it eased upwards inside me, all of it brought that heart-stopping excitement all over again. My hand searched blindly for him, found him and I held him in my hand. I actually held his cock in my hand, feeling the heat and the hardness, feeling him throb as I clasped him in my fingers. Feeling a male cock for the first time in my life.\n\n\"Sammi .... Sammi....\" His cock throbbed in my hand. \n\nHis hand caressed me. Beside him, on the couch, I lay there, my top pushed up, my bra unfastened, rucked up around my armpits, my skirt around my waist, staring up at the ceiling, helplessly enthralled by Wilson's touch. He wanted to do it to me. I knew that. He was moving, moving up and over me, one knee sliding between my wide-spread legs, then the others, his face staring down at mine, my hand holding his cock, so hot, so hard. So ready to do what he wanted to do to me.\n\nLooking up at him, at his smugly excited face, in that frozen moment, I knew something else too.\n\nI knew I was going to let Wilson Wong do what he wanted to me.\n\nWilson Wong fully intended to swipe my v-card.\n\nAnd I was going to let him.\n\nHe kissed me, I opened my mouth wide to him, kissed him back. His finger moved inside me and I welcomed his probing with slippery tightness. His hips jerked, his hard cock moved in my hand and without thinking, I stroked him, my fingers exploring the contours of his rigid hardness as he began to friction himself against my clasp.\n\n\"I love you, Sammi .... I love you,\" he gasped.\n\nI didn't see any love on his face though, just lust and desire. Desire for me. Lust for me. His cock moved in my hand, his finger moved inside me. My heart pounded, he kissed me hard, his naked chest pressing hot and hard against my now equally naked breasts, his tongue deep inside my mouth as his finger touched me and caressed the inner walls of my channel, exquisite pressure, exquisite sliding movements.\n\n\"I love you, Sammi,\" he gasped again, his eyes looking down into mine.\n\nI said nothing. What was there to say? I didn't love Wilson Wong but in that moment, I loved what he was doing to me and my hand continued to stroke him even as I guided him towards what I knew he wanted. Guided him to where I knew I shouldn't but I was because this exquisite pleasure was irresistible and I wanted more, I wanted something bigger and harder than his finger inside me.\n\n\"Sammi,\" he groaned. \"I want you .... I want you, Sammi.\"\n\n\"No,\" I gasped almost inaudibly, but it was just a word, not something I meant because my body knew what it wanted and my hand was answering to my body's needs, not to that whispered word of denial that we both ignored. Me, because I didn't mean it. He, because my whisper was so faint there was no way he'd have heard it and anyway, my hand was giving him the opposite message.\n\n\"Yes,\" he groaned as I drew my knees back, back all the way, opening myself to him, exposing myself to him, my channel sliding and moving on his finger as I moved, as I opened myself to him, as I offered myself to him to take. As my hand drew him towards me, towards my center, my heart choking me as the awareness of what I was doing filled me. \n\nI knew exactly what was going to happen in a few seconds.\n\nWilson Wong was going to swipe my v-card.\n\nI didn't want him to, not really.\n\nExcept, well, I did.\n\n\"Yes,\" I moaned, looking up at him, feeling the swollen head of his cock brushing against me, stroking him eagerly now, knowing that soon this rigid length of male flesh would be inside me where his finger was penetrating me now. My feet rode his hips, his finger pierced me, my channel clasped him, a hot slippery tightness that squeezed him as his finger withdrew, squeezed him deliciously, rapt with the knowledge that as soon as it left me, it would be replaced by this hard throbbing male length I clasped in my fingers.\n\n\"Ohhhhhh.\" I sobbed as his finger finally withdrew, leaving me empty, leaving me wanting what would come next. My hand eagerly guided his cock to me, to where I waited for him, slickly ready, exposed, open.\n\n\"Ohhhhhh,\" I moaned, back arching as the head of his cock brushed against me, my labia slickly parting for him, feeling his cock slide against me where I was so sensitive. Wanting him.\n\n\"Sammi,\" he groaned, \"Sammi\" and he was pushing against me but my hand held him, wanting time, wanting this excitement, this anticipation, just for a moment longer before I irrevocably surrendered myself to him.\n\n\"Wilson,\" I moaned at last, eyes wide, about to release him, about to give myself to him, about to be taken by him. About to have my v-card swiped.\n\n\"Sammi,\" he groaned, humping his cock hard into my tightly clasping hand, the tip of him brushing me where I was so wet. His eyes widened. \"Uggghhhhhhhhhh.\" \n\nMy eyes widened as hot spurting fluid jetted outwards against my sex, coating me, coating my inner thighs, spurting onto the exposed skin of my stomach in flooding ropes of hot fluid that spread between our bodies as he pumped out onto me, groaning, gasping and even though a moment before I'd wanted him to take me, I'd wanted that cock so much, now I felt a vast sense of relief as disappointment filled his features, as he bowed his head, breathing heavily into my shoulder as he knelt there, quivering, before sagging down onto me.\n\nExcitement dying with Wilson's deflating cock, I lay beneath him, crushed by his chubby weight, half disappointed, more than half relieved that it hadn't actually happened after all. \n\n\"Wilson, you're heavy,\" I complained, pushing him, wanting his dead weight of me.\n\nHe lifted his head, rolled off me to lie on his back beside me, breathing heavily. Looking down, my stomach and my sex was coated with his semen. Lots of it. The first I'd ever seen and really, I didn't want to see it at all. Not Wilson's. Picking up his t-shirt, I wiped myself clean, wrinkling my nose. Yeeech, that was so messy. Done, I sat up, found my panties, stood up and slipped into them, tugging my skirt and then my bra and top back into place.\n\n\"Come back here, Sammi,\" Wilson was smiling happily at me. \"We can try it again soon.\"\n\nNo way. Absolutely no way. It hadn't happened and no thanks to me. I wasn't giving Wilson a second chance. Wilson wasn't getting any other chance. \"I have to go,\" I said, almost frantically, not giving Wilson any more time at all. No more opportunities. This wasn't happening again. No way. Ever. That was it. \"Good night, Wilson,\" and I was out the door.\n\n\"Sammi....\" I heard him scrambling but I was already down the stairs and out the front door. My phone rang and I knew who it was but I didn't answer while I was running. I did text him though to say I was home and I needed some time. I did, all the time in the world, the rest of time, all eternity away from Wilson. God, I was so going to have to dump him the hard way. \n\nI'd tell him next week, just before I left for College. \n\n<Center>* * *</center>\n\nBack in my own bed, safely by myself an hour later, scrubbed clean, I lay looking at the ceiling for what seemed like hours, unable to sleep. I kept thinking about how excited I'd felt as Wilson had unfastened my top and looked at me. How his mouth on me had me feeling. How his hand inside my panties and his finger inside me had been so exciting. How I'd almost let him go further. How I'd taken my own panties off for him. How he'd spurted out all over me.\n\nJesus, he'd almost stuck it in me. I'd almost let Wilson Wong do me. \n\nI couldn't believe that I'd let him get that far. That he'd got me that excited that I'd let him. Oh. My. God. I wasn't going to let that happen again. No way. I'd almost done it with him and if I did, there'd be no friggin' way I'd ever get rid of him even if I moved all the way to San Francisco. None. And I didn't want my first time to be with Wilson Wong. \n\nI didn't want any time to be with Wilson Wong. \n\nWilson Wong was wrong. Wrong wrong wrong. My first time was going to be with some guy that really did it for me. Some guy who knew what he was doing, pressed all my buttons, had me on my back and panting for it and when he did, he'd know exactly what to do and I'd be just like Vicky or Alex.\n\nScreaming my head off while some good looking hunk gave me what I wanted.\n\nI was going to have to dump Wilson Wong. No! He was so not a guy I wanted things to get serious with and almost, almost I'd given him the opportunity. It was going to hurt him when I dumped him, but better hurt him now than cause myself and him a lot more pain and misery. \n\nNo more procrastinating, Sammi, I told myself. Wilson Wong is wrong, Sammi. Wrong wrong Wong, I told myself. He's gone tomorrow, Sammi, I told myself. You're going to tell him so.\n\nWilson Wong, you're chop suey.\n\nTomorrow.\n\nIt was so hard getting to sleep that night. After I did, I had excited dreams of me and making out with a guy. But the guy wasn't Wilson Wong. Actually, in that dream, I never even saw the guy coz I was on my hands and knees and he was behind me. \n\nIt was a movie set, I was acting in it and everyone was watching me as I knelt, naked, on a bed with that guy behind me, taking me. In my dream, I climaxed so hard and so long that I woke myself up and awake, I realized I really had. Climaxed that is. Closing my eyes, fingers exploring, I remembered how I'd felt in that dream and what I'd been doing. With everyone watching me.\n\nIt didn't take me long before I climaxed again.\n\nThat one was even better than in my dream.\n\n<Center>* * *</center>\n\nI didn't get a chance to dump Wilson. When I called the next day, his Mom told me he was away for a few days. I called every day but he wasn't there. He wasn't there the day before we were due to leave and my heart leapt with joy. Freedom. I didn't have to dump him. I'd send him an email from College.\n\n\"Way to go, girl,\" Vicky high-fived me as our Dad's packed my bed and dresser and my desk and all my boxes into the U-Haul. \n\nCindy's Mom had already signed the lease for us on a lovely old house. Well, it was an old turn of the century brick place, two stories and a basement that was like something out of an old horror movie. A beaten up student rental close to the college, but she'd taken Cindy and Alex with her and they'd liked it. Two weeks before College started and we were on the road. Shaking the dust of the old home town from our feet. Metaphorically speaking.\n\nLeaving Wilson Wong behind me and that wasn't metaphoric at all. More like euphoric.\n\nI felt lighter and freer than I'd ever felt in my life. Walking on air. I couldn't stop smiling. Vicky's Dad drove the U-Haul with everything we'd rounded up along with me and Vicky. Alex's Mom and Dad came with us, with Alex and Cindy. My Mom and Dad waved goodbye from outside the Red Dragon Grill and gave us boxes and boxes of takeout for the road trip.\n\n\"Bye Sammi, see you at Thanksgiving,\" Dad said.\n\n\"I want to see good marks,\" Mom said. Then, \"Call us when you get there, Sammi.\"\n\n\"Okay, Mom. Bye, love you.\"\n\n\"Bye Sammi. Love you too.\" And we were gone.\n\n<Center>* * * </center>\n\n\"Bye, Dad,\" Vicky waved as the U-Haul pulled away from outside our old house.\n\nHer Dad was the last to go. Three days and we were moved in, Vicky's and Alex's Dad's had painted everywhere inside, fixed everything that needed fixing, made sure we had a security system installed, cable connection, knew where the supermarket was, all the appliances worked. They did all that while me and Vicky and Cindy and Alex scrubbed and cleaned. Must've been guys that lived here last year.\n\nEither guys or pigs.\n\nSame result.\n\nA pigsty. \n\nThree whole days and we were moved in, on our own and there was a week and a half to go before classes started. We were away at College. Our parents had finally left. We were eighteen. We were on our own. Vicky and I could throw our eighteenth birthday party without any parental involvement. And we could be as wild as we wanted. That was what was good about being at College, away from home, sharing an old house with my friends. No parents. Yaaaaaay. We could do whatever we wanted. We all wanted a Party but on the other hand, well, we didn't want the place trashed either. \n\nRemember Hannah?\n\nWe sure did.\n\nNope, no way were we risking that, not even in an old house that should maybe be condemned but Cindy's Mom had leased it anyways because it was in the student ghetto surrounding the College and it was a safe neighborhood. Sitting around after I'd cooked dinner on Thursday evening, because Vicky and Cindy and Alex were hopeless cooks, we were all smiling.\n\n\"Time to check out some bars and clubs,\" Alex said.\n\n\"Check out the guys,\" Cindy corrected her.\n\nNone of us disagreed in the slightest.\n\nI smiled. Certainly not me.\n\n<Center>* * *</center>\n\nThursday evening. Friday evening. Saturday evening. Four girls away from home on their own for the first time, exploring the nightlife of the student ghetto around the College. We weren't the only students who'd moved in early. Vicky, Alex or Cindy weren't shy about hooking up either. Starting that first Thursday evening. My friends had all had their v-cards swiped long ago.\n\nBy two on Sunday morning I was the only one sleeping in her bed on her own for the third night running and my housemates weren't sleeping. Neither was I. There was too much noise. The walls between our bedrooms were definitely not soundproof. I was rapidly coming to know a lot more about my friends sexual preferences than I'd ever wanted to know.\n\nSleep came with difficulty that night, and only after I'd had a couple of little climaxes of my own. It wasn't listening to my friends and their hookups that did it for me though. It was that little film set fantasy playing in my head again. Me, on a bed, a film crew filming me, everyone standing around watching me as I had sex. In the end, it was the best climax I'd ever brought myself too. I almost screamed out loud myself.\n\nThe second time I fingered myself, I really wanted to scream out loud.\n\nWhy not? Everyone else here was. I turned, onto my knees.\n\nJust like that girl in the movie, naked, kneeling.\n\nOn my knees, my face buried in my pillow.\n\nFingers working really really hard.\n\nImagination working harder.\n\nThen I screamed.\n\n<Center>* * *</center>\n\nSunday evening. We'd all got up late. Me included. I'd cooked dinner for us all. Someone had to cook food that was edible. We were sitting around the living room. One week to go before classes started. At least we were all getting to sleep in. Alex and Cindy were comparing notes. They'd swapped guys in the middle of the night last night apparently. I hadn't noticed any difference in the noises but it seemed they had.\n\n\"Waaaaay too much detail, guys.\" I had to say it. \n\nVicky laughed. \"Hey, what about our birthday party? College starts next week, we gotta do it before then, it's supposed to be a Summer Birthday Party and summer's ending soon.\"\n\n\"Friday night?\" Alex asked sleepily. Yeah, I guess she hadn't had much sleep. That'd been some marathon sex with that guy last night. Those two guys, I guess. And this morning. She looked tired. Happy, but tired. \"Brad said most of the bars do half price nights Fridays.\"\n\n\"Sure,\" Vicky said. \"And most of them do free drinks for girls.\" She giggled. \"Go figure.\"\n\n\"I liked Goodfella's,\" I said. \"They did nice pizza\".\n\n\"It's a pizza restaurant, Sammi,\" Alex said. Not quite rudely.\n\n\"Why don't we all go to Kitty Katz?\" Vicky suggested. \"We can do a costume party thing.\"\n\n\"That's, like, a strip bar,\" I objected. I'd heard some of the guys we'd met talking about that place. I mean, maybe Vicky and the others had been to a strip bar before but I never had. I had no plans on starting. Nice Chinese girls did not go to strip bars. \n\nNo way. \n\nBad Chinese girls did things like that. We all know what happens to bad Chinese girls. I did, anyhow. My Mom had been very emphatic about that before I left for College. I had no intention of being a bad Chinese girl. Not in a strip club, anyhow. Maybe with the right guy, when he came along. In my room or something. But a strip club? No way.\n\n\"Yeah, but it's cool, Sammi,\" Cindy piped up. \"I've been there and it's, like, a real party club even if it is a strip club.\"\n\n\"But it's a strip club,\" I protested. \"Couldn't we go somewhere a bit more, you know, normal, like maybe Arizona Sixty Three or Kerouac's or somewhere?\"\n\n\"Arizona? That's just boring. And Kerouac's? That's for geeks, Sammi. Nope, Kitty Katz is cool, really,\" Cindy said, laughing at me. \"Come on Sammi, I went there last night after you went home, you don't have to take your clothes of or anything, it's only the girls that work there that do that.\" She giggled. \"Unless you want to, you know, do a wet t-shirt dance on a table or something. The guys, they'd love that.\"\n\n\"You're just a slut, Cindy.\" Alex was laughing.\n\n\"Look who's talking.\" Vicky was laughing at both of them.\n\n\"It's pretty rough though.\" I made a last effort. \"Those Harley's that park outside, some of those guys that look like bikers go there.\" I knew. I mean, I'd walked past that place. In daylight. Those bikers, just looking at them scared me. Sent shivers down my spine.\n\nVicky giggled. \"They're cool guys,\" she said. \"Have you seen them, some of them are just total hunks. There's that big guy, one of the bouncers, he's just ...ohhhhhh.\" She squealed, then shrugged. \"Anyhow, they all behaved themselves when I went there, it's, like, totally safe, Sammi.\"\n\n\"Yeah,\" Cindy said, \"I've been there twice now, no problem. Never seen any trouble, their bouncers are really good. They'd got this huge guy that hangs out down at the back, looks like Frankenstein, he's totally scary...keeps the bikers in line too. Nice guy though, he's a Vet, he's studying at the Nursing School. I had a coffee with him while I was waiting for Brad to finish throwing up before we left last night, he's really quite nice.\"\n\n\"Okay, okay,\" I said, totally not convinced but giving in. At least I'd be there with a group of friends. \"If you all want to go there, I guess....\"\n\nVicky grinned. \"Besides, it's free admittance and free drinks for single girls on Friday nights,\" she said. \"And I'm maybe not taking Kyle, I'm thinking I'll just go by myself and see what walks by.\" Kyle was the guy she'd hooked up with last Friday night. He'd still been around this morning. That classified him as a boyfriend in Vicky-speak.\n\n\"Oh Jesus,\" I said, my head in my hands. I just knew what was going to happen. Her and Cindy and Alex and the others would all get hammered and get themselves hooked up with guys and me? Well, I'd have to find my own way home by myself at two in the morning. This was so not going to be fun. It was too scary going home by myself that time of night. Guess it'd be a taxi.\n\n\"Yeah, that'd be fun.\" Cindy definitely agreed with Vicky. Oh Jesus. Free drinks? I didn't drink much, I was going to be the only sober one there. Well, I guess it'd definitely make for a low cost party. For me, at least and it wasn't like I was rolling in money. I had my allowance from my parents and that wasn't a whole lot. Free drinks was good, not that mine would cost much. At least I'd be able to pay for that cab home.\n\n\"We can always come back here after.\" Alex was trying to persuade me, I knew.\n\n\"Like you're gonna do that?\" Vicky was laughing. \"You'll get yourself picked up coz, you know, we all know you're easy, Alex, and we won't see you again 'till, like Sunday night or something.\"\n\n\"You're talking, bitch.\" Alex was laughing. They were both right though. Alex was a total slut. Different guy every time she went out. And once Vicky had a few drinks in her, she was totally ready to sleep with anything that looked good. I mean, she was my best friend and all, but all that meant was that I knew her, like, really really well. I knew exactly what Vicky would be doing after Kitty Katz, and it wasn't going to be partying anywhere except in bed. Hers or his, she wasn't fussy.",
        "\"What about you, Sammi?\" Vicky asked. \"You going single with us or you want me or Cindy to line you up a blind date?\"\n\n\"Single,\" I said, totally emphatically. No way was I going with a blind date passed on from Cindy or Alex. Jesus, no. I'd rather go by myself to a strip club than that.\n\n\"Okay, it's a done deal,\" Vicky said, high fiving Alex. \"I'll let everyone know.\"\n\n\"Me too,\" Cindy and Alex said simultaneously. They both looked at me.\n\n\"Yeah, okay,\" I said. Not that I had anyone to let know, my friends were all Vicky and Cindy and Alex's friends as well. And they were mostly the guys they'd slept with over the last three nights so it wasn't like I knew them that well. On the plus side, guess there'd be plenty of guys to go round.\n\nExcept I had no plans to have my v-card swiped by any of their cast-offs.\n\n<center>* * *</center>\n\nSo by Wednesday we had it all organized. We'd head out to Kitty Katz with a bunch of recently acquired friends on Friday night and live it up. Sammi and Vicky's Summer Birthday Party, that's what the message said. That week passed fast. Wilson called my cell. Wilson texted me. Wilson emailed me. I had no idea where he'd been when I left home but I was gone now. No problemo. I ignored him. \n\nWednesday. Thursday. Friday morning? All about Sammi and Vicky's Summer Birthday Party. More people were coming. Friends of the guys. Girlfriends of the guys. Didn't matter, we were going to a Club. The more the better as far as we were concerned. We'd decided on a kind of fancy dress theme. Well, Vicky and Cindy decided and of course they went for schoolgirl uniforms. \n\nMe, I was startled. Then I was horrified.\n\n\"It's a strip club, guys. We cannot go as schoolgirls. I mean, Jesus. Strip club? Guys? Guys? They're all perverts anyhow in a place like that. They'll all get completely the wrong idea. \" I dug my heels in. Like, no way. No friggin' way. Not me. Not Sammi Woo in a strip club dressed as a schoolgirl. \n\nAbsolutely not.\n\n\"About you, maybe the wrong idea,\" Cindy had laughed. \"Not about me and Vicky and Alex.\"\n\n\"Yeah, right,\" I'd said.\n\n\"Hey, you wanted to date someone who's not Wilson, right?\" Vicky was laughing at me. \"Just try it, Sammi. You can always catch a cab home if you don't find the right guy.\"\n\n\"I don't think I'm going to find the right guy in a strip club.\" I thought I sounded very calm.\n\nVicky and Cindy and Alex were all laughing at me.\n\n\"Dammit, guys! It's not funny!\" Okay, so I wasn't very calm.\n\nI wasn't dressing up as a schoolgirl either, no matter what they said.\n\n<Center>* * *</center>\n\nFriday night came round. I was dressed up as a schoolgirl. Every single one of us was. We were all going as Hermione from Harry Potter. Except what I was going to wear, Hermione would have dropped dead rather than dress herself in. Emma Watson too, for that matter. Dropped dead, I mean. Actually, if I'd seen it before Vicky ordered the costumes, I'd have dropped dead too. It was one of those Hogwarts school uniform outfits from some porn costume website with a skirt that was way shorter than anything I'd ever owned or worn myself. FedEx. Express.\n\nThat pleated plaid skirt was X-rated short. I mean, like, really short. As in, micro-miniskirt short. And no, there was no way I was going to wear a thong. And I wasn't going commando either, although Vicky had giggled and suggested that. I was going to wear my bikini panties. Lacey black bikini panties that were really pretty in case I flashed everyone. Even with those, I felt so naked and exposed under that skirt. It did make my legs look really good though. Hot.\n\nThat was really exciting all by itself.\n\nVicky had matched that skirt up with a semi-transparent white fake school uniform shirt top, a Hogwarts tie and a blazer. Not forgetting the white knee socks and some cute little beret that had nothing to do with Hogwarts. I felt a lot better about my bra and panties though. Vicky had bought me some really nice lingerie for my birthday, something I could never wear at home coz Mom would take one look and it'd go in the garbage as the sort of underwear bad girls would wear. I'd have been grounded to go with it.\n\nMom was a firm believer in sensible white cotton panties and the sort of boring white bra's that school thought you should wear. I wasn't. The set Vicky gave me were beautiful. A black lace unlined bra, all mesh, lace and some cheeky bows and a perfect fit. The matching panties had a super sexy satin side strap that fitted the curve of my hip like they were made for me and the French pantie style thong back, ohhhh! It made my butt look so sexy. In fact I felt sexier than I'd ever felt in my life. My parents would have gone apocalyptic on me if they'd seen what I was wearing. \n\nFortunately, they were three states away. \n\nWilson Wong was three states away too, where he should be. Wilson Wong wasn't going to be at my Birthday Party. Not this year. This year I was going on my own. Well, with Vicky and our new friends and quite a few guys they knew, but same thing. I was going to have fun tonight. Dance. Drink. Flirt with guys. Maybe I actually would find a guy I liked. One I'd want to date.\n\nMaybe one who I'd want to leave with.\n\nAnd didn't that thought get me all excited? Me, Sammi Woo, getting picked up and leaving with a guy just like all my friends did. I doubted it was going to happen, not tonight, but the thought that it was possible and that I could do it if I wanted too was an exciting one. Mind you, the last week, every time we'd gone out, guys had hit on me. None of them seemed right though. There was nothing about them that did anything for me.\n\nKitty Katz was a strip club. I didn't plan on hooked up in a strip club. I mean, what sort of guys went to strip clubs? Nobody I'd want to have anything to do with, that was for sure. I mean, I was a good Chinese girl. I didn't want to be that good, but hey, I wasn't a strip club hookup kind of girl. No way. \n\nNot like my friends.\n\n<center>* * * (/b></center>\n\nSo Friday night, there I was, in my bedroom. Looking at myself in the mirror and just shaking my head. I mean, I looked hot, but, well, I hadn't worn a school uniform in my life, ever. And now here I was, one weekend away from starting college, dressed in one and about to head out to a strip club for my Summer Birthday Party with Vicky. Well, on the plus side, there'd be a dozen other girls dressed just like me with us so it wasn't like I was going to stand out.\n\nApart from being the only Chinese schoolgirl there. This was going to be one cool party even if it was in a strip bar. Way better than that one last year at my Mom and Dad's. Way better than the one Vicky's Mom had organized for us mid-summer.\n\nMy cell meowed at me. Vicky? \"Coming, coming,\" I said.\n\n\"Sammi, where've you been, I've been trying to get hold of you all week.\" \n\nI looked at the phone in horror. \"Wilson?\"\n\n\"It's me, Wilson,\" he said. Oh god. Oh god oh god oh god. But at least he was three states away.\n\n\"Hi Wilson,\" I said, heart pounding. \"I can't talk, we're going out.\"\n\n\"Oh, that's okay,\" Wilson said and I could hear the smirk in his voice. Huh? \"Your Dad gave me your address, just wait for me. I'll be there in half an hour.\"\n\n\"Huh?\" I sat down hard on my bed, hyperventilating. \"What?\"\n\n\"Good news, I got all my college credits transferred and I'm starting classes here on Monday, just moved in to a dorm here this afternoon. Thought I'd bring some takeout round and we could watch a movie together.\"\n\n\"Huhh ... uhh ... ohh.\" Oh shit. Shit shit shit.\n\n\"I kept it a secret 'til I knew I'd gotten accepted here, but I knew you'd be happy, Sammi. I'm bringing some fried noodles and stuff around, see you soon.\" The jerk blew kisses into the phone before he hung up. He didn't even wait for me to answer. He hung up. Expecting me to cancel whatever I was doing and just wait for him. \n\nI just looked at my phone, speechless. Horrified. Wilson Wong had transferred College's to get into the one I'd been accepted for. God knows how. I'd thought their standards were tougher, but somehow, he'd gotten himself in. I'd under-estimated Wilson. Badly. Jesus, I was going to have to dump Wilson the hard way. It was a frigging nightmare and Vicky had been right. \n\nIt was my own fault coz I hadn't had the heart to dump him when I should've.\n\nIt would've been like torturing a puppy, with those big sad round eyes.\n\nI just couldn't bring myself to hurt him before, but now?\n\nNow I wanted to put that puppy in a sack.\n\nThen throw him in the nearest river.\n\nWeighted down with rocks.\n\nI had to get free of him.\n\nGod, I just had to.\n\nOh please God.\n\nNot Wilson.\n\nNot tonight. Tonight was my birthday party. Me and Vicky. Sammi and Vicky's Summer Birthday Party, and nothing was going to spoil that. Half an hour? He'd said he'd be here in half an hour. We were so outa here right now and I knew I was the last coz they'd all gone by my bedroom on the way downstairs. \n\nI flew down those stairs.\n\nThey all looked at me. Vicky. Alex. Cindy. Kyle. She'd decided to keep him for tonight anyhow. At least he'd been around long enough we all remembered his name.\n\n\"We gotta run guys,\" I screamed. I did. I screamed. \"Wilson's transferred College's and he's here and Jesus, we gotta run, he's on his way round, he's gonna be here in half an hour. We gotta get out of here, like, frigging now.\" I was already opening the front door.\n\n\"Fuck!\" Vicky grabbed Kyle's arm. \"Move your ass, Kyle, we gotta run.\"\n\nAlex and Cindy were right behind us. They knew. It wasn't like I hadn't shared my happiness. Give Kyle his due, he didn't dig his heels in. He might not've had a clue what was going on but he ran right with us, out the door, down the steps, onto the street and down the lane three houses down that cut through to the entertainment if you followed it across four blocks. We did.\n\nWe only slowed when we were three blocks away. Me? I was in the lead, looking over my shoulder the whole time.\n\n\"What the fuck's going on?\" Kyle asked when the four of us slowed.\n\nI looked at him and I looked at Vicky and I looked at Alex and Cindy and I burst into tears. \"Why's he doing this to me? Why? Why? What did I do to deserve this? What did I do?\"\n\nKyle looked kinda helpless but I gotta give him his due. He pulled out a pack of tissues and passed them to Vicky as I stood there, tears running down my face. Running? They were sprinting down my face and my makeup was frigging ruined. Next second I was in the middle of a group hug, my friends all with their arms around me. Poor Kyle. But I didn't care about Kyle, I cared about me and I was living a nightmare.\n\n\"What's he doing here?\" I sobbed. \"Why's he doing this to me? Why?\"\n\n\"It's okay, Sammi,\" Vicky said, her arms around me. Hers and Alex's and Cindy's and with my friends there, holding me, sharing my pain, I was feeling better already. And at least we were outa the house. Wilson Wong wasn't finding us tonight. \"He doesn't have any idea where we're going and you know Wilson, he never goes to bars.\"\n\nThere was that. \"But he might wait outside the house for us,\" I sobbed. And I'd be coming home by myself at two in the morning coz I knew what Alex and Cindy and Vicky'd be doing. \n\n\"Stalker?\" Kyle asked.\n\n\"Her old boyfriend,\" Vicky said to him. \"She didn't dump him, just left him behind without telling him he was toast and he's transferred here.\"\n\n\"Sucks,\" Kyle said. He shrugged. \"Stay at my place tonight, Sammi.\" He grinned at Vicky. \"She can sleep on the couch and go home with you in the morning.\" He thought about it. \"Shit, I'll come back with you in the morning if you think there'll be any shit from your ex.\"\n\nVicky and I looked at him, both startled. He looked at us, grinned. \"Well, shit, we gotta long term relationship going here, Vicky. We've known each other a while entire week now, gotta look after your friends.\"\n\nAll four of us laughed. Mine was a sniffley laugh, but, well, it was still a laugh. Vicky gave me an extra hug, Alex wiped my face.\n\nCindy squeezed my hand. \"Forget Wilson,\" she said. \"Have fun tonight, Sammi. This is your birthday party. We'll all help you get rid of Wilson tomorrow, okay.\"\n\nVicky and Alex nodded. \"You're going to have to do it,\" Vicky said. \"You can't just ignore it now, Sammi, you really have to tell him.\"\n\n\"I know.\" I did, but still, it made me feel sick. It was like I was being stalked or something. This was horrible. And I was going to have to tell him.\n\n\"Tomorrow, Sammi,\" Alex said. \"We'll all help you, okay. We're your friends, we're here for you.\"\n\n\"Tomorrow,\" I agreed, taking a deep breathe. And another. Stifling a sob. What a way to start our Summer Birthday Party. Damn Wilson Wong. Him and the beat up old Sebring he drove into town on. Dull, boring and built like a dumpling. You can pick which one I'm talking about.\n\nShit! Crap! Damn! Eff. The eff word. That was the one I wanted to use.\n\nEff! Eff! Eff Wilson Wong!\n\n<center>* * * (/b></center>\n\n\"Enjoy yourselves, 'n don't drink too much, okay, girls' drinks're free but we'd like you all to stay safe.\" The big guy at the door was smiling at us. The other and equally big guy held the door open for us. They both looked big and tough and the muscles, wow! But they had nice smiles. There were Harley's parked outside as well, right by the door, a dozen of them and that was kind of scary. Music pounded out through the now open doors, fast and catchy. Nervous and a little scared or not, I was just about skipping as I rather nervously followed Vicky and Kyle in. It was a strip club, and I'd never ever ever been to a strip club in my life.\n\nYes, Sammi was nervous. Sammi was also curious.\n\nInside, Kitty Katz was humming. The club wasn't full. It was too early for that. By one in the morning, I guess it'd be as busy as all the other clubs and bars we'd been too over the last week and a bit. Now? Free tables, a few empty seats and plenty of space to dance. I'd always liked dancing. I'd liked dancing for as long as I could remember. I'd started dance classes when I was three and I hadn't stopped until my last year of High School had come to an end.\n\nI was good at dancing and honestly, I liked dancing in competitions. Up on a stage, the audience watching. That always gave me a thrill and I was good. I mean, I'd won a few prizes. My parents had been good with anything you could win prizes in. Nothing serious mind, just dance club prizes, but still.\n\nSo twenty minutes after we walked in the door, despite some initial residual embarrassment at the x-rated shortness of my skirt, I was up on the dance floor, dancing with Kyle, Vicky's date. That embarrassment had been eased by a couple of coolers, which was about double what I'd ever drunk in my entire life before. For some strange reason I was a lot more outgoing than I normally was, and I was never exactly much of an introvert even if I was, you know, a bit conservative.\n\nCostume-wise I sort of blended in with all our friends and there were a couple of dozen of us here now. Hermione schoolgirl costumes all, which somehow was hilarious. We looked like a cosplay convention. Except that I was the only Chinese-schoolgirl Hermione there. That kind of made me stand out. I mean, Selena and Fernanda were with us but they were Hispanic, not Asian. They just looked a nice shade of brown and they were nowhere near as slender as I was. More chunky, really. \n\nWhatever, I was having a great time, dancing my heart out.\n\nNo need to talk either coz the music was so loud.\n\nNow THIS was a summer birthday party!\n\nVicky and I grinned at each other.\n\nThe only thing I didn't like were the two big condom vending machines over by the washrooms. That was just so totally gross. Guys were buying from them too. That was, like, really gross. The guys here were a real mix. Older guys in suits, businessmen maybe? One of them had even tried to dance with me. \n\nDidn't take long. Just \"Excuse me, try someone born in the same decade.\"\n\n\"Fuck you, you little bitch.\" \n\nAnd he was gone.\n\nEasy.\n\nWhy couldn't it be that easy to get rid of Wilson Wong?\n\nYounger guys, college guys maybe, out having a Friday night picking up college girls? Younger working guys, not as preppy, jeans and plaid shirts kinda guys. A couple of tables of guys even I could see were bikers and that must've been their Harley's out front. Half the strippers in the club were hanging out with them when they weren't up on stage or over giving guys table dances. \n\nAnd yeah, I was watching those strippers. Fascinated. Not just the girls up on stage dancing and stripping, although that was interesting. Most of them, they danced really well. I could dance like that if I tried, I knew. It wouldn't be hard. I'd been going to dance classes since before I started elementary school. I knew the moves. Sitting in our booth of to the side with my second cooler, I watched the stage, studying those girls. Yeah, I could do that. \n\nEven the pole dancing stuff.\n\nI'd been in a few dance competitions myself. Like I said, it wasn't like I was shy. I'd been up on a stage dancing in front of crowds a few times and I liked it. Just not in a strip bar and okay, I wasn't planning on starting so don't go thinking that, guys! Really, dancing was fun and I enjoyed those competitions. Especially the applause. I'd even won a few dance competitions, and I'd placed a few times more. Okay, not that many, but it was always a real buzz. The dancing? Yeah, I could do that. But they were taking their clothes off too. Stripping. All the way down to those little G-strings. How could they do that?\n\nI didn't think that was something I could do.\n\nHow could they take their clothes off with everyone here watching them? It looked like most of them were really enjoying themselves too. Not just those girls on the stage either. After they got off the stage, some of those girls were giving guys table dances. Wearing nothing but those little G-strings. How could they just walk around like that? Through the club, with everyone around them. \n\nWith everyone looking at them? When I took a break from dancing and sat down at our table, I watched them some more. Kinda studying them. That had my heart pounding. Dancing like that, a couple of feet away from a bunch of guys who'd been drinking. Up on their table and okay, it was obvious where they guys were looking.\n\nWhich made me think of that movie set fantasy of mine and I just sat there shivering and tingling.\n\n<Center>* * *</center>\n\n\"Hey, Sammi, on your feet, girl.\" Alex was back, taking my hand, tugging me back up and onto the dance floor up in front of the stage and the bar. Okay, I danced. I said I liked dancing and the two of us looked good together and it was fun. No reluctance there on my part. And the dance floor was crowded enough now that the occasional flash of my new and very sexy panties coz my skirt was so short didn't matter. Every other girl's skirt was just as short as mine and besides, nobody was going to see. It wasn't like I was dancing up on that stage giving everyone a good look up my skirt was it?\n\n\"Hey.\" The voice beside me came from another Chinese girl. \n\nHuh? Surprised, I blinked. This wasn't, like, San Francisco. She was really good looking, some kind of sheer silk top, designer jeans, boots to die for and she was dancing with this big biker guy. She was smiling, tossing her long black hair back. Hair just like mine, long and black and silky and we both had it tied up in ponytails. My beret was back on my bed. Forgotten in that mad dash out the door and a good thing too. They looked stupid.\n\n\"Don't see many of us in here,\" she yelled over the music. \n\nMe? She was talking to me?\n\n\"Don't see many Chinese girls dancing with bikers,\" I yelled back.\n\nThe big guy heard that and laughed. \"Change that,\" he yelled, waving one hand in the air.",
        "The Chinese girl laughed. \"Two of us now,\" she yelled as these two big guys materialized. Bikers. Just like the guy she was dancing with. Younger ones though coz her guy, he looked a bit old to me. Kinda good looking, but old. What was she doing with him? She looked like she was my age and she didn't look at all like the kind of Chinese girl that would hang out in strip clubs, let alone hang out with bikers. Not that I had any idea about the type of Chinese girl who would hang out in strip clubs. I mean, here I was and I wasn't exactly the sort of girl to hang out in strip clubs.\n\nActually, she looked like the sort of girl you saw hanging out with some loaded young Chinese guy in a custom suit and a Mercedes SLK or something. Like that dick of a cousin of Wilson's that'd tried to make it with me after Wilson introduced us when he came over to stay with Wilson's family for a while last year. That Peter Wong guy. What a jerk. Really, he was. Wilson told me he'd been in some sort of trouble and he'd had to come stay with them for a few weeks while it all got sorted out.\n\nWe'd gone out to get takeout the first night he'd stayed with Wilson's family. Wilson'd been in the Burger King, picking up our order. I'd been in the car with Peter. In the front passenger seat. A hand had landed on my leg. High on my leg and when I went to lift it off, it made like it was superglued in place.\n\n\"Get your hands off me,\" I'd hissed, prying at his fingers.\n\nHe'd removed them, just before Wilson walked out. I hadn't gone back to Wilson's parents' house until the jerk had gone back home. Him and his stupid Mercedes SLK. What a dick. Guess it ran in the family, only Wilson was a harmless dick. That Peter Wong, I'd never want to be in a room with him by myself. \n\n\"Hey,\" a male voice rumbled from above, drawing me back to where I was on the dance floor. I shook my head, gave the guy eyeing me the once over. Really good looking, even if he did look a bit rough around the edges and maybe he hadn't shaved since yesterday. Smooth dances moves too when he started moving with me. I couldn't say he was a smooth talker, coz nobody was talking much over that music pounding out from the sound system. Real smooth dancing though and yeah, I liked that. So did he, he was grinning down at me and his buddy was dancing with Alex.\n\nThe other Chinese girl gave me a conspiratorial smile, moved in close to me. Yelled in my ear. \"He's good at dancing, just don't let him smooth talk you outa here with him, kay. His handle's Dj\u00e4vul for a reason.\"\n\nHandle? Dj\u00e4vul? What was that? I grinned back at her all the same. Yelled back. \"Not planning too.\" Laughed. With a biker? Me? Forget that one. Although yeah, I was dancing with him. Me? Sammi Woo? Dancing with a biker in a strip bar? I giggled. This was so not me. \n\nI kind of liked it.\n\nThat girl laughed and then we were back to just dancing for the next couple of tracks and she was good, really. Almost as good as me. As the music faded away and you could actually talk and hear, rather than yell and guess, the Chinese girl turned to me. \"Come and have a drink with us.\"\n\n\"My friends....\" I hesitated. Bikers? I mean, he was pretty hunky, but a biker?\n\n\"I'll look after you.\" She grinned at me, then at the big guy she was with. \"Right, Round Out.\"\n\n\"Sure thing, Blue.\" The big guy grinned at the other biker. \"Be nice, Dj\u00e4vul, kay. No scaring the shit out of ...\" He looked down at me. \"What's your name?\"\n\n\"Sammi,\" I said, \"Sammi Woo.\"\n\n\"Hi Sammi, I'm Round Out,\" he said. \"This is my Ol' Lady, Blue and this ugly dude you've been dancing with, his handle's Dj\u00e4vul.\" \n\nI looked from him to Dj\u00e4vul and back again. And okay, that look was a bit suspicious. Bikers? I mean, I read the news. I watched the news. Bikers? They're scary.\n\nThat other Chinese girl, Blue, she looked at me, looked at Dj\u00e4vul, laughed. \"That's what I thought when I met Round Out,\" she said. \"Didn't I, you?\"\n\nRound Out laughed, tucked an arm around her. God, she was so small next to him. As small as I felt standing next to Dj\u00e4vul and those two guys were about as big as each other. \"Did you, Blue? I didn't think you thought I was scary at all.\" He grinned down at her, she smiled up at him and you could just about see the little hearts dancing in the air all around them.\n\nShe punched him. Laughed. \"Come and have a drink with us, Sammi,\" she said. \"Dj\u00e4vul'll take you back to your friends after, won't you Dj\u00e4vul?\"\n\nDj\u00e4vul laughed. \"Yep, I'll do that for you, Blue.\" He grinned down at me, held out one hand. \"Come on Sammi, we don't bite.\"\n\nSomehow his arm was around me. A bare minute later, there I was, perched on a seat beside Blue, two Chinese girls, one of them dressed like some sort of supermodel, the other dressed as a schoolgirl, sipping coolers in the middle of a table of bikers in a strip bar. I looked around, looked at Blue and I couldn't help it, this was just so not me. I had to giggle.\n\nBlue grinned. \"I know,\" she said. \"If my Mom and Dad could see me now they'd have a heart attack.\" She laughed.\n\nI eyed Round Out. \"Is he your boyfriend?\"\n\n\"We live together,\" she said, her hand dwarfed by Round Out's where it rested on her leg. \"I moved in with him last year when I started College.\" \n\n\"You're at College?\"\n\n\"Just starting my second year,\" she said. \"Shooting for medical school once I get my degree. How 'bout you?\"\n\n\"First year,\" I said. \"Nursing program.\" She was living with her boyfriend? That biker guy? \"What did you parents say?\" God, I knew what mine would say. I'd be disowned. Not only a gweilo, that'd be a tough sell by itself, but a biker as well. Jesus. Disowned? They'd kill me.\n\n\"About me moving in with Round Out?\" She grimaced. \"It wasn't good to start with. But we kind of won them over. Long story, Sammi. They're still not that comfortable with it but they live with it.\" Her face lit up with that smile. \"It's all worth it though, he's wonderful.\" \n\nLeaning in closer, she lowered her voice. \"You gotta be careful with these guys though, Sammi. It's okay for me, I'm Round Out's 'Ol Lady, but you watch yourself, okay. They can be real animals when they get going. They're okay in here, they behave here, but don't go leaving with one of them.\"\n\n\"What's 'Ol Lady?\" I had to ask. \n\n\"Means I belong to Round Out,\" she said. \"Everybody knows I'm his girl, none of the other brothers'll try it on with me or anything. Doesn't apply to you though, so you know. Dj\u00e4vul comes across as a nice guy but the last chick he brought back to the clubhouse got gangbanged down in the party room so be careful, huh.\"\n\n\"Really?\" My heart did that little jump. \"You mean they really do things like that?\"\n\n\"You better believe it, Sammi, so whatever you do, don't go back to the clubhouse with them, okay. I mean, one Chinese girl to another.\"\n\n\"What happened?\" I mean, I was so curious. I really wanted to know. \"I mean, the girl that got gangbanged, how'd that happen? What'd they do? They don't do that to just any girl that comes back with them do they?\"\n\nBlue laughed. \"Hey, if you're not someone's 'Ol Lady and you're partying at the clubhouse, pretty much anything goes. You wouldn't believe the stuff that goes on, you kinda get used to it but still, when they really get going I usually do a fade and leave Round Out to have fun if he wants. It can get a bit rough sometimes.\" Shaking her head, she looked at me, expression serious. \"These guys, they're one percenters, Sammi, they do what they want and girls, well, girls that hang out with one percenters, they're there for the guys to fuck more often than not.\"\n\n\"Thanks for the warning.\" I blushed, but I couldn't help looking sideways at Dj\u00e4vul and the other guys sitting around drinking. Shivering, just a little.\n\nDj\u00e4vul saw me look. His arm slid around my shoulders. Jesus, those muscles. His arm was as big as my leg. \"Hey, you wanna dance again, Sammi?\" Dj\u00e4vul was smiling at me and really, it was a wonderful smile, infectious. The sort of smile that made you want to smile with him. So I did.\n\n\"Sure.\" I did, I slid to my feet and I danced with him through three of four tracks and when that last track died away, it was \"Call me Dj\u00e4vul\" who walked me across the club to rejoin my friends. \n\nIt was kind of cool walking with Dj\u00e4vul's arm around me. I didn't get jostled once. People got out of our way. It wasn't like me threading my way to the dance floor with Alex or Vicky or with Kyle. It was great. I had a minute to think as we eased our way across the club. Brush him off? Ask him to join us. A quick glance sideways. And up. Definitely up. \n\nDrop dead hunk. That was all I could think. \n\nI mean, yeah, he was a biker but god, the more I looked at him, he was sooooo good looking. Shaggy blonde hair, long. Blue eyes. Face to die for. Like one of those old Viking warriors or something. And as for the rest of him, let's just say those muscles rippled. He smelt real good too. Smelt the way I thought a guy should smell. Kind of slightly sweaty and masculine. Oh yeah, I wasn't going to do the deed with him, I wasn't leaving with him, no way, but this was a guy I'd almost let pick me up. \n\nIf he hadn't been a biker. \n\nBut what if he asked? He seemed interested in me and for once, this was a guy who was interested in me who I was kind of interested in. Scary, but interesting. The thought had me a little weak-kneed. Oh yeah, this was the sort of guy I could go for, maybe just get to know him a little better first though. I wasn't like Vicky or Alex or Cindy. I wasn't an easy hookup for some guy that wanted to date and discard. \n\n\"Wanna join my friends and me for a while,\" I said. It was kind of nice and quiet right now with just some background music playing for a while.\n\n\"Sure,\" he said, smiling. Oh yeah, that smile. Little thrills ran through me.\n\nBy the time we got all the way to our table, he had his arm all the way around me and I wasn't brushing it away. It was my eighteenth birthday party, it was the end of summer, I was eighteen, I'd drunk four whole vodka coolers, enough to be reckless with my life, and I was going to have fun. Real fun. My parents weren't there, Wilson wasn't here. I was at college and nobody was going to stop me flirting with Dj\u00e4vul. \n\nLeast of all my friends.\n\nNot that they even tried. They just looked at me open mouthed as I stood there with Dj\u00e4vul's arm around my shoulders. I waved Dj\u00e4vul into the only free seat in our booth, and then did what I'd never done with a guy in my life. I perched myself on his lap, found his arm around me, his hand resting on my hips as I did the \"this is Dj\u00e4vul\" thing. \n\nVicky winked at me, Cindy grinned. Alex? Alex was walking out the door with that other biker. And wow, sitting on Dj\u00e4vul's lap was exhilarating. He just exuded testosterone and rampant maleness. The sort of hunky alpha male guy I'd always dreamed of, in person, and I was perched on his lap.\n\nPerched? \n\nMy skirt was so short it was my butt resting on his jeans. He had an erection. I could feel it pressing against me. I mean, I knew what one was. I'd felt Wilson's pressing against me often enough. I'd held Wilson's in my hand last weekend. Apart from that once last weekend when I'd almost let it do me, I'd never been interested in Wilson's, except in a purely academic way. \n\nDj\u00e4vul's? That was a different story. I was definitely interested. And from the feel of what I was sitting on, Dj\u00e4vul was definitely interested in me. So, okay, I have to admit, my pulse was rather more rapid than normal. I was excited to. Hot. Bothered. Wanting to squirm and wriggle on his lap the way I used to on my mountain bike seat when I was younger. If I did, I was sure I'd leave a wet patch on his jeans.\n\nJust like I used to leave on my mountain bike seat.\n\n\"Sammi.\" Dj\u00e4vul was whispering in my ear.\n\n\"Yes...\" I glanced around and up at him. \n\nHe kissed me, very gently. I'm not a big public kissing sort of a girl. In fact, I'd never kissed anyone in public before, ever. Wilson Wong wasn't that sort of guy. When Dj\u00e4vul's lips touched mine, I didn't even think. My mind just went blank. I didn't respond to start with, but I didn't stop him either. I just closed my eyes for one heart pounding instant and then I did what I knew I wanted to do. I started to kiss him back. \n\nAll of a sudden my mouth was wide open to him, our tongues doing a warm wet dance of exploration, his mostly exploring my mouth and me just going with whatever he wanted. He was holding me, all hard muscle and strength. His arms encircled me, held me, his body firm against me, his cock pressed against me where I sat on him, hard, ready. My skin, burning hot, tingling, on fire. When his mouth lifted from mine, we stayed as we were, me in his arms, seated on his lap, one of my arms around his neck, breathing hard.\n\n\"I've wanted to do that since I saw you dancing there, Sammi.\" His voice was low, husky.\n\n\"I've wanted you to do that since I saw you,\" I whispered, knowing it was true. Ever since I'd laid eyes on him smiling as he walked towards me on the dance floor.\n\nGod yes.\n\nVicky and Cindy, they were all looking at me, wide-eyed. I'd have given them a thumbs up except Dj\u00e4vul stopped talking and started kissing me again and I wasn't saying no. Actually, I wasn't saying anything at all. It's really hard to talk with someone's tongue searching for your tonsils.\n\n\"I wanna get some quality time in with you, Sammi. Hope you haven't got a boyfriend, coz he's gonna be shit out of luck.\" \n\nI don't know about Dj\u00e4vul, but I was breathing hard. \n\n\"Yeah, I did,\" I gasped when I could talk, \"but I already decided I'm dumping him.\" I managed to get that out just before Dj\u00e4vul resumed playing tonsil hockey. \n\nNot that I objected in the slightest. If Dj\u00e4vul wanted to play tonsil hockey, I was good for an extended game. Game? I was good for a season ticket. And so help me god, I was almost good for scoring a goal with. Yeah, right then and there I just knew that Dj\u00e4vul was almost definitely one of those guys I'd give my all too. Anytime. Definitely almost. I knew right then, perched on Dj\u00e4vul's lap, that if Dj\u00e4vul wanted to go for a home run tonight, I just might let him.\n\nYeah, I'd changed my mind. Dj\u00e4vul was the sort of guy that could change a girl's mind. This girl anyhow.\n\n\"Dance?\" His nose brushed mine, those big blue eyes were looking into mine, his fingers brushed my cheek as his other arm held me. God, I was going to leave a wet patch on his jeans if I stayed where I was. On the other hand, Dj\u00e4vul didn't seem like the sort of guy who would mind if I did. \n\n\"Okay.\" Honestly, I'd rather have just stayed on his lap being kissed but dancing, that'd let me think a little and right now, I wasn't thinking. Well, I was, but only about that hard thing I could feel pressing against me. I wasn't like Vicky and Alex and Cindy. I wasn't some easy pickup for some guy to date and discard.\n\nI slid of his lap, his hand took mine as he stood. He led me towards the dance floor and then he was holding both my hands as we danced and he really did dance well. Smoothly, gracefully, he seemed to move with me whatever I did and it seemed almost as if we were two parts of the same whole, me moving with him, him with me, without thought, without anything but a total awareness of each other and I couldn't stop smiling up at him.\n\nLooking up at him, looking at the face, I couldn't help thinking about what that girl, Blue, about what she'd said. Dj\u00e4vul was a biker, what were her words. \"These guys, they're one percenters, Sammi, they do what they want and girls, well, girls that hang out with one percenters, they're there for the guys to fuck.\" That's what she'd said. I thought about that as I danced with Dj\u00e4vul. \n\nWas that what I wanted?\n\nI mean, it wasn't like I was trying to stay a virgin or anything. If it hadn't been for my Mom and Dad and Wilson, I wouldn't have been a long time ago. Eagerly wouldn't have been. And there those guys I knew I'd have done it with on the spot, given the chance. Looking at Dj\u00e4vul, I knew if I wanted to have my v-card swiped tonight, Dj\u00e4vul was the sort of guy who'd slide the card in the slot and key in my PIN number without a moment's hesitation.\n\nWas that what I wanted? Tonight? I wasn't quite sure. Thoughts were one thing. The reality was another thing entirely. And reality was dancing with me right now. Reality had his hands on my butt. Reality was pulling my close to him, urging me up against him so that my arms went round his neck as he kissed me and I could feel him. Big and hard. Reality.\n\nI wasn't sure.\n\nI still wasn't sure twenty minutes later when we sat back down with my friends and I was perched on his lap again and he was kissing me and I didn't care that Vicky and Cindy were watching me and grinning. It was a long time before I came up for air. I was enjoying myself, Dj\u00e4vul was the first guy other than Wilson that I'd ever kissed and it was just heaven. No comparison. Dj\u00e4vul could kiss me all night if he wanted to and I had no intention of stopping those kisses. None at all. Maybe more than kiss me if he wanted.\n\nIt wasn't like I was standing out.\n\nKitty Katz was right in the middle of in a neighborhood with a large College student population. I figured almost half the people here tonight were College students like Vicky, Alex, Cindy and I. Between them and the bikers and working guys and the businessmen out for a Friday night and the strippers and the girls that were just plain out for a good time and the guys that were out to pick up girls out for a good time, there was a lot of making out going on all over the club. I wasn't exactly conspicuous. Not that I was worrying. Those coolers had seen to that and Dj\u00e4vul had just waved me up another and it was there in seconds. How the heck did he do that?\n\n\"So what about this boyfriend, Sammi? You sure you done with him? Coz I'd like to maybe hook up with you or something and I don't hook up with chicks with other commitments.\" His lips brushed my ear, shivers ran down my spine.\n\nDj\u00e4vul wanted to hook up with me? Being kissed by him, I thought about that. Kind of thought, anyhow, as much as you can think while you've got your lips locked to some guy who's to die for and he's sucking your tongue into his mouth and god, I'd never done that before but I was. What did he mean by hook up? I wasn't Vicky or Cindy or Alex. I might want to do it with the right guy, but I wasn't a one night stand. When we came up for air....\n\n\"Hook up?\" I gasped, one hand running through his long blonde hair.\n\n\"Yeah,\" he said, kissing me between words. This was turning into a pretty disjointed conversation but I didn't care about that. I was kind of losing interest in talking. Seemed over rated right now. \"Dunno how you feel about this, but you do things for me, Sammi.\"\n\nI could tell that. Something big and hard pressing against my thigh where I sat on his lap was a real giveaway. \"I'm not a one night hookup kind of girl,\" I gasped, thinking that no, I wasn't, not really, but with Dj\u00e4vul, maybe I might be. He was such a hunky guy, but he was a biker. I couldn't see myself dating a biker even if the biker wanted to date me and God, it was so big and hard and I had to wriggle, and when I wriggled, well, it felt even better. \n\n\"I'm not thinking of a one night hookup here,\" he said, right before he took over my mouth again.\n\nIt was all I could think about for a moment. That hard thing. Me. Dj\u00e4vul. He kissed me again and I just knew that if Dj\u00e4vul went for a home run tonight, there weren't going to be too many obstacles in his way. God, I hoped he did. Or did I? I still wasn't totally sure. My heart pounded. What was I thinking? Dj\u00e4vul was a biker. That girl, Blue, she'd said it. Bikers wanted to fuck girls. That's what I was to Dj\u00e4vul. A good looking girl he'd met in a strip bar that he wanted to fuck.",
        "Was that what I wanted? \n\nThis wasn't like the guys back at High School. I knew them. I didn't know this guy. I didn't know a thing about him except he was drop dead gorgeous and he was a biker and his tongue was so far down my throat he could've been giving me a tonsillectomy. His lips lifted from mine, his nose brushed mine, he smiled and my heart went wild.\n\n\"Sammi?\" he said. It wasn't a whisper, you couldn't whisper and be heard over the music.\n\n\"Yes?\" \n\nI was waiting for him to say whatever it was he was going to say and until he said it I had no idea what my answer would be when the DJ cut the music and spoke after a screeching second of feedback. \"Alrighty,\" he howled, \"it's time for .... our Saturday Night amateur pole dancing competition....\"\n\nI ignored the rest of his spiel.\n\nVicky was back and she nudged me. \"Go on Sammi, you're the best dancer out of all of us.\" She grinned. \"You're gonna nail this.\" Well, she knew. \"Come on, I'll go up with you.\"\n\nDj\u00e4vul laughed. Patted my butt. \"Go on Sammi, the bro's all be rooting for ya'.\"\n\nVicky giggled and she did. She walked me right across the bar to the DJ, dragging me off Dj\u00e4vul's lap and up to the DJ with her, waved at him, pointed at me.\n\nI was totally disappointed that Dj\u00e4vul left our table to rejoin those other bikers he'd been drinking with. Them and that other Chinese girl, Blue. Strange name but the DJ was saying something to me and I had to pay attention.\n\n\"What's your name?\" he called.\n\n\"Sammi,\" Vicky yelled over the noise. \"Sammi Woo.\"\n\n\"Okay, you're on, just wait there with the other girls, I'll call your name. Any music you want to dance too?\"\n\nJesus. My mind went blank. \n\n\"That song from Flashdance,\" Vicky said. An oldie but it fitted. I guess. We both liked that old old movie. I liked the dancing. Vicky liked the whole romance thing. Figured.\n\nIn a daze, I waited. Vicky passed me her cooler. I drank the whole bottle as the half a dozen girls before me went up on stage one by one and did their stuff. They all looked like they knew what they were doing. Shit shit shit Vicky, what were you doing to me. I mean, I could dance, but pole dancing? Never done it. \n\nWatching those other girls, I gulped. But I watched anyway, getting a few ideas. Trying to recall some of the moves those strippers had put on. Vicky came back with another bottle. I took that right out of her hands and drained it as well. If I was going to do this well, I kind of needed to anesthetize myself a bit and, well, it was working. I was really buzzed after that fifth cooler. I could do this, I told myself.\n\nSixth cooler? Whatever it was, I was losing count. I was buzzed.\n\nBuzzed? Whatever. I wasn't buzzed. I was hammered.\n\nWhoooeeeee, was I ever.\n\n\"Next up, and last contestant, Sammmmmiiiiiii Wooooooo,\" the DJ announced. My stomach took a dive. \n\nI bounced up the steps with no idea at all about what I was going to do. None at all. My mind was a frozen blank as I looked out over that sea of faces watching me. The music cut in, pounding. I froze for a second, swallowed, took a deep breath and launched myself outwards. I was shaking with fright when I launched myself into a cartwheel all the way across the stage. The bar roared. Applause, cheers, catcalls, whistles. I couldn't believe it as I bounced off the wall and flipped to my feet on the far side. \n\nI guess all those gymnastics and dance classes were worth it after all. \n\nThat burst of applause gave me enough confidence to spin myself back to that pole. I was improvising like crazy. Really, other than watching those half dozen girls before me, I had no idea what to do. I just tried to remember their best moves and combine it with stuff from gymnastics and those modern dance classes I'd taken all through elementary school and High School and just improvise like crazy. I hit that pole on the spin, got a grip on it with my hands and flung myself into a twirl around it that ended with my feet on the pole above my head and how in heck I did that I have no idea, not to this day. \n\nThat loose little skirt flopped down, exposing my panties to the world, but hey, that was part of the show. That and those vodka coolers meant I ignored what would have been my first instinct, to right myself and get that skirt straight back down again. Instead, I shimmied up the pole feet first, hand over hand, all the way to the ceiling, little black panties exposed to the world. \n\nI'd never done anything like this in my life and now here I was in a strip club, flashing my panties to two hundred guys. Jesus, Sammi. But sanity was out the window and I was going for it. It pays to be a lightweight sometimes. I did the splits, slowly, rotating myself around the pole and easing myself down, down, down until I could flip straight off the pole, somersault through the air and land on my feet.\n\nThe audience was howling. Screaming. Cheering. Whistling.\n\nSlightly out of breath, I whirled back around, gripped that pole with both hands and did what a couple of the other girls had done, I humped that pole, actually rubbing myself against it. Which felt good and gave me time to get my breath back anyhow. The audience was going wild, totally wild. Dj\u00e4vul was right up by the stage cheering and the rest of those bikers were there with him. Seeing all those guys like that was just such a buzz, so cool, so exciting. I could feel the power, feel their desire, feel their excitement, feel it and see it on their faces, hear it in their voices. I rode that buzz, rode that wave of exhilaration at their excitement across the stage, dancing like I'd never danced before.\n\nThe audience out there in the bar was going wild as I somersaulted through the air, bounced around the pole, flipped myself up around it and went into a gymnastics routine except I was parallel to the stage. The vodka coolers really helped, I wasn't thinking about falling at all as I flipped myself off and soared through the air to land on my feet at the last second, followed by a series of slow motion cartwheels across the stage, knowing I was showing off my long slender legs. \n\nAnd my panties.\n\nI knew the song was coming to an end and I wanted to end in style. And Dj\u00e4vul was there, right up center front against the bar. As the music crescendoed, I did one last cartwheel, flipped myself up off my feet and into a somersault that landed me on the bar on my feet right in front of Dj\u00e4vul, slid down onto my knees, my legs wide apart, my knees either side of Dj\u00e4vul. With a grin down at him, I grabbed his long blonde hair with one hand, lifted my skirt with the other and pulled his head inwards, right between my thighs. And held him there as I rose a little and arched my hips, grinding myself against his face.\n\nBiting my lip hard, head arched back as I whipped my hair around to hide my face, I climaxed as I ground my pantie-covered sex against his face, concealed by my skirt, my long hair flailing as I shook my head wildly. Only Dj\u00e4vul and I knew how wet I was and he had to know, my sex was pushed up hard against his mouth and oh my god he was kissing me there as I climaxed and I screamed for him as my hips jerked, as my hands clutched at his head, my fingers buried in his long blonde hair.\n\nThe guys went wild as the music ended. Me? I stayed there, bowed backwards, panting, heart pounding as I got my breath back. The applause went on and on as I slid off the bar and into Dj\u00e4vul's waiting arms. He looked like he was enjoying the jealous looks he was getting. Me? I was just smiling from ear to ear. Glowing. Burning. Shaking. That climax. Jesus, I was still quivering and thank god Dj\u00e4vul's arm was around me. And nobody had known, everybody had thought I was doing a really good act.\n\nExcept maybe Dj\u00e4vul.\n\nAnd definitely me.\n\nSafe back at our table, perched once more on Dj\u00e4vul's lap, my butt nestled happily against that erection that was still there and how did he stay hard so long, Vicky sat down next to me and passed me another cooler, grinning. \"So, Miss Popularity, that was amazing. Where the hell did you learn that?\" She sounded stunned. \n\nHeck, I was stunned. I'd never imagined myself doing anything like that.\n\nEver.\n\nGuys all around us were buying me drinks. They were stacked all the way across the table. A couple of Dj\u00e4vul's biker buddies had joined us and they were knocking them back. Girly drinks or not, they were free. \n\nVicky was laughing. \"They've all got tents in their pants?\"\n\nI looked around, trying to act casual. Everywhere I looked, jeans or shorts bulged. And I could feel Dj\u00e4vul. No exception there.\n\n\"You mean ...?\" I looked wide-eyed at Vicky.\n\n\"Yep, stiff as poles, and it was all your doing, Sammi. Way to go, girl! You gave two hundred guys woody's.\" She was laughing.\n\nI blushed bright red, not that anyone could have told the difference. I was flushed and sweating and excited. To think all the guys I could see in the bar were turned on because of me. The noise, the music, it was all so loud as I sat there sipping on that cooler, knowing that yes, I was more than a little drunk. Actually, I was pretty much hammered and I knew it. Me! Wow. First time ever. First time dancing on stage too. In a strip club. \n\nFrom the feel of Dj\u00e4vul where I sat on him, maybe it'd be another first time too. Oh yeah! Please. \n\nI giggled. Jesus, I really was hammered. Maybe I should get that cab home now, before I did something I'd regret. But it felt so big and hard and exciting and maybe I wouldn't regret it at all. Maybe I should just do it. \n\nVicky nudged me. \"Hey, you're in the finals.\" The DJ was waving at me.\n\nFinals? Huh? \"I can't go back up there.\" My heart was pounding wildly. \"I'm hammered.\"\n\nVicky put an arm around my shoulder, hugged me. \"Sammi, you know the prize is five hundred dollars, right?\"\n\n\"You're kidding me?\"\n\n\"Nope, it is. So get your ass up there and put on another show. Believe me, you'll win it.\" She paused to make sure I was looking at her. \"You had these guys really turned on, every single one of them, they loved you. So go on, get up there and dance like you did last time. You don't have to do anything different except get up there to win, not the way they're all looking at you now.\"\n\nFive hundred bucks. Mine. I could use that money. I mean, my parents were paying for me but it wasn't like I had much spending money. Five hundred? I could buy myself some new clothes. A new bikini. Some nice lingerie. Little things my parents wouldn't spring for that I wanted. Oh yeah, I was so going up there and dancing. Five hundred bucks? Okay, I was doing this. I was. \n\nI was going to win. \n\n\"Move your butt, Sammi.\" Vicky grinned and I did. I moved my butt. I got up there and I got up on that staged and I danced like I had the first time, without thinking about what I was doing. Just riding the buzz and dancing for the guys, dancing to flick their switches, dancing to get them hard. Every single one of them. Except this time I didn't grab Dj\u00e4vul's head and push my sex into his face, even though he was right up there, same as last time. No, I didn't do that.\n\nI yelled \"catch\" at him and somersaulted off the bar, into the air and landed right in his arms. He caught me perfectly. Easily. He didn't drop me. He smiled. He kissed me. I kissed him back.\n\nThe club went wild.\n\nI won.\n\nReally, I couldn't believe it. Everyone went wild. And I had a check for five hundred bucks. Wow! Just wow! Dj\u00e4vul rescued me again. Back at our table, there I was, ecstatically perched on Dj\u00e4vul's lap again. His hand rested on my leg. Just that touch of his hand on my leg sending little thrills through me. He' kissed me before but he hadn't put his hands anywhere they shouldn't be. Now he had and I didn't mind at all. I liked his hand right where it was. Maybe even a little higher.\n\n\"I had no idea you could dance like that, Sammi.\"\n\nI blushed. \"Neither did I.\" \n\nI had no idea Dj\u00e4vul's hand on my leg could turn me to jello either, but it was. I liked being jello. Hot panting quivering molten very wet jello. Yes, I was definitely hammered.\n\n\"Shame the competition's ended, I'd have liked to have watched you dance some more.\"\n\nI glanced at him. \"Really?\"\n\n\"Oh yeah, I'd be right there up by the stage watching you.\" He grinned.\n\n\"You would?\" My heart beat just about doubled as I remembered rubbing myself against his face when he'd been standing right there in front of the stage. And climaxed. I wondered if he knew. That'd just been so disgusting. Disgusting and dirty but the memory made me shiver. I'd climaxed so hard. Far better than touching myself. I thought about doing that to Dj\u00e4vul and just about climaxed again on the spot. I swear, if his hand had touched me there, I would've, right then.\n\nI picked up yet another cooler. I sipped on it, feeling Dj\u00e4vul's hand almost touching my panties, his fingertips high on my inner thighs, just resting there. That touch! I was wet. So wet. Wet and hot and panting. I wanted Dj\u00e4vul to touch me there. I really wanted Dj\u00e4vul to touch me. Wilson had, but Dj\u00e4vul's hand just felt so much more exciting.\n\nTouch me? Glancing at Dj\u00e4vul, his hand so casually on my thigh, not caring if anyone saw, I knew in that moment that I'd let him do whatever he wanted to me. Dj\u00e4vul was a guy who could push my envelope any way he wanted. Push my envelope? He could rip it to shreds. If he wanted to slide his hand inside my panties right here, not only would I spread my legs wide for him, I'd take my own panties off if he wanted me too. Yes, I did find Dj\u00e4vul that attractive.\n\nI was drunk too. Not just a little.\n\nOkay, a lot. Hammered.\n\nI was an easy score.\n\nFor Dj\u00e4vul.\n\nSitting on his lap, his arm around me, one hand on my thigh, I knew that Dj\u00e4vul was that guy that I wanted to finally swipe my v-card. Dj\u00e4vul looked at me. He looked at me, into my eyes and he smiled, a slow smile that lit his face up. I smiled right back as he stroked my thigh, slowly, very blatantly. His eyes held mine as his fingers teased their way higher, higher still, almost but not quite brushing my panties. God, I was so wet. Wet wet wet and willing willing willing.\n\nA guy like Dj\u00e4vul?\n\nA guy like Dj\u00e4vul could swipe my v-card any time.\n\nHeart pounding, his hand on my thigh, perched on his lap, I knew that. \n\nDj\u00e4vul looked down at my upturned face, he smiled and his smile said that he knew that too. \"Want to dance again?\" He grinned, slipped his hand off my thigh. Gestured with his head. \n\nI smiled back, heading onto the dance floor with him. We had fun for twenty minutes up there, Dj\u00e4vul doing his best to grope my butt and me not exactly trying to stop him. This was the most fun ever and I just knew it was going to be even more fun. Vicky was up there as well, dancing away just like me. She gave me a grin. Heading back to our table, I was sweating, flushed and thirsty. I stole Dj\u00e4vul's drink, swallowed it thirstily. I blinked. Okay, that sure was heavy on the vodka. \n\n\"Been dancing too hard?\" Dj\u00e4vul asked me solicitously. Or at least as solicitously as possible over the pounding music. I guess I looked flushed. I felt it.\n\nI giggled. That vodka was really hitting me, I could feel it. \"You were grabbing my butt.\" Not that I'd minded that. Not at all in fact. Grab my butt some more. Please.\n\nDj\u00e4vul grinned. The music had changed. Someone had put on something slow for a change, retro lounge music. The slow dancing sort. \"Let's go grab a last dance and I'll grab your butt some more.\"\n\n\"Sure.\" Dj\u00e4vul could grab my butt anytime he wanted. Actually, Dj\u00e4vul could grab any part of me he wanted. Whenever I looked at him I just wanted to pant. Grab me, please. I'd have walked out with him there and then if he'd asked me. Heck, he didn't even need to ask me. He could've just taken me and thrown me over his shoulder and walked out with me and I'd have gone willingly.\n\nEagerly.\n\nAnd okay, when we did that slow dance thing, me in his arms, feeling him so hard against me, I did pant. I didn't object when he held me close, his hands on my hips, my arms flowing round his neck and my head resting against his chest as I moved with him. My breasts pushed firmly against him through my thin lace bra and that white top. God knows where my blazer had gone. Back at our table somewhere maybe. Who cared? Not me.\n\nMy breasts and my nipples pressed against his chest, sending frissons of excitement through me. I tilted my head back to look up at him, knowing my face was flushed and excited. Knowing I was wearing that \"kiss-me\" look that I'd never felt with Wilson. My lips parted, the tip of my tongue flickering out. He moved his lips closer to mine, my mouth opened wider. Dj\u00e4vul kissed me right in the middle of the dance floor.\n\nFor a moment I hesitated, but we weren't the only ones on the dance floor kissing. More like some of the few that weren't. I opened my mouth wide to him as he kissed me, my tongue playing and teasing his as he probed and explored my mouth, savoring the taste of him, enjoying my own eager response. His hands slid from my hips down to my butt. He pulled me closer. His rock hard erection pushed with unmistakable firmness against the juncture of my thighs and the lower part of my belly through his jeans and my skirt.\n\nMy body melded against his as his hands pulled me firmly against him. My excitement didn't just rise, it surged as he moved against me, his hands holding me tight as his movements became increasingly blatant. I knew exactly what he was doing and I welcomed it, welcomed his movements, let his hands move me as he wanted, continuing to kiss him back, my arms around his neck.\n\nThat slow music ended, but I didn't want what we'd been doing together to stop. Neither did Dj\u00e4vul. One look passed between us and I knew that he knew I was his if he wanted me. His face said that he wanted me. We eased our way of the dance floor, back to our table where there was almost no-one left. None of my girlfriends anyhow. A couple of the guys continued to drink and eye the girls and we joined them and I was on Dj\u00e4vul's lap again. We were close enough to the entrance that when I saw some Chinese guy stagger in. I looked again. \n\nHuh? This wasn't the kind of bar Chinese guys hung out in. Not by themselves anyhow. Not if they knew what was good for them. Girls like me, maybe, lone Chinese girls with lots of white girlfriends, but not Chinese guys. Not by themselves. \n\nMy heart just about stopped as I saw my Nemesis in person. Wilson. Wilson Wong. It was. He'd seen me and I was perched on Dj\u00e4vul's lap, Dj\u00e4vul's arm around me, sharing his drink. I closed my eyes for that special \"oh shit\" moment with myself. When I opened them again, it was real. \n\nAll too real. \n\nWilson Wong.\n\nMy personal nightmare.\n\nHe'd seen me. There was no escape. None. His eyes were locked on me. He was walking towards us. Well, not walking. Stumbling. Staggering. Bumping into people. Reeling. Dj\u00e4vul noticed him too. Wilson was completely and utterly and obviously drunk. God alone knows what he thought he was doing? Some lone dumpy little Asian guy down on the strip at midnight. By himself? So drunk he had no idea what he was doing. That was just asking for trouble. Even I knew that.\n\n\"You know the chink dude?\" Dj\u00e4vul said, following my eyes.\n\n\"It's my old boyfriend, I thought I left him behind but he transferred here without telling me,\" I said, bitterly. \"He did it to surprise me and I just found out before we came here.\" Jesus, I was hyperventilating. How the effing eff could that effing Wilson effing Wong do this to me? What had I done to deserve this? I mean, here I was with the perfect guy to swipe my v-card and swipe it good and who turns up?\n\nWilson effing Wong. Spit!\n\n\"I thought I'd just leave him behind and now I have to dump him. I was planning on telling him I was dumping him tomorrow. He wasn't supposed to know I was here tonight.\" Shit. Shit. Shit. I just wanted to cry.",
        "Dj\u00e4vul chuckled. \"Watcha wanna do about him, Sammi, coz he's hammered. Leave him here like this on his own, he's fucked.\" One of his fingers under my chin tilted my face up to look at him. \"You wanna leave with me, Sammi girl? Or you want to take your old boyfriend home?\"\n\nMy heart leapt, pounded, threatened to choke me. Like there was any choice. Dj\u00e4vul, he was the sort of guy I'd always dreamed about. The sort of guy I'd always fantasized about, my dream v-card swiper. I was so not passing. Not even for Wilson Wong. \n\nScrew him, he was history. \n\nBut Jesus, I couldn't leave Wilson here, not like he was, god knows what'd happen to him. If anything did happen to him, it'd be on my conscience forever. Shit shit shit. Damn you, Wilson Wong.\n\n\"I wanna leave with you, Dj\u00e4vul,\" I said, \"but crap, I've known him for years, all my life, I know his family, I can't just leave him here like that, he's an idiot, he shouldn't even be here, but crap, Dj\u00e4vul, you know this place better than me....oh shit damn effing eff eff.\"\n\nWilson had bumped into some guy, knocked his beer over him. The guy was bugged, really bugged and Wilson, he was trying to push the guy away and any second now he was gonna get himself smacked.\n\nDj\u00e4vul looked, shrugged. \"Hey, you don't hate the guy do you, Sammi?\"\n\nI shook my head. \"No, I mean, he's sweet, I like him, I just, you know, I wanna dump him.\"\n\nWilson was about three seconds away from getting his face smacked and Jesus, I couldn't look. He was gonna get killed. Dj\u00e4vul lifted me off his lap, stood me up and two seconds later he was there, next to Wilson. One arm around him, talking to the guy with the soaked shirt. \n\n\"Come on man, this little dude's completely fucked, give the dumb little fucker a break. Buy you and your buddies a beer.\" He waved and one of the waitresses was there, taking an order and how did he do that?\n\nDj\u00e4vul didn't even pay, he just gave the waitress a big grin, slapped the guy on the shoulder. It probably helped that he was six inches taller, bigger and he looked like what he was. Biker. Dj\u00e4vul's arm reined Wilson Wong in as he staggered around aimlessly, walked him over to our booth, guided him into s seat.\n\n\"Hi Shh .. sshaaa Shhaaammi.\" Wilson sat down at our table. Passed out. Head slamming down on the table. Dj\u00e4vul grabbed his hair, lifted his head up. Nothing stared out of glazed eyes. \"He's fucking gone.\"\n\n\"Crap.\" I couldn't even get him stuck in a cab and pay for it to take him home now. I was stuck with him and I didn't want to be. I wanted to be stuck with Dj\u00e4vul. Okay, I wanted to be stuck by Dj\u00e4vul and crap, Wilson had ruined that and he did not look good. What the heck had he been doing? How'd he find me here? How'd he know I was here even? Crap crap crap. Wilson'd been lucky he made it in, even though from the look of him, he had no idea where he was or what he was doing. Idiot. \n\nDj\u00e4vul and I looked at each other. I wanted Dj\u00e4vul, but I couldn't leave Wilson like that. Not here. Not by himself. Really, I just wanted to cry. My big night, ruined. My Summer Birthday Party, turned to chop suey. My v-card, unswiped.\n\n\"Shit,\" I said and I didn't usually use words like that. \"I can't just leave him here.\" Not like all my friends had left me here, with Dj\u00e4vul. Jesus, thanks for taking care of me guys. Where was Vicky when I needed her to look after Wilson. Where was Cindy? Alex, well, I'd seen her leave long ago. \n\nFriends! Huh!\n\nDj\u00e4vul eyed Wilson, raised one eyebrow and I just wanted to kiss him. I wanted him to kiss me. I wanted him to do far more than kiss me. \"What the fuck does he think he's doing down here by himself this time of night. Dude looks like he can't handle two shots at the best of times.\" He gave me that grin and okay, my knees went weak. \"If you weren't here, he'd be in shit so deep he'd be needing a thirty foot straw to breathe through, Sammi. There's guys here'd roll him in a second.\"\n\n\"Jesus, I'm sorry Dj\u00e4vul, I better get him home. Can you help me get him into a cab?\" And I didn't even know where he was staying. I'd have to take him back with me and for sure he was gonna puke on the floor and it was me that was gonna have to clean up after him coz he was so frigging drunk I couldn't leave him alone and I just wanted to cry. Happy Birthday, Sammi. So much for my Summer Birthday Party. So much for the guy of my dreams swiping my v-card and when I looked at that dream guy, my Viking, even though I felt like crying, my v-card just pleaded to be swiped. \n\nAnd I knew it wasn't happening. \n\nTransaction terminated. \n\nThanks Wilson. \n\nCrap.\n\nDj\u00e4vul kissed me. His arm slid me onto his lap, arm around my waist, mouth on mine, lips on mine, he kissed me. On and on and on, his mouth taking possession of mine, taking, dominating, moving, exploring, tasting, doing what it wanted as I half turned towards him. Moaning. I was moaning with excitement and I hadn't even realized it.\n\n\"You really wanna leave with me, Sammi?\" Dj\u00e4vul was smiling.\n\nMe? Oh God, yes, did I ever. I was panting. That hardness. Dj\u00e4vul's body, his scent, masculine, inflaming. I wanted to just rub my face against him and breathe in and in and in. Keep inhaling his scent forever. Hold him. Feel his arms around me. I'd waited for so long for a guy like this, waited all my life and now that I'd found him, now that I could see that look of love on his face, well, maybe not love but lust and who cared, I wanted him to be mine tonight. Or I wanted to be his.\n\nI wanted him to swipe my v-card so bad.\n\n\"Yes,\" I whispered, \"yes, ...but...\" I glanced at Wilson. Face down. A dead weight chained to my ankle. No, I couldn't just walk out and leave him here, not by himself, not like this. I could never face myself again if I did that and anything happened to him. Even if I did want to put him in a sack and throw him in the nearest river. I was going to cry.\n\n\"Hey, got an idea here.\" Dj\u00e4vul was smiling. \"Instead of my place, I can take you to the club, bring your little buddy here along, dump him in a corner out of the way, nobody'll fuck with him, not when I ask them not to.\" He chuckled. Kissed me. A brief brush of his lips. \"He can get himself a cab home in the morning or whenever.\"\n\n\"Club?\" I asked. Hadn't that Chinese girl, Blue or whatever, hadn't she said something about the Club? Something about the last girl Dj\u00e4vul brought back there getting gangbanged?\n\n\"Yeah,\" Dj\u00e4vul was smiling. Ohhh, those gorgeous blue eyes were just to die for. \"We hang out there a lot, good place to party, I can get you a cab home later.\" He smiled, brushed my nose with his. \"Or in the morning if you wanna stay.\"\n\nStay? My heart almost exploded. I just looked at him, panting. Jesus, Sammi. Stay? Oh god, this was it, Sammi. Are you going to get your v-card swiped by this guy or not? \n\nDecision time.\n\n\"Yeah, okay,\" I managed to gasp. Die. I was gonna die. \"Wilson?\" I glanced and yep, still face down. Unconscious.\n\nDj\u00e4vul shook his head, grinned, lifting me to my feet again, standing up himself. \"Wait here Sammi.\"\n\nTwo minutes later, he was back with a buddy, one of those other bikers he'd been drinking with.\n\n\"Hey Sammi, this here's Seth, one of our prospects.\" Dj\u00e4vul grinned at Seth. Seth grinned back. \"We're all going back to the club 'bout now anyhow, Seth here'll bring your little buddy along.\"\n\n\"No problem, Dj\u00e4vul,\" Seth nodded and I was feeling guilty. I mean, Seth'd been enjoying himself and shit, Wilson wasn't his problem. He was mine. \n\n\"Wanna leave now, Sammi?\" Dj\u00e4vul said. \"Seth'll take care of him, bring him along, stick him somewhere safe, okay Seth. One of the back rooms or something, leave the silly little fucker to sleep it off.\"\n\nOh god yes. Yes yes! \"Sure,\" I said, without a thought. \"I'll tell Vicky I'm going with you.\"\n\n\"You do that.\" Dj\u00e4vul grinned. \"Meet you back here in five, okay.\"\n\n\"Sure,\" I smiled, looking around for Vicky. Except Vicky wasn't anywhere. Neither was Cindy. Not that I could see anyhow. They'd left me here? Huh? So much for friends looking after friends. So I texted both of them and told them I was going with Dj\u00e4vul. Which was more than they'd done for me. \n\nI was back in five and Dj\u00e4vul was already there, waiting, standing there with Seth. Oh god, Dj\u00e4vul was just such a hunk and looking at him, I just knew. V-card? It was definitely going to get swiped tonight. Swiped really really good. Multiple transactions. Oh God, yes please. Swipe me. Looking at him standing there, I was smiling until it kind of occurred to me.\n\nV-card? Uh, maybe a condom or something. You know, protection.\n\nI mean, I didn't want this Woo to end up with a tale of Woe.\n\nOn the other hand, better woe than Wong, if you get me.\n\nMind made up, I knew I was doing this with Dj\u00e4vul.\n\nOr more correctly, Dj\u00e4vul was gonna do me.\n\nEmbarrassment? I could handle it.\n\nI hoped I could handle Dj\u00e4vul.\n\nSo yeah, I was blushing when I walked up to Dj\u00e4vul. \"See ya there, Seth,\" he was saying, the two of them lifting Wilson limply to his feet. He sagged. Seth didn't even blink, he just slung him over his shoulder and carried him out. \n\n\"Jesus.\" I watched. That Seth was strong. Wilson wasn't exactly light. All those noodles and dumplings. He was definitely on the porky side. Not like Dj\u00e4vul. Oh Jesus, Dj\u00e4vul was just so gorgeous. I looked at him and I knew what I wanted him to do to me and my knees just went weak.\n\n\"Hey, Sammi.\" Dj\u00e4vul was smiling down at me and yeah, I checked. Either he was just naturally big there or he was still really excited. Well, so was I, but I was just wet. Really really wet and well, uh, I knew what that meant. I mean, I'd never done it but Vicky and I talked. About, you know, sex. And Vicky had done it a lot. So I wasn't, like, short on theory. I knew all about what happened. Vicky could be really graphic. Gross, but graphic. Wet was good.\n\n\"Uh, Dj\u00e4vul.\" My face was burning. Jesus, how did you say this? Vicky'd know but she wasn't here. Heck, Vicky always had a few. If she'd been here she could've given me some of hers. Why oh why hadn't I thought about this before?\n\n\"Yeah, baby?\"\n\n\"Uh..\" Okay, my face flamed. \"Can we, uh, maybe get something from ...\" I looked across towards the washrooms where those vending machines were. And Jesus, how was I gonna tell him I'd never done it before. Maybe just before we got started. Oh my god, where was Vicky when I needed real advice?\n\n\"Oh?\" He looked down at me. Grinned. \"Sure, let's go.\" He took my hand and led me across the club, towards the two big vending machines and oh my god, everybody would see me there with him and know what we were going to do and this was just so embarrassing and my cheeks were flaming red, burning. My hair was going to catch fire any second. I was gonna turn into a redhead.\n\n\"Hi Sammi, so Dj\u00e4vul really picked you up huh? I didn't scare you off?\" It was Blue, that other Chinese girl. She was standing right there with that big guy she was with, both of them looking at the vending machines. \n\nOh god, my face, it just flamed. I had no idea what to say. None. I mean, what do you say when you're standing in front of a condom vending machine in a strip club with a biker who knows exactly what he wants from you and you've actually just about point blank asked him to buy a condom? You tell me, coz I had no idea.\n\nIt must've shown on my face.\n\nDj\u00e4vul saved the day. \"What the fuck are you two doing looking at these things?\" He was laughing. \n\nRound Out just grinned.\n\nBlue giggled. Pushed her butt back against her guy. Wiggled. Grinned at Dj\u00e4vul. \"Hey, Dj\u00e4vul, every now and then you gotta try something different.\" She looked up at her guy. \"How about we try the studded ones, Round Out? I've always wanted to know what those felt like.\" She winked at me.\n\nLooked at Dj\u00e4vul, at me. She switched to Cantonese. \"Sammi, you a virgin, la? You going with him?\"\n\n\"Hai,\" I said. Nervously. Yes. Yes, I was. Both.\n\nShe smiled but her eyes were serious. \"You go back with him, he's going to do you, okay. Don't lead him on and change your mind, better to just leave now.\" \n\n\"Hai, I know,\" I said. \"I want to go back with him.\" Oh god, yes. I did. So much\n\nBlue looked at my face and she giggled. \"Someone's hot for Dj\u00e4vul,\" she said. \"Just, tell him it's your first time before he starts on you, okay la. He's got a big dick.\" She looked at the machine. Slipped a note in, pressed a button. Pressed another. Took the two boxes out, looked at them, smiled. \"Studded for me. Thin Lubricated for you.\" Passed me one box. Took the change out of the dispenser.\n\nDj\u00e4vul laughed, took it from me as my face caught fire. \"A dozen huh? Blue, you must've been listening to me.\" He grinned down at me. Patted my butt. \"Come on, Sammi, let's go, you ever been on the back of a Harley before?\" Glanced at the big guy, not waiting for my answer. \"You and Blue coming back to the club, Round Out?\"\n\nIt was Blue that answered. \"Can we, Round Out?\" She turned towards him, arms around his neck, stood on her toes, whispered in his ear.\n\nRound Out listened, glanced at me, nodded. \"Yeah, why not. See ya back there, Dj\u00e4vul. Sammi.\"\n\n\"Bro.\" Dj\u00e4vul gave him a slap on the shoulder, slipped his arm around me, turned me and walked me across the Club towards the doors. Out the doors, a nod to the guy on the door. \"See ya later, Meek,\" and straight to one of those big Harley's sitting right outside.\n\nI looked at it, heart pounding all over again, only this time not with excitement. I was going on the back of a Harley? I'd kind of expected a cab or something, I mean, he'd been drinking. Dj\u00e4vul handed me a helmet. I looked at it. He grinned, took it from me, popped it on my head and next second he'd buckled it under my chin and he was swinging onto the motorcycle, looking over his shoulder, patting the seat behind him. \n\n\"Climb on, Sammi.\"\n\nJesus. This was scary and I hadn't been expecting a midnight motorcycle ride. But I wasn't passing. That smile. Those eyes. That face. Half a dozen of those other bikers came out, Harley's were starting up. Blue was there, next to me. Round Out, that guy she was with, he was starting up the Harley next to Dj\u00e4vul's. Blue looked at me. Smiled that sparkling smile of hers. Looked at Dj\u00e4vul. \"You scare her, I'll kill you, Dj\u00e4vul,\" she yelled.\n\nDj\u00e4vul looked at her for a moment. Their eyes met. Almost like they were arguing silently. Dj\u00e4vul smiled. \"Yeah, okay, Blue.\" Then he grinned at me, patted the seat behind him. Beside me, Blue was swinging on behind Round Out, slipping a helmet on, buckling it. \n\nMe, I took a deep breath and scrambled on behind Dj\u00e4vul and that short skirt, I was suddenly all too aware of it as one Harley after another began to pull out on to the road, engines roaring. Round Out and Blue pulled away from beside us and then I was clinging to Dj\u00e4vul for my life as his Harley accelerated smoothly into the road, a dozen Harley's on the move, muted thunder and it was kind of scary on the back but really cool.\n\nThe Harley's in front of us rocketed away, Round Out and Dj\u00e4vul rode almost side by side, Round Out slightly in the lead and I could see Blue turning her head, looking back at us, giving me a thumbs up. Me, I was holding on to Dj\u00e4vul, my skirt blowing up in the breeze of our passage, flashing my panties to the world. God, at least it was dark. If this'd been daylight I'd have died. Just died and the ride went on and on and on and my butt was freezing.\n\nThat seat I was sitting on was vibrating like crazy with the engine though and with just my little black lace panties between me and the seat leather, I just knew I was leaving a slippery wet patch there. In the end I did what I could see Blue was doing, I just tucked myself in tight against Dj\u00e4vul's back and hid my face against his shoulder and sat there breathing hard as the two of them rode their Harley's down the roads, always synchronized, almost as if it was one mind riding both bikes.\n\nHow did they do that?\n\nI had no idea where we were going but it didn't matter. I knew what was going to happen when we got there and I was just sitting there feeling more and more nervous and scared and excited by the minute. I didn't care anymore that car drivers were getting a good look at my butt and my panties. Watch me all you like, you perverts, coz it's Dj\u00e4vul that's getting into them, not you. We didn't stop until we pulled up outside wherever it was we were going to and it'd taken twenty minutes to get there. \n\nWe turned into a yard in some kind of industrial area, through a large security gate. Lights were on here, the yard brightly lit. Cars. Pickups. A row of motorcycles. Harleys? I'd have been scared except that other Chinese girl, Blue, she was right there on the other Harley beside us as we pulled in and stopped. I climbed off when she did, shivering with cold and with excitement, taking my helmet off when she did, standing there holding it and watching with her as Dj\u00e4vul and Round Out swung their Harley's round to join that neatly lined up row of other motorcycles.\n\n\"Been on a Harley before?\" Blue asked me, glancing my way.\n\n\"Never,\" I said, and my teeth were chattering. Nervousness? Fear? Excitement? All of the above.\n\n\"You sure about this, Sammi?\" Blue looked at me, her face so serious. \"Guess you really wanted to come, don't say you weren't warned.\"\n\nI smiled, still shivering. \"Dj\u00e4vul is really nice.\"\n\nShe shook her head. \"Not that nice, Sammi. They're bikers, they're brothers to each other, if you're an 'Ol Lady like me, you're part of the family but right now, you're not. You just came here with Dj\u00e4vul, 'n Dj\u00e4vul can be nice, but he can also be a complete asshole 'n he's fucking dangerous sometimes.\"\n\nShe looked at me with those serious eyes. Not sparkling now. Dead serious. \"They're all dangerous, Sammi. These guys, they're not real bad ass like some of the other biker clubs you read about in the news but they're one percenters for all that, and that means they don't give a fuck for anyone's rules but their own.\"\n\n\"What about you, though?\" I asked, a little scared now. \"I mean, you're here?\"\n\n\"I'm Round Out's 'Ol Lady,\" Blue said. \"Round Out and I, we've been through a lot together. He nearly got killed over me. I'd die for him.\" She looked at me, sad now. \"One of his brother's did die for me and so did a brother of Round Out's from another club and it was some real bad shit, you don't want me telling you about it, Sammi, but these guys, they spilled blood for me coz Round Out's their brother and I was his 'Ol Lady. It's a bond, Sammi, and a girl like you, you don't belong here, really you don't.\"\n\nA girl like me? What about her? She didn't look like she belonged here either. And Dj\u00e4vul? Oh god, he just made me melt inside. Just thinking about him had my heart racing all over again. I wasn't cold anymore. I was hot. Hot for Dj\u00e4vul and was this how Vicky felt when some guy hooked up with her?\n\n\"What if I want to?\" I asked, glancing over at Dj\u00e4vul, watching him swing himself off his Harley, peel his helmet off, shake out that long blonde hair that smelt like summer grass. Like a Viking warrior, that's what he looked like. My knees kind of went all weak just looking at him.\n\nBlue's eyes followed mine. She smiled at me now, the serious look gone. \"If that's what you're looking for, Sammi, you go for it. Maybe you'll end up like me. Maybe not, who knows, there's plenty of girls that come here for a night and never come back. It's not for everyone but me, I could never be anything else but Round Out's 'Ol Lady and he's a brother, first and foremost. It's his life and it's mine too.\"\n\nShe shrugged. \"I'll get you a cab outa here right now if you want. I've said my piece, it's your choice.\" She grinned. \"It can be fun, just don't be, you know, be shocked or surprised. The last chick Dj\u00e4vul brought back here got gang banged.\"\n\nMy eyes widened, my heart jolted. Jesus. Really? I swallowed and for a second I almost said get me a cab. But then Dj\u00e4vul and Round Out wandered over, joined us, took our helmets, Dj\u00e4vul grinned at me. \"Blue hasn't scared you off, Sammi?\"",
        "I looked at him and I just about panted. He just did things to me. \"No,\" I said, breathing hard.\n\nRound Out laughed. \"Get a room, Dj\u00e4vul,\" he said, very drily.\n\nBlue looked at me, shook her head, winked at me. \"Come on Round Out, if we're staying the night you've got some serious drinking to catch up on.\" Then she giggled and pulled that box of Studded Trojan's out, looked at them theatrically. \"Not too much though, you gotta test drive these, I really wanna know what they feel like 'n there's a dozen here to get through.\"\n\nDj\u00e4vul burst out laughing. Me, I just blinked and blushed, thinking of that box in as Dj\u00e4vul took my hand.\n\n\"What is this place, anyhow?\" I asked him.\n\n\"Our clubhouse,\" he looked down at me, smiling. \"Southern Booze Cruisers, that's us, we picked up this place years ago.\" He turned towards me, took both my hands in his, looked down at me and his expression was suddenly real serious. \"Sammi, you really do things for me and I'm not that nice a guy, but girl, I want you real bad.\" \n\nHe laughed then. \"Fair warning, I wanna take you inside and I wanna bed you in the worst possible way. You want to play it safe and go home, I'll get you a cab now. Might be better if you did.\"\n\nJesus, what was this. Blue, and now Dj\u00e4vul? I looked up at him and my heart just did that racing thing all over again. I looked up at him and somehow I was in his arms, on my tip toes, arms around his neck. \"Dj\u00e4vul,\" I wasn't quite whispering, but it was close. \"I'm scared. I want to ... you know .. with you ... but ...\" I swallowed. Closed my eyes. \"I've never ... with anyone...\"\n\n\"Fuck!\" He sounded a bit stunned. When I opened my eyes he was just looking down at me. \"You mean you're a fucking virgin, Sammi?\"\n\nJesus, I wouldn't have put it quite so bluntly. But, \"Yeah, that's what I meant,\" I said. Blushing. Tingling. Coz he was so big and hard and it was pressing against me.\n\n\"I think I better get you a cab,\" he said, looking down at me. \"Fuck it, lucky for you I didn't drink that much.\" He started to let me go.\n\n\"Dj\u00e4vul,\" I hung on to him. \"I want you to ...\" Jesus, no, don't send me home. I wanted him so bad. I wanted my v-card swiped spectacularly and I just knew Dj\u00e4vul would. I didn't care if it hurt or anything, it was just him, that face, those eyes, those muscles, that big hard thing pressing against me. \"Dj\u00e4vul, I know you're a biker.\" I was pleading now. \"I mean, it's obvious and I'm not in love with you or anything ...\" Jesus, I was doing this big dump on him. Get it together, Sammi. \"I mean, you saw that guy.\"\n\n\"The chink dude?\"\n\n\"Yeah, him, I don't wanna lose it to him or a guy like him, I want a guy like you to be my first. You've fucked lots of girls, right? You know what you're doing?\" Jesus, my face was flaming red but my mouth wouldn't stop, I was panicking here that he wasn't going to do it to me. \n\nDj\u00e4vul kind of laughed. \"Yeah, I guess you could say that.\"\n\n\"I want my first time to be with a guy who knows what he's doing, Dj\u00e4vul. I don't want my first time to be some miserable quickie with some fat guy that's got no idea. When I lose it, I want to lose it big time, you know, I wanna remember it for the rest of my life, something spectacular. I don't care if you fuck me and dump me, just make it really good for me tonight, Dj\u00e4vul.\" Jesus, too honest, Sammi. Just shut it down.\n\n\"Jesus, Sammi,\" Dj\u00e4vul said, but he hadn't let me go, his hands were still on my butt, still holding me hard against him.\n\n\"Please, Dj\u00e4vul,\" I said. Pleaded, really, coz that was what I was doing. Pleading with Dj\u00e4vul to fuck me. \"I want you to do it to me.\" I looked up into his eyes and I moved myself against him. \"Make it really good for me. Please.\"\n\n\"Spectacular, huh?\" He was smiling down at me, then he was kissing me and his mouth was hard on mine, lips crushed to mine, tongue filling my mouth, exploring, tasting, dominating my tongue, taking control, taking what he wanted until he came up for air. \"You sure, Sammi?\"\n\n\"Yeah, I'm sure, Dj\u00e4vul.\" I was. As sure as a girl could be. \"I mean, I've got a dozen of those things, I want you to use them all on me tonight.\" Oh god yes. My knees just about buckled and my face was on fire. I was as bad as Vicky and Cindy and Alex.\n\n\"We're biker's, Sammi,\" he said, and then he kissed me again. \"We're bad ass motherfuckers and if you want spectacular fucking, well, I can guarantee you that.\" He kissed me again and his hands kneaded my butt. Pulled me hard against him. Rubbed his cock against me unmistakably. \"That what you want, Sammi? You wanna lose it to that?\"\n\n\"Yes,\" I moaned, and Jesus, how could I be so wet. So excited. \"Yes, I do.\"\n\n\"Well, come on inside,\" Dj\u00e4vul said, releasing me, taking my hand, leading me across the yard towards the large old brick building. It looked like an old Church. \"Gotta use the side entrance,\" he said. \"Don't use those front doors except for weddings and funerals.\"\n\nWas he joking? I blinked, followed when he took my hand and led me down the side. Cool. When he opened a side door, noise pounded out. We headed in towards that noise. In to what I guess used to be the main part of the Church.\n\nNow? Well, it sure wasn't like any Church I'd ever been in.\n\nThe whole interior had been redone as one humungous bar. Like, totally cool. Old motorcycles were mounted on the wall. Real frigging motorcycles along with helmets and leather jackets and what looked like a couple of crashed, warped and burned Harley's. How the heck...? Where there should have been an altar was an enormous wooden bar. Pool tables. Big wooden bar tables and stools. Couches and chairs. Swords and axes and shields and big old guns 'n things all over. \n\nHuge LCD's behind the bar and around the walls playing different channels. Guys in denims and leather. Guys drinking, drinking and eating, playing pool, talking, dancing on a dance floor off to one side with girls. Girls everywhere, dressed the way most of those girls in Kitty Katz had been. It was like some testosterone-soaked idea of heaven, or maybe it was Valhalla? Whatever, Dj\u00e4vul led me right on in and it was \"yeah, Dj\u00e4vul\" and high fives and back slaps and \"this is Sammi\".\n\n\"Yo, hot babe, Dj\u00e4vul. You in some competition with Round Out or what, bro?\"\n\n\"Hey, Round Out.\"\n\n\"Yo, bro.\"\n\nBlue was sitting at the bar, looking as cool and calm as she had back in Kitty Katz, a pool of still water in the midst of a sea of noise and activity. Round Out leaning casually forward beside her, one arm around her waist, hand on her hip, a beer on the bar in front of him. She looked around at Dj\u00e4vul's voice, saw me, smiled, half waved and patted the stool beside her. I slipped on to it, grateful for the welcome, grateful that Dj\u00e4vul slid onto the other stool right beside me. It wasn't quite so scary with her there.\n\n\"See that up there, Sammi?\" Blue pointed.\n\nI looked, saw a large framed corkboard with girls panties tacked to it. Each pair of panties backed by a heart and two names, a girl's name and a name like \"Slasher\" or \"Airborne.\" Some of the hearts were red, some white, some brown. A couple were white with little red hearts all around the borders. Kind of tacky, I thought. I mean, panties? Girl's panties? There were a lot of them.\n\n\"What's that all about?\" I asked.\n\n\"All those panties belonged to girls that got fucked here,\" Blue said, matter-of-factly. Seriously. \"And depending, they give the brothers these wing patches for their cut.\"\n\n\"What's a cut?\" Huh.\n\n\"Those jerkin things they all wear,\" Blue said, still that serious look on her face.\n\nDj\u00e4vul patted my butt. \"Gotta take a leak, Sammi, back in a minute,\" and he was gone, along with Round Out.\n\nBlue looked around, grinned. \"Hey, Popper, show Sammi your cut?\"\n\nThe big ugly dude that wandered over would've terrified me if I'd met him by myself. Sitting next to Blue, listening to the way she talked to him, it wasn't quite so scary. More like I was in a zoo, except I was inside the cage with the animals. \n\n\"His handle's Popper coz he ...\" Blue grinned. \"Like's popping cherries.\" She laughed. \"Not this one, Popper, she's Dj\u00e4vul's, okay.\"\n\nThe look he gave me kind of said, yeah, maybe I was Dj\u00e4vul's but it was clear what he wanted. Jesus, I was so glad I was with Dj\u00e4vul. And Blue.\n\n\"See these patches, the wings down this side,\" Blue said, pointing. \"They give these to the brothers for fucking girls in the club.\"\n\n\"Like, here?\" I looked around. And okay, there were a couple of girls that were topless and I did blink at that but then, there'd been topless girls at Kitty Katz too.\n\n\"Like, here,\" Blue said, very drily. She patted the bar. \"Right here a couple of times, right Popper?\"\n\nHe laughed. \"That last one was good.\"\n\n\"Take your word for that one,\" Blue said, but she was grinning.\n\n\"Anyhow, Popper doesn't have 'em all, but this one, the white wings, that's for sex with a virgin. The Pink Wings, that's for sex with a white girl, the red one is for sex with a girl on her period, the brown one's for anal sex, those knife wings, that's for sex with a friend's girlfriend.\"\n\n\"Jesus,\" I said, a bit stunned. \n\n\"There's more,\" Blue said. \"Dj\u00e4vul fucks you, he gets yellow wings for sex with an oriental girl 'n there's a few more, some of them are really gross.\" She grinned at Popper. \"Thanks, dude.\"\n\n\"Anytime, Blue,\" and he wandered off.\n\nBlue gave me that serious look. \"Those panties up there, they keep them as souvenirs. You stay here with Dj\u00e4vul, Sammi, yours are gonna be up there too.\"\n\n\"What about yours?\" I asked.\n\nShe smiled. \"Round Out and I hooked up away from the club,\" she said. \"Long story, tell you if you hang around here more than a night or two. But I was his 'Ol Lady back before I came here with him. You and Dj\u00e4vul, that's different.\" There was that serious look on her face again, not smiling. Considering. \"It's a different world, Sammi and you and I, we're girls, we can be 'Ol Ladies but the Club is for the brothers, we can be part of that but to these guys, the Club and their brothers, that's everything to them, that's what comes first.\"\n\n\"Even you and Round Out?\"\n\nHer smile was a little sad now. \"Even me and Round Out, but I knew that when I decided he was my man. That was my choice and I made it. Your choice, you've got a different choice to make, Sammi.\"\n\n\"I do?\"\n\n\"Yeah, you do 'n if I was you, I'd leave now. Dj\u00e4vul, he's a nice guy but he likes his fucking in front of everyone half the time, that's what really gives him his kicks?\"\n\n\"You said the last girl he brought back got gangbanged?\" A little thrill ran through me. I remembered that girl from High School and that party. \n\n\"Yeah, I mean, he told her and everything before he brought her back but she wasn't so happy about it afterwards. Some of the stuff that goes down here, I just ask Round Out to take me home or I catch a cab and leave him to have fun. It can get pretty gross.\" She laughed. \"Especially when they start the drinking games.\"\n\n\"You trying to scare her off, Blue?\" Dj\u00e4vul was back, laughing, Round Out with him.\n\nBlue grinned at him. \"Just telling her you're an asshole, Dj\u00e4vul, 'n she should run like fuck before you pull your dick out.\"\n\nDj\u00e4vul just chuckled. Patted my leg. \"Hey Blue, you and Round Out, I thought I'd give it a try myself. See what this romance thing is all about.\"\n\nI blinked. Huh? Romance? I just wanted my v-card swiped by some guy that looked like a Viking and knew how to do it good. Knew how to do me good. Romance? No way. I wasn't here for romance.\n\nI was here to have my v-card swiped.\n\nBlue grinned. \"He's bullshitting, Sammi. Dj\u00e4vul, he hasn't got an ounce of romance in him.\"\n\n\"I'm hurt. Hurt I tell ya, Blue.\" He winked at me. I giggled.\n\nThat guy Seth joined us. Dj\u00e4vul pushed a beer at him. \"Threw the chink dude in one of the spare rooms, Dj\u00e4vul.\"\n\nDj\u00e4vul, he just nodded. Blue looked at me quizzically. Jesus. Me? I didn't want to be talking about Wilson Wong. She shrugged. \"Whatever. Your business.\" Smiled. \"Hey, you guys wanna dance? Round Out?\"\n\nRound Out gave her that smile. She smiled back and for a moment you could see their world shrink down to just the two of them and nothing else. He nodded, she slipped of her bar stool, turned to me. Whispered in my ear. \"Sammi, you wanna go with Dj\u00e4vul, there's bedrooms down the back. He wants to take you downstairs to the party room, just remember that's where you gotta be careful, okay.\"\n\nShe was speaking in Cantonese. I kind of remembered what she'd said before about the last girl Dj\u00e4vul brought back. \"Is that where he took that last girl?\" For a moment I remembered that girl back at High School. Lyndsey. The one that'd done it with five guys and it'd been her first time and everything. Oh Jesus, that flash of memory, my knees went weak. \n\n\"Yeah, that's the one. Just be careful huh, Sammi. These guys, they're different. I mean, I can tell you this shit now, but you go off with Dj\u00e4vul and there's nothing I can do.\" She looked worried. \"I mean, you're Chinese like me, I gotta warn you, Sammi. This isn't that romantic biker romance novel shit, these guys, they drink, they fight and they fuck. That's what they do.\"\n\n\"What about your guy, Round Out?\"\n\n\"I'm his 'Ol Lady, he loves me, but first up, he's a brother and the Club and the brothers always come first, over everything. You gotta understand that, Sammi.\" She smiled. \"I do. I've got my place here, they all know Round Out and me, I'm cool here, but you're new, I don't want anything bad happening to you. Really, I don't.\"\n\nMy heart was beating fast. Excitement. Dj\u00e4vul's hand on my leg while he talked with Round Out. \"Thanks for the warning, Blue.\" I didn't need it though. I wasn't stupid. I thought about that party room she'd told me about and god, I just wanted to squeeze my legs together and shiver. \n\nLyndsey. Like Lyndsey. \n\n\"Hey, dance.\" Dj\u00e4vul interrupted my thoughts. We followed Round Out and Blue onto that dance floor and she was good. Almost as good as me and you could just tell her and Round Out, they were so into each other. Completely into each other, the rest of us just faded to background, if they noticed us at all.\n\nDj\u00e4vul? Dj\u00e4vul was into me, I could tell that. Just the way he looked at me and now I was dancing for him. Dancing for his eyes and he knew it, his eyes caught mine, he grinned and I thought about that box of condoms and I just danced there, melting inside. Wanting him. Remembering his face against me when I'd climaxed on stage with everyone watching me.\n\nThat'd been so wild.\n\n\"Hey, you gonna dance for us again, Sammi? That act at Kitty Katz you did, that was awesome.\"\n\nIt was one of the other bikers, one of the ones that'd been there, I kind of vaguely remembered his face. No idea what his handle was.\n\n\"Oh yeah, that was hot.\" One of the others and when I looked around there were a few more of them all looking at me and I knew they wanted me to dance again. Dance the way I'd danced at Kitty Katz.\n\n\"Hey.\" Dj\u00e4vul nibbled at my ear. Right in front of everyone. Little shivers ran up and down my spine. \"You wanna come out the back with me Sammi, or maybe come on down to the party room 'n maybe dance for the guys for a while.\" He grinned. \"Like you danced at Kitty Katz, that was fucking hot.\"\n\n\"Dance? Is that all?\" My arms were round his neck, pressed against him where his hands held my butt. Feeling him there. God, the anticipation. The excitement. He had all those condoms. He really was going to do it to me tonight and I loved that anticipation. I'd love to dance for them all again too. All those guys looking at me, watching me. \n\nAll of them getting hard for me. \n\n\"All?\" He chuckled, his hands pulled at me, pulled me against him and Jesus, I was melting.\n\n\"Was I really that good?\" I asked. Curious.\n\n\"Oh yeah, you were good alright, Sammi,\" Dj\u00e4vul kissed me again. \"The bros'd love it if you gave them a show.\" He grinned. Turned his head. \"Hey bro's, anyone wanna see Sammi do another dance down in the party room.\"\n\nYo. Yeah. Way to go. Fuck yeah. The chorus from the guys standing around wasn't quiet.\n\n\"Come on then, girl,\" and Dj\u00e4vul had my hand in his and he was leading me out of the huge bar. Glancing over my shoulder, I could see Blue watching me, that serious look back. I gave her a smile and a half wave and then I was through some doors, down some large wooden stairs and into the basement, into another room. Much smaller than the big bar upstairs.\n\nMore intimate. Dim lights. Metal playing, not that loudly. A much smaller bar in one corner. Fridges. A large cooler filled with drinks. Soft carpet. A huge screen on one wall, couches, chairs, a raised stage with a pole right next to the bar, kind of in the other corner of that wall.\n\nHalf a dozen of those bikers from upstairs were following us in but the small room wasn't nearly full. \"You all wanna see Sammi dance, right?\" Dj\u00e4vul called out over the music.\n\n\"Shit yeah.\" \"Fuck yeah.\" \"Shake that booty.\" I guess they did and oh Jesus, I was so nervous. Remembering Kitty Katz. Remembering what Blue had said. I remembered, but, well, I was here. And dancing for them? I was just shivering and melting inside.\n\n\"You want a drink, Sammi?\" one of the guys that'd come down with us asked from behind the bar. \"Changing the music here, bros,\" he yelled. \n\nKatie Perry. Yeah! Something good to dance to and I was bouncing on my feet. \"Southern Comfort and coke for me,\" I said happily, seeing a bottle I recognized. Vicky drank that sometimes, it must be okay.\n\n\"Here you go, Sammi.\" It was a large one, lots of ice. It tasted so good. I was already bouncing to the beat. I loved Katie Perry. Really, I did. Whooo-hooo. That Southern Comfort went down easily. Delicious and the refill was even better.\n\n\"Hey, wind the sound up bro. Why don't you give us that dance now, Sammi,\" one of the other guys grinned, reaching over, turning the music up. Louder. I kind of recognized his face from Kitty Katz.\n\n\"Yeah, come on Sammi, dance for us, you were brilliant.\" Dj\u00e4vul's friends were enthusiastic too. All of them. And I was still totally stoked from that dance at Kitty Katz. From winning that competition. Five hundred bucks. That and being here with Dj\u00e4vul. Oh yeah, I was going to do it with him.\n\nTonight, Dj\u00e4vul was gonna swipe my v-card. I thought of those dozen condoms and I shivered. Dj\u00e4vul was gonna swipe me real good. \n\nI looked at Dj\u00e4vul. I was thinking maybe we could make out seriously in that room he'd talked about or something. Maybe forget the dancing. Like, really really seriously, just do it with him now. Do it with him all night. All night? Yeah, seriously. Just the thought made my heart pound, my breathing quicken. \n\nBut I did like dancing, that'd been so much fun. Maybe I'd dance for the guys and I knew how that made me feel, then Dj\u00e4vul and I could make out some more. A lot more. And I didn't care who knew we were. Wilson was safe enough wherever he was. He could stay there all night as far as I was concerned. I didn't need to worry about him anymore and I wasn't his babysitter. Tonight it was Dj\u00e4vul and he was going to do me.\n\nTonight was my big chance. All the way. \n\nAnd okay, I didn't care who knew.\n\nHe could do me right here.\n\nIf he really wanted too.\n\nI'd let him, I would.\n\nHonest to god.\n\nMy v-card.\n\nSwiped.\n\nYes!\n\nDj\u00e4vul grinned. \"Sure, go ahead Sammi, you like dancing and honestly.\" He whispered in my ear. \"Watching you dance was such a turn on.\"\n\n\"Really?\" I glanced around, slightly nervous, more than slightly excited, eyeing the half a dozen bikers that wanted to see me dance. Well, seven, counting Dj\u00e4vul. Eight when that guy Seth wandered in. My tongue flickered out to lick my lips, a quick glance sideways at Dj\u00e4vul, who smiled encouragingly. \"You guys really want me to dance again?\" I still wasn't sure.\n\n\"Fuck yeah.\" The chorus was unanimous.",
        "\"Yeah, I do.\" It was Dj\u00e4vul's smile and the look he gave me that decided me.\n\n\"Okay,\" I said, more than a little nervously. Not nearly as nervous as I had been in Kitty Katz though. I'd danced twice there, in front of a couple of hundred guys and god knows how many girls. This was only eight and that was including Dj\u00e4vul. Dj\u00e4vul reached over and took my hand, I followed him as he stepped across the bar to that small raised platform. Someone pumped up the music even louder just as I got there. Cool! I gulped the rest of my drink, kicked my shoes off, bounced up onto that small stage and, without a second thought, I started to dance. \n\nI danced around that stage to start with, just dancing for myself as well as the guys, my hands emphasizing the movements of my body, my body moving. Moving for the guys, flirting with them. Teasing them. Enjoying myself. The song changed, now I started using the pole, dancing with it, round it. Peeled of my costume blazer coz it was hot and it got in the way, tossed it aside. With only eight guys watching me I was a lot more relaxed about this.\n\nThat short little pleated skirt was flipping and bouncing and when I twirled it flew up around my waist flashing my little black panties to the entire room, bringing a chorus of whistles and a surge of heated excitement as I swung around the pole. All of a sudden Dj\u00e4vul bounced up onto the stage with me, stripped to the waist, wearing only those jeans. It was obvious he worked out and oh my god he looked pumped. Those arm and chest muscles. Those six pack abs. Jesus! It was hard not to pant and bite him, but I didn't. I wanted to though. He was so hot.\n\nI smiled as he began to dance with me, our movements mirroring each other. He was good. I had eyes only for him now, I was dancing for him. Dancing for Dj\u00e4vul. I looked down and out at my small audience a couple of times, just checking. They seemed to be getting into the show. After we finished up here I was so getting into a room with him and going at it. I was so gonna let Dj\u00e4vul do whatever he wanted to me. Tonight was the night, I knew. By the time I left here, I fully intended to have given Dj\u00e4vul my all.\n\nDj\u00e4vul was gonna swipe my v-card and I didn't care if every guy here heard my PIN number being punched.\n\nOf course, I knew that what I intended to give Dj\u00e4vul was what Wilson had wanted from me, but Wilson was about as out of luck as a guy could get. So sad, too bad. For Wilson, not for Dj\u00e4vul. Tonight, Dj\u00e4vul was getting lucky. He was gonna make a deposit in the bank of Sammi Woo. He could put a notch on his belt, tell his buddies, put a patch on his cut, pin my panties to the board over the bar, do whatever he wanted with me coz I was definitely going to give it up to him. Oh yeah!\n\nDj\u00e4vul was gonna be the bank of Sammi Woo's first ever transaction.\n\nThere weren't going to be any withdrawals. Only deposits.\n\nAs many deposits as Dj\u00e4vul could make.\n\nDancing with Dj\u00e4vul, looking at Dj\u00e4vul, it was Dj\u00e4vul I wanted. Dj\u00e4vul knew that too. He was grinning at me as we danced. I smiled back happily as we danced closer and closer to each other, only the pole separating us, part of our dance, almost part of us. He reached out, clicked his fingers as he danced, took a cooler that one of his buddies passed to him, drank some, passed it to me. I drank thirstily; feeling the buzz from the alcohol hit me almost right away. \n\nThe buzz and the music and my movements all combining within me. Something inside me knew what the unaccustomed alcohol was doing to me, knew it and wanted it. Wanted my inhibitions and restraint eroded. Maybe not washed away, but definitely seriously eroded and it was working. Working really well. By the time I gave that bottle back to Dj\u00e4vul it was almost empty and I was totally buzzing on the music and the dancing and seeing Dj\u00e4vul stripped to the waist and seeing his buddies watching me. \n\nOh yeah, his buddies were really watching me.\n\nCoz they sure weren't watching Dj\u00e4vul. They were all up near the stage now, chairs and couches pulled close, sitting back drinking and enjoying the show. All of them watching me. Every single one of them and they were enjoying watching me dance and I was enjoying their eyes on me. This was far better than that crowd in the bar coz here I could see them each of them, it wasn't just a sea of faces. Only half a dozen. And yeah, I was looking at one of the guys in particular as I danced close to the edge of the stage, my back to Dj\u00e4vul. He was watching my legs. I danced closer to him, right up to the edge of the stage, giving him a good look as he sipped on his beer.\n\n\"Fucking hot dancing, Sammi.\" His voice carried over the music as he grinned up at me.\n\nThose words sent little shivers through me. He thought I was hot. Me? Nice well-brought up always-goes-to-Church-with-her-parents Sammi Woo? Never-dated-anyone-except-Wilson-Wong Sammi Woo? \"Your daughter's such a well-behaved girl, Mrs. Woo.\" That Sammi Woo? I'd never thought I could be hot. Not the way guys like this thought of hot. Real guys. Men. Tonight, yeah, tonight I was hot! Tonight was different. Tonight was my birthday party, tonight was my summer party and I wanted to be hot hot hot. I wanted to be red hot.\n\nI wanted to be the hottest thing these guys had seen since Mauna Loa erupted and I was working every move I'd seen those dancers and strippers doing. I was doing everything except strip. My heart pounded even harder and for a moment, everything blurred. Strip? Wouldn't that be exciting? Even more exciting than dancing for them like this. What would it be like to start peeling my clothes off? For a moment, I was almost tempted, but no, I couldn't do that.\n\nEnough that I knew I was getting Dj\u00e4vul totally worked up. And as for Dj\u00e4vul? After this, I was gonna go off with him into one of those rooms and be even hotter. Spinning around, flaunting myself in front of Dj\u00e4vul, smiling at him, licking my lips as I danced, looking into Dj\u00e4vul's eyes, I could tell Dj\u00e4vul knew that. We both knew that and knowing, my body was gripped with a feverish excitement that overrode my remaining inhibitions. That excitement pulsed through my veins, my skin tingled, burned, every part of me alive and on edge. In my movements, in my dancing, I was displaying myself to Dj\u00e4vul, offering myself to him, offering myself up as a sacrifice to the goddess of love and Dj\u00e4vul, he was going to be the one that accepted that offering, the one that would take the sacrifice. Take me.\n\nSeeing Dj\u00e4vul's face as he watched me, I knew he knew. I just knew.\n\nThe goddess of love was going to get her sacrifice tonight.\n\nMe, Sammi, I was that sacrifice on the altar of love.\n\nTonight, I was going to get my cherry popped.\n\nI was giving myself to Dj\u00e4vul completely.\n\nMy v-card was gonna get swiped. \n\nDj\u00e4vul was going to do me.\n\nGive me his cock.\n\nFuck me good.\n\nReally good.\n\nTonight.\n\nDj\u00e4vul smiled for me and me alone as we danced closer to each other, almost touching, almost, but not quite, the air between us electric, stealing my breath away, raising my excitement to an even higher pitch as we circled that chromed pole while the music pounded out, fast and heady. While my audience whistled and cheered and eyed the movements of my body, eyed my body, eyes I could almost feel as a physical touch on my skin.\n\nWe danced on and now my body was sheened with sweat. Dj\u00e4vul's hands reached out towards me, shaping themselves to my body but not touching me, not quite. His hands molded themselves to my curves, moved as a hand caressing my body would move; separated from me only by an infinitesimal layer of air. My hips, my waist, my arms, my breasts, his hands shaped themselves to me, moved over me, caresses I would have welcomed as physical had we been in one of those other rooms by ourselves. Caresses I would have welcomed even here, where anyone could see us. Where everyone could see us. Caresses I knew I would welcome soon, very soon.\n\nI knew.\n\nDj\u00e4vul knew.\n\nEveryone watching us knew.\n\nThe music changed, something soft and slow. Now I swayed, turning my back to Dj\u00e4vul. His hands slid down to my hips, rested there as we danced towards the edge of the stage, moving together. He moved closer to me, his breath hot against my ear. Closer, brushing against me, pressing against me. Pressing unmistakably against me. Hard. Really really hard where he pushed against the cleft between my butt cheeks as I stood right at the front of that small stage facing my audience. For a long moment I froze, my heart about to explode. \n\nI breathed. I breathed and I swayed and I pushed myself back against him, my eyes half closed.\n\n\"Does that feel good?\" he breathed in my ear, under the music that was pounding out, pressing against me so that I shivered, suddenly covered in goose pimples. \n\nMy head arched back to rest against his shoulder, my face looking back and up so I could see him. \"You know it does,\" I breathed back, knowing no-one else could hear us over the music. Feeling him rubbing himself against me. Enjoying what he was doing as we danced slowly, my hands now resting on his where he held my hips, guiding my movements.\n\n\"Good,\" he said, and I could hear the satisfaction in his voice as he spun me round to face him, spun himself with me so that my back was to the chromed steel pole that rose to the ceiling in the center of the stage. \"Hold the pole, Sammi.\" His hands took mine, placed them on the pole above my head; curled my fingers round the cool metal.\n\nThen he kissed me, one of his hands holding mine to the pole, the other under my chin, tilting my head up. Oblivious to my audience, our audience, I opened my mouth to him. I opened my mouth and I accepted his tongue and his possession of my mouth and his kiss. \n\nHis mouth lifted from mine, he smiled, he kissed my nose, he sank to his knees before me and, very slowly, he peeled off one white knee sock, then the other, rolling then down, sliding them off my feet, standing. All while I stood there facing those guys watching me, see them looking at me as I stood there holding the pole above my head and shivering. Trembling. Panting as Dj\u00e4vul's hands peeled my white knee socks from me.\n\nHis head tilted up, he smiled, he stood, my socks disappearing inside his jeans and now he took my hands, he released them, he guided me away from the pole and we danced. Danced around the stage and then I was poised, poised with my back to our audience and he stilled me with a touch. A single touch and then his fingers were undoing the top button of that white Hogwarts shirt I wore.\n\nI didn't stop his fingers. I began to move, to sway to the music as he unfastened each button. As Dj\u00e4vul unbuttoned the shirt I wore, I smiled at him. Smiled, confident that very very soon we'd be off that stage and headed off into one of those rooms together. Where Dj\u00e4vul could remove my clothes completely before doing whatever he wanted to me.\n\nHis fingers unbuttoned that last button. That top fell open, exposing the little black lace bra I wore beneath. Still we danced, my hands on Dj\u00e4vul's shoulders and he was smiling down into my face and I was smiling back. Smiling and panting and my nipples were so swollen and hard they hurt and all I could think of was that I wanted him to kiss them and suck on them and when he did, I was just going to climax and die because I knew that when he did that to me it was going to be so good.\n\n\"Enjoying this, Sammi?\" Dj\u00e4vul was smiling, his hands on my waist now, on my skin because my white shirt was open and loose and they felt so good on my skin.\n\n\"Yeah,\" I said. Lots of fun and I was dancing, swaying, knowing those guys I had my back to were watching my legs, watching my butt, maybe looking up my skirt to see those little black bikini panties I was wearing and I was so hot just knowing they were all looking at me. Looking at me and wanting me. Wanting what Dj\u00e4vul was going to get. Even that was exciting, knowing that they'd know exactly what Dj\u00e4vul was going to do to me when I left the room with him. \n\nLet them imagine all they wanted about me. \n\nDj\u00e4vul would be the one getting it.\n\nHe'd be doing me.\n\n\"Wanna show them a bit more?\" Dj\u00e4vul was grinning now and he didn't wait. His hands spun me so that my white top flew wide around me, exposing my bra to our audience. An audience who cheered and whistled their appreciation as I he spun me completely around to face him before I could even think about covering myself. He stepped back, releasing me. \n\nBurning, tingling with excitement and that flashing excitement, I did what I'd half thought about already. I danced a wild fandango, turned cartwheels cross the floor. Well, only one, and a slow one at that because the little stage just didn't have that much room but I did it.\n\nThat little plaid skirt fell around me, exposing those little black bikini panties, exposing my little black lace bra as my shirt feel away. The crowd sure cried out for more, all eleven of them, and I was willing to give them what they wanted. Turning back to Dj\u00e4vul, smiling. Dancing towards him. My arms around his neck, swaying against him, feeling how hard he was, flirting with that hardness, brushing him, easing back, brushing him again.\n\n\"Tease,\" he smiled.\n\n\"No,\" I smiled back, brushing against him again. \"I'm not teasing. Not you.\" And I wasn't.\n\n\"No?\" he breathed. \"You're not? Want to demonstrate that?\"\n\n\"How?\" I breathed.\n\n\"Like this, maybe?\" His hands undid the clip and zip at the back of my Hogwarts skirt. It dropped to my ankles, all in a second, leaving me in those revealing and tiny little black lace bikini panties. And they were tiny. In Dj\u00e4vul's room, alone with him, I would have happily let him strip me down to those panties, but here and now, I was dancing on that small stage with Dj\u00e4vul, watched by seven other guys, all intent on me. \n\nAnd this was a lot more of me than I'd intended to expose to anyone but Dj\u00e4vul.\n\nExposing almost as much as some of those strippers dancing on that stage in Kitty Katz.\n\nSuddenly, I was totally self-conscious, heart thumping in my chest. \"Maybe that's far enough,\" I murmured, almost to myself. Far enough for up here anyhow. I couldn't wait to get to that bedroom. Once I was in that room alone with Dj\u00e4vul, there'd be no far enough. None at all. Dj\u00e4vul could take things as far as he wanted there and I didn't want to wait.\n\nDj\u00e4vul's hands slid to my butt, gently, his fingers hot on my skin, sending little rockets of sensation rippling through me as he urged me closer to him, dancing me back with him, back towards the pole in the center of that small stage. Backing me up against it so that I paused, standing there, the chromed steel cool against my butt and my back, looking up at Dj\u00e4vul, my back and my black lace bikini pantie clad butt to our audience, my eyes only for Dj\u00e4vul and I was melting. Wet. I was so wet.\n\n\"God, Sammi, you're so hot,\" he murmured and now he moved even closer and it wasn't my butt he was pressing against now, it was my stomach that that hard bulge pushed against and I could feel every inch of him and he was kissing me. My arms slid around his neck, my mouth opened wide, his tongue delved deeply, exploring, tasting, taking, dominating my mouth, caught between that hard pole behind me and the one pressing thickly against me. One cold and hard. The other hot and hard.\n\n\"Ohhhh,\" I gasped when his mouth lifted from mine at last. \n\n\"They're all looking at your butt,\" he breathed in my ear, his breath sending little shivers down my spine, his hands sliding over my butt, a gentle caress. \"They're watching my hands on your butt.\"\n\n\"They are?\" I shivered again, my eyes half closing, cheeks burning, heart pounding. God, I'd worn a bikini smaller than this swimming before, it wasn't anything new for guys to see me in something like this. Except that these were my panties, not a bikini. What was different was dancing around a stage in front of a bunch of guys in something this small and revealing. That was really different, and so was Dj\u00e4vul making out with me while they watched.\n\n\"It's a cute butt, Sammi\" he said, \"I want to look at it too.\"\n\n\"Do you?\" I gasped. God, my knees, they were jello and I wanted to squeeze them together and moan out loud.\n\n\"Yeah, I do,\" he said. \"Can I?\"\n\n\"Okay,\" I kind of panted, swallowing. Closing my eyes. Heart pounding like a drum. What was he going to do?\n\n\"Hold the pole up above your head with your hands,\" he smiled, just before he kissed me again.\n\n\"Mmmppphhh,\" I replied, eyes almost as wide as my mouth. I did though. I lifted my arms and held the pole above my head and stood there, my butt against that cool chromed metal, pinned helplessly and loving it as Dj\u00e4vul's mouth devoured mine, as Dj\u00e4vul's body pressed against mine. Dj\u00e4vul's hands slid over my butt, my hips, my waist, back down to my butt, on and on until at last his mouth lifted.\n\nI gasped for breath.\n\nDj\u00e4vul smiled. \"Turn around,\" he breathed in my ear. \"Keep holding the pole like that and turn all the way around and face them.\" \n\nHis hands guided me as I turned, still holding the pole above my head, turning to face the pole, my cheek pressing against the cool chrome as I looked out at my audience, looked out and saw them watching me. Looking at me as I stood there in my black bikini panties, my black lace bra and my wide open white shirt. \n\nThe music wasn't pounding half as loudly as my heart. The room wasn't half as hot as I was. I was burning, tingling, glowing. My panties, I was suddenly conscious that they were soaked through and thank god I'd picked black, I pressed myself against the pole, my hips moving infinitesimally, that cool friction against my swollen and sensitive clitoris sending slow waves of pleasure washing through me as I stood there, Dj\u00e4vul's hands on my butt. Shaped to my butt, hot on my skin.\n\nHis lips brushed the back of my neck, my ear. \"You're enjoying this aren't you,\" he breathed.\n\n\"Yes,\" I breathed back, my reply audible only to his ears and mine. I was. I was enjoying the way they were all looking at me, just like I'd enjoyed the way they all looked at me back in Kitty Katz when I'd danced on that stage. All those guys, excited just from watching me dance. I couldn't help it. I had to see. I had to look. And they were. Every single one of them. Visible bulges in their jeans or their trousers.\n\n\"Ohhhhh.\" I couldn't help it. That was me doing that to them? \n\nTheir cocks were all hard just from watching me. Watching me up here dancing had done that to them? Just looking at me had got them hard? The rush of excitement buckled my knees. If it hadn't been for the pole, I would have been on the floor but the pole held me up, supported me, held me in place for their eyes to roam over. Examine me. Look at me.\n\nI wanted them to look at me.\n\nDj\u00e4vul's hands roamed over my butt and all I could do was stand there, my hips moving slowly, so slowly, that gentle friction where I wanted so much more. That cool steel pole where I wanted something living, something just as hard but hot and alive. His hands left me, left me and now he was fastening something to one my wrists. I looked, breathing hard.\n\nMy white knee sock. Tied and knotted around my wrist. My other sock, tied around my other wrist, looped around the pole and then fastened to a hook well above my head. Dj\u00e4vul's hand gripped my pony tail lightly, eased my head back, his lips brushing my neck. \n\n\"Tell me if you want to be untied, Sammi, okay.\" His lips brushed my cheek. \"It's a slip knot, jerk your wrists hard and it'll come off.\"\n\n\"Okay,\" I breathed. Ohhhhh. I didn't want to be untied though, I didn't want to jerk my wrists free. I wanted to stand here with my arms stretched upwards and see them all watching me. Looking at me in my white shirt and my bra and panties. My clitoris. Oh my god I was so sensitive there. Shivering as I moved myself so very slightly. Feeling how swollen and sensitive and wet I was. How good it felt when I moved against the cold metal of that pole. How hard Dj\u00e4vul was against my butt and how exciting it was to move against him."
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "asian",
        "chinese",
        "virgin",
        "first time",
        "gangbang",
        "anal",
        "18 years old",
        "student",
        "bikers",
        "chloe tzang"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-temptation-of-sammi-woo"
}