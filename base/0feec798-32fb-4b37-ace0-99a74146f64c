{
    "title": "From Charity to Chastity",
    "pages": [
        "This is my submission to the 2020 Valentine's Day contest. Please take a second to vote if you enjoy reading it. I've already enjoyed reading some of the submissions and look forward to reading more entries. Good luck to all the authors.\n\n*\n\nI almost felt like I didn't belong the first few weeks. Many of the faces were only a handful of years younger than me. Some made my nearly beardless face look almost adolescent. I needed two weeks to grow a poor excuse for a five o'clock shadow. I was right out of college, a first-year teacher at a regional public high school. Two English teachers had retired unexpectedly the previous year and the district had only been able to hire a single replacement. I was that lucky new hire. \n\nThe small towns the district served were agricultural communities until the early nineteenth century. When nearby cities and larger towns industrialized in the years before the Civil War, farming the poor, rocky soil became less attractive than working in a factory. Farms went to weed, then scrub, eventually second growth forest. Farmers abandoned the fields for the factories and gradually sold off their farms in small parcels. Some old farmhouses, a few old barns, and an apple orchard were all that remained of the area's agricultural heritage.\n\nThe families in the district were mostly middle class to affluent. Few worked locally. Most commuted to two mid-sized cities a short commute away. There were some families that lived in the district only because they had roots going back generations, in many cases to colonial times, and already owned property. \n\nBecause the school was still short an English teacher, the entire department was over-loaded. Each teacher in the department had to take on an extra class. My extra course was an honors English literature class. I had one for juniors and another for seniors. Doesn't sound like much? It meant 200 more lesson plans, 25 more homework assignments to review many nights, six more books to read or reread, 150 more papers to read and grade, and 25 more grades to track, calculate, and report. \n\nThe honors students were more of a classroom management problem than other classes. Not because they were necessarily a behavior problem, though they weren't immune to causing mischief. Because they were bright, they constantly found ways to be challenging. Some assigned readings for the honors courses were considered somewhat controversial. They were intentionally selected to provoke thought and discussion. The goal was to develop critical thinking skills, a skill that would serve students for their entire lives as they dealt with a rapidly and constantly changing world.\n\nDespite the serious nature of some of the topics, humor could sometimes be injected into classroom discussion. I encouraged it, to a point, by injecting the occasional humorous observation about the assigned reading. I had a handful of class-clown candidates among my charges, mostly among the honors students. Quick with a quip or an observation sure to result in howls of laughter. I had one senior girl with a talent for double-entendre. She took delight in embarrassing more modest female classmates, sometimes getting male classmates snickering and squirming in their seats. I tried to maintain some semblance of classroom decorum without sucking the fun out of the room. \n\nIt was sometimes difficult to keep a straight face. And there were times when I couldn't avoid laughing. Occasionally even when a comment was inappropriate. I didn't often have to tamp things down to maintain control, but it did happen a few times. Sometimes, I'd have a brief after-class discussion with a student to point out a comment had gone too far and there would be consequences if it happened again. Because of my approach, I developed a reputation as that most rare of creatures in a public high school, a challenging and demanding teacher that made learning fun. And was willing to display a sense of humor in class.\n\nAbout halfway through the first quarter, the teacher's lounge began falling silent when I entered in the morning before classes began. I found being a somewhat frequent topic of discussion in the teacher's lounge a little unnerving. Eventually I learned several teachers with significantly more experience had been confronted by some of my students. Students who wanted to know why they couldn't make class fun like I did. Often the criticisms weren't fair. How do you make a joke about precalculus? Or the English Reformation? Lincoln was known for humor but there was nothing funny about slavery or the American Civil War.\n\nColleagues overheard students talking about me in the cafeteria or in the hallway between classes. I was aghast when one of my colleagues grinningly told me he overheard a senior cheerleader tell her girlfriend she'd fuck me in a heartbeat. My classes usually remained as serious and focused as any other. But colleagues whose classrooms were near mine could hear spirited participation that was absent from their classroom. And occasional laughter emanating from my classroom. See the smiles and energy of students leaving my classes. It became apparent my growing popularity with the student body bred a mix of admiration and jealously among my colleagues. Fortunately, the jealousy didn't breed animosity. My new colleagues seemed to like me. I tried to attribute my popularity to being closer to the students age than any of my colleagues. Most of them didn't buy it.\n\nThe principal, Dr. Sheila Purcell, sat in on a couple of my classes to observe after hearing some colleagues talking about me. I expected the students to more reserved in front of the principal. That was the case in my remedial English class. The junior honors English class got engaged in a spirited discussion about why George sacrificed so much for Lennie, then killed him rather let the mob capture him. She smiled at me when she left to return to her office. \n\nMy first review was positive. Dr. Purcell and my department head were pleased with my first quarter results and ecstatic with the feedback they collected. I don't know how, but Dr. Purcell seemed to know the scuttlebutt about everything in her school, including the cheerleader that claimed she wouldn't hesitate to have sex with me. When she reviewed a statistical analysis of my students' first quarter performance, she noted my students' grades were trending slightly higher than the expected distribution but nothing that suggested I was being too generous. She told me to keep doing what I was doing. \n\nThe first parent-teacher conferences were held in mid-October, just before the end of the first quarter. Most were what might be expected. I was very careful not to disparage any student. I confined my feedback strictly to academic performance. A few parents were annoyed that I didn't have effusive for praise their brilliant progeny. Some listened respectfully, sometimes wearing worried expressions. Other times a smile because their child was doing better than in past years. Some engaged with questions about the curriculum and expectations. Some just listened to my comments and went on their way. Each night one or two didn't show up for a scheduled appointment.\n\nOnly one meeting stood out. Charity Teagarden, a freshman, was from a family that had first settled in the area when it was still a British colony. I knew that only because I read a brief history of the area before accepting the job. Her family figured significantly in the area's historical narrative. The small historic district that straddled two of the towns was called Teagarden. Teagarden Common, a large multi-use park with a lakeside beach shared by the same two towns, was donated by the family before the Great Depression. There was a Teagarden Road. Teagardens had been politically prominent in the past. \n\nCharity was a sweet, quiet kid. Always clean, neat, and modestly dressed at school. It was obvious her family struggled financially. I heard her teased about her appearance sometimes. Her clothes were dated and a little too big. Unlike some other girls in school, it was difficult to determine what kind of figure she had. She was unquestionably slender. She was pretty but came across as mousy because she never wore make-up. Never dyed her hair purple, blue, green, or any other color. Her dirty-blonde hair needed a cut when the school year began and still hadn't been cut by parent-teacher conference week. She had friends but was as likely to keep her own company as hang with them. \n\nI had several concerns about Charity. Her work was uneven. At times, she gave me honors student work. Other times, it was so poor an overwhelmed grammar school student might have done better. Homework assignments often were done poorly, incomplete, or not turned in. Attendance stopped just short of being a problem. She rarely participated in class discussions. Her test grades barely averaged C.\n\nI finished a conference with the father of one my more problematic class clowns and walked with him to the hallway to welcome Chastity Teagarden, my last appointment that evening. The plain-looking woman waiting outside my classroom looked tired. Beautiful auburn red hair peeked out of an old Red Sox baseball cap. She wore baggy jeans and a loose sweater under a light jacket. But one look told me she couldn't possibly be Charity's mother. I was almost twenty-three. She didn't look any older than me. When we shook hands we greeted each other by name. She added she was Charity's older sister.\n\nI told her I'd have to check with the administration before discussing Charity with anyone other than a parent. When she said she was Charity's legal guardian and had brought the court papers, I motioned her inside and closed the door. We took a seat as I gathered my thoughts for a moment. We discussed Charity's schoolwork in depth. Chastity was knowledgeable about education and teaching. If a twenty-something woman was legal guardian for a teenage sister, there had to be some serious problems at home. I asked if there anything going on at home that made it difficult for Charity to study. I quickly regretted the question. Chastity fell apart. I learned more about Charity's home life in the next minutes than I ever expected to. \n\nTheir father had disappeared without a word. He left for work early one morning but never showed up at his job. He didn't return home that evening. His car was found in a supermarket parking lot near his employer. The keys were in the ignition. A train station was only walking distance away. No one had heard from him in years. Their mother took her husband's disappearance hard. She began to drink. She poured her first drink each day upon arriving home from work and was stumbling drunk by dinner. Their mother didn't get violent but was demanding. Charity couldn't bring herself to say no to her mother and would end up spending her evenings catering to her mother's drunken whims.\n\nChasity was just twenty-two and had been Charity's legal guardian for nearly a year. She attended the state university branch, about an hour away, three afternoons and nights a week. She worked two waitress jobs, weekday breakfast shifts at a local diner and weekend evenings in an upscale Italian restaurant near the university. It was easy to understand why Chastity looked tired. And why Charity wasn't doing as well in school.\n\nI was driving home before I realized my fifteen-minute appointment with Chastity Teagarden had run nearly an hour over. As I drove, I became more concerned about Charity. I knew that there would be students with heart-breaking home situations, but I hadn't really thought much about it. I was a teacher not a social worker. I was expected to maintain a professional detachment and make referrals to guidance counselors when I learned of a problem. I decided I had to figure out how to help Charity but had no idea where to begin.\n\nI approached the school guidance counselor. She was already familiar with Charity's home situation. She had sympathy for the girl, but there wasn't much she could do. Chastity was a responsible adult and was providing everything the state required of a legal guardian. There was no after school program and no funds to start one. I considered offering to let Charity hang out in my classroom after school the nights her sister was in class and then giving her a ride home once her homework was complete. My mentor advised against it. I had an idea after a couple weeks.\n\nMy family lived about three hours away in a neighboring state. But my father's cousin, Brie, lived in one of the towns the district served. She'd left teaching, returned to school and was now the educational administrator for a large hospital system. I called Brie, told her I wanted to ask a favor and invited her to dinner, my treat, to discuss it. I could tell she was suspicious. We'd only spoken a few times since I moved to the area and hadn't yet got together. We had a relationship more akin to an aunt and nephew than second cousins. \n\nBrie was often blunt. She had a quick wit and a sharp tongue she rarely kept in check. I'd heard people outside the family describe her as prickly. I could see that but there was more to her than some people realized. She could hold her own in an argument with anyone. I always enjoyed hearing her needle my father, a strait-laced radiologist and part-time med school professor, about the dumb shit he did when they were kids. I was sometimes amazed that he survived high school without serious injury. Or incarceration. I loved every minute I spent with her.\n\nBrie was an unapologetic carnivore. I picked her up on a Saturday and took her to a restaurant known to serve the best steaks between Boston and New York. After we ordered a drink, she stared across the top of the menu at me. I could almost hear the gears whirring. I was going to get interrogated. It didn't take long for her to start.\n\n'Alright, Evan. What are you up to? Last time I ate here was the night my ex proposed. You must want something big to bring me here for dinner. Especially since I know you're not hoping to get laid.' It was vintage Brie. Subtle as a shovel to the back of the head.\n\nDespite expecting to be questioned, I was still caught off-guard. I stumbled through a few unintelligible utterance, before she put down her menu.\n\nEvan,' she interrupted, 'just spit it out. I already know it's a huge favor of some sort. I just can't for the life of me imagine what you want. The last time you asked a favor you were nine and wanted to hide your mother's birthday present at my apartment.'\n\nI explained I had a student performing poorly because of a difficult home situation. She needed a place to study without the distraction of an alcoholic mother. The student had a stable influence at home in an older sister. But the sister worked, attended the state university branch, and couldn't be home all the time. If Brie was willing, the student could take the bus to her house to study a few nights a week. The older sister could pick the student up on her way home from the university she attended. All I asked was a safe, quiet place where she could do her homework without distractions, a few nights a week. Brie wouldn't have to supervise or drive her home. Just provide a place to study. I knew I was asking her to do a huge favor for someone she didn't know. I also knew Brie was still a teacher at heart and had some soft spots that could be exploited if approached properly.\n\nBrie waved the waiter away when he approached to take our order. Then turned on the interrogation lights. How old was she? What else did I know about the situation at home? What was the older sister like? The grilling went on for about twenty minutes before she picked up the menu again. \n\nAs soon as she put the menu down again, the waiter returned. 'You first,' Brie told me while she looked at her menu again. \n\nI ordered the big rib-eye with mushrooms, baked potato, and a side of asparagus, balsamic dressing on my salad. Brie ordered a two-hundred-dollar Wagyu rib-eye with all the trimmings and a bottle of wine I was sure would set me back another couple hundred. This check was going to hurt. But if she was making me pay, she hadn't ruled out what I was asking. At least not yet.\n\nWe talked more about Charity over dinner. After the meal Brie told me she'd consider it but wouldn't say yes just yet. She wanted to meet Charity and her sister. On neutral ground. I suggested a local coffee shop as a suitable meeting place. Brie nixed it.\n\n'Not a chance, you'll take us to dinner where we can spend some time to get acquainted. I want to get a sense of them,' she said with a firm finality. Though I knew it was pointless, I opened my mouth to protest. She put up her hand to stop me. 'I know your heart's in the right place, Evan. Do you remember the adage? No good deed goes unpunished. You're a teacher. Good deeds bite you on the ass and tear out a chunk.'\n\n'I haven't discussed this with the student's sister yet. I don't know if there will be any interest. I wanted to talk to you first. I don't know what the sister will think of this proposal. Or if the student will object.'\n\n'Talk to the older sister. If she's agreeable, make the arrangements to meet,' she said as the check arrived.\n\nI wanted to cry when I saw the check. I could kiss my February break ski trip goodbye. Brie just grinned wickedly as I dug into my wallet for my credit card. At least she covered the tip, which was more like what I had expected to spend on dinner.\n\nMonday, I sent a note home with Charity. Chastity called a couple days later. After we talked about my proposal, we set the first Sunday in November for our dinner meeting. When I cried poverty to Brie, she agreed to a popular area seafood restaurant that wouldn't bust my budget any further. \n\nBrie and I were seated in the waiting areamfor several minutes when Charity and Chastity arrived. \n\n'Hello, Mr. Berry,' Charity said shyly. Her hair had been cut. She wore light makeup that let the pretty young girl show. But her appearance was still a far cry from the far too sexy persona of many of her schoolmates. Her clothes were still too big for her. Hand-me downs from her taller, older sister I now realized.\n\nMy jaw nearly hit the floor when I turned to greet Chastity. I barely recognized her. Stylish, shoulder-length auburn hair gleamed. Hair that had been mostly hidden by a baseball cap. Blue eyes shined bright behind a wide smile. A bit of carefully applied makeup brought out a beauty that wasn't discernable when I met her. Her top was a modest, loose fitting, bright blue sweater. Her black skirt was also modest, loose and mid-calf length. She looked incredible.\n\nAfter the hostess led us to our booth, Brie ushered Chastity into the seat beside her. Charity sat next to me, directly across from Brie. For a moment, Brie glared at me. She was pissed about something, but the scowl disappeared almost immediately. Before she turned to Charity. \n\nSince this was a school-related meal, everyone ordered soft drinks. Charity didn't like fish. She ordered chicken. Chastity ordered stuffed flounder. I cringed when Brie insisted that I order while she considered the menu. I ordered seared tuna. I wanted to reach across the table and strangle Brie when she ordered twin lobsters. \n\nDinner was a friendly and relaxed affair, though Charity might not have thought so. Brie didn't let Charity sit quietly through dinner. She skillfully pried and prodded to find out what Charity was interested in, what she liked about school. She got responses from the usually reticent Charity that surprised me. I learned more about Charity over dinner than I had in two months of school. She was a complicated young lady. Far more mature than her classmates. As I listened, I became convinced that if Brie agreed to provide a suitable environment, Charity wouldn't improve. She'd thrive. The check was a bargain compared to the steakhouse, though it still hurt. As we left the restaurant, Brie told Chastity she wanted to talk to me on the way home. I assured Chastity I'd be in touch.",
        "We were barely out of the parking lot when Brie turned in her seat and glared at me again. It wasn't long before I was uncomfortable. \n\n'What?' I asked hesitantly. 'Are you pissed off about something?\n\n'I hope I didn't misjudge you, Evan,' Brie said acidly.\n\n'About what?' I asked, having no idea what I could have done.\n\n'I'm wondering if I was wrong when I concluded you weren't looking to get laid. Of course, I meant I was sure you weren't trying to get me into bed. It never dawned on me you might be interested in the older sister. Now I'm not sure what you're up to. Ingratiate yourself with Chastity Teagarden or help Charity.' \n\nI laughed nervously. 'No thought of getting either of you into bed ever crossed my mind, Brie,' I told her honestly, though inwardly I could imagine being very interested in Chastity. If circumstances were different. 'When I met Ms. Teagarden at Charity's parent-teacher conference, she didn't look anything like that. But I understand why you'd wonder. She is attractive.'\n\n'Here's what we'll do, Evan. Charity can take the bus to my house the three days Chastity is at school. Let me know which ones. Mrs. Carrier has been asking for fewer days with Kevin. I'll kick her back to two days and Charity can watch Kevin. All I expect is she makes sure he doesn't burn the house down while she does her homework. He'll probably just play video games anyway. Tell Chastity I want to monitor Charity's grades. I also want you to tell me how she's doing in your class. I'll even pay her a few bucks an hour for being there. Did you see the clothes that poor kid was wearing? She must catch hell at school.'\n\n'That wasn't a show, Brie. She dresses like that every day. She just got her first haircut since school began. I've never seen her with makeup before tonight. She didn't look like that in class Friday.'\n\n'When can she start?' Brie asked.\n\n'I believe Ms. Teagarden is in school Monday, Tuesday, and Thursday. I'll confirm that with Charity on Monday.'\n\n'If that's the case, she can start a week from Monday if it can be arranged that quickly. Mrs. Carrier can supervise the first couple of nights. I'm sure Kevin will like Charity more than Mrs. Carrier. But Evan, if her work doesn't improve or she can't manage Kevin, I'll kick her to the curb in a heartbeat.'\n\nIt wasn't long before I began to see improvement in Charity's school work. After a few weeks, her appearance began to change a little, too. Nothing flashy or expensive. Old Navy or Walmart. Still no make-up. But the new clothes fit. Her attitude changed, too. She gradually grew more confident. Began participating more. I compared notes with some of her other teachers. Charity's schoolwork was improved in all her classes. I gave Charity a little extra help on occasion. More than some students; less than others.\n\nI made periodic calls to Chastity for the rest of the school year. And kept Brie informed. When I met with a once-again frumpy-looking Chastity in April, I had nothing but good things to tell her. Chastity thanked me for helping Charity. I waved it off as nothing. It was Brie's help that made the difference. Chastity left with a smile on her face. I marveled at how plain-looking she'd been again and concluded it was intentional.\n\nWhen school got out, Brie kept Charity on for the summer. Mrs. Carrier, a woman in her mid-sixties, had been ill. Charity had proven responsible and reliable. The kid had even gone so far as to buy a used ten-speed bicycle and rode the six miles between their homes that summer. \n\nAbout a week before school started, I ran into Charity and Chastity while grocery shopping. It was the first time I'd seen either of them outside of school. I was a little embarrassed when Charity practically knocked me over when she charged into me and hugged me tightly. 'Thank you, Mr. Berry!' she said excitedly. 'I'm in Mrs. Bosley's honors English this year. Plus Mr. McCormack's honors chemistry, Mrs. Taylor's Algebra II, and I got into Mrs. Critch's photography!' She went on for several minutes before she took a breath.\n\n'You don't have to thank me, Charity. Your hard work made the difference,' I told her.\n\n'Charity, why don't you go make sure Susie is finding the stuff her mother wants her to get,' Chastity said when Charity took a breath. She took off and Chastity turned her attention to me. 'Susie is Charity's scatter-brained friend from down the road. Thanks, Mr. Berry. I know you went out of your way for my sister. I thank Brie, too. Every time I talk to her.'\n\n'I'm glad it worked out. Charity just needed a break from the stress at home. She did it on her own. I knew she could,' I told her. 'All I did was sell my soul to my cousin. You did knew she's actually the devil in disguise?' I added grinning.\n\n'You made my life a little easier, too. I didn't have to worry about Charity catering to Mom's demands when I wasn't home. I haven't thanked you for that, Mr. Berry.'\n\n'Call me Evan, please. We're about the same age. Don't call me mister, except at school,' I told her. I was hesitant to ask but couldn't stop myself. 'How are things at home?'\n\n'Mom's employer told her to enroll in rehab or lose her job. She completed the program and now goes to an AA meeting every day, morning and evening on weekends. She's been dry for almost three months. She's still struggling and she's not fun to be around. But then she was dour and cranky before she started drinking. She's never been a feel-good kind of mom. Dad was the warm and cuddly one. That's why his disappearance has been so hard on Charity.'\n\n'How about you? Still going to school and working your butt off?' I asked.\n\nChastity twisted, making a show of looking at her backside and then smiled at me. 'I don't think I'm in any danger of it disappearing, but yeah, I stayed busy. I worked my two jobs this summer. With Charity at Brie's every day, I took a full load of summer courses, too. All I've got left is a semester of student teaching. I start Monday. It's a miserable commute. All the way down to the coast. Charity insisted on pitching in most of her earnings from the summer, so we've saved enough that I don't need the diner earnings this semester. Today was my last day.'\n\nI took a moment to share my own experience when I first stood in front of a class. 'I was scared witless the first week I was student teaching. But once I got over the nervousness, it was fun to finally be in front of a class, apply what I'd learned, and know I really could do it. Don't let them see you're nervous, though. They'll eat you alive. Good luck.' I started to move on with my shopping. But just as I was turning the corner, I heard Chastity call my name.\n\n'Evan? What are you doing for dinner tonight?' Chastity asked.\n\n'Nothing special. I'll probably grill a couple of hot dogs or a burger and make a salad,' I told her. \n\n'Will you let me treat you to dinner? To say thanks?' Chastity asked tentatively.\n\n'That's not necessary. And I'm not sure it's a good idea, Ms. Teagarden. Brie practically accused me of using her to get laid the night she met you.' Though I knew I said it, I almost didn't believe I was so stupid. 'Besides, I'm your sister's teacher. It wouldn't be appropriate.'\n\n'Chastity, please. What's good for the goose . . .' she smiled. 'Brie told me she questioned your motives at first when we talked about Charity watching Kevin for the summer. I assured her every conversation we've had was professional. And you're not Charity's teacher anymore. Besides, I said dinner.' The smile grew. So wide it threatened to strain her facial muscles. 'I never said anything about getting laid.'\n\n'Maybe I better run it past my cousin first. It could be hazardous to my health if I crossed her,' I responded, only half-joking.\n\n'You'll be okay. I already told her I might call and invite you to dinner. She said that would be nice of me.' \n\nI caved. Not that I really wanted to say no to begin with.\n\nChastity gave me her address, on Teagarden Road naturally, and suggested I pick her up at six. I had a softball game that would end at about five. I wanted to shower and change afterward. I asked if six-thirty would be okay. 'Dress casual,' she told me. 'And leave your money home. It's my treat tonight.' \n\nI arrived to pick up Chastity at the agreed upon time. The address was a small, two-story farmhouse, probably from the late-1700's. It needed paint and some other maintenance. There were no landscaping flourishes; no flowering shrubs or flowerbeds added color to the plain, white house. Large bluestone slabs led from the driveway to the front entry. Grass grew from gaps between the slabs. The lawn needed mowing but wasn't out of control. The front door was up two granite slabs that served as the front steps. There were two cars in the driveway. Both were more than ten years old. There was a large barn about fifty feet past the cars. It, too, had seen better days. It still looked solid but had a couple of missing boards. It was in more need of paint than the house. Only a few patches of classic barn red paint remained. The exposed wood was dark gray, weathered from years of exposure to the elements.\n\nAfter I knocked on the door, it opened on a woman I took to be Charity and Chastity's mother, though she didn't introduce herself. She was probably in her late forties but looked older. She greeted me with a gruff 'Hello, Mr. Berry,' and turned back into the house, leaving the door open. I stepped inside as she called Chastity. Her voice had the gravelly rasp of a heavy smoker or whisky drinker. Once inside the door, I could smell tobacco. What I could see of the house suggested it was clean and orderly, except for the overloaded coat hooks and assorted footwear haphazardly strewn in a little alcove just to the left of the entry.\n\nChastity came down from upstairs and smiled at me. She was dressed like she was going to work rather than out for a casual meal. She looked nothing like the frumpy woman I'd had two meetings with. Or even the attractive woman that showed up for dinner with Brie. She wore navy blue slacks that hugged her hips, betraying a very appealing figure. A pale green oxford blouse was unbuttoned enough that a bit more than a hint of cleavage showed. She wore a silver chain with a small opalized ammonite pendant that rested within the exposed cleavage. Sensible make-up and a new hairstyle transformed her face into one suitable for a fashion magazine cover. Simple low-heel black pumps completed the look. The pendant drew my eyes to her breasts. I managed to avert my glance before I embarrassed myself.\n\nShe greeted me breezily and asked if I was ready to go. I figuratively pulled my tongue back in my head in time to indicate I was.\n\n'I won't be late Mom,' she yelled out to her mother. 'Call if you need anything.'\n\nAs we walked to my car, I struggled for a moment before I could initiate a conversation. 'Where's Charity?' I finally asked. 'I thought I'd see her.'\n\n'She's watching Kevin tonight. Brie has a date,' she responded with a friendly smile. As I held my truck door for her she asked. 'I thought I'd wear this my first day in front of class. What do you think?'\n\nI closed the door and went around the car. I hoped to avoid answering. But she was looking at me when I got in, awaiting my response. I grinned at her and said, 'You look great!' Foolishly, I added, 'I'd only change one thing.' \n\n'Oh? And what might that be?' she asked with another grin. The smile suggested she might know what I was thinking, though I doubted it.\n\nI hesitated a moment, mentally flogging myself for not thinking before answering. And for saying more than necessary. Why couldn't I have just left it at you look great? 'I'd fasten one, maybe two more buttons on your blouse.' Chastity laughed. I breathed a sigh of relief. \n\n'Oh, I will. The extra buttons are for you. I'll keep the students' attention on their chemistry and physics lessons. I don't want the girls annoyed because the boys are ogling me and the boys distracted because they're fantasizing about me.' She was still smiling.\n\nMaybe this was a date.\n\nDinner was fun, though I hadn't anticipated fast food. We went to one of those over-priced burger chains that advertise never-frozen hamburger meat and ballyhoo the source of their current potato supply. I found I enjoyed Chastity's company immensely. She was smart, funny, engaging and very easy on the eyes. It was no surprise she had attended the same high school as Charity. She'd been all-state in soccer and softball during her high school tenure. I'd never looked at the school's athletic trophy case. When I later did, I quickly found Chastity and one of her teammates in photos of several all-state sports teams. The Chastity in the all-state soccer team photo was a very attractive young girl with great legs.\n\nIt was just dark when I pulled into the driveway to drop Chastity off. I was a little ambivalent about how to say goodbye. I thought a simple 'Thanks for dinner. I had a good time. Good night,' was appropriate. More tempting was, 'I had a good time. Can we do this again?' \n\nChastity resolved my dilemma. She leaned toward me and gently pulled my face toward hers'. She kissed me gently and backed away. When she saw I didn't resist, she kissed me again. With a passion I hadn't anticipated. When she broke the kiss, she said 'I'd like it if your next call wasn't about my sister.' Then let herself out of my truck and went into the house without a backward glance. \n\nI backed out of the driveway after watching her go inside. \n\nI talked to Brie first. She had no objection, though she made a wisecrack about being surprised it wasn't the very cute Charity I was asking about. I called Chastity several times over the next couple weeks, but something always kept us from getting together. I wondered if I should give up on Chastity, despite her clear signal of interest. \n\nBrie called on a Wednesday night and invited me over for an end of summer cookout on Friday night. \n\nI arrived a little late after getting caught up in correcting two sets of quizzes from that day. Chastity's car was in the driveway. She apparently had the night off for some reason. I was glad to see it, hoping I might finally get some time with her. There were about twenty people already there. I knew a few of them in passing but no one as well as Brie and Kevin. Chastity gave me a friendly hug when she saw me. Charity appeared, said 'Hi,' then vanished again. One of the guests was a boy I guessed was about fifteen. Someone far more interesting than last year's English teacher. Unfortunately, I didn't get much time with Chastity. She knew nearly everyone and got caught up in conversations. \n\nBrie introduced me to a man she had been seeing for over a year. He'd recently proposed, but she hadn't given an answer yet. I spent a good part of the night getting acquainted with him. He was a once-divorced psychiatrist that Brie had met at a hospital fund-raiser. It was his son that had Charity's attention. A couple that were friends of my parents were both shrinks. They were both likeable, if a little strange. Garrett seemed normal. Friendly, laid back, and wickedly funny. I liked him. And it was easy to see why Brie did.\n\nChastity left early. Charity wasn't happy about it. When I left a little after nine, I was surprised to see Chastity parking her car in front of mine. She was also disappointed we hadn't been able to connect. We stayed next to her car and talked for a while. We finally decided to go when Garrett and his son came out, said good night and drove off.\n\nI stopped for gas on the way home. When I got there, I was surprised to find Chastity parked in my driveway. She was sitting on the front steps waiting for me.\n\n'Hi, what are you doing here?' I asked. \n\n'I decided I didn't want to go home yet,' she told me. \n\n'Do you want to go somewhere? Carol's Pub is still open.'\n\n'Here is fine. Unless you don't want me to come in,' Chastity said softly.\n\n'By all means. Come in. It's only a little messy. My breakfast dishes are still in the sink.'\n\nI opened the door, stepped in to turn on the light and ushered Chastity inside. I gave her the nickel tour of the first floor but didn't take her upstairs to the bedrooms. The house was a tiny two-bedroom farmhouse built in the early nineteenth century. It had probably been very spartan living quarters when it was built. It had been updated with the basics, indoor plumbing, a central heating system and electricity, modern kitchen appliances. \n\nChastity turned down wine and beer but accepted an iced tea. I put on some music and we sat on the love seat to talk. I knew we had two things in common, teaching and Charity. We started talking about teaching.\n\n'How's your student teaching going?' I asked.\n\n'I think it's going well,' she began. 'Mrs. Bickley is great and gives me lots of constructive feedback. The students have mostly been easy to deal with. A few of the older boys tried to chat me up. Mrs. Bickley watched while I handled it and told me I did well. They won't try again.'\n\nI knew she was going to teach high school chemistry and physics. 'How are the labs going?' I asked. I remembered chem lab as chaotic when I was in high school. But that might just have been Mr. Hack, a good lecturer, but obviously less comfortable in the lab.\n\n'Mrs. Bickley spent quite a bit of time helping me get a grip on how to get the kids organized and focused. Labs are going well. Though not without some broken glassware.'\n\nWe spent the next hour talking with the conversation eventually moving away from teaching. I felt very comfortable with Chastity. And was growing very attracted to her. I had a sense she was waiting for me to kiss her. But I was still hesitant.\n\n'Can I use the bathroom before I go?' Chastity asked. \n\nI relaxed on the love seat until she returned. I started to get up, thinking she was ready to go but to my surprise, she knelt on the love seat, straddling my legs. She sat on my legs, wrapped her arms around me and pulled me into a kiss.\n\nAny concerns about the ethics of developing a relationship with the sister of a former and potentially future student dissipated as soon as I felt her breasts against my chest and her lips on mine. Things heated up quickly but didn't progress far. My shirt got unbuttoned. Her hands set my chest and back on fire. Her bra got unhooked and my hands found her breasts. She humped against me until we both were moaning into our kisses, exploring mouths with our tongues and breathing hard. But just before I came in my pants, she broke off what we were doing and stood. \n\nI stood to take her hand, thinking she wanted to move upstairs. But she pulled her hand away and shyly recomposed herself, turning her back to me. \n\n'I should go,' she said. She gave me a kiss on the cheek and was headed for the front door. 'Please call me, Evan. I know I'm busy all the time and you might not be able to see me as much as you'd like. But don't give up on me. Please?' Then she was gone. \n\nI called her the next day and we spoke for a few minutes. In fact, we spoke every few days until the next time we could get together on Columbus Day. Brie had to work so Charity had Kevin for the day. I got conned into taking Kevin and Charity apple picking. Chastity met us at the orchard but after the four of us had hot chocolates and cider donuts together, she left to take her mother to a doctor appointment.\n\nI enjoyed spending time with my cousin's son, who calls me Uncle Evan. He's a bright, energetic inquisitive kid with a goofy grin, an unruly head of dark hair and a cowlick he absolutely hates. I had hoped to spend at least part of the day alone with Chastity.\n\nPursuing Chastity was frustrating. Between her student teaching and weekend job, she had little free time. We both spent weeknights refining or reviewing lesson plans and addressing homework assignments. And though strongly attracted to Chastity, I still had some reservations about the ethics of seeing the older sister of one of my former students.",
        "During one of my rare free periods, I was in the teacher's lounge at the same time as a teacher I'd formed a friendship with and who had been my mentor my first year. She was already in the lounge and had her nose in an old Cosmopolitan when I entered. Megan Hawthorne was about thirty-five and had been teaching Spanish and Latin for a dozen years. She was smart and funny with colleagues, with a quick wit and a tart rejoinder always at hand. She was all business in class. She was also the object of more than a few schoolboy fantasies. Some of the faculty, too for that matter. She was divorced and dressed to be noticed. Nothing that would raise eyebrows with the administration. She had the body for it. She had to know some of the boys practically drooled when they looked at her. Frankly, I think she liked being the MILF they fantasized about, though she didn't have children. But I know she didn't do anything to encourage them.\n\n'Megan, can we talk for a few minutes?' I asked as I poured a cup of coffee. I grimaced when I took my first sip then dumped it in the sink. \n\n'Sure, Evan,' she responded, not looking up from her magazine. When I'd gone to her for advice in the past, it had never been anything earth-shattering. \n\n'I've got a problem and need some advice,' I told her. 'It concerns one of my former students.'\n\nThis time she looked up, but didn't look perturbed, only curious. 'Okay. What's the problem? I know you're not stupid enough to be romantically involved with a student. Or our conversation will be moving to Sheila's office.'\n\n'No, I'm not seeing a student. I've gone out with a former student's older sister a few times.'\n\n'How old is she? Or is it really he and you don't want to admit it?' she asked with a devilish grin.\n\nI laughed. 'It's she. She went to school here but isn't a recent graduate. She's about my age. I met it her last year during a parent-teacher conference.'\n\n'Is your former student still here?' Megan asked.\n\n'She's a sophomore. I had her last year. She's not in any of my classes this year.'\n\n'Are you serious about the older sister?'\n\n'I don't know yet, Megan. Maybe. I like her. And it's clear she likes me. But I'm not sure where it might go just yet,' I answered.\n\n'Well the sister is old enough to make her own decisions. Is the former student aware you're seeing her sister?'\n\n'Yeah. She's been with us a couple of times during social events. So, she knows something is going on. She hasn't indicated she has a problem. At least not yet,' I told Megan.\n\n'It's best you don't have the former student in your classes in the future. Notify the administration that the student shouldn't be assigned to you because of an outside personal relationship. Other than that, I don't see a problem,' Megan turned her attention back to her magazine, satisfied the topic was closed. \n\nI breathed a sigh of relief. I didn't have to worry about ethical issues. At least not as far as Megan was concerned. I trusted her advice. She hadn't steered me wrong before. \n\n'Who's the former student?' Megan asked, again leafing through her magazine.\n\n'Charity Teagarden,' I told her.\n\nMegan closed her magazine and put it down. She was grinning widely. 'Charity Teagarden? You're seeing Chastity?' she asked, sounding incredulous.\n\nI wondered what the grin was all about. 'Yeah, is there something I should know?'\n\n'No,' Megan laughed. 'I had Chastity in Spanish class all four years she was here. Nice kid. Pretty. Smart. Good athlete. I think she was all-state in soccer and softball. It's just . . .' she stopped herself before she finished.\n\n'Just what?' I asked, wondering memory Megan had dredged up.\n\n'Well, it's just she was so quiet. A bit of a loner except for her involvement in sports. She was whip smart but often distracted. I never heard of her dating or even showing interest in any of the boys in school with her. Not that they didn't try. While she was here, I was still chaperoning school social events. She didn't go to junior or senior prom. Or any of the student social events. In fact, outside of the soccer and softball teams, she didn't participate in any school activities. And if I recall, she didn't play soccer or softball her senior year. Some of the teachers thought she might be struggling with her sexuality.'\n\nI didn't betray anything about Chastity's and Charity's home life. But I thought I understood her absence from school events. Senior year must have been especially difficult at home for Chastity to give up sports. Being an all-state athlete as a senior might have led to a sports scholarship. And if the events at my house after Brie's cookout were any indication, Chastity was sure of her sexual preferences. I went to my next class far more at ease.\n\nChastity and I spoke regularly and even managed to take a few weeknight meals together over the next month. Some nights we corrected homework together at my kitchen table. Though some affectionate clinches occurred, none got as heated as the night of Brie's party. In mid-November, Chastity told me her mother was going on a retreat with some of her AA friends for the Thanksgiving weekend. Charity and Chastity were invited to Brie's for Thanksgiving dinner, as was I. But I hadn't seen my parents since the previous August. My mother would have my head at Christmas if I didn't show up for Thanksgiving. I invited Chastity to come with me, assuring her we'd be home the same night. It would be late, but she wouldn't miss her weekend work shifts. I knew how important they were to her.\n\nBrie encouraged Chastity to go with me. I told my mother I was bringing a girl but that she shouldn't get too excited. It was far too soon for her to start planning to spoil grandchildren.\n\nCharity would spend Thursday night at Brie's. And would watch Kevin when Brie went to work Friday. I thanked my cousin and told her I owed her. She just smiled impishly, which scared me a little. But I decided I didn't care. \n\nI picked up Charity and Chastity early Thanksgiving morning. I dropped Charity off then headed for my parents' house. Chastity wore a dress that ended above the knees for the first time that I'd seen. It wasn't anything that would distress my mother. But those great legs were on display for the entire ride. I'd started getting used to seeing a Chastity that wasn't disguising herself in frumpy clothing. She wasn't dressing to draw attention to herself. She just wasn't trying to be invisible.\n\nIt was a cold and clear day. An early season storm had dumped nearly a foot of snow the previous weekend, but the state and town crews had the roads in good shape for the holiday. The traffic wasn't bad as we drove through small towns on lightly traveled secondary highways. Mom must have been watching for us. She came out of the house and met us in the driveway. I got a quick hug and a kiss. Then got ignored like I wasn't there. She was all smiles, warmth, and welcome when she introduced herself to Chastity. So much for tamping down my mother's grandchild fantasies.\n\nChastity was overwhelmed at first. Except for my father, my extended family are all huggers. My father isn't an ogre by any means. Just a bit more reserved than the rest of the clan. But Chastity quickly got comfortable and was drafted into helping with meal preparation. My mother didn't need help. It was her way of getting acquainted with new friends. The day went well. As always, there was far more food than the crowd could consume. \n\nWhen Chastity and I announced we had to get going, Mom brought out a bag of leftovers for us, mostly desserts she didn't want my father to eat. She gave Chastity a hug and turned to me, her face aglow. She whispered, 'I like this girl, Evan,' into my ear as she hugged me and kissed my cheek. My father smiled and shook my hand before I left. He hugged Chastity, which was unusual. Otherwise, he didn't say much more than goodbye to us.\n\nIt was well after dark, almost nine when we were finally in the truck headed for home. My grandfather gave me his '68 Ford pickup truck as a college graduation gift. He bought it new and maintained it like it was a Rolls Royce. It still looked new when he gave it to me. Chastity sat next to me on the bench seat, held my arm, and leaned against me as I drove. \n\n'Your family is nice,' she told me with sigh. 'My sister and I are the last of the Teagardens. We have some family on my mother's side, but they don't live near here and don't stay in touch. Everyone else is gone,' she added wistfully. 'I've never been to a family holiday like this one. Thank you for inviting me. It was nice.'\n\nWe didn't talk much on the drive. Chastity slid away then rested her head on my lap. When she remained still for a while, I thought she fell asleep. Until her hand moved along the inside of my thigh, just above my knee. As she rubbed my thigh, I began to get aroused. I wasn't sure if that was what she had in mind. But it felt nice and I wasn't inclined to stop her. She'd figure it out soon enough, if she didn't already know the effect she was having. Her head was resting just above my thickening cock.\n\nIt wasn't long before I was fully erect. There was no way Chastity didn't know it. My erection was pressing against her cheek. She continued to rub my inner thigh until I adjusted my position in my seat a bit. It didn't change anything other than shift the pressure points on my butt slightly. Chastity slid her hand farther up my leg and lightly rubbed my now obvious erection. She turned her head slightly and nibbled on the head gently, the material of my chinos protecting me from direct contact with her teeth. \n\nShe sat up and reached over to undo my belt. She unhooked the waist and struggled with the zipper until she managed to get it down. She leaned against my shoulder and slid her hand inside my pants but not inside my underwear. I squirmed a little, wanting to relocate my cock, which was trapped in the right leg of my chinos. Chastity smiled at me and relocated it for me, so it was pointing up. If felt much better freed from the confines of my pants leg.\n\nWhile Chastity leaned against my shoulder, she rubbed her hand up and down the length of my erection. I was on the brink of going crazy. I looked for a place to pull over but didn't find a suitable place to stop. Chastity continued to press against my erection, sliding her hand deliciously up its length, only the jersey material of my boxer briefs separating her hand from my erection. As my breathing quickened, her hand moved faster and held me a little tighter. \n\n'Chastity, I'm going to cum soon if you keep that up,' I told her through gritted teeth as I forced myself to focus on driving the winding secondary highway. Fortunately, the road was nearly devoid of traffic.\n\n'I know,' she whispered softly. 'I want you to.'\n\nMy breathing continued to quicken until I was nearly hyperventilating, Chastity moved her hand faster. When I finally felt the familiar tingle in my testicles, I grunted. Chastity gripped my cock even tighter as she stroked. Her thumb moved back and forth across the crown as she rapidly massaged my shaft. When I grunted again, my cock let loose a stream of ejaculate. Pins and needles engulfed my shaft, sac and heat shot up my spine. Fortunately, we were on a straightaway. I don't think I could have navigated any curves as a jolt shot through my body with each pulse of ejaculate. \n\nWhen my orgasm abated, my breathing gradually returned to normal. Chastity continued to rub my softening erection, seemingly unconcerned about the massive wet spot being absorbed and spread through the front of my underwear. I glanced over at her. Her smile beamed at me. She bent down and kissed the end of my cock through my wet underwear. She nibbled on the head for the briefest moment, then sat back up and leaned against me. We finished the drive like that. Her head on my shoulder. Her hand caressing my cock through underwear growing stickier as I drove.\n\nI wanted to return the favor and reached over to caress her leg. But she held my hand, stopping my progress up her thigh. 'Not tonight,' she said softly. 'Another time. I just wanted to do something for you tonight.'\n\nWhen we finally pulled into her driveway, I put my truck in park and set the parking brake. I hugged her tightly and finally got to kiss her. \n\nAfter we held each other for a few minutes, she moved away from me. 'I should go inside now,' she said softly. 'It's late. I need to get to bed. I'm working the lunch and dinner shifts tomorrow.' I started to fasten my pants so I could walk her to the door, but she stopped me. 'Stay, just watch until I'm inside and the door is closed.' She kissed me again, got out of the car, and went inside. I watched her go inside, staying in the driveway until she was inside and turned the front door light off.\n\nThe weeks between Thanksgiving and Christmas passed in a blur. I didn't see Chastity again until the end of the first full week of December, though we talked for at least a few minutes most nights. The school held a semi-formal dance for students each year just before Christmas break. I got to chaperone. Charity attended the dance. Brie dropped her off. Chastity was to bring her home. The dance ended at eleven. \n\nI spent the evening monitoring the kids. Breaking it up if a couple got too risqu\u00e9 while dancing. Making sure they didn't sneak out to the parking lot to drink or get high. Or wander off into the school building for some reason. I hated being a buzz kill because I still remembered being a high school student. But I had a job to do. Two girls and one of my colleagues asked me to dance. I politely declined. It was a long night.\n\nChastity arrived a little early and came inside to say hello. She smelled like garlic, bread, and marinara sauce standing next to me. It made me hungry. We got stares when Chastity hugged me. I guessed they were checking out their competition, which I found amusing.\n\nWhen the deejay announced the last dance at ten-fifty, Chastity pulled me onto the dance floor. She got a little round of applause for getting me out there. We talked for a few minutes before she left to take her sister home. I remained behind to help supervise the students who volunteered to take down the decorations and clean.\n\nChastity's student teaching gig ended the following Tuesday. We had dinner and did some Christmas shopping together Wednesday night. I had high hopes for the Christmas break. Chastity was working the weekends but neither of us had commitments during the week. The weekend before Christmas didn't go well for the Teagarden girls.\n\nChastity came home from work the Saturday before Christmas between her lunch and dinner shifts. Her mother was passed out on the floor, holding a nearly empty bourbon bottle. Fortunately, Charity had left early that morning to go Christmas shopping with Brie. An ambulance took the unconscious woman to the hospital where she was admitted. Her blood alcohol level was so high she might have died if Chastity hadn't come home. After she was out of danger, she was moved to a rehab and psychiatric ward where she would remain until after the new year.\n\nThe family always gathered at my parent's for Christmas. Since Beatrice Teagarden wasn't being allowed visitors during rehab, we invited Chastity and Charity to go with us after I discussed it with my mother. The Berry clan festivities were two-day affairs on Christmas Eve and Christmas Day. We'd be there at least overnight. I thought Chastity would have to work, but her restaurant was closed between Christmas and New Year. Chastity accepted the invitation to my parents'. Charity, a typical teen, was more like, 'Yeah, whatever.' Brie and I did a little extra Christmas shopping to make sure Charity wasn't left out when gifts were opened. We booked two rooms at a motel near my parents' home for Charity, Chastity and Brie. Kevin was spending Christmas with his father. I'd be in my old room at my parents' house.\n\nMy mother took Charity under her wing as soon we arrived. My mother did her best to make Charity feel like part of the family. I helped my father and uncle get the sleigh ready for use after a few minor repairs. It basically sat untouched between Christmas festivities. My aunt Debbie and her husband Bob arrived with their kids shortly after the sleigh repairs were completed. Their youngest daughter, my cousin Dina was fourteen. Charity and Dina quickly became inseparable. \n\nWe had a pleasant day. My grandfather drove the sleigh, everyone getting a chance to pile in at some point for a ride on the trails on my parents wooded thirty acres and some of the adjacent state forest. Everyone had too much to eat. Of course, a few had just a bit too much to drink but had enough sense to understand someone else should drive. \n\nAt the end of the day, Dina and Charity wanted to have a sleepover together. Everyone was gathering at my parents' house in the morning for breakfast, the gift exchange, and Christmas dinner. I gave up my room to them when Chastity, my mother, and Dina's parents okayed the sleepover. That left me without a room until Brie offered to bunk with Chastity. I took Brie's room.\n\nI had a couple beers that evening so Brie drove us to the motel. Brie and Chastity checked us in while I unloaded the luggage. Our rooms were both on the second floor. I carried the ladies' luggage up to the second-floor landing, got my room key and a hug from Brie, then a hug and a kiss from Chastity. I ran down the stairs to get my own bag while they went to their room. \n\nI usually slept in a tee shirt and a pair of gym shorts. But for some reason, I turned on the television and stretched out to watch the end of a John Wayne movie before getting changed for bed. I was drifting off when there was a knock on my door. \n\nIt was after ten. I wondered what was up as I went to the door. I looked through the peephole and saw Chastity, looking around nervously and hugging herself against the cold. I opened the door and ushered her in quickly; she wasn't wearing a coat.\n\nI closed the door and started to ask what she wanted. I never got the words out. Chastity wrapped her arms around my neck and kissed me passionately. It left me breathless.\n\nWhen we stopped to catch our breath, Chastity asked softly, 'Can I stay with you tonight?'\n\n'Absolutely,' I answered. 'What did you tell Brie?' I don't know why I asked.\n\n'I didn't tell her anything. I was fidgety while she started getting ready for bed. Brie asked if I was okay,' Chastity told me. 'I started to tell her I was fine, but when I looked at her, she was smiling at me. She asked if I wanted to be in your room instead. When I hesitated to answer, she told me to go to you. She said she likes us as a couple.'\n\n'Is this what you want, Chastity?' I asked. Despite the time we spent together, I was still unsure where our relationship was headed.\n\n'Yes, I do,' she responded quickly. 'It'll be easier now. I'm done with school. I haven't told you yet, but I start work at Lincoln Park High School after the holidays. One of their chemistry teachers is going on maternity leave. It's only for the rest of the school year, but it's a start. They told me there might be an opening next year. I'll keep my waitress job until I get something permanent, though.'\n\nI held her close and kissed her gently. Her response was unexpectedly intense. Chastity reacted like a long, slow burning fuse had finally reached the powder keg. I had intended to go slow, to explore where she was willing to go. But when our lips met, I found hunger. Passionate, desperate hunger.\n\nChastity's tongue probed at my lips. When I separated them, her tongue entered my mouth and sought out mine. I probed the warm, wet depths of her mouth, while she explored mine. She groaned into our kiss, the vibration reverberating along my tongue and cheeks. Her hands were flying down my shirt as she undid the buttons. My belt was unbuckled, the waist unbuttoned and the zipper down in a flash.",
        "I broke our kiss to catch a breath. Chastity was single-minded. Her foremost desire was to get us out of our clothes as quickly as possible. She was almost wild-eyed. I'd never seen her like this. No hint that Chastity harbored this level of desperate desire.\n\n'Whoa, can we slow down a little?' I asked breathlessly. 'We've got all night.'\n\n'I don't want slow, Evan. I'm on fire and I want you . . . No, I need you now,' She said breathlessly as she began shedding her own clothes.\n\nI watched in awe as she pulled her sweater over her head. Her skirt was on the floor a moment later, panty hose and panties inside it. She quickly stepped out of the pool of clothing on the floor. I reached out to unhook her bra, but she beat me to the clasp. It soon joined the rest of her discarded clothes. Once she was unencumbered of her own clothing, she turned her attention back to mine.\n\nWhile I admired firm, white breasts topped with hard, erect nipples, Chastity pushed my shirt off my shoulders and pulled it down my arms. I leaned forward to kiss her, but she was focused on pushing my jockeys down. She fell to her knees and tugged at the back of a knee. When I lifted my foot, she tugged my leg free of my clothes, then repeated the process with my other leg. \n\nAll this took place so fast, I had barely begun to get hard. My cock was swelling but still wasn't fully erect. Once my feet were free of my pants, she grasped my only remaining article of clothing as she stood up. My tee shirt went over my head and fell away somewhere. Finally, Chastity took a step back. There was fire in her eyes. She looked like she might devour me where I stood.\n\nShe stepped forward again and embraced me. Squeezing hard. Pulling herself against me so tightly I thought she might force the breath out of me. 'Evan, I've waited a long time for this. It's taken a long time to find someone I wanted to be my first. I don't want to wait any longer,' she whispered huskily. 'Please take me to bed.'\n\nI was flabbergasted. The Chastity I saw in the trophy case was a pretty girl I was sure garnered her share of attention from the boys at school. Her appearance had been intentionally plain when we met, hiding her from male attention. I suspected her responsibilities and concerns for her sister and her mother meant she didn't get much opportunity to date. But a virgin? Despite what Megan had told me about Chastity, the idea of it never entered my mind. \n\nWhen I started to speak, Chastity put her finger to my lips to silence me. Once she was sure I had relented, she leaned in to kiss me again. I decided it was best to let Chastity set the pace. It was a fast one. There was no slow build-up of her arousal. While we embraced, she moved us toward the bed. We landed side-by-side. Chastity's hands seemed to be everywhere at once. Caressing. Exploring. Pulling. Pinching. Squeezing. Stroking.\n\nShe soon grasped my erection and rolled onto her back, pulling me with her. Her legs came up and spread wide, she guided the head to her groin and rubbed it against her clit. She gasped at first contact then guided me to her entrance. We were moving so fast it was almost dizzying. Chastity thrust her hips at my cock and the head penetrated her. She was wet. Slick and hot. She rotated her hips again and dug her heels into my back. My cock slowly entered her, engulfed by her tight, hot depths. \n\nChastity gasped and moaned contentedly. But slow was not what she wanted. 'Evan please don't hold back. Just go,' she pleaded.\n\nI drew back and pushed into her. Not slowly, but I didn't drive into her like we were already approaching release. But Chasity wanted faster. She was wild-eyed with desire. Her hips bounced up at me. Her heels kicked against my buttocks.\n\n'Faster! Please, Evan. Just fuck me hard and fast,' she pleaded.\n\nThe next minutes were exhausting ecstasy. We were both soon covered with a sheen of sweat. I drove my cock into Chastity as fast as I could. Her hips met every thrust. Her face contorted in a grimace, bright pink from exertion and passion. Two loud cries led me to believe she got off twice. This wasn't making love. It was too wanton. Desperate. It was ravenous desire and need finally being sated. \n\nChastity's hips came up off the bed, slamming into me with surprising force. She held her breath. I felt her short fingernails dig into my flesh as she squeezed my love handles hard. Her eyes were tightly shut. Her face even more contorted than just a few breaths earlier. She was bright pink from the top her chest to her hairline. The muscles in her neck strained. The skin on her neck looked like it was vibrating. Finally, she let out her breath. It was accompanied by a high-pitched, ear-piercing cry. A spasm squeezed my cock. Her body thrashed and shuddered out of control.\n\nFinally, Chastity pushed me off. She rolled onto her side. Her body curled into a fetal position. She jerked, twitched, and shook. I fell onto my back, gasping and overheated. After a moment, I rolled toward Chastity and spooned with her. I still hadn't cum. My erection, wet with her secretions pressed against her. I held her and pulled her close. I repositioned my erection so that it was between her legs, pressing against the gap between her labia. From my side against her, I could see the hotel room alarm clock. Less than fifteen minutes had passed since Chastity knocked on my door.\n\nChastity shivered when she felt my erection slide between her legs and across the surface of her sex. She turned her head toward me, bewildered. 'You're ready again? Already?' she asked shakily, her nervous system still on edge. 'Do you mind waiting a little bit? My body needs to calm down a little.'\n\nI laughed softly. 'No, I'm still ready. But I can wait.' I was edgy, frustrated, and wanted to finish. But I couldn't bring myself to say so.\n\nChastity frowned as she rolled over to face me. 'Did I do something wrong?' I could see she was upset.\n\n'No, you did everything right. I just needed a little more time. You were so fired up before we started. More excited than I imagined possible.' I kissed her softly. But the frown stayed on her face.\n\n'Evan, I've been wound up for weeks. No make that years. I got much worse after I kissed you the first time. After Brie's cookout I had an orgasm just from rubbing against you,' she blushed. 'My vibrator has been getting a lot of use. It provides some relief but there's no intimacy. I like this was far more. I got to share it with you.'\n\nI was having trouble following the conversation. Chastity was playing with my erection. Lightly running her hands along the length of my still hard, wet erection. 'Can I try something? I've never done it before. If you don't like it, I'll stop. But I want to try.'\n\nI nodded my assent, hoping I already knew what she wanted to try. I wasn't disappointed.\n\nChastity slid down the bed and nuzzled up against my leg. While her hands gently caressed my shaft and balls, she kissed the tip of my cock. When I felt the rough surface of her tongue on my glans, my body tensed. When I looked down at her, she smiled up at me.\n\n'It seems I'm doing something right,' she giggled softly. 'How about this?'\n\nI gasped as my crown disappeared between pursed lips. I felt her tongue swirl around the head as her cheeks collapsed from the suction she applied. My back arched involuntarily, and another inch of my shaft disappeared between her lips. Chastity got on her hands and knees and straddled my right leg, pressing her groin to my shin bone. I watched in tortured pleasure as her lips slowly slid down. She stopped when her gag reflex triggered a cough, forcing her to back off a little.\n\nChastity spent the next minutes lavishing attention on my erection, keeping me close to the edge. When she had to rest her jaw, she licked and kissed and caressed every part of my cock and balls until she could take me into her mouth again. I don't know how long she tormented me. But I didn't want her to stop. I was almost disappointed when the tingling sensation began. \n\nChasity was swirling her tongue around the head of my cock when the sensation began to spread. I groaned loudly as the tingling intensified. I wanted to warn Chastity I was going to cum but couldn't get the words out. It didn't matter. She figured it out. Maybe it was my groaning. Or because my legs began to shake. Or that my body was as stiff as a stone slab. Or that I stopped breathing. Regardless of what might have tipped her off, Chastity rolled onto her side with her head on my belly. As my cock slipped from between her lips, she slid one arm under my leg and held on tightly while the other hand gripped my cock and stroked rapidly.\n\nMy body convulsed at the orgasmic burst accompanying the first jet that shot from my cock. It was quickly followed by a second ejaculation and full-body spasm. Chastity kept stroking through several more, less intense spasms. I felt the warm fluid pooling on my abdomen as her strokes slowed with the decreasing flow from the end of my cock.\n\nI felt her sit up. She fondled me gently as my cock wilted slowly and I tried to teach myself how to breathe again. She was looking at me when I opened my eyes. There was a line of ejaculate running from her right cheek, across her nose, onto her left cheek. She wore a smile of contentment. \n\nWhen Chastity saw my eyes open, the smile grew wider. 'Are you okay?' she asked softly. I could only nod. 'I wanted to see you cum,' she continued quietly. 'I hope you don't mind.' A moment later, she got out of bed. 'I'll be right back.'\n\nI watched her move gingerly across the floor toward the bathroom while I tried to collect my wits. I heard the door latch catch when it closed. I heard the toilet, running water and then the door opened. I watched her cross the room toward me, as she dried her face with a hand towel.\n\n'Stop,' I said after she took only a few steps. She stopped, a look of confusion on her face. 'I want to look at you Chastity,' I said as I rolled onto my side and propped my head up.\n\nShe smiled and stood in place, threw a hip sideways and struck an exaggerated pose. I couldn't suppress an impulse to laugh. She threw the towel at me. 'What's so funny?' she asked.\n\n'Just the way you posed was funny,' I told her. 'It was so unlike you. I thought you'd just stand in place while I looked. Maybe blush a bit.' She did blush after I said that but she stayed where she was and spun around so I could see all of her.\n\nHer auburn hair was tousled and damp but still gleamed and flowed like fine silk when she moved her head. Blue eyes, a spattering of freckles, a pert nose, soft lips and high cheekbones combined to construct an attractive face. Her graceful neck sat atop broad, strong but still feminine shoulders. I absolutely adored her breasts which I guessed were a B, perfectly proportioned to her slender, athletic body. Half-dollar sized, slightly oval areolae were light brown and puckered with little bumps. Her nipples were pointed and darker than the areolae. Her torso narrowed to her waist which flared out to slender hips. Long, lithe, legs had a well-defined musculature that still betrayed the athlete she'd been. I could almost picture the power they generated as she turned on a pitch or took a shot on goal.\n\nI felt myself begin to get aroused again as I looked at her. I hopped out of bed and crossed to her and embraced her, pulling her to me.\n\n'Have you seen enough?' she asked flirtatiously as I held her. \n\n'Not nearly,' I told her softly. Her embrace tightened.\n\nI picked her up and carried her to bed. We didn't get much sleep. We spent the rest of night unhurriedly exploring each other. By the time we fell asleep it was nearly dawn. And I was more intimately acquainted with Chastity than I'd ever hoped. More than I'd been with any woman. \n\nI woke when I heard pounding on the door. But it wasn't the front door. It was on an interior door that led to the adjoining room. I quickly found a pair of shorts and my tee shirt and pulled them on. I opened the door and found Brie glaring up at me. I didn't realize she and Chastity had been assigned the adjoining room. I briefly wondered why Chastity had come to me by way of the front door.\n\n'Are you two going to get up sometime today?' she asked. 'It's going on ten. Checkout is eleven. I'm surprised your mother hasn't called wondering where the hell we are.'\n\nI grinned sheepishly at Brie. She was obviously ready for her day. She looked and smelled fresh out of the shower. Dressed in her Christmas Day best. Including one of cheesiest holiday sweaters I'd ever seen, a bulky red knit with a green felt silhouette of Santa in his sleigh behind his reindeer, flying through a storm of little silver sequins. \n\n'Oops. I'm sorry Brie. I neglected to set an alarm.' We were already late. Breakfast was at nine. Berry clan gift exchange traditionally began by ten-thirty.\n\n'Chastity can shower over here while you get ready. C'mon Chastity.'\n\nChastity jumped out of bed, wrapped in a sheet and bolted past me into Brie's room. I gathered her clothes and carried them into Brie room and dropped them on the undisturbed bed.\n\nChastity had already gathered her clothes for the day and was heading for the shower. She dropped the bed sheet and closed the door behind her, giving me a little wiggle of her exposed bottom.\n\nBrie looked at me with an amused expression. 'Move your ass, Evan. We're already late. I'm not even gonna mention how little sleep I got.' Her smile grew wide. 'I'm sure you didn't get much sleep, either. But somehow, I doubt I'll hear either of you complain.'\n\nWe were ready to go in record time, in Brie's car and on the road before ten-thirty for the short drive to my parents'. Chastity sat in front and put the final touches on her hair as Brie drove. On the way, I saw I had three voice messages from my mother's cell, beginning at seven AM. My phone hadn't even peeped. I didn't bother to listen to them.\n\nImmediately upon entering, we endured a good-natured round of ribbing from the assembled troops for delaying the gift exchange. Chastity, Brie and I quickly grabbed bagels and coffee and settled in the living room for the traditional gift exchange. Charity and Chastity sat next to me. Charity grinned at me playfully. I wondered if she suspected how her sister had spent the night. From across the room, my mother smirked at me like she suspected I had been into some mischief.\n\nBrie and I had assembled a joint gift for Chastity. We knew she'd need clothes for the interviewing she'd be doing. Two skirts, a couple of blouses, a jacket that coordinated with the skirts, and a pants suit, all found at clearance prices would now give her several additional combinations to wear at work. I gave Brie an ammonite pendant and necklace like Chastity's because Brie admired it and commented on it several times. Charity had become an avid cyclist and rode her bike any time the roads were clear, regardless of temperature. Brie gave her thermal tights and a winter cycling jacket. I gave her a winter cycling helmet, thermal socks, winter cycling gloves, and goggles. Chastity and Charity gave me a new computer bag. The one I carried to school was from high school and had served me through college. It was still serviceable but barely. Chastity had bought a nice picture frame and Charity had filled it with a collage made up of photos she had surreptitiously taken of Brie and Kevin. Brie gave me three weekday passes to my favorite ski area and three days in a slope-side condo during February break. I quickly decided I needed to teach Chastity to ski.\n\nThe traditional Berry Christmas crown roast dinner was as enjoyable as ever. Everyone pitched in with cleanup of some sort and began to get ready to return home after dessert. Brie took Charity home with her. She had to work the next day. Kevin would be getting home from his father's early the next morning.\n\nChastity was jazzed on the way home. She said she missed her mother, but it had been the best Christmas she and Charity had enjoyed since before their father disappeared. When I approached the intersection where I had to turn to take Chastity home, she told me to go straight. Toward my house. I glanced at her quickly as I did.\n\n'I don't want to spend Christmas night alone. Do you mind if I stay with you, tonight?' she asked, coyly.\n\n'Of course, you can stay with me tonight.' There was no need to talk the rest of the way home. \n\nThe best Christmas I'd ever had was only getting better.\n\nThe next year was eventful. Chastity and I grew close. We spent a quiet, if passionate, Valentine's Day together. Celebrated our birthday's together. Her mother managed to get her act together and had remained sober after her last stay in rehab. Beatrice Teagarden remained unpleasant. But Chastity seemed happy that her mother seemed dedicated to remaining sober. The teacher Chastity filled in for at Lincoln Park decided not to return. Chastity was offered and accepted a three-year contract. \n\nThe Teagarden women got a shock in mid-July. One that got the whole town buzzing. A real estate agent and client were walking a wooded property and spotted a faded, blue cloth peeking out from under old leaves. They didn't think anything of it; there was other trash on the site. Until they passed closer to it on the way back to their car. The blue cloth was a shirt that contained human remains. They contacted the state police. \n\nThe responding troopers called in state police investigators. The right tibia, fibula, and foot along with the right shoe were initially missing. They were found a few hundred yards away on an adjacent property, apparently carried off and gnawed on by an animal. The remains were sent to the state medical examiner and eventually identified as Joshua Teagarden. No evidence of foul play was found. Condition of the remains was consistent with the time of Joshua's disappearance. Because only a skeleton remained, no cause of death could be determined. Speculation was that Joshua Teagarden may have suffered a health issue, perhaps a mild stroke, parked his car and wandered aimlessly until he collapsed. The site where the body was found was only about a mile from where his car was found.\n\nMy mother extended invitations to Charity, Chastity, and Beatrice for the following Thanksgiving. Beatrice wasn't easy to like but she had her good qualities. She seemed to get on well with my mother. She was leery of me at first but gradually accepted that her daughter and I were a couple. When Thanksgiving went well, they were invited for Christmas, too. It was obvious my mother was already treating Chastity like her future daughter-in-law. And by that Christmas, I thought she was right.\n\nIn late January, I caught Charity in the hallway at school and pulled her into my classroom alcove to enlist her help. I quietly asked her if she knew what size ring Chastity wore. She showed me one she was wearing and said it had been Chastity's and still fit her. I hadn't expected her to ask why. When she did, I told her I wanted to buy a friendship ring for Valentine's Day.\n\nShe didn't disguise her exasperation. 'My sister is in love with you, Mr. Berry,' she told me bluntly. 'You're buying a friendship ring? She's going to think you're a complete asshole. And I will, too.' She said it loud enough for everyone in the hallway to hear, and many turned their heads in our direction when they did.\n\nMy first thought was though she was a positive influence on Charity, Brie's endearingly abrasive personality traits and acerbic wit were being imparted on the girl I hoped was my future sister-in-law. Outside school she called me Evan and could speak to me however she wanted. But we had agreed, in school it was Mr. Berry and an appropriate student-teacher relationship was to be maintained. I couldn't be seen to just accept having a student call me an asshole, even indirectly.",
        "'That's uncalled for, Charity. If you talk to me like that again, you'll be in detention,' I told her in a conversational tone. Then whispered to her, 'Don't say anything to Chastity. Please?'\n\n'Okay. It's you're funeral. But don't say I didn't warn you.' She took her ring off and handed it to me then turned on her heels emphatically and crossed the hallway into her next class. She stayed annoyed with me for the next few weeks. It never dawned on her that an engagement ring is a kind of friendship ring. I wasn't going to tell her.\n\nI went to a jeweler that afternoon and wiped out my vacation savings. I bought a nice, if modest engagement ring. I was calm and confident in the store. It wasn't until I got home with it that I began to fret about it. Despite what Charity had said, I still feared rejection was a possibility. Chastity and I had never discussed getting married or living together. Chastity never spent the night at my house again after Beatrice was discharged from rehab. Fortunately, an enthusiastic physical intimacy was an integral part of our relationship.\n\nBefore I got a chance to ask Chastity if she could make time for dinner on Valentine's Day, she casually asked if we would be doing anything. It was a weeknight so it would require we both get ahead of our lesson plans and postpone addressing any homework we had collected that day. She suggested dinner at an Italian restaurant that made a big deal of Valentine's Day. Roses and hearts everywhere. Romantic music played by a strolling violin player. A special menu.\n\nChastity picked me up for our Valentine's Day date. She just smiled sweetly at me when I complimented her appearance. All I could see of Chastity was her beautiful face, hairdo and the mid-calf length winter dress coat she was wearing. A neatly folded blue silk shawl rested on the cupholders between our seats. \n\nI had no idea what I was talking about.\n\nChastity bought a car and picked it up after work a couple days before Valentine's Day. I hadn't seen it yet and she wanted to show it off. I was impressed. I knew what she budgeted and quickly saw she'd done well. Her four-year-old small SUV had almost all the bells and whistles -- heated seats, outside mirrors, and steering wheel. Leather seats with power adjustments. Tinted windows made it difficult to see into the car but didn't obstruct the view out. All wheel drive to make winter driving manageable.\n\nWhen we got to the restaurant, I was delighted when I helped Chastity take off her coat at the coat check. I dressed for the occasion. But Chastity dressed to make an impression. She wore a shimmering sapphire blue silk cocktail dress the same hue as her eyes. A subtle paisley pattern barely a shade lighter than the rest of the fabric shimmered with every movement. A slit up one side stopped mid-thigh. Her hairstyle hadn't changed since she began teaching. But then her hair was always perfect. It was the most attractive feature on the frumpy woman I'd first met. I helped her drape the blue lace shawl over her shoulders before we were led to our table.\n\nWe sat at a table near the huge fireplace in the center of the restaurant. The staff was dressed in crisply creased black pants and starched white shirts emblazoned with red hearts. The cherubs on the ornate Italian Renaissance-style ceiling fit right in with the theme. The strolling violin player didn't intrude on diners to solicit tips while he performed.\n\nThere was no menu for dinner. A special five-course meal of selections not offered on the regular menu was served every Valentine's Day. Most were dishes I'd never heard of. I enjoyed the food immensely and complimented Chastity on her choice of restaurants, even if we both thought the theme tacky and overdone. \n\nMy plan was to propose over dessert. It didn't work out that way. Chastity got up as soon as the main course was cleared. She knelt on the floor next to my chair and took my hand. Naturally, a decked-out auburn-haired beauty on bended knee in the middle of a busy restaurant immediately attracted attention from all directions. I was flabbergasted but certain I knew what was coming. I was also embarrassed that she had beat me to proposing. But I thrilled that I knew what her answer would have been.\n\nIn a clear voice more than a dozen nearby tables could hear, she asked, 'Evan John Berry, will you marry me?'\n\nMy brain, for some reason, ceased functioning. Comments from several directions overwhelmed me as I tried to control my emotions:\n\n'Why didn't you do that?' I heard one man say with a laugh.\n\n'There's a lucky guy,' I heard from a female voice.\n\n'Another woman said, 'What an idiot! Why's leaving her hanging? You think he wants to say no but doesn't dare?'\n\nI couldn't answer. My throat had dried up so suddenly I barely avoided a coughing fit. I couldn't talk but at least my brain began working again. I reached into my jacket pocket and took out the black velvet box holding the engagement ring. I snapped the top open. Then I held my breath in panic as I watched the ring pop out of its nest and go flying.\n\nChastity apparently hadn't lost her fielding skills. The former All-State second baseman caught the ring on the fly, before it hit the floor and skidded away.\n\nIt was Chastity's turn to be speechless. She looked at the ring open-mouthed, tears streaming down her face. She found her voice, first. 'Yes, I'll marry you!' she exclaimed. \n\nI heard a woman's voice from somewhere say, 'She asked you first. Don't you think you should answer her?'\n\n'Yes, I'll marry you Chastity!' I said cheerfully, followed immediately by soft applause.\n\nI stood and helped Chastity to her feet. I took the ring from her and slipped it on her finger. I heard a woman say, 'For God's sake, kiss her before she changes her mind you damn fool!' I took the woman's advice and kissed Chastity in front of a roomful of applauding strangers. When we finished the kiss, we looked around with a smile then sat for the dessert that our waiter stood holding while he patiently watched Chastity's graceful proposal and my fumbling, inept response. The normal buzz of the busy restaurant resumed when we took our seats. \n\nA glowing Chastity and I ate our dessert wearing smiles we couldn't shed. I paid the check then we quietly, and without fanfare, slipped away. \n\nThough it was quite a walk to get to it, Chastity's car was only about a hundred feet from the restaurant. Nearly straight up. She pressed the remote start as we left. It was bitterly cold and windy as we walked to the parking garage. The wind howled and pummeled us as it blasted down the canyon formed by the tall buildings on either side of the street. Chastity clung to my arm, huddled against me, trying to escape a wind that threatened to carry us away. We got a respite from the wind when we turned the corner to the pedestrian entrance to the garage and got on the elevator. The wind assaulted us with a vengeance when we exited the elevator. The cars we walked by shook from the force of the wind, which seemed even more intense inside the garage.\n\nThe car interior was already warm when we hurriedly scrambled inside to escape the wind. Chastity shrugged out of her overcoat and tossed it in the back seat. I did the same with mine. She surprised me when she hiked up her dress, awkwardly clambered over the center console and knelt on my lap. She hiked her dress up further and reached down alongside the seat to recline my seat back until I was lying nearly flat. \n\nChastity unbuckled my belt, undid the waist of my pants and somehow managed to unzip them. All while kissing me hungrily. I lifted my hips and pushed my pants and underwear down. When my erection was freed of it confines, it pressed againt warm, moist flesh and soft hair. Chastity wasn't wearing panties under her dress.\n\nChastity hiked her dress up further and guided me inside her. 'I love you, Evan,' she whispered as she slowly lowered herself onto my erection and kissed me.\n\nWe started slowly, relishing just being together. We held each other tightly while the wind howled and buffeted the car, rocking it erratically as it gusted. We moved together, languidly making love, enjoying the warmth and solitude inside her car, protected from the bitter wind. The car nearest us, several spots away, made a brief series of squawks and chirps and the engine started.\n\nI smiled up ay my fianc\u00e9 and said, 'Let's give the wind a little help!' She giggled softly. We picked up the pace just as an especially heavy, sustained gust shook the car. Chastity grunted as we slammed into each other.\n\n'Man, that wind is something!' a man said to his companion a few minutes later as he opened the door to his car. 'Our car is shaking but this SUV is bouncing around like someone is screwing inside it! I'd hate to have to drive that in this wind tonight,' he added just before the door slammed. The man apparently didn't notice the engine running in the rocking SUV he was parked near.\n\nChasity and I never stopped moving, our pace frenetic as we gazed at each other. Stifling laughter, grinning like idiots as we listened to the conversation outside. The car backed out and accelerated away.\n\nChastity and I energetically coupled until we both shook when our bodies passed from intensifying arousal to orgasm to a state of post coital bliss. Once we recovered, Chastity climbed back into the driver's seat. She retrieved a pair of panties from the glove compartment. I watched her pull them up, her back arched to keep her butt off the seat.\n\nBefore she sat, she asked, 'Did I leak anything onto the seat?' I shook my head no. 'I don't want to stain this dress,' she said as she wriggled them in place. She didn't pull the dress into place before she sat, leaving it bunched up at her waist. 'From your reaction when you saw it, I'm definitely going to wear it again,' she continued with a smile. 'It's a very expensive designer dress. No one has ever worn it. It still had all the original tags on it when Brie spotted it on the consignment shop clearance rack. She was disappointed it wasn't her size. I was thrilled when it fit me perfectly. It was ridiculously inexpensive. Like Walmart clearance rack cheap.'\n\nAll I could do was smile, file the memory of first seeing her in the dress, and hope I got to see it again soon.\n\nChastity stayed the night for the first time since the Christmas her mother spent in rehab. She had planned it all along. She'd packed a change of clothes to wear to school the next morning. We never slept that night. We were too excited. We spent the night talking about our future. At least we talked about it when we took a break from long, sensual love-making sessions. I struggled get through my afternoon classes the next day.\n\nCharity graduated last month. She completed her sophomore, junior, and senior years as an honor student. She wowed the entire faculty when we learned her SAT and AP scores. Her class valedictorian and salutatorian didn't do as well. She received a nice scholarship award for her photography skills during a pre-graduation awards cermony. \n\nJoshua Teagarden's life insurance policies paid out but not without a fight. The insurance company didn't want to pay because Beatrice stopped making payments a few months after Joshua disappeared. An arbitrator ordered the insurance company to not only pay the policy benefits, but Beatrice's attorney fees and interest. It provided Beatrice a nice little nest egg. A second policy with the same company provided for the sisters. Charity won't have to worry about how to pay for college. Beatrice has a boyfriend. Chastity doesn't believe it's serious, but Beatrice is less difficult. Though pleasant isn't a word I'll ever ascribe to her. She remains a source of tension for the sisters. I'm afraid she always will.\n\nChastity and I haven't set a date yet. We weren't in a rush to get married. We're committed to each other. That's what's most important to us. The best part of not having set a date is it's driving my mother nuts. We will set a date soon, though. The wedding will have to be sooner rather than later. We forgot ourselves during a hike one nice spring afternoon. Chastity's visit to her OB-GYN this week confirmed what we already knew. My mother will truly be nuts after this weekend when she learns her first grandchild is due in November. The doctor pegged the date of conception as Valentine's Day."
    ],
    "authorname": "carrteun",
    "tags": [
        "first time",
        "fm",
        "intercourse",
        "oral",
        "teacher"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/from-charity-to-chastity"
}