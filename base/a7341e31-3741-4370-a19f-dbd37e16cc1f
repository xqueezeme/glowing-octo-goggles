{
    "title": "Raw Ch. 05",
    "pages": [
        "I hadn't thrown a temper-tantrum in over thirty years. Yet one little word had sparked that rebellious nature I was sure I had outgrown.\n\n\"I'm sorry, Becca. It's just not possible. That's the last I'm going to say about this.\"\n\nI opened my mouth but clamped it shut again when Malcolm tilted his head down and shook it once. I wanted to whine, \"But why?\" And he knew it. Damn him.\n\nI returned to the yellow pad of paper on which I was trying to finish my rough draft of Chapter One. But I couldn't concentrate. I kept thinking about last night at the restaurant, at the private club, and about this morning. How he could lift me up so high, and with one word, \"No,\" I could tumble so far.\n\nMy heart felt deflated. I pretended to write even though I was mulling over my disappointment. In my head, I had my arms crossed and my bottom lip stuck out as I glared at the \"adult\" in the room who had denied me what I wanted.\n\nWhen I heard the rustle of the newspaper, I peeked up to see him carefully fold it and set it aside before he got up to refill his coffee mug. I was admiring his ass in his jeans while sticking my tongue out at his back when a stampede of elephants and monkeys came barreling down the stairs and into the kitchen. Well, it sounded like one, even though it was just Drake chasing Daphne.\n\n\"Good morning,\" Daphne said breathlessly as she danced around one end of the island. Drake paced around the other: the lion hunting the gazelle. She squealed when he outsmarted her and grabbed her around the waist, nuzzling her neck.\n\n\"Get a room,\" I mumbled.\n\n\"Been there, done that,\" Drake grinned.\n\nI tried to ignore them as I sipped my milk-and-sugar doctored cup of caffeine. But they continued to horse around and eventually bumped into my chair. I saved the legal pad before the hot liquid sloshed over the side of my cup and onto the table.\n\nWhen Drake plopped down into the chair next to me, Daphne perched herself on his knee. \"I wish it were Labor Day already. I can't wait two weeks. Can you imagine? Three whole days of being your slave?\"\n\n\"The opportunities are endless,\" Drake said, adding a feisty growl.\n\nI jabbed my pencil at the paper and broke the lead. \"Oh, fuck it.\" With a grunt, I shoved my chair back and stomped to the foyer.\n\n\"What's with her?\" I heard Drake ask. I didn't hear Malcolm's response.\n\nUpstairs, I grabbed my laptop, notes, and my everyday-purse after transferring the essentials from the clutch I'd used last night. I paused when I pulled my thong out, feeling tears in my eyes. I swallowed a lump in my throat and tossed the barely-there panties aside. I was heading back down when I noticed Malcolm leaning against the wall at the foot of the stairs.\n\n\"Going somewhere?\" He stood up straighter, as if to block me if necessary.\n\n\"To my office, where it's quiet and free from distractions.\" I stopped two steps above him and adjusted the straps of my laptop bag and purse on my shoulder.\n\n\"Is this because I won't go away with you for the Labor Day Weekend?\"\n\n\"See, you said 'wont,' not 'can't.' You don't really\u2014\"\n\n\"Stop it. You're acting childish. It's not becoming.\"\n\nI rolled my eyes at him. \"I'm sure you'd like to take me across your knee right now.\"\n\nHe ascended one step so we were nose-to-nose. \"Becca! I told you, school starts next Monday. I always use that long weekend to adjust my lesson plans after the first two weeks of classes. It's important. You're welcome down to come to my house, I just can't go out of town for that long.\"\n\n\"Understood.\" I pushed by him and retrieved my keys from the hall table. \"Stay as long as you like. Drake knows how to lock up.\"\n\n\"Come on, Becca.\" Malcolm grabbed my wrist as I reached for the door handle. I froze, and he must've realized what he'd done\u2014what that action meant to me\u2014because he let go as if my skin were on fire. \"I'm sorry. Please. Don't go.\"\n\n\"I have a deadline. I have work to do. I'm sure you can understand that.\"\n\nHe let me leave. But as the front door shut behind me, I felt a pang in my chest. I had never been mean to him before. I started to turn around and apologize, but I heard everyone laughing inside. I knew they weren't laughing at me, but I still was hurt. As if I were back on the outside of the group again...and whatever I had said or done to him mattered so little that he could move on that quickly to something humorous. I prayed he would open the door and come after me, but it remained closed.\n\nAll the way into the office, I wondered if the past few weeks had just been a crazy, kinky fling. Were we merely playing roles? And now, when reality\u2014disguised as our jobs\u2014came knocking, we went our separate ways?\n\nAlthough my schedule as a writer was flexible, his as a teacher wasn't most of the year. He couldn't take off on a weekend getaway at will. He had priorities that trumped time with me.\n\nI knew that. I understood. I just didn't like it.\n\nWas I so selfish that I wouldn't allow myself to adapt? To compromise? To fully submit? And would my resistance be my own demise?\n\n###\n\nI was depressed. And when I was depressed, my characters were depressed.\n\nThey reflected my moods, and sometimes my own life. Which resulted in some interesting dialogue and scenes. Today, though, it wasn't for the good. And it was frustrating me.\n\nAfter revising the same scene ten times and then deleting it, I wandered from my home office to my bedroom across the hall. I leaned against the doorjamb and took in the windows flanking the headboard where a cool, night breeze fluttered the curtains and made the Roman shades tap lightly against the frame. On my bed, the duvet was partially on the floor; the top sheet was balled in one corner; and the two feather pillows were piled in another.\n\nI hadn't slept well last night. Or the night before. Truth be told, I hadn't slept well since our fight. \n\nThe first time Malcolm had made love to me was on that bed. I'd been mortified that someone would be able to hear us with the windows open. Then I had thrown caution to the wind and embraced whatever he'd told me to do. \n\nI tried to remember the last time Malcolm and I had been in here.\n\nI'd had sex with Brian in mid-July; met Malcolm two days later; and had sex with him for the first time the following weekend. He'd taken me to the private, kinky nightclub a couple of weeks before Labor Day. It had to have been eight weeks since he'd been to Chicago...since I'd digressed to be six instead of thirty-six.\n\nSchool had started again for him in August. I had gone to visit him for a couple of weekends in September, but both times there had been a lot of tension between us. I just hadn't been into the scenes. I'd almost used the safeword just to end it the last time. We continued to talk on the phone, but every time he suggested getting together again, I had given him the same excuse: I was too busy writing to go visit.\n\nWhile I had been busy\u2014I'd gotten ten chapters written in those same eight weeks\u2014it wasn't to the point that I couldn't have made time for him. I was still holding a grudge that we hadn't gone away for the extended Labor Day Weekend. I couldn't remember ever having been so...stubborn.\n\nHe was never able to come to see me. I had to go there if we wanted to get together. I wasn't really down for the idea of trying to fit in sex between lesson plans and grading papers. So I guess I'd made myself unavailable to spite him.\n\nBut as I stared at my bed\u2014as I tried to imagine him lying there\u2014my chest tightened. I longed to sleep beside him again. To wake up naked with his arms around me. To feel his hands, and lips, and cock on my skin.\n\nI ached for him to be buried so deep within me I felt as if we were one. We hadn't talked in a week, and I hadn't seen him in three. I tried to remember his voice. His touch. His scent.\n\nI slid to the floor, crying. I missed him. Terribly.\n\nIt had been all about me and not about him. I wasn't taking his life\u2014his feelings\u2014into consideration. I had expected him to drop everything for me. It's how I'd lived my life up until recently, and it had worked. Well, sort of.\n\nBut Malcolm? He wasn't my normal kind of guy to date. He wasn't my normal anything. And that's what made him so special. I had ruined it, though. Was there any way to repair what had been done?\n\nThe doorbell rang, and I scrambled to my feet, wiping my tears away. I almost fell down the stairs in my haste to get to the front door. When I finally grasped the handle, the door didn't budge. I cursed, turned the deadbolt, and tried the handle again.\n\n\"Malc\u2014\"\n\n\"Well, hello sunshine.\" Daphne's grin faltered for a moment as she pushed past me into the foyer.\n\n\"Uh, hi.\" I stepped outside and looked around.\n\n\"It's just me.\"\n\nI blinked and came back inside, closing the door. I checked my watch. Six o'clock. \"Not to seem inhospitable, but why? I mean, why are you are here?\"\n\n\"Because you, my dear, need a break,\" Daphne said, dropping a bulging backpack on the floor and heading up the stairs. \"Drake suggested we have a little impromptu vaca together. Just you and I.\"\n\n\"Where are we\u2014I mean you\u2014going?\"\n\n\"To pack you a bag.\" She disappeared from my sight, but I heard her singsong voice floating from the direction of my bedroom. \"You better come along or you won't have a choice about what you're going to wear.\"\n\n\"Shit.\" I tripped up the stairs and found her in my closet pushing hangers around. \"Let me do that. Give me a clue where going?\"\n\n\"You'll need pants. Maybe shorts. Definitely a sweater.\" She paused to turn around and look at my legs. \"Have you shaved recently?\"\n\nI blushed as I glanced down and shook my head. I'd had no reason to shave. Not since September 21st.\n\nI remembered that day clearly. I'd gotten up early, taken a long bath and shaved\u2014everything\u2014hoping that it would make me feel more sexy. I'd had high-hopes all the way to Wheaton. But a smooth pussy and legs hadn't helped because I was still carrying that grudge. I'd resisted every command he'd given me to the point that he had finally ended the scene prematurely...before either of us had climaxed. I'd left that night and driven back to the city feeling even more frustrated.\n\nNow, looking back, I knew it was all my fault. Dammit. When would I learn?\n\n\"Jump in the shower, Becca. Trust me with your clothes.\"\n\nI glanced between my closet and the bathroom. \"But\u2014\"\n\n\"Go. Or I'm not packing any underwear.\"\n\n\"Geesh.\" I yanked off my shirt and finished stripping once I'd turned on the water.\n\nTwenty minutes later, I actually felt better than I had in days. And I had smoother legs. I ran a comb through my hair to remove any tangles, then I braided it in one long plait down my back. It would dry faster that way, and it would make my hair nice and bouncy for later. Whatever and wherever 'later' was.\n\nWhen I came out of the bathroom wrapped in a towel, Daphne was reclining in the oversized chair I kept in the corner by the window. The floor lamp behind the chair cast a yellow glow over her tanned skin. My no-bigger-than-a-large-purse duffel bag that I used when I went to the gym\u2014which hadn't been in quite a long time\u2014was seated at her feet.\n\n\"That's all I'm taking?\" I bent to unzip it to see what she had packed, but she gently kicked her sandaled foot at my hand.\n\n\"Uh, uh.\" She swiped her finger across the screen of her iPhone, her eyes on the phone as well. \"I laid an outfit for you on the bed. Bring me all of your toiletries then get dressed.\"\n\nI raised an eyebrow. \"And here I thought you were a submissive.\"\n\n\"Only in the bedroom, darling.\" She glanced up with a wink. \"Well, usually only in the bedroom.\" \n\nI shook my head and obeyed, merely out of curiosity. I gathered hair products and cosmetics, tossed them on the bed, then snagged the articles she'd selected for me to wear. Five minutes later, I re-emerged from the bathroom in jeans and a blouse, thankfully with panties and bra underneath.\n\nWe were in a taxi on the way to O'Hare Airport when I ventured to inquire about our travels again. But her phone rang, cutting my attempt short. So I turned my attention out the window and watched the buildings and people zip by under the city lights while she listened to a mostly one-sided conversation.\n\nShe didn't shut off her phone until the taxi stopped to let us out.\n\nI grabbed my bag and purse and slid out after Daphne. However, once I was on the curb, I refused to budge until I had more answers.\n\nDaphne continued on, not realizing I wasn't behind her until she'd gone several feet inside the door. I watched her stop, look around, and then realize I was still outside. With a grimace, she huffed back through the automatic sliding door. I wondered if my brother would punish her if I told him she had basically kidnapped me. That made me grin.\n\n\"Wipe that smirk off your face,\" Daphne said with a deep sigh once we were face-to-face again. \"We're going to miss our flight.\"\n\n\"I'm not moving until I know where we're going.\"\n\n\"You know, you're horrible with surprises. Just trust me.\"\n\n\"Sorry, I only trust three people in my life right now. Sue, my agent and editor. Drake, my brother and confidant. And Malcolm, my boyfriend and lover.\"\n\nI frowned after naming the last one. Just saying his name sent tiny shudders through my nether region. God, I missed Malcolm. I should be on my way to see him to apologize for my selfishness. But no, I was standing in an airport with a bag that could barely hold enough clothes for one night much less any extended stay that required an airplane to get me there.\n\n\"Becca? Just do it. You won't regret it.\"\n\nI wanted to stomp my foot and pout. But her glare made me flinch, and I wondered if she ever switched with Drake. A woman topping my hard-headed, dominant brother? Now that would be interesting to see, even if we were related.\n\nI sucked it up and followed her inside. When I started toward the ticket line, she grabbed my arm and tugged me in the other direction. \"Don't we need our tickets?\"\n\n\"I have our boarding passes printed already. We just have to get through security.\"\n\n\"Oh, okay. That's being efficient.\"\n\nWe were only in line for five minutes when I glanced at Daphne and noticed her grimacing again.\n\n\"What now? I'm doing what you told me to. I haven't asked where we're going. I'm trying to trust you\u2014\"\n\n\"I don't feel so good.\"\n\n\"Oh, God, no.\" I looked for the nearest restroom and started to leave the line.\n\n\"No, keep our place! I'll be right back.\" Daphne glanced at the woman behind us who nodded with a sympathetic smile as assurance that she would let Daphne jump back in line. \"Take your boarding pass. Worst case, I'll meet you on the other side, okay?\"\n\nI bit my lower lip. It wasn't right to get separated, especially under these circumstances. \"Daphne, really. I'll go with you.\"\n\n\"No!\" Daphne's eyes widened and she shook her head. \"I won't be long. I swear.\"\n\n\"Um, okay. You have my cell. If you're really sick, you call me, okay? We can cancel the trip.\"\n\n\"Just stay in line, okay?\"\n\nI nodded. \"Call me?\"\n\n\"Will do.\"\n\nI watched with a heavy heart as she walked away. I prayed she'd be fine on her own.\n\nThe line moved quicker than I was used to seeing, or maybe that was just because I was nervous. I clutched my boarding pass and driver's license in one hand and my phone in the other. As the line grew shorter, I shuffled my duffle bag forward with my feet, glancing between the restrooms and the male security officers who were on my side of the metal detector gate and wore constant frowns.\n\nI was getting worried when there were only five people ahead of me and Daphne still hadn't returned. I was still trying to decide if I should step out of line when I was up next.\n\n\"All belongings in the bin, ma'am,\" one of the officers said with his hand out.\n\nI gave him my paperwork and ID, deposited my bag and phone in the black plastic bin, and stepped forward to go through the body scanner. Until I ran into his thick arm.\n\n\"Remove your shoes, ma'am.\"\n\nI tried not to roll my eyes as I toed off my sandals and set them on the conveyer belt. While my shoes had been quite pricey, there wasn't that much material to them that would allow one to hide any weapons. But I would humor him.\n\nBarefoot and feeling a bit sick to my own stomach now on the whereabouts of my traveling companion, I passed through the scanner without issue. It took only a minute to get my shoes back on and my duffle bag and purse slung over my shoulder.\n\nThe lady who had been behind me the whole time patted me on my shoulder as she grabbed her belongings. \"Good luck. I hope your friend is okay.\"\n\nI thanked her and stared at my blank phone. I almost got ran over by a family of four as I tried to get back to the bullet-proof glass partitions and conglomerate of electronic security machines separating the waiting passengers from those who had already passed the checkpoint. I could see the waiting line, and Daphne wasn't in it.\n\n\"Pick up, pick up, pick up,\" I mumbled after dialing her number.\n\nIt rang four times then went to voicemail. I cursed under my breath and dialed again. I'd never hated voicemail more than I did right now. I had just punched the button to end the call and start again when I looked up from the phone and saw Daphne running up to the partition on the other side. Her phone was in her raised hand and she was shaking her head. Great. Her phone had died. \n\nBefore she could reach me, two male security officers waylaid her. If the situation wasn't so dire, I would have laughed. She was the farthest thing from a terrorist. Dressed in a tight T-shirt, even tighter jeans, and carrying a backpack, she was a kinky one at best...who would submit to your every wish. It brought a whole new meaning to 'put your hands on your head and spread your legs.'\n\nIt felt like I was in a dream. I couldn't reach Daphne, I couldn't talk to her, and I couldn't hear her. She was waving a piece of paper in the air while pointing at me with her other hand. The officers' backs were to me, so I couldn't read their expression, but the way Daphne kept pointing at me told me she wasn't giving up.\n\nWhatever she was telling them seemed to finally sink in as one of the men turned and stared at me. He said something to her, nodded, and took something from her. As he walked in my direction, I could see Daphne behind him. She raised her hands in the air and flung her head back. International lingo for \"Good grief!\"\n\nI forced myself not to cross my arms and tap my toe as I waited. Could he move any slower? He even managed to get in a little chit-chat with a female officer before he reached me.\n\nHe handed me a piece of paper. \"That lady with the phone wanted me to give this to you.\"\n\nI waited for him to say more, but he walked away. I looked at the paper.\n\n\"Phone died. Go to Terminal. Hold plane.\"\n\nSeriously? I was supposed to make the plane wait if she wasn't there in time?\n\nI had no idea when we were taking off, anyway. Daphne was still standing on the other side of the partition, but now she was waving her hand at me. The people in line on her side were staring between her and I. It wasn't until she lifted her other wrist and pointed to her watch that I realized she was wanting me to get going. So I went.\n\nFive minutes later, I was standing still again, this time trying to figure out which hallway to go down. I didn't know what terminal our plane was departing from. Hell, I didn't even know where I was flying to. It probably would have helped to look at my boarding pass, but I'd been so worried about Daphne that I had completely forgotten to check it.\n\nI stepped out of the flow of traffic and tried to decipher the codes sprinkled all over the printed sheet Daphne had handed me. Then I realized it was upside down. Right-side up now, I blinked as I saw the destination: Baltimore, Maryland.\n\nThat couldn't be right, but there was my name down at the bottom of the page. What the hell was in Baltimore? If I was going somewhere against my will, why couldn't it be Hawaii or another country?",
        "I figured out which terminal I needed and headed in that direction. I had traveled quite a bit for book promotions, signings, and conferences earlier on in my career. But having kept my identity secret during the Dex Knightly Mysteries phase of writing, I had stayed close to home for the past five years.\n\nDespite getting temporarily separated, I was glad Daphne had brought me on this adventure. I missed traveling. It didn't take long to relax and get my bearings again in the airport. I located the terminal without any issues and noticed that our flight didn't leave for another thirty minutes.\n\nWhat had been the hurry? I shook my head and looked around. Up ahead was a little shop that sold souvenirs. I had decided to get a magazine or newspaper when I heard my name.\n\n\"Becca.\"\n\nThat voice. So quiet amidst the hustle and bustle of the airport, yet I'd heard it. So firm, yet it didn't command. It beckoned.\n\nI spun around. My bag fell to the floor. I wanted to fall to my knees, but somehow, I stayed upright.\n\nAs our eyes met, my vision blurred with tears and I realized one truth: Daphne was not joining me on this trip. I wasn't sure if she really had been sick\u2014if her phone had really died\u2014or if it was all part of the charade to get me to the terminal. Whether it had been her idea, or Drake's, or even Malcolm's, I wanted to thank them all profusely. But first, I had something more important to do.\n\n\"I'm so sorry. I've been\u2014\"\n\n\"Shh,\" Malcolm said. He rubbed his thumb under my eye as a tear escaped. His hand lingered on my cheek, and I pressed into his palm. \"It's okay, Becca.\"\n\nThen he kissed me long and deep.\n\nI choked back a sob and welcomed his embrace. When he let me up for air, I murmured against his ear, \"She said I wouldn't regret going with her.\"\n\n\"Do you now?\" He tilted my chin up and studied my face.\n\nI bit my lip and shook my head. \"I'm just in shock.\"\n\n\"Let's sit down. We should be boarding soon, but we have time for you to collect yourself.\"\n\nI didn't know what to say, so we sat in silence, his hand holding mine as I leaned my head on his shoulder. I battled a dozen thoughts in my head trying to understand the reality that I was going on a surprise vacation with Malcolm. I wanted to ask him how and why, but something told me to just shut up and accept the gift I'd been given.\n\nWe were boarding fifteen minutes later. We found our seats, stowed our bags, and settled in for the two hour flight. Once the flight attendant went through the security and emergency procedures, I turned to Malcolm.\n\n\"I really am sorry for how I've been behaving. I have been unfair to you. You have a job that requires your undivided attention. Not that mine doesn't, but I wasn't considering the big picture. Or your feelings. And I've been stupid and childish for pouting. Please, Malcolm. Please forgive me.\"\n\n\"Of course. Apology accepted.\" He brushed his fingers down my cheek. \"I have to admit, I was being a little selfish myself. I just assumed you'd understand. It wasn't until we were apart that I had the time to think things through. To realize that just because I was used to my schedule that I shouldn't expect you to be, too.\"\n\nI met him halfway as he leaned toward me, and we sealed the figurative envelope of our first argument closed with another kiss.\n\n\"So, what's in Baltimore?\"\n\n\"A rental car.\" Malcolm turned his gaze outside as the plane lifted off. It was dark now, so I wasn't sure what he was looking at.\n\nI punched him lightly in the arm. \"And where is the rental car taking us?\"\n\n\"A surprise.\" He glanced at me again and raised an eyebrow. \"You do like surprises, don't you?\"\n\n\"Well, the last surprise I had from you, you tied me to a chair in my underwear while my brother, his girlfriend, and a handful of strangers watched.\"\n\n\"You, my dear, enjoyed that thoroughly. However, you are incorrect. The last surprise was the club downtown. The club where, if I remember correctly, you gave me a most delightful surprise of my own. How soon you forget?\"\n\nHeat filled my cheeks, and I looked at my hands in my lap. I most certainly had not forgotten.\n\nI felt his breath against my cheek before I heard his deep voice in my ear.\n\n\"When the seatbelt light goes off, I want you to go to the restroom.\"\n\nI sat up straight and swung my head to face him. \"Why?\"\n\nHe sighed. \"Lady Becca? Stop questioning everything. Just do it.\"\n\nA shiver ran down my back. Seriously? He was going to play on the plane?\n\nI was still contemplating whether I was going to obey his command when I heard a loud dinging sound before the flight attendant announced over the intercom that we were free to remove our seatbelts if we needed to get out of our seats.\n\nI unbuckled my belt and stood up. Malcolm gripped my hand. I leaned down and hissed, \"I am not bringing you my panties.\"\n\nHis dark eyes stared up at me, his mouth a straight line. \"I do not want your panties. I want you to stay there until you hear two knocks, then two more on the door.\"\n\n\"Fine.\" I yanked my hand away and maneuvered down the narrow aisle. We were near the front of the plane, and as I walked to the rear, I noticed that the rest of the seats were only half full for a Friday night flight. Still, I hoped I wouldn't be putting anyone out by hogging one of the two bathrooms.\n\nMy impatience with all this secrecy was starting to get to me. He didn't deserve my attitude again. Hell, we'd just made up after practically not seeing each other for three weeks. With each step, my newly found frustration melted away to curiosity. And a little bit of arousal.\n\nOnce inside the tiny chamber with the door locked, I made use of the facilities. Then I washed my hands, lowered the lid on the toilet, and sat down to wait. Knowing Malcolm, it could be a minute or it could be ten or more.\n\nI was re-reading all of the notices on the walls and compartments when a knock on the door startled me. I reached for the handle, then realized it had been three rapid knocks. I heard it again before a female voice asked if I was alright.\n\n\"Yes, ma'am. Almost done.\"\n\nAnother minute later, I heard a rumbling outside\u2014presumably the refreshments cart\u2014a female voice apologizing to someone, and then two knocks followed by two more.\n\n\"It's about damn time.\" I unlocked the door and started to come out when Malcolm pushed his way into the bathroom, turning me around in the small space as he entered. My knees bumped against the toilet, and I let out a soft cry.\n\nWithout a word, he pressed his hand to my upper back. I put my arms out to brace myself against the wall as I fell forward. His hands played at my waist a moment, then my jeans went slack. His hand slid down the back of my thigh then lifted my leg up so my foot slid out of my pants and was propped on the ledge next to the toilet seat.\n\nI heard him lower his zipper, and then I felt his fingers pulling my panties aside. In one hard thrust, he was inside me, and I bit my lip to silence my strangled cry of relief. God, it had been too long.\n\nHe was fast, gripping my hips and holding me still. I'd never been fucked on a plane before. It was almost as erotic as giving him a blowjob under the table at the club. Almost.\n\nWhen he was done, he pulled me upright and held me against his chest, his cock still buried within me. His fingers slid down the front of my panties, and he proceeded to stroke my clit until I was shaking in his arms. I came quickly, moaning his name.\n\nHis hand found my breast and caressed it through my shirt while he licked and nuzzled my neck and my shuddering subsided. His breath was hot against my ear when he finally spoke.\n\n\"Straighten your clothes, then go back to your seat. I'll join you shortly.\"\n\nI nodded, wiggling my ass against him for a moment, relishing the feel of him inside me. He slid out, and I instantly felt like part of me had been removed as well. I obeyed and made myself presentable again, then I slipped out of the restroom.\n\nI sighed with relief that I had to hang back for a bit as the flight attendant was still delivering drinks to the seats several rows behind ours. I couldn't have gotten back to my seat if I'd wanted to. When she was at the row behind ours, I headed up the aisle.\n\nAs she passed our seats, I slid into mine and she thanked me for waiting. I just smiled.\n\nMalcolm returned a few minutes later, and the flight attendant stopped by our seats to offer us something on her way back down the aisle.\n\nThe rest of the flight was uneventful. Malcolm placed his arm around my shoulder, and I curled up next to him for a short nap. He woke me when we landed in Baltimore.\n\nWithout any checked baggage, we were able to depart the plane and go straight to the car rental desk downstairs. However, he walked right past the desk toward a bench.\n\n\"Sit, Becca. Watch our bags. I'll be right back.\"\n\nI watched him walk down the hall for several feet, then I lost track of him. I pulled out my cell phone and shot a message to Daphne telling her thanks for the adventure thus far...and she was going to pay when I returned. She responded right away saying she had already gotten deliciously paid by my brother who knew nothing about her and Malcolm's plan. He'd told her I hated surprises like that, but maybe just this once it would be okay.\n\nI laughed and pocketed my phone. Malcolm returned a few minutes later. He was carrying a box the size of a DVD player with FedEx written on it.\n\n\"You did not just mail that today, did you?\"\n\n\"You would be correct.\"\n\n\"So this wasn't a last minute hostage situation?\"\n\n\"No, my dear, it was not. Are you ready to go?\"\n\nI stood and handed him his bag. \"After you, Master.\"\n\nHe gave me a long, hard look that I'm sure promised retribution for me using that term outside of a scene and in public. I smirked, turning towards the doors. He stepped past me, and I saw him shaking his head. That only made me grin wider.\n\nI didn't ask him where we were going or why we hadn't picked up our rental car. I'd learned that it only frustrated me because no one was giving me information before they were ready to tonight. We commandeered a taxi that took us to the airport hotel. Again, I asked no questions but merely waited patiently while he checked us in and then followed him to an elevator that took us up to the fourth floor and a corner room.\n\nHe flicked the switch on the table lamp just inside the door, turned the deadbolt, set his box on the table, and tossed his bag to the chair. He pointed to the other chair next to where I'd stopped, and I put my bag on it. Silently, slowly, he crossed to me.\n\nI backed up into the darkness behind me. He kept advancing, and I kept retreating, until we were in the bedroom area and the lamp from the other room was just a dull glow. With the drapes open, the moonlight shone in behind me and danced across his hardened jaw and firm mouth.\n\nWhen I ran into the air conditioner unit, I let out a gasp, and he finally stopped.\n\n\"Lady Becca, strip.\"\n\nMy knees suddenly shook, but I wasted no time in obeying. A moment later, I stood naked before him. I was glad we were up so high and no one could see me in the window. Or him as he stripped as well. I gulped as my eyes ran down his body and back up, lingering on his middle region and the glorious specimen of a cock that was at full salute now.\n\nHe pulled back the covers and stood on the far side of the bed. \"Lie down.\"\n\nI was tempted to disobey and crawl across the mattress\u2014something inside me longed for him to spank me into submission\u2014but I was just so happy to be with him again I did as he asked. I could be naughty later. Right now, I just need his hands on me; to feel his body against mine. I prayed that's what he had planned because that Mile High Club induction wasn't going to quell the hunger tonight.\n\nI'd no sooner laid down on my back with my head on the pillow when he climbed onto the bed himself. He parted my legs and bent my knees so my feet rested flat on the bed. He was stroking his cock as he stared at me. Not at my eyes this time but at my body.\n\n\"I'm going to make love to you, Lady Becca. I'm probably going to fuck you, too. If you can't take it anymore, say the safeword.\"\n\nI clamped my mouth shut before I let the words \"bring it on\" spill out. Thankfully, he didn't seem to notice as he was licking his lips and staring at my bared pussy. I grinned as the moonlight revealed the twitch in his lips as he attempted to hide his own grin. He must have felt it on the airplane, but seeing a bare pussy was a whole different thing.\n\nI don't know why I had chosen to shave that as well tonight. I guess I'd wanted to feel refreshed all over if Daphne was kidnapping me, hoping deep down we'd be going someplace exotic. An airport hotel wasn't what I had been imagining, but I was glad I'd taken the time.\n\n\"Hands on your breasts. You may play all you like. But don't come until I tell you to.\"\n\nI raised my eyebrows but cupped my breasts and squeezed gently. My legs fell apart more as he kneeled between them. When his hands slid along my thighs, I brushed my thumbs over my nipples, stifling a whimper. It was going to be very hard to hold out.\n\nFor several long minutes, he did nothing but look at the space between my thighs. My inner muscles clenched, especially since I'd continued to caress my breasts. My eyes drifted closed. I flicked them open, expecting him to tell me to watch him. But again, he hadn't seemed to notice.\n\nI watched his hand return to stroke his cock, his index finger and thumb creating a circle as they surrounded the crown. He stared and stroked as I watched him and caressed. It was intoxicating not knowing what he was going to do. I felt as if I were in a daze.\n\nI had closed my eyes again when I felt his cock rubbing up and down my pussy. I tilted my hips up, trying to help him. He let me. I did it again, and he slid lower, resting at my entrance for a few seconds before sliding inside.\n\nI groaned through his entire entrance, which he drew out as he stretched me wide. I held my breath, waiting for him to withdraw, but he surprised me. He remained sheathed and put his hands under my ass, lifting me up as he scooted forward. When he lowered me, my hips were still raised and my lower back rested on his thighs, my knees spread wide around his hips.\n\nFinally, he looked up into my eyes. I squeezed my breasts, and my pussy clenched around his cock. He didn't emit a single sound except his even breathing. How the hell did he learn to stay so calm when in a scene?\n\nMy thoughts were distracted when he suddenly rubbed my clit. I gasped and pinched my nipples. Which made my pussy clench again. Damn, his rock-hard cock felt like the vibrator I sometimes used...power turned off but hard shaft inside me while I masturbated.\n\nI heard the air conditioner kick on, and cool air brushed over my body making me shiver. My nipples hardened even more. I tried to rock my hips against Master Malcolm, but at the angle I was lying, I couldn't raise up much more. He'd probably intended it that way.\n\nI tried to relax as he continued to just rub my clit in leisurely circles. Occasionally, his cock would throb within me. I pressed my legs tight against his sides, just trying to feel his body.\n\nHe pressed his other hand against my pelvic bone and used his fingers to spread my labia open. He stroked my clit harder and faster; back-and-forth, up-and-down.\n\nI was unable to keep my eyes open any longer, and my hands eventually gave up trying to play with my breasts. My body took on a life of its own, undulating from his touch. My moans changed to whimpers as the pressure built. I tried to remember not to come.\n\nI felt him shift his position, then he pumped his cock into me faster. I was biting my lip so hard I feared my teeth would cut right through. I squeezed my breasts, trying to hold off the impending orgasm that just wanted to be embraced.\n\nWhen I thought I couldn't hold on any longer, I heard his deep voice, calling from what seemed so far away. \"Come for me, Lady Becca.\"\n\nI cried out his name as I came undone. I was still floating when he withdrew, flipped me onto my stomach, lifted my ass and plunged back into my pussy from behind. Another orgasm shivered through me, and I cried in the pillow with relief.\n\nHis fingers dug into my hips. He was no longer gentle. His grunts filled the silence as the air conditioner shut off. I heard the sharp smack before I felt the sting in my left ass cheek. He repeated it on the right side. The pillow silenced my shriek.\n\nI lost track of how many times he spanked me. He didn't have to tell me why he did it; I knew this was punishment for my previous behavior, my pouting for over a month. He wasn't doing it to hurt me. He was doing it because he loved me. Because he cared. Because I'd deserved it. And part of me relished it.\n\nBy the time he'd decided he'd gotten his point across, my ass was numb, and I was sobbing into the pillow, mumbling a mantra of, \"I'm sorry, Sir.\"\n\nHe found release then turned me to face him, holding me close. I curled my fingers and beat my fists against his chest. Why had it taken him so long to chase me? Why had I been so stupid? I'd almost lost something so good in my life out of my sheer desire to be in control. Had he not spent weeks trying to drill that out of me? To make me embrace the submissive desires inside me?\n\nHe kissed my head throughout, rocking me until I stopped fighting him. Until I stopped shaking.\n\nMalcolm had been frustrated. I had been frustrated. We'd worked it out. And in the morning, I'd get more answers about why I had been tricked into this trip.\n\nFor now, I succumbed to my exhaustion and slept in his warm embrace.\n\n###\n\nIn the morning, I did not have any more answers. In fact, I had more questions as we got our rental car and headed out of the city. Just what the hell were we doing on the East Coast?\n\nMalcolm offered no explanations, so I drank my latte and nibbled on my scone while he maneuvered through traffic. He was using the onboard navigation, and apparently had plugged in our destination while I was inside the bakery getting our breakfast. So frigging tricky.\n\nI watched the scenery zip by and change from metropolis buildings to trees and cement and eventually countryside. I glanced at the clock and noticed we'd been driving about thirty minutes.\n\n\"Can you at least tell me how long we're going to be gone? Do I need to call Sue and tell her not to expect me Monday? I did have a meeting with her about my progress on the new project.\"\n\n\"Already taken care of. That's all you need to know.\"\n\n\"Has my brother not told you how much I hate being kept in the dark?\"\n\n\"You did just fine last night, my dear.\" He gave me a smirk, and I blushed. \"Tell me about the trilogy. Did you meet your goal for September?\"\n\nFor the next hour, I rambled on about the chapters I'd completed. I found a small pad of paper in the glovebox and extracted a pen from my purse so I could make notes as he gave me advice. When I'd exhausted that topic, he told me about the first few weeks of school. I got a little giddy as we neared the Chesapeake Bay Bridge. In all of my travels, I'd never been on it. But I knew where it led, and I finally had my first hint of where we were going. I counted to ten and then to ten again, just as Malcolm had taught me to relax when in a scene. I wanted to keep my cool and not ruin his surprise.\n\nAlmost three hours after we had departed Baltimore, we cruised into a seaside city called Rehobeth Beach. Malcolm pulled into a parking lot for a grocery store.\n\n\"Give me ten minutes, okay?\" he said as he got out.\n\nI didn't have a chance to respond. He had already closed the door and was jogging into the store. I smiled at the way his jeans hugged his ass. God, I'd missed that view.\n\nI passed the time wondering what he was doing in there, what we were doing on the East Coast, and what had Daphne packed for me knowing that the trip with her was just a charade. Malcolm was walking back to the car with three plastic bags and a small box before I knew it. He deposited them in the trunk and then slid back into the driver's seat.",
        "\"You're awfully quiet.\" He gave me a sideways glance before backing the car out of its parking space.\n\nI gave him a smirk, knowing full-well what that would do to him. \"Someone told me to stop asking questions and to just trust them.\"\n\n\"Don't start getting cheeky now, Becca.\" There was a hint of a growl in his tone, and that turned me on.\n\n\"So what's in the bags?\"\n\n\"A surprise.\"\n\n\"Do you not see how aggravating you are?\" I shook my head and rolled down the window, letting the autumn breeze rustle my hair. \"Either I'm asking too many questions or I'm not speaking enough. I lose either way.\"\n\n\"Maybe you're not asking the right questions.\"\n\n\"Seriously?\" I tried to envision where were heading now. I inhaled deeply, wondering if that was the ocean I was smelling in the air. \"Okay, how long are we here?\"\n\n\"Until Monday night.\"\n\nI turned back to him. \"What about school?\"\n\n\"Would you believe me if I said I called in a favor?\"\n\n\"No. I don't envision you playing hooky.\"\n\nHe let out a deep sigh. \"It's Columbus Day weekend, Becca. I'm off until Tuesday.\"\n\n\"Oh.\" I guess I'd never had a job where you got designated holidays off. Unless it was Christmas or Thanksgiving, I worked whenever I had the time or had a deadline. \"What are we doing here?\"\n\nHe shook his head.\n\n\"Okay, can you at least tell me why you had to make up this whole fake trip?\"\n\n\"I had to get you to the airport somehow.\"\n\n\"You know how to pick up a phone, right?\"\n\n\"Becca?\" He caught my gaze for a moment then turned his eyes back to the road. \"We haven't been very civil to each other lately. I didn't think a phone call would have convinced you.\"\n\n\"You're probably right. But kidnapping me?\"\n\n\"I believe you went with Daphne willingly.\"\n\nI crossed my arms. Why did he have to be right. Again?\n\n\"Relax, Becca. All will be revealed soon. Trust me.\"\n\nFor the next fifteen minutes, I pouted, during which time it occurred to me that he seemed very at-ease. Like knowing where a grocery store was...and that it wouldn't take long to get what he wanted. Or where we were going without referring to the on-board navigation that I now realized was no longer on.\n\nI remained quiet and stared at the steady line of trees on either side of the road. They were broken by the occasional driveway branching off the main road, the only hint that that something else was on the other side. The salty smell in the air was stronger now. I wondered how close we were to the Atlantic Ocean.\n\nMalcolm slowed down and turned off onto one of the side roads. As I presumed, there were houses hidden behind those trees. The cul-de-sac we were in had four, two-story houses, and two, three-story houses. The larger ones were at the back of the property.\n\nMy eye grew wide as he pulled our car into the drive of one of the three-story houses and shifted into park. I retrieved my meager bag and met him at the front of the car.\n\n\"Seriously? This is where we're staying?\"\n\nHe chuckled. \"Yes, Becca. Seriously. Come on.\"\n\n\"What about the groceries?\"\n\n\"They'll be fine. I want to show you something first.\"\n\nHe took my hand, and I followed him up a set of flagstone steps to a black front door, which he unlocked...with a key on his keychain.\n\nI let go of his hand and stayed on what I guess was the front landing as he opened the door and stepped inside. \"Tell me one thing, okay?\"\n\nHe didn't say anything, although he smiled at me.\n\n\"Is this your house? As in, do you own it?\"\n\nHe nodded.\n\nMy knees were suddenly weak. I gripped the doorframe as he gently tugged my bag from my hands and set it on the floor.\n\nHe took my hand again. \"Let me show you around.\"\n\nMy jaw ached by the time he walked me through just the first floor with its expansive kitchen fit for a professional chef that flowed into an equally large main living area like the waves of the Atlantic Ocean crashing on the beach that I could see through a wall of windows. There were a couple of small rooms to view\u2014a library, a den, and a bathroom\u2014and then he led me to an open staircase that seemed to float up to the second floor.\n\nUpstairs, four bedrooms faced the ocean. And all of them had sliding glass doors as windows that led onto a continuous balcony that spanned the width of the house. Each room was decorated in a different color with a nautical or ocean theme. Two bathrooms sat at the back of the house on either end of an open sitting room with a vaulted ceiling. A spiral staircase in one corner led up a loft area overlooking the sitting room's arrangement of couches and chairs arranged around a fireplace.\n\nBack at the main stairway, we went up another set of floating stairs. I wasn't sure if anything could be more extravagant than what he'd already showed me. I was wrong.\n\n\"The master suite,\" Malcolm said, squeezing my hand.\n\n\"Pinch me, please.\"\n\nWhile the rest of the house was beachy in colors and d\u00e9cor, as one would expect, this room was the complete opposite. It was, in a word, Malcolm. And that made me smile.\n\nThe walls and ceiling were shades of gray, and the minimalist furniture\u2014a bed, two nightstands, and a dresser with a mirror\u2014were a dark cherry wood. A forest-green duvet and two light-gray throw pillows decorated the four-poster bed that faced the same view of the ocean as the bedrooms and living area below. Green curtains flanked the windows, and above the bed, a fabric panel of patterned greens and grays hung along the slope of the ceiling. The only other color was a mustard-yellow blanket draped across a low, leather bench at the end of the bed.\n\nIt was all masculine and yet sexy. Cozy, making me feel like I was miles away from the beach, although one glance outside proved I was less than five-hundred feet from the ocean.\n\nHe pulled me towards three doors at the far end of the room. Two were closed, but the third was open and led into a spacious master bath complete with Jacuzzi tub and a glass-walled shower. Daylight streamed in through the skylight overhead and warmed my face.\n\n\"So what's behind door number two?\" I let go of his hand and reached for the nearest doorknob, but he opened the other door instead.\n\n\"Walk-in closet.\"\n\nI glanced inside and noticed it was empty except for a stack of towels and linens on two of the shelves. \"Looks like you're missing something.\"\n\n\"Yeah, I haven't been here in awhile.\" He took my hand again and squeezed it as he stared into my eyes. \"I want you to know that I've never brought another woman here before. This was my parents' summer retreat, and they handed ownership over to me just before my mother passed away. I used to come out during the summers to get away from life, but it's been a couple of years.\"\n\n\"I think it's amazing. What's a place like this worth?\"\n\nHe shrugged. \"I think the appraisal we had six years ago put it at around two million-five.\"\n\nI flinched and tried to pull away, but he held fast.\n\n\"Don't, Becca, please. I'm not trying to brag, so I apologize if it came off that way. I brought you here because you are special to me, and I have lots of good memories being here. I wanted to share them with you. If it comes down to choosing between the house and you, I'd sell it in a heartbeat.\"\n\n\"Thank you.\" I squeezed his hand back. \"I hope you understand that I'm not the kind of woman who judges people by their possessions.\"\n\nHe cupped my cheek and brushed his thumb over my lips. \"I know.\"\n\n\"But if it matters, don't sell the beach house anytime soon. I'm kind of keen on rubbing it in to Drake that my boyfriend owns a house on the Atlantic Ocean.\"\n\nMalcolm chuckled. \"Okay.\"\n\nI lowered my voice to a whisper and pointed over his shoulder. \"What are you hiding?\"\n\n\"Promise you'll not overreact?\"\n\n\"No promises, but I'm willing to give you the chance to explain whatever it is.\"\n\n\"Fair enough.\" He reached for the third door handle but didn't turn it. \"This room? I don't know why I built it, but...\"\n\nI gave him a quick kiss. \"Just show me, okay?\"\n\nHe nodded. The door opened to darkness. He let me enter first, and I heard the soft snap of a switch before light flooded the smallish room. There appeared to be no windows, and the walls were painted black, like his basement back home. Small sconces interspersed on the wall with candle-like bulbs gave the room a soft, arousing glow.\n\nI gasped as something deep inside me felt like a wildcat wanting to be unleashed. I wasn't sure if I wanted him to strap me to the Saint Andrew's Cross on one wall and flog my back and ass with that feathery-looking thing amongst the handcuffs, ropes, and paddles hanging on a rack just inside the door. Or maybe to be secured to that padded bench with the leather restraints while he fucked me mercilessly from behind. I could even envision myself kneeling on what appeared to be modified church kneeler, submitting to whatever it was he had intended the contraption to be used for.\n\nHis hands pressed down on my shoulders that I realized were shaking. \"Relax.\"\n\nI whimpered. \"How can I when you've shown me this?\"\n\n\"I'm sorry.\" He wrapped his arms around me. \"I knew it was too soon.\"\n\n\"What are you sorry for? I'm trying to figure out which of those things you're going to tie me down to first. God, I'm so fucking horny right now.\"\n\nAs soon as I said those words, I felt his own arousal pressing against my ass. Then I heard his deep growl in my ear as his hands slowly lowered, caressing me through my clothes.\n\n\"What I don't understand,\" I said turning around, \"is you don't have a dungeon or kinky room back home but you have one out here on the East Coast where you rarely visit.\"\n\n\"Like I said, I don't know why I built and stocked this room. I've never even used it. Maybe I just had the dream that someday I would...\"\n\nI reached up and laid my hand on his cheek. \"I feel honored that you've shown it to me.\"\n\nHe closed his eyes briefly and leaned into my touch. I felt my chest swell with pride that he felt this comfortable around me...that he could be honest and let his guard down, even if just a little.\n\nI stood on my tiptoes and licked his bottom lip, gently tugging on it with my teeth. \"When can we start playing?\"\n\nHe growled and deepened the kiss. When he pulled away, we both moaned. \"I have to bring in the groceries. Wait here, Lady Becca.\"\n\n\"Y-yes, Sir.\" My knees trembled as I watched him turn and walk out of the room.\n\nI sat on the padded bench and I tried not to laugh as I heard his footsteps running down the stairs. For as controlled as he liked to appear, he was as anxious as I was to try out his contraptions.\n\nA door slammed downstairs a moment later. I got brave and ventured to check out the accoutrements he'd gathered for his version of a kinky room. I wasn't too keen on the wooden cane, but the feathery flogger that had looked good from a distance was soft on my fingertips. Another one beside it had strips of suede. I was studying a ball gag when I heard a throat clear behind me.\n\nI spun around and felt the heat rise in my cheeks.\n\n\"Come here, Lady Becca.\"\n\nI stopped before him, my eyes downcast.\n\nHe tipped my chin up with his finger. \"Eyes on me, my dear.\"\n\nI had to bite my lip as he trailed a finger down my cheek then leisurely undressed me. His hot breath whispered over my nipples as he bared my breasts. His fingertips grazed my hips as he lowered my pants, and I swear his hands shook.\n\nWhen I was naked before him, he guided me to the kneeler as if I were going to confess my sins. He left me staring at the wall for a moment, and when he returned, he was carrying the box he'd retrieved at the airport. He pulled a pocketknife from his jeans and cut through the official tape, then he opened the box to reveal an assortment of ropes, dildos, vibrators, and a metal chain with clips on it.\n\n\"Well, now I see why you didn't pack that with your luggage,\" I said, my laugh strained.\n\n\"Shh.\"\n\nHe tweaked each of my erect nipples before methodically wrapping a length of rope around my breasts and tying it off behind my back. Then he bound two shorter pieces of rope around each of my wrists. I thought he was done with my chest, but he pulled that metal chain out of the box.\n\n\"Let me know if you can't take it.\"\n\nI watched his hands as he pinched the clips between his thumb and forefinger, opening the rubber-tipped ends. I wasn't prepared for the sharp pain as he clamped first one nipple then other in each of the clips, and I gritted my teeth to quell the cries rising up my throat. The chain hung between the two clamps, and when he gently tugged on it, I finally cried out.\n\n\"Are we okay, Lady Becca?\"\n\nI took a couple of deep breaths then nodded.\n\nA gentle press at my shoulders had me on my knees. Another between my shoulder blades, and I leaned forward, my bound breasts resting on the padded top. It was the strangest feeling. My breasts had began to swell from arousal but were restricted from expanding, and my nipples throbbed from their own binding. I went to rest my arms on top as well, but Malcolm had different plans.\n\n\"If at any time you cannot go on, Lady Becca,\" he said as he placed each of my hands on either side of the elaborate ironwork that created the veridical supports and tied my left wrist in place, \"just pull back. You will be unable to speak.\"\n\nI raised an eyebrow, but he wasn't looking at my face at the moment. He was concentrating on securing my other wrist. When he appeared to be satisfied, he stood up and removed his shirt. I licked my lips as he undid his pants and lowered them to the floor as well, allowing his cock to spring free.\n\n\"As was the case last night, I am fucking you, Lady Becca. Do not attempt to give me a blowjob. And no teeth, unless I say so. Understood?\"\n\nI swallowed heavily. I started to nod, but I caught myself and instead said, \"Yes, Sir.\"\n\n\"Very good. Open wide.\"\n\nAt my current height with my arms tied to the sides of the kneeler and with my bound breasts pressed against the top, I could barely move. I was completely at his mercy. Especially with him holding that chain in one hand.\n\nHe rubbed the tip of his cock, wet with precum, against my lips. Then ever so slowly, he slid inside. He was hot and thick, and he tasted divine.\n\nI closed my eyes, moaning softly, but a yank on my hair made me stare straight up at him.\n\n\"Good girl. Eyes on me.\"\n\nI gripped the iron and tried to breathe as he fucked my mouth.\n\nHe started out with long, gentle strokes, tugging on my hair when I accidentally licked him or sucked him or looked away. He held my head still as he sped up. I gagged a little, especially when he thrust deeper, and saliva dribbled out of my mouth. \n\n\"I have an idea.\"\n\nI whimpered as he withdrew and walked behind me. I heard him rummaging through his special box again, then the clink of metal. When he stood before me once more, a metal ring encircled the base of his cock with a short chain descending from it. He slid his cock into my mouth again, then he secured the chain to the one dangling between my nipples. \n\nI raised my eyes to his and started to pull back. This was not something we'd done before. I was suddenly scared.\n\n\"Shh. It's okay, Lady Becca. It's okay.\" He stroked my hair as he drew his cock back.\n\nMy eyes widened as the motion pulled on the chain and therefore my nipples and breasts. It was a dull pain, and it lessened as he slid back in. He repeated the movement a couple of times, and eventually I relaxed again.\n\nI watched his soft brown eyes grow darker in the glow of the sconces. The firmness of his jaw as he tried to control me and control himself at the same time. The glean of sweat that gathered on his forehead and naked chest. The way the humidity in the room made his long hair curl away from his face.\n\nAll else ceased to exist when I was with him. He took me away to another world, a blessed respite from the daily hassles. So far, I'd not questioned anything he wanted to do to me. It occurred to me that I really loved this man. That I would do anything for him. That the vision I'd had in Brian's chambers so long ago was possible with Malcolm. And only with Malcolm.\n\nHis grip tightened on my braid, pulling me back to the moment. He withdrew and rubbed his cock against my lips and cheeks as I gasped for breath. I was a little dizzy as he unhooked his cock from my breasts, untied my wrists, and helped me over to the Saint Andrew's Cross. He positioned me face-first against the wall and secured my wrists above my head on each of the upper branches of the X-shaped device. Then he spread my legs and secured my ankles to the lower beams. He adjusted the chains that held the cuffs until I was spread eagle against the wall to his liking.\n\nI was standing on the hardwood, but it was odd with my legs and feet turned out so they were flat against the wall as well. I leaned my forehead against the leather-padded wall, and took several deep breaths. What was he going to do to me now?\n\n\"Feather, leather, or suede, Lady Becca?\"\n\nI found my senses enough to mutter, \"Feather.\"\n\nThen, just as I had imagined, he was stroking my back with the feather flogger. Each sweeping pass sent shivers racing up and down my spine, and I mewled like a kitten. When he brushed the soft ends along my ass and then the insides of my legs and up against my pussy, I pulled on my restraints, trying to arch away. But there was nowhere to go. I loved it.\n\nAfter awhile, he suggested switching to the suede flogger. I mumbled my consent. As before, he stroked the soft ends from my wrists down to my ankles. I had my eyes closed, feeling very relaxed and a little sleepy when suddenly, a slap against my ass jolted me awake.\n\nThe feeling came again, and I choked on my cry, realizing he was swatting me now with the flogger. He alternated between my right ass cheek and my left, then the backs of my thighs. It wasn't painful, but it was no longer relaxing. In fact, the more he did it, the more aroused I became.\n\nI gripped at the air, rising up the few allowable inches on my toes as I tried to arch my back unsuccessfully. I bit my lip to silence my cries and prevent the word on my tongue from spilling out. I don't know where it came from. It wasn't like me. Yet, it was there all the same. And it wanted to be released, much like the orgasm that had been building ever since we'd entered the room.\n\nHe kept up this sweet torture for several long minutes. I cried out each time now, and it grew more difficult to keep the word inside. To stay silent. I squeaked at one point, and finally, he spoke.\n\n\"Lady Becca, do you want to tell me something? \"\n\n\"Yes, Sir.\" I was panting now, clenching my eyes closed.\n\n\"Speak freely.\"\n\n\"Harder.\" I gulped. \"Please.\"\n\nHe tucked my braid over my shoulder and kissed me between my shoulder blades. \"How delightful, my dear. As you wish.\"\n\nThe next swat was across my right ass cheek. I shrieked as he struck again, but he did it with more force. Soon, the room was filled with the repetitive slapping sounds of the flogger connecting with my skin alternated with my muffled cries.\n\nI so wanted to collapse, but the way I was positioned on the cross, I was stretched wide open and unable to even let my knees bend. I tried to relax and let myself hang by my wrists instead. It helped, but only a little. I was wound tight, and my bound breasts and nipples throbbed as they pressed into the wall.\n\nThe swats eventually returned to gentle glides against my skin from top to bottom. Then they ceased entirely. I had just managed to get a deep breath in when Malcolm's hands stroked the insides of my thighs. I let out a deep moan, which turned into a strangled gasp as I felt his hot breath against my ass.\n\nBefore I could rationalize how that was possible, something pointy pressed against my ass and something flat and soft pressed against my wet pussy. I realized it was his nose...his tongue... when his moan vibrated against my skin. The shudders started low and rose quickly.",
        "I screamed and thrashed against the wall as I came. Hard.\n\nAs he continued to lick me\u2014sometimes flicking my clit\u2014a new sensation began to build, especially when he held my ass cheeks apart to give him more access to my pussy from behind. The feeling scared me. I wasn't supposed to want him to touch me there. Yet, the more his nose rubbed there, the more curious I became.\n\nI guess I was mumbling again because he gave me a moment of respite with his tongue, although his hands continued to squeeze and massage my ass.\n\n\"Tell me what you want, Lady Becca.\"\n\n\"Please...touch me.\"\n\n\"I am touching you.\"\n\n\"No. My...my...\"\n\n\"Yes, Lady Becca?\"\"\n\nI had never felt so embarrassed before. What if he didn't want\u2014\n\n\"Tell me. Do not be afraid.\"\n\n\"Would you touch my...um...asshole? But only if you want to.\" I thought I was going to die. I couldn't believe I'd said that.\n\nHis hands slid up my body as he stood. He stepped into my line of sight and ran his finger down my cheek. \"Are you sure, Lady Becca? I know that's one of your hard limits.\"\n\nI closed my eyes for a moment and slowly exhaled. When I opened them again, he was watching me carefully, and he was no longer touching me. \"Yes. I want to feel you there. Just...no...cock.\"\n\nA light flickered in his eyes as he smiled. I had finally granted him authority to do something he'd been wanting to do. But he wasn't arrogant about it. It was more an acknowledgement of respect. That he knew I'd reached the place where I was willing to step into previously forbidden territory with him.\n\n\"It would be my pleasure, Lady Becca.\"\n\nI heard the floor creak slightly as he walked across the room. I didn't have to wonder long what he was doing. When he returned, he held a thin, silver vibrator before my eyes.\n\n\"It's small enough for anal use. I will use your natural fluids as well as some additional lube. It may feel strange at first. Unwanted. Use the safeword if you are in pain, okay?\"\n\n\"Yes, Sir.\"\n\nI closed my eyes and tried to relax as he stroked a finger over my asshole in small circles. It got to the point that I tried to circle my hips in time with his caresses. That is, until I felt his fingers gliding against my pussy. I moaned long and loud as he caressed me there. Then his fingers were sliding back, rubbing between my cheeks.\n\nHis hand disappeared, I heard a soft click of a plastic lid, then something cool and wet covered my asshole. The hardness of the vibrator replaced his fingers, first sliding against my pussy and then back to circle my asshole.\n\nI resisted at first when he pressed for entry. I couldn't help it. It was supposed to be an exit-only space.\n\n\"Do you want me to stop?\"\n\n\"No, Sir.\"\n\n\"Relax,\" he whispered in my ear. \"Don't think about it so much. Just feel. Or think of something else.\"\n\nI nodded and concentrated on the image in my head of his naked body that I could see even with my eyes closed and facing away from him. How strong he was. How warm his body was when we were close. How glorious it was to hold, suck, and ride that well-defined cock.\n\nWhen he tried again, he was successful. Still, I cried out.\n\n\"Shh. It's okay.\" He let me get used to the feel of the vibrator, then he began to twist it and move it in and out in an excruciatingly slow thrusting motion.\n\nI knew that a cock would feel completely different\u2014wider, longer\u2014and had no desire to even try that. But I was somehow okay with the vibrator. It felt good, although the fullness inside my ass was strange.\n\nHe stroked a few more times then stopped. \"Would you like me to turn it on?\"\n\nI considered that and finally decided, what the hell? \"Yes, Sir.\"\n\nHe stroked a few more times. I heard the soft buzzing before I felt it. And when it registered in my muddled brain what he was doing, I flung my head back. \"Oh, fuck!\"\n\nMalcolm chuckled. \"Well, that's one way of putting it.\"\n\n\"It feels so strange but so good.\"\n\n\"Lady Becca, you are amazing. I'm so proud of you for stepping outside of your comfort zone.\"\n\nI cussed again as he released my ass cheeks and they wrapped around the vibrator as well. I tried to rock my ass against it, but he put his hand on my lower back and held me to the wall.\n\n\"Gentle. For now, let me control it.\"\n\nMy focus was on the vibrator in my ass, so I screamed when I felt his teeth gnawing at my left ass cheek and then his tongue licking me there.\n\n\"Do you want me to stop, Lady Becca?\"\n\n\"No.\" It came out as a sob. \"Please, Sir. More.\"\n\nHe answered by biting my right ass cheek.\n\nA short while later while he was stroking that vibrator faster in my ass with one arm pressed against my lower back and he rubbed my clit with his other hand, I came again. I flung my head back with a silent scream, the chains above me rattling as my body convulsed.\n\nI was still shaking when he cleaned my backside, released my shackles, and lifted me into his arms. He carried me to his bed in the master suite and laid me on the cool sheets.\n\n\"This may hurt a little.\"\n\nI moaned and then cried out as he released the nipple clamps. First his palms and then his lips soothed the sharp ache. Slowly, he unwound the rope from my breasts as well, massaging them in turn. Then he climbed on top of me, his chest pressing against mine.\n\nI gasped from the sudden pressure against my still-sensitive chest, but I thought no more of the pain as he finally slid that amazing cock between my parted thighs and made me scream his name.\n\n###\n\nI spent the rest of the morning wrapped in a blanket on a beach chair. Despite the chill in the air, I wasn't going to pass up spending time on the sand. I'd browsed the first-floor library and snagged a romance paperback that must have belonged to Malcolm's mother, but I was having trouble concentrating on the plot. I kept envisioning the mid-century couple engaging in kinky affairs.\n\nSomething else was nagging at the back of my head, too. I'd tried not to think about it much lately, but when one's livelihood was at stake, there were some things that refused to be ignored completely. I just wasn't sure how to approach it and solve the problem.\n\nWhile the sun warmed my face, I rolled over some possibilities. I even texted Sue with the most probable option, but she hadn't responded back by the time I went inside to have lunch.\n\n\"Are you sore?\" Malcolm asked as we sat on the back porch eating freshly boiled crab while the tide rolled in mere feet away.\n\n\"Just a little. Nothing a soak in that tub won't cure.\"\n\n\"Something's troubling you. You've got a distant look, and your forehead keeps creasing. Do you want to talk about it?\"\n\nI broke off a crab leg, dipped the end in the little dish of hot butter, and then sucked the meat out and into my mouth. I washed down the bite with a sip of wine. I wasn't ready to talk about the issue I'd been contemplating this morning. It was a touchy subject to begin with, so I shrugged and picked a more logical one. \"I'm still trying to process the whole anal play. I mean, it's just so...taboo.\"\n\n\"But?\" He laughed and waved his hand as if to brush away that bad joke.\n\nI cringed. \"I liked it.\"\n\n\"Do you know what I love about you?\"\n\nI shook my head and reached for another crab leg.\n\n\"Your honesty. Drake said you're usually an introvert. You only open up in your books. But I think with me, you're more at ease.\"\n\n\"You make me feel comfortable. Like I don't have anything to prove.\"\n\n\"You don't. And I don't want you to change. I want you just the way you are.\" He leaned forward and pushed aside the plate of discarded shells. \"I mean it.\"\n\n\"Oh, God. Don't tell me you're proposing. We've only know each other\u2014\"\n\nHe took my hand and smiled although he was shaking his head. \"No, I'm not proposing. But I am asking you to give us a chance. A real chance. I've never met anyone like you before. You're a mystery and I struggle with this need to crack you open and see how you tick...why you tick. And even that makes me love you more. I have been going crazy the last few weeks not being able to see you.\"\n\nHeat filled my cheeks, and before I could stop it, I said, \"Chewbacca!\"\n\nMalcolm flinched, his eyes wide. \"Now you say it?\"\n\n\"I'm so sorry!\" I slapped my hand over my mouth.\n\n\"Becca?\" His smile faltered. \"I thought that bringing you here this weekend...\"\n\nI gripped his hand with both of mine. \"You don't understand. I get embarrassed easily when you say things like that. Compliments and such. I'm not used to it. I'm used to being in control...especially of my emotions. But when I'm with you, I guess I just relax. And apparently say things that are in my head at the wrong moment. I want this, too. I do.\"\n\nHe raised an eyebrow but didn't speak. He didn't pull away, either, so I took that as a good sign.\n\n\"I love you, too, Malcolm.\" I stood, pulling my sweater up over my head as I walked around to his side of the square table. \"I'm glad you fake kidnapped me to your mansion on the beach.\"\n\nHis eyes darkened as I unhooked my bra and let it drop.\n\n\"I'm glad you're helping me find my kinky side.\"\n\nHe nodded as I shimmied my jeans down.\n\n\"But most of all?\"\n\nHe leaned forward and licked his lips.\n\n\"I'm glad you're being so patient with me and haven't given up on me already.\"\n\nHe growled long and low as I stood naked before him.\n\nI was thankful that it was still unsually in the high sixties. Otherwise, I would have looked like a fool, shivering my ass off as I tried to be sexy. \"So no, I'm not running away from us. I'm willing to put everything I can into this. Including setting aside my selfish ways to adapt to yours.\"\n\n\"That's good.\" His voice sounded gravelly.\n\n\"But first, I'm going skinny dipping in the Atlantic Ocean.\" Before he could react, I sauntered down the steps and over a little bridge that spanned a sand dune.\n\nThe sand was gritty under my bare feet. In less than a minute, I was wading into the ocean. And suddenly wished I hadn't. Despite the unseasonably warm weather we'd been having, the ocean was absolutely freezing. But I clamped my mouth shut at the shriek that rose up as the cold water covered my toes then my ankles and crashed against my shins. I walked deeper into the water, smelling and tasting the saltiness as the breeze misted against my face.\n\nWhen my ass was covered, I turned around. I stumbled back a few steps as I saw Malcolm standing on the porch, just as naked as I. He looked like a model from the cover of a Harlequin novel with the breeze blowing his hair around his head as he stroked his cock.\n\nI couldn't help it. My right hand slid down between the water level, my fingers parting my pussy so I could rub my clit. I captured my breast in my left hand and whimpered at the sensitivity I still felt after having had my breasts bound for almost an hour. I cold still see the marks, and my already erect nipples tightened painfully at the thought of how good it had felt to be restrained.\n\nThe whole morning had seemed surreal. And now, here I was, masturbating in the Atlantic Ocean with the waves crashing at my back while my boyfriend masturbated on his back porch.\n\nThe waves inside me rose and then gently spilled over, making me topple to my knees. A wave crashed over my head, soaking me. When it receded, the water lapped at my breasts, and I whimpered at the mixture of exhaustion, frustration that I had gotten more wet than I had intended, and the need for more release.\n\nFrom a glossy distance, I saw Malcolm go inside, but he reappeared a moment later with a towel. Somehow, I managed to get to my feet, stumble up the beach, and cross over the bridge again. My teeth were chattering when he met me and wrapped the towel around my shoulders.\n\n\"I-I'm f-f-fucking c-c-cold.\"\n\n\"But it was such a lovely show.\" He chuckled and led me inside and up to the third floor.\n\nI mumbled that I was leaving wet, sandy footprints behind on the hardwood.\n\n\"You just walked naked down the beach and played with yourself in full-view of several houses, but you're worried about sand on my floor?\" He shook his head. \"You sure have your priorities straight.\"\n\nHe deposited me on the closed toilet lid in the master bath while he ran hot water in the tub. Then he searched for something in a cupboard and finally removed a purple bottle and a loofah sponge.\n\n\"Come here, my kinky little mermaid.\" He removed the towel I had drawn tight around me, and he helped me into the tub.\n\nI let out the loudest sigh of relief as I sank into heavenly bliss. Then I giggled as he climbed in and knelt in front of me, his cock bobbing on the surface.\n\n\"Are you laughing at me?\" He was smiling, but it was a devilish one if I'd ever seen one.\n\n\"No, of course not.\" Another giggle slipped out.\n\n\"And here I was going to clean you up then make love to you.\"\n\nI sobered quickly and shook my head. \"I was not laughing at you.\"\n\n\"I could swear you were.\"\n\n\"No, Sir.\" I loved how his eyes darkened at those two simple words. \"Please, Sir, make love to me. In the bathtub.\"\n\n\"That's better, Lady Becca.\" He snapped open the purple bottle and squeezed some of the thick liquid onto the sponge. \"Turn around and get on your knees.\"\n\nI obeyed without thinking twice, even though my top half was no longer submerged in the hot water. He brushed my damp, matted hair over my shoulder. When he pressed the sponge to my shoulders, I inhaled deeply at the smell of lavender.\n\nI sank down to sit on my heels as he washed my back and arms. Then he had me sit up and lean forward, my hands braced on the wall. The rough sponge scraped against my ass as he washed each cheek and in between.\n\n\"Turn around so I can wash your breasts.\"\n\nIt took a little effort to not splash the water over the sides as the two of us together had made the level rise quite high. When I faced him again, he cupped my right breast. Very gently and methodically, he rubbed the lavender body wash over my skin. He finished and cupped my left breast, starting the process over again. My nipples perked up, and I moaned.\n\n\"Feels good?\"\n\n\"Yes, Sir.\"\n\nSatisfied that my breasts were clean enough, he moved on to washing my chest and belly. When they were complete, he had me sit on the edge of the tub so he could wash each of my legs. The loofah tickled my feet as he cleaned them as well.\n\nOverall, the whole process was very relaxing. It was also a little erotic. Especially when he parted my legs and rubbed the sponge against my pussy. I leaned my head against the tile wall and stared out the window at the ocean as he washed my most intimate place.\n\n\"Are you ready for me to make love to you, Lady Becca?\"\n\nI blinked and turned my attention back to him. \"Yes, Sir. Please.\"\n\nHe put his hand under water, and I wondered what he was doing until the water level went down a couple of inches. Then he took my hand, and as he sat on the little seat under the water at the other end of the spa tub, he pulled me down. I straddled his hips, and his cock pressed against my pussy.\n\n\"You are in control, Lady Becca. Show me what you want. Tell me.\"\n\nI nodded, gasping as his cock twitched. I rose up, and he helped guide his cock into me. I sank down slowly onto him, shuddering a little. When I was fully seated, kneeling on the seat on either side of his legs, his hands rested on my hips.\n\nFor a long moment, I just sat there, relishing the feel of him inside me, of the warm water around us. Then I began a gentle rise-and-fall motion, sending waves splashing against my back. He didn't move at all; he just held onto me as I set the rhythm.\n\n\"Please, Sir, put your hands on my breasts.\"\n\nHis hands slid up my sides and cupped both breasts. He squeezed and caressed as I rode him and told him what to do. He licked his lips, and I nodded. Then I growled as he sucked one nipple into his mouth, grazing his teeth over the peak. He switched to my other breast, and I wrapped my hand around his head, holding him in place.\n\nI was gasping for breath, loving the way the water moved between us, wondering how this could get any better in this position. Then it hit me.\n\n\"Please, Sir, could you play with my ass?\"\n\nThis time, Malcolm growled. He continued to nuzzle his face against my breasts, but he moved one hand behind my back to hold me. His other hand squeezed my ass. I felt a finger rubbing between my cheeks, then further up against my pussy. \n\nI arched back and stilled as he pressed his middle finger into my ass. I let him adjust his hand so he was cupping my ass\u2014his one finger inside\u2014then I rocked back and forth. The alternated feeling of cock and finger sliding in and out of my two holes was amazing. I was staring at the ceiling now, my jaw slack as I embraced all these sensations flooding my body at one time.\n\nI gripped Malcolm's shoulders, holding on for dear life. His hand on my back moved up so his arm could support me there while his fingers buried in my hair. Then he was kissing me, our tongues playing, our hot breath mingling.\n\n\"Come for me, Lady Becca.\"\n\nI whimpered and rocked harder, my breasts bouncing on the water now, causing more waves. I came just as he bit my lower lip and tugged on it. He released it as I screamed, letting me ride out the rest of my orgasm on his lap at my own pace. But as soon as I was done shaking, he lifted me off of him, helping me stand.\n\n\"Hands on the wall, Lady Becca.\"\n\nHe moved behind me, quickly sliding inside. He stroked hard and fast for several minutes, then withdrew and came across my back.\n\n\"Stay still.\" A moment later, he was washing my back again. \"Okay, sit down.\"\n\nHe got out, dried off, then came back for me. I wrapped the towel around my body under my arms and tried to untangle my hair the best I could. Behind me, I could hear the gurgle of water as he pulled released the plug on the drain.\n\nWe retired to the bed where we snuggled and took a leisurely nap. I wasn't sure about him, but I was completely drained...and finally sated. At least for now.\n\nThis had been the best damn impromptu vacation I'd ever had.\n\n###\n\nThat evening, he took me to a restaurant called Seacrets on the west side of the penninsula leading to Ocean City. It was situated on Isle of Wight Bay, and we sat in the part of the dining area where there was only a thatch roof above our table. The floor beneath our feet was a layer of sand. Before us was the open bay and the setting sun. It was the most spectacular thing I'd ever seen with the orange rays lighting up the water as if it were on fire. When we drove back to the house, I wanted to go lay on the beach with him. He said he had a better idea.\n\n\"I don't know what could possibly be better than watching the stars from the beach, Malcolm,\" I playfully pouted as he unlocked the front door.\n\n\"Will you just trust me?\"\n\n\"I do. I do.\"\n\n\"Then why do you always question me?\"\n\nI grinned. \"Because I love that look on your face. Like you want to roll your eyes at me, but your dominant side takes over and you resist. A fire lights in your eyes, and I always wonder if you're going to jump into a scene. You love the mystery about me. I love the suspense when I'm with you.\"\n\nHe pulled me into a kiss, his tongue teasing mine. \"Nice save...Becca.\"\n\nI snorted, and he gave me a warning glare.\n\n\"I should swat you for that.\"\n\nI ran ahead of him into the house and toward the kitchen where I put my leftover dinner in the fridge. Then I headed out to the front porch.\n\n\"I don't know where you're going, but the surprise is upstairs.\" He opened the fridge, removed the bottle of wine from lunch, and then grabbed two glasses before heading toward the stairs.\n\nI sighed and turned around. I lost him on the second floor. \"Where did you go?\"\n\n\"Up here.\"\n\nI wandered into the large sitting room and looked up to the loft area. As I ascended the stairs to meet him, I saw he was pulling on a chain that was attached to the ceiling at the far end of the small room. Suddenly, the ceiling gave way, revealing a hidden ladder.",
        "\"After you, Becca.\"\n\nI climbed up slowly. As my head emerged above, I gasped and had to grip the ladder to stop myself from falling down it. \"Malcolm, it's breathtaking.\"\n\n\"Yes, your ass is quite amazing. Keep moving.\"\n\nI laughed and climbed the rest of the way up. With both feet flat on the ground, I turned around and around. He joined me shortly and set the wine and glasses on a table besides two padded lounge chairs.\n\n\"You like?\"\n\n\"No, I wish were still on the beach.\" I smacked his arm and looked up again.\n\nWe were in small room with a glass wall and glass ceiling. On the other side was the night sky filled with stars and a big round moon. I heard the whir of a motor, then the ceiling slid away. Or rather, the glass panels slid apart. The night breeze drifted in to kiss my skin.\n\n\"You most definitely cannot sell this house now.\" \n\n\"See, I knew you wanted me for my money.\" He chuckled and poured each of us a glass of wine.\n\nWe settled into the chairs and drank our wine in the silence while we stargazed.\n\nWhen the wine was gone, I twisted onto my side, facing his chair. \"I want to talk to you about something.\"\n\n\"Sure.\" He sat up and turned to face me, his hands between his knees. \"Would you be more comfortable if we went downstairs to the sitting room?\"\n\n\"No, this is fine.\" I took a moment to gather my nerves. \"You know that whole ordeal with Brian and the magazine article?\"\n\nIn the moonlight, I saw Malcolm rake his fingers through his hair. \"How can I forget? I punched him for what he said to you. What he threatened. Then the cops arrested him for sexual harassment. Do you think that will stop him?\"\n\n\"I don't really know. Part of me hopes so, but then the other half says his calculating personality would still do it. I don't think he'd be afraid of a lawsuit as long as he got the credit for breaking the story.\"\n\n\"Becca, can I just say I am so glad you got out of that relationship before it even got started? He's nothing but trouble.\" Malcolm scooted his chair closer and squeezed my arm.\n\nI smiled. His touch was warm and very comforting. \"What if I did it first?\"\n\n\"What? Sue him? But doesn't he have to breach your non-disclosure agreement first?\"\n\n\"No.\" I sat up and grabbed both of his hands. \"Not sue him. Come out.\"\n\n\"I'm not following.\"\n\n\"He threatened to reveal to the public that I was Drake Alexander. What if I reveal the secret before he can? If I spin it my way, I can try to lessen the negative response.\"\n\n\"Have I ever told you how amazing you are, Becca?\" Malcolm leaned over and brushed my lips with his.\n\n\"No, never,\" I mumbled, wrapping my arms around his neck.\n\n\"So do you have a plan to go about making the big reveal?\"\n\n\"Yes, I was thinking about it this afternoon as I was lying on the beach.\"\n\n\"Do you want to tell me about it?\"\n\nMy plan spilled out. Malcolm had to tell me to repeat a couple of things I was speaking so fast. When I was done, he stood and pulled me into his arms.\n\n\"That, my dear, is not only very creative, it's a brilliant idea.\"\n\n\"Is it now?\" I leaned my head back and smiled up at him.\n\n\"Yes.\" He kissed me again, his hand wrapping around my waist and tugging me closer. \"I have an even better one, though, right now.\"\n\n\"You don't say.\" I rubbed against him, literally feeling the point he was trying to make.\n\n\"How about I make sweet love to you under the starlight?\"\n\n\"These aren't the most comfortable chairs. Unless you want to throw a blanket down on the floor.\"\n\n\"Not here.\" He closed up the ceiling in the observation room, and we descended down to the sitting room before backtracking to the main staircase. Up in the master suite, he pressed a button on the wall.\n\nI stood in awe as the fabric panel above the bed rolled away like a movie screen closing, revealing a large, glass window through which we had a clear view of the night sky.\n\n\"You like?\" Malcolm asked, his front to my back, his hand sliding up to cup my breast through my top.\n\nI ground my ass against his erection and laid my head back on his shoulder. \"I love.\"\n\n\"Good.\" He nuzzled my shoulder, licking and nipping his way up until he got to my ear. \"I can't wait to get you out of those clothes and to slide into your warmth. You are wet, aren't you?\"\n\nI gasped as he undid my pants and his hand slid beneath my panties. My moan turned into a coo as his fingers searched.\n\n\"Oh, yes, Becca. You are quite wet. I love how you can be so ready for me with just the suggestion of sex. It makes me so hard.\" He pressed against me again to prove it, and my ass arched up to him. \"But tonight, it's all about you.\"\n\nI whimpered as he undressed me from behind. When I was naked, his hands skated over every inch of skin they could find. Shivers raced after his touch, and my body did a little wave against his body. I gasped as I felt his skin against my back.\n\n\"I want you to crawl onto the bed, Becca. Nice and slow. Let me see that body.\"\n\nI grinned over my shoulder and sauntered to the end of the bed. I had to get on my tiptoes to climb up it was so high off the ground, but it was to my advantage as I was able to flash my pussy at him.\n\nI heard his growl as I lifted one leg, kneeled on the bed, and then grabbed the duvet to pull myself up the rest of the way. I exaggerated the crawling effect so my back arched and my legs stretched out behind me, my ass rising and falling as I crossed the length of the mattress.\n\nWhen I reached the headboard, I gazed back over my shoulder at him. I expected him to still be standing where he'd left him, possibly stroking his cock. Instead, he'd followed me to the bed and was climbing up himself.\n\n\"You look good enough to eat.\"\n\nI grinned. \"Be my guest.\"\n\nHe matched my grin and rolled over onto his back, lying down between my legs. I was still on my knees, and I used the pillows to cushion my chest. He gripped my thighs and spread them wider. When I sank down, his tongue slid against my pussy.\n\n\"Please, don't stop!\" I rocked a little over his face, feeling his nose rub against my clit.\n\nHe wrapped his arms around my legs and held me apart. My deep breaths turned to heavy panting as he licked me faster and faster. Right before I came, he stopped and rolled me onto my back.\n\n\"Dammit! I was right there.\"\n\n\"No, I want you to feel you come around my cock.\"\n\nI could only nod. A soft cry escaped when he wedged his hips between my knees, his cock bobbing against my pelvis.\n\n\"Do you want it hard and fast, Becca, or slow and gentle?\"\n\nI couldn't make up my mind. I was going to come soon either way, so I decided to tease him. \"Both.\"\n\n\"God, I love you.\" When he leaned down to kiss me, his cock fell into place. He arched his hips, and with the slightest movement, he was fully seated within me. Then, just like a knight pulling his sword from its sheath for the first time to admire it, he slowly withdrew.\n\n\"Oh, fuck, that feels so good.\" I clenched my eyes, resisting the desire to follow him with my hips.\n\nAs I requested, he alternated between thrusts and glides, making me delirious. I got lost in the feel of him on me and in me as I watched the stars above us before they exploded inside my head three different times. He joined me on the final climax, moaning my name in my ear.\n\nI was crying and shaking when his arms and legs enveloped me like a warm blanket. He smelled like the ocean and the woods mixed with that tangy scent of sex. I nuzzled closer, took a long, deep breath, and then drifted off to sleep.\n\n###\n\nI called Sue the next morning after breakfast. She tried to discourage me from going public about being the author of the Dex Knightly Mysteries. She was certain that Brian Hughes was just bluffing; she said she'd met his type before. In the end, though, she agreed to set my plan into motion.\n\nMalcolm and I played Frisbee on the beach until my stomach growled, signaling we should have lunch. Our timing was perfect as the sky had become overcast.\n\n\"I think we should eat indoors.\" \n\nHe scooped the last freshly grilled Maryland Blue Crabcake off the grill and onto the plate I held out. \"We'll be fine. There's a roof over the porch. It's just a light rain.\"\n\n\"I'm impressed that you know how to make fresh crab and fresh crabcakes.\" I followed him out to the porch, wishing I had brought a jacket. The temperature had dropped considerably with the sun behind the clouds.\n\n\"Do you doubt my cooking skills?\"\n\n\"No, not at all.\" Thunder rumbled in the distance, and the sky was darker now, the waves choppy down on the beach. \"However, I do doubt your decision for an outdoor picnic. Can we please go inside?\"\n\n\"You were right, it's not looking very nice out here now.\"\n\n\"It's okay.\" I gave him a kiss on the cheek as I stepped past him and pushed the sliding door open. He managed to get everything inside in one trip, which was good because as soon as I closed the door, the wind picked up and sent sprays of rain against windows.\n\nWe ate lunch quickly and were cleaning up the dishes when lightning cracked overhead.\n\n\"Do you have flashlights or candles in case the power goes out?\"\n\n\"Check the closet next to the fridge. There should be at least one flashlight. You'll need to put some batteries in it. There's a package of new ones on the counter. I bought them just in case.\"\n\n\"Good thinking.\"\n\nI sifted through the three deep shelves of what appeared to be a storage closet. I found one flashlight and three candles in jars plus a box of matches. I readied our emergency lighting kit while Malcolm wiped down the counters.\n\n\"I don't suppose this place has cable?\"\n\n\"No, sorry. I only keep the electricity and water on, and that's only from April to November. But there are some DVDs in the cabinet under the TV.\"\n\nSo we laid on the oversized couch in the living room, cuddled in each other's arms as the storm raged on outside and a classic movie from the 80s played on inside. It was wonderful. Natural. And surprisingly, we didn't make out like horny teenagers.\n\nWhen the lights flickered and the power eventually went out, we decided to go upstairs and take an afternoon nap. I guess we were exhausted, because when I woke up, it was dark out and the stars were shining down through the skylight above us.\n\nI rolled over and watched Malcolm sleep. He still had his T-shirt on, and his hand was resting on his chest as he lay on his back. He looked so peaceful, his face and his body relaxed. I risked waking him and ran my fingers through his hair. His head rolled toward my touch, his lips slightly parting. I kissed the pads of two of my fingers and pressed them to his lips, then I snuggled up to him and adjusted the covers.\n\n###\n\nI was the first to wake Monday morning. I dressed in jeans and the heavy sweater Daphne had been so kind to pack, then headed downstairs to make some coffee. The only socks I had with me were lightweight, so I donned a blanket from the living room and got cozy on the back porch as the sun rose.\n\nAn hour later, I heard the screen door open and close. I felt the heat of Malcolm's body as he stood behind my chair. He didn't say anything, and I assumed he was watching the ocean as well. I waited several minutes before reaching up and squeezing his hand that I found resting on the back of the chair.\n\n\"Good morning.\"\n\n\"Good morning. Am I disturbing you if I join you?\"\n\nI smiled up at him. \"Nope. In fact, I'm glad you're up. Do you want to take a walk along the beach? I don't know when our plane leaves, and I'd like to do that with you before we have to go.\"\n\nHe set his cup aside, removed his socks, and rolled up his jeans to his calves. \"Ready when you are.\"\n\nI copied him, though I finished my coffee first.\n\nWe walked up the beach hand-in-hand. I found a couple of shells and stuffed them in my pockets after brushing most of the sand off. On our way back down the beach, Malcolm wrapped his arm around my shoulders, and I leaned into him, my arm around his waist.\n\nI sighed, watching a seagull hop around on the sand chasing a tiny crab. This was such a different life than what I was used to. I could get used to it. \"I can't believe our impromptu vacation is almost over. I don't want it to end.\"\n\n\"From what Daphne was relating to me while you were going through security, you didn't even want it to start.\"\n\nI tried to punch him playfully, but he stopped and hugged my arms to my sides.\n\n\"I'm glad you went with her, Becca. We needed this.\" He bent down and pressed his lips to mine.\n\nI let the kiss linger a moment before I pulled back. \"Do you want to know why I resisted?\"\n\n\"You already told me. Because you don't like surprises.\"\n\n\"Well, yes, but there's more. I was kicking my own ass for being so mean to you. I wanted to get in my car and drive to see you. To apologize. When my doorbell rang, I thought it was you. And when it wasn't, I didn't want to be rude to Daphne, but I wanted to tell her to get lost so I could come after you.\"\n\n\"And how would you have felt when you showed up at my house and I wasn't there?\"\n\n\"I don't know.\" I laid my head on his chest, and he adjusted his embrace so one hand smoothed over my back while the other brushed my hair from my face. \"I would probably have wished I'd called first. Or started wondering if you were out with another woman.\"\n\nMalcolm tipped my chin up. \"There is no other woman, Becca. Just you.\"\n\n\"Good.\"\n\n\"But I'm glad you would have worried about that. Lets me know you don't want to share me.\"\n\n\"Trust me, I don't want to be shared, either. Besides, I'm the jealous type when it comes to relationships. If I even catch you thinking of looking at another woman\u2014\"\n\n\"Oh, I won't.\" He grinned down at me. \"I've see what can happen when a guy is not on your side.\"\n\nI laughed. We continued down the beach, sticking to the wetter areas where the sand was softer. The air was much cooler today, finally feeling like autumn after the Indian summer we'd been having in Chicago. I wondered if the coming storm had left the change of seasons back home on its way out East.\n\n\"Becca?\"\n\n\"Yeah?\"\n\n\"I just wanted to say I'm very, very proud of you. Your gung-ho attitude on entering this lifestyle takes my breath away. Not to mention your stubbornness to stick with it while trying to hold your own ground and keep your identity. You are unlike any sub I've met before, and I mean that in a good way.\"\n\nI shivered from his words. I understood exactly what he was saying. And I felt blessed to have been introduced to him, to be his sub now. To be so much more.\n\nAhead of us, I could see the faint outline of Ocean City. It seemed so far away, yet if I reached out, I could imagine touching it with my finger. Much like this summer.\n\nMy life had been a complete whirlwind the past two months. I'd been reckless with Brian. I guess I'd thought I was invincible, knowing I'd held this secret for so long about my nom deplume and no one could take it from me. But being with Brian\u2014although it had been an awakening experience\u2014had shown me just how vulnerable I really was.\n\nThe best decision I'd ever made was to go running to Drake. He'd been the ever-supportive brother. His brilliant mind had thought to introduce me to Malcolm. And I'd almost messed it up. Fate, however, had given me a second chance.\n\nWas I making a big mistake with this plan to beat Brian at his own game? What did I have to lose if it all blew up in my face? My reputation? How much did that matter to me anymore?\n\nA tinge of nostalgia swept over me as a wave rolled in over our feet. I could see myself writing my books here at the beach house and falling asleep under the stars with him. Leaving behind the big city and all the frustrations there. Not to mention exploring his attic room more. \"Do we really have to leave?\"\n\n\"Yes, unfortunately we have to fly back tonight. But we can return for the summer or other vacations. I've never been here around Christmas. We could bring Drake and Daphne.\"\n\n\"I like that idea.\" I moaned as he stopped and kissed me again, this time slipping his tongue into my mouth. When he let me up for air, I smiled. \"I have a suggestion.\"\n\nHe cocked an eyebrow. \"What, pray tell, is that?\"\n\n\"Can you build a kinky dungeon at your place? At least a Saint Andrew's Cross?\"\n\n\"You liked that, huh?\"\n\nHeat filled my cheeks, and my pelvic muscles clenched just thinking about it. \"Oh yeah.\"\n\n\"You know I can do a multitude of things with you facing me, too?\"\n\n\"That, I would like to see.\"\n\n\"Watch what you wish for.\"\n\nI smirked at him. \"Bring it on.\"\n\nHis eyes darkened. \"Oh, Lady Becca. You are such a tease.\"\n\nI screeched as he reached for me. I ducked, and he chased me back to the house. I was in such big trouble now.\n\n###\n\nThree weeks later, I paced a large storage room stacked with boxes and shelves of books.\n\n\"It's not going to work. I'm sorry I brought you all into this.\"\n\n\"Becca, stop. Take a deep breath.\" Malcolm massaged my shoulders. \"You know we'd back you in any decision you make.\"\n\n\"Even when my life as I know it may be over in a matter of,\" I checked my watch, \"twenty minutes?\"\n\n\"You are so dramatic. Maybe that's why you're such a good writer,\" Drake said from the metal folding chair he'd confiscated. The only chair in the room. As if I'd be able to sit down right now, anyway.\n\n\"Funny, Drake. Very funny.\" I turned and laid my head on Malcolm's shoulder. \"What was I thinking?\"\n\nThe door opened then closed again, and I jumped.\n\nMalcolm hugged me tighter and kissed my forehead. \"It's just Sue.\"\n\n\"How are we all doing?\" Sue's bubbly voice sang behind me. She clapped her hands, and I could imagine her bouncing on her toes.\n\n\"Horrible,\" I said.\n\n\"Great,\" Malcolm said at the same time.\n\nI glared at him.\n\nHe leaned in and whispered in my ear. \"Behave, Lady Becca.\"\n\nI stiffened. Surely he wouldn't...\n\n\"Just a little case of the nerves,\" Malcolm said, squeezing my hand. \"Can you two give us a few minutes?\"\n\nDrake and Sue left the storage room. The former had a grin on his face, while the latter was checking a clipboard and humming to herself. As soon as the door closed, Malcolm tugged me behind a row of shelves, turned me around, and put my hands up on the wall.\n\n\"Don't, move,\" he growled in my ear. \"And don't say a word.\"\n\nI bit my lip as he reached around and lowered my pants. My eyes closed as his fingers slid down between my panties and skin. As they pressed between my thighs and stroked languidly. As his other hand undid a couple of buttons on my top and caressed my breast through my bra.\n\n\"Relax, Lady Becca.\" His hot breath tickled my neck, then his tongue licked at my skin.\n\nI arched away from him with the intent to rock into his hand, to move it where I felt that special itch that suddenly needed scratching. It was a natural instinct.\n\nHe bit my shoulder and pinched my nipple. \"I said don't move.\"\n\nThe scream rising in my throat morphed into a strange sigh as he slid two fingers up inside me, stroking fast. I flung my head back against his shoulder, and I stared up at the bright fluorescent lights as he brought me to release. Just before I came, he let go of my breast and roughly turned my head to the side where he smashed his mouth to mine, cutting off my cry.\n\n\"Suck, Lady Becca.\"\n\nI was still panting as he held me against him and pressed his fingers into my mouth. I moaned, gliding my tongue around them.\n\n\"Very good. Now, I'm going to get you dressed again. And you're going to go out there and prove to your readers that no matter what your name is, you are a brilliant writer.\"\n\nI gulped. \"Yes, Sir.\"\n\nHe kissed me lightly. \"Good girl.\"\n\nTen minutes later, I was presentable again and getting into position. I took several deep breaths. As I licked my lips, I tasted my lingering sweetness. I smiled and settled into the wingback chair. I could do this. I would do this.\n\n\"If I may have your attention, could everyone please take your seats?\" Sue said behind me.",
        "The din of chatter settled. No turning back now.\n\n\"Good evening, ladies and gentlemen. Thank you for attending this special book signing. It has been a long time coming, and I'm sure you're all anxious to get to the highlight of the evening.\" Sue paused, and I could hear a smattering of whispers under the click of cameras. The resulting flashes reflected off the dark faux wall that had been set up. \"Let me tell you a story, first. I promise, it will be short.\"\n\nI tuned out her voice as she relayed how she had met this wonderful person fifteen years ago and had known that writer was a genius in the making. I counted to ten, remembering all my training with Malcolm. I wondered where he was now. How many people were sitting in the bookstore; if it was standing-room only. I tried not to think about their reaction.\n\n\"If you are a faithful reader of the Dex Knightly Mysteries\u2014as many of you must be since you are here\u2014you will recognize the scene behind me.\" Sue paused again, which was my cue to raise the book I held in my right hand, as well as the cue for the hired assistant to turn a spotlight on behind me.\n\nThe circle of yellow light started small on the black wall, then it slowly grew until it revealed a cardboard fireplace with an equally fake, painted-on fire. I had to admit it looked pretty cheesy, and I struggled to not laugh. The light panned over to where I was sitting. My arm and the book I held were now bathed in the warm glow; the rest of me remained hidden from their view.\n\n\"I present to you the infamous photo from all of Drake Alexander's books and dust jackets: the elusive writer reading a novel\u2014perhaps a self-penned one\u2014by the firelight. Cozy. Mysterious. And yet, not entirely unknown.\"\n\nThe murmurs grew louder, and Sue waited until they quieted again.\n\n\"Each one of you has grown to love Dex Knightly over the years. Yet, you've never met him. He is, after all, a character in a fiction novel. But that doesn't make him any less real to you. He lives in your creative minds. You daydream about him. You envision him rescuing you from a harrowing situation, or at the very least, shaking up your mundane life.\"\n\nMy arm was getting tired. Maybe I shouldn't have made Sue draw out the suspense. Maybe just coming out with the truth in a press release would have been better. Maybe\u2014\n\n\"Before I reveal the true identity of your beloved writer, I have one question to present to you. Will knowing who Drake Alexander is change how you feel about Dex Knightly? About the stories?\"\n\nThe crowd was getting restless by the increased sounds of chatter, coughing, and shifting of chairs. I felt their pain. As much as I loved Sue, she could get a little dramatic sometimes. I'd caught at least three times where she'd strayed from the script we'd practiced. Although, this last one with her \"final question\" was pretty good.\n\n\"Ladies and gentlemen, the real Drake Alexander.\"\n\nThere was an audible intake of breath from the waiting fans. I echoed their reaction, prayed I wouldn't throw up, and closed the book. It felt like slow-motion as I stood. I think the world stopped turning for the moment it took me to face the crowd and step fully into the spotlight.\n\nWhatever I had been expecting to hear, it hadn't been this: dead silence. My heart crashed to my feet. I swallowed my cry of surprise and was turning to run off the stage\u2014to hell with being the macho, popular writer who was afraid of nothing except not pleasing her partner in bed, and apparently ending the lie to those devoted to her\u2014when the cheers and applause reached my ears.\n\nI stumbled back into the chair. I righted myself as Sue stepped to the side of the microphone and small podium that had been set up. The camera flashes blinded me. When I could see again, Sue had her hand out, motioning me forward.\n\n\"May I present to you, Rebecca Rockland.\" Sue smiled at me as she clapped along with the majority of my fans. I could see that some were still in shock by the way they just sat there with slack jaws and deer-in-the-headlight eyes.\n\nI swallowed my fears and stepped up to the microphone. \"Thank you, everyone, for coming out tonight. I appreciate your patience, but most of all, I appreciate your loyalty. You see, while I had hoped for a positive outcome of releasing this news, I had not expected it to come true. In all truth, I had never intended for the series to take off. It was an experiment that, well, was successful. More successful than I could have ever imagined. And yet, I've had to enjoy that success from afar, hiding in the shadows as Dex got all of the applause and adoration. But that's something I knew would happen if I started down this path. And I was okay with that. I'd had my time in the sun, now it was time to let someone else step up and have a turn, even if he was fictional.\"\n\nI accepted the bottle of water Sue handed me and took a drink. I spent the next few minutes explaining why I had chosen to write under a man's name, to write from a man's point of view.\n\nThe longer I talked, the calmer I became. The more I settled into my element. I was no longer frightened of what these people would think of me. I was the confident writer who\u2014albeit, still hated being in the limelight\u2014knew these people were here because they loved my stories. They were my fans. Regardless of the name on the cover of my books.\n\n\"In a short while, I will be signing books. I see most of you have brought copies of the 'Dex Knightly Mysteries.' We also have available for this night only, copies of my previous books, including the out-of-print editions. But first, as a special treat, I will be reading an excerpt from my new series, 'Triple Tease.' So if you will indulge me for a few more minutes of your time, please sit back and enjoy.\"\n\nI opened a manila folder on the podium. Just seeing my words in print made my stomach flutter. The first book still had a long way to go, and Sue worried that it was too soon to share the details yet. But I had, once again, convinced her that my idea was the right one. I'd just thrown my readers for a loop. I needed to coax any naysayers back to my side. What better way than to give them what they really wanted: a new story? It wouldn't matter that the book wouldn't be out until next year. They would be craving it in the meantime.\n\nWhen I lifted my eyes, I searched the back of the crowd. There, standing against a bookshelf wearing the biggest smile, was my boyfriend. My gaze locked directly onto Malcolm's. Then it moved to Drake's, Daphne's, and finally Sue's. They were all smiling, and the guys were giving me a thumbs-up. It was my time to shine...again.\n\n\"The word 'vanilla' had always brought to mind ice cream, hand lotion, and candles until Tess MacMillion met Brady Douglas. Now, it made her think of sex. The kind her parents and grandparents and ancient relatives had always had. Plain, old, boring missionary-position sex. It was the last thing she wanted, especially when Brady called her 'kitten' and asked her to kneel before him in his bedroom while he slapped the black riding crop across his open palm in time with the slow beat of the music playing in the background. The same hypnotic music every time, like one would hear in a nightclub. No words, just sounds that filled her head and took her to another place. She couldn't believe how sex before Brady had ever been satisfying. She wanted to shout it from the rooftops\u2014or at least post it on her Facebook page\u2014that her eyes had been opened to a whole new world. But how would she ever explain to her two closest friends about this new lifestyle Brady had introduced her to? They would never understand. What she did with him? It wasn't what good girls did...\"\n\nTwo hours later, my hand was cramping up from signing my name and my jaw ached from smiling. The store had quickly sold-out of my Dex Knightly series, but that hadn't stopped the readers from becoming fans of my earlier books.\n\nI looked up as the next person laid a copy of my very first book on the table and I asked what their name was. Then I froze.\n\nBrian Hughes smirked down at me. \"Well played, Ms. Rockland. Well played.\"\n\nI had never even thought about him showing up. It made perfect sense. But was he here to stir up trouble? I swallowed the lump in my throat and forced more bravery into my smile, although this time it was not genuine.\n\n\"Mr. Hughes. What a pleasure. \" I opened the front cover of the book he'd given me and poised my pen over the title page. \"Would you rather Brian or Mr. Hughes?\"\n\nHis leaned a little closer and lowered his voice. \"I was thinking, 'To the one who helped me see who I really am, my first Sir.' How's that sound?\"\n\nI swear I almost broke the pen I was gripping it so hard. I probably would have if I hadn't felt strong hands suddenly resting my shoulders. \n\n\"How's it going, Becca? Do you need to take a break?\" Malcolm's voice was smooth and calm, but the way his fingers dug into my muscles told me he was struggling to keep control. Had he heard Brian? Or was it just Brian's mere presence that had him so rattled, much like me?\n\nI smiled up at my boyfriend and slowly blinked. \"I'm good. I could use another bottle of water.\"\n\n\"Sure thing.\" Malcolm called for Drake over his shoulder and relayed the message.\n\nHe removed his hands, but he remained behind me as I turned back to the book. Oh, he'd heard alright. And bless him for not leaving me alone. If not for the table between us and the very public spectacle he'd make, I was certain Malcolm would throttle Brian again. Quite possibly, I would join him.\n\nBut I simply signed my name, closed the book, and handed it back to Brian who had straightened his posture with his hands clasped in front of him. I smirked at him now, seeing that he was wearing his usual suit and tie. Always the professional. At least on the outside. \"Thank you for being a loyal reader.\"\n\nFor a moment, we both held onto his book. I waited until he locked eyes with me\u2014quite possibly the first time we'd done that since our interview\u2014and then I let go. His tipped his chin to me and stepped out of line. After I signed the next fan's book, I glanced around and saw him chatting up a pretty blonde by the refreshment table. Six books later, they were leaving the bookstore together, her arm draped through his.\n\nI felt absolutely nothing for Brian. No nostalgia. No desire to be that woman on his arm. In fact, I felt sad for her. She was leaving with an empty shell of a man. And no matter how hard she tried\u2014no matter how good the sex with him would be\u2014she'd never fill up that vessel. And he'd never reciprocate any emotion she sent his way.\n\nAs the last book was signed, I turned to find Malcolm watching me with a sappy grin on his face. It was relaxed. It was warm. It promised me encouragement, and loyalty, and ultimately safety. It was everything I'd ever needed or wanted. He was my rock. My Sir. My Dex Knightly come to life.\n\nNo, he hadn't proposed to me at lunch that day at the beach house. But if we gave each other enough time, I was certain he eventually would. And I knew I would say yes when he did.\n\nFor now, though, I could accept what we had. I was content to let it grow on its own. To teach me more how to embrace my kinky side. To submit to him and to allow him to dominate me. But only in the bedroom. Well, mostly only in the bedroom.\n\n~ H"
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "dominance",
        "submission",
        "anal play"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/raw-ch-05"
}