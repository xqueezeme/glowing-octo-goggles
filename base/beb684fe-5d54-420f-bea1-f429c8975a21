{
    "title": "Regaining My Life Ch. 04",
    "pages": [
        "<p align=\"center\">Regaining My Life</p>\n\n<p align=\"center\">Chapter 4 -- A Week in August</p>\n\nThank you to s0reth0at and SunsetDevil for help with plot and character development. Thank you to EditingAlix, s0reth0at, SissyKaty, and SunsetDevil for their review and editing work. All characters and situations are complete fiction, a product of my fertile imagination. Any similarity to actual people and situations is purely a coincidence. All constructive criticism is welcome.\n\n_ _ _ _ _\n\nMy clock radio came on to Weekend Edition Saturday. The morning light was pouring in through the open windows. A light breeze ruffled the curtain. My mind worked to situate itself. It was 7:30. Time to get up. I smelled coffee. Coffee? I didn't make coffee. Zo\u00eb. Zo\u00eb shared my bed last night. She must be in the kitchen. I put on my slippers and robe, but left the front open, hoping to tease my new friend with benefits. I went into the bathroom and brushed my teeth to get rid of any morning breath. As I approached the kitchen Zo\u00eb was talking. Then I heard Christina's voice.\n\nI stood in the doorway, robe open. Zo\u00eb was leaning on the kitchen counter. She wore my dress shirt from the previous evening. It was unbuttoned and open down the middle. She had it draped over her breasts, with her blonde pussy in clear sight. She held a mug of coffee with both hands. Across the room, Chris was sitting at the table. She wore a plain white t-shirt and khaki shorts that came to mid-thigh.\n\nChris smiled, \"There's our lover boy. I like that outfit.\"\n\nZo\u00eb set her mug down and came over to me. She placed one hand on my shoulder, and then kissed me, standing on her tip-toes.\n\nChris exclaimed, \"Oh. I like that technique.\"\n\nShe came over and placed both hands on my shoulders. She went on tiptoe to gently kiss me as well.\n\nI said, \"Good morning ladies.\" I filled my oversized coffee mug and sat at the table next to Chris. She eyed my flaccid cock as I passed.\n\nI patted Chris' arm, \"So if you don't mind me asking, what brings your lovely self to my kitchen on this sunny Saturday morning?\"\n\nChris pointed to Zo\u00eb.\n\nZo\u00eb said, \"I woke up around six, made the coffee. Then I realized that I didn't have any regular clothes so, I called Chris and asked her to bring some over for me.\" Almost as an afterthought Zoe added, \"I washed your china by the way. It's on the dining room table ready to be put away.\"\n\n\"Thank you. You didn't have to do that.\"\n\n\"It's OK. It's my way of thanking you for a wonderful evening. By the way, we're going to go hiking. Want to come with us?\"\n\n\"Let me think about it.\"\n\nChris observed, \"I am feeling like the odd man out here.\"\n\nI asked, \"What?\"\n\n\"I'm the only one fully clothed.\"\n\n\"Give me a minute and I'll go get dressed.\"\n\nChris laughed, \"I'll just join you two.\"\n\nShe stripped off her shirt, her beautiful breasts on display. \"Much better.\"\n\nHer relaxed nipples hardened in the cool morning air coming through the window. Zo\u00eb came over and removed the dress shirt. She sat down, her nipples contending to be the most erect in the room.\n\nI suddenly got the feeling that these two friends were competing with one another for my attention. Hmm.\n\nI asked, \"Have either of you eaten yet?\"\n\nBoth shook their heads.\n\n\"What can I make you? I have some eggs, some pancakes.\"\n\nChris said, \"I'll have an egg over medium with toast, but only if you leave the robe here.\"\n\nZo\u00eb added, \"Just an egg for me, but I second no robe.\"\n\nI took another drink of coffee. As I stood my cock was nearly at face level for Chris.\n\nChris spoke softly, \"Zo\u00eb told me that you were beautiful with your red pubes and pink skin. I didn't get to see you up close.\"\n\n\"Here I am.\"\n\nChris started to reach for me, but I teasingly admonished, \"Now, now. We're not lovers remember?\"\n\nI walked over to the stove and started making breakfast. I also put on an apron.\n\nChris said, \"Hey!\"\n\n\"Can you imagine how painful it would be if I had something hot splatter on the family jewels?\"\n\nZo\u00eb exclaimed, \"At least we can still see your cute butt.\"\n\nI pointed my ass at them, bent over slightly, and gave it a little wiggle. They both hooted.\n\nWhile waiting for the eggs to cook, I decided to play waiter. I grabbed the coffee pot, \"A warm-up ladies?\"\n\nZo\u00eb said, \"Yes, please.\"\n\nChris moved her cup next to Zo\u00eb's and I topped off both. As I was walking away I used the apron to blot some pre-cum dripping from my cock. Two pairs of nearly perfect naked breasts were quite a sight at this hour. When the meal was ready, I removed the apron and brought our breakfast to the table.\n\nZo\u00eb asked, \"Were you a short-order cook at some point in your life? That was quick.\"\n\n\"No. Eggs are just easy to cook.\" I sat down and we started eating.\n\nChris remarked, \"These eggs are good. What did you do to them?\"\n\n\"Nothing. I get them from my neighbor up the road. They're from free-range hens. I think they're much better than the ones from the store.\"\n\nZo\u00eb agreed, \"Oh, they are.\"\n\nChris asked, \"So will you go hiking with us?\"\n\n\"I don't want to disappoint either of you, but I think I'm going to pass.\"\n\nZo\u00eb looked sad.\n\nChris patted my hand, \"It's OK. You'll probably miss out on us practicing our craft as wood nymphs.\"\n\n\"I will miss that, although I am seeing some good practice right now.\" I had both of them smiling. 'Good. Smiling is good.' I thought. \"One thing I can do is send you off with a nice lunch. How about leftovers from last night?\"\n\nZo\u00eb exclaimed, \"Oh! That would be great.\" Turning to Chris, \"Quinn's chicken was fabulous.\"\n\nI told them, \"You won't be able to heat it, but it should be good cold. There's still some zucchini and green beans. I've also got the berries and whipped cream. I'll pack it with some cold packs.\"\n\nChris agreed, \"I think that's a good plan.\"\n\nI'm not much of a morning person so I normally don't talk much, but I was surprised that my companions were quiet. We ate in silence and there was a bit of tension in the air. They both finished their breakfast. Chris got more coffee.\n\nZo\u00eb announced, \"I'm going to run up and get dressed. Be right back.\"\n\nWhen Zo\u00eb had gone Chris placed her hand on my arm, and looked into my eyes, \"That woman is absolutely radiant. What did you do to her?\"\n\nI melted into those brown eyes, \"Remember, I don't kiss and tell. You'll have to get it from her.\"\n\n\"At least you are consistent.\"\n\n\"Here let me take your plate.\"\n\nAs I stood, Chris looked longingly at my cock, \"Can I just look at you for a moment?\"\n\nI stopped and faced her.\n\nShe reached out and cupped my balls, \"I know. We're not lovers.\" She gently petted the head.\n\n\"Chris.\"\n\n\"I know.\"\n\nShe kissed the head of my cock, and then took me into her mouth for a little suck. \"You taste and smell like sex.\" She gave me one last suck, then stood and gave me the tiptoe kiss while holding my stiffening penis. \"OK. I need to get ready.\"\n\nChris disappeared and came back with a knapsack. As she stood there topless, my cock reached about half-mast. I packed their lunch.\n\nI handed Chris a house key, \"Just in case you need access to this place.\"\n\nShe smiled and kissed me.\n\nZo\u00eb came down, nipped out in a yellow shirt and short, dark blue shorts. \"OK, all set.\"\n\nI handed Zoe the thermal bag, \"Here's your lunch.\"\n\nChris said, \"My car's in your barn. Is it OK if I leave it there?\"\n\nI nodded, \"Sure.\"\n\nChris put on her shirt in front of me. She unzipped her shorts to tuck it in and her lovely dark delta came into view. She looked up at me and smiled. She finished dressing, \"OK. I'm ready too. Let's go.\"\n\nI escorted them to the door, still naked with my penis approaching full hardness.\n\nZo\u00eb said, \"I'll pick up my dress on Sunday.\"\n\nI nodded, \"Sounds like a plan.\"\n\nZo\u00eb gave me her tiptoe kiss. She took my cock in her hand and smiled at me. She headed for the door. Chris placed her hands behind my neck and pressed her stomach against my cock. She gave me an open-mouthed kiss and touched tongues.\n\nShe placed her hand on the side of my face, \"Gotta go.\" She reached down, gave my shaft a little squeeze, and was gone.\n\n_ _ _ _ _\n\nI tidied up the house, took a shower, and headed to my study. I spent the morning prepping for the coming semester. I now had two of three courses ready. I also typed up and printed the Friends with Benefits rules that Zo\u00eb and I had come up with.\n\nAfter lunch I went for a long walk up the country road that runs by my house. I needed to think. I was pretty sure that Chris was jealous of Zo\u00eb. The tension at breakfast was palpable. It would probably be best to not be together with both of them. I replayed the sight of two naked women in my mind and I began to stiffen.\n\nI needed to think about Zo\u00eb. I don't think I had ever seen anyone as happy as she was this morning. I tried to imagine spending my life with her -- now I could see that as a possibility. She wanted to experiment. It would probably be best to let her come up with what she wanted to experiment with. The last thing I wanted to do was anything that would destroy her trust in me.\n\nChris thought I should date. How do I go about dating? There were always those dating sites, but I really didn't want to go that route. Certainly not something like Tinder. Random sex with strangers could be exciting, but it could also introduce an STD, the last thing I wanted. How would I explain to Zo\u00eb if I caught something from some one-night stand? How does one go about dating in this day and age? I suppose I needed to find out.\n\nWhom should I date? Chris had mentioned several faculty colleagues. Of the Wood Nymphs, I knew that Wendy was married, Asha was a lesbian, and Vicky had a life partner with two kids. There were still some possibilities. Julianne was a curvy brunette, originally from Florida. She worshipped the sun and was always tanned. Astrid was a tall blonde in her forties from the mid-West. I knew she had been divorced for several years. Roz and I used to see her at parties a lot. Colleen was a redhead, almost strawberry blonde. She was also about five feet tall and a fellow veteran. We were the only two vets on the faculty. It seemed like I knew a lot of five-foot-tall women. Trish was taller and older, probably past fifty. She had a stunning figure with a couple of extra pounds. She reminded me of a girl I dated in high school.\n\nI also thought of Francesca. She had been the lead singer in a four piece band I was a part of. We didn't have a formal name, but we laughingly referred to ourselves as Francesca and Her Boys. In addition to singing, Francesca played keyboard. Completing the band was Sam on guitar, Dave on drums, and I played bass. Long ago we used to play Saturday evenings at the Brew Pub. When Roz died we stopped playing and rehearsing, partly out of respect for me, but mostly because I had a hard time concentrating. I finally got my act together and we rehearsed twice before the pandemic struck, but we never played a gig. I know Francesca had just gone through a nasty divorce and I doubted she wanted anything to do with men right now.\n\nSo how to go about getting a date? I guess I could go to the next party and chat someone up. I could also try to figure out a way to 'accidentally' run into someone. All things I would need to figure out.\n\n_ _ _ _ _\n\nThere were several academic articles that I had been meaning to read, so I spent the first part of the afternoon immersed in theoretical pondering. One article prompted a research idea. I made a note to visit the college library on Monday.\n\nI spent the rest of the afternoon following Frodo, Samwise, Pippin, and Merry through the Shire. By the time the four hobbits had reached Bree, the late afternoon sun was creeping up the porch floor and the temperature was beginning to rise. It would still be several hours before it dipped behind the maples and put the porch in shade again. I placed my bookmarker as I moved to a cooler spot.\n\nI walked down the porch stairs intending to sit at the picnic table under the trees when Zo\u00eb's yellow Subaru pulled into the drive. She tooted her horn and I started walking in that direction. Chris jumped out and grabbed her knapsack from the trunk. Zo\u00eb waved and drove off.\n\nChris was left standing in the middle of the gravel.\n\nAs I approached she greeted me, \"Hey, how was your afternoon?\"\n\n\"Very nice.\" I showed her the book, \"Been reading. I'm down to one course left to prep.\"\n\n\"I still have two. Walk with me. I need to put this in my car.\"\n\nWe went through the side door of the barn. She placed her knapsack on the back seat, \"Oh here's your cooler-insulated-thingee.\"\n\nI took it. Chris grabbed a quilt from the trunk, \"I thought we could go out in your meadow and talk.\"\n\n\"That sounds like a wonderful idea.\"\n\nI set the insulated bag and my book on the barn's workbench and followed her out the door. She took my hand as we leisurely strolled across the meadow.\n\nChris pointed to a spot, \"That looks nice under those maples.\"\n\nWe spread the quilt in the shade and Chris came over to me.\n\nShe placed her hands on my chest and smiled, \"I really like these shirts on you. This material is like bikini material. It fits you nicely. I can see your man nips and your chest hair -- you can see the outline of the hairs. It reminds me of college days and we'd wear those ultra-thin fabric bikinis so you could tell that we had a bush.\"\n\n\"I remember those suits. They were an instant hard-on.\"\n\n\"I remember sitting in my girlfriend's room trimming our pubes just so. We wanted our bikinis perfect. At the beach, we would regularly take a quick dip so we could walk back across the beach with our nipples poking out and looking closely you could detect our pubes. We were such cock teases. Nowadays, everyone shaves their pussy bald and goes for a camel toe. I kind of like my pubes.\"\n\n\"I love a woman with a nice bush. Would you wear a bikini like that for me?\"\n\n\"I think that could be arranged. It's good to know you like pubes.\" She put her arms around my neck. My hands went to her hips. She kissed me softly, then opened her eyes.\n\nI asked, \"Shall we sit?\"\n\nShe kicked off her sneakers and sat down cross-legged. She pulled off her socks.\n\nSince my legs aren't that flexible, I sat with my legs out on either side of her body, \"Foot.\"\n\nShe extended her leg to me. I held her foot with both thumbs on her sole and massaged from toe to heel.\n\nChris groaned, \"Ooh. That feels so good. I didn't realize my feet were aching.\"\n\nI took the other foot and repeated the massage.\n\nShe said, \"Don't tell me you have a foot fetish.\"\n\n\"No. I don't think so. But when I did this to Zo\u00eb last night, she loved it.\"\n\n\"I love it too. I was thinking of pulling my top off, but maybe that's not a good idea.\"\n\n\"Christina, your breasts are so beautiful and very distracting. As it is I will have a hard time focusing with you nipped out like you are.\"\n\n\"Sorry. I can't help that.\"\n\n\"So let's talk.\" I said, continuing to massage her feet.\n\nChris explained, \"I tried to do a lot of thinking on our hike, but it was difficult. Zo\u00eb talked non-stop.\"\n\nOur eyes met and our souls became one. \"You changed her life last night, you know. She told me that the only orgasms she had ever had before last night were from masturbation. She thought you had her cumming for at least an hour.\"\n\n\"I don't think it was more than a couple of minutes. Which leads to our first topic.\" I looked down momentarily, \"This may be just me, but I think you are jealous of Zo\u00eb.\"\n\nShe smiled and took my hand, \"When I came to your house this morning, Zo\u00eb met me wearing that shirt of yours unbuttoned with her pussy exposed. She was glowing, her hair slightly disheveled, and she smelled like sex. I was insanely jealous. I so wanted to be her.\"\n\nI said, \"At the table, it felt like you were both competing for my attention. First, Zo\u00eb standing there with her blonde pussy, then you pulled off your shirt, and then Zo\u00eb lost the shirt. If I was a younger man, I would have had a raging hard-on by then. The two of you were so hot.\"\n\n\"Actually, that's nice to know. When you stood up and your penis was just hanging there, I thought we weren't getting you excited.\"\n\n\"Chris, I'm not a young man. I can have one good erection and one good ejaculation per day.\"\n\nShe smiled.\n\nI continued, \"You two were very exciting. I was still recovering from the previous night. I leaked a little pre-cum and wiped it off in the apron while I was cooking. When you took me in your mouth you started getting me hard. By the time you kissed me goodbye I was in steel pipe mode.\"\n\nChris smiled and nodded, our eyes sending unintentional flirtation messages, \"I noticed.\"\n\n\"This may be too much information, but sitting here looking into your eyes, your nipples struggling to be free from your shirt, and those shorts stretched taut across your pussy has caused a substantial amount of pre-cum to leak out.\"\n\n\"Prove it.\"\n\nI unbuckled my jeans and put my finger to the head of my cock. I pulled out a nice drop.\n\nChris took my hand and sucked my finger. She closed her eyes, savoring my taste, \"That's nice. That made me wet. No, I'm not going to let you taste me. Yet.\"\n\n\"Which leads me to the next idea. I think that we should make some rules for being friends with shower benefits. Zo\u00eb and I came up with our own rules last night and I think it would be a good idea if we did the same thing.\"\n\nChris agreed, \"Good idea. What's our first rule?\"\n\n\"How do we handle Zo\u00eb? I'm thinking the less she knows about you and me, the better.\"\n\n\"We are besties you know. That may be hard, but I will do my best.\"\n\n\"She and I have a rule that we can't tell each other about dates or sex with others, including anything I do with you. But she vetoed the idea of not talking to you.\"\n\n\"OK, that makes sense.\"\n\n\"How do we want to handle touching?\"\n\n\"Well, we have to get each other clean, so we have to be able to touch each other. Maybe only with our hands though. I could see you wanting to take your tongue and touch me everywhere.\"\n\n\"Or like when you gave me a little suck this morning.\"\n\n\"I know. I couldn't help myself.\"\n\nI admitted, \"That thought just made me leak a little more.\" She smiled impishly. \"How about penetration of any sort?\"\n\n\"I'm thinking that may not be such a good idea. A girl needs to keep soap out of her vagina anyway. Although...\" I could see the wheels turning. \"What if one of our assholes is exceptionally dirty? It might need to be cleaned thoroughly.\"\n\n\"Like last week?\" I inquired.\n\n\"Exactly. Your anus needed a good cleaning.\"\n\n\"OK. But you can't clean all the way to my prostate. You'd make me cum very quickly.\"\n\n\"Fair enough.\"\n\nI continued, \"Which leads me to the next topic -- orgasms.\"\n\n\"I think we can't induce them on each other. They can be self-induced though.\"\n\n\"In one another's presence?\"\n\n\"Sure. We could say that masturbation parties are OK.\"\n\n\"OK, so how about bodily fluids? You just ingested a tiny bit.\"\n\n\"So, how about this idea? If the fluids are out of our bodies, then that would be OK.\"\n\nI pondered, \"So, for example, when ejaculate leaves my body, then that would be fair game?\"\n\n\"Exactly.\n\n\"So if I were to ejaculate in the general direction of your mouth, that would be within the rules.\"\n\n\"Yes. Plus any pussy juice on my fingers or say a dildo, would be fair game.\"\n\n\"A dildo?\"\n\n\"Please don't think I'm a slut, but I just ordered one.\"\n\n\"No, that's cool. So, who can manipulate the dildo? Just you?\"\n\n\"No. I think that as long as you don't penetrate me with any of your body parts, you could use the dildo on me.\"\n\n\"In the shower?\"\n\nChris said, \"Well, in the shower and perhaps before or after. It would have to be part of the showering event.\"\n\n\"Showering event? You are sounding like a lawyer.\"\n\n\"How many times did I see my lawyer this week? So I'm thinking the showering event would be from the time we intended to take a shower until we were toweled dry, to include blow drying my hair, or fully dressed even.\"",
        "\"So as long as your hair was still wet, we would still be in the showering event?\"\n\nChris thought a moment, \"I think that sounds like a good definition. If we were partially dressed too.\"\n\n\"Anything else?\"\n\nChris thought a moment, \"Kissing. How much kissing can we do?\"\n\n\"Well, the 'no lover' rule hasn't seemed to slow you down too much. How about only using our tongues during the shower event?\"\n\nChris looked a little concerned, \"OK, we can start with that rule, but I would most likely want to be able to revisit it.\"\n\n\"OK. Anything else?\"\n\n\"No. Should we write it down?\"\n\n\"I wrote it down for Zo\u00eb and me.\"\n\n\"OK. I'll draw up a document for us. I'll bring it with me the next time I come over to work with you, probably Monday. So since I'm very sweaty and dirty from the hike, perhaps we should see how these rules work. Shall we seal our agreement with a kiss?\"\n\nI said, \"Point of clarification -- it sounds like you have just initiated a shower event.\"\n\n\"I think I did.\"\n\n\"Therefore, the sealing kiss can be a full-on passionate kiss.\"\n\n\"It can.\"\n\nChris crawled over and pushed me onto my back, a broad smile on her face. She threw her leg over me, and her hands on either side of my head. She adjusted her hips so that her crotch was on my stomach. She lowered her lips to mine, touching them ever so softly.\n\nShe opened her eyes. \"We should explore what limits there are to shower kissing.\"\n\nShe kissed me with an open mouth. I extended my tongue, touching hers. She pressed more forcefully. I brought my right hand to her breast, feeling her stiff nipple under her shirt. She groaned and kissed me harder. She started grinding her crotch on my stomach.\n\nI placed my left hand on her other breast. I massaged her with both hands, gently kneading her nipples. \"Perhaps we should actually begin showering.\"\n\n\"In a moment.\" Her lips returned to mine, the oral sensations driving down my spine and sending extra blood to my cock. We lay there necking for quite a while. For me, oral and tactile sensations are the strongest and Chris was putting those senses into overdrive.\n\nShe settled lower so that her breasts were pressing into my chest. I moved my hands to her ass. She ran her fingers through my thinning hair, slicking it down with my sweat. \"You are a sweaty boy.\" She kissed me again, probing my mouth, then gently licking my lips. \"OK, I'm ready.\" She dismounted and easily stood.\n\nI lay helpless on the blanket, gazing up at her lovely figure, erect nipples highlighting her t-shirt. \"I'm not going to be very graceful getting up.\"\n\n\"I'll help you.\"\n\nI rolled onto my stomach, then gained my hands and knees. I held up a hand and Chris balanced me as I stood. She gathered up the blanket and we folded it together. We held hands again as we crossed the meadow back to the house.\n\nI cautioned, \"Watch where you step with those bare feet. Some of these weeds have barbs.\"\n\nChris preceded me into the mudroom, \"We should probably leave our clothes here. I have a shirt and jeans upstairs in your dresser.\" She stood in front of me. \"Let's get rid of this sweaty shirt.\"\n\nShe pulled my shirt over my head. I pulled my arms out, then threw the shirt in the dirty clothes basket. I pulled hers up and her breasts were free. My tumescent cock was becoming harder. We both kicked our shoes off. We grabbed for each other's pants. I had hers off first and ran my fingers through her dark brown bush and down across her vulva. She stopped and looked at me, her mouth slightly open. I gently touched her clit on the way back and she sucked her breath in a little. Goose flesh stood out on her arms.\n\nShe shivered, \"Look what you did.\"\n\nShe dropped my jeans, revealing my cock at half-mast. She milked a drop of pre-cum, then bent down and licked it off. \"That is so tasty.\"\n\nMy jeans were soon around my ankles and I stepped out of them.\n\nShe threw her arms around my head and kissed me with an open mouth. I pulled her tight against me and straightened my back, lifting her off the floor. Her breasts pressed against me, her pubes on my stomach.\n\nShe broke the kiss, \"Upstairs.\"\n\nShe took my hand and pulled me toward the stairs. Chris released my hand and took them two at a time, racing to the claw-footed tub.\n\nWhen I reached the bathroom, she already had the water running and three towels on the rack. She tested the water. She made a temperature adjustment, then climbed in. This time she was on the showerhead side and I was on the drier side. She closed the shower curtain and stood under the showerhead. She reached out for me and pulled me into the stream of water. She raised her lips to mine. I met her with an open mouth, pulling her tight against me. Chris began running her fingers through my hair, massaging my scalp.\n\nI reached behind her and grabbed the shampoo. I switched places with her, applied some shampoo to her head, and began washing her hair, massaging her scalp. She got some suds on her hands and began kneading my chest hairs. She took a bit more and started stroking my erect cock.\n\nShe said, \"Here, switch. I need to rinse my hair.\"\n\n\"I don't have any conditioner.\"\n\n\"That's fine.\"\n\nShe rinsed the shampoo out. She grabbed the bar of soap from the dish and knelt before me, the water flowing over her body. She backed me up out of the stream of water and soaped up my cock, massaging my balls before starting to stroke my shaft. She forced her hand between my legs and I spread them for her. She went straight for my asshole. First, she rubbed the outside, then penetrated me with her finger. She started a short probing motion, finger fucking my ass for several minutes while simultaneously stroking my cock. She quickly drove me to the edge.\n\nI said, \"OK, you've got me close to cumming. You've gotta stop.\"\n\nChris stood and handed me the soap. We switched places again so that I was under the shower. Now I knelt before her and soaped her breasts, kneading her nipples. She placed her hands behind my neck and kissed my forehead. I lathered up her pubic hair, running my fingers through the dark delta. I washed her labia, then focused on her clit. I had that little button as clean as could be. I looked up and she had grabbed the handle, her eyes closed, and her mouth open. I used the same move Chris had used and found her asshole. I rubbed her anus, then slipped my finger into her ass. I finger fucked her as she had fucked me. She grabbed my hand that was rubbing her clit and pulled it away.\n\nShe smiled wickedly, \"Let's go to your bed. Hurry, masturbation party.\"\n\nChris wrapped her hair in a towel and helped me over the lip of the tub. She pulled me down the hall and into the bedroom. She propped herself on the pillows at the head of the bed. She spread her legs wide, with her pussy pointed at me. She stared lustfully at me as she started playing with herself.\n\nI stood before her. I still had an erection, but I was damp and needed some lube. \"Rub some of your juices on me.\"\n\nChris stuck her fingers into her vagina and smeared her fluids on me. Three more times she went to the well, then stroked me a few times.\n\nThat was all I needed. I stroked myself as I knew best. She was vigorously rubbing her clit, one hand twisting her nipple.\n\nIt was so hot watching her watching me, her fingers probing her vagina, fingers vigorously rubbing her clit. I stroked himself, but it didn't take me long.\n\nI said, \"Bring yourself over here.\"\n\nChris lay on her back, hung her head over the edge, and opened her mouth. Her hands never stopped pleasuring herself.\n\nMy first shot of cum landed on her chin and neck, but the rest dribbled into her mouth. She reached up and grabbed me, milking my cock for cum. She wiped the pearl necklace from her neck and sucked her finger. Then she rolled over and grabbed my cock. She wrapped her lips around me and began sucking hard, stroking me, milking me. She licked her lips for any cum. Then she knelt back and held her hands out to me. I stepped forward and she put her arms around my neck, then kissed me with an open mouth.\n\nI entwined my tongue with hers and was surprised to not find much taste there. \"I can't taste my cum.\"\n\n\"I swallowed every drop. You really taste good.\"\n\nI kissed her again, \"You kind of broke the rules though.\"\n\n\"I know. I got a little carried away. That was hot spreading my juices on your cock. I love watching you stroke yourself. I love you watching me diddle myself. Next to actually fucking, this might be one of my favorite things to do. I feel so open and vulnerable.\"\n\nI kissed her again, \"Perhaps we should dry your hair.\"\n\n\"Or not.\"\n\n_ _ _ _ _\n\nIt was about 7:30 on Sunday evening. I was in the study in my lazy boy, looking at Google News when I heard a knock on the doorframe.\n\n\"Hey.\" Zo\u00eb was standing in the doorway smiling. She was wearing a loose-fitting, light blue top with spaghetti straps and a matching horizontally striped mini-skirt. The hem was only an inch or two below her crotch.\n\n\"Oh, I didn't hear you. You're so quiet.\"\n\nI started to get up from my chair, but she came over and actually stood on the seat. She hesitated for a few moments so I could look up at her exposed pussy. Then somehow she positioned herself on my lap with her silky legs on either side of my torso. She put her arms behind my neck and kissed me. Her skirt was slightly askew giving me a wonderful view of that luscious blonde pussy. I placed a hand on each leg, enjoying the smoothness.\n\nZo\u00eb confessed, \"I love going commando in a mini-skirt. It's very exciting.\" She leaned forward and kissed me again.\n\n\"We might have to take you out on the town like that.\"\n\n\"I'd like that, but one of our rules is that we can't date, remember?\"\n\n\"Perhaps we can have a group outing like when all you ladies go out dancing together.\"\n\n\"I've worn this outfit to the club! Sometimes I will twirl so that my skirt spins out and anyone watching closely will see I'm not wearing anything underneath. Before the pandemic, we went dancing and I knew these lesbians were watching me. I was twirling all night. Being watched in public turns me on like nothing else. But back to the point, I was thinking that Anders' wedding might be problematic. Since it goes against the rule that we can't date.\"\n\n\"Well, the rule is ex post facto since it came after we agreed on the date. Therefore, it's invalid for that occasion.\"\n\n\"Oh, I never thought of it that way. So we're good?\"\n\n\"We're good.\"\n\n\"I am thinking that the no dating rule is probably good though. Friday was so romantic and I don't think that is good for me. I will fall further in love with you. I fear that someday you are going to break my heart.\"\n\n\"I pray I never do that.\"\n\n\"Also, I hope you don't mind, but I originally got the dress I wore on Friday for Anders' wedding. In fact, he picked it out for me so I hope you don't mind seeing me in it twice.\"\n\n\"Not at all. You are stunningly beautiful in that dress.\"\n\nZo\u00eb asked, \"Can I tell you something?\"\n\n\"Sure.\"\n\nShe took my hands, brought them to her lips, and kissed them. \"In all my thirty-nine years I have never had a man bring me to an orgasm like that. Actually, I've never had a man bring me to an orgasm, period. All my orgasms have been self-induced.\"\n\n\"If you don't mind me asking, how many men have you been with?\"\n\n\"You are the fourth. You are the only man I would call a lover. My first time was in college and it was an awful experience. I know I was a virgin, but he rushed it and I was kind of dry. He took my virginity and he really hurt me. I think he tore up the inside of my vagina and I bled a lot, as in copious amounts of blood running down my legs. I think it was a lot like being raped, except technically it wasn't rape. Guys didn't worry about things like consent back then. I didn't get the feeling he cared about me. He was pissed because I was bleeding on everything. I dumped him the next day.\n\n\"The second guy was in grad school. I had been going with this guy for a long time, three months probably. He pressured me into sex. We saw each other for about another three months. Every weekend he wanted to fuck and it was just that -- fucking. There wasn't any love involved. One night when he had had a few too many, he asked me for a blow job, then he grabbed my head and jammed his cock down my throat. I gagged, then bit him hard, and ran out of there. I never saw him again. Sex has been traumatic for me.\"\n\nI said, \"How awful. What about the third guy?\"\n\n\"I think I told you a little about Jared. I dated him for about three years. He's a really nice guy and all. For a while, I thought he was husband material, but the embers never caught fire. He was sort of attentive when it came to sex, but it never felt intimate. Sex with Jared always felt mechanical. He would lick my pussy to get me wet, and then it was bang, bang, bang and it was over. Never like what you did on Friday.\" She laughed. \"I shouldn't tell you this, but since you'll never meet him, who cares?\"\n\n\"What?\"\n\n\"I wouldn't call it a micro-penis, but he was pretty small.\"\n\nI asked, \"How small?\"\n\nShe held her fingers about two inches apart.\n\n\"I've seen a lot of penises over the years, mostly in community showers and locker rooms and that is pretty small. Although, I saw one guy in the Navy that was pretty much all balls. His penis was probably less than an inch, kind of propped up on his scrotum.\"\n\n\"Like Michelangelo's David?\"\n\n\"Smaller.\"\n\nZo\u00eb smiled, \"What's the biggest cock you've ever seen?\"\n\n\"One of my college roommates was pretty hung. Like around eight inches long or so. He loved to show it off. Walking back and forth to the shower he would use a really small towel. Got a lot of attention from the ladies.\"\n\n\"Well I have to say, I am absolutely in love with your penis Quinn. It is just right.\"\n\nI leaned over and kissed her, \"Thank you my love, but I'm really just an average guy, who's completely comfortable with his averageness. Anything else on your mind?\"\n\nZo\u00eb said, \"I want to know the mechanics of how you made me cum like that.\"\n\n\"It kind of loses the romance then.\"\n\n\"I just want to know how my body works.\"\n\n\"I'll keep it simple: foreplay, erogenous zones, clitoris, and g-spot.\"\n\n\"G-spot?\"\n\n\"On the top of your vagina there's a spot of tissue that is kind of magical. It's about two or three inches in. When it isn't ready, it feels spongy. When you are near orgasm, it begins to feel wrinkly. I try to rub it with one or two fingers and it makes a regular orgasm, extra special.\"\n\n\"I'm going to try and find it.\"\n\n\"Well, that could be one of our experiments. By the way, have you given any thought to what you want to learn about your body and mine?\"\n\nZo\u00eb smiled and kissed my hands again. \"OK, so I have become an internet sex fiend. I have been looking up all these ways to have sex.\"\n\n\"OK, so let me hear about them.\"\n\n\"I know you will never think I'm slutty, but all this makes me feel slutty. It sounds so interesting and sexy and exciting. I have to do this in my room because I want to play with myself. I do play with myself. I have to be careful with Johnny running around.\"\n\n\"So, I want you to do that for me. Play with yourself in front of me.\"\n\nShe smiled, \"Would you like that?\"\n\n\"It would be so hot. So what have you been looking at that makes you want to play with yourself?\"\n\n\"So one thing I want to learn about is you. I want to learn about how to give you an amazing blow job.\"\n\n\"I like the sound of that.\"\n\n\"I also want to learn how to deep throat you.\"\n\n\"OK, that may be a lot harder, no pun intended.\"\n\n\"I will have you know that puns are the highest form of humor. There are all these amazing sex positions that look like so much fun. We're going to try all of them.\"\n\n\"OK.\"\n\n\"And...\" She held her breath.\n\n\"What?\"\n\n\"I want to try anal.\"\n\n\"I have to tell you I have no experience there.\"\n\nShe smiled and kissed me, \"So, we'll learn together.\" Then she looked at me kind of funny.\n\nI asked, \"What?\"\n\n\"I think you need to know this, but I will probably have my period next weekend, for Anders' wedding.\"\n\n\"That's cool. It's never stopped me before.\"\n\n\"You've had period sex?\"\n\n\"It's great. You just need to put some old towels down.\"\n\n\"Do you eat me all bloody and everything?\"\n\n\"I've always left the tampon in while dining. Do you use tampons?\" She nodded. \"I would just pull out the tampon when the time comes for inserting cock in pussy. Sometimes you need to use lube though. The tampon sometimes seems to suck up all your juices. At other times all the blood makes things very slick.\"\n\n\"That doesn't gross you out?\"\n\n\"Not at all.\"\n\nZo\u00eb was giddy with excitement. \"OK, we can try that. I was also thinking that we could try anal on my period.\"\n\n\"I will do whatever you want to do.\"\n\n\"And something I want to do for you. I want to learn how to massage your prostate.\"\n\n\"Something else I don't have much experience with. So what do you want to do this evening?\"\n\n\"I know we did this on Friday, but could you make me cum like that again? Chris said I was glowing on our hike. I felt like I was walking on a cloud. Then I would like to try a couple of positions.\"\n\nThis entire conversation was amazing. Her sexuality seemed to be blossoming before me. I watched this less-than-confident woman who had described her first time as akin to rape, now getting excited about anal and period sex.\n\nI grinned, \"You are making me hard talking about this.\"\n\n\"I'm making myself wet talking about everything.\"\n\n\"Really?\" I ran my fingers across her pussy, \"Oh, you are really wet.\"\n\nI put my wet fingers in my mouth.\n\n\"You really like the way I taste, don't you?\"\n\nI dipped my finger into her pussy again and brought it out, \"Zo\u00eb, what you have here will drive a man crazy. You know how Cleopatra seduced Marc Antony? How Josephine seduced Napoleon?\"\n\nShe shook her head.\n\nI held up my wet finger. \"Right here. Before perfume was invented there was pussy juice. I kid you not. Do you want to drive a man wild? Use your personal perfume. A little dab behind your ears and on your wrist. Maybe a dab between your breasts. Don't overdo it. This is powerful stuff.\"\n\nZo\u00eb reached down, dampened her finger, and applied the moisture as I directed.\n\nI persisted, \"Just like that. Your pheromones will drive anyone attracted to you wild. They won't know what hit them. Personally, I live for the taste and smell of a woman. My dearest friend, you have a taste and smell that is intoxicating. Your taste is making me really hard right now.\"\n\n\"Well, let's go upstairs!\"\n\nZo\u00eb stood and stepped off the chair. She grabbed my hand and pulled me along. I have never seen someone so excited to have sex. Her blouse and skirt were off before we got into the room. She sat on the edge of the bed and went for my fly. She had my shorts off while I pulled my shirt over my head. She jumped onto the bed and held out her hand.\n\nThe light from outside was fading, so I turned on the end table light.\n\nThen I sat down next to her. \"So, before we start, you need to know something about me. I'm not a young man. I think I have one good erection and one ejaculation in me per day.\"\n\nZo\u00eb crawled up on her hands and knees, \"Friday night you had two erections. Remember when I got you really hard in the middle of the night so I could sleep with you in my pussy.\"\n\n\"OK, so maybe I'm wrong on that account. I just don't want you to get high expectations of how I am going to satisfy you.\"\n\nShe leaned in and kissed me, \"Quinn, I will be satisfied just being with you.\"\n\nI began fondling her breasts that were just there for the touching. \"What would you like to do first Princess Zo\u00eb?\"\n\n\"Well, I don't know about first, but I want you to fuck me doggy style. I loved doing it cowgirl the other day.\"\n\n\"OK, we'll make that the second and third courses.\"\n\n\"I think I want to sit on your face and let you lick me.\"",
        "\"I consider myself somewhat of an expert on eating pussy while being sat on.\"\n\nI took the pillow and laid down so my face was about two feet from the headboard. \"Bring your luscious self over here.\"\n\nZo\u00eb smiled lustfully and crawled over. She straddled my face with her soft thighs touching my face. She positioned her pussy directly over my mouth. I put my hands on her ass cheeks and pushed her forward slightly so that her opening was at my tongue. She was so wet, I started lapping up her juices. I parted her labia with my tongue; licking ever closer to her clit, but stopping just before.\n\n\"Are you going to tease me again?\"\n\n\"I think you have more control this way. Do you want me to tease you?\"\n\nShe pressed her wet labia to my mouth, then ever so slowly began to move back and forth. I decided to just keep my tongue extended and let her pleasure herself. She moved her clit to my tongue and moved forward so that my tongue was at her vagina. Back and forth she went, slowly lowering herself so that my tongue parted her slit slightly more on each pass. My tongue only briefly touched her clit. She was teasing herself. Her eyes never left mine, looking down at me between her legs. I was experiencing the same mind meld I had with Chris. I reached up with one hand to touch her breasts and she grabbed it, pressing it to her stomach.\n\nSuddenly, Zo\u00eb made her clit the focus of my tongue and she moved my hand to her breast. Placing both hands on her pert mounds, I began fondling her, avoiding her nipples. Zo\u00eb gently stroked my head, running her fingers through my hair. Her hip motion changed so that my tongue moved quickly across her clit. Pussy juice ran down my face as her pelvis increased speed.\n\nZo\u00eb leaned forward placing her hands on the headboard. I sensed that I could now finger her opening. I put my finger up to her vagina and she moaned. I felt for her g-spot and her spongy spot was becoming rougher. I started tweaking her nipple while rubbing her wrinkly g-spot. Her contractions started and I grabbed her hip with my free hand, expecting her to remove her clit from my tongue, but she didn't. The motion continued, but her body was shuddering; gooseflesh formed on her thighs, stomach, and breasts; her thigh muscles quivered. I could hear her panting. It was as if she was working through some sensitivity barrier.\n\nZo\u00eb's body jolted. She leaned back and I had to remove my finger from her pussy. Her back arched, head thrown back. Then she leaned forward and I penetrated her opening again. With my hand on her ass, I repositioned her pussy on my mouth. I heard a whimper and I began running my tongue along the length of her slit, just touching her clit and sending a tremor through her. I put my finger back into her pussy and started on her g-spot again.\n\nI put my left hand to her asshole, her rhythmic contractions pulsing away.\n\nI thought, 'How about a double finger penetration?' After lubricating my index finger with pussy juice, I inserted it into her ass. Slowly I finger fucked her. Her clit returned to my tongue and I flicked it. She pressed down on my face so that I had to breathe through my mouth. I started sucking her clit and the shuddering returned. Her body bucked as pleasure coursed through her.\n\nI thought, Zo\u00eb should be so sensitive by now. Her body was trembling. I continued the triple assault on her clit, g-spot, and asshole. She pressed my face into her vulva. Finally, Zo\u00eb fell over on her side. My fingers came out of her holes. Her body spent, but still in orgasm.\n\nI got to my knees, \"Doggy style.\"\n\nShe moaned and got on her knees, her pussy and ass exposed; her face lying on the bed. I crawled behind her and got to my knees. I guided my cock to her opening and slowly entered her dripping pussy, a shiver running up my spine for that oh so pleasurable first thrust. Her vagina still contracting, clenching me. I took what I thought of as my 'ass finger' -- my left index finger -- and placed it on her asshole and rubbed. I knew I could last a while, so I went with long slow thrusts. Zo\u00eb was positioned so that my cock struck her cervix at its deepest penetration. With each strike, I heard her gasp. I lubed her asshole with pussy juice and used my left thumb to penetrate her, controlling her hips with my right hand. Her contractions eased and I knew her orgasm was over, for now, so I removed my thumb. Grasping both her hips I started driving harder.\n\nZo\u00eb raised up on her elbows, keeping her back arched. She started pushing backward meeting my forward thrusts. She raised herself fully on her hands and knees and I decided to try a more downward angle to try and hit her g-spot.\n\nShe said, \"Lie down. I want to ride you.\"\n\nI grabbed a couple of tissues from the nightstand and wiped my hands, then laid down on my back. Zo\u00eb straddled me, inserted my cock in her pussy, and started grinding. She quickly brought me to the edge. Then she brought her feet up to either side of my waist. The woman was in phenomenal shape -- she was doing squats slamming her pussy onto my cock, maximizing penetration. I could feel my cock reaching deep inside her and her eyes went wide, her mouth open. Her orgasm began again, her pussy contractions squeezing my cock.\n\nAnd then I came. I thrust upwards with my legs, arching my back. I lifted my ass well off the bed, impaling Zo\u00eb on my cock. Pleasure flowed up my spine. Again, my back arched. Zo\u00eb's pussy assault on my cock continued. She steadied herself with her hands on my stomach, her pelvis still slamming onto my cock. How was I still hard? Zo\u00eb's head went back as she arched her back. She must have found her g-spot herself. Her hips never slowed the pounding with her pussy pulsing on my still erect, but aching cock. Pain and pleasure rippled through me. I was so sensitive, but I didn't want to be the one to stop this.\n\nZo\u00eb returned to her earlier grinding motion. Finally, she fell forward onto me, her head on my shoulder. I put my arms around her, my cock still in her pulsing pussy, euphoria spreading over us. After a few minutes, I felt her contractions subside.\n\nI asked, \"How did you do that? Weren't you sensitive?\"\n\n\"I'm so sensitive. Please don't move.\"\n\n\"That was remarkable.\"\n\n\"I feel like I just hiked twenty miles. My legs ache, but it is a good ache. I found my g-spot.\"\n\nI whispered, \"I think this is my new favorite cuddling position.\"\n\nZo\u00eb brought her face to mine and kissed me, \"I know it's mine.\"\n\nShe laid her head back down on me."
    ],
    "authorname": "Quinn_McMullen",
    "tags": [
        "oral",
        "orgasm",
        "cunnilingus",
        "exhibitionism",
        "friends with benefits",
        "masturbation party"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/regaining-my-life-ch-04"
}