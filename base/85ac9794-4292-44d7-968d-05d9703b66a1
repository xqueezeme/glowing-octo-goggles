{
    "title": "Vannerbehn's Luck Pt. 08",
    "pages": [
        "\"It's possible? Ludianne could go home?\" \n\n- \"I believe so.\" said Taliesine. \n\n- \"That's fantastic!\" \n\nLudianne hugged me. \n\n- \"It won't be easy, though.\" said the wizard. \"Or cheap.\" \n\n- \"Uh-oh.\" I didn't like the way she'd said that last bit. \"How much?\" \n\nTaliesine shrugged. \"Anywhere between a hundred and two hundred and fifty thousand.\" \n\nI gaped at her. It wasn't that long ago that I'd have considered 250 a good score for the month. Now I was listening to the raven-haired wizard calmly throwing out a sum a thousand times greater. \n\n\"There are components we will need. I can't even begin to imagine how we'll obtain some of them. Magical resources, consultations ...\" \n\n- \"We can afford it.\" I said. \"How much do we have on hand, partner?\" \n\nLudianne put her hand on my arm. \"Slow down, Kelsen. We have to maintain a considerable reserve for the Narimac. You need money, as well, to buy a house. Taliesine is earning her reward.\" \n\n- \"Kima and I have found a suitable place.\" said the wizard. \n\n- \"There you are.\" said Ludianne. \"You have to go see it.\" \n\nI really didn't care. A house is a house is a house. I had far more practice robbing them. I myself only needed a room with a bed and a chest. But there might be advantages to living under the same roof as a wizard, and a deadly fighter. \n\nThere are times, I must admit, when I don't have a clue what I'm talking - or thinking -about. This was one of them. \n\n11 Bedford Square was a three-storey mansion, on a very respectable street atop the Hill. It was quiet, with a small park directly across from it. There were flower beds on either side of the front door. \n\nMy main impressions were of dark wood, sunlight streaming through cleverly-placed leaded-glass windows, and space. So much space. You could have fit every room I'd ever rented into this house, and still have space left over. \n\nI followed Taliesine and Kima through a sitting room (aren't most rooms made for sitting?), a dining room, a kitchen ... and then my mind began to shut down. Taliesine was talking, probably explaining the finer points, but I couldn't follow a quarter of what she said. \n\nKima just grinned at me. \"You look a little lost.\" \n\n- \"A little? Don't tell me you understand all of this.\" \n\n- \"It's got a great room for storing armour and weapons.\" she said, with a wink. \"And a wine cellar.\" \n\nAfter a tour of all three storeys, I did begin to see a picture emerging. My bedroom, with a small antechamber (another 'sitting room') would be on the 3rd floor, at the back of the house. Taliesine and Kima would be at the front, with a view of the park. \n\nFor the rest of the upper floor, there was a room with a huge bathtub, and a 'common room'. The second floor would be given over to living quarters for the servants. \n\n- \"How many servants are we talking about?\" I asked. \n\n- \"Cook, gardener, two or three maids. Maybe a butler who doubles as a wine steward.\" \n\n- \"Which I'll be paying for?\" \n\nTaliesine cocked a snook at me. That's what it looked like, anyway. \n\nThe ground floor would be for receiving guests, entertaining, and so on. Naturally, I looked at the house from the perspective of a burglar. I saw far too many points of ingress. \n\nKima shook her head. \"Don't you worry, Kelsen. By the time Taliesine is finished with this place, a fly will have a tough time getting in unnoticed.\" \n\n- \"Guards and wards.\" said the wizard. \"Guards and wards.\" \n\n- \"I'll take your word for it.\" I said - but I intended to take my own precautions. \"So am I understand that this is the place you want? Both of you?\" \n\nThe wizard and the fighter exchanged a look. \n\n- \"Yes.\" said Kima. \n\n- \"May I ask: how much is this place?\" \n\n- \"Sixty thousand.\" said Taliesine. \n\n*** \n\nMother of Mercy. The dragon we'd fought couldn't have afforded to buy this house. And, as I soon discovered, 60,000 was just the beginning. Taliesine needed a room refurbished, for her private - magical - use. Furniture, carpets, tapestries, bedding, wine, servants ... \n\nThe women had their own ideas, of course, but a wizard and a fighter aren't necessarily equipped with taste in home furnishings. But I knew someone who was. \n\n- \"I could really use your help with this.\" I said to my friend Marta. \n\n- \"I can do it, Kelsen. But it sounds like it could be very time-consuming. I couldn't afford to do it for free.\" \n\n- \"I wasn't asking as a favour. Of course we'll pay you.\" \n\nMarta met Kima and Taliesine, and impressed them with her first three suggestions. From then on, they were putty in her hands. \n\nIt wasn't a bad decision. Marta had been inside dozens of upscale houses, and she had an excellent eye for tasteful decor. She would enjoy the whole process of decorating our house. \n\n- \"How much?\" asked Kima. \n\n- \"Fifty a day.\" said Marta. \"That's better than a percentage, because then you know that I won't be inflating the prices or kicking money back to the merchants.\" \n\n\"That's the first thing. The second is ... if you have guests, and they compliment you on your furnishings - I'd like it if you told them about me.\" \n\n- \"We can do that.\" said Kima. \"Is there a third thing?\" \n\n- \"Oh, yes.\" said Marta. \"Kelsen has to treat to me to another night at the Narimac. Once each week that I'm still working for you.\" \n\n- \"That will be a pleasure.\" I said. \n\n- \"With the full massage, too.\" she said. \"Including the oil.\" \n\nMy future housemates exchanged a look. \n\n*** \n\nMarta had more excellent advice, which she gave away for nothing. \n\n- \"You'll need a cook. Servants.\" she said. \"Do you remember the Seahawk?\" \n\n- \"The tavern that burned down?\" There had been a nasty drunken brawl, and while the winners celebrated, some friends of the losers came back and set fire to the Seahawk. Burned the place to the ground - along with four of the adjacent buildings. \n\n- \"That's the one. The food there was excellent. That was the work of Boutan - she was the cook. And she lived next door.\" said Marta. \"She's not only out of a job, but she's also homeless, her and her daughter.\" \n\n- \"I see. You think she'd cook for us?\" \n\n- \"I know she would. Her daughter is ... I don't know, 16 or 17. If you gave the girl a job, as well - chamber maid, or something - you could have them both. I've tasted Boutan's cooking. You wouldn't regret it.\" \n\nMarta's suggestion sounded good. I met with Boutan, living in cramped conditions with a friend, on the lower slopes of the Hill. She was grey-haired, wrinkled, and stooped over. But I got a good feeling from the very first moment I talked with her. \n\n- \"I'm tired of the tavern game.\" she admitted. \"And I want to find a place for Naomi, here.\" She indicated her daughter, a short blonde moppet who looked barely sixteen. She was cute, though, and I could well imagine what kind of trouble she could get into, hanging about unsupervised in a tavern. Boutan would be a grandmother twice over before she knew it. \n\n\"Marta speaks well of you, Master Kelsen.\" said Boutan. \"And if you can promise that you'll protect Naomi ...\" \n\nYou have to understand: when Boutan said 'protect', the look on her face said 'don't molest'. She was worried about the Master of the House hitting on the servant girl. \n\n- \"I wouldn't let any harm come to you, or your daughter.\" I said. And the look I gave Boutan clearly implied that I included her daughter's maidenhead in that statement. \n\n- \"Then we'd be happy to work for you.\" said my new cook. \n\n*** \n\nThe house took up a chunk of my time. But I didn't forget about Jerian. Teeshay was constantly after me, wanting to 'do something'. After a few days, she seemed to be growing suspicious. \n\n- \"Are you trying to avoid me?\" she asked. \n\nThat wouldn't do. So I bought a few bottles of wine, and took the little spy back to one of my rooms. I probably wouldn't need so many hideouts once we had the house ready for occupancy. \n\nTeeshay was thrilled to see my room. That, and the wine, put her into a good mood. A very good mood. \n\nI banged her from behind, bent over the bed, until she began to slobber on the sheets. Then I flipped her onto her back, and climbed between her legs. I entered her in one long, swift thrust. She lay back on the pillow, with her arms behind her, palms pressed against the wall.. But she raised her hips, and wrapped her slender legs around my waist, giving me even better access and deeper penetration. \n\nAs I fucked her, hard and fast, I wondered if she was sleeping with Jerian, as well. \n\nOdd, that. As I fucked Teeshay, my mind was on other things. Her lies, the question of how much Jerian knew about me, and what he was really doing ... I was piling into her - and nowhere near coming. \n\nTeeshay was staring at me in wonder. That's when I realized that I'd lost track of time. I'd been driving my hips against hers for quite some time. I slowed down, a bit, and changed from thrusting to grinding against her clit. \n\nIt worked, eventually. Teeshay came - or faked it. \n\nOnce I started concentrating on what I was doing, it didn't take all that long before I sprayed jets of come all over her stomach and cute little tits. I rolled over, next to her, and watched her fall asleep. \n\nI didn't sleep, of course. Would you? \n\n*** \n\nShowing Teeshay the location of my room was a kind of test. Partially, at least. The very next evening, I went back to that room. Sure enough, there were two men watching the place. Not very effectively - they were far too easy to spot. \n\nThey hadn't been there the night before, when I'd arrived with Teeshay. Or when we left. Teeshay was having me watched. Or Jerian was. \n\nI was probably being followed, as well. But I routinely shed tails, without much inconvenience. Only a dogged or persistent tracker could give me cause for concern, and I hadn't had one of those in ages. \n\nI know how it's done, because I was skilled at doing it myself. When I set up to burgle a man's house, or to run a complicated scam on him, I always wanted to know who I was dealing with. That meant knowing where they went, and who they associated with. I could follow them all day, without my quarry ever suspecting that I was there. \n\nNow I was applying those skills to Jerian. I was careful - there's no point even trying it if you're not going to be cautious. And I had help. \n\nLittle Denya and two of my older accomplices took a turn working with me. If you're attentive, careful, or a bit of both, you may suspect that you're being followed. But when that suspicious person is then nowhere to be seen for the next hour, it's natural to relax. \n\nJerian left his house with a pair of bodyguards, and - unfortunately - Syrava. \n\nFirst off, the fey could easily recognize me. Second, she was a wizard: unpredictable, and dangerous. I handed off the tail to Denya, and hurried off to get some more of my people. I warned every single one to be extra careful. \n\nFrom then on, I stayed a few streets away. Periodically, one of the team came to let me know what had happened. \n\n- \"'E went t'the docks.\" said Puli, a young fellow with horrifically large ears. He was permanently annoyed that I made him wear a variety of hats when he worked for me. \n\n\"Met wi' two pirates fer 'bout an hour.\" \n\n- \"Any idea who they are?\" I asked. \n\n- \"Denya's on it.\" \n\n- \"Alright. That hat suits you, Puli. Looks good.\" \n\n- \"Doan rub it in, Kelsen, awright?\" \n\n- \"Honest opinion.\" I said. \"Who has the next leg?\" \n\n- \"Camenus.\" \n\nCamenus was a young student. He couldn't decide if he wanted to be an advocate, or a wizard. While he was trying to make up his mind, he had to pay two tutors. To help make ends meet, he was happy to be an informer and part-time operative for me. I liked the boy because he was clean-cut, and could legitimately loiter where most of my helpers couldn't go. \n\nAn hour later, Camenus came in to report. \n\n- \"He met with Rymogo. At the Anchor Chain.\" \n\nThat was legitimate enough. Maybe. Two Pirate Lords having lunch could be completely innocent - or it could be the start of a conspiracy. \n\n- \"Who's on now?\" \n\n- \"Mar.\" \n\nHer full name was Marulamda. Naturally, no one in the Bottoms could be bothered with a name so long, so she was Mar to everyone. She was an intelligent, attractive young woman, who was also vacillating between career paths: thief, or prostitute. Mar was clever enough to know that the two are not necessarily incompatible. \n\nIt occurred to me, then, that she might benefit from a chat with Marta. I would have to get the two of them together. \n\nMeanwhile, Denya came in to report. \n\n- \"Them first two pirates? One o' Jerian's captains, and a lootenant.\" \n\n- \"Thank you, sweetheart.\" I said. \"Catch up to Camenus.\" \n\nShe scowled at me. I didn't know whether it was for what I called her, or because she had to meet Camenus. Let's say the latter. \n\nJerian met another captain after his lunch. This one was much more interesting. It turned out to be Jodzio Two-Tooth. \n\nThere were dozens of unaffiliated pirates in Kumyr, men and women who prized their independence above all. Money talks, of course; so does not having to take shit from anyone. \n\nThe Pirate Lords routinely canvassed these independents; it would have been remiss of them not to. Anyone who could recruit even a few independents could become a greater power in the city overnight. \n\nJerian and Two-Tooth might be still in the polite stages. But one never knew ... Ledomir and Inavar might be interested in this little bit of information. \n\nShortly afterwards, Jerian and his two bodyguards separated from Syrava. It was Marulamda who informed me. \n\n- \"Did someone follow the wizard? Please tell me you didn't -\" \n\n- \"Puli is on Jerian. Denya took the wizard.\" she said. \n\n- \"You left a little girl on the wizard? What were you thinking?\" \n\n- \"What're you talkin' about?\" said Mar. \"Denya's better than any of us.\" \n\nThat was true. I had overreacted there, for a moment. \n\nWith Syrava elsewhere, I could afford to shadow Jerian myself. \n\nWhat a waste. \n\nHe took his bodyguards for few drinks at the Castle (a tavern, not a real castle). Denya found me outside. \n\n- \"The wizard went back to Jerian's house.\" she said. \n\n- \"You're sure? You were careful?\" \n\nDenya flashed me her best look of utter scorn. \"What d'you think?\" \n\n- \"Don't get snippy. I worry about you. And your brother.\" I paid her off, and told her to get lost. \n\nLater that evening, Jerian went to visit a brothel. Not an expensive brothel, either. I was disappointed, and a bit confused. \n\nJerian had Cremyne at home. What was wrong with the man? She was one of the three most beautiful, most luscious, desirable females in all of Kumyr. Ludianne was one, as well, but I had yet to meet the third. Or first. I just thought it wise to leave one spot open, near the top. \n\nEven if Jerian felt the urge to step out ... why here? Surely he could afford better. I didn't know what to make of it. \n\nI paid off my crews, and went to the Narimac, for a late drink and a chat with Ludianne. \n\n*** \n\nFour days of following Jerian produced mixed results. He met with several independent captains; again, that could be normal ... or not. After watching his spending habits, I came to the conclusion that he was a cheap bastard. That was no way to get ahead, for a Pirate Lord - especially an ambitious one. \n\nJerian was a randy bugger, too. Every night (and one afternoon), he visited seedy brothels, or low-end taverns. Why he would do that, with Cremyne at home, continued to baffle me. \n\nI began to suspect that I was going to have to break into his home. There might be some documents, or some kind of evidence to give me a hint of what he was up to. \n\nUnfortunately, no sooner had I decided to do that, than the heavens opened up, and it began to rain. Every day. Sometimes all day, and all of the night. \n\nYou can't burglarize someone's house when it's raining. Dripping water on the floors and furniture and tracking mud across the carpets is no way to pass without a trace. I would have to wait for decent weather. \n\nThat did give me an opportunity to ask Aressine out again. This time, she agreed to come to the Narimac. \n\nShe wore a long white skirt, and a green and yellow blouse that was just a little too tight across the chest. Aressine had a fine bosom - something I'd never noticed before. \n\n- \"I don't think I've ever seen you without your armour - or a cloak.\" I said. \n\n- \"Neither seemed appropriate, tonight.\" she said. \n\n- \"You look ... really nice.\" \n\nShe smiled. \"Thank you.\" It wasn't the most suave of lines, on my part, but maybe that was what she liked about it. \n\nToo bad she didn't care much for the Narimac. \n\n- \"Too loud?\" I asked her. \n\n- \"I'm not much of a gambler.\" she said. \"Sounds strange, coming from a fighter, I know ...\" \n\n- \"Why is it strange?\" \n\nAressine looked sad, for a moment. \"Many fighters that I've known ... gambled a great deal. Every battle, every duel is like placing a bet. You never know when you're going to end up facing someone better. An opponent who's quicker, or stronger ... or just a little luckier, that particular day.\" \n\nI took her upstairs, to the balcony, where at least it was a bit quieter. \n\n\"I'm sorry.\" she said. \"I didn't mean to go maudlin on you.\" \n\n- \"Don't be. I didn't invite you because I expected you to make me laugh.\" \n\n- \"Why did you invite me, Kelsen?\" she said. \n\nDamn. Why do women do that? Everything is going fine, and they have to spring the trap question. \n\nWell, I wasn't playing Aressine, so I told her the first thing that popped into my mind. \n\n- \"Do you remember, after the fight with the dragon ...? You were sitting on a stump, in your dented armour. You were completely exhausted. Your armour was streaked with blood, and dirt, and black acid.\" \n\n\"You looked exactly how I felt, at that moment.\" \n\n\"Physically and mentally drained. Satisfied, with a job successfully completed. But well aware that it could easily have all gone very badly. Lucky. You were feeling lucky to be alive. But too damn tired to enjoy it.\" \n\n- \"That's amazing.\" she said. Her eyes were wide. \"How did you read all that?\" \n\n- \"I told you: it's exactly what I was feeling. That was why I felt a ... kinship with you. Then I healed you - that always creates a bond. It works both ways, in case you're wondering. I will always be grateful to Pamna.\"  \n\nAressine blushed. She swept her hair back. For the first time, I realized that she had an exceptionally long neck. Swan-like. I felt the urge to kiss her neck, her throat ... \n\n- \"And Pamna told you that I was interested in you.\" she said. \n\n- \"Don't make too much of that, Aressine. Yes, if I hear that a woman is interested in me, I'm curious ... But if she's ugly as sin, it isn't enough that she likes me. Or, if she's a complete bitch, that's not going to work either.\" \n\n- \"So I'm not a complete bitch?\" \n\nI shook my head. \"You know very well you're not. But if you're not tired of compliments, then I can tell you that you're very attractive, and pleasant company. I know that you have a good heart - and not just because Pamna was trying to steer me towards you.\" \n\nAressine smiled again. I liked to see her smile, almost as much as I liked her profile. \n\n- \"Does that mean that you'd want to see me again? Even though I don't like the Narimac?\" \n\n- \"Of course. Just because I own part of it doesn't mean that I want to spend all my time here.\" \n\n- \"Can I choose where we go, next time?\" she said. \n\n- \"Of course. When?\" I tried not to sound too eager. \n\n- \"The day after tomorrow?\" She was smiling again. \n\n- \"That sounds great.\" \n\n*** \n\nI expected a busy day, following Jerian in the rain, but he didn't go out at all. That still left me with Teeshay, who wanted to know more about what I was planning, or even what I was thinking. ",
        "So I made up a story for her. \n\n- \"Jerian keeps meeting with these independents, these unaffiliated captains. I'd like to know more about them. And then there's these cheap brothels he goes to. It must be a front for something else. I have to find out who he really meets when he's there.\" \n\n\"But I can't be everywhere at once.\" \n\n- \"I can help.\" she said. She even managed to sound eager. \n\nI gave Teeshay a list of people of places, let her pick half of them, and arranged to meet her the next day. \n\nThen I went to the new house, to see how Marta was doing. Taliesine and Kima had even more conservative tastes than I did, but they liked Marta, and trusted her good sense. She had already procured several pieces of furniture, thick brocade curtains, and some very large carpets. \n\nBut she was more than ready to call it quits early, and collect a part of her payment. I took her to the Narimac, and gave her some money to play with. Meanwhile, I caught up with Ludianne. \n\n- \"How did things go with your friend, last night?\" she asked. \n\n- \"Good.\" I said. \"Good.\" \n\n- \"So you have not slept with her.\" \n\n- \"What? No - I'm ... taking it slow.\" Aware of how stupid that sounded, I corrected myself. \"I like Aressine. She's ... different.\" \n\n- \"Then I wish you success.\" said Ludianne. She kissed my cheek, and went back to work. \n\nMarta lost her stake with surprising speed, and claimed the second part of her reward much earlier than I'd expected. \n\n- \"If I didn't know better, I'd swear you lost the money on purpose, just to get to the massage.\" \n\n- \"What if I did?\" she said, with a grin. \n\nI had a hot bath prepared for her, and a light meal to follow. We talked about the house, and Kima and Taliesine. Marta and I knew each other well: there was no shyness on either side as she soaked in the tub, naked, while I served her food and wine, fully clothed. \n\nThen I treated her to a long-drawn out massage, which was what she'd really come for. This time I paid more attention to her ass and pussy than her big breasts, and brought her off using my fingers. I went down on her, and swiftly brought her to a second orgasm. \n\nI let her fall asleep, and covered her with a light blanket. \n\n*** \n\n\"I want you to show me the Gale.\" said Aressine. \n\n- \"What? Pamna told you about -\" \n\n- \"She said that you spend a lot of time and money there.\" \n\nDarn the witch! She was just having fun, I suppose. Or maybe she was trying to help, in her own odd way. \n\n- \"Aressine - it's not a tavern.\" I said. \"It's not a pub, or an inn.\" \n\n- \"Oh. Oh!\" The blonde fighter leapt to the wrong conclusion. From the sudden colour rising in her cheeks, she must have thought that the Gale was a whorehouse. \n\n- \"No - it's not ...\" \n\n- \"That's alright. My mistake.\" she said, still flustered. \n\n- \"Look - if you don't mind a walk, I'll take you there. It's not what you're thinking.\" \n\n- \"How do you know what I'm thinking?\" \n\n- \"I don't. But I can guess. And the Gale isn't what you expect.\" \n\n- \"Alright. I trust you.\" \n\nAs we walked down the Hill, it occurred to me that I knew very little about Aressine, other than the fact that she wasn't native to the Pirate city. \n\n- \"Where did you grow up?\" I asked. \n\n- \"Everywhere.\" she said. \"Oh, it isn't a secret, or anything like that. My mother was the concubine of a governor in the Eastern Empire. My father was a soldier. An officer. She was desperately unhappy, and he could see it.\" \n\n\"So they stole away together.\" \n\n- \"Did they really?\" \n\n- \"Oh yes. It was all very daring, and very dangerous. The Governor sent troops in pursuit - but in the wrong direction. My father was very clever. He brought my mother to Albysia.\" \n\n\"They changed their names, of course, and father made a living as a dueling master. He taught fencing, and trained young noblemen. I was born there.\" \n\n- \"That's very dramatic. Very romantic.\" I said. \n\n- \"I wish it had been. Mother died when I was six. She was very sad, as I remember. Glad to escape from concubinage, but life as the wife of a fencing instructor was not quite what she'd been hoping for.\" \n\n\"My father had no one to look after me, so I spent the day with him, while he taught.\" \n\n- \"Is that how you learned?\" \n\n- \"There was nothing else to do, but to watch, and listen. I was 12 before my father realized how much I'd learned. He finally agreed to train me - but only in private.\" \n\n- \"How did you end up here?\" I asked. \n\n- \"Father passed away, of a flux, when I was 17. There was nothing for me in Albysia, so I came here, to 'seek my fortune', as they say.\" \n\n- \"I'm glad you did.\" \n\nAs we reached the bottom of the Hill, Aressine began to show some concern. She could see - and smell - the difference. Her brown eyes were wide, and her mouth slightly open. \n\n\"It's alright.\" I said. \"I know my way around down here. Welcome to the Bottoms.\" \n\n- \"This is the Bottoms?\" She'd heard of it, though obviously she'd never been here. People who lived elsewhere rarely had a reason to come to the Bottoms, unless they were looking for cheap thrills. More often than not, those could turn out to be very expensive. \n\nThe Gale was a complete surprise to her - just as Pamna had intended. Meddlesome witch. Aressine couldn't seem to believe where we were. \n\n- \"It's a ... it's -\" \n\n- \"A hospice. A hospital.\" I introduced her to Mehdawi, after he'd finished embracing me. Thankfully, Mehdawi was too busy to tell any embarrassing stories. Instead, he dragged me off to see a difficult case he was having trouble with. \n\nAn hour later, Aressine and I stepped back outside. \n\n- \"I had no idea.\" she said. \n\n- \"You weren't meant to.\" I said. \"This was Pamna meddling. Matchmaking.\" \n\n- \"And you grew up here?\" \n\n- \"I certainly did.\" On a whim, I took her to Morley's. There was no sign on or above the door. Only locals knew where - or what it was. \n\nMorley's house was a tavern, of sorts. It was a simple room, without a single table or chair. Most of the space was taken up by four barrels of ale, and two casks of wine. There was a simple shelf, perhaps six inches wide, at elbow height. It was just wide enough to rest a tankard or a cup on. \n\nPatrons stood around the edges of the room. Most brought their own drinking vessels, which Morley kept re-filled as quickly as he could. He was permanently crooked, from bending over to ply the taps of his barrels. He also had a wart on his thumb the size of an extra finger. \n\n- \"Ah! The rich boy!\" he said, when he saw me. \"'Ere's the lucky lad. You'll be wantin' a cup, will ya? My Lord ...\" \n\n- \"Two, Morley, if you please. How is Mrs. Morley?\" \n\n- \"Makin' my life a misery - as you well know. 'Ello, Miss.\" he said, to Aressine. \"You after 'is money?\" \n\n- \"No.\" said Aressine. A moment later, she blushed, realizing that Morley had suggested she was a gold-digger. \n\n- \"I was jestin', lass.\" said Morley. \"You wouldn't be 'ere if you was. By garsh, she's pretty, Kelsen. A cut above yer usual, if I'm not mistaken.\" \n\nMorley could say whatever he liked. One of the boys I'd saved at the Gale was his son. The lad had been knifed in an alley three years later, but Morley had never forgotten me. He was too tough, too rough around the edges, to show emotion. So he needled me, teased and insulted. You'll have to take my word for it; that's how the Bottoms showed affection. \n\n- \"This place is ... I've never been anywhere like it.\" said Aressine. \n\nThe other patrons ogled her mercilessly, but no one ventured close enough to give offence. Some knew what I did, at the Gale; others knew that I carried two loaded pistols. \n\nAressine remained wide-eyed, almost stunned by this entree into a world she hadn't even guessed existed. Not that she was spoiled, or isolated; but the lower classes sometimes never realize that there are still classes well beneath them. \n\nWe had a couple of pints, while she laughed, and promised that Pamna was going to get an earful. \n\n- \"She likes you, Aressine. I know that she likes me. Pamna thinks that we would be good together, so she's not above a little meddling to ... help things along.\" \n\nThe blonde fighter looked thoughtful, for a moment. She had trouble meeting my eye. \n\n- \"Kelsen, I would ... invite you to ... my place. But my living conditions are ... complicated. I don't want to go to the Narimac, and I don't believe that your house is ready. Leastways, that's what Kima said.\" She was blushing again. \n\n- \"I'm flattered.\" I said. \"And just so you know - I have two rooms - two separate rooms. Secret and ... private. We could go there ... but I don't think we should. Not tonight.\" \n\n- \"No?\" Aressine was understandably flustered. She had just offered herself to me - at least, that was what I thought she was doing. And I was saying no. \n\n- \"I think that you've been affected, a little, by the Gale. And the Bottoms. It's not my idea of a romantic evening, but ...\" \n\nI looked her in the eye. \n\n\"I do want you. But I want you to be sure. I'm not going anywhere. You can think it over. Take your time. And if you would like to ... we can have supper together. The day after tomorrow? I have a room we can go to ...\" \n\nAressine and I walked up the Hill together. Then I walked her home. We didn't say much, either of us, for the last quarter of an hour. \n\n- \"I'm good from here.\" she said. \n\n\"And the day after tomorrow sounds like a good idea.\" \n\n*** \n\nThe next night, the skies were clear. I would have preferred more cloud, but it wasn't raining, and the ground had dried up before dusk. The opportunity was there: it was a good night to break into Jerian's house. I waited until past midnight. \n\nSoft boots, a short cloak ... sometimes, they made all the difference. I had a soft, pliable mask of black silk, to hide my features, light enough that it wouldn't cause me to sweat. \n\nI left the rapier in my room, but a dagger was essential. It was more of a tool for effecting entry than a weapon. For defence, I had my pistols. Yes, they were cumbersome, and it would have been much easier to move about without them. But they had saved my life so many times, I didn't even think about leaving them behind. \n\nJerian had a pair of his pirates circling the house, at random, unpredictable times. But neither man was particularly light on his feet, so it wasn't difficult to hear them coming. I got over the low stone wall, and up close to the house, without being seen - or heard. \n\nI'd had four nights of observing Jerian's house to choose my approach. There was a ground floor window, on the west side, where the kitchen was. It was blessed with an extra wide sill, ideal for letting bread and pies cool. There was a single set of solid wooden shutters, but no glass, and no inner shutters. \n\nI cast my silence spell. Then I was easily able to pull myself up onto the sill, until I could kneel on it. I had grown quite adept at not getting my pistols caught on obstructions. \n\nThe shutters were well-built; I couldn't fit my dagger between them. But my boot knife was slimmer, and it slid between them easily. I lifted the latch, opened one side, and climbed inside. The first thing I did was close the shutters behind me - but without latching them. \n\nIt was dark, in the kitchen. But there was a dim sliver of light under the door, coming from the hallway. I waited, and listened. Slowly, carefully - I opened the door. \n\nThere was no one outside the door, or in the hallway. But I could hear voices coming from a room further down the corridor. \n\nTrusting to my silence spell, I left the kitchen, and moved towards the sounds. \n\n- \"... should wait a little longer. Best not to rush it.\" \n\nI couldn't hear the answer. The second voice was pitched lower, too indistinct for me to identify. \n\n- \"No.\" said the first voice. \"Better safe than sorry. There's no need to hurry.\" \n\nI knew that voice. It was Syrava, the fey wizard. \n\nThe second person said something, but I couldn't make it out. Jerian, I assumed. Speak up, damn you! \n\n- \"There are too many (inaudible) watching us right now.\" said Syrava. \"I would prefer to wait.\" \n\nI considered inching closer, to be able to hear the second speaker - Jerian. But there was no decent cover anywhere near the door to that room. My silence spell is wonderful - but it doesn't make me invisible. \n\n- \"Why don't we leave this, for tonight?\" said Syrava. \n\nThe reply was inaudible. \n\n- \"We could ... go upstairs.\" said the fey. Her voice had gone soft, as if she was cooing. \"I could help you to ... relax.\" \n\nI couldn't hear what Jerian said. But I also missed Syrava's next words. She had moved - or lowered her voice. A moment passed, where I wondered what they were doing. \n\n- \"No.\" said Syrava. \"That's not ... it's not just sex, for me.\" \n\nWhat? My eyebrows rose so fast that they slammed into my hairline. Had I heard that correctly? Or perhaps I shouldn't have been surprised; Jerian was a randy pirate. \n\n- \"Wait!\" said Syrava - loudly. \"What's -? Damn it!\" Then she raised her voice even higher - she was practically shouting. \n\n\"I'M GOING TO MY ROOM! MAYBE I'LL GET SOMETHING TO EAT, FIRST!\" \n\nI got back to the kitchen in a heartbeat. There was nowhere to hide, in there, and if she brought a candle, or a lamp, I was done for. There was no time for second guesses. My instinct told me to get out - immediately. \n\nI couldn't latch the shutters behind me, but I closed them as best I could. Then I dropped lightly to the ground. Luck was with me; neither of the perimeter guards was anywhere nearby. \n\nIt took only a few moments to get away from Jerian's house, and over the wall. \n\n*** \n\nI almost didn't go to meet Aressine. \n\nI needed to do some thinking, first, about what I'd heard in Jerian's house. Was Syrava actually speaking to Jerian? Why had she stopped, so suddenly? And her final words - why had she shouted? \n\nThat alone was so odd ... I began to wonder if she had somehow known that someone had broken into the house. \n\nThough it wasn't the most conducive place for reflection, I went to the Narimac. I needed Ludianne's advice. There was time for a nap before she finished working. My partner woke me up, as I'd asked her to do. \n\n- \"Trouble?\" she asked. \n\n- \"Lots.\" I explained what had happened at Jerian's, and repeated - word for word - what Syrava had said. \"Is it possible that she knew I was there? Magically?\" \n\n- \"I know the moment a person enters the Narimac without paying the cover charge.\" said Ludianne. \"There is no need to react instantly, because I am not in danger.\" \n\n\"Sorry, Kelsen. I am fascinated by the type of magic you and other people cast, precisely because it is so very different from what I do. You need help from someone who understands what Syrava is capable of. Perhaps your friend Taliesine?\" \n\n- \"You're a treasure.\" I told her. \"That's excellent advice.\" I kissed my partner on the cheek. \n\nIt was far too early in the morning to go looking for the wizard. I probably should have gone back to sleep. But Ludianne leaned into the kiss, and I felt the pressure of her breasts against my chest. \n\nThere was also the constant visual stimulation. Repeated exposure hadn't rendered me immune, or anything near. She was, simply, irresistible. If she was in the mood, I wasn't about to deny her. \n\n*** \n\nNeither Taliesine nor Kima were at the house yet, Marta informed me. \n\n- \"Please tell them that I'm looking for them. I'll be back later today.\" \n\nThen I was off to meet Teeshay. I didn't particularly want to, but if I failed to show up, that might tell Jerian that I was on to her. I started thinking of something to do that would keep her occupied for a while, far enough away to keep her out of my hair for a time. \n\nTeeshay was too excited; I could tell the moment I saw her. \n\n- \"I have something.\" she said, immediately. \"It could be really important.\" \n\n- \"Oh?\" It was going to be a lie; the only question was, what kind of lie? \n\n- \"Remember you told me to keep an eye on Jerian's bodyguards? Well, two of them went to a house yesterday. I checked the place out after they left. It wasn't a tavern, and it wasn't a whorehouse.\" \n\n- \"No?\" \n\nTeeshay grinned, and shook her head. \"It was Nanamon's house.\" \n\n- \"Who?\" \n\n- \"Nanamon. One of Evor OneHand's captains!\" \n\n- \"Oh!\" Never mind that I didn't believe Teeshay for a moment. But I had to pretend to, because if this information really were true, it might be the supposed breakthrough we'd supposedly been searching for. \n\n- \"Let's go take a look.\" she suggested. \n\n- \"I will. I'll go straight away.\" \n\n- \"I'll go with you.\" she said. \n\n- \"Teeshay - thank you. But I work best alone. Let me do this on my own. I'll meet you tomorrow, and we can compare notes. \n\n- \"Alright. If you say so.\" \n\nWas she giving in too easily? It didn't matter; I didn't trust her half as far as I could throw her. I went to find Denya, her brother, and four more of my people, and sent them to have a look around the area, for two blocks in every direction from the address Teeshay had given me. \n\nThey turned up nothing. \"All clear.\" said Denya. \"Want us to stick around?\" \n\nI gave her additional instructions. Then I went to Nanamon's house - if that's really what it was. I doubted it. \n\nIn fact, I doubted it so much that I walked past it. Then I reversed direction, and walked past in the opposite direction. It might be a trap of some kind - but what kind? \n\nThere was nothing obvious about the house. It was a modest dwelling, sandwiched between other houses that were virtually indistinguishable, except for their brightly painted front doors. Nanamon's was green. \n\nNo, I didn't knock on the green door. Instead, I pressed myself against the wall of the neighbouring house, and cast my third spell. Telekinesis. \n\nI'm not very powerful, so I can't draw an enemy's sword from its scabbard, and then fling it across it the street. Nor can I lift an anvil, and drop it on your foot. But a door latch I can manage. \n\nI lifted the latch of the green door, and began to pull it open. \n\nThere was a sudden blast, as from a blunderbuss, and pellets flew across the street, to slam into the wall opposite. The shock of it took me by surprise, and spoiled my spell. I took off running in the opposite direction. \n\nI ran a long way. There was no pursuit. \n\nInteresting. \n\n*** \n\nTaliesine and Kima hadn't come to the house yet. Marta hadn't seen them. \n\nDenya came to the Narimac to find me. \n\n- \"Four men. Two with guns, two with swords.\" she reported. \"Didn't know you could run so fast. Impressive.\" \n\n- \"Thanks, little smartass. You followed them?\" \n\n- \"They split up. Two went to the Anchor Chain, two went on board the Headbutt.\" The Headbutt was a ship - belonging to Jerian. \n\n- \"Good work, Denya.\" I paid her off, and went to change my clothes. \n\nYes, I had much to think about. But I wasn't going to sneak into Jerian's house on consecutive nights, so I had no reason to break my engagement with Aressine. Truth be told, I was looking forward to it. For a short time, I'd forget about Pirate Lords, and liars, and all of their intrigues - and I would concentrate on a beautiful woman. \n\nShe came to the Narimac, just after dark. I had a basket with two bottles of wine, a loaf of bread, half a cheese and some green peppers. It was not part of my plan to get her drunk, or to stuff her with food. \n\nA quiet, peaceful place, where we could be alone ... that was the idea. The light in Aressine's eyes told me that she was in complete agreement. \n\nI took her to my third room, which I hadn't used since I'd first rented it. It was the most secret, most private place I could think of. Aressine was no 'fancy' girl; she didn't need luxuries, or expensive food and drink. \n\nIn fact, she didn't seem to need food or drink at all. Once we'd climbed the stairs, I doffed my cloak, deposited the basket on the bed, and turned to her. ",
        "- \"It isn't much, but it's quiet. And nobody knows -\" \n\nI didn't finish that sentence, because Aressine grasped the shoulder of my shirt, and pulled me close. She dipped her head slightly - she was just a bit taller - and kissed me. On the lips. Softly, at first. And then with a little more intensity. \n\nShe broke the kiss. \"You have too many weapons on.\" she whispered. \n\nI did. I put my pistols on the small locker at the foot of the bed, and my rapier in the corner. My dagger and boot knife went on the chair in the corner. Aressine placed her dagger next to mine, and her sword in the corner. \n\nWe hung up our cloaks on the pegs behind the door. We'd both moved at the same time, and found ourselves standing side by side. She kissed me again, and our arms went around each other. \n\nAressine undid the buttons on my vest, and pushed it back, over my shoulders. I couldn't reciprocate, and attend to her clothing, because her arms were inside mine. But that was fine; I was curious to see how far she would go. \n\nShe untied the laces at the throat of my shirt, and then reached down to pull it free from my trousers. She slid both hands under my shirt, and ran her fingers up my ribs, to my chest. She stepped closer, and reached around, to run her hands over my back. I was warm; her hands were cool, but rough - calloused, no doubt, from all that sword work. \n\nThen Aressine pushed my shirt over my head. She seemed happy with what it revealed, and let her hands roam over my chest and stomach. My blonde fighter was much more aggressive than I'd expected. It was highly enjoyable. \n\nShe kissed me again, while she let her hands explore my upper body. I noted though, that she didn't venture below the beltline. Aggressive, but only to a point. The next step would have to be mine. \n\nI broke the kiss. \"This is ... wonderful. But I'm half naked - and you're not.\" \n\nAressine blushed, but she stepped back, and began to undo the laces of her own vest. She removed it, folded it neatly, and placed it on the chair, atop our daggers. Then she turned her back, and pulled her shirt over her head. \n\nHer long blonde hair tumbled halfway down her back. She had powerful shoulders, large biceps, and a strong back. Yet her waist was surprisingly narrow. I realized that I was holding my breath. \n\nAressine took off her boots, and then undid her belt. Still with her back to me, she slid her pants down, and stood there naked, with her back to me. Her ass was fine, but it was the twin dimples in her lower back, just above her buttocks, which made me smile. Lovely. \n\nShe surprised me by turning around to face me. I had expected her to be more modest, more tentative. But Aressine seemed prepared to let me gaze my fill at her naked body. \n\nAnd what a body. \n\nHer neck was quite long, and only stood out the more because of her powerful shoulders. Her breasts were perfectly proportional, and beautifully shaped. Her stomach rippled with muscle - something I was not accustomed to, on a woman. \n\nShe did cover her sex with her hands, but I could admire her well-toned legs. They were strong, but still shapely. Aressine watched me as I ran my eyes over her body, much as she had run her hands over mine. She could tell that I was happy with what I saw. \n\n- \"You should be naked, too.\" she said. \n\nI hurried to comply. It seemed like the gentlemanly thing to do. \n\nWe kissed, naked, standing by the side of the bed. I finally got to kiss her throat, and swan-like neck. She hummed when I held her breast in her hand. When I reached between her legs, she did the same, but on a slightly higher note. \n\nThe feel of her calloused fingers on my most tender parts was ... unusual. I hoped that she wasn't planning to give me a handjob - I might not have survived the experience. \n\nWe were both trying to set the pace. I wanted to get her on the bed, where her height advantage wouldn't be so noticeable, especially if I could go down on her. Aressine, for her part, was trying to get me to sit down. \n\nIn the end, we wrestled each other onto the bed. Then we had to laugh: I was attempting to go down on her, while she was trying to get me to lie down so that she could suck my cock. I loved her smile when she realized that were working at cross purposes. \n\nWe eventually settled into a comfortable position where we could both get what we wanted. \n\nShe was clean, and fresh. Clearly, Aressine had anticipated - or hoped - that I would be doing this. She was licking the head of my cock, and taking it into her mouth, but when I ran my tongue between her outer labia, she groaned and fell back on the bed. \n\nWe ended up with me on top, with my face between her legs, while my dick hovered just above her lips. \n\nAressine had heard Pamna and me, beneath the wagon, all the way back from Kumyr. She was obviously primed, expecting something spectacular. I tried my best not to disappoint her. However, my fighter girlfriend was probably not the most experienced fellatrix. Her technique was ... nothing extraordinary. \n\nCertainly Aressine was distracted by what I was doing to her. To judge from her reactions, she was truly enjoying the experience. I brought her to a thunderous orgasm. Aressine clutched my ears in her hands, and very nearly pulled them off. \n\nShe flushed, and turned red from her throat to the swells of her breasts - a considerable distance. Her head fell back on the bed, and she panted. \n\n- \"That was amazing.\" she breathed. \n\nI rolled over, to lie beside her. \"Glad you enjoyed it.\" \n\n- \"Oh! But - you didn't ...\" She reached for my erection. \n\nI caught her hand. \"It's alright, Aressine. If you're willing, I'd rather ...\" \n\nShe understood immediately. I turned around, and climbed between her legs. She was wet, her labia moist and swollen. I placed the head of my engorged penis against her opening, and pushed gently ... \n\nThe moment of initial penetration, the very first time, cannot be matched. It is, at its best, exquisite ... a memorable moment. Even at its worst, it's a noteworthy event. \n\nThe instant that the head of my cock slid between Aressine's lips was utterly spectacular. It was ... entirely unforgettable. \n\nThere was the physical sensation, which was overwhelming. There was also the thought that flooded my mind: Aressine and me. Finally. \n\nBut there was also the creak on the landing at the top of the stairs, where I'd removed two nails from the floorboards. \n\nA moment later, someone put their full weight against the door of my little room. And a second after that, two people flung their bodies against that slender door. It burst open, and a quartet of men rushed into the room. \n\nI was already moving, the instant I heard the creak. I pulled out of Aressine. Bless her heart, she was no slouch: she immediately rolled towards the window. I followed, hopping sideways like a frog. \n\nThe men who broke the door down tumbled to the floor. A third fellow stepped across the threshold, and leveled his weapon. It was that Gods-damned blunderbuss from earlier today. \n\nHe pulled the trigger, and sprayed shot across the top of the bed and all over the wall of my room. \n\nFortunately, Aressine was already on the floor, between the bed and the wall. I was hopping further down, towards the end of the bed. Just before my knees hit the floor, a pellet caught my exposed backside, and traced a furrow across my left buttock. \n\nI scrambled for my pistols, at the foot of the bed. But just as I reached them, I looked up, to see the most incredible sight I'd ever witnessed. \n\nI'd seen a dragon, lightning bolts, gargoyles, Ludianne naked ... and this topped them all. \n\nOne of the fellows who'd broken down my door sprang to his feet just after blunderbuss-boy fired his weapon. He leapt onto the bed, cutlass in hand, ready to make mincemeat of us. \n\nThe bed was a little bouncier than he'd expected. And he was not prepared for my fighter-girlfriend. \n\nAressine stood up, suddenly, and grabbed him by the throat and the crotch. Using his own momentum against him, she turned him upside down, and slammed his body into the wall. Then she savagely drove him into the floor, head first - snapping his neck. \n\nThe second door-breaker was on his feet, as I reached for my pistols. He jumped on the bed, and slashed at Aressine. She ducked, grabbed her attacker's shirt with her left hand, and pulled him toward her. \n\nThen she drove four stiff fingers into his throat, crushing his windpipe. \n\nI saw all of this. But at the same time, I snatched up my pistols. I fired from ten feet away, at the man wielding the blunderbuss, and brought him down. \n\nThere was a fourth man, just outside the door. I shot him as well. It was good shot - killed him outright. \n\nBlunderbuss-man was only wounded. I went back for my rapier, and drove it into his throat. \n\nAressine didn't need any invitation; she scrambled into her clothing. I did the same. We were out of my room a few minutes later. \n\n- \"Where to?\" she asked. \n\n- \"The Narimac. We'll be safe there.\" \n\n- \"Who were they, Kelsen?\" \n\n- \"It's complicated. I'll tell you all about it - I promise. Aressine?\" \n\n- \"Yes?\" \n\n- \"That was incredible. What you did back there - I've never seen anything like it. You were absolutely amazing.\" \n\nAressine ginned. \"Your reactions were pretty quick, too.\" she said. \n\nWe made it to the Narimac without incident. My heart was racing, but the moment we passed the doors, I knew that Ludianne could protect us. \n\nI don't know how she knew, but the Janni joined us only a few moments after we had stepped inside. \n\n- \"What happened?\" said my partner. \n\n- \"Ambushed. I'll tell you all about it, later.\" \n\n- \"Are you alright, Aressine?\" said Ludianne. How could I not love her, when her second thought was for the safety of my girlfriend. Okay, I know that may sound strange ... but it was an unusual night. \n\nLudianne took us to her room. \n\n- \"You are bleeding!\" She pointed to the back of my pants, which were soaked in blood. She had me divest myself right there, in front of Aressine. Well, it wasn't anything she hadn't already seen. Ludianne cast a healing spell. \n\n\"That would have been an odd place to have a scar.\" she said. \n\nLudianne swiftly produced a bottle of wine, and some food. I had abandoned the basket and its contents at the scene of the ambush. She also cast a spell, which cleaned both Aressine and me. \n\nWith a wink, my partner left the room. Her room. \n\n- \"That was ... incredible.\" said Aressine. \n\n- \"Most exciting date I've ever had.\" I said. \n\n- \"Don't joke, Kelsen. Those men were there to kill us.\" \n\n- \"You were amazing, Aressine. I can't believe that I saw what you did. I can't believe that you did that.\" \n\nWe were still in the throes of the moment. Blood pumping, senses on full alert. I could see Aressine's nipples poking through her shirt. I was more than half hard, too. \n\nI reached over, and placed my hand on her thigh. \n\nBut Aressine had been looking around. She was no fool. \n\n- \"Is this Ludianne's room?\" \n\n- \"Umm ... yes.\" \n\n- \"She's seen you naked before, hasn't she? Have you slept with her, Kelsen?\" \n\n- \"Yes.\" There was no point in denying it. \n\n- \"More than once?\"\" \n\nOuch. I hadn't expected that question. \n\n- \"Yes.\" \n\nAressine frowned. \n\n- \"And Pamna?\" she said. \n\n- \"Well ... you knew about her.\" \n\n- \"I mean, have you slept with her since we returned to the city?\" \n\n- \"Umm ... yes.\" \n\n- \"More than once?\" \n\n- \"Aressine ...\" \n\n- \"How many other women are you currently sleeping with?\" she asked. \n\nDamn. There was Marta - but that was an obligation. Codyla - but that was unlikely to be repeated. Did Teeshay count? That was ... not the same. \n\nAressine saw my face. \n\n- \"Damn it, Kelsen!\" \n\n- \"It's not ... quite the way you think.\" \n\n- \"What does that mean? Kelsen, you're sleeping with half of Kumyr. Were you planning on giving any of them up? Or was I just to become number four? Or five?\" \n\n- \"Number one.\" I said. \"You would be first, Aressine.\" \n\n- \"First among many.\" she snapped. \n\nI couldn't think of an appropriate answer. Her face fell. For a moment there, she looked genuinely sad. \n\n\"Look, Kelsen.\" she said. \"I'll fight with you. By your side. But I'm not sure that I'm ready to fight for you ... if you understand the difference.\" \n\n- \"Aressine -\" \n\n- \"I think I should go home.\" \n\n*****"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "fantasy",
        "urban environment",
        "rogue",
        "intrigue",
        "cloak and dagger",
        "romance",
        "swords and sorcery"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/vannerbehns-luck-pt-08"
}