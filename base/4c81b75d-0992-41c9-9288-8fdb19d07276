{
    "title": "Sholan Alliance Ch. 03",
    "pages": [
        "I am editing the first five chapters of this series since I noticed a number of mistakes when I read them recently. Once I have them edited and submitted this should clear up the chapter order so that it is easier to read. That was a major oops on my part and I still am not sure how I managed it. Oh well, go me.\n\nI also had a volunteer editor, Captain Siren, review the first chapter in the Silver Moon series and she made some very good suggestions. With her help I am going to be revising all the chapters to remove some glaring inconsistencies. They will be posted as we smooth each chapter out.\n\nThe last thing I have to say is that there are only a few detailed sex scenes in this series as with my other stories. I find, this is a personal opinion, that having a sex scene in every chapter of a story gets boring after a while. I have come across some very good stories that keep getting broken up by one sex scene after another. That makes it hard for me to follow the plot line. \n\n*\n\nSince Sandi and Jenna moved into his spare bedroom he ended up with Satasha in his bed not that he minded. \"If you prefer to sleep in your bed I understand. It is more comfortable than mine.\" It had some sort of memory foam that automatically adjusted to what was most comfortable for who was sleeping in it. \"That and your shower has the air jets to get you dry.\" To be honest he was sort of thinking about them moving in there for privacy. He had enjoyed her last night and wouldn't object to more activity with her.\n\nSatasha actually laughed and covered her mouth so her fangs didn't show. When she did Billy reached over and gently pulled her hand away. \"I like your laugh and your teeth don't bother me.\" He leaned over and kissed her and slid his tongue in her mouth and let it roam over her teeth. \"Actually to be honest you fascinate me Tasha and that is saying a bit since I haven't found a women who draws me like you are for many a year.\" He pulled back a bit and licked her short muzzle and then nibbled on an ear.\n\nShe tensed when he pulled her hand away from her mouth since she had been trying very hard to keep her sharp teeth from showing. When he kissed her and slid his tongue into her mouth she was more than startled and her tongue slid into his as well. They kissed for a while before he spoke and her ears went down in embarrassment. \"Thank you Yilly that means a great deal to me.\" She looked down shyly and spoke. \"You interest me as well and not just because you are an alien.\" When he licked her nose and then nibbled on an ear she leaned into it and could feel her core starting to warm up again. Last night had been sort of awkward since they didn't know each other's body but tonight she had a feeling that it was going to be different.\n\nHe could feel her reaction to both his licking her muzzle and nibbling on the ear. She almost seemed to melt and soften in his arms. \"I see someone likes that huh?\" He was still learning about what she wanted and it was different since she was an alien. \"If you like or don't like what I am doing tell me. I will do the same. I want to please you as best possible.\" Tonight he was staying away from her tail, or the base of it till later. His hands started stroking her sides and back and he most definitely was enjoying the feel of her fur. \"I think I might just start liking the feel of fur against me.\"\n\nSatasha leaned into his nibbling and sighed. \"You are learning Yilly and if we get to my Mother Ship you are going to find women competing for your attention.\" She slid on top of him and started running her fingers across his skin. \"You are so different from what I am used to but yet you still draw me. I can feel your want and desire for me which feels really nice.\" She leaned over and kissed him again. \"I know you lost your wife years ago and in no way am I trying to replace her but your need is drawing me.\" She started nibbling on his ears and neck as well and his hands stilled on her back for a moment.\n\nThe mood for him wasn't really ruined but the mention of his former wife did hurt and he had to close his eyes and a few tears leaked out. \"I understand and I still miss her a great deal. I guess that is one reason I haven't done more than a few short term liaisons.\" \n\nShe scented the tears and started lightly licking his face to clean them off. \"Sorry Yilly for touching on that subject.\" She felt bad but when his arms curled around her and pulled her close she sort of guessed that he needed comfort.\n\nWhen she started licking his face he was a bit startled but went with it and pulled her close and more tears started flowing. \"Sorry Tasha for ruining the mood but damn it I still miss her. She didn't mind my travelling boots and went with me to my duty stations till she was too pregnant to be comfortable or was too close to delivery.\" One hand came up and pulled her head to his neck and he leaned into hers. \"You are a fine woman and I did enjoy last night. It is still hard for me to let go.\" He rolled on his side and curled up in her arms and really started crying. \"Sorry.\"\n\nShe could feel the pent up loss and agony he was feeling and pulled him close. \"It is okay Yilly. I understand and cry all you need.\" She could feel that he was a rather private person and had done his best to be strong for his girls as they grew. That wasn't mentioning hiding his feelings for Sandi as best possible. \"I am here for you Yilly and anything you say will remain with me as far as your personal life.\" She was stroking his hair and back and felt him slowly start to relax and before she realized it he had slipped into sleep.\n\nSally didn't realize she had some abilities but had felt her father's distress and slipped out of her room and to his to find him sleeping in Satasha's arms. \"Is he okay? I could hear him crying from my room.\" That wasn't a total lie but close. She moved closer to the bed and looked at her father. \"Thank you for taking care of him.\"\n\nSatasha held a finger to her muzzle for the girl to be quiet and then waved her over. She really didn't think that she had heard his crying since it had been mostly silent. When she sat down Satasha lightly grasped her hand and frowned slightly. \"You realize you are an empath don't you? You are untrained but even I can tell that. I think your world might have more people with powers than you think.\" Billy was an example since he had an affinity for machines.\n\nSally pulled her hand back and looked away for a few moments. \"I have known that for a while and it was hard learning to shield myself from others emotions.\" That was especially hard in high school. Now she had pretty much shut it down except with those she most cared for. \n\n\"You need training girl and when we get Yilly's ship fixed it might be a good idea for you to come with and we can teach you how to control it. It isn't a talent we normally have but shielding is shielding and you can use the training or you might end up a hermit.\" She was being serious when she said it.\n\nSally sort of stared at her. \"I will consider it but I am doing okay right now. Just take care of my father.\" Her face hardened a bit. \"If you hurt him it will be the last thing you do. I know he is hurting still and doesn't need any more pain in his life.\" She was being serious when she said that.\n\nSatasha shook her head. \"You are not doing okay and I can feel it but it is your choice. As far as your father he is a very nice man.\" She stroked his hair for a moment. \"I have told him this and am going to tell you. We are not monogamous since Sholan females can control when we get pregnant. He understands. Mind you that doesn't mean I am going to just jump into the bed of any male or female but he needed to know.\"\n\nSally stared at her and with a nod left the room without saying anything else and went to her room. She had wanted him to find another lady who could accept who he was but a furry alien female? That simply hadn't crossed her mind for obvious reasons. She had to admit that Satasha was nice enough and her father seemed to like her but it was still outside her ideas of who he might want to date. She wasn't stupid and knew that he also had feelings for Sandi as well though they would never be returned. With a sigh she rolled into her bed and fell asleep.\n\nSatasha curled around Billy and held him for a while before she fell asleep. Since she was so close to him physically she could feel his dreams and remembered his mate as he dreamed of her. Much of the dream was about her dying and his holding his youngest girl and crying as he held her. When she woke the next morning she felt sort of used and tired. It hadn't been a good night and she could tell the Billy hadn't slept well either.\n\nShe started stroking his hair and held him till he woke up. He looked a bit ragged and he curled into her. \"God that sucked I hope I didn't disturb your sleep.\" He hadn't had that dream for a long time and every time he did it tore him up and he would have a bad day or two. \"I think I am going to go and take a shower.\" He moved away from her and walked to the bathroom. His shoulders were slumped as he walked.\n\nSatasha stood and followed him and once she heard the water start she stepped in the shower. She curled her arms around him and held him. \"I can feel the love you still have for your former mate. I think she would be very proud of how you raised your girls.\" She was purring for all she was worth. \"I haven't met your youngest girl but if she is anything like Sally she would be most proud of you.\" Satasha felt him tense up and moved back a bit and started rubbing his shoulders and giving them a light massage.\n\nDamn it he hadn't wanted to cry but with her attention and the dreams he couldn't help it. Thankfully the tears were concealed by the shower though he was sure that Satasha knew. He finally stood up and grabbed the shampoo and started working it into his hair. He did his best to pretend he was fine. As he was doing that she was working on her fur as well. He finished before she did and turned and started working on her back and the down the back of her legs.\n\nSatasha gave his shoulders a final light squeeze before starting to work on her fur. Eventually they were done and she started stripping the water out of her fur before toweling off. She missed the hot air jets in her shower and might convince him to sleep there if he wanted. The bed was more comfortable and the shower larger. She was enjoying having someone curled up next to her as well. \"Well time for breakfast and then work.\"\n\nHe sort of grunted but toweled off and got dressed in his usual work clothing. \"Yah, I am going to be picking your brain today or as much of it as you will allow. I don't expect you to give away anything really classified and if I get close to that sort of thing tell me.\" He paused for a moment. \"If you want to teach me your language please do so. Just don't scramble my brain in the process. I rather like it the way it is.\"\n\nSatasha was more than a bit startled when he told her that and nodded. \"How about we take care of it this evening after we get some more work done?\" She followed him to the kitchen and Sandi gave him a look and sighed.\n\n\"Bad night Billy? You look rough and here is some coffee for you and some herbal tea for you Satasha.\" She came over and gave him a good hug after putting the cups down. \"Breakfast will be done shortly and then you can go and distract yourself with your ship and all the lovely things Satasha did to turn your brain on overtime.\"\n\nSally snorted. \"Bout time he started working with his brain again. He is old and if he doesn't exercise it his brain might ossify.\" She had fun teasing him at times and felt that right now was a good time to tease him to distract him. Whatever she might think about Satasha it really felt like she would be good for him even if it was only short term. Billy needed to look forward and she felt that Satasha would help him to do that.\n\n\"Thanks Sandi. It is nice getting up to an already made cup of coffee.\" He returned the hug but didn't comment about the night. When Sally started to tease him he shook a fist at her. \"Ossified my butt, I can still run circles around you with math and a few other subjects so be good or I might have to send you to bed without supper.\"\n\n~~~\n\nEventually they made it back to his Ship and he pulled the VR screens back out and reviewed what he had done the day before and was pleased. Before he did anything he was going to have to review all the equations and take one of the old tubes lying around to use as a test bed. There was a place in town that might just work since they had an induction heating unit. It was something that would have to be done slowly since the whole tube wouldn't fit in it. They would have to feed the tube through at a very specific speed. That would depend on the thickness of the tubes as well as a number of other factors.\n\nOver the next two weeks he polished his equations and though Satasha did review them she tried very hard not to give much away. She had already pushed the limits of what she should or shouldn't do and was likely to get in trouble. One thing she had done was to get her language implanted in his mind so that they could talk easier. She wasn't skilled enough to take his language but the translator was getting much better with the dialect they used. \n\nTo be honest in a way Billy bothered her. Some of the equations he was working out were above her but she could tell they were dealing with both the tubes and the engines. She had a feeling that if he managed to gain access to their equations the changes he could make would spread like shock waves. Eventually he was done and he nodded at the boards. \n\n\"Well now we find out if I am nuts or not and I am going to take an old set of tubes to town and see about them getting properly crystallized.\" He backed the flat bed he owned part way into the slip and using the crane moved the old tube onto the bed of the truck. \"I will be back at some point. This is probably going to take some time.\"\n\nHe hopped out of the cab and walked over to Satasha and pulled her into a good hug and after a kiss and a light lick to her nose he spoke. \"I am sure you can sense it but I have been greatly enjoying spending time with you. I might end up being home tomorrow when I get back. If so I am going to miss being in your bed and arms.\"\n\nShe returned the kiss and licked his nose as well. \"I know Yilly and I can say much the same. When it comes time for me to go back to the Mother Ship I am going to greatly miss you.\" Satasha had a few ideas that would require talking to the senior staff. Billy would be a damn good addition to part of the first contact team.\n\nBilly climbed back into the cab of the truck and pulled away from the slip and headed towards town. He had talked to the shop he was thinking of and they were rather curious as to what he wanted and how he was going to do whatever he was.\n\n~~~\n\nWhen he finally pulled up to the shop he backed up to the large doors and climbed out. He walked into the shop and called out. \"Sue Anne where are ya? I would like to get started but I am going to need to change a few parameters on your induction unit.\" \n\nWhen he called out she came out of the office. \"Oh shush ya old coot. I was just getting ready for you.\" She was rather butch looking even though she had a husband and several kids. \"I want to see the changes you want to make before anything happens.\"\n\nHe nodded and pulled out his VR glasses and waited for her to put hers on and he pulled up the equations. \"Basically it needs to auto adjust as the tubes are being fed through it.\" He started explaining what it was going to happen.\n\n\"Oh god Billy just shush and go do what you need or my brain might explode.\" He had lost her after several lines. \"I don't know why you run a tramp freighter when you could be doing important research.\" Everyone in town knew just how smart he was and why he had left the space navy but he could have worked for almost any think tank out there.\n\nHe gave her a grin. \"A very nice lady described me as having traveling boots and she is right. I do love space and traveling around seeing new places.\" He turned the screen off and headed towards the induction heater. \"Where is the control panel?\"\n\nSue Anne narrowed her eyes. \"Nice lady? Oh tell me more considering I haven't seen you with any females except for Sandi and Jenna and they don't count.\" She followed him to the heater and showed him the control panel.\n\nBilly simply smiled. \"She isn't from round here so it would be rather hard to introduce you to her.\" At the control panel he inserted a drive crystal in the reader and started typing in commands. It was obvious he knew what he was doing and shortly he was done. \"Now to see if it works.\" They opened the door and he backed the truck in so the winch could reach it.\n\nOnce that was done he started the program that would run the tubes through. He had his VR glasses on and was set to scanning mode. He wanted to view the entire process and as needed make changes to his equations based on what he saw. \"I can take it from here Sue Anne. This is going to take some time to accomplish.\"\n\nShe shook her head slightly when he told her the lady was elsewhere. Trying to push him for more information wouldn't have any use. Sue Anne did have to wonder why he was reheating that old drive tube but knowing him some wild idea popped into his head. When that happened the results were usually pretty interesting and it had made school rather interesting. \"Okay Billy though I would like to know why you are running that old tube through the heater.\"\n\nHe contemplated how to answer that. \"Well you know that I was down checked since a few of my tubes were starting to de-crystallize right? Well I guess an idea popped into my mind on a process to re-crystallize the tubes. By doing that it will extend the life of the tubes and reduce the overall cost of maintaining a ship.\" Since the glasses would be doing the scanning and storing the data he pulled out some of the VR boards and started reviewing the equations.\n\nSue Anne had to shake her head and headed back to the office. This was going to take a while and she had other things to do than watch Billy scribbling things so far above her head on the VR boards. In any case he had them set to private so she wouldn't be able to see them anyways.\n\nBy the time the tubes were done it was late and he had pretty much finished the equations for the changes to the engine he was thinking of. He wished he had an old junker ship to try them on first. Unfortunately he didn't and he was going to have to strongly consider the changes before he made them. Most of it was changes to the programming for the drive though it did include some firmware and hardware changes as well. The engine itself didn't need much changing at the moment. If the equations worked then there were some additional changes that would be needed for the most effective use of the changes he had been thinking about.\n\nEventually the tubes were done and he used the lift to place them back on the truck. Sue Anne had already left and told him to just close the door behind him when he was done. He pulled the truck out and hit the close button and made sure that it was closed and secured before he pulled away.\n\nOnce he was home he backed the truck up to the slip and turned it off. He wasn't going to bother with checking the tubes at the moment. He was tired and wanted to curl up with Satasha and pass out. He climbed out of the truck and after stretching he headed to the Ship and beeped for admittance. The door almost immediately opened and he slowly walked into the ship and to her room. He quickly stripped down and rolled into bed and snuggled up to her.\n\nShe wrapped her arms around him and sighed in contentment. \"Glad you made it back.\" Her voice was a tired murmur and her whiskers tickled his face for a moment before she fell asleep again. Billy wasn't far behind her.",
        "The next morning they finally woke and Billy took a long shower. \"I feel beat and all I did was watch the tubes re-crystallize and worked on some possible changes to the engines.\" His eyes were closed and he didn't notice her sort of sneak up behind him and with a grin lightly ran the tips of her claws down his sided. When she did that his eyes popped open and he jerked as that really tickled. \"Gah, you evil woman that tickled.\" He turned around and was giving her the eyeball. \"I will find some way to get back at you for that.\"\n\nShe snickered at him. \"You look more awake now though.\" Satasha came closer and wrapped her arms around him and gave him a good hug. Her emotions about him were mixed. She really did like him but was sort of trying to hold her feelings for him at arm's length since they would probably never see each other again once she got to the Mother Ship.\n\nBilly grumbled at her and started washing up. He wanted at those tubes post haste. The VR glasses hadn't alerted him to any problems and that was a good thing. It had been too much to hope for that the process worked the first time. He hurried through breakfast and almost ran to the slip and the tubes. All the women were laughing at him as he hurried over. \n\n~~~\n\nThe Combat Scout Ship had just slipped into the solar system after spending a goodly amount of time looking for any signs of the scout. They hadn't found any debris though that didn't necessarily mean it hadn't been destroyed since they didn't have the exact path she was using. Once in system they paused near Saturn since the radiation from it would add to their shielding. Their sensors were good enough that they could still scan the system and let their computers process what was going on.\n\nThat was going to take some time since they hadn't taken the time to let their computers start processing the language. As their computers were doing that they would be scanning for any sort of transmission from the missing scout ship. By now they had the warp signature of most of the ships coming and going identified. None of the signatures matched the drive signature they were looking for. For now they would stay where they were and keep scanning.\n\n~~~\n\nBilly grabbed a different set of glasses and the instrument needed to scan the tube. He walked out and slowly and carefully scanned the entire tube and it took a bit over an hour for the scan. By the time he was done he stood there for a moment and then let out a rebel yell. \"Holly shit it fucking worked. It really fucking worked. Take that assholes.\" He started almost dancing in place with glee.\n\nSatasha had been inside his ship doing more scans and chasing down bits and pieces that tickled her curiosity when she heard him holler. She climbed out and had to giggle at the dance he was doing as he was shaking his fist at the sky. Satasha was heading over when the other females came out to see what was going on. \"So Yilly did...\" She didn't get any further before he wrapped his arms around her swinging her in a circle before giving her a good kiss.\n\n\"It worked first time. I scanned the entire tube and it re-crystallized in a consistent manner. I could stick this tube in and it would work fine. I had been planning on using this as parts for welding other tubes but I won't need to.\" He danced a bit more and grinned. \"If I can get the other tubes to crystallize correctly the first time we can have her back together and ready to fly in two weeks or so.\"\n\nSatasha looked shocked for a moment and then started purring. \"It will be good to get back in space and report what I have found. I want to show you our Mother Ship as well.\" She ignored the pang of losing him and knew he was going to feel it as well. \"Well let's get this tube off and the others on and get started.\"\n\nSally waited for her father to move the truck before lightly touching Satasha. \"You are going to miss him aren't you? You have been good for him and I know he is going to miss you as well.\" She gave her a light hug. \"I have been really thinking about it and do want to come back with you. I do need training and have come to realize it.\" She also wanted to keep an eye on her father so she was there when the two of them were separated.\n\nSatasha returned the hug. \"I will miss him and badly but I have a feeling that we are going to be separated and he will be sent back. A first contact team will be sent and I will probably be sent back to scouting.\" She sighed and then looked pleased with Sally for her decision. \"Good for you. Your species is the first we have found with any sort of telepathic abilities.\"\n\nBy now Billy had removed the test set of tubes and was starting to winch the actual tubes onto the flatbed and secured them down. There were three sets so it would take a few days and cost a pretty penny but less than a new tube by far. With luck the tubes would be done by the end of the week and he could start reinstalling them. That would take three or four days and then the engines would need to be recertified. Two weeks was an optimistic time frame but he was hoping. From what Satasha had indicated she had been away from her Ship for close to half a year and had been on planet for about two months.\n\nWhen he pulled up to the metal shop Sue Anne came out and opened the door for him. Once inside she gave him a good look. \"Billy I will make you a deal. The use of the induction heater is free if you will give me a small slice of whatever you make based on what you are doing.\" Being that he had called and wanted to do three more tubes he was up to something.\n\nBilly considered the offer and then nodded. \"I can't tell you what I am doing right now and I don't know how long it might take to get this idea I have up and running though. I can't even guarantee that it will even happen. If'n you can accept that then we have a deal. We can work out the details later.\" He spit on his hand and held it out. She did the same and the deal was sealed. \"I saved the equations on the controller. All you need to do is feed them through and let them cool. When you are done give me a call and I will check them out.\" \n\nWith a nod he climbed in the truck once they had the tubes removed and pulled out. While that was being done he was going to be working on the modifications on the engine. The mods were based on the equations he had worked out. Just for good measure he had run them through a test program several times. That had taken a while since he was using his home computer but everything had checked out. For today though he was taking the day off, maybe even take Satasha on a picnic and relax.\n\nThe thought of Satasha leaving really bothered him since he had most definitely developed feelings for her. It was going to hurt when she left his ship but he could deal with it since she had shown him he could care about another woman and even come to love her. He sighed and turned on the radio and had to roll his eyes. The songs were along the lines of losing someone you care for type but they matched his mood at the moment.\n\nOnce home he parked the flatbed and walked into the house and found the women folk sitting around the table talking and he settled down. \"Well I am taking today off and was going to ask Satasha if she would like to go for a walk and maybe a picnic.\" He informed the others and then looked at Satasha expectantly.\n\nShe tilted her head and smiled at him. \"That sounds really lovely. I have only seen what is around your house and ship. It would be nice to see other parts as well.\" Satasha wanted to talk to Billy alone and not while they were working. \"No talking ship stuff though. I want to talk to you about things like our families, hobbies, and whatever that doesn't have anything to do with the ship.\" Her voice was firm.\n\nBilly had to laugh at that. \"I had planned on that already so you don't have to worry.\" He pulled some bread, cheese, and lunch meat from the fridge and started working on a number of sandwiches some of which were heavy on the meat for Satasha. He was whistling as he worked and didn't notice the looks being traded between his daughter and friends.\n\nSally went to get the cooler for them since she figured they would be gone a while. While she was at it she grabbed a quilt as well. By the time she got back her father was stacking the sandwiches back in the bag the bread had come in and smiled at her. \n\n\"Thanks hun.\" He gave her a peck as he took the cooler and loaded it up with the sandwiches and a few other items. This included a bottle of wine and some glasses. Last of all was the blue ice to keep everything cool. \"Well shall we Satasha?\"\n\nShe took the quilt as he grabbed the cooler and they walked out of the house. Once they were outside Satasha took his free hand and laced her fingers with his and gave his hand a squeeze. \"I think it is going to be nice to see more of your property. All I have really seen was the inside of one ship or the other.\" She lightly leaned against him for a moment and enjoyed the contact.\n\nBilly sighed. \"I should have done this sooner, take you on a picnic and show you around. It was almost too late when I thought of this.\" He had been startled when she had taken his hand but it felt good. Her hands were different than his since she could run on all fours. \"Do you swim? The place I am thinking of is about two miles walk and has a lovely pond.\"\n\nSatasha had felt a slight pensiveness from him and had a feeling why. It was something they were going to need to discuss at some point because she was feeling much the same way. \"Oh yes swimming is a great deal of fun.\" That actually sounded like a good way to relax either before or after they talked. \"Well lead the way.\"\n\nBilly smiled. \"I was hoping you would say that. Even if you hadn't the spot is lovely and a nice place to relax.\" He had already been headed that way. He wasn't in a hurry and it seemed she wasn't either. As they were walking he pointed out some of the things he loved about his lands. The trees, birds, and other plants and animal on his property. He mentioned where he knew a vixen usually denned when she had kits and other features.\n\nSatasha was enjoying the walk and the things Billy was pointing out. It seemed that for all the traveling he did he knew his land well. She had to wonder if he had brought his wife here but wasn't going to ask. She asked questions as they were walking and enjoyed the simple talking they were doing. Eventually they reached the pond and she was impressed. \"Wow this is beautiful.\" \n\nThe pond wasn't all that large but from what she could see the water was clean since there was an inlet and outlet so the water was kept fresh. The sun shining through the trees dappled the water as it rippled and she could see some small fish swimming in the shade and catching the occasional bug. As she was looking around Billy set the cooler down and took the quilt and flipped it out in a shaded spot.\n\n\"So do you want to wander a bit before a bit of swimming and lunch?\" He didn't care if they walked around or settled on the quilt and relaxed and talked for a while. There were a few things he had to tell her and he expected them to be hard to say.\n\nSatasha wanted to talk as well and after a few moments of consideration she moved over to the quilt and after curling her tail out of the way she settled down. \"Maybe after we relax for a while we can go for a walk.\" She patted the ground next to her.\n\nBilly settled down next to her and lay back and relaxed. When Satasha curled up next to him he turned his head and gently kissed her and then licked her nose. He contemplated her for a few moments and lifted his hand to her cheek and worked his fingers into her fur. Billy stroked her fur and then slid his hand around the back of her head and gave her another gentle kiss. \"Satasha I want you to know that I have grown to care for you a great deal.\"\n\nShe leaned into the kiss and when he licked her nose she closed her eyes and enjoyed the feel of his hand in her fur. One thing he didn't realize was that if he slid his hand down her neck much further and even lightly grasped her ruff she would lift her neck to accept him as her companion. When he spoke she almost melted against him. \"I can feel that Yilly and I feel much the same way. You have been such a gentleman and taken such good care of me though you didn't have to. You invited me into your house and home and gave me good food and a place to sleep. You are a very special and wonderful man.\" Her tail curled around one of his legs.\n\nHe closed his eyes and rested his cheek against hers and sighed. \"I haven't felt this way about a woman since my wife died. I am hesitant to say that I am coming to love you simply because when I take you back we will have to go our own ways. I don't want to lose you but you have a job you have to do and so do I.\" His voice was quiet and pensive as he spoke and it was very hard to say.\n\n\"Oh Yilly you have no idea how much that means to me to hear you say that.\" Her hand slid around his back and stroked. \"I know that I have grown to care for you a great deal as well and wish I could take out a bonding contract with you. I know we can't have cubs but that is how I feel about you.\" She leaned back and looked at him and licked his nose before lightly nipping at his lips and cheek.\n\nHe was rather startled when she mentioned wishing she could take a bonding contract with him and he blushed and lowered his head. He felt her light nips and they meant a great deal to him. At the moment he wasn't in the mood for making love to her since this was something they really needed to talk about. \"That would be wonderful if we could and I would say yes.\" He wasn't thinking when his hand slid down her neck and lightly grasped. Her reaction startled him.\n\nShe tensed up and her chin came up and exposed her neck. He contemplated that for a moment since cats and dogs were careful with their necks. Her posturing indicated something and an image came to mind of biting her neck. He leaned forward and opened his mouth and bit down till her posture changed and then he leaned back and let go of the fur on her neck. Now he was wondering exactly why he had chosen to do by that.\n\nSatasha mewled slightly when he bit down and all she could do was close her eyes and enjoy the feelings flowing through her body. When he leaned back and let go of the ruff of her neck she started purring. \"I know you don't know exactly what you did by that but it means you took me as your companion. On your world I think the closest match would be boyfriend and girlfriend.\" He wrapped her hand in his hair and pulled him into a deep kiss.\n\nThat rather startled him but after thinking about it they had essentially been acting like that for a while. He felt her draw him into a kiss and returned it. She must be sending her emotions to him and as they mixed with his he had to close his eyes and felt tears start flowing. He had finally started letting go of the loss of his wife and letting another woman in. \"God I love you Satasha. I thought it would never happen again but you, an alien female was all it took.\"\n\nShe felt his emotions and listened carefully to what he was saying and when he started crying she pulled him close. Satasha stroked his hair and back as he cried and really let his emotions out. Her purring kept up though she had to grin when he mentioned her as an alien female helping. She snickered slightly. \"Well you are an alien male to me and you have stolen my heart so there.\" She started licking his face clean of the tears which made him start giggling.\n\nAfter he had cried for a few minutes he heard her speak and it had made him steal a kiss before she started licking his face. It tickled and made him giggle as he tried to get away from her but she was stronger and appeared to be having fun making him giggle. \"Gah cat germs!!! Help, need rescue from an over sized kitty with a rough tongue.\" He had found one or two places where she was ticklish and ran his fingers across her ribs and arm pits.\n\nSatasha squeaked at him and now it was her turn to get away from him and is fingers. \"Not fair, I was trying to comfort you and this is what I get?\" She finally managed to roll away from him and stood up and glowered at him. \"Just for that you can try and catch me in the water.\" The tabard came off and she ran into the water till it was waist deep on her.\n\nBilly lay there snickering. \"Who said you didn't comfort me? You allowed me to take you as your companion, held me while I cried and have shared your bed with me.\" He watched her dash into the water and hopped to his feet. He stripped off his clothing and ran towards the water and made a shallow dive that took him almost to her before he stood up and wiped the wet hair off his face and grinned at her.\n\nThe rest of the day was spent talking and playing and having fun. They both had admitted to their feelings and their feelings of loosing each other. They had slowly made love before swimming for a bit longer and laying in the sun to dry off. Eventually it started getting late and they headed back towards the house. Billy had the empty cooler and she the quilt. As they approached the house the others noticed that they were looking very comfortable with each other.\n\nSally bit her lower lip as she watched them walk out of the forest. \"I am worried about Pappa. I can tell how much he cares for Satasha and that she cares for him. When he takes her back they are going to be separated and that is going to hurt him. I don't want to see him hurt again.\" When Sandi came over and wrapped an arm around her she leaned into it.\n\n\"I understand lovie but he is a grown man and can make his own decision. I know he will be hurt but she has helped him start to heal. It is going to hurt him but she has helped him past the loss of his wife and that is a good thing.\" She held the girl till the two of them got close to the house and then they went back to working on dinner.\n\nWhen Billy and Satasha walked into the house Billy had to grin. \"Is that fried chicken I smell? Oh my but that smells good. We are going to go brush Satasha's fur out. For some reason after swimming it is sticking out in funny clumps.\" He grinned when she lightly smacked him. \"Also she blames me for what happened that made it stand up like this. Is it my fault she fell into the water and got totally soaked?\"\n\nShe hissed at him. \"It is your fault since you taught me how to dunk by dunking me.\" She lightly smacked him again and got a laugh from him. She gave him a grumpy look and then smirked. \"I got him back though by returning the favor.\" She was grinning as they walked towards his room where she had a brush.\n\n\"Pappa that was mean of you to treat her like that.\" She pretended to grump at him and then snickered when he looked sort of offended.\n\n\"Hey it was in revenge for her giving my face a tongue bath. Her tongue is both a rough section and a softer section and it was tickling.\" He tried to look insulted but Satasha tickled him and he jerked away and muttered at her. \"I might brush your fur in the wrong direction woman.\" He smacked her bottom and she hissed at him again and they walked off.\n\nThe three women were staring at him as he walked away since he hadn't been this playful for a long time. Once in a blue moon it would show but not like this. \"Something changed didn't it?\" Jenna asked.\n\nSally nodded and had a contemplative look on her face. \"Something most definitely happened and it wasn't just sex.\" She had to make a face at that since thinking about her Pappa with a woman, alien or not, bothered her. \"I think they might have cleared the air about their feelings.\"\n\nSandi had a contemplative look on her face. To be honest she wanted to grill him on what had happened but it really wasn't any of her business. \"Damn it! Now I am going to be eaten alive with curiosity about what went on.\" That was a definite mutter. \"Well let's get the food finished.\"",
        "Eventually they came out and she was in a clean tabard and her fur was much tidier. Billy's hair was sort of slicked down and he was looking grumpy and Satasha was grinning. \"Darn cat couldn't keep her tongue to herself again.\"\n\nSandi turned and looked at him and snickered. \"I bet you don't complain when you are in bed...\" Billy instantly turned pink. \"Have a seat you two and I will bring the food over.\" Jenna and Sally were trying not to snicker at him.\n\nSatasha had been feeling sort of mischievous and she grabbed his head and licked his hair so it was reasonably tidy and had snickered the entire time. Billy had tried getting away from her even as he was laughing and she figured the grumpy act was for the ladies. \"I can neither confirm nor deny what he might or might not like in bed and there is only one way for you to find out.\"\n\nSally choked on a drink she was taking. \"That is so not what I need to hear about my Pappa. The four of you can discuss it when I go to bed if you want.\" She looked rather bothered by the conversation and Billy had to snicker at her. \"Pappa you are not helping at all.\"\n\nSandi and Jenna brought the food over and everyone settled down. \"So did you have fun on your walk Satasha? Seeing all the wonderful plants and wildlife?\" Jenna asked. She snagged some of the chicken and salad as well as some mashed potatoes.\n\n\"It was very nice to get out of the house and or shed and really take a day off. Yilly had fun pointing out some of the things he loves about his land. I have to admit I would have liked to see what a vixen is.\" She took some of the chicken as well and handed the tray to Billy.\n\nHe took a large piece and handed it to Sally. He also took a good dollop of the potatoes and salad. Once everyone was served he sliced a piece off and held it out to Satasha who lowered her ears in their sign of embarrassment but took the bite. As she was chewing it Billy was slicing up his piece of chicken breast.\n\n\"You should have had that bite Yilly. It was very good but thank you.\" She sliced a piece off and held it out to him. He went to take the bite and she slowly drew it back and then leaned over and kissed him before letting him have it.\n\nSally watched the entire food play and wasn't sure how she really felt. It was nice to see her father paying attention to a woman but she didn't want him hurt again. Both she and her sister had seen the pain even though he had tried to hide it from them. To her it was very obvious her father had fallen for Satasha and when she was taken back to her Ship he probably wouldn't ever see her again. \"Pappa I am going to be sort of blunt and you can tell me it is none of your business but what happened today? The two of you are acting very different than you have been.\"\n\nBilly and Satasha traded looks and he leaned lightly against Satasha and smiled. \"I took her as my companion today. To a Sholan that is sort of like saying you are boyfriend and girlfriend.\" He traded another kiss with her before turning back. \"We talked a great deal and we know that we are probably going to be separated for at least a while but hope that we will be able to come together again.\" He smiled even wider. \"She also told me that if it was possible she would like to take a bonding contract with me. That is sort of like a short term marriage.\"\n\nSatasha returned the kiss and lightly rubbed her head against his. \"I had meant to talk to you first Sally but the time never seemed right. When Yilly invited me out on the picnic and we started talking. I know that it might sound odd but he is the first man that has ever made me want to take a bonding contract out. I love your father Sally and yes I know we are going to be separated but as he said I hope to meet him again once the first contact team has made contact.\"\n\nThe three women were rather floored listening to the two of them. They had known that the two were enjoying being together but hadn't realized their feelings had grown this much. Sally looked sort of upset with what was being said. \"I am sorry Satasha but I know it is going to hurt my Pappa when the two of you are parted. He was hurt enough when mommy died. I don't want to see him hurt that badly again.\" She stood up. \"Please excuse me.\" She left the room and headed towards her bedroom and flopped on the bed on her stomach and buried her face in her pillow.\n\nShe was happy that her father had found someone to care for but as bad as it sounded since Satasha was an alien she wished it wasn't as intense as it seemed. He was going to be hurt and would have been hurt in either case but if it had been a sort of friends with benefits thing it wouldn't have hurt him as much. When there was a knock on her door she turned her head slightly. \"Go away I don't want to talk.\" She assumed it was either Sandi or Jenna.\n\nDownstairs Billy gave Satasha a good hug and stroked her hair for a moment. \"I am going to talk to her. She didn't mean to hurt you if she did. I know she is just worried for me. Love you and I will be back eventually.\" He smiled at her. \"No stealing my chicken while I am gone.\"\n\nSatasha rubbed against him and purred slightly. \"I know Yilly and I understand her worries. Go and comfort her and I will try not to steal your chicken.\" Once he left the room she looked at the girls. \"What is your opinion if you don't mind my asking?\" \n\nSandi chewed contemplatively on a bite of food before answering. \"Unlike Sally I think you have been very good for him. You affection and obvious caring for him has brought him out of his shell and has shown him he can love and care again. It is going to hurt him but one thing you have going for you is that you are alive. It will give him hope that he will see you again and if he does then he knows that you will still care for him even if the relationship changes to simply a close friendship.\"\n\nJenna simply hiked a thumb at Sandi. \"What she said.\" She kept eating.\n\nBilly was upstairs at that point and when Sally told him to go away he sighed. \"I am coming in Sally and we are going to have a talk.\" His voice wasn't hard but it was firm as he opened the door and walked into her room. He normally wouldn't walk into the girl's rooms without permission but this was a special occasion. Once he walked in he settled on the edge of the bed and rested his hand on her back and lightly rubbed.\n\n\"Sally I am an adult and I know what I am doing. I do know that it is going to hurt when we are separated but I can't help what I feel for her. I do love her and she loves me. When we are separated I know it is going to hurt but we both hope that we will meet in the future. Please be happy for me and I expect you to treat Satasha as you had been doing.\" His hand was still rubbing her back and he felt her tense up.\n\n\"I am sorry Pappa but I can't help but worry about you and how you will handle being separated. I have seen and yes felt your feelings of loss after mommy died. You tried to hide it when we were growing up but we knew you were hurting.\" She remained laying on her stomach since when she was little he would rub her back when she was upset and it was comforting. \"I have felt you starting to open up to the possibility of loving another woman but I am scared of what happens when she leaves.\"\n\nBilly leaned forward and gave her shoulders and back a light hug before returning to rubbing her back. \"There is one thing you are forgetting Sally and that is Satasha is alive and there is always a chance we will meet again and might be able to take out the bonding contract. That gives me hope for the future. Your Mother died and left a wound that was very hard to handle. There was no hope I would see her again but with Satasha there is.\"\n\nShe finally sat up and turned to face her father and crossed her legs. Sally searched his face for several minutes. She was looking for any trace of sadness or loss but all she saw was a smile that she rarely ever saw on his face and hope as well. His eyes were bright with happiness and she could feel joy from him as well. This was a father she hadn't seen much before. \"I will do my best Pappa to trust in what you said and of course I will treat Satasha as would be expected.\"\n\nHe sobered slightly and nodded. \"Thank you Sally, I appreciate it and I do love her as odd as that might sound. She has held me while I cried, tickled me to make me giggle, and has been warm in bed. It is so nice to have someone to sleep next to.\" He gave her a sly grin. \"I guess I am developing a taste for fur...\"\n\nSally smacked him. \"Pappa there are some things your children really don't want to or need to know.\" She crossed her arms and pouted at him. \"Just for that I am not going to give you the hug I was going to.\" Sally slid off the other side of the bed and started to walk out. \"If you keep telling me things like that I will start telling you some things about me.\" She turned and walked out.\n\nBilly shuddered at that threat and followed her out of the room and downstairs. She walked up to Satasha and gave her a good hug. \"Take care of my Pappa as long as you can and make him happy.\" She settled down where she had been and started eating as if nothing had happened.\n\nSatasha returned the hug. \"I will Sally and thank you for your approval. You have a really special father.\" She rubbed cheeks with her before she went and sat down.\n\nBilly settled down and started eating and then frowned. \"You did snitch a bite didn't you? Just for that I am not going to share it with you.\" He gave her a suspicious look when he said that.\n\n\"I would never slice a piece of meat off someone else's plate unless he was my lover and not around to protect the yummy food.\" She gave him and innocent look and he frowned big time at her and she did her best to look even more innocent.\n\n\"Thanks for guarding my plate you two. Definitely frenemies. I might need to do a body search before you leave my house.\" He leered at Sandi when he said that and Jenna almost coughed up what she was eating and he snickered. When he turned back to his plate Satasha was holding another bite of food out to him and he took it and chewed on it.\n\nDinner eventually finished and he was feeling very content with the world. As they were finishing up the food his phone rang and he picked it up. \"Hey Sue Anne how did the process go?\" He assumed that it was still processing and was surprised when she said it was done. \"How did you manage that? You didn't hurry the process or anything did you.\"\n\nHe listened a bit longer and had to grin. \"Ah, your system has a built in efficiency unit huh? Before you start tomorrow I am going to come out and scan the one that finished. It will be early in the morning.\" He hung up and finished the last bite. \"Would you like to rest on the couch and watch TV?\"\n\nSatasha smiled at that idea. \"I like that and I can use your lap as a pillow.\" She patted her mouth clean and stretched. \"Today wasn't a very busy day but I feel tired. We can watch for a while and then head towards bed if you don't mind.\"\n\nHe grinned. \"Now why would I mind that? I like my warm furry blanket though it does feel weird to be shorter than you.\" They walked into the living room and settled down and relaxed.\n\n~~~\n\nThe next morning Billy climbed into his old truck and headed to the metal shop and parked before heading in. \"Yo anyone home?\" A voice called back and told him where the tube was and he headed back and broke out the instruments and started a detailed examination of it and by the time he was done he was satisfied with it. \"Hey Sue Anne help me get this on the flatbed and you can start the second one.\" He was looking pleased. \"Oh, can you download the changes the system made? I would like to get them in my VR and check the changes.\"\n\nOnce that was done he headed home and parked. He would take the set of tubes off later. \"Hey Satasha got one of the tubes and we will pull it off the truck later. I am going to be making some changes to the engines.\" Or making parts to exchange once he was up checked he would swap the parts out and update the software.\n\nShe was working on some of the items she could repair or rebuild. \"So you are that sure of the changes you want to make? I would hate to blow the engine or get stuck in hyper and have to get towed out.\"\n\nBilly blew a raspberry at her and started searching through his parts bins and pulling out various items. \"Now for the fun part.\" The first thing he did was to modify the hardware needed to handle his changes to the software. He was having a great time and his brain was processing more ideas as he was working but he was going to stick with his original changes and if they worked he might consider getting a beater ship for use as a test bed.\n\nThey did break for lunch but as soon as they were done he went back to work. He did however wrap an arm around her as they walked out and gave her a good kiss. \"If the crystallization process works correctly we will hopefully have you back to your ship in a few weeks.\" One last kiss and hug and he went back to work. By the end of the day he had the modified parts he needed. Unfortunately he couldn't test them at the moment since the engines were torn apart.\n\nThat evening they curled up on the couch and talked about general things mixed in with some kissing and a bit of tickling and such.\n\nSally watched them and then turned to the other two. \"Tell me did he act like this in high school or while mommy was alive? It is almost disturbing watching my Pappa acting like a teen.\" She had a slightly horrified expression on her face as the two giggled at something he had whispered in her ear in Sholan.\n\nThe two women started laughing. \"God no, he was entirely too tied up in stretching his brain and making the rest of us look like congenital morons.\" Jenna commented and then snickered. \"Well till he met your Mother and his scores dropped from a 4.0 to a 3.8. We still felt like idiots with him around.\"\n\nBilly had been paying attention to Sally and the others even though he was enjoying the play with Satasha. He blew a raspberry at his daughter. \"Deal with it kiddo. Your father is having fun with his girlfriend and if it is bothering you go watch TV in your room.\" There was amusement in his voice when he said that.\n\nSatasha snickered as well and then nibbled on one of his ears before giving it a good licking. She giggled when he said Gah and rubbed his ear. She started nibbling again and he smiled. She was having more fun relaxing with him than any of her other lovers. Sally's reaction was great and she was partially doing this to tease her.\n\nSally simply settled for doing her best to ignore them till they left for Satasha's ship for the evening. \"I am not sure I can handle this. I feel like the adult now over seeing an oversized teen.\" That got laughs from the other two and she groan and headed for her room.\n\n~~~\n\nBy the end of the week all three sets of tubes were finished. Billy had also finished modifying the software to run the changes he was going to make to the engines. The actual changes would take about a day and that wouldn't draw any attention. The attention would be when he kicked the pig and made her squeal. The signature change would be noticed by anyone paying attention and if they functioned as he expected he would be in hyper a fair amount faster than almost any other boats out there.\n\n\"Well you ready to get your hands dirty Tasha? This should take about four days to put back together assuming all goes smoothly.\" He had the cabling already threaded through the hyper tubes. All they needed to do was to connect the cables and then slowly retract the cabling as they moved the tubes towards the bolts that secured them to the engine. After that it was simply a case of installing a few components and then getting the repairs checked. The hard part was going to be keeping Satasha out of view.\n\n~~~\n\nOver the next few days, with Sally's help, they got the tubes installed and secured. The other parts took an extra day as did running tests and diagnostics on the engines. \"Well all checks out and I am actually getting a better output than before I re-did the tubes.\" He was satisfied with the repairs and celebrated with a dinner cooked by Satasha and some Sholan wine which was very interesting. \"I placed a call to the space guard to come and check it. Do you think you could move your Ship a couple hundred yards from the house? I would really hate to have one of them run into the side of the Ship.\"\n\nShe snorted at that and covered her mouth as she tried not to laugh at his comment. \"Yah that might be sort of a bad thing. I can move it on manual controls and put it over by the edge of the forest if that will work for you.\"\n\nHe contemplated where best to put it. \"That should work and put it towards the south of the house since that will keep them well away from it.\" They were curled up in bed and relaxing. \"Oh, I have something for you Tasha.\" He rolled over and felt through the pockets over his coveralls and pulled out a small silk bag and handed it to her.\n\nAs she sat up to look at what it might be and he rolled on his side and watched her. When she got the pouch open she shook it gently and a slender golden chain slid out with a lovely ruby and diamond pendant. Her eyes widened and her mouth made a sort of 'O'. \"Oh Yilly this is lovely.\" She shook the chain out and looked at the pendant. \"You didn't need to do this Yilly but thank you.\" Satasha held it out for him to put it on her.\n\nHe took it from her and fastened it around her neck. The pendant would normally hang down between the top of her breasts if she had any and could easily be tucked under one of her uniform suits. \"But I did have to my love. This is something you can remember me by when we inevitably separate. All you will need to do is look at it and remember how much I love and care for you.\" He pulled her to him and kissed her. \"I know if we never meet again I will always love you and care for you.\"\n\nTears showed in her eyes and she tucked her head into his neck and started crying. He wrapped his arms around her and held her till she stopped. With a slight smile he leaned over and did his best to lick the tears from her face and was pleased when she started giggling at him though it was a watery laugh. \"Now I think we should go to sleep since the space guard will be here in the morning.\" He set his alarm and smiled as she curled up partially on his chest. \n\n~~~\n\nHe had set the alarm to go off a bit earlier than normal to give her time to prep and move the Ship. He was curled around her and couldn't resist the urge to stroke the fur on her stomach for a moment. \"Time to get up Tasha.\" He rolled out of bed and dressed in some clean cloths. He had pretty much moved onto the ship and had clean cloths available.\n\nJust for good measure once he had gotten out of bed she rolled on her stomach and did a good cat style stretch and then rolled on her back and stretched again. She had to smile as he watched her stretching before climbing out of bed and took her time getting dressed in a suit and just for good measure as she pulled it up over her bottom she gave a good wiggle.\n\nBilly growled at her. \"Damn evil woman. Now I am going to be greeting the Space Corpse with a woody and it is going to be your fault.\" Just for good measure he reached over and smacked her on the bottom and laughed when she jumped and hissed at him. \"You deserved that.\"\n\n~~~\n\nA few minutes later he was out of the ship and heading towards the house to grab a quick breakfast. Behind him he felt a change in air pressure as she powered her ship up and started moving it slowly towards where he indicated. He didn't bother watching since there wasn't anything to watch. When he made it inside breakfast was almost done and he was handed a cup of coffee and moments later a plate of food. \n\n\"Thanks ladies. I want to be waiting at the shed when they arrive to give them less time to wander around.\" He munched down the breakfast and the large thermos with coffee in it and some plastic cups and headed out to the shed. He set it down next to the old pot he used. While he was waiting he walked around the slip and first made sure Tasha hadn't left anything behind and second to make sure it was neat and tidy. By the time he was done he could hear a vehicle pull up and he walked out.",
        "It was the Space corpse and he waited for them to park by the entrance to the slip and waved them inside. \"Morning all, I do have some coffee for anyone who would like it, fresh and hot just to warn you. I left the access hatch off so it would be easier for you to get to the engines and tubes.\" He turned and walked into the shed and waved them towards the coffee. He smiled as the three men and one woman took a cup and popped a lid on it.\n\n\"Well we have several other inspections today so why don't we get started. Now based on the down check the primary issue was the de-crystallization of your tubes. There were some minor issues so we are going to split up to speed process. Two of us are going to examine the tubes and the other two the minor repairs. If you will show them around I would appreciate it.\" The four started climbing into the engine compartment.\n\n\"Not a problem and I would hate to keep ya'll longer than needed. I have to admit I would like to hurry this up so I can get back to space and making money ifn' you know what I mean.\" He gave them a good homeboy grin when he said that and the woman actually laughed.\n\n\"I think I can understand what ya'lls speaking about.\" Just for good measure she winked at him and it was obvious she was giving him the eyeball. \n\nBilly had to admit it was a nice view as she climbed the ladder but right now Satasha was more than enough for him. He followed them up the ladder and into the compartment. \"So who is going to check the minor repairs?\" The engine compartment was just shy of spotless and he noticed appreciation on one of the men's faces.\n\n\"You know I served on one of this class. Not the tug version but they were some rugged Ships. That engine is frigging massive. I don't even want to think what you could haul with this old lady.\" He ran his hand across the engine and smiled again. \"I would love to check the engine out but Ensign Vorlander and I am going to check the minor repairs and if there is time left help check the tubes.\"\n\nBilly had to grin. \"I gotta admit that she's saved me from the occasional bandit a time or two. They always seem shocked when I go full throttle and almost vanish from their scanners.\" He started forward and started showing them the repairs he had done. At one point they almost had him sweating when Vorlander asked him about a modification he had made that had to be installed before the engines were fired up.\n\n\"I had to do an upgrade to some of the circuitry and the original hardware I needed wasn't available. This modification operates pretty much the same as the original.\" He was actually ready for their questions though and hoped that they bought it.\n\n\"How can you know that this modification will work?\" She was scanning it and it seemed to check out but it definitely was not an original part. When he pulled out his VR glasses she pulled a set out and put them on as well and waited.\n\nBilly pulled up the original schematics and the modified schematics. \"The board used is actually a newer version of the original since it was a good solid design. The changes I made were to...\" He described the changes he made to ensure the board would work much the same as the original. \"I am actually saving about 5% power by using this board and that adds up.\"\n\nShe took her glasses off and stared at him. \"How did you know that and how to make those changes?\" She was now acting as an officer and even if she liked the homeboy look it wasn't going to stop her.\n\nBilly gave her an easy grin. \"Former LT. Billy Bob Madlax. I worked with the navy development board many years ago and I have owned this lady for quite some time. If you want to see the equations I used I can send them to your glasses.\"\n\nThe man was an older man and a senior enlisted. He narrowed his eyes and then nodded. \"The Lt. Madlax who developed the modified hyper shields? That Lt. Madlax?\"\n\nBilly shrugged and nodded. \"Yup that be me. I was sort of bored at the time and was reviewing the math behind the shields and realized they had been designed poorly or had been rushed through development. Took me a month or so to work up the new equations.\"\n\nThe Ensign looked more than startled at his admission and gave him another look. \"Goodness I am meeting a man that is still being talked about. I am honored and would love to have a meal with you and pick your brains.\"\n\nBilly knew that Satasha wouldn't mind since Sholan's were not monogamous but their relationship was to new for him to even considered it. \"I appreciate the offer but right now once you up check me I have to finish buttoning her up and I have a cargo already lined up and have to get it to Atlas.\" He showed them the rest of the minor repairs and those were up checked which he had expected.\n\nWhat he didn't expect was the disgruntled expression on the senior officer's face when they arrived back in the main drive chamber. \"Is there a problem officer?\" He was trying to figure out what might be going on since anything that impacted his getting off the ground was troubling.\n\n\"I checked the serial numbers on the tubes and they are the original ones that were down checked. The problem is I can't find any indication of de-crystallization anywhere in the tubes. I know we didn't screw up because I have copies of the scans.\" He gave Billy an evaluating look. \"What did you do?\"\n\nBilly grinned at him. \"I figured out how to re-crystallize the hyper tubes. There wasn't any welding or cutting needed. I can show you some of the equations but right now the process has been sent to the patent office. I am waiting for a reply that it is original work and original process.\"\n\nThe Lt. snapped out his VR glasses and put them on and turned them on. \"Show me what you can.\" He ordered.\n\nBilly casually pulled his out and flipped them open and put them on and took a sip of coffee while the glasses connected. \"Okay first you have to identify the amount and depth of the de-crystallization. That is what this equation is for and it uses the standard scans to base the rest of the equations. I have blocked part of the equation since that is proprietary information but if you look at these...\" He ran him through a fair portion of the equation and finally took his glasses off. \"Does that explain what I did?\"\n\nThe Lt. had been lost after the first section of equations and just nodded at the right times. The older man leaned over. \"Sir this is the former Lt. Madlax who developed the modified hyper shields.\"\n\nThe Lt. pulled his glasses off and stared at him and looked more than startled. \"Why are you just a tramp freighter captain? God I can't imagine the advances you could have made.\" Lt. Madlax had been mentioned in school and that he was considered one of the premier theoretical and practical engineers of their generation. \"I am going to talk to space command about this and we might just have a contract for you if you can prove it works.\"\n\nBilly laughed. \"I like that idea and that is one of the reasons I am doing this run so soon. I am going to need to do some tests before I actually take her for a long run.\" Well actually the modifications to the engines more than the re-crystallization. \"Not sure how long I will be gone but I will send you periodic test and diagnostic data.\" That is assuming he made it off the Sholan Mother Ship.\n\nThe Lt. signed the up check form and Billy almost danced in place. \"Thank you sir and ya'll have a good day. Fill your cups up if you want before you leave.\" As they were leaving he was already starting to lower the hatch cover. He wanted off the planet as soon as possible. By the time he had the hatch on the securing bolts Satasha walked in.\n\nShe smirked at him. \"it seems someone was interested in you. You should have taken her up on the meal and made her pay for it.\" She didn't mind and actually was pleased that her companion had gotten attention.\n\nBilly turned red and shook his head. \"To young for me. Being that she is an ensign she is at most 26 years old.\" It had never occurred to him to ask Satasha how old she was and it was mostly because she was commanding a ship however small.\n\nShe stared at him and then started laughing. \"Oh Yilly you are so silly. Do you have any idea of what my age approximately is by your world's standards?\" Satasha had to lean against a bench as Billy started thinking.\n\n\"Oh god I am robbing the cradle aren't I? It never occurred to me to ask your age. You were commanding the scout ship and I just sort of assumed you were older.\" He winced slightly when he asked her age since he had a feeling that she was way younger than he had thought.\n\nShe snickered at him. \"We do tend to live longer than humans but I would be maybe 28 or so. I guess that makes you a dirty old man.\" Satasha had to turn away to keep from starting to laugh at him again. His expression was a total riot.\n\n***\n\nI hope you enjoyed this chapter and please don't forget to vote and or leave comments. I value the feedback from my readers since it helps me know if I am doing a good enough job. "
    ],
    "authorname": "maxd01",
    "tags": [
        "feline aliens",
        "space travel"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/sholan-alliance-au-ch-06"
}