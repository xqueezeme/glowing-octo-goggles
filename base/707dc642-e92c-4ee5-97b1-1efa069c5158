{
    "title": "Back to You Ch. 10",
    "pages": [
        "Hey Guys! Here it is: the last chapter of Back to You. I've been playing around with the ending a bit, hence the delay. Thanks so much for reading and following this story- it's definitely one that I'm proud to have written. Please check out the other stories I have on here- there are a couple different series to choose from, as well as some I have in the works. Until next time.\n\n*****\n\nChapter 10: Then be with me.\n\nAs the boys snuggled into each other's naked bodies, they quickly fell asleep like a pair of batteries in serious need of recharging. Matt fell into his favorite position in between Ollie's arms after their second fuck of the night with skin still dripping in sweat and cum. They didn't bother cleaning up and Matt would be lying if he said he didn't love the musk that oozed off his sweaty boy. The scent filled his car every Monday, Wednesday and Friday, and he'd gotten worse at feigning his disgust every time a wet Oliver climbed into the passenger seat. \n\nMatt eased into Oliver's crescent shape, slowly lowering his body on the boy's arm. Ollie then lifted the other over the taller boy, locking him in place as his fingers ran through Matty's chest matted with sweat and hair. A few grazes of his bare palm against Matt's fur was all it took to send the boys off dreaming. A few intertwined legs, a shifting of Oliver's unwavering hard on, and some gentle kisses on Matt's well pronounced spine and the two were as foregone as could be. \n\nOliver always had his best sleep when he was with Matt. In fact, he couldn't get any more than a few hours when the boy wasn't around. He could feel his body reaching out of the same soft skin it needed, as if the boy's touch was a craving he couldn't satisfy as often as he wanted. But when he was with Matty, he'd had the same dream without fail. It was simple really- the two of them stretched across an inexplicably soft mattress in a room he didn't recognize. His subconscious could make out the faint smell of sweat and aroma of vanilla that mixed together to be a concoction by one, Matt Stevens. Even in his dreams, he could make out that smell better than a trained dog. Sometime after what felt like an eternity taking the boy in, Matty would stir, causing his plump ass to brush against Ollie's cock that was still half asleep. He'd turn over, blinking heavily with a slight pout on his face before recognizing the boy in front of him. He'd smile- the smallest curve of his lip that could melt glaciers with how warm it hit Oliver. The dream always started off the same, like waking up with Matty every morning was all he could ever wish for. \n\nMatty woke up first, opening his eyes to see the San Francisco Bay shining through the large curtain windows like a pool of sapphire. He could hear Ollie's faint snoring as the boy's warm breath coated the back of his head in a veil of condensation that made every hair on his neck stand up. He found Oliver's noises comforting, mostly because it meant he managed to wear the poor boy out. And as he felt the softened cock between his cheeks, he knew he did just that. The room still oozed of their lovemaking, and Matt loved the smell of sweat and cum that were all too familiar aromas. He pulled away, carefully pulling off Oliver's bulging arm from over his naked body. Setting it aside, he scooched back in order to get a full view of the sleeping teen. He was beautiful, hogging up that morning sun like he often did as it fell over his creamy skin. The pure white sheets ruffled and draped over the boy's muscles like a Greek god with just enough sheets to cover the essentials. He couldn't believe how he had been so lucky. \n\nFeeling a wave of mischievousness, Matt bit down on his lip and reached for the wrinkled sheets. Pulling them down, he slowly exposed the boy's body inch by inch until he lay there like a piece of freshly carved marble. He felt his cock stir as he looked over at his boyfriend, along with the reminder that beyond the double paned glass, anyone could see the two of them as exposed as the day they were born. Matt pressed his palms against the boy's shoulders, turning him onto his back- a feat that seemed a lot easier in Matty's head. But Oliver was a mountain of a man, only moving when it was on his own accord. He raised his arms, pulling them above his torso and resting his palms at the back of his head. Matt could draw a line down the boy's body, effectively dividing him into two symmetrical and mouth watering halves. \n\nMatt found his favorite place between Oliver's tree trunk-like legs, peering over the boy's soft cock. Undisturbed, he bit down on his lip at the still impressive length, knowing just how big it gets in the palms of his hands. He was pleased that he was able o wake up before the older boy, managing to break from the comfort that was Oliver's arms without an alarm. He planned on waking Ollie up the best way he knew how, but he'd be lying if we said all of this was just for Oliver's enjoyment. No. Since his first taste of bare flesh against his tongue, he couldn't believe how much he'd needed to satisfy his love. It was like a hunger deep in his gut that no other sustenance could satisfy. He held himself back, not wanting to jolt the boy awake too quickly. Rolling his lips over the front teeth, he flicked his tongue against Ollie's wrinkled foreskin. He dabbed his tongue at the opening, poking at the few centimeters of skin that extended over the boy's pronounced head. Slowly, he grabbed at the still-soft shaft and gave it a tug, exposing that bright pink head. Before he could even marvel at the sight, he leaned down, unable to deny himself a proper taste any longer. He took the boy's head in his lips and pushed down, getting the growing cock in his mouth with ease. A light brushing of the boy's taint with a lowly finger was enough to send blood rushing through Ollie's cock as it expanded in Matt's mouth. \n\n\"This is definitely the best way to wake up!\" Matt heard with Oliver's cock halfway down this throat. The older boy reached down, running his fingers through Matt's brunette mop of hair. He couldn't believe how good Matt looked, smiling back with his full lips kissing at exposed head. \n\nWith a wink, Matt responded, \"Good morning, birthday boy. How does it feel to be 19?\" Matt asked as he licked up the shaft, feeling the tip of his tongue trace the vein on Ollie's cock. \n\n\"Really, really good\" was all Ollie could muster as his toes curled at the sensation with his fingers grabbing at the loose sheets beneath him. \n\nHe reached down and pulled Matt up by the shoulders, dragging his warm, naked body over his with enough friction to spark a piece of wood. \"Come here, baby\" he said as Matt slid up, resting in the space between his chest and forearm. Kissing at the boy's stubble, Ollie admitted, \"You know I was disappointed to not wake up with you In between my arms, had it not been for the warm welcome instead.\"\n\nMatt quipped back, \"Sucks to suck.\" After a chuckle, he leaned over and gave Ollie a deep kiss- the first they had shared since last night. He loved the feeling as he climbed over his boy, placing his weight on the small space above Ollie's crotch. He could feel the boy's cock throbbing between his ass as he went in for more kisses. \n\nReaching over at the nightstand, he grabbed the half-empty bottle of lube they'd managed to use up in only a day's time. Flicking off the top, he generously applied some to his palm before lubing up Ollie's cock. He gave it a gentle squeeze, \"I think it's about time I finish what I started earlier.\" \n\nOliver squeezed at the boy's hard nipples, \"God, you drive me crazy, Stevens\" he said, as Matty rubbed the rest of the lube on his pucker. \n\nHe had a list of quick remarks lined up in his head, but chose to use actions instead of words. He lifted himself up slightly while reaching back, giving Oliver the perfect sight of the boy's hard body like a statue of a Greek warrior in motion. He lined up the thick cock against his hole and pushed back, letting the head slip into his ass with ease. Letting out a muffled grunt, he could feel the head of Ollie's cock pressing against his walls. The other boy bit down on his plump lip as he filled Matt's tight hole. He wondered if Matt would ever loosen up for him because the boy's hole felt like a vice with each initial thrust. When he finally felt Matt's ass rest against his crotch, he let out a breath, feeling his length deep inside him. \n\nOliver propped himself up and pulled Matt close. With his lips just inches away from his boy's, he moaned out, \"It's my birthday! It's my birthday!\" he said as he grinded his body against Matt's\n\nMatt laughed as he dug into Ollie's lips for a kiss. \"Keeping up with tradition?\"\n\nOllie nodded, \"You slept over for every birthday since we were seven.\" He wrapped his arms around Matt's body, resting his interlocked fingers at the small of his back. \n\n\"For the record, I prefer this over you jumping onto me at the crack of dawn.\" Matt said, remembering the hyper active boy that used to ascend from the top bunk, waiting to start the day. Only this time it was him, eager to start their day off the best way he knew how. He reached back, pressing his hand into the mattress between Oliver's legs for leverage. Lifting himself, he got up on his feet, pushing his toes into the small space where Ollie's body met the bed. He threw his other arm behind is back, leaving only his leaking cock pointed straight towards Oliver's face. The boy bit down at the sight, watching Matt's torso stretched out before him, with limbs practically tied behind his back. It was a sight to be seen, compared only to the motions of Matty raising up his lower body before pushing it back down. Oliver could feel the friction between Matt's inner walls as it brushed up against his shaft, knowing that no amount of lube could lessen the sensation of skin against skin. \n\nMatty let out a series of whimpers as he rode Oliver's cock. Every time he landed square on the boy's crotch, he could feel his own cock just begging for release. It broke his contact with Oliver's eyes to see the throbbing meat dripping like a faucet that collected in his lover's belly button. \n\nOliver grabbed at the boy's hips, lifting him up with every stroke, \"Fuck yourself on that cock, Matty. Show me how bad you want this.\" He felt a surge of dominance wash over him as he saw Matt bring about his own ecstasy. Truth be told, he knew that he himself would be in the same position before the day was through. But right now, he focused only on the leaking, moaning boy who desperately needed his tight hole to be filled. \n\nMatt continued to ride his boy until his body couldn't process the movements; only muscle memory remained. He leaned back, pressing his palms into the mattress as he continued to slam down on the boy's throbbing erection. He watched as Matt pulled his hands behind his head, resting on the headboard like a king. The boy deserved every ounce of pleasure he was dishing out and he hoped that he, and only he, could be the one to give it to him. \n\nAfter a dozen or so minutes of Matt's riding, he could feel a wave of urgency course through his body. His balls tightened as he felt the cum trickle through his shaft, just waiting to be emptied all over Oliver's sweat drenched body. He cried out, riding harder than he had before, \"I can't take it anymore baby. I need to cum! I'm not gonna last!\" \n\nIn one quick motion, Oliver reached forward, pulling Matt towards him as he tugged on his lower back. Matt's knees wrapped around the boy's sides until the space between them was only enough for a breeze of cool air to chill their wet bodies. Oliver pressed his forehead against Matt's as the boy released onto him. He watched those green eyes dilate as warm cum blasted all throughout his chest and abs. He was able to make Matt cum without even touching himself. And ever since they discovered that trick, they'd done everything they could to make it happen again and again. He held onto his love, feeling the heat pass through both of their bodies . Matt was still moaning out as his hot breath coated all of Ollie's shoulder. That breath was soon replaced by the boy's soft lips. And once Oliver felt Matty kissing at his neck, he was a goner. \n\nOliver finally let go, moaning out Matt's name as he emptied himself into the boy's used hole. His cum shot out with so much force that he could practically feel Matty's body recoiling after every blast. They stayed like that for a few minutes, holding onto each other for dear life as if letting go meant the last time they'd feel one another in their arms. Matt pushed the both of them over until he lay right on top of Oliver with the boy's cock slowly pulling out with a final pop. Oliver kissed at the boy's neck, looking for a new piece of skin that he had yet to claim as his own. \n\nStill draped over his boy like a fitted sheet, Matt stirred, reaching for the dufflebag by the nightstand. \"No don't move yet, I'm not ready to get out of bed\", Ollie whined as he closed his hug around Matt's hot frame. \n\nMatt turned back to lay a kiss on Oliver's pouting lips, appeasing the boy. He added, \"I'm just grabbing your birthday gift\" as he sunk a hand into the bag and fumbled through its contents.\n\nOliver shook his head, \"Babe, you didn't need to get me any gifts. Even if we weren't spending the weekend in this amazing city, I'd still be more than happy because I'm with you.\" \n\nMatt simply smiled as he kissed Ollie once more. The taller boy stopped them after a few seconds, \"Here, now open your gift\" he said as he handed Oliver a small brown box tied together with a royal blue ribbon. Oliver took it in his hands, examining the box, knowing he'd never be able to decorate something as beautiful. He unraveled the bow, feeling the silky ribbon between his fingertips. Then, digging his thumb under one of the untapped seams, he ripped at the paper until only a black box remained. Never one for patience, he flipped off the lid to see a dark brown strap of leather coiled together with the frayed ends nestling at the base of the box. \n\n\"It's a friendship bracelet\" Matt explained. \"I spent weeks trying to find the perfect gift for you.\" Oliver was about to interrupt but Matty placed a finger against the boy's soft lips. Knowing what he was going to say, Matt offered, \"We'll always have the memories of this trip, but I wanted to give you something you could hold onto; a symbol of how much you mean to me.\" Reaching for the box, Matty grabbed at both ends, bringing them up to Oliver's wrist. He pulled until the band rested just below Ollie's wrist, then tied the ends together, securing them in place. \"I know it's a little cheesy, but when I think of you, I think of my best friend. The one person who means the most to me, and who I'm lucky to have been given a second chance with.\" \n\nOliver laced his fingers with Matt's and pulled the boy in for a kiss. Matty could feel the fibers brushing against his wrist, loving the sensation as they nestled into his skin like they'd always been meant to touch. Ollie pulled back, \"It's perfect\", he said as he shook his wrist to feel the soft leather against him. \n\nSteadying their hands, he added, \"I love you Matthew Jason Stevens. I've loved you since the day we met.\" He looked over to see Matt burning a smile into his face. \"My mom always teases how after that first day of school, how happy I was to have made a friend. And then when we found out you lived on the same block, it was like no one could have planned it better.\" He reached over to kiss his boy again, \"It just took me a while to figure out what that plan was.\" \n\nMatt went in for a hug, feeling his body pressed against Oliver's like two statues cut from the same slab of marble- two separate entities desperately hoping to fit against the other. \"I love you too, Oliver Akimoto Morrison.\" Matt added, \"I had a bracelet made for me too.\" Fumbling once again through the duffle, he pulled his out and placed it on Oliver's palm. The older boy copied Matt's motions earlier and wrapped the strap around his love's wrist. They then pressed their arms next to each other and examined the two nearly identical straps that lay just above their hands. \n\nRubbing a finger against the top portion, Oliver noticed two etchings on the strap as if burned into the leather. He looked up at Matt, confused, \"These markings- why do we both have different symbols?\"\n\nMatt switched his arm to the other side of Oliver's and turned his wrist so that the two pieces of leather were touching. \"They're two halves of a star,\" Matt explained as he traced the outline with his pointed finger Ollie looked down to see the mirrored image cut only by the space between their wrists. Matt waited for the boy to look back up at him, \"It's so that we never get lost. We'll always find our way back to each other.\" \n\n***\n\nThey eventually did make their way out of bed, but not without a round of protests from Oliver who wanted nothing more than to feel his boy's skin on his the entire day. He sunk down and took the taller boy's cock in his mouth, not letting off until he felt the sweet cum erupt from his cock. He wished that he could spend the rest of the weekend doing everything he could to give Matt as much pleasure as humanly possible. To kiss on every inch of skin, leaving no stretch of flesh untasted or strand of hair still dry. He loved the feeling of his fingers running through Matt's furred chest before bringing them up to the boy's mouth for a thorough suck. And even after he'd cum, he loved the feeling of curling up into Matty and hearing the soft breaths that escaped his pouted lips like every gust of wind could be joined together to sound out \"I love you\" in the most inaudible way. \n\nTheir hunger for actual food soon overcame their hunger for each other, and a after a rousing play time in the shower, they both got dressed and headed out to see what the city had waiting for them. It was a warm day in San Francisco, with the sun shining up in the sky, after winning the war against the resident fog. They walked through the bustling streets, taking in the sunlight that crept through the skyline at every cross walk. After a dozen or so blocks, the boys settled on a small restaurant at the corner of two major streets. Lured in by the smell of crisp hash browns being flipped, they stepped inside and found a table at the edge of the space. There, they looked out the large windows at the two intersecting streets. A look at the oversized map hanging on the wall confirmed that both streets started at opposite ends of the city, only to converge at this one spot just feet from where they were sitting. It reminded Ollie of the two of them- that just a few months ago, they couldn't have been farther from each other . They were two people leading parallel lives, forced to spend the existence side by side but never meeting; close but not quite. Yet all it took was a push to lead one off its course and set a trajectory to the other. In time, the space between them tightened until only a waiting game remained of when the two might finally cross paths.\n\nAfter a few minutes of deciding what they wanted, a server came over to take their order with two glasses of freshly squeezed orange juice in hand. Seeing the cars pass, Matt felt a creeping suspicion wash over him like the blanket of fried potatoes and crisp bacon wafting through the air. \"So what happens next year?\" Matt asked, managing to let out the words without so much as a stutter. It was a valid question and although the boys had talked about always being together, he knew that lofty ideas often got crushed by a harsh reality. One that he at least wanted to prepare himself for. \n\nOliver crooked his neck, \"What do you mean?\"\n\nMatt shrugged his shoulders, feeling the cold juice trickle down his throat, \"Well, come August, we may be at different schools if not separate time zones. You've talked about going to Cal since you were a kid. I remember how your dad used to take you up there all the time and show you his old stomping grounds.\" Matt paused as if trying to center his point, \"What happens if I don't get into Berkeley. Or if you don't get into Berkeley or if one of us decides, come next year, that we don't want to stay in the Bay Area? What happens then?\" Matt could feel the same anxiety creep back up like a lump in his throat as the words shot out as if it was their only chance to escape before being trapped forever. ",
        "Ollie reached out his hand and ran a finger underneath the boy's leather band, feeling the warm skin against his fingertip. \"What do you want, Matty?\" Oliver asked in a calm voice. Waiting for Matt to finally meet his gaze he went on, \"Do you wanna stay here or do you want to go to some college in another state?\"\n\n\"I want to be with you\" Matt mustered, in a voice as clear as the open sky outside the window. It was naive and oversimplified, but it was the truth. It was the most honest confession he could have made at the time.\n\nOliver simply smiled and shrugged his shoulders, \"Then be with me.\" He offered, making the decision as easy as it could be. \"We could both go to Berkeley, or I could go to Berkeley. You can go to St. Mary's just like your parents did- or USF or Sac or SF State. It's really up to you.\" He closed his palm over Matt's hand, \"This love that I have for you isn't dependent on a college acceptance. Even if we end up in separate schools, I know that we'd do everything we could to see each other.\" Oliver chuckled, \"We could come back on the weekends and finally learn how to make my mom's miso soup. Or come back for Katie's dance recitals.\"\n\nMatt added, \"Yeah she's definitely expecting us at all of them\", as he rolled his eyes.\n\nSqueezing the boy's hand, Oliver went on, \"It's you and me, Matty. There's no way that I'm gonna let you slip away from me again.\" \n\nMatt looked up at Oliver with a smile. Then, after pausing for a second, he asked, \"How do you do that?\" \n\nOliver pursed his lips, \"Do what?\"\n\n\"That thing where you know exactly what I'm thinking and then respond with the words that always seem to put me at ease?\" Matt asked, genuinely curious as to how Oliver always knew just what to say in every circumstance.\n\n\"I know you, Stevens. I've known you since we were kids.\" He raised an eyebrow, \"We've been hard wired to each other since that first day when you sat next to me at lunch. I was new and no one wanted to talk to the new kid. But you did.\" Oliver finished, \"And the rest, as they say, is history.\"\n\nMatt nodded and squeezed the boy's hand, feeling the relief cleanse through his worried mind. He took a breath, centering himself beyond any lingering shreds of doubt. Just as he inhaled, he took in the aromas of smoky bacon and vanilla scented waffles as their server came by with two huge plates of food. The boys scarfed down, regaining their strength from their night (and morning) of strenuous activity. As the food filled his belly, Matt felt content both physically and emotionally. Brunch aside, he felt like the emptiness within his gut was now filled with hope. He wanted to be with Matt. It was that simple. \n\n***\n\nAfter their stomachs (and aspirations) were full, the boys headed inward towards the heart of the city. Fifteen minutes later, they found themselves at a clearing among the trees. Between them were hurdles of roller skaters and people of all ages engaged in a silent disco. Beyond the trees, a little girl was blowing giant bubbles that would rise a few feet into the air before bursting, sending a cascade of clear soapy water drizzling on her head. They walked along a marked path, weaving through the park until they found its center- a clearing anchored by two large expansive buildings with a courtyard in between. They opted for the closer one, a large mass seemingly wrapped in sheets of corrugated metal much like the present Matt had given Oliver this morning. Entering the de Young, they made their way up towards the observatory and took in the view. Miles of San Francisco, seven by seven to be exact, stretched before them, halted only by the ocean that seemed to battle the land for control of the border. Oliver held onto Matt's shoulder the entire way, holding him close like the most precious object he'd ever own. But Matt didn't complain, enjoying even the slight damp skin that formed between their palms from holding onto each other's hand for so long. \n\nTheir next stop was an overlook near the edges of the city. They looked up to see a mass of steps stacked above them as if leading straight to heaven. Their exposed faces were carefully crafted mosaics- shards of blue, purple and yellow tiles intricately arranged. It was a fragmented art piece, with the broken lines and jagged edges accentuating the image. After taking in the beauty for what felt like a half hour, Oliver broke the silence and turned towards Matt. \n\n\"Race you to the top?\" Oliver asked as a sly grin crept across his face.\n\nMatt raised an eyebrow, \"And what do I get when I win?\", he responded with an unmatched confidence. \n\nOliver shot back, \"The winner gets the loser's ass tonight.\" \n\nMatt busted out laughing, \"Ollie, I don't think there are any real losers in that situation.\"\n\nOliver chimed in, nodding, \"Okay I'll give you that one. How about...\" He paused and pressed his thumb over his chin, \"Loser drives the entire way home and stops wherever the other wants.\" \n\nMatt thought for a second, \"And have to deal with your backseat driving? No thanks. Consider this race won.\" \n\nOn three the boys sprinted up the stairs, lifting their knees so high, they practically hit their stomachs with every step. Matt carefully weaved through the tourists too busy with getting the perfect selfie that they didn't even move when the boys raced between them. Oliver blew out his lead when the path narrowed between a pair of European families trying to get two separate shots off carefully placed tripods. Matt managed to get ahead just before the bottleneck and used his advantage to increase his speed even further, seemingly taking in two steps at a time. With the last landing just a few feet in front of them, Oliver knew it was now or never. He picked up his pace, matching the boy's speed. But Matt was just too fast. He remembered all the years the boy spent on a track field, evident on his perfectly lean body. What Oliver possessed in strength, Matt more than made up for it in speed. And it showed. Oliver looked up just in time to see the soles of Matt's vans glide through the air like a wave of goodbye as he took off and landed onto the top of the stairs. \n\nMatt had just enough time to let in a deep breath when Oliver came crashing into him. The two collided with Oliver pressing the rubber on his shoes deep into the asphalt as he felt Matt's arms wrap around him, bringing him to a stop. \n\nThe boy let go and dusted off Oliver's shoulder, \"Not only are you driving home, but it looks like that ass is mine tonight.\"\n\nOliver pressed his lips onto Matt's, breathing life into the boy as he panted, \"I was gonna give up my ass long before we made the bet.\" \n\n***\n\nSometime later, the boys made their way back to the hotel as the afternoon sun stood high above the clouds. They forced themselves to hold off each other, wanting to build up the sexual tension that would erupt the minute their bodies crashed into one another later that night. They stripped their sun soaked clothes in silence, knowing that even the slightest bit of flirting could lead to dangerous territory. Oliver donned a dark blue long sleeve shirt that he rolled up around his forearm, looking as effortlessly handsome as he always did. Matt meanwhile went for a slate grey shirt buttoned all the way up to his Adam's apple. The sleek color matched well with his ruffled hair that seemed to cascade like the grain of a wild oak. \n\nHeading towards the elevator, they could feel the heat radiating through their palms like a surge of energy. Oliver stepped in first, feeling the cool metal rail press through his slacks onto his ass. Matt followed suit, leaning back into the textured wall with only their hands touching. He looked over to see those deep brown eyes melting through his pupils like dark chocolate. \n\nMatt swallowed, feeling his Adam's apple struggle against the finely pressed collar. \"One kiss won't hurt, would it?\" He asked as he tapped against the rail. \n\nOliver jumped, replying, \"God, no\" as he crashed his lips into the taller boy. Matt steadied himself for the assault, raising his hands and taking Oliver's perfectly sculpted jaw in his palms. He could feel that pronounced bone with only a thin layer of flesh covering it. Oliver's mouth tasted like warm honey dripping between his lips and collecting in his mouth. He couldn't get over the taste, yet those soft lips were all he ever knew. He'd only ever tasted Oliver and if he had any say in the matter, he'd make it so that he'd never taste anyone else. \n\nOliver's hands wrapped at the back of Matt's neck, rustling all of the loose hairs just above the folded collar. He practically hummed into Matty's mouth- the only way he could continue kissing without detaching himself long enough for air. \n\nAnd then they stopped, peeling off each other like fabric ripping at the seams. The familiar ring of the elevator served as their timer, leaving only a matter of seconds before the double doors opened before them, exposing them to the lobby and all it's patrons. Straightening themselves, Oliver wore that shit eating grin as he made his way out, cooling off as the central hair hit his body. Matt followed just behind him, bearing a smirk as he whispered to himself, \"Ten seconds.\" \n\n***\n\nAfter a short Uber ride, the well-dressed pair were dropped at the front of the Ferry Building. The sun was making her rounds just before departing for the evening, casting a shadow against the cornflower blue building. If they thought the exterior was a sight to see, they were even more surprised to see the large double height spaces inside. The two-story building stretched with rows of shops like an arcade from one end to the other. \n\nStepping into the restaurant, the boys were led towards the far end of the space, following the aromas of coriander and mint oozing from the kitchen. Oliver remained standing long after the hostess showed them to their table, taking in the view of the Bay framed by the oversized windows beside them. \n\n\"Not a bad view for a birthday dinner, isn't it?\" Matt asked as the older boy finally took his seat. \n\nOliver shook his head, \"We could be eating french fries in the bed of my Dad's beat up truck, and I'd still think it was the best birthday dinner ever.\" \n\n\"I'll keep that in mind for next year. For now, I guess we'll have to settle for this.\" Matt said with a smirk as he fumbled through the menu. Oliver too, gave it a look, resisting the urge to gawk at the expensive prices listed out. \n\nHe cleared his throat, \"Babe you gotta let me cover for this. I swear you haven't let me reach for my wallet once this whole trip.\" \n\nMatt cut him off, \"Nope. your money's no good here.\" He watched as Oliver fought the urge to protest, instead backing down and letting Matt have this. The younger boy offered, \"Besides, I didn't work every summer at Mr. Harvey's seafood shop just to spend it all on rocky road for Katie.\" \n\n\"I swear that kid's got the both of us wrapped around her little finger\" Ollie said as he thought about all of those afternoon candy store trips or their runs to Molly's Frozen Custard every time Mrs. Stevens folded, letting the three dash out right after dinner, so long as they brought back a dark chocolate cone just for her. \n\nAfter a steak larger than Oliver's head and the red snapper that tasted like it could only have been caught this morning, the boys left the restaurant (along with a considerable amount of Matty's savings) behind. The huddled together, feeling the cool air around them as they exited the Ferry Building and went off on a nightly stroll along the pier. Matty pressed into Oliver's body, seeking warmth as street lights led them down towards a wooden bench. \n\nAmidst the chattering of teeth and exhales of visible air, they heard the water crashing against the wooden posts beneath them. Straight ahead, the Bay Bridge shined against the night sky, glittered with flashing lights that looked like something from an elaborate Fourth of July show. Even freezing cold and weighed down by the oversized dinner they had shared, Oliver wouldn't have changed anything about tonight. He pressed Matty closer to him, feeling the boy warm up under his touch. Matt turned, exposing his green eyes that sparkled along with the bridge behind them. It was enough to take his breath away. And so he sat there, taking in his boyfriend.\n\nMatt asked out as he rubbed through the older boy's slacks, \"You okay?\"\n\n\"I've never been happier, thanks to you.\" Oliver admitted as he leaned in for a kiss. Their cold lips thawed as they pressed into each other. \"You know, I blamed you for leaving all those years, but part of that was me kicking myself for not running after you. I gave up too easily on us.\" \n\nMatt ruffled the loose hairs on Ollie's neck, \"I think if time has taught us any lessons, it's that you're meant to be with me. And nothing will stand in the way of that.\" He raised his arm and shook his wrist, letting the frayed ends of leather rustle in the cool ocean breeze. \n\nHe pulled Matty in close, taking the boy's scent of vanilla, \"This trip, you, the past few months- have been nothing short of perfect.\" \n\n\"Tomorrow we go back to reality. Back to our families, and friends and god knows what else is in store for us.\" Matt offered, thinking about all of the uncertainty still ahead of them. But it was a calm realization. A hope that somehow grew in spite of so much hesitation- one fostered by his love of Oliver and the wisdom in knowing that he wouldn't be able to make it through with anyone else. \n\n\"Tomorrow will come when it comes.\" Oliver said, taking in the Matt's emerald eyes. He went on, \"For now, at this moment, it's just you and me, Matty.\" He linked up their fingers, feeling the soft skin on Matt's palm. He nuzzled his hair into the boy's neck, feeling their bodies finally warmed up in the cold. Matt's arm rested just above the boy's back, rubbing through his shirt, practically able to feel the boy's skin. He swore that nothing could have felt better than that moment. Just two bodies, huddled together under a fleece jacket with the glittering bridge like a backdrop to their great love story."
    ],
    "authorname": "thealphamale",
    "tags": [
        "gay",
        "romance",
        "erotica",
        "bareback",
        "teen",
        "muscle",
        "uncut",
        "anal",
        "oral",
        "gay romance"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/back-to-you-ch-10"
}