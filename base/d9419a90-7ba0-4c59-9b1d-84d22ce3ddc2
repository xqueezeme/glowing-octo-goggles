{
    "title": "Claiming Treasure Ch. 55-60",
    "pages": [
        "Nancy Clark's POV<br >Outside Arrowhead Pack Entrance\n\nI had bided my time during the drive, knowing that I'd only have one chance at this. Now that I was standing in the middle of the road, a madman's fingers on the triggers that could blow my head off, I had to wait for the perfect moment.\n\nI could see all the cops around me, but the ones with the pistols and the standard rifles weren't the ones I was looking for. No, I needed the snipers. SWAT, FBI, I didn't care as long as they would take the shot when it was there.\n\nCoffey was playing to the cameras as he waited for his demands to be met by the Arrowhead people. Why he wanted Arrowhead, I didn't know. I tried to keep still and calm, focusing on not getting myself killed while I waited for it all to play out. There was always that chance that he might let me go.\n\nI saw a woman and her husband walking towards us, stopping just off the road. \"We're here, Coffey. Let her go.\"\n\n\"Not yet.\" Coffey turned to me, moving the sawed-off shotgun so it would only blow half my neck off. \"Show the world what monsters you truly are, and then I'll release the woman.\"\n\n\"How do I know that will happen? You're just going to give up?\"\n\n\"If you haven't done it in the next sixty seconds, you'll be wearing her brains. She's innocent, unlike you. Make your choice quickly, Rori. You have fifty seconds.\"\n\nHer husband moved in front of her. \"Some of my people are pregnant, they can't shift. You KNOW that!\"\n\n\"ALL of you or she dies. Forty seconds.\"\n\nI looked away from him, towards where I hoped the sniper was watching. I mouthed the words slowly and silently, telling them to be ready to shoot him. I had no idea if they understood, but at this point, it was all I had.\n\nThe woman turned to her people. \"ARROWHEAD! STRIP AND SHIFT!\"\n\nFifty some people started pulling off clothes and dropping pants on live television. I could see Coffey was watching them and not me. I held up a hand behind my back where he couldn't see it, fingers and thumb spread in a 'five' signal. Four. I heard screams and weird sounds. Three fingers. \"WOLVES,\" someone yelled. Two fingers. A howl. One finger.\n\n\"NOW,\" I yelled as my hand reached up to the shotgun's hammers. It was an antique shotgun, like one my father had used when he taught me to shoot. The double-barreled twelve-gauge had exposed hammers, and my hand grabbed at them. My index finger slid between the hammers and the primers just before he pulled the trigger.\n\nCLICK.\n\nBANG.\n\nI was pulled in his direction, holding on to the shotgun with every ounce of energy I had left. Coffey's dead body fell to the ground, his brains scattered on the road. I fell on top of him as his dead weight pulled at the shotgun he still gripped. I moved my other hand up, pushing the lever that broke the action and ejected the shells.\n\nI'd barely rolled off when the officers reached me. Two men picked me up and carried me away as a third made sure the shotgun was no longer loaded. As I looked back, armed Deputies and Agents had surrounded Coffey's body. The men had me to the ambulance in seconds, sitting me in the back with the doors shielding me from the cameras. \"Are you all right, Ma'am?\"\n\n\"I think so. Get this thing off of me.\"\n\nOne EMT grabbed some shears and started cutting the duct tape that attached the shotgun to my neck, while the other did a quick check of my body for injuries. One of the officers took the firearm and placed it in an evidence bag.\n\n\"NANCY!\"\n\n\"LARRY!\" My husband was running through the crowd, and tears ran down my face as he reached me.\n\n\"Oh God, baby, are you all right?\" I couldn't talk, so I just nodded my head as I buried my face in his chest. The EMTs backed off as he picked me up, sat down, and set me in his lap. \"I almost lost you,\" he said as he held me tight.\n\n\"I love you, Larry,\" I managed to say.\n\n\"Ma'am? We need to finish getting this stuff off you,\" one of the EMTs said as he pointed at my neck. He started to pull it, and it was painful. \"Let me get some rubbing alcohol,\" he said as Larry pulled me away from him.\n\nI was starting to shake. \"It's the adrenaline,\" Larry said as he rocked me gently. \"Relax and breathe.\"\n\nThe FBI people approached to talk, but Larry's look chased them away before they could even ask. It took them fifteen minutes to remove all the tape from my neck, and I lost some hair along the way too. I'd finally calmed down enough to think, and that brought up the next subject. \"Honey?\"\n\n\"Yes, love?\"\n\n\"How did all those people turn into wolves?\"\n\n\"They're werewolves, baby.\" My eyes got wide. \"Don't worry about it, most of them are good people.\"\n\nHe wasn't even shocked. \"How long have you known?\"\n\n\"Since yesterday. I saw Coffey shift into a wolf behind the Gander store. He was the one who injured my Deputy and Max. Mark is with them now, and he's become a werewolf too.\"\n\nI spent a few minutes just thinking about it. \"I should have known when they walked out there was something different about them,\" I said.\n\n\"What do you mean?\"\n\n\"Fifty-some people walk out here, spanning from teen to retired, but all of them have great bodies and look like models. How can we compete with that?\"\n\nHe just laughed. \"For starters, don't go to their pool parties.\"\n\nChase Nygaard's POV<br >Arrowhead Pack Entrance\n\n\"ARROWHEAD! STRIP AND SHIFT!\"\n\nMy heart stopped as my mate pulled off her shirt and kicked off her shoes before dropping her jeans to the ground. \"Don't do this, baby,\" I begged as I pulled my clothes off.\n\n\"I have to,\" she said, and then she shifted.\n\nI could hear the gasps and comments as the sound of bones changing rolled like thunder over the road. There was no hiding what we were anymore.\n\nI stared at Coffey, waiting for the time when I could get his neck in my teeth. The woman he was holding yelled 'NOW' and reached for the gun. A moment later, a shot rang out. Coffey's brains splattered on the asphalt. \"Shift back and dress,\" I ordered everyone. \"NOT YOU, RORI,\" I said as I shifted back.\n\n\"Chase? I'm so sorry, baby,\" she said as she lowered herself to the ground. I smelled blood; looking down, I could see it at the top of her hind legs. She was losing the baby. \"CLEAR THE WAY TO THE CLINIC,\" I yelled to everyone over the link as I picked her up in my arms. I slid my feet into my shoes and took off running, buck naked on national television, back up the road towards it.\n\n\"FREEZE,\" one of the lawmen yelled.\n\n\"She's losing her baby,\" Vic said from behind me. \"He's a doctor.\"\n\n\"Vic, you're in charge. Do what you can to limit the damage.\"\n\n\"I've got it, Alphas. Doc and Possum will meet you there.\"\n\nDoors were held open, and I set Rori down on the bed in the surgical suite. Donna already had three bags of blood out on the warmer. I went to the cabinet to pull on scrubs, then to the sink to wash up. Doc Olson took over the initial assessment. He'd been staying at our Pack to help with all our guests.\n\n\"Start an IV, then a large-bore line for blood,\" he told Possum as he pulled over the portable ultrasound.\n\n\"How many others are coming,\" I asked. We had seven pregnant females in our Pack.\n\n\"None,\" Rori told me. \"I told the pregnant women to stay behind, and volunteers took their places. I wasn't about to risk them out there.\"\n\n\"YOU RISKED YOURSELF, RORI,\" I growled.\n\n\"I had to be there. Coffey wanted to look in my eyes as I lost my baby. He wanted to watch my pain and suffering before he died. He knew EXACTLY what he was doing to me, Chase.\"\n\nShe was right. Jack wanted the public spectacle. He was out to destroy Rori, and all she had created. He didn't know our Pack members well enough to recognize the swaps, and the numbers looked right. \"Thank you,\" I told her.\n\nI had my gloves and gown on as I went to help Doc. \"Fetal activity?\"\n\n\"Stressed but not critical,\" he said as he moved the probe around. \"The majority of the placenta remains intact. See here?\" He pointed at the screen, showing the source of the bleeding. \"It's about a twenty percent abruption, caused by the change in the uterus when she shifted forms. We replace the blood she's losing, monitor the fetus, and pray that her healing can fix this before it's too late.\"\n\n\"Will I need to stay this way,\" Rori asked me.\n\n\"Yes, you'll need to stay in wolf form for the rest of your pregnancy,\" I said.\n\n\"Shifting too early and your baby might not survive. Too late, it would complicate delivery,\" Doc Olson said. \"You and Heather are in the same boat. You'll have to deliver a human fetus in wolf form.\"\n\n\"Or we can do a Caesarean section,\" I said. \"I need you to rest and relax as much as you can, love. There's nothing you can do but pray and heal.\"\n\n\"Alpha, Agent Black insists on seeing you,\" Vic sent me.\n\n\"How is it going out there?\"\n\n\"It's a mess. I've been to six county fairs and three prison rodeos, and I've never seen anything like it. The press is going nuts, most of the cops don't know whether to thank us or shoot us, and the FBI isn't helping much. The hostage is safe, and Coffey is quite dead.\"\n\nI thought about what we could do. \"Allison and Lana still have full access, let them through. Our secret is out, and now we have to deal with it. Talk to the press, answer questions openly, and stress how we are still their friends and neighbors. If they ask, Rori is resting comfortably, and ask for prayers that her baby survives. It's something we can all agree on.\"\n\n\"Will do, boss.\"\n\nRori moved her head and looked at me. \"We need a buffer, Chase. The crazies are going to start showing up, and we can't have our people in danger.\"\n\n\"What should we do, baby?\"\n\n\"Start evacuating our guests to the airport out the back entrance. The fewer people in danger, the better.\" That made sense. \"Have Roadkill call the National President. It's time for the Brotherhood to protect us for a change.\"\n\nCh. 57\n\nColletta Grimes' POV<br >Watergate Hotel, Washington, DC\n\nThe President had asked that we remain in town, so we had extended our stay and slept in late this morning. I'd woken before Frank did, the narrow shaft of light from the curtains hitting my eyes on the king-sized bed. I reached over and grabbed my phone; it was after ten, and we had no plans before this afternoon.\n\nI was on my right side, my mate spooning me from behind with his big cock resting between my butt cheeks. I moved Frank's arm off my belly and set it behind me, rolling off the bed before his wandering hand could grab me again. Ever since we started sleeping together, he'd been unable to fall asleep unless he was touching my tits or ass. Now that I was pregnant, his hand had to cover my belly, or he held me so my stomach was against him. It was like his wolf needed the skin contact to calm himself.\n\nMy wolf liked it too.\n\nI hurried off into the bathroom, taking care of my morning business before going back into the room. Frank was still asleep, but Little Frank was wide awake. He'd rolled onto his back, his big cock tenting the sheet rather obviously.\n\nI was still feeling the pleasant soreness from last night, but I wasn't going to waste this opportunity. Sliding under the thin sheet, I made my way to him and kissed the tip of his morning woody. It twitched, and he moaned as I grabbed the base and took the head into my mouth. \"Colletta,\" he whispered as I took him into my throat. \"Jesus, baby.\"\n\nHe tossed the sheet aside, and I moved around until I was between his legs. I smiled as I swirled my tongue around the broad, spongy head before taking him deep. He was fisting the sheets as I worked him, his cock so hard a cat couldn't scratch it. \"Oh my GOD,\" he said as I did the trick with my tongue licking out at his ball sack while I swallowed around his shaft.\n\nI popped back off. \"A hundred and fifty years of experience with blowjobs, and you're the beneficiary,\" I said. I used every trick I had, and it didn't take long before Frank was holding my head as he unloaded into my waiting mouth. I swallowed quickly, then licked the rest off before I sat up with a smile. \"Delicious.\"\n\n\"You're amazing,\" he said as he pulled me up next to him.\n\n\"Ugh, dragon breath,\" I said as he tried to kiss me.\n\n\"I'll be right back,\" he said as he rolled out of bed. He closed the door to the bathroom as I lay with the light near my head. It was annoying, so I got up and went to the window. Pushing the heavy drapes aside, I left the shear material in place to let in some light. Below me, Washington was a bustling place. The Federal Government had double-digit growth under recent administrations, and the DC area was the fastest-growing and highest-income area as a result.\n\nI was still looking out the window when the door opened behind me. \"You're so beautiful,\" Frank said. \"Don't move.\"\n\nI kept looking out the window as I felt him approaching, my wolf excited about the dominance he was showing. I expected him to grab me, but instead, he lightly touched my shoulders with the tips of his fingers. Pleasurable tingles moved down my back, following his fingers as they traced down my spine. \"That feels so good,\" I whispered.\n\n\"Lean forward until your forehead is on the window, and grab the windowsill. I want you to watch those people as I take you,\" he said as his fingers traced softly along my ass. \"None of the men are as lucky as me, and none of the women as loved as you.\"\n\nThe window was cool to my skin, but I did what he said. Goosebumps broke out as his fingers moved down my thighs, and I yelped when I felt his tongue flick my wet lips. \"Frank....\"\n\nHis hands moved around my legs, holding me still as his mouth probed my sex. He took his time, playing me like a fiddle as I squirmed on his talented tongue. A few times I forgot my instructions, and moved my head off the window; he'd spank my ass and tell me to get back into position. It was wild; Frank was eating the hell out of me in the center of a big city, with hundreds of oblivious people passing below.\n\nI came once, and his fingers and tongue pushed me to another much larger orgasm. I screamed my release into the window, sure that people would hear and look up to see me. No one did, though. I moaned in pleasure as Frank stood up and plunged his length into me in one stroke, stretching me so good. \"Fuck me, Frank. Please, fuck me hard.\"\n\nHe reached over me, pulling the drapes aside so our nudity was exposed to anyone who might be looking. His hands dropped to my shoulders and held them as he pulled me off the window and back onto him. \"Hold on to the window, baby,\" he said.\n\nI'd asked for hard, and he delivered. His hips pounded into my ass, his long cock plunging my depths as I came again and again on it. The room filled with the sounds of our sex; the slap of skin, the squelch of my wet pussy getting plundered, and the moans and cries out my mouth. I was having trouble staying upright as the pleasure was so intense. \"Cum for me, Frank. Fill me up. I'm so close.\"\n\nHe moved even faster, and I was building for the highest crest yet. He moved his hands down from my shoulders to my tits, his fingers grabbing and pinching my nipples hard, and that set me off. \"FRANK,\" I said as I clamped down on him like a vise.\n\n\"MY COLLETTA,\" he said as his balls started to empty themselves deep inside me. I felt my legs collapse, and I couldn't see straight. I barely knew what was happening as he pulled me to his chest, his cock still buried deep inside me. When I gathered myself, I was back in bed as he held me close. His softening member slid out, followed by a gush of fluids that soaked my legs and the sheets. \"I've got you, baby.\"\n\n\"I didn't know it could be this good,\" I said as I turned back to kiss him. \"You're amazing.\"\n\n\"And you're not bad for an antique,\" he said.\n\nI smacked his arm as he laughed. \"Well, you're not bad for a boy-toy.\" We rested for a few more minutes, then he went and filled the jacuzzi tub while I peeled myself from the sheets. I smiled as I thought about how my life had changed; I'd loved my first mate, but he was not the man that Frank was. My hand drifted over my stomach as I walked into the bathroom, thinking about the life growing inside me.\n\nAn hour and another round of lovemaking later, we finally dressed and came downstairs for brunch at the hotel restaurant. The place was full of the power elite of Washington, DC; power suits and designer dresses filled the place. Surrounded by dozens of high-powered lobbyists, lawyers, and business leaders, I wasn't intimidated. I knew we were more than them. They thought they had power and authority, but none would ever have the power of an Alpha.\n\nI thought our plans were going rather well; the President and her advisors were beginning to understand that our differences did not represent a threat. The hostility from the Chairman of the Joint Chiefs and the CIA were receding as the reports from the people imbedded in our Packs came in. Some of them were visiting Packs today, and we had a scheduled meeting with the National Security Council again tonight.\n\nWe had FBI in Arrowhead, Department of Defense in Monongahela, Secret Service in Cascade, CIA in Adirondack, and Homeland Security in Donner. I'd been getting text messages from the Alphas, updating me on progress, and things were going well. I looked across my brunch plate, heavy on bacon and pancakes, at my mate. We used the mind link in case we were under surveillance. \"Do you think total transparency was the right call?\"\n\n\"I don't think we had a choice, love. They would have found us all anyway. The information the Sons of Tezcatlipoca Task Force uncovered on Rori before it shut down was pretty complete. It wouldn't have taken much longer to identify us all.\"\n\nWe couldn't compete with the Government when it came to intelligence gathering and use of force. If they decided to wipe us out, they could. If they stoked a panic, we'd have nowhere to turn. \"What do you think it would take to reach an agreement with them?\"\n\nHe picked at his omelet. \"There's two, no three, kind of people in the room. The first are those who are curious but will want to live in peace with us. The second is those that fear us and what we can do, and will never accept us being free. The third is those who will see an opportunity for power, and seek to use what we have to serve their own ends.\"\n\n\"Like the Director of National Intelligence,\" I replied. \"Werewolves would be the ultimate spies.\"\n\n\"The Chairman of the Joint Chiefs wants to turn us into an elite Special Forces unit under his command. He's read the reports and knows who among us is currently serving. Word is they are being pulled from their units, going Luna knows where.\" I showed some panic. \"I don't think they will be hurt; the wolves are too valuable to them. I think the military wants to see what they can do when they aren't held back by the humans in their units.\"\n\n\"Our people didn't join the military for that,\" I said. \"And I get the feeling the Chairman doesn't see us as fully human, so I doubt he'd care as much about casualties.\"\n\n\"Segregating us from humans will make it harder for us to be accepted,\" Frank replied. \"It's going to be hard to convince humans to trust us when the military's first reaction is to pull them and put them in a cage.\"",
        "I heard some shouts from the bar area, and looking up at the television behind it, my jaw fell. \"HOSTAGE STANDOFF IN MINNESOTA,\" the title bar said. On the screen, Fox News was showing the feed from their local affiliate in Duluth.\n\n\"That's Arrowhead,\" I said as I got up from the table.\n\n\"Jack Coffey,\" Frank said as he walked with me. Frank and I joined the group of people watching the live coverage; Coffey had a sawed-off shotgun attached to the woman's neck, and I could see the Arrowhead Pack approaching from their driveway. My phone was blowing up with messages as I watched Rori negotiate with a madman.\n\n\"She can't shift,\" I said as I looked on in horror.\n\nThen she ordered her Pack to do just that. The news crews didn't know what was coming, and the strip and shift went over the airways live. I heard screams from some of the people in the bar as the fifty people became fifty wolves, and then the picture jerked as a shot rang out. I watched as the hostage escaped from Jack as the sniper took him out, and the wolves returned to human form. All except one rust-colored wolf in front. \"We have to go NOW,\" I said.\n\n\"Emergency Council meeting, call for it,\" Frank said as he escorted me out past the shocked customers.\n\nI sent a group text out as we rode up in the elevator.\n\nArrowhead didn't make the call, but we didn't need them. Sawyer made a motion to vote on the new Council members immediately, making the case that we needed our leadership decided to deal with the crisis. Doc was easily elected, but there was more debate about my candidacy for Chairman. In the end, the traditionalists lost out, and I was elected to serve out the remainder of Jack Coffey's term. In two years, the European Council would take the lead and put forth their own man.\n\nOr woman. Now that we'd shattered the traditional paths, who knows what might happen?\n\nI had just closed the videoconference when the room phone rang. \"Mrs. Grimes,\" the hotel operator asked.\n\n\"Yes?\"\n\n\"There are two FBI agents here. They are here to escort you to the White House.\"\n\nI looked at Frank, who just nodded. \"Thank you. We'll be right down.\"\n\nCh. 58\n\nHeather Rhodes' POV<br >Cascade Pack Training Grounds\n\nI trotted behind my mate as we moved the group to the outside training area. \"The gym works fine for training in human form, but our nails would tear up the padding in wolf form,\" Carson explained. \"We will hold the endurance and wolf combat portions of the trials outside. The goal is to find a new Beta Male and Female, and new Betas in charge of training, internal security, and external security.\" We needed to fill spots soon, as the move of Carl and Angelina Packwood to Banff Pack Alphas left a gap in our Pack. I missed them already.\n\n\"The Beta Male and Female you said are your second-in-commands, and the others are supervisors in their area of expertise,\" Agent Curtis Pratt asked. He was the senior Secret Service agent sent to observe our Pack. His bosses had pulled him from Seattle, where he was the lead advance agent on the President's security team.\n\nCarson nodded. \"It's fairly typical, with the number of Betas in a Pack dependent on the size. The senior Betas act in our stead if we are not around, and help with administration. Training is big here, as you can see, and internal security watches our borders and plans defenses against attack.\"\n\n\"Does it matter if the person is mated or not?\"\n\n\"If mated, both of them will serve as Betas in some capacity. Luna wouldn't pair a wolf with another if they couldn't help each other with that level of duties. I have to keep explaining that to Heather because she doesn't think she is strong enough to lead.\" I looked up at him and whapped my tail on the ground. I was learning just how strong I was as I spent more time with my wolf. \"The external security position is a new one. I figure that with our secret coming out, I'll need someone who can coordinate with local law enforcement and Government. We expect the crazies to descend on us when our secret comes out, and Seattle has no shortage of them.\"\n\n\"I know, I'm going through threat assessments now,\" Curtis said. \"Is this the typical way to fill openings in Pack leadership?\"\n\n\"Not at all. Traditionally, either the Alpha chooses who he wants, or the one who defeats all comers in wolf form gets it,\" Carson responded. \"I'm trying something different. One of the problems we found in the Packs we've taken over is that 'might makes right' pushes the wrong people to the top. I wanted a more comprehensive assessment of suitability, hence the Beta Trials.\"\n\n\"I can see how broader selection criteria could help,\" Agent Melissa Deharty added. \"Especially since you said you wanted to give women a fair shot at the jobs. Straight up fighting with males puts them at a significant disadvantage. I'm interested in how you are balancing the physical and the mental aspects of the screening.\"\n\n\"We will still have the fighting tournaments, but there will be three of them, and each will count for ten percent of the points,\" I said. \"Hand-to-hand and knife-fighting we'll hold in the basement gym, wolf form out here.\" We had reached the combat circle, a circular area of grass twenty feet across, surrounded by waist-high boulders. \"It's going to be fun.\"\n\n\"Won't they get hurt? Dog fights are vicious,\" Melissa said.\n\n\"Hand-to-hand can be too. We'll schedule the rounds with time in between to heal up. The whole tournament should take about a week,\" I replied.\n\nMelissa nodded. \"Thirty percent makes sense, and it lessens the disadvantage the women have in size and strength. What else are you planning?\"\n\n\"We'll use a new combat scenario on the FAST trainer for a pistol tournament at ten percent. Another ten percent for rifle, but I haven't figured out how to set that up yet. \"\n\n\"You'll have fewer than ten people, right? And you want it to be fun to watch?\" I looked between Carson and Curtis, who was excited about the competition. \"Let them settle it with a game of PIG.\"\n\nI tilted my head at him. \"What the heck is that?\"\n\n\"Heather needs more of an explanation,\" Carson said.\n\n\"You put them all at the range and set up targets of different sizes and distances. The first shooter chooses the target and shooting method, standing, kneeling, or prone. If he hits the target, the others have to try the same thing. If they miss, they get a letter, just like if you were playing basketball. Miss your called shot, and the next person gets to choose. Your ranking goes in inverse elimination order, and it's a blast to watch. Lots of mind games.\"\n\n\"I'd like to try THAT,\" I said. \"You know, as soon as I have FINGERS again.\"\n\nCarson scratched my ears. \"If I put some people with you, do you think you could get the range set up by tomorrow?\" Our single wolves had all gone to Arrowhead, although twenty-two were no longer mateless. We were losing ten females to other Packs, while our men were bringing home twelve new females. Bringing everyone without a mate together had been the single biggest mating boon ever; the rest knew their mates were underage, dead, or maybe even human. Carson didn't want to start the tournament until they arrived in case the new members wanted to apply.\n\n\"All right, so you're fifty percent of the exam on fighting skills,\" Melissa said. \"What else are you testing?\"\n\nCarson smiled as I went to lay down on the grass, enjoying the morning sun on my fur. \"I need to design a written exam soon. I want something to measure knowledge of Pack Laws, history, and strategy. I have some ideas I want to run past my brothers and sisters. Anyway, that will be twenty percent. Another twenty percent for the triathlon, to measure endurance and willpower. I laid out a course with one of my warriors last night. It's a four-mile uphill run from the turnoff to our Pack until reaching the lake, a half-mile swim through the chilly waters, followed by a ten-mile cross-country run over the ridge to the Pack House as wolves.\"\n\n\"Damn,\" Curtis said. \"That's hard-core. What are you doing for the last ten percent?\"\n\n\"I was thinking about letting the Pack rank their candidates first to last, and using the vote.\"\n\n\"Bad idea,\" Curtis said. \"It turns into a popularity contest, and people get upset when their guy doesn't get voted in.\"\n\n\"He's right,\" I told Carson. \"Who gets to vote for their boss?\"\n\n\"So, what would you propose instead?\"\n\n\"Psychological profile. The Secret Service uses them more than anyone else because of the job we have. From what I've seen, the job of your Betas is to protect and guide the Pack.\"\n\n\"It is, and to protect the Alphas. I have no idea how to implement it, though.\"\n\n\"Talk to your brother. He's a psychologist, right? There are standardized tests and interview questions. Ask him to review and rank the candidates based on that. He doesn't even need to know their names.\"\n\n\"If it's good enough for the President, it's good enough for me,\" I said.\n\n\"I'll talk to Chase after things calm down from the gathering. I'm sure he's busy right now.\"\n\nAn urgent send came to us. \"Alphas, the news is showing a hostage standoff at Arrowhead, it's Jack Coffey.\"\n\n\"We're on our way,\" Carson replied. \"We've got to go. Something is going on at Arrowhead, and it's on the news.\"\n\n\"How did you know that,\" Melissa said as we turned towards the Pack House. It was only a few hundred yards to our offices, but anything more than a slow trot didn't work for me. Twins in human form made me waddle. Put the same size babies in a skinny-hipped wolf, and running wasn't happening. I didn't know how I was going to do this until they were big enough to deliver. My belly would be dragging the ground.\n\n\"Mental communication,\" Carson replied. \"I can speak telepathically to any wolf in my Pack. It's the only way to communicate when we are in wolf form.\"\n\n\"Damn, that would be sweet,\" Melissa said. \"No talking into your jacket cuff or microphones in your ear?\"\n\n\"Downside is you can't escape from your wife's nagging, even if you leave the room,\" Carson teased.\n\n\"I do NOT nag. I just tell you what you need to do,\" I said as I nipped at Carson's ankle to show my displeasure. I followed them up the stairs and to our office, where his secretary already had the television news on. We watched in shock as the events unfolded.\n\nAs the emails and text messages came in, Carson muted the television. \"I'd hoped we'd have more time to prepare, but it's out now,\" he said. \"Heather and I need to attend an emergency teleconference. If you'd excuse us, you probably need to check in with your bosses as well.\"\n\nTwo hours later, we were all meeting in the office again. \"My mother is meeting with the President right now about a national response to the situation. It's fair to say this isn't the unveiling we hoped to have,\" Carson said.\n\n\"Our orders to stay in place and monitor the situation,\" Curtis said. \"We are not authorized to use force except in self-defense.\"\n\n\"What are you hearing?\"\n\n\"Law enforcement is on alert, and protests are breaking out in major cities on both sides,\" he said. \"We're concerned about the groups forming up with a stated goal of finding and killing werewolves. There have already been reports of large dogs and wolves getting shot on sight.\"\n\n\"They will assume any big dog could be a werewolf, so we shouldn't shift. If the hunters suspect we are here, we'll see armed groups into our territory.\"\n\nCarson passed along what I said. \"Heather's right, it's not just a danger outside our boundaries. Our Pack's existence will be known soon, and that's going to attract all kinds of unwanted attention. I'm ordering the Pack onto lockdown, minimal patrols, and no shifting,\" Carson said. \"We'll watch the territory with cameras and call the Sheriff if we get trespassers.\"\n\n\"You'll want to talk to the Sheriff in person,\" Melissa said. \"It won't help if he's the last one who finds out who you are. You could be sitting on a powderkeg here. The last thing you want to do is get into an armed confrontation at your borders.\"\n\n\"Will the Federal Government step in?\"\n\n\"I don't know,\" Curtis said. \"I imagine the President will have to weigh in on that.\"\n\n\"Melissa, can you call the Sheriff and ask him to come out here to speak to us about this. It might go over better from you than from me. I don't know how he'll react to having almost a hundred werewolves in his county.\"\n\n\"I can. Come on, Curtis, you can call the office.\"\n\nThey left the room, and I looked up at my mate. \"We've got another big problem you haven't considered,\" I told him. \"We've got thirty-some people flying back from Arrowhead to Seattle, and if word gets out on who they are?\"\n\n\"Fuck, you're right,\" he said. \"We have some time since they have to drive to Minneapolis then fly here.\"\n\n\"Time isn't helpful when things could be getting worse by the hour.\" He just nodded. \"Melissa is right; we can't be on the front lines if a mob shows up at our gates. We need an escort for our people, and a buffer for our land, and I know who to ask.\"\n\n\"Who?\"\n\n\"The Brotherhood. Call Thor and Sif in Portland, and Wolfman and Mighty Elk in Seattle. They'll help a Lady out, fur or no fur.\" My phone had both numbers, and we called Thor first because we'd need Wolfman to bring our people from the airport. Thor's phone didn't pick up, so he used FaceTime to call Sif instead. He moved the phone until my head showed up as well. \"Hi Sif, it's Carson Nygaard, Chase's brother,\" he said when she answered. \"We tried to call your old man, but he didn't pick up. Can you talk?\"\n\n\"Sure, they're in Church. The Ladies and I are just watching the news and having some drinks. That's a nice puppy you have there,\" she said.\n\nI barked, making Carson laugh. \"This is no dog; this is my mate, Heather Rhodes, formerly known as Harleigh Ryder and a Steel Ladies road name of Crash. She's a werewolf, just like me.\"\n\n\"You're shitting me.\"\n\n\"Nope. So are Rori and Chase, but you probably figured that out from the news coverage. My whole family is, as is Vic. Spider Monkey is still human, though. Call Mongo and Three Tequila if you don't believe me.\"\n\n\"You wouldn't make shit like that up. Damn, that must be what the emergency Church is about. Thor called the meeting about an hour after Canvas and Company showed their furry asses on national television.\" I just shook my head; she was a wild one. \"Let me see you, Crash.\"\n\n\"She can't shift back; she's pregnant with twins. Changing forms while pregnant can cause a miscarriage. Rori's still fighting to save her baby. She'll be stuck in her wolf until she delivers, just like Heather is.\"\n\n\"I take it this isn't a social call. You need the Club?\"\n\n\"Yes. We expect that as soon as our location gets out, a bunch of wackos will show up. The ones who want to find a hot werewolf man to fuck, those we can handle. The problem will be armed men coming to kill us. Fundamentalists who think we're demons, people mad about missing people, or want to kill themselves a werewolf. I think it's a bad idea for werewolves to be at the gates, and Heather suggested asking the Club for help. The cuts and motorcycles, combined with a Sheriff or two, will make a big difference to us.\"\n\nShe nodded. \"I'll talk to Three Tequila while I'm waiting for the old man to finish. The Club owes a lot to your brother, and I suspect you had a part in this too. We'll call you back.\"\n\n\"Thank you.\" The conversation with Wolfman and Mighty Elk went a little better, with Wolfman showing his excitement at being around real Wolfmen. I gave them the flight information for our people arriving later that night at the airport, and he promised to pick them up in their vans and deliver them to us. \"We're bringing two more. Mongo and Three Tequila are on the way. They didn't want to call you in case of wiretaps. They get in an hour before your guys do.\"\n\nI put my head on Carson's lap; it would be good having my family around. A few minutes after we hung up, Melissa knocked on the door. \"The Sheriff wants to meet at the entrance to your land. He's not exactly thrilled to know you are here.\"\n\n\"Not thrilled as in he'd like us dead, or not thrilled because we're dropping a huge headache in his lap?\"\n\n\"The latter, I think. We should get going.\"\n\n\"I'll meet you downstairs,\" Carson said. I got up and trotted to the door. \"Where do you think you're going?\"\n\n\"With you,\" I said.\n\n\"I don't want you in danger. Didn't we just order the Pack to not be outside in wolf form? I don't like you going outside to pee in the woods, much less leaving our land!\"\n\n\"I could stay in the car,\" I pleaded. \"Having a pregnant female there might calm things.\"\n\nHe shook his head. \"The best thing to calm me is knowing you're safe, my love. I couldn't bear anything happening to you.\" I could see a tear starting to form. \"My brother is sitting at Rori's bedside right now, hoping his baby will live, and I can't do that again. Please, Heather. I love you; let me keep you safe.\"\n\nHis eyes were pleading for me to agree. \"Fine, I'll take a nap while you're gone.\"\n\n\"Thank you, my love. I'll be back soon.\"\n\nI watched as he climbed into a car with a driver and the two Secret Service agents and drove away. As I laid myself down in the dog bed in the corner, I couldn't shake the feeling of dread. Something bad was going to happen.\n\nCh. 59\n\nColletta Grimes' POV<br >White House Briefing Room\n\nI said a silent prayer of thanks to Luna that we had acted when we did. If not for the goodwill we had built up in the last few days, there would be no chance of managing the situation.\n\nAssuming the Government would cooperate in that, of course.\n\nThe FBI agents had delivered Frank and me to the underground White House entrance, where the Secret Service processed us through security. We still rated a six-person security escort as we headed for the elevator that went down to the Situation Room.\n\nThe meeting was already in progress; screens showed the live news coverage out of Arrowhead, while the senior FBI agent on scene, Senior Agent Smallwood, updated the group. \"Containment at this point isn't an option, Madam President. We've seen a steady stream of vehicles leaving the site through the back entrance, and we had no legal authority to stop them.\"\n\n\"You have the license plate numbers and makes and models,\" the Homeland Security Chief asked.\n\n\"It's a good thing we encouraged the visitors to leave,\" I told Frank. He squeezed my hand as we sat down at the far end of the table from the President.\n\nSmallwood nodded. \"Of course, sir. I sent a car to follow one of the larger vans; it is on its way to Minneapolis. My big problem right now is crowd control. I'm working with the Sheriff to keep the protestors apart. I'm worried the werewolves will respond with force if those idiots start running towards them with rifles.\"\n\n\"They will respond as any other group would when faced with armed trespassers with hostile intent,\" I said. \"I think we've already shown how effective that response can be.\" There was silence in the room. \"Of course, that is the last thing any of us want to see. Work with the Arrowhead Pack to keep the peace, Agent Smallwood. They aren't your enemy.\"\n\nThe FBI man didn't hide his feelings about us. \"Are you so sure of that, Madam President? I've had a few conversations with people on the Sons of Tezcatlipoca Task Force. There's a reason Chase Nygaard had to get the immunity agreement for him and Arrowhead. Fraud, identity theft, money laundering, and using raids that our agents DIED on to stage a heist? Who knows what else is out there with the other Packs.\"",
        "\"I signed off on that immunity because it was the right thing to do at the time,\" the Attorney General replied.\n\n\"And I've got people calling me up, wondering if their missing persons got buried on this land.\"\n\n\"We're getting distracted from what is important right now,\" the President said. \"The media is making a circus out of this, and it will get out of hand quickly if we don't act. Mr. Smallwood, what is your recommendation?\"\n\nHe hesitated for a moment. \"Surround and isolate, for their good and ours,\" he said. \"Take the time to properly investigate what these people have done, and go from there.\"\n\n\"Do the agents you have inside the Pack agree with that? I've read their reports,\" the FBI director asked.\n\n\"Anyone can put on a show. We're taking Colletta's word that Deputy Brighton was dying. It's easy to forget that one of their own bit him, and now he's like them!\"\n\n\"He was dying, and your people watched it all,\" I said. \"We've done everything in our power to limit the damage that madman caused. He tried to kill my daughter, and he did kill Rori's grandfather!\"\n\nFrank put his hand on my back to calm me down. \"We've been cooperating with the FBI and Canadian authorities from the time we discovered Jack Coffey's involvement.\"\n\n\"And before last week, you people stole and murdered and waged wars without us knowing,\" Smallwood said.\n\n\"Enough,\" the President said. \"Agent Smallwood, get back to work.\" His face disappeared from the screen. She looked to the Chairman of the Joint Chiefs. \"General, you've got men at Monogahela. Are the werewolves a threat?\"\n\n\"I think the only way they are a threat is if we go to war against them,\" he said. \"My Special Forces men rave about their experience and training. The men and women we pulled from their units as a precaution have stellar records. They have been on our side, and I'd like to KEEP them there. Hell, I'd like to see what a unit made up solely of werewolves could do. All reports are the men in the military hold back so they don't raise suspicions.\"\n\n\"And if we determine they are a threat?\"\n\nHe looked at me, then back at the President. \"We've developed the contingencies you requested, and I don't like it. I asked my SEAL Commander to tell me how big a force would be required to take down Monongahela. He said five hundred men would do it IF they had armor and artillery support.\" He paused to let that sink in. \"The Air Force is refusing to carry out the proposed bombings, as targeting civilian neighborhoods would be a war crime. You would have to declare war on the Werewolf Council, then declare all of the American packs to be unlawful combatants. That's what my legal advisors are telling me.\"\n\n\"Couldn't you use the National Guard and Air National Guard,\" the Homeland Security chief said.\n\n\"Not without violating the Posse Comitatus Act. Governors can deploy the Guard for law enforcement purposes in their states, but attacking remote settlements that pose no threat is not going to happen. Domestic law enforcement is not a DOD responsibility.\"\n\n\"We don't have controlling legal authority for wholesale roundups of populations,\" the Attorney General said. \"We haven't operated like that in America since Roosevelt sent the Japanese into camps.\"\n\n\"Are the Packs a threat, Valerie? You have agents in one.\" The President looked over to Valerie Grunwald, the Secret Service Chief standing against the wall behind me.\n\n\"I agree with the Chairman; I'd much rather work with them than defend against them,\" she said. \"Our office is not currently classifying any identified werewolf as a threat to you.\"\n\n\"The six agents around us and the backup team say otherwise,\" Frank teased with a grin.\n\n\"Given the reports from my people at Cascade, it's probably not enough to stop you if you had hostile intent.\"\n\nPresident Kettering just nodded. \"Is there anyone at the table who would support the issuance of an Executive Order declaring the American Werewolves a clear and present danger to our National Security?\"\n\nNo one spoke up.\n\n\"I agree. Military options are off the table.\" I breathed a sigh of relief, my heart still pounding after listening to the options under consideration. \"Homeland, FBI, and Justice, you are directed to perform investigations where you find probable cause a crime has been committed. You are NOT authorized to investigate anyone just because they have been identified as, or are associated with, a werewolf or a Pack. They are citizens and entitled to Constitutional protections. Is that understood?\"\n\n\"Yes, Mrs. President,\" they all answered.\n\n\"We're going to have to make a statement,\" the Attorney General said. \"We've got civilians shooting wolves and dogs, and it isn't far from there to shooting people.\"\n\n\"How does this play out politically,\" the President asked her Chief of Staff.\n\n\"It's delicate,\" he said. \"Right now, people don't know enough to react with more than fear. Stoke fears, and you're overreacting and impulsive; ignore it, and people think you don't care about their safety and are out of touch. I'd suggest a middle ground.\"\n\n\"Such as,\" the President asked. He explained his recommendation for the next several minutes. Finally, the President looked around. \"Ladies, Gentlemen, give Colletta and I the room,\" she said. Everyone stood up and grabbed their things. Valerie stayed behind with her agents, wondering what was going on. \"You too, Valerie,\" she ordered.\n\n\"Madam President, my agents cannot...\"\n\n\"Out, all of you.\"\n\nValerie hesitated, then waved the detail out of the room. \"We'll be right outside.\"\n\nWhen the door closed, it was just the two of us, plus I kept the link open to Frank. \"Agreements need to happen quickly, and that's best done leader to leader. We need each other on this,\" Laura said as she sat down next to me. \"I need more than your cooperation and openness.\"\n\n\"We have promised you both,\" I told my President.\n\n\"I need more if I'm to sell this as an alliance. The military wants you, all-werewolf units.\"\n\n\"We already have all-werewolf fighting units; they're called Packs. Generals aren't Alphas, and we aren't sending our people overseas to die at his bidding.\"\n\n\"I need something.\"\n\n\"Use what we discussed for me,\" Frank said.\n\n\"My mate is a retired DEA Director. Bring him back, maybe under Homeland, and create a unit for him to command. Let him meld the Pack and law enforcement training so he can hire part-time agents, or temporarily deputize volunteers to staff as required. He doesn't want a full-time gig, but he would be someone you can call on for major domestic cases. The public relations value of a werewolf team helping with search and rescue, kidnappings, and other high-visibility cases would be immense.\"\n\n\"I can support that for now. I want werewolves on my protection detail. Nothing says I trust you like putting my life in your hands,\" President Kettering added.\n\n\"I can ask for volunteers to undergo training. We've avoided that branch because of the background checks. Now I have some things I want.\" She raised an eyebrow. \"Amnesty for any victimless crimes like money laundering and identity fraud, and any werewolf-on-werewolf crimes; we don't need Justice crawling up our ass for werewolf matters we handled ourselves.\"\n\n\"There will be missing-person investigations, kidnapping reports...\"\n\nI nodded. \"If it involves humans, we will cooperate with the authorities.\"\n\n\"Done. Anything else?\"\n\n\"Recognition as an indigenous population, with the right to self-government on our lands. Nothing you already aren't doing for native Americans, but no casinos and no claims on hunting or fishing outside our declared Pack-owned lands.\"\n\n\"I can do that, but I must have one more thing from you.\" She looked down at her hands. \"I want to be a werewolf.\"\n\n\"What?\" Did she have any idea what she was asking?\n\n\"I've read all the reports, including what you told Deputy Brighton would happen. I've seen your mate, too. He's stronger, looks younger, and will live for a century or more beyond a normal human lifetime. That's what I want. Make me one of you, and I'll put my political career on the line to save your people.\"\n\n\"It's not that easy,\" I said. \"You're married.\"\n\n\"It's been over for years, but we keep up the public persona for political expediency. As soon as I win reelection, we'll get a quiet divorce and move on from each other.\" She looked into my eyes. \"I know I'll need to find a werewolf mate to make the change, and I'm willing to do that. Promise me you'll change me, and we will leave this room as friends and allies.\"\n\n\"And if I don't?\"\n\n\"Then I'll know I can't count on you fully and act accordingly. I need an answer, Madam Chairwoman.\"\n\nShe had me over a barrel, and she knew it. \"The change requires a male werewolf to claim you as his mate, and for you to accept him AND the change. I will arrange a time when you can meet all eligible males, as we did with females for Deputy Brighton. IF Luna matches you with a wolf, you can make the change. If not, any attempt would kill you, slowly and painfully.\"\n\n\"You can order one to mate me. Alphas have power.\"\n\nI shook my head. \"Not when it comes to our wolves and matings, those are sacred bonds. No one can order a wolf to initiate a mating with another, and we do not allow forced claims.\"\n\n\"Then one will have to take one for the team. I will not be weak, and I will not die as my mother did. Swear to me, Colletta.\"\n\n\"A lot can happen in three years, Colletta. We need to be her allies,\" Frank said in my head.\n\nI had no choice. \"When you are ready, I will do everything in my power to find you a mate and gain a wolf,\" I said.\n\n\"Good enough. Let's go back upstairs. I'll give the Attorney General the highlights of our treaty agreement and have her draft it up. The last part is between us.\"\n\n\"Of course, Mrs. President.\" We stood, and I shook her hand before going to the Oval Office.\n\nWe weren't there long. \"Follow my lead outside. We have a press conference in twenty minutes.\"\n\nMy mind was reeling as we made our way to the door leading to the Rose Garden. Rori's handling of the hostage situation and Deputy Brighton's bite would be the first thing most people knew about us. She had done everything she could, including risking her child's life, and I knew we had to play to that. My heart was breaking for her, and women would understand if we let them in. As soon as I turned my phone back on, I got Chase's text letting me know she was stable, but it would be a few days before they would know for sure if their child would survive. I told him to watch the news, and do what he could to bring the press in and move public opinion our way. We couldn't allow the crazies to dominate the discussion. \"An interview with the two of you wouldn't be a bad thing,\" I sent.\n\nFrank and I were waiting with the President for a joint news conference in the Rose Garden. I'd seen many a world leader on an official visit holding a press conference here, and now it was my turn. Frank held me to his side as I leaned into him. \"Don't be nervous. Look at one person at a time and smile.\" He was far more used to these things than I was.\n\nI was the Chair of the Werewolf Council. In a few minutes, I'd be the most visible werewolf in the world.\n\nIt would paint a huge target on my back.\n\nI listened to the Press Secretary on the other side of the door. \"The President and Chairwoman Grimes will make brief statements and then answer questions.\" Looking through the glass, I could see dozens of cameras and reporters waiting for us. \"Ladies and Gentlemen, the President of the United States.\"\n\nCh. 60\n\nColletta Grimes' POV<br >White House, Rose Garden\n\nI followed right behind the President, standing to her left and a step behind as she reached the lectern. The press corps was out in force, and there must have been thirty cameras pointed at us. \"Good afternoon, everyone.\" She waited a moment for the noise to die down. \"Today, we all watched in shock and horror as a hostage situation narrowly avoided a tragic end in northern Minnesota. A man with a grudge took the wife of a Sheriff hostage and demanded a peaceful group of Americans show their secret to us all. The man was a werewolf, as were the fifty-some residents of Arrowhead Lake under the leadership of Alphas Rori King and Chase Nygaard. Chase's mother, Colletta Nygaard, is standing with me today, representing Werewolves across our country and the world.\"\n\nEveryone was looking at me, and I nervously smiled and raised my hand in a wave.\n\n\"Werewolf Council Colletta Nygaard was here in Washington, conducting negotiations with my Administration for how to come out to us all without panic or violence. She and her people have cooperated in the investigation into Jack Coffey's criminal activities and provided invaluable assistance in our takedown of the violent Sons of Tezcatlipoca biker gang and their drug distribution operation. I am pleased to be here with Colletta as we usher in a new era of cooperation with her kind. Madam Chairwoman?\"\n\nI moved forward, embraced quickly by the President before I stood behind the lectern. \"Ladies and gentlemen, fellow Americans, you have nothing to fear from our existence. Werewolves have always been part of this country; we have been your neighbors your entire lives as we kept our nature secret from you. We have worked with you, studied with you, played with you, protected you with our military service, and served in communities as first responders. We ARE like you; we are Americans. We want the same things you do; freedom, security, education, a safe place to raise our children. We want to find love, raise a family, and watch our grandchildren play around us. The only difference between today and yesterday is that you've seen what we can become.\"\n\nI paused and looked out at the audience, wondering what they were thinking. \"If you look at me, I'm just like you. My DNA is indistinguishable from any other human. You cannot look at someone and think 'that is a werewolf' or 'that one is human' because there is no difference to find. We can shift into a wolf, something that happens first in our late teens. When we change into our wolf, it is under conscious control, and our minds are no different than before. We run, we love, we hunt, we play on four legs instead of two. When we want to, we change back. It doesn't matter what time it is, or what phase the moon is in.\"\n\n\"MAKE ME A WEREWOLF,\" a man in back yelled.\n\n\"Make you a werewolf. It's not that simple,\" I said. \"There is one way that we are dangerous. If a human is bitten by one of us in our wolf form, the bite is fatal. Recently we have found a way around that, but ONLY if we find a werewolf mate for the person and have the right medical care. Deputy Mark Brighton, and his K-9 Max, were bitten by Jack Coffey during his escape from the store. The bite wouldn't affect the dog; he's recovering from his injuries. We knew Deputy Brighton was going to die unless we intervened.\" I had to say this right; a wolf would have killed him, but wolves saved him. \"We gathered every single female werewolf from around the world, hoping that he would find the ONE person destined to be with him forever. We got lucky; she saved his life, and he is now one of us.\" There was some clapping in the crowd. \"That doesn't mean it will happen again. For centuries we have lived among humans, and the penalty for biting a human has been summary execution. We have not, nor will we ever tolerate a werewolf intentionally harming a human.\"\n\n\"Has it happened before,\" one of the reporters asked.\n\n\"It's rare and is quickly handled. We kept our secret as fear can cause both of our people great harm. We have lived in peace, and we want to keep living in peace. As we speak, there are people in the woods with rifles, thinking they do God's work by shooting wolves. Let me speak plainly- if you see a wolf, it's a real wolf, not one of us. No werewolf in the world would risk being out in his wolf form in the climate of fear and panic that is spreading right now. Those hunters are killing protected species or someone's pet. You're not helping anyone.\"\n\nThe President moved towards the microphone, and I moved back. \"The Attorney General and I wish to make a few things perfectly clear. Werewolves are humans under the law. They are Americans, with the same Constitutional rights that you have, and the same protections as anyone else. We will not tolerate violence or discrimination against them. I would not be standing here next to the highest-ranking Werewolf in the world if I thought she wasn't representing our values.\"\n\nShe moved back, and I thanked her before continuing. \"I'm sure you have questions, so I will give you a few basic facts about us. We believe our wolves have been given to us by our Goddess, and that gift passes down in a family line. We live a long time; one of my colleagues on the Werewolf Council was a Doctor in George Washington's army, and I remember reading the newspaper articles about the Civil War when I was in school.\" There were gasps at this. \"We live a long time, but we have a difficult time conceiving. We are lucky to have one pregnancy every fifty years or so. As a result, our numbers are stable but small. There are fewer than ten thousand of us among you.\"\n\n\"I don't think that number reassured many of them,\" Frank sent.\n\n\"Family is the center of our life, and the Pack is the social and legal construct for that. Packs are headed by an Alpha pair, with Betas to supervise, and normal Pack members. The close social interactions form strong bonds. You saw one such Pack, Arrowhead, on the news. The entire Pack risked their lives by going out to see that madman, not knowing what he would do. Alpha Rori shifted for him, knowing that she might lose her baby, but she couldn't watch a hostage die if she refused. For werewolves who are pregnant like I am, shifting is too risky to consider. I can't imagine what my son's mate is going through right now.\"\n\n\"How is Rori,\" a woman in front asked.\n\n\"Stable, and we're praying for her to heal and keep her child.\"\n\n\"You can shift into wolves that can kill us with a single bite, and we don't know who you are,\" a man asked. \"Why shouldn't we fear you?\"\n\n\"You kill what you fear and don't understand what you are doing,\" I said. \"Why shouldn't we fear you? Jack Coffey hated my daughter-in-law and her family. He fled from our justice and left his money in his car, so all he had left was fear. He thought that by making the Arrowhead Pack shift into their wolves, that human mobs would move to destroy them. I am happy to see that has not happened. The people who know Rori and her Pack count them as friends.\" I wiped a tear away. \"My entire life, the big rule was not to do ANYTHING that would risk humans finding out about us, because the legends of monsters would spur you to destroy us. We have no desire but to live in peace with you as neighbors, customers, citizens, and friends. The more you learn about us, the less room fear and hatred will have to operate.\"\n\n\"WHERE ARE THE VAMPIRES,\" a man on the right yelled.\n\nI laughed. \"I'm not aware of any outside Hollywood,\" I said.\n\n\"What now,\" a reporter in front asked.\n\n\"I'll take that,\" President Kettering said. \"Now, we all take a deep breath and relax. There is no danger, no crisis, only an opportunity to work together and build a brighter future together.\"\n\n\"I look forward to a new era of cooperation between our peoples,\" I said.\n\n\"That is all. Thank you for coming,\" President Kettering said. She put her arm around me, and we raised our hands, waving to the crowd, then walked off to the Oval Office together.\n\nCarson Nygaard's POV<br >Cascade Pack Entrance\n\nI was hoping for low-key, but we rolled up to the main road to find three Sheriff's Department vehicles blocking the road with their lights on. \"Overkill,\" Agent Melissa Deharty said as we pulled to a stop.",
        "\"Time to go measure dicks,\" Agent Pratt said before he got out.\n\nI let them go first, showing their badges before I got out and followed them. My driver stayed next to the SUV, but I would keep him linked into the conversation along with my Betas. Sheriff Mike Caldwell stood at the edge of the road, two Deputies behind him. We'd talked a few times over the years, but we weren't friends. \"Thank you for coming, Sheriff,\" I said as I stuck my hand out.\n\n\"You're werewolves,\" he said as he kept his hands behind his back.\n\n\"All my life,\" I responded. \"I asked to meet with you so we can head off any problems that may come up as a result of our kind's exposure today.\"\n\n\"What kind of problems?\"\n\n\"Protestors, trespassers, hunters, end-of-world wackos, religious extremists, furries...\"\n\n\"Furries?\"\n\nI nodded. \"There are people out there who find sexual gratification in dressing in animal fur and pretending they are werewolves. I bet dozens are on their way here thinking they'll try the real thing.\"\n\n\"Jesus,\" he said. \"I haven't got staff for this!\"\n\n\"I'm not thrilled by people taking potshots at my people either,\" I said. \"We'll do our part to keep the tensions down, but I need your cooperation in keeping them off our land. It's all marked with no trespassing signs, but you can't fence thousands of acres to keep them out.\" I looked off towards the foothills. \"What I'm most worried about are the ones with guns thinking they can kill them a werewolf. We are more than capable of defending ourselves from them, but I'd prefer you keep them away or drive them off our land before someone gets hurt.\"\n\n\"Aren't you running around as wolves?\"\n\n\"I'm not allowing it; too dangerous for both sides.\"\n\nHe nodded. \"When do you think this will happen?\"\n\n\"Seattle is only a couple hours away, Sheriff.\"\n\n\"Fuck.\" We both knew what that meant. Seattle was a whole different way of life than Eastern Washington. It was 'healthy breakfast' country; fruits, flakes, and nuts. He turned to his deputies. \"Get ahold of Public Works and shut down this road at both ends. Johnson, you stay here and stay in communication. I'm going to see who else I can get to help in this mess.\" He looked at me. \"Is there anywhere else I need to worry about?\"\n\n\"We're the only pack in the state,\" I said.\n\n\"Aren't I fucking lucky then,\" he said. \"Call 911, don't kill any of those idiots unless you have to.\"\n\n\"We'll be staying inside and monitoring electronically,\" I said. \"We don't want to kill anyone either.\"\n\n \n"
    ],
    "authorname": "partwolf",
    "tags": [
        "alpha",
        "beta",
        "luna",
        "mates",
        "pack",
        "werewolf"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/claiming-treasure-ch-55-60"
}