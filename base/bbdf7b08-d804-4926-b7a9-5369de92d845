{
    "title": "Ideal Suburbia Ch. 09",
    "pages": [
        "This is a series of stories that are a sort of sequel to two text-adventure games. Each installment is a complete story on its own, but for a full understanding, the reader may want to start with Chapter 1.\n\n+++++\n\nOver the weekend, I really buckled down on the at home part of my new fitness regime, as assigned by my personal trainer Courtney. As I was doing pushups in my back yard, I thought about the obvious fact that her business wasn't doing as well as it ought to. The thought irritated me. I liked her, even if I was a little afraid of her. I also hate to see a good product go unappreciated. It's the salesman in me.\n\nI resolved to see who I could send her way as new clients. Word of mouth is always the best sales tool for businesses like hers anyway. Also, if I got her enough new clients, she'd probably appreciate it. I like doing things to make beautiful women appreciative.\n\nI started with work. I talked her up to a number of co-workers, focusing mostly on the ones that were not in bad shape, but not workout rats either. With most people, I concentrated on what good results I had felt. I also added in a bit of reverse psychology along the general lines of, \"she'd be great for you too, but I'm not sure you could take her intensity.\" I made sure everyone knew to mention me to Courtney if they found the intestinal fortitude to sign up. I even felt like there might be a nibble here and there. I resolved to use it as one more incentive to keep up with the pushups and other homework, so I could act as a walking billboard.\n\nBut my main focus that Monday was on my dinner sales call with Gretchen Williams. No one, not even my boss Cathy, had had any luck getting her company's business, so as the promising new guy, I'd been passed the folder on this Great White Whale. So far, I was feeling my way into an Earnest Young Man In Need of Guidance From (slightly) Older, More Experienced Mentor role. I'd had success with older women using variations on that theme a number of times, though usually not the kind of success I was looking for here. Attractive as I found Gretchen, I had all the reasons in the world to focus only on her business, not her. That said, I had resolved to choose a restaurant from the more romantic end of my list to take her to. Puppy dog eyes and a need for guidance and support would go over better in soft lighting and quiet music than they would in a more frenetic venue. Or so I hoped!\n\nI spent that afternoon at my desk, reading over my predecessors' notes on Gretchen, my own notes, as well as my research into what she had asked me and told me at our first meeting. That, along with a fresh shirt and a quick pressing of my suit, had me as ready as I expected I was going to be.\n\nWhen I arrived at her corporate offices, I found that I would not have to cool my heels much this time. Gretchen was already in the lobby. I had only to wait while she finished hauling an older woman over the coals about something. The older woman looked like a fairly high level executive herself, so I winced as I thought about about her department, upon whom this shit would roll downhill all week.\n\n\"Problem?\" I asked innocently, as we shook hands after Gretchen turned to meet me.\n\n\"Hmm? No. Well, yes, but sadly for you it is not some disaster caused by your competition where you can swoop in and save the day.\"\n\n\"My momentary dreams are shattered,\" I replied, dead-pan. For this evening, I had to project both confidence and charm, as well as inexperience and curiosity. In short, I needed to come off as the perfect clay for molding.\n\nShe laughed. \"C'est la vie! Your arrival is well timed, though. Let's go. I could use a stiff drink.\"\n\nShe let herself into my car, and I reflected idly to myself that remote keyless entry had done more to eliminate male gallantry than even the most prickly forms of feminism.\n\nAs we were being seated at my chosen restaurant, Gretchen looked around at the place with a skeptical eye. As the host left us, she turned that skeptical eye on me. \"Well, this place is certainly... atmospheric.\"\n\nI had perhaps pushed a bit hard on the romance button. The music was violin music. LIVE violin music. A good 80 percent of the tables were for two. Many, including ours, were in intimate little spaces providing the impression or reality of privacy. Long candles burned phallically on the tabletop.\n\nI looked around the restaurant, hiding the skittish feeling I had inside with an irritated expression on my face. \"I've never been here myself,\" I explained, now glaring at the sumptuous upholstery on the walls. \"I have a co-worker who suggested it to me when I told him I was taking you on a dinner call,\" I lied easily. \"I had not figured out until right now that he is a 'Practical Joker'.\"\n\n\"Still, here we are. I imagine the food will be good,\" I went on. \"If it's not, look for a murder mystery in the papers tomorrow.\" I reached for the wine list, but she dismissed it.\n\n\"If you want wine, that's fine,\" she said, looking at the cocktails on the menu. \"I'd prefer some real drinks.\" I readily set side the wine list that had looked scarily incomprehensible at first glance, and perused the dinner menu. The lead waiter on the team that would serve us that night appeared and Gretchen ordered a Whiskey Sour, while I chose a variant they offered on my usual Manhattan. We made idle chat about the news of the world until our drinks appeared and we made the first half of them disappear. At that point I worked in a joke about the character of the restaurant and again referenced my doomed fictional co-worker. I solicited ides for revenge.\n\nGretchen laughed heartily. \"I have to say that I was not sure what to do with you when we walked in here and saw all this,\" she said with a grin, indicating the late-modern french boudoir decor. \"I mean, even if I was the sort to let a romantic overture affect my business dealings, that idea should have been tried by your boss Cathy back when she had my account.\"\n\nWhat?\n\nGretchen leaned forward to clarify. \"You and I play for the same team.\"\n\n\"Ye..., er, what?\" I was a bit less confused than I appeared, but this was a very unexpected development and I was temporizing while trying to reevaluate... everything.\n\n\"As I feel sure is the case with you too, I prefer women,\" Gretchen went on mercilessly, but with the same grin as she pressed the point with an evil grin.\n\nI once again referenced my fictional, practical joking co-worker. \"I wonder if that bastard knew...?\"\n\n\"I doubt it. I don't make a big deal about it, and I certainly never told anyone at CKE during any previous attempts at getting our business,\" she replied. She cocked her head for a second, then went on with another wicked smile, \"Though maybe I should have told Cathy. That might have been interesting. She really is hot, isn't she?\"\n\nI may not have been as confused as I was pretending to be, but I was still off balance. \"Oh, hell yeah,\" I let slip out.\n\nGretchen laughed again, harder. \"Well, we DO have something in common! Shall we have a discussion on how much we both like your boss's tight, tasty body?\"\n\n\"How about,\" I countered, a note of genuine panic entering my voice, \"we go over the answers I have for you about what we discussed last time?\"\n\nGretchen relented and we got through the first course on safe business topics. Inwardly, I was both relieved and cursing myself. I was relived to escape her teasing, but cursing myself because a plan had simultaneously entered my head; a hare-brained scheme if you will, but I liked it. Stupid as it was, I was already sure I was going to try it. But that meant that I would have to bring this conversation back around to the general subject matter that I had just escaped.\n\nThe food was indeed delicious. I knew it would be. The reviews had been nigh universal on that. She was well into her second Whiskey Sour before I finished my first Manhattan. As we neared time for a decision about desert, I managed to insert the subject of Cathy back into the conversation. After Gretchen rose to the bait, I let her actually goad me into a discussion of Cathy's looks. Despite myself, Gretchen eventually managed to embarrass me again. But it was the opening I was looking for.\n\n\"How about instead a piece of cake that my personal trainer will make me pay dearly for,\" I suggested, \"we go somewhere else for a nightcap?\"\n\n\"The cocktails are actually pretty good here,\" she replied, \"but where did you have in mind?\"\n\nI named my favorite strip club.\n\nShe repeated the name skeptically. \"Is that the kind place I think it is?\" she asked archly.\n\n\"Probably,\" I said puckishly. \"As you said, we play for the same team. Maybe we go there and hang out like teammates. I'm pretty sure that eye-candy is extremely low-carb....\"\n\nShe bought the idea. She fucking BOUGHT it!\n\nAs we drove from romantic restaurant to raunchy strip club, I was a bit like the dog who caught the mail truck. What the heck was I supposed to do with this? Gretchen didn't help.\n\n\"I've never actually been to one of these before,\" she said. Her voice was filled with anticipation, but overlaid with the distinct impression that she also did not know how I'd talked her into going to one now.\n\n\"I've been here a couple of times,\" I admitted as I pulled up to the valet, who gave Gretchen a thorough glance as he helped her out of the Acura. \"It makes for thrills.\"\n\nWe were both still dressed in business attire, of course, which put us in the distinct minority, but what drew attention to us was Gretchen. Any female customer gets a glance in a club like this, but as was her style, Gretchen's traditional business suit was expertly tailored to subtly but very effectively accentuate her already excellent figure. An elegant knock-out like her drew at least a sidelong look from every man in the place, and much more than a simple glance from most of them.\n\nAs we found our way to a table, she murmured to me, \"I feel like an antelope among a pride of lions...\"\n\n\"Nah,\" I replied confidently. \"You are more of a mama grizzly and they are a bunch of wolves. They might be hungry, but they would not dare.\" She laughed at that and relaxed a little.\n\n\"We don't sit by the stage?\" she asked.\n\n\"Not unless you want the strippers to drag you up on it with them and make a spectacle of you,\" I replied.\n\n\"The view is fine from here,\" she said firmly. As she looked up at the girl dancing on stage right then, she added, \"It's quite fine actually.\"\n\nA waitress Tina came over to get us drinks. She was not one that I knew, and that was good. I really did not come here that often, and I didn't want it to look like I did. After we placed our orders, Gretchen excused herself to the ladies' room. I put my hand on her forearm as she rose. \"Fair warning. I'm pretty sure the ladies' restroom will be located inside the ladies' dressing room.\"\n\nWhen she returned, she was little wild-eyed. \"Thanks for the heads up...\"\n\n\"Did you see anything you like?\" I asked slyly. Gretchen was still little distracted and didn't catch what I said. I tired again, slightly differently.\n\n\"I meant, do you see anything you'd like?\" I asked, waving around the room at all the workers.\n\n\"What? We just order a dancer, like from a menu? Most of these women won't want to talk to me anyway. I'll just look them over while they dance for you, right?\" Amazing, this alpha woman was suddenly as cowed as most men are the first time in a place like this!\n\n\"Actually, you can 'order' through the waitress, if you see a dancer that really catches your fancy,\" I said calmly, confidently. \"But it can be simpler to just wait and see who chooses to approach a man with a woman. As for them not being interested in you,\" I went on with a smile, \"some of these dancers are full-on lesbians. They just act a good game around men. A bunch are truly bi-sexual, though who knows how many. And yes, most are fully straight, and won't be interested in you, except as a means to get money out of me.\"\n\n\"Tell me,\" I went on, relaxing back in my chair and looking around casually, \"who are the women who meet your fancy? Let's play a game.\" I was acting totally in control, wise beyond my years, etc., but inside, I was actually regretting this. The whole thing could go badly wrong. \"If there is someone who appeals to you, I'll have our server send her over. If the dancer approaches ME, we chat for a few, maybe buy her a drink, and send her on her way. But if she hones in on YOU...\"\n\n\"What? If she hones in on me, what?\"\n\n\"To be honest, I don't know. But I'll make sure that she makes sure that you sure have fun.\"\n\nGretchen looked around for a while. \"That one?\" she said at last, pointing out a tall, evening gown-wearing number with curves of modest size, but elegant ratio. Not bad. I waved at our waitress. A quick whisper and a five dollar tip to her, and she scuttled off. We saw her slide up to Gretchen's first selection and pointed to us. The dancer looked at us and immediately began to make her way over. So far so good.\n\nBut she came and sat directly upon my lap. She actually ground her hip against my cock as she told me hello, then turned to Gretchen. \"Hi there, darling. What do you want me to do to your man?\"\n\nDamn. Well, I didn't expect a first try hit. I was about to execute the planned chat, tip, and discard routine, when Gretchen replied, \"Just a lap dance. I want to watch this time.\"\n\nI looked at her and she smirked. The dancer, whose name escapes me, just smiled and rose to her feet. The gown shimmered off her to the floor, and she handed it to Gretchen, who may or may not have smelt it when the dancer turned back to me, wearing only a white undergarment that aspired to be a thong when it grew up. She laid her arms over my shoulders and swayed before me. \"So your lady caught you going to strip clubs, and decided to come along?\" she asked me. \"Well, it's up to you. Do you want her to see a chaste and innocent dance, or do you want me to blow her mind... and yours?\"\n\nWe were out in the well-lit main room, so I knew no one was getting too terribly mind-blowing here. I drew a breath and whispered, \"Get wild for her.\"\n\nWeird as the situation was, I enjoyed the dance, and it wasn't half bad. Her body was really quite good, and both I and Gretchen certainly enjoyed the view. I could see Gretchen's enjoyment because I was watching her almost as much as I watched my nearly naked lap ornament. Toward the end of the song, the stripper was grinding herself into my crotch while smiling (I assume) at Gretchen, who did not take her eyes off of her. The dancer slid her hand back and between her ass and my lap and fondled my appreciatively hard cock through my pants. She handled it quite comprehensively, for being in the well-lit area of the club.\n\nWhen the song ended, I paid her, and tipped her well. She rose, dressed, and leaned down to whisper in Gretchen's ear, before slipping away. I shifted in my chair as Gretchen stifled a laugh after her departure. \"That wasn't the entertainment I had in mind for you,\" I started.\n\n\"I wanted to see the procedure,\" she replied.\n\n\"What did she say to you?\" I had to ask.\n\nGretchen smiled, \"That I should forgive you, my hubby, because I don't want to lose access to that anaconda in your pants.\"\n\n!\n\n\"Um, strippers tell guys they are well-hung all the time,\" I coughed.\n\n\"Yes, but she assumed I knew full-well how well you are equipped, and still said it to me. Tell me, how well-hung ARE you?\" Gretchen asked with wide, innocent, evil eyes. I chose discretion over valor, a choice with which I was largely unfamiliar, and decided not to answer.\n\nGretchen's next two choices unfortunately also made the wrong choice. Neither got invited to give me a dance, though.\n\n\"So, it is usually this hard to find a girl?\" she asked querulously. Querulous is not an adjective you want to use to describe your client.\n\n\"When you are picky and have high standards, yes,\" I replied honestly. She relaxed a bit, and stopped making choices so quickly.\n\nAnother round of drinks came, and were nearly gone, when Gretchen's eyes narrowed and she flagged our waitress. \"We'd love it if that one could come over,\" she said, pointing. The waitress was already moving when I saw who she fetching, and my heart sank. It was Monique, a dancer who had danced for me before, to rather spectacular result, but whom I had not seen since. She looked up, saw us, smiled at me and waved, before making her way toward us.\n\n\"I take it she's a friend of yours?\" asked Gretchen acerbically.\n\n\"She's danced for me before. And she recognizes me. I don't think she will pass our test, which sucks because she is both gorgeous and good.\"\n\nBut Monique arrived and without asking, flowed like a satin-covered river into Gretchen's lap. Monique pulled her arms around her and cuddled into Gretchen's embrace. \"I'm Monique,\" she breathed, stroking the line of Gretchen's jaw. Gretchen rather bemusedly gave her name as well.\n\n\"Why didn't you tell me about her?\" Monique asked me pointedly. \"She's dynamite!\"\n\n\"Gretchen is my client, Monique. Behave!\"\n\n\"Don't listen to him about behaving,\" countered Gretchen. \"After all, I AM the customer.\"\n\n\"The customer?\" asked Monique brightly, while staring deeply into Gretchen's eyes. \"Well you are certainly Miss Right as far as I'm concerned.\"\n\n\"I like her,\" said Gretchen to me, her hand sliding easily down to stroke Monique's satin nightgown-covered hip. \"I'd say you have excellent taste in dancers.\"\n\n\"Scotch and soda, Monique?\" I asked with a provisionally relived smile, signaling our waitress.\n\nWe had a nice conversation for a while, even though I was hardly included. The two women mostly talked amongst themselves, always skirting the edge of full-on feeling each other up. If my earlier lap dance had gotten me worked up, it was nothing to the raging hard on I was experiencing from just watching them flirt.\n\n\"So Monique,\" I said, sliding my chair over close to them. \"I'd love for you to take my client here down the hall to the back and introduce her to your skills with lap dances. Can we make that happen?\"\n\n\"Hmmm,\" she smiled. \"Lap dances are what I do... but no.\"\n\n\"No?\" I blurted.\n\n\"No?\" asked Gretchen, puzzled and sounding a little hurt.\n\nMonique just cuddled harder against her. \"No. This little woman deserves a trip to the Champagne Room.\"\n\nI was confused. \"When we talked about it before, you told me that you don't do the VIP thing,\" I challenged her.\n\n\"Well, not with guys, anyway,\" laughed Monique. \"We were not discussing smoking hot brunettes with soft hands and hard bodies in that conversation.\"\n\nI shook my head and looked at Gretchen, whose hand had slid around to rest more on Monique's ass than her hip now. \"So what do you think? Want to have Monique take you away to some place private and really show you why this industry exists?\"\n\n\"It's what you conned me into coming for, isn't it? I suppose I ought to see it through,\" sighed Gretchen, before caressing Monique's elegant jawline in return. \"And I find I've really become rather into the idea over the last few minutes.\" Monique rose, and grasping Gretchen's hand, helped her out of the deep chair.\n\n\"Come on,\" said Monique to me, as she stepped toward the hallway leading to the back room and the Champagne VIP section as well.\n\n\"Me?\" I blurted. \"The idea is to entertain HER. We aren't a couple.\"\n\n\"You're paying,\" replied Monique sternly. \"You need to be at hand if Gretchen decides you need to pay more!\"\n\n\"Oh come on along,\" added Gretchen, who I reflected had had five cocktails, \"since you are the one paying, you might was well make sure I get your money's worth. How crazy can it get?\"\n\nMonique laughed and tickled her under her jacket. \"Oh, let's see!\"\n\nI followed along, secure in the knowledge that tonight was going to leave me with an epic case of blue balls.",
        "Monique swept into the champagne room lobby, whereupon she presented my credit card to the head bouncer, who did look fairly surprised to see her in there. He then looked at Gretchen, looked at her again, really taking her in, then shot a look of grudging respect at me. I smiled back weakly. The blue balls were indeed going to be fulsome and sore tonight. Financials provisionally handled, the two women went down the corridor, hands on each other's asses, with me in their wake. Those really were two high-class asses, walking in front of me. I decided I might as well enjoy acquiring my blue balls. We entered the last alcove on the right, and Monique allowed the double thick heavy velour curtains to close behind us. The heavy tip I had laid on the bouncer was what Monique had quietly told me I needed to give to ensure no one but a waitress came to check on us.\n\nThe small room was dark enough to provide atmosphere and obscure any small flaws a dancer might possess, but light enough to give a comfortable view of the entertainment. There were two seats: a small couch and a large armchair opposite it. Monique led Gretchen to the couch and invited her to sit, while I obediently went to sit alone in the chair. Monique stood before Gretchen and began to dance, swaying sultrily before her, turning around from time to time to give her a full view, and incidentally to sneak a smile at me on occasion.\n\nGretchen really had taste in women that I could admire. Monique was a stunner. Her shoulders were straight and smooth, and combined with her wide, delicious hips gave her a lushly hourglass figure. Her firm, bountiful breasts also contributed to the timepiece look. They looked almost too good to be real, but I had the privilege to know for sure that they were indeed natural wonders. Her belly was smooth and just little rounded, with a deep, enticing belly button that was just the tiniest bit off center.\n\nGretchen looked up at her with a rapt expression. Monique slipped first one, then the other spaghetti strap of her nightgown off her shoulders and kept the garment up by pressing it against her breasts. \"Put your hands on my hips, and slide this off me,\" breathed Monique. Gretchen caressed those lovely hips for a bit, before bunching the fabric of the gown up in her hands and tugging softly downward. Monique swayed with the music and released her hands. The garment slid down and off her to the floor. Our entertainer threw her head back and her arms above her head and undulated alluringly in a circle before my client.\n\nShe then bent down and picked up her gown. She turned to me and slowly dragged it over my body. \"Hold this for me, will you?\" she asked in a loud voice, then bent over to whisper, \"remember I said I don't come back her because I won't do anything to a guy back here that I wouldn't do out in the main rooms? The things I'm about to do to this luscious piece of ass you've brought me would never fly out there.\" She turned and briefly ground her ass against my lap and the rock-hard cock that strained there before undulating back to Gretchen. \"He deserved a little taste. After all, he is paying.\" They shared a laugh before Monique crawled onto the couch, straddling Gretchen and began to caress my client's face with her boobs! She then lifted Gretchen's hands and placed them on her beautiful tits, encouraging her to fondle them and begin to suckle as well. When Gretchen finally came up for air, Monique got up to her feet and then down to her knees as she slid down her body to the floor.\n\nMonique looked up at Gretchen and said something inaudible. Gretchen laughed, but it turned into a gasp as Monique placed her hands on my clients knees, then slid them slowly up her inner thighs, until they slipped up under that perfectly tailored business skirt. Way under that skirt. Monique's hands worked as Gretchen's eyes grew wide and she quivered. But Monique was just getting started. Her grip shifted under Gretchen's ass and lifted just enough for her to expertly slide that skirt up practically to Gretchen's waist, revealing a pair of black lace panties that while they were not erotic in design, they were not particularly large, either.\n\nGretchen looked at me, back down to Monique, and back up at me with a scandalized grin on her face. Then Monique swiftly buried her face in Gretchen's crotch, and Gretchen's eyes practically rolled back in her head. Monique began to rain down a series of soft breaths and kisses of varying intensity on that panty-clad crotch, until Gretchen was squirming hard. Monique looked up and declared, \"Not enough.\"\n\nShe slid her fingers under the panties and in a flash had them off Gretchen as well. My wildest agenda for the day had not included 'see my important client's vagina', but there you go. The best laid plans of mice and men oft go astray. I did not see her tightly trimmed bush for long, because Monique had returned her face to block my view and begin an earnest assault with lips and tongue. An assault which produced several waves of intense customer satisfaction in Gretchen in remarkably short order.\n\nWith Gretchen gasping for air and a semblance of mental order in the wake of that oral assault, Monique rose and danced a bit longer, slipping her own thong off as soon as Gretchen's eyes uncrossed. Now utterly naked, Monique again slid onto Gretchen, facing her. This time, Gretchen's hands slipped between Moniques legs and along her completely clean-shaven vagina, and it was Monique's turn to moan. As she did, Monique's hands now began to explore the curves of Gretchen's chest, kneading deeply and with increasing enthusiasm. As her own breath became shallower, Monique began to fumble at the buttons on Gretchen's blouse. Soon it was fully unbuttoned and spread wide open, giving Monique (and me) a lovely view of her lacy but conservative black bra, and the impressive set of breasts that it contained. Her hands returned to massage those lovely tits for a bit, but then she decided to slip both Gretchen's jacket and blouse off over her shoulders. Reluctantly, Monique pulled Gretchen's questing hands from between her legs so she could slide both Gretchen's shirt and jacket completely off. Then she swiftly pressed her tits back into Gretchen's mouth while reaching behind and unhooking her bra, slipping it off in a heartbeat. Now my client was fully exposed to Monique and to me, wearing nothing but her skirt, and that was riding up around her waist. Gretchen's boobs were nearly as good as Monique's. They were firm, generous handfuls at least, with dark round aureoles and large nipples that signaled clearly their interest in the goings on. I quickly lost sight of those delicious nipples, as Monique pressed her own magnificent mams against Gretchen's. The two women writhed against each other, both delicately exploring the others exposed curves with their fingers.\n\nMoaning, Gretchen slid her hands down to grope Monique's taut ass, which clenched happily in response to her explorations. After a moment of this, Gretchen clamped hard on those cheeks and began to lift Monique upward. Monique climbed up to stand on the couch astride Gretchen and lowered her pussy to her face. Gretchen slid her hands down and up between those lovely legs before grasping Monique's ass in a now apparently desperate grip. She leaned in and began to return the earlier favor Monique had given her. A favor that was obviously much appreciated.\n\nHad I been watching this on a video some late, lonely night, I'd have jacked myself senseless long ago. As it was... blue balls.\n\nMonique's knees nearly buckled as this assault brought on the desired result, and Gretchen showed surprising strength in her grip on her ass, keeping Monique in position so that Gretchen could fully complete the job. As Monique's moans began to lessen, Gretchen pulled her down to cuddle naked in her lap. The two drew deep breaths in recovery as they fondled each other all over and kissed, each probably tasting their own juices on the other's lips.\n\nMy eyes were in heaven. The rest of my body was in the other place.\n\nMonique sat sideways in Gretchen's lap and her fingers began to work their way back between Gretchen's legs again! Gretchen gabbed her wrist almost desperately. \"Please, no! I'm mush right now. Give a girl a chance to recover.\"\n\nMonique made a show of reluctance as she withdrew her hand and Gretchen smiled, breathing hard and looking around for her cocktail. \"Good,\" said Monique, \"You rehydrate and recharge. Meanwhile I'm going to go put on a show with him for a bit.\"\n\n\"Him? I thought you were here for me?\"\n\n\"Yes, but you just said you are recovering. And he did bring your glorious body to me, so I'm thinking it's a extra bonus for me, a finder's fee for him, and one hell of a show for you!\" Gretchen just shook her head in amusement. \"What?\" asked Monique, twisting on the floor to look at Monique, her sudden lack of progress toward me after the unexpected approach just adding to my misery, \"You don't like cock AT ALL? Wait 'til you see his. It's a doozy.\"\n\nGretchen waved that off. \"I've had sex with guys. I just never found that they could do it for me like a good woman. Certainly not like you!\" she added in a flattering tone.\n\n\"You'll get all I have to offer, don't you worry,\" replied Monique with a shrug at Gretchen's professed lesbian tastes. \"Gather your strength.\" She resumed her crawl across the floor to me, placing me in a near panic state of anticipation as she approached. She reached me and made short work of unbuttoning my shirt, as I eagerly aided her by pulling off my tie. With my chest exposed, Monique ran her hands down my pecs and belly to my fly. She slipped open the catch and slowly let down the fly. \"Last time I danced for him, he wasn't wearing underwear like he is this time,\" she said over her shoulder to Gretchen.\n\n\"Should I be honored?\"\n\n\"No. You should be disappointed,\" laughed Monique, \"But I'll fix that for both of us. She reached into my shorts and pulled the waistband, letting my agonizedly teased cock pop free. She then tugged downward and I lifted my hips so she could tug both trousers and underwear down to pool around my ankles. She twisted between my legs and cradled my erection in her hands like she was a product model on a gameshow to display me to Gretchen. \"Come on, you may not agree it's as beautiful as I think it is, but you cannot say it's not impressive!\"\n\nGretchen started at my cock for a moment with an unreadable expression. \"Eh. One of my vibrators is a lot bigger than that.\"\n\nI could still be surprised by the things I was hearing this evening, apparently.\n\n\"Sure. One of mine is like that too,\" chuckled Monique. \"But I'll bet that your FAVORITE one is just about this size!\"\n\nGretchen just stuck out her tongue at Monique, who snapped back, \"Don't try to tease me. I'm going to want more of that in a few minutes.\" Gretchen just licked her lips in reply, her awesome tits heaving as she kept breathing deeply, still recovering.\n\nMonique smiled to herself as she turned back to me and began a series of licks and sucks on the head of my cock in an effort that momentarily caused my perception of the world to narrow to nothing beyond her head and my lap. Somehow I managed not to instantly blow my load on her face, but it was a near thing. Having passed the crisis point, I relaxed back to enjoy the act, with a fat, dumb, happy expression likely adorning my face.\n\n\"Hmmm. Looks like it's not just me who approves of her mouth,\" Gretchen suddenly observed. My view of the world suddenly zoomed out and I perceived that here I was, getting rather stellar head from a naked stripper, while my client watched, splayed out nearly naked across from me, sweat all over her lovely breasts and her legs still spread wide.\n\nThere was no way this could get any more deliciously weird, and with that thought, there was no way I could stop this orgasm a second time. I gasped a warning, and Monique slipped me from her mouth and let the main force of my orgasm jet itself across the bountiful valley between her tits, as it had the first time she had pleasured me. But this time, she bent to suck the last of me dry, garnering a small final spurt from an aftershock that slid into her mouth as she cleaned me up.\n\nThen she rose and turned to Gretchen once more, her breasts spattered with my cum. She wiped up a big splash and sucked it off her finger with a loud, \"mmmm.\" Then, \"Can I interest you in cleaning me off?\" she asked Gretchen, gesturing to her cum-splattered breasts. Gretchen laughed a no thank you, she hadn't liked the taste of cum any more than she had enjoyed the process of extracting it back in her younger years. Monique shrugged and mostly wiped herself off with a stack of napkins. As she approached Gretchen, Monique looked down at her breasts and teased, \"There is one big spot left, sure you won't lick me clean?\"\n\nGretchen looked at her sardonically, then said, \"Tell you what. I'll clean you off,\" she said wiping the blob off with her index finger, \"but you suck it clean!\" Monique just wordlessly placed the finger in her mouth and proceeded to give head to that finger impressively enough to nearly reawaken my resting cock already just from watching her do it. Gretchen clearly liked it too. A lot.\n\nMonique leaned down to kiss her deeply. Very deeply. But Gretchen pulled back suddenly, an odd look on her face. \"Yes,\" laughed Monique, \"that is what he tastes like! Better than you remember?\"\n\nGretchen grumbled something, and Monique laughed, but then paused. \"They all taste at least a little different. Some taste a lot different,\" she advised Gretchen. \"I've read it is because of what they eat.\"\n\nBut her introspection lasted but that moment, before she dropped to her hands and knees and began to once more orally pleasure my client. She was being a lot more deliberate this time, wanting it to go for a while. Gretchen's eyes rolled back into her head once more, and her hands ran through Monique's corona of blonde hair, but she seemed eager take the long, slow route as well.\n\nMeanwhile I was mesmerized by Monique's bounteous ass, as it swayed with the music, her pussy seeming to practically drip as I stared hungrily at it.\n\nSuddenly Monique lifted her head and stared back at me, lifting a hand to keep the stimulation going on Gretchen's sex. \"How much do I have to wave my backside at you before you come over and fuck me with that big cock of yours so I'll make your client's world rock even harder?\" she demanded. This time, both Gretchen and I goggled at her in disbelief. My mouth worked, but no words came out. I looked at Gretchen in a panic. Monique has resumed her oral efforts and Gretchen looked back at me, eyes wide, and her mouth open in suddenly reintensified pleasure. But a laugh still managed to escape her lips. \"If it's going to make her even better at what she's doing, you better come over here and put that big ass thing to some good use,\" she gasped, before she let her eyes close and she rolled her head back against the wall, thrusting her own luscious breasts upward and clenching them in her own hands, reveling in what was happening between her legs.\n\nFuck this. Here I go.\n\nI took a quick step or two across to kneel down behind Monique and caressed her lovely ass. I pushed my hips forward and let the head of my cock rub up and down against her slit, which I could feel pulsing in anticipation. Gretchen lifter her head again and stared down at me as I rubbed my cock against Monique's vulva. I felt my tip penetrate, and I grasped her hips and pulled them back slightly as I pushed my length inside her. I groaned happily as the sensation of her silken walls encompassed me. Monique groaned in turn as I filled her deeply. Gretchen moaned as well, in response to the vibrations of Monique's groan, or maybe at the sight of what I was doing to the girl currently eating her out.\n\nAs I thrust in and out of Monique, I lost track of how my client was doing. As my initial ecstatic joy of penetration lifted, I looked up to see Gretchen looking down at me over Monique's corona of hair with a bemused expression. But this strange tableau was soon interrupted as the lovely dancer between us, stimulated at both ends, arrived an unexpectedly early and sudden climax. Her hips bucked hard and something different she did with her tongue as her ecstasy took her pushed Gretchen a bit over the edge as well. But just a bit. A single, apparently preliminary shock of orgasm ran through her, but Monique lifted her head to croon a final gurgling gasp stopping her efforts there, then twisted her hips and slipped off my as yet unfulfilled cock as well.\n\nWe both looked down at her, both pleased to see her so fulfilled by our efforts, but also each more than a bit left hung out to dry. Monique looked up at Gretchen. \"I know you don't think you like cock, but come on! That,\" she said, pointing at my exposed, throbbing member, \"is world fucking class. He is better than any dildo. Let him finish you now, or you can just wait until I can find the top of my head wherever it was blown off to and can get it re-attached.\" She started to pull me forward toward Gretchen's wide spread legs. I look up at my client in wordless apology.\n\nBut she just threw up her hands and said, \"Fuck it. I can give it one more whirl. Come here.\" Either Monique's argument, or more likely the intense need from her interrupted orgasm, had convinced Gretchen. I was not so sure it was a good idea. But now Monique was pushing me from behind. And my cock was now absolutely convinced it was a great fucking idea. I guessed I was outvoted.\n\nI slid between Gretchen's legs and let my cock stroke her sopping pussy. I looked into her eyes and saw a little of the trepidation that I knew lurked in my own. But I also saw a spark of adventure, and a huge wave of lustful need. Not necessarily a need for me, but a need for release. \"Let me know if I need to stop,\" I said, though I could not keep either my hesitation or my raging lust out of my voice.\n\nGretchen braced herself, but replied, \"Did you not hear the part about my giant dildo? You won't hurt me. Just do it. I'm dying here!\"\n\nI slipped into her just an inch, then another, then I pulled back a bit, then another inch in. Suddenly I was buried in her fully and it was magnificent. She was tight as hell around me, but soft and wet and receptive. \"Let me know what works for you,\" I grunted, and began to thrust into her at different speed, then different depth, then different angles. Without words, she let me know what worked indeed, and I settled into a rhythm that seemed to work for her and sure as all fuck was working for me.\n\nHer hands stretched out to grasp the back of the couch and she thrust her hips out toward me in answer to my penetration. Suddenly Monique reappeared and slid onto the couch to grasp Gretchen's left breast in her hand, while she bent to suck on its lovely right companion. I felt Gretchen get if possible even more wet around me as I slid in and out, my own glorious pleasure over-riding my fear that I might not live up to the challenge. Gretchen grasped Monique's ass and pulled her up higher, first to kiss her, then to pull her still higher, so that Gretchen could sucky greedily on one of Monique's lovely edifices. Monique's left hand never left off teasing at that breast, tugging the nipple and twirling her fingers around it.\n\nGretchen might have still had mental doubts about the utility of this whole Fucking A Dude thing, but her body had fully rejected any doubt. Each passage of my shaft along her tunnel brought her closer. It sure as hell brought me closer too, but I was damned if I was going to let go before I satisfied her as best I could. It appeared that I could in fact satisfy her quite a lot. Suddenly she was thrashing beneath me, gasping what would have been very satisfying but embarrassingly loud cries of ecstasy, had her mouth not been still full of Monique's delectable nipple, like a giant pacifier. I let my own desperately restrained orgasm arrive at last and I slammed into her with a few final thrusts that left me wobbling as I shuddered my release inside her. She gasped a final time as she felt me fill her, and if it did not give her one final orgasmic wave, she certainly experienced a delightfully large aftershock.",
        "We must have looked like quite the sight as Monique's favored waitress Tina poked her head through the curtain just then. She goggled, then oggled at my cock as it slid from inside Gretchen when I turned to stare at the interruption. \"Looks like everyone is thirsty in here,\" she observed, with a big smile that said she enjoyed looking at all three of us.\n\n\"Water,\" I croaked.\n\n\"Me too. And a glass of chardonnay,\" said Monique, much more in control of her voice than me or Gretchen.\n\n\"I need a large Budweiser,\" asserted Gretchen around Monique's tit, which she had refused to release from her lips.\n\n\"Looks like someone just had a large Budweiser in her,\" muttered Tina, as she backed out through the heavy curtain.\n\nGretchen laughed, and looked up at Monique, at last releasing her lips' determined suction on her nipple. \"Alright, I will stipulate that the odd dick here or there may make an acceptable change of pace, at least until I find the right woman to settle down with.\"\n\n\"Don't go for the odd dicks. Go for the good ones. But all good things in moderation--an occasional man is enough.\" replied Monique archly.\n\nI drove Gretchen back to her office and her car in companionable yet awkward silence. My mind was racing, wondering how I let myself get I to this position. I was physically incapable of regretting the events, as the evening had been one of the sexual highlights of my life, possibly even exceeding the threesome I had with those two cheerleaders from our big rival university, back in my college days. But this had not been my plan, and I had no idea how I should proceed from here.\n\nGretchen likewise seemed introspective, but as we neared her office, she turned suddenly to me, placing a hand gently on my right thigh. \"Listen, I've been thinking,\" she blurted. \"We have a problem.\"\n\nNo shit.\n\n\"Tonight was literally mind-alteringly good, but we can't keep doing this. You can either keep making sales calls on me and my firm, or you can occasionally stick that surprisingly pleasing dick in me in new and interesting ways. I owe it to my company and my employees to do one or the other.\"\n\nShe then withdrew her hand from my leg and looked at me silently. At that moment, we pulled into her company parking lot, and I pulled over near her car, taking a deep breath. She had given me a solution, albeit an agonizing one.\n\n\"Wow. That's a gut punch!\" I sighed, letting some genuine anguish color my voice. I temporized for a moment, then hung my head and said, \"then I guess I'll have to call your assistant next week and set up our next sales call. We're back to presentations and Power Point. An occasional lunch maybe?\"\n\n\"Really?\" She exclaimed, a little hurt and a lot of surprise in her voice.\n\n\"Look,\" I hastened to reassure her, \"you are genuinely gorgeous, and you pretty much broke my brain tonight. Hell, when you put your hand on my leg just now I got stiff as a board all over again. The back half of my brain wants to drag you into the back seat and make love to you again right now.\" Her eyes widened, then flashed a speculative look toward the back. I rushed on to forestall any ideas.\n\n\"But just like you, I have professional responsibilities to more than just myself. I owe my boss, my company, and my co-workers my best efforts. Hell, I owe YOU, as my potential customer, my best effort. So back to sales calls it is,\" I finished, dropping my head in honest frustration.\n\nGretchen just stared at me for a moment. \"Damn,\" she said. \"I never for a second expected that to be your answer.\" There was a definite tone of regret lurking in that sentence, but mostly she sounded impressed. \"But if you are that committed, I have to respect that. Come back in tomorrow morning at ten, and we will choose some initial business for you. Show me that CKE can be as committed as you are in the coming months, and we'll talk about it all.\"\n\nI literally imagined a record scratch sounding my head at how suddenly things had changed from bleak to amazing. \"All of CKE will demonstrate its commitment to your company's needs, Gretchen,\" I said, offering a firm handshake.\n\n\"I'm sure you all will,\" she replied, but did not let go of my hand. \"But since we sign this deal and revert to a dry, professional relationship tomorrow morning, let's talk right now about that back seat of yours....\"\n\nI managed to time it just right to meet Cathy as she came into the lobby two days later. I said hello, and she asked what was up. I handed her a PO from Gretchen's company. Not a big one, but it was a toe in the door. Cathy looked at me in frank amazement. \"How did you do it?\"\n\n\"Well,\" I said, \"Expect a lot of screaming from Audrey in Finance later today. I forgot to warn her before I submitted my expense report.\n\n\"You fucking did not!\" said Cathy, scandalized, but good-naturedly so. The woman respected results.\n\n\"I took my prospect to a legitimate local cabaret...\" I began parroting my line from the first time I pulled a stunt like this, with a more conventional client.\n\n\"Man, I did not expect to see you going to a male strip... wait a minute. Was it the same damned club where you got Gus's ashes hauled? With all women dancers?\"\n\n\"It turns out that is the way the client mostly goes,\" I murmured.\n\n\"Son of a bitch. That makes it easier to understand why I could never connect with her. I kept taking about men, while she was just staring at my ass.\"\n\n\"The client actually had words on that very subject...\" I smiled.\n\n\"She. Did. Not!\" said an even more scandalized but slightly flattered Cathy. She took a deep breath. \"According to the rules, you and I are veering into the kind of conversation we cannot have.\"\n\n\"I'm sure the client would be happy to go over it with you herself, without me,\" I dared to add.\n\n\"I will definitely leave this client to you. You just find out exactly what she wants and tell me exactly, so that I can roam the halls of Production and Fulfillment with a flame thrower to ensure everything they do for her is exactly to the letter. I want a lot more than this one PO.\""
    ],
    "authorname": "Publius68",
    "tags": [
        "strip club",
        "blowjob",
        "cunnilngus",
        "ffm",
        "threesome",
        "stripper",
        "vip",
        "champagne room",
        "sales"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/ideal-suburbia-ch-09"
}