{
    "title": "Androshorts: A Christmas Affair",
    "pages": [
        "The older staff members all called him Doc. I had no idea why until someone said that his name was Savage hence 'Doc'. It still meant nothing to me of course until one of the older men told me about the American cartoon character and I googled it.\n\nDan Savage was a senior at my firm and reading the notes on Wiki I thought the nickname suited him rather well. He was a tall, muscular, chisel-featured hottie with just a tiny amount of grey around the temples. I guessed that he had about ten years on me; it turned out to be eight, but hey, I wasn't counting.\n\nI'd been out of a relationship for about three months and it could have been better. I was early thirties and conscious that my body clock was spinning round, while my partner of five years was still all about foreign holidays, weekends away and going 'out-out' every Friday with our group of friends that seemed to have an age range of late 20's with us very much as the senior partners. The group changed in the way that groups do, as couples coupled and the children came along. \n\nRon and I attended weddings and christenings and he continued to talk about how lucky we were not to be tied down like they were and we would spend the occasional Thursday evening on the web and by Friday evening were buzzing off to Brussels or Berlin or Barcelona or Bern, even booking in in Brooklyn; to go out and eat out, get a tan and generally have a good time whenever and wherever we felt like it.\n\nBut I wanted more.\n\nMy younger sister Karen had met her man Carl, bought a house, married him and was carrying their second child in the same amount of time that Ron and I had been together. We were Godparents to her daughter Lily and I still loved to take the two year old for the afternoon or evening and didn't even mind changing nappies, bathing and putting her to bed. \n\nOn that fateful occasion she stayed over I went to hand her over to Ron while I made some tea and he just looked at me with a grimace, adding, \"She's your bloody niece...\"\n\nI suggested he made the tea.\n\nOnce Lily was down in the travel cot in our spare room, I turned to him.\n\n\"She doesn't bite Ron,\" I said.\n\n\"Yeah,\" he sighed, \"kids; t'choh,\" he shook his head, \"I don't do babies and toddlers Fay, you know that.\"\n\n\"Ron, are you ever likely to want children?\"\n\n\"One day I'm sure,\" he said still looking at the TV.\n\n\"Any idea when?\"\n\n\"Not yet,\" he said sharply with a slightly annoyed half smile.\n\n\"I have a body clock,\" I said, \"as women get older conception gets harder.\"\n\n\"Yeah but they can do miracles with test tubes these days can't they,\" he sighed again as if bored with stating the bloody obvious, still not making eye contact with me.\n\n\"I'd rather not have to do that,\" I said. \n\nRon started to bite the side of his thumb, one of his 'leave me alone, end of this particular conversation' tells. The second he picked up a side cushion and hugged it to his waist I knew he was about to leave the room.\n\n\"Ron...\"\n\n\"What Fay, WHAT?\" He angrily paused the TV then turned and grabbed his support cushion, \"What do you want me to say huh? What?! You want me to give up my comfortable life that I have worked fucking hard for I must say, to throw it all away for a couple of whiney fucking shit machines --\" This was his favourite jokey description of all young children and pets, \" - Just so you can feed some inner fire of maternal hormones. I thought we were happy, I THOUGHT we had everything we wanted.\"\n\n\"Yeah, well times change Ron, and much as it may be what you want, I would rather like to have a baby.\"\n\n\"WHY?\" he all but screamed at me in hurt betrayal.\n\n\"Why? Because I'm a woman, it's kinda built in...\"\n\nHe leapt to his feet, his cushion falling to the floor,\n\n\"Oh, so I have to go with your hormones do I? You can't be a rational human being and rise above... fucking... fucking... instinct! You're not a fucking Labrador, not a fucking worker bee!\" He looked at me like I had just suggested the most outrageous thing ever and I could see he wasn't finished yet, not by a long way. \"That's it, no more looking after fucking children if this is what it fucking leads to, no way.\" He stood up. \"That's it, that brat in our spare room goes home tomorrow -- I should have suspected this is what it would lead to, knew it would come to this, just more fucking trouble...\" he took a deep breath as if coming to the end of his rationalisation, \"No more, if her bloody parents can't look after her they shouldn't have had her,\" he sighed with an ironic smile, \"fucking children!\" he dropped back in his seat again, happy in the completion his self-righteous sermon.\n\nEnd of story...\n\nYeah right...\n\nHell but I was cross, but trying to be the bigger person and not ruin him on the idea completely and thought I'd have one more go.\n\n\"Children, Ron. It's what humans do? It's kind of why we're all here, continue the species you know?\" I'd kept my tone easy and simple, I'd never really heard him this angry before, not even over his one true love football. He got worse.\n\n\"Oh so we're getting all 'basic instinct' are we? Well,\" he waved his arms in the air, \"it's part of the human condition for violence isn't it?\" he stood up again, \"I'll just go out into the street and beat the fuck out of someone, because I have testosterone -- and that's the human condition innit?\" He looked extremely angry and for the first time in our almost six year relationship I was actually a bit scared of him; I knew that this was serious because the nice unaccented quantity surveyor had gone and was replaced by a nasty lad with a strong Leeds accent snarling like a pissed up LUFC supporter that had just seen 'The Whites' lose to Manchester United AND City -- at home.\n\nI got my breath back.\n\n\"Ron, this is about a baby,\" I said.\n\n\"No it ain't!\" he snapped, \"It's about what humans do, you just said.\" He stuck a finger at my face, less than an inch from my eye. I realised whatever he had said a few minutes before, it would never be the right time for Ron, all the time his arse pointed downwards. I thought I knew him, but in that short three minute rant it appeared I hardly knew him at all. \n\n\"For fuck's sake Ron, I'd like a baby - you wouldn't, end of story.\" I folded my arms defensively.\n\n\"I like my life that's all! That's not a crime is it?\" He snarled at me. I'd never seen a look of such anger, no... hate, probably not for me but for what I had suggested. He had things the way he wanted it, I wanted something that would change it all for good. No more last minute long weekends, no more going out every Friday getting pissed with the gang, no more last minute train rides to Elland Road for home games and Saturday night house parties and for what...\n\n\"Why does a child have to ruin everyth...\"\n\nThe nasty Yorkshire man sneered through his teeth at me in a face I'd certainly never seen before and there and then I knew that our life would never go back to the way it was after that. I stood up.\n\n\"Well Ron, I suggest that you carry on enjoying your life,\" I turned, my brain starting to think about everything we had being split down the middle. \"Because you know what?\" I bent down and hoped to repay that hateful look he gave me, and my lip raised in anger to match his, \"In fifteen or twenty years' time, that's all you'll fucking have.\" My turn with the finger at the face, \"But there will be no going out with the mid-twenties Friday night set because you'll be pushing fifty and trying to find someone to go out on the piss with that won't rip the shit out of your grey hair, bald patch and wrinkles; and you, the sad old fuck pretending to be young while they laugh at you behind your back.\" I adopted a big smile, false as Fuck, \"Still, you can go on all those weekend trips to Marbella -- just on your own; OH! You can get off with all the elderly pissed grannies on their single-mum granddaughter's hen weekends. I wish you well with that!\"\n\nHe looked shocked. We had both commented on some of them during a spring bank holiday break to Ibiza; overly tanned, under dressed, flopped-bellied wrinklies that couldn't hold the booze in the same way their teenage relations could and so shitfaced that they got nasty angry when they didn't get any attention from the young bucks half or a third their age.\n\nRon got my suggestion.\n\n\"What the fuck is that supposed to mean?\" he snapped back.\n\n\"Ron, I'm done. I want a child, children in fact and I always have, and you never will. I want a life with someone that wants children with me.\"\n\n\"Awwwww what the fuck?!\" he whined, \"one silly argument about kids and you're splitting us up?\"\n\n\"That's exactly what I'm doing Ron, I really don't want to stumble through life on the off-chance that sometime you might and I say 'might' want to have a child and I'm still physically able. I'll end up hating you; if I get pregnant you'll hate me and lose your temper like you have now, so why don't we just agree that we've had a great time but we want different things and it's finished now and time that we moved on.\"\n\n\"YOU want different things! I still want...\"\n\n\"Alright!,\" I shouted, \"I want different things, I can live with that.\" I tidied the living room trying to burn off some of the energy buzzing around in my system, \"I'll sleep in the spare room with Lily tonight.\"\n\n\"Whaaaat?\" he whined like a fat white rapper.\n\n\"G'night Ron,\" I said.\n\n\"But Babe...\" he said with a questioning inflection and extended, teenage 'what have I done' arms.\n\n\"I've taken my last 'pill' Ron, EVER!\" I said, \"Still want to sleep with me?\" I raised my T-shirt to show him my bare boobs he had always been so enamoured of and turned to stick out my curvy bottom.\n\nHis face curled up like the kid told off for not doing his chores. He stormed off to the bedroom, nose in the air and convinced of his innocence and this breach of his human rights. I could hear him tossing and turning on the bed, while I just lifted my sleeping niece into the bed next to me pushing the king size single against the wall so she couldn't fall out. I slept like a log, waking with Lily at six thirty and having a lovely morning with her. \n\nRon woke, dressed and left the house without a word.\n\nThat was that.\n\nThe flat was in my name and I paid the bills so I kept it, moving his stuff into the spare room. He grumbled about that, saying that the flat should be sold, I blinded him with sums that all of my money went on the rent and utilities and food while his went on holidays and parties. His bank account had seventeen or eighteen grand in it while mine was virtually empty and always was. I suggested that if we sold my flat then I'd have half of his money in the bank seeing as I could show he had never paid a single bill. He backed down because I think he still refused to see our relationship as the lost cause that I could see. We'd talk, he'd bite the edge of his thumb, so I just knew what was going on in his head. Still a 'no' -- I could tell.\n\n\"But Fay we're so good together!\" he would say with a proper big boy's 'feel sorry for me' hung head.\n\n\"No, we WERE good together Ron, we've both said things and found out things about each other that have changed it all...\"\n\n\"But I'll... I'll forget all that, we can start again...\"\n\n\"What?!\" I snarled. \"I want to grow up while you want to remain a twenty-something singlie for the rest of your life!\"\n\n\"You want to get married? Is that it?\" he stopped for a moment seeing a light at the end of the tunnel, \"I could... get married...\" He perked a bit, but really didn't sound that convinced mind you.\n\n\"I want a family Ron!\" I said, \"marriage is a piece of paper and a couple of rings, I want a child, flesh and blood, someone I can hold in my arms, watch grow and love for the rest of my life. Not something you can send back if you don't like it.\"\n\n\"We... could... get a dog?\" he said experimentally. \n\nHell but I was soooooo pissed at that,\n\n\"A... A FUCKING DOG!?\" I sneered snapping out of my chair in seconds, \"You don't have a fucking clue do you, you ignorant northern twat!\" I braced for a scrap and while he was a bit taller than me I could certainly give as well as I got and would head straight for his eyes and his testicles, end of story. I was a copper's daughter and had learned the hard way growing up.\n\n\"Oh 'I WANT SOMEONE TO LOVE AND TO HOLD RON'!\" he mocked, \"swallowed a fucking Mills and Boon book have we?\" The nasty northern lad was back again, and he shook his head and laughed derisively, but no more than that.\n\n\"No fucking business of yours what I do now is it?\"\n\nThat was pretty much the last time I spoke to him. He rented the unfurnished top floor of a house from a mutual friend taking the king size single bed from the spare room and a few other bits and pieces of furniture to make it liveable.\n\nI met his Mum a few weeks later. She had come south at speed to visit him in his new flat once she got the change of address cards (that I sent!) and was disappointed that in the two weeks he'd been there it had turned into a classic unkempt bachelor pad, complete with games consoles, unwashed crockery (I'd had a dishwasher at my place), empty pizza boxes, fast food wrappers, overflowing bins, bottles and cans, dirty laundry and the smell that goes with all of that.\n\nHis Mum was actually really lovely, and I had always got on really well with her. It was a hell of a surprise when she tapped me on the arm in the queue in the Costa Coffee near my office that lunchtime.\n\n\"Mine's a skinny de-caf cappuccino Fay,\" she said, giving me 'the look'. She was in town to sort things out, the tough and tiny trouble-shooter was in town and on a mission and my shoulders sagged. \"Don't worry Love,\" she said, \"I'm not blaming you. I'll get a table.\"\n\n\"But Gwen I only have...\"\n\n\"I won't take more than five minutes of your time love, I promise.\"\n\nShit.\n\nShe walked across the store and grabbed a window seat and took off her coat. Ron's Mum was everything you would think of as the classic no-nonsense northern lass beloved of soaps and sit-coms. A short, broad shouldered, short haired former factory worker turned nurse that really didn't have enough minutes in the day for too much buggering around with anything that wasn't important.\n\nI got both drinks, mine extra hot in a take-out mug for a quick exit if necessary. I sat down opposite her.\n\n\"So you've split up then,\" she said. Strange; she asked a question that she had already answered, most unlike her. I could go with that. I sipped my hazelnut latte.\n\n\"Yep.\"\n\n\"And...\" she threw in the questioning inflection.\n\n\"And what?\" I had another sip. Gwen let the question hang in the air -- so did I. \n\n\"There has to be more to it than that Fay?\" she said, \"you two were getting on like a house on fire, why the sudden break?\" I guessed that Ron had only given her a tiny bit of the story, if anything.\n\n\"Children Gwen, just children.\"\n\n\"Children?\"\n\n\"I want them, he's made it extremely clear that he doesn't.\" I stretched, \"he said, and I quote 'You want me to give up my comfortable life that I have worked fucking hard for to throw it all away for a couple of whiney fucking shit machines', his words.\"\n\n\"Oh,\" she said, pausing and obviously hearing her son in every syllable, \"well I'm sure he didn't mean it.\"\n\n\"Oh, I'm sure he did. He got extremely angry and let me know in no uncertain terms that he wasn't into 'settling down'.\"\n\n\"Well he's...\"\n\n\"He's thirty six Gwen, I'm thirty two, I don't want to be trying to get pregnant and raising young children in my forties, if I'm able to - just so he can party on until he's fifty.\"\n\nShe looked disappointed, and there was a detectable hint of resigned recognition in her normally implacable face.\n\n\"Yeah, I see what you mean. Tosser...\"\n\n\"What?!\" I snapped at the insult.\n\n\"Him!\" she said quickly her hand on mine, \"Him Love, not you!\" She smiled and squeezed my hand. She took a deep breath, \"I raised a spoilt brat there Fay love, I'm so sorry about this.\" She sipped her Cappuccino, \"I will confess I was waiting for the wedding invitation and the patter of tiny feet.\"\n\n\"So was I.\" I chuckled but couldn't stop the tear I felt slip down my cheek, but smiled through it, hastily wiping it away.\n\nGwen saw how upset I was and I saw the hint of recognition flower into understanding.\n\n\"Well it's his loss Love.\" She said leaning in closer to me, and with a napkin from the tray wiped another tear from my face. \"I often wish I'd had one daughter,\" she said looking at me fondly and wistfully with her head to one side, idly brushing my long brown hair away from my cheek, \"I hoped it was going to be you, but my idiot son has put pay to that as well.\"\n\nRon was the eldest of four boys, and in the last few weeks I'd often thought that being the oldest and watching his three brothers come along had done for the idea of children in his head from an early age.\n\nRon's younger brother Ray had two children by two different women and Gwen never saw them or their mothers. Ron had told his brother on both occasions to insist the foetuses were aborted as soon as Ray had announced his impending parenthood. This reaction was the thing that stopped me from just going ahead and trying to conceive without telling him. Rogan the next down was gay, and the youngest Rick had learning difficulties and had recently moved into a warden controlled flat.\n\nGwen sat up straight.\n\n\"Well, you move onwards and upwards Fay,\" she said with a new resolve, \"You put that twat of a son of mine into your past and get on and find what, and more importantly who, you want,\" she sighed with the realisation that it wasn't going to be her son, \"Ron is too much like his pig-ignorant father to realise what he's thrown away and what's more always will be. He'll go to his grave still insisting that life is all about him.\" She sipped her cappuccino finding some tiny pleasure in the act, \"Again, just like his bloody father,\" she sighed again, shaking her head, \"Big... Ron...\" \n\nRon often spoke fondly of his late father, 'Big Ron'. A big, hearty former Sheffield steel worker that met and married tiny squeaky Gwen not realising that her size didn't match her inner fire. For Big Ron marriage was about someone being married to him, not him being married to someone else. He drank, smoked and shagged his way around town as if still single, right up until Gwen found out and gave him an ultimatum.\n\nHe wasn't taking that from no bloody part-time seamstress from the local rag factory and laughed in her face and went out on the piss just to show her just how little he cared for her opinion. By the time he got back at gone midnight, reeking of the kebab he had eaten with his pissed mates it was to find his house locked and bolted, his family and his car gone with no contact until a process server arrived at his parents' house with divorce papers. She took her four sons to Leeds and raised them there herself, in the midst of that somehow training to become a registered general nurse at the same time.\n\nBig hearty Ron died because his big heart had an attack one evening because of his atrocious lifestyle once Gwen divorced him. \n\nWith his passing, his Dad's words and deeds slipped into legend and young Ron spoke of him as if he was some great wit and as he got older he adopted many of the same attitudes as he dead father including some minor racism and serious narcissism.\n\n\"Big Bloody Ron,\" hissed Gwen stroking my hand, \"that bastard has so much to answer for...\"\n\nI sipped my coffee, I really hadn't expected her to come down on my side. I wiped my tears again, the first I had cried for the ending of this relationship.\n\n\"Sorry Gwen,\" I whispered as my voice failed me, \"I tried honest I did.\" I tried to stop the tears and the wobbling of my bottom lip.\n\n\"I know Love,\" her eyes were misting now, \"but you'll come through it, stronger!\" She squeezed my hand in support, giving it just the tiniest shake. She took a deep breath, \"I think I'm not destined to be anyone's Nanny.\" It was her turn to smile through her tears now.",
        "\"Oh you never know,\" I said thinking about her gay son and his impending civil partnership, \"I reckon Rogan won't let you down.\"\n\n\"You could be right,\" she said and wiped her face, \"I'm sorry Fay, I'm sorry that I raised an idiot that can't see past his own pleasure, and I'm sorry that you got mixed up with him.\" I took her hand and gently squeezed this time.\n\nI tried not to finish my coffee, but the minute hand was moving around far too quickly. I was already fifteen minutes over the thirty I'd put down and I had some work that desperately needing finishing.\n\n\"I have to get back to work Gwen,\" I said.\n\n\"OK Love,\" she said, \"I'll walk with you as far as the bus station, there's no more I can do here.\"\n\nWe stood, picked up our napkins and she took her small bag that I guessed had her overnight things in. Outside, I gave her my arm and we walked slowly stopping at the crossing for the bus station. I crossed with her, and got to where the coaches were parked up. I felt so sorry; other than being Ron's Mum she was also very lovely to me and really took care of me, especially once she found out my Mum had died when I was still in primary school. \n\n\"Excellent timing,\" she said, \"The next one for Leeds leaves in ten minutes, time for me to get another coffee and have a wee before I go.\"\n\n\"Thanks for everything Gwen,\" I said, \"It wasn't all bad I promise.\"\n\n\"Thanks Love,\" she said, and gave me the biggest hug. \n\nShe reached into her capacious hand bag and withdrew a small parcel wrapped in blue tissue paper, holding it in her hand as if coming to a decision,\n\n\"Here,\" she whispered, placing the item into my hand and gently closing my fingers over it, \"it's just a silly little thing that I'd been meaning to give the pair of you for a couple of years; perhaps if I had done this might have been sorted long ago, for good or ill,\" She dropped her eyes, \"it's a christening broach, antique gold, been in my family since the war... and I'd like you to have it.\"\n\n\"Gwen...\" I stuttered, unsure of what to say, \"this is your family history, this should go to...\"\n\nShe closed her eyes and held her hand over mine holding the heirloom,\n\n\"Ron will put it away somewhere safe and then throw it away the next time he has a tidy up, Ray will lose it to the next slapper he impregnates and I'll have to buy it back from the pawn shop, Rogan might actually wear it!\" she laughed looking back up into my face and smiling through her tears, \"and I'm really not sure my Rick is likely to be finding the girl of his dreams, certainly not in my lifetime.\" That made my tears start rolling again. She stroked my cheek with such maternal tenderness that I struggled to catch my breath.\n\n\"Fay love, you're the closest I'll ever come to a daughter that I could leave this kind of thing to, and without doubt the only girl I trust to take it and use it and hand it down as I wanted to.\" She took my face in her hands and kissed me, then looked straight into my eyes, \"Now you go on and have a wonderful life. You have plenty of children and you pin that on their Christening gowns, and they can do the same with your grandchildren,\" she gulped back her emotion one last time, \"and if you ever find yourself in Leeds, you pop in with them and visit Nanny Gwen, you know the kettle's nearly always on.\" She was openly weeping, and I realised that she was grieving for lost opportunities every bit as much as I had been.\n\n\"I'll do that.\" I said, tears now pouring down my face at this parting.\n\nShe wiped her face and stood up straight, taking the last of the napkins she wiped mine.\n\n\"Stand up straight Fay,\" she said giving her 'wise northern woman' look again, \"you take a deep breath, turn around and go and get on with your life.\" She pointed back over my shoulder to indicate that was where my life was.\n\n\"OK,\" I gasped.\n\nShe hugged me again, then with hands on my cheeks kissed me one more time, just as she always had.\n\n\"Don't look back love,\" she said barely in control, and I knew it wasn't so much about life coaching, as much it was so I wouldn't see her crying every bit as much as I was.\n\nI gave her a final squeeze, \n\n\"See ya Gwen,\" I said and turned and walked away.\n\n\"See ya love,\" said Gwen, \"walk tall now!\"\n\nI did increasing my pace, in my head to get back to my waiting desk but really to turn the corner so I couldn't look back at the sweet lady who's life I had represented so much hope for.\n\nOn my walk, I had managed to get my breathing straight and as I approached my office I was pretty much there. I popped in the ladies and took stock, I put the blue paper wrapped trinket in my purse, no way could I look at that quite yet. \n\nI had recovered. \n\nBut for my red eyes of course.\n\n\"Fay,\" said a deep rumbly voice, \"you OK?\"\n\nIt was Doc.\n\n\"Yes...\" I said way to quickly, \"I err...\" I giggled, \"I just split up with my ex's mother!\"\n\n\"OK,\" he said returning my smile, \"life's complicated isn't it?\"\n\n\"Yeah,\" I said taking my warm coat off and hanging it, \"Seems I was her last chance for grandchildren. Couldn't help but cry along with her.\"\n\n\"Kids will do that to you,\" he said.\n\n\"You have some?\"\n\n\"No,\" he said with a bit of a soft faraway look.\n\n\"I never cried about the ex though,\" I said, \"Is that bad?\"\n\n\"No,\" he said wisely, \"Mean's you aren't going to miss him so much as his Mum.\"\n\n\"I guess so,\" I said, \"onwards and upwards!\" I turned and went back to my desk.\n\nA couple of days later I opened the little blue tissue paper parcel, in it was a small old gold broach with an Italian inscription which Google translator told me said, 'For the love of my children, and my children's children.' I cried again, I was to find out later that it was something that Gwen's grandfather brought back from Italy after the war.\n\nI was a landscape designer working for a large architecture consultancy in North London, and I had seven hundred square metres of former brownfield site waiting for my careful eye to create walking and cycling routes, a water feature, two shop concessions, a cafe, some woodland and at least two play areas for a new retail park.\n\nI made another cup of tea and met Doc in the kitchen again,\n\n\"Feeling better Fay?\" he said.\n\n\"Much,\" I said with a grin.\n\n\"Excellent,\" he said, \"I guess you must have dozens of dates to keep your mind off of it.\"\n\n\"Hardly any,\" I said, \"I've had a look at various blokes on line, but it's just not what I'm used to.\"\n\n\"Really?\"\n\n\"Yeah,\" I sighed and removed my tea bag, \"Ron and I used to have quite a healthy social life, but he got custody of our group of friends and he's basically telling them that I've gone off of them. That's not the case. I wanted them and him, but I wanted him to grow up and stop being a 24 hour party person.\" My sigh must have sounded how I felt about my new lack of mates that I could party with.\n\nDoc smiled at me, just the sweetest smile.\n\n\"Fay, I'm wanting to go and see the latest 'Star Wars' movie before it finishes -- how about you come as well, then go and have a burger after. I promise I'll look after you and keep the knobs away while you select a bloke that you do like?\"\n\nI giggled, I quite liked the idea of just going out for the evening, even though it wasn't with 'that old gang of mine'. Doc was extremely charming in that big brother kind of way after all.\n\n\"That would be nice,\" I said, \"I quite fancy seeing that one as well.\"\n\n\"Excellent,\" he said, \"pick you up?\"\n\n\"Please,\" I said, and wrote my address on a scrap of paper there in the kitchen.\n\nThe next evening was the Friday we discussed and I was dressed in a pair of my tightest blue jeans stretched over my round arse, and a tight top that showed off my shapely boobs and I'd gone to town with the make-up seeing as I might find a nice bloke while being body guarded by Doc. He was an architect and of course had an off-road truck that stopped outside my place, a long dark grey Toyota with all of the tools of his trade in the back.\n\nHe stopped directly outside of my house, and I stepped out of my front door, locked it and trotted down the steps a beaming grin on my face. \n\nI could see from Doc's look that he was impressed. I looked in his car for his wife but it was obvious that he was on his own. I suppose I just guessed that this large, good looking guy was married. He was forty three (we had joked about celebrating his 39th birthday for a fifth time just a few weeks before) and I guessed, wrongly, that there was a woman on the scene. But no, evidently Doc was single and I had second thoughts about my denim clad arse and my cropped tailored top and what my escort might think. I found out quite soon.\n\n\"Bloody hell Fay,\" he said looking me up and down, \"you do look extremely attractive in your play clothes.\"\n\nI giggled,\n\n\"What,\" I twisted and turned by his open car window, \"this old thing?\"\n\n\"Ooh yeah,\" he said, \"definitely that old thing.\"\n\nI got in his truck and saw that he was extremely well turned out as well. He always dressed well for the office. He actually dressed well for site visits and building inspections but thought that tonight he looked relaxed and smart. His jeans, a Ralph Lauren Polo shirt clinging to his huge muscular torso and the smell of an extremely nice after shave all went to make me appreciate what a fine looking man Doc was. I was glad that I'd dressed up and decided that I'd only put on my light jacket I was carrying if it got reeeeeally cold. \n\nWe got to the multiplex, parked and walked through the early evening crowds getting the usual cinema food of hotdogs, popcorn, flagons of Coke, stuff I hadn't done since college.\n\nThe film was great, and not what I'd been expecting but great for all that. We left the cinema and he stepped closer to me, and offered an arm for the short walk to the diner and we waited for a few minutes for a table.\n\nWe had burgers and fries and more Coke - good Friday night post-cinema food, and we enjoyed each other's company being of similar ages and outlook and we had a laugh.\n\nWe stayed out until eleven and he dropped me back at my house with just the briefest peck on the cheek. At no point did I even think about another man and my desire for a baby, just the handsome older man across from me!\n\n\"Thanks so much Doc,\" I said, \"it's been a lovely evening.\"\n\n\"Thank you Fay,\" he said, \"I've not had so much fun in ages.\" He stopped, still holding my hand, \"would you like to do it again sometime?\"\n\n\"I'd like that,\" I said.\n\n\"You choose,\" he said, \"We can discuss it at work next week.\"\n\n\"Lovely.\"\n\nWe did and we went to the cinema again the following Friday. A different movie, a comedy, but with the similar food, the same diner afterwards and had a lot more laughs. I found that he had a sense of humour much like mine, and we discussed our favourite movies and between us we must have done the whole 'Life of Brian' script over Frankie and Benny's burgers.\n\nWe could have become film critics as nearly every Friday we were out together at the cinema just as friends.\n\nThat went on throughout the cool Autumn and settled into winter and little changed other than the thickness and quantity of our clothing, although tight jeans, leggings and 'ski-pants' were always part of my Friday night wardrobe. Despite his original suggestion that he would 'look after me while I found Mr Right', I still never looked, not once.\n\nIt wasn't always cinema though and he took me to a huge out-of-town fireworks event, standing behind me and hugging me around the shoulders against the cold wind from that direction, while we stared up into the sky for the 5th November celebrations, it was so lovely being hugged by someone after so long and I pushed back against him in delight.\n\nOur Fridays had rapidly become my favourite day of the week. Then two Fridays later it was his choice and we went bowling and I was slightly surprised when once in the nicely warm bowling alley he introduced me to members of his family, all out for his niece's 10th birthday treat and I was swept up and into the whole thing and just accepted as Doc's, or as his family called him Dan, 'friend from work'.\n\nHis sister Jenn was lovely, and sensing perhaps my slight nervousness at this family gathering included me in everything without making it look like she was, and there was no pointing or nudges and winks about the hot chick in the tight 'jeggings' with Dan. \n\nI met his parents and they were really sweet and when I wasn't bowling they were forever buying me drinks or asking if I wanted something else to eat from the wonderful buffet they had supplied.\n\nDoc told them how I designed gardens and soon we were into our favourite shrubs and borders. In moments I was sat next to his Mum with her arm though mine as I showed her pictures from my phone of some of my work. She was a delight, and I felt very much part of the family. Dan took me home again, and I couldn't stop thanking him for another lovely night out. He smiled and kissed me goodnight, lips this time and it was really nice.\n\n\"My sister wants to know what you are doing Boxing Day,\" he said, leaning out of his drivers window.\n\nBoxing Dayy? Shit, Christmas a mere month away and because of family plans and break-ups I really hadn't been in the mood or even thought about decorations even.\n\n\"Nothing,\" I said, \"nothing on Christmas Day either in fact, I was booked to be going to Ron's Mum's place in Leeds since the summer. I know I'd still be welcome... but chances are Ron will be there. My Dad had booked a Christmas holiday in the Med with his Golf Club once he knew I was taken care of, so a turkey dinner for one and 'Sound of music' and a Bond film on my lonesome.\"\n\n\"No other family?\"\n\n\"My younger sister will be in Berlin with her husband's family and my niece, I've already told her I'm going to a friend's place, even though she is younger than me she does worry.\" \n\n\"And so you are going to a friends place,\" he said \"my place for Christmas Day, then my sister's on Boxing Day.\" I kissed him again, it slightly longer and even better than the first.\n\nSuddenly I was excited about Christmas! It was back on, and I'd have a lovely man to share it with a who knew what might happen. As I opened my front door I had Paul Macartney's 'Simply having a wonderful Christmas time' in my head.\n\nThe next Friday, the first in December, was my choice and I really wanted to do something special after my evening with his family and my no longer having to face my first Christmas alone. My choice was Opera as I had bought two tickets from an old University friend who now couldn't make it.\n\nWe rode the underground into London and La Boheme at The Royal Opera House splendidly decorated for Christmas with us both dressed up to the nines. It was wonderful, and I had wanted to see it for years, after all it wasn't something that Ron would have even considered!\n\nWe had dinner in an adjacent restaurant and I confess to getting just the tiniest bit tipsy from the excellent wine we drank, Doc not partaking in more than one glass as he still had to drive us from the railway station. Sat there looking at my damn fine escort I thought about something I had considered as an option if I couldn't find Mr Right.\n\nI wasn't really looking for a man, I wanted a child.\n\nWhy not just have sex and get pregnant. \n\nEnd of story.\n\nThere was Doc, and he looked incredibly good and my feelings for him were increasing by the minute.\n\nOn leaving the restaurant, we walked arm in arm back to Covent Garden Tube Station, and standing on a platform we had all to ourselves, I leaned against him and smiled up at him.\n\nHe kissed me.\n\nI kissed him back to let him know it was OK as the train arrived. We got on and were soon heading out to the mainline station and Doc's parked car.\n\n\"So are you any closer to finding Mr Right?\" he whispered, I guess before he kissed me again.\n\n\"Oh... well... it isn't necessarily Mr Right that I'm looking for.\" The fresh air on top of our wonderful night and the wonderful wine made me bold.\n\n\"Really?\"\n\n\"Really!\" I giggled back to him.\n\n\"OK,\" he was grinning.\n\n\"I...\" I flushed, my wine-addled brain screaming 'just tell him!' So I did. \"I'm looking for a sperm donor.\"\n\n\"A sperm...\"\n\nI suddenly realised how awful that must have made me sound!\n\n\"An actual sperm donor!\" I said, \"I... the reason I broke up with my ex was because I wanted children and he didn't\" I moved slightly closer to him. \"I actually want a sperm donor.\"\n\n\"OK,\" he said, \"Are we talking a test tube here?\"\n\nMy face burned and I looked away from him for a second.\n\n\"I'd much rather it was less complicated than that, to start with.\"\n\n\"To start with?\"\n\n\"Doc, I won't even try to pretend that I don't find you incredibly attractive,\" I gabbled conscious of the nature of this discussion and how horribly wrong it could all go but I was in too deep now, \"I want to start a family and I can't afford all of that 'In vitro' stuff, so, well... the more I think about it, the more I'd really like to try it the old fashioned way until I know that it won't work.\"\n\n\"And... Me?\"\n\nI took a deep breath,\n\n\"Please...\" I felt my cheeks burn.\n\n\"Wow!\" he said, \"A man doesn't get an offer like that every day.\"\n\nI spluttered,\n\n\"If you'd rather not, I'd totally understand. I know I'm not the...\"\n\nHe kissed me again.\n\n\"Fay, I'd be honoured,\" he said with a smile, \"and let's face it, you're gorgeous. Just the thought of making love to you is enough to set my fires burning, and something so lovely as that, well...\"\n\nI smiled and was lost for words; while I'd talked about the mechanics of pregnancy, my handsome escort talked of making love to me! And It was perhaps the nicest complement I'd had in years, certainly Ron had never complimented me like that. \n\n\"Doc,\" I smiled, the relief evident in my face, \"the feeling is mutual trust me!\"\n\nWe kissed, sealing our so far unspoken agreement.\n\n\"You've been waiting a while to ask me that haven't you.\" He said.\n\n\"Yeah,\" I said with a deep breath.\n\n\"Well you look so much better for getting it off of your chest honey.\" He grinned.\n\n\"Thanks,\" I said and began to wonder exactly how we were going to do this, but Doc came to my rescue.\n\n\"I'm guessing that you're ready to start this err... pregnancy?\"\n\n\"Yes,\" I said, \"I've actually been ready for three or four months.\"\n\n\"Right,\" said Doc, \"how about we do this properly. We dress up in something posh, go out to dinner, dance a little, drink some expensive wine and then retire for the night and whatever might come next to a rather lovely hotel room.\" He looked me in the eye, \"if all goes according to plan, breakfast on the patio, lunch in a country pub, then I drive you back to your place where you monitor the situation via your body clock and menstrual cycle.\"\n\n\"Sounds fantastic,\" I said moving closer.\n\nDoc had the most cheeky glint in his eye and I had the strangest feeling in my soul that said, 'None of that shit Doc, let's go back to my flat and fuck like rabbits -- right now' even though I had just started my period .\n\nHis look changed slightly and I had the most terrible feeling that he had read my dirty mind, and he actually had.\n\n\"Pace yourself Fay,\" he said looking cool about the whole thing, \"your cycle being in agreement of course, how about we do that next weekend, I'll book everything, pick you up from your place Saturday mid-day and we can do lunch, then drive to the hotel.\"\n\n\"That sounds great,\" I said, \"my body clock should be just right by then.\" I figured that I'd have finished, possibly even ovulated by then.\n\nWe kissed like mad things, something we hadn't done before and somehow the fact that we now knew we were going to be having sex had freed our minds and taken some of the embarrassment and hesitancy from our... well, our relationship I suppose. As we walked from the station to the car park I slipped a hand into his and moved closer.",
        "That was that, we held hands whenever we were out on our own from that point on. He drove me back to my place and dropped me off. Being my part of town there was nowhere to park and I just knew that the bloody council traffic wardens came around at two in the morning and put tickets on cars that thought they were safe until seven.\n\nHe saw me to my door, his car parked in the road with hazard lights flashing,\n\n\"I'd love for you to come up,\" I said, looking sadly at his car in the road.\n\n\"No problem sweetie,\" he said, \"I'll see you in the office on Monday and we can chat about next weekend.\"\n\n\"Well how about this, a little something to keep you warm tonight.\" Stood on my bottom step, I put my arms around his neck and pulled him close, pressing my mouth to his.\n\nShit, but he was good. \n\nWe closed our eyes and our tongues joined together in a wet embrace, but my eyes flew open in shock as his hands moved from the small of my back to one on each cheek of my arse with just the lightest cotton of my long evening dress between his fingers and my skin, I was wearing a tiny string with a tiny pad .\n\nHe must have heard my gasp and felt my purr as he squeezed each cheek.\n\n\"You like that obviously,\" he whispered in my ear.\n\n\"Oh yeah,\" I said, \"I like it a lot.\"\n\n\"So do I,\" he whispered in my ear again, \"I am so looking forward to this...\"\n\nHe stood in my doorway for a good twenty minutes. What am I talking about, it was a fantastic twenty minutes, and it only came to an end when a pizza delivery car beeped it's horn as Doc's car was still blocking the road. He pecked me a final kiss on the cheek and ran to his car and drove away.\n\nI went to bed feeling quite gooey and girlie, and just a bit excited. It wasn't just excitement about finally having a child but also the process of getting that child wasn't going to be so bad either. In my head Dan 'Doc' Savage had just seemed to be a good choice of father for my child and the mechanics of it had always seemed optional, depending on his reaction to my request. Suddenly I had booked a weekend with him in a country hotel where our one task was to make love, quite a few times if Doc's statement was anything to go by. Confession time, I was so turned on and excited that I couldn't get to sleep until I'd masturbated! \n\nI was hardly a sweet innocent virgin, Ron had been my third serious 'partner'... no, I can't use either of those terms to describe him, but that is how the western world describes that relationship.\n\nBoyfriend number 1 had been Stephan at university and we had a very nice freshman year in each other's rooms, and eventually after five months of kidding ourselves in our second we had a great Christmas party and slipped back into my room and we both lost our virginities to each other.\n\nLike many virgins the sex wasn't spectacular but it was a start and gave us both the confidence to continue. Away from home, free from parental overwatch and allowed to be our own people Steph and I learned from experience about the wonders of lovemaking. To some heartbreak Steph went home to the North of England, I went home (a much smaller distance) and stayed in the south. Steph wanted to me move north to be with him in what I considered to be 'a northern wasteland', while I wanted him to come and work in London with me. We weren't perhaps as mature and grown up as we had thought.\n\nOnce at work as an assistant landscape architect with a London Borough, I had a few nights out with mates and had a small number of minor romances but nothing serious until I met Ben as a twenty three year old.\n\nBen was an army officer I'd met on a weekend event that a whole lot of us young professionals had been bullied into attending to 'push ourselves' and all that self-developmental, motivation shit that employer's love the idea of their staff attending - not them of course.\n\nIt was great fun and my team and I got outrageously muddy, ran over assault courses, problem solved, built rafts and all that sort of thing that I have never in my life made use of since. Not once.\n\nBut I did get to meet Lieutenant Ben Walters Royal Engineers who was responsible for getting us through the problem solving with barrels, ropes and planks. This was Sunday morning and I was the last female left in a previously ten person team. There was me and seven boys, and being well-educated driven boys from the financial services sector, all intent on being the most manly, and having everyone do what THEY said we were getting nowhere, and I was sat down looking at my phone, bored shitless.\n\nLt Walters was just as bored with watching this posse of show-off tossers arguing over an invisible ravine as I was and was chatting to me because I had the same phone as him. One of the boys howled that if I wasn't going to take part then I should bugger off like the other two females had.\n\n\"Right on,\" I said, \"You pretty boys can spend the afternoon arguing about the single easiest task of the whole day that way can't you!\" and I picked up my rucksack and started the slow walk back to rows of tents we had slept in for a few hours the night before.\n\nAnd Ben offered to see me back there. We chatted about how much we both detested that kind of shit which apparently screamed out who the natural leaders where.\n\n\"I'm a landscape architect,\" I said, \"if I ever have to get my team across a notional ravine I'll contact the army.\"\n\n\"Call me,\" said Ben, handing me a scrap of paper with his mobile number.\n\n\"I might just,\" I said.\n\n3 months later and not having had a date since before my military weekend, I found the scrap of paper in the boot of my car where it had slipped out of my rucksack. On a whim, I rang it.\n\n\"Hello?\"\n\n\"Hi,\" I said, \"is that Lieutenant Ben? This is Fay, the girl you gave your number to on the executive weekend, I need to talk to you about a ravine that I need to get my team across.\"\n\n\"Fay?\" It took him a second, \"Fay! Yes! How are you?\"\n\nHe was back at his barracks in Kent and not far from my London flat. We met two nights later in London and he took me to his lovely hotel room at the Army and Navy Club, and I was charmed from the railway station, through the restaurant, back to his room and out of my clothes. \n\nHe was great fun and I would travel to Kent to visit him and he would travel to London and stay with me. We had a great time and I really enjoyed living the high life with him. I went to quite a few formal dinners with him and wore long dresses for the very first time, surrounded by men and women with medals and braid and brass. It was like something out of an episode of 'Private Lives'; slightly silly, very dated, wholly pointless to a career civilian like me, but quite fabulous.\n\nWe were together for nearly two years and a bit serious, when he was put on a warning to go to Afghanistan. He had been away on training and such before but this was the real deal, but he assured me that his job was quite safe and while there was always some kind of danger there, they had the best soldiers, the best kit and the best vehicles to do what they did. I cried when we had our last dinner before he flew out but he said he would come back for his leave period in three or four months. We skyped and emailed but then he told me with some hesitance that he was going off to a patrol base and would probably be out of contact for a while.\n\nHe was out of contact for a month, then six weeks and never answered his emails. I was pretty sure that nothing was wrong as the press would report fatalities and injuries, and over our two years I knew many of his colleagues and their 'wives and girlfriends'. Eventually I got an email from him saying that he wouldn't be seeing me during his leave as he had 'other plans'.\n\nThe 'other plans' involved another Lieutenant, another Engineer officer and a female one at that.\n\nDespite our two years together it seemed that being thrown together for two weeks with Helene in Camp Bastion made him completely forget me. I found out later from his Facebook page that 'Helene' was an ex-girlfriend since he went through training and being in close proximity to her and little to do in the evenings they were 'back at it again'.\n\nAfter that event my love life went a little flat until I met Ron who was a friend of a colleague and started to hang out with my group of Friday night mates. That was almost six years ago.\n\nBut now I was about to enter into an new... relationship? I was certainly planning to have relations with Doc that was for sure. But a relationship? It had to be; let's face it, I'd stopped looking for Mr Right after our second cinema night.\n\nI hadn't really thought about that bit. I was, in my head, out for someone that could supply the other bit of the miracle that would be my child; our child I suppose. So keen had I been to get pregnant I really hadn't even considered that 'my donor' would want a part in baby's life. I was thinking that it might be quite sweet for Doc to be a Godparent or something, figuring that he wouldn't want the hassle or implied responsibility of a child.\n\nOn Sunday morning I woke at work o'clock and reaching over for my smartphone I googled information about sperm donors and looked for information about it. I found quite quickly that unless Doc donated sperm through the government funded authority, he would always be the father of my child whether I involved him or not, with rights to see the child, be named on the birth certificate and all that sort of thing.\n\nI would need to have that discussion with Doc of course and I wanted to let him know that while I really wanted a child, his part in the process was purely the nice bit and I would never come chasing him for money to support it, or put it through private schooling or University.\n\nI was just about to finish my period and looked at my electronic diary, my most fertile time would be between the next Saturday and Boxing Day, what a present that would make! Christmas was just getting better and better!\n\nI only saw Doc a couple of times that week as I was out on site surveys and had meetings with developers to discuss what kind of things they wanted on their sites.\n\nThursday evening it finally hit me that I only had a couple of evenings to prepare for our... date...\n\nWhat!?! It wasn't a date! We had already discussed what was going to happen; dinner, dancing, sex, sleep, more sex. Hopefully at the end of it there would be a special something growing into someone inside me. Suddenly it became very real.\n\nI ran from my slobbing on the sofa to my bedroom and almost pulled the doors off of my wardrobe in my haste to see what was inside. Stupid, because I knew exactly what my Saturday evening attire would be. I had a black cocktail dress that was not quite a Little Black Dress, but was backless and I knew that my boobs would hold their own without the support of a bra in it. It had a layered skirt that would move if we did indeed dance. I took it out of the wardrobe and held it in front of me and it still looked as good as the day I stretched my credit limit to buy it, then put my two inch black heels with it.\n\nI got down my weekender bag, finding my Ray Banns, sunscreen, bikini, beach towel and flip-flops left in it since my last Mediterranean trip with Ron months and months, and what seemed like a lifetime, ago.\n\nI left the bikini and towel in there, after all the hotel might have a pool.\n\nI poured through my undies drawer carefully picking out the matching sets of bra and panties, the next drawer down was a rather pretty, lacy nightdress which I carefully folded and put into my bag with my undies.\n\nNext it was 'day clothes'; my tight jeans, more tailored tops, a tailored cardigan, and finally a selection of jewellery and make-up. I was ready.\n\nSaturday morning, I was laying on my sofa and nodding off, quite simply because I hadn't slept well for the last two nights. I woke up to the buzz of my phone with Doc announcing that he was parked in the road outside.\n\nI was dead nervous! Checking out my look in the hall mirror I opened my front door with my bag, stepped outside, locked up and took a deep breath. Here we go...\n\nBy the time I'd gotten to the bottom step I had almost run out of bottle to ask Doc the big question about his impending fatherhood. I opened the door and handing him my bag slid in to the front passenger seat. Doc looked really good, no two ways about it.\n\n\"Hey Fay,\" he said beaming me a very genuine smile, \"you look gorgeous!\"\n\n\"Not looking so bad yourself Doc,\" I said leaning over to kiss him.\n\nAfter literally two seconds of contact a car was pulling up behind Doc's truck and he had to drive forward. I could only stare at him beaming an idiot grin back at the one he was beaming at me.\n\nWe were both equally nervous which I thought was quite sweet. Eventually he spoke,\n\n\"I almost left two hours ago,\" he said looking sideways at me as he drove.\n\nI giggled,\n\n\"I had very much the same thought,\" I said, \"It seemed like an awful long time to wait for...\" I struggled with how to describe what we were going to be doing, \"our night out.\"\n\n\"Me too.\" I smiled and reached out my right hand to touch his that was loitering on the gearstick, I lightly stroked the back of his hand. \"I...\" he went to speak, but stopped himself almost as quickly as he started.\n\n\"So where are we going?\" I said turning to face him, slightly bouncy in my seat.\n\n\"Ah, that would ruin the surprise!\" he said with a wry smile.\n\nWe drove for about an hour, and I kind of counted down as to where we were going. We drove over the M25 northbound, so it wasn't London or the South. We stopped heading north shortly after and then passed signs for Oxford where we stopped for lunch, then we were into the Cotswolds and names I remembered from my youth and family holidays with my parents and two younger brothers. Bourton on the Water, Stow on the Wold, Moreton in the Marsh, then after what seemed like a very short time we were pulling into a country house hotel a few miles outside Worcester.\n\nThe bright afternoon sun was sinking slightly giving a wonderful warm glow to what promised to be a lovely evening, an evening that was going to have a rather special ending to it. He parked in a marked 'guest' bay and turned off the engine. We looked at each other with soppy grins.\n\n\"One of us really needs to get out of the car,\" said Doc.\n\nI giggled again and undid my seatbelt, and pushed my door open. Doc did likewise. \n\nWithin moments we were walking into the quaintly small, walnut panelled, seasonally decorated lobby with an huge Christmas tree where we were met by a smartly dressed older man in a suit. He looked us up and down.\n\n\"Mr Savage?\" he said with a faintly accented voice.\n\n\"Yes,\" said Doc with a smile and an extended hand.\n\n\"A pleasure Mr Savage.\" He shook hands. \"You're in the Duke suite,\" he said taking a key from the board behind him and stepping around his table reached out for my weekend bag with the suit hanger around it, \"Madam?\" I handed the hands across and he took them walking across to a very grand staircase.\n\nWith no bag for me to carry, Doc very gallantly took my hand as we slowly stepped up the thickly and richly carpeted stairs, the whole place just reeked of class and I was waiting for butlers and housemaids to appear from each of the wonderfully panelled doors.\n\nWe reached ours and it was obviously the biggest and most expensive, and our receptionist opened the door stepped in and held it for us to enter.\n\nIt was amazing, and just made me think that Maggie Smith and the rest of the residents of Downton Abbey would be meeting us for dinner, the Christmas decorations were also fitting for the age of the house, and suddenly I decided that my house decorations had to look just like this! \n\nThe receptionist opened the curtains, then the various doors in our room, no SUITE, explaining the bathroom, bedroom, even a small day bed before us. He explained how the phone worked to call room service, what was available via room service and what time dinner started and finished apologising that it was mostly Christmas parties that evening. He wished us a pleasant stay, and backed out of our room with a bow.\n\nAs for me my bottom jaw was still hanging as I stared around me in shock and awe.\n\n\"I take it that Madam approves?\" said Doc with a big smile.\n\nI looked back at him.\n\n\"Madam definitely approves.\"\n\nAlthough I was feeling really good about what was going to happen, I was a bit concerned about what would happen next. The really close sexy feeling we'd had in the middle of the week was a memory and I was just so nervous but fortunately Doc noticed and wandered across and gently slipped and arm around me.\n\n\"You feel a bit tense,\" he said giving me a squeeze, \"there's a Jacuzzi through there.\" He pointed through to the bathroom.\n\n\"Is there a pool?\" I asked thinking about my bikini in my bag.\n\n\"I do believe there is,\" he said with a grin. He paused for a second, \"Look Fay, honey... when I said there was a Jacuzzi I wasn't suggesting that I climbed in with you.\"\n\n\"Don't worry Doc,\" I said bending my neck back to look up into his handsome face, \"I was suggesting that we go to the pool together.\"\n\nI took my bikini into the bathroom and changed, and once I'd slipped on a robe Doc did the same and soon we were walking through the hotel following the signs for the pool. Once there it was just perfect, obviously it had once been a green house or conservatory it had a huge pool in it, with any number of loungers and a small diving board for the 12 foot deep end.\n\nI jumped in and swam a few a few lengths enjoying that strange weightlessness that you only get when swimming. Doc was in the water next to me and stopped at the shallow and stood up. Fuck but he had a great body on him. He could see that I was looking and was impressed,\n\n\"Gym attender, please don't be impressed,\" he said, \"takes me two hours twice a week to look this good.\"\n\nI swam up to him and stood up too. My bikini top was boned and was supporting me and shaping me just how I wanted and my cleavage was perfect. I stepped up the ladder so he could see my bottom, dissected by the thin strip of stretchy material, lifting and separating my buttocks; It was his turn to stare now.\n\n\"Swimwear by Harvey Nichols,\" I said looking over my shoulder, \"best \u00a340 I ever spent, once...\"\n\nHe giggled and pulled me back off of the ladder and into the water and his arms. We kissed again and I felt my nipples harden through my bikini and ground them against his chest. Next his fingers were slipping gently under my bikini briefs and stroking my bottom.\n\nFuck but I was in the mood already. This was ruined by the clatter of the fire doors banging open and closed as some more people came into the pool area. Shit.\n\nWe swam some more, and we played around some, petting each other under the water each trying to outdo the other, and I won by pushing him back onto the seat and pushing my groin against his, feeling his erection against me for the first time. It boded very well.\n\nWe kissed a few more times and decided to head back to our room for a shower, and whatever else might happen.\n\nWe got back to our room and it was obvious that we were both extremely in the mood, and we all but ran the last thirty yards down the wide corridor. We got to our room and fumbled the lock and the door open and as soon as we were inside we were pulling at the telling gowns that we were both wearing, falling back onto the wide bed.\n\nFortunately, the walk back to our room, the warmth of the rooms and the towelling of the gowns had pretty much had us dry but for our hair, but that really didn't bother either of us as we pulled and tugged free of them, then our swimming costumes. We were suddenly naked on the bed and Doc was over me and guiding his hard cock towards my flushed and wet pussy.",
        "\"You ready Fay?\" he said, \"I know we talked about some dinner and some romance before but...\"\n\nTo shut him up I pulled him down on top of me for a long hard kiss that, coincidentally, had the tip of his rock hard cock up and inside me for a good quarter of its length, and I cried out in the pleasure of it.\n\nDoc pushed up on his elbows,\n\n\"I'll take that as a yes then?\" \n\nHe started to push hard in and out me and I grabbed him with my thighs and held him, hugging him to my top half, watching with interest as he tried to look down at my tits that he had been admiring for the last few months. \n\n\"Oh Fuck, that's good Doc,\"\n\n\"I'm rather pleased with it myself Fay,\" he replied, \"It's been a while.\"\n\n\"Five months for me,\" I said.\n\n\"More like five years for me,\" he replied pushing hard into me again, as if he was remembering what all of this fucking business was all about, \"probably more in fact\"\n\n\"Is it as good as you remember?\" I pushed my chest up so he could get a better look at my tits.\n\n\"Oh Fuck yeah, really good Fay, better than I remember! Christ it feels good, not sure how much longer I'll be able to hold out.\"\n\n\"Just go for it Doc, it feels great from where I'm sitting anyway, so...\"\n\nSuddenly he was not only pushing down, he was pushing in, up, down, across and sideways as he pushed all of himself into me.\n\n\"Awwww shit!\" I squeaked feeling every inch of his big dick stretch me out in just the nicest most exciting way, and suddenly I was coming!\n\nA penetrative sex orgasm! Fucking what?\n\n\"Ooh Doc!\" I gasped stupidly, as if it was a problem, \"Shit Doc, I'm com... ooooooh shiiiii...\"\n\nHe stopped my ecstatic groaning exclamation by locking his kissing mouth over mine as he groaned and joined me in a mutual orgasm, his ejaculate splashing against the back of my puss in strong jets.\n\nWe lay there both breathing heavily but very pleased with what had just happened.\n\nWe just stared at each other with big silly grins.\n\n\"Well there's number one,\" he said, his large dick still inside me and not showing signs of reducing in size.\n\n\"Yeah!\" I giggled shocked at myself that I could have stripped naked in front of this man that I knew from work and lots of date nights, although they were never 'dates', not until right at the end at least.\n\nNow that the passion was done we were two naked people, friends that had screwed each other and I think we were both having a 'what the fuck did we just do' moment. Fortunately it passed in seconds when Doc pushed himself up to look down at my naked body, still joined in the middle to his.\n\n\"Bloody hell Fay, you are fucking gorgeous!\" he leaned back down and we kissed, and that was that, discomfort over.\n\nWhatever brief moment of self doubt I might have had disappeared as we smooched, kissed and caressed through our coming down moments, and Doc stayed just were he was, still inside me! Hell but that turned me on sooooo much, and soon he was grasping and massaging my tits, and kissing my nipples, with the odd time that his hands went down to my arse just that didn't miss out. I was stroking his face, his broad chest his sides then using my pelvic floor muscles to massage that special bit of him that I currently couldn't get my hands to. I smiled at him as I squeezed him then pressed my thighs together just to ensure he was getting of my best. \n\nAfter fifteen minutes of our passionate play I felt him slowly start to slide in and out of me again, rock hard and sexy! Twice in less than an hour! What the fuck? \n\n\"Oh Doc!\" I gasped as he worked me up to my next orgasm, reminding myself that this was about me getting pregnant not getting screwed to paradise and back again. That implied noble reason and the suggestion of naughtiness in my enjoyment just turned me on so much more. This whole pregnancy gig was going to be fun!\n\nI woke to the sound of him getting up and I watched through half open eyes as he walked naked to the bathroom, his fit body looking fiiiiine. He shut the door, did what he needed to, washed his hands and came out again, looking towards the bed and most of my nakedness peeking out from under the silk sheet. In the corner of this grand hotel room there was of all things a large scale acoustic guitar, and on his way back he picked it up, walking through to the lounge area and I could just hear him strumming it gently. He gave a couple of strings the faintest tweak and played a number of chords. He strummed a very easy tune and stood looking out of our bay window at the frosty woodland illuminated by the rising moon and the garden lighting,\n\n\"Are you lonesome tonight, do you miss me tonight, are you sorry we drifted apart,\n\nDoes your memory stray, to that bright summer's day, when I kissed you and called you sweetheart,\"\n\nOK, I know that particular song was never the happiest of tunes, but I could hear so much emotion in his voice and rolled out of bed to watch and listen. \n\n\"Does the chair in your parlour seem empty and bare, do you gaze at your doorstep and picture me there,\n\nDoes your heart fill with pain, should I come back again, tell me dear are you lonesome tonight...\"\n\nHe added a jangley guitar break and I leant against the separating door and just looked at his face, with so much concentration in what he was doing,\n\n\"Does your heart fill with pain, should I come back again, tell me dear are you lonesome tonight...\"\n\nAs the song reached its conclusion, he saw me watching with such rapt attention and quickly put the instrument down with an embarrassed look. At least I thought it was embarrassment at the time, it was another emotion.\n\n\"That was lovely!\" I said, stepping naked into the half light, \"I never knew you could play the guitar?\"\n\n\"A bit,\" he grinned, wiping at something on the head of the instrument, \"learned a few chords when I was younger, bit of a band when I was at college. Don't have a guitar these days, no room for one in my little place.\"\n\n\"That's such a shame, I used to sing with a blues band when I was at college.\"\n\n\"We'll have a jam session one day,\" but I knew front the distracted look on his face it wasn't going to be today.\n\nWhatever had been on his mind disappeared in an instant when he saw that I was stood there in front of him completely naked.\n\n\"Wow!\" he said. I giggled and did a bit of a twirl so he could appreciate the whole 'me', \"Fay you are gorgeous!\"\n\nI wrinkled my nose and twirled my hair, not just at the embarrassment of standing before my new lover... sorry the prospective father of my child, naked but with the girlish embarrassment of that compliment. \n\n\"WHAAAT?\" I said walking closer to him. \n\n\"Always had a thing for brunettes,\" he said, \"especially pretty, English-rose, hourglass figured brunettes with cute noses!\"\n\nI stepped up close and we wrapped arms around each other kissing with such passion that I felt dizzy for a moment.\n\nWhen we finally stopped I definitely felt the need for refreshment, and suggested tea.\n\n\"Well it's only six thirty,\" he said, \"the restaurant opens at seven, let's shower, get dressed and go down to the dinner we discussed.\"\n\n\"Oh yeah!\" I said hugging his naked body to mine, \"then we'll be coming back, going to bed and err... doing the wild thing!\"\n\n\"Again!\" he said with some element of pride.\n\n\"Yes,\" I said, \"now that we had the final rehearsal and the dress we can go for the first performance!\"\n\nWe just looked into each others eyes and kissed, \n\n\"Always enjoy working with a perfectionist...\"\n\nOur dinner was very seasonal because the hotel had now pretty much filled up with revellers in smaller groups around the large dinning room and they were very jolly, with crackers, party hats and the like, and we felt quite pleased to be moved out into a small conservatory with two other couples on their own away from the madding crowds although we could still hear the Christmas music, and it was the same CD that my parents had played and it made me happy and just the tiniest bit melancoly. I really was starting to get into the spirit after convincing myself it would just be a week's holiday with slightly more interesting TV until Karen, Carl and Lily got home.\n\nDressed in my stretchy cocktail dress I felt really good about myself and felt even better about the man across from me in a very smart dark suit that made his already broad torso look even better. Being a lover of good soup I had the richest leek and potato soup, while my carnivorous partner had scallops with bacon. While the rest of the big room was tucking into turkey, I was eating the most tender lamb shank while Doc had the steak, of course.\n\nBecause we had done this so often it wasn't such a new deal, and we quickly fell back into our previous personas and had a laugh, only this time we were both drinking, having finished our first bottle of asti spumante and considering a second.\n\nWe finished with ice cream cakes with pineapple and even had coffees. Doc was minded to order a cheese board with some port but I couldn't eat another thing.\n\nIn the main room the festivities were well under way and tables were being cleared for the subsequent disco dance floor.\n\nI did think it might be quite nice to dance with Doc but also thought it would be much nicer to go back to our room and continue our horizontal two-step that we had rehearsed before dinner.\n\nWe did, stopping only to wish other revellers the best of the season as we headed back to that baronial staircase and our room. As we climbed he took my hand and it was so lovely, just a simple caring thing that meant so much.\n\nBack in our room, he asked if I wanted anything else from room service, more booze, food, anything I wanted, but I was fine. \n\n\"Doc, there's only one thing that I'd like to finish this perfect day.\"\n\n\"Chips?\" he said with narrowed eyes.\n\nI laughed,\n\n\"Damn, saw straight through my cunning subterfuge.\"\n\n\"Kitchen's probably closed,\" he sighed. \n\n\"Damn!\" I snapped, \"guess we'll just have to have more sex then.\" \n\n\"Oooohkay,\" he groaned and undid his tie.\n\nWithin 60 seconds and a fair bit of laughing we were both naked with a trail of our clothes leading back to our sitting room we were warmly snuggled under the duvet and hugging and kissing like we'd been doing it for years. I climbed over him.\n\nI woke the next morning to a rattle of crockery and the smell of hot coffee, freshly baked bread and pastry, bacon and Doc thanking the room service staff for their attention. I propped myself up on my elbows and stared through to where Doc, in a towelling gown was giving a small tip to both of the servers.\n\nAs he closed the door behind them I slumped back feeling a touch of a hangover from the two bottles of fizzy wine we'd done for but more than that, the faint ache in my upper thighs from the squeezing I'd done and the rather energetic cowgirl I did sat on Doc after he'd rode me to paradise for the fifth or sixth time that day. There was also the faintest glow from my groin which was part from the number of times I'd been fucked and also the number of orgasms I'd had.\n\nIt was without doubt the sexiest weekend I'd ever had, including all of the weekend trips abroad with Ron.\n\nI rolled over and felt a similar pain in shoulders which was probably more to do with my exercise from the night before and Doc saw my pain.\n\n\"Oh Baby!\" he said walking across and lifting me naked out of our bed of the night before. He carried me to the sitting room where breakfast was laid out for us on the table, and as my bottom landed on the chair I picked up the cup of hot coffee and drank gratefully. That was followed by a croissant torn in half with spread jam, then a roll with butter before I attacked the cooked bacon, scrambled eggs, sausages, mushrooms and all of the other goodies on a warming tray. \n\nThe pot of tea and toast with marmalade was the perfect end to a lazy Sunday morning wake-up. We went back to the pool and had a final swim, before back to our room to shower and pack up for our drive home.\n\nAs we pulled away from the hotel I turned to wave at the receptionist that had taken our bags, I looked to Doc.\n\n\"Thanks for a wonderful weekend Doc, I really mean it, all of it -- the hotel, the pool, the...\"\n\n\"The performance?\" said Doc at my slight hesitancy.\n\n\"Fuck yeah!\" I hissed.\n\n\"So, I'm guessing that... err... you wouldn't be averse to further... performances?\"\n\n\"Hell yeah,\" I said without hesitation, \"I'm not sure that I'll get pregnant with the...\" I counted on my fingers, then made a great play of giving up, \"numerous times that we performed. Best to have another five or six goes?\"\n\n\"Is that per day Fay? I might need to go on vitamin pills.\"\n\n\"But it'll be worth it Doc.\"\n\n\"Let's hope so.\" \n\nAt that moment as I lay back in his large car seat, I struggled whether it would be worth it for me being pregnant or the fantastic screwing I was getting used to.\n\nI asked Doc if he wanted to stay over at my place that night, but he said he had to visit family to drop of some presents because he was up to the north of England for the Tuesday and Wednesday but promised me he'd see me on Thursday with a view to our usual night out on Friday. \n\nI leaned across the car to him,\n\n\"You could have a Friday night in Doc,\" I whispered kissing his cheek, \"In me that is...\"\n\n\"Yeah,\" he said, \"I find the cinema is occasionally overrated.\" \n\nWe kissed deeply and long, our tongues getting their last workout for a few days and eventually I had to get out of his car and let him go, with other cars in the street behind him forcing him to drive on as normally happened in my busy road. \n\nI slept well that night.\n\nEventually Thursday came and we met again in the kitchen and I just wanted to grab him! We went for a coffee that lunch time and discussed him coming to my place for the whole of the weekend before Christmas, perhaps more. \n\nThe only crunch in our relationship came the next day, Friday. It was the day we shared out our Secret Santa gifts, and I will confess that I felt so very close, both physically and emotionally, to Doc and it might be getting obvious.\n\nOK, I had bumped into Doc a few times that week after our weekend away, and I was massively conscious of the friends and colleagues around us and I hoped my smile wouldn't broadcast to the entire office that I had just the hugest crush on the senior partner, The Doc, and that we'd been at it like rabbits for two nights and a day and were planning the same again, and soon. \n\nThe 'Secret Santa' was planned for the Friday before the Christmas week and I was thinking all kinds of sweet things for that weekend -- together. We'd all swapped gifts and had a laugh and I was quite touchy feely with the big man, I couldn't stop myself. \n\nOnce over I was making coffee as usual and he had just the biggest smile for me, and it could have passed as being quite innocent as Doc was a nice bloke but my returning grin was just a toooo soppy and girlie. Someone had noticed.\n\n\"You're getting a bit friendly with Doc,\" said Nicki, one of the PA's to the senior partners after Doc had gone.\n\nThat threw me. Nicki has always been very nice to me, if a little proprietorially maternal being fifteen or twenty years older than me. I didn't know if her slightly long look at me was because of that propriety, whether she thought him above me, whether that kind of thing wasn't for the office or if she just fucking fancied him herself.\n\nWe'd been 'going out' for three months (Not to mention sleeping together) and I kind of thought that alluding to the fact couldn't hurt, surely.\n\n\"Just messing around Nicki, nothing more.\"\n\n\"Just messing around.\"\n\n\"Yeah!\" I was getting a bit cross with her 'up herself' attitude now, \"pictures, a show, just having a laugh,\" I said, my face letting her know it was none of her business.\n\n\"He's fucking married Fay!\" snapped Nicki.\n\n\"What?\"\n\n\"FUCKING... MARRIED!\" she said leaning close to me.\n\n\"Nicki,\" I tried to but in.\n\n\"His wife was... is my very best friend and I won't see you... fucking mess around with her husband!\"\n\n\"But...\"\n\n\"But nothing Fay!\" she snapped, her hands on her hips. I was looking at her hands guessing that this raging woman would attack me, despite the happy seasonal bonhomie we had all shared just minutes ago. She saw me backing away and guessed that her approach was, perhaps, a little too full-on. \"He's married!\" she hissed, \"and she's... unwell -- I sometimes think he needs to remember that. I shall be telling her what's going on,\" she leaned forward just close enough to be 'in my face', \"you can fucking trust me on that!\" She pointed a finger at my face and backed out of the room and into the corridor. I could see that she caught her breath and put her 'business face' back on again.\n\nBack into the office he could see that I was somewhat distracted, and asked me if everything was OK. I looked around and checked that Nicki didn't have us under observation.\n\n\"I... err... I had some news today.\" I said.\n\n\"Really?\" he caught his breath, \"Is everything OK?\"\n\n\"I don't know.\" I said huffily.\n\n\"Let's talk about it over dinner tonight...\"\n\n\"I don't know,\" I said cutting in on him.\n\n\"Please,\" he said, \"let's talk about whatever has upset you.\"\n\n\"Is it that obvious?\"\n\n\"Oh yeah,\" he said.\n\nWe made plans to both walk into town at lunch time and talk about the weekend, to the coffee shop where, as it happened, I had my last heart to heart with Gwen some months back,.\n\nI got there first and was properly stewing now. I was cross; part of my anger I think was because deep down I really had no right to be angry with him. Doc was probably going to be the father of my child, nothing else, and I had no claim on him. He arrived and waved, and took his Americano and sat across from me at the table in the window. I couldn't make eye contact with him.\n\n\"You're married I understand,\" I said to him, my eyes down.\n\n\"Yes,\" he said sipping his coffee, \"I am still married.\"\n\n\"Separated?\"\n\n\"Technically,\" he said, \"We haven't lived together for nearly two years now.\"\n\n\"Technically? Nicki said...\"\n\n\"Nicki told you did she?\" I nodded, \"Fay,\" He drank his scalding coffee, obviously thinking on his next statement. \"Finish your drink, I want to show you something.\"\n\nI downed mine and stood, following him out to the car park and slipped into the passenger seat of his tall Toyota. He rang the office,\n\n\"Hi Becky, this is Doc; listen, I'm out and about on a consult with Fay on that Cavendish job, can you put us on the board as out of the office finishing on site? Cheers mate!\" He disconnected the call and dropped his phone into his jacket pocket.\n\nWithin ten minutes we were driving down a row of mews houses and he parked outside of one. We got out and he locked the car with his remote key.\n\n\"This is my place, or should I say 'our' place.\" He opened the front door and we stepped in. The place was beautifully and tastefully decorated and I stepped in feeling instantly comfortable, but it had that estate agent perfection that suggested no one actually lived there. \n\n\"Don't be impressed, all down to cleaners. I basically live in my bedroom upstairs, cook and eat in the kitchen, that's why it looks so spotless, I live here,\" he smiled wistfully, \"but it's not my home... not anymore...\"\n\nAbove the fireplace was a studio photograph of a much younger Doc and an amazingly beautiful woman. Naturally blonde, high cheek boned, slim, full lipped with a perfectly toothed natural and welcoming smile. \"This is Andie my wife, short for Andrea. The picture was taken about 12 years ago.\"\n\n\"She's very beautiful isn't she.\" I said.\n\n\"Oh yeah,\" said Doc with a grin. I waited for the heartbreak story of how she went off with someone else dumping the hot looking hubby. He looked very thoughtful, \"Second part of the journey.\"\n\nBack out and into his car, we headed out of town and into the suburbs, still quiet and only talking on the simplest level. We drove up to a tall wooden gate and Doc wound down his window and pressed a button on a post.",
        "\"Hello?\"\n\n\"Hi there,\" he said into the box, \"it's Doc?\"\n\n\"Of course, wait there,\" The first gate opened and Doc drove in. The gate now behind us closed and once the clang was heard, the gate in front opened and we drove further in up to a large car park with notices, 'no vehicles beyond this point', 'no motor vehicles', all looking very stern and serious.\n\nWe got out of the car and he walked towards a large Gothic looking house that just reeked of Pugin. Sorry, but I am an architect.\n\nDoc pressed another button, and a voice said, \"push the door Doc'. He did so and we stepped into the large hall. My nose was instantly hit by that institutional smell of disinfectant and noticed the number of older people walking about the place. They had made an attempt at brightening the place up and there were some Christmas decorations but not enough for a room of this size. There was a Christmas tree with badly wrapped battered looking packages under it which just made it look institutionally Christmas, like the decorations had gone up because they had to, rather than anyone wanted them up. It actually looked worse than if there were none at all.\n\n\"Are you here to take me home?\" said a lady stood just behind the door.\n\nI made to open my mouth, but Doc cut in,\n\n\"No Doris,\" he said, \"A few more days yet!\"\n\n\"Well, I dunno what my husband will think, I've got nothing in for his tea.\"\n\n\"He'll manage Doris, I'm sure,\" said Doc. We walked further into hallway and Doc stopped by a large book with drawn columns, and lots of signatures. He wrote his name, my name, his car registration and the time. I could see his name on the same page on twice on the page before.\n\n\"Hi Doc,\" said a smiling woman in nurses' uniform, \"She's not been so good today, but I'm sure she'll cheer up now you're here. Go on up.\"\n\n\"Thanks Jo,\" he said and took my hand.\n\nWe went upstairs passing more people some of them in nightwear, some in tracksuits or leisure suits, all wearing slippers, many with far away looks in their eyes, most in their seventies or eighties. He opened the last door, and stepped in.\n\nA tall thin, pale woman was stood at a large table in the middle of a sizeable room, a single bed in the corner, a dressing table but with none of the things you would expect in a woman's bedroom. The Christmas decorations so evident everywhere else at this time of year were absent but there were a few cards laying piled at the corner of the dressing table. On the floor were piles of scrunched up A0 an A1 sized sheets of white paper with pencil lines on them, but tossed around the room.\n\n\"Ah Doc,\" she said extending a hand, \"pleased you could make it, want you to check over my latest design project, can't get a response from Higgins and West.\"\n\n\"What you got then Andie? Show me.\"\n\nAndie?\n\nI looked at the face and the pale, stretched, dry skin too long deprived of sunlight, then the sunken eyes and hollow cheeks, and the unkempt, short, badly cut greying hair and dropped shoulders and there she was. The beautiful woman I'd seen in that studio portrait; Doc's wife Andie.\n\nShe spread a large sheet of paper across the table and it was covered in lines, some of which looked vaguely like the shape of a building. In the bottom right hand corner was a small hand drawn text box with some kind of scribble.\n\n\"I've tried something a little different this time,\" said Andie, moving her hand across the paper in long sweeps, \"but you know Higgins, they're never fucking satisfied.\"\n\nShe sounded so passionate about the whole thing, as if Higgins just existed to make her life slightly more complicated and she was a busy professional that could do with that kind of negativity in her life.\n\n\"I like it,\" said Doc, turning the paper to look at it, \"Tell me what you've got going on with this elevation?\"\n\nElevation? It was just a mess of lines but I guessed that Doc knew what he was doing.\n\n\"I want that long draw that we had with Barnet a couple of years back, it worked so well.\" \n\nIt was amazing, here we were in an institution, this residential home, and Andie was chatting away like this was top floor of a London design practice.\n\n\"You sure you're not getting too type cast Andie?\" said Dan without a hint of a smile, \"If Higgins see just one more Barnet, it's not surprising if they keep bouncing it back.\" He looked at me, \"Oh Andie, this is Fay, she's a landscaper at the firm, loved at head office.\"\n\nAndie looked down her nose at me, so I held out my hand,\n\n\"Good afternoon Mrs Savage,\" I said, throwing just enough deference, after all I had been a landscaper long enough to know that I was just another mud slinger compared with these great and noble building designers.\n\n\"It's Price,\" said Andie slightly defensively, \"Andie Price. You done anything I would recognise?\"\n\n\"I got an Institute silver medal for the gardens I designed at Port George...\"\n\n\"Never heard of it,\" I was shut down quickly and she turned her back on me, and I figured that was me out of the discussion, \"so what are your thoughts Doc?\" Her voice raised to show her antagonism at my inclusion I guessed.\n\n\"Looking good Darling,\" he said, \"Want me to take it away and let you have it back with some notes?\"\n\n\"Yeah I suppose,\" she said looking back at me again, \"Only professionals though,\" she all but sneered at me, \"don't worry about letting the Youth Training Scheme gardeners anywhere near it.\" She pursed her lips in ill-hidden contempt.\n\n\"Of course not,\" he said, and quickly rolled up the large sheet of design paper.\n\n\"Well, I'd better get back to it,\" she said, then looking at me added, \"Plenty to do, even if some of the bloody kids haven't.\" I could feel the anger in her starting to rise, possibly directed at me.\n\n\"I'll wait outside Mr Savage, it was nice to meet you Miss Price.\" I opened the door and stepped out into the hallway, and heard some hissed raised chatter coming from Andie about bringing bloody landscapers in on her projects and how did he, Doc, know that her drawings and ideas wouldn't be nicked by some kid straight out of the fucking unemployment office.\n\nDoc calmed her down and I peeked through the gap just to make sure that he was OK.\n\n\"OK Andie,\" said Doc leaning forward and giving her a hug and a kiss on her proffered cheek. As he started to collect the half-scrawled paper on the table he began to hum the tune of 'Lonesome tonight' and I could see that there was some confusion going on there and Andie was trying hard to get to the bottom of it. Some recollection of days past, of better times and loved ones.\n\n\"Shut that noise, I'm trying to work here!\" She turned, crossly shouting to her husband, \"AND I need more paper, the bloody typists aren't getting me what I need!\" she shouted slamming down her pencil which broke, \"FUCKING DAMN IT!\"\n\n\"I'll sort it Andie promise, will get you some more sent straight up. See you baby,\" he said.\n\nShe looked at him with a soft smile, which disappeared just as quickly.\n\n\"Yeah, see you Doc.\"\n\nHe pulled the door closed behind him, and we walked back along the corridor talking occasionally with more confused looking people.\n\nJo the nurse was in the hallway convincing an elderly lady that dinner was just in an hour or so and she would get her a cup of tea. She saw Doc and turned.\n\n\"All OK?\"\n\n\"Yeah,\" said Doc with a kind smile, \"I'll have some more paper delivered, and some pencils.\"\n\n\"Thanks Doc,\" said Jo, \"she's OK in herself mate, still not eating enough but you know how it is.\"\n\n\"Yes,\" he said, \"Thanks again.\"\n\nDoc signed us out of the large book, and Jo let us out stopping an elderly man with no trousers from coming out with us. We walked across the grass to the car and got in, still in silence. It had started to rain.\n\nFuck - what an afternoon.\n\nWe went through both gates again and Doc drove out and towards the countryside. Once we were out and into the depressingly wet, dark greenery he spoke.\n\n\"We met when I first started with the company,\" I just let him talk, \"She was a senior staffer and I was the golden boy, both sent to Bilbao to design a Leisure Centre, something we both had previous awards for. We were taken out to dinner and got slightly drunk, she invited me back to her room and were all over each other from then on. We lived together for a while then I asked her to marry me, the dream couple don't you think?\" I nodded, \"She's exactly nine and a half years older than me but we were never bothered by it.\" \n\nHe slowed at a junction, \"Nicki was though, apparently I was the rebound guy after Andie split up with Nicki's brother Lionel; lifelong friends you see, they both went to the same Grammar School and Nicki never forgave me for falling in love with her brother's true love.\" He looked at me wistfully, \"We had such a great time and had so many plans...\" he looked off into the distance and paused, \"She has early onset posterior cortical atrophy, a kind of Alzheimer's,\" he said staring straight ahead at the road, \"she had a transitory stroke and fell down about nine years ago and started to act strangely after it.\"\n\n\"Oh Doc, I'm so sorry.\"\n\n\"Thank you,\" he said turning to face me with a smile. He turned back to the traffic, \"She was forty, I was thirty,\" he said, \"the stroke was a bit scary of course but she mostly recovered, but a couple of years later she started to have problems with her eyesight and get very confused. She started to turn up at an office in London demanding she had a meeting with Higgins and West. That's the strangest thing, we can't find a record of who Higgins and West are or who might have been. If you Google the name you just get a Wikipedia quote of the third female speaker of the house of representatives, but nothing else. Very strange.\"\n\n\"And you used to sing Elvis songs to her as well didn't you...\"\n\n\"Oh yes, Elvis, Simon and Garfunkel, Don McClean, all that kind of thing. When she was first ill I would sing her to sleep; until she smashed up my guitar in one of her rages of course.\"\n\nHe went quiet, but I figured he needed to get something quite considerable of off of his chest. After a few moments and a couple of junctions he spoke again. \"She started to get very confused and quite angry. She always had a bit of a temper on her but this was ridiculous, you saw how stroppy she was with you, that was quite tame compared to some of the shit she threw at younger staff. I figured that it was something to do with the stroke but once I took her for a check-up ostensibly for the stroke and the bump on the head she was diagnosed with the PCA. She was forty three, and it was tragic to watch...\"\n\nAt first his wife Andie used to repeat the same conversation seeming surprised when people already knew what she was going to say. She suffered some gentle ribbing from colleagues about her poor memory and eventually she reacted badly. Doc tried to protect her as they worked for the same partnership. Her work output suffered and eventually Doc told her that he would have to tell the company of her diagnosis. 'What diagnosis?' said Andie.\n\nHe arranged for her 'to work from home' from the office in their lovely mews property in town, and for a while that was fine. She was self-employed and paid based on the on completion of each project. These of course dried up as her short term memory suffered. Doc kept things going, supplying the occasional job from 'Savage Ltd' but it was all just him.\n\nAndie became angrier at a world that was becoming increasingly confusing for her. She started leaving the house during the day and would arrive at an office, any old office, demanding to speak to Mr Higgins, her arms full of crazy designs for a building no one had requested or would build and was shown out of any number of office blocks, banks and building societies by confused office managers and the occasional security guard.\n\nThe years moved on and Doc was working from home so he could keep an eye on his increasingly erratic wife who otherwise would have been storming around town being cross with people that couldn't answer her strange questions. The final straw was when she was removed from a firm of solicitors after two hours of setting out her case to sue Messer's Higgins and West for failing to comply with the terms of a contract.\n\nThe legal executive had asked to see the contract and of course Andie couldn't find it. She then produced the rather scruffy and beaten plans and laid out her case. The executive said that if she would bring in the original contract he'd see to it that papers were drawn up immediately. \n\nAndie was most pleased with this resolution and thanked the legal exec for his time, stepping out and into her favourite coffee shop for a well-earned latte. Andie stepped out refreshed and walked along the high street and saw the firm of solicitors and went back in, and asked if she could speak to someone about suing Messer's Higgins and West for failing to comply with the terms of a contract.\n\nThe receptionist called the same legal exec and said that Mrs Savage was back. He reappeared with a smile and asked if she had found the contract.\n\n\"What contract?\"\n\nShe became rather confused and upset at the fact that she had apparently been here already, and the exec realised that something was indeed adrift with the rather aggressive Mrs Savage. She insisted on speaking to the manager; the manager again said that she had already been in to see them that morning. She became extremely angry and the police were called by a clerk in a back office hearing her shouts.\n\nThe police arrived and got her name and address and took her home to her worried husband who put her to bed with some paracetamol and sat down with the police officers, made them a cup of tea and explained about Mrs Savage's early onset dementia.\n\nThe police officers understood and her name and address was added to the police computer system should she turn up again, which of course she did.\n\nShe was virtually a prisoner in her own home now and she became more aggressive. One morning Doc noticed that her wedding ring was missing. He asked about it.\n\n\"Why? Well I'm not married for a start!\" She snapped.\n\nWithin another six months she was sleeping in her own room after calling the police at four in the morning from the kitchen to complain that a work colleague had got into her house and climbed naked into her bed. The computer told the call handler what she needed to know and she tried to make Andie believe that was actually her husband.\n\n\"Don't you think I would fucking know if I was married to some big lug from work?\"\n\nThe call taker rang Doc's mobile number and explained what was going on and explained why Andie was awake and in the kitchen.\n\n\"How the hell did you get into my house...\" said Andie, and as he had already knew from the training sessions the support group had arranged, this was the beginning of the end of their relationship.\n\nHe moved into the spare room, as Andie stopped being his true love of fifteen years and began the strange, aggressive and occasionally violent woman he shared a house with. She would wake up each morning demanding to know where she was, where her parents were and how could she get home. Her parents had moved to France for their retirement and visited a couple of times a year for a few weeks, now Doc had them on speed dial.\n\nDoc had taken the sim card from her phone to stop the calls to directory enquires for Higgins and West, sadly he couldn't block out the 999 calls so eventually hid the phone and disconnected the house phone, keeping his in his pocket.\n\nHe had carers and cleaners come in and help him with looking after her, but it reached the point that none of them would work more than two weeks with the nasty, very fit, very aggressive woman in the mews house. It came to a head two years previously when he woke to the opening of his bedroom door catching the glint of the kitchen knife she was holding above her head.\n\n\"BURGLARS!\" she screamed, \"MUMMY! DADDY!\" Her terrified howls were heart rending, \"THERE'S A MAN IN THE SPARE ROOM!\"\n\nShe cut his shoulder and his right hand as he tried to defend himself and disarm his wife. He calmed her down and said that her Mum was coming to see her that day, she told him off for bleeding on the pale carpets. In desperation he called Social Services and a worker arrived that afternoon and said that it was time that his wife went into full time care, something he had been fighting for three years.\n\nAnd so Andie Price-Savage was in full time care, and moved physically as well as mentally further and further away from her husband. Her heartbroken, elderly father died a year later.\n\nDoc stopped at a country pub, I was ready for a drink for sure.\n\n\"So there you have it,\" said Doc, \"She's a fifty two year old young woman in a home full of dementia ridden pensioners,\" he climbed out of the car and stretched his back out. \"And there's NOTHING they can do about it.\"\n\n\"Oh Doc.\"\n\n\"It's the nature of the condition, she still just about recognises me, but only as the bloke from the office. Our working together, dating, marriage and thirteen or so years together is pretty much all gone now. As you've seen Nicki has a problem with me.\" \n\n\"I did kind of get that feeling.\"\n\nWe entered the pub, and there was a large open fire and Doc pointed to the seat nearest to it. I sat, feeling the lovely dry warm heat of the logs crackling and burning in the hearth. The low level musak was playing Christmas tunes and it was decorated beautifully with a few large groups starting this Friday before Christmas in style.\n\nDoc went to the bar and returned with a pint of beer for me, and a Coke and a coffee for him.\n\nI sipped my beer, it tasted quite wonderful, and I smiled. He smiled back,\n\n\"Nicki never forgave me for putting Andie into the home, just an addition to her already long grudge list,\" he sipped his coffee, \"because of the attack on me the social worker had to speak to the police, Nicki came round straight away over-hearing me telling Doug that I was in hospital having stitches in my hand and shoulder. She got there the same time as the police and my mother in law, who'd known her for years, let the interfering bitch in.\n\nThe two coppers were having a chat with Andie about the attack on me; she didn't remember it... me making stuff up of course.\" He pulled his shirt to one side to show the large still angry looking red scar inches shy of his jugular vein on his shoulder.\n\nOf course!\" I said sipping more beer.\n\n\"Next Andie insisted to both cops that she was fine all the time that I was there.\" He drank more of his coffee and smiled, \"She said that I was a good friend of her husband!\" He closed his eyes and shook his head, \"Nicki was of course then convinced that her former best mate was talking in code and that I was some kind of brainwashing villain and she was secretly still in love with her Lionel -- a real 'Gaslight' moment...\"\n\nMy mouth hung open,\n\n\"Shit...\" This horrible tragic story was now juxtaposed by the mellow tones of Nat King Cole telling us to 'have yourself a merry little Christmas'.\n\n\"Precisely! It was at that point the social worker said that she would like Andie to go to a nice country house for a few days to relax after all of the drama. 'What drama was that?' said Andie...\"\n\nI smiled because I thought that it was allowed. Doc laughed as well letting me know it was OK.\n\n\"You have to laugh,\" said Doc, \"otherwise you'd cry.\"\n\n\"Nicki goes to the home and chats with her, and because Nicki is from so far back in her life, they can sit there and talk about stuff they did at college and university and Nicki's brother who at one point she even suggested she was still in a relationship with. I think Nicki pretends not to notice all of the gaps in her memory being married to me even though Nicki was matron of honour, and all the shit about Higgins and West and not remembering what they've just talked about and then talking about it all over again. Nicki just blames me, saying that Andie 'only had a stroke' and has had a nervous breakdown because I put her into a home.\" He sipped his Coke, \"Oh and I was in collusion with the social services and the Doctors of course to get all of her money -- you don't still think I'm the villain of the piece do you?\"",
        "\"Of course not,\" I looked across the table at my handsome companion, \"It's OK Doc,\" I said; I took a deep breath, \"you could have told me mate,\" I reached across the table and lay a warm hand on his and gave it a gentle squeeze.\n\n\"Thanks Fay,\" he smiled back. He leaned back and grabbed a log from the basket by his seat and threw it into the middle of the fire as Perry Como had half of the bar started singing about building a snowman in the meadow. \"Andie was such a huge part of my life you see,\" he said, \"and even though I know that her illness is nothing to do with me, I still have that British, empire-building, stiff upper lip, Dunkirk spirited male consideration that I should be able to mend things, to make it all better.\" He looked out of the window, \"and of course I can't. And I still have that institutionalised guilt that we Englishmen suffer from, you know?\" He smiled a sad smile, \"I suppose it could have been worse, at least I'm not trying to raise a couple of teenage children that are having to watch their Mum slowly stop recognising them.\"\n\nWith nothing else I could do I just leaned forward and hugged him, squeezing him tight around the shoulders to just try and pass on some warmth and compassion. \n\n\"And that's why I was so impressed when you said you wanted to be in a relationship where you could start a family. Sadly for me it was something that Andie and I never got around to. We were both at that place in our careers and we were planning things when she had the stroke and of course she didn't want to do anything until she knew more about the effects of it, her chance of having another one, that kind of thing.\" He took a sip of his Coke, \"Once they worked out why the stroke had happened, the symptoms of dementia started.\" He pursed his lips into a half smile, wrinkled his nose and shrugged his shoulders as if to say, 'ah well, shit happens'.\n\n\"Doc,\" I said, sitting up straight, \"I...\"\n\n\"Go on Fay,\" he said, almost as if he could see what was coming.\n\n\"I get it Doc, honestly,\" I said, \"and hearing your story just makes me want it more.\" I took a sip of my beer and reflected. \"I have a request.\"\n\n\"Right?\"\n\n\"When we're alone, like this I mean or at my place, can I call you... Dan?\" I was conscious that the world called him 'Doc' and I could separate me from his past.\n\n\"Do you know, I'd really like that.\"\n\nI knew from his face that he really meant it.\n\nHe was Dan Savage for most of his life until halfway through his third year at secondary school, the Ron Ely film 'Doc Savage' was on the TV on a boring Tuesday evening and changed his life for ever. Daniel Savage, promising artist and exceptional front row forward on the school rugby team, was dubbed 'Doc' by his classmates, then some of the teachers who thought that the square jawed, 'built like a brick-shithouse' young man fitted that epithet perfectly.\n\nIt followed him to college with a couple of dozen of his classmates, then to University with three of his college friends. He got so used to it that he started to introduce himself with the sobriquet. After all, when I arrived at the firm two years before and was shown around, I was introduced to 'Doc'.\n\nBut right now the super fine hunk looked just a little lost and hurt, and I desperately wanted to cheer him up and make things better for him after my morning post-revelation sulk,\n\n\"So Dan,\" I said, letting both of us get used to it, \"I think I'd like to go back to my place, cook you a splendid dinner and... and carry on with the project - if that's OK.\"\n\n\"What a fantastic idea.\"\n\nWe finished our drinks and drove slowly through the darkening countryside and back into town. We passed a large Sainsbury's and I asked if he could pull in so I could buy something nice. He pulled in and we walked around the shop with him pushing the trolley as I threw things in. We reached the chillers and I made a point of looking him up and down,\n\n\"These,\" I said dipping in for two ribeye steaks.\n\n\"Now there is a lady that knows the way to a man's heart,\" he picked up both and scanned them, checking out the marbling, \"Oh yeah, perfect.\"\n\nWe carried on walking and a grabbed two pre-prepared salads that I'd tried before and were great.\n\n\"Does sir fancy chips or a baked potato?\" I turned and there was Dan, right in front of me, we were almost face to face.\n\n\"Most of all I fancy you Fay...\" he kissed me again, \"Baked,\" he said his hand resting gently on my arse cheek.\n\nMuch as I tried to be all cool and sophisticated, his big blue eyes looked down at me and I became all coy and giggly! With flushing cheeks I put my arm around his neck and kissed him.\n\n\"Hmm, complements like that will get you everywhere.\"\n\n\"Mmm,\" he said, \"I like going everywhere.\"\n\nWith butterflies in my tummy and his arm around my waist, we picked up two large baking potatoes, then Dan directed me towards the wine department and I picked up a Malbec I'd previously been recommended for a meal just like this. To round this off I picked a cheesecake and a pot of fresh fruit and some double cream to go with it. With every choice Dan would squeeze me just the tiniest bit more and croon his agreement with a narrowed eyed grin.\n\nI paid and we took our bags back to his car, and the short trip back to my place was completed with a discussion on how he liked his steak.\n\n\"Rare but not cold,\" he said.\n\n\"Thank heavens for that,\" I said moving closer to him and putting my hand on his, then resting on the gear stick, \"That's how I was brought up with steak!\" \n\nI pointed out that Ron the Ex had been a 'well done - cooked almost dry' steak eater, and my still pink, juicy steak would have him complaining and saying that he would be sick if he had to watch me eat it. Twat.\n\n\"Andie was borderline veggie, and never cooked it,\" he said, \"so it's a major win to have the right kind of dead animal on the plate sat with a gorgeous woman to share it with.\"\n\n\"Awww Dan!\" I said leaning across and pecking him on the cheek.\n\nBack at my place, he parked on my drive promising that we would return to the office for my car later. I thought briefly about my car in the office car park and the rest of the team knowing we were both 'out and finishing on site' and what thoughts that might create then thought 'Fuck it'. I showed him in and around the flat, and he was very complimentary about my decor, especially my vintage Christmas decorations I had bought in honour of our hotel suite. \n\nInto the kitchen I micro-zapped the two potatoes, oiled and seasoned them and stuck them in the oven to crisp up, then got out my griddle pan and did everything I'd learned to do with good quality steak.\n\nDan got all manly and pulled the cork on the wine leaving it on the table to breathe, and while I was messing around with the salads he was making himself busy in the living room setting the table.\n\nI stepped proudly through with my two piled plates to see that Dan had laid the table even lighting the candles that had been in the two candle sticks ever since I'd bought them from Ikea. I let out a sigh, the two uplighters were on, the lights on my dark Christmas tree were twinkling and the candlelight made my little place more homely than I could ever remember it being.\n\nI'd bought the dining table years before and it only ever got used for up to the table dinners for special occasions as Ron much preferred sitting on the sofa with a tray on his lap so he could watch the TV at the same time. Dan saw my elation.\n\n\"I was going to ask if it was OK to light the candles, but I guess it is!\"\n\n\"Oh Dan it looks fantastic!\"\n\n\"Almost as fantastic as you look,\" he said, then stepped behind me. I put both plates down on their settings then realised that he was stood behind me for a reason. With just the biggest cheesiest grin I stepped in front of my chair and allowed him to move it behind me. It was the first time in my life that anyone had done such a thing for me, not even in a restaurant and I was charmed. He stepped across to my stereo and turned on some Christmas carols, faintly and in the background.\n\nDan poured the wine and took a sip of his, and I followed suit,\n\n\"Cheers Dan,\" I said.\n\n\"Cheers lovely Fay.\"\n\nThe steak was cooked to perfection and we both agreed, our pleasured moans synchronised as we did for the most splendid meal we'd eaten in ages. While the dinner at the restaurant during our first weekend had been really nice, this was special. We'd selected the food ourselves, cooked it, Dan had laid the table and it was probably the most romantic meal I'd ever eaten. \n\nThe candles, the lights on the tree, the carols and the wine just made it into more of a perfect moment.\n\nI'd already plated the cheesecake and Dan insisted that he went to the kitchen and retrieved it while I refilled our glasses. The cheesecake, with its liberal dousing of raspberries, strawberries, blackberries, small chunks of apple and pineapple then covered in double cream was to die for and we slowly worked our way through it, both happy to eat a second portion.\n\nOnce finished we both cleared the table and I made coffee insisting that Dan, as my guest, should sit down and relax. He ignored me of course and loaded the dishwasher as I sorted the coffee. He did retreat to the living room mind you and when I returned it was to find that he was sat at the end of the sofa, an arm up along the back of the seat next to him looking like a perfect place for me to sit.\n\nHe smiled, I smiled and after turning off the main lights and putting our coffees on the table, I knelt up onto the sofa and lay against him and he put his arm around me pulling me into a hug.\n\nHe picked up the remote control for TV and switched it, asking how to turn on the DVD player. I took the controllers from him and changed the source. Dan pressed the play button and after all of the usual stuff of DVD trailers, there were the opening titles of 'Doc Savage -- Man of Bronze' It was very funny and all the way through I felt my own 'Doc' Savage with his arm around me, while I lay my hand over his, stroking his arm and his hand as we giggled our way through the dated but thoroughly enjoyable film.\n\n\"There you go,\" said Dan as the titles ran up the screen, \"That's the reason I've been called 'Doc' all these years.\"\n\n\"It was OK,\" I said, still holding his arm around me. I turned slightly and reached up and kissed his lips. \"I think MY Doc Savage is way more handsome than the one on the TV...\"\n\n\"YOUR Doc Savage?\" he said quietly.\n\n\"Yeah...\" I whispered kissing him again.\n\nHe returned the kiss, pushing his tongue between my opening lips to tangle with mine. It just added to the whole wonderful evening and I knew that I was going to make love with him that night. I thought for a second about where I was in my cycle but thought, fuck it, this is for Dan and me, not for a baby.\n\nHis spare hand went to the front of my blouse and undid a couple of buttons, a hand slipping inside to caress my bare skin, goosepimply under his gentle touch and even though he wasn't there yet my nipples hardened inside the lacy bra I'd put on that morning just in case this was going to happen.\n\nWe stopped to take a breath, and I stood. Using both remotes I killed the TV and DVD player, took his hand and pulled him towards the bedroom, him turning off the two uplighters as we walked past; the Christmas lights flashing to themselves.\n\nI pulled him into my bedroom, pulling off my opened blouse over my head and skinning down my jeans. I lay back on my bed, watching him strip in a similar fashion.\n\nHe lay beside me looking me up and down in just my dark blue lacy bra and matching string. I must add that I was wearing white ankle socks but hey, I felt sexy. He pulled me into his arms and we started kissing again, our hands roaming across bare skin before us. It was wonderful and probably the first time I'd engaged in petting like this purely for its sake. Previous boyfriends, and me I suppose, were so keen to get to the intercourse that we'd missed all of this fun.\n\nAnd fun it was. I was tingly and buzzing from straight up sexual energy and I could feel that my pussy was swelling and dampening ready for him. He upped the ante somewhat and with a single pinch he released my bra, pulling at the front to slide it off of my shoulders and down my arms. My hard nipples were pointing up and at him in salute to his skill in lovemaking.\n\nHe dropped his mouth on one then the other of course and I felt the tingling deep inside, making me gasp and arch my neck back into the pillows as he pleasured me. While he continued to tongue lash me, I felt his fingers that had lain on my belly slowly stroke down to my groin until the tips slid under the elastic of my panties. I had shaved my pussy weeks before when I knew that this kind of thing would probably be happening with him and other than some stubble I had altogether forgotten to shave that morning he still had a reasonably clear path to my pussy.\n\nHis big hand went down and rubbed across the whole area making me want to curl up but I forced myself to stay flat, even going so far as pushing my groin up to meet him. So impressed was he that after a few gentle strokes and a single middle finger playing temporarily with my enlarged clit he removed his hand to pull my panties down. I raised my middle to help him with his task and once past my knees I kicked them off the rest of the way.\n\nNow naked I decided that I was going to play with this fantastic body in my bed.\n\nDan's broad chest was on display and I stroked hands across his defined musculature and the golden hairs spread thickly across it. Next I moved across to lay across him, raising my leg across his to keep him where I wanted him and to get my pussy to rub against something!\n\nI kissed his face, then kissed down his cheek, then down his neck, down his chest pulling some of those fabulous hairs into my teeth and giving the lightest tug. He flinched and laughed, as I looked back up at him with a growl. As I continued down, kissing the flat flesh as I went I felt his loins tense as I got within inches of the base of the big cock swelling against his stretchy underpants. I pulled at edges of his pants dragging them over his erection until the hard flesh was free and springing up towards my face. I kissed that too.\n\nI had done oral on my two long term boyfriends before of course as they had to me and I think it was just a bit of squeamishness on my part, but now I had just had the most amazingly romantic evening and somehow I was going to do anything for this great guy.\n\nI put my mouth over the end and sucked him in, moving up and down as I had seen on some rude videos and how Ron had asked me to do it to him.\n\n\"Oh shit,\" groaned Dan, twitching as I dragged my lips over his mushroom head before sliding down to do again and again.\n\nHe started to groan and I knew that he was close. I did fancy blowing him but wanted him to fuck me even more! He guessed and rolled on top of me, sliding strongly into my wetness to a new depth and with a new passion. Christ but he was a great lover. I started to move with him feeling almost every bit of me touching almost every bit of him.\n\nWhile I couldn't complain about our sex at the hotel, we were perhaps both still a bit inhibited at the rather strange situation we found ourselves in, and now we had both changed since then. I held him tight with feelings of such intensity I wasn't sure I'd ever felt them before. He pushed in and out of me with such feeling that I started to come almost straight away, gasping for him to continue and take me there one more time, to keep giving me the pleasure he'd so ably demonstrated before but... shit, even after all this time I still struggle to put those feelings into words.\n\nSuffice it to say I clung to him, terrified that he would just think I was laying there and having him screw me and not joining in, but my uterus and the number of times it went into orgasmic spasm made a lie of that thought.\n\nI cried out his name, \n\n\"Dan, oh God, please, Oh Dan, keep going... oh shit, Darling Dan, pleeeeeeeease!\" as I rolled over the edge again, and it was with the greatest delight I felt him come at the same time as me.\n\nWe slept. It was so good that when we woke the next morning we did it all over again, and again after that. \n\nI got up and made us both breakfast going with bacon sandwiches and hot tea that we consumed sat up in bed, still naked. Dan grumbled about the lack of a TV in my bedroom which I blamed on Ron who said that bedrooms were for sleeping, and the fact that when he left he took the spare. Dan said more about how he considered his bedroom at the mews as 'his room' and tended to stay in it for everything.\n\n\"But it's your house as well Dan,\" I said.\n\n\"Legally,\" he replied taking the last sandwich quarter from the big plate I'd used, \"It was Andie's and we put the mortgage in both of our names when we got married.\" He sighed, \"Before she became ill, Andie always called the room I'm in 'the nursery'. She would have been a very good, if rather strict, Mum I'm sure.\"\n\nI twisted round and knelt up on my bed, still naked, \n\n\"So Dan, you'd have no objections to spending Christmas Day here with me then?\"\n\n\"But I invited you!?\" he said with an apologetic grin.\n\n\"Don't care,\" I said putting my arms around his neck and kissing his cheek, \"as you can see there are no ghosts here,\" I waved my hand around, \"and you and I fit beautifully on my sofa out there\".\n\nHe put his arms around my waist and pulled me even closer, so my tits were crushed against him. \n\n\"Deal,\" he said, \"I'll supply the food.\"\n\nI kissed him in delight, \n\n\"Deal, what do you have so far?\"\n\nHe looked thoughtful,\n\n\"A bottle of port and a bottle of champagne...\"\n\n\"And?\"\n\n\"That's pretty much it,\" he said, \"No, I tell a lie, I have one of my sister's Christmas puddings from last year.\"\n\n\"Home made?\"\n\n\"Oh yeah,\" he said, \"should be perfect.\"\n\n\"Let's get showered and go shopping then.\"\n\n\"After,\" he said. \n\n\"After what?\" For an answer he swung me down to lay beside him then rolled over me, \"Ooh thaaaat...\" I gasped feeling him push up and into me again. Christ, but it felt soooo good.\n\nTwo hours later we felt extremely refreshed after our morning lovemaking, then some more, then breakfast, then once more just to make sure. I felt rather lightheaded after all of our activity; having sex with Ron had always been really nice and did feel good, it was nothing like with Dan. Ron's penis had always seemed a nice size but nothing like the weapon that Dan wielded over me and into me. Ron had given me a couple of orgasms, but just that -- a couple, in our five year relationship.\n\nDan was an amazing lover and using his lips, fingers and tongue let alone his penis had me rolling and writhing across the bed as he played with me, in fact it was fair to say that Dan had given me more orgasms that morning than Ron had given me for our whole time together.\n\nI don't think I had a single care in the world that morning as we walked around Sainsburys filling our trolley with all of the stuff that we fancied. It turned out that neither of us really liked turkey so we passed by the poultry instead picking up a medium sized lamb joint and another of beef. We added potatoes, vegetables and a variety of other treats both sweet and savoury. It was a bit of a struggle for us as we were very much in party mood and had to keep reminding ourselves that our holiday was only for a couple of evenings and one long day; Boxing Day would see us at his sister's house.\n\nFortunately we kept it sensible and within no time flat we were packing everything into his car and driving back to my place to unload it again, stopping only at the office to collect my car which I parked on my drive with his truck directly across the road from it.\n\nThat Saturday night we spent in front of the TV again, just chilling out to Netflix movies, with me cuddled up to Dan, warm and cosy in a way I hadn't been since my Royal Engineer Boyfriend who was another cuddler.",
        "I fell asleep with my head on Dan's shoulder waking with his slight movement as he turned off the TV. We both stood and headed to the bathroom and then bed. We lay together, warm and close, snuggled under my king-sized duvet, naked but soooo comfortable, too comfortable to move and make love even.\n\nMind you, we woke the next morning and did, just to make up for the previous night's abstinence. We went out and had Sunday lunch in a pub then back to my place, both so comfortable with each other, so happy with being in each other's company, with the occasional declaration from Dan that he had to go home and sort out for the next day.\n\nAfter tidying up from our very simple supper I came back into the living room wearing nothing but black stockings and a suspender belt and some make-up. I knelt before him girlishly, a finger to my rouged lips,\n\n\"You aren't going home tonight Dan, are you?\" I pined.\n\n\"Well I don't have any...\" by the time he reached the point of saying 'clean clothes' I'd undone his trousers and pulled them down to his knees and was blowing him to erection. He stayed sat on the sofa, his face a picture of shocked pleasure. This time, I thought, this time...\n\nI felt his come squirt into my mouth as I wanked, sucked and licked him. \n\n\"WOW FAY!\" he gasped in the seconds after, \"That was amazing!\" I licked him clean of any remaining dribbles, resting back on my stockinged heels.\n\n\"Are you sleeping here?\" I put my finger back to my lip.\n\nFor response he just stood, lifted me into his arms and carried me to the bedroom where he lay me down and returned the oral compliment, two or three times to be exact.\n\nBy that point he had fully recovered and even though my orgasms had both invigorated me and drained me of energy, this new sexy woman feeling I had made me reach down between his legs and feel for his hardening cock. Once it was how I needed it, I climbed onto my hands and knees and presented myself to him for his pleasure. Being Dan, it was also for my pleasure of course and I felt him inside me to a new depth, his rock hardness in my sopping puss touching I knew not what but fuck it was paradise. I'd done doggie with other boyfriends but that was for them, this was for me -- even though I never set out for that to be the case when I ran to my bedroom, stripped and put on my stockings. \n\nIt felt wonderful of course, the best ever and without doubt the rudest, sexiest, sluttiest moment in my life. Right then I would have cheerfully have submitted to any sex request from Dan such was my passion for him at that moment; fortunately for me the only sexy thing that Dan wanted to do was pound my pussy from behind, his thighs slapping against my arse cheeks and leaning forward to grab my big tits that were banging together in an accompanying crescendo, adding to the great feeling of being wholly 'taken' by my lover, his squeezing of my right nipple brought me crashing to my umpteenth come of that evening, and my great pleasure triggered his and soon I felt him come deep into me.\n\nAs we lay there naked on my bed and slowly cooling down and catching our breath, I realised that nothing that weekend had been about my desire for a baby and Dan being the sperm donor. It was straight up passion, requited lust, an expression of the mutual desire we both felt for the other.\n\nWhen I was walking about naked the previous morning Dan had admitted to me that for some months after I had first started with the firm he had watched and letched after me, and commented on the tops and trousers he'd liked so much that showed my big tits and my shapely arse to their best advantage! Ooh yeah, major confidence booster!\n\nAfter a very quick trip to the bathroom and a stop to remove my sexy underwear, I was back in bed naked with Dan, who pulled me into a spoons position, holding me closely, warmly, tenderly and it was lovely.\n\nWe both woke a few moments before my alarm and had a very pleasant ten minute kissing and cuddling session stopped only by the voices of Radio Four and the news, and our need to get up. Dan carried out all of his ablutions having bought toothbrush and razor and his normal deodorants to leave at my place. While he shaved I sorted tea and toast for our breakfast, that he was very pleased to accept from his naked chef/waitress. We sat on my bed again, discussing options on what was to be our last working day before the office closed down for Christmas and New Year.\n\nWe kissed goodbye and daft as it may seem I felt a real loss, even though I knew that in an hour or so we'd be in the office kitchen making tea and exchanging those long looks and quick glances like we had the week before. But this was more, this feeling was so much stronger than before. We'd had our lovely weekend in the country which was about making a baby, the weekend after which had started with such tragic revelations ended with us making love, simple.\n\nWe met in the kitchen at a few minutes after nine and the smiles we shared spoke volumes, it was of course at that point that Nicki walked in and shared a thunderous look with us both.\n\nDan favoured her with a cheery look, adding a \"Hey Nicki!\" for good measure.\n\nShe stormed out of the room favouring me with a look that pretty much screeched 'revenge'.\n\n\"Nicki!\" shouted Dan after her retreating form and she stopped and turned.\n\n\"WHAT!\" she snarled at him, \"What DOC! Don't you like it that I'm sticking up for my best friend, seeing as it's obvious that you AREN'T!\"\n\n\"Explain Nicki!\" he took a pace closer to her, their faces inches apart and the strangest contradiction between their angry visages and the daftly jolly Christmas jumpers we were all wearing.\n\n\"YOUR WIFE...\" she snapped.\n\n\"Who doesn't know she's married to me any more Nicki, what about that?\"\n\n\"She probably doesn't WANT to be married to you any more, after you dumped her in... in THAT PLACE!\"\n\n\"When I went to see her on Friday Nicki she was wholly under the impression that she was in her private office and couldn't get rid of me fast enough so she could complete that job, you know the one, the one for Higgins and West, that no one else in the world has ever heard of?\"\n\n\"THAT WAS BECAUSE OF YOU!\" she hissed at his face and I saw the faintest hint of spittle flying from her lips in her venomous attack.\n\n\"Really?\" said Dan calmly wiping his face, \"how exactly?\"\n\n\"Brain washing!\" she snapped as if it was obvious.\n\n\"Yeah, OK Nicki, thank God that you are there to stick up for your friend in the face of the totally bloody obvious and proven medical fact.\"\n\n\"When it suits you!\"\n\n\"Oh for fu...\"\n\n\"Good morning all!\" Suddenly there was Doug the Boss with a jumper just as ridiculous as ours having detected the tenseness in the room. \"Ah Nicki!\" he said, \"Any chance you can give me and Roy a hand in getting the presents ready for distribution?\"\n\nShe looked at me with so much hate,\n\n\"Yeah,\" she hissed, \"Why the fuck not...\"\n\nShe stormed out of the room.\n\n\"Oops!\" said Doug, looking at Dan, \"You been beating up Andie again?\"\n\n\"Brainwashing Doug...\"\n\n\"Now I thought we'd talked about that Doc? Psychological torture does kind of go against company policy look.\"\n\n\"Yes sorry Doug, but you know what I'm like once I get an idea in my head,\" said Dan putting his hands to his face, \"seems that Nicki is right and the world of medical science is wrong, and thanks to her absolute refusal to accept the blatantly fucking obvious, the second I start to have a chat with a beautiful woman, such as the gorgeous Fay here,\" he pointed to me, \"Nicki starts growling and snarling and declaring jihad. Just you watch Doug, probably a week or so after Christmas, there'll be a formal complaint from her about Fay here...\"\n\n\"What, like the one that landed on my desk at five to five on Friday?\" said the Boss.\n\n\"What?!\" we both said in unison.\n\n\"Some shit about inappropriate timekeeping Fay,\" said Doug and my bottom jaw dropped. \"Don't worry honey, I wasn't that worried about it to start with but now it makes perfect sense,\" he looked at me and Dan, \"why don't you two go up to the boardroom and err...\" he grinned, \"Start laying out the lunchtime buffet -- after all, there won't be a vast amount of work going on today.\" He looked serious for a moment, \"Don't worry, Nicki and I will be handing out presents for the next hour!\"\n\nSo that was what we did; in the boardroom we found the dozens of bags of food still in the process of being delivered. Having been a waitress while going through University I took to the work with an experienced hand and eye. I soon had tables lifted and shifted and hot food still in its containers on one of the big white laminated tables while the cold sandwiches, pastries etc. were laid on the nicer wooden tables on large white tablecloths that had come with them.\n\nThe caterers had supplied some folding tables that were laid up with bottles of wine, bottles of beer, cans and bottles of soft drinks and whole stacks of disposable cups and some rather discrete bins in corners of the room.\n\nWe thanked the caterers who insisted that they were here to stay and would be doing some more pottering and tidying before service started at 1130, and our need to stay there and assist was probably just to get us out of the way while Doug dealt with Nicki. \n\nThere was a small annexe that was used for smaller meetings, sometimes it was curtained off to allow for a grand expose for our grander schemes and currently the folding doors were closed.\n\n\"We're going to have the whole partnership in here Dan,\" I said, \"Perhaps we should open up the annexe.\"\n\n\"Good idea,\" he said and stepped up the two steps giving the whole thing the aspect of a stage. I pulled open the first door and we both stepped in to pull the bolts top and bottom of every other panel to allow the thing to concertina into a void at the far end.\n\nAs soon as we had the benefit of obscurity from the caterers, I was in Dan's arms and we were kissing with only slightly less passion than we had shown the night before. I smiled.\n\n\"Fuck Nicki and her fantasies.\" I said.\n\n\"Rather fuck you Fay,\" he reached down and squeezed the cheeks of my arse.\n\n\"Suits me,\" I said and stuck my tongue into his mouth and went for it, loving the feel of his manipulating fingers grabbing me through the stretchy denim of my jeans.\n\nThe only thing that stopped our passion was a thump on the door that hung open and both Dan and I spun around and out of each others arms to pull the bolts that would enable the doors to move.\n\n\"Hello,\" said Dan, peaking through the opening, \"Hi Becky!\" he said to Doug's PA.\n\n\"Doug just sent me up to check everything was going to schedule.\"\n\n\"Oh yeah, Fay here has it all under control and the caterers in hand.\" He grinned, nodding towards me.\n\n\"I'll tell Doug!\" she said with an almost knowing smile. She had left the room before my bright red cheeks appeared pushing the now collapsed doors into the socket designed for them.\n\n\"Why Fay!\" said Dan stepping up behind me to push the doors back over my shoulders, \"THAT is the colour pink I want my bathroom,\" his warm breath hit my cheek and ear at the same time and I felt a real tingle down my spine.\n\nWe ate the buffet and listened to the music, and chatted with the occasional break when Nicki scowled across the room at me. I was getting more and more pissed with her attitude towards me. But now I knew that Doug the Boss knew that there was something up with Nicki and I was the target. Perhaps I should use that advantage.\n\nI walked across to the table with the chilled cakes and sweet things and stopped to pick one up, while sipping some Coke.\n\n\"I know what you're up to bitch...\" came a hissed challenge in my left ear.\n\n\"Really?\" I turned and our noses were about two inches apart, \"Well why don't you do your worst Nicki?\" I smiled, \"My Dad was a policeman and after my Mum died when I was a kid I had to become the big brave woman of the house, and protect both me and my baby sister from the kids that didn't agree with where my Dad drew his salary. So if you want a punch-up you crazy bitch then let's not fuck about; I'll meet you in the car park in five minutes and we can sort this out the old fashioned way, the one with the most hair left and non-black and bloodshot eyes wins -- you wanna do that?! Do ya, REALLY?\"\n\nThere was a quiet moment while Nicki considered her next move. Her bottom jaw flapped for a few moments while she figured out exactly how to deal with someone that was not intimidated by her fearsome attitude and the suggestion of what she might do, but had actually come up with an alternative that scared her, the aggressor.\n\n\"I'm...\" Nicki folded her arms like the most defensive American reality star, \"I'm not scared of you!\" she shook her head, I stepped right into her personal space.\n\n\"You fucking should be!\" I hissed still smiling.\n\n\"I'll... I'll... I'll destroy you!\" she hissed, her pursed lips contracting and relaxing a dozen times a second, \"Professionally, I'll do you so much damage you won't be able to get a job driving a council lawn mower!\" she tried to grin, now gaining confidence.\n\n\"Yeah,\" I laughed, hoping that anyone watching would only see us whispering and smiling to each other, \"You try that, at the same time that Dan... I mean Doc and then Doug tells everyone that you are completely batty and living in a revenge-filled 'hatefest' against some poor brave guy still trying to get over the loss of his wife who is actually still alive and getting further away from him every day. How good do you think you'll look attacking a hero like D... like Dan.\"\n\nNicki just went quiet as reality slipped up behind her and gave her a very large metaphorical punch in the face, with a smack on the tits for her trouble.\n\n\"Oh... Ohh fuck you Fay!\" she snapped and walked away, throwing what was left of her iced tea on the conference room carpet.\n\nI understand that she went back to her desk and did some more work for a couple hours while she calmed down. Doug noticed and just asked Becky, who of course told me, to keep an eye on her for a while. He then went on to give his usual 'well done for another fantastic year folks' speech listing the triumphs we'd achieved, and a few of the sillier things that had made the year memorable, finishing by wishing everyone a great new year; he picked up his glass from the table next to him and asked that everyone fill theirs.\n\nAfter looking at slightly overlong at Dan and I, he went quiet and thoughtful for another moment,\n\n\"Ladies and Gentlemen, here's to another great year, and more than that, here's to us!\"\n\n\"TO US!\" we all cheered. At the end he looked straight at me and Dan holding his glass up to just us.\n\nWith all of our presents and cards we all said goodbye for the next ten days and hugged and kissed. Doug was last out of the building having evicted Nicki from her self-inflicted isolation. She stalked out to her car about five minutes after Dan and I left in convoy. \n\nWe drove to the mews and left my skinny little RAV4, a sweet little four wheel drive Suzuki MPV, in the huge garage set up to take his chunky Toyota as there was so little parking where I lived.\n\nHe'd already had his bag packed and it was in the back of his truck so we headed back to my place and he pulled expertly onto my drive and we got out and went inside.\n\nWe put his bag into my bedroom and I opened a large drawer which I'd emptied that morning for him. He was touched.\n\n\"That's your drawer Dan,\" I said, leaving the comment to hang.\n\nWe went back into the living room and he opened a bottle of wine and we sat down to all of the usual Christmas eve TV, both too full to think of anything else to eat quite yet. We rested on the sofa in our usual positions, ordering some pizza at a bit before ten. In the meantime we had done all of the preparation for dinner, leaving the necessary in the fridge and on the cooker ready for the next morning.\n\nWe went to bed, and stripped and made very simple, very passionate love; simple missionary sex with me clinging to him, weeping quietly as the we both reached our orgasms together, rolling to our sides to kiss and caress, him wiping my few tears away as I giggled with the last few spasms of my wonderful come, him slowly pulling out of me.\n\nWe slept.\n\nI woke the next morning to my lover standing there with a tray of breakfast things he'd arranged the night before, with a card and some presents. It was Christmas Day and I felt that internal buzz I hadn't felt since I was a kid. His card to me was just the sweetest and spoke to me of how wonderful it was to have me in his life and how he hoped for a fantastic new year with everything that we both wished for. There was a tiny parcel which contained a thick silver charm bracelet which for the moment had the letter F, a blue sapphire to match my eyes, a tiny shovel to indicate my day job. Then the letter D in close proximity with a tiny pair of swimming goggles to indicate our weekend away and the lust we first felt for each other in that pool in that Cotswold hotel.\n\nIt was so sweet and I saw there was lots of room left for more charms. We got up and showered and then into the living room where there were more presents.\n\nI had bought Dan a small troubadour guitar, a tiny backpacker version of the real thing, small enough to get a tune from but not big enough for him to complain he didn't have room for it.\n\nThen he stepped into the spare room and came out with a long flat box, and I was pretty sure what it meant.\n\nI tore at the paper expectantly, finding the 32 inch flat screen TV, and soon I was laughing and helping him carry it through to my bedroom and the top of my chest of drawers. Within minutes it was plugged in and set up and connected to my Wi-Fi and I was casting programmes to it while Dan promised to run an aerial cable to it the day after Boxing Day when he would go to the shops and buy the necessary bits.\n\nI kissed him and thanked him.\n\n\"But Dan it was so expensive, you already bought me that wonderful jewellery!\"\n\n\"Nah,\" he said with grin, \"consider it as part a present for me as well!\"\n\n\"Oh!\" I said with some affected crossness, \"So it's for you is it?\"\n\n\"So we can come to bed and watch Netflix Baby,\" he said pulling me close.\n\n\"Oh well,\" I said, \"If it means you'll be spending more time in my bed then all the better.\"\n\n\"Exactly!\" he said.\n\nWe kissed again and headed back into the kitchen to prepare our Christmas lunch.\n\nIt was wonderful and we both sat up to the table with more candles and the champagne that Dan had promised. After the main meal we had his sister's wonderful Christmas pudding and it was the best ever. We sat with our feet up for the afternoon movie and he returned with his bottle of port and a selection of cheeses and assorted biscuits.\n\nParadise, and sharing it with a man as lovely as Dan made it the best Christmas I could ever remember as a grown up.\n\nWe napped on the sofa waking for the end of the film and a coffee. We made a very simple evening meal of sandwiches and cake, watching more TV until Dan broke out his tiny guitar and played some songs and I sang along with him in harmony. It was magical and we kissed afterwards for some time.\n\nI announced that I was going to bed and he could turn everything off and put the cups in the dishwasher I would be ready.\n\nBy the time I heard the clicking of the last of the lights I was undressed and sprayed with my favourite perfume with some touching up of my make-up.\n\nIt had just the effect I wanted and he almost leapt on me, kissing, licking and stroking me all over until I was positively vibrating with lust, and I was ready for him. I was pleased that he was just as excited as I was and I hoped he would take me there a couple of times tonight.\n\nAnd he did, riding me hard then just for a change rolling to his side to pull me into a cowgirl over him, like we had done on our first night together, and I enjoyed getting him to touch my insides and I felt the tremors as I rubbed him on my sensitive G-spot, coming for the first time in that position, and I slumped to one side pulling him back to the dominant position I loved so much.",
        "\"Christ Fay,\" he hissed as he pushed into me, \"I don't think I can last much longer, \"Do you want me to... I mean... I know we've been really going for it but... is this the right time...\"\n\n\"Dan,\" I gasped into his face, \"Darling Dan, it's the perfect time!\"\n\n\"Oh yeah,\" I felt him shudder and jerk as he pushed deep into me and came, and I felt his essence splash into the back of my pussy, \"Fay...\" he hissed, \"Oh baby.\"\n\n\"That one Dan,\" I cried into his face, \"I want a baby born out of love and that's it. Oh Dan, that time!\" I lay under him hoping for the best Christmas present of all.\n\nWe woke the next morning and made love again, conscious that we had to be across town at his sister's place for 1030. We were on time.\n\nHis sister Jenn was wonderfully welcoming and I was delighted to see not only his brother in law and his niece but also his parents who were equally pleased to see me, hugging me as they had at the bowling event a month back.\n\n\"Wow Fay, you look so well!\" said Jenn, \"I trust my big brother is looking after you?\"\n\n\"Oh wonderfully Jenn, bought me a new TV for Christmas!\" I stopped, I hadn't really thought that one through...\n\n\"She didn't have a TV in her bedroom Jenn,\" said as if in shock, \"Bloody dark ages, Can you believe it?!\"\n\n\"Oh you poor thing Dan,\" she sighed with mock solemnity, \"Did you have to pay some attention to this beautiful woman and not watch a bloody film?\"\n\nI looked at brother and sister and saw that there was no secret as to what her still married brother was doing in my bedroom with no TV to watch. I smiled and looked up at Dan,\n\n\"Was much nicer with no TV Jenn, honest.\"\n\nShe stepped closer to her brother and patted his cheek,\n\n\"That's my boy,\" she said.\n\nMy boxing day with his family was as special as my Christmas day had been and I felt part of the family. Using Jenn's tablet I skyped through to my sister Karen in Berlin and everyone spoke to her, her husband Carl and daughter Lily and she was introduced to Dan, Jenn, their parents and the rest of their family.\n\nI offered to help Jenn in the kitchen, and she would have none of it, insisting that I was a guest and her husband and brother would do what was necessary.\n\nJenn's youngest daughter Connie came over to me with one of her new books that Uncle Dan-Dan had bought for her, so I lifted her up onto my lap and read 'The Wonky Donkey' to her to everyone's great amusement.\n\n\"You look like you're a natural with children Fay,\" said Jenn.\n\nI said that I had babysat little Lily that they had all spoken to earlier, but threw in that my ex didn't want children and that was why we had spilt up.\n\n\"Dan always wanted kids,\" said Jenn, looking caringly up at her elder brother and not at all defensive of him.\n\n\"I know,\" I said, beginning to wonder where this discussion would go.\n\n\"You know about Andie...\" she whispered to me.\n\n\"Yes, I met her on Friday.\" I looked suitably downcast.\n\n\"Bloody tragic that,\" said Jenn, \"I mean, don't get me wrong I was never the biggest fan of Andie but I wouldn't wish that on my worst enemy, messed Dan up for ages.\"\n\n\"Yes,\" I said, \"I can only imagine what it must have been like for him, she was really nasty on Friday.\"\n\n\"Oh trust me, she could be quite nasty at the best of times, not convinced she had a vast amount of patience, and never suffered fools gladly. When my Peter was born, I think she was under the impression he should have been fully literate by the age of two not just potty trained.\" She tipped her wine glass up to her mouth and emptied it before plunging it into the soapy washing up water, \"have you met that fucking bitch Nicki?\"\n\nI rolled my eyes,\n\n\"Yep.\"\n\n\"What a cow!\" Jenn hissed, \"Andie's best mate right?\" I nodded, \"Matron of honour at the wedding, and bitched about everything!\"\n\n\"I can believe it,\" I said.\n\n\"Ridiculous thing was it was all arranged by Andie herself, to her very own very specifications. EVERYTHING!\" She giggled at the memory, \"I was just a bridesmaid of course; had three dresses before she picked the one she liked. First one was like it was made of a cheap hessian but it made me look straight up and down and, even though I say so, I do have curves!\" she moved her hands from her very full bust down to her hips and thighs, \"So the next one was like a silk chiffon that turned me back into a curvy girl but in the wrong light looked like it was transparent!\" she laughed again, \"it wasn't of course but to really carry it off I couldn't have worn bra and panties. I was OK with it but Nicki wasn't of course. The next was a very pretty grey lace but mine was nicer than Nicki's so that wouldn't do. Eventually we ended up with something between a bridesmaid's dress and a cocktail frock -- IN GREY! Honestly?\"\n\n\"Each to their own,\" I said emptying my wine glass and putting it into the bowl, \"I'm sure you looked lovely!\"\n\n\"Quite!\" said Jenn, \"I'd like to say there are wedding pictures but Andie never let anyone see them as they were of 'her special day' and for her and Dan.\" She washed my glass and placed it onto the drainer, \"And from the first fitting on the bridesmaids dresses to Dan and Andie going off on their honeymoon that miserable cow Nicki did nothing but complain. The dress was too tight, the shoes too big, the church was too cold and the romantic castle they hired for the reception was too hot, then too cold. The food was undercooked, overcooked, too hot, too cold, the wine was wrong, and the table decorations made her feel ill -- TABLE DECORATIONS!\"\n\n\"But she was Andie's best mate, didn't she help?\"\n\n\"All the way through apparently. Biggest complaint was that Andie didn't invite Nicki's brother and Andie's ex-boyfriend Lionel; I mean, Bloody hell Fay, you'd want all of your ex's at your wedding wouldn't you?\"\n\nI laughed,\n\n\"Top of invite list without question Jenn,\" I said keeping a straight face.\n\n\"Cow,\" said Jenn shaking her head, she took some more glasses and dropped them into the bowl, \"when Andie became ill, Nicki started her smiley-faced, innocent hate campaign. Everything Dan did Nicki was there second guessing him and asking stupid questions at stupid times just to create shit. The sad thing is I honestly do think that Nicki believes that nothing is wrong with Andie, and quite simply chooses to believe her strange explanations of Andie's symptoms because they suit her better than the real fact that the girl she went to school, college and university is now barely able to write her name, or recognise the man she was married to for twelve years.\" She put the next glass on the drainer, \"I do feel a little sorry for her in a way.\"\n\n\"Oh,\" I said, \"err... at lunchtime on Monday I threatened to beat fuck out of her in the car park -- is that a bad sign?\"\n\nJenn screeched and laughed so much that tears came to her eye. She turned and faced me, and smiled wiping her tears, \"I'm sooooo pleased that you two have something going on!\" She hugged me tight.\n\nI could only smile\n\n\"Thank you!\" I said picking up the tea towel from the drawer and helping dry up the wine glasses.\n\nWe spent the evening playing games of various descriptions until a guitar appeared from nowhere.\n\n\"Uncle Dan-Dan!\" Shouted all of the children and the guitar was handed to him.\n\n\"Auntie Fay can sing!\" he said tuning the third and fourth string to the first.\n\n\"Sing us a song Auntie Fay!\" said my little friend Connie.\n\nI lifted her up and sat her on my lap and smiled at Dan.\n\n\"The one I sang last night,\" I said and Dan smiled back at me.\n\nHe played the very cool intro into Mary Hopkin 'Those were the days' and I sang it in my best quarter to midnight, Blues Bar voice and my audience were captivated.\n\nI could tell Connie wasn't that impressed so I whispered my next choice to Dan and after a few strums he got the chords and the metre. I hugged Connie and pushed my cheek against hers and quietly sang,\n\n\"To Bombay a travelling circus came, they brought and intelligent elephant and Nellie was her name...\"\n\nCome the chorus I sang up and Dan upped the tempo and we all sang about 'Nellie the Elephant' bouncing little Connie on my knee in time to the music. It was just the nicest family moment.\n\nAfter a lovely long day the three children were carried up to bed, and I had hugs from all of them and requests that I come back and see them soon and sing some more songs.\n\nDespite offers to sleep over Dan drove us back to my place and we went straight to bed, pleasantly happy and pleasantly tired, stripping naked and climbing under the duvet.\n\n\"You were so good with the children Fay,\" said Dan, \"I mean this in the nicest possible way, but we have to get you pregnant!\"\n\nI kissed him,\n\n\"I totally agree,\" I said pulling him over me.\n\nThe next day my bedroom TV was wired to my aerial and we went shopping again for food and back the mews for more clothes for Dan for the rest of the week. We had such a great time and I didn't want to think about us going back to work and him staying at his place. We visited my Dad who flew back from his golfing holiday with his mates and he was very impressed with Dan who was his kind of man. Not like 'that juvenile northern piss artist Ron' who didn't play golf; being an architect Dan did of course. \n\nMy sister arrived back from Berlin and came straight round to my place the next day to meet 'him' and was very impressed.\n\n\"So is this the real thing?\" she whispered to me when Dan took her husband Carl down to see his truck.\n\n\"I think so,\" I said hugging Lily and kissing her cheek.\n\n\"Fay, YOU are broody! Just what have you...\" she giggled.\n\n\"None of your business!\" I said putting my hands over Lily's ears on my lap. \"Let's just say practice makes perfect Karen, and he is pretty bloody perfect.\"\n\nThe ten days passed all to quickly as the best holidays always do, and we were back to work, although Dan never mentioned going back to his place. He went back for more clothes of course and I did his laundry with mine, but he really seemed to like the guiltless freedom that my place gave him.\n\nWe spent New Year back at Jenn's big place with his parents, my Dad and my sister Karen and her family. It was a great party and at the stroke of midnight we all cheered, and Dan just whisked me into his arms and we kissed. So much so that after about a minute both his sister and my sister rather cheekily tapped us both on the shoulders, and in unison suggested that we should get a room.\n\nI drove home dropping my slightly tipsy Dad at his place before driving back to mine. We got back into my flat and again, we just headed to the bedroom and more lovemaking.\n\nIt was amazing, we made love almost daily and far from our rather energetic examples from our first two weekends this was simple passionate and glorious. Dan knew that I didn't need Herculean efforts from him to make me come and I knew that he loved my body and my responses and it really turned him on. It was nice, and each time we lay there after our passion I did think about pregnancy and whether it was 'that time'. \n\nSome of the more innocent pre-first weekend research I had done talked about the best positions to achieve fertilisation and about me lying on my back with my legs in the air to get the sperm to pool at my cervix, but I was so relaxed that I just wanted to lay there and bask in the afterglow that we had created not do yoga.\n\nWhile I really wanted a baby, my relationship with Dan had given me a new inner peace and I knew that chances are I'd get pregnant soon enough, especially the way we went at each other!\n\nOn a pale wet English winter Wednesday, in a world stripped of the decorations and now emblazoned with soulless 'New Year's Sale!\" signs everywhere, we went back to work in our own cars, simply because the nature of our work meant that we needed them during the day. \n\nI got back into the work and found that the design I'd created for the 700 hundred square metre retail park area had been accepted without a problem and I got stuck into that and the contract work to get it built.\n\nBeing so busy I missed my next period without even realising it, but going with my instinct I waited until the due date of my next one and tried a pharmacy pregnancy test in the office bathrooms, and was so shocked that I had to sit down again on the toilet seat when the two lines confirmed I was pregnant! I went to see my Doctor the following morning and she confirmed everything and I was booked for a scan in five weeks' time. I went straight to the office and wanted to go straight to Dan and tell him, but we were both still getting but generally ignoring Nicki's malign overwatch from her side office and we carried on chatting with friends and colleagues in the kitchen. I so wanted to tell Dan but knew I wanted to be alone with him and on our time. I texted him from my desk as soon as I sat down.\n\n\"Lunchtime Coffee?\"\n\n\"Yes, usual place and time?\"\n\n\"Yes\"\n\n\"Got some news?\"\n\n\"I'll tell you lunchtime!\"\n\nI all but ran to the coffee shop only to find Dan already there with a skinny latte for me.\n\nWe just smiled big stupid grins at each other, the words unnecessary. We hugged and kissed in our unspoken joy, ignoring the other customers eventually sitting to drink our coffee.\n\n\"I bought de-caf,\" he said, \"just in case.\"\n\n\"Good,\" I replied, \"don't want anything that could harm our baby.\" I grinned at him and sipped.\n\n\"Our baby,\" he said with the slightest tremor to his voice, \"I like the sound of that.\"\n\n\"And I want you there with me all through this; Dan, I...\"\n\n\"I love you too Fay,\" he said. \n\n\"How did you know I was going to say that?\"\n\n\"Because I'm in love with you, simple.\"\n\nMy Dad was thrilled to be having another grandchild, even more so because he really liked Dan and along with my sister and family we all went out to dinner to celebrate.\n\nDan moved in completely, leaving the mews empty but with automatic lights to suggest occupation and the necessary heating to prevent damage from cold and damp; we went there quite often to check for post, read metres etc. but we never stayed there over an hour, not once.\n\nAs soon as it began to show through my usual stretchy clothes, 'our pregnancy' was announced and Nicki went sick with stress staying signed off until I went on maternity leave. \n\nMy belly swelled and one evening that summer as we headed out for a dinner at his parents place, he looked at me with just the strangest grin.\n\n\"There's going to be someone else there honey,\" he said.\n\n\"OK.\"\n\n\"My mother in law Heather, Andie's Mum.\"\n\n\"What?\" I said.\n\n\"Oh she's lovely Fay believe me,\" he looked conciliatory, \"she is just the nicest person and understands completely.\"\n\nI was welcomed in by his parents and they were even more lovely than usual as they watched my increasing size and the progress of their next grandchild. His Mum had been overjoyed to hear about my pregnancy and we became very good friends.\n\nShe was a granny already of course by virtue of Jenn's kids but had pretty much given up on her son ever having a family so was doubly pleased.\n\nDan's mother in law Heather arrived and was just as he had described her. \n\n\"H, this is Fay who I told you about,\" said Dan. She walked across to me, a shorter, only slightly older looking version of her sick daughter.\n\n\"Oh Fay,\" said my lover's mother in law stepping across to me, \"you're even prettier than he described you!\" \n\nThis tiny little old lady that must have been in her late seventies hugged me and kissed my cheek, and we all sat down to dinner. Within twenty minutes of sitting next to me and the first course, she had a hand on my third trimester baby bump and we were best mates. The food was wonderful and all cooked by Dan. At the end of the meal a toast was raised to me and the healthy delivery of our healthy baby. I blushed.\n\nA few moments later, Dan raised his wine glass a second time,\n\n\"To Andie,\"\n\n\"Andie,\" we all raised our glasses a second time to his sick wife getting further from her remaining loved ones by the day.\n\nDuring the third week in August I went into labour at home and rang Dan asking him to come and get me and take me to hospital. He did so and pretty soon he was sat there holding my hand as my contractions pushed our child into the world.\n\n\"It's a girl!\" announced the midwife, wrapping our daughter in a blanket and handing her to Dan, who just went all silly and gooey at first sight of his daughter.\n\n\"Oh Wow, Fay!\" he gasped, \"she's gorgeous!\" He bent down to show her to me and kissed my face. The nurse took her back while she was weighed, checked and things counted. She was perfect.\n\n\"I love you Fay,\" said Dan.\n\n\"And I love you,\" I said.\n\nWe named our daughter Anna, a bit of an homage to Andie and I had eight months off to recover and enjoy finally being a mummy. I went into the office to show off our baby and believe it or not despite the warmth and good wishes and gifts from my colleagues, the newly healthy and returned Nasty Nicki still stomped about the office snarling about Doc's betrayal of her best friend Andie but hey, life had to go on and in view of the whole office I got right into her personal space and told her that despite giving birth four weeks previously I was still willing to have our special meeting in the car park seeing as Dan could watch Anna for me. I know that Jenn said she was a troubled person, but so were lots of people and I could still very easily have just punched fuck out of that scowling, judgmental, slightly insane face of hers.\n\nNicki stormed out of the office with a heightened colour, to the shock of the rest of the gang who could see nothing wrong now that the sad story of Doc's wife was out there, many of the older staffers remembering the changes in her before she 'retired'. More than that they were sick of Nicki's constant whining and bitching about 'Doc' behind his back.\n\nWith two adults and a space hungry Baby in our two bedroom flat we decided that my little place in North London was too small and with some regret we sold it for a stupid amount of money, and with it bought a bigger place in the country.\n\nWell it was in the country as far as I was concerned, and in a small town, not quite commuter belt but it had access to high speed broadband and my large PC monitor meant that I could still 'work from home' whenever Baby Anna allowed.\n\nDan still had to work in London of course but spent most evenings and every weekend with us at home sleeping in 'his room' at the mews when time didn't allow for his commute. It was lovely and we were a perfect couple in every sense. He still went to visit Andie at least once a week and I didn't have a problem. She was his wife after all. He would tell me how she was - and she would only get worse.\n\n\"I don't think she recognises me at all now,\" he said with some real sadness in his voice, \"She's very weak, struggles to even sit up now, has no idea where she is and is very scared, she thinks Heather is her Granny.\" \n\n\"I'm so sorry Dan,\" I said; after all, what else could I say. I hugged him and it was strange that I was comforting him about his loss and the slow, agonising end of his wife - who was still alive. \n\n\"It's strange,\" he said with a soft smile, \"If I'm honest I feel like I lost MY Andie two years ago.and I really don't know that nasty, elderly, snappy woman in the home that doesn't like me, it's like she's just a stranger that moved into her body after Andie moved out.\"\n\nAndie's condition got painfully, slowly and horrifically worse and two years after my first visit she died peacefully in her sleep; a skeletal, bed-ridden shadow of the beautiful woman in the photo with her handsome young husband who she had stopped recognising about eight months before that. But in a strange blessing she suddenly recognised her Mum slightly before the end and Heather sat by her bed for several long days just holding her scared daughter's hand until the peace of unconsciousness then coma took over.",
        "We all went to her funeral, even Nicki, and I never did punch her in the face, Jenn was there to hold my hand after all.\n\nWith her passing Dan finally felt able to sell the mews and was able fully embrace the new house with me in some comfort seeing as we had no mortgage now. Our second daughter Sophie came along eighteen months after her older sister.\n\nIt was a strange situation, no question. His mother in law Heather still visits at my, sorry OUR place and she is grandmother by proxy to Anna and Sophie, who look up at the picture of the beautiful 'Auntie Andie' next to Daddy.\n\nOh, when Sophie was four months old Dan had to go north, and the girls and I went with him and visited another grandma by proxy.\n\nEven though I had no idea of the address and hadn't been there in more than three years I still remembered the house and how to get there, and totally unannounced I knocked the door, hoping desperately that she still lived there and was in. \n\nAnna stood next to me looking and being as outrageously cute as she normally was, while Sophie was just a happy gurgling, grinning bundle of fun in my arms, a small gold Italian christening broach on her jacket.\n\nThe door opened and there she was.\n\n\"Anna,\" I said taking her hand and bending down to her looking up at the shocked, open-mouthed face before me, \"This is Nanny Gwen, she's waited a long time to meet you.\"\n\nGwen's mouth flapped for enough seconds for her to get her head straight and she went straight into Nanny mode and dropped, picking up a delighted Anna in a hug.\n\n\"Well hello Anna!\" she said in that warm comforting voice that I had really missed. Two steps into the hallway and Gwen was hugging me and kissing my face for all her worth, then moving on to kiss Anna in her arms, until there was a squeak from Sophie.\n\nAnna pointed at the bundle I was holding, \"That's Sophie, she's my Sissa!\"\n\n\"Is she!?\" said Gwen in delight, \"Well, you and Sophie need to come in and sit down. A while ago I promised your Mummy a cup of tea! Shall we see if we can find some cakes to go with it?\" \n\nHer house was as warm and comfortable as it always was, and I still feel welcome even today . (There is now a small framed picture on the mantelpiece of a beaming Gwen with equally beaming Anna and Sophie on her lap).\n\nAnna smiled up at the lovely cuddly lady that sat her on her lap for almost the entire visit and 'Nanny Gwen' became 'Gwenny' and she really took to the name. \n\nAs she handed me my tea, Gwen slipped a hissed but hopeful, \"Has he asked you to marry him yet?\"\n\nI held up my left hand with the big engagement ring he'd given me on Anna's second birthday.\n\n\"May next year,\" I said, \"I need your address and phone number before we go for your invite.\"\n\nCalling Anna to me, I passed over Baby Sophie and Gwen took her in raptures, stopping for a few moments when she saw the broach pinned to the knitted matinee jacket Nanny Heather had made especially that both Anna and Sophie had worn. \n\nGwen gulped,\n\n\"There,\" she said, catching her breath, and kissing and talking to my baby girl in delight, \"that's all turned out right then hasn't it.\" "
    ],
    "authorname": "Androgynousother",
    "tags": [
        "straight sex",
        "oral",
        "cunnillingus",
        "blow job",
        "romance",
        "winter holidays contest 2018"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/androshorts-a-christmas-affair"
}