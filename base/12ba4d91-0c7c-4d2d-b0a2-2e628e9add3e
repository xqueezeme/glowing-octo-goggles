{
    "title": "Inescapable Pleasure",
    "pages": [
        "Disclaimer: This story contains scenes of dubiously consensual, non-consensual or reluctant sexual events, and depicts a number of dangerous and irresponsible sexual practices. Do not attempt any of what you read in this story. Always practice safe sex, especially with yourself. This is a work of pure fantasy.\n\nHaving a very sexually repressed upbringing left me very vulnerable to developing some very powerful kinks later in life. Once I hit university, a wide world of sexual exploration opened up to me that I had never even considered before. To make things even better, my family had helped me rent an apartment off campus (to keep their precious daughter away from all those bad influences, of course) which left me with a whole house to myself. I was primed to get myself into trouble, and very eager to do so.\n\nUnfortunately, the was one major obstacle I hadn't planned for: I was painfully shy when it came to real life sex. I pushed myself out of my comfort zone once or twice, mostly with a lot of alcohol, but my own self-consciousness at not knowing what I was doing really dampened the mood. And so, I resolved to figure myself out before jumping back in the pool. As with everything I did back then, from my studies to my hobbies, I went all in on my little \"project\". No expense would be spared, no angle left uninvestigated. I would take myself for a serious ride.\n\nOver the next few weeks, packages would arrive every few days. When you don't have much of a social life, you'd be amazed how large a budget for sex toys you can justify. Between my studies and my \"investigations\", I didn't really have time for other people and I also didn't really mind. Dildos, vibrators, lubes, plugs, porn... I had more than enough to occupy my time. But while it was all deeply enjoyable, I still didn't feel like I had really figured out my \"best pleasure\" yet. Everything felt good, but the most exciting thing about all of it was the fact that I had gone so overboard with it... but it wasn't enough. I wanted to go more overboard, wanted to make the experience even more hedonistically extravagant. I wanted a kink of my own, but I didn't even know where to start.\n\nThe answer, of course, is that you find things like that by accident.\n\nIt started off simply enough, at least for how I was at the time: I had slapped a suction cup dildo onto the edge of my tub, and slipped a vibrating cock ring onto it. I had been playing around with riding cowgirl, and found this was the best way to really ride any of the toys I had bought so far. With one foot in the tub and one foot on my bathroom floor, I bounced up and down onto the toy with my hands behind my head. A fantasy floated through my mind, imagining my hands cuffed above me: maybe bondage was an angle I should look into? The idea definitely sent shivers through me, and I found myself quickly cumming hard around the vibrating dildo. The sensations quickly became intense, and I moved to lift myself up and off the toy.\n\nOn this fateful day, I had left just a bit of water in the bottom of the tub when I last showered. And so, when I went to stand, my foot in the tub slipped on the water and slid out from under me.\n\nOut of reflex, I immediately shifted my weight to the foot outside the tub. But that foot had been on my bathmat, and the sudden sideways motion caused it to slide out from under me as well. In the span of one frantic second, instead of lifting myself off the dildo, I had instead slammed myself down onto it with all of my weight.\n\nFortunately for me, this particular dildo wasn't overly wide or long. But the vibrating cock ring was an entirely different matter, as I pinned it against my oversensitive clit with full force. As my legs scrabbled for stability, stars exploded behind my eyes as a single thought flashed through my mind: Oh my god, am I trapped on this vibrating cock? Will it just keep assaulting my pussy, over and over?\n\nOf course, the answer was \"no\" because my hands weren't actually tied up in any way. All I had to do was hold the side of the tub to stabilize myself, and I would be able to easily lift myself up and off the invader. But the unexpected and massive second orgasm that hit me first took my breath away, and I found myself almost passing out before finally freeing myself from the situation.\n\nAll in all, I had been \"trapped\" for maybe twenty seconds of panicked flailing, and I had never been in any genuine danger. But as I lay panting on my bathroom floor, staring up at the still-vibrating dildo, I knew I had awakened something in myself. Reaching down, I was absolutely soaked in a way I had never been before. The brief thought that I might have been trapped and forced to endure endless mechanical pleasure had set my mind on fire, and I immediately knew my search was over. It wasn't about what turned me on anymore; now, it was about the how of it. What was the best way for me to leverage this newfound interest of mine?\n\n<hr>\n\nI started small, of course. The simplest attempt was to just play with a vibrator in bed, but to try and keep holding it against me once I came. This didn't work at all: once the post-orgasm sensitivity spiked up, I reflexively pulled the toy out right away. I just didn't have the discipline to keep it in place, even if regret washed over me as soon as I pulled it away. I needed that feeling of helplessness, needed something to actually stop me from giving up right away.\n\nAt this point, it was reasonable to consider involving other people in my sex life again. But the situation had changed over time: a strange side effect of my nonexistent social life was significant success in my studies. With increased success came increased obligations, and the window of opportunity to socialize freely had closed behind me. This didn't bother me as much as I expected it would: between my work and my \"play\", I felt quite fulfilled and didn't really miss it. It did, however, mean that I couldn't look towards giving up control to another person in order to achieve my necessary feelings of helplessness. And so, I became increasingly creative.\n\nBy the time I graduated, I had devised a setup where I would turn on a vibrator, slide it into myself, slip on a pair of panties to hold it in place, then I'd tie my hands to the bed frame. The knots were never that good, but it was enough that I would have to put effort into untying them in order to release myself. I would enjoy the slow build, writhing on the bed knowing the torment to come, until finally the inevitable crash would hit me. Only once I came would I allow myself to begin trying to escape, at which point my sensitive pussy would force the most delicious moans from me as my toy cruelly continued its assault. My fingers would tremble as I would struggle with the knots, lengthening my torment whether I wished it or not. Eventually I would manage to work myself free, shaking as I would slip the panties aside so that my twitching pussy could force the invader out and onto the bed, still buzzing angrily. Exhausted and satisfied, I would commonly fall asleep right then and there (leading to many unnecessarily dead batteries, as I would forget to shut the damn toy off first).\n\nI was addicted to the ritual of pleasure I had created for myself, and my mind was filled with extravagant scenarios in which I would be forced to endure more and more mechanical torment. Thanks to my exceptional grades, I was employed directly out of school at a corporation halfway across the country. While my family cried and wailed as they wished me goodbye, all I could think of was the absolute freedom that awaited me: if this is what I had accomplished on a student's budget, what could I get up to with real resources at my fingertips? The prospects thrilled me, and I began to comb through my fantasies for aspects that I could actually achieve, no matter how ridiculous. I had dreams to work towards, and no reasons to hold myself back. The idea that any of this could go too far never even occurred to me at the time, nor would it for over a year.\n\n<hr>\n\nThe day I finally made a serious mistake was a Friday, leading into a long weekend. I had been working late all week, leading a number of high stress projects that had been ongoing for months. This would be the first real weekend of freedom I had in quite a long time, and I intended to make the most of it. Kicking off my shoes haphazardly in the front hallway of my house, I threw a frozen dinner into the microwave as I began to unzip my dress. I rarely wore much clothing while at home these days, mostly just to enjoy the freedom of nudity. But this time, I was more concerned with efficiency: once I had eating the food I biologically required, I was anxiously looking forward to fucking away all the tension that had been building up without release. I ate quickly in my bra and panties, impatient to move on to fulfilling my baser needs. Once finished, I finished undressing to take a quick shower while I digested, then barely towelled off before heading down into the basement.\n\nThe rest of my house was kept presentable to guests, just in case I ever had any (though I generally didn't). The basement, however, was for my eyes only. It wasn't finished, with a concrete floor and exposed beams for walls. In any other household, it would have been filled with spare seasonal decorations and other random storage. In my house, it contained a washer & dryer in the corner, and an intimidating conglomeration of sex machines and chains in the center.\n\nIt had taken some time to assemble, with parts being switched in and out and the overall design being a matter of trial and error. But the current setup was a resounding success, to the point of making me instantly wet anytime I laid my eyes upon it. At its core, a sybian sat upon a large foam mat, wide enough for my knees on either side to be protected from the hard concrete floor. The sybian itself was relatively standard, save for the control box which I had replaced with a custom aftermarket model. Instead of manually controlling the speed, vibration, and rotation, this control box would instead randomly cycle through preset \"sequences\" on its own. Once turned on, it would keep playing through its options endlessly until turned off.\n\nAround the foam mat, a number of steel brackets were drilled into the concrete. These had been an absolute bitch to install, especially when any of them would turn out to be slightly misplaced. I was never exactly handy with power tools, and found the masonry drill I rented to be loud and hellish, but I was too motivated to let it stop me. And so, after great effort, I had put together the current arrangement of brackets to hold strong chains in place. And within reach in front of the sybian, a single steel rod was drilled down deep into the concrete. It had a small hole through it near the top, just large enough to accept the shank of a padlock.\n\nCompleting the set was a set of cuffs: one for each ankle, one for each thigh, and one belt for my waist. Each was made of strong leather, padded for comfort, but held in place by strong keyed locks. The key was stored on a shelf at the edge of the room, far from the sybian. Each cuff & belt was attached to a length of thick chain, measured to the perfect length. Already feeling myself drip with excitement, I began to lock the cuffs and belts into place; the weight of the unbound chains always made my stomach flutter with excitement for what was to come. On a whim, I set my phone on the shelf with the key, setting it to record a video. I hadn't ever recorded one of my sessions before, but I found myself curious to see what I looked like as I thrashed and moaned.\n\nDragging the chains behind me, I moved over to the sybian sitting ominously in the center of the room. Lube sat in reach nearby, and I began to cover the toy liberally; it would not do for things to dry out once things started, given how difficult it was to stop. Once everything seemed ready, I knelt carefully onto the sybian's protruding cock, feeling its textured base nestle against my clit. Even without power, it made me shiver with anticipation.\n\nCarefully, I began to thread the chains of my cuffs through the brackets on the floor. As each was pulled into place, I felt myself lose mobility: all the chains held me down atop the sybian, unable to raise myself far enough for my clit to escape the silicone surface that would soon be vibrating incessantly against it. With everything in place, there was absolutely no mercy or escape for me.\n\nAll the chains ended in the same place: their final links just reached the single steel rod that jutted up in front of the sybian, enough that I could slide the rod through to hold them in place. And once every chain was pulled taut against the rod, the final step was put into place: a cheap dial combination lock that I had originally purchased to use on my gym locker.\n\nAs anyone would know who had used these dial locks before, they weren't exactly the most reliable. Turn twice to the right, set the right number, once to the left, and so on... even at the best of times, they could be quite finicky to unlock. When you just wanted to open your locker so you could go home, this was a downside. But as a final challenge to overcome as a rumbling powerhouse of sexual pleasure tortured your pussy? It was perfect. Slipping it into the hole near the top of the steel rod, I snapped it closed and spun the dial once randomly to ensure a challenge when the time came. Now, until that lock was removed, I was absolutely pinned to the powerful toy between my legs. All that was left was to awaken the beast.\n\nTaking hold of the control box, I looked up at the clock I had placed in full view: 8:43. More than enough time to utterly exhaust myself, and stil get a full night's sleep. My record so far had been an forty-seven minutes, but I was feeling ambitious tonight and wanted to give my best since I was recording this for posterity. Of course, that could just as easily work against me: being too horny frequently meant I came too quickly, and was soon sent scrambling against the padlock for my freedom. But whatever happened, I was always left feeling completely satisfied. With one last shaky breath, I clicked the box to \"ON\" and quickly tossed the control box out of reach.\n\nGod, if only I had known what that night had in store for me. But would I have done anything different, if I had?\n\n<hr>\n\nI had come to recognize most of the sybian's automated patterns at this point: some were more gentle, others were near-abusive in their intensity. I had come to assign personality to my machine, given how much time I had spent subjected to its whims. Tonight, it seemed angry at me. No sooner than the control box had left my hands, the machine revved straight up to full power with no warning.\n\nI doubled forward, gasping. As pent up as I had been, I had still been expecting some degree of a buildup before plunging into the deep end. It knocked the wind out of my lungs, leaving me unable to even moan. But just as soon as it began, the machine stopped completely, leaving me confused and desperate. It hadn't played this trick on me before, and it left me unsteady and unprepared for whatever came next.\n\nBefore I could think deeply on the matter, it loudly revved back to life beneath me. More moderated now, it sent me on a rollercoaster of rising and falling sensations that I couldn't follow. Even if I would have recognized the pattern at any other time, that initial attack on my senses scrambled my brain. All I could do was endure the rapid fire of changing sensations, throwing back my head and moaning deeply when my breath returned to me. My hands ran across my breasts and neck, tweaking my nipples out of instinct as my hips ground down onto the vibrating base. When I was of sounder mind, I would try and lean further back so as to give my clit as much breathing room as possible; this was a marathon, and I had to pace myself. But tonight, I was too wrapped up in need and I fell into a sprint, rubbing my clit back and forth across the textured vibrating surface of the toy. Part of me knew this would cost me later, when the sensitivity was too much for me to bear, but I could feel my phone's camera on me and it drove me to put on a good show. Silently, I thanked myself for deciding to record tonight's adventure; it was pushing me to go even further than I had before, which was becoming more and more difficult the further I went. Tonight would certainly be a night worth remembering.\n\nAll too soon, I felt the familiar feeling of lightning travelling across my spine. Quickly glancing at the clock, I laughed breathlessly: 8:52. Contrary to my original hopes, this was more likely to be a record for the shortest session ever. But that was alright; I was enjoying myself far too much to care. I found myself panting like a dog in heat, the slight wetness from my earlier shower already replaced by a sheen of sweat over my entire body. But before I could crest the peak, I found myself looking up at my phone and wanting to push myself even harder. And so, with great force of will, I began to take short sharp breaths as I tilted my hips. While I couldn't actually lift my clit off the machine no matter what I did (I had made quite sure of that), I could briefly reduce the direct contact and try and draw things out. Cumming was inevitable, but I could try and hold it off.\n\nEarly on, I had tried to hold off cumming for as long as possible out of an excited fear of what came after. But I quickly learned that it had the absolute opposite effect: while it did push the \"suffering\" further into the future, it also made it infinitely worse once the time came. The longer I edged myself against the toy, the more sensitive I became and the greater the agony once I finally came and the machine wouldn't stop. Even for a glutton for punishment like myself, it proved to be too much and I couldn't bring myself to draw things out like that anymore. But this night was special, and the camera inspired me to push harder and higher. Like the cuffs and chains, the camera forced me to surpass the limits I thought I had. And so I rocked back, groaning as my pussy cried out for the release that I was withholding.\n\nReaching back, I grabbed the cuffs around my ankles to arch myself away from the vibrations. This was a risk/reward maneuver, however, as it shifted the focus from my clit to the dildo rotating inside me. The further I leaned back, the more it pressed against my G-spot with every rotation, and I found myself gasping at the sensation. While my clit had always been the easiest way to make me cum, the sybian had shown me that it wasn't the only way. I wouldn't be able to hold out like this for long, no matter how I tried to delay things.\n\nSometimes, I swear the machine knew what I was doing and it would act to thwart me. Things were already hard enough for me as it, with the machine shifting back and forth in waves of vibration and rotation when it suddenly switched to full rotation & full speed. Leaned back as I was, it began to thrash against my G-spot with the force of my full body weight against it. I jerked hard against it, shrieking in surprise as I felt a G-spot orgasm surging up in me. Instinctively, I doubled forward, palms flat against the ground in an attempt to relieve the intense pressure I felt building.\n\nSo of course, that is when the machine began pulsing the vibration of the clit pad at some ungodly intensity as well.\n\nI had tried my best to hold things off, but I was only human. Bent forward, my clit was mashed fully against the sybian as the dildo stirred me up from within. I threw my head back and screamed, feeling my legs shake uselessly in their bonds as a massive orgasm ripped through me. Wetness flooded my thighs; I wasn't usually a squirter, but this was a very special night and I couldn't hold back even if I had wanted to. The pulsing of the vibrations kept me riding aftershock into aftershock, as I helplessly looked up at the phone dispassionately recording me coming completely undone. The scream devolved into incoherent moaning as my clit's sensitivity rose beyond what I could handle, and my pussy fluttered wildly around the gyrating dildo.",
        "For once, the machine found some degree of mercy for me. All the settings seemed to settle to a safer mid-range, enough to torture my sensitive nerve endings but not so much that I couldn't breathe or think. Shaking with the intense release, and with the continued sensations on my inflamed clit, I straightened up enough to begin weakly fumbling with the combination lock. The act of sitting up settled my clit onto the sybian at a new angle, and I felt yet another aftershock jolt up my spine despite the overstimulation. I found I couldn't actually stop moaning as I began to attempt opening the lock. One more glance at the clock: 9:21. Not my best, but entirely respectable.\n\nAs always, I absolutely fouled up the combination the first time. Turning a dial to an exact number while you entire body shakes is extremely difficult, not to mention while you try and ignore your most sensitive parts crying out for mercy. With a deep, shuddering breath, I attempted to focus as hard as I could. Pressing the dial hard into the lock for stability, I began to turn it slowly and firmly from number to number. The first digit of the combination, then right twice fully. Second digit, then left once...\n\nTink.\n\nAt first, I didn't even understand what had happened. My left hand still held the back of the lock, and my right still firmly grasped the dial. What I couldn't comprehend was why there was suddenly about an inch of space between the two.\n\nI had pressed hard enough to shear the dial completely off the cheap piece of garbage lock. All I could see sticking out from the lock was a tiny, flat piece of metal where the dial should have been attached.\n\nNot since the first incident with the tub had I felt this sudden surge of deep, genuine panic. But unlike that first time, there was no following realization that my panic was undeserved. This time, as I stared at the ruined lock, the only conclusion was that I truly was trapped atop this cruel machine with a will of its own. And I had absolutely no idea how the hell I was going to escape.\n\nAnd to punctuate the point, the sybian changed patterns once again. It began to repeatedly ramp up from 0 to 100% over the course of a few seconds, over and over.\n\nThe change in sensations, combined with the explosive rush of adrenaline that the broken lock had provoked, sent me spiralling into another massive orgasm that I was entirely unprepared for. I cried out, in a strange mix of surprise, terror, and absolute pleasure as my body clenched so hard around the dildo that I could feel its rotation slow. With my head thrown back, eyes squeezed shut, my mind raced trying to figure out how to escape this trap I had designed so perfectly for myself. But my thoughts were like wet tissue paper in a storm, and I couldn't hold onto them long enough to form plans. Because at my core, this situation was exactly what I had always hoped for. Here I was, actually trapped against this machine like I had always fantasized about. I had no prepared avenue of escape, no guarantees that this would ever end. If I wanted to survive this, I would have to struggle against my own body to do it.\n\nThe idea set me on fire. Part of me was genuinely terrified, that I wouldn't be able to free myself. How long would I be here until someone found me? Nobody visited me, nobody called me. Would I even be able to survive? If I did... would I even still be sane by the time I was rescued? Even if I could free myself, how long would it take? Could I handle it? But somehow, every worry just sent a shock straight to my pussy. The idea of struggling for my life and sanity, the prospect of it being more than my mind could handle, leaving me a moaning ruin... even the fact that this was the dark consequences of my own desires somehow turned me on even more. This is what I had always wanted, and it turned me on so badly to get it.\n\nReality came back to me in the form of a powerful blast of vibration against my clit. As turned on as I was by my predicament, it didn't make my nerve endings any less sensitive. Gasping desperately, I tilted my hips back as far as I could to give my poor clit some degree of relief. Fortunately, the machine had lowered the intensity of the dildo's rotation for the moment which made this the easiest position on my body for now. While it still did insistently stir up my insides and hum against my clit, I found I could at least focus my thoughts somewhat now. Before I lost the opportunity, I needed to come up with some sort of a plan.\n\nLooking around, I had apparently dropped the dial to the lock and it had rolled out of reach, so it wasn't worth thinking about any further. Reaching gingerly for the lock without leaning forward onto my inflamed clit, I tried to carefully grasp the tiny broken shaft with my fingernails. It became quickly clear that this was a dead end: not only could I not get any grip, I also would have no clue where to turn it to without the dial. Defeated, I dropped the lock against the steel rod. Refusing to give up, I began pulling against all of the cuffs with my full strength; while I had intended for them to be impossible to escape from, I had never been quite as motivated as I was now. Unfortunately, I had met my goals with too much success; the chains were thick, the floor brackets were insanely secure, and the cuffs themselves were too well made to be broken open. I had no leverage to wiggle out of even the ankle cuffs, let alone the thigh cuffs and the belt pinning my hips down.\n\nIf escape was impossible, then rescue would have to be the next angle. While anyone walking in on this would be incredibly embarrassing, it would still be better than the alternatives. Unfortunately, my phone was most certainly not accessible, and I had made a habit of disabling the voice assistants because I found them \"creepy and intrusive\". I scowled up at my phone, sitting smugly across the room recording my plight.\n\nAs hard as I was trying to focus, the machine had never truly stopped buzzing away between my legs. In fact, it had slowly lowered itself to the barest of activity, which had the dangerous effect of becoming slowly pleasurable again. So as I looked up at my useless phone, I felt a rush of warmth radiating from my pussy as I considered the video it would contain. All the genuine anguish and raw erotic pleasure I was experiencing, and it would all be there for me to experience again and again. How many times would I watch it, fucking myself to the display of my own helpless suffering? Maybe I'd even set up a screen down here, and watch it while riding the sybian. An endless feedback loop of helplessness and pleasure.\n\nDelicately, I slowly shifted my hips forward. I couldn't help but wince slightly at the feeling of direct contact, even with the soft silicone, but the feeling of need was overcoming my ability to think and I couldn't keep my hips tilted away forever anyway. I'd just let myself enjoy the sensations for a bit, enough to satisfy my growing cravings until the machine ramped up again, and then I'd get back to work looking for an escape. Just a bit would be okay.\n\nOut of the corner of my eye, I caught sight of the clock. 9:33, a new record. I had also spent twelve minutes on the sybian after cumming, which was a definite record of its own. Despite the electricity that began moving up my spine, I focused my gaze directly on the camera of my phone. The sybian was behaving awfully well, gently pulsing and caressing my tender pussy inside and out. I found my hands beginning to roam my own body again, as pleasure overcame any other sensations of discomfort. Soft moans spilled out of me, teased out despite my situation. My mind began to wander into fantasy once more, tainted by the genuine danger I was in.\n\nIn my mind, I never escaped. In fantasy, free from mortal concerns, I was trapped here for the rest of my life. Day by day passed, week by week, year by year, and nobody ever came and found me. I spent hour after hour riding the waves and valleys of pleasure and suffering, losing all ability to think like a human. All I could do was endure as pleasure was wrung from my tortured body, until the only thing I could focus on was the anticipation of my next orgasm.\n\nAs my mind wandered, I stared straight at the phone. But not at the phone, past it. I stared at myself, the \"me\" that would one day be watching this video. She and I, we would lock eyes and share in this fantasy. Every time she watched this, she would remember how much we enjoyed this, enjoyed the rush and the fear and the helplessness. And in my heart, I knew even then, that I would be chasing this feeling for the rest of my life. That her and I, that the \"future me\" and the \"me\" trapped on this infernal toy, would only take this further once this was all over. That even if I did get myself free of this situation, I truly was trapped, by my own desires driving me back into riskier and more dangerous situations. I had been trapped ever I began exploring my own pleasure, and I loved it.\n\nUnlike my earlier explosive orgasms, this one built with a powerful inevitability. As I embraced how dangerously addicted I was to all of this, and how much I loved the risk I had put myself in, my body simply unfolded. It started with my legs shaking violently, and I almost looked down to see what was going on but found myself unable to look away from the camera. I was locked in eye contact with the degenerate \"me\" of the future, the \"me\" that I was creating right now, and I couldn't tear my gaze away from who I was corrupting. The shaking rose up to my hips, forcing me to grind desperately against the vibrating base. I cried out as I aggressively rubbed my clit (which I had been trying so hard to protect) against the softly humming machine, blinking tears from my eyes at the intensity of the sensation. My hands flew to my breasts without my consent, rolling my nipples between my fingers as my entire body became ravenous for any pleasurable sensation it could experience. A storm of erotic energy played between my breasts and my clit, building up throughout my body. From my toes to my fingers, I had never felt more aware of my skin. The cool air of the basement whispered against my sweat-soaked skin, highlighting every drop as it rolled down my back and stomach.\n\nAnd then the machine roared into high gear, and I screamed.\n\nI wasn't prepared, and I don't think I could have been prepared. It ripped the orgasm from me, without mercy, from the very bottom of my soul. My entire body locked up, every muscle tensing, which only served to seal my pussy as firmly down onto the sybian as I possibly could. For what felt like an eternity, I screamed as my entire body flooded with aggressive release. I actually seemed to completely disconnect from my body; for a moment, it felt like I was merely witnessing this as something just happening to my body, rather than actually experiencing it. And in that moment, \"observing\" myself... I felt beautiful. The pleasure pulled me taut, laid me bare and exposed, and I felt like the best version of myself that had ever existed. As if I lived only to reach this state. Tears flowed freely from my eyes, slammed shut as it all became incredibly overwhelming, and my awareness seemed to be sucked back into my body with immense force.\n\nI couldn't breathe. The machine wasn't slowing down, but I couldn't handle anymore. Screams gave way to weak moans and feeble hyperventilation, struggling to draw any air into my lungs that I could. The orgasm wasn't ending, even as my nerves cried out for mercy. I couldn't pull back, couldn't soften the effects, as my legs had locked up entirely around the sybian. All I could do was wait, either for the machine to slow or for my muscles to fail.\n\nTime seemed to lose all meaning. All those days in the gym had given my legs dangerous resilience, and the machine seemed fixated only on the highest settings. Any slight dip in intensity only heralded another long spike, redoubling the tension in my thighs. Leaning backwards pressed the dildo insistently against my g-spot, sending me into uncontrollable full body spasms. Leaning forward ground my tortured clit into the madly buzzing machine, causing my body to tighten even more than it already was. All I could do to withstand it was to try and hold myself perfectly upright, gripping the chains on either side of me to stay steady despite feeling increasingly lightheaded. I had to will myself to breathe, forcing myself between long involuntary moans. Holding myself rigidly, I actually passed out for a few seconds, only for the swirling combinations of rolling orgasms and intense torment to snap me back into focus.\n\nAnd then, peace. Abruptly, the machine dropped to a low purr, the dildo barely moving. All at once, my legs unlocked and I slumped forward in a heap. My clit protested weakly at the contact, pulling a groan from me, but I was too exhausted to do much about it. I lay there for a while, just taking the opportunity to catch my breath and clear my mind while I could. I wasn't sure how long I had before the assault continued, but I knew I wouldn't survive if I didn't take this chance to recover.\n\nWhen I finally sat up, shaking the hair dripping with sweat from my eyes, I looked to the clock once more: 10:04. I had been on this machine for almost an hour and a half, half of that time being against my intentions. My body felt exhausted, and my mind was sluggish. If I didn't figure something out soon, I genuinely didn't know if I would ever have the coherency to.\n\nA warning sounded, from the back of my mind. Beneath my legs, the machine had taken on a particular rhythm to its pulsing, even at the lowest intensity. Brr-brr-brrr, brr-brr-brrr, over and over. A shiver ran down my spine, realizing what that meant.\n\nI didn't recognize every pattern the control box had, but I absolutely recognized this one. It was the only one I had a name for: the Big Bang. Over ten minutes, it would slowly build from 0% to about 80% intensity, then silence for 1 minute. And then it would blast full power, for ten straight minutes.\n\nI recognized it because I considered it the \"final boss\" of the machine, and had never come close to enduring it. The slow ten minute build was a delicious edge, which would always send me over as soon as it went into full power. I would try and hold out, but would inevitably be left scrambling to open the lock in under a minute, and had never withstood the full pattern. Except now, I had no escape. If I didn't get free soon, I would be forced to experience the entire thing. And I knew that there was no way I could withstand ten minutes on full power in my current state.\n\nReal panic set in. 10:06, two minutes gone just spent contemplating the future. I frantically pulled at the chains again, but the last onslaught left me even weaker than I was the first time I tried and failed. 10:08. I grabbed the lock with both hands, shaking it with whatever might I could muster. It did nothing. 10:09, the sensation began to become truly distracting. Holding the lock for leverage, I tried to pull myself up as far off the machine as I could, but my legs provided no meaningful assistance. They gave loose, dropping me back into the sybian with force. I cry out. 10:10, 4 minutes left.\n\nLooking up at the phone, I lose my cool. \"You did this! You did this to me!\" I'm screaming at myself, a future \"me\" that I'm not even sure will exist at this point. Maybe I'll never get free, never have the chance to watch the video. So who am I yelling at? In my heart, I still have hope that I'll make it out of this. 10:12, my clit is on fire but I lack the strength to do anything about it. I try to sob, but only moans come out: even as brutalized as I am, the dark part of me still finds pleasure in all this. It's the most resilient part of me, the only part that won't break.\n\nThe only part that won't break.\n\nAn idea forms, the last chance I'll have. If this doesn't work, there won't be enough left of me to try anything else. I look up at the clock, 10:13. Now or never. I take deep breaths while I can, trying to ignore the protestations between my legs. They're about to suffer a lot worse, so there's no sense in babying them now.\n\n10:14. The machine goes completely quiet.\n\nWith one last breath, I reach down to spread my pussy lips apart and lean forward, mashing my clit directly against the machine. Even just touching it causes me to scream, but there's no time to suffer. Bending forward with all my weight, I grab the lock in both hands with the tightest grip I can manage, and close my eyes.\n\n10:15. The machine attacks.\n\nIt's not even pleasure at this point, just raw sensation. My body jerks hard as the vibrations begins, but I muster all my will and keep my pussy pressed down against the machine. The screams flow freely, and I don't try and stop them.\n\nMy entire body begins to shake, sliding my exposed clit back and forth across the slick ridges of the machine. I lose the ability to even scream, as my body perversely embraces the sensation. My exhausted legs begin to tense, and I try to brace for what comes next.\n\nAs before, my legs lock up around the machine. I moan weakly as my body betrays all good sense, forcing me to withstand the maximum intensity. Every instinct in me tries to force me upright, to take the pressure off my clit, but I ignore it. Good sense didn't get me into this situation, and it wasn't going to get me out of it. I clutch the lock as if it were a lifeline, feeling my body respond to the brutality in the only way it seemed to know how.\n\nThis orgasm was different than any I had experienced before, more primal and powerful. It felt less like pleasure, and more like an explosion of light behind my eyes. The intensity of it scared me, but there was no other option but to ride the wave. Moans gave way to silent screams, as my body turned itself entirely over to this one release.\n\nThe dildo hammering my G-spot seemed to obliterate some barrier in my mind, and my pussy began slowly gushing all over the sybian. I could feel a thick cream lathering up between my body and the machine, sliding down my thighs and up around my clit. As tightly as I held myself down, it still worked its way between me and the machine, and I felt my clit sliding wetly against the endlessly vibrating surface. And despite everything, amidst the torture of my raw nerves, something truly pleasurable began to stir in my mind.\n\nI redoubled my grip around the lock, fighting to stay conscious. What came next came last, one way or another. If I passed out now, I'd lose my opportunity and I wouldn't get another. I looked up one last time at the camera, tears and sweat dripping down my face, and dug deep into the darkest parts of my mind.\n\nI imagined myself watching myself, watching myself literally come apart. I imagined my horror at finding it erotic, even as I touched myself to it. At first I'd resist, I'd tell myself that I should never do this again and that I should be ashamed for watching... but my fingers would still be dancing across my clit. I'd tell myself I had to delete the video, to remove the temptation... but my fingers would find their way into my dripping pussy, slamming in and out. And as my shame at being a slave to my own sexual needs would rise to a peak, I'd look at the video and see my face as it was right this moment, pushed far past the brink of sanity and decency. And I would envy myself for being so dominated by my own needs, and I would cum hard dreaming of how to reach those destructive lows once again.\n\nIt was as if I could feel my mind snapping. The physical sensation of orgasm hadn't stopped since the machine had kicked into high gear, but this was a full body embrace of it. My body ceased to obey me, and my back arched in a full body spasm, head whipping back as I screamed in the most self destructive pleasure I had ever experienced.",
        "And I held onto that lock for dear life as it happened, as my body tore itself backwards against my will like a coiled spring. With all the presence of mind I could muster, I tried to pull myself forward with the lock, knowing full well my mind would lose the battle. My body, wracked with pleasure, would surely win.\n\nAnd it did win, but not only against my mind. As I screamed until my lungs gave out, the metal workings of the cheap lock followed suit. There was no way I would break the thick metal shank of the lock, but the inner mechanisms were obviously of lousy workmanship. Against the involuntary force of my entire body, the lock exploded in my hands, sending me reeling backwards as parts of it scattered across the entire room.\n\nThe force of the lock releasing threw me back, the chains straining to keep me from flying off the sybian as it roared beneath me. Unable to keep upright, I could barely hold myself in a backwards arch as my muscles failed beneath me. The release of all that tension, combined with the relief of the lock breaking, had made my muscles limp and powerless. All I had to do to release myself was lean forward, and slip the chains up off the metal rod... but I could not lift myself. Even bent backwards, with my clit as exposed as it was, my entire pussy was still fully accessible to the machine's anger.\n\nLooking up at the ceiling, bent so lewdly backwards for the camera, I let my mind drift once more to escape the screaming of my overstimulated nerves. I had done it. I had escaped this trap of my own accidental making, and I had done it by diving deeper into my own depravity than I ever had before. Closing my eyes, I let myself scream as one final orgasm was torn from my body, trying to blot out the truth that had never felt more satisfied than I did in that moment.\n\nAnd then, silence. The machine quieted to a dull roar, and my body began to slowly pull itself back together. By the time I could finally throw my body forward, the clock read 10:29. I had survived the full course of the Big Bang, even if not entirely by choice. The chains felt heavier than ever as I pulled them off the anchoring post, the tension leaving the cuffs. Bracing with both arms, I let out one final cry as I lifted myself up and off the still-buzzing dildo, feeling my clit unstick itself from the surface with a softly wet sound. As soon as I was free, I collapsed sideways onto the concrete floor. Before I could think to move any further, I passed out.\n\nI woke around an hour later, aching and cold, to the sound of angry buzzing. My body felt like lead, and the machine had shifted into yet another high intensity cycle while I lay next to it, as if it was still hungry for more. Dragging myself to my feet, I began to disassemble the ceremony to my lust that I had taken part in.\n\nAs if in a trance, I went through the complete cleanup routine as if it was any other day. I shut off the machine, pulled the silicone cover off and washed it mechanically in the basement tub. I wiped down the toy and mat, idly marvelling at the sheer amount of mess I had produced. Only after everything was cleaned did I register that I was still wearing the cuffs, dragging the heavy chains behind me. Once unlocked, the trance seemed to break, and I left them on the floor of the basement as I wobbled up the stairs, phone in hand. I couldn't help but look at it, though it seemed to have run out of power at some point. How much did it catch? All of it? None of it? I wasn't sure I wanted to know, and I certainly wasn't capable of processing the answer tonight.\n\nWandering up to my bedroom, I considered how badly I needed a shower as I fell onto my bed, sideways and on top of the comforter. I fell asleep almost instantly, still sticky from head to toe.\n\n<hr>\n\nI woke shortly after noon on Saturday, reflexively curled into a ball as I slept. The soreness I felt was immeasurable, and I felt like I had run a marathon. My dead phone sat next to me; I hadn't plugged it in before passing out the night before. The thought of what it may contain scratched at the back of my head as I began charging it, before finally drawing myself a bath that I so badly needed.\n\nWhile the bath did far less for the soreness than I wished, the Aspirin I took beforehand was far more effective. Besides the pain, simply washing off the evidence of the prior night's activities went far in helping me feel human again. By the time I came out, wrapped in my fuzziest robe, I felt just normal enough to dread what my phone contained. And though it was charged enough to turn on, I couldn't bring myself to watch. In fact, I pledged not to.\n\nBut I couldn't bring myself to delete the video, either. To even look at it was a temptation I couldn't handle, and so I ignored it. I spent the weekend recovering, and did my damndest to put the incident out of my mind. Even as I went back into the basement to finish cleaning up, I maintained a sort of mental distance from the memories of what had happened; I just wasn't ready to deal with it yet.\n\nAnd for that entire week, that was how I continued. Ironically, despite how much I felt like I had been hammered out and reshaped, a number of coworkers made sure to comment on how fresh and rejuvenated I looked on Monday. To which I smiled and made small talk, and refused to think deeply as to what that might imply. (I did, however, allow myself to buy a new combination lock. For the gym, of course. But I also couldn't bring myself to remove it from the packaging.) I threw myself into my work, refusing to give myself a free moment.\n\nBut when Friday rolled around and the weekend loomed once again, I found it impossible to put the previous weekend out of mind any further. At the very least, I bargained with myself, I needed to know just how much the video had captured before my phone died. And so I ate dinner, poured myself a large glass of wine, and sat down on my couch to finally look at my phone.\n\nOpening the video, I quickly scrubbed straight to the end to see where it had cut off. Brief frames of the rest of the video flashes across the screen for only moments, but even that was enough to light a fire between my legs. Even though some soreness remained, it had also kept me from relieving any tension for the week, and I felt as if I were on a hair trigger.\n\nReaching the end, I saw myself asleep on my basement floor, skin shining with sweat. Improbably, the phone had captured the entire experience, only dying once I had already freed myself and passed out. Some part of me had hoped the video had cut out after only a minute, or somehow corrupted itself, just to save me from the temptation. But now here I sat, with the entire thing at my fingertips. All I had to do was press Play.\n\nI finished my wine before making another move, staring intently at that Play button. This was a larger choice than it seemed, and I knew it. If I embraced what this video showed me, I knew I would end up chasing this high for the rest of my life. I had been in genuine danger last weekend, and only escaped through Herculean effort. Would I be able to escape again, if I kept chasing this? Did I even want to? The unopened lock sitting in my purse seemed to throb at my feet.\n\nI slipped a hand beneath my legs, under the pretence of feeling how inflamed the skin felt. What I found instead was that even thinking about this had soaked my panties completely, to the point that running my fingers over the outside pulled away strings of wetness. I shivered at the sensation, my mind slipping back into memories. I had been terrified, I had been pushed drastically beyond what I was comfortable with or what was even safe... and it had been the most thrilling experience of my life.\n\nWordlessly, I stood up and pulled my dress over my head. Soon the bra followed, and my ruined panties next. A few taps of my phone, and the video was now cast onto my living room television in crisp HD quality. I sat in the center of my couch, spread my legs wide for my fingers, and began the video.\n\nFor one hour and thirty-six minutes, I fingerfucked my pussy to the spectacle of my own imprisonment and sexual devastation. When she cried out for mercy, I edged myself in anticipation. When orgasms ripped through her, I softly caressed my own pussy lips to delay my own finish. And when she screamed at me in anger, blaming me for her suffering, I accepted her words as truth and pounded myself relentlessly. I don't let up as she forced herself into one final, awe-inspiring orgasm that shattered her bonds, my cries joining hers as her body went limp and simply endured the final ravishment by the merciless machine. And she she slumped off the toy, collapsing to the ground, I licked my fingers clean with a single clear thought in my mind: I envy her.\n\nAs the video ended, I stood from the couch to ready myself for bed, satisfied for the moment. But the hunger that I felt inside, I knew wouldn't be satisfied by anything less that what I had already endured. My whole adult life had been motivated by my endless climb into sexual depravity, and it wasn't going to stop now. Reaching into my purse, I began unwrapping the lock as I passed by the kitchen garbage. Nonchalantly (as if I had someone to hide my actions from), I quietly peeled the sticker off the lock that indicated the combination, shoving it into the wreckage of the packaging. I threw the entire mess into the recycling, leaving the lock sitting prominently on my dining room table to find in the morning.\n\nWhoops."
    ],
    "authorname": "Seracae",
    "tags": [
        "female masturbation",
        "solo",
        "sybian",
        "fuck machine",
        "self bondage",
        "bondage",
        "masturbation",
        "forced orgasm",
        "trapped",
        "corruption"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/inescapable-pleasure"
}