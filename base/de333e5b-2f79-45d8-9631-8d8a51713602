{
    "title": "A Study Break with Jane and Tony",
    "pages": [
        "A Break from Studying with Jane and Tony \n\nIt was early May and my girlfriend and I were looking forward to our summer holiday from University. We were studying and researching for our end of term exams and papers and exhaustion was taking hold as we studied hard trying to maintain our 4.0 GPA's. \n\n\"Tony,\" my live-in girlfriend asked, \"Why don't we take this weekend off from our studies and relax a bit? We've been working very hard and I, for one, could use a break to recharge my batteries. You look like you could use a respite too.\" \n\nI knew I could use a break. I felt I had everything covered for my exams, I had finished my research and had finished my first drafts for my papers, so I felt confident I could take a couple of days off to allow my brain to reset. \"Okay, I agree. We could use a little break. We should plan our summer road trip while we are at it!\" \n\nJane replied, \"Ooh, yeah! That will be fun. I would, also, like to invite a friend over for dinner this weekend.\" \n\n\"Sure, who did you want to invite?\" \n\n\"Astrid. I think I've mentioned her to you, she's in my history class. She's from Sweden and I think she's feeling a little homesick and alone.\" \n\n\"Yeah, fine. Tell her to dress casually and find out if she has any food restrictions.\" \n\n\"Actually,\" Jane continued, \"I was thinking of asking her to stay for the weekend just so she could get out of the dorms for a while. We do have a guest bedroom which has never seen a guest. What do you think?\" \n\nI thought for a moment then chuckled to myself, \"I think it would be nice to have a house guest, however, you know how horny we get when we haven't had much sex in a while! Do you think you can keep your libido in check and your volume down so we don't scare the poor girl away?\" \n\nJane laughed and said, \"It will be tough but it may be good practice for our road trip! Since we will be in public places like campgrounds and stuff, we will have to learn to turn down the volume!\" \n\n\"You will have to learn to turn down the volume! Remember our Hawaii video?\" \n\nJane blushed and replied, \"Yeah, I remember. You just need to learn to be not so good in the sack!\" \n\n\"Right! It's all my fault!\" I laughed and then grabbed her and pulled her into me. We hugged and kissed and began getting a little frisky. \n\n\"Wait!\" Jane cried out, \"We can't do this right now. I need to call Astrid to see if she wants to spend the weekend and then, if she does, we will need to get groceries for the weekend.\" \n\nI let Jane go so she could make her call and I went into the kitchen to make an inventory of things we could use from the store. A few minutes later Jane came bouncing into the kitchen to let me know that Astrid had accepted our invitation. We sat down and made a list of groceries for various meals and then headed to the grocery store. Jane had invited Astrid to stay from Friday after classes until Sunday evening so we bought enough to tide us over. \n\nWhen Friday afternoon arrived and my classes were done I headed home to get a start on preparing our dinner while Jane stayed behind to escort Astrid to our house. It was a pretty warm day so I changed into some shorts and a t-shirt and began making dinner. Around 5pm Jane and Astrid walked in and Jane yelled out that they were home. Jane took her to the guest room and then showed her around the house before coming into the kitchen. \n\n\"Astrid, this is Tony, the love of my life! Tony, this is Astrid, my new friend.\" \n\nI walked up to Astrid and shook her hand. I noticed, right away, that Astrid was beautiful! She had dark hair (not all Swedes are blonde!) with deep blue eyes. Her body was the polar opposite of Jane's...where Jane is curvy, lush and round, Astrid was thin and hard bodied. \n\nAs we shook hands Astrid said, \"Thank you so much for inviting me for the weekend. I'm very tired of dorm life and it will be a nice experience to spend time in a normal American household.\" \n\nI laughed and said, \"I'm not too sure how 'normal' our household is but you are most welcome. I lived in the dorms for one term and I understand how you feel.\" \n\nJane and Astrid sat in the kitchen and talked with me as I finished preparing our dinner. When it was ready they helped me haul it out to the dining room and then we ate. Astrid had a lot of question about life in the US and we had lots of questions about life in Sweden. When we finished dinner, I told the two girls to go sit in the living room while I tidied up the kitchen. When I, finally, made my way to the living room I could see them sitting next to each other holding hands and laughing together. I took a seat in a chair across from the two of them. \n\n\"Astrid was telling me how different dating is between here and Sweden. The poor thing has had some awful experiences here on dates.\" \n\nAstrid chimed in, \"Yeah! Apparently, the stereotype of Swedish women in America is that all we want to do is have sex. Five minutes into a date and it's all hands on deck for groping and pawing! I just gave up and quit dating!\" \n\n\"In behalf of all decent men in America I offer my heartfelt apology for the Neanderthals you've had dates with! I can only hope that you have better luck in the future!\" \n\nAstrid laughed, \"Apology accepted! I'm sure there are a few decent men out there. It seems that Jane has found one!\" \n\n\"Indeed I have!\" Jane said, \"Not to say that he isn't great at groping and pawing when the situation calls for it!\" \n\nI managed to blush and Jane and Astrid had good laugh. I asked Astrid about her perfect English and how she learned it. \"We are taught English in school at an early age and the bulk of our television shows come from America and a few from England. You would be hard pressed to find anyone in Sweden who doesn't speak English.\" \n\n\"Perhaps the US should import Swedish teachers to teach English over here because your grammar is far superior to the vast majority of this countries residents!\" I said. \n\nAstrid laughed and shrugged her shoulders. We all talked until about 10pm when we all decided it was bed time. We told Astrid to treat our house as if it was her own and to help herself to anything that she needed. Jane and I left her at her room and then made our way to ours. When we made it to our room Jane asked me what I thought of Astrid. \n\n\"Well, I really like her, she's very bright and very easy to talk to.\" I replied. \n\n\"Don't you think she's gorgeous?\" Jane continued. \n\n\"Well, yeah. She's very lovely. Too bad she's had such bad dating experiences.\" \n\n\"Would you like to fuck her?\" Jane asked \n\nI was a little taken aback by this question and I'm sure the startled look on my face gave it away. I hadn't even considered the possibility. \"Why would I want to have sex with her when I have you? I can barely satisfy your needs!\" \n\nJane laughed, \"I meant if we weren't together, would you fancy her?\" \n\nI thought for a moment then said, \"I suppose I would, once I got to know her. Why do you ask?\" \n\n\"I just wondered. You are a closed book when it comes to what you think about other people. I just get curious about what you think about things. I need to go to the bathroom; I'll be out in a moment.\" \n\nA moment stretched to 15 minutes until the bathroom door opened and Jane poked her head around it asking, \"Do you want to take a shower with me?\" She had a sly grin on her face as she asked it. \n\nKnowing what was coming I nodded and began peeling off my clothes before heading into the bathroom. When I came through the door I could see that Jane was naked, her enema kit was hanging behind the bidet and that the shower was running hot and steamy with her under the spray. I walked into the shower and took Jane into my arms to hug and kiss her as my erection became rock hard. We kiss and fondled each other for several minutes, enjoying the feeling of each other's nakedness. After a while, Jane grabbed my erection and pulled me towards the bathroom vanity between the two sinks and bent over resting her arms on the vanity. \n\n\"You know what I want! Fuck my ass, Tony! Fuck it hard!\" \n\nI knelt down behind her and began kissing the globes of her lovely derriere. As I kissed her goosebumps appeared on her ass flesh. As she got impatient, Jane reached around and pulled her ass apart for me as she rested her cheeks on a folded towel. \"Lick me!\" \n\nI gladly complied and licked her from her clitoris to her tailbone. I then reversed direction and headed back to her bald pussy. I decided to tease her a bit for her taunting of me in the bedroom so I focused on Jane's dripping vagina. She was very wet due to our lack of sex over the past week and her knowledge of what was coming! She was moaning and groaning as I worked her pussy over from her vaginal opening to her clitoris. I could tell she was on the verge of cumming several times and each time I changed course leaving her quite frustrated. \n\nI decided I had teased her enough and moved my tongue up to her needy anus. When I probed her butthole with my tongue Jane let out a very satisfied moan as she pushed back against my face. I licked and probed Jane's anus for quite a while before she begged me to put two fingers in her. I pumped a couple of fingers into Jane's dripping honeypot and then replaced my tongue with my pussy soaked digits. I sank them in slowly but steadily while Jane let out a primal groan of pleasure. Once my fingers were in as far as they could go I began pumping them in and out of her ass, fucking her with my hand. \n\nI had only been finger fucking Jane's as for a couple of minutes when she yelled out, \"OH FUCK, TONY! FUCK MY ASS NOW!!\" I pulled my fingers, and pushed my aching cock into Jane's dripping vagina to lube it up. Jane's vagina felt heavenly but her needs lay elsewhere so after three or four strokes, I pulled out of her pussy, placed the head at Jane's slightly gaped rectum and then slowly pushed into her ass. As always, I about melted as I felt the sensations of sinking into Jane's welcoming ass. She was hot and tight as I slowly plunged into her depths. As soon as I was all of the way in I pulled back out most of the way. \n\nJane released her ass cheeks and rested her chin on her arms so she could watch my face as I began fucking her ass. She had her usual beatific smile on her face as she enjoyed the sensations as my cock slowly sawed in and out of her bowel. I began picking up the pace as the five-day hiatus in our sex lives made me hornier than normal. \"OH YES, TONY! FUCK ME FASTER AND HARDER! MAKE ME CUM HARD, I NEED IT SO BADLY!\" Jane spurred me on with her words as I began pounding into her stretched out anus. \n\nI could feel my orgasm begin to rise in my loins and I cried out, \"I'M CUMMING JANE! I'M CUMMING!\" Jane cried out that she was too as I continued to pound into her. I thought I caught some movement in my peripheral vision near the door in the reflection of the mirror but disregarded it. \n\n\"CUM ON FACE, TONY!\" Jane cried out! I pulled myself from Jane's ass and she turned around and knelt before me. I gave myself a couple of stokes before my sperm shot like a cannon from the end of my dick. Great wads of jism hit Jane on her face as she smiled. As the power of my ejaculation ebbed, several shots hit Jane's chest coating her ample tits. Jane stood to admire her new look in the mirror. \"I would have made one hell of a porn queen!\" Jane then began scraping my ejaculate into her mouth while smiling at me and then pulled me into a powerful hug while murmuring, \"Thanks, I really needed that!\" \n\nI laughed and then pulled her back into the shower so we could rinse off our evenings endeavor. We scrubbed and shampooed each other, dried off and then climbed into bed. Jane cuddled up to me and said, \"Tony, I love you so much! I will love you until the day I die!\" \n\nI smiled and pulled Jane into me as I said that I loved her too. We cuddled and kissed for a while until Jane let go a huge yawn. \"I guess it's bedtime! Sweet dreams my love!\" I said. \n\n\"Sweet dreams!\" Jane replied. \n\nI awoke the next morning with a smile on my face as I remembered the great sex we had the previous night. I put on some boxers and a t-shirt and wandered downstairs to make coffee after relieving myself. As I was getting the coffee ready I was startled by Astrid's voice wishing me a good morning. \"Oh dear!\" I exclaimed. \"I'm sorry but I forgot that we had a house guest. I'll run upstairs and throw on some sweatpants!\" \n\nAstrid laughed and said, \"Oh, Tony, don't bother. I grew up with three older brothers and they ran around naked most of the time when we grew up. Your boxers are fine.\" \n\nJust then Jane walked into the kitchen in her favorite t-shirt without anything else on saying good morning as she yawned. \"Oops! I'm sorry, I forgot we had a guest!\" Astrid laughed again and said that in her household everyone ran around with next to nothing on. Jane shrugged and said, \"Well, if you don't mind, I'll just stay like this then. Feel free to take your clothes off then Astrid!\" and then she laughed. \n\n\"I might just take you up on that!\" Astrid replied. \n\nWe all laughed heartily and then I asked, \"So, now that we have our morning attire settled, what would you ladies like for breakfast? We thought that you'd like a treat Astrid so we got some pickled herring from an international grocery shop. The jar says they're from Sweden.\" \n\nI handed the jar to Astrid and she squealed with delight. \"This is so kind of you! I haven't had herring since I came over here and this is one of the better brands.\" She closed in on me and gave me a peck on the cheek and then did the same to Jane. \"Thank you! I'll have whatever you two are having with some of the herring.\" \n\nI figured pickled fish and French toast wouldn't go together so I made scrambled eggs, bacon and toast. As we ate Astrid shared her herring with us so we both gave them a try. We looked at each other with dubious looks which caused Astrid to breakout into fits of laughter. \"The looks on your faces are great! I wish I had a camera!\" \n\n\"I imagine they are an acquired taste.\" I said. \"Probably not so bad if you grew up with it.\" \n\nStill chuckling Astrid said, \"I guess so. I had grits here once when I was in the south and found them to be disgusting!\" \n\n\"It's all a matter of what you grow up with.\" Jane added, \"I find grits to be rather awful myself!\" \n\nAfter we finished breakfast the two girls went into the living room and I cleaned up our breakfast things. I started the dishwasher and fiddled around in the kitchen so I could let the two friends talk together without having me to deal with. I read some news on my IPad for a while and then wandered out into the living room. When I got there, they were both facing each other on the sofa and I noticed that Astrid had changed her clothes. \n\nJane looked up as I entered the room, smiled and said, \"I talked Astrid into changing her clothes to be more comfortable. I loaned her one of your t-shirts. It's one you never wear because it's a bit small, I hope you don't mind. It looks very nice on her! Stand up and show him Astrid.\" \n\nAstrid's back was to me and she was looking over her shoulder at me as Jane was talking. As she stood up I could see that she had nothing on other than the t-shirt just like Jane. I could see the lower part of her ass as she stood. As she turned to face me I saw that her nipples were very hard and straining the material of the t-shirt. She smiled and asked, \"So, what do you think? Do I do your shirt justice?\" \n\nI could feel my face turn red as I stuttered, \"Well y-yes, th-th-the s-s-shirt l-l-looks, uh, quite, uh lovely on y-y-you.\" All of a sudden I felt my penis begin tingling as if it wanted to rise to the occasion. \n\nThen Jane stood next to Astrid and said, \"She does look nice doesn't she. I bet she looks even nicer with nothing on!\" And with that Jane pulls the shirt up an off of Astrid! \"Yep, she looks much better naked. Don't you think so Tony? In fact, I think I would like to be naked too!\" Astrid turned towards Jane and pulled her shirt up and off too. \n\nSo, there I am with two absolutely stunning naked women standing in our living room looking at me as I stared at them. I had lost all control and had an erection for the ages. If these two were going to walk around naked all weekend I was going to be in trouble. As the girls saw my swollen penis sneak out of the hole in the front of my boxers they both giggled and then Astrid said, \"I think he likes how we look without our shirts. I kind of think I might like how he looks without his shirt and boxers on too!\" \n\nJane laughed, \"Well of course you do, you told me you did!\" \n\nI did a double take and asked, \"How would she know she likes what I look like naked?\" \n\nJane replied, \"Because she saw you last night as you fucked me in the bathroom, silly! I'm sorry my love, I kind of set you up. Astrid and I have been planning this weekend for several weeks. She's extremely horny and I offered your services. You shouldn't go through life having had sex with just one person, my love. I know you will love me forever and I have no fear of you leaving me. I'm willing to share you with Astrid.\" As she spoke they both walked up to me holding hands. Jane let go of Astrid's hand and let her stand in front of me as she continued on behind me. Jane put her hands on my shoulders and leaned into me, pressing her swollen nipples into my back and then whispered into my ear. \"Please Tony, do this for me and for Astrid.\" \n\nI stood there in a state of semi-shock. What red-blooded boy would refuse to have two such beautiful women but I could only think of repercussions. \"Jane, I don't think I could share you with another man if you would want to even things out in the future. I don't think I could take that.\" \n\nJane whispered back to me, \"I would never ask you to share me with another man. You are the only man I want for the rest of my life! Why don't you kiss her?\" \n\nI looked into Astrid's eyes and saw her desire in them. I held out my hands to her and pulled her to me as she took them. We kissed each other with little pecks for a couple of moments until Astrid threw her arms around me and kissed me passionately. I could feel her very hard and long nipples press into my chest as my raging hard-on pressed into her stomach. Her kissing was nice though different from kissing Jane. When she broke the kiss she stepped away from me and smiled. \"That was nice, thank you!\" \n\nJane stepped around in front of me and then kissed me quickly and then asked, \"Did you like kissing Astrid? I thought it was hot! It made me all wet!\" Jane then grabbed my hand and put it to her pussy. She was soaking wet. \"I'll bet Astrid is wet too. Shall we find out?\" She took her hand and rubbed Astrid's vulva. Astrid gave a little shiver as Jane rubbed her hand in her slit. She then turned to me and said, \"Yep, Astrid is wet too! Look what you do to us! Would you like to see me kiss Astrid?\" I nodded and with that Jane took Astrid into her arms and kissed her very passionately. If anything, my cock was harder than it has ever been. \n\nJane then said, \"Astrid and I have been friends for several months and over time we talked about a lot of things. She confessed to me that she was really horny but wasn't happy with American men. I told her about how great you were because you had never really been the sort of guy she was running into because of your upbringing. After a while we both confessed that we are both curious about having sex with another woman. I don't want you to think that it's because of any inadequacy I find with you, it's just the opposite you bring out the sexiness in me. Since we've been together we've done things I couldn't have imagined doing a year ago. You make me so excited I just want to try anything that I can share with you. Do you understand?\" \n\nI thought about what Jane was saying for a couple of moments before I responded. \"I think I understand. You are much more daring than I am and you have shown me so many things I hadn't a clue about. I love having sex with you because it's always exciting and erotic. I'm just an ordinary guy so I, of course, find Astrid desirable, what guy wouldn't. She's beautiful, sexy and really kisses nicely! I just don't want to lose you by having sex with her.\" ",
        "\"You won't lose me because I want to have sex with her also while we all have sex together! I think it sounds like a lot of fun. Are you willing to try?\" Jane asked. \n\n\"If this is what you want to do, then it's what I want to do too! Astrid, is this what you want to do?\" I asked. \n\n\"My god yes! I'm standing here drooling looking at your cock and at Jane's luscious body!\" \n\nJane laughed and said, \"Well, okay then! Let's go up to our room and have lots of sex!\" Jane grabbed Astrid's hand and pulled her upstairs with me trailing behind. I couldn't help but compare both of their asses. During the past few months Jane had turned me into an ass man and I couldn't help but wonder if Astrid liked anal sex or not...I hoped so! \n\nWhen we got to our room I asked, \"So, how are we going to do this?\" \n\nJane said, \"Well, let's take care of Astrid's needs first. The poor thing hasn't had sex since she arrived in the US! What would you like to do Astrid?\" \n\nAstrid smiled and said, \"I would love to have Tony's cock in my mouth and then I want him to fuck my pussy until I'm begging for mercy!\" \n\nJane laughed and said, \"Tony's your boy! Tony, why don't you get up on the bed and lean against the headboard while Astrid sucks you off!\" and then she winked at me. I dropped my shorts, took my shirt off, put a pillow behind my back and leaned against the headboard. Astrid crawled up between my legs and, while on her knees, bent down and took my erection into her mouth. Jane stood to the side for a few minutes and watched while Astrid sucked my cock. Astrid was a fantastic cocksucker on a par with Jane. She did some things that Jane had never done that felt really good. I noticed Jane move around to the end of the bed behind Astrid and then she too got on the bed. \n\nAs Jane knelt behind Astrid she smiled at me, mouthed 'I love you' and then bent down. Astrid gave out a great moan (which reverberated on my swollen cock) and I assumed by that that Jane was pleasuring Astrid's pussy and anus with her mouth. Astrid began taking me all of the way into her mouth and throat, swirling her tongue up and down and all around my penis. I wasn't sure how long I could last. I told Astrid I was going to cum any minute if she didn't stop. With my cock in her mouth she looked up at me, smiled and redoubled her effort. I shouted, \"OH FUCK. I'M CUMMING!\" as I erupted into Astrid's mouth. Astrid kept sucking as I shot my ejaculate into her mouth and she swallowed every last drop. \n\nWhen I had finished, Astrid propped herself up on her arms so she was on all fours and said, \"GOD, I MISSED SUCKING COCK!\" I decided to help Jane out with Astrid so I slid down the bed so that I could kiss Astrid and play with her beautiful tits. I was really anxious to suck on her long hard nipples. As I began kissing her I could taste myself on her tongue, something that I wasn't unfamiliar with, and I reached under Astrid and began pinching and pulling on her nipples. \"OH MY GOD! THAT FEELS SO GOOD! PUT ANOTHER FINGER IN MY PUSSY AND ANOTHER IN MY ASS! PINCH MY TITS HARDER!!\" Jane and I were working Astrid over pretty well and before long Astrid screamed out that she was cumming. \n\nAstrid, like Jane, turned out to be a squirter and shot her juice onto Jane's unsuspecting face. She also shivered and shook like she was having a seizure as she collapsed into my lap and onto the bed. Astrid laid there panting while Jane and I looked at each other. I was amused by how wet Jane's face and breasts were from Astrid's ejaculation. Jane leaned over and kissed me deeply and I could taste Astrid in her mouth. It was different from Jane but still nice. After a few minutes Astrid began recovering and rolled off my lap. Jane and I laid down on either side of Astrid and took stock of what we had just gone through. \n\n\"I haven't climaxed like that in years! Thank you both, it was awesome! I have never had anything in my ass before but I really liked what you were doing to me back there!\" \n\nJane laughed and said, \"If you liked that, just wait until Tony plows into you with that cock of his! It's totally awesome! \n\nWe laid on the bed talking and laughing for quite a while. Astrid reached over and began playing with my dick and Jane and I played with Astrid's nipples. I started getting hard again with Astrid's attention and I could hear that Astrid was wetting up again because Jane was playing with Astrid's pussy. \"Tony, will you fuck me now?\" \n\nI would love to! How should we do this?\" \n\nJane asked, \"Astrid, would you like to eat my pussy while Tony fucks you?\" \n\nAstrid smiled and said, \"I would love to!\" \n\nJane smiled and said that she would now lean against the headboard and Astrid could resume her position between her legs and I could take Astrid from behind. We all shifted on the bed and when Astrid was in position I sidled up behind her and then worked my now completely erect cock into Astrid's waiting pussy. As with Jane, the feeling of Astrid's vagina engulfing my hardness felt wonderful. I slowly sawed in and out of her glorious pussy savoring every centimeter of her hole. I heard Jane moan so I opened my eyes to see her with her head thrown back in ecstasy as Astrid ate her out. Astrid moaned also as I fucked her long and slow. It felt as though she got wetter as I continued pumping into her. \n\nAs we continued I looked down and saw Astrid's anus wink at me. I leaned over and spit onto her rosebud, sucked on my thumb for a few seconds to get it god and wet and then began pressing it into her tight ass. Astrid lifted her head from Jane's crotch and cried out, \"THAT'S FUCKING WONDERFUL! FUCK MY ASS WITH YOUR FINGER AND FUCK MY PUSSY HARDER!\" I began pounding into Astrid now forcing her face into Jane's pussy while I pushed and pulled my thumb in and out of Astrid asshole. Both women were now moaning and groaning in pleasure while I grunted with the effort needed to pound into Astrid's pussy. \n\nJane was the first to cry out that she was cumming and she blasted Astrid's face with her liquid delight! Astrid was next and I felt her squirt on my balls and down my leg. She began shivering and shaking again and began dropping down onto the bed. I wasn't close yet but was getting there and didn't want to stop, so I pulled my thumb from Astrid's ass, grabbed both hips and held her up while continued to pound into her well used vagina! Astrid groaned and then I felt her second orgasm as her pussy soaked my balls and leg again. This happened two more times until I finally shot my wad deep into Astrid's womb with a yell! \n\nI collapsed onto my left side carrying Astrid with me. We both laid there panting and gasping for breath. Jane was breathing hard too as she leaned back against the headboard with her legs spread wide open lewdly...she looked beautiful! After a while Jane moved down the bed and laid down with her back to Astrid. We all spooned together making an Astrid sandwich! \n\nI think I fell asleep fairly quickly and when I awoke I noticed the sun had shifted and both girls were no longer in bed. I got up, relieved myself and headed downstairs still naked. I knew Jane and I knew that clothing would be optional for the remainder of the weekend. I found the two girls in the kitchen making lunch. \n\nAstrid saw me first and said' \"Hey there sleepy head! Did we wear you out? Did you have a good nap?\" \n\nI smiled and replied, \"I had a great nap and I think I will be able to muster the energy to satisfy your needs!\" \n\nJane laughed and said, \"Brave words for a man who has an admitted ass-slut nympho for a girlfriend and a horny Swedish girl staying in the house.\" \n\nI retorted, \"I have nothing to fear but fear itself!\" \n\nAstrid laughed and said, \"Really! Is that a fact!\" She then reached over and pulled Jane into her and gave her the most sensuous kiss I had ever seen. She then pushed Jane over the edge of the table, got down on her knees and began licking Jane's pussy and asshole. My cock began to rear its horny head up as I watched Astrid quickly bring my girlfriend to a loud and wet orgasm. \"I think Jane needs your cock!\" \n\nI laughed and said, \"Can we eat lunch first, at least! A boy needs his energy with you two!\" \n\nBoth girls laughed and said that we would eat lunch and then I should be prepared for 'fuckageddon'! Both girls scarfed down their lunch while I at mine slowly in an effort to tease them for as long as possible. They got tired of waiting for me, so they told me I would find them upstairs in the bedroom. When I got up there I found them in a 69 with Astrid on top of Jane! They were both moaning and groaning in pleasure with their legs spread wide. Shortly after I arrived they both climaxed and then rolled off each other, sated for the moment. \n\nJane saw me first and called for me to come over to the bed. \"Lie down on your back! I need your cock in me! Astrid why don't you straddle his face while he fucks me?\" \n\nI laid down as instructed with a pillow under my head. Jane straddled my cock and let it sink slowly into her hot, wet pussy. I felt like I was back home as I let the feeling of Jane's vagina wash over me. Jane set a nice slow tempo so we could savor how wonderful it felt. After a couple of minutes Astrid sat on my face and lowered her equally wet pussy over my mouth. Astrid tasted a little different than Jane but she was still pleasing to the palate! I heard Jane call to Astrid to kiss her and then felt each of them leaning forward. I got the impression that both of them were enjoying their kiss because they were both grinding down on me. \n\nAfter a while I felt them both lean back up more upright as Jane increased her pace on my penis. A couple of seconds later Astrid lifted herself off my mouth, grabbed and pulled her ass cheeks apart and said, \"Tony, lick my anus for me please.\" How could I refuse when she was so polite! She lowered her ass onto my face and I began rimming and licking Astrid's rosebud with fervor! She pulled a hand away in order to rub her clit so I reached up and spread her cheeks for her. Both women were gasping for air and moaning loudly as they neared their climaxes. Astrid came first soaking my chin with her juices followed a few minutes later by Jane. \n\nI was still hard and not really close since I had orgasmed twice already that day. Jane, ever the opportunist, lifted her pussy off my cock, turned around to face my feet and then lowered her ass on my still erect member! As she slowly sank down Astrid muttered, \"Oh my god, that is so fucking hot!\" She crawled off of my face and lowered her head down towards the action to get a close view. I then felt it as Astrid licked my cock as it appeared back out of Jane's anus. She then got up, walked over to the end of the bed, kneeled in front of Jane and began kissing her and fondling Jane's breasts. \n\nI could feel my climax rising in my balls and called out that I was about to cum! Jane, energized by my announcement, increased the pace in which she was fucking me with her ass as she, too, approached another orgasm. I let out a mighty groan, arched my back and shoved my cock as deep into Janes rectum as I could and let my cock explode sending my sperm deep into Jane's bowel! Jane, stroked her clit as fast as she could and came as she felt my climax. She laid back on top of me with my cock still buried in her ass. \n\nAstrid looked at both of us wide eyed, \"I have to try that! That looks so hot!\" \n\nJane rolled off me and began to crawl up to kiss me when Astrid crawled up behind Jane. \"Holy shit! Astrid is sucking your cum out of my ass!\" I leaned over to see, sure enough, Astrid had her face glued to Jane's anus as she sucked and licked my sperm from Jane's bowel. \"I have to try that! You are getting your ass reamed tonight girl whether you want it or not!\" \n\nWe laid together for a couple of hours talking, laughing and reliving what we had been doing all day. At some time, the girls began kissing and fingering each other trying to see who could make the other cum first. Finally, I couldn't take the show anymore and began to get hard again. Jane, seeing my erection smiled and said to Astrid, \"It's time to prepare you for your anal deflowering! Come with me!\" Jane grabbed Astrid by the hand and pulled her into the bathroom. She left the door open so I could hear everything that was going on. \n\n\"First,\" Jane said, \"We need to get you clean inside. You will get a series of enemas until the discharge is clear. Then we will shower and clean up your body and then you will have the main event! Personally, I give myself an enema every time after I poop because I never know when I'll want to have Tony ass fuck me. If you decide you like it, you may want to consider doing the same thing as it makes having anal more spontaneous!\" I heard the water running into the sink and then the bottle filling up. Jane was giving Astrid constant encouragement and instructions. Finally, after twenty minutes, I heard the shower turn on and then Jane called for me to join them. \n\nThey were both in the shower already as I climbed in and stepped into the spray. The warm water felt good as did the hands that began rubbing all over my body. Our shower had more than enough room for the three of us as we lathered and shampooed each other. When the last of the soap was rinsed off Astrid asked, \"Can we do it like you did last night, bent over the vanity?\" \n\nJane laughed and said, \"Of course. We will do whatever you want to do because this is for you! This happens to be my favorite because I can watch Tony's face in the mirror as he pounds my backdoor!\" Jane then pulled Astrid out of the shower, grabbed a towel and folded it nicely before laying it on the vanity and then told Astrid where to bend over. \"Tony, do you mind if I get Astrid ready?\" \n\n\"No, go ahead. Just let me know when she is ready to go\" I replied. I reached into one of the drawers and handed a tube of lube over to Jane. \"We really should have bought stock in this company!\" Both girls giggled at that and I retired over to the toilet to sit down and admire Jane's handiwork. \n\nJane began as I would have by licking both Astrid's pussy and ass. After a while Jane inserted a couple of fingers into Astrid's pussy and then moved them to her anus. As Jane proceeded Astrid became more and more worked up and moved a hand to her clitoris and before long she had an orgasm. After Astrid orgasm Jane asked, \"Are you ready, Astrid, for Tony's cock?\" \n\nAstrid moaned and rasped out, \"Oh god yes! Fuck my ass Tony like you fucked Jane's ass last night!\" \n\nI stood up from the toilet and walked over to the two girls following my rock-hard penis. Watching Jane get Astrid ready was very erotic and I was more than ready to fuck. Jane grabbed me and took me into her mouth to get me wet and then she slathered lube all up and down my length. When she deemed I was ready she positioned me at Astrid's anal opening and then I pushed forward slowly. Astrid was very tight and took some effort to get inside of her and once I popped in she gave off a little squeal. \n\n\"Are you okay? Do you want me to stop?\" I asked \n\n\"Nooo, it hurt just a little but feels better now. You can push in a little more, just do it slowly.\" \n\nI backed out a little and then pushed back in a little deeper and held still for a couple of moments before going again. After several minutes, I managed to get all of me into Astrid's ass. Jane cried out, \"It's all of the way in Astrid, how does it feel?\" \n\nAstrid took a deep breath and looking into my eyes smiled and said, \"It feels really good, how does it look Jane?\" \n\nJane replied, \"You look so fucking hot with Tony buried in your butt! Are you ready for him to fuck you now?\" \n\n\"Oh yes! Fuck my ass Tony!\" \n\nTaking my cue, I began to slowly pull back savoring the feel of Astrid's tight rectum. When I was \u00be of the way out I pushed back in again until I was completely buried. Astrid was moaning as I fucked her slowly. Jane reached down and began pinching one of her nipples and pulling it hard. \n\n\"OH FUCK, PINCH AND PULL MY NIPPLES HARD! THAT FEELS SO GOOD!\" I continued my slow pace as I fucked Astrid's ass. I wasn't going to cum for a while since I had twice already earlier. The sensations I was experiencing were fabulous. Jane asked Astrid how she was doing and she replied that she was loving it! \"YOU CAN FUCK ME HARDER TONY! HARDER AND FASTER!\" Again, being the compliant guy I am, I picked up the pace and began thrusting into her harder. \n\nI kept looking at Astrid's reflection in the mirror as I always do with Jane and saw the face of someone in lust! Her mouth was open in an \"O\" shape as she continually uttered 'ahhhh'. She never took her eyes off mine. I began to feel my loins tingle and began to pound into Astrid's ass now as hard as I could. I had grabbed her hips and was using them to pull her into me as I thrust into her. All of a sudden Astrid cried out, \"I'M CUMMING! I'M CUMMING!\" and something else that I imagined was Swedish. I felt Astrid squirt on my balls and down my leg and felt her shiver and shake. I was too far gone to stop so I kept plowing into her with everything I had looking for my own release. It was then that I noticed that Jane was rubbing Astrid's clit. Astrid screamed again and I felt the telltale squirt of Astrid's orgasm. \n\nMy own orgasm was now overwhelming me and with a great grunt I shoved my cock as deep into Astrid as I could and blew my load into her ass. I felt my cock shoot load after load into Astrid. It felt like it went on for five minutes. When my spasms stopped, I pulled out from Astrid's ass and sat back onto the bathroom floor. As soon as I sat I was replaced by Jane who buried her face between Astrid's ass cheeks to suck my come out of her friend. \n\nI was exhausted but stood back up, went to the shower and turned it on and then walked over to Astrid and pulled her into a hug and kissed her. She hugged me tight and kissed me with a lot of passion. When we broke the kiss, she looked into my eyes, smiled and said, \"Thank you for everything. For fulfilling my fantasies, for making love to me and for sharing Jane with you. I know it wasn't easy for you in the beginning. I now know why Jane loves you so much. I love you too!\" \n\nI blushed and said, \"I love you also! Let's shower, eat some dinner and go to bed! I'm exhausted!\" We all climbed in the shower and cleansed our last sex session from our bodies, dried ourselves off and headed downstairs for some sustenance. Jane was feeling pretty chipper so she took charge of making dinner. We all wanted something light so Jane threw together 3 large salads. After eating and cleaning up we all headed upstairs for bed. As Astrid turned for the guest room Jane grabbed her arm and drug her with us to our room. \"You aren't going to sleep alone tonight!\" All three of us climbed onto our giant bed and with Astrid in the middle we all fell asleep. \n\nI awoke around 10am on Sunday to an empty bed. I figured the girls were downstairs in the kitchen so I wandered down there naked, expecting they would be naked too. When I arrived in the kitchen I found that I had guessed correctly. Both looked at me as I stumbled in and both of them smiled at me. \"We must have worn you out last night! You slept for over 10 hours!\" Jane said. \"Did you have sweet dreams?\" \n\n\"I don't remember dreaming at all. I slept like a rock. Is there any coffee left?\" I asked \n\n\"Astrid made a new pot when she heard you were up! Are you hungry? We ate already since we've been up for two hours already!\" \n\n\"Yeah, I'm famished!\" I poured myself a cup of coffee and went to fix myself some breakfast but Astrid told me to sit and enjoy my coffee and that she would make me something to eat. \"Uh, if you don't mind I will pass on the pickled herring!\" \n\nAstrid laughed and said, \"Sorry, too late for the herring I killed the jar earlier! I'll make you Swedish pancakes\" ",
        "Astrid set herself to work and before long had made a stack of pancakes. The only difference from normal pancakes that I could tell was that she added melted butter to the batter. She put several on a plate for me and then topped them with some strawberry jam that was in the fridge. They were wonderful and I wolfed down two plates full. Astrid said they are better with lingonberry jam but since we didn't have any strawberry was a good substitute. I poured myself another cup of coffee when my cell phone rang. It was Pearl, our neighbor lady asking if I could, possibly, mow her lawn for her. I told her I could and broke the news to Jane. \n\n\"That's okay Tony, Pearl is such a sweet lady. Astrid and I will keep each other occupied.\" Jane replied. \n\nI went upstairs to put on some shorts, a t-shirt and my sneakers and headed to the garage to fetch my mower. Luckily, Pearl's lawn wasn't all that big so after mowing, edging and trimming I was done in a couple of hours. By the time I was done though I was a sweaty mess so headed upstairs to shower. As I neared the bedroom I heard a lot of tittering. I half expected my two horny girls to be up to something sexual and I wasn't disappointed. They were both on the bed on their hands and knees with their butts facing each other and a long purple silicon dildo inserted in each of their vaginas. They were sawing the thing back and forth between them. Jane was explaining how she usually stuck one end in her pussy while the other went up her ass while I was studying. \n\nI stood in the doorway admiring the view when Jane noticed me. \"I told you we would keep busy! How is Pearl? Is she over her cold?\" \n\nI laughed and said Pearl was fine and that she was baking some banana bread to bring over later for us. We'll probably need to dress for the occasion! \"I really need to take a shower...I can't stand the smell of myself!\" I ducked into the bathroom, threw my clothes off and jumped into the shower. I didn't shower alone very often and it always felt strange when I did. After my shower, I dried off and then headed back to the bedroom. \n\nWhat greeted my eyes were two perfect asses staring at me from the edge of the bed. Both girls looked over their shoulders at me while smiling evil smiles. Jane then said, \"Silicon just isn't cutting it today. We both need some flesh to satisfy us!\" I walked over and kissed them both on each cheek. When I straightened up Jane said, \"Here, you'll need this!\" She handed me the tube of lube. \n\n\"You both want me to ass fuck you??\" \n\nThey snickered and then Astrid said, \"Yeah, I want more practice and Jane just wants your dick up her ass!\" \n\n\"Yeah, I think you should start with Astrid and then switch every five minutes. We will see who cums first and will continue until you cum, in case you are last. Astrid and I will keep tabs on the time. You don't need to prepare us as we are both quite ready. So, slather some lube on your lovely cock and get to work!\" Jane stated. \n\nI stood there holding the tube and shaking my head. I was either the luckiest man in the world or had the most insane girlfriend ever. I squeezed out some of the lube and spread it on my cock and spread some on Astrid's anus then positioned myself behind her and pushed forward. We both groaned as I slowly sank into Astrid. She turned her head and said, \"You don't have to be so gentle this time. I kind of like the pain.\" With that I quickly sank myself into the depths of Astrid's ass as she cried out \"yes!\" I slowly pulled back and then thrust back into her as hard as I could. Astrid let out a grunt and then another \"Yes!\" We kept this up until Jane called out \"time\". \n\nI grabbed the tube of lube and slathered some more on my cock and noticed that Jane had already prepared herself. I knew what Jane wanted...hard and fast...so I stepped up behind her and just began pounding away. Jane cried out immediately, \"OH FUCK TONY! FUCK MY ASS HARD!\" As I pounded Jane I grabbed her tits and began squeezing them the way she liked. I was really getting into it when Astrid called \"time\". \n\nAstrid ass was still gaping a bit but I still put some more lube on myself and then got behind her. As I was going to push in Astrid said, \"Do it just like you did for Jane! That looked great!\" I positioned myself and just shoved myself into her and pounded away on her ass. I reached around and squeezed Astrid's nipples and pulled them hard as I remembered she said she liked it that way. I was really pounding into her when Jane called out again. \"OH SHIT!\" Astrid cried, \"I WAS GETTING SO CLOSE!\" \n\nI moved back behind Jane and resumed what I had been doing before, plowing into her ass with reckless abandon. After a couple of minutes, she reached down and started working on her clit, the telltale sign that she was getting close. I know she was about to cum but Astrid called \"time' again. \n\nI moved back to Astrid and just started plowing into her again. After a couple of minutes, she cried out that she was cumming but I continued fucking her waiting for Jane to call out. Astrid had soaked my balls once again and was shaking like crazy. Finally, Jane called \"time\" and I moved back behind her and resumed pounding her. \n\nJane was real close to her climax as I fucked her and after a couple of moment she cried out that she was cumming. I still wasn't close and was wondering if I should move back to Astrid or keep pounding Jane. Astrid made the call and was back on her knees. So, I moved back to her and slowly pushed into her. \"NO TONY! KEEP FUCKING ME HARD, I LOVE IT THAT WAY!\" I began pounding into Astrid once again. \n\nI was waiting for Jane to call out but she had stood up next to me and whispered into my ear, \"Come in Astrid's ass. I want to suck your cum out of her again!\" As I fucked Astrid Jane just kept whispering in my ear how sexy it looked while I fucked her friend and how much she loved me. Then she began kissing me while I was thrusting away. I could feel my orgasm boiling up from my balls and before I knew what hit me I began spewing my seed into Astrid's ass. When my climax had ebbed, I pulled out of Astrid only to have Jane take me into her mouth. She licked and sucked on me for a couple of minutes and then turned her attention towards Astrid's asshole. \n\nWhen Jane was satisfied that she had sucked all of my sperm from Astrid's bowel the two of them laid down on the bed followed by me. Astrid and I were catching our breath as we laid there. \"That was really sexy Tony, having you ass fuck Astrid and me at the same time. We will have to do that one again sometime! You know, I was thinking that we should ask Astrid to come on our summer holiday road trip with us! Wouldn't that be fun?\" \n\nI pondered that statement and my eyes crossed as I didn't think I could possibly satisfy two women for several weeks while living in a VW camper van. I was thinking how I could nix that idea without hurting Astrid's feelings when Astrid spoke up.  \n\n\"I would love to but I'm going home to Stockholm as soon as the term is over. I was hoping that the both of you could come and visit me this summer. You'll love Stockholm! What do you think?\" \n\nThis idea appealed to me better than the three of us camping. Jane's eyes lit up too at the suggestion. We had both received passports in February. \"I think that would be great!\" Jane said. \"We will need to coordinate things and ask my parents if we can spend that much money, but I don't think that will be a problem. I've never been to Sweden! It sounds exciting!\" \n\nWe laid on the bed discussing the possibilities this summer for a while until it dawned on Jane that Astrid had to return to her dorm room this evening. \"Tony, we should make a video for Astrid like the one we did in Hawaii!\" \n\n\"You two videoed yourselves having sex?\" Astrid asked. \n\n\"Yeah, do you want to see it?\" Jane replied. \n\n\"Well, sure, I guess.\" \n\n\"Tony, grab your phone and let's go to the TV room!\" Jane said. \n\n\"We should put some clothes on because Pearl will be showing up anytime with banana bread!\" \n\nAs soon as the words were out of my mouth the doorbell rang! I scrambled into some shorts and a t-shirt and ran down stairs. Sure enough, it was Pearl holding a loaf wrapped in towels smiling broadly. \n\n\"As promised, a loaf of banana bread for your trouble.\" \n\n\"Come on in Pearl.\" Just as Pearl came through the door Jane and Astrid walked into the room. \"Pearl, this is Janes friend from school Astrid. She's from Stockholm, Sweden. We invited her over for the weekend to give her a chance to get out of the dorms.\" \n\nAfter the introductions Jane went off to make some tea and to bring a cutting board and butter. I left Astrid with Pearl and went to help Jane. Since there were four of us we thought that it would be easier to have tea in the dining room. We called Pearl and Astrid into the dining room where we enjoyed the bread, tea and good conversation. Pearl was asking about some Swedish writers that she was familiar with (you can take the professor out of the schoolroom but you can't take the schoolroom out of the professor!). After an hour and a half Pearl finally went home. \n\n\"Tony, let's show Astrid the video! And, let's get out of these clothes!\" \n\nI shook my head with a wry smile and went into the entertainment room to get ready to show our video. When Jane and Astrid came bounding into the room they were both naked, once again. \n\n\"Tony! Get naked!\" Jane scolded me while Astrid laughed. \n\nWe all settled onto the couch and Jane explained why we made the video. \"I was complaining that I didn't get to see how hot it looked when Tony ass fucked me. He was always going on and on about how sexy it was so I told him to use his phone and video us. We had experimented with some other stuff earlier in the week that Tony, graciously, decided to include in the video. Go ahead and start it, Tony.\" \n\nI started the video and we all watched as the action unfolded. Both girls were staring at the screen unblinking, not wanting to miss a second. I could see them both rubbing their clits while they watched while my penis jumped to attention. When we got to the fisting part I heard Astrid gasp loudly, I was afraid that that act was a step too far. When it was over Jane asked Astrid what she thought and all Astrid could say was could we watch it again. Jane nodded so I started the video up again. The sounds from the girls rubbing themselves was rather wet sounding as they enjoyed the second go around. \n\nWhen the second showing was done, Astrid smiled and said, \"That was awesome! You actually fisted Jane's ass!\" \n\nJane laughed and said, \"A couple of days earlier I made Tony fist my ass and my pussy at the same time! I have never felt so full! I make him fist me periodically still!\" \n\nAstrid sat with a look of awe on her face. \"I want you to fist me and I want you to video it for me. But first I want a video of Tony ass fucking me!\" \n\nI looked at Jane and said, \"You've created an insatiable monster!\" \n\nJane laughed and said, \"You bear some responsibility too, pal!\" \n\n\"Well, when do you want to make this cinematic masterpiece?\" I asked \n\nAstrid smiled and said, \"Right here and right now! Grab the lube and let's do it!\" \n\nJane laughed and ran upstairs, tits and ass jiggling like crazy, to fetch the lube. I told Astrid to get on her knees on the couch. She gave me a big hug and kissed me deeply. When she broke the kiss, she said, \"I love you and Jane so much! You have opened my eyes to a larger world!\" And then she was kissing me again. When Jane reappeared Astrid broke away from me and gave Jane the same hug and kiss she gave to me and repeated her words of love to Jane. When she was finished, she assumed the position on the couch. \n\nI handed my phone to Jane so she could record this moment for posterity. I kneeled behind Astrid determined to give her the full treatment. I licked and prodded her anus with my tongue, which got loud moans from Astrid and Jane, while I buried a couple of fingers in her pussy. After a while I took those fingers and buried them into Astrid's ass and, finally, I sank my cock into the depths of her rectum. Just as I was about to pick up the pace Jane cried out, \"I have a great idea! Tony, why don't you sit on the couch while Astrid sits her ass on your cock and then I can start fisting her pussy while I film!\" \n\nI stopped fucking Astrid when she said, \"Ooh! That is a good idea!\" I pulled out of Astrid's rear and then she stood up. I sat down in a slump with my ass at the edge of the couch and then Astrid straddled me facing away and sank my meat back into her gaping anus. She then leaned back against my chest. Jane handed me the tube of lube and told me to coat her hand that was free and so I did. All of a sudden I could feel Jane's fingers as she began exploring Astrid's vagina. I could tell when she added more fingers because things got snugger for my cock. I decided to add to Astrid's experience so I grabbed her erect nipples and began pinching and pulling on them very hard. She was groaning loudly with all of the stimulation she was receiving and then let out a scream when I felt Jane's whole hand inside of her. \n\n\"OH FUCK! OH FUCK! FUCK MY ASS AND PUSSY!\" Astrid screamed. I let go of her nipples, put my hands on her ass cheeks so that I could lift her up a bit and then began pumping into Astrid's ass hard! It felt like Jane was jacking me off while I pounded Astrid in the ass. I could feel that I was going to erupt soon so I started pumping into Astrid even harder. A couple of minutes later my climax hit and I shot my load into Astrid's backdoor. A minute later Astrid came too shooting her ejaculate all over Jane's arm. \n\nWhen Astrid's climax waned Jane asked if she wanted to continue and Astrid said that she did. I lifted Astrid off my cock and scooted out from underneath of her and Jane told Astrid to turn around onto her hands and knees again. Astrid managed this with Jane's hand still lodged in her pussy. I took the phone from Jane, set it down, grabbed the lube, covered Jane's other hand and then took up the duties of video operator. I got in close to get the details of Jane sinking her fist into Astrid's well used ass and then moved back while filming Jane pump her hands alternatively into her orifices. Then Jane suggested that I sit on the back of the couch so that Astrid could suck my cock and thereby have all holes filled at once! Astrid thought that was a good idea so I climbed up on the couch and let Astrid suck me! \n\nAll in all, it was pretty erotic watching Astrid getting used this way. She managed to cum a couple of more times but you could see that she was coming to the end of her tether. She let me fall out of her mouth and then asked Jane to stop. When Jane pulled her hands from her Astrid collapsed on the couch in a heap. Jane had a look of concern and kneeled next to Astrid to make sure she was okay. They whispered back and forth for a few seconds and then Jane stood and smiled and said she was fine. We let Astrid lay there for a half an hour and then we suggested taking a nice hot shower. I picked her up in my arms and carried her upstairs and set her down in the bathroom. She hugged me, thanked me then kissed me and said she was fine now. I decided I would let the girls shower first and then I would go when they were done. \n\nAfter we got all cleaned up I went down stairs to make dinner. As we ate Astrid snapped back to her old self and we had our usual meal conversation. After dinner, we played Astrid's video on the TV and her initial reaction was the same as Janes, \"Am I really that loud???\" Jane and I said yes and then we all laughed. We then all got dressed so that we could walk Astrid back to the dorms. We all held hands with Astrid in the middle and headed towards campus. Before we left Astrid, she made us promise that we would come to Stockholm. We said we would and then we all kissed and hugged and said our goodbyes. Jane said she would see her class tomorrow and then we headed home. \n\nAs we walked Jane asked, \"So, how was it having sex with another woman? Could you tell the difference or is one hole like another?\" \n\nI laughed and replied, \"No, one hole is not like another. There are differences, subtle, but different.\" \n\n\"Did you have fun? Would you do it again?\" \n\n\"Actually, it was exhausting, but yes it was fun. What normal male wouldn't want to have continual sex with two women as beautiful as you two? Next time though, maybe a little more girl-girl action where I watch rather than participate! I'm surprised I don't have blisters on my penis! Also, frankly, I'm glad that Astrid can't come on our road trip. That would have been pretty tough to pull off.\" \n\nJane laughed and said, \"Tell me you wouldn't mind watching she and I in the throes of a passionate 69 on the bed while you were driving through Oconomowoc, Wisconsin!!??\" \n\n\"I wouldn't mind the 69 but I would mind being dead because I ran head-on into another car because I was distracted watching you two getting off!\" \n\nJane giggled and said, \"Touch\u00e9! Besides, three of us on that tiny bed would never work! Do you still want to do the road trip?\" \n\n\"Yes I do. It will be nice to be alone with you doing something different. I want to go to Sweden too. I've been dying to go to Europe. I was thinking that maybe we could blow off summer term and take a month or so to explore Europe. Maybe your parents could join us for part of the trip. What do you think of that idea?\" \n\nJane pulled me to her in a bear hug and kissed me deeply. \"I think that is a wonderful idea! I think I would like a long break from school and I think my parents would love to travel with us. I'll call my Mom tomorrow and see what they think. I also think that I will like having you to myself again. I didn't get as much of you as I wanted. I'm not sorry that Astrid was with us because she had fun and I had fun with her. I'm just feeling a little greedy with you...next Saturday I'm going to fuck you until you turn into a jelly!\""
    ],
    "authorname": "Kalavo",
    "tags": [
        "anal",
        "group sex",
        "video making",
        "ff",
        "mf",
        "mff",
        "oral"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-study-break-with-jane-and-tony"
}