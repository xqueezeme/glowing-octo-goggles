{
    "title": "Please Release Me...Let Me Flow",
    "pages": [
        "Do you seek some physical confirmation that your bedroom skills are pushing your lady to the peak of desire? Are you delivering the zenith of BIG 'O's? When the blushed chest and moaning and screaming haven't sufficed as proof, start exercising those arms, clip your nails and get your waders out...things are about to get real messy! \n\nMen take ejaculation for granted. It's like a 'liquid-trophy' of man-hood, and the source of your future legacies and heirs. But cast your mind back to that very first time you managed to squeeze some 'Gentleman's Gel' from the end of your 'young chap', I guarantee you might have been writhing in ecstasy, but you were also confused and maybe even a little ashamed. My boyfriend will admit to believing he'd somehow 'broken it' when he finally popped his cork aged 13yrs. With females the climax has always been much harder to tell. After all, the female orgasm never had such a visible finale, or so you've been led to believe.\n\nA skill possessed by most females but in reality admitted and permitted by few, female ejaculation is one of those few remaining taboos and 'un-tapped' delights of the 21st century. You all know that your girl can\u2019t help but spill the beans on your 'sexploits' to her close circle of friends. She'll be all too eager to divulge your size, expertise and finishing techniques, but never be fooled into thinking she's dishing the dirt on herself. It's strange but there are still some subjects considered too taboo to share over a bottle of wine, and depositing her 'load' seems to be up there with rimming and fisting. In truth you are more likely to hear a guy discuss the pleasures of female ejaculation than you ever would a woman\n\nHistory dating back as far back as the 2nd Century has detailed the ability of females to ejaculate during sex. Yet often when seeking medical counsel from doctors, gynaecologists, and psychiatrists, these anxious ladies were invariably told they were incontinent and needed either surgery or psychotherapy. The belief and humiliation of it being linked to incontinence stripped any sexual satisfaction, often leaving the female ashamed. After all what girl wants to earn herself the reputation of an un-intentional 'bed wetter'? Even today's UK Censors have been known to emit footage of females ejaculating from porn films, wrongly believing it to be urine and therefore fetish orientated. In fact what these ladies are actually achieving is the absolute pinnacle of female sexual pleasure. An ejaculatory orgasm, or 'squirting' as now commonly referred, which renders them well and truly spent! \n\nMost of us ladies who have experienced an ejaculation initially believed we've suffered from a leaky bladder. Instead of enjoying the sensation we were mortified to believe we had 'golden-showered' our partner and indeed, in many cases so did you men. Lots of females, under thorough interrogation or clever coaxing will admit to having had an experience where they believed they'd 'leaked' during sex. The feeling of ejaculating is not dissimilar to peeing, a shower of warm wet liquid and a feeling of intense release. \n\nOften it's the guy's reaction to ejaculation that will determine any future releases. If he's had previous experience, or at least understands what has actually just happened, things will be significantly less embarrassing for both parties. In truth, he has skilfully hit the lucky girls G-spot and her eternal font of pleasure. If however he jumps to his feet shouting 'Fucking-Hell! You've pissed yourself', the chances are your girl will dry up like the Serengeti...as will your sex life. \n\nIt has taken almost 1,800 years for the subject, often considered an urban myth, to finally be an acceptable and willing bed partner. When it first started happening to me I was so paranoid I found myself looking at adult nappies in Boots Chemist surgical dressings department. You may snigger but I assure you, to a girl only in her twenties if you believe you've started to pee yourself during sex, it's like the end of the world. No amount of Bulgari perfume is going hide the stench of piss sodden sheets.\n\nFor our part, the fairer sex has enjoyed and indulged the sexual revolution. We found our clitoris, and in increasing numbers so have men. We've stocked up on toys, some of us have even engaged in threesomes, swinging and discovered the delights of Fetishes. In a relatively short time women have been sexually liberated, and for the first time in history we can finally take the lead in the bedroom and dungeon. In 1981 when Newsweek published its editorial piece 'Just How the Sexes Differ', it claimed the major difference was 'that men ejaculate, but women do not'. Oh! How naive they were. The actual difference between men and woman is that we can 'shoot' more, and further than you. Soon teenage girls everywhere could be enjoying their own version of the 'Soggy Biscuit\u2019 game. \n\nOnce released, the actual ejaculation itself can be a mind-blowing experience for both partners. Not only does the female get 'THE' most intense orgasm, but also the lucky partner gets some serious dousing of love-juice. The amount of fluid 'squirted' can vary considerably in volume. Most Doctors have settled between the 5ml and 100ml volume, but personal experience and others can testify to soaking a bath towel over the course of an evening. The amount varies as much as force of expulsion. My partner in particular will often receive a warm soaking of his balls. But on occasion, particularly during harder 'doggy style' penetration I've managed to drench not only him, but also the soles of my feet and beyond. Something he's definitely partial to.\n\nIn reality many men are fascinated with this so-called 'phenomenon' adding to the growing 'ejaculating super-female' urban myth. Legend has it that when Motley Crue drummer Tommy Lee started dating a girl named 'Bullwinkle' it wasn't her looks he was interested in, but her ability to 'spray her cum across the room'. That may also lead some credence to Pamela Andersons' claim that guys' can't get enough of her 'trick pelvis'. \n\nEqualling the tally for all those 'pearl necklaces' has its satisfaction, especially ejaculating during oral and I'm becoming very adept at delivering my own version, a 'sparkling-choker'. But a price does have to be paid for all this pleasure. First of all it can present a new slant on the question of 'who sleeps on the wet patch?' Especially when we are not talking about just a lovin' spoonful, but up to half a pint and bed linen that look like they should be displayed in the Tate Modern. Forget Tracy Emmin's 'un-made bed'. Check out my sheets, I could give Jackson Pollock a run for his money!\n\nThere are a few ground rules to undertaking your quest. Do not set out believing there really is such a thing as the 'ejaculating super-female', even if I personally would wear the t-shirt with pride. Most women can ejaculate but many don't. In the same way that all women can orgasm even though some don't, be it through physical or mental blockage, or just plain in-experience. When you guys first engaged in a 'five knuckle shuffle' you got a result. It may have taken a while before you managed to produce your 'baby gravy', but you still got hard and it captured your affections. The climax has always been much more hidden and complex in females, and as such, a source of infinite frustration in men. Giving rise to that ever popular question 'How was it for you?' You seem to need to ask us!\n\nThere are indeed many complexes in achieving female ejaculation but it's best to start with compatible partners. Both parties have to be sexually adventurous as some women claim that their partners will literally 'wilt when showered'. Other females, especially if you've just 'popped their cherry'ade', will still dive for the bathroom absolutely mortified and convinced they have committed an indiscretion. If the idea of water-sports has intrigued you in part but you're not too keen on urine, female ejaculation could be your 'holy grail'.\n\nNow, whoever said that condoms were passion killers has never tried a mattress protector, or jumping up halfway through a really good session to find a towel. Forget that decaying crusty sock you keep under the bed, which is covered in dead cultivations of 'man-milk'. If your girlfriend can squirt you will seriously need to upgrade. At one stage I even started obsessing about staining the mattress. This doesn't happen but it does raise yet another issue of 'protection'.\n\nLike in Yoga where one is taught to almost reverse ones breathing pattern, in sex the female needs to control another inbuilt reflex. The building of the 'ejaculation' does feel very much like a desire to pee and as soon as the urethra starts to tingle, second nature kicks in. When squeezed The Pubococcygeus Muscle (try get your tongue around that!), prevents the bladder leaking. It is crucial for your girlfriend to oppose this contraction and actually bear down against it. This is not an easy concept to get your head around because if you bear against the muscle that prevents you peeing, surely that means you do. Not in this instance it seems. Contraction of the muscle in this instance actually stops an orgasm from building; pretty much the same way as squeezing the base of the penis and thinking momentarily of Anne Widdecombe does in men. It does not prevent further ejaculation, just postpones it. This is the first barrier you need to deal with. Don't be under any illusions that your girlfriend will fill your mouth with milk & honey on command. If only life were that simple. Remember the hunt for the clitoris? Well if that equalled gaining an 'A' level qualification, getting your girlfriend to 'squirt' for the very first time is like obtaining a PhD. \n\nThe ejaculation itself does come through the urethra, the same tube used for urination. It is located just outside the vaginal opening. If you spread your ladies inner labia and trace your finger from just inside her pussy, up towards the clitoris, after about half an inch you can find a tiny hole. Almost a needle in a haystack, especially if your lady is unshaven. This is where the ejaculation fluid exits, but not where it originates. That's the job of the 'Skene Gland'. The equivalent to a male prostate, which produces seminal fluid in males and it's hidden between the G-spot and the clitoris. Although some insignificant traces of urine are evident, the composition is not that dissimilar to the fluid produced by the male prostate to keep all those hungry little 'baby-makers' alive during male ejaculation. \n\nThe fluid can appear like either watered down milk or can be clear in composition. It in no way offers any contraception as the fluid is expelled outside the vagina. Therefore the only conceivable purpose of female ejaculation is for pleasure. And the pleasure is intense, in many cases far surpassing any previous best. Ejaculation can take place during both a clitoral and a vaginal orgasm, thus providing a magical 'third' orgasm. If you are lost on the difference between a clitoral and a vaginal orgasm, you might want to ask your girlfriend; although if you really don't know the difference, you probably wont have a girlfriend to ask. \n\nAn ejaculation results from manipulation inside the vagina, as per a vaginal orgasm, but with an added jackpot. Giving the female an amazing double whammy orgasm. Sometimes after ejaculation the female can virtually pass out from the after-glow of forceful feelings. But don't worry, unlike men, there's usually more to follow. Give her a few minutes and she'll be filling up like the office water cooler. \n\nObviously a starting point to your crusade is required. It usually helps to wait until your lucky lady is already aroused before declaring your honourable intentions. Place a towel on the bed to help absorb your 'baptism'. Each orgasm will deliver a different volume of liquid in all manner of directions and velocity. This can range in spectacle from a trickling 5ml to a turbulent 200ml (I no longer worry about my creative juices drying up, as I reckon with my other talents I could easily always get some freelance work with the fire service). \n\nI would just also like to rectify a point here about another 'urban myth' that we girls have been swallowing for years. When was it actually decided that the male load averaged at 10cc? Who were these 'specimens'? My boyfriend often cums so much I once actually accused him of being a freak. Bad etiquette I know, but sometimes I resemble the star attraction at a 'Bukakke' club. I have literally eaten his humble pie though; first time I ejaculated over him he was perfecting his oral skills. I came so much he was thoroughly drenched. His hair, face and chest were totally dripping. The sheet showed perfectly where his head and torso had taken the brunt, leaving an outlined dry patch. He loved his 'baptism' so much I counted 9 more ejaculations before rolling over, passing out and leaving him with the mess. Now there's a novel occurrence. On other more adventurous occasions we have actually measured distances, managing up to 5ft of coverage; and I used to think the Bangkok ping-pong ball trick was impressive. \n\nIf you haven't yet introduced toys to your relationship, fingers will be more than adequate for the job. Both can achieve the desired result but for first timers you will need to feel your way around, so you should probably leave the toys until later. Scrub your hands well. Trim and if necessary file your fingernails, you don't want to cut the poor girl (Welders, Guitarists and Builders take note: your fingers are not often noted as 'hands that do dishes'. But this is one area you can truly exploit those textured fingertips). It can also help to exercise your arms and fingers a little; you do not want to find yourself huffing 'are you nearly there yet?' Time should not be of essence during sex unless your girlfriends expecting a birthday telegram from the Queen. \n\nStart off slowly with lots of foreplay, for both parties. Manoeuvre her onto her back with you positioned between her thighs. Using your fingers and tongue stimulate her clitoris. Wet your fingers and tweak her nipples to really get her going, whilst executing the best cunnilingus skills you can muster. When you sense her starting to get aroused, insert two fingers inside her with your palm facing upwards. Enter your fingers up to the second knuckle and bend upwards to create an L shape. Now gently probe around until you find a rough surface approx 2 inches in length. This is the G-spot and is located directly behind the clitoris but inside her pussy.\n\nWhen you literally 'hit the spot', start to stroke this area and it should start too en-large. Ask her to let you know if she can feel any increase in intensity. If she can't maybe you have the wrong area so keep looking. Don't go mad, but you may be surprised at your partner's thresholds. Try out differing degrees of pressure as you are probing, and if necessary use some lube. Massaging the clitoris with your thumb whilst doing this also increases stimulation. If she is having trouble relaxing or is becoming self-conscious be prepared to let her see that it's also working for you. It helps to see that your fella is enjoying himself, and watching my guy 'box with his one eye'd champ' is an absolute delight. \n\nYour stroking may need some variety. You can work the two fingers together simultaneously or they can work in opposition like a finger walking exercise. Work around the whole area. An effective method is to combine the two previous suggestions followed by sliding your fingers in about an inch, before pulling out and sliding them back in. Start off slowly and build in speed. Don't go too hard; you are not trying to fist her. Try stimulating her clitoris at the same time; trust me this is not a time for idle hands. Keep measuring her responses. Heavy breathing, deep moaning and contractions around your fingers are a good indication that something is working. When you feel her start to bear down, begin pumping your fingers faster. At some point hopefully your girlfriend will experience a desire to pee. This is what you are both aiming for. If she can bear down and positively encourage this, and your handy-work has been sufficient, things should get very wet.\n\nThis isn't necessarily the best position to achieve ejaculation. The inside of a women's vagina is shaped, sized and angled individually, a bit like the shape of the male member. Penetration from behind may definitely be the key. Do remember however that in this position you need to work palm down. It will be easier for you to work on her G-spot and massage her clit at the same time. Try different variations with hands, tongues and fingers. Remember, if you do become dis-heartened, this time there are prizes for her 'Cumming' first.   If fingers are not working, try using your thumb. Although initially it won't reach the G-spot, if you stimulate her clitoris it will swell during arousal. Take two fingers and lay them either side of her clitoris, then position your thumb inside her forming a three-fingered claw. This allows for the curve between the forefinger and middle finger to apply pressure and friction to the clit. If you start to move your thumb and fingers in a pumping motion you will massage both clit and G-spot at the same time. When she starts to bear down increase your speed. Over time it is possible to control and even prevent ejaculation whilst still enjoying the orgasm, but that's just plain criminal! 'Please release me, let me flow' should be every female's motto.   If your girlfriend does manage to ejaculate it will, rest assured, catch you both by surprise. This is a significant moment for both of you, and if it's either party's first time, you will remember that moment of impact forever. The truly amazing bonus that evolution has granted us finally superior to males is that we can do it again and again. Be aware that in the same way we can have multiple orgasms, we can also have multiple ejaculations. Intensity and amount of fluid may vary with each individual orgasm until our supplies are depleted, but the sensations just get better. Being entered from behind whilst 'squirting' provides the ultimate finishing touch. The smile of the man who is lucky enough to have his balls drenched by his ladies cum is definitely a Kodak moment.\n\nYour girlfriend may not ejaculate every time she orgasms, and indeed a case is even documented where a lady approached her gynaecologist believing she was ill because it had stopped happening. Pressure on the female to deliver can be intense, and can prevent ejaculation in the same way it happens to men. Relaxation, an open mind and willingness are the three key factors. If these elements all click the final result will most likely be the most pleasurable and intense orgasm she has ever experienced. Now just imagine being the guy able to deliver that!\n\nAfter ejaculating your girlfriend will obviously, and hopefully, be a bit delirious for a few moments. It passes way too quickly so let her enjoy it before commencing with your wicked-way. She probably will want you to continue in a few seconds, or she may wish to have a breather. But I'm sure you will also wish to take a couple of seconds to comprehend the aftermath. As for achieving other ejaculations beyond this point, it's a bit like riding a bike (hopefully without the grazed knees). \n\nOnce perfected, don't be surprised when she now starts to hassle you for oral. Yep! Equal rights! Which leads us nicely on to the etiquette of swallowing and taste. Like male ejaculate, the taste of lady-juice can vary from bitter to sweet according to diet, water consumption and a host of other environmental and biological factors. Male porn stars frequently abstain from alcohol or spicy food for a couple of days before a shoot to combat what is known as the 'gag factor'. It's an assault on the ladies taste buds and will invariably produce a 'Spunk-gurning' reaction. But if you drink a pint of water and avoid spicy food, it's not quite the delight of Evian, but it's definitely more palatable. Well the same goes for us girls. On occasion it can taste sweet, on occasion bitter and at certain times of the month metallic...it is generally advised to avoid these times as you could end up earning your 'red wings'. Nuff said!",
        "Mopping up afterwards can be awkward and embarrassing. If ever there was a time for you to earn big brownie points and a breakfast in bed, this is it. Try hard not to make it an issue even if she has just soaked your best satin 'bachelor' sheets and woken your housemates. Be impressed! Sleep on the wet patch without moaning, it's grim I know, but us girls have been doing it for years. In the morning you'll notice a slight odourless milky stain, betraying your prior enjoyment. If she's well and truly tanked-up, and I don't mean with alcohol, you'll shortly join the hall of shame as you trot down your local high street to purchase a mattress protector. You might as well stick a yellow hankie in your back pocket; the sales assistant's look will say it all.\n\nThere is a surprise finale to all this activity. Your girlfriend's need to finally pee. If confirmation that she did not pee was needed, Mother Nature doesn't fail. It is quite possible to drain a very full bladder after having also ejaculated up to 250ml and it always raises a wry smile on my face.\n\nPut plain and simply what you have right now in the palm of your hand is the knowledge to uncover the absolute pinnacle of orgasms. The 'third place' if you like. If you can successfully entice your girlfriend to ejaculate, all prior orgasms become a fond memory. What was considered the 'Big O' before, has just evolved into the Big 'OOOOOooooooooooo!!!!!!!!!' Claim your rightful crown as 'The Luurrvvve Doctor' and long may your girlfriends 'rain'! "
    ],
    "authorname": "Alice_Roissy",
    "tags": [
        "spicy food",
        "amount fluid",
        "vaginal orgasm",
        "stimulate clitoris",
        "female ejaculation",
        "start slowly",
        "massage clit",
        "wet patch",
        "ejaculation",
        "intense orgasm"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/please-release-me-let-me-flow"
}