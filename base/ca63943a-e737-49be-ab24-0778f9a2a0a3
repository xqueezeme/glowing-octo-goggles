{
    "title": "It's Always the Quiet Ones Pt. 01",
    "pages": [
        "Hunter\n\nWorking night receptionist at the entryway of a ritzy building of apartments and penthouse suites was a dream job for a college student like me. It was stupidly unfair how easy it made my life because there were, like, two basic rules for the rich people who lived there and they all followed them to a t. After my shift started, no one got in without a key and there was no drama. Literally, whatever the laziest solution was on my part was the correct solution.\n\nFor someone taking a full slate of accounting classes during the day, this was perfect. Boring was good. Boring meant getting homework done. The security doors meant I was always safe, always. There was never any danger. The worst part of the job was the crazy, old money guy on the top floor who randomly called and asked about the weather for the rest of the week, but the six other major tenets in the penthouse suites were wonderful. It wasn't a large building and even the weird guy randomly left Werthers laying on the desk, when I was busy running end of the month reports and whatnot.\n\nThe rest of the time, I did my boring homework and lived my boring life. The only other interesting part about it all was that I got to see the guy who lived on the sixth floor when he came in some nights. His name was Aramis Kilgore.\n\nNo, really. That was it. I remember when I first saw his name on the roster and thought that was the most amazing name ever. And then I instantly felt bad for the guy. On the one hand, being named after a Three Musketeer was awesome. On the other, holy shit, but his parents must have hated him. I remember the first day on the job when I waved to him, he introduced himself as his middle name. Shane. I didn't even realize he was floor six for a long time, but I knew he was a tenant. He had a key and he was always polite, always.\n\n\"Good evening, Hunter.\"\n\nThe night when my life ceased to be happily boring, I waved at him as he walked through the door, smiling at me like he did every night. God, he had these teeth like the big bad wolf, straight and perfect, and these sky blue eyes with the proverbial blonde hair. In high school, I had hated blonde hair and blue eyes, because they went with pretty faces and I couldn't stand that then. But he had the standardized, serial seducer perfection. It made my brain forget whatever class I was working on at night. \"Good evening, Aramis.\" I grinned when I said it.\n\nAnd he grimaced. \"Jesus, no. It's Shane.\"\n\n\"All for one and one for all,\" I called back after him, proud of myself for even managing to kind of flirt with this man. He never brought girls back when he came in at nights, and I always wondered what the hell he did that he got in so late on some nights. He was obviously rich as fuck, because he lived in the most expensive suite in a ritzy building and he was the only somewhat younger tenant. But he always seemed to be energetic when he got in, too. Sometimes, he would stay at the desk and talk with me about my classes, ask me about myself, ask me how I was. I never asked about his life because it would have felt nosy when I was just supposed to \"hold the door open\" for him.\n\nSometimes, he would just shake his head at my statement and go up to his suite, leaving my fantasies to wander, leaving me to daydream. I looked at the cameras, biting my lip. He was the last person to get in for the night and there was no one left to take care of. The rest of the night was going to be quiet as the grave.\n\nOn my tablet, I closed the website I used for school and opened the word processor I used for writing instead.\n\nAthos wasn't the type of person I usually would have lusted after, but he always had this air of control, no matter how polite he was, and he was always polite. Being his secretary was even worse. I didn't realize quite what I was getting into when I applied for the job, but having accounting experience and being polite seemed to have gone in my favor. It had taken about two weeks to realize I had a very big problem.\n\nI idolized him, wanted him. God, the way he looked at me for any task, with this direct gaze that wouldn't let me look away. I couldn't say no to him. And it had all eventually led to this.\n\n\"Savi, I thought I said I wanted the ledger done at 8:00. What time is it?\"\n\nI whimpered, knowing where things were headed. Over the course of months, things had gotten way out of my control and it was probably immoral, probably bad. But I also kind of didn't care. \"8:15, sir.\"\n\nMy sex ran wet just from saying that word now. He commanded it, made it seem like a natural thing, and I wanted to call him that. \"Bend over the desk, kitten, there's a good girl.\"\n\nAnd those words. Holy hell. I bent over his desk and placed my hands flat on the surface, like he had trained me to do. When he lifted my skirt over my back, I shivered and closed my eyes, already dying from hot arousal. \"I'm sorry, sir.\" And even though I really liked this, I also really was sorry because I liked pleasing him more.\n\nIn answer, he chuckled behind me and his palm slapped against my ass, gentle but controlling. I groaned into the surface of his desk, lifting my ass for more of his strikes.\n\n\"Hey, Hunter.\"\n\n\"Huh, yup, what?\" I tapped out of the processor... and straight into the erotica website I posted my kinky fantasies on to share with other people, even while I dropped the tablet on the desk. Internally, I kind of panicked. I could either hope he wouldn't see anything, where it landed behind the computer screen, or I could draw attention to it, when I was already blushing, and see him tease me more.\n\nBecause he was definitely already going to tease me. He was grinning as it was. \"Getting bored late at night, huh?\"\n\nI laughed. \"Yes, actually. And The Stand is a scary ass book.\"\n\nHe lifted an eyebrow, smirking. \"Uh huh, sure. What part are you on then?\"\n\n\"Larry is in the tunnel with that random girl he runs into and there's dead bodies everywhere, Korn reference intended.\"\n\nShane's eyes were glittering with amusement. \"Damn, you did actually choose a book you had read and thought quick on the spot. I'm impressed.\"\n\n\"Because I'm telling the truth.\" Stop blushing, stop blushing, stop fucking blushing.\n\nI didn't stop blushing and his grin only widened. \"Alright, sure. Will you get the mail that was dropped off for me so I can leave you to The Stand, then? It wouldn't have been from today. I just haven't gotten a chance to pick it up yet.\"\n\nHe leaned against the counter and I took a deep breath. Shit, that was going to leave the tablet right behind the computer screen. Well, at least it wasn't opened to a specific story. That would have been way worse. I forced myself to leave and went to the holding room, searching for a box that would have been dropped off for him. I did find what he was talking about, something from nearly a week ago. Jesus, how busy was he? Normally, I kept up with mail that came in pretty well, but not for something that showed up on a day I had off a week ago.\n\nI took it out to him, blushing again, but this time it was because I felt incompetent. \"Sorry that took me so long. I'm really sorry.\" I lifted it to the desk, unable to meet his eyes and cringing with apology. This was why I worked a night shift job, incidentally, and also why I was trying for a degree that would make sure I didn't have to have much human interaction. I had zero backbone. \"I normally keep up really well.\"\n\n\"Hey, it's okay. It's my fault for leaving it here so long.\" Finally, when his voice didn't sound angry, I looked up and he winked with that damn charming attitude he had. He was the nicest person who lived there too. Any of the others would have totally yelled at me for not having it accounted for and ready. \"Thanks Hunter.\" He smiled easily. \"Enjoy the rest of The Stand.\"\n\nIt worked. I laughed and he went back upstairs. When I was sure he was gone that time, I double checked the tablet. It was untouched and on the same page it had been when I left to get his box.\n\nMaybe if I'd stopped to consider it, I would have realized that the display timer settings meant the screen should have turned off by then. I didn't, though. I just went back to my writing app and started again, fantasizing about him spanking me as his secretary. I had gone through all the daydreams fueled by standard porn stories by then, too. I wrote about buying a dress from a department store he owned and being unable to pay. I wrote about him being a mafia boss and getting caught double crossing him. There was one where he was a personal trainer and I was a rich man's daughter who blackmailed him, only to have it backfire when I got addicted to his cock. Still another starred him as my teacher and my grades went bad when I started to fantasize about him instead of paying attention to him. Story after story after story.\n\nFull disclosure? I was a dream child growing up. I was demure, always polite, my grades were perfect, and they were still perfect. I was good at everything and even my boss for this job loved me. Her only problem was that I wasn't assertive enough to work during the daytime. I was too good. But I kind of had one major character flaw.\n\nI was horny as fuck. But I was too shy to do much about it, so I masturbated a lot and wrote kinky stories with not very creative storylines, but kind of hot sex. They actually turned out to be pretty well liked when I posted them, too. I wrote in all my D/s daydreams, wrote everything I could think of. And I tried to change up the appearance of the people in them, but really they all started with my fantasizing about him. It was probably a good thing I was this shy or I'd be one hell of a slut, actually.\n\nIf given half the chance to reenact the stuff I wrote, to feel what it would be like, I'd probably take it.\n\n\u2014\u2014\u2014\u2014\n\nShane\n\nFirst thing's first. I hate my name. I think it's a nightmare and the way it goes with the last name of Kilgore? Holy God, no. It's freaking terrible. I give my mother playful hell over it all the time because she was way too in love with Dumas. The Count of Monte Cristo was something she read to me in the cradle.\n\nAnd yet, I discovered a good thing about my name that night after I flirted with Hunter. Okay, so, it was wrong of me to turn her tablet and glance at her pen name, but the thing was I recognized the logo and background of the erotica site she had opened to a writer's page. I had a writer's page on it as well, though I never wrote. I just liked to favorite stories so I would receive recommendations in certain genres like BDSM and taboo tags. So the truth was we shared in the embarrassment. Even so, it was wrong of me to look for her private writings when she used a pen name.\n\nBut I was feeling... frisky. I owned a hospitality company and a couple of hotels of my own. Basically, franchises had standards and sometimes hotels didn't always meet those standards. When that happened, the franchise forced the owner of the property to hire someone, like me and my brother, who had proven themselves in those standards and they had to pay us to manage and bring their property up to par. And let's just say they had to pay us a lot. That day, a year's worth of work had come to fruition and I had succeeded in acing an inspection with a property that had failed for about five years or so before I was hired.\n\nNeedless to say, I felt giddy. I had gotten the news while I was at the office of one of my own hotels and then had a drink with my brother, who owned the business with me, to celebrate. So I did something a little too forward of me and looked up her pen name.\n\nI wasn't sure why her, though. That was a strange thing. Normally, I would find a one-night-stand at Sulfur's, which was my favorite fetish bar, or call someone else I knew to play with me, but for some reason the cute little night shift door guard made me grin lately. She had this way of bowing her head and she apologized way too much for everything. It had taken me months of kind greetings just to get her to even kind of flirt back with me, the quiet thing. Not that I minded that, but damn, I was used to girls reacting to my charm and good looks. Maybe it was going to my head. Okay, it was probably going to my head.\n\nI opened her writer's page out of curiosity, feeling light and playful. I couldn't help myself. It had gotten my interest that she would have a page on that site.\n\nI would never regret doing it. Oh man, she didn't just have a page. She had lists after lists of stories and all under different tags. \"Woah.\" Noncon, incest, BDSM, and all kinds of fetishes. But that wasn't what got to me. What got to me were the ones with the name Athos in the descriptions. \"No way.\" I was grinning when I opened one.\n\nIt couldn't be. This was just my narcissism chasing her, the same way it was my narcissism needing her to flirt back and talk with me, right? It had to be. She was going to my head. I opened one of the stories and went down to read.\n\nAthos was blonde, blue eyed, pretty faced, and he hated his name, first and foremost. The Three Musketeers, really? At least, that's what he thought.\n\nI thought it was crazy awesome. The only thing more awesome would be to be named after Aramis, the priest played by Charlie Sheen. But Athos was pretty cool too, honestly. The truth was I was kind of a sucker for literary references. Maybe that's part of why he got such control over me like he did. Maybe that's why I gave over and things got a little out of hand.\n\nWhat tag was I under with this one? Reluctance, right. I scrolled down to the sex part and my eyes went wide.\n\n\"I think you know exactly what I mean, little kitten. You've been doing a little bit of questionable accounting and now you need to pay me back.\"\n\nMy heart thundered and I ran soaked between my legs, hating myself for the response. He was so handsome and this was going so wrong and this shouldn't be how it made me feel. \"S-sir?\"\n\nBut I knew what he meant and he knew I knew because he was smiling that perfect smile with those wolf teeth. \"A little bit of punishment sessions, shall we say, until I tire of having a little toy to play with. Let me acquaint you with the idea, since you seem to need to be shown. Take your skirt off and bend over that chair for my belt. We'll start with five this first time, if you can be still for me. If you move, I add five more.\"\n\nI read myself belt her pussy, causing her to move so that I ended up belting her 15 times in total. Jesus, she had great fantasies. I clicked out and went to another Three Musketeer themed story. And in that one, the main character had dark hair and dark eyes, but I was onto the gist of this. He spoke with an easy smile, with perfect teeth, and he had a pretty face again. And in that one the tag was under mind control, so I could read myself brainwash her to be an out-of-control, horny slut. I read myself holding her in chastity belt toys so often that she broke and craved cock, turning shivery after three hours would go by where I didn't fuck her. That one obviously wasn't supposed to be as realistic, but I was stroking my cock thinking of it. What was more, I was imagining it really was her and I.\n\nHoly shit. It only got more and more interesting and her favorite nickname to write me saying was \"kitten\". \"Such a horny fucking kitten I have\" or \"look at this kitten's drenched cunt at being turned into a whore\". Punishment. Manipulation. Sometimes she could write sweet little love stories, and not just porn, and the sex in those was hot as fuck too, even while it was romanticized.\n\nI masturbated harder than I had in weeks and glanced at the door of my home office thoughtfully. I had a kinky little dungeon behind my office door, a playroom. But I hadn't used it since I'd gotten divorced from my past submissive. It was a story that kind of made me sad, if I was honest with myself. We had felt something for each other, but I had a bit of a character flaw. Maybe it's an obvious one.\n\nIt went with being a Dom, actually. See, I was a little bit of a control freak. Control soothed me down to my hardest edges and made me calm, made me see life clearly. And I tried to warn the girls I dated, especially the girl I married. And she had been okay with it. At least, she thought she had been okay with it.\n\nBut then, as our marriage went on, she started to realize that it wasn't a game to me. I controlled her diet, controlled her clothing, all of it. And it wasn't for any degradation reason, even. That might have been the worst part about it, actually. It was purely my own selfish proclivity that I needed control. It wasn't that I distrusted my partner when I wanted them to text me when they left work and got home. It was that I got off on their obedience. It was my drug and I craved more of it the more I cared about the person.\n\nI hadn't played with another person since my divorce because it made me realize that my love might not have been very desirable. I had been wary since then.\n\nBut now, I kind of wanted to play a little more seriously. I kind of wanted to be back in the relationship pool, maybe not to date, but to feel companionship and to play. To dominate again, maybe just a little. I grinned at the thought of the playful scenarios in the stories she had written about me. She was so adorable and maybe this kinky edge was something I had sensed. My dominant radar was pretty well developed and it wasn't like she was obscure with her submissive tendencies in her day-to-day life. Granted, I had certainly not expected this from her at all.\n\nNow that I thought about it, I wasn't sure why. It was usually the quiet ones that hid such deviancy under their shyness when it came to BDSM. It was amazing how many shy submissives would stay around the edge of the clubs and then come to the forefront, only to beg the loudest when their submission was nourished and encouraged. It was a quality like any other, one that could be shamed during childhood and one that could leave scars of embarrassment.\n\nI didn't want any of that for her, even though I was trespassing with these stories and thoughts. I thought it was a sin to shame a submissive for any kind of hedonism. They often came with kind hearts and a love language of service. When a submissive gave you a gift and looked at you with a hopeful gaze, you always praised her and expressed your gladness. So I didn't want to make her feel embarrassed for writing the stories about me. I did kind of want to fuck with her and flirt though.\n\nI grinned and went to my own writer page, using the writing interface for the first time ever. I wasn't sure how good this would end up being. In fact, I was pretty sure this was going to be shit, but if I threw myself out there as well, it put us on equal level, kind of. I had the story title before any of the rest. \"It's Always the Quiet Ones\".\n\nFisher hated her name because she thought it was a guy's name, but she was born of a career marine and there it was. And for all that, she didn't have any of the qualities that a daughter of a marine should have. She was quiet, too quiet sometimes, and she was shy. Her father had always thought her submissiveness to be a weak quality, but I loved it. I thought it was the greatest part about her.\n\nThere was only one quality, in fact, that I would have changed. You see, Fisher thought that boring was synonymous with safe and I wanted to make her blood race with filthy games from the beginning. I wanted to tie her down and watch her be scared, while I snapped a crop to her thighs, so that she squealed with laughter and fear at the same time. I wanted to watch her break while she laughed.\n\nThe trouble with Fisher was how wary she was to actually play my games. Oh, she definitely fantasized, wrote all kinds of filthy little stories, but when it came to real life? I eventually realized that I was going to have to force her.",
        "I wrote and wrote and wrote and sometimes it was definitely shit that I would have to go back and carefully edit. I wrote a noncon story where I hunted her down and forced her, where I played out the part of the big bad wolf and called her my little red kitten, the prey I wanted to eat. I wrote how I would lick her little pussy until she screamed in need, how I would slap her tits roughly. It wasn't a long story, but I ended up all night editing and working on it before I posted it.\n\nTwo days later I got the notice that it had been approved and then I sent her a private message with a link to my story, grinning with mischief.\n\n\u2014\u2014\u2014\u2014\n\nHunter\n\nI stared at the story that had been linked to me, blinking. This was the first time something like that had happened. It was rare I got private messages on the kinky erotica site I wrote on, so when the message had come through, I had smiled happily, thinking this was another writer to upvote and help out.\n\nBut then I had read it and with every word my eyes got wider and wider. This was... was this me? It was described like me. A girl with blonde hair and a single light pink stripe in it. The daughter of a career marine who hated her name. It seemed like me. Like real life me. I was sitting at my little reception desk when I read it and the sound of the door opening made me jump and close the site. \"Hello, Sh-Shane.\"\n\nHe grinned. \"Wow, it only took you months to use my middle name instead of that godawful first name.\"\n\nI blinked, then grinned. \"You caught me on an off day. Don't worry, I'll be back to annoying you later.\" I forced her bowed over my bed, now that I had tricked her to come into my apartment. \"You're secretly a naughty little girl, kitten. You just need a little encouragement to let loose. I think it's time I gave you that.\"\n\n\"Well, how do I make it an off day again so I can keep hearing you call me Shane instead, kitten?\"\n\nMy face went blood red with the nickname. Had he ever called me that before? Holy Christ, I didn't think so, but how the hell would he know? How? I thought of leaving my tablet on the table a couple of nights ago. \"I don't know.\" My voice came out a squeak of fear and he laughed.\n\n\"Maybe I'll just keep calling you that.\" He winked. \"That seems like it threw you off. Will I get to see you tomorrow night?\"\n\nYou call me sir, kitten, when I have you under me and mewling for orgasm. My mind was going haywire, wondering what was fantasy and what was reality at the moment. That disconnect bled into my response and the damage was done even while I tried to stop the words from escaping. \"No, sir. Not until the next day.\"\n\nHoly. God. No. I didn't. The word made my heart thunder, that magical word that I had written and never said to guys I was interested in because I was way too shy to ask someone for what I wanted in bed. Holy shit. Holy God fucking shit, my body went hot all over just from saying it. The thought of him having some kind of authority over me turned me on. The verbal acknowledgment of his having authority over me?\n\nMy gears cranked in all the right ways and I was desperately trying to ignore the feeling of heat between my legs because it was freaking painful. When I shifted under his gaze, which lit up with his own wild light, I could feel wetness in my little heart patterned g-string. His lips lifted and there was a moment between us where I forgot everything. It was almost like... like deja vu maybe. \"Such a pity, little kitten. Well, then, I hope you enjoy the rest of your night and your day off. Have fun reading The Stand.\" He winked.\n\nAnd then he left while I trembled and wondered what the hell had just happened. I swallowed and dove back for the story, reading more. My heart went even crazier with the sexy content and the reluctance story. \"Bad girl, kitten, for being a little tease.\"\n\n\"I'm just shy, I swear I didn't mean to tease!\"\n\n\"Liar.\"\n\nAnd then at the end of the story, there was another sentence that made me choke, one that let me know what was happening. It ended with the guy tying the girl down and training her to ask readily for cock. He forced her to go to him for more training and sessions of his mastery and at the end of the story, she started to realize that she was his plaything and she couldn't even get off to thoughts of vanilla sex anymore. So the guy had her tied to his bed, with her ready to be used as his pet toy, and he teased her nipples and asked, \"Are you enjoying The Stand, kitten?\"\n\nHe knew. It was him and he knew and he wrote that story and it was supposed to be me and I wasn't crazy. God, no. I thought over the flirting look in his eyes and realized that I wasn't crazy at all. It was him. At first, I felt horror for about thirty minutes, but then it was erased as I went back through the pages of his own story and realized that he had described himself. And then I realized, mind racing, just what I was reading.\n\n\"I'm going to punish you again for being a tease. Using shyness is just a cop out, an excuse. I will train it out of you until you're my little wanton, kitten.\"\n\nAnd suddenly I realized something. I couldn't talk to people or flirt very well, couldn't do anything out loud, but when it came to writing I could be very bold. My fetters of terror, the ones that came from interaction and fear of confrontation of any kind, were off my wrists. I was free to play back in this form.\n\nMy heart thundered with nerves and excitement and thrill and it was amazing. All my life had been boring monotony, menial night shifts where I would read my books and do my homework and write my sex stories, where I would study like a good girl and where I ruined grade curves in difficult classes. I had always kept my head down and always put in the work.\n\nAnd now I felt excitement. And it was wonderful! I could play and flirt back in this way. I went to my notepad and did something I had never done before. I wrote a short story for the \"fictional correspondence\" tag.\n\nDear Sir,\n\nI hope this letter finds you well. Your previous games of training have been intense and I know you wanted me to be more forthcoming on things I love, things I like, and things I hate so you can better use them in training me. Being trained to be more sexually open and less timid is difficult, but I know you said you want a slave who is nice and greedy, eager and slutty for cock.\n\nThings are starting to get confusing. I used to hate the thought of receiving oral because of how bare and vulnerable it makes me feel, but when you held the vibe to me with my legs spread apart every day for a week, I couldn't help but need more. I love the feel of your tongue fucking me open and I love the filthy things you say the most, like how you taunt me for hating oral when my cunt drenches at the first touch of your tongue now.\n\nI wrote and wrote, forcing myself to let go in the fantasy. It helped, when I wrote, to try to relate to my characters and I was imagining myself as the girl suffering through his training in his story, so I went back to reread periodically. The result was that I wrote something sluttier than ever, playing the part of a slave in mental control training who was being forced to be more open. I went for my own shyness in the character, while displaying my secret, inner horny self, that part of me that religiously masturbated three times a day. I even \"confessed\" to some of those darkest fantasies I masturbated to, ones I had never told anyone. I forced myself to edit the letter while still in the throes of playing a role, keeping myself in it.\n\nAfterwards, when I was home because it had taken so long, I forced myself to post it and then I threw my tablet onto my pillow and grasped my hair with wide eyes, mortified and terrified and grinning with a wicked excitement that I had never felt before. Oh man. This was a dangerous feeling. I had never acted on these crazed fantasies, and they had grown insanely out of control and intense over an amount of time. It had been driving me crazy, the thought that I might never get to try bowing to a man, just to see how it felt. I had gotten so desperate that I was thinking of ways to be servile to someone in real life without even having to add sex to the factor. I wanted the sex, craved it, but I burned to feel authority over me. I don't know why that was, only knew that it was a deep part of my being and it had been confusing me all my life with a secret torment. My father was a career marine and I had been raised in a feminist world. And it wasn't that I didn't believe in things like female empowerment! Not at all, because I did.\n\nBut I kind of wanted to be made to dress in a maid outfit. I kind of wanted to do things like serve a man food and be made to kneel until he finished, submissive and sweet at his feet. I felt like it was something I would be good at in life, like I was good with Microsoft's Excel and accounting and numbers. It was probably wrong and my fantasies concerned me because I didn't want to set feminism back, but I kind of wanted to feel a patriarchal over-the-knee spanking and to tremble in a male's arms. I kind of wanted to feel the fact that he was bigger and stronger than me and there was nothing I could do about it.\n\nWhat was even worse? The deepest part of the desire held hands with my horny arousal, but it didn't stem from it. No, the deepest part of me craving male dominance stemmed from the fact that I kind of wanted to be taken care of, so I could feel safe and secured. And I wanted that \"taken care of\" bit to involve being a sexual servant, as well as any other kind that would please my partner.\n\nGood lord. Maybe I was totally setting feminism back anyway. I was supposed to be a strong female, making it through college to take care of herself. And then I decided I was sick of thinking about it because whenever I did think about my submissive tendencies, I only felt worse about myself. So instead, I grabbed my vibrator and went back to his story and held the toy against my clit until I forgot everything but the pleasure, laying in my tiny little apartment. I liked to think of it as my kitten cage, because it was so small.\n\nI grinned at that thought and went to my bathroom with a new idea and way to flirt with him. This one would involve a little bit of face-to-face, but I found myself emboldened by his foray.\n\n\u2014\u2014\u2014\u2014\n\nShane\n\nWhen I knew she was going to be there two nights later, I deliberately stayed out late so that I would get in when she was there. She had written one hell of a hot story in the form of a fake letter and it had posted that night, right before it was time for me to go home and see her face. I ended up staying a little later so that I could finish reading it, where she confessed to fantasies she didn't want anyone to know about in her little role play. I wondered how close those fantasies hit to her heart at first, but then the fake letter said,\n\nThese are things I have to confess to masturbating to a lot, but I don't want them to happen ever. You see, sir, I have some fantasies that I use to orgasm hardest because of how horrified they make me. I couldn't ever get aroused by something like scat in real life, for instance, but if I'm drunk and it's hard to orgasm, I might have to use the horror of the thought to get off. If that makes sense.\n\nAnd I knew that these things were very close to her heart. That made me blink when I read it, because I felt... sad for her. It was clear that she was all alone in these fantasies, in real life, and she was using these stories to find some sort of connectivity with other people like her. But even so, she had those fantasies. The ones that were so dark they scared her and they were masturbation fantasies because of, like she said, a certain mental shock and awe factor. I had some of my own actually. One of mine that I masturbated to, like that, was of having a slave whose head I shaved, to teach her a humiliation lesson in vanity.\n\nDid I really want to do that? God, fuck no. I loved the western female appearance I had grown up with. It was a beautiful appearance. If a girl I was with was proud of her hair, then I wasn't going to do fuck all to it, except style it in ways I liked, to feel in control of her. There were huge differences between fantasies that were only for the thought and fantasies that one wanted to make a reality. Having both was nothing to be ashamed of. It was the sign of a healthy mind, to have both and distinguish which folders held which fantasies. Real life didn't work like daydreams. I felt like so many people in the world really just needed to be told that it was okay. It was okay to have those dark paths, at nights while getting off, and to know you never wanted to indulge in that. As someone with a little bit of sadism in my desires, I had struggled with the thought for a long time.\n\nPoor Hunter. I had had friends when going through my self discovery, had gotten to experiment with things in real life to learn the difference. It didn't sound like she had had anyone to even talk with.\n\nAnd then, of course, besides my moment of heart in reading my little receptionist's story, I ended up having to go find a private place to masturbate before I left too. When I read her talking about getting off with a vibrator just thinking about me tongue fucking her, it was game over. I went to the bathroom, with some fucking tissue paper like a goddamned teenager, to the thought of lifting her onto her receptionist's table and kneeling to suck her clit into my mouth, while she shouted in need.\n\nSee? Now that's a fantasy that is obviously just to stay a fantasy. We could both get arrested if I did that right there in the doorway and she'd get fired. But I loved getting off on the thought of forcing her to do it. And it made me feel more sane when I was leaving, more in control enough to flirt with her.\n\nIt turned out that I needed that control too. When I used my key and walked into the lobby, I felt my lips curl up into a grin of wolfish delight at the sight of her. She instantly looked up and froze like a bird meeting a snake's gaze, but I was frozen too.\n\nShe was wearing a set of kitten ears with silent little decorative bells in the corners. I broke the moment first and walked to her desk, trying to quell some of the raging lust she was giving me. He likes to use the nickname as a degradation, as if I'm a pet. \"Hello, kitten.\" I purred the word out, imagining her curled up at my knees with a little collar on. Except I wouldn't make her play the part of a kitten. True little kittens were mischievous and they liked hunting things.\n\nBut she wasn't a kitten. No, she was a soft little puppy who would be playful, but not rebellious or bratty. I would plug a fluffy tail in her asshole, fix some furry ears to her hair, and I would make her bark for me. \"Hello, Shane.\"\n\nShe was blushing fiercely again, too, and my smile widened. She trembled a little beneath my gaze, so afraid of even this confrontation. Jesus, she was a delight in all the best ways and now I was starting to realize that fact. Now that I knew what daydreams went through that head of hers, I couldn't help but notice every little nuance. The way her eyes remained respectful and downcast, for instance, or the way she took breaths for bravery at even the smaller interactions. I wanted to pull out the girl I knew was hiding in that mind and see if she would play with me. So I grinned playfully. \"Aw, now I'm starting to worry that I'll never get to hear someone call me Aramis again.\"\n\nIt worked. She smiled up at me, with a playful little gleam in her eyes. \"Oh, I'm sure we'll get back to it eventually. It's just for right now that we aim to please.\"\n\nI laughed. \"I see. Just for right now we're being a good little kitten and doing what Sir tells you to.\"\n\nShe swallowed, eyes going wide with my straightforward flirting. \"Yes. Yes, sir.\"\n\nThe word was breathy coming from her lips and I felt my cock get hard again from it. Oh, but I had never gotten to play with a submissive who wasn't experienced with the game and now I was wondering why that was. It was clear she was very inexperienced and not trained or used to these things at all. But it wasn't irritating, no. It was sweet and made me imagine petting her hair while I trained her, made me imagine calling her a good girl and teaching her the difference between kittens and puppy girls and bunnies. \"That was very polite. It was so polite that I'll order you a present, little kitten.\"\n\nHer eyes widened in horror. \"Wait, no, don't do that! No, really, I-\"\n\nI cut her off. The submissives I had played with all knew that gifts were for their top's pleasure. But for a little new one like Hunter? I knew she wouldn't see it like that and I couldn't let her feel so shy over receiving a present from me. I made a tsking motion with my fingers. \"Are you telling me what to do? I don't think I like that.\"\n\nShe swallowed. \"Ah. No. No, not telling you what to do. I didn't mean it like that. Honest! I guess I meant that... um... I don't know what I meant.\"\n\nI grinned. \"I do know what you meant. Gifts are like compliments, kitten. Learn to accept them. It's a gift that will make me happy to give you and you'll see what I mean when you get it. Try again and say 'thank you, sir' instead.\"\n\nShe took a deep breath, clearly uncomfortable, the notion at war in her mind. I wondered what kind of gifts she had gotten that had made her wary of receiving them. Many people ended up fearful of surprises when previous relationships used them for unwanted leashes or for guilt trips, I knew. And then there were people who lied and said it pleased them to give a significant other a gift, when they would have rather spent the money on something else but wouldn't confess it and would harbor a sense of martyrdom instead. My own past relationships had shown me how complex guilt could make things like gifts.\n\n\"Thank you, sir,\" she managed out.\n\nI leaned over the desk, feeling playful and wanting to show her this world of mine, wanting to teach her about it. Oh, but I hadn't given enough thought to something as basic as teaching. \"Good girl,\" I said softly. \"That was brave of you.\"\n\nHer eyes lit up. They turned purely delighted with those two basic statements. I didn't even think she realized it, but her whole face came alive and the way she smiled... It was something magical to see. \"Um. Thank you, sir?\" She answered bashfully.\n\nI laughed and winked. \"There we go. Have a good night for now. Maybe you'll get a link soon.\"\n\nShe giggled, face red with exhilaration and shy blushes, but eyes so alive. When I was almost to the elevator, she called after me for one last thing. \"Oh! And I am enjoying The Stand, thank you for asking.\"\n\nI was still laughing when I got on the elevator and went to my floor.\n\n\u2014\u2014\u2014\u2014\n\nHunter\n\nThe sudden abrupt dance of flirting I found myself in made me too thrilled to be upset by it. On the one hand, it was true I was too shy to ever initiate something like what he was doing. On the other, I was glad he had initiated it in such a way that let me flirt back because the adrenaline rushes were starting to be a delight. And that was something that shocked me because I had never considered myself as being particularly edgy or much of a thrill seeker, but it turned out that I could have fun outside of my cozy little box and kitten cage.\n\nIt was a day before I got the link to another story in answer to my letter, due to processing and posting approval time, but my heart thundered as soon as I checked my notices and received it. I grinned at the private feedback message, and copy and pasted the title into my tablet, going to the story. My smile grew when I saw the exhibitionism tag and I started to read the setup of a shy submissive being trained by her master to be more of his little slut. The master took the submissive to a fetish club, where he displayed her for everyone to see, and my heart raced even while I moaned at the thought of being cuffed, spread eagle, to a cross like the girl in the story. I trembled when the girl quivered in shy embarrassment.",
        "\"Oh, don't you like being displayed open for everyone to see or touch, kitten? I think I'll let a couple of friends feel how wet you are for me and once they're done touching you all over, I'll make you cum so hard that you scream, right where everyone in this place can hear you. Everyone can see how much of my good little slutty kitten you are and how much you love being displayed.\"\n\n\"But I don't like it, sir! Please!\"\n\n\"Liar.\" And I knew she was lying because I thrust two fingers inside of her hot little cunt and they glided so easily that it made me laugh. Her cry was equal parts wild arousal and humiliation, a mix so pure that it was the hottest goddamned thing I'd ever heard.\n\n\"Oh... my God.\" I ended up in the shower, stroking my clit in a frenzy. I closed my eyes and imagined I was blindfolded. And then I stayed naked for bed and imagined I was sitting in a room full of other Doms, with him commanding me to pet my pussy to orgasm while everyone watched. I imagined hearing them talk around me, to humiliate me more, and orgasmed so hard I had to grab my sheets and bite just to keep from screaming and disturbing another apartment.\n\nFortunately, I didn't see him for another few days after that. And that was definitely a good thing with my statistics class test coming up. That test specifically was one that concerned me and if I had been seeing him at nights, I would have been writing sex or reading more sex or daydreaming of more sex to write about, even while I stared at my textbook. Oh, I wouldn't have failed or anything, but as it was when I didn't see him, I got slightly depressed, from the lack of my new adrenaline addiction, and went through the statistics formulas and they stuck that way. At the end of the nights I rewarded myself by writing another story. I wrote about a girl being kidnapped for enslavement, wrote where she struggled and fought the process at first, but then gave in to the training so well that the slaver fell in love with her and ended up buying her for himself. At the end of the story, the girl lay beside her lover and he had started to encourage her to do things like read again. He asked her what book she had chosen and what part she was on and I ended the story with, \"I chose the Stand and I'm at the part where Trash gets anally raped with a gun. Have you read it yet? It was in your library.\" And I posted it, grinning as I did.\n\nIt was a couple of days after that that I saw him again. He walked into the lobby and laughed at me. \"Yes, I've read The Stand, kitten. And the Dark Tower, too. If you haven't read those, then you should because they're definitely as good and they tie into the world. They tie into all of King's worlds actually.\"\n\nI grinned. \"I haven't read those. I'll find them and check them out. How has your week been?\"\n\n\"Boring. I had to stay at one of my hotels for longer than usual to ensure some repair work got done. I'm teaching their manager how to measure this stuff, but that's slow work at the moment. But enough about all that. Let's see what we have here.\" He set the box he had with him on the counter and glanced up at my cat ears with amusement. \"Those are cute ears and I've enjoyed them, don't get me wrong, but they're not very fitting.\" He opened the box while I watched, staring down at it nervously.\n\n\"Not very fitting? But they're kitten ears!\"\n\nHe grinned. \"Exactly. Let's see.\" He ripped open some plastic and reached up to tug off my cat ears before he held up a different headband for me to see. And this one had ears too, but they were fluffy puppy ears, ones that were short enough to sit on top of my head. One ear was bent like a curious little puppy would have it. \"Kittens are brats and you don't strike me as the kitten type. Puppies, on the other hand...\" He fitted the cute ears to my head while I stared at him, wide eyed. I was kind of glad the fluffy black ears weren't the long kind, the ones that would go down to my shoulders. These just sat on top of my head, as if I was a German Shepherd. \"Puppies are sweet and loyal and they might mess things up when they're so playful, but they're never actually brats.\" He laughed at it when it was on my head. \"Definitely more of a puppy.\"\n\n\"Um. Am I supposed to call you Aramis now and prove you wrong?\" I took my cat ears when he handed them back to me and he laughed.\n\n\"Ugh. You could, but Shane is better.\"\n\nI grinned and touched my dog ears. They were so freaking cute too, and soft as all hell. \"Thank you, sir.\" I was still grinning when I said it, a goofy grin. What was it he said? Puppies were loyal and sweet and playful. Not like cats.\n\nI liked that. It made me feel good in all the right ways and it seemed like he could tell. \"You're welcome, kitten.\" He ruffled my hair like I was a puppy and... and...\n\nIt made me shiver, while cum coated my thighs in heated arousal. Holy hell, the look in his perfect blue eyes when he did it. It was this playful affection with just the perfect amount of condescension, like I really was a pet puppy. And the way his lips quirked with amusement, as if he knew and was reading everything I felt as it crossed my face. Damn. Just... damn. \"I like having my head pet.\" How did he do that? It wasn't even a sexual touch in any way and yet my sex opened for him. It was flooring and crazy.\n\n\"Of course you do. You're a stray puppy. You need a water and food bowl to lick from. And some treats.\" He was playful when he said it, his eyes alive with mischievous energy that made me want to play too.\n\n\"Ruff!\" It was almost automatic to keep making him smile like that, almost something that I didn't think about at all. Besides his playfulness, he was also really damn smooth and charming, so much so that it soothed over my own terrible awkwardness.\n\nAnd he made it really clear when things made him happy. He laughed at my barking, delighted. \"See? Definitely not a wicked little kitten. Keep practicing being a good little puppy for me. Do you work tomorrow?\"\n\n\"Yes, sir.\" It felt like overload, getting to say those words all the time and being encouraged to say them. It felt like a dream come true, like something I had long ago quit hoping to ever really have in any place other than fantasies.\n\n\"I'll talk to you then, after you read...\" My heart thundered when he got out his phone and I watched him send me a link. \"After you read that. Have fun on night shift, kitten.\"\n\n\"You too, sir,\" I said before I could think about it, staring at my tablet.\n\nHe turned while he was walking away. \"Alright, I'll have fun on night shift.\" And, swear to God, it was only then that I slapped my palm to my forehead. My mind was on sex and once it went there, it was a one track place, but his laughter was amused and wicked while he went to the elevators. And once he was out of sight, I grabbed the tablet and pulled up my messages, finding the link he had just sent.\n\nI went to the story under the BDSM tag and opened it, looking around myself before I started reading.\n\nI liked to think of myself as a bit of a pet collector. I had three little pets, as it were, and all of them were unique, with personalities of their own. And they all came into my life in different ways. My fox girl was easily the most curious of the three, oftentimes too curious for her own good. My bunny, on the other hand, would always go to the toys and places she already knew, and was too timid to color outside the lines very much.\n\nBut it was my puppy girl who came into my life first and she was the most interesting, so I'll start there. Because my puppy was both timid and curious, but she was a puppy girl because she was, first and foremost, a loyal little pet. It didn't matter how timid she was, her favorite place was at my feet or in my lap. It didn't matter what toys I had or if they were new and shiny or if they were old and well known to her. She looked at them all the same way because I held them. And I had known she was a puppy from the first time I saw her say \"thank you\" for a gift, even though she was so shy to receive one. She was uncomfortable, but she made herself be brave to please me.\n\nA puppy. Through and through, a puppy. I liked to picture a German Shepherd, specifically, because her eyes sparkled with intelligence and energy and, with some careful training from her Master, she was the most loyal pet I could have ever hoped for.\n\nI felt like I was going to spontaneously combust, like my body was going to ignite from the heat I felt. Part of me wanted to scroll down to a sex part, but I couldn't do that because I was too enthralled with this erotic, and twistedly caring, build up. He wrote it in such a way that it had just the perfect amount of condescension, like his eyes had. It was just that right amount to be nurturing and dominating. He talked about how he found this little puppy as a stray, how her eyes just begged for some approval. He talked about how his puppy was so lonely and insecure and needed to be told that her fetishes were okay to have, how she needed a Master to help her indulge in those fetishes safely and legally. She needed someone to teach her and show her the ropes of his world. And he spoke of how his world was the fringe edge world. It was where people liked to find ways to press the standard boundaries and that it just so happened that he knew all about the fringe edges, knew all the ins and outs of fetish play, not just in fantasies and stories and theory, but in real life.\n\n\"See, little puppy? I told you it gets better after some training.\" I pet her behind her ears in the way she loved most and smiled down at her. It hadn't been a sadistic playtime with the leather covered paddle, only a light little domination session. And after it was over with, she got that look in her eyes that shy submissives got, the one that said they felt safe and controlled enough to let go of some of that propriety. And she did. She whimpered at my feet, in her collar and on my leash, looking up at me, and she wasn't in pain from my paddle. Oh, no. \"Is my little puppy a naughty puppy? Does feeling Master's control make her little pussy horny and needy to be filled up?\"\n\nShe was deep in subspace, floating on those intense and wonderful waves, too far in the ambience to even talk anymore. Instead, she lifted her paw gloves to her chest and whimpered, begging me with pitiful whines. She stuck her tongue out and pant in her need and I grinned with approval. She was such a good girl. \"I think that means yes. And it's certainly okay for my puppy to be naughty after such good behavior. Put your face to the floor, little pet. You know how dogs fuck.\"\n\nShe moaned to my crass words and I laughed when she eagerly obeyed, slapping her ass when she lifted it for me. Her moans rose to cries when I pressed my cock to her entrance for her reward fuck. Because good puppies get very good rewards.\n\nWouldn't you agree, little puppy?\n\nJesus, this man was going to be the death of me. I had to stop and breathe through how horny it made me to read it, to get my shit together. God, just sitting there I already smelled like sex. The clean scent of my arousal was impossible for me to miss. But through the night, I made myself keep reading as he trained the puppy girl in the story. He taught her to fuck and suck cock, oh yes, but he taught her other things too. Things like how to snuggle up to Master and how to lap water from her dog bowl like a good girl. He dressed her in paw mittens, with tape around a fist, so she couldn't do things like open doors for herself and had to beg instead. He taught her how to wear furry ears, but also how to wear a sexy, partial leather dog hood and mask setup, one that held a dog bone gag in her mouth.\n\nAnd then at the end of the story, he was trying to get her to be a little more bold because he'd noticed that she had wicked fantasies, noticed that she had a wild sex drive that just needed to be encouraged and coaxed out. She was still too skittish to play very deeply with him, although he knew she wanted to and had seen how brazen she could be when she was horny enough and in subspace and free to let go of her stressing. So it ended with him asking her a question.\n\n\"Would you play with me a little in a different environment, little puppy? Like, say, an exclusive and safe fetish club named Sulfur's? I know you're shy and it's scary, but can you be a brave puppy for me and let me show you what some of your fantasies look like? I really want to play with you. Stop reading The Stand for one night and live a little.\"\n\n\"Oh, my God,\" I whispered under my breath. No way. There was no way.\n\nYes, way. I looked up the club name on my tablet and, fuck me, but the place actually goddamned existed. It was real and, like he said, exclusive. The next open door night wasn't for a couple of weeks, but vetted people could apparently take others in if they took responsibility for the person they were taking. The rules were clearly laid out and clearly dead set against any form of drama.\n\nBut that's not what I paid the most attention to. I had seen all kinds of staged BDSM photos and videos online, it was true, but I found the photos tab of the website in about two minutes and pulled it up, my heart thundering with excitement. I knew there were other people like me in the world, but I hadn't ever hoped to actually find myself able to meet them. I was not assertive enough to seek them out for myself, at least not yet. It's entirely possible that my needs would have gotten to me eventually and I would have sought that world out on my own, one day. But his story and the name of that place sped the process way up.\n\nI pulled up the photos and was lost because they were beautiful. One of them showed a Dom holding a whip coiled in his hand while a submissive knelt before him and his eyes were deliciously stern. You couldn't see her front, could only see him and that whip, the tail left down from the coils so that it stroked her shoulder. Another one showed a male sub kissing a female sub while their two masters stood over them, presumably giving them both filthy commands. There was a male sub with his mistress, a female sub with her mistress. There was a photo of a girl who could have been a sub, dom, or both and she was by herself, dripping candle wax onto her thighs, with a wicked little smile of exhilaration and excitement. The photography was an art form on that site. I couldn't stop going through the pictures. Some of them weren't of people at all. They just showed a main dungeon room and other smaller, private dungeon areas. There was a picture of a bar and even that looked threatening in the low light, with its spiky backdrop and portraits up of people behind the seating area. There was a stairway that went up to a balcony, for better views of what happened on the dungeon floor. And the equipment... God, I didn't even know there was that much variety in play setups. I recognized the basics, of course, like the Saint Andrew's Cross and the spanking bench, but there were different forms of spanking benches too.\n\nI wanted to say no, to go back to my shy, safe little world and not go and meet people because crowds scared me and that club looked wicked. But I had to admit that I couldn't anymore. My last relationships had been awful things, filled with stress and anxiety where I wondered, all the time, whether or not the person was pleased with me. I was forced to admit that I had a demon calling to me and it didn't want to be ignored anymore. I was getting really desperate to have that major need inside of me fulfilled and it wasn't going away. What did I have to lose, really? God, I really hope I'm not setting feminism back fifty years.\n\nI gathered my courage and sent him a social media message back for the first time, instead of writing in a story. \n\nYes. Yes, sir, I can be brave.\n\nHe messaged me back almost instantly. Such a good puppy you are. When do you next have a night free?\n\nWe went back and forth for a while, until we agreed on a night a week out and all the while my heart thundered in my chest, making me question my sanity. But then I went back to those pictures and I got horny all over again, turned needy with the thought of kneeling at Shane's feet so I could feel that whip tail stroke across my back in a silent threat.\n\n\u2014\u2014\u2014\u2014\n\nTime for that week went super fucking strange. It both seemed to speed up and slow way down, so that when I considered the fact that I had a date to a fetish club, with a grossly rich and dangerously handsome Dom who wrote about making me his puppy, time seemed to just stop altogether. I tried to not think about it, but then all I could do was think about it, so it was the worst mental conundrum ever. I couldn't even write stories, I was so anxious and excited.\n\nAnd that was the thing. Was I scared? Oh, hell yeah. But the sheer excitement? That was the part that trapped me. Maybe there was something to my fantasies. The worst case scenario was that I ended up disappointed and couldn't satisfy whatever craving I had. But the nearer it got to time to go on a sex date with him, the more it seemed like I wouldn't be totally disappointed. Because he started messaging me from that point forward, making it clear that he wasn't going to let me back out. More to the point, he started messaging me or visiting me with little commands.\n\nAnd I loved them. Not just kind of loved them, but crazy loved them. The night after I agreed, he came down to me at the desk and I waved, scared and shy, but delighted to see him too. And unlike the past people I had tried to see or flirt with, he seemed to understand all of the emotions that went with my actions. Where a past relationship would have just assumed they were scaring me, he seemed to know, correctly, that I was thrilled too. And he wasn't a creepy jackass about that fact either. He teased and flirted easily. \"There's my brave puppy.\" I couldn't help but grin back up at him and touch my ears, standing behind the desk across from him. \"But since you agreed to play some, I thought that you deserved something a little extra to go with those cute ears. I believe I called you a little stray yesterday.\"\n\nI laughed, forgetting to be embarrassed and afraid with the feel of so many flirtatious butterflies in my stomach. \"You did say that. It seemed rather insulting too, I'll have you know, like being called an untrained mutt or something.\"\n\nHis eyes got a wicked glint in them. \"Well, that's not so far off, really.\" I blushed with the implications to that and he chuckled, opening the box he had. \"But since it offends you, it's easy enough to fix, fortunately.\"\n\nI shuddered when he lifted a dog collar from the box. It was a cute thing, with a metal heart ring in the front and a D-ring in the back where it buckled. I whimpered at the sight of it, with horny desire, and he winked. \"Since you're being brave, I guess that means you'll need this for our date night. A little play collar for a little play puppy.\"\n\nHe held it out for me to take and I did this time, without arguing with him on his gift. \"Th-Thank you. It's so pretty.\"\n\n\"You're welcome. But this one comes with conditions. You're going to have to wear it when you sleep to get used to it and, just to keep you honest about it, you message me in the mornings to let me know you put it on.\"\n\nJesus. Why did my pussy clench with pure heat when he said that? Because he still wasn't being sexual at all. Oh, there was a certain understanding between us that these fetishes held hands with sex for both of us, but in that moment? Yeah, no, he was just being playful as could be. I stroked the collar, horny as all hell for him, thinking of the possibilities. \"Yes, sir.\" It seemed almost automatic to say it and he gave me such a look of approval that more warmth lanced through my abdomen.\n",
        "\"There's a good girl. Have a good night, kitten, and behave yourself.\"\n\nAfter he left, I stared at my cute little collar and then looked around me to make sure all was quiet as the grave like always. I bit my lip for a moment, because I didn't really want to wait until I got home to put it on.\n\nSo I didn't. I lifted it to my neck and fixed it, slipping the buckle to the tightest adjustment I could manage without suffocating myself. I did it tight enough that it even felt uncomfortable at first because I wanted it that way. With it clasped, it felt safe and steady and all the warm feelings that I craved to have. And he hadn't put it on me, no, but he had given it to me and the thought of that made me so desperately aroused that it hurt like hell. I had to breathe through it for a couple of minutes, quivering to the filthy thoughts that went through my head.\n\nAnd he wasn't even with me. Hell, he hadn't even actually done anything. I took a selfie with my puppy ears and collar and sent it to him, hoping I wasn't waking him up. I didn't want to wait. But for when you wake up in the morning :).\n\nHe didn't message me back until the morning hours, when I had already left, and then I got the message right as I was walking into my kitten cage of an apartment. Now that's just heartwarming to wake up to. Good girl. Sleep well.\n\nEven curling up in my bed made me horny, with my silky Lilo and Stitch pajamas. It was crazy how all these little things made my imagination go wild with fantasies. Everything made me think of control, made me imagine about things like his hand curling around my throat or a leash being attached to the collar to make me crawl. Most of the fantasies starred him, for obvious reasons, but if I was being honest with myself? They didn't have to. I was just getting fiendish for control and if he hadn't been around, it might have meant bad things for me. Because I thought that, maybe eventually, I would have been begging for someone, anyone, to take some control over me and play with me. And it made me very grateful that he was around to show me these things in a safe, guiding way.\n\nBut for the time being, I kept those thoughts to myself. He didn't need to know all that and it was introspective shit that would have sounded like ridiculous fantasizing when we were just playing. Instead, I messaged him that I really liked my collar and it made me think of his control and I liked that too. Which was enough.\n\nThat's the spirit. How about another little command during the day, just for fun?\n\nYes, please, sir!\n\nWear your hair up tonight so I can see it when I get in.\n\nAnd I did that. I went to my classes with it up even, feeling like I should have a tail to wag with the amount of eagerness I felt to get to see him and show him I obeyed. And before I got to work I put on my collar, feeling a rare spirit of boldness and mischief, mostly borne of being horny just from having my damn hair up. I didn't even care if anyone saw the collar, so long as he did.\n\nIt was worth it, when he came in and laughed with pleasure. \"Aren't you the cutest little receptionist? Having fun?\"\n\n\"Yes, sir!\" I was even getting very used to that word, too, associating it with physical pleasure every time it left my lips. This was insanely fun. And weirdly, I hadn't considered just how basically fun it could be to play like this. All the stories I wrote were darker scenarios of control, but this was filled with playfulness. Which made me wonder something... \"Can I ask you something?\"\n\n\"Given the scenario, I feel like you should probably ask to your heart's content.\"\n\nI laughed, but then blushed. \"Okay, but I can't out loud, so can I message you instead?\"\n\nHe got that wicked look in his eyes that made me shiver all over with crazy fantasies. \"Now I'm definitely curious. Yes, you can, kitten. And on that note, I'll tell you good night.\" And he reached across the counter to pat my head and I felt butterflies in my stomach.\n\nI waited until he was out of view before I got my phone and messaged my question. Okay, what's it going to be like? Are you going to be rough? Do you play rough? Do I like playing rough?\n\nOkay so that was a couple of questions, but I didn't really know what was up. How was he going to play with me? Was there sex even involved? How did these places work? I looked at his message when it came through. Given some of the content you write and if you made me guess, I would say you might like it rough, relatively speaking. As for me, I like certain kinds of rough and I'll show you, depending on how the night goes. I've done this for years, little puppy. Be brave for me and trust me to know how to read you, okay?\n\nI hesitated and then wrote back. Okay. Yes, sir, I can do that.\n\nSuch a sweet girl.\n\nAnd that. The praise. Oh man, it definitely made the fear a hundred kinds of worth it. It just felt basically good, like warm and fuzzy, feeding a Glaceon in Pok\u00e9mon Sword, good. And he seemed to enjoy giving the commands and seeing them followed, as much as I liked following them. That, too, was something that made me happy. It was a delightful thing to know that my nature pleased someone, when I had only ever known it to cause people stress and problems. But not him. He kept giving me little commands, just so we could both enjoy them, and he did it all the way up to that night and then he gave me more specific, special commands.\n\nWear your collar, but not the ears, and a dress or a skirt with your hair up again. I grinned and obeyed, taking a picture of my little, black dress to ask him if that was alright. Perfect. Meet me at the door. I had to pace to work up my courage because I already had the time and place and I couldn't back out now. \"Okay, you can do this. You can do this. I've got this.\" It was a tiny little pep talk for myself and then I walked out the door, taking the subway to get to the place named Sulfur's, trying to ignore my anxiety.\n\nBut then I saw him. He was already waiting for me and my fears lessened in one way, while my heart beat faster in another. He was dressed down kind of casual, in jeans and this collared shirt with underarmour showing at the neck. And I don't know why, but the sight of it turned me on something fierce and made me very aware of the fact that this unfairly gorgeous guy was getting ready to walk me into a fetish and sex club. His face was so pretty that it almost made me angry sometimes. This was not one of those times.\n\n\"Hello.\" I took his hand when he held it out and he shocked me.\n\nHe tugged me into a hug. \"Hello to you, too, kitten. Now I can see you outside of the penthouse building.\" He pulled away to lift my chin, so that I had to meet his gaze, and his smile was so warm that it eased my doubts even more, so all that was left was wicked excitement. \"Ready to have some fun?\"\n\nI said the answer before I could stop it. \"I'm trying to not think about it, actually. That way it just happens.\"\n\nHe laughed outright. \"Fair enough. Come on, then. Let's go inside so you're trapped and can't just run away.\"\n\nI had to grin and followed him into the entryway and then, even there, it was impossible to ignore where I was. There was a decorative Saint Andrew's cross on one wall and my eyes went wide when I saw it. I had never expected to get to ever see one in person and it was literally just sitting right there. Like magic. Crossed over top of it was a whip, with the tail stuck to the wall in a curling s, and a riding crop.\n\nThey were right there! And it was then that I realized that this was it. This was the thing that had been missing from my life, the thing I craved, and I knew it instantly. Because seeing the cross and seeing it for real, with the straps on it and everything, felt like the last piece of a puzzle falling into place. It felt like a key turning in a lock, so that everything I had never understood about myself suddenly made perfect sense. And after that my nerves no longer mattered.\n\nI had to know more, had to see more, and was dying to play. I turned to look at Cole, who had watched me with a grin. \"Th-Thank you for bringing me here.\" Because, oh my God, I was seriously grateful to him for it.\n\nHe laughed. \"Don't thank me yet. We haven't even gotten started, kitten. It only gets better.\"\n\nHe wasn't lying either. He had to hand the door guy a card and then he put a wristband on me, something like a bracelet. \"Okay, keep this on. It means I'm taking care of you. For safety reasons, everyone either has one of those or one of the cards like I have.\"\n\n\"Unless it's open door nights.\"\n\nHe touched my nose. \"You did your research. Exactly.\" And with that, he guided me inside.\n\nI went weak at the knees. Directly across from where we walked in, there was a girl strapped to a Saint Andrew's Cross and this one wasn't decorative. She was entirely naked and she was strapped facing the cross, so that her backside was out, and her Dom was flogging her. I'd never forget the image either. He twisted his wrist in a figure 8, reddening her skin with the tails, and it was the single most erotic thing I'd ever seen. When she turned her head to the side, I got a glimpse of her expression right as she danced on her toes and her Dom slapped her ass.\n\nHer lips were open in a soundless cry and she was in ecstasy. Shane took my wrist to guide me to the side, so I could drink it all in, and I shivered when he turned me to face him. His eyes were dark with his own desire, alight with his own filthy thoughts, and it sank in that those thoughts starred me in them for the night. \"You look a little overwhelmed, kitten. Why don't we take away a sense?\" At first I didn't even process his meaning because my mind was still on the flogging session, but then he pulled me into his arms so that I was back to his front and placed a palm over my eyes.\n\nI surrendered to it, but it made me whimper. It turned out that taking away a sense didn't help. At all. Not being able to see only made me painfully aware of the other senses, like the hot sounds of pleasure and pain. Laughs and shrieks and moans surrounded me and I could smell him and his cologne.\n\nA pained whimper escaped me and he laughed over my head and this time it was different than all the others. It was darker, more wicked. And about a hundred times sexier. \"That's a yes. Let's see what else you like. Maybe a little more restraint? Cross your wrists together behind you.\"\n\nI obeyed so eagerly that my hands accidentally brushed his cock and I turned blood red when I felt how hard he was. A low growl escaped his throat and I felt more like the rabbit from his story than the puppy. Dogs could be hunters, but rabbits were always prey to be fed on.\n\nGoddamn, but I really wanted to be fed on. When he took my wrists and held them in one powerfully strong hand, I arched automatically, and whined again. \"Please. Oh, please...\"\n\n\"Hush. Just take it in.\" I tried. I really fucking tried while he held me still and I kind of even managed, but it wasn't easy. I shook all over from hot need and the sounds were all the more erotic now that I was held captive. He didn't do a damn thing except hold my wrists and cover my eyes and I was already wetter than I'd ever been in my life. \"Good girl.\" He cooed the words when I trembled in his hands. \"You have some choices to make for me.\" Choices? Was he crazy? I couldn't think through the inferno of lust to save my life! \"Would you like to watch and listen some more or would you like to play?\"\n\n\"Play! I want to play, please.\" I said the words before I could think about them, scared that if I did stop and think then I'd make myself too scared to agree to what I really, really wanted.\n\n\"Such a brave girl. I would like that too. Now, would you rather stay out here and play where everyone can see and hear you? Or would you rather go somewhere private, where you're all mine with no one to stop me?\"\n\nLater, I would think on his words and realize how carefully he had planned that choice phrasing. He deliberately made the privacy option sound more threatening because he knew that the first choice of staying around other people would register as the more initially terrifying for me, but I might regret it later. At the moment though, while I was amped with arousal, it only made me pause and whimper, made me consider the thought of being at his mercy with no one to hear me or stop him, and I found there was zero regret to be had in it. I had seen the rules to this place and knew what kind of amazing structure it had. \"Private,\" I finally squeaked out. \"Totally private.\" I twisted a little in his restraining grip, just to see what he would do, and then moaned when he instantly tightened his hold on me and pressed my arms farther up my back. \"Oh, God.\"\n\nHe kissed my hair and I shivered all over to how gentle the action was, compared with how tightly he held me. \"Okay. One last question. Do you actually want sex or do you want me to just keep this casual? If we do have it, it will be safe and it will be for release. If you don't feel like you need that release, then we don't have to do it and that's okay too.\"\n\nDamn it, damn it, damn it, damn it... And this was where my courage would finally decide to falter. \"Don't let me answer or decide that because I won't tell you what I want because I'm definitely a coward.\"\n\nHe burst out laughing over me. \"Good enough answer, then.\" And he didn't make me confront it, didn't make me say out loud that I really bloody wanted him to fuck me until I couldn't walk or see straight and then fuck me some more. He wasn't so mean... yet. \"Alright, then, kitten. Let's play. There's only one basic rule for the night and that's that you play the game. You'll pick up on it really quickly, I promise, alright?\"\n\n\"Yes, sir.\" I sighed when he lifted his hand back to stroke my hair, letting me see again.\n\n\"Brave girl. I'm going to show you how amazing it can be when you ask for what you want and it's going to be so good. Okay, go wait by the bar for me really fast, while I get our keys.\"\n\n\u2014\u2014\u2014\u2014\n\nStanding by the bar for that brief time let me question my sanity again, but this time I told that part of me to shut the ever loving hell up. The anxiety demon had caused me enough grief in my life, and I was tired of it taking fun times away from me. It was a lot easier to think clearly in that atmosphere, too. There was something about the way the people played so freely and out in the open. They weren't embarrassed about their kinks, although I definitely wasn't the only shy person there. That being said, there were also incredibly bold people there and there was no real type either. People were dressed from all walks of life and they were different ages. Some people had dark hair or purple hair. Some people were clearly edgier than others. It made me think about Shane and wonder what type he was. Was he the edgy type, the mean type, the control type? And then I wondered if it really mattered. He didn't need a label and neither did anyone else there, now that I considered it.\n\nI was watching a male sadist strap his female sub with harsh, heavy strikes so that she squealed with each one, tears in her eyes. And I was lost in thoughts of how he had come to accept and enjoy those kinds of things, because surely that had to be difficult, didn't it? Males weren't living in an era where those behaviors were exactly encouraged by society. They were supposed to be more awake or something. I wondered if it had plagued him, like it plagued the hell out of me, to crave these weird things, wondered if he had gone through adolescent awkwardness and suffered from it then. I wondered if someone had judged him for it and then I felt a little sad for a stranger, which was weird, but really I was trying to distract myself from how goddamned horny it made me to watch his playmate shiver with pain and desire the way she was doing...\n\n\"Look fun?\" I squeaked when Shane stroked his hands up my shoulder and he laughed.\n\n\"Y-yes, sir, it looks... kind of fun.\"\n\nWhen he turned me around, he was smiling down at me. \"Good to know, kitten. Come on. Let's go to our room because I think you're going to like this. Remember, what's the rule?\"\n\nHe talked while he took my hand and I followed obediently, loving the feeling of being guided. \"Play the game.\"\n\n\"That's right, just play the game.\" He paused outside a door with the number six on it. Six was starting to feel like a lucky number for me. \"Okay, choose your safewords and I know you know how those work.\"\n\nI had to laugh because I'd written them into stories that he'd read. \"Okay. Red and yellow. Red stops, yellow means slow down.\"\n\n\"Straightforward and generic. I love it. Ready, kitten?\"\n\n\"I don't know!\" But it came out laughing. \"Okay, yes. Yes, sir, I'm ready.\"\n\nHe unlocked the door, but before I could walk inside, he stopped me for one last thing. \"I think, given how you are, it might be a kindness to let you hide, kitten. Here.\" I blinked when he covered my eyes with a soft blindfold and tied it in the back. And he was right, it was definitely a kindness on his part. I felt less shy when I couldn't see, at least for the time being. Maybe that would change when I started to get used to things and I kind of hoped so, but I trusted him to a degree and being blind made it easier to let go and to give over.\n\nAs it turned out, I needed that help to give over. He walked me into the room and I heard the door closed and locked behind me, a sound that made me suddenly very aware of both of our breathing. His was even, deep, and mine was slightly faster.\n\n\"I think maybe you should start by asking me why I brought you here so late, Hunter.\"\n\nThere was something in his voice, something in the way he guided me into the room with his hands on my shoulders, that made me both really wet and made me have to stop from grinning. \"Yes, sir. Um, why did you bring me here, sir?\"\n\n\"You've been a rather distracted T.A. lately.\" I nearly choked. As it was, I took a deep, shuddering breath. \"I already gave you one warning last week when you missed your deadline and you did it again?\"\n\nUh oh. It sounded an awful lot like fantasy me had probably been writing erotica about a really hot professor and gotten caught up in it. I couldn't really blame her for that, either.\n\nHey! I was into this and I didn't even feel shy. \"Yes, sir. I'm sorry, sir.\" Don't grin, don't grin. It was the hardest part of it because I really wanted to smile, but I wasn't supposed to. I was a T.A. suffering embarrassing chastisement.\n\n\"I don't think you are since that's what you said last week. You go to a competitive college, Hunter. I haven't put in your grade or sent in to have you dropped as my T.A. yet, but I should have already.\"\n\n\"Oh, no, please! Please, don't do that.\" I could hear him close to me, but I still jumped when he touched the small of my back, little thrills spiking through my abdomen. I wasn't sure, but it sounded like fantasy me should probably be punished and raped, so that real me could be punished and... totally not raped. \"Please don't drop me. I'm really sorry.\"\n\nThere was a smile in his voice when he answered and it made me happy that he was having as much fun as I was. It felt like I was glowing with his pleasure and my own arousal. We hadn't so much as kissed yet, but this was already more amazing than even the roughest sex I'd gotten to experience. \"Maybe I won't. I'd rather not actually. You do have promise, Hunter Gates, and it would be such a pity to waste that.\" His hands snaked up to lightly brush the sides of my breasts and I groaned. Wait, no. Fantasy me was apparently going to be naive and scared, because that's all I could come up with after he touched me. The rest of my brain just wanted all kinds of more.\n\n\"Oh! But... but, sir, I don't know about this. I-\" At least my breath was appropriately shaky.",
        "\"You don't want to lose your housing and scholarships that you worked so hard for, do you?\" And his voice was intense with his own arousal. Something in it felt dangerous and I went hot all over while fantasy stories tumbled through my mind and scattered my reason. And it seemed like all I had left was the role he'd given me to play.\n\n\"Oh, no, sir. No, please, I don't want that. I'm sorry. Oh!\" I whimpered when his palms stroked over my tits blatantly, feeling dirty in all the right ways. \"Oh, please, no...\" God, I smelled like so much sex that it was humiliating.\n\n\"Maybe I can be persuaded to change my mind, if you take a different punishment with me and then show me your gratitude for this alternative.\" One hand stroked down to my thigh where he held me and I had to take a breath to keep from begging him.\n\nI sniffled pathetically and it wasn't totally acting by then. \"Th-that's kind of you, sir. What... um, what did you have in mind?\"\n\n\"Oh, nothing too terrible. Just something a little more private. Bend over my desk.\"\n\nI shook when he walked me forward since I was still blindfolded. \"Oh, but, I don't know about this, sir. I don't think this is allowed.\"\n\n\"Neither is your recent behavior and you don't want the way I'm supposed to punish you, do you? Besides, little slut, don't play so innocent. I found the notebook you left when you were so absentminded after classes. And isn't this exactly what you wrote about me?\" He bent me forward over a desk, and I realized why he wanted me to wear a skirt or a dress because he lifted it to bare my ass and tugged my g-string up so that it pulled against my pussy.\n\nI couldn't keep the cry in that time and the acting was over. I was done, lost, and I'd say whatever script he wanted me to for more. \"Oh, yes, sir! Yes, sir, this is what I wrote. I'm sorry!\"\n\n\"Not yet, you're not.\" He released the fabric and slapped his palm against my ass, a harsh strike that made my eyes go wide behind the blindfold.\n\nI shook beneath the palm he held at the small of my back and I cried out again, loud, but I didn't care. It was the best thing I'd ever felt, the absolute best. This was what I'd been dying to feel for years and now it was real. \"Oh, please! Sir, please!\" \n\n\"Quiet.\" His voice was a snap and I didn't think it was entirely from acting either. No, it felt like this had just gone from the playfulness to a whole other darker level. \"You don't want us caught, do you?\"\n\nI gasped when he slapped my ass again, harder this time because he'd heard the needs in my cry, felt my heat just like I could feel his. \"No, sir. No, I don't want us caught.\"\n\n\"Then be a good girl and take your punishment quietly.\" I moaned weakly when he slapped my ass again, his palm like bliss when he struck me. I wrote spankings in my stories as foreplay, but that had been a mistake. Even if he had merely done this and left me with no release, even if he didn't touch me except to abuse me like this, I would have been satisfied. The sound of his palm smacking against my flesh made me lift, made me have to bite my arm to try to keep quiet. I had forgotten that this was just a game and I didn't even have to be silent, had forgotten that we were in a sex club and there were no repercussions for my sounds. He had commanded me to be quiet and, trapped as I was in my blind world, I knew only the need to obey. \"And just for good measure, you'll be receiving these discipline sessions whenever I feel like giving them to you and you'll show me gratitude after each one.\" I choked when he spanked me again, having to work to hold my cries in. \"You do know what it means to show me gratitude, don't you, Hunter?\"\n\n\"Oh, yes. Yes, sir, I think so.\" I hoped I had the gist of gratitude, hoped beyond sanity. This was what he meant by fucking being for a release. This was what he meant by it not being needed for playing. Because the spanking was purely erotic enough on its own, but oh, I really wanted to be fucked afterwards too.\n\n\"You think?\" He slapped my ass again and I shook all over, craving more, needing it. Why had I never been bold enough to ask for what I wanted in bed? \"Let's be clear then. It means you're going to let me use any of these holes you have in any way I like, understood?\" His palm was starting to feel hot, so hot, when he struck me. It was growing more and more painful, the heat compounding on itself.\n\nAnd I was getting hotter and hotter because of it. \"Oh! Oh, yes, sir. I understand. Oh, please, it hurts!\"\n\n\"That's because it's punishment. And if this doesn't help you focus more, maybe one of the doctors I know can help you.\" There was a wicked smile in his voice and yet that darkness was getting more intense, more threatening. His spanking turned harder and I lifted on the desk, dancing for more stimulation.\n\nBecause oh my God, I totally wanted to play doctor. \"Oh yes, sir! Thank you, sir, for helping me.\"\n\n\"Make it worth my while, if you're grateful.\" I arched, then squealed with the next slap before I could stop myself.\n\n\"Yes, sir! Oh, please... oh...\" He slapped harder because he understood. Amazingly, he knew exactly what to do to satisfy me. My cries were something I seemed to hear from outside of my body and every one made me hotter and greedier. My sex pulsed and I burned all over, forgetting the fantasy, forgetting everything but sensation that he controlled. I shouted when he tugged on my g-string again, then squealed when he shoved it to the side and thrust two fingers inside of me. \"Oh my fucking God!\"\n\nHe growled behind me and I reacted with my hands on the desk pushing up and back against him for more. More pain. More pleasure. I didn't care which anymore, so long as it was what pleased him. That was the fueling desire that was everything. I wanted to get off but I needed for him to get off, to call me a good girl, to use me for his own pleasure. And he did. He spanked me, reddening my flesh so that it sizzled, almost as alive as the way my pussy pulsed for him. It was all the more wonderful because now the pain wasn't even my own pleasure. It was just pain, but that was even fucking better. Maybe that sounds crazy, but it made me even happier, drove my ecstatic headspace even deeper, to know that this wasn't about my pleasure anymore. This was about his. I lifted for more, even though I didn't physically want to, and felt myself turn all the more aroused for it. \"Jesus fuck.\" It escaped him in a growl, something heated and passionate and I cried out again. The wilder he sounded, the more I wanted to hear it. The rougher his palms felt, the more I wanted to struggle so he could be harder. So I did. I lifted up as if to escape him and he pressed me back down. \"Oh no, you don't, bad little girl. You take what I give you because you need this discipline, don't you? You need to be spanked and fucked regularly so you can focus better, right?\"\n\n\"Oh yes, sir! Yes, you're right, sir!\" He forced my wrists behind me and held them in one hand at the small of my back before he pressed them upwards, making me strain deliciously. I couldn't be quiet anymore, but he didn't seem to care. My God, I had wondered if he would be rough or gentle and now I knew. He was rough.\n\nBut he was also gentle. The two went together like a dance. \"I'm glad you agree, naughty girl. You wrote such filthy stories that I just couldn't resist anymore.\" I squealed when he fingered me again and this time he cursed and pulled away from me and I heard the rip of foil that made me arch in eager anticipation. \"Open up, Hunter. God, I need you.\"\n\nI spread my legs wide, whimpering and craving to be used. He lifted one of my legs so that I was braced up on the desk and the toes of my other foot just barely reached the ground. I clenched my fists, still restrained behind me, when I felt him stroke against my pussy, felt the head of his cock press to my entrance. At first he just stroked and I trembled, my body torquing so that he made gentle shushing noises. He spread me open with his fingers when he was lubricated from my cum and I went dead still, panting like an animal for him to finish this, to have me as he liked. His feral growl when he pressed inside of me made me moan and he growled again when my legs spread wider, impossibly, submissively wide. \"There we are. Good girl. Just relax and take it.\" I squealed when he surged inside of me, thrusting forcefully. \"Such a tight fit you are, kitten. This little asshole is going to be even more fun, don't you think?\"\n\n\"Oh, God! Oh yes, sir, yes...\" I hissed the words out, purring them greedily. I couldn't keep from arching back for him to have me deeper. I was all his at that moment and it was perfect, more than I could have ever fantasized it to be. He grabbed my hips and I didn't think it could get any better, but it did.\n\nBecause he rocked into me and his grip on my waist was one to make me take it, make me take him. He no longer let me submit, instead taking over with an almost sadistic control. \"Bow your head,\" he bit out in between thrusts and I did, lowering to the desk in this weird position, but I couldn't have disobeyed him to save my life. \"That's it. Good girl, kitten. This is submission, real submission, when there's no way to get away from me and all that's left for you is to take it as I give it.\" His words sizzled like a lightning bolt through my abdomen and I choked on the pleasure it gave me. I loved obeying of my own free will, but this? Being held still and trapped beneath him to take a hard as hell fucking? This was heaven.\n\nI had always imagined waiting for my Dom's permission before I orgasmed, but it didn't work out that way. After his filthy words, I tried, I really tried, but each stroke of his cock ripped my control a little farther way until about the fifth one, when I lost it all together. I threw my head back and couldn't even shout from the pleasure. He was fucking me that hard, that all I could manage was a choking gasp, an almost pained sound of bliss. Everything was pleasure, everything. My mind was satisfied, even more than my body was, and it was in a way I hadn't known I needed this badly. It felt almost too intense to be real and when I collapsed on the desk, I whimpered and stayed open for him. I needed him to finish, needed his orgasm even more than my own. If he'd stopped then, it would have been the worst thing he could do, would have made me feel like an incomplete failure. But he didn't because he took pleasure from me and that was everything.\n\nHe snarled above me and I felt it when he came into the condom, when he held my waist tighter, holding me so roughly that it was bliss. I didn't think it was possible for me to have another orgasm, but the feel of his finish set me off again and I moaned, shuddering around him. \"Christ. Jesus Christ.\" His words were breathless and I whimpered, squeezing around his cock with aftershocks. When he pulled out, I couldn't even move, could only shiver with exhilaration.\n\nBut I managed to talk when I felt his hands touch the blindfold. \"No. No, wait. Please, I- Not yet.\"\n\nHe stroked a hand down my back instead. \"Easy. Okay. How are we doing, kitten?\"\n\nGod, what was wrong with me? I had written way rougher stuff than this and all he'd actually done was spank me and fuck me. But it had been intense and there'd been this connection that I'd heard of for things like this, but never felt. My body was great, glowing from his rough handling, but my emotions were going haywire. \"Amazing. Like... actually amazing. I'm just... I-\"\n\nHe laughed when I couldn't come up with anything else and there was a breathless touch to the sound. \"Want to know a secret?\" I turned my head and he bent over me, gently easing my leg down from the strenuous position he'd put it in. \"That happens for both sides sometimes.\" He kissed my back between my shoulder blades and I moaned. \"Take your time, kitten. No hurry. Was it everything you wanted?\"\n\n\"More! It was more! I want to try other things and harder things and deeper things, too, now.\" God, it was like I was a born heroin addict and he'd just given me my first hit.\n\nHe pet my hair and I finally managed to stand up with him, thinking of how harder and darker might mean more of these intense feelings, of this closeness that I'd never known could exist. My God, I had been living my life closed off and shy of others and this had been an option all along? I was kind of scared of the closeness, but I couldn't imagine not having it now either. And fortunately for me, he sounded delighted over me. \"I'm glad to hear that, kitten, because I want that too. Would you like to set a different date to play again?\"\n\n\"Yes! Yes, please, sir. Please keep telling me what to do. Please keep playing with me, please.\"\n\nHe held me close. \"I'd love to.\"\n\nThank God he was nice. Thank God he was an experienced Dom and thank God he seemed all too willing to go farther.\n\n\u2014\u2014\u2014\u2014\n\nShane\n\nI ended up holding her close in the bar area of Sulfur's, while she curled into my arms with a beer. And I had to ignore my emotions and feelings because she didn't deserve to deal with those and they were this incessant background noise, waiting for me to acknowledge them. But for the time I had her, I compartmentalized. And I was pretty good at that, thanks to my job. Different hotels had different problems to fix and each one of them had a box in my mind, where they were kept separate. It was the same way with this. I talked with her quietly while she looked around at different scenes still happening. There was less going on now that it was later and she took it all in better when she was sedate in my arms. I loved holding her too, if I was being honest with myself. She was downright adorable, shy as hell with a shit ton of deviance suddenly making her forget all that shyness.\n\nBut when I said goodbye to her and went to my penthouse, I could register the thoughts. It had been since I was married that I'd really seriously considered topping someone again. Oh, I'd done scenes, but they were playful and light, like the way my scene with Hunter had started. But that had changed into something that made it difficult for me to keep up a fantasy, until it made me feel something real again.\n\nIt had felt like falling back into an old routine I'd missed for so long. I couldn't stop it once it started, couldn't go back to the light play, couldn't just casually finish with sexual release. Once I had a hand around her waist and one restraining her wrists, tightly holding her down and still, it had been like an old song that I knew every word of. She struggled to be held down harder, so I did it, loving the feel of light violence, but not as much I loved the control. As soon as it was over, I wanted more. I wanted to command her all night and watch her obey and then I wanted to stop commanding altogether and just sadistically take as I willed because she'd let me. Some people liked one feeling over the other, but I just liked both. Scratch that. I needed both.\n\nI locked the door when I got in and went to the dungeon behind my home office and the memories were an assault there, too. As sad as my marriage had ended up, it had also been a delight to have someone who knew my nuances and accepted them anyway. Well, right up until she didn't anymore, of course. But the memories were great. Oh, they were a joy and now I was reminded all over again of how I missed seriously playing and being in control of another. The pure, simple reasoning was that it made me happily fulfilled to do it.\n\nGoddamnit. The ending to it had really been shitty though. Well, the good news was my partner this time was a baby player, so I didn't have a choice except to be light and happy for the time being. I had to just be cool, stay casual, stay charming, and go out on vanilla dates that weren't going to go anywhere on the side.\n\nBecause I for damn sure wasn't going to be smart and stop playing with her. Even when I considered it, I didn't feel like doing that. She was so fun, and funny too. I got my phone out to send her a silly command, specifically to put her ears back on and send me a picture when she got home, smiling while I did. And I stayed in the dungeon, my little inner sanctuary. I just didn't think too much about the fact that I was never going to have her in that area. It wasn't going to happen because it didn't go well, but I could fantasize and dream.\n\nAnd I could send her playful commands all week before our next date. Because that was just fun.\n\nWhat else was fun? Masturbating to the memory of how she arched and spread herself wider for me to have better use of her. And the memory of her saying she wanted more and harder and the way I could feel how badly she wanted all those things.\n\n\u2014\u2014\u2014\u2014\n\n\"Hello, kitten.\" When I met her outside of Sulfur's, it felt easy and light and her face lit up with excitement when she looked at me. She was far less shy and afraid now that she'd been in and played and survived, too. It gave me a lot more sexual pride than it should have. Brave little puppy girl. This time, I had commanded her to wear jeans and a T-shirt and I thrilled to the sight of her obedience.\n\n\"Hello, Aramis.\"\n\nAnd that. Thank God we were back to flirting. I missed it from her, but I still flinched and rolled my eyes at the name. \"Dear lord, it's a good thing I meet you at a place where you have to call me sir. Literally the worst name ever. Come on.\"\n\nI took her hand and guided her inside, since she still had to have me to take responsibility for her, and she laughed. Her eyes went to the Saint Andrew's cross in the doorway again, though, and she shivered at the sight. I had to grin at it because she really seemed to like the crosses. Of course, it had occurred to me later that that had been her first sight of more intense fetish furniture, so naturally she would thrill to it. At the end of the night, I needed to let her touch some whips and toys so she could feel them and I could watch her eyes light up some more.\n\nI gave my card to Brian, who waved at Hunter behind me. \"Back again, huh?\"\n\n\"Yes!\" She said it like she was proud of herself and she should have that pride. It took some courage to chase fringe desires. She'd been lapping my silly text commands up like candy, eager for another round though.\n\nAs for me, I tried to not think about the fact that I fully intended to give us both what we wanted and to show her a little more intensity. \"Okay.\" I caught her inside the door again. \"Do you still want to play the same as before, with sex?\" I still had to lift her chin so that she'd meet my gaze, though, and I loved her for that. She was brave enough to walk in the door and still shy enough to cower. The sadist in me adored the sight of her cowering.\n\n\"Yes, sir.\" She said it eagerly. \"Yes, please, sir.\"\n\nI grinned. \"Okay, and do you still want a little more? Slightly rougher, I mean?\"\n\n\"Yes!\" Now that was emphatically said, and I had to laugh.\n\nGod, she was a joy. She was eager to play and adventurously down for anything, now that I'd opened the floodgates to possibilities. It caught me up in the firestorm of fun she had, all that submissive energy just waiting to be tapped and encouraged. \"Okay. Last question again. Do you want private or do you want out in the open?\"\n\nHer answer would haunt me for a while because she said it with clear eyes, and she meant it. \"I want to please you and do what you want.\"\n\nGod. Just... God. \"Those are brave and dangerous words, kitten, especially when I know what fantasies you have.\" But she only grinned wider at my warning.\n\n\"That is definitely a good thing. My fantasies are pretty hot.\"\n\nI had to laugh at that because they were and she was already getting bold enough to say it. \"Alright. Same rules as before then. Well, same rule. Just play the game. Wait here while I get a key.\"\n\nI loved Sulfur's for the reason that the owner, Ash, had let his creativity run as rampant as he liked with making these rooms. There was the one I had taken her to before, which was an office or teacher setup, because everyone loved a little role play. I had almost not blinded her for that one so she could see the scenery and the whole twisted setup, but she'd been so shy that I thought being blind might help her play better. It was sometimes easier to do it when you couldn't see the other person, at least as a bottom.",
        "This time, though, I didn't want her blind. I got the key from Brian and this room was so much fun that it'd just be a damn sin to cover her eyes from it. She took my hand when I went back to her and I led her to the room, this one with the number 3 on it. \"Ready?\"\n\nShe nodded, wickedly playful, sinfully taunting. And for a moment, I paused. Because I realized that my intentions of staying totally playful on this date were already fucked. And it was too late to back out then, so I decided that the pretenses could go to hell. I wanted to be wicked and she wanted me to be wicked.\n\nAnd I hadn't gotten to see enough of her the last time. So I opened the door of the medical room and told myself to stop stressing about stupid shit.\n\nHer eyes went wide with excitement when she walked inside, a delicious amount of fear sending a shiver through her body. We weren't playing dress up for these games, but she blushed so easily and delightfully that it was a joy. I closed the door and locked it so I could have her to myself. And I placed a hand on the small of her back because I'd also discovered that touch helped her a lot. \"Hello Hunter. I think you already talked to your teacher about why you're here.\"\n\nAnd that. We'd talked a lot more after I had played with her and I had learned that Hunter loved porn, and she specifically loved porn stories that were blatantly heading in the direction of fun. She had loved my thing, dumb as it was. She swallowed and paused to think for a moment, but when she answered she was totally with it, absolutely together. \"Y-yes, sir. He said I... I have trouble focusing.\"\n\nI wanted to laugh because I could already see her trying to quell her smiles. Instead, I spoke in a stern voice. \"Don't be shy, Hunter. He had you come to me after hours and we both know why. Because you're too sexually aroused to think straight afterwards.\"\n\nAlright, I hadn't thought this one through to give it any realism. I only knew what I wanted to do to her physically, what I had masturbated like hell to, and never made it past that. Don't judge me. No one makes it past that part of the porn story, alright? And lucky for me, she had seen a lot of porn to make up the rest. \"Yes, sir. He said I should c-come to you if I was serious about showing my apology.\"\n\nFuck me. The doctor was in on the coercion shit the whole time. Why hadn't I thought of that? Also, who else could be in on it? Maybe I could get one of the Dommes to play a secretary and make Hunter eat her pussy. It was brilliant. \"But it's up to me to decide if you're actually serious, so I would behave yourself, if I were you. Understood?\"\n\n\"Oh! Yes. Yes, sir. I understand.\"\n\n\"Good girl.\" And that. Even in a game, she shuddered just to those words and I adored her for it. \"Strip your clothes off and go lay on the table for me.\"\n\nI saw the ghost of a grin before she managed to get it under control. \"Oh! But sir, are you sure-\"\n\n\"Yes. I'm sure, Miss Gates.\" She nearly lost herself to a giggle when I said her name like that. \"Unless you're not serious about proving that you want to keep your T.A. position with such a kind professor.\"\n\n\"Oh, no, sir. I mean- yes, sir, I'm serious. I'll be good.\" She took a breath and collected herself, lifting her shirt over her head while I circled to see her and this part wasn't acting.\n\nI hadn't gotten to see much of her during our last game and most of the time I saw her, she wore work clothes. During the last date I had gotten the pleasure of seeing her wear a cute little black dress and sandals. She matched herself well, although she definitely had the appearance of someone who came from a marine father and didn't have a lot of dress clothes. I don't say that to make her sound tacky or anything. Don't get the wrong idea. I say that because it was impressive how downright sweet she looked when she tried, how there was definitely a brave female hiding beneath all of what her family had made her ashamed of.\n\nAnd I say that so that the next part will make sense. She had been cute with that dress and even cuter with her jeans and a shirt. But when she tugged her clothes off? She was a doll. I felt like I got past all of that shame she'd been taught and into something that I found wonderful. When she stripped, I felt like that was the most real version of her. Not her outfits to please others, even me. Just her.\n\nShe was fit for her stature. Musculature stood out across her shoulders, in a way that some guys might not have liked. I knew it was something that made her self conscious, but for me? It spoke of someone who could handle how rough I was and it soothed me in the strangest way, even while I thought it was hot as all hell. Her abs were cut from where her marine corps family had emphasized fitness and her face was a sweet Anna Kendrick appearance, if that gives an idea. \n\nAnd at the moment she was playing my game. She folded her clothes to the side and went to lay on the table, looking up at me with shy nervousness that wasn't entirely acting. \"I can be serious, sir. I promise.\"\n\n\"I'm starting to believe you, but we'll see in a moment.\" I got a pair of black talc gloves, because it'd turn her and I both on to feel those, and then I got restraints for her wrists and ankles.\n\n\"S-sir? What are those f-for?\"\n\nNow that was partially acting and partially her wanting to hear me taunt her. I smiled wickedly. \"To hold you still, for when I open your pussy up to see what it takes to satisfy you until you can focus again.\"\n\nShe whimpered when I grabbed one wrist in a gloved hand. \"Oh, please. Oh, my God.\"\n\n\"Hush. You want to be a good T.A., don't you? I've heard you do have such promise.\" I worked through the restraints, tethering her arms to the sides and her thighs wide apart.\n\n\"Oh yes, sir. I'm scared, sir.\"\n\n\"Just relax. You can take what I give you and we'll go slowly. We'll start easy.\" I smiled above her when she was tied down, feeling feral at the sight of her helpless and at my mercy.\n\nAnd this was where the game was going to disappear into something hotter, something darker. I had only played with her the one other time, but I had already learned when things would warp down that deviant path, where we would start going to something less playful and more... sinful. Part of me had wanted to fight that moment, had wanted to keep things light instead of imagining her bowing to serve me in every fucking way I asked. But with her restrained and staring up at me with such excited fear? I couldn't remember that part of me.\n\nAll I felt was exhilaration and greed. \"Your teacher also told me that you started being far more horny for him. We're just going to see how far we have to go before we can satisfy you and make you focus again.\" I stroked one gloved fingertip of my right hand across her bared breasts and she moaned, arching to my touch. So I smiled and traced my hand lower, trailed it across her hip bone where it was bared. I watched her shiver when I touched the start of that shaved triangle that once would have been her pubic hair. And then I went down to her clit.\n\nShe arched in her restraints, shaking, so eager at just the slightest touches of domination after she had craved it for so long. I had discovered that as well, that she had burned for some form of submission in such desperation that even the slightest things, like light spankings and blindfolding or a single use of light restraints made her squeal. It was beautiful. She gave me the sweetest cry when I thrust a finger inside of her, lifting and struggling.\n\nAnd I felt wild adrenaline at the sight of her fighting my restraints. \"Such a horny little slut you are. He did warn me that you might need something harsher to help you concentrate, as his punishments only seemed to make you hotter. Is that true, Hunter? And you should always be honest with your doctor, before you think of lying to me.\"\n\n\"Yes, sir! Oh, yes, it's true.\" She shook, wildly aroused, and I fit another finger inside of her.\n\n\"Good girl. Honesty is always to be rewarded with what you ask for and, well, I do approve of giving harsher.\" She trembled when I filled her with yet another finger.\n\n\"Oh. Oh! Oh, please...\" She rose in a dance, thrusting her hips, sexily straining against the cuffs I had placed around her thighs. \"Oh yes. Oh my God.\"\n\n\"I think we might need lubricant for the rest.\"\n\nHer eyes snapped open while I got it from the cabinet at the side. \"The rest? No, wait, you can't mean-!\" But she cut off when I coated my gloved fingers in lubricant.\n\nAll of them. \"Quiet. Just relax.\"\n\nHer head fell back and she moaned so desperately that I wanted to fuck the hell out of her right then. Instead, I pressed four fingers into her tight little slit, stretching it and coating her walls with the lubricant. \"Take what I give you, there's a good little girl.\" Her nipples were so hard and not from cold. God, I needed to get jewelry for those, something to stimulate her even more, to make her go wild while I could watch. I thumbed her clit and she squealed at the feel of so much lubrication.\n\n\"Oh my God! Please! Please, it won't fit.\"\n\nAnd there wasn't anymore acting. She stared up at me with such erotic panic, even when she was so far away from saying that safeword, that it was hot as fuck. \"It will fit. Stop trying to be so coy when I already know how horny this little hole is. Just relax, open up, and take what I give you.\" God, she was so wet. If we'd been doing something vanilla, she was probably right and I wouldn't have fit.\n\nBut this wasn't vanilla and she was so fucking drenched that it made me a little crazy with the smell. I lowered my thumb and pressed it to her entrance, standing over her while she shouted and shuddered in filthiest need. I filled her with my fingertips and she arched, crying out. \"Oh, please!\"\n\n\"I said to relax and be a good fucking girl, Hunter.\" I met resistance at my knuckles, her tight little hole fighting me. \"You're not showing me how good and serious you can be. Relax.\"\n\nShe trembled and closed her eyes, whimpering. And it took her a minute to relax her body, especially with me pumping her. She was tight with her need, so she really had to work to breathe and I felt it when she managed to calm. Her little hole opened just enough, even while she shook. I braced my other hand on the table over her head and thrust my fist inside of her.\n\nShe shouted, eyes snapping wide to meet mine, and she was a feral animal. God. Just, God, it was fucking beautiful. \"Oh, please, sir! Please, I can't stop.\"\n\nBut I already knew. With my fist inside of her, gloved or not, I could already feel the way she pulsed. She squealed in orgasm around me, riding out waves of pleasure, and she relaxed even further at the end of it, enough for me to close my fingers and make a real fist. My knuckles brushed her cervix and her eyes rolled in hot pleasure. \"Look at me. Open your eyes and fucking look at me.\"\n\nShe did. She opened them again and stared up into mine, panting with pleasure, choking on it. \"It's so good. It's so good...\"\n\nAnd there was no game anymore, not for either of us. I couldn't even think of the fact that we were in a medical room. All I could think of was the fire in her gaze and the way it was glazed over with submission. She wasn't struggling my restraints anymore. She was spread in them, laid back the way I wanted her to be. Her hair was tousled where she arched to my fisting and her tits bounced with every thrust of her hips, as if to taunt me with the motion. I worked my hand in a circular motion and she lifted with a cry, tightening on me like a velvet vice. Even with the glove I could feel every quiver of her hot channel, could feel every tremble, every clench of pleasure. \"That's it. You take what I give you. Such a hot, needy cunt you have. A fisting and you're still not satiated? Poor thing. It's no wonder you can't focus, no wonder you have to resort to such slutty stories when this little pussy is so needy.\" I growled when she whined and lowered myself, using my free hand to tilt her head back so I could give her the most violent kiss I'd ever given. I twisted my fist to make her cry into my mouth so I could drink it, biting her lip to make her lift in her restraints from the most delicious pain. \"Watch it.\" I pulled back, so I could grab her by the back of her head, and I pulled her forward, lubricant and cum messing all in her hair. \"Watch my fist fuck you.\"\n\nShe did. She stared down between her legs while I thrust harder, brutalizing her. She drank in the sight while I held her forward, watching as my wrist disappeared between her legs over and over. \"See it? See how desperate this little pussy is? See how badly it needed to be satisfied and opened? And I know you've realized by now how much you need punishment, kitten.\"\n\nHer eyes stayed transfixed when she answered, as if she was too horny by the sight to look away. \"Yes, sir. Yes, sir, you're right. Thank you for filling my pussy up.\"\n\n\"You're welcome, pretty kitten. You can't neglect a little hole like this one for so long, not when it needs such hot domination. And it does need such hot domination, doesn't it?\" I smiled down at her, horny for her.\n\n\"Oh, yes, sir. Oh, my God! Please!\" She squealed suddenly and her cries didn't stop, as if she couldn't handle it anymore and the arousal became too much. Her cheeks went flushed and her pussy suddenly gripped me, tightening with another orgasm, so intense that it made me growl. Her eyes rolled up and fluttered closed and she pant like an animal. I tightened my hand in her hair and kissed her again, snarling, almost scared I was going to fucking injure her. But my bite was gentle and she moaned all the harder for it.\n\nShe fell back and whimpered up at me and her eyes were dazed, but they were so submissive too. In the wake of such heat, there was no more of her shame, no more of her anxiety, no more of her worries. I smiled at her, wickedly, knowing I could do whatever I damn well wanted to her now. I took my hand gently away and she shivered with the overstimulation and then she moaned when I held it up to her face so she could see all of her arousal on me. \"You smell so fucking hot, kitten. Why don't you lick some of the lubricant and cum off my hand?\"\n\nShe moaned. But she lifted, weakly, and licked at my knuckles. When she inhaled, her nostrils flared and she shuddered to the scent of her own arousal. And she made soft whimpers when she licked off the mess from my gloves. And God, it was a mess. She had creamed all over me with the feeling of being so widely, painfully, stretched, of being so thoroughly fucked open. Her head fell back against the medical chair and she opened her eyes to watch me, still subjugated with sexual satisfaction. \"Good girl. I'm not quite done with you yet, but for the rest all you need to do is lay still and take it. Here. I'll even be kind and blind you.\"\n\n\"Thank you, sir.\" She whispered it when I tied the fabric blindfold around her eyes.\n\n\"Such a sweet girl. Just for your lovely cooperation, I'll give you a choice. Mouth or asshole?\"\n\nShe moaned and I was sure I already knew the answer. But she shocked the hell out of me when she breathed, \"Asshole, please.\"\n\n\"We'll see, sweetheart.\" God, it took restraint to not just instantly take her up on that offer, but I wanted to show her more, wanted to take her deeper.\n\nSo I went to my duffel bag and got the soft flogger from it. It wasn't a pain toy, wasn't a harsh toy, because I wanted this to be gentle pain. I didn't want her struggling to get away from this. I wanted the soft impact sensation that would make her fly so high that she'd never want to come down.\n\n\u2014\u2014\u2014\u2014\n\nHunter\n\nIt felt like floating. There was this strange mental place where everything just disappeared. No anxiety, no problems, no decisions, no school shit, no overthinking. There was only me and him and behind the blindfold, I could let go. I trusted him enough to be in that headspace and I could just let him have me. That special state where I was a plaything for someone else's pleasure was starting to be my most favorite way to be. I was fucking good at it, like crazy good at it, for a start. All of those moments where I cowered under the gaze of some angry stranger, like a professor at school, and tried to make them approve of me again? It all felt like practice just leading up to this, where someone would finally give me that approval, and it felt so insanely good.\n\nI lay still when the tails of the flogger trailed up my torso, didn't even tremble like I had before. Instead, I just relaxed. \"Good girl.\" His voice was soft above me and so approving. \"Just take what I give you like you took my fisting.\" I did shiver at those words because holy fuck, his fist, but then the flogger fell and I calmed again.\n\nIt wasn't painful, not at all like when he'd spanked me. No, it was too light of a sensation for that and he stroked the tails over my breasts to start with, leaving the most delicious sting in the wake. It felt like my skin should be glowing, the way sensation rushed to the surface. I had always written intense moments that had a lot of pain in them, but suddenly knew that I was neglecting a different facet. This wasn't as painful, no, but it was definitely intense. He paused his flogging to scrape his nails up the sides of my breast and I moaned, lifting to the feel. Everything felt tender, heated, swollen. He went back to his flogging and the rhythm made me picture a figure 8, like I had seen from my first night here. I sank deeper into his control, loving him for bringing me to this place and showing me this.\n\nI lifted again, with a cry that sounded distant, when he struck the flogger up between my legs. He went to my thighs, heating them with the tails, working me over. I shuddered from that and the residual sensations from his fisting.\n\nFloating. Maybe it was more like falling forever. It was bliss, pure pleasure. And he didn't flog me for long because he seemed to know that he didn't need to. No, it didn't take a long time at all before I was exactly in a place of perfect headspace. I mewled and whimpered up at him and my senses felt crazily heightened where he was concerned. I could hear his breaths and each one only made me horny all over again. I could hear his footsteps where he paced around me. And the sound of his voice when he gave me approval? That was the best sound in the world in that state.\n\nI whimpered when he unchained my wrist cuffs but he was only repositioning me. \"On your hands and knees. I want to fuck your ass this time and you're going to let me, understood?\"\n\n\"Yes, sir.\" The words practically fell from me, the most natural words for me to say in that state. I rolled over on my hands and knees and lowered my head at his touch so that I was bowed at an angle on the table, lifted and offered up for use again. When he grabbed my hands, I moved like liquid under his touch, letting him tether my cuffs behind me at the small of my back. I moaned when he dripped lubricant onto my asshole, then gave a cry when he thrust a finger inside of me, pressing deep. Every sound was strange, too. Even the sound of the foil ripping from the condom made me shudder, made me aware of my sensitive tits and thighs, of the way he had slapped the flogger between my legs.\n\nIf the last time had been a frantic fuck, this was slower, almost a steady build of sensation after he'd obliterated all my sensibilities with a fisting. Well, it started like that anyway. He pressed the tip of his cock against my asshole and I cried out again before he even started. I couldn't help but arch with a little bit of panic, but he grabbed me by my cuffs and shoved my wrists up my back and there was nowhere to go. I was trapped beneath him again, shaking and shivering with both desire and fear. At first, his press turned to pain and my shaking grew harder. But he was relentless, growling above me in heated satisfaction. I whined for more, trying to process the feeling and the more he pressed inside of me, the more the initial pain registered as something else.",
        "And that something else started to turn into deep, crazed submission and frantic, tortured pleasure. Oh, my God. Oh, my God. Just... I couldn't think and I didn't want to think. I had played with toys in my ass, to get off harder, but they were always gentle experiences. This was somehow gentle... but not at all. He pressed without pause, stretching me like he'd stretched my pussy open. How was this better than when he fucked me before? How did his cock in my ass instantly feel ten times more intense than him in my cunt? That was backwards as fuck and yet... \"Please! Sir, please!\"\n\nHe hissed at the sound and suddenly he could go no further. He bottomed out, seated inside me, while all I could do was shake beneath him and accept this wild energy that needed release. I was getting more riled by the second again. \"Such a good fucking girl you are. Ready to cum again for me soon? God, I can feel when you fucking breathe, you're that tight.\" Me? I could feel when he fucking pulsed, he was that big!\n\n\"Oh yes, sir! Yes, please, sir.\"\n\nHe withdrew and thrust and I clenched my fists behind me, whining. And he reacted to it. It was amazing, that he didn't just like my energy, that he practically fed on it and then sent his own dark domination back to me. His sounds behind me set me off too. They were feral growls, soft snarls of desire that made me drip, even though he wasn't touching my cunt at all. He took such careless use of my asshole that it went straight to my headspace, like a shot of whiskey.\n\nI moaned and dipped my back to open up further for him and he responded with a hiss of approval. I loved him a little for how he was because he always started gently, slowly, as if he fully intended to calmly dominate and then, as the intensity built, he lost himself to the pleasure he took on my body. And that was wonderful. It let me know how much I pleased him, how much he enjoyed me, and that was all the aphrodisiac I needed in life.\n\nMy cries turned wild, greedy. I never wanted him to use another hole, not when I knew that this level of heat existed. The friction alone was enough to make me crazed, but the subspace pleasure made everything disappear. I drifted, even while my body felt more alive than ever. The orgasm built like a tidal wave and I trembled and he lifted his foot up to brace on the side of the medical table behind me, a step that I heard that made the angle deeper. His thrusts turned into a piston's rhythm.\n\n\"Oh my God!\" I squealed it, fists clenching in my cuffs and came in a frenzy, humping up and down with no rhythm of my own, nothing but desperation. \"Fuck, fuck, fuck, fuck... fuck!\" He didn't even touch my clit or my pussy. My asshole pulsed from that stimulation alone and I shook, sobbing out helplessly.\n\nHe groaned suddenly, banging out his own orgasm, and I whimpered, going still while he finished, satisfaction filling me that he would find his own release in my passion, that it had pleased him. I fell still on the table, shivering. Every thrill of aftershock made my asshole pulse around his cock and my tortured, gaping pussy spasmed in a manner I thought must have been obscene. \"Holy hell, Hunter.\" He withdrew gently and then chuckled when I shivered with uncertain ecstasy. \"Easy.\" He stroked my back, but he didn't reach to undo my cuffs just yet. Instead, he pet me and soothed me. I heard him throw away the condom and then he seemed to either stand or sit by the side of my head. I didn't know and didn't care if he dressed, if he was sitting or not, because I felt his hand on my hair and his voice was above me and he was whispering how much of a good girl I was. I only had one concern that came to immediate mind.\n\n\"Are you comfortable?\"\n\nThere was a smile in his answer. \"Yes, kitten. Just relax and come back to me.\"\n\nI did that, wondering if it was possible to come back to myself too. I felt changed from the inside out, but I didn't care because it felt so good.\n\n\u2014\u2014\u2014\u2014\n\nShane\n\nShe stayed on her hands and knees for a long time while I sat in the play medical chair by her side. She was still blindfolded, still with her ass up, still cuffed. And I held those cuffs steady while I pet her, remembering the intensity from before, the confusion while she processed her own beautiful submission. And it had been beautiful submission. Her words when I sat beside her made me shiver. Are you comfortable? I knew why she asked. She knew that she was weak at the moment and that it was my job to take care of her. She had pieced that together. And yet she'd wondered if I was neglecting my own comfort to take care of her. Ridiculous sub. If I'd had to stand for hours by her side while she calmed, I would have. She had this quality about her, this perfect submission, that drew me in. It almost made me feel like a storybook monster, a vampire or something, that never had any intention of feeding on her and then couldn't help itself once it had her bowing. It was something in the way she so totally threw away all shyness, in favor of such complete submissive energy. Everything she did, literally every action, came from a place to give me more. She curved lower on her face to let me fuck her ass harder. Without realizing it, she lifted her own wrists up her back to increase her helplessness to me. When I'd fisted her, she had spread her legs wider when it started to hurt, and that one had amazed me. I had seen the pain cross her face and every other creature had the instinct to close off and block from pain, but her instinct had been to allow me more, to give to me. It was as if she knew I was the only one who could give her what she needed, something that was even more than her body needed to stop the pain.\n\nI hadn't gone into deeper impact play yet, like the belts or the canes, because I was scared. I didn't think she'd use her safeword, no matter how bad I hurt her. And I didn't know her pain tolerance because I hadn't started in much on that play. Maybe the next scene I could start with something easy, like a light strap, and see what kind of reactions she gave. If she gave me obvious signs of pain, then I would have some kind of gauge to start with. And then maybe I could work to fulfilling more of her submissive needs. And I would give her commands through the week to keep my headspace of control and dominance...\n\nI flinched at the last thought. I was getting involved too much and that wasn't good. I would have to find other ways to keep my own space. If I started down the control continuum, I would end in a place that I had already been before and it hadn't ended well. Hunter was submissive in our scenes, but we weren't even dating. We were playing, having fun. We couldn't go down that darker road. So no. I would back off the control, stay to fun things like telling her how to wear her hair or dog ears. No relationships. Relationships were too serious with me and it ruined things.\n\n\"How are we doing?\" I asked softly. I still sat beside her, still stroked her hair, contemplating all of these things, like an idiot, while she was still under me and in my care. With her still breathing so calmly, with her still lifted in offering, all I wanted was to command her outfits all fucking week and watch her obedience when it felt like bliss. When other people would stare at her in interest, I wouldn't feel jealousy then. I would feel pride and possession. There was never any jealousy in my heart when I commanded like that, only pleasure and only the desire to fulfill.\n\n\"Good, sir. I'm sorry. I don't know why this happens.\" She laughed shakily. \"This wasn't something in the stories.\"\n\nI smiled, deciding that she was back enough to have her hands back. \"It's different for everyone, kitten. Don't be so hard on yourself. Sometimes submission is a place and mindset that can run very deep for some people. For some players here, it's a stress release and they don't need a bit of aftercare. They know exactly why they're here and why they're doing this and they know the selfish intent in it. For others, sometimes submission has to be a selfless feeling for it to work. Sometimes, they need to focus absolutely on the need to please someone else and forget the selfish reasons. And then it's a little difficult to come back to reality. You seem more inclined to that one. I've found that that mindset comes with more intensity and needs more time to come back from. Does that make sense?\"\n\nShe lowered her hands to her side when she had them again, laying more comfortably on the table. \"Yes, sir. That makes sense.\" She hesitated and then softly asked. \"Do you prefer my asshole or my pussy?\"\n\nI laughed at that. \"I like both. What makes you ask?\"\n\n\"I think you like my asshole more because I had the thought that I liked my asshole more and... and I think maybe I only have those thoughts when it's something my body reads you enjoying more.\"\n\nThat was... perceptive. It was also something I thought likely. \"It would depend on the scenario, kitten, but if either were easily accessible, I would prefer anal sex more. It's nearly impossible to fuck a submissive that way without sending her straight into darkest subspace. It's more intense, allows for more control. Many reasons. But I think between the two times, you might have read that in me, yes.\"\n\nShe curled up on the table, snuggling closer to where she heard my voice, since she was still blinded. \"Is submission always like this?\"\n\n\"I've found that it's really like any other physical relationship, in that it's different between every couple. If you were to sub to another Dom, it wouldn't feel the same. Now, it would feel just as intense for you, but the overall emotional charge would have differences. Would you like to try it with another Dom?\" Right on the heels of that offer was a different consideration.\n\nWhere would I find a Dom that I could trust with her, when her submission was so deep? To my relief, she shook her head almost instantly, but then she followed that with words that made my chest hurt. \"No, thank you, sir. I'd rather keep playing with you. I trust you.\"\n\nShit. The way that made me feel? I tried to ignore it. \"I'm glad, kitten. I enjoy our games and I'd like to keep going with them too.\" I tugged her blindfold off and she blinked at me, her guileless eyes holding mine while I stroked the pink stripe in her hair. \"Here. The way you looked at the whip in the entrance made me think of something.\" I lifted the flogger that I had used. \"I brought some toys for you to hold so you could feel them.\"\n\nThat brought her back to me even more. She grinned and took the handle, stroking the tails of the soft flogger. \"This didn't feel at all like what I imagined it to. I thought it would hurt more.\"\n\nI laughed. \"Most of them do, actually. That's a sensation play toy. There are harder ones that you can use for light playtimes. I always prefer to use the flogger as a primer toy before switching to a heavier impact one. It brings the blood to the surface and makes the sensations more intense.\"\n\n\"Now that's something I did notice.\" She was grinning too and I stroked her shoulder, kind of not wanting her to come all the way back up from her subspace, kind of wanting her to keep some of it with her always.\n\n\"For that reason, I use light floggers. That way I can use the harder toys for longer.\"\n\nHer eyes lit up. \"Will you show me sometime?\"\n\n\"I was just thinking of a way to do something like that. We'll have to start easy since we're still getting to know each other, but we certainly can, kitten.\"\n\n\"Will you keep using me like you like? You don't really have to give me so many choices, too. You can do what you like for all of it, honest! Please, I want to please you.\"\n\nGod. That's what I was scared of. She gave over so completely already. I stroked her back, thinking to tell her that it pleased me for her to have more input. If I was smart, that's what I would have said. That's not what came out. \"Alright, kitten. I won't ask anymore. We'll just play.\"\n\nShit. I trust you. Damn it. I needed to get some space and clear my head a little.\n\nBut not yet. I wanted some more of her, burned for some more of her.\n\n\u2014\u2014\u2014\u2014\n\nHunter\n\nWe set our date for a week later, when we could both meet up, and there were a few events that happened that week in the interim, both of which taught me a few things about myself. He was giving me playful commands during the days still and I was having to work to keep my focus on school. I would flirtatiously message him and tell him I needed the doctor's physical again, tell him I couldn't concentrate. To which he would always send back something equally playful, or he'd be wickedly laughing when I saw him at night. He commanded me to wear my ears during school one day. He commanded me to wear a skirt another, so I could feel cum rubbing between my thighs and could be reminded how I needed a fucking to help me focus. We flirted relentlessly and it was a joy.\n\nSometime midweek he was flirting with me again and he got in late, but this time he wasn't alone. He had another girl with him and it was a fascinating event. She was obviously shitty drunk and she leaned against his side, while he glanced at her with a look that had none of his dominance in it. He waved casually to me and introduced me, even though she didn't even notice, and I played my part as the worker because that's what I was. But the interesting bit was my own internal reaction.\n\nJealousy would make sense, wouldn't it? It wouldn't make good sense, but it would make sense. Despite the fact that I was regularly subbing for this man, we hadn't established any kind of relationship. But we shared pretty intense moments. So it would have been an understandable emotion, one that would hurt like hell, but one I would expect from my younger mind.\n\nAs it was, when he walked away, I didn't feel that. I shivered for a moment, shocked at what I did feel. After a couple of moments of staring blankly at the table, I picked up my tablet and started to write, unsure of quite what the story would be, only knowing the concept I wanted to express.\n\nLife as a pleasure slave was not always what I might have expected it to be, but I fast found that I didn't mind that fact. When my Master first told me that he would still date, for instance, I had been... wary. I was not necessarily afraid, but I was braced for my emotions.\n\nThey hadn't been at all what I thought them to be. I had been waiting for painful emotions like jealousy... not white hot arousal. Not sheer delight at being so obviously made to serve. He used me as he wished, for pleasure.\n\nThe first time was something I'd never forget. He had chained me in his dungeon, tethered me to bolts in the floor and, while the chains were heavy iron, they had a lot of room for me to comfortably move. And I had been blindfolded. The thick collar around my neck wasn't restricted by any tethers, unlike the manacles around my wrists and ankles, but it was noticeable. And he had left me there while he went on a date with a coworker. At first, that setup felt awful because the precedent being set hadn't been completed yet. But I had learned to trust my master by then and I held to that trust.\n\nAnd he did set the precedent. He returned to me hours later and I jumped when I heard the dungeon door, having fallen already into a semi submissive headspace from the gear he used. When he gently stroked a hand through my hair, I tumbled fully into the headspace and waited on my knees for whatever came next. And he didn't waste time. \"Open up.\" His voice was soft, gentle as his touch. Don't get the idea that my Master was a cruel person or someone who took the service of a slave for granted, or even lightly. Not at all.\n\nAnd he made that clear to me when he lifted my face, thrusting his cock between my lips when they automatically opened. It wasn't so much the action as the way he did it. He moaned above my head, letting me hear his pleasure, knowing I thrilled to that sound more than any other sound. I loved to serve him. And suddenly it sank in quite what had happened.\n\nHe had gone on a date. And he was using me afterwards for more of my service. My pussy pulsed, suddenly feeling so very empty and craving to be filled by him. I arched and whined, thrusting my mouth forward and taking him deeper than I ever had. He had trained me well for pleasure and yet now I was... exceptional. I lifted in desire in the way that would heighten his arousal. I thrust my tits in the way he would enjoy. I opened my thighs to show my availability in the way that made him more of my Master.\n\nHis growl over me was nearly a choke when he finally came in my mouth and I had the satisfaction of having served him well. What was more, I felt that pleasure in an even deeper way than I ever had before. Whatever submission had pulsed through me had clearly been fed back to him, so that our dance felt more intense than ever. I looked up at him when he removed my blindfold and he was as beautiful as ever, with his blonde hair and blue eyes. And those eyes pierced after that moment. Those eyes made my pussy drip.\n\nBut my asshole also tensed because he never used my pussy anymore. He far preferred my more painful hole, to reiterate my service slavery. \"Good evening, Master.\" I said it respectfully, smiling up at him in welcome.\n\nAnd he smiled back. \"Good evening, kitten. That was wonderful.\"\n\nAnd that. He always praised me to let me know when I had done well. \"Thank you, Master. Did you have fun?\"\n\n\"I did. But I won't being seeing her again. She wanted something a little different than I did.\"\n\n\"I'm sorry to hear that, Master.\" And I was. I nuzzled him, wondering what he was looking for in these pastimes of his.\n\nI went on to write a story about a girl in service and how she started to realize that her master wasn't looking for anything in his dates. I wrote how he went on them because he realized how they affected his slave's mindset. I wrote about how she learned that he wished for a total service slave in that manner, how she was being conditioned with those dates to always keep that mindset for him. I wrote scenes where the master brought home some of the dates and allowed them use of his slave, who learned how to eat pussy under his hand. I considered my emotions and wrote the ideas of a slave being trained and taught, of what kind of mindset would have to be open to that training. I wrote about the special feeling of submission and the need for my partner to finish even over my own desire for finish. I wrote and revised, hurrying through it, trying to calm myself to enough patience to properly edit. Because I didn't want to give shitty writing in something like that. And I wasn't entirely sure why I was even so eager to post it because I didn't reference The Stand and it wasn't part of a game with him.\n\nThis was something closer to my heart and I only knew that it needed to be shared, that I needed someone to understand. There were different reasons and types of submission and this was something somewhat close to my own. I knew that from the way I had felt no jealousy, had only felt wild heat in my abdomen. That hadn't been his game or intent, I knew that. It hadn't been a game at all, but the potential for that game had made my fantasies start working. It was only after I posted it that I considered the possibility of him reading it and then I flinched, worried, and I hoped he wouldn't take it the wrong way. I hoped he wouldn't take it to mean that I was obsessing over him or anything like that because I wasn't exactly. I was more curious about how these feelings in myself shaped my inner submissive, curious as to how those feelings fit with the intensity I felt during scenes. I forced myself to leave it up, thinking that I would just explain myself if he needed clarifying.\n\nTwo days later it finished posting and, during the day, I got the phone call for the next event that was strange.",
        "I had two nights off in a row that time and the next night was when I was supposed to meet him, so he knew my schedule. We had to speak of it in order to plan our dates. I went to night classes, having grown used to being a night owl. But when I had days off together I didn't sleep much during them, instead twisting my sleep schedule for some daytime. So I was awake when he called. And I blinked at my phone where I sat in my apartment, reading one of my textbooks, so stunned that it had to ring again before I answered it. My heart thundered at the thought of hearing his voice on a phone call. \"H-hello, sir?\"\n\n\"Hello, kitten.\" His answer was soft, but there was something serious underlying it. \"You have time before your classes?\"\n\n\"Yes. Hours. I don't have to be to the first one until 5 and the next is at 7.\"\n\n\"Good. I'm going to send you an address. Will you go to it?\"\n\nAn address? For what? But I didn't ask that. Instead, I smiled. \"Yes, sir. Send it to me.\"\n\n\"Okay. Wear a dress. No collar, no ears.\" And that was it. He hung up and sent me the location.\n\nIt turned out to be a hotel when I looked up the address. I took the subway to get there and showed up in what he had commanded, my heart going haywire. A hotel? What was this, exactly? Was it a game of some kind? But he hadn't told me the command that went with a game. And he always spoke that special command. I turned a little more nervous as I approached the door because I wasn't even sure what I was supposed to do there. All I had was an address and what to wear and it was a ritzy hotel too, part of a high end franchise, and with hundreds of rooms.\n\nHe met me in the lobby, though, and he gave me a smile, but it wasn't his playful smile I was used to and there was something serious in his eyes. Was this because of the story? Had I messed up? I really hoped not because he was satisfying some pretty deep needs within myself, and I had never meant to ruin our light games with talk or thoughts of a serious relationship. \"Hello, sir.\"\n\n\"Hello, kitten. Come with me.\" He took my hand and that was all he said, for the time being. He guided me through the well kept lobby, past different check in desks for different tiers of members. His grip on my wrist was firm, something that reminded me of his restraints. My eyes went wide when he guided me through a housekeeping door to some back offices. They went wider when he took me to his own personal office, one that was fairly sized. And when he pulled me inside, he shut the door and locked it. No one had even been around to see us walk in, but he moved with such authority that I doubted anyone would question him.\n\nEven so, I knew better than to make any sound. I was very aware that the walls here weren't part of a sex club and this wasn't a game. They weren't soundproofed and I bit my lip to be quiet, but for a moment it was hard. I wasn't expecting it when he pressed me forward over the desk, lifted my dress, and stroked his fingers between my legs. He massaged my clit through my g-string and I trembled with the effort of holding in the cries I so badly wanted to give him. The hardest part wasn't even biting against the pleasure. No, the hardest part was that I knew how much pleasure he took in hearing it, and I couldn't give him that.\n\nSo I gave it as best I could in other ways. I braced on his desk and lifted my hips, grinding my sex against his palm. He bent forward so he could whisper in my ear and his voice was pure desire. \"I want you to cum on my hand to drench this pussy. Because I don't have any lubricant, kitten. I only have a condom and I want your asshole, so you're going to give us lubricant with your horny little cunt, understood?\"\n\nI turned my head to nod, eyes wide. \"Yes, sir.\"\n\n\"Good. Not another sound. Not another word, no squeals. Be silent and take what I give you. If you can't be a good girl, then I'll stop and I'll be very displeased and dissatisfied, understood?\" He spoke in that same voice, low and intent and serious, right at my ear.\n\nI nodded frantically, refusing to even speak the words after he said that. I could deal with my own pain, but making him end when he was using me? That would have made me feel like a failure and I refused to do it.\n\nI never knew how much willpower I actually had until I was serving someone and he gave me a command like that, but I learned. It was hard when he started, crazy hard, because he knew all of the right things to do. He stroked his fingers between my legs, in commanding strokes that ruled my pleasure. I resorted to spreading my legs incredibly wide, since I couldn't make sound. And in answer, when he couldn't spank me in approval, he violently twisted my thong string around his finger and pulled so the fabric teased across my clit, rubbing me. He tormented me with assaulting sensation, teasing me through the fabric until I came from that alone. And then he pushed it aside to spear his fingers into me and I almost let loose a cry, but I managed to bite my lip instead. I arched and he responded with the most deliciously strict finger fucking. I turned my head to look back, to see his face, and he was staring at my pussy with such fervor in his eyes, evidently highly aroused by the sight of it splaying open to accommodate his penetration. His gaze snapped to mine and I felt pinned by what I saw there. His stare alone seemed to hold sentences of dirty talk that he was dying to say, yet he didn't lean forward to speak those words. He suffered the silence with me, and it somehow felt even more intense than when we did talk together.\n\nI had to turn away when he made me orgasm again, had to lift myself with my palms on the desk, had to throw my head back and open my mouth with soundless pleasure. I had to do those things because they aroused him and it was his needs that mattered for me. Words from my story rolled through my mind, words like service and use. In response to my display, he pulled his fingers from my pussy and leaned forward to shove them in my mouth instead. And I grabbed his hand to hold it closer, to take it when he thrust the digits between my lips, sucking my cum off and thrilling to the taste.\n\nHe pulled back only to undo his suit pants and fit himself with a condom and I watched silently, my eyes fixed on the cock I was intent on serving. I had been blindfolded each time he'd had it out so far, but he was large in all the best ways and he was so... masculine. Every movement was a confident one, something part of his dominance. And I was beginning to realize how complete his dominance was. I wondered if this was what had made me fantasize about him to begin with, these small mannerisms that translated to subliminal messages and let my body know what he was. I wondered right up until he walked back behind me and braced his legs, stroking his cock over my pussy lips, and then I didn't wonder anything.\n\nI really did have to work to keep from sound, then, too. I mouthed profanities of my pleasure instead and he pressed inside of me and I closed my eyes, trembling, knowing that this was only to coat himself in my cum, so he could fuck my ass instead. And it was all too short. But I didn't protest when he withdrew, didn't even shake my head against the loss. Instead, I bowed lower to the desk, lifting on my toes to offer myself up. He had made it clear which hole he preferred to use at the moment, and I wanted him to use me as he wished. I thought of his date and wondered if he'd gotten release. I wondered if they'd even done anything or if he'd gotten pleasure at all. What if he hadn't? I let myself imagine him calling me to him so he could fuck my mouth, like the story, so he could relieve himself of any tension he might have had. I considered all of that right as he pressed to my asshole and I relaxed, trying to make it easy for him. He still had to fight, since I was so tight and he hadn't done so much as finger me or have me play with a toy beforehand. He held me still with a hand on my shoulder and I worked to accept his impalement. I let the blissful pain wash over me and felt my own arousal only intensify. This was what I craved. It felt right that his use of me should hurt, so that it was more difficult for me to obey. It forced me to focus on serving him, instead of seeking my own pleasure, and that was how it should be. That was perfect and whole and my subspace wrapped me in its grip.\n\nI was still pulsating around his thick cock, my tight asshole squeezing in spasms of alarm as it tried to adjust to having such size hold it open, when he bottomed out and his thighs tapped my asscheeks. He didn't give me any time to adjust and I felt as if that was on purpose. He just started his railing me instead and, if I wasn't so focused on his commands that I was forced silent, I would have cried out for sure. But he was using me and I was focused on those commands and I bowed my head, weakly, instead. I took it when he clasped his hands around my waist and used his grip to fuck me back on his rhythm. He didn't give me a chance to meet his strokes. No, he was in the sadistic mood to just take instead and he did. He jerked me back and fucked me raw. After a moment, he paused to reach behind him, grabbed a chair, and he lifted his foot to its wooden slat the same way he'd done with the medical table, using the leverage so that he could drill me deeper and harder. God, he fucked with positions that only porn stars used and now I wanted more of those filthy ways.\n\nI came, thinking of things from videos, and had to bite my forearm, but damn it, I wouldn't cry out. I wouldn't. Not now, not when he was using me to cum. I wouldn't take relief and then fuck up, because it'd be the worst possible ending. But he didn't make it easy. He kept drilling me, for so long that my asshole stopped squeezing his cock from aftershocks and I felt myself start to climb to another orgasm. I lowered my head and forced myself to remember his command, to fall to subspace so I wouldn't fail. No sounds. I was torquing under his use though, jerking wildly with his thrusts. I used the desk to help him and I was opened completely for him, in every way. The only thing that could have made it better was if I felt weak from some pain beforehand, so I could feel even more used and abused.\n\nI arched on the table with the second orgasm, and I couldn't stop myself from reaching behind me and stroking my hand up his hair in my heat. He ripped my hand away, though, and held it behind my back, twisting it up almost painfully, restricting me. I snapped my teeth, my ass constricting him again. And still, he fucked and fucked.\n\nIt was a full two minutes after the second set of aftershocks faded that he finally inhaled above me, his own silent sound of torment, and he finished, jerking me back on him in final strokes that were not as fast, but they were the hardest yet. His fingers left dots of pain where he held me so fiercely through his orgasm.\n\nWhen he released me, I looked down and, almost dazedly, noticed the marks on my torso. His nails had clawed so hard that there were a few tiny scratches of red, and red marks covered my sides and probably trailed up to my shoulders. He turned me to face him and then pushed on my shoulders, his eyes dark with stern dominance, and I realized he seemed trapped in a domspace in the same way I got trapped after a scene. Even then, I was trapped. I fell to my knees automatically, then sucked his thumb fervently when he pressed it to my lips. My asshole twitched, now that it was empty, and it made me suck all the harder. I floated in that subspace, feeling as if it was my most natural state of being after his use of me. My dress had fallen back down and I wished I was naked instead, so that he could see the marks of his use on me, knowing that he would love them. I wished he'd been able to use me more fully so that there could be more marks for him to see, any kind of marks that might please him. I had felt intense servility during our scenes, but after his abrupt use, I felt it so completely that it was stunning. He pulled his thumb away only to throw the condom away and dress himself again, and then he sat in the chair he had used to better fuck me. He leaned forward to grasp me by my hair and I crawled to him at the rough touch. I kissed his cock through his suit pants when he pressed my lips to it, but then he refilled my mouth with his fingers and I sucked gratefully, internally thanking him for filling up one of my holes. Good girl, kitten. Service slaves adore being filled. Oh, but I did love it, in any hole he wanted to give it to me. I sucked adoringly, caressed his fingers with my tongue in my thanks.\n\nLittle by little, he seemed to calm above me. He twisted his hand so I would be forced to nurse him at different angles, holding me tight so that my cheek was rubbing his cock. But his movements turned slower, until he removed his hand entirely and went to stroking my hair instead. He gentled, and seemed to tame whatever dragon had risen to his surface, until finally he lifted me to his lap and cradled me instead, touching my nose.\n\n\"I read your story,\" he finally said softly.\n\nI took a breath and nuzzled him, laughing a little shakily. \"Um. So, did you like it?\"\n\nIt worked. His face regained some of the playfulness he usually had. Not that I minded that level of the hottest fucking intensity I'd ever felt in my life. \"Yes, I damn well liked it.\" But then his face went back to something serious again. \"You wrote that after my date.\" It wasn't a question, but I nodded anyway and he tightened his arms around me. \"Jesus. I'm trying to think of where to begin to explain to you what you did, without even knowing you were doing it.\" I tucked close to him, looking up while he gathered his thoughts and considered them. \"That date was for a charity event for my parents. It was one of a political nature. I was seen with her, danced with her, said all the right things. But it ended up back at my apartment that night because she wasn't sober anymore, and I was internally cringing, wondering how the hell I was going to extricate myself from her in a tactful way that wouldn't piss her off.\n\n\"And then you were there in the lobby and it was awful, but we'll get to that in a minute. First, I don't take people to my place. The only reason why I would is to play with them in the dungeon, and I haven't done that since my divorce. I've played occasionally, in the lightest ways, at Sulfur's, but not at home. So there's that. But then I had her to deal with and when I got her upstairs, that actually didn't turn out to be as much of a problem as I thought. When I tried to give her water and used a wet washcloth on her head, she rubbed on me some and then passed out. So that was a good thing because then I could worry about letting her go easy, when she woke up and was thinking straight. But then there was you. It felt like the shittiest thing to do, to take someone there while you were working.\"\n\nWhen he paused to think again, I asked softly, \"How come? I mean we haven't established anything like dating, so it's not like you owe me anything like that.\"\n\nHe cringed at that. \"You're right. We haven't and we definitely shouldn't, because I'm not a good person to date. But, even so, don't you see? You're someone who subs for me, who I'm showing the ropes and taking care of. If I were on a date and we ran into each other someplace by happenstance, it'd be one thing because it's not something to hide or anything like that. But bringing that one after what we did and throwing it in your face like that? It felt pretty shitty of me. I've spent the past two nights wondering if you'd bring it up, wondering if I should bring it up. I was still sending you fun little commands, so why didn't I just ask if you were okay about it, if it didn't sit well with me?\n\n\"And then you posted that. And Jesus, but there wasn't a jealous note to any of it. You took all of my work frustration of today, and all of the concern I felt the past two days, and turned it into something hot as all hell, kitten. It made me think of you in my dungeon, waiting to serve me in whatever way I wanted you to.\"\n\nI laughed. \"Well, I hope so. That was the idea anyway. Also, being really horny and weird has its advantages sometimes, with things like that.\"\n\nHe curled me closer, touching my nose with a mischievous grin. \"Horny and submissive, you mean, not horny and weird.\" His voice turned softer while he studied me, his expression unreadable for a moment. \"I fantasized about chaining you by my bed, so that I could wake up and use your mouth or your ass whenever I wanted, just because I could. I thought about setting up a slave bed for you, about collaring you in heavy iron, so you would feel it with every movement.\"\n\nI shifted on his lap. \"Um, I'm trying very hard to make sure all the cum that I'm dripping gets on my dress around the thong, instead of your suit pants, but it's pretty difficult.\"\n\nHe laughed at that. \"I didn't know what I was getting into when I asked you to play, Hunter. Sorry to bother you during the day like that.\"\n\n\"Yes, how very goddamn dare you call me to give me orgasms and some seriously bitching sex. You're just the actual worst.\" I don't know where the burst of courage came from, but now that I had bowed to his games, it gave me a sense of comfort around him and I could tease him. What was more, it came easy.\n\nHe grinned and curled a hand around my throat. \"Mouthy little brat.\" I giggled and lifted my head so he could choke me easier, if he wanted to, and his eyes darkened with that heat he got with his dominance. But instead, he forced himself to let me go and stroked my hair.\n\n\"No, really, if I'm not in class or anything, you can message me anytime.\" I looked him up and down pointedly. \"You are mildly hot and all, and somewhat good at the whole topping thing, so...\" I laughed when he wrestled with me in the chair, lifting me to smack my ass.\n\n\"You're just a bundle of surprises, aren't you? So sweet and so taunting at the same time.\"\n\nI grinned and nuzzled him. \"Honestly, I think it's only because you said you had a bad couple of days and I want to cheer you up.\"\n\nAt those words, I knew we had come to some kind of crossroads. He met my gaze with such desire hidden behind the playfulness and I thought over everything he had told me, thinking it through with logic. Why feel like he owed me something after his date at all? The look in his eyes when he spoke of his fantasies had a sense of wariness behind them, as if he was concerned about those fantasies of me.\n\nDamn, what heartache had come of his past marriage? Poor guy. Top or bottom, dom or sub, sadist or masochist, it didn't matter. Heartache was still shit. I curled closer to him and asked him about his work, where he told me about his hotels and what he did. I asked him about the stressful bits of his past days. I asked everything, except how to go about making those wicked fantasies into realities. My Sir was uncomfortable with those topics and I wanted to please him more than anything else. And it worked too. When he let me leave him, he was smiling again, the wild lusts I had evidently inspired soothed and calmed.\n\nAt least for the moment. It turns out that two people can only lie to themselves, and each other, for so long."
    ],
    "authorname": "Payne_Hall",
    "tags": [
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/its-always-the-quiet-ones-pt-01"
}