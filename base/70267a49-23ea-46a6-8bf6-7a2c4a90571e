{
    "title": "The Retrieval... Ch. 02",
    "pages": [
        "Author's Note: First off, I'd like to sincerely thank everyone who has read, voted, favorited and commented on my stories. It is very much appreciated! In terms of this submission, I had a blast writing and getting to know the characters of Jules and Leah and seeing where their story took me...and from the feedback, I'm glad y'all seemed to enjoy the ride as well. So without further ado, here is Ch.02 - and I'd strongly suggest that you read Ch.01 first if you haven't yet. \n\nThis story is a complete work of fiction from my imagination, so if I screwed this up in any way - sorry about that. And of course this story includes sexually explicit material and is intended for adults, so if you are not at least 18 years of age or are offended by sexual material - I'm not really sure why you would be on Lit in the first place, so there's that...for the rest of you, thank you for reading, feel free to give feedback, please remember to vote - and I hope you enjoy! \n\n**** \n\n\"What movie?\" \n\n\"The Princess Bride,\" Jules replied. \"You know, that whole 'as you wish' thing?\" \n\n\"Mmmm,\" Leah agreed sleepily. \"Me too.\" \n\n\"But, um,\" Jules continued softly. \"You, uh...you know what Wesley meant when he said that, right?\" \n\nSilence. \n\n\"Leah?\" Jules whispered as she pulled her head back slightly to try and look at the blonde woman's face. \n\nLeah's eyes were closed and she was breathing steadily, asleep. \n\n**** \n\nJules settled into her pillow and started running her fingers lightly up and down the bare skin of Leah's back. Leah made a small sound in her throat and frowned in her sleep before moving in even closer and nuzzling Jules's breast. Jules liked the way Leah was snuggled up close. This intimate contact felt nice. It was...comforting. No, it was more than that - Jules had to admit that this woman made her feel safe in a way that no one ever had. She was especially thankful for that secure feeling right now because she couldn't help but think about what they had to face in just a few hours. \n\nThe afterglow of the amazing sex with Leah continued to rapidly fade away as the minutes ticked by and sleep continued to elude her. As hard as she tried not to let it, the threat of tomorrow kept relentlessly crowding into the redhead's thoughts. She took a deep breath and let it out slowly. The rational part of Jules's brain knew that worrying about it wasn't going to make it go away or keep it from happening. \n\nAnother heavy sigh escaped her lips. She tried to stop thinking altogether and just be thankful for the fact that she didn't have to face this alone. Jules leaned her head down and kissed the top of Leah's head. It was at this point she came to the conclusion that the problem was that tomorrow wasn't only about going back to DC and dealing with the threat - it also meant facing Leah in the cold light of day and sorting out everything that had happened tonight. \n\nIt shouldn't be that big of a deal, should it? Jules felt like they had connected - like really connected...but what did that really mean? Did Leah feel it too? The redheaded Federal Agent tried to imagine the future and what it would be like with Leah. Jules didn't do relationships - or at least she hadn't done one in a really long time. Maybe it had been too long. But shouldn't she at least consider the possibilities? Maybe it could be different this time with Leah...so why was the prospect of that scaring the hell out of her? \n\nReally? The little voice in her head popped up and called her out. You make this amazing connection with the blonde Xena over there and that scares you? \n\nYes, Jules admitted silently. It scares me. \n\nWhat exactly is the scary part of this? Is it the great sex? Or the fact that she really seems to like you? Oh, wait, maybe it scares you that she saved your ass and then hung around to protect it and escort you back home. Is that the scary part? \n\nJust shut up, Leah scowled. I don't want to talk about it. \n\nOh, so now we talk? The little voice shot back. I think the way this usually works is that I tell you how things really are and what you should do and then you tell me to shut up, go into denial and continue to fuck your life up. \n\nJules slowly eased her arm out from under Leah's head and tried not to wake the blonde as she moved to roll over and face the other way. She had no idea how this whole thing was going to play out. Jules had a strong suspicion that no matter what happened it was not going to be good. Somehow she'd find a way to screw it up. It had never turned out good before, so why should this time be different? Jules stayed awake for a long time, just lying there and staring into the gloom of the darkened room as a few tears rolled down her cheeks. \n\nShe didn't remember falling asleep. \n\n**** \n\nBefore Leah opened her eyes she smelled strawberries. \n\nShe inhaled deeply and knew that it was the shampoo Jules had used on her thick, auburn hair. She could feel some stray hairs tickling her nose. It made her smile. Leah stretched one of her legs out and luxuriated in the cozy warmth of spooning her shorter bedmate. She loved the feel of Jules's rounded ass pressed against her groin and the back of the redhead's leg against her thigh. There was something about the sleepy body heat they were sharing that just felt so damn good against the chill of the room's air conditioning. It made Leah never want to get out of this bed. \n\nFinally Leah allowed herself to totally shift all of her attention to the utterly delicious weight of Jules's large breast. At some point during their sleep-cuddling, Leah had ended up with her arm draped over Jules's waist and bent at the elbow so that her hand was resting on the underside of Jules's near boob. Leah gently moved her hand up a little so that she was fully cupping the large orb of soft, warm flesh. Leah closed her eyes as she gave it a gentle squeeze, trying to let the sensation of exactly how this magnificent tit felt in her hand burn itself into her memory. \n\nLeah had always been a 'breast girl' so to speak, but the redhead's boobs truly fascinated her. \n\nThe only time she had ever seen breasts this big and this perfectly shaped was in magazines or some other form of photo-shopped media. She could hardly believe that the almost flawless pair of large, porcelain globes were literally at her fingertips. Leah moved her hand to follow the outside curve of the perfectly rounded breast. The skin felt so smooth under her fingers. They sat high up on Jules's chest and there was surprisingly very little sag considering their size. Contrary to what she suspected most people probably thought upon seeing them hidden behind clothing, Leah now knew first-hand that there wasn't a single fake thing about them. More than just their size and shape, it truly amazed the blonde at just how soft they were, but yet still so firm to the touch. \n\nLeah let her palm drift up and over until she could feel the little nub of Jules's nipple. She thought they were so sexy and cute and along with the redhead's areolas were surprisingly smaller than expected considering the size of Jules's chest. Leah gave the sizable boob in her hand another gentle massage and was rewarded with the feeling of Jules's areola swelling and the redhead's nipple hardening under her touch. Leah adjusted her hand so that the nipple was between her thumb and forefinger. \n\nShe softly pulled on it until Jules let out a groan. \n\n**** \n\nJules had the sensation of floating somewhere in the warm depths of a dark abyss. \n\nShe shifted one of her legs and suddenly found herself ascending rapidly towards the surface of consciousness from that deep dive in the sea of slumber. Her approach toward wakefulness started to slow as some part of her brain hit the emergency brake and demanded further sleep. Her breathing evened back out until she started to sink back down, but then she felt some unknown force start to softly slide across her flesh. It felt nice. She gradually became aware that this caressing current seemed to be focusing on her right breast for some reason. \n\nJules struggled to blink her eyes open and realized that what started out as a fitful night of rest must have ended up as a really deep sleep. From behind her a hand ran smoothly along the outside of her boob. She could feel the strength in that hand. Leah's hand. When Leah moved her palm over to cover Jules's nipple it caused the redhead's breath to catch. Now that's a wake-up call, she thought dreamily and then couldn't do anything but groan at the pleasure Leah's fingers produced when she began gently tugging on Jules's hardening nipple. \n\n**** \n\nThe tall blonde wasn't normally this horny first thing in the morning, but what she and Jules had shared last night served to ignite something in her that she hadn't felt in a long time. \n\nLeah started to subtly thrust her hips so that she was gently pushing her groin against Jules's ass as she continued to tenderly massage the redhead's tit. That sexy little groan Jules emitted just turned Leah on that much more, so she used her chin to push the long auburn locks aside and brought her lips to the pale skin of Jules's neckline. She began nuzzling and kissing up and down the warm skin of Jules's neck. It felt so buttery soft against her lips until it immediately pebbled into gooseflesh. That made Leah smile again. She stuck out her tongue and ran it from Jules's earlobe all the way down to the auburn haired beauty's collarbone, savoring the ever so slightly salty taste of her lover's skin. \n\nLeah's kisses against Jules's neck grew longer and wetter as her kneading and stroking of the redhead's breast became firmer. It wasn't enough. Leah's hunger continued to build until she couldn't deny the sense of urgency that was building in her need for the redhead. Leah didn't just want Jules, every fiber of her being was craving to touch and taste the woman in her arms. She started to grind herself harder against Jules's ass. \n\nJules gasped and arched her back, pressing her large breast even harder into Leah's hand. Jules lifted her arm up and her hand went behind Leah's head, pulling the blonde in closer. Leah managed to snake the arm she was lying on under Jules's body so that she could reach the far boob that was resting against the mattress. With both of her hands now overflowing with glorious tit-flesh, Leah continued to massage and squeeze them. Jules moaned again and then impatiently turned and started to roll over and face Leah, but was intercepted by the taller woman. \n\nLeah moved her body in between the redhead's legs so that she was lying on top of Jules and looked deeply into her eyes. \n\n**** \n\nJules could feel proof of Leah's excitement on her ass and dripping down the back of her leg. \n\nAs soon as Leah's other arm came under her so that the blonde was grasping at and squeezing both of Jules's breasts, the redhead was ready for more. She wanted to feel Leah's lips against her own. She wanted to crush her chest against the woman's smaller breasts so that she could feel those delicious nipples poking into her breasts. She wanted to taste the nectar that was now painted on her backside and most of all, she wanted the chance to visually drink in the absolute perfection of the woman's body that was hidden behind her and giving her such immense pleasure this morning. The redhead's plan of attack to ambush her prey with a sudden change in position was easily thwarted. Almost as soon as she had started to move, Jules found herself flat on her back with Leah on top of her. She found it hard to swallow as she stared up into those sparkling blue eyes. \n\n\"Good morning, sunshine,\" Leah whispered as that familiar half-smile appeared. Leah lowered her head down to plant a kiss in the hollow of Jules's throat. \n\n\"Morning,\" Jules gasped as she shivered. \n\n\"Hmmmm,\" Leah observed. \"This position seems familiar to me. You?\" \n\n\"Uh huh,\" Jules croaked as Leah kissed her throat again and then gave it a lick. \n\n\"Did you sleep well?\" Leah murmured as she lightly kissed her way down to the tops of Jules's breasts. \n\n\"Mmmhmm,\" was all Jules could manage. \n\nEver so softly Leah began to make a trail of tender kisses and little kitten licks across the redhead's chest. She slightly adjusted her long frame as she folded her arms and put her weight on her elbows so she could fill her hands with those breasts. Her path of nibbles, kisses and licks moved to the outside of Jules's right breast, down to the luxuriously soft underside of her boob, up through the woman's deep cleavage and then over to begin repeating this same ritual of worship on the left one. Leah ran her tongue directly across Jules's collarbone to start over again on the right breast, but narrowed her circle so that her mouth came tantalizingly close to the redheads' aching nipple. \n\n\"Mmm fuck,\" Jules groaned as Leah softly blew on the hardened summit of her right tit. \"Why do you enjoy teasing me so much?\" \n\nLeah grinned and blew on it again. Last night's efforts of teasing these glorious breasts had been nothing but an appetizer. \n\nBy the time the blonde was ending her third complete circuit of exploration on Jules's left breast, the redhead was sighing heavily and starting to squirm. As much as she enjoyed teasing Jules, Leah figured she had delayed the gratification long enough although she thought she could have realistically spent hours exploring every inch and curve of the pale flesh. She moved her mouth over and let it hover above Jules's right nipple and then snaked her tongue out to give the nub a firm lick. Jules gasped and arched her back up and Leah rewarded her by drawing the entire tip into her mouth. \n\nThe groans and gasps of the redhead were becoming constant as Leah gently suckled her. She would alternate a strong suction with swirls of her tongue and then flutter the tip of her tongue against the very tip of Jules's breast. Jules actually yelped and brought both hands up to grip Leah's hair when the blonde softly bit down and gently tugged on it with her teeth. Leah started rapidly alternating between sucking, flicking with her tongue and pulling on it with her teeth. Jules began tossing her head back and forth as she started to feel the first little sparks of an orgasm building. Unexpectedly, she felt the warmth leave her breast and the cool air of the motel room seemed to zap directly into her aching nipple. She closed her eyes at the pause in pleasure and then moaned even louder when Leah moved her head over to begin working on the redhead's left nipple. \n\nFinally Leah felt it was time to move on to her ultimate destination. She released the nipple from her mouth with a little popping sound and began kissing and licking her way down to the redheads' stomach. She loved the fact that this sent a fresh wave of goosebumps across the porcelain skin like the ripples in a pond. Leah again adjusted her position as she kissed lower until her lips were pressed against the inside of Jules's thigh which was already coated with some of the wetness that was flowing from the woman's sex. Leah inhaled the redhead's musky scent and savored the tangy sweetness of her juice before leaning in to softly kiss the top of the woman's mons. \n\nJules spread her legs further apart in anticipation and brought her hands to her chest to begin squeezing and kneading her breasts. \n\nLeah gave Jules's pussy another tender kiss and then moved her mouth lower. She extended her tongue and made it flatten against the bottom of Jules's bare outer lips and slowly drew it upwards until it just touched the very tip of Jules's swollen clit that was poking out of its hood. Leah gave Jules's pussy another of these firm licks from just above her cute little rosebud all the way up to the redhead's clit. On her third full bottom-to-top lick, Jules's soft outer lips parted and Leah was rewarded with a stronger taste of the sweet nectar. Leah used her tongue to part the swollen inner lips and began working her tongue into the velvety texture of the redhead's center. \n\nLeah looked up through her eyebrows and grinned to find Jules's had leaned to the side so see around the swell of her breasts and a pair of wide green eyes were watching her intently. The blonde licked her way up to lightly run her tongue in circles around Jules's clit. She swirled and fluttered her tongue much like she had done to the redhead's nipple. Jules was softly moaning as she continued playing with her tits and watching Leah lick her pussy. She pulled and pinched on her nipples as Leah ran her tongue back down to burrow even deeper into Jules's core. \n\nJules let out a louder moan and began panting rapidly before whispering, \"Please, Leah...\" \n\n\"Please?\" Leah paused long enough to ask and then licked Jules's slit again. She paused again. \"Please what?\" \n\n\"Please,\" Jules moaned as Leah reached up with her hand to put a finger on either side of Jules's clit and gently squeezed. \"Please...make me cum.\" \n\nLeah began making circles around Jules's swollen, throbbing clit with her thumb as she watched the redhead arch her back and play with her breasts. Jules finally opened her eyes and looked pleadingly into Leah's. Leah smiled at her and said, \"As you wish.\" \n\nShe put her mouth over Jules's clit and gently took the nub between her lips and swirled her tongue around it. Leah began to hum softly. The redhead moaned her approval of the technique. Leah managed to smile with her mouth full of pussy and did it again. She brought her hands underneath Jules body and cupped a luscious ass cheek in each hand and used them to lift up and leverage the redhead's slick folds even closer to her mouth. Jules was started to grind her hips into Leah's efforts and it was encouraging the blonde to work even harder to bring her auburn haired lover pleasure. She absolutely loved the way she could provoke Jules into writhing and moving under her touch. \n\nLeah withdrew her hands from the redhead's bottom and Jules gasped when Leah brought one of her long fingers up and pushed it into Jules's willing entrance. Leah's finger bent and searched for that elusive bundle of nerves. She felt the spongy surface of what she was looking for and began caressing it with her fingertip. The redhead's legs started shaking. Leah continued humming, sucking, swirling and fluttering her tongue on Jules's clit as she changed tactics and started to pump her finger slowly in and out of the redhead's pussy. The combination sent Jules over the edge. \n\nThe redhead's loud moan escalated into a hoarse scream as both of her arms flung out to her sides and she grabbed fistfuls of bedspread and sheets. Jules arched her back and went rigid as her entire body felt like it was being electrified. She bucked her hips and let out another loud gasp as the wave of pleasure grew in size and a second orgasm racked her body, the intense feeling threatening to overload her senses. Leah greedily lapped up the abundance of the woman's release as Jules thrashed about in ecstasy. A few moments later Jules unceremoniously collapsed back onto the bed like a marionette whose strings had been cut. \n\n\"Ohhh, stop...stop, stop, stop,\" Jules pleaded as she ineffectually tried to push Leah's head away from her now overly sensitive pussy. \n\nLeah relented, but not before giving Jules one more wet kiss right in the center of her mound. With a grin that seemed to say she was just as satisfied as Jules, Leah crawled up onto the bed and snaked her arms around the curvy redhead. The blonde's mouth, chin and upper chest glistened with Jules's cum. She beamed at her lover, very proud of the sheer pleasure she had brought Jules. Leah giggled and brought her mouth to Jules's and kissed the redhead deeply so that she could taste for herself. \n\nThey couldn't help but smile at each other after breaking the kiss. ",
        "\"Give me just a minute or two,\" Jules told her even though she was still breathing heavily. \n\n\"For what?\" \n\n\"For you,\" Jules grinned and ran her hand up and down Leah's muscular flank. \"Your turn.\" \n\n\"That's okay,\" Leah grinned back. \"I'm good.\" \n\n\"What do you mean you're good?\" \n\n\"I wanted that to be about you,\" Leah said simply. \n\n\"Aw, come on,\" Jules insisted. \"Let me make you cum.\" \n\nInstead of answering, Leah reached up to tenderly push a lock of auburn hair behind Jules's ear. She smiled at the redhead like she wanted to say something, but chose to pull Jules closer and then softly kiss her. Jules was a little caught off guard. This kiss was so different than any of the others they had shared. It wasn't about passion or exploration and held none of the promise of something more to come. It felt very tender and emotional. \n\nLeah ended the kiss and then looked into the redhead's eyes. There was a sparkle within the depths of those startling blue eyes that Jules had either never noticed before or was new. Leah kissed Jules again quickly on the cheek before bouncing out of the bed. The tall blonde seemed full of energy as she announced she was going to take a shower. Jules just lay on the bed in a state of shock. \n\nThe kiss...that look...had been unexpected. \n\n**** \n\n\"Are you hungry?\" Leah asked hopefully when Jules finally emerged from the bathroom wearing one towel wrapped around her body and another wrapped around her hair turban style. As soon as Leah had finished in the shower, she had quickly gotten dressed and went out while Jules took her turn in the bathroom. \n\n\"Famished,\" Jules smiled and walked over to sit down next to Leah at the cheap formica table. The blonde began pulling greasy cheeseburgers, fries and onion rings out of a paper bag and Jules couldn't help but chuckle. \n\n\"What?\" \n\n\"Nothing,\" Jules teased her. \"I was just wondering if you're allergic to salads or something.\" \n\n\"Not at all,\" Leah disagreed and pulled the top off of her burger and pointed dramatically to the single piece of wilted lettuce that was buried under a couple pieces of bacon and stuck to the melted cheese. \"See? Salad.\" \n\nThis caused both women to laugh. Jules was trying to get used to this new side of Leah. The blonde seemed much more relaxed and outgoing this morning. It made her come across as much less intimidating. They shared the secret smile of lovers who had toe-curling sex and then focused on the serious task of thoroughly enjoying all of the fat, carbs and calories lying on the table before them. They ate mostly in silence. Jules was doing everything she could not to think about what was waiting for them in DC when a random thought suddenly popped into her head. \n\n\"So tell me something,\" Jules said before taking a bite of an onion ring. \"What was so funny back at the diner?\" \n\nLeah shrugged as she chewed on some cheeseburger. \"I don't remember.\" \n\n\"Bullshit,\" Jules grinned with her mouth full and waited until she swallowed before continuing. \"I'm pretty sure you don't forget much of anything. Come on...tell me.\" \n\n\"I just had a thought that struck me as funny,\" Leah finally explained. \n\n\"So tell me what it was.\" \n\n\"It was no big deal,\" Leah took a long drink of her chocolate milkshake. \"It was actually kind of stupid.\" \n\n\"So just tell me already.\" \n\n\"Alright, fine\" Leah finally agreed. \"As you were enlightening me to your current predicament and made sure to include all that stuff about those women you had been with, it just kind of occurred to me that you had fucked your way into being fucked.\" \n\nJules raised her eyebrows and sat back in her chair. She looked at Leah as an embarrassed smile tugged at the corners of her mouth. \"Really?\" \n\n\"Like I said,\" Leah shrugged regretfully. \"It was stupid. It was just something that struck me as funny at the time.\" \n\n\"Oh, I get it,\" Jules nodded in exaggerated appreciation. \"I can see how it was funny.\" \n\n\"Yeah, you seem real amused.\" \n\n\"No, it's not that,\" Jules slowly explained. \"I thought I was just telling you what happened...I didn't mean it to come across as bragging or anything.\" \n\n\"Yes, you did,\" Leah snorted a laugh. \"You were totally bragging.\" \n\n\"No, I wasn't,\" Jules defended herself. \"Seriously, I was just trying to give you the whole picture.\" \n\n\"Really?\" Leah rolled her eyes. \"You felt like I needed to know that your life is like the forum of Penthouse?\" \n\n\"No, that's not what I meant,\" Jules went on. \"I guess I wanted you to know what you were dealing with...that it was personal.\" \n\n\"Is that what that was?\" Leah asked in an innocently high tone of voice. \n\n\"Yes, it was,\" Jules agreed absently as she suddenly realized that she had a silly smile on her face. She had been thinking that the blonde's subtle southern drawl was one of the cutest things she'd ever heard and she found it really attractive. Wait...what? Where in the world did that sappy thought come from? \n\n\"You're so full of shit,\" Leah added with another chuckle and a shake of her head. \n\n\"I am so not,\" Jules argued. \"Why would I lie?\" \n\nLeah fixed her with a hard look with one eyebrow raised, but said nothing. \n\n\"What?\" Jules insisted, feeling self-conscious. \"At the time, it made sense.\" \n\n\"I know,\" Leah finally giggled and popped the last fry into her mouth. \"I'm really just teasing you.\" \n\n\"You are?\" Jules asked doubtfully. \n\n\"I was,\" Leah grinned. \n\n\"Ugh! You were making feel bad,\" Jules frowned in mock anger. \"You suck so bad right now!\" \n\n\"I know,\" Leah agreed and was rather proud of herself for getting Jules to talk and focus on anything but DC. She decided to try and get her to keep going. \"So when did you know?\" \n\n\"Know what?\" \n\n\"You know,\" Leah looked at her like it was obvious. \n\n\"What?\" Jules stopped just as she was about to take her last bite of cheeseburger and raised her eyebrows. \n\n\"That you were a lesbian.\" \n\n\"Oh...I'm not a lesbian.\" \n\n\"Huh?\" Leah was confused, but then suddenly nodded in recognition. \"Ahhhh...I get it. You date both men and women. You're bi.\" \n\n\"No,\" Jules disagreed. \"I'm not bi...I mean I don't really date, but you know. Just women.\" \n\n\"Just women?\" Leah looked at Jules suspiciously like the redhead had to be getting back at her. \"But you're not a lesbian?\" \n\n\"That is correct,\" Jules nodded in agreement. \n\n\"So you're saying that you are not gay?\" \n\n\"Yes,\" Jules agreed and then looked thoughtful as she sucked on the straw of her milkshake. Finally she set the cup down and responded. \"Yes, as in no, I'm not gay.\" \n\nLeah suddenly laughed out loud at that, a full on belly laugh. \n\n\"What's so funny?\" \n\n\"What...you...said...\" Leah managed to say between laughs. \n\n\"Why is that funny?\" \n\nLeah couldn't respond as she doubled over holding her stomach in uncontrollable laughter. \n\n\"Hey, I'm serious,\" Jules tried to explain. \"Stop laughing at me.\" \n\n\"My...goodness...,\" Leah continued with tears streaming down her cheeks. When she was finally able to breathe, she stopped laughing long enough to ask, \"Do you even realize what you just said?\" \n\n\"What?\" Jules asked and then quickly added, \"I mean, yes I know what I said, what about it?\" \n\n\"Seriously?\" Leah asked as she continued to giggle intermittently. \"I mean, you're not interested in men. You only go out with women...and then we...Last night. And this morning...but - you're not a lesbian?\" \n\n\"Well,\" Jules scowled in thought. \"No. I'm not.\" \n\n\"Wait,\" Leah said and stopped giggling as the humor quickly began to fade. She caught her breath and sat up straighter. \"You're being serious.\" \n\nJules thought this was the perfect time to open up and just be honest. Instead, she went ahead and said, \"Damn right, I'm serious.\" \n\n\"And how exactly does that compute?\" \n\n\"I guess,\" Jules started to explain as she picked at the remains of her sandwich. \"Well, it's just sex to me.\" \n\n\"Excuse me?\" Leah could hardly believe her ears. \"It's just sex?\" \n\n\"What do you want me to say? I really like sex,\" Jules stared at the table. \"And I...like sex with women.\" \n\n\"That's actually...\" Leah struggled to find the right words. \"...really fucked up.\" \n\n\"I don't think it's fucked up at all,\" Jules shot back defensively. Deep down, a big part of her knew that was far from being the truth, but for some reason that fear she had felt last night had complete control of her mouth right now. \"I look at it as just being practical.\" \n\n\"Practical?\" Leah pursed her lips as she tried to hide the fact that her feelings were deeply hurt right now. \"So let me get this straight - it's just about sex for you then? Nothing else?\" \n\n\"Yeah, pretty much,\" Jules confirmed, but found it hard to look Leah in the face. \"I guess I'm just an in-the-moment kind of girl, ya know?\" \n\n\"No, I don't know,\" Leah replied stiffly and stood up. She started to clean up the remains of their meal. \"I actually have no idea what that means.\" \n\n\"What's wrong?\" Jules asked quietly and even though she already knew the answer, she asked the question anyway. \"Why are you upset with me?\" \n\n\"Nothing's wrong,\" Leah replied quickly and continued cleaning up. \"I'm not upset.\" \n\n\"You obviously are,\" Jules insisted. \n\n\"Just drop it,\" Leah stood up tall and warned her quietly without looking at her. Suddenly that aura of the fierce, intimidating person Jules had first met was firmly back in place. \"We need to get going.\" \n\nWithout another word, Jules got up and went into the bathroom to get dressed. \n\n**** \n\nAfter checking out of the motel, the two women loaded up the SUV and began the four hour trip to DC. Leah drove and except for the occasional comment or question about directions, they listened to the radio and traveled in silence. Jules started to speak up at least six different times - to explain...to apologize...to try and make things right, but couldn't seem to find the words. She knew she needed to try and make Leah understand what she had meant and why she had said what she said...she just didn't know how. \n\nLeah drove east on Interstate 68 and a few hours later finally got them headed south on Interstate 270. Traffic got heavier as they got closer and closer to the capital. Leah tersely explained that once they got into DC proper, they were going to need to ditch the vehicle. Jules just nodded her head obediently and didn't ask why and Leah offered no further explanation. As Leah cautiously drove through the District of Columbia, Jules stared out of the passenger window miserably wishing she could somehow go back and get a do-over of this morning in the motel. \n\nThe tall blonde found a hotel she was vaguely familiar with and pulled into The Dupont Circle Hotel parking garage. She drove slowly around, hunting for just the right spot. She finally found one deep in a corner that was about as inconspicuous as they were going to get and backed the SUV into it. She left it idling. She hesitated for a moment and then explained what they were doing without looking at Jules. \n\n\"We can't drive around in this traffic with any expectation of being as mobile as we might need to be. No one will notice the Jeep for a few hours or even until tomorrow, so we might get lucky if we need it again. For now, we either walk or take a cab.\" \n\n\"Okay,\" Jules nodded her understanding. \n\nLeah shut the engine off and took the key out of the ignition. Once they were out, Leah waited for Jules to walk around to the driver's side. Leah held the key up so Jules could see it and then placed it under the driver's side rear wheel well. She looked back at Jules with a serious expression. \"Just in case.\" \n\nJules nodded again. She looked scared. \n\nLeah nodded back. \"Let's go.\" \n\nJules silently followed her traveling companion out of the parking garage and around to the front of the hotel. Leah stopped walking and looked up and down the street. \"You're going to need to call Atwood and find out for sure when he's going to be in his office.\" \n\n\"Okay,\" Jules nodded wide-eyed and just stood there waiting for Leah to tell her what to do. \n\nLeah turned around and looked at the entrance to the hotel. She pursed her lips in thought and then moved closer to talk quietly. \"I want you to use the hotel's phone, but you'll need a little privacy.\" \n\n\"How do I do that?\" \n\n\"It's been a few years since I was here,\" Leah squinted her eyes as she recalled, \"so I don't know if the house phone will be where it used to be or if it will allow you to call out without a room number...so you'll have to go to the front desk.\" \n\n\"What am I supposed to say?\" \n\n\"Act like you're in a hurry,\" Leah explained in a low voice as she casually looked around. \"Demand the use of a phone like you're an important guest. Toss out there that you've lost your cell phone and don't have time for all this.\" \n\n\"I need to act rude?\" Jules asked doubtfully. \n\n\"Yeah, a little bit,\" Leah confirmed. \"But not so much that they won't help you.\" \n\n\"So just a little rude?\" \n\n\"Yeah, a little bit,\" Leah nodded. \"More hey-I'm-a-guest-and-I'm-really-in-a-hurry bitch rather than I'm-just-a-bitch-all-the-time bitch.\" \n\n\"Alright,\" Jules replied and gave Leah a funny look at the choice of words. \"I guess I can do that.\" \n\n\"You'll do just fine,\" Leah said neutrally, but allowed herself to childishly enjoy the dig a little anyways. \n\n\"Uh-huh,\" Jules scowled at her and walked towards the lobby doors. \n\nLeah turned around and watched the street for a couple of minutes and then Jules was back standing beside her. Jules didn't say anything as she started buttoning up her shirt with a satisfied smirk on her face. Leah looked down at the generous cleavage until it disappeared behind the material of the woman's blouse and then moved her eyes back up to Jules's face. \n\n\"Well?\" \n\n\"Piece of cake,\" Jules replied with more confidence than she actually felt. \"College kid couldn't take his eyes off my chest, so I played it up a little and he let me use the phone. No problem.\" \n\n\"I guess whatever works,\" Leah said dismissively. \"Did you get hold of your boss?\" \n\n\"Technically he's not my boss anymore and no, he was in a meeting,\" Jules sighed. \"I didn't know if it would be too suspicious to ask about his schedule or not, so I didn't.\" \n\n\"But he's on site?\" \n\n\"I...I think so,\" Jules frowned. \"I mean, his secretary didn't say where the meeting was or anything, but I assume it was in the building.\" \n\n\"We can't work off an assumption, Jules,\" Leah sighed heavily. Jules realized that was the first time Leah had spoken her name since they'd left the motel earlier that morning. \"We'll have to wait an hour or so and then you can try calling again.\" \n\n\"I'm sorry, Leah,\" Jules replied quietly. \"I should have asked.\" \n\n\"It's no big deal,\" Leah shrugged it off. She looked across at the street at the caf\u00e9 on Connecticut Avenue and dipped her chin at it. \"We can wait over there.\" \n\n**** \n\nSitting on a secluded lot in Falls Church, VA was a thirty thousand square foot home that was more reminiscent of a hunting lodge rather than a mansion. The lodge-like structure was specifically designed by the owner to be the ultimate in luxury, comfort and convenience while maintaining that authentically rustic feel. The athletic looking man with the thick neck and squinty eyes standing next to the Land Rover out front thought it looked like a log cabin on steroids. He looked down as the cell phone in his hand vibrated. \n\nHe answered it with a simple greeting and listened intently to what was being said. \n\nHe was dressed in a white golf shirt, khakis and hiking boots and topped the outfit off with a navy blue sport coat that was tailored so the bulge of the sidearm on his hip wasn't easily visible. The owner of the house liked his staff to be dressed appropriately when he was entertaining. Another man dressed the same way stood beside him. They not only dressed alike, but the second man was similar enough in build and demeanor that with some hair dye he could have been the first man's stunt double. The second man stood with his hands on his hips watching his co-worker do nothing but stand very still as he held the phone to his ear. \n\nThe man on the phone finally nodded his chin once and replied, \"Roger that.\" \n\nThe second man looked at his co-worker expectantly. \n\n\"We caught a break,\" the first man announced as he reached for the passenger side door handle of the Land Rover. The second man circled around the front of the vehicle to the driver's side. They closed their doors virtually at the same time. \n\n\"Heading?\" the second man asked as he turned the key in the SUV's ignition. Without waiting for directions he put the car in gear and smoothly maneuvered his way through all of the other luxury cars and SUV's that lined the circular drive in front of the mansion. Once clear, he quickly began accelerating down the steep, winding drive. \n\n\"Dupont Circle Hotel,\" the first man nodded grimly as they pulled away from the log-cabin mansion. \n\n**** \n\nJules and Leah followed the waiter outside to the patio area and took a seat at their table. \n\nThe table was under the shade of a large umbrella and the chairs were comfortable enough. It also offered them a good view of the street and surrounding shops. They waiter took their order and disappeared. They simply sat and waited in silence. In a few minutes he reappeared with a full pot of coffee, a pair of mugs and a small plate of scones. They sat and drank coffee for a while. They each nibbled on a scone and drank some more coffee. Thirty minutes later they were finished with the tasty treats, so they sat and watched the street and sipped more coffee. They basically sat and avoided looking at each other until Jules finally set her coffee cup down with a clatter and sighed loudly. \n\n\"Please talk to me.\" \n\n\"What about?\" Leah asked flatly as her eyes continued to scan the streets. \n\n\"Come on, Leah,\" Jules implored. \n\n\"Come on what?\" Leah said a little more tensely than she meant to. She closed her eyes for a moment and then cleared her throat. \"Look, I'll get you to Atwood's office safely, just like I said I would.\" \n\n\"And...that's it?\" Jules asked. \n\n\"Yeah,\" Leah replied slowly. \"That's it.\" \n\n\"What about...\" Jules started to say and stopped. \n\nLeah had suddenly sat up a little straighter and put her coffee cup down. The blonde's eyes narrowed a little as she stared at a dark Land Rover that pulled up in front of the hotel across the street. The hotel Jules had made the call from. She watched an athletic looking man with close-cropped hair get out of the SUV and walk into the lobby of the hotel with his head on a swivel. She immediately noticed the bulge under his jacket and knew it was a gun on his hip. She was all too familiar with the type. Not good. \n\n\"What is it?\" \n\n\"Come on,\" Leah stood up and dropped a twenty on the table. She watched as another man got out of the Land Rover. Damn. Same type of guy as the first one, fit, short hair and paying attention to his surroundings. He stood by the vehicle and started scanning the streets and nearby shops. Leah's movements were deliberate and casual so she hopefully wouldn't draw the man's attention. She waited for Jules to stand up before turning and walking calmly towards the main door that led to the interior of the caf\u00e9. \n\n\"What is it?\" Jules whispered to her nervously. \n\n\"Just keep moving,\" Leah told her reassuringly. \"Everything's going to be fine.\" \n\nJules was about to ask something else when Leah's hand found her elbow and she steered Jules away from the front entrance and through one of the nearby doors that said 'Employees Only'. Leah took the lead as they walked through a service area and then on back into the kitchen. They got some strange looks, but no one seemed too interested in questioning the tall blonde woman who was moving with such determination. \n\nLeah spotted a rear entrance that looked like it was used for receiving incoming shipments. She let Jules get in front of her and directed the redhead towards it. They maneuvered their way around boxes of produce and fifty pound bags of coffee beans. Jules kept nervously looking over her shoulder to make sure Leah was behind her. At the door, Leah stepped in front of Jules and hit the push bar and held the door open while she turned her head and did a quick check behind them. So far, so good. She stepped out behind Jules and nearly ran into the back of the redhead. ",
        "They were in a narrow alley behind the caf\u00e9. Directly behind them the alley dead-ended into the back of another building. The caf\u00e9's dumpster was butted up against the brick wall. Standing in front of them at the entrance of the alley was the same scary looking man from the Land Rover which was why Jules had stopped short. He was dressed business casual in a coat and polo shirt, but he didn't look like any businessman Jules had ever seen. Leah gently pulled on Jules's arm until the redhead was standing behind her. \n\nWhat followed was one of the strangest thing Jules had ever seen in her life. \n\nWithout a word Leah and the scary businessman walked directly at each other and then the man reached out like he was trying to poke Leah in the throat. The blonde acted like she was swatting at some kind of insect, but instead of an insect it was the man's arm that was swatted aside and then she swatted his other arm. Leah also slapped him on the side of his head. Next Leah lifted her foot and tapped it against the scary man's leg. The man backed off a step and gave Leah a mean look. \n\nAfter that, things got really confusing as it looked like Leah and the stranger came together again and began shuffling back and forth like they were dancing and playing some crazy, dangerous version of patty cake at the same time. Their hands were a blur, but the sounds of flesh meeting flesh and grunts and heavy breathing were loud. From what Jules could see there was blood running down the side of the man's head from his ear and he was sort of limping. \n\nAll of a sudden it looked like Leah did a sudden bow from her waist towards the man and the guy went to his knees. Leah brought her knee up and then he was flat on his back and Leah bent down to pick something up the guy had dropped. \n\n**** \n\nLeah gently pulled on Jules's arm until the redhead was standing behind her. \n\nLeah met the hard stare of the man at the end of the alley. He didn't draw his weapon, so in some kind of silent, mutual agreement they both started walking purposefully towards each other at the same time. The man closed the last step by lunging and trying to catch her in the throat with a leading knife-hand strike. She surprised him with how smoothly she parried it by using her left wrist and palm to redirect the jab. She surprised him even further when she countered it by coming right back in and palm striking his ear. She also grabbed his ear and gave it a yank while she blocked the man's follow-up strike with his other arm with the outside of her right forearm. \n\nAs the man backed off and recovered his position, Leah saw that she had nearly ripped the guy's ear completely off and it was hanging down grotesquely against the side of his head. He seemed to be caught off guard for a second by her level of skill in close quarters combat. He feinted high, but Leah didn't fall for it and landed a solid foot check against his knee as he started to lift his leg for a low line kick. He grimaced and she knew she had caused some damage. Frustrated he launched a series of short, heavy strikes with his fists and elbows that were meant to overwhelm her and end the confrontation. \n\nLeah smoothly moved her feet to change her position and remove herself from his angle of attack. She used her palms and forearms to proficiently block, parry and redirect each of his strikes. As she swept his final strike aside with her palm it caused the man to overextend which left his centerline exposed. Leah saw her split-second opportunity to go on the offensive. She knew that many amateurs often made the mistake of trying to use their neck as the fulcrum, but Leah instead made her neck as stiff as she could by flexing every muscle in her neck, shoulders and upper back as she rapidly swung her entire upper body forward into the head-butt. \n\nThe man was completely stunned on the impact of the top of her forehead with his face. He immediately dropped to his knees as blood exploded out of his ruined nose. He was just starting to bring his hands up to futilely try and protect himself, but Leah didn't hesitate as she put all of her bodyweight into the vicious Muy Thai knee strike. It connected solidly with the man's jaw and lifted him far enough up into the air to cause him to flip over backwards to land flat on his back, out cold. \n\nLeah was breathing heavily from the exertion and adrenaline and then her face darkened into a scowl when she saw the syringe roll away from his side. It must have fallen out of the man's coat pocket. \n\nShe bent over and picked it up. \n\n**** \n\n\"What is that?\" Jules asked as she cautiously came up behind Leah. \n\n\"Looks like a little present for you,\" Leah said with a trace of disgust. She flipped the cap off of the needle with her thumb and without hesitation stabbed it into the unconscious man's thigh and depressed the plunger. \n\n\"He was going to drug me?\" Jules asked with wide eyes. \n\n\"Either that or poison you,\" Leah said in a matter-of-fact tone as she broke off the needle in the man's thigh, tossed the rest of the syringe aside and stood up. She grabbed Jules's hand and started walking towards the end of the alley. \n\n\"Wait!\" Jules said and pulled her hand away from Leah's as she stopped walking. She cast a panicked look over her shoulder at the man lying in the alley. \"Poison? Leah - did you just kill that man?\" \n\n\"Jules,\" Leah said with her teeth clenched and reached over and grabbed the redhead's hand again and started half-walking / half-dragging her towards the entrance to the alley. \"We need to go.\" \n\n\"But we can't -\" \n\n\"Jules!\" Leah said firmly and stopped to look the redhead in the eyes. \"We have to keep moving. Do you understand? I will keep you alive, but we need to go...Now.\" \n\nJules went pale and nodded her head up and down quickly. They made it to the end of the alley, turned right and disappeared into a passing crowd of tourists, heading in the opposite direction of the hotel. \n\n**** \n\nThe handsome man who owned the log cabin on steroids was very pleased with himself. \n\nA few weeks ago he had casually suggested that The Council would be more than welcome to use his home for their next get together and was pleasantly surprised when word was sent that they would take him up on his offer. The only thing this could mean was that they were feeling him out, testing him to see if he was the right kind of man to be invited to join their group as a full member. It was about time. He'd had his fill of playing the role of fixer for these men. In his heart he knew he was their equal and deserved that kind of respect. \n\nThis secret group of more than a dozen politicians, military leaders and business tycoons were currently sitting around the long oak table in his formal dining room smoking Gurkha Black Dragons and finishing their second bottle of Macallan 1926. This was after a lunch of fresh venison steaks, Maine lobsters and every kind of fancy side-dish his staff could whip up. The entire afternoon would end up costing him well over three hundred grand, but it would be money well spent if it helped him get that elusive invitation. He tried not to frown as his head butler approached from the side door. \n\nThe man-servant bent over and quickly whispered in his ear that he had an urgent phone call. It had to be important as the head butler had worked for the handsome man for over a decade and knew just how important this dinner was. The handsome man smiled and dismissed the butler. He knew he was receiving more than one inquisitive look from some of his guests at the interruption which was a break in their normal protocol. \n\n\"My sincerest apologies, gentlemen.\" The handsome man announced as he wiped his mouth on a linen napkin. He set his cigar down in the crystal ashtray and scooted his chair back. With another polite nod of his head he excused himself from the room. He went out into the hallway through that same side door and grabbed the encrypted cell phone off of the silver tray that another of his servants offered him. He cocked one eyebrow as he brought the phone up to his ear. \n\n\"Yes?\" He listened intently. He pursed his lips as he took in the latest development. \n\n\"That's very disappointing,\" he observed. \"Stand by and I'll get back to you.\" \n\nHe hung up and looked casually over his shoulder. In his dining room sat some of the most powerful men in the country. Men that did not take kindly to being disappointed by not having their instructions carried out. He hadn't failed them yet and he certainly wasn't about to start now. Not when he was so close. The man stood looking at the phone for another moment considering his options and then pushed one of the speed dial functions. \n\n\"This is Mr. Smith,\" the handsome man greeted whoever picked up on the other end. \"Please run a system search and locate the asset Loki. Advise me of his current location as soon as possible...No, not yet. I just want him ready to go and on standby for now.\" \n\n**** \n\nThe two women eventually slowed their pace and tried to blend in with the meandering crowds. \n\nThey ended up walking aimlessly around for over an hour. Leah used that time and the casual physical activity to let the adrenaline wear off and also to give Jules the opportunity to calm down. They kept walking until they ended up near the National Gallery of Art. Leah spotted a vendor parked on the street and went over to the food truck and purchased two bottles of water and a couple of oranges. She took Jules by the hand and led her over to sit down on a bench across from the Capitol reflecting pool. \n\nThe tall blonde insisted that Jules drink at least half the water and eat the fruit. They sat and ate and drank in silence. Jules mechanically put pieces of orange in her mouth and chewed on them without really tasting them. She felt numb and couldn't believe that had just happened. Leah sat and chewed and sipped and thought about how quickly those men had been able to locate them. \n\n\"I need to ask you a question,\" Leah finally broke the silence. \n\n\"Okay.\" \n\n\"But I need you to really think about what I'm asking you,\" Leah continued. \"I don't want you to jump to conclusions or get defensive.\" \n\nJules steadied herself and mentally committed to keep an open mind. \"Okay. Ask me.\" \n\n\"Do you trust Atwood?\" Leah asked. \"I mean - do you really trust him, Jules?\" \n\nJules considered the question carefully. She turned and looked Leah in the eyes and began to softly explain how long she had known Hank Atwood, what all he had done for her in her career and how many times he had gone to bat for her when she had screwed up including this last time. Finished Jules took a deep breath and then slowly let it out before saying, \"Yeah...I trust him.\" \n\n\"Okay,\" Leah took her own deep breath and looked up at the sky as she sighed. \"That doesn't mean that I trust him, but I am going to trust you. With what you just told me, none of this is making sense.\" \n\n\"What isn't?\" \n\n\"How those men found us by the hotel so quickly.\" \n\n\"Do you think they had it under surveillance?\" Jules suggested. \n\n\"No,\" Leah disagreed. \"I pulled that place out of thin air. There's no way they could have known we'd be going to that hotel.\" \n\n\"Could they have Hanks' office bugged or something?\" \n\n\"I guess it's possible,\" Leah scowled. \"But I highly doubt it. It's a lot harder to do than what you see in the movies...Besides, I'm sure y'all deal with all kinds of secret shit and SOP would be for the entire building to be swept weekly if not daily.\" \n\n\"True,\" Jules agreed. She stared at her shoes for a minute and then asked quietly, \"Can I ask you a question now?\" \n\n\"Go ahead,\" Leah said and leaned forward on the bench so her forearms were on resting on her knees. \n\n\"Do you think that man in the alley is dead?\" \n\n\"Don't know,\" Leah said simply. \"Don't care.\" \n\nJules waited for her to say something else, but the blonde woman didn't. Leah just sat there looking off into the distance. Jules tentatively reached out her hand and let it rest on Leah's arm. \"Why don't you care, Leah?\" \n\nLeah turned her head and looked at Jules's hand and then let her eyes move up to look into the redhead's face. She finally spoke. \"He was going to hurt you, Jules. He was going to kill you.\" \n\n\"I -\" Jules started to say, but Leah cut her off. \n\n\"The moment he accepted that assignment,\" Leah said quietly but with a touch of menace in her voice, \"he made his decision. He knew exactly the kind of situation he was putting himself in. You didn't. You didn't ask for any of this.\" \n\n\"True, but -\" Jules tried again. \n\n\"But nothing...this is my world,\" Leah continued, the tension rising in her voice. \"Nice people like you don't belong in it...Its ugly, it's nasty and it's dark. Decisions are made and people end up dying for those decisions. That piece of shit made the decision that he was going to end your life. For what? Money? Because somebody told him to? Well...I stopped him. That was my decision. I chose you over him. That's why I really don't care if he's dead, Jules...I chose you.\" \n\n\"Oh,\" was all Jules could manage. She was so caught off guard by what Leah said that her brain was reliving the fact that she could have been killed all over again. She remembered seeing that syringe on the ground and her hands started to shake. She drew a quivering breath and felt her eyes start to water. \n\n\"Shhhh,\" Leah suddenly sat up and gently pulled Jules into her arms. \"Hey, I've got you. You're safe...shhhh...\" \n\nJules couldn't stop shaking and ended up sobbing into Leah's shoulder as the blonde patted her back and whispered reassurances in her ear. A few minutes later, Jules was sniffling and hiccupping and trying to wipe the snot off of Leah's shirt. It ended up making an even bigger mess and then the two women started laughing and hugging and laughing some more. Leah closed her eyes as Jules clung to her and was amazed all over again at how absolutely perfect their bodies felt pressed up against each other. \n\nThen Leah remembered their conversation in the motel room and pulled away. She resumed her position of forearms on knees and went back to looking at the water, her laughter long gone. \n\n\"Why did you pull away?\" Jules asked as her smile faded as well. \n\nLeah didn't say anything. She just dropped her head for a moment and shook it a few times. \n\n\"I'm not very good at this,\" Jules admitted and slumped back on the bench. \"I don't know what to say.\" \n\n\"I think you said it all at the motel,\" Leah replied quietly. \n\n\"Ouch...guess I deserved that,\" Jules mumbled and then said a little louder, \"Look, I'm sorry, okay?\" \n\n\"Don't say you're sorry for being honest,\" Leah corrected her. \"Never apologize for telling the truth.\" \n\n\"Well, then my apology stands,\" Jules shrugged and wiped at her nose. \"Will you accept it?\" \n\nLeah sat back and turned a little towards Jules. She studied the redhead's face for a few moments. \"Yes. I accept your apology.\" \n\nJules smiled. \"Thank you.\" \n\n\"Why did you say all those things?\" Leah asked quietly. \n\nJules smile fell and she shrugged and looked down. \"I don't really know.\" \n\n\"Did you say them to hurt me?\" \n\nJules shrugged again as she felt fresh tears start to well up in her eyes. \n\nThat look told Leah it had all been a front. It was a mask Jules wore to try and protect herself. \n\nLeah had just caught a peek behind that mask and could see there was obviously a great deal of emotional pain this woman was hiding from. The tall blonde immediately felt guilty. This whole situation wasn't fair for Jules and it wasn't helping that Leah was taking advantage of it by being confrontational. Leah also knew they needed to worry about their current situation and having deep, emotionally intense conversations wasn't going to help either of them stay alert. \n\n\"You know what?\" Leah said suddenly and stood up. \"This isn't the time or place to get into this.\" \n\nJules's eyes looked up in surprise at the unexpected reprieve. \n\nLeah flashed that familiar half-smile and held out her hand until Jules took it. \"We'll talk about it later.\" \n\n\"Okay,\" Jules let out a deep sigh of relief. \n\nLeah turned around and pulled Jules close. She could not get over at just how perfect Jules's body felt against her own. Still holding Jules's hand, Leah brought the other one up to touch Jules's cheek. Leah hesitated as she seemed to be searching for something within the depths of those green eyes. Leah drew even closer and pressed her lips to the redhead's. The kiss was like the one from this morning...sweet and soft and powerful. But this time there seemed to be an underlying heat. Jules liked that. She moaned a little and surrendered her mouth to the brief exploration of Leah's tongue, but then the blonde pulled away and straightened up. \n\n\"Yep,\" Leah cleared her throat and regained her composure. \"We'll definitely continue this later.\" \n\nBreathless, Jules could only nod in agreement. \n\n**** \n\nEventually they got themselves sorted out and straightened up and Leah reminded Jules that they still needed to call Atwood's office again. The two women walked down the block and hailed a cab. Exhaustion from the day's events was starting to settle in and Jules was having a hard time fighting it. She let herself lean over until she was resting her head against Leah's shoulder and closed her eyes. Leah squeezed her hand to let her silently know that it was okay to rest. \n\n\"Leah?\" Jules said quietly with her eyes still closed. \"Are you still upset with me?\" \n\n\"No, I'm not upset,\" Leah squeezed her hand again reassuringly. \"Everything's going to be okay. We'll talk about it later.\" \n\n\"Leah?\" \n\n\"Yes, Jules?\" Leah answered patiently and lowered her head down so she could hear. \n\n\"Thank you,\" Jules whispered and then offered her a tired smile. \n\nLeah returned the smile and paused to plant a soft, tender kiss on Jules's forehead. She wasn't going to let anything happen to this woman. Leah turned her head and stared out the window of the taxi and allowed herself to think about the past...or at least parts of it. She knew what she was capable of when she truly believed in her mission. She was willing to do whatever it took to ensure Jules's safety. Unfortunately, these assholes had no idea just how far she was willing to go and exactly what she was willing to do to protect Jules. \n\nLeah leaned forward and asked the cab driver to take them to the nearest pay phone. \n\n\"Pay phone?\" the man gave her a look like she was crazy. \"This ain't a DeLorean, lady, and I ain't Michael J. Fox. Where the hell am I going to find a pay phone?\" \n\nLeah sighed. \"Then just take us to Union Station, please.\" \n\n\"That I can do,\" he nodded with a smirk and then muttered something about the eighties under his breath. \n\n**** \n\n\"Secretary Atwood?\" Joanna's voice came over the intercom feature of the phone console sitting on the corner of his oversized desk. \n\n\"Yes?\" Atwood paused from reading over the stack of threat analysis updates sitting in front of him and looked expectantly at the little light that was flashing on his phone. \n\n\"I have Agent Bradford on the line for you, sir,\" his administrative assistant announced. \n\n\"Put her through,\" Atwood said immediately and snatched up the handset. \"Jules?\" \n\n\"Hank,\" Jules breathed and he could almost feel the relief in the young woman's voice. \"Thank God.\" \n\n\"Julia,\" Hank Atwood lowered his voice. As hard as it was to hold back from peppering her with the dozens of questions that were almost burning his tongue, Atwood could also sense there was something wrong in the tone of his former analyst's voice. \"What's going on?\" \n\nJules looked over her shoulder at Leah who was hovering behind her at the pay phone kiosk. Leah kept her head on a swivel watching the people flow past them in the great hall of the train station. She paused and shook her head at Jules. \"Not over the phone.\" ",
        "\"Hank, I can't really go into this over the phone,\" Jules explained. \"It's not safe.\" \n\n\"Not safe?\" Atwood repeated and his instincts kicked in. He'd been in the intelligence game long enough to know that you simply do not take chances. \"Alright, Jules. How can I help?\" \n\n\"We need to come in, Hank,\" Jules whispered into the phone. \"We need to meet in person so I can tell you everything.\" \n\n\"Understood,\" Atwood replied. The \"we\" did not go unnoticed, but he didn't say anything. He glanced at his calendar and then at his Rolex. \"Can you be in my office in two hours? Or do I need to send someone to pick you up?\" \n\n\"Your office in two hours?\" Jules repeated for Leah's sake. Leah nodded. \"Okay. Don't send anyone. We'll be there. And Hank?\" \n\n\"Yes?\" \n\n\"Will you please keep this to yourself? Just until we get there?\" \n\nHank Atwood sighed deeply. \"Alright. I can do that.\" \n\n\"Thank you, Hank,\" Jules breathed. \n\nRight outside of Atwood's office, his administrative assistant punched a button on her phone that disconnected her headset from being able to listen in on her boss's phone. She waited until the blinking light went out to indicate Secretary Atwood had ended his call. Once it went out she waited another minute and then punched the intercom button to Atwood's office again. \n\n\"Secretary Atwood?\" she spoke into the microphone piece of her headset. \"I'm going to the ladies room. Is there anything you need me to take care of first, sir?\" \n\n\"Okay, thank you, sir,\" she said sweetly and hung up. She carefully took her headset off and laid it on her desk and grabbed her purse. \n\nShe stopped to push her chair in and make sure it was aligned just so before stepping out into the hall. Atwood's secretary made sure the hallway was clear and then walked quickly down to the ladies restroom. Once inside, she checked each of the stalls to make sure she was alone and then went back to the door and locked it. She slipped into the far stall, sat down and took her cell phone out. She dialed the number she knew by heart and listened to it ring. \n\n\"Mr. Smith?\" she replied quietly into her cell phone when it was answered. \"This is Joanna Richards from Secretary Atwood's office...I have an update for you...Yes, it's about that same problem I called about earlier.\" \n\n**** \n\n\"Absolutely, Mr. Smith,\" the man nodded even though the affirmation couldn't be seen over a phone. \"I'll take care of it, sir.\" \n\nThe Team Leader disconnected the call on the encrypted cell phone. He walked through the kitchen area and hurried down the steps so that he could inform the rest of his team of the new direction their mission was about to take. At the bottom of the steps he paused to appraise the men currently under his command. His team was purposely small, but he knew he could count on each of the three men seated around the circular table in the basement of one of The Council's safe houses in Arlington, VA. \n\nHe had to be able to count on them - this was his big chance. \n\nFor months he'd been relegated to the second team. His team always ended up being assigned the support roles...they provided back-up, secured perimeters and maintained over-watch while the first team under Loki got to kick in doors, eliminate targets and get their hands bloody. They got all the praise and the lion's share of the rewards. Well, not today...today he'd be leading the first team. \n\nHe knew this was a real-deal test. How could it not be? He literally didn't think he could made up any tougher, more stressful mission parameters than the ones his team was about to face. He wasn't worried though. Mr. Smith had been extremely helpful with some suggestions on how to navigate the most daunting of those obstacles. He liked Mr. Smith or whatever his name really was. The Team Leader felt like they were in similar positions in terms of having to prove themselves. \n\n\"Heads up, men,\" he announced and took his seat at the table. \"We just got some new Intel and we're rolling in ten.\" \n\n\"Destination?\" the man who handled transportation and logistics asked. His operational code-name was Magni, who had been one of Thor's sons. Each man was assigned a code-name from Norse mythology since they never used their real identities when working for The Council. \n\n\"Before you get all puckered up, let me preface this with yes, I have a plan,\" the leader chuckled. He paused dramatically and then told them the address. Every pair of eyebrows shot up and one of the men whistled. \n\nThe Team Leader nodded and let the other three men make their comments and pose their questions and allowed enough time so they could get it all out of their systems. When they were finished and ended up looking at him expectantly, the leader grinned and step by step, started laying out the plan of execution to once and for all take their target out. \n\n**** \n\nExactly two hours later Jules Bradford flashed her Homeland Security-Logistics Agent credentials at the DHS Headquarters security desk. \n\nShe followed the Security Officer's instructions and scanned her handprint and then showed him the Congressional subpoena. She and Leah had discussed at length the quickest way to gain access to the building and get to Atwood's office. Since Leah insisted that Jules shouldn't go anywhere alone, Jules had explained that rather than going through all of the protocols of registering Leah as an official visitor and waiting on the background check and security screening, it would be much quicker if they used the actual truth to their advantage. \n\n\"This says she's supposed to testify today,\" the Security Officer observed and looked up at Jules. \"Why are you bringing her here instead of the Senate building, Agent Bradford?\" \n\n\"Well...Analysis needs to clear a few points in her testimony, Officer Fox,\" Jules lied confidently after reading the man's nametag. \"There might be an issue with some details relating to ongoing operations.\" \n\n\"Okay then,\" Officer Fox nodded and was already looking at the next person in line behind her. \"Make sure you escort her the entire time she's in the building, ma'am.\" \n\n\"Absolutely,\" Jules smiled and took her credentials and the subpoena back from him as she turned towards Leah. \"I won't let her out of my sight.\" \n\n\"You're smooth,\" Leah commented quietly as they walked towards the elevators. \"Remind me not to play poker with you.\" \n\nJules nodded with a small smile as they walked, but didn't say anything. The finally reached the end of the hall and stood facing the bank of elevator doors in silence. Jules forced herself not to look around until an elevator on the end finally dinged and the doors opened. Jules managed to keep her cool until the elevator doors closed. As soon as they did she let out a quivering breath as she slumped against the wall. \n\n\"Oh man, I thought I was going to have a heart attack.\" \n\n\"Could have fooled me,\" Leah grinned and shook her head. \"You did great.\" \n\n\"Thanks,\" Jules replied shakily and managed a smile. \n\n\"Hey,\" Leah reached out her hand and Jules took it. \"It's almost over.\" \n\nJules nodded and squeezed her hand. \n\nThe elevator slowed and came to a stop on the third floor. The doors opened to an empty hallway. The women glanced at each other as they waited for the doors to close and resume its ascent. The doors remained open. They waited another twenty seconds before Jules reached over and mashed the 'doors closed' button and held it down. Nothing happened. She glanced over her shoulder at Leah with raised eyebrows. \n\n\"I thought you said Atwood's office was on the fourth floor?\" Leah asked with a frown. \n\n\"It is,\" Jules confirmed. \"I pushed four. I mean, you saw me push four, didn't you?\" \n\nLeah nodded and took a couple of steps towards the open doors. She put her back against the wall and slid closer to the opening until she could see a short distance down the hallway. Her eyes scanned everything she could see for a few minutes and then she quickly darted past the open doors to the other side and did the same thing. \n\n\"What?\" \n\nLeah shook her head. \"I really can't see anything.\" \n\n\"Maybe the elevator just stopped working,\" Jules offered. \n\n\"Maybe,\" Leah commented flatly without any conviction. \n\n\"What do you want to do?\" \n\nLeah seemed to make up her mind with a very small nod to herself and then looked at Jules. \"I don't know if anything is going on or not, but it's always better not to take chances. We should take the stairs.\" \n\n\"Sure,\" Jules agreed and followed Leah off of the elevator. \n\nLeah hesitated and Jules indicated the direction of the stairwell with a nod of her head. They walked down the hall and Jules thought it was really weird that all of the office doors were closed with the lights out. Then she noticed that there wasn't anyone in the hallway. No one stepping out to get coffee, no one headed to a meeting or to the bathroom. Jules was just about to mention this to Leah as they turned the corner and came face to face with two men wearing security uniforms. \n\n\"Sorry, ladies,\" one of the men held out his hand to stop them like a traffic cop. \"This floor is closed.\" \n\nThe four of them just stood there looking at each other for a full five seconds. Leah took in a dozen details about these two men during that time and was rapidly running various action plans and counter moves through her head when all of a sudden Jules took a small step forward and put her hands on her hips. \"Who the hell says this floor is closed?\" \n\nThe two men exchanged a look before the taller one spoke up. \"Uh, we're Security, ma'am. Those are the orders.\" \n\n\"Orders?\" Jules frowned and looked from one of the men to the other. \"From whom?\" \n\nThe same man cleared his throat. \"Downstairs.\" \n\n\"Well, those orders certainly didn't come from my office,\" Jules huffed. \"So I'd like to know exactly who this person is downstairs that decides to close this floor to the Executive Secretary when I'm supposed to have a meeting with Rear Admiral Nunez in ten minutes.\" \n\nThe two men exchanged another look before Leah urged Jules to start walking past them with a very subtle tug on her elbow and said quietly, \"Ma'am, we should go down and straighten this out ourselves.\" \n\nJules looked at Leah and then glared at the two men. \"Yes, that is exactly what I intend to do.\" \n\nJules continued to play the part by storming past them and stomping down the hall in her high heels with Leah striding right next to her. With every step, Leah subtly shepherded Jules to ease over until they were gradually hugging one side of the hallway as they walked. They passed a couple of offices and had almost reached a little alcove that had a small table in it upon which stood a full coffee service. The alcove was five feet from the entrance to the stairwell. Leah mentally figured if they could just get past the alcove, they could make it to the stairwell when one of the Security Officers behind them called out. \n\n\"Excuse me, Agent Bradford?\" \n\n\"Yes?\" Jules replied automatically out of sheer habit. She had stopped walking and was halfway turned around when she froze and closed her eyes. \n\nLeah came to a stop next to her and muttered, \"Shit,\" under her breath. \n\n\"I think you should come with -\" the same Security Officer who had done all the talking to this point started to give instructions when something in Leah's peripheral vision made her instincts kick in. She shoved Jules into the little coffee nook and literally dove on top of her, forcing the redhead under the table just as three ragged holes appeared in the sheetrock where they had been stopped. \n\n\"What the -\" Jules urgently whispered, but Leah silenced her with a hand over her mouth as they crowded into the corner. Leah grabbed Jules's purse from where it had landed under the woman's thigh and ripped it open. She quickly dug around until her hand closed over the grip of Jules's service weapon. Leah knew she had maybe twenty seconds or less. Two more holes opened up in the recessed wall of the nook above their heads and the chalky drywall dust clouded into the air and slowly rained down on them. The dust was stinging Leah's eyes as she ejected the clip from Jules's SIG Sauer. She tapped the magazine lightly against her thigh and then slid it back in as quietly as she could until she felt it seat home with a click. She eased the slide back on the 9mm pistol. \n\nThey were obviously dealing with professionals. Leah had recognized the faint click-clacking sound of the slide on the man's weapon. The fact that it could be heard over the muffled muzzle blast indicated at least one of these guys was using a suppressed weapon. She also knew from the lack of the whip-cracking noise of the rounds he had fired that he was also using subsonic ammunition. Leah knew from first-hand experience that there was only one reason anyone would use a suppressed firearm with subsonic ammunition. \n\n\"Why is Security shooting at us?\" Jules whispered wildly. \n\nLeah was wiggling down to get on her stomach and trying to get as low to the ground as she could. Jules gripped the back of her leg, demanding an answer and Leah tried not to lose her patience or her focus. As calmly as she could, she explained, \"They aren't Security Officers, Jules. They're here to kill you.\" \n\n\"What?\" Jules squeaked. \"Why?\" \n\nInstead of answering, Leah took a deep breath, let it out slowly and eased out a little from under the table. She took another quick breath and then quickly rolled into the hall on the floor onto her back and took aim down the hallway. The first of the two men posing as a Security Officer was slowly advancing closer to their position with his weapon held up in front of him with two hands. The man's handgun had the fat tube of a sound suppressor attached to the end of the barrel. His eyes tracked Leah's movement, but before he could adjust his point of aim down, Leah squeezed the trigger twice, double-tapping him with one round in the upper chest and another in the throat. \n\nThe report of Leah's weapon was ridiculously louder than their opponent's and the sound of the shots she fired reverberated off of the floor tiles and walls. Leah watched the man who had been about to shoot them as his weapon clattered to the floor and he reached up with both hands to claw at his throat that was just now beginning to gush blood. She didn't see anything else as she quickly rolled back under the table in the shallow alcove. The man's partner had been ten feet further back down the hallway and had reacted by firing several rounds that slammed into the floor where Leah had been laying. \n\nLeah was panting and blinking sweat and dust out of her eyes as she moved around to sit up with her back against the wall. She extended her arm so that just her hand reached around the corner of the wall. She blindly fired two more rounds in the direction of the other man. Jules was curled up into the corner as far as she possibly could with her hands over her ears. Leah touched her arm as she adjusted her position with a grimace and to make sure she was okay. \n\n\"Leah,\" Jules whispered or at least it sounded like she was whispering since Leah's ears were ringing so badly. Leah read her lips. \"You're bleeding.\" \n\nLeah looked down and saw that on the side of her blouse down near her beltline was a dark red blossom that was growing bigger the longer she looked at it. She pressed her hand against it. \"Do you have a tampon in your purse?\" \n\n\"You need a tampon?\" Jules asked with raised eyebrows. \"Now?\" \n\nLeah closed her eyes and gritted her teeth at the burning pain that was now flaring in her side. She swallowed hard and then opened her eyes and looked as calmly at Jules as she could. \"Yes, Jules, I need a tampon...right now.\" \n\nJules dug around in her purse and finally came up with the requested plastic wrapped tampon and obediently handed it to Leah. She watched as Leah paused to stick her arm out and fire two more rounds blindly down the hall and then ripped the tampon wrapper off with her teeth. She pulled the plastic tubes apart and dropped them as she freed the cotton cylinder. Leah held the tampon in her teeth by the little string on the end as she carefully pulled up her shirt. Jules actually felt a little sick as she watched Leah feel around and use the tail of her blouse to wipe blood away. The redhead's eyes went wide when without hesitation Leah stuffed the cylinder shaped piece of absorbent material into the hole that was in her side where most people would have a love handle. \n\nJules was just about to make a comment when Leah held up a hand for silence and leaned forward to listen. The remaining fake Security Officer was talking into what Leah assumed was a either a cell phone or some type of hand-held radio. \"Roger that, I repeat Hodr is down, Hodr is down. Be advised that the floor is secured but I have incoming.\" \n\nNeither Leah nor Jules could hear what the response was so either it was a cell phone or the man had an earpiece. He began talking again. \"Negative on the medic. I repeat, negative on the medic. Yeah, copy that, Magni, Hodr was a good one... yeah, affirmative, I'll get him some payback soon enough...10-4. Repeat...I say again Magni, repeat that?\" \n\nAgain, the two women could not hear what was being said on the other end. Then they heard the man cuss quietly before saying, \"Roger that, I confirm that Loki is on site. Be advised I copy to hold my position for Loki's arrival.\" \n\nLeah closed her eyes and leaned her head back against the wall. The smell of cordite, the burning ache of a bullet wound combined with the coded jargon and speech patterns the man had used caused dozens of memories to come rushing up into her mind's eye, each one fighting for her attention. Leah snapped her eyes open and blinked a few times. She did not have time for a walk down memory lane. She turned her head and looked at Jules. \n\n\"Listen to me very carefully, Jules. We have to move, okay? We can't stay here.\" \n\n\"Okay,\" Jules nodded shakily. \n\n\"They're going to bring more men with guns up here and if we don't move, we die,\" Leah continued. \"Do you understand? You move when I say move and you keep moving, okay?\" \n\n\"Okay.\" \n\nThey heard the far off ping of the elevator doors opening and Leah braced herself against the wall, Jules's gun in one hand and Jules's hand in the other. Leah took a deep breath and let it slowly and took another and just as she was about to push off of the wall with the bottom of her foot to make their dash to the door of the stairwell, a voice from her past echoed down the hallway. \n\n\"Don't tell me that's Artemis causing all this trouble,\" a man called out loudly in that same authoritative tone of voice that she remembered so well...that voice that was tinged with a flat Midwestern accent. Artemis was the Greek goddess of hunting and had been Leah's call sign on her last Op. \n\n\"Rack?\" Leah said softly and it felt like all the air had been sucked out of her lungs. She felt like she had suddenly fallen into some weird time-warped, mind-fucking dream. \n\n\"What's a rack?\" Jules was really confused. \n\nLeah looked at her blankly for a moment, but a sudden surge of pain from her wound served as a reality check that this was real and happening right now. She shook her head and said it louder. \"Rack - is that you?\" \n\n\"The one and only, sweet cheeks,\" the voice chuckled. There seemed to be genuine affection in the man's tone. \"I guess it's the proverbial small world and all that.\" \n\n\"Obviously this is not a coincidence,\" the sarcasm quite evident in Leah's voice. \n\n\"Obviously,\" he agreed and she could hear the grin in his voice. He actually seemed to be enjoying this. \n\n\"What the hell, Rackley?\" Leah drawled and then her voice grew louder. \"Have you gone stupid or insane? I mean, seriously Rack...running an Op in a Federal building?\" \n\n\"What do you want me to say, sweet cheeks?\" the voice replied. \"Definitely not my decision.\" ",
        "\"Enough chit-chat already,\" the voice of the first man they had met getting off the elevator sounded off. The same one who had been dressed in the uniform of a Security Officer. Leah had killed his partner. \"Are we gonna ghost this bitch or what?\" \n\n\"Shut the fuck up!\" they could hear the man Leah had called Rackley viciously snarl. A heated exchange of muffled words followed that neither Leah nor Jules could quite make out. Then things grew quiet. \n\nJules jumped and Leah's head snapped up when the unmistakable echo of a gunshot broke the tense silence. \n\nLeah snatched up Jules's purse and frantically dug through it until she started to produce the pieces of Jules's phone. She pressed the battery, sim card and phone into Jules's hand as she found each one and then mouthed the words \"Call Atwood\" at her. Jules nodded as Leah focused her attention back on her former team leader. \n\n\"Everything okay over there, Rack?\" Leah called out. \n\nThere was another moment of silence until she suddenly heard that familiar chuckle of his. \"Yeah, everything's just fine.\" \n\nShe glanced at Jules who was pulling her phone charger out of her purse. She watched the redhead unplug the coffee machine and plug her phone up. Of course the phone would be dead. Leah grimaced and hoped she could keep stalling. \n\n\"That didn't sound fine to me, but what do I know, right?\" \n\n\"That?\" the man she called Rack laughed again. \"Aw hell, you know...just a little difference of opinion. You remember how important employee relations are to me.\" \n\n\"Is that what you're calling it now?\" Leah asked and quietly ejected the magazine from her weapon. \n\nShe only had six rounds left and she knew that Jules wasn't carrying extra magazines. Leah closed her eyes for a moment and tried to remember exactly how far the first tango had been from their position when she dropped him. Ten feet? Twelve? Shit. She would have considered risking it and trying to retrieve the dead man's weapon, but that was before Rackley showed up. She knew that plan wouldn't work...Rack was one of the best marksmen she had ever been around. \n\n\"I wouldn't worry too much about it,\" Rackley called out. \"Are you ready to talk or what, Leah?\" \n\nLeah glanced down at Jules who was concentrating on her phone as she tried to power it on. Fuck, this was taking too long. Leah shook her head. \"I can hear you just fine.\" \n\n\"Leah,\" Rackley called out. \"You know me. I prefer to look people in the eye when I talk to them. I guarantee your safety. Deal?\" \n\nJules looked up as she held the phone to her ear and vehemently shook her head. She tried to catch Leah's eyes and when she did she exaggeratedly mouthed the word \"NO\" to her. Leah kept looking at Jules as the redhead's attention was suddenly drawn to the phone and she covered half of her face as she began urgently whispering. Leah stood up and tucked Jules's weapon in the back of her pants before taking two steps out into the hallway holding her hands up. \n\n\"Deal,\" she nodded and was suddenly looking down the hallway into the face of the man who had been her leader and her friend for the last six years of her career. \n\nRackley looked older. He still had the lean muscled physique of an athlete on his six foot frame, but the short cropped hair was more grey than brown. That and the pronounced crow's feet made him look ten years older than he actually was. He was dressed in a black turtleneck, dark grey cargo pants and black boots. If it wasn't for the tactical vest and MP5 slung over his shoulder, he could have passed for an executive on a weekend excursion. \n\n\"Man, are you sight for sore eyes or what,\" Rackley grinned. His eyes lit up with joy as he looked over his former prot\u00e9g\u00e9. His hand suddenly came up in a sharp chopping motion to his left as one of his men who was kneeling against the far wall adjusted his weapon. \"I said hold your water, boys. The lady and I need to have a conversation.\" \n\n\"Copy that,\" the guy muttered and lowered his weapon. \n\nRackley turned his attention back to Leah and the smile popped right back up on his face. \n\n\"Your show,\" Leah said coolly and slowly lowered her arms. \"Talk.\" \n\n\"Huh.\" Rackley frowned. \n\n\"What?\" \n\n\"I just kind of thought you'd be,\" Rackley replied with a slight scowl of confusion. \"I don't know, a little happier to see me or something.\" \n\n\"Seriously?\" Leah asked and gestured around at the dead bodies with just the slightest turns of her head. She stole a quick glance at Jules as she did so. The redheaded Fed was still under the table whispering into her phone and nodding her head. Leah thought she heard Jules say 'I understand' but couldn't be sure. \n\n\"Look, I know...\" Rackley began and his face clouded over for a second in what Leah thought was frustration. \"The truth is I was left out of the loop on this. Otherwise, I would have handled it...differently.\" \n\n\"Do you even know how ridiculous that sounds?\" Leah asked. \n\n\"What do you want me to say?\" Rackley dipped his chin and held his arms up in a gesture of futility. \"It is what it is, sweet cheeks.\" \n\n\"Bullshit,\" Leah almost spat. \"That's the lamest clich\u00e9 you can use to get away with something like this.\" \n\n\"Oh?\" Rackley raised his head up. \"And how's that?\" \n\n\"Since when did the man I know and respect become the trigger boy for some DC blowhard?\" Leah continued and crossed her arms. \"Come on, how is targeting a woman for sleeping with the wrong person ever going to fall under National Security? I mean, what the hell, Rack? What kind of mickey mouse bullshit are you into?\" \n\nRackley cocked his head a little the way a dog does when it isn't sure what its master wants. \"What in the fuck are you saying?\" \n\n\"Don't,\" Leah snapped and pointed her finger at him. \"Do not talk to me like I'm stupid, Rack.\" \n\n\"Leah,\" Rackley softened his voice. \"I literally have no idea what you're talking about.\" \n\n\"Whatever.\" Leah replied and then stuck her chin out defiantly, \"I'm not going to let you kill her.\" \n\nRackley just raised both eyebrows. \n\n\"Go ahead and bring the rest of your team up here,\" Leah challenged. \"Maybe you'll meet your objective or maybe you won't. Just so you understand that to get to her, y'all are going to have to go through me...you know me, Rack. I guarantee it's going to be long day.\" \n\n\"Okay,\" Rackley replied in that same softer tone of voice and took a step towards her. \"Can I ask you a question?\" \n\n\"Go ahead.\" \n\n\"What exactly do you think the objective is here?\" \n\nLeah glared at him suspiciously. The Rackley she knew all too well wasn't above using psychological tactics and mind games to achieve mission success...but she also knew his demeanor and this seemed genuine. There was real confusion and dare she think it, concern on his face. She glanced around as if considering his question and saw that Jules was still whispering into her cell phone and nodding. \n\n\"You've been tasked to eliminate Jules Bradford,\" Leah finally replied, surprised that she so easily fell back into using the terminology and lingo from her old life. \n\nRackley pursed his lips and nodded thoughtfully. \"And who assigned this tasking exactly?\" \n\n\"Does it matter?\" Leah retorted and then huffed a sigh while Rackley patiently waited for her response. It was the same look he used to give her in the field when he wanted her to figure out things for herself rather than being told what to do. \"I don't know...some asshole from the Sec-Def's office.\" \n\nRackley nodded thoughtfully and then took another deliberate step towards her so that he had separated himself from the rest of his men. \"Are you willing to just listen to me for a minute?\" \n\nLeah didn't say anything for several seconds and then lifted a hand towards him with her palm up as if to say, go ahead. \n\n\"I need you to understand that I was called into this cluster-fuck on the backside,\" Rackley explained and looked around trying to find the right words. \"Obviously my employers thought there was a conflict of interest, so I wasn't privy to this Op or I would have squashed it from the jump and handled things my way.\" \n\nLeah scowled in confusion. \"I don't understand.\" \n\n\"Which I guess it's a good thing they sent the B Team,\" Rackley continued as if he hadn't heard her. \"Otherwise, this thing could have gotten a lot uglier.\" \n\n\"So now I guess it's my turn,\" Leah shrugged. \"What the fuck are you talking about?\" \n\n\"You,\" Rackley said simply and paused as he took a long look into Leah's eyes. \"You're the Op, sweet cheeks. These boys were tasked to eliminate...you.\" \n\n\"Me?\" Leah started to drop her arms but then winced and her hand automatically went to the wound in her side. \"Why?\" \n\n\"Because my employers don't know you like I do,\" Rackley clarified. \n\n\"What is that supposed to mean?\" \n\n\"They panicked, Leah,\" Rackley grimaced and shook his head. \"Once they understood you were being subpoenaed by the Senate Intelligence Committee about...Andarab.\" \n\n\"Andarab?\" Leah spoke the name of the city north of Kabul, Afghanistan for the first time in over a year and her stomach immediately knotted up. \n\n\"Yeah,\" Rackley sighed and ran a hand over his jaw. At just the mention of the location where their last Op together had taken place, Leah could see the same unease in his eyes that she knew was showing in her own. \n\n\"Why would I be a target about...\" Leah started to ask, but couldn't bring herself to say it again, \"Why would I be a target?\" \n\n\"They couldn't risk the exposure.\" \n\n\"What exposure?\" \n\n\"Your testimony...,\" Rackley said simply and there was real sympathy in his eyes, \"...against me.\" \n\nLeah blinked her eyes a few times. Her mind took one tiny, baby-step towards the memory of Andarab and then she stopped herself. She just couldn't do it...so instead, she rapidly went over the timeline of the past few days in her head. It suddenly dawned on her that in all of the confusion of being arrested, the car fire at the police station and getting caught up in the details of Jules's story and their assumptions about everything...she never did ask about the exact specifics of the subpoena or what she was being called to testify about. Leah turned her head and looked down at Jules who was still under the table holding her cell phone to her chest in both hands. \n\n\"Jules?\" \n\n\"Leah,\" Jules said quietly and stood up. She looked at the woman who she considered her friend and her lover. The woman who now had tears in her eyes. \"I don't know anything about Andarab.\" \n\n\"Did you know?\" Leah asked quietly. \n\n\"Leah,\" Jules tried to reason with her quietly. \"I told you I was supposed to escort you back to DC to testify.\" \n\nLeah took a quivering breath. \"Did you know I was supposed to testify against Rack?\" \n\n\"It doesn't say that...\" Jules started to explain, but just couldn't bring herself to lie. She closed her eyes for a moment. \"Not the details or his name, but...yes. I knew. It was off the record, but...I knew.\" \n\nLeah's face scrunched up in pain for the briefest of moments and then with a deep breath, she exhaled and her face took on an unreadable expression. A tear leaked out from the corner of her eye and ran down her cheek. She was still holding her side, so she brought her face down and shrugged her shoulder up to wipe the tear away on her blouse. She returned her gaze back to her former Team Leader. \n\n\"So...what now?\" \n\n\"Well, I seems to have a position available,\" Rack offered her a tight grin and gestured the barrel of his weapon back towards the body of the man he'd shot earlier. \"Need a job?\" \n\nLeah shook her head and rolled her eyes with a tired smile. She literally didn't know whether to laugh or cry right now. She was so tired. She turned her head as Jules came up beside her and put both of her hands on Leah's forearm. \n\n\"Leah,\" Jules said quietly. \"I'm sorry.\" \n\n\"I don't think this is the best time,\" Leah told her and moved to push her back towards the alcove. \n\nJules wouldn't budge and gripped Leah's arm tighter. The redhead glanced up nervously at the emergency lighting unit over their heads and then back at Leah. \"I know...but...Leah -\" \n\n\"Not now, Jules,\" Leah hissed and cut her eyes towards Rack. \n\n\"Leah,\" Jules insisted. \"Do you trust me?\" \n\n\"Uh, excuse me...ladies?\" Rack interrupted and held his arms out. \"We're kind of in the middle of something, are we not?\" \n\n\"Damn it, Leah,\" Jules whispered fiercely and gripped Leah's forearm even tighter to the point that it almost hurt the blonde. \"I'm sorry. I...I don't...I'm...Leah, I love you.\" \n\nEverything around her seemed to fade away as Leah gave Jules her full attention. \"What did you just say?\" \n\n\"I said I love you,\" Jules repeated with a scared look in her eyes. \"So please, just trust me right now, okay?\" \n\n\"You do?\" Leah was dumbfounded. \n\n\"I do,\" Jules nodded and then took a deep breath and leaned her head in closer. \"Please, Leah...if you care for me even just the tiniest little bit, please...close your eyes.\" \n\n\"What?\" \n\n\"Close your eyes...Tight. Please?\" \n\n\"Why?\" \n\n\"Just trust me, okay?\" Jules pleaded quietly. She gave Leah one last beseeching look and without letting go of Leah's arm, squeezed her eyes tightly shut and lowered her chin. \n\nLeah hesitated as she looked at Jules for another moment. She glanced up at Rackley who had taken another step forward. He had his hands on his hips expectantly and was watching them with an amused expression on his face. She looked back down at Jules and with a small sigh Leah finally relented and closed her eyes. \n\nA split second later the world beyond the shade of her eyelids lit up in a huge, dizzying purple flash. \n\nLeah suddenly felt weightless like the laws of gravity had been temporarily suspended. At some point a part of her brain haphazardly clicked on the correct answer that yes, she was in fact falling...but it didn't feel like any falling she'd ever done before. It was softer than that. It almost felt like...Jules said she loved me...Leah felt her cheeks tighten as her face tried to smile. She wanted to reach out and grab that thought as it flickered across her mind. \n\nShe loves me. \n\nLeah stretched out her hand. She could have sworn her fingers were just about to make contact with the thought when the black turbulence of unconsciousness came rushing in on her like a waterfall. \n\n****"
    ],
    "authorname": "loverofFUN",
    "tags": [
        "lesbian sex",
        "adventure",
        "lesbian romance",
        "oral",
        "large breasts",
        "thriller"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-retrieval-ch-02"
}