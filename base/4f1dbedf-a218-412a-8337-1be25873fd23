{
    "title": "Gods and Crowbars Ch. 02",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 6 - The Hunt Begins\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded reporterette from in front of the Courthouse complex on the east side of Courthouse Square, at 7:00am, Monday, April 10th. \"The trial of former Town & County Police Detective Leonard 'Sergeant' Sharples for murder and attempted murder begins today!\"\n\n\"Motions and appeals have been worked through over the past several months,\" said Bettina, \"since Detective Sharples was arrested nearly a year ago at Point Hollow in the northwest corner of the County.\" (Author's note: 'Point Hollow', Ch. 04-05.) \"The State Supreme Court upheld the decision to try Detective Sharples on all counts in one trial, though the murder of Scrawny Haskins was committed in Hamilton County while the attempted murder of Commander Donald Troy was committed here in this County. Superior Court Judge Patrick R. Folsom will be the presiding judge in what some are calling the 'trial of the century'.\"\n\n\"Commander Troy has said in a statement that he will appear and testify when called upon, despite being released from the hospital after back surgery just this weekend.\" Bettina said. \"The Prosecution has not asked for a continuance, and a spokesman for the D.A.'s office said that they had no intention of doing so. The Prosecution has also confirmed that they are going for the death penalty in this case.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Why does she keep calling him 'Detective' Sharples?\" asked Joanne Warner in MCD as everyone drank coffee. \"How about 'disgraced former Detective'?\"\n\n\"To annoy us.\" said Captain Teresa Croyle, her voice dripping with sarcasm. \"And to seemingly take Sharples's side, as if he's innocent and we're the guilty ones for daring to arrest that poor, innocent man.\"\n\n\"And a number of us in here are going to be called as witnesses.\" Captain Cindy Ross said. \"So have your uniforms looking good. Okay, guys, at 8:00am shift change, all of 1st and 3d shifts, loddy doddy everybody, will be in the Main Auditorium. All of you need to be there, too.\"\n\n* * * * * * * * * * * * * * * *\n\nIf only the criminals knew that the entire Police Force was currently in one room... but they did not know. At 8:01am, Captain Cindy Ross mounted the stage in front of the assemblage of Officers. As the room came to silence, she pinned the microphone to her Uniform shirt and then pressed a button.\n\n\"Ladies and Gentlemen,\" she said, her voice carrying over the speakers, \"the man you are seeing in this photo is former SBI Agent Richard Ferrell. He is wanted for a number of crimes. He was seen in Town this weekend, and an APB was issued for his arrest. All of you have been or will be sent an email with his photograph. Study that photograph carefully, get to know every wrinkle on this bastard's face. \n\n\"A priority of your duty patrols,\" continued Captain Ross, \"is to be on the lookout for this man. Wherever you go, whatever you do, looking for this man in crowds, on the streets, in shops and restaurants, is your priority. Is that clear?\"\n\n\"Yes ma'am!\" said the group, in a not particularly coordinated fashion.\n\n\"I hope your eyesight is better than that response, ladies and gentlemen.\" said Police Chief Moynahan taking the stage. \"Let me assure you, Officers, that this man is one of the most highly wanted and most dangerous men in the State, if not the Nation. He is a former State Agent and was the leader of the SBI's Narcotics Task Force. He is very well trained, especially with weapons, and he will be desperate if cornered. Captain?\"\n\n\"You will all be briefed further on this man through your chains of command.\" said Captain Ross. \"Detectives, both MCD and Vice, and your Data people, go from here to Classroom 'J'. Everyone else can go to their assigned duties.\"\n\n* * * * * * * * * * * * * * * *\n\nFBI Special Agents Martin Nash and Lindy Linares, SBI Agents Norm Chow and Ted Orosco, and SBI Lt. Tanya Perlman were already in Classroom 'J' as the Detectives trickled in. Captain Ross came in and hooked her computer up to the projector. As stragglers came in, including Theo Washington, Lainie Everett and Timothy Geiger, Cindy turned a baleful eye upon them. \n\n\"Ladies and gentlemen, there is no way any of you should be coming into this room after me.\" the Captain of Detectives said harshly. \"You people need to start moving with a purpose. Is that clear?\"\n\n\"Yes ma'am.\" said Theo, properly understanding what to do and say. Lainie looked shocked, and Geiger looked a bit irritated; neither said anything. The rest of the room fell silent.\n\n\"Okay, guys,\" said Cindy, putting up a slide. \"Once again, this is Richard Ferrell, former Director of the SBI-NTF, and wanted for assault upon a State Agent, that being Lt. Tanya Perlman. He is also wanted as a conspirator in the attempted murder of Commander Troy, which was done by Leonard Sharples, and possible connections to the murder of Kevin Greeley. We now have some new things to tell you, and none of what is said here had better leave this room.\" She looked from face to face, locking eyes with every individual.\n\n\"Okay.\" Cindy said. \"First, we're going to have our FBI friends tell us about the sabotage on the electric substation this weekend. Special Agent Nash?\" \n\nNash got up and came to the front of the room as everyone looked around in bewilderment. This was the first they were hearing that the power outage had been anything but a simple interruption of service.\n\n\"Thank you, Captain.\" said Nash, seeing Cindy's mood and showing deference. \"The FBI has found out some new information regarding the power outage over the weekend. The electric substation was sabotaged, and I'll reiterate what Captain Ross said that we need to keep this in this room. The sabotage was done by persons infiltrating as part of a general maintenance crew. They put shunts into the wiring that gave a false signal to the monitoring station, which ultimately resulted in an overload which caused the system to shut itself down. It took two hours to find the problem and repair it.\"\n\nNash continued: \"We believe that Richard Ferrell was one of the infiltrators.\" He showed a picture of a badge belonging to a 'Richard Stevens', which was Ferrell, droopy mustache and all. \"To accomplish this mission, he would have had to have some training by people who are familiar with the systems. While the systems aren't classified, getting the schematics they would've needed is not very simple for just anyone to do.\"\n\nNash went on: \"The FBI, at least my team working on this, believes that this was a dry run for something Ferrell and his bosses are planning in the future. Of course we're having every one of StatePowerCorp's facilities being checked for sabotage, but we believe they were testing the security checks and defenses, which obviously failed here.\"\n\n\"There were no incidents in the County during the power outage.\" said Nash. \"No break-ins reported, no traffic problems. University Hospital had no problems. We checked there because Commander Troy was there as a patient.\"\n\n\"If I may, Agent Nash...\" Cindy said. Nash nodded, and Cindy said \"The Hospital has emergency generators, which kicked in, but they also have good security. All doors except the front doors lock down during a power outage, and people can come in and out only through the front doors, which had manned security, and the Emergency Room, which also had manned security at that time. No one entered or exited during those two hours.\"\n\n\"What happens if there's a fire during the power outage?\" asked Joanne Warner.\n\n\"That would qualify as one of 'those' days.\" said Cindy, to tepid laughter. \"But to answer your question, I understand that the doors can be unlocked from inside, but there's a trick to it, and only certain people there, like the doctors and head nurses, know how to do it. But the fire evacuation plan mostly goes through the front doors or Emergency Room doors. Anyway, the point is that if Commander Troy was the target of an attack, it didn't happen.\"\n\n\"Agent Nash,\" said Detective Christopher Purvis, \"has the FBI's facial recognition software found any other sightings or IDs of Richard Ferrell?\"\n\n\"No.\" said Nash. \"Not so far. And we have searched and are continuing to search. We found this ID from facial recognition software.\"\n\n\"Okay,\" Cindy said, taking back over, \"let's talk about the next part of this situation. Ferrell was observed behind the State Crime Lab van that Lt. Perlman uses. Detective Joanne Warner gave chase, but Ferrell ran to a waiting car and sped off. The van was very carefully checked out, and it appears Ferrell was stopped before he could do anything to the van.\"\n\n\"So this is personal?\" asked Theo Washington.\n\n\"Possibly.\" said Martin Nash. \"Ferrell has a history with both Lt. Perlman and Special Agent in Charge Jack Muscone.\"\n\n\"True.\" said Cindy. \"I personally don't understand why Ferrell would do this the way he did, but we're going to be watching for him much more closely.\n\n* * * * * * * * * * * * * * * *\n\nI was sitting in the rocking chair at the Mountain Nest, looking out the window over the backyard, with Bowser in my lap getting the skritchins he loved. Buddy was asleep nearer the back door. The doorbell rang, and a moment later my mother guided Chief Griswold into the room.\n\n\"Hello, Crowbar.\" the old Chief growled. \"Petting the dog. Almost as good as fishing.\"\n\n\"I'd say even better, Chief.\" I said. \"Have a seat. Whassup?\"\n\nThe Chief sat down on the sofa against the wall, which was to my left. Bowser had peered over at him, but did not leave his perch on my lap.\n\n\"You heard about the Ferrell sighting behind Lt. Perlman's van?\" the Chief asked.\n\n\"Yes, I did.\" I said. \"Any luck tracing the license plates?\"\n\n\"FBI is working on that.\" said Griswold. \"Fortunately, no tampering of the van was found, and now they're going to be keeping it locked in a secure area and checking it more often.\"\n\n\"That's good.\" I said. \"So nothing was found, eh?\"\n\nChief Griswold peered over at me, and Buddy looked up at me, also. \"So,\" said the Chief, \"sounds like you have ideas about that, Crowbar.\"\n\n\"Yeah, Bowser and I were thinking about that,\" I said, \"and I suspect the reason they did not find any tampering is because Ferrell was actually getting something from the van... perhaps a note or some kind of information taped under the bumper. Ferrell probably had it in his hands when he ran to that car.\"\n\nChief Griswold barked a laugh. \"That's Iron Crowbar thinking, there... and good hero dog thinking, too, Bowser.\" Bowser wagged his tail mightily.\n\n\"And that means,\" I said, \"that someone inside the State Crime Lab building, possibly in the secret SBI areas in the basement, is in collusion with Ferrell, and is passing him information. He may pass that person information the same way.\"\n\n\"Have you told anyone about your ideas?\" asked the Chief.\n\n\"Myron and Mary visited yesterday, and I told them.\" I said. \"They may use considerable discretion in who else they tell while they're doing some checking around.\"\n\n\"Har.\" barked the Chief. \"Well, the reason I came by was to ask if you're ready for the Sharples trial.\"\n\n\"Oh yes.\" I said. \"Today they're working through the initial procedural stuff, then the introduction of physical evidence and the Crime Lab and Medical Examiner's reports and testimony. I go on the stand tomorrow morning.\"\n\n* * * * * * * * * * * * * * * *\n\nAs Captain Cindy Ross walked down the hallway towards her office, she saw her MCD Detectives huddled up around Joanne's desk, which was nearest to the Vice Room and front of the building. Curious, and getting a vibe, Cindy went inside.\n\n\"It's all wrong, ma'am.\" said Joanne, seeing Cindy come in.\n\n\"What's that?\" asked Cindy.\n\n\"We don't understand why the FBI thinks the power station sabotage was a dry run.\" said Teddy Parker. \n\nTheo Washington nodded and said \"That doesn't make sense. That 'dry run' alerted us to their ability to do that to a power station, and of course we're going to upgrade security on all power stations around the State so they can't do it again.\"\n\n\"And it showed us that Ferrell was in the area, as well.\" said Joanne. \"Even without sighting him at the restaurant.\"\n\nCindy pulled up a chair to join the discussion. \"I get what you're saying. So what do you think was the reason for it? There were no incidents while the power was out.\"\n\n\"That we know of, ma'am.\" said Teddy Parker. \"There could've been a home invasion or a business burgled and it wasn't reported to us for some reason.\"\n\n\"That's true.\" said Cindy. \"So what was Ferrell's involvement?\"\n\n\"The Vice Detectives are going to check with C.I.s.\" said Joanne. \"They're also going to put out word about Ferrell and a reward for finding him, and to contact us with any information they get on him.\"\n\n\"Who'd you clear the reward with?\" asked Cindy.\n\n\"The Chief told us about it.\" said Parker. \"He told the Public Relations Officer to put out the word that a reward would be paid for information leading to the apprehension of Dick Ferrell.\"\n\nPart 7 - Trial And Fire\n\nOne thing many people don't realize is that witnesses in a trial cannot be in the Courtroom before testifying. There is usually a 'witness room' where witnesses are held until they're called upon. I was standing in the witness room at 9:00am, Tuesday, April 11th. With me was State Attorney Jenna Stiles, who was one of the Prosecutors along with ADA Paulina Patterson.\n\n\"How's your back, Commander?\" Jenna asked.\n\n\"It's fine.\" I said. \"I've got on a back brace and the bulletproof girdle, so it should hold up okay.\"\n\n\"You can't take any medications for pain while you're on the stand.\" said Jenna. \"We also think the Defense lawyers are going to try to keep you on the stand as long as possible, hour upon hour, day upon day, to weaken you and try to make you make a mistake.\"\n\n\"Bring it on.\" I said. \n\n* * * * * * * * * * * * * * * *\n\n\"The People call Police Commander Donald Troy to the stand.\" announced Paulina Patterson.\n\nThe Bailiffs opened the doors and I walked into the Courtroom. I had a flashback to the Jimmy Lawson case, where I'd deliberately dressed poorly and walked with a shuffle. (Author's note: 'Six Degrees', Ch. 04.) \n\nNot today. Today I walked resolutely down the aisle, tall and erect, my head held high with great confidence. I was wearing my Duty Dress uniform with a white shirt and tie, twin rows of light blue piping on the sides of my pants and a thick band of piping on the wrists of my Uniform jacket. I was wearing my full complement of ribbons (which means I was wearing the scholastic ribbons, divisional ribbons and service ribbons as well as the ones representing medals). My badge and rank insignia were shined up and looked sharp and bright, and my black patent leather shoes would've passed any military inspection.\n\n\"Do you swear to tell the truth, the whole truth, and nothing but the truth, so help you God?\" asked the Bailiff, swearing me in.\n\n\"I do.\" I said.\n\n\"Please be seated.\" said the Bailiff. I sat down in the witness chair, which fortunately was a hard, wooden chair with a tall back.\n\n\"Your honor, may I approach the bench?\" asked the Defense counsel, H.J. Lynch of Chase, Lynch & Berry, P.C.\n\n\"Both sides, approach.\" said Judge Folsom.\n\nOnce up at the bench, Lynch said \"Your Honor, I object to this witness. He just got out of the hospital. He has been under the influence of drugs after his very recent back surgery, especially morphine.\"\n\n\"Are you asking for a continuance?\" asked Paulina Patterson, with as much derisiveness as she could put into her voice.\n\n\"No, I'm asking that this witness not be allowed to testify.\" said Lynch.\n\n\"That's a new one.\" said Folsom. He then said out loud \"The jury will return to the jury room for ten minutes.\" The Bailiffs escorted the Jury out of the Courtroom. Meanwhile, Paulina went to her table and retrieved some documents.\n\n\"Okay, Prosecution,\" said Folsom, \"what is your response to this?\"\n\n\"I can't say those words out loud, Your Honor.\" said Paulina. \"So I'll reply by submitting these medical documents. Commander Troy rejected the morphine machine while in the hospital, which stunned his doctors. He bore the pain, Your Honor. These documents will show that. The documents also show that Commander Troy's only received anti-inflammatory medications, antibiotics, and light sedation medication. He had no heavy narcotics at all.\"\n\nLynch was stunned, and he was not the only one. Judge Folsom looked over at me, still sitting in the witness box, as if I were some sort of alien from Uranus. \"Commander, is this true? No morphine? At all?\"\n\n\"That is true, Your Honor.\" I said.\n\n\"So you were not in pain?\" asked Folsom.\n\n\"I did not say that, Your Honor.\" I replied.\n\n\"We'll take a ten minute recess.\" said Folsom. \"Prosecution, Defense, come to my Chambers. I am going to verify this with the Hospital.\"\n\n* * * * * * * * * * * * * * * *\n\nMeanwhile...\n\nA meeting was taking place in a conference room on the third floor of the Federal Building, which had been swept for bugs three times beforehand. Present were SBI Director Tom Conlan, SBI Agents Norm Chow and Ted Crenshaw, FBI Special Agent in Charge Jack Muscone, FBI Special Agents Martin Nash and Lindy Linares, FBI Consultant and TCPD Captain Cindy Ross, the Deputy Director of the FBI, and retired CIA Deputy Director of the Science and Technology Directorate, Dr. Laura Fredricson.\n\n\"Mr. Director,\" said Tom Conlan, \"Agent Chow has been assigned to the Ferrell case. Agent Crenshaw is working on Organized Crime angles and is currently assisting in the Ferrell case.\"\n\n\"Good, I'm glad to have them.\" said the DepDirector. \"I've heard good things about you from Mr. Muscone as well as the Iron Crowbar, Agent Chow.\"\n\n\"I'm grateful, Mr. Director.\" said Chow dispassionately, showing no emotion on his features.\n\n\"And speaking of Commander Troy,\" said the DepDirector, \"he's testifying in the Sharples trial, and may be doing so, or be held to be recalled, for several more days. So if we're going to pick his brain, submit your questions to Dr. Fredricson to read to him at the dinner table.\" There was polite laughter, and Laura smiled and nodded.\n\n\"Okay, Jack,\" said the DepDirector, \"give us a synopsis of what we've obtained on Ferrell recently.\"\n\n\"Yes sir, thank you sir.\" said Muscone. He got up and turned on the projector, to which his computer was attached. The first slide came up. \"Some months ago, video evidence of Richard Ferrell showed up in the dragging death of Kevin Greeley.\" (Author's note: 'The Other World, Ch. 03-04.) \"We also got a statement from Jerry Saint that Ferrell was involved in the drug distribution that led to the deaths of two people at Greeley's club. And the Iron Crowbar believes Ferrell was partly responsible for the murder of Jeanine Burke, though proving that is going to be tough with Jeff Fuqua already dead.\"\n\n\"Moving along,\" said Muscone, \"the older charges of Ferrell's assault upon Lt. Tanya Perlman and Phyllis Troy still apply. We have evidence that Ferrell was one of the saboteurs of the power substation recently. And last, but not least, the TCPD's Vice Squad has developed some evidence that Ferrell is trying to set up a drug pipeline to the University. Not a very large nor ambitious one.\"",
        "Lindy Linares said \"We are thinking that he's just trying to raise some cash, then will hand off that drug pipeline to others. We also have reason to believe he's associated himself with elements of Superior Bloodlines, and that's beyond anything he had to do with Kevin Greeley's death.\"\n\n\"I can tell you right now,\" Laura said, \"that my husband does not agree with that. He believes Ferrell took part in the Greeley murder to establish bona fides with the White Roots people, but his lodestone is not white supremacy. He's working at another level, a higher level.\"\n\n\"Why does he believe that?\" asked the DepDirector.\n\n\"Jeanine Burke.\" said Laura. \"And Ferrell being a product of Yarborough's eugenics breeding experiments. My husband believes Ferrell's loyalties lie with the rogue cell involved with that.\"\n\n\"You know...\" mused Jack Muscone, \"I just hate it when a bunch of us are agreed on something and have worked it out... and then the Iron Crowbar comes in with something tangential or completely different... and it turns out that he was right and we were all wrong, all along.\"\n\n\"He doesn't think you're wrong on all of this.\" Cindy said. \"He just thinks Ferrell's motives are not simple white supremacy, but something deeper and uglier.\"\n\n\"His back is broken, not his brain.\" said Lindy Linares. Cindy gave Lindy a thumbs-up.\n\n\"What are your thoughts on all of this, Agent Chow?\" asked the DepDirector.\n\n\"Sir,\" said Chow, \"if Ferrell is trying to set up a drug pipeline... maybe we should help him.\"\n\n\"Oooooo, that's Iron Crowbar thinking, there.\" said Cindy.\n\n\"Yesssss...\" said the DepDirector. \"And why do I get the feeling that this has already gone beyond the 'thoughts' phase?\"\n\n\"It has.\" said Norm Chow. \"The TCPD is doing it. They discovered that SBI Lieutenant Mills and Ferrell may have been using Lt. Perlman's van to pass messages along. That's a sideline I'm working on, but they've made contact with Ferrell through Mills to set up a drug buy.\"\n\n\"Okay, then.\" said the DepDirector. \"Let's see if Chief Griswold successfully taught his people how to catch fish. And this one... is a mighty big fish.\"\n\n* * * * * * * * * * * * * * * *\n\nAs everyone was dismissed, Laura asked Jack Muscone to stay a moment. They were alone in the conference room. It is possible Laura had her bug-killer turned full on.\n\n\"Jack,\" she said as they sat at one corner of the table, \"this is part professional and part personal. How do you feel about capturing Richard Ferrell?\"\n\n\"Professionally,\" said Muscone, \"I'll be happy to get a murdering, racist bastard off the streets. Personally... well, maybe I should reserve comment.\"\n\n\"It's privileged, as I am asking to evaluate you psychologically.\" Laura said. \"But I do need to know your state of mind in this. Off the record, I know of that previous situation where you took out your half-brother, the guy who killed Teresa's sister in that car collision. How does this compare?\" (Author's note: 'Dark Side of The Force, Ch. 05')\n\nMuscone sighed, then said \"After what Ferrell did to Tanya, not to mention being part of that dragging death... I don't know... I just don't know. I don't want to step over the line, but if I'm the one to catch him...\" He just shook his head and did not complete the sentence.\n\nLaura nodded. \"I understand. I'm going to ask your boss to hold you back, and make sure you're publicly visible for the next few days. Sometimes it's good to... let others handle things.\" Muscone peered at Laura for a moment, then just nodded.\n\n* * * * * * * * * * * * * * * *\n\nWe went through the ritual of Paulina reading my accomplishments and awards into the record, but only after the overruled objections of the Defense counsel. And then Paulina spoon-fed the case to the jury. Those who have never been on a jury or seen a Court case may not realize how slowly, carefully, and simply the Prosecution has to go while getting the case laid out. It's ritualistic, formulaic, and leads to a long and tiring day.\n\nWe worked through the murder of Scrawny Haskins, which other witnesses would corroborate in the following days. Then we worked through the attempted murder on me at Point Hollow.\n\nAt 4:00pm, Judge Folsom said 'We will be in recess until 9:00am tomorrow morning. Commander Troy, you will still be under oath when we return.\" With that, he banged his gavel. Everyone rose as the Jury was escorted out, then the Judge exited. I was also escorted out by Deputies before everyone else was allowed to leave, ostensibly to keep people from having contact with me while in the Courtroom.\n\nPart 8 - Plan of Action\n\nCindy was also going to be a witness in the Sharples trial, so while I was officially on the stand she did not come up to visit me at the Mountain Nest. The DepDirector's joke wasn't: Laura really did fill me in on the FBI meeting at the dinner table. We were eating hamburgers and potato chips, so Carole did not feed Bowser anything. Jim ate an entire half a hamburger, to his father's stunned amazement. (Double cheeseburger plates of the future, beware!)\n\nI did have visitors after supper: Captain Teresa Croyle, Lt. Wes 'Coldiron' Masters, Detective Grubby Paul, Detective Roy McGhillie, Lieutenant Irwin and Sergeant Rudistan. We carried chairs to the backyard, and I walked down the stairs backward, as that was much more manageable and less painful than going down stairs forward.\n\nAfter settling down with soft drinks in hand, and Buddy firmly ensconced on Teresa's lap and being petted by her, they filled me in on what they'd learned about Ferrell's drug operation.\n\n\"You were right, Commander,\" said 'Coldiron' Masters, \"that Ferrell might've been around Lt. Perlman's van to get a note that might've been hidden on it. The Mouseketeers reviewed some tape from the University Stadium's security cameras. Do you know who an SBI Lieutenant Leon Mills is, sir?\"\n\n\"Oh... yeah.\" I said. \"He was Gaston's main assistant before Gaston became a Regional Director. He's one of the dirty ones I'd like to see cleaned out.\"\n\n\"Yes sir, that's him.\" said Coldiron. \"He was seen on tape around Lt. Perlman's van. Can't really tell if he's leaving a note or anything, but it's as you like to say: it was easy to find the solution once we had the answer.\"\n\n\"That's good work, guys.\" I said. \"We also know that someone was driving the car Ferrell dived into when he was spotted by Tanya and Joanne. Any idea on that?\"\n\n\"No sir.\" said Teresa. \"We don't think it was Mills... why would he drive Ferrell to the van where he left a note for Ferrell? He'd just give it directly to Ferrell.\"\n\n\"Iron Crowbar thinking there.\" I said. \"Captain Croyle, sure you don't want to start carrying a crowbar?\"\n\n\"Don't need it, sir.\" Teresa said. \n\n\"Slender Man would disagree, ma'am.\" said Rudistan, with his usual joviality. That earned him a 'Teresa Cunt' glare, but my laugh rescued Rudistan.\n\n\"Okay,\" I said, \"so is Mills part of Ferrell's drug operations?\"\n\n\"We don't think so, sir.\" said Roy McGhillie. \"We're not getting anything on Mills from any C.I.s.\"\n\n\"Ferrell is using go-betweens to set up a pipeline, because the regular boys know he was once NTF and they don't trust him at all.\" said 'Coldiron' Masters. \"And those go-betweens don't really know who the players are around here. So we're slipping people in as contacts. Unless he already knows them, we think he's fallen for it\"\n\n\"Yes sir, he has.\" said Grubby Paul, who along with J.J. 'Ice Cube' Perry was the heart and soul of the TCPD's undercover operations. \"We're setting up a meeting between our C.I. and the go-betweens tonight, at one of the bars along University Avenue. If we can make it happen tomorrow night, that'll be good. If we have to wait until Thursday, we can do that, though it's more risk and less chance of full success.\"\n\n\"Sounds good.\" I said. \"But I'd like you to consider suggesting doing it during daylight hours. While I'm sitting in Court. You can have your guy tell the go-between that doing it while the Iron Crowbar is in Court, unavailable, and everyone else more concerned about Court security than looking for drug deals, will give you a better chance to complete the deal undetected.\"\n\n\"We can do that.\" said Grubby Paul. \"Word is that Ferrell wants a fast deal; he's hard-up for money. We'll tell him we can get him a small supply to sell, then a bigger supply on Friday. But he won't make that meeting if he comes to the one tomorrow.\" \n\n\"Where's it going to go down?\" I asked.\n\n\"Strip mall on the northwest side of Town.\" said Roy McGhillie, who gave the full address. \"We're going to bring in a fake SPS delivery truck.\"\n\n\"What time?\" I asked.\n\n\"We'll shoot for 2:30pm.\" said Grubby Paul.\n\n\"Okay, good enough. Captain Croyle will give the final go-ahead.\" I said. \"And speaking of Captain Croyle, I need to talk with her and Sergeant Rudistan for a moment. Everyone else, thanks for coming, and I won't keep you up any later.\" They took it as the dismissal it was, and left.\n\nAfter they were gone, Laura brought someone else to our little group before going back inside to babysit. It was my nephew Todd. I noticed Laura's lipstick was practically gone, and her hair was mussed up. The easy conclusion was that my stud nephew had been making out with my beautiful wife while waiting to come out.\n\n\"So, Mr. Rudistan,\" I said quietly in the darkening night, \"you worked with Lt. Perlman. How do you feel about what Ferrell did to her?\"\n\n\"Makes me mad to think about it, sir.\" said Rudistan. \"I'm still mad about our buddy Pete Feeley, and the attempt on their kid, too. I probably should not go on the arrest... I might get carried away.\"\n\n\"I hear that.\" I said. \"So, Todd, I can't prove beyond a reasonable doubt the bastard helped murder the mother of your son, but how do you feel about it?\"\n\n\"Like you do, Uncle Don.\" said Todd. \"Our souls cry for Justice.\"\n\n\"Teresa?\" I asked.\n\n\"Tanya was my friend, and still is.\" said Teresa. \"Ferrell attacked my fianc\u00e9's grandmother, too. And there's... well, there's another reason... So, Commander... what about you?\"\n\n\"I am sure,\" I said, \"that while I'm sitting in Court, I'll be idly thinking that when Ferrell is going through the prison system after his arrest tomorrow, that it would be only 'meet and right\"... and just... that he learn just what it means to be wheelchair-bound... paralyzed from the waist down... see how he likes it...\"\n\nBuddy raised his head to look up at Teresa, who looked back at him and petted him. Todd and Rudistan just nodded as they contemplated my concept of 'Justice' for Richard 'Dick' Ferrell...\n\nPart 9 - Backbreaking Work\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded MILF reporterette at 7:00am, Wednesday, April 12th. \"Channel Two News has learned that former SBI Agent Richard Ferrell, who is wanted for several crimes, has been spotted in our Town and County over the weekend!\"\n\nA tape of Ferrell attacking Tanya Perlman in the State Crime Lab Building, and throwing Tanya's wheelchair on her legs, was shown repeatedly as Bettina said \"As this video footage shows, former Agent Ferrell attacked SBI Lieutenant Tanya Perlman after her State Crime Lab discovered the use of synthetic chemicals in the death of Jeremy Moreland.\"\n\nBettina went on: \"Agent Ferrell is also wanted in connection with other crimes, including possible participation in the dragging death of Kevin Greeley, a.k.a. 'The Metrosexual', who owned the clubs 'Pink' and 'Punk' here in Town. Mr. Ferrell may be a part of white supremacy groups, and he is also allegedly involved in the drug related deaths of two University students at the 'Punk' club some weeks ago.\"\n\n\"The TCPD has intensified their search for former Director Ferrell,\" said Bettina, \"and sources tell Channel Two News that the FBI and SBI are also participating in the manhunt for Mr. Ferrell, who they consider to be extremely dangerous. The TCPD Vice Squad is concentrating on former Agent Ferrell's possible narcotics ties, and sources tell Channel Two News that Ferrell might be starting up drug operations in this County.\"\n\n\"In other news,\" continued Bettina, \"the death penalty trail of former TCPD Detective Leonard Sharples continues today. Commander Donald Troy was on the stand all day yesterday. The defense counsel made over thirty objections to his testimony, and it is expected that their cross-examination will be very thorough and will take the entire day.\"\n\n\"Good grief.\" said Joanne Warner as the MCD Detectives drank their coffee. \"Is it just me, or is Bettina outright trying to make it sound like Commander Troy is lying on the stand?\"\n\n\"The Press is out of control.\" said Teddy Parker. \"They no longer report the news, they create it for agenda-driven purposes.\"\n\n\"What about you, Theo?\" asked Joanne. \"You think the Press is dishonest?\"\n\n\"I always come back to the question of 'Why would they lie?'.\" said Theo.\n\n\"And I have the answer for you.\" said Cindy Ross, coming into the room. \"Like the Commander likes to say: 'Follow the money'. They're not going to sell advertising or get more viewers talking about what a great job the Police are doing, or that black and white people worked together on the Ronald Reagan Park beautification project. They sell drama and conflict.\"\n\n\"I agree, ma'am,\" said Teddy Parker, \"but the last few years they've taken it a lot farther. They suppress news that doesn't correspond to a certain agenda and political ideology. Bettina's story this morning was just short of outright lying, and some national outlets are putting out factually false stories, and once again all favoring one particular political ideology.\"\n\n\"And their hostility towards Christians borders on outright media jihad.\" Joanne added.\n\n\"Well,\" said Theo, \"as the Commander also says, we can't have our Constitutional Republic without a Free Press protected by the First Amendment.\"\n\n\"Are they really a 'Free' Press?\" Joanne asked back. \"Reporters want to get paid, and they won't get paid unless they parrot what their editors want to hear---\"\n\n\"All right guys,\" interrupted Cindy, \"let's get back to Police work. I'm going to go talk to the Vice guys and see if Bettina's reporting has damaged their plans to capture Ferrell. In the meantime, what are you guys doing?\"\n\n\"Ferrell. Ferrell. Ferrell.\" said Parker, sounding bored.\n\n\"I'm cleaning up some loose ends on the Forbes & Sehgal case,\" said Theo Washington, \"and the plane crash that killed Mr. Steinhart. Sonali and I have been looking for financial issues with their office up here in our County.\"\n\n\"Cool.\" said Cindy. She then turned to Joanne.\n\n\"Ma'am, I'm still peeking at this cold case.\" said the lovely blonde Detective Warner. \"Jason Rutledge was the Class President of that Class, and a woman named Susan Gurley is the Vice President. She is the one who sets up these reunion gatherings and stuff, so I'm going to interview her about the reunion ten years ago.\"\n\n\"Okay, but not until Ferrell is busted.\" said Cindy. \"Which I hope happens today. But Ferrell is our end-all mission.\"\n\n\"Yes ma'am.\" said Joanne, feeling as if she'd been chastised.\n\n\"Ma'am,\" said Theo, \"what about SBI Chaplain Ikea? And his possible connections to Ferrell. They were great friends once before; some even say they were butt-buddies. Shouldn't we be checking up on him?\"\n\n\"He's a Chaplain, a man of the Lord.\" said Joanne, taking Theo's bait hook, line and sinker. \"Why would you investigate him?\"\n\n\"O-kayyyyy\" said Cindy. \"I have your new mission, Joanne. You are to get on that computer and thoroughly read up on Steven Ikea, including internal Police reports of his physical assault upon Jeanine Burke, his assault upon Commander Troy's mother, which almost got Ikea murdered on the spot, and his attempt to frame a University football coach. I will be asking you a lot of questions about 'man of the Lord' Steven Ikea, Detective Warner, and you'd better have well-researched answers. Okay, folks, get started.\" \n\nWith that, Cindy exited the MCD room, leaving a stunned Joanne Warner behind her. \"Did Chaplain Ikea really do all those things?\"\n\n\"And more, Joanne.\" said Teddy Parker. \"He was Captain Malone's right-hand man here, when Malone was corrupting this Police Force. Ikea was a bad, bad seed.\"\n\n* * * * * * * * * * * * * * * *\n\nCaptain Ross entered the Vice Room. It was rare for everyone to be at their desks this early in the morning; Vice Detectives often were up and out during evening and night-time hours, and would come in later in the mornings if they needed to get at least four hours of sleep per 24-hour period. That edict had come down from the Police Commander... who had simply read the edict of then-Lieutenant Teresa Croyle.\n\nBut they were all here this morning. \"Hi folks!\" Cindy called out. \"Did you guys catch Bettina's broadcast?\"\n\n\"Yes ma'am.\" said Christopher Purvis. \"She might as well have advertised that we're going after Ferrell today.\"\n\n\"And that's why I'm here.\" said Cindy. \"Does this harm your operation to get him?\"\n\n\"No ma'am.\" said Grubby Paul. \"In fact, Ms. Wurtzburg might be upset to know that it might actually help us. Our contact met with Ferrell last night, and reported that Ferrell could not hide his anxiousness to get the deal done as quickly as possible. He was very amenable to our moved-up timetable, and we are a 'Go' for 2:30pm, if Captain Croyle gives the green light.\"\n\n\"Good.\" said Cindy. \"Okay, guys, I could get called to be a witness at the Courthouse any time today, especially after lunch. So Grubby, take the lead on this. And best of luck to your success today.\"\n\n\"Thank you, Captain.\" said Grubby Paul.\n\n* * * * * * * * * * * * * * * *\n\nI'd expected the cross-examination to be tough. And I was right. H.J. Lynch was doing his damnedest best to make it sound like I'd murdered Scrawny Haskins and tried to kill myself.\n\nHe started by asking me \"How are you feeling this morning, Commander?\" It wasn't a friendly, casual question; he was trying to establish that I was not up to giving this testimony. Paulina immediately objected to the question, and Folsom sustained it. The Jury looked confused, and Folsom got upset. He had the Jury go out for ten minutes, then brought the lawyers to the Bench.\n\n\"Defense counsel,\" barked Folsom, anger in his voice, \"I will not tolerate shenanigans like that. You keep it up, and I'll hammer you. If this case goes to mistrial for any action of yours, I'll have you in Contempt, and I'll have you disbarred. Do you understand?\"\n\n\"I... I just asked the Commander how he was feeling, Your Honor. Just like saying hello---\"\n\n\"Your Honor,\" cut in Paulina sharply, \"we're not fools here, and we see what the Defense counsel is trying to do. We've long since established that Commander Troy is fit to give testimony today. I am lodging a protest that the Defense counsel is intentionally trying to waste our time in an effort to harass the witness.\"\n\n\"And I'll take that under advisement, Prosecutor.\" said Folsom. \"No more b.s. tricks, Counselor.\"\n\n* * * * * * * * * * * * * * * *\n\nIt was still a long, long day. Lynch was trying every trick in the legal book. Judge Watts would've shut him down, and hard, long before now, but Judge Folsom tended to give more leeway in his Courtroom.\n\nLynch pushed against every single thing he could, trying to impeach my testimony. Several times he said things like \"Are you sure you don't want to refer to your notes?\" as if I was contradicting my Police reports. Paulina objected and Judge Folsom sustained every time, so Lynch's attempts to make the Jury think I was saying anything wrong was mitigated.\n\nThen Lynch played his last card with me. He tried to say our sting capturing Sharples at Point Hollow was 'entrapment'. Now Paulina had spent most of the day before laying the groundwork that it was a sting, that it showed the same pattern that was used in the murder of Scrawny Haskins, and that it was legitimate in every way. But Lynch went for an attempt to rebut that.",
        "\"So, Commander,\" said Lynch, \"let's just suppose that my client had not even gone to Point Hollow that day. What would your entrapment scheme have done then?\"\n\n\"Objection, Your Honor.\" said Paulina.\n\n\"Your Honor,\" said Lynch, \"I'm trying to establish that Commander Troy's actions were entrapment and attempted to alter how my client would normally act.\"\n\n\"The Objection as to form is sustained.\" said Folsom. \"Frame your questions properly, Mr. Lynch.\"\n\n\"Commander,\" said Lynch, \"hypothetically speaking----\"\n\n\"I don't answer hypothetical questions.\" I said loudly, interrupting the lawyer. \"I'll answer to what actually happened to the best of my knowledge, but I will not speculate nor play hypothetical games.\"\n\n\"Permission to treat the witness as hostile, Your Honor.\" said Lynch. This meant he could ask leading questions, and have more latitude in the form of his questions.\n\n\"Prosecution?\" asked the judge.\n\n\"The Defense is already treating the witness in a hostile manner, Your Honor.\" said Paulina, making the packed Courtroom erupt in laughter. Paulina continued: \"This is the worst witness to play games with, Your Honor, but I won't object.\"\n\n\"Very well.\" said Folsom, trying not to smile. \"Permission granted to treat this witness as hostile.\"\n\n\"Commander Troy,\" thundered Lynch, \"isn't it true that you lured my client to Point Hollow to trap him into a discretion?\"\n\n\"No.\" I said. \"I had a warrant to execute a sting operation, which was successful.\"\n\n\"But didn't you pose in front of a mirror, to make it look like you were standing in a window?\n\n\"That was part of the sting.\" I said.\n\n\"And it could've been anyone that actually shot at you, couldn't it? Even one of your own Officers who was tired of your abusive treatment of him or her?\"\n\n\"That's a hypothetical, which I won't give the sanction of replying to.\" I said, not falling for the trap. \"In actuality, the videos at the scene clearly show the defendant making the shot.\"\n\n\"And all those video cameras at the scene...\" said Lynch. \"They were there to entrap my client, as well?\"\n\n\"They were documenting the sting we were conducting under the Court-issued warrant.\" I said. \"And showing the same pattern that was used in the murder of Scrawny Haskins.\"\n\n\"Commander,\" growled Lynch, \"did you have information leaked that would lead my client to come to Point Hollow?\"\n\n\"No.\" I said.\n\n\"Then who did?\"\n\n\"I don't accept the premise of your question, that anyone at all leaked anything.\" I replied, again avoiding a trap.\n\n\"So, Commander,\" said Lynch, trying a new tack. \"Do you acknowledge that you tried to have my client fired from the Town & County Police Force?\"\n\n\"I stated that yesterday.\" I said.\n\n\"Objection, Your Honor!\" shouted Paulina. \"That was covered yesterday. Defense counsel is attempting to re-hash old information, and in doing so is deliberately wasting time.\"\n\n\"Sustained.\" said Folsom. \"Cover new ground, Counselor.\"\n\n* * * * * * * * * * * * * * * *\n\n2:00pm, Wednesday, April 12th. The SPS van pulled up to the strip mall. Two men got out and went into one of the stores. It was an empty store.\n\nWatching outside were Ferrell and his 'hired hand', a young man sent by Mr. C. to 'assist' Ferrell in his new operations... and to keep watch over Ferrell, and to keep Ferrell out of harm's way.\n\n\"Anyone else in that office?\" asked Ferrell. The young man was using a device that could resolve infrared heat signatures. The two men from the SPS truck were clearly visible.\n\n\"There's no one else in there.\" said the young man.\n\n\"All right, pull up.\" said Ferrell. The other man drove the car down the parking lot and parked next to the truck. Ferrell got out and hurried into the front door. The other man followed.\n\n\"All right, we've got the goods in the truck.\" said the tall blonde man when he saw the two men come in. \"You got the green?\" By 'green', he meant green dollar bills.\n\n\"Yeah.\" said Ferrell. \"In the briefcase in the trunk of the car. The lock numbers are 7-8-9. So do we drive each other's vehicles out of here?\"\n\n\"Or we unload the stuff out of the truck, then you take your car around and load it into the trunk.\" said the tall blonde man.\n\n\"That'll work better.\" said Ferrell. \"Okay, let's get going--- what the fuck?!?!?\"\n\nThey poured out of the back room and out of the back of the truck and through the front door. The four men found themselves surrounded by four persons in all black, wearing black full head masks. Three of them were men, and one was obviously a woman. They were heavily armed with M-4 'assault rifles'.\n\n\"No one moves, no one gets hurt.\" hissed the tallest man, who was broad-shouldered and looked like a powerful specimen of a man. \"Okay, you two,\" he said, pointing to the blonde man and his associate, \"get the fuck out of here. Now.\" The two men did not walk but ran out of the front door and away from there.\n\nThe tall man and one of his associates, who was more slender but was muscular and in excellent shape, disarmed Ferrell and his associate as the third man, who was a bit more portly, and the woman covered the rogue former Agent. They manacled the other man's hands behind his back with handcuffs and forced him to sit down, then tied up his legs at his ankles. They then handcuffed Ferrell's hands in front of his belly.\n\n\"Richard Ferrell... Richarrrd Ferreelllll...\" hissed the woman, coming up and looking into Ferrell's very scared eyes, his mustaches drooping. \"We've been waiting for this moment for a long, long time. Okay, guys... do it!\"\n\nThe portly man and the more slender man grabbed Ferrell and picked him up off the floor, his face and belly upwards towards the ceiling. The more powerful man came up to them, to Ferrell's left side and helped them lift him up some more. Then, as they dropped him, the powerful man thrust his knee up as hard as he could... right into Ferrell's back.\n\n*WHAM!*\n\n\"AAAUUUUGGHH!\" yelled Ferrell as the man's knee slammed into his lower backbone. Ferrell fell to the floor, feeling the sharp pain from the blow. The masked men picked him up again, and dropped him again. This time, the powerful man's knee blow did the job:\n\n*SNAP!!*\n\n\"AAAAUGHHH!\" screamed Ferrell as he again fell hard to the floor. He was crying and screaming, gasping in sheer pain. The woman came up behind him as he lay on his side, unable to move his legs. She felt for what she wanted to feel, and found it.\n\n\"AAAUGH!\" Ferrell screamed again as she pressed into the damaged area of his back. She nodded at her masked companions.\n\n\"That was for Tanya Perlman.\" she whispered. \"Now this is all just a bad dream, and you'd better not remember it, or I'll come back and cut your fucking balls off.\" With that, the four masked persons fled out the back door.\n\n* * * * * * * * * * * * * * * *\n\n\"Whoaaaa...\" said the C.I. as he and his associate drove up in an SPS truck. \"There's a truck already there. I don't like this.\"\n\n\"I'm calling our contact.\" said the other man. \"We're aborting this mission...\"\n\n* * * * * * * * * * * * * * * *\n\nCorporal Kirkpatrick and Sr. Patrolman Hicks were the first TCPD Officers to arrive at the scene. Entering the store in the manner of clearing it, they saw a man tied up hand and foot, and Dick Ferrell lying on the ground, crying in pain, unable to move his legs.\n\nThen came Detective Roy McGhillie and Lieutenant Wes 'Coldiron' Masters. \"Call an ambulance.\" said Masters.\n\n\"We already did, sir.\" said Hicks. \"We also read them both their rights while videotaping the scene.\"\n\n\"Good job.\" said Masters.\n\n* * * * * * * * * * * * * * * *\n\nAt 4:45pm, H.J. Lynch turned to the judge and said \"No more questions, Your Honor. But we reserve the right to recall this witness.\" This meant I could not sit in and watch the trial, as I might be recalled as a witness.\n\n\"Agreed.\" said Judge Folsom. \"Prosecution, redirect.\" Paulina asked me a few questions to clarify a few points, then said she had no more questions.\n\n\"You may step down, Commander,\" said Judge Folsom, \"but be prepared to return at any time if you are recalled.\"\n\n\"Yes, Your Honor.\" I said. I struggled to stand up, but managed to walk out of the Courtroom walking steadily and evenly, hearing the Judge say the proceedings were adjourned until the next morning...\n\nPart 10 - Served Right\n\n6:50am, Thursday, April 13th. There was an air of excitement in MCD as everyone from Major Crimes and Vice gathered to watch Bettina's broadcast, including me, Your Iron Crowbar, and SBI Lt. Tanya Perlman, both of us sitting in wheelchairs. FBI Special Agent in Charge Jack Muscone was there, along with Special Agent Martin Nash. Only Cindy was not there: she would be testifying when the trial of Leonard 'Sergeant' Sharples resumed.\n\nI'd gotten an ovation of applause when I came in. But the Chief was not pleased at all when I came in, wearing a red golf/polo shirt with a Police Commander badge embroidered over the heart, and khaki pants and my badge on my belt, but not my gun; I was not yet re-qualified with it.\n\n\"You had better not be trying to return to doo-ty, Commanderrrr.\" growled Chief Moynahan. \"You are supposed to be rest-ing, or be on call for that Fat Boy's trial.\"\n\n\"Yes sir.\" I said. \"But this one is big, and I want to be around friends and family for it.\"\n\n\"Heh heh heh heh.\" laughed the Chief, and then the humor vanished. \"Do not try my patience by trying to do anything resembling Police work, Commanderrrr. Or I might just beat you down myself, Police Boxing Matches style.\" I laughed at that, then promised the Chief I wouldn't do any real work.\n\nAnd then... the moment arrived...\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded reporterette at 7:00am, from in front of University Hospital. \"Channel Two News has learned that wanted former SBI Agent Richard Ferrell has been captured by the Town & County Police Force!\"\n\nA huge cheer erupted in the room, followed by high-fives and more cheering. We were recording the broadcast, and put the DVR into play to hear all of Bettina's words:\n\n\"Police found Agent Ferrell and another man, who has been identified as Benny Brighton, a University student, in a strip mall office space yesterday. According to Police reports, Brighton admitted that he and Ferrell were engaging in a drug buy when four masked persons attacked them. Agent Ferrell suffered a broken back in the attack and was rushed to University Hospital. Roll tape.\"\n\nBettina then had Dr. Morgan on tape, being interviewed: \"Yes, Mr. Ferrell suffered a broken back. We operated to repair the damage, but we believe that Mr. Ferrell is paralyzed from the waist down, and will never walk again.\"\n\nThe room had gone silent, and, appropriately, it was Tanya Perlman's voice that cut through it:\n\n\"Serves the bastard right.\" she said coldly. \n\nEveryone heartily agreed and the noise started up again. Tanya and I fist-bumped.\n\nI looked over to the door of MCD, the one nearest Vice and the front of the Headquarters building. Teresa Croyle was standing in the doorway, silently watching. Our eyes locked for a second, and I gave her a barely perceptible nod, which she returned.  \n\nIt would never be spoken out loud that Teresa had been the woman leading that raid upon the most very unfortunate Ferrell, that Teddy Franklin and Micah Rudistan had been the assistants helping my nephew Todd Burke drive his knee into Ferrell's back and snap his spine. Tanya and my mother were 'properly' avenged... and most important of all, so was Jeanine Burke.\n\nBettina went on: \"Commander Donald Troy was in Court, testifying in the Leonard Sharples case, when this attack happened. He issued a statement congratulating his Vice Squad for arresting Ferrell. Captain Cindy Ross was also at the Courthouse at the time of the attack, and she re-iterated the Commander's praise for her Vice unit.\"\n\n\"Glad I have an alibi, the way Bettina's talking.\" I said out loud. \"You'd think she's accusing me of doing it.\"\n\n\"God, how the Press just loves you, Commander.\" said Tanya, her voice both teasing and sarcastic.\n\n\"Glad I have an alibi, too.\" said Jack Muscone quietly, a bit too quietly. He just happened to have been addressing a University class on Criminal Justice procedures at the time, at the invitation of the School and of University President Dr. Sidney P. Wellman, at the 'suggestion' of Dr. Laura Fredricson...\n\n* * * * * * * * * * * * * * * *\n\nCongratulations poured into Headquarters from all over the State. The Governor personally called Police Chief Moynahan to congratulate him, and the Governor also made a statement before the press congratulating us that was broadcast all over the State. Jack Muscone went in and congratulated everyone in Vice with a handshake and his personal thanks.\n\nBefore the Chief kicked me out to go back home, Jack, Tanya and I talked in my office.\n\n\"Nash was here, interviewing this Benny Brighton guy with your Vice people.\" said Muscone. \"Brighton looks to be one of those 'useful idiots' that Ferrell would use, but there's something off about him. He's not a University student, like Bettina claimed he was. He's not even from this State; he's from California.\"\n\n\"Word I have is that he was singing like a canary last night.\" I said. \"He has given us corroboration that Ferrell supplied Jerry Saint with the drugs that killed Lena Hill and Kate Noll. He gave us names of the people that dragged Metrosexual Kevin to his death, but he said he didn't go on that himself. He also says he does not know why they did that to Kevin, but I get the idea he's singing so the same thing won't happen to him. He had no clue about Jeanine Burke, who she was, and ditto that for Michael Burke.\"\n\n\"Well,\" said Muscone, \"keep an extra copy of the confession tapes. Les Craig is going to a Federal Judge to get Federal custody of Ferrell.\"\n\n\"And Franklin Washington is trying to stop it.\" I said.\n\n* * * * * * * * * * * * * * * *\n\n\"Cin-dee!\"\n\nMy daughter Carole was very happy to see her cousin Cindy. It was 4:30pm when the Green Crowbar came up to the Mountain Nest. After Cindy talked with Carole and Jim, and played with Buddy and Bowser, she came and sat down next to me on the sofa as I sat in the rocking chair.\n\n\"Yes, I'm done, for now.\" said Cindy to me. \"You missed some fun today. Lynch wanted me to be subject to recall, and Paulina objected, asking why Lynch wasn't done with me completely. Lynch was stammering and hemming and hawing, and didn't have a real good answer. Judge Folsom did grant the recall request, but it was funny to watch.\"\n\n\"So, what do you think?\" I asked.\n\n\"As far as I can tell, all I did was corroborate what you testified to.\" Cindy said. \"Lynch tried to work me on the Hamilton County crime scene, but it wasn't all that much. I think he's starting to realize defeat. You must've torn him up good.\"\n\n\"I hope so.\" I said. \"How did the Jury look?\"\n\n\"Interested, while Paulina questioned me.\" said Cindy. \"A little bored when Lynch tried stuff. Paulina objected to him covering old ground twice, and the Jury seemed tired of his antics.\"\n\n\"Good.\" I said. \"We haven't seen the Defense's case yet, but the Prosecution sounds good so far. And by the way, we have a very happy Police Department after capturing Ferrell.\"\n\n\"I heard he met with great misfortune.\" said Cindy. \"Can't say I'm sorry to hear that.\"\n\n\"Karma.\" I replied simply.\n\nPart 11 - BFFs Forever\n\nFriday, April 14th. Edward and Stephanie Steele and their daughter Selena were bringing their newly adopted daughter Marie to the Mountain Nest, to meet Carole and of course the redoubtable Bowser. My mother, Laura and I were waiting for them. When we told Carole that the little girl Bowser had saved was coming to visit, Carole surprised us by being very happy about it.\n\nSo when the doorbell rang and Laura answered, little blonde-haired Marie led the procession inside, and was met in the hallway by Carole.\n\n\"Hi.\" said my daughter importantly, the perfect little three-year-old hostess. \"I'm Carole.\"\n\n\"I'm Murr-EE.\" said her guest proudly.\n\n\"Here, Bowser!\" Carole called out. \"Bowser, this is Marie.\" she said as Bowser came bounding up. He sniffed at Marie and seemed to recognize her, as his face looked up in wonder at her.\n\n\"Hello, Bowser.\" said Marie, petting Bowser on the head. \"Thank you for saving me.\" All the adults ooh-ed and ahh-ed. Bowser sat down and let Marie pet him some more, and Carole joined in.\n\n\"Bowser is a good dog.\" said Carole, in the form of a quotation. Bowser wagged his tail mightily.\n\n\"He's my he-ro!\" said Marie.\n\n\"My daddy is my hero.\" said Carole, which drew more 'ooh's and 'aah's, and melted her daddy's heart, of course.\n\n\"Mine, too.\" said Selena to the 'big kids' in the room. The Steeles agreed.\n\n\"We're having a tea ceremony for Bowser.\" said Carole. \"Come on!\" The little girls hurried into the den, where Carole's little table and two chairs were set up. A third place was also set. All the adults just stood and watched, or sat down and watched in the case of the guy with the bad back.\n\nAnd the teapot had real tea in it. Carole poured for Marie and herself. \"Bowser is going to have dog biscuits. He's not supposed to have people food, my daddy says.\"\n\n\"O-kay!\" said Marie. \"Here's a biscuit, Bowser!\"\n\nAs Bowser sat down at his place between the girls, they fed him pieces of dog biscuits, which he very much liked.\n\n\"They are just so cute!\" said Stephanie Steele. Everyone had sat down and was watching, now. Little Jim was in Selena's lap; he seemed to like the beautiful woman. Buddy was in my lap as I sat in the rocking chair.\n\n\"It is so much fun having a little sister.\" said Selena. \"She's just a joy, always happy. She loves drawing and coloring.\"\n\n\"Hey Marie!\" said Carole, having heard that, \"let's draw some pictures!\" \n\n\"Yeah!\" agreed Marie happily. The girls went to fetch paper and crayons, and soon were hard at work, drawing pictures. Bowser supervised.\n\n\"Wow, Marie is good.\" I said. Marie had drawn pictures of Carole and Bowser, and while childish, they were actually very good, and what I'd expect a much older child to draw.\n\n\"Yes,\" said Selena, \"she has a lot of talent with drawing and coloring. We're encouraging her to draw and paint with watercolors, and she goes at it for hours.\"\n\n\"Hey Daddy!\" Carole called out. \"I'm going to write a story, and Marie is going to do the illus... illuuuu... er, the pictures for it.\" These are three-year-olds, I reminded myself.\n\n\"I can't wait to see it and read it.\" I said encouragingly.\n\n* * * * * * * * * * * * * * * *\n\n\"How's your back, Don?\" asked Edward Steele as he and I sat in the living room after dinner. \n\n\"Good.\" I said. \"I'm pretty slow now, but with more rehab I should return to almost normal.\"\n\n\"Good.\" said Steele. \"We were concerned about you. I'll tell you, I don't get it. Thomas P. Cook and Kelly Carnes are fighting like hell to keep you from getting another Purple Order. Why do they hate you so much, Don? After all you've accomplished for this Town & County. Why the hate?\"\n\n\"Hate comes from fear.\" I said. \"They obviously have something to fear.\"\n\n\"Well, I'll tell you this.\" said Edward. \"John Colby and I are quietly looking into Cook's finances with that Pine Valley project. We'd really like to bust his ass down, especially after what he pulled with the Community Center.\"\n\n\"If you find anything actionable, let me know.\" I said. \n\n\"Oh, we will.\" said Edward. \"And there's another thing I want to bring to your attention. J.P. Goldman and I are not always on the same side as Reginald B.F. Lewis politically, but we're pretty good friends and have dinners together with our wives from time to time. Stephanie and I were having dinner with Reginald and his wife a couple of nights ago, and he told me that someone is beginning to try to stir up some stuff in the majority black districts on the Southside of Town and the County.\"",
        "\"Riots?\" I asked.\n\n\"Not yet, but it could lead to that.\" said Edward. \"T-Square has never been one for problems in the Tenderloin District. He has too much property and money invested; he stands to lose a lot if rioters burn down his clubs. But he and the Reverend Joseph E. Williams talk to Reginald about issues from time to time. Someone is trying to stir up talk about Police targeting Blacks. And Carnes and Cook are whining about the Police not writing enough tickets, and needing to go after petty lawbreakers.\"\n\n\"In the Tenderloin District, I'm sure.\" I said witheringly.\n\n\"Not much gets by you, Iron Crowbar.\" said Edward with a teasing grin.\n\n\"Yes sir,\" I said, \"I've heard a few things myself. I appreciate you telling me, and I'll keep an eye on it.\"\n\n* * * * * * * * * * * * * * * *\n\nIt was their first slumber party. Carole and Marie fell asleep, then woke up and Laura and Selena got them ready for bed. Selena was going to stay in the guest room, and the Steeles said goodnight to us and went home.\n\nBowser got in his basket and stood guard as the girls slept together in Carole's bed. For some reason, this was a bigger deal to Laura and Selena than it was to me; I'm just not privy to the ways of women. I went on to bed myself.\n\nThe redoubtable Bowser had not only saved Marie's young life, he'd forged a friendship between his humans. Carole and Marie would become best friends. They would go to kindergarten then school together, playing together, collaborating on many schemes together that would keep Carole's father on highest alert and on his toes.\n\nThey'd share their teen troubles and foibles together, consoling each other over boyfriends and other such things. They would cry together in inconsolable grief when Bowser passed away of old age. And they'd both go to college together... as Wildcats. They would be in each other's weddings, and be best friends for the rest of their lives...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "iron crowbar"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/gods-and-crowbars-ch-02"
}