{
    "title": "Sholan Alliance - AU Bk. 02 Ch. 01",
    "pages": [
        "I am working on getting the chapters fixed for the first part of this series. Lit.com is being a bit slow which is somewhat frustrating but eventually it will be fixed. As far as this chapter there is going to be more action and personal conflicts not to mention some politics. Oh, and there is (gasp) a sex scene in this chapter. \n\nAfter I submit this for posting I am going to finish bk 2 c 3 for Ranicke and submit it. That might end up being tomorrow (Monday) so hopefully it will be up sometime the middle of next week.\n\nThe last thing I have to say is that there are only a few detailed sex scenes in this series as with my other stories. I find, this is a personal opinion that having a sex scene in every chapter of a story gets boring after a while. I have come across some very good stories that keep getting broken up by one sex scene after another. That makes it hard for me to follow the plot line.\n\n*****\n\nBilly and Satasha spent the next two days in the isolation room till Doctor Jusdean cleared them. They slowly walked back to the rooms they had been using. Once inside Billy sat down and groaned. \"I feel better but still feel like a star ship ran me over.\" Satasha laid down on the couch and rested her head in his lap and he started stroking her fur.\n\nShe sighed. \"I know Yilly but you will feel better in a few days and by the time you get home you will feel fine.\" Her eyes closed and she started purring. As they were relaxing the door chimed. \n\nNeither one of them felt like moving so Billy called out. \"Enter at your own risk.\" The fact that he was starting to show a bit of humor indicated he was starting to feel better.\n\nHe wasn't startled when Engineer H'Zalon walked in since he had sensed him outside the doors. When he paused at the door Billy waved him in. \"Please come in and if you wouldn't mind getting us some c'shar I would greatly appreciate it. I need to take my meds.\"\n\nH'Zalon paused. \"Are you sure I am not interrupting. I know you are still recovering but I wanted to talk to you about the changes we would like to make. Some of it is going to be about the voltage, current, and amps that your electrical system uses. The rest of it is going to be about the actual changes.\" When Billy waved him in he did so and hurried to get some drinks for the three of them.\n\nBilly took his cup and tossed back a couple of pills and a good mouth full of the drink. He would have preferred coffee but the thought of it made his stomach sort of queasy. \"Thanks. Let's start with the electrical system first and with the engines I have I have plenty to use.\" The Sholan's had finally gotten around to issuing him a set of VR glasses and he pulled them out. \"Show me and then explain the symbols you use for electricity and your PIE chart of how you utilize electricity.\"\n\nThe engineer grinned at him. \"No trying any sneaky tactics to pick my brain Yim.\" He had heard of the threats Jim had made to disassemble something. He had a feeling that was one of the reasons they had been moved to these quarters. If he was to bored he might try. Moving him here and allowing him out would give him something to do. H'Zalon pulled up the power requirements needed for the changes that had been recommended.\n\nSatasha shook her head at the two of them. She understood much of what they were saying since it was low level electronics but she didn't want to listen. \"Yimmy I am going to go lay down for a while.\" She gave him a light kiss before going to the bedroom.\n\nIt was about two hours later when Jim pulled the glasses off. \"I need to go and relax myself. My headache comes and goes and it is starting again.\" He carefully stood up. \"Why don't you come to dinner this evening and after we eat we can talk a bit more.\" He headed for the bedroom and stripped down and crawled into bed.\n\nSatasha was sleeping on her stomach so Jim draped an arm across her waist and nestled his head on her back. As he was laying there he was feeling a warm surge and flow of power between the two of them. He fell asleep with a contented smile on his face.\n\nSally and Vangie came into the suite and peeked into the bedroom and had to smile since the two looked at peace with the world. Quietly they closed the door and she leaned back against Vangie. \"It has been so long since pappa has looked so comfortable and content. Maybe now they can take out a bonding contract.\" It still sounded a bit odd to her but she was starting to see the attraction the two had.\n\nShe liked Vangie and he was one of the most attentive lovers she had ever had. Right now it was simply friendship and enjoying their time in bed. Having him wash her hair and back had most definitely become something she enjoyed. It still felt a bit odd to be showering with her father and Satasha but nothing like that first day. \"We will wake them shortly before dinner time. Till then let them rest. I know the doctor didn't want to let them out quite yet and plenty of rest is mandatory.\"\n\nVangie had to smile at her and scooped her up. \"Well I guess that means that we need to figure something out to kill some time.\" He started licking and gently biting her neck and ear. She started giggling and he loved the sound of it.\n\n\"Well big boy I am sure we can find something to do.\" He carried her into their room and as she was laughing he gently tossed her on the bed. \"I most definitely think we can find something to occupy ourselves with.\" His fingers ran down the tabard and opened the seal. Underneath she wasn't wearing anything except for some panties.\n\nShe was so different than a Sholan female with the smooth skin and breasts. For some reason she also shaved her groin other than a strip down the front. He smiled down at her and leaned forward and kissed her. \"You are a very lovely woman and I am very pleased that you have chosen to spend time with me.\" He didn't have any illusions about what she might feel towards him. He did like her and was coming to care for her as a good friend. After having thought that he knew that she wasn't ready to settle down unlike her father and Satasha.\n\nSally wiggled slightly and smiled at him. \"See something you like?\" She started running his hands through his fur and sighed in contentment. \"As I said, such lovely fur and a warm person. I also am pleased to have met you Vangie.\" As she returned the kiss her hands came up and stroked the fur alongside his face. \"My lovely Sholan, how glad art I that thou hast chosen to spend a bit of time with me.\"\n\nOnce in a blue moon Sally spoke oddly but he got the gist of the meaning. \"Nay fair lady, tis I who is honored that such a lovely and fair maiden hath chosen to spend time with me.\" It was hard to speak that way but he knew she enjoyed listening to things like that.\n\nVangie stood up and stripped his belt and tabard off as Sally did the same with her clothing. Once she was undressed she moved towards the center of the bed so Vangie had some room as well. Just for good measure she stretched and smiled as his eyes roamed over her body. \"I think someone see's something he likes. Now the question is if he is going to simply stare or join me in bed.\"\n\nHe snorted at her. \"Oh so you want me to join you do you? Well I think I am going to start with the toes today...\" Vangie lightly caught one foot and lifted it up and ran his tongue across the bottom of it. When she squealed he licked some more before slowly starting his way up the leg. When he hit the knee he moved to the other leg and repeated the process.\n\nSally tried as hard as she could not to laugh as he licked her feet and toes. She was almost as ticklish as her father in that area. \"You are being a butthead you overgrown cat.\" As he worked his way up her legs she could feel her body responding. His tongue was long and flexible and Vangie was very skilled with it. As he licked and nibbled he would use the soft sides and then the rough center for a different sensation.\n\nHe could feel her relaxing into his ministrations and was pleased. Vangie hadn't been sure how she would react to his doing something different. From her scent she was starting to enjoy it. Her musk was different than a female Sholan but still smelled as sweet. Vangie slowly licked and nipped his way up her legs and could feel her reacting. \n\nWhen he got close to her groin he altered his path so that he went up the other side of the crease where her leg met her groin. \n\nShe moaned slightly since that wasn't where she wanted him. Sally's hands curled in his hair as she tried to direct him where she wanted him. She knew she wasn't strong enough but she had to try. \"Oh god, move down and use that lovely tongue of yours.\" Her back was arching slightly and her hips were slowly moving up and down as she tried to entice him. \"Please Vangie don't make me wait.\" There was a definite moaning in her voice as well as a slight panting as well.\n\nHe smiled at her and let out a low rumbling purr. \"Tonight I am going to love you the way I would a Sholan female. I have enjoyed doing what you have been showing me. Now it is my turn.\" Vangie's eyes had a slight glow to them as he looked at her. He kept moving up her body with the licks and nibbles though he avoided her nipples for the moment. Eventually he made it to her neck and pressed his nose to the pulse point and smiled. \n\n\"You smell so lovely my sweet human.\" He worked his way to her lips and gave her a slow kiss. \"I am going to make sure you are totally satisfied by the time I am done.\" She could see a slight curl to his lips as he leaned back a bit. As he was smiling at her he felt her running her hands through his fur on his chest.\n\n\"Oh? Is that so? I think we can make sure we are both satisfied.\" Her fingers were delicately working their way through the fur of his chest and found his nipples. Most human males weren't nearly as sensitive to having their nipples played with. Sally figured it was since the Sholans were covered with fur so it protected the skin. What she found so interesting was how soft the skin was. It was as soft as one or two of the females she had taken to bed.\n\nYes she had played both sides of the field and enjoyed both genders since each had given different types of attention. She started stroking and playing with his nipples and he started moaning himself. Sally gave him a low chuckle and leaned forward and captured his lower lip in her teeth and nibbled the way he liked it. From him she was definitely feeling a sense of enjoyment of her entire body. He was also enjoying her reacting somewhat as a Sholan would.\n\nVangie leaned into her nibbling and closed his eyes and his purring increased. Her fingers were still lightly twisting and pulling on his nipples and he could feel his genitalia starting to get ready to descend. He still had some time before he would have to take her or he would be too engorged. If he tried after that it would only hurt her. \"You know what I like Sally and don't stop.\" It was a hard choice between leaning into the nibbling or her playing with her hands.\n\nSally would have been purring if she had been a Sholan. Her hands roamed down the fur on his chest to the slightly longer belly fur. Knowing that too much stimulation below his waist line would cause him to become aroused to soon she kept her hands above his waist. Her hands slid around his sides and worked their way up his back. She loved the feel of the muscles in his arms and back. \"My sexy Sholan. You are starting to drive me nuts so you had better get to work.\" Her legs curled around his and pulled him close.\n\nVangie smiled and started working his way down her neck and finally settled on a nipple to play with and she pressed her chest against his mouth. As he was sucking and nibbling on her nipple and the tissue around it one hand started sliding lower. When his fingers gently opened her folds he could feel how wet she was. \"Oh my, I think someone is enjoying herself.\"\n\nSally started trying to press her groin against his fingers even more. He was trying to drive her nuts and she knew it. \"Now be a good Sholan and start moving further south and put that lovely tongue to even better uses.\" His fingers had started stroking her folds and creases before finding her clit and she almost instantly had an orgasm. Her entire body tensed up and groan of satisfaction escaped her lips even as she was biting her lower lip.\n\nHe kept working his way down till he reached her groin and lightly nuzzled her lips as he inhaled deeply. As he was inhaling her scent his tongue lightly flicked out and sampled her juices. Vangie let out a low 'rrrr' of satisfaction at the flavor and he gently licked each fold and finally used the tip of his tongue to stimulate her clit and she came again. \n\nSally tried really hard not to pull on his hair to hard but when her body tensed up her hands made fists. \"Uuunnnngggghhhh, Ahhhhh. G... G... God don't...\" She couldn't finish as he brought her to another climax. She felt him roll her over so she was on her knees with her head resting on her forearms. As she was adjusting slightly she felt the tip of his penis start sliding in and her hands were now clenching at the sheets.\n\nVangie was most definitely ready for her since he had felt his genitals descent from inside. The first erection phase had started and he needed to be inside her before the second triggered. As he gently pushed in he could feel how wet and tight she was. As he was starting to move in and out he ran his hands along her back and enjoyed the feel of her skin against his finger pads. \"How sweet thou art.\" \n\nBoth of them could feel the secondary erection start and as he pushed forward she pushed back. Both stayed that way till the finally swelling had stopped. He rested his hands on her hips and started moving again. As he was moving he could hear her moans against the pillow and had to smile.\n\nSally could feel just how engorged he was. The secondary erection locked them together so the strokes were short. Every time he pushed forward the base would rub past her G spot and she came again. This would happen at least four times before he came. Eventually he did and man did it feel like he had filled every nook and cranny inside her.\n\nThey collapsed on their side on the bed and he lightly attacked her ear as he was purring. \"Vartra's Bones that was good. I hope you enjoyed it as well.\" Vangie was definitely panting as he was recovering.\n\nSally pulled one of his arms around her and wrapped hers over his and curled their fingers together. \"You are such an attentive lover Vangie. I have to admit that was different but good god you had me going.\" As they were laying there slowly recovering a slight smile crossed her face since she had plans of her own for him.\n\nOnce he had disengaged he rolled on his back and stretched. As he was stretching he felt her hand sliding between his legs and start playing. \"Um, what are you doing?\" She had done similar before but not after the bed play.\n\n\"It is your turn so lay back and relax.\" She rolled over and shifted till she was facing his groin. He had mostly slipped back inside but Sally wasn't worried about that. She leaned forward and after parting the fur started licking the opening for his genitalia. The taste was different but not bad at all. As she was licking her fingers were stroking around the opening and she could feel him respond.\n\nVangie wasn't really sure what to do at that point and wasn't totally sure what she was intending. What she was doing was most definitely stimulating and he could feel the swelling and everything descended. When her lips settled around his penis he tensed up. Her mouth was warm and soft. Her teeth felt different as well and he started lightly thrusting his hips towards her.\n\nSally slid as much of him inside her mouth as she could and gently ran her tongue around his shaft. He did have a salty flavor much like human males but the rest of the taste was very different. As hard as she tried to take her time it wasn't all that long before he came again. As he did she heard that deep growl of satisfaction from him. \"And that was your treat.\" She lightly licked some of the juices off him and then settled down next to him and rested her head on his chest.\n\nHe had to lay there for a few minutes while he waited for his eyes to finish uncrossing. \"Sally you can do that anytime you wish.\" They lay there for a while before he gently nudged her. \"I would like a shower if you don't mind.\" One hand ran down her side and rested on her hip. \"I love the smell of you but really don't have the urge to heavily smell of bed play.\"\n\nShe giggled at him and rolled off the bed and then grimaced. \"I have to remember to bring a wash cloth to bed when we make love.\" It was starting to run down her legs and she grabbed her panties and used them to stop the leakage. \"Sometimes I have to wonder just how much juices you have.\" She was giggling and scurried to the bathroom.\n\nHe snickered and rolled off the bed a bit slower since he needed the bathroom as well. Eventually they were showered and clean. When Vangie led her out to the living area he could feel a slight tingle building as well. After consideration he decided it was just an after affect of having sex. \"I am starving now. Shall we order a meal from one of the restaurants?\"\n\nSally stretched and smiled. \"That sounds good and I am feeling too lazy to go and get something to eat.\" To be honest after the bed play she was feeling entirely too relaxed to go anywhere. At the moment she was planning on curling up with Vangie after they ate and simply enjoy the contact.\n\nAbout then the door buzzer went off and they gave each other a look since they had no idea who might be there. Vangie opened the door to find the engineer and Z'Marl outside the door. Z'Marl pushed the cart with the food on it into the room. \"Good evening to both of you. Yilly told H'Zalon to come up for dinner and we took care of it.\"\n\nSally raised an eyebrow and then waved both into the room. \"Let me wake them up and they will be out in a moment.\" As she was heading towards the room Vangie was getting them something to eat. She entered the room and walked over to the bed and smiled. After sitting on the edge of the bed Sally reached over and lightly brushed some hair off her father's face.\n\nShe sat there for a moment and relaxed as she looked at how contented he looked. Satasha also looked very comfortable and content. \"I am so happy for you pappa. You nave another lady to love and care for now.\" Sally reached over and gently stroked Satasha's hair before finally waking them up.\n\n\"Pappa food is here as well as H'Zalon and Z'Marl. Time to wake up and eat.\" She gently shook him to wake him and he smiled before rolling over and looking up at her. \n\n\"I am glad that you are finally coming to terms with Satasha's and my relationship.\" He winked at her as he rolled over and tickled Satasha lightly. She twitched and started yawning.\n\nSatasha rolled over and draped an arm across his waist and licked an ear. \"Hey you two, she yawned again and sniffed the air. Oh yummy, food and you had fun didn't you Sally?\" She smirked at her as she stood up and started dressing.\n\nBilly ignored the comment Satasha had made and started getting dressed as well. \"Thank god my stomach is feeling better. I can actually sniff without starting to look for the anti-vomit pills.\" He finally stood up and gave Sally a good hug and wrapped an arm around her as they walked out.\n\n\"Good evening to both of you and that smells wonderful.\" He walked over to Z'Marl and gave her a good hug and a light kiss. \"If you keep feeding me this way I might be forced to toss over Satasha for you.\" He winked at her and then moved over to the table.\n\nSatasha growled at him and then poked him in the side. \"Just for that you are going to be sleeping on the couch tonight.\" When Billy turned and pulled her close she couldn't help but purr. She could feel just how much he loved her. She could tell that he cared for Z'Marl as well but nothing like he cared for her.",
        "Billy nuzzled Satasha's neck and lightly nibbled on an ear. \"My love and my life. How I love thee. Maybe now we can start looking into the bonding contract.\" He released her as the food was placed on the table and he smiled.\n\nM'Zalon had to blink when Billy said that and tilted his head and smiled slightly. \"Good luck with that both of you. Maybe when we get to earth you can introduce me to some of your friends.\" He was grinning when he said it and everyone laughed.\n\nThey started eating and Billy was pleased that his stomach wasn't complaining about it. Eventually everyone was done and he belched and sighed. \"Excuse me and that was darn good. Thank you for cooking this hun.\" He knew she had cooked it just for them.\n\nEveryone moved over to the couches and settled down and Billy couldn't help but looked pleased since Satasha was on one side and Z'Marl was on the other. They were both leaning against him and M'Zalon sighed. \"How did an old man like you get so lucky? Two very attractive young ladies curled up next to you.\" He had to smile at him when he said that.\n\nZ'Marl laughed and stood up and walked over and settled down next to him and curled up. \"There, now you don't have to be jealous.\" She leaned against M'Zalon with a slight grin as he twitched and flicked his ears.\n\nBilly grinned at him and then became more serious. \"So what questions do you have for me?\" He asked as he pulled on the glasses. He noticed that Z'Marl did as well and a slight smile crossed his face. He was going to make her do much of the speaking.\n\nM'Zalon placed an arm around her shoulders and lightly touched her cheek. \"Such a pretty lady. I hope that one of these days I have someone like you to bond with.\" He knew her since he spent a moderate deal of time in the dining area she worked at. \"Well Yilly after reviewing what we discussed this morning...\" He went on to ask several questions.\n\nWith a slight smile he looked at Z'Marl. \"Would you like to answer him? You can explain it as well as I can till it gets to my ship and her systems.\" Satasha blinked at him and then her eyes narrowed slightly at the two of them.\n\nSatasha didn't say anything but had to wonder why he was asking her friend to present some of the information. She did notice that Z'Marl looked a bit uncomfortable and had to wonder why. Something was going on though she had no idea what it might be. As she was contemplating this everyone started putting their VR glasses on. Satasha decided not to and settled for curling up and placing her head in his lap and closed her eyes. She wasn't going to fall asleep but she was going to relax and simply listen.\n\nZ'Marl glared at Billy and then sighed. \"Yes Yilly I will start off though you might have to correct me.\" She flipped the screens out and started talking. She definitely wasn't comfortable talking about it but since Billy had asked her she was going to. He was still recovering and was still looking sort of pale and tired. \"Well starting off with...\" Z'Marl started talking and that got everyone's attention.\n\nSally rolled her eyes and covered her face with her hands. \"Oh god, another brainiac... \" Vangie snickered at her reaction and settled back to listen. She leaned against him and listened carefully and was impressed. \"Z'Marl that is really good though I am shocked you didn't end up with a headache.\"\n\nBilly snickered. \"Can you say geek foreplay? When I spent the night with her we talked math for quite some time.\" He gave Z'Marl a warm smile and then waved her to continue talking.\n\nThe engineer was looking rather startled and impressed. He gave her another hug and had to smile as well. \"That is very impressive since I am still trying to wrap my mind around some of the concepts.\" He glanced at Billy and shook his head. \"Only you could find someone aboard the ship who can understand your mind.\"\n\nThey talked well into the evening till Billy was starting to get tired. \"See you for breakfast.\" He looked down and noticed that Satasha had fallen asleep. \"She looks so young when she is sleeping. I almost feel bad for robbing the cradle.\" His fingers were gently stroking her cheek as he was talking.\n\nM'Zalon couldn't help but smile. \"She does look comfortable and you can't be that much older than she is.\" He really had no idea of how old the humans were or how long they lived. Since Billy had two adult daughters he had to be older but just how much again he didn't know.\n\nBilly just shook his head and waved at him as he left. \"Time to get her to bed.\" He gently lifted her head and slid out from under her. \"Can you give me a hand Z'Marl?\" He smiled when she came over and helped him pick Satasha up and take her to the bed room.\n\nZ'Marl carefully started taking Satasha's clothing off and set it on a chair. While she was doing that Billy was pulling the covers back and helped get her tucked in. \"She is so lovely and has come to mean so much to me.\" He looked up at Z'Marl and there was a gentle expression on his face and the love could be seen in his eyes.\n\n\"She is a lovely person as well. I am very pleased that the two of you found each other.\" As she was talking she pulled her clothing off much to his surprise.\n\n\"Um, what are you doing?\" This was most definitely not something he had expected. Even if he had felt up to it there wouldn't be any bed play with Satasha there. Yes he did appreciate her body and the color of her fur but all he wanted to do was go to sleep.\n\nShe smiled at him. \"Just going to curl up with the two of you and sleep. I was very concerned when you became sick and just want to make sure you are getting well.\" She looked down at the floor and then back at Billy. \"I have really been enjoying the conversations and letting you teach me.\" It had been fun this evening since she knew that at least two of the people understood her.\n\nBilly tilted his head and smiled. \"Then curl up you shall and I hope you sleep well.\" He stripped down and crawled in and curled around Satasha. When Z'Marl joined them he couldn't help but smile a bit. \"I feel like the two of you are making a Yilly sandwich.\" He smiled as she slipped an arm around him and snuggled up close.\n\nThey fell asleep and he slept well during the night. When he finally woke up he found that he was now curled around Z'Marl and Satasha was curled around him. Darn it but he was feeling comfortable. \"Mmmm, I could get used to this occasionally.\" He felt Satasha's arm tighten around his waist.\n\n\"Hmm? Oh, so Z'Marl curled up with as well. We tend to do this fairly often unless you are a telepath. Then you tend to sleep alone or only with other telepaths. It is because touch carries so much information.\" She ran her hand along Z'Marl's side and smiled. \"I was totally shocked last night when she started explaining your equations. I knew she was smart but not that smart.\"\n\nHe grinned and tickled Z'Marl till she woke up. \"I don't know about you two but I have to use the bathroom and then a good shower.\" He crawled out and eventually they ended up in the shower. Sally and Vangie walked in and joined them.\n\nSally gave him a look and raised an eyebrow at him but didn't say anything. Instead she turned to Vangie and started working on him. God the Sholans were changing him as much as he might be changing them. How far was it going to go? Hell how much were they going to change her? For a brief moment she leaned against Vangie's back and sighed. It would be nice to get back to earth but she was really loving what she was learning.\n\nThey finally made it to the living room and Billy had to grin. M'Zalon had brought breakfast and had set the table. Billy had given him access to the main room when they were there. \"Thank you for breakfast and it smells good. I feel sort of bad that you have been spending money on us though.\" \n\nM'Zalon grinned at him. \"Nah, I have been given a budget for things like this.\" He winked at Billy. \"It is a bribe to get you to give us more of your secrets from that headache causing brain of yours.\" He smiled at Z'Marl. \"You young lady are going to have a talk with me later. You managed to take what Yilly had done and explain it in a way that was more understandable. I am going to ask to have you assigned to work with him.\"\n\nShe lowered her ears and shook her head. \"Sir I would prefer not to, or not in an official position. I like my job and what I do.\" Z'Marl was looking upset and Billy went over to hug her but she tried to resist.\n\nBilly ignored her slight struggling and pulled her close. \"Hun you have so much to give. I understand your loving your job. I love being a tramp freighter captain and don't want to give it up. The secret is that I can do both. You can as well. Come with us and you can serve the first contact team and work with me on the equations.\" He was stroking her ears and hair for all he was worth as she tucked her head into his neck.\n\n\"I don't know Yilly. It scares me to let people know what I can do.\" She tucked her head into his neck and held on for dear life. What he was asking of her really did scare her since being different where she came from was frowned on. \"I don't want to be different than everyone else.\"\n\nSatasha was letting Billy deal with her since she was sure he had gone through much the same. Instead she went and dialed up some drinks and fixed Billy's the way he liked it. They went on the table and she settled down and waited.\n\nBilly had to smile slightly at Z'Marl. \"I can sort of understand that though in my case as I got older I decided I didn't care. Sticking out where I came from was a good way to be picked on and pushed around.\" He held up one hand and grinned. \"Not all the scars came from banging my knuckles on the engines.\" Billy kept the stroking up and listened to what she was saying with both his ears and his mind.\n\n\"Hun you are different but not in a bad way. It doesn't make you a different person than you are now. You are a lovely young woman who is bubbly, vivacious, and outgoing. Being smart, or I should say showing your intelligence and using it won't change who you are.\" He rested his hands on her hips and looked down at her. \"The other night in your room was very enjoyable. It was nice to actually have a conversation without causing headaches.\"\n\nZ'Marl leaned back and looked at him with searching eyes. They were vulnerable looking when she met his eyes. Both his scent and body said the same thing, he wasn't lying and was telling the truth. To be honest she had greatly enjoyed talking to him as well. The next morning had been rather nice as well but being able to actually use her brain and have someone else understand was nice. \"Yilly I really am scared of exposing that side of me to random people.\" One hand came up and cupped his cheek. \"Will you, with Satasha's permission, stand next to me and help me?\"\n\nSatasha stood up and came over and rested her hands on Z'Marl's shoulders and nuzzled her cheek. \"Of course he would stand next to you and he doesn't need my permission.\" Satasha finally ended up with her head resting on Z'Marl's shoulder. \"I guess this is sort of saying welcome to the family. Just don't give me any headaches though.\" \n\nSally shook her head and looked at Vangie. \"I wonder if pappa is starting a harem...\" She started laughing when she said that since Billy had glared at her. \"Oh my such a look daddy, did I hit a nerve?\" When Vangie covered his face with one hand she really started laughing. \"Maybe I will start one as well.\"\n\nBilly smiled at her. \"Of course I will stand next to you just like I did with both of my daughters. Being smart runs in the family and there were a few occasions I had to deal with petulant children. They thought they should have gotten better grades and reviews since their parents were wealthy. I know of at least three that are flipping burgers currently.\" He tilted her head up and lightly licked her nose. \"I will say the same thing, welcome to the family. Now I am hungry and I am going to chow down.\"\n\nWhen he let go of Z'Marl Sally came over and gave her a good hug. \"Pappa is really good at standing next to people and supporting them. The problem he has is being able to lean on others and ask for help. Satasha has started teaching him to lean on others but he is pretty stubborn.\" She gave her another squeeze before letting go. \"If it helps you are amongst several really smart people and when you meet my sister...\" She rolled her eyes.\n\nBilly snorted but started eating. \"I think now would be a good time to go down to my ship and really let you take a look at it. This will give you an idea of what might be done to it.\" As they were eating they changed the subject and simply chatted. By the time they were done Billy stretched and yawned. \"A couple of hours of work and looking around and I am going to need to crash. If nothing else Satasha and I can use the bed in my room for a nap while you are looking.\"\n\nOnce they were done eating they headed down to the ship and started working on it. During the day both he and Satasha napped off and on as needed.\n\n~~~\n\nOver the following week or so the two of them finally recovered and work was progressing. The rooms had been completed and the ship stocked with the Sholan meal pouches. He had his own food as well which he was looking forward to. The Sholan food was good and he was enjoying it but he wanted something from home.\n\nThe hardest part was integrating the new sensors and communication equipment into his ship. It ended up they simply installed some totally new sensors and communication equipment. They were stand alone units that he would have to take the information from and punch it into his systems. It was a jury rigged affair but it should work till he had time to upgrade his sensors with his technology.\n\nAs the various techs were working on his ship Billy and the others spent a great deal of time with the first contact team. That was fascinating in a way but also seemed to give him headaches as well. Every morning he was working with the tutor to learn to build the shields and controlling his talent. Both he and Satasha were getting stronger which greatly confused both the tutor and mentor aboard the ship. \n\nEventually the ship was ready to go and he was going to be taking most of the warriors so they had more room aboard the barque that would be carrying the rest of the contact team. They were going to be escorted by a stealth fighter for good measure as well. Z'Marl had been spending a great deal of time in their quarters and spent a number of nights curled up with the two of them as well.\n\nThe night before they were going to be leaving the three of them were curled up in bed. Z'Marl had fallen asleep a few minutes before and her body was relaxing as was her face. \"She almost makes me think of one of my girls.\" His fingers gently stroked her cheek. \"Well not including the fun and excitement occasionally.\" He looked at Satasha. \"She looks so young when she is asleep. You look younger as well but not nearly as young as she does.\"\n\nSatasha smiled back at him. \"I had noticed that some time ago. I had to wonder about the mask she puts on and why she does.\" Her hand was resting on Z'Marl's hip since she was between the two of them this evening. \"I am starting to think she is falling for you Yilly. You are giving her something she has never had before. I understand her position and why and it doesn't bother me.\" She reached over and stroked his cheek. \"I do have a surprise for you before we leave tomorrow. I am going to let you wonder though.\"\n\nBilly closed his eyes and leaned into the stroking and simply smiled. \"Yes my love and thank you for understanding. For some reason I just feel a need to take her under my wing and help her.\" He closed his eyes and sent a surge of love to Satasha. He didn't realize it but some of it washed over Z'Marl and a smile crossed her face as she slept.\n\n~~~\n\nThe next morning when Billy awoke he was rather startled to find Satasha dressed up nicely. She smiled at him. \"Good morning and get a quick shower while I pull out some cloths for you two.\" Satasha had secretly been working on the surprise. She had made sure that the others knew to dress up as well.\n\nBilly frowned at her and stalked towards the bathroom. Behind him he could hear Z'Marl rolling out of bed and padding after him. Sally and Vangie were in there and he yawned a greeting before stepping in and started working on Z'Marl's back and hair.\n\nBefore he started she turned around and wrapped her arms around him and rested her head on his shoulder. \"Thank you Yilly for everything.\" She rubbed her head on his chest for a moment and then stepped back and turned so he could work on her back.\n\n\"Silly cat, of course I would help you. Satasha said you are part of the family and family means a great deal to me.\" Once they were done he walked into their room and let Satasha help him get dressed. She even made a neat pony tail for him. It wasn't very long but was still tidy. As they were dressing Z'Marl was as well and all three of them looked good when they were done.\n\nBilly really had no clue what was going on and had finally decided they were dressing up to meet the contact team. It was silly since they all knew each other now but figured they were going to film the meeting and take off. He settled his tabard and over robe a bit more on his shoulders and walked out. Vangie was dressed smartly in his uniform and Sally really looked good in the Sholan clothing that had been tailored for her. \"Okay Satasha lead the way.\"\n\nShe smiled and took his hand in hers and headed towards the elevators. When they got off the elevators they were on a level he hadn't seen before and was feeling confused. \"Where are we going?\" He asked.\n\nSatasha smiled. \"It is only a bit further Yilly and then you will see.\" She refused to comment any further and even blocked off the mental connection they had. That had been harder than she had expected and she was going to have to think about it. Eventually they reached the temple and with a smile she opened the door and led them in.\n\nBilly looked around and his eyes found the statue and his eyes widened. He recognized the statue as Vartra who was one of the major deities on Shola. \"It is a fascinating statue but what does it have to do with us?\"\n\nAt that time a Sholan came out of another doorway and smiled. He was dressed in a gray robe with purple trim. \"Good morning Satasha and I take it this is Yilly correct?\" Nordan smiled at Billy and held his hand out palm up. \"I am pleased to meet you Yilly. Welcome to the temple of Vartra.\"\n\nBilly smiled at the Sholan and lightly touched his finger tips before moving his hand back to his side. \"I am feeling really confused. Why am I here?\" Satasha leaned against Billy and she had a pleased smile on her face.\n\nThe priest waved him over to a table. It had a book, paper, and some incense. \"Welcome to the temple of Vartra and Satasha talked to me a few days ago. She indicated that she wanted to take out a three year bonding contract with you.\" He smiled at her. \"After talking to her I agreed that I would do the ceremony for the two of you. I can feel her love for you and when I touched you I could feel your love for her.\"\n\nBilly looked stunned as he turned to Satasha. His mouth was moving but he just couldn't talk at the moment. Tears started to trickle down his cheeks as he was trying to gather his wits. Satasha stepped forward and wrapped her arms around him and lightly licked the tears off.\n\n\"I do love you deeply Yilly and when I saw the chance I reached for it and took it. I told you I wanted a bonding contract with you and you accepted.\" She relaxed when he rested with his head against her chest and felt him take several shuddering breaths.\n\n\"I accept Tasha. I want this contract with you as well.\" He took one last deep breath and turned to face the priest. \"I am not sure what I need to do but I also wish a bonding contract with Satasha.\" He was trying hard not to crush her hand as he held it.",
        "Nordan gave him a warm smile. \"It is nice to see two people that are so in love. I am pleased and honored to be the one to do the bonding.\" He led them over to the table. \"Actually it is relatively simple though occasionally some people do have something a bit more formal. I will verify that both of you wish this, I will note the bonding date, names, and how long in my book. The people with you will sign as witnesses and then we will sign the actual contract. Once that is done you will throw some incense on one of the flames to carry your wishes to Vartra.\"\n\nBilly nodded at what he was saying and followed him over to the small table. He was still holding her hand. He was sure she could feel his shock at the surprise she had arranged. His eyes were on the table and the large heavy book resting there as well as the paper contract. As hard as it was his hand was still shaking in nervousness.\n\n\"Satasha do you wish this bonding contract with Yilly Madlax?\" He asked her and when she said yes he turned to Billy. \"Yilly do you wish this bonding contract with Satasha Verzilon?\" Billy still couldn't speak and settled for a nod. Everyone could feel his love for her and how much he wanted this.\n\nNordan smiled at him and gave him a reassuring nod. He started filling out the book and once done he turned it for the two of them to sign. Both did though Billy's was a bit shaky. \"Now take some incense and toss it onto the flame. This will send your hopes and prayers to Vartra.\" \n\nBilly followed Satasha's example and he closed his eyes. The one thing he really wished they could do was have a child together. He sent a wish to Vartra that eventually they would have a child even if he or she had a Sholan father. Once done they turned back to the table and found the others had just finished signing the book.\n\n\"Please come back over and sign the contract as well.\" He smiled as they did that and it was witnessed as well. \"One copy is for the two of you and the other will be forwarded to the main temple on Shola to document the bonding.\" He turned to Satasha and smiled. \"As you requested I held onto the bonding bracelets for you.\" He flipped the cover off the bracelets. They were bronze and on one surface was an engraving.\n\nNordan picked up Billy's bracelet and held it out to Satasha. On it was engraved his ship with some scroll work around it. She wrapped it around his wrist and snapped it on. Once done Nordan handed the other bracelet to Billy. He looked at it and smiled. It was an engraving of a pair of boots and a pair of sandal's the Sholan's occasionally wore. Next to it was engraved 'Traveling shoes'.\n\nOnce he had placed it on her wrist he pulled her into a good hug and kiss. He licked her nose before lightly nipping it. \"That is for being a stinker and trying to give me a heart attack.\" Billy rested his head on her chest and sighed. \"This was such a wonderful surprise and a good way to start our flight.\" He looked at the priest. \"Thank you father for allowing this and for your blessings. It is time for us to git down to the hanger bay.\"\n\nThe others clapped and cheered them and Billy had a really shy smile on his face as they left. To be honest he was totally in shock and his brain was trying to either melt down or kick start so it was working again. \"God woman you... I can't even begin to describe how I feel.\" He frowned for a moment. \"I could probably work up some equation but it would end up giving you a headache.\"\n\nSally smacked him for that and groaned. \"If you do that I am taking your VR glasses away for the duration of the trip.\" Just for good measure she smacked him on the back as well.\n\n~~~\n\nWhen they reached the hanger bay he found all the warriors and the first contact team waiting as well as the commander. As they approached all of them started cheering and Billy almost instantly blushed. \"Satasha if I didn't love you so much I would hate you right now.\" He muttered in her ear. For a brief moment he waited for the rest of the ship's crew to show up and throw a party. \"Well let's get loaded up and on our way. My traveling boots are starting to itch and I can't wait to get home and see how many more headaches I get to cause.\"\n\nThe commander frowned at him. \"Please try to avoid that. I don't want them thinking all we do is give those out.\" After a moment he smiled and stepped aside and waved him towards his craft. \"Safe trip Captain Madlax and if all goes well we should see you in a few months.\" \n\nBilly moved forward and to the ship and was followed by the others. It was going to be crowded since he, Satasha, and Z'Marl were going to be in his cabin. The engineer was going to be sharing a room with a warrior. The rest of the warriors assigned to his ship were going to be two to a room as well. One drawback was there were only two crew showers so that was going to be a pain. Now his cabin had a shower for the captain and he didn't have any intentions of sharing.\n\nThe main airlock was between the crew section and the engines and cargo section. As they moved forwards he let Vangie assign the crew to the rooms. \"Sally once we get underway I want you to give the warriors some training on the weapons. We shouldn't need them but better safe than sorry.\" Vangie nodded as well.\n\n\"Several of us have training as ship's crew as well and it might be handy if you could teach them the basics of your ship. That way we can rotate crew through there and have a round the clock watch.\" It would also keep the warriors from becoming totally bored. That tended to lead to trouble at times.\n\n\"Good idea and it will keep them from deciding to turn my ship into a major training exercise.\" He grinned at the snickers and snorts. \"Actually though I am sure you have ship boarding training it might be good for you to use my ship as an example of the average small Terran ship.\" That would also keep them occupied as well. \"Just don't break anything please or I will send the bill to your Commander.\"\n\nOnce the warriors were settled Satasha, Billy, and Sally settled in the chairs for the various stations. \"M'Zalon if you want to have a seat in that chair please do. Don't touch anything since it is the weapons station. I would really hate to accidently do something like shoot your ship.\"\n\nHe laughed as he settled down. \"I would hate to try and explain that as well.\" He had to shudder at that thought. \n\nZ'Marl grabbed the last station and settled down to watch. She was quite interested in how the ship was run and she was definitely going to check out the engines. The two Sholan's kept quiet as Billy radioed for permission to take off from the landing bay. Once he received permission he powered her up and slowly moved out of the landing bay. Once they were clear he waited for the two Sholan ships to move into formation with him.\n\n\"Attention all ships I am transmitting the coordinates as well as the flight plan. Unless something changes we are going to follow the plan as laid out.\" He pressed a button and sent the information. \"We will have a meeting about a day out to see if we need to change anything.\" After verifying everyone had the data he initiated the hyper drive and flashed into hyper along with the other two ships.\n\n\"Secure from stations and please assemble in the main room.\" Now came the fun part. He really didn't have any urge to give tours but the warriors needed to know where everything was. He started the briefing and they split up in groups to be shown around.\n\n~~~\n\nThey had been underway for just about a week and had a week left before they reached earth when alarms started going off. They weren't mechanical alarms but proximity alarms. \"Oh fuck this isn't good.\" He scrambled to the bridge and strapped in. \"Attention contact team transport drop back and go to silent running if possible.\" \n\nAs he was doing that Vangie showed in the door as Sally and Satasha were strapping in. \"Attention combat craft don't fire unless told to. I want the ship as intact as possible..\" He checked his scanner and frowned at the readings. \"I am going to classify this as a pirate vessel. Stay in stealth as well.\" He flipped to the intercom. \"All warriors gear up and get ready for a boarding action.\"\n\nVangie started murmuring instructions into his wrist comm. Scrambling could be heard as the warriors dashed into their rooms and pulled on their armor and weapons. They moved to take up assigned positions and prepared for what might end up happening. Right about the time they had taken stations the strange ship fired across the bow and the short range communications crackled.\n\nBilly flipped the comm's on and waited. It didn't take long before he was hailed by the other ship and he snarled when he heard the name of the ship and saw the image of the captain. \"Oh goody we get to wipe this piece of shit out.\"\n\n\"This is Captain Jack Sparrow of the Black Pearl. Do not change your speed and lower your shields or you will be fired on. Illuminate the docking ring and prepare for boarding. If you don't fight you might last a bit longer.\" He smirked on the video screen as he was talking. He was stupid enough not to ask why Billy wasn't transmitting video and only audio.\n\n\"This is Captain Madlax of the SS Sandi and you are breaking international treaties on the boarding of ships.\" He figured it was expected for him to say that and the last thing he wanted was to raise suspicion. He muted the mic. \"God could you have come up with a better name you idiot? He is taking his name and ship name from an old movie.\"\n\n\"I will say this one more time before firing on you. Maintain your speed and lower your shields and prepare to be boarded. I can get what I want from the hull of your ship if I have to.\" He had his boots up on the console and was smoking a vile looking cigar.\n\nBilly glanced back at Vangie and got a nod from him. He turned back to the pickup. \"Understood and I will prepare for boarding. Please take what you want but don't harm me or my crew.\" That was also fairly standard but with this bastard it wouldn't be done. He was known for taking prisoners and if they weren't wealthy they had fun with them and worked them over before killing them and mailing the bodies back to the family just for amusements sake.\n\n\"I will meet you at the airlock and again please take what you want and don't harm my crew.\" All he got back was a course laugh. Billy turned the audio off. \"Sally take the controls, Satasha stay with Navigation, and Z'Marl take the engineering console.\" He walked over to the weapon's locker and opened it. He handed Sally a pistol and shotgun. He also grabbed a pistol and tucked it in the back of his pants. Several clips went into pockets and he pulled out his shotgun and ammo harness. \"Hold this for me Vangie. I am going to greet them and then we board.\"\n\nVangie gave him an evil look. \"It will be our pleasure to help you Captain.\" They headed towards the airlock he activated his comm to ensure that all troops were at their assigned station. \n\n\"Sally illuminate the airlock and activate the power to the weapons systems. Vangie make sure your warriors know not to activate them unless ordered or we are fired on.\" He got a nod from him and Billy moved so he could see the ship approach and mentally nodded. \"This is a small fast cruiser, or was. Pirates tend to make changes all the time to armament and engines as they loot and pillage. There is a central corridor that runs fore and aft down the center of the ship. I want one team to follow me forward and the second to secure the engine room. Shoot on sight if they don't surrender immediately. There is a nice reward for them dead or alive as well and I don't really care if we take them back in body bags. The only ones I would like alive are the officers.\"\n\nThe docking tube started coming across. \"Normally this ship would have a crew of about twenty but the pirates might have more or less. It really depends. I am going to stop talking now since the tube has connected.\" Sally contacted him and told him they wanted him to open the exterior doors. He did that and waited. It looked like there were five or so pirates coming across and they were all heavily armed.\n\nOnce they stepped in the airlock he closed it and moved back so they would have to jump to reach him. When the airlock opened and they stepped through Billy almost puked since they reeked of stale sweat, smoke, and god only knew what else.\n\n\"On your knees scum or I will shoot your legs off.\" His voice was smoke roughened and he had vile tattoos on his face and neck. As he was talking to Billy his men were glancing around trying to see if there were any others hanging around. \n\nBilly knelt down and he was doing his best to look pale and was trying to project terror at the five. It might be wrong but he was doing everything he could to increase their arrogance and confidence. The leader was gloating as Billy went down.\n\n\"What a good scum, nice and obedient.\" He turned to the others and smirked at them and they started laughing. It was a cruel laugher and predicted plenty of pain in the passenger's future.\n\nWhen he turned away to glance at the others Billy flopped on his side and pulled his pistol. It was specifically designed for ship combat. The rounds were frangible and when they hit something solid disintegrated. When they hit a person they also tended to break into pieces but not nearly as small as hitting metal. \n\nThe first round hit the first pirate in the hip and he went down screaming. Billy got off one more shot and took out another pirate before the warriors whipped around the corner. They fired at the last three and they went down hard. Billy rolled to his feet and pocked the pistol again. Vangie handed him the harness and then the shotgun.\n\nIt only took a few moments and then he dashed across the boarding tube and he heard stunners being used. He grinned since if any of them survived they would have a hangover from hell. As soon as he reached the main p-way he held his hand up. He had his VR glasses on but was set in motion and sensor mode. He let them do their work and moments later he held up two fingers and pointed in the direction towards the engine room. He held up three fingers and pointed towards the bridge.\n\nSeveral more hand movements and they moved. The pirates didn't have much time to react before they were shot. One did get lucky and Billy heard a grunt from one of the warriors but when he checked his glasses all of them appeared to be moving relatively fine. As they were running down the p-way he used his comm. He told Vangie where to have his warriors break off to secure the ship. \n\nWhen they made it to the bridge the door was shut and locked. Billy stepped to the side and one of the Sholan's fired his pulser rifle at the lock. The moment it blew Billy pulled the door open and Vangie shot each person with the stunner.\n\nBefore the last pirate fell Billy jerked the captain out of his chair and started checking the controls. \"Bastard was trying to set off some mines that would attach to my hull and detonate inwards.\" His fingers flew across the controls. The pirates hadn't changed the basic OS though they had made some changes. It took a few minutes before he had accessed the underlying software and took over the ship.\n\nHe locked down every door in the ship and changed the access code so they couldn't get out. \"Vangie I need two guards here. Right now the ship is maintaining station keeping and the controls are locked down. I have the code and pass it to all your warriors.\" He informed Vangie what it was. \"We are going to start at the front of the ship and work our way back. We are going to check every room, store room, nook, and cranny. We will designate one or more rooms as the brig as needed.\"\n\nThey moved out and slowly moved down the p-way and checked any and all access panels and rooms. They did take several prisoners but others tried resisting and were shot on the spot. The other team had left two in the engine room and the rest were starting a sweep forward. Suddenly Billy's comm's sent him an alert from one of the Sholan's. \"Captain you need to get down here immediately. They had prisoners.\"\n\nBilly could hear screaming over the comm. and the screams were obviously female. \"Understood. Be there shortly. Vangie with me.\" He started running down the hall. As he was approaching the source of the screaming a pirate stepped out and Billy didn't even slow down. He butt stroked him and kept going. He heard a stunner and knew that Vangie had stunned him.\n\nAs he approached the doorway one of the warriors indicated for him to slow down and held a finger to his mouth. Billy did that and quietly moved to the door and looked in. When he did his blood pressure almost went off the chart and for a brief moment all he saw was red. There were what looked like six women in the room and they ranged from maybe mid-teens to late thirties. All of them were nude and had obvious marks of abuse on their bodies. They were filthy, their hair matted and tangled and the stench was almost over powering.\n\nBilly could only stand there for a few moment and stare in shock. \"Holy Mary, mother of God.\" He looked at Vangie. \"Get several of your warriors to my ship and take over command of it. Have the females come over since we are going to terrify them.\" He turned back to the room and slung his shotgun and squatted down.\n\n\"I am Captain Madlax of the SS Sandi. I am former Navy, Lt. Madlax of the design board. We took over this ship when they tried to board us and all the pirates have been either captured or killed.\" He looked up at Vangie and smiled before looking back. \"These are some friends of mine and I promise they won't harm you. Yes they are aliens and yes they are felinoid but they are good people. This is senior warrior Vangie and he is seeing my daughter.\"\n\nHe could hear the females coming and he looked at them and back at the women in the room. \"There are three females approaching. Once is my oldest girl and the other two are Sholan's as well.\" He stood up and moved slightly off to one side. \"This is my mate Satasha and that means we are married. The blonde Sholan is Z'Marl and is a very gentle woman. The last is my daughter Sally. They are going to come in and do what they can to comfort you.\"\n\nHe contacted the warrior in charge of his ship. \"I am going to detach the boarding tube. Move away and let the Barque approach. I will connect the boarding tube to the ship so they can send some medical staff over. We have six badly injured females and they are going to need treatment.\"\n\nWhen he started to move Vangie told him to wait. \"Warrior Presion withdraw the docking tube and let me know when it is done.\" He nodded at Billy and angled his head towards the room.\n\nBilly turned and heard a voice quietly speak. \"Is that you Billy Bob? Is it really you?\" The voice was almost broken sounding and carried tones of fear and terror.\n\nHe turned and looked at the woman and his jaw dropped. \"Bitty is that you?\" He handed his shotgun to Vangie and slowly moved forward. \"Oh my god hun and yes it is.\" He squatted down next to her and held his hand out to her and was almost knocked over. She had almost lunged into his arms and burst into tears. His arms wrapped around her and pulled her close and tucked her head into his neck.\n\n\"You are safe now Bitty. I am very serious when I say the Sholan's are my friends and they will take very good care of you.\" He doubted that she could really hear him over the sobbing but he knew the others could hear him. From her reaction they could tell that she trusted him.\n\nAs she was crying a young warrior, maybe twenty or so, approached Vangie. \"Sir I am reporting that all the survivors are in two rooms. The rooms have been stripped of anything movable. The men have been stripped as well. The dead bodies are getting tossed into a freezer unit for the time being.\" He thumped his right fist to his left shoulder in their version of a salute. As he was turning he noticed the women and his ears went back and his face hardened.",
        "There was also horror and shock in his eyes. \"Permission to be on the firing squad when they are sentenced to death sir.\" His voice was filled with anger and rage at the men that had done this to the females. His voice was also a low growl as well. \"Better yet I will challenge them to a trial by arms.\"\n\nSomething about the way he spoke and the fury in his voice penetrated one girl who was terrified beyond belief. There was just a feeling of honesty and trustworthiness to the alien that penetrated the mental fog. She tried standing up and staggered some as she tried to move across the room. \"Will you protect and guard me? Will you help protect the others?\" She started to fall at that point.\n\nThe young warrior jumped across the room and caught her before she could fall. \"Come let's sit you down so you don't fall.\" His tail was still lashing in anger but his tone was very gentle. Once she was seated he pulled off his field jacket and helped her into it. It gave her some cover so her body wasn't showing to everyone there. \"All of us will. We will ensure that nothing will hurt you again.\" He settled on the edge of the bed and wrapped an arm around her. \"I will protect you like I would my sisters. Why don't you try and relax till our medical team gets here.\" Before he realized it she had fallen asleep leaning against him.\n\nSatasha and the other two females were moving through the women and checking on them. \"Vangie contact the Barque and tell them to bring something for them to wear. It doesn't matter if it is to large since that will cover more of their bodies. It will give them a sense of security that they aren't being stared at.\"\n\nVangie gave her a salute as well and made a call on his comm. As they were taking a look he gave them what information they had on the women and their status. \"Empty your pockets in your field jackets and I need five more for the time being. The males that were near them started pulling them off and handed them over. Vangie set them inside the door but didn't enter.\n\nBilly came over and grabbed the coats and first went to Bitty and gave her the largest and helped her get it on and sealed. With the help of the women they got the others dressed in the jackets as well. While they were waiting for the Barque to connect he was thinking hard on what they were going to need to do. They were a week or so away from the solar system. He had plans for the ship as well as turning the prisoners over to the authorities. About half or more of the warriors would have to stay aboard this ship. \n\nSally could captain this ship and he would need to pilot his ship since the Sholan's just weren't familiar enough. That was especially true with some of the mods that had been done to both ships. He had to pilot his ship since nobody else had any experience with the towing system. Satasha, Z'Marl, and the young warrior could go to the other ship as well as one or two of the others. They had helped save them and that might help a tiny bit with their trust.\n\nHe had settled down next to Bitty and curled an arm around her. Once settled he urged her to rest her head on his shoulder again. \"Help is coming and the Sholan Barque will be docking shortly. I have requested that as much of the medical team to be female as possible.\"\n\nVangie interrupted him before he could say anything else. \"Captain I need to report one death amongst our warriors. He was badly wounded by one of the projectiles from a pirate. Warrior Sochie is the one that died.\" His ears were lowered and so was the other warrior in the room.\n\nBilly closed his eyes for a moment before opening them again. \"Thank you for informing me Vangie. Make sure to have the Barque forward the information to his family. I will write a note to them as well informing them he died in the process of saving a number of captives.\" He leaned back against the wall with Bitty leaning against him.\n\nOne of the ladies crawled over and sort of curled up next to him. Another curled up on the other side of the young girl who had fallen asleep against warrior Kingie. Satasha and Z'Marl were comforting the other two and Sally was getting some water for the women to drink.\n\nIt was into this scene that Dr. Judsean walked and she covered her horror very well. \"Hello Captain Madlax I have my team here to take a look at these ladies and to transport them to the Barque.\" Billy looked up at her and nodded. At the moment it was all he could do to not go to that room and start shooting. \"Hello Doctor. Warrior Kingie, Satasha, and Z'Marl are going to accompany you. It will hopefully give them a scrap of security.\"\n\nShe nodded to him as he carefully moved the two ladies away from him so he could stand. He walked over to the doctor and addressed the room. \"This is Doctor Judsean and she has treated me for an illness I had caught and is familiar with Terran physiology. I ask you to trust her. I can't go with you since I am going to be placing this ship under tow. My wife and my companion will be going with you so you have some familiar faces around you.\" He made a snap decision. \"My daughter Sally is going to be going as well as the warrior. I am going to have Senior Warrior Vangie assign three more warriors to escort you and stay with you. They will be stationed on duty to provide you as much help as possible.\"\n\nThe doctor and SBA's slowly came into the room and introduced themselves before starting to take a look at them. \"We are going to be putting you on floaters to take you over. This is so you don't have to try and walk. The mattress is self warming and we have blankets as well. Once we get you aboard the ship we are going to scan you for injuries and get you clean.\"\n\nBilly gave the ladies in the room a good look. \"One thing I do need to tell you is that Sholan's are a rather gregarious species. This means they tend to shower in groups with both genders. No they aren't going to be showering with you except to get you clean. They don't have any sort of nudity taboo's since they don't have external secondary gender characteristics.\" When the women seemed to shrink back he sighed. \"My ladies and daughter will help you get clean and some clothing on. You will be fine and we will be on earth in a few days.\" He stepped out of the room and once out of view leaned against the wall and tried to calm down.\n\nVangie came over and gave his shoulders a light rub. \"I know Yilly and for you it is even worse since you have a relative in there. They will be taken good care of and in a few days we will be on Earth. Once there I will see to it that messages are sent to their families.\"\n\nBilly leaned into the massage and it helped a tiny bit. \"It is all I can do not to go and kill all of them right now. If I go past this room you will have me tackled, all weapons removed and restrained. Do you understand?\" He gritted his teeth together since he was beyond angry. \"I want to fucking kill them but they need to go back for trial. Also I am not so dishonorable a man to shoot unarmed and shackled men that way.\"\n\nVangie didn't say anything but kept massaging his shoulders and upper back while trying to send comforting thoughts and emotions to him. He had a feeling that Billy was getting an overload of feelings and emotions from the women. \"Try strengthening your shields Yilly. You are picking up their emotions and feelings which is part of the reason you are so worked up. As soon as we dock with your ship you need to go over and once teathered get some rest.\"\n\nThe first floater came out and it had Bitty on it. She could tell that he was seriously worked up by the way he was leaning against the wall. \"Billy will you give me a hug before I am taken over?\"\n\nVangie shook his head at her. \"Yitty isn't it? Right now isn't a good time. See the purple on his cloths? It indicates he is a telepath and he is picking up your emotions. It is very possible that he is also getting images of some of what happened to you. If he touches you right now...\" He sighed. \"As soon as we get to earth I will make sure that he comes and sees you.\"\n\nShe looked startled at that and thought it was a bit odd that he might have something like that. \"Okay I guess. I don't really understand what you mean though.\"\n\nBilly sighed. When he spoke there was a growl in his voice. \"He is telling the truth Bitty. Now that I have increased my shielding and turned up my damper I am not quite as mad. If I touch you right now I will get messages from you and I don't think you want to see Vangie tie me up.\" There were hints of amusement when he said that.\n\nHe turned around and rested his hand next to hers. \"I will see you when we reach earth. The doctor has told me that she is going to be sending me constant updates on how all of you are doing. Love you hun and let them take care of you.\" He watched as the floaters were moved down the hall. When the young warrior came out carrying the young girl he nodded. \"Take good care of her son. She is going to probably need more help than the others.\"\n\nEventually the Barque disconnected from the pirates ship and moved away so Billy's ship could dock. \"Vangie once this pig sty is cleaned up and repainted it is going to be named after the warrior who died. When we get to earth we are going to give him full rights by your traditions.\" \n\n*****\n\nPlease leave a comment on this chapter. I am not quite satisfied with it but it has everything I wanted in it. Oh and don't forget to vote."
    ],
    "authorname": "maxd01",
    "tags": [
        "alien felines",
        "space battle",
        "injuries"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/sholan-alliance-au-bk-02-ch-01"
}