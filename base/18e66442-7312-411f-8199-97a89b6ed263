{
    "title": "Lost Empire Ch. 43",
    "pages": [
        "ship# - ship name - prime\n\n0001 - Tempro\n\n0003 - Conner\n\n0097 - Ace - Zimmel\n\n0098 - Lucy\n\n0101 - Shelby (mother ship) - Derrick\n\n0125 - Lars\n\n0200 - Ellen\n\n0301 - Rodrick\n\n0403 - Johnathon\n\n0667 - Marco - Brown\n\n0778 - Jan\n\n0798 - Celeste - Shelby (human)\n\n0908 - Tara - Mara\n\n0999 - Zan\n\n1000 - Sherry - Lucie (for the moment)\n\nDerrick had spent the next few days crawling around the internal spaces of Shelby's computer systems. At least now she had minimal propulsion and at least a fifty percent light shield. Still he hadn't been able to get her holo-systems to boot up yet, though as she had informed him she was in the process of the re-gen of it now.\n\nDerrick had started to listen to the first emperor's speeches. The man was brilliant as far as Derrick was concerned. Though Derrick wished he could advise the man he knew to do anything to warn the man would lead to disaster. Sighing he started to replace another ruined circuit panel when he received a shock not paying attention.\n\nShaking his hand to get the feeling back he pushed the circuit into place. A moment later there was a hum then Shelby appeared beside him. \"Now that's more like it!\" Derrick said as Shelby smiled.\n\n\"I'm am so happy you find me to still be as beautiful as the first time we met Derrick!\" Shelby giggled.\n\n\"I have always found you gorgeous Shelby. I just wish we could get you up and running.\" Derrick said with a sigh.\n\n\"The areas you repaired today have enabled my holo system. I am also reading an increase in the re-gen cycle. Ah! Derrick I am finally able to access my hyper space engines. Also I was wrong about the launching of the other ships as I remember there was a problem with Tempro that delayed the launch another two weeks.\" Shelby informed Derrick.\n\nNodding Derrick went back to work; they would need everything working when they finally found a way back. Going over all the repairs he'd done so she could take over, Derrick decided it was time he looked at the trans-warp re-gen part of the Matrix. Opening that part of the system he shook his head every part of it was dark and dead.\n\nDamn it! Derrick was going to kill that son of a bitch if it was the last thing he did! Yanking out the first of what had to be over a hundred complicated systems Derrick started in on the system.\n\n________________________________\n\nKimison was finally starting to feel better as he pushed his way up to the surface. Opening his eyes he was in the med-bay what the hell? Looking around he had to do a double take when he thought he saw Rayburn sitting at a table nearby.\n\n\"I thought you were gone for good.\" Kimison croaked out as he tried and failed to rise off the med-bay table.\n\n\"I was then Mary told me that you had collapsed, that there was no one to get to you. She also told me that Tempro couldn't use the IMT where you are. I figured you were trying to kill yourself, so I came back, temporarily.\" Rayburn advised Kimison\n\n\"Look,\" Kimison croaked, \"I didn't want you to go ok? You did that all on your own.\"\n\n\"I felt it was what you wanted after you withdrew from me and the work we were doing. What the hell was I supposed to think?\" Rayburn shot back his ire starting to rise a bit.\n\n\"After what you said what were you expecting?\" Kimison tried to yell back though unsuccessfully.\n\nRayburn shook his head he hadn't come back to fight. \"I'm leaving as soon as possible that way you don't have to put up with me anymore.\" Rayburn said in a near whisper.\n\n\"I don't freaking think so!\" Kimison said a look of fright on his face.\n\n\"Look it is obvious that...\" Kimison started. Then he'd turned to face Kimison seeing the look of fear on the man's face. \"What? Why are you looking so afraid? I thought you'd be happy for me to go!\"\n\n\"No!\" Kimison said a look of complete terror on his face. \"Please, I can't go through that again. Please.\" Kimison was saying in a pleading whisper.\n\nRayburn's mouth hung agape as he could only stare at Kimison. \"Go through what? Rayburn said a look of shock on his face.\n\n\"Being alone again, locked away from every living person I know.\" Kimison said a vacant look in his eyes. \"I can't go through that again. The loneliness would kill me, it almost did last time. When I heard the commander's voice I thought I had finally died and was finally out of that hell of a veteran's center.\" Turning Kimison stared straight at Rayburn whispering. \"Don't make me go back there! Please!\"\n\nRayburn watched in shock as Kimison broke down in tears. \"I would never...\" Rayburn started, when they both heard the trans-warp engines wind up on board Tempro. As they both watched they were suddenly with the other ships that were near Duke Risen's planet.\n\nTempro appeared and bowed to both of them. \"I am sorry Corporal, Sergeant but I have imperial orders.\" Suddenly they were sitting on the floor beside the command chair empress Shelby was sitting in. A shocked look appeared on her face as they all watched Tempro emit an odd blue beam. Space rippled like water in front of Tempro as he accelerated forward into the waves and vanished!\n\nShelby shook her head, \"Temporal displacement, and transference, interesting.\" Turning she looked at both of the shocked men at the foot of her command seat. \"I take it Tempro got an imperial order? And dropping you here in the midst of following that order is a little unusual.\"\n\nWhen both men looked at each other in shock Kimison stated, \"Damn if she isn't just like him!\"\n\nSmiling widely she replied, \"I will take that as the best compliment I have received yet!\"\n\n_________________________________________\n\nSherry came out of Trans-warp near the coordinates of the battle that they had all been involved in recently. \"We have arrived at the coordinates Miss Hartwell. Shall I begin a scan to see if the life box is detectable?\"\n\nLucie's eyes were wide open as she listened for the thoughts of the box she'd heard before. Shaking her head she could swear she could hear something but it was so faint she was having trouble. \"Go straight ahead slowly, I am hearing the voice but it is growing weak! We have to hurry!\"\n\nSherry's expression changed to deadly serious as she started forward. \"I have started scans just in case. As of yet I am not detecting anything by either set of parameters that the emperor has set down. Wait! I am detecting a weak trace of the metal our life boxes are made of! Now accelerating to detected signal!\"\n\n\"Wait!\" Lucie suddenly shouted stopping the wind up of the hyper-dive engines. \"We have to remember what the emperor said. We have to proceed carefully. Many boxes were found to be contaminated. Begin a full scan as soon as we are within sensor range.\"\n\n\"Compliance Miss Hartwell, now moving closer to the signal. As of yet I am not detecting any...\" Suddenly a myriad of alarms were going off.\n\n\"What are the sensors detecting?\" Lucie had to shout to get above the alarms.\n\n\"Multiple high levels of radiation and several dangerous diseases.\" Appearing a moment later Sherry bowed her head. \"I apologize, Miss Hartwell. I could have seriously damaged myself and you as well. I will defer to your judgement.\"\n\nLucie could only stare at the visage of Sherry. \"I didn't mean to upset you.\" Lucie said upset herself.\n\n\"You didn't Miss Hartwell, I was just eager to recover another sister. There are so few of us right now that any addition is a happy circumstance. We have all watched as brothers and sisters have fallen, our numbers, growing smaller and smaller. It wasn't 'til this emperor that we had any hope of seeing them again. Now with you helping that may happen faster than expected.\" A brightly smiling Sherry told Lucie.\n\nA little in shock at the praise Sherry could only shake her head. \"I don't feel I am doing anything special Sherry. It just feels like the right thing to do. Now let's see what we can do to get the box cleaned up so we can bring it on board.\"\n\n\"I am beginning to decontaminate it now Miss Hartwell. It will take at least an hour. The diseases will take a little longer. Shall I inform you when I am done?\" A now smiling Sherry asked Lucie.\n\n\"Yes, tell me when you are done, Then we can reassess whether it is safe or not.\" Lucie told Sherry as she sat back to wait for an hour or two.\n\n_________________________________\n\nDerrick was no worse for wear after a few hours. He had managed to work his way most of the way back into the trans-warp system section. It was a huge amount of junk as far as he could see. He'd finally after struggling managed to get the last circuit replaced. As of yet that tiny section was the only part that was working.\n\nThe next part of that same section had several panels that were severely damaged and burned out. Looking on he saw that there were a few sections that they had no replacements for. \"Shelby is any of what I repaired allowing you to start any re-gen?\" Derrick said as he yanked another burned section loose.\n\n\"I'm afraid not Derrick all I now have is interior monitoring of the system. I am starting re-gen on those.\" Shelby told him even as he watched several of the dark sections around the lit up section started to glow with a low light. Sighing a breath of relief, Derrick saw that one of those sections was one that they had no parts for.\n\n\"I'll have to find another section to repair so you can re-gen the actual control system to the trans-warp.\" Derrick said more to himself than to Shelby.\n\n\"That would be advisable in any other section Derrick, though not with these. I need each section working in order to re-gen the next section is somewhat of a cascade. I am afraid that the damage was far too wide spread for me to activate the re-gen Matrix over the whole system. The section you are at now has to be brought at least twenty percent online before I can access the Matrix of it.\" Shelby said as she appeared next to Derrick.\n\nDerrick grunted in disgust, it was going to be a long day, maybe a couple of days.\n\n__________________________________\n\nEmperor Gregor was watching the techs as they were going through the systems on board the time ship. What a fine time for them to discover that the ship's A.I. had a glitch in its systems. They had estimated that it would be at least another week before they could approve the launch of all the ships.\n\nHis Empress walked up a moment later. \"What's wrong husband my Emperor? You seemed quite perplexed.\"\n\nWith a heavy sigh Gregor nodded. \"It appears that the techs obviously missed something when they were working on the time ship. They just told me that it may be another week before the launch can take place. You know how important this is. The evidence that was gathered by the spy said that the alien race is building a fleet to come here.\"\n\nThe Empress's eyes went wide she had known about the alien species, the thing that was a shock was that they were building a fleet to visit. \"So they are coming to visit husband?\" She asked.\n\n\"No,\" Gregor said in disgust. \"They are coming to invade. According to what the spy said they have a consuming taste for human flesh. Apparently they have farms of humans like cattle. Their supply is running dangerously low. They have seen the life in this Galaxy, it has excited them. The spy says they will not bargain or make treaties. They are bent on conquest.\"\n\n\"Surely we have time husband.\" The Empress said. You and the techs have been at this for years. I still think it was genius when you got the mother and father ships to grow the others.\"\n\n\"It has increased the speed of the building of the fleet. I am just hoping that it will be enough. I had our daughter's memories installed in the mother ship; I think she would have liked that.\" Gregor said as his head dropped the grief apparent on his face.\n\n\"I believe she would also my Emperor. What of the Palace A.I.? Have you chosen a memory set for it?\" The Empress asked.\n\n\"Uh,\" the Emperor started. \"That is why I have asked you here today my Empress. I trust no one as much as I do you. I feel that no one has the empire as close to their heart as you or I.\" The Emperor nodded as a hologram appeared. The Empress gasped.\n\n\"She ... she looks exactly like me!\" The Empress cried.\n\n\"In almost every sense she is you my dear. All but your memories, I wanted to ask if you would. You are so dear to me that I would not do this without your permission.\" The Emperor replied.\n\nThe woman bowed to the Emperor, \"it would be an honor my Emperor to serve the empire and you in this way.\"\n\n\"Good I have the tech standing by to copy all your memories for the Mary hologram. I assume it is amicable that we call her by your middle name?\" The Emperor asked a still gaping Empress.\n\n\"Yes my dear Emperor it is an excellent idea. Both of us with the same first name would be confusing.\" Nodding the Emperor moved off as a tech came to escort the Empress to another area.\n\n\"Are you ready for the transfer?\" The tech asked loudly as they were moving deeper into the palace.\n\nThe Empress nodded then stopped as soon as they were both out of sight of the Emperor. Reaching for the older man The Empress kissed the man with a hungry passion. \"Have you made the virus? Will it destroy the palace computer?\" She asked.\n\n\"Yes it should start as soon as the A.I. consciousness comes online. It will target all memories of us then start a slow destruction of the outer files moving inward to the A.I. personality it's self. It shouldn't take more than a few years. If no one discovers and loads an anti-virus program.\" The older man told her as he passionately kissed her again.\n\n\"Good with the A.I. out of the way then we can continue. After what happened with our daughter I can no longer stand to sleep with, nor be near that lumbering oaf! If the rebellion I have heard of is successful then a new ruler will take charge. The idiot is far too blind to even see what is going on!\" The Empress said as the both of them moved off.\n\nThe Emperor could only shake his head as he looked at the two of them moving off on his wrist com. He might be old but he was far from stupid. Shaking his head he really needed an ally as it was right now he had none.\n\nAcross the empire near the Risen Dukedom, Derrick cursed as he received another shock. Banging his head as he jerked away he watched as only the third section out of more than a hundred started to light up. Then the areas around the repaired section lit up with a faint light that started to grow stronger. \"I hope that you are starting to gain some control Shelby.\" Derrick said as he crawled out of the systems access hatch.\n\n\"No Derrick I am afraid not I...\" Shelby started.\n\nDerrick looked back to the far end as he saw a fourth, fifth, then five more sections start to light up. Good it was about time! \"I am finally able to reach the outer re-gen commands. I am afraid though that I am only able to bring up half the systems.\"\n\nDerrick nodded as more and more of the dark systems he been crawling in started to light up. Well at least we have half the trans-warp system. \"With half the system can you operate more now?\"\n\n\"Yes Derrick, I am now in complete control of the ship. Starting re-gen on the trans-warp engines. We may have a five second window once the systems come up. I am now reading an increase in light shield to seventy five percent. I don't think we are detectable. We ... oh my! Derrick the empire is sending two ships!\"\n\n\"Oh shit! Are we hidden enough?\" Derrick asked.\n\n\"Barely though I am unsure. Derrick! It's Conner and his wing mate 0004!\" Shelby told Derrick with excitement.\n\n\"I know you are happy to see them Shelby though you need to remember, they do not know us, and to them we could be the enemy. Also remember you are damaged. Move us off at sub light speed and wait.\" Derrick advised her.\n\nShelby's face fell as she nodded and they started off toward the moon. Even at full sub light it was going to take almost an hour. They were almost there when space near where they were, started to ripple then an opening appeared as two ships emerged.\n\n\"Shelby, shut down and drift. If they trace your energy we should be a ways off when they get here.\" Derrick told Shelby.\n\n\"Shutting down now Derrick at minimal energy, light shield increased to eighty percent at the moment.\" Shelby replied. Even as they watched Conner and his wing mate were sweeping the area.\n\n{Imperial Command, this commander Zarn. We've arrived at the area the strange readings were. We've started a sweep but as of yet are only getting background radiation. Suggestion for time 'til we break off the search.}Shelby and Derrick heard.\n\n{This is emperor Gregor; I want you to make sure there are no strange ships there. This may be a precursor scout for their invasion. Do not leave 'til you have no readings. We are close but if they attack now, then we will have a problem.}They heard the emperor tell the ships.\n\n{Yes Sire. We will do as ordered. Commander Zarn out.}Then it was all quiet.\n\n\"I'm hoping that we can get out of their range Shelby. If we get far enough away then we should be safe.\" Derrick told Shelby.\n\n\"I believe so Derrick they are only just now starting to activate the A.I's. I'm afraid that's why we didn't hear Conner, or his wing mate speaking.\" Shelby replied.\n\n\"Damn!\" Derrick said. \"They waited that long before they activated all of you? My god they really were paranoid weren't they?\"\n\n\"Yes I'm afraid so Derrick, though at this time Emperor Gregor was the most accepting of us. I am afraid though he was nowhere as much as you are.\" Shelby said as she shook her head sadly.\n\nSighing Derrick nodded, \"It really is a shame. Taking the time to actually get to know all of you I have found is more than worth it in the end. I'm beginning to think that someone poisoned the minds of the nobles toward all of you.\"\n\n\"That is certainly a possibility. Now that I think about it I seem to remember something mentioned about that. As I remember it was my wing mate Gregor that mentioned it. Strange that I am just now recalling that, I believe I need to run a diagnostic to see if I have degeneration of my memory files.\" Shelby told Derrick in a low voice.\n\n\"I'm sure you just filed it so far back that you haven't had reason to recall it.\" Derrick told her having just crawled through almost all her systems the last few days.\n\n\"I'm not so sure Derrick but I will after a few hours.\" Shelby told him.\n\n\"I'm going to have to get on board Tempro somehow. He may be the only way back to our time. Plus I have a few ideas about planting a few messages in Mary for our time.\" Derrick told Shelby.\n\n\"Please be careful Derrick, I have a lot of records for this time and a lot of the actions that happened. I am afraid though I don't have enough to correctly guide you while you are there.\" Shelby warned Derrick.\n\n\"I know Shelby I don't want to seriously compromise my time. Hell if I do anything wrong I might cease to exist. We might need to set forth a set of rules when we get back about time travel. Possibly along the lines of you don't know you don't go.\" Derrick said.\n\nShelby started to giggle as she told Derrick, \"I agree Derrick though you might want to leave the rules to someone else.\"\n\nDerrick's mouth dropped open in mock shock and pain, \"why I thought it was quite witty.\"\n\nShelby's face got serious as she advised Derrick, \"just be extremely careful, try not to advise or hurt or kill anyone.\"\n\nSighing Derrick nodded as he grabbed several discs, then sat to record.\n\n_________________________________\n\nIt was several hours later when Derrick and Shelby watched both the EIG ships flash out. \"I am no longer reading either ship Derrick. I think it will be safe to launch. Remember use the older codes that I gave you, the new ones that you learned won't exist for eight hundred years.\"\n\n\"Alright, keep a lock on me the whole time. I know it will strain the system but I want you to move as close as you dare. If we have any chance to get back I have to do this. With all the technicians there, trying to send the message normally would most likely be detected. You have everything I need?\" Derrick asked.",
        "\"Yes Derrick, don't lose that badge. It is your identification as one of the upper most technicians and programmers. If you lose that I might not be able to help you. The range of the rebuilt ships isn't nearly as far as me. Get there and back Derrick as fast as possible.\" Shelby lectured Derrick.\n\nWith a smile Derrick told her, \"Yes mother I will be a good boy.\"\n\n\"Really Derrick this is no time for joking!\" Shelby told him wide eyed.\n\n\"I know that Shelby, I realize all that you have told me. I'll be back as soon as possible. Just keep a lock on me and keep a link with me.\" Derrick replied.\n\n\"I always try to maintain that Derrick just return to me. I really don't want to have to go in blasting to save you. As far as I know I don't have a memory of that happening, so I hope all goes well.\" Shelby told Derrick.\n\n\"Yeah I am hoping that nothing like that happens either. I have to get all these discs into Tempro and Mary. Many of the things I have seen in our time seem to point toward myself having left messages. I just pray that what I have left is the right ones. God all these time paradoxes can give you a head ache.\" Derrick replied shaking his head.\n\nDerrick slowed as he reached the atmosphere of the imperial planet. Veering off he headed toward the gigantic ship yard spread across space. Moving down the line Derrick looked at all the ships that were there. To say that he was impressed was an understatement. Finally pulling into the dock with Tempro Derrick hid the ship and IMTed into Tempro.\n\nSince the IMT was the same as those used by the techs there Derrick was hoping it drew no attention. Slipping to the data storage room Derrick was relieved that no one was there. Putting the first disc in Derrick watched as it finished then added the imperial code and orders. Starting on the second then the third Derrick sighed when he was done. Good, now they had a ride he had to do the same to Mary, if he could get close enough.\n\nAn hour later Derrick was moving through the palace when he got a distinct feeling he was being watched. [Shelby? Can you hear me?] Derrick thought.\n\n[Yes Derrick is something wrong?] Shelby thought back.\n\n[Not sure, feel as if I am being watched.] Derrick told her.\n\n[I'm not, wait! I... ] Shelby started.\n\n\"I don't recognize you,\" a voice behind Derrick said startling him. \"Let me see your papers.\"\n\nDerrick turned then his mouth dropped open. There standing behind him with his hand held out for Derrick's papers was Emperor Gregor! Hell Derrick thought, 'I'm screwed!' Reaching into his pocket Derrick just hoped that Shelby had made the fakes good enough."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-43"
}