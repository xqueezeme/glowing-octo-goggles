{
    "title": "Stolen Birthright Ch. 47-51",
    "pages": [
        "We drove to the edge of town, and I saw we were low on gas. \"Pull over into that Holiday station, Olivia. I'll pump gas, you go in and grab some snacks and drinks for the drive.\n\nShe looked at the gas gauge, it was just under a quarter tank. \"You don't want to wait?\"\n\n\"No, the longer we put it off the more we'll stand out. Plus, I need some caffeine. It's been a long damn day.\" She laughed a little and pulled in, picking the diesel pump farthest from the station. \"Anything special you want?\"\n\n\"Twinkies.\" She looked at me like I was nuts. \"Trust me, now that you're human they taste wonderful.\" She made a face at me, so I told her to buy two packs just because I knew she'd want one.\n\nI still have my sweatshirt on, so I wasn't worried about my wound showing. I got out and put my credit card in the pump, then put the nozzle in. It would be a while, this thing has a HUGE tank. While I was waiting, I started to clean the bug spatter off the windshield. I saw the car then. Police, on the side of the road, just a block or so short of the gas station. There was no reason to be pulled over there, unless...\n\nSHIT!\n\nI have to get away. Putting the nozzle back, I jump up into the truck and fire it up. Putting it into drive, I head back onto the road. If I'm wrong, I wait ten minutes and go back to get Olivia.\n\nI'm not wrong, though. As soon as I'm back on Highway 52, I see the cruiser pull out behind me. He doesn't turn on his headlights until he's back on the road and he isn't using his flashers, and he stays well behind me. If I hadn't spotted him, I'd never notice him behind me as he matches my speed.\n\nWe leave the city behind and get onto the open road. I've had about enough of this; when I crest a hill, creating a short time where he can't see me, I floor it. The space between us opens up as my truck pushes up to a hundred miles an hour, and when he sees me fleeing, it's on like donkey kong.\n\nIf I had my wolf vision, I would have cut the lights and gone offroad, but I don't have that. I'm looking for a way off the road, figuring my truck will handle the dirt roads better than his cruiser, when the road lights up. I look up, almost blinding myself, to see the helicopter illuminating me from above. Looking behind, I see another four vehicles have joined the chase.\n\nMy options all suck, I think. They all end in death, except maybe one.\n\nChoosing this option, I slam on the brakes and stop on the shoulder of the road. Getting out, I face the rapidly approaching cops, then kneel down on the pavement and link my fingers together on top of my head. I pray to Luna for help, hoping they won't just blow me away as soon as they come to a stop.\n\nTwo cars went around, blocking the road in case someone else was in the truck. The other two blocked the oncoming road. The spotlight from the helicopter cast shadows around me, and their headlights kept me from seeing them as they approached. When they got close enough, I could see they were all aiming rifles at me. \"DON'T MOVE,\" one of them yelled.\n\nI stayed as still as I could. I heard someone approach behind me, then a hand clamped over mine as a handcuff was snapped on my wrist. My right arm was brought down, then my left was handcuffed to it behind my back. The officer held my shoulder, pressing a pistol to the side of my head. \"Don't even breathe,\" he whispered to me. Another officer walked up with a black light flashlight. Shining it in my eyes, he seemed almost shocked. \"Nothing, Sargent. She's human.\"\n\n\"That can't be!\" The cop behind me pulled my sleeve up, exposing the battle dressing. Tearing it off, he shined his flashlight on the bite, which was now bleeding again. \"Look, she's been bitten. Why isn't she a werewolf?\"\n\nThey gathered around behind me, trying to figure it out. Finally, one of them spoke up. \"Sarge, she's human and she's bleeding. We need to take her to the hospital.\"\n\n\"No way,\" he said. \"Have you seen what can happen if one of these animals gets loose there?\" He pointed to one of the men. \"Get your first aid kit over here. We'll leave her here until we get other direction.\" One of the men came up and opened his kit while the others kept their guns pointed at me. I winced as he poured alcohol on the wounds, then cleaned them with a gauze pad.\n\n\"Can I at least sit down? My knees are killing me.\" One of the men helped me sit cross-legged. \"How did you find me?\" I figured I'd make some conversation while we were waiting for a decision to be made.\n\n\"Cellphone video. People can't do shit anymore without people whipping out their phones and recording stuff. We got your photos and your plate number from it.\" He looked at the green truck. \"Nice try with the paint job, but any Dually within a hundred miles was going to get pulled over just in case.\"\n\n\"Damn. I dyed my hair for nothing then.\" \n\nOne of the men brought me a bottled water and helped me take a drink. \"So where is your buddy?\"\n\n\"Why, she didn't get bit!\"\n\nHe chuckled. \"Hell, I'd like to thank her. You two took out those guys like pros. Five werewolves, all running loose in our quiet little town.\"\n\nI laughed. \"Just country girls. There was no way I was going to walk quietly out of that store to be raped or worse. Not while I could rock my Glock.\" I stared him down. \"And I have no idea where she is, and if I did I'd never tell you.\"\n\n\"We'll see,\" Sargent said.\n\nWe all looked up as we heard a convoy approaching. They pulled up behind the police cars and stopped; a dozen infantrymen jumped out of the transport and surrounded us. The officer in charge walked up to the Sergeant. \"I'm here for the prisoner,\" he said.\n\n\"She's not showing werewolf, Captain. You can't have her.\"\n\nHe shook his head. \"I have Presidential authority here. Call your boss while we get her cuffed and stuffed.\" I watched the battle between them, the Captain didn't care, he was doing what he wanted. The Sergeant opened up his cellphone and made a call, moving off to the side of the road as he did.\n\nA couple of MP's came up, carrying a prisoner transport restraint. They cuffed my ankles together, a short chain would allow about a foot of movement but it would be more like a shuffle. In the center, a chain when up to another chain they locked around my waist. The two uncuffed me, then my wrists were each attached to the waist chain. I couldn't get my hands to touch in front or back. Finally, they put a black hood over my head. \n\n\"Really, guys?\"\n\n\"Keep it down, lady, or we'll pump you full of so many drugs you won't wake until next week.\"\n\nI heard a vehicle approaching, it sounded like a big truck. I was hoisted up over someone's shoulder; I heard doors open, then I was tossed onto a cold, hard surface. The doors slammed shut and I could hear them being locked from the outside. Other vehicles started, and we got on the move again.\n\nI pushed myself over to the side of the truck where I could sit up. The hood wasn't secured tightly, so I was able to get it off by sticking my head between my knees and pulling it off. What I saw didn't give me any hope.\n\nIt looked like I was in an armored car; the floor and walls were solid steel, the glass to the outside was thick and bulletproof. The divider to the driving area was built the same; way too thick for me to get through. It was a rolling tank with me as the display, I thought.\n\nI saw a soldier looking back at me from the passenger seat. \"Hey! Where are we going?\"\n\nHis voice came over the intercom. \"Fort Detrick Army Medical Research Command. Congratulations, Miss Grey. You've just become a lab rat.\"\n\nI looked at him in shock. \"You can't do that! I'm a citizen! I have rights!\"\n\nHe laughed, I mean gut laughed. \"Rights don't mean shit in a war, Miss. You got bit. You're either a werewolf we get to study, or somehow you DIDN'T become a werewolf, and that's even MORE reason to study you. Congress granted emergency powers, Habeus Corpus has been suspended, citizens and aliens can be detained without a warrant or charges. Technically, you're not even a prisoner of war. Like I said, you're a lab rat.\" I glared at him. \"Now, we've got about a twenty-four-hour drive ahead of us. There's a bucket in the corner if you have to go, and a blanket and pillow on the shelf above you. If you behave like a good rat, you'll get your cheese. You act up, and it's going to be a miserable trip for you.\"\n\nI pushed myself up so I could get the pillow and blanket. Tossing the pillow into the center near the front, figuring that would be the best ride, I kept the blanket in my hand as I tried not so gracefully to lie down. It was even more awkward to try and spread the blanket over me the way I was trussed up.\n\nThe ride was miserable. The suspension was so stiff I felt every bump and ridge on the road, and the steel floor was cold. After a few hours, I gave up on sleep. I moved so I was sitting against the partitions with the pillow under me and the blanket on my legs. \n\nAll I could think about was what was happening with my Pack. They knew my name, my address. I was sure they were going to go after my house, and if they looked hard enough they would find those hidden in the safe room. Hell, even the contacts could be seen if you looked close enough. I missed my babies, I missed my mate, I missed them all.\n\nI thought back to Olivia; what must she have thought when she came out and found I was gone? Did she get away, or did someone grab her too? She was fully human now, but that only mattered if they took the time to check. \n\nI had a lot of time to think, and the more I thought, the more depressed I became. The best case I could come up with was that they had enough warning to take off... in an RV that was registered to me. For all I knew, they just leveled the whole estate instead. My tears dripped down my face as I watched the trees pass by through the little port on the back door...\n\nWe stopped about every five hours; I could hear the sirens and the escorts, so we were traveling in a convoy. The traveling nightmare eventually ended, and the sound changed as we pulled into a building. I pushed my way to my feet, my sore legs protesting, and looked out the small port on the door.\n\nWe were in a loading dock; the escorts were parked outside. I saw a half dozen people in lab coats come in with a gurney, it had leather and steel restraints hanging from it. Apparently, that was my future.\n\n\"Stand back from the doors and face the front, Miss Grey.\"\n\n\"Or what?\" I had to ask as I turned around.\n\n\"You get the fire hose.\" No thanks. I shuffled forward to the divider; I heard the door opening, and then something stuck in my leg. I looked back, but my leg didn't work anymore. I fell sideways, with my hands shackled I was unable to break my fall and I landed heavily on my left side and shoulder. I tried to roll over, but my legs and arms now didn't work, I couldn't even feel them. The numbness continued to spread, and my brain panicked when I realized I couldn't breathe any more. My vision started to go, and the last thing I remember was someone yelling, \"Just how much of a dose did you give her?\"\n\nCh 48\n\nI hate Meatloaf Mondays.\n\nImagine how bad hospital food is. Imagine how bad Army food is. Put them together, in an Army hospital, and you have Meatloaf Monday. \n\nIf it was meat at one point, it is now beyond recognition. The 'sauce' they put on it tastes like paste, the meat like cardboard. It's inedible. I eat the vegetables and potatoes, they aren't good either but at least I can keep them down. I push the rest of the meal into the tray where things are transferred from inside my isolation cell to outside.\n\nIt's not much of a life I have now. My cell is about ten by twelve feet. A thin mattress, sitting on top of a concrete pad in the front corner, and a steel toilet is in the corner behind it. A sink sticks out from the back wall, dividing the toilet from the shower head and drain in the other corner. In the front, opposite of the bed, is a set of shelves where I keep my books and my extra clothes. The walls, floor and ceiling were solid concrete, a single light in the center and a smaller light over my bed are the only illumination from within. \n\nI hated the cell due to the lack of privacy. The wall facing the hallway had a steel door in the center, and on the bed side was a tray that slide out so they could pass food and books through. The rest of the wall was thick acrylic, allowing anyone in the hallway to see me at any time. What they couldn't see for themselves, the camera in my cell could capture.\n\nI had gotten used to showering and going to bathroom in front of others by now; there was no choice. Most of the guards were decent enough to look away, but there were a few that liked to watch. I hated them.\n\nThe only good part of my life now was that they liked me to stay healthy, so my body could withstand the blood samples and experiments that were my main function. It took a full month of monitoring and testing, much of which I was unconscious or tied down for, before they accepted that I wasn't going to turn into a werewolf. Then the real fun began.\n\nThey had identified the virus that caused the humans to change into werewolves by analyzing the saliva of the dead werewolves. The staff at Ft. Detrick had been ordered to develop a vaccine against it, and I was their best hope it seemed. They couldn't understand how I was resistant to the virus, and they were desperately seeking the antibodies that would answer their questions.\n\nWhen the blood work didn't show the results they wanted, they started injecting me with werewolf saliva. It didn't do a thing.\n\nIt was during my second summer here that they decided on more drastic means. They had captured a young werewolf, stuck in wolf form, rabid and without thought. He was brought in to the cell across from me and dumped on the bed. Muzzled and collared, his neck was chained to the wall when he finally woke up hours later.\n\nTwo men wearing protective suits went into his cell as I watched. They carefully attached two long leashes to his collar, then removed his muzzle with their gloved hands protected with steel armor. They pulled him out, holding the straining creature between the two leashes, and then a third man opened my door.\n\nThe wolf saw me and lunged forward; they let the leashes slack so he could get to me as I hugged the back of my cell. He leaped for my throat, but I blocked him with my arm. The men pulled him back, fighting and straining against him, as his bloodied jaws let go of my arm. He was hit with a dart and sagged to the floor. When he no longer moved, they dragged him into the cell and left him in the center. \n\nI rinsed my bloody left forearm off in the sink, then used a towel to slow down the bleeding. I was a little frustrated that they would endanger my life like that and not even provide first aid. I laid down on my bed, arm elevated, and waited for it to scab over. I hated that I didn't have werewolf healing rates any more, this bite would be sore for weeks.\n\nI woke up in the middle of the night; I had no clock, and with no view of the outside the only changes were when the lights dimmed at 10 PM and brightened again at 6 AM. I could hear whining and scratching; the werewolf had woken up. He was pacing his empty cell, his eyes looking for a way out as he growled.\n\nI moved over to one of the holes drilled along the base of the glass, there were two lines of these at the bottom and four at the top. The holes were about an inch in diameter, too small for a hand and the acrylic panel too thick for me to stick a finger through. I pulled my blanket over my body, hiding my head from the camera. I didn't want them to be able to read my lips, and if I whispered quietly enough, they wouldn't be able to make out what I whispered into the hole.\n\nThe werewolf could hear everything if he settled down.\n\n\"You're not crazy,\" I whispered. \"Your wolf is a part of you now, you need to learn to share. Each of you helping the other.\" \n\nHe stopped moving and whined, laying up against the acrylic wall. I could see one ear cocked near a vent hole. He could easily hear me now.\n\n\"You aren't alone, either. There are thousands of people like you. They live their lives, they have families, children. They like all the things you did before. You were bitten, weren't you?\" He whined and set his head on his front paws. \"I'm sorry about that. Before the war, it was strictly forbidden to turn someone without their consent. We had all kinds of rules when we dealt with humans, just to avoid what happened to you. Is the war still going on?\"\n\nHe nodded his head, then let out a low howl.\n\n\"Is that how you were bitten?\" He nodded. He didn't look big enough to be a full grown werewolf, if I had to guess he was about ten. Being a kid is probably what saved him from being killed immediately; even after all this time, shooting a kid is not something police and soldiers like to do.\n\n\"All right. Do you know how to shift back?\" He shook his head no. \"Think of your human and your wolf side, side by side in your brain. Close your eyes, imagine it.\" He closed his eyes. \"Now imagine your human side walking forward, and your wolf side walking back.\" He squeezed his eyes, he was trying, but nothing happened. \"All right, we'll try later. For now, I want you to close your eyes and spend time talking with your wolf. He's part of you, he's always been part of you. He's nothing to be afraid of, he won't hurt you because that would be hurting himself. All right?\" He nodded. \"Just get some sleep. My name is Ella, I can't wait to talk to you.\"\n\nHe put his head on his paws and closed his eyes; I went back to my mattress and went to bed.\n\nWhen the lights went bright, I woke up as was my habit. I sat up and looked across the hall, shocked to find a boy huddled up on his mattress, the blanket wrapped around him. I went and sat by the holes, and he did the same. \"Hi, glad to see you figured it out. You need to whisper loud enough for me to hear, I'm human.\"\n\nHe looked at me, cocking his head a little as he took another sniff. \"How? My wolf says you are an Alpha.\"\n\nI nodded. \"I was once, I used to be a werewolf, but my wolf was killed. I still have a Pack, though. I think. It's been almost two years I've been in here with no news. Since I don't have a wolf, I can't feel the mate bond or my Pack bonds.\"\n\n\"Bonds?\"\n\n\"Yes... when a wolf is in a Pack, or mates, a bond forms between their wolf and the other person. Since I'm human, it's enough to get the attraction with my mate, to feel the responsibility for my Pack. On the werewolf side, it's much stronger.\"\n\n\"How strong?\"\n\n\"Strong enough so that you can talk to each other in your minds, you feel what they feel, you are two parts of a whole. It's a bond so strong that many mates choose to follow their mate into death rather than live without them and their bond. It's the best feeling, being part of a Pack.\"\n\n\"Sounds wonderful,\" he said. \"By the way, I'm Charlie. Charlie Cassidy.\"\n\nI waved my hand at him. \"Ella Grey.\" I looked down the hall. \"If you want, you can join my Pack. Talk to your wolf about it.\" \n\nHe closed his eyes. \"He wants to.\"\n\n\"Fine. Just say to yourself, 'We accept Ella as our Alpha.'\" He did, I couldn't feel it myself but I could see his wolf straighten up, he seemed calmer, happier. \"I'm not sure if you want them to see you like this, it might be easier if you're in wolf form when they arrive. Do you think you can change back?\"\n\n\"Same as before, but this time my wolf comes forward?\"\n\n\"Exactly.\" I watched as he shifted into his small grey wolf. He yipped as he ran around his cell. It was only a few minutes later when the guards entered with breakfast. They were shocked to see the wolf, now calm and wagging its tail while looking at them. My eggs and bacon were put through my slot, and they came back with a steak for him.",
        "When they left, I whispered to him again. \"It does no good to fight them, they'll drug you or beat you. Cooperate when you can.\"\n\nThings settled down on the wing over the next few weeks. Charlie and I got to know each other pretty well; he was a good kid, from northern Pennsylvania. His parents had seen a werewolf while they were driving, and his father had taken a shot at it with his rifle. The shot missed, and the werewolf attacked and killed them. He changed, frightened, and was running through town when he got hit by a car. He woke up in a truck, locked in a cage in wolf form.\n\nI didn't have the guts to tell him he would never be free again. They were still experimenting with him, trying to figure out why he could change others and not me. When they knew, he would become a liability to them, and he would be eliminated. Just like me.\n\nI was deluding myself if I ever thought I was getting out of here. My secret, if they ever found it, was that the antibodies only existed because my wolf had been killed. They had taken gallons of my blood, and did plenty of experiments. They even transfused my blood directly into both werewolves and humans, but it neither killed the wolf nor protected the human. Being bitten was the last test, and she could sense they didn't know what do next with her.\n\nIt was the next Meatloaf Monday when the man arrived. He was wearing an expensive suit and carried himself like he was important. They brought him to me during my exercise hour, an hour a day I could run around an enclosed courtyard. I almost regretted the interruption to my private time.\n\n\"Ella, a word please.\" The guards locked him in the exercise area with me; he was unarmed, and apparently unconcerned. I walked over to him, my face still sweating from the hard run I was using to keep my body in shape.\n\n\"And you are?\"\n\n\"You may call me Al.\"\n\nI looked at him. \"Well, you can call me Betty then.\" He smiled, he caught the reference. \"What do you want?\"\n\n\"I think I can use someone with your talents, Ella, both what you are now and what you can be. Alpha.\"\n\nI raised my eyebrow at him. \"And why do I think I would help you?\"\n\nHe reached inside his jacket, removing a photo and handing it to me. \"Because you have people you want protected, and I can help you with that.\" I looked at the photo and almost collapsed to the ground. It was a photo, taken with a telephoto lens. Craig was walking barefoot along the beach, board trunks and a T-shirt on, and on each side of him was one of my boys, holding his hand. Craig was smiling and the boys were laughing as they looked up at him.\n\n\"What do you need?\"\n\n\"An agreement. You do what I need, and I make sure they stay safe and out of the war.\" \"That's kind of open ended,\" I said. \"How do I know what either side of that entails?\"\n\n\"Let's talk over lunch.\" He knocked on the door and it was opened. He handed me a bag and walked me to the bathroom in the hallway. \"Change and come on out. We're leaving.\"\n\n\"What? How?\" I looked in the bag, inside was a summer dress, underwear and low heels. \n\n\"The Company has been given wide latitude in dealing with certain things. You came highly recommended.\"\n\nI didn't know what to say, so I went in the room and changed. The clothes felt almost foreign after being locked up so long. I came out and he gestured to the door. \"Wait,\" I said. \"What about Charlie?\"\n\n\"Who?\"\n\n\"He's a boy, he's locked up across from me. He was bitten and changed, and I'm afraid they are out of uses for him. He's Pack now.\" I looked up at him, pleading. \"He can be my responsibility, or I can find a Pack to take him in. He's a good kid, he doesn't deserve what they will do to him.\"\n\nHe pinched his nose, thinking hard. \"All right, we'll figure it out later. You owe me for this, Ella.\" I nodded. He talked to a guard, and a few minutes later Charlie was in my arms, dressed in his orange overalls.\n\n\"Come on, we have places to be.\" I held Charlie to my side as we walked out of the facility behind Al. I was elated to be freed, yet in the back of my head I kept thinking back to that scene in The Americans, where the Russian jailers make you think you are getting a pardon right before they put a bullet in your head. It wasn't until we were outside, being tucked into a black Suburban with tinted windows, that I let myself relax. I hopped up into the seat, only to freeze when a voice I didn't expect caused me to look up.\n\n\"We meet again, Ella.\" My blood turned cold as I saw who it was.\n\nCh 49\n\nI froze, and I felt myself get pushed in to the car farther towards the one person I never expected to see. I moved Charlie onto my lap as Al got in, pushing me into the middle of the bench seat.\n\n\"Marvin.\" I looked over at him, hatred in my eyes. \"I didn't expect you to crawl out from under the rock you have been hiding under, Alpha.\"\n\n\"Well, I didn't have a choice.\" He went to move his hand, I could see it was handcuffed to the seat. \"I find that when you have two million, you are outvoted by the one who has three. My so-called 'protector' gave me up.\"\n\n\"Sucks to be you. I suppose I'm not getting my money back either?\"\n\nThe privacy window to the front seat lowered, and I was face to face with Black Ker. \"No, Ella, you won't see your money back. In fact, Craig paid the three million to get him turned over to me.\"\n\n\"Why?\" I looked between her and Marvin. \"He didn't even know I was alive.\"\n\n\"True, but he felt he owed it to you to finish what you started.\" The car began to move. \"He loves you so much, Ella. When I told him I had found Marvin, he didn't hesitate.\"\n\n\"So what now? Are we going to my Pack? To his Pack?\"\n\n\"His Pack no longer exists, Ella. It was discovered about six months after you were captured, and wiped out.\"\n\n\"You won, Ella,\" Marvin said. \"I should have just killed you in the hospital when I had the chance.\"\n\nI set Charlie down in the seat next to me and whispered to him to look at Al. When I turned back, my hands shot out and grabbed the back of his head and his chin, and using all my strength I twisted my shoulders. His reaction time was slow, and with one hand cuffed in silver he had no chance. There was a sickening crack as his neck broke. I twisted farther, ensuring the spinal column was severed, then let him go. He sagged to the floor, his eyes wide open in shock. I watched them cloud over before I looked away.\n\n\"You got a place to get rid of the trash?\" I looked over at Al, he hadn't even responded when I did what I did. \n\n\"Steve, go to the Cleaners.\" He nodded and worked his way to the freeway. I tuned so my back was to the dead Alpha; maybe I shouldn't have done what I did when I did, as he lost control of his bowels as he died. It was bad for me, so I knew it would be tough to take for Charlie and Ker with their enhanced noses. Even though it was loud, Steve rolled the windows down partway and opened the sunroof. Al produced a blanket from under the seat and I covered him up so Charlie wouldn't have to see this. I was all too familiar with death and pain before my twenty first birthday, there was no reason Charlie had to see more. I hugged Charlie to my shoulder, making him look the other way out the window at the passing city instead.\n\nTwenty minutes later, we pulled into a garage in an industrial area. \"Look at me,\" Al said. \"The rest doesn't concern you.\" I studied his suit, trying to figure out where he had gone to school and what his background was based on his fashion. I heard the door open behind me, and the SUV shifted as the dead weight was removed. Ker handed a case back to Al, and he looked down at Charlie. \"I need to put these in your eyes, they will block the UV light used to identify werewolves. It will help you travel without detection.\" \n\nHe looked back at me for permission, I nodded. \"Thank you for that suggestion, Ker. We bought a bunch of them, but we never had to use them.\" \n\n\"Not while you were free,\" Ker said, \"but I know they have since then. Our friends in Homeland Security are convinced the Midwest region has been cleansed, but in actuality, it is because the werewolves have gotten better at hiding. I suspect your mate got word to your allied Packs and helped them blend in.\" I certainly hoped so. I had a lot of time to think in captivity, and I was never allowed to watch or read the news. I really had no idea how the war was going, or what had happened to my people.\n\nAl bent the boy's head back and lifted his eyelid, then carefully placed the UV filtering contacts in place. He blinked a lot. \"You'll get used to them,\" I said. \"Let me know if they are still bothering you in an hour.\"\n\n\"What if I shift,\" he asked.\n\n\"They will stay on your eyes during a shift,\" Ker said.\n\nI heard a machine turn on, it was a carpet cleaner. A few minutes later the smell of urine was gone and in its place was the smell of soap and bleach. The door closed, and Steve backed out of the building again. \"You can look around again,\" Al said.\n\nSteve kept the windows where they were as we got back on the freeway, trying to flush the smell out and dry the carpeting. \"Where are we headed?\"\n\n\"Baltimore-Washington International Airport,\" Al said. \"We need to talk to you and your mate. We need things from you, and there are things we can do to protect your Pack.\"\n\n\"Like what?\"\n\nHe smiled. \"Not until we can talk to you both.\"\n\n\"What about Charlie?\"\n\n\"He's coming with, obviously. He's your Pack, your responsibility. I wouldn't dream of taking him away.\"\n\nI looked out the window at the world I'd been taken from two years ago. \"Who are you, Al? Central Intelligence Agency?\"\n\nHe nodded. \"We've always taken a more nuanced view towards shifters. Black Ker, for example. She and her panther had been known to me for years. I was smart enough to recognize her unique talents and find a way to use them. She's been a valuable asset for me.\"\n\n\"But I'm not CIA,\" she said. \"I am part of a team, we work for Al, he is our boss at the Company. With what we do, they need plausible deniability. Al is the only one at the CIA who knows my true nature, and knows I work for them. If I need help, like that cleaning service back there, he provides it without involving me or my name. Jobs like I took for you help keep our operations off-budget and out of sight.\"\n\n\"Lucrative?\" I looked down at Charlie, he had fallen asleep.\n\n\"Some parts are. You would be surprised at how much we have to spend, though. Overhead is a killer.\" \n\nI laughed, here was Black Ker, the most feared assassin in the world, talking that way about how much it costs to run her team. I looked out the window, we were passing the car rental lots. We passed the exit for the main terminal and kept going. \"Where are we headed?\"\n\n\"Private aviation section. Don't worry, the charter flight is being expensed to your account.\" I smiled, I really didn't care. I had more money from my parent's estate than I could find a use for.\n\nWe pulled into a hanger section and drove straight to where a Learjet III was parked. The door opened and Al helped me out, I was carrying Charlie. It was the first time I saw Black Ker below the shoulders; I almost stumbled when I saw the baby bump. \"You're pregnant,\" I said. \"Congratulations.\"\n\nShe smiled and put her hand on her stomach. \"Five months along. I can't wait.\" I impulsively walked up to her and gave her a hug with my free hand. She was stunned at first, then hugged me back. I got the feeling she didn't get a lot of hugs in her line of work.\n\nWe all followed Black Ker up the stairs and into the plane.\n\nIt was quite an elegant d\u00e9cor; rich cherry woodwork, supple black leather seats, and white carpeting. I put Charlie into a seat near the door that reclined back into a bed and buckled him in. One of the pilots came back, not even glancing at us, and pulled up the stairs and closed the door. \"Twenty minutes to wheels up,\" he said as he returned to the cockpit.\n\nThe three of us sat around the table in facing chairs; a wonderful-smelling array of food was laid out for us. I picked up a Maryland blue crab sandwich, the crab cooked to perfection with Old Bay and mayonnaise on top. Soon my plate was full of foods I'd dreamed of, or not known existed. There wasn't a lot of conversation as I pigged out on food that most definitely wasn't Army issue. Finally, my belly distended like I was four months pregnant, I leaned back in my chair as we took off.\n\n\"Where are we headed?\"\n\n\"Minot, North Dakota.\" Al smiled at my reaction. \"Hey, this is a much more comfortable return than your trip from there.\"\n\nI smiled back, that armored car ride had sucked. \"I finally get to go home?\" Their faces fell. \"Wait. What aren't you telling me?\"\n\nAl opened his phone, flipping through the photos until he got to the one he wanted. It was a satellite photo of my home and the street; the house that I grew up in was in ruins. \"I'm sorry, shortly after your arrest Homeland Security started to dig into your background and activities. They concluded you were either a werewolf or harboring werewolves. An assault team was sent; they used flash bangs to enter, they didn't find anyone but it set the house on fire. They wouldn't let fire crews in, so it burned to the ground.\"\n\nI looked at the phone, tears rolling down my face as I thought of everything I had lost. \"What about the others in the neighborhood?\"\n\n\"Only Tom and Shelley still live there. The other houses have been empty since you were taken.\" I nodded, it was probably for the best. Without the cover of the main house, none of the other houses could support and protect the entire Pack.\n\n\"So where are my people?\"\n\n\"We think they took refuge in the Fort Berthold Indian Reservation,\" Ker said. \"We didn't push too much, but the beach on Lake Sakakawea is where we photographed Craig. My surveillance guy didn't want to spook him.\"\n\n\"So why would they be in danger if they are hidden away?\" I was so thankful we had been friends with Alpha Rose Stormwater, enough so that she helped my little Pack.\n\n\"Well, the FBI has been trying to track down a group of cyber-saboteurs who have been hampering the war effort. They've been successful in narrowing the search area down to an area that includes the reservation. It's only a matter of time.\" \n\nI smiled, thinking that Josh was still getting it done two years later. Who would have thought that the most successful actions on our side would be done by teenage hackers? \"So are they meeting us?\"\n\nAl shook his head. \"They have no idea we are coming, no idea we got you. Ker left a message for them to contact us since we brought in Alpha Marvin, but we haven't had a response yet. It was only two days ago we found out you were still alive and where you were being held. I made some phone calls and got permission to have you transferred to my custody; the Department of Defense didn't fight it too much because they haven't gotten anything from you. That brings us up to now.\"\n\n\"So you don't know where he is, and he doesn't know I'm coming.\"\n\n\"Yep.\" Ker smiled at me. \"He's in for a hell of a shock.\"\n\nCh 50\n\nWe talked for a few more minutes, but when the conversation slacked Ker leaned her chair back and promptly went to sleep. \"She's a cat,\" Al said, \"She does that all the time.\"\n\nI was a little jealous, the years of captivity had trained me to stay alert during the day and to sleep lightly at night. \"It's all right.\"\n\n\"You fascinate me, Ella. You're everything she told me you were, but more.\"\n\n\"What do you mean?\" We had met exactly once before, when she snuck into my bedroom while I was in the shower. It didn't mean we were besties.\n\n\"Well, take what happened with Alpha Marvin. Here's a man who helped kill both your parents, who tried to kill you several times, who stole millions of dollars from you and has been in hiding for two years. Yet, when you are left with him, you killed him with all the emotion of a person stomping on a spider that they find in their bathroom. It wasn't what I expected.\"\n\n\"I killed, but I'm not a killer, Al.\" I didn't like where this was going.\n\n\"Yet you kill, and do so efficiently and without emotion, yet you aren't a psychopath. It's a rare ability.\"\n\nI snorted. \"Not one I wanted, just one I ended up with. You wouldn't understand.\" I reached forward and took one of the Cokes that was in the bucket of ice. God, I had missed caffeine.\n\n\"Explain it to me then. Tell me how you can show such compassion towards someone like Charlie, while being so detached with someone like Marvin.\" He sat back, his hands folded over his belt.\n\n\"You know the basic history. How the four Alphas conspired to auction me off as a mate so one of the sons could take over my Pack, and bring power and money to the alliance with them.\" He nodded. \"The first man I killed was my rapist. I was desperate, my dreams were over if I submitted to him, and I almost died fighting him off. My wolf DID die, leaving me alone and shattered. Still, it was self-defense. I never regretted for a second what I did to that bastard.\"\n\nI looked at him, he was studying me as I continued the story. \"I made a blood vow to my parents after that, that I would avenge their deaths. My parents were everything to me, they didn't deserve the death they were given; those men were without honor. They sacrificed their lives in a hope that I would get away. With no wolf and no Pack, I thought that I would use the money they left me to kill the four. I hated them; I wanted them to suffer, to have everything taken from them just as everything I had was taken from me. Only then did I want them to find out I had done it, and I wanted to be the one who killed them. This is what gave me the will to continue on when my heart wanted to give up.\" I took a drink and checked Charlie, he was still dead to the world.\n\n\"When Marvin came to my hospital room and offered a truce at a price, I agreed because money was the least of my worries. I needed time. I didn't think he would give me up so quickly. The second man I killed was going to capture or kill me, he underestimated me and paid the price with his lift. Again, self-defense, but now I'd killed two. I slept just fine, thank you.\"\n\n\"Yet, you didn't have your revenge.\" He grabbed a slice of turtle cheesecake off the table, I'd already had one and it was fabulous. He saw my eyes and handed it to me, taking a piece of chocolate cake instead. Wise man.\n\n\"I was good for a while. I had found a lover, and then found I was pregnant. I may have killed men, but I was never going to kill an innocent baby. Finding myself pregnant with what later became known as my rapist's twin boys, that changed everything for me. I wanted revenge, but that was no longer the only thing left in my life. I also found out that the bonds of family and Pack were deeper than I had anticipated. Darry, Marge and Mabel stuck with me, even though I had no wolf and no bond with them anymore. They plus Mark gave me reasons to live.\" I smiled, thinking back of that time. \"I hadn't cared before if I died fighting the Alphas, because I didn't see a life past that anyway. I'm so glad I had the help of Doug and Remi, and their Pack.\" I had to stop for a moment to wipe my eyes, it still hurt to think of them.\n\n\"When the Packs attacked me, Remi, Renee and Darryl, I was fighting for my family and myself. The three I killed, the six others that died, I had no remorse for what I did. I later regretted the way we disposed of their bodies, because they were wolves just following their Alpha's orders. So now my body count is up to five.\"\n\n\"In aviation, you'd be an ace.\"\n\nI snickered. \"Yeah, I'll get stickers for my truck.\" I took another bite of caramel cheesecake heaven. \"I started to second guess my strategy after that. I wanted the Alphas and Lunas who had killed my parents to die, because that was justice for my parents. I didn't want to see innocent wolves in their Packs suffer for the lack of honor their Alphas had. It became less personal to me. I wanted them to suffer and die, sure, but I was all right if someone else did it. When Dennis told me what happened with his daughter, I didn't mind that he was the one to end Scott Tanner. I was satisfied that he died in front of his Pack which had turned its back on him.\"",
        "\"Yet somehow through this, you found a way to forgive.\"\n\n\"Only those who regretted their actions. Carol and Olivia, they were brought up believing that what their parents were doing was right. Since their offense was against me, I forgave them.\"\n\n\"So when you and Olivia killed Alpha Lewis and his men, that was also self-defense. What about Alpha Anderson and his mate? Word was that you walked right into their Pack House and shot them in cold blood in front of the rest of the Pack.\"\n\n\"I did. They had given up information that led to hundreds of deaths, including my closest remaining family. They were a disgrace to the werewolf race and had threatened to expose more Packs. It was self-defense as well, for me and others. So I'm up to what, ten people I've killed? Eleven with Alpha Marvin? I don't regret a one. As they say in Texas, they needed killing.\" \n\nI put the empty plate down and grabbed another Coke. \"I watched American Sniper once, Chris Kyle had over a hundred and sixty confirmed kills, and he didn't regret a one. His only regret was those on our side he couldn't save.\" I stared into his eyes. \"That is my only regret too, that I couldn't save Darryl, I couldn't save the Johnson Pack. I sleep just fine.\"\n\n\"So, back to Marvin.\"\n\n\"He didn't deserve to keep sharing the air with me. His death is justice.\" I looked over at Charlie. \"So many have died. I had plenty of time to think about what I would do if I ever got out of that place. Not once did I want revenge. I wanted justice, quick and simple. Plus, Charlie doesn't need to see any more. He struggles enough with the thoughts that a monster is inside of him. I know different; the monster is not in the wolf side, because I never hurt anyone before I lost mine.\"\n\n\"Thank you, Ella. This conversation has been very illuminating.\"\n\nCharlie woke up and looked around frightened, I jumped up and went to him to calm him down. When he was wide awake, I brought him over to sit in my lap while he ate. There was still plenty of food, but there wouldn't be soon. A growing werewolf had a bottomless pit for a stomach.\n\nThe pilot announced that we would be landing soon, so I put Charlie back in his chair and buckled him up before sitting in the chair across from him. Al woke up Ker and they settled in to their seats. Charlie had never been in a plane before, so he was fascinated by what they saw out the window.\n\nWe landed and taxied to a hanger where three cars were parked. The pilot shut the plane down, then came back and opened the door and lowered the stairs before going back to the cockpit. He never even looked at us.\n\nWe walked out, this time Charlie and I followed Al and Ker. They walked straight for the cars. Al opened his up, then gestured for me to go to the other. I looked at him quizzically. \"We're not going with you, Ella. Go to your people, and when you are ready to talk, call us at this number.\" He handed me a piece of paper with his cell number. \"Don't take too long, we'll only be in town a couple days.\"\n\nI nodded, thanking them both for getting us out of that place. Charlie and I got into the car, it was a Ford Edge with navigation system. The key was in the ignition, and rental papers were on the dash, along with a driver's license in the name of Elanor Black. I noted with a snort that it was MY corporation that had rented the vehicle, the same one I had used to do research on the Packs. I went to the navigation system and the map, then worked my way through to set Raub, in the center of the reservation, as my destination. We drove out, my mind still spinning with how quickly things had changed.\n\n\"What do we do now, Ella?\"\n\nI looked over at Charlie as I drove, he was scared. He was still just a kid. \"Whatever we want, Charlie. Whatever we want.\" He smiled as he looked out the window into the setting sun. \"Right now, we're heading towards the place I think my Pack is at. I want to find them, my mate, my sons.\"\n\n\"Will they like me?\"\n\nI ruffled his hair. \"Of course, they will. I told you before, you're Pack now, and we're family. You have a home, Charlie. I can't wait to see your wolf running with the others.\"\n\n\"I wish you could run, too.\"\n\nI sniffed a little. \"Yeah, well, I had to make my peace with my life a few years ago. I'm happy just being around a Pack now.\"\n\nWe stopped at a Dairy Queen for dessert, since he was getting hungry again, then an hour later we were crossing the border of the reservation. I was shocked to find a checkpoint there. I had to wait a couple cars, then rolled down the window and the Tribal Officer looked in at us. \"Identification and business on the Reservation?\"\n\n\"Visiting friends,\" I said as I handed the man my new license. \n\nHe looked at it, then shined the UV light in my eyes. \"Who are you visiting?\"\n\n\"Rose Stormwater.\" He looked a little shocked, but got over it. \n\n\"Is she expecting you?\"\n\n\"No, I'm a friend, I thought I'd surprise her.\" \n\nHe stepped away from the car and made a phone call. He frowned as he talked before coming back to me. \"She says she doesn't know you,\" holding his hand over his phone. \"Tell her Ella needs to talk, I haven't seen her since that party on Labor Day weekend a few years ago.\" \n\nHis mood changed suddenly and he hung up. He wrote down an address and handed it to me. \"She's waiting up for you, this is her home. Drive carefully.\" He waved me through, and I stopped just past the checkpoint to put the address into the navigation system.\n\nTwenty minutes later, I was pulling into the driveway of a large home overlooking the reservoir. We got out of the car and walked to the front door; we were almost there when there was a loud scream, and I was knocked sideways into the grass as arms squeezed around me.\n\nCh 51\n\n\"ELLA! OH MY LUNA ELLA!!!\" I looked up from where I had almost faceplanted on the neatly trimmed lawn to see Olivia's glossy black mane hanging down from her face. She was looking down at me and grinning madly. I heard a growl behind me, looking quickly I saw Charlie was about to shift and rip her off me. \"CHARLIE! Stand down. She's a friend.\" The Alpha command hit his wolf and he immediately stilled, then his wolf retreated and his shift stopped. I hugged Olivia for all I was worth. \"Oh man, am I glad to see you!\"\n\nThere was a rumble of feet and two young ones joined the pile. I barely recognized Tina and Tony, they had grown so much since I last saw them. It was all one rolling ball of laughter, tears and hugs until we could finally break apart and I could get up again. I looked over to see Rose Stormwater standing in the doorway, grinning widely. I gestured Charlie over to join us, nobody was letting me go even though I had gotten up. \n\n\"Alpha Rose, I can't thank you enough for what you have done for my Pack. I am in your debt.\"\n\nShe waved for me to come in, and eventually we all made it onto the couch in her living room. Her Beta and Head Warrior introduced themselves, and we were served refreshments. \"So, Alpha Ella, where have you been hiding the last two years? Your mate has been beside himself with worry.\"\n\nI smiled, imagining just that. \"I was captured by police outside Minot, then given over to military control. I spent the last two years at Fort Detrick as a lab rat, that's where I met Charlie here.\" I gave the young wolf a hug. \"He was force turned and captured, and put in the cell opposite mine. I was able to calm his wolf, and he's now part of my Pack.\"\n\n\"Oh my. What do you know of what has happened?\"\n\n\"Almost nothing,\" I said. \"I had no access to news during this time. It was only after Black Ker arranged for me to be released that I heard anything. I know my mate and children are alive, and they took refuge here. Other than that...\" I looked at her, pleading for a good answer.\n\n\"They are all safe here, Ella. In fact, your Pack has grown a bit since you left.\" She looked at Olivia, who was blushing. \"You want to tell her now?\"\n\n\"Mark and I had twins as well, six months ago. Both are werewolves, they are home with him.\"\n\n\"Werewolves? But you are... he is...\"\n\n\"He's a wolf now, Ella. Craig bit him to give him the change. We decided that one of us needed to be able to shift to protect our Pack and family. Twin girls, Elanor and Elizabeth.\" She pulled out her phone, and showed me the photo.\n\n\"Oh wow, they are SO cute!\" I looked around, then looked at Rose. \"When can I go to my Pack?\"\n\nHer eyes glazed over for a second, then her men got up and left the room, heading out the back of the house. She looked at Olivia. \"Dear, will you do the honors?\"\n\nShe grinned. \"Oh, I'd love to.\" We got up and followed them through the house to the sliding door leading to their large backyard. I stopped for a second at the door, the lawn was filled with adults and children; the grills were fired up, music was playing, and games were being played. There were hundreds of people here, but my eyes locked onto one. The music stopped and all of the people turned to look at the house and their Alphas. \n\nHe turned.\n\nOur eyes locked on each other.\n\nAnd I ran to him and jumped into his arms. \"CRAIG!!!\" I crashed my lips to his, his mind hadn't caught up to real time yet so he was still staring at me, trying to convince himself I was real. I kissed him, hard and possessively, as the sparks ran down my arms and from my lips. My body was on fire for him.\n\nHis wolf pushed forward, and he shifted, tearing his clothes as his big black wolf appeared before me. I hugged him tight, his tail wagging and his tongue bathing my face as he shivered in his excitement. He knocked me to the grass and stood over me, letting out a joyful howl that was picked up by members of both Packs.\n\nBefore I could get up, I was engulfed in the arms of two little boys, their chubby little arms on my neck. \"MAMA! MAMA HOME!\" I hugged them tight to me, putting kisses on their heads and faces as they squealed and wiggled in my arms. Tears were flowing down my face, the relief was evident as was the joy.\n\nI had my family again.\n\nCraig shifted back and someone tossed him a pair of shorts; he pulled them on, then pulled me back into his muscled chest. His arms stayed wrapped around me; it was like we were a pair of rare earth magnets, pulled together so strongly it would be almost impossible to separate us again. He was kissing my head and neck, sniffing both as he reassured himself that I was really here. I reached down and pulled each of my boys up by one arm; like little monkeys, they climbed up me and held tight as we stood there. No one wanted to let go, least of all me.\n\nThe Pack had given us a little time for ourselves, but they couldn't be held back for long. I went through the mental list as I saw everyone, marveling at how the children had grown. Mark came up, holding the baby girls, as Olivia and the twins hugged their legs. \n\n\"Oh Mark, I'm so happy for you guys!\" If Craig hadn't been holding me up I swear I would have collapsed. I set the boys back on the ground, where they immediately grabbed at my legs. Charlie saw some kids his age and ran off, and I let him go as he needed this so much.\n\nOlivia took one of the babies, dressed in a pink onesie with flowers, and handed her to me. \"This is your niece, Elanor. I named her after you, I mean, you saved me by leading them away from the gas station, and we... I mean...\"\n\nI hugged her tight, crying as the baby fussed in my arms. \"She's so beautiful. You guys make great babies together.\"\n\nMark smiled, and I handed Elanor back to Olivia as he handed me the other. \"This is Elizabeth, and I want to thank you, Ella. I don't know all of what you went through, but I'm so happy you are back!\" We hugged, causing Craig to growl lowly and pull me tighter back to him. I glared at him, Mark was mated and family, but I could tell Craig's wolf was on edge. \"Are your parents here?\"\n\n\"No, they are still back home,\" Olivia said. \"I can't wait to tell them you are back!\"\n\n\"No phone calls,\" I said. \"In fact, Craig, send out an Alpha command. No one outside these two packs is to know I have returned, and no use of phones or electronics with my name. The danger isn't over for me.\" He nodded and I looked at Alpha Stormwater. \"Rose, could you do the same for your pack? I'll explain more later.\"\n\nThey did, and the reception line continued. Marge and Mabel each hugged me, they had been crying since they saw me and they were so happy right now. Jacob and Melanie were next, they were holding a baby that looked to be about a year old, a little boy named Chance. I was surprised to see Nadine and Natalie; her daughter had grown into a beautiful young woman, and there was a native American man by her side, hugging her tight. Oh, and Nadine was obviously pregnant. The girls each gave me a big hug before stepping back. \"Ella, I'd like to introduce my mate, Robert Stormwater.\" \n\nHe shook my hand, and I raised my eyebrow. \"He's Rose's nephew. We met shortly after we arrived here.\"\n\nI pulled him into a hug. \"I'm so glad she found her mate, I can see you make her happy.\"\n\n\"That's tougher now that she's pregnant. Do you have any idea how tough it is to get her a Dairy Queen hot fudge sundae at three in the morning from the middle of the reservation?\" He feigned injury as she elbowed him. \"Of course, I'd do anything to make her happy.\"\n\n\"But how... I mean, Nadine, you lost your mate.\"\n\n\"So did Robert, shortly after they mated she was killed by a drunk driver. We got Luna's favor, she granted us a second chance mate and we couldn't be happier.\" I hugged her again, then Natalie ran off to find her friends. Craig took the opportunity to guide us to a nearby table, where he sat down and placed me on his lap with the boys perched on each of my legs. It wasn't comfortable, but none of us wanted to sit apart.\n\n\"Where are the Spencers?\" \n\n\"They went back to Canada a few months ago, they finally made contact with their old Pack. Things have settled down enough at the border for them to return. It also didn't help that Josh has been causing so much trouble, I decided it was best to get him out of the country for a while.\"\n\n\"He's having too much fun?\"\n\n\"You wouldn't believe it. They don't know his name yet, but his alias is on the Ten Most Wanted list.\" Craig smiled at that. \"During the coldest part of winter last year, he and his buddies led a coordinated attack on sewage and water treatment plants across the United States. It was hugely successful from our end, but for the tens of thousands of people who had sewage back up into their houses when it was twenty below out? Or who didn't have water to flush for a week? Not so much.\" I laughed at that, it was perfect. The boy was a menace, I was so glad he was on OUR side.\n\nThe Elders and children from the Johnson pack were next to come up. I was happy to see Estelle Whitfield and Michael Campbell still alive. \"We prayed for your return every night, Alpha Ella. The moon joins our celebration tonight!\"\n\n\"Thank you, Estelle. Do you have any news from the Johnson Pack?\"\n\nShe frowned. \"Nothing good. Your cousins are still alive, but things are tough for them. The military has declared the whole territory a human no-go area, and it's a free fire zone inside it. They are fighting back, them and a few other Packs. It's been a standoff. We evacuated some injured for them, that and helping to resupply them is all we can do for now.\"\n\nI started tearing up, I was so happy to know they had survived thus far. I knew I couldn't see them, though.\n\nI hugged the next man, and he wrapped his upper arm around my shoulder. \"I'm so happy to see you again, Ella.\"\n\n\"You too, Jimmy. Are you keeping busy?\"\n\n\"Of course. I've taken over logistics for the Pack. I never knew it was so complicated to keep people supplied with food, clothing and weapons. I also run supplies to the allied Packs.\" He carried himself with pride now, he was no longer a wounded warrior shuffled to the side, he knew he had value.\n\n\"Move aside, Jimmy, you're holding up the whole Navy here.\" He gave her a glare. \"OK, I wasn't in the Navy but my Dad was, and it sounds bad.\" She pushed him out of the way and leaned in to give me a hug, her two-year-old son on her left hip. \"This is Doug, I named him after our Alpha.\"\n\n\"Oh my,\" I said as he hugged me, \"such a strong little boy! Are you good for your mama?\" He nodded to me as he ate the chocolate chip cookie in his gooey hand. As we talked, another little girl, a little older than Doug, ran up and grabbed her leg. \"And who are you?\" She was a cute little one with bright blue eyes and blonde hair.\n\n\"This is Laurie. I adopted her after you left.\"\n\nOh Luna, she was so adorable, I thought back to the baby we took in and she was so much bigger now. She looked at me with her big eyes. \"Can Darryl and Mitch play? They have a bounce house.\" My boys looked up at me, their eyes pleading as well. \n\n\"Sure, go have fun.\" They jumped off and ran, holding hands with Laurie, as Maggie mouthed to me that she would watch them.\n\n\"What about Theo, Reggie and Ryan?\"\n\n\"They are here somewhere, the elders have taken them in as surrogate grandparents.\"\n\n\"And the triplets?\" I was sure I would have seen identical five-year-olds around.\n\n\"Tom and Shelley adopted them. We tried to get them integrated with our Pack and it didn't work. Their wolves were damaged from the loss of their parents and they were becoming uncontrollable and violent. We didn't have a choice. We gave them the wolfsbane and killed their wolves.\"\n\n\"Oh no...\"\n\n\"They are alive, Ella, and happy. Tom and Shelley are wonderful parents to them, and they can live safely among the humans. They don't even remember their wolves now.\"\n\nI spun around in his lap, straddling his legs as I cried onto his shoulder. He held me tight, and the tingles energized me again. I pulled back and kissed him deeply, as the catcalls and shouts of 'get a room' echoed through the back yard.\n\n\"Keep it PG, we have kids here,\" Rose teased.\n\nI looked over at her. \"How... how did you pull this all together in such a short time?\"\n\nShe laughed. \"When I got the call, I was shocked. I decided to keep everyone in back until I verified it was you, and that you were all right.\" She smirked a little. \"I figured Olivia was safe to have out front since she and the twins are human. And when we went out back? You should have seen your face. I'm glad I got photos.\"\n\n\"Thank you. Oh Luna, I'm so happy right now!\" The rest of the night was a blur of introductions and congratulations as I wiggled around on Craig's lap, teasing Craig Junior to the breaking point. Marge and Mabel came by with the sleeping boys, saying they would take care of them until tomorrow. Since Charlie had already been invited to run in wolf form with the juveniles then sleep over with his new friends, that meant it was just us.\n\nI think Craig figured it out at the same time. He jumped to his feet, tossing me over his shoulder as he yelled \"Thanks everyone!\" and ran through the yard towards his house down the street. I squealed and tried to get down, but he wasn't having it.\n\n\"You're only going one place, and that's in bed with me. We've got two years to make up for.\"\n\nYes. Yes we did. "
    ],
    "authorname": "partwolf",
    "tags": [
        "drama",
        "action adventure",
        "werewolf",
        "supernatural drama",
        "supernatural"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/stolen-birthright-ch-47-51"
}