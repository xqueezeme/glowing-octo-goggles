{
    "title": "Succubus Inquisition Ch. 01",
    "pages": [
        "A special thanks to JonB1969 for his quick responses and amazing editing. Without him this story may not have been finished. If you're looking for a quick fix this story isn't for you, this is my longest story and I hope you all enjoy it and remember to vote/comment if you do.\n\nThis Story is a work of fiction. Names, characters, places, and incidents either are products of the author's imagination or are used fictitiously. Any resemblance to actual events or locales or persons, living or dead, is entirely coincidental.\n\nCopyright \u00a9 2014 by Yshomatsu\n\nAll rights reserved, including the right to reproduce this story or portions thereof in any form whatsoever. The following is meant for Adults only, if you are under the age of 18 leave now.\n\n\n\nAn ancient evil was unleashed upon the unsuspecting world. Mysterious sightings of strange creatures have been seen within the shadows of the night. Villagers started to go missing, first women, and later men. Panic spread amongst the land, many blamed the Horadric Legion: An army of knights and warriors from distant lands. They conquered all they set their eyes upon. The Monk Order secretly infiltrated every kingdom in the known land. Their goal to keep the balance between good and evil, they ignored the Legion's invasion believing that the true threat was from somewhere else. \n\nThey were right...\n\n*****\n\nA man sat upon an old, dusty desk within a monastery. Medium length golden hair hung from his tilted head. Determined creases formed on his brow as he looked down with bright Peridot eyes at an aged parchment in deep thought. The parchment detailed an order given out during Anders the Great's campaign.\n\nThe old, worn down chair creaked as the monk shifted his weight. It had been hours since he sat down with the old parchment. Something was happening in the world, but he couldn't figure out what. He had looked through a bunch of old books, yet kept coming back to the parchment. Something about it gave him a bad feeling.\n\n\"Athanatos, why are you always reading that scroll,\" asked a voice behind the man. Athan turned slightly, to see the youngest recruit in the monastery. Many secrets were kept within the Order, including the important role the Monk Order has had within the world. The boy didn't have the proper rank for clearance, he wouldn't understand.\n\n\"I miss my King,\" Athan replied. Elpis leaned over the monk's shoulder and looked at the scroll. \n\n\"How is that possible? Anders died one hundred eighty years ago.\"\n\n\"One hundred seventy seven to be exact young Elpis,\" Athan sighed, remembering when he was called away from his King's side shortly before he was mortally wounded in combat. \"I fought alongside him nearly to the end.\" The parchment detailed a mission from the Monk Order to stop an evil ritual.\n\n\"But how, you are only slightly older than me,\" the boy of only eighteen asked, amazed, yet in utter disbelief.\n\n\"I'm a lot older than I look. Shortly before his death, I was called away by the Order to stop a forbidden ritual of dark magic.\"\n\n\"You're joking, demons aren't real.\"\n\n\"Demons? Ha no, not demons, they are but myths created to scare children. Yet I really shouldn't say anymore, you will learn it all in time with your studies,\" Athan replied, the memory still burned within his mind as if it had just happened yesterday. He didn't mind talking about it, but wanted to give the boy an exit before getting carried away. The old parchment was a reminder of when he turned his back on his King. He couldn't help but blame himself for Anders' death, had he only been there at his side.\n\n\"Please continue, what harm could it bring to learn now?\"\n\nAthan chuckled under his breath. The Order always chooses those most eager to learn to advance within its ranks. Elpis was constantly asking questions when he wasn't training his martial arts. Come to think of it, Athan recalled the boy asked them even in combat training. He chuckled a little louder before covering it up with a cough. \n\n\"Alright,\" Athan enjoyed telling stories; his long years carried wisdom only the elderly truly know. \"Once I was just a boy like you, accepted into the ranks of the monks. When I turned twenty-two I was assigned to Anders. My orders were to make sure he remained the best leader that he could be. I stayed by his side during his campaign to unite the known world.\"\n\n\"Okay, I get that part but if it's true, how have you not aged a day if you're what two hundred,\" asked Elpis.\n\nAthan's shoulders dropped as he sighed, \"One hundred ninety-nine, where did you learn basic math? When I received the orders to stop the dark ritual along with my mentor,\" he looked back down at the parchment, his eyes lost focus as he retold the story. \"We intercepted the culprits responsible and sent each one of them to the afterlife. I believed our task complete, but later learned instead, we had the spell cast on ourselves.\"\n\n\"What was it?\"\n\n\"They were attempting to make a deal with an ancient evil for power and eternal life,\" Athan replied.\n\n\"Who wouldn't,\" Elpis laughed, not actually believing him. Not believing any of it really, immortality and dark magic, a little far-fetched right?\n\nAthan continued, ignoring the boy's naive attitude, \"When I entered the room I became part of the spell. Their efforts never would have worked, but we didn't know it at the time. It needed a mass sacrifice, instead of the one they had planned.\"\n\n\"Unlimited power right...\" \n\nAthan took a deep breath and held it for a second before releasing it. \"Heh, we had been instructed to stop them as I said before and in my young rash mind, believed we had. Shortly after that my mentor Yshomatsu went into self-imposed exile.\"\n\n\"So you guys can't die,\" Elpis asked, his interest peaked even if he was skeptical.\n\n\"I don't know, haven't had the desire to test it. I do know that I never age and any wounds I get can be healed quickly if I concentrate on it. The Order wasn't sure what to do with us after twenty years, when it was certain that neither of us were aging. The elders had mixed feelings, some thought we should lead the Order, others thought we should be cast out. Over the years the Order limited itself to one elder chosen by trials. It was decided wisely that an Immortal in power would become power-hungry after a century or two.\"\n\nI settled for being the Order's Keeper and adopted the name Athanatos, which means 'the Immortal one'. I swore to uphold the balance we monks have dedicated our entire lives to create. My mentor, however, had other ideas. He relentlessly pursued answers for our 'curse' as he called it. He became an obsessed book-worm and we fell out of contact.\"\n\n\"Why have you been shut in this old monastery though if you're a Keeper?\"\n\n\"What exactly do you think a Keeper does young man?\" A grin formed on his face, \"Have you read the ancient scrolls on how we have kept balance,\" Athan replied with a question to Elpis' with more questions.\n\n\"A Keeper is the hand of the Order that holds the balance with something called a Dream state.\"\n\n\"Close,\" Athan couldn't hold back his laughter now. \"I record the history as I see it take place. Do you know what it means?\" The boy looked confused, the subject jumped leaving the boy lost, a moment later he shook his head and shrugged. \"I mean the Dream state,\" Elpis' eyes opened wide, realizing what Athan had meant.\n\n\"It means that the Order had discovered a way to walk the world of dreams.\" Elpis looked completely lost, enticing a smile from Athan. \"When you sleep your mind begins to dream, we figured out that all minds go to the same spirit world or plane of existence to dream. We also figured out how to control our thoughts in that world, even communicate with each other.\"\n\n\"So basically, that is how the Order secretly rules the world?\"\n\nAthan leaned back and laughed loudly before he noticed the boy's embarrassment, \"I'm sorry I didn't mean to laugh at you, just the idea of us ruling the world was too much. However, you're right in a way, we don't rule, rather we keep the balance. Any time evil rises we are there to stop it.\"\n\n\"That doesn't explain why you are cooped up here.\"\n\n\"Well, recently we have lost contact with a few of our Order. I came back here to research any possibilities but I keep coming back to this parchment of my instruction to intercept the dark ritual. I can't help but think it's connected somehow,\" Athan explained.\n\nIn 349 the Horadric Legion spread its borders, slowly the valley villagers paid homage to the Horadric. The Monk Order paid close attention from the sidelines, only to intervene if ill content was found. \n\n\"Do you think it has anything to do with the rising power in the west,\" asked Elpis, thinking of the Horadric.\n\n\"I'm not sure but it's unlikely. Those sent into the Horadric's ranks are still reporting to us. Zoticus seems to think something ancient is waking from its slumber.\" \n\nZoticus is the monk's current elder. He's in charge of overseeing all monks that are sent on missions out of the monastery. The time to promote a new monk to the title of Elder had come, but monks started to go missing and Zoticus remained in command. Some believed that Zoticus didn't want to give up his position of power, but there's no proof to support their theories.\n\nThe two monks spent the next few hours reading many books. However, since neither of them knew what they were seeking, it was futile. There weren't any accounts of monks failing to report on such a massive scale. Those few recorded accounts had all been explained and couldn't be relevant. Every monk was expected to report back to the elder each week, up to a month if necessary. \n\nYet, monks were failing to report all over the known world. It started slowly; monks close to those missing could find no sign of their brothers. Each day more seemed to vanish; only a few remained. \n\n*****\n\nThe air was filled with the stench of death, sweat mixed with blood dripped down Athan's brow, burning his eyes. It wasn't his blood, it belonged to savages. Savages in the opinion of those that slaughtered them, bodies littered the ground. The tribal hide wearing armies of the Syracuse fought viciously against the armored Arcadians.\n\nThe Arcadians lead by their ambitious King Anders fought for the noble and righteous goal of uniting the known world under one banner. Anders unlike other kings fought along the front lines with his men, rather than bark orders safely from the side lines, far from any real danger. It was for this reason that the secret Monk Order had sent one of their own to watch over the king.\n\nMere seconds had gone by as Athan wiped the bloody sweat from his eyes, resulting in the opposite effect than intended. His freshly rubbed eyes felt raw and stung with increasing pain. He stumbled forward as his vision slowly cleared, almost tripping over a lifeless body. Three tribesmen ran towards him, their intent clearly shown upon their faces.\n\nAthanatos Spared a quick look around and noticed that somehow he had been separated from the main group of Arcadians. The moment quickly passed as Athan ducked down avoiding a side swipe of an axe. A deep breath and the monk sprang into action, rolling forward and spinning around with a leg extended. The tribesman fell backwards as his knees were kicked out from under him. He lost control of his swing as the flat side smacked into the man beside him. Blood splattered from a smashed nose as the man screamed out in agony.\n\nA sudden gust of wind blew by Athan's face before the first tribesman fell hard upon the ground with a thud, a spear impaled the third man. King Anders quickly finished off the first two with lightning fast strokes of his sword.\n\n\"Who's protecting who,\" Anders joked, \"They're on the run and we're winning the battle. Forward men,\" he shouted as his army followed him into the fray. Athan joined in on the battle cries, enjoying the rush of adrenaline pumping through his veins.\n\nAthanatos stirred in his sleep within the monastery, hours of unsuccessful research had exhausted him until finally he passed out where he sat, uncomfortably against an old tome as a makeshift pillow. Eyes moving behind closed lids, Elpis eagerly pressed on flipping through the pages of another ancient book. Even though Elpis had no idea what he was searching for he enjoyed reading the tomes of knowledge.\n\nHe glanced over at Athan and wondered if he should wake him, but quickly tossed that thought away realizing that he man was beyond tired and could use the rest. Even in such an awkward position. Elpis turned back to his book devouring the knowledge within.\n\nThe fighting continued for weeks as the Shamanistic tribesmen retreated time after time only to regroup and bounce back twice as hard. What started out as quick and easy victories dragged on until wary soldiers struggled to press on. The tribesmen were as stubborn as king Anders was ambitious, desperately holding on to their way of life. Just as any free man should. Ander's intentions were pure but people seldom saw eye to eye and the Syracuse feared being turned into slaves or worse, losing their way of life, their beliefs and ideals.\n\nThe Arcadians once again pushed the tribesmen back, only this time the bullheaded savages retreated into a cavernous path, rock cliffs extended up on both sides for as far as the eyes could see. The Arcadians stopped in their pursuit and stared in awe at the almost unnatural path carved out of the mountain.\n\nAthan warned the king that following in such close quarters wasn't the wisest course of action to take. Anders allowing his pride to cloud judgment brushed off the comment, believing they had finally pushed the shamans back to their home. He ordered his men into the abyss. Athan hesitated but fell in line as the army pressed onward, forced down to three side by side in the tight pathway.\n\nThe men struggled through the path for what seemed like an eternity, until they started to hear rumblings ahead. What started out as low cracking sounds quickly rose to a steadily rising roar, followed by animalistic chanting. Swords and shields were raised; King Anders and two others held the front lines with Athan behind them, ready for a fight.\n\nBANG!\n\nAthan jumped out of his skin, his chair flung out from under him. Sitting on the ground wide awake, his ass hurt from the landing and it felt like he pulled a muscle in his neck.\n\n\"I'm sorry Athan, a nasty spider came out of nowhere and I dropped the book,\" Elpis said while attempting to hold back the urge to laugh, he had scared the living crap out of the powerful Athanatos.\n\n\"I think we'll call it a night,\" Athan replied as he looked over and saw the look on the young boy's face. He started to laugh which caused Elpis to lose it. \"That was a great dream you ruined boy,\" He joked as he rubbed his sore neck and rose to his feet.\n\n\n\n*****\n\nUnderground deep in the desert was the unfortunate site of great evil being unleashed upon the unsuspecting world above. The room was dark. The only light came from an afterglow caused by the summoning circle. There were many candles around the room but those had long since been burnt out.\n\nThe room was filled with sounds of a creature purring. At the center of that summoning circle a woman laid, stretched out on top of many cushions. Her eyes closed as her hips flexed into the pillows, clearly having a pleasant time.\n\nThe woman appeared to be human besides two brown furred fluffy tails that waved hypnotically through the air just above her tight ass. That and the two large ears atop her long brunette hair that flowed down onto her back... Every other part of her was human, especially her smooth olive exposed skin. \n\nThe room had a strong smell of sex, as if she'd been going at it for weeks nonstop. She continued to purr as she opened her eyes and returned to the book in front of her. It was a large leather bound book. A book so old she had to be careful with each page as she turned to the next.\n\nThe cushions underneath her move as the man lying within them stirs in his sleep. The scent of her arousal and slowly moving hips having an effect on his dream. His tired and spent body began to react as well.\n\nThe woman known as Bree got caught up in Yshomatsu's problems. At the time she thought she was helping him, but her old life was behind her now. That creature that materialized in this very room changed her life and body. She had been a curious young woman, who thought the monk was cute. But now her body had an unnatural need for sex, she just couldn't get enough of it.\n\nShe lost track of time since that--- what did the monk called her--- succubus left the room. She had commanded Bree to entertain him so to speak. It felt like weeks had gone by, blowing his mind time and time again. Her body would only feel satisfied for a moment before she had to have more. Over time though it was like she was getting full, she began to be able to think again. \n\nAfter a while she found she could wander the halls of the monk's underground home, before needing to rush back to him to quench that itch. It was during one of those moments when she came across the old tome. It was all about unnatural things that Bree thought were myths before everything that happened to her.\n\nHer purring was clearly exciting the sleeping monk, she felt his cock hardening against her thigh. She smiled to herself as she turned the page. Her tails descended to caress his legs and tease his balls. The monk's body reacted instantly, his member stood proud between her legs.\n\nHad he been awake he would have grabbed her hips and pulled her down to be impaled. But his mind had overloaded on pleasure days ago. It didn't help his recovery that Bree didn't stop. Time and time again she brought his body to its breaking point.\n\nHer tailed lovingly caressed his hard dick, twisting around it with minds of their own. It was a truly unique experience his body wished he was awake to process the pleasure his nerves were sending to his brain.\n\n\"Hmm, interesting,\" Bree found the section on what she assumed was 'her kind' the Kitsune. The book's picture appeared similar yet it had nine tails, Bree only has two. A little digging and she found out why. The Kitsune gains her power by consuming her prey's sexual energy, each tail is symbolic to how powerful she is. The book explained how the creature's personality was full of mischief, acting innocent and dependent yet loving to play mind games on her prey. They're very hard to control and will rebel if their beliefs are challenged.\n\nIt all made sense to Bree, each passing day she felt more in control of her own mind. She still craved sex but it didn't consume her every thought anymore. The book talked about her gaining power, besides being able to think for herself she didn't feel more powerful. \n\nDistracted with the book Bree didn't even notice what she was doing. Her tails went from teasing Yshomatsu's lower body to outright torturing him. Both tails wrapped around his standing proud member, twisting and turning all the while tightening. \n\nHis unconscious body bucked.\n\nBree smiled, realizing what was happening. She was horny, the book could wait. The playful Kitsune looked down at his face, eyes actively moving behind closed lids. One of these days she'd have to give him time to recover, it'd be more fun if he was awake.\n\nShe propped herself up on an elbow and massaged her breast. She let out a low moan as she enjoyed watching his face. Her smile grew wider as she remembered her first encounter with the monk. Sneaking into his room as he slept and ending up giving him a blow job she hoped he wouldn't forget. \n\nJust then she wondered if her mistress\u2014Ha mistress, let's see how long I'm compelled to call her that--- had any control over what she created, in life Bree knew she was playful and mischief inclined. Perhaps the demon's magic just gave life to potential Bree already had within herself. ",
        "She had liked the monk back then and really enjoyed playing with him, but now she wasn't sure if it was just the magic overwhelming her senses or if she was really developing feelings for him. She hadn't noticed his torment back then, his struggle with the demon in his head. Yet she quickly learned how easy it was to submit to the succubus, losing herself to those lustful promises.\n\nAll those sexy things she whispered to me in my sleep, getting me to interrupt Ysh just as his spell would have sealed his control of Meridiana... That red skinned beautiful woman, curves in all the right places... Oh!\n\nHer tails angled his cock to rub against her wet pussy, as he kept bucking she couldn't help but grind herself back into him. Her tails continued to twist and twirl, his body was close she could feel it. Her thoughts were filled with desire and a will to obey. Such feelings she had been fighting to control now flooded her mind.\n\nHow could she ever think of disobeying her mistress, that angelic face made her melt as she imagined it in orgasmic pleasure. The book fell from the makeshift bed of cushions unnoticed as she grinded into his pole more urgently. She needed more and never wanted it to end, more, more, more it was all she could think about!\n\nYshomatsu cried out as his orgasm hit. His pulsating member closed the deal for Bree and fireworks exploded within her, squealing with delight she wrapped herself tightly around him. In moments she was panting for air, her mind a pleasant fog of post-orgasmic bliss.\n\nLying atop him exhausted she leaned in and weakly kissed him upon the lips before drifting off to join him in much needed sleep.\n\nUnaware as she slept his fluid absorbed into her tails and a subtle itch caused her to scratch at the base of her tails.\n\n\n\n*****\n\n\n\nIt was dark and wet outside as Sir Blake stared out the building's window. He had been cooped up for the past few weeks tending to his wounds. The couple that owned this house was kind enough to offer him shelter. Blake knew better however, the couple just couldn't risk bringing the Horadric's wrath upon themselves. He imagined the whole town would have been in celebration from that day had he died along with the rest of his men.\n\nThe memory of Sir Blake and the Horadric Legion conquering the people of the villages was too fresh on their minds to forget. They were simply too scared to do anything when the few Horadric stationed in the area vanished in the mountains just as they were too scared to leave the knight to his death under the rubble.\n\nSir Blake was left in charge of keeping the peace in these parts while the main eastern army focused on the surrounding areas. His wounds have healed enough for the journey. Soon he would be off to acquire the aid of his General, Titus. He was a great and honorable man who sought to unite the world rather than consume it.\n\nOver the past few weeks those few remaining men under Sir Blake were scouting in search of the monk's people. They have since been reporting the activities of one ancient monastery. Sir Blake had become convinced that this old sect had become corrupted and practiced some form of foul, dark magic, for he saw the glowing eyes as a sign of evil.\n\nEven though the Horadric believed in many gods, they still feared anything unknown or otherwise unnatural. Sir Blake was determined to put an end to what he saw as nothing else but a threat to the newly conquered land. He had intended to hang the monk in order to solidify his command, and had almost succeeded.\n\nThe knight let out a deep breath before returning to his temporary bed chamber. At first light he would meet up with his General and return with the entire legion.\n\nHe quickly fell into a deep sleep, but this was no pleasant deep sleep, for he twisted and turned all night. His dreams were dark and gloomy, filled with hate and fears of meeting an army of glowing eyes. Thunder clashed outside and echoed within the house. Sir Blake woke, as he jumped up in bed, covered in sweat. He looked around and quickly realized it was just a storm aided by a bad dream, wiping the sweat from his brow before lying back down. After a moment once he calmed down and drifted off to get a few hours of decent sleep before the sun would begin to rise.\n\nShortly after, the knight mounted his horse and rode off towards the sunrise, having prepared his things the night before. For hours he pressed on, pushing his loyal horse harder than he ever had before. The animal was starting to slow down, panting and foaming slightly at the mouth. Sir Blake took pity on his steed and pursued a detour in search of water. Soon he found a shady creek a few minutes out of his way.\n\nHe dismounted and led his steed to the water. The horse drank quickly, desperately needing nourishment. However the knight pulled back on the reins.\n\n\"Easy there fella, drink too much too fast and you'll be worse off than you were before.\"\n\nHe tied the reins around a nearby tree and removed his helmet, crouching down he filled the makeshift bowl and placed it on the ground for his horse. Kneeling down, he cupped his hand into the water and took a drink for himself. Once he was done he walked back to his horse and retrieved some food from his pack, ripping off a small piece for himself and offered the rest to his horse.\n\nAs he sat down against the tree, he took a moment to savor the dried meat and enjoyed the feeling of cold shade upon his skin. About an hour later when his horse looked well rested he got up and stretched.\n\n\"We'll take it slow the rest of the way boy,\" As he scratched the animal's neck, \"The General can't be far now. Wouldn't want to lose my head again and put us in any danger now would I.\" Sir Blake joked as he climbed unto the saddle and patted his horse's neck again before they set off.\n\nThe sun was now at their backs as they returned to the path and continued eastward.\n\n*****\n\nLife at the monastery went on as it normally would. The Order's Elder sat meditating with many other monks. Outside members went about their business tending to outside crops and daily chores.\n\nAthanatos began each day with a stretching routine. He believed that the Elder took too much stock in the Dream state. It was useful but to indulge anything too frequently never works out in the end. Even though he longed to reach out to his mentor for advice Athan withheld from entering the Dream, in light of everything happening.\n\nIn time their paths would cross. He hoped.\n\nHe calmed his mind and began to practice his favorite form of martial arts, taking deep breaths he waved his arms around and spun as if in a dance. It wasn't long before he had an audience. Elpis had become quite amazed by the monk. He moved with excellent skill and grace, spinning and flipping through the air to fight some unseen foe.\n\nHis focus shifted, even with his eyes closed, Athan sensed someone watching him. He spun around to face whoever it was and leapt into the air, twisting his body to land behind the presence. He kicked out with his foot, bending Elpis' knee out from under him. With one swift, yet gentle swing of his arm, the monk backhanded the boy's chest and sent him to the ground with a thud. \n\nAthan opened his eyes and smile, \"Never wise to sneak up on someone.\"\n\nThe boy looked up at him in shock, \"That was amazing. I didn't make a sound, how did you know I was here.\"\n\n\"Just a feeling, besides if I was wrong it would have just looked like part of my routine,\" he busted out laughing before extending an arm to help the boy up. \"Care to try your luck with a sparring match?\"\n\n\"Against you, not in a million years, I wouldn't last one minute.\"\n\nAthanatos walked over to a stand and grabbed a cloth, \"I'll blindfold myself and won't attack, only defend myself.\" Before waiting for a reply, he walked into the center of the room and tied the blindfold around his face. He took a deep breath and waited with his back turned to Elpis.\n\nThe boy smiled and moved off to the side as quietly as he could. Athan entered a defensive stance and acted as if he was lost. Quickly turning from side to side waving his arms back and forth before his blindfolded face; Elpis believed Athan had lost his scent and rushed forward in attack.\n\nHis footsteps made soft, yet audible noise, just enough for Athan to spin out of his path and trip the boy with an out stretched leg. With a loud crash the boy landed hard onto the ground before rolling to his feet and swinging his arms.\n\nAthanatos opened his senses to the world around his and felt the air shift. He moved faster than the boy could think and blocked each attack before rolling backwards and reentering his defensive stance. A slight smirk on the skilled monk's lips went unnoticed by Elpis. The boy grunted in utter frustration and charged forth screaming out as he launched attack after attack. Only to be countered at every turn, Athan would move to block before Elpis even knew where his limbs were going.\n\n\"Calm yourself, your anger deceives you and announces your every move. Take a deep breath and think before you act, move one way only to cut short and strike from another.\" Athan lectured.\n\nThe boy paused for a moment to catch his breath and watched as the older monk demonstrated. Athan moved for an attack to the right and pulled back, spinning to a low kick. And he feigned again with a mid-strike turned into a throat jab with his other hand.\n\n\"Pay attention to your opponent's body, you can see the power behind each movement. Sense the air flow and react.\" He leaned forward and swung his open palm in front of the boy's face. His hair waved as he flinched back slightly.\n\n\"Balance your soul, until you can fight with the same calm sense as if you were resting under a tree watching the sun set on the horizon.\"\n\nTheir sparring match went on for another hour as the teacher introduced new tactics into the young mind before him. Elpis got close to landing a few blows, yet tasted dirt more often than not.\n\n*****\n\nIt had been a long and bloody battle in the tight quarters of the cavernous trail. There were many injuries but surprisingly no deaths, most of the injuries were from cuts along the cliff walls and falling rocks. The king used the untimely disadvantage of the tight space to his favor with just a few well-placed and held shields. The tribesmen truly acted like savages, flailing their weapons like untrained animals. Their shouting caused a few rock slides; with raised shields the Arcadians avoided major injuries besides a few concussions.\n\nLater the mountain caverns were wiped clean of living tribesmen and the Arcadians returned to their camp. A long and challenging campaign was coming to an end, yet it seemed odd, the shamans kept retreating and regrouping in stronger numbers than suddenly, like their endless supply of troops ran out, it ended at the mountain. Something didn't seem right to Athanatos. The king ignored his warnings and advice, allowing his men to celebrate the victory. Despite everything Athan found himself agreeing that a little down time could do them all some good, if only for a moment.\n\nAthan retired to his tent. Even though he agreed to it, he didn't want to be a part of it. Drinking wasn't an activity the monks partook in, wishing to keep their minds and bodies alert and clear. Moments after entering his tent Athan noticed a parchment out of place on his bed roll. At first glance it just looked like one of his scrolls that belonged in his shoulder strapped bag, until he reached for it. This wasn't an old scroll that has been read hundreds if not thousands of times, it was new. He picked it up, opened it and read the strange lettering that only monks would recognize.\n\n\"You have hereby been recalled from your duties of overseeing the young leader known to his people as a shining beacon of hope, for a mission of the utmost importance. You are to meet your former mentor at the location of your first training exorcise.\"\n\nThere were no marks or signatures as a secret group normally would leave. The cryptic message in an unknown language to the unskilled eyes was all that they needed. Athan let lose a deep sigh and headed out to speak with the king.\n\nAt first light the next day he was off to meet with his mentor with every intention of declining the mission, whatever it was, and returning to his duty. He had no idea that after that first step out of camp his life would never be the same. The very fabric of the world depended on it.\n\n*****\n\n\n\nMeanwhile, on a dusty road the knight and his horse approached a large hill; Sir Blake could hear the drums of war. Shouting and loud crashes filled his ears while the sky flashed. Sir Blake kicked heels into his steed. The animal bucked up on its hind legs and kicked out with its front before bolting forward. The knight gripped his sword's hilt, ready to join the battle.\n\nOnce he reached the top of the hill he abruptly stopped the charge. These weren't the drums of war after all, it was just a nightly drill, and the camp was awake and kicking with activities. Tower shield lines marched in formation all over, while archers and siege weapons practiced their aim. Orders were shouted out, chants and other sounds roared up the hill to the knight's ears.\n\nSir Blake would have looked like a silhouette painting to anyone that looked his way. A beautiful sunset cast an array of colors upon the horizon behind him. He had been heading west in search of the camp. Yet it stood wisely between large hills under the mountains. Sir Blake had to circle around to the smaller hill to get to them. \n\nSir Blake remained there for a while as he enjoyed watching the true legion at its best. Marching tower shields practiced forming the iconic turtle defense. Those in front kneeled with their shields side by side while the line behind them raised their own shields up over the front lines' heads.\n\nThe Horadric weren't the first to come up with the phalanx idea, but Sir Blake believed they were the ones that perfected it. The formation was great for surviving many things including arrows. The Spartans used to raise their shields over their heads and fought in the shade so to speak. Those brutes used to be the top dogs in the world, but times change.\n\nHe caught sight of the General's signature white furs. Slowly he urged his horse down the hill into camp as he placed his sword back into its sheath. The camp's guards began to close in on him before they recognized the knight and stepped aside with a salute.\n\n\"Strength and Honor,\" they both said with a slight bow. Sir Blake returned the gesture and continued on into the camp until he came up to a block of wood. He dismounted and tied the reins to secure his horse. A young stable boy came up a moment later with food and water for the animal.\n\nA marching group of tower shields slowly passed by as Sir Blake waited for a clear path to reach the general. Many of the men ignored the knight's presence, obviously eager to finish the march and enjoy some rest at their tents. A few, however, glanced at him with curious looks. He could only wonder what they were thinking about. Perhaps they were wondering who he was, or they recognized him and wondered why he was here. Or worse yet maybe they all heard of his failure and were judging him, thinking he wasn't fit to overlook the land he was charged to care for.\n\nAs they passed by Blake's mind returned to the task at hand, those insecure thoughts had no place within his mind and were quickly pushed away. He strode over to his General and offered a salute while admiring the man's custom armor.\n\nUnique white fur was sown into the plates of metal, his boots and leggings were made of the animal fur and leather with plates covering vital points. His chest plate had a design of two lions fighting, the wild cat from a land far to the south on the other side of the sea. His gauntlets were also made of the leather and its plate had the design of an animal's paw. Over each knuckle a small pointed blade extended that served two purposes, one as a deadly hand to hand weapon. And two, part of the design to resemble the paw's claws.\n\nBlake imagined the furs and designs were all from the same animal. The General's shoulder's consisted of layered plates over one another up to his neck where a plate on each shoulder extended up to protect his head and neck from side swipes. The man preferred those shoulder pads over a helmet as he liked the free movement and greater sight range in combat. Rather than be limited and have a disadvantage in battle.\n\nThe General heard the knight approaching with his mail armor loudly announcing his arrival for him. The General turned as he gave an order to a scout next to him. The scout quickly gave Sir Blake a nod as he hurried past to carry out his orders.\n\n\"Ah Sir Blake Barbatio to what do I owe the pleasure of your company my friend?\" Blake saluted him and cleared his throat. The General smiled as his thinning, grey hair and thick, grey beard waved with the wind.\n\n\"Titus Herminius Aquilinus, I wish I could say I was here with better tidings, however, I am in need of your help.\"\n\n\"Ask away my friend. But be quick about it, these men get cranky if I keep them out for too long.\"\n\n\"Yes sir, I have discovered a group of monks unlike any I've seen before, practicing a form of dark arts. One lone monk with glowing eyes managed to nearly wipe out my entire company of men,\" Not realizing he had stopped breathing he quickly took a deep breath of fresh cold air.\n\n\"Did you provoke this man?\n\nBlake shook his head in answer, \"The monk had come out of the shadows and attacked us with expert skills. I had wounded him before he ran off. I later tracked him down to a cave and captured him while he slept. He managed to bring the mountain down on top of us. Only a few of my men survived, yet he didn't escape. I locked him up and attempted to get answers and was witness to his wounds healing overnight. Once it was clear I wasn't going to get any answers, I strung him up upon the gallows when a stampede of horses came through the town and he escaped.\"\n\nTitus looked on with concern, noticing the scars and freshly healing wounds upon the knight's face.\n\n\"I wouldn't be standing here if the townsfolk didn't take me in and mended to my wounds.\"\n\n\"And you think this monk wasn't a loner?\" Titus asked.\n\n'No sir, I have reports of a monastery in that area. I believe he came from there.\"\n\n\"Interesting, glowing eyes can't be a good omen,\" He gave the order to cease the night's drill and for everyone to get some rest. \"Come with me and we'll discuss this further with my war council, we'll decide if this corrupt group of monks is a threat to holding these lands.\" Blake hoped they would be on the march soon, he feared the idea of facing an army of strong monks with glowing eyes.\n\n\"So you said this man's wounds healed before your eyes?\" Titus asked as they walked towards his tent, he gestured for someone to get his war council. A gesture he had done frequently over the years they're been at war.\n\n\"Yes. I had struck his face with my sword the first night before he ran off. By the time I caught up with him the next night the wound was healed. All wounds I gave him the second night healed right in front of me when I had him locked up.\"\n\n\"I wonder what God these groups of monks worship. It can't be good, I've never heard of any God that causes the eyes to glow. However, I have heard of plenty that aid in healing.\" He reached out and raised the flap to his tent, allowing his knight to enter first.\n\nBlake bowed slightly and entered.\n\nGeneral Titus offered Sir Blake some hot tea from his fire as they discussed the events the knight had been through. The old man wanted every detail, good or bad. Before night fall they would decide if these so-called monks posed any true threat. If they did the War Council would act accordingly.",
        "Before long, three big men walked into the tent. All of them had bushy black breads and black armor outlined in gold trimmings covered the rest of their bodies. If you didn't look closely at their faces you would have sworn they were identical triplets.\n\nHours passed as the five men sat around the fire, food was brought in at some point during their meeting. The decision had been made. The Monk Order could be a threat and the army would march. However the knight was not pleased that they wouldn't be marching to war.\n\nA small group would approach the building and find out if they were hostile. The main army would prepare just in case but the General didn't want to risk a war over the possibility that the one monk had indeed acted alone. He wasn't convinced with the knight's scouting reports. The monastery sounded like a peaceful place and the last thing Titus wanted was innocent blood on his hands. There wasn't any honor in it. The scouts thus far only reported seeing men dressed like the monk, no weapons, and no military training grounds.\n\nIf they turned out to be a peaceful Order with a rogue member they would convert the march into a man hunt. Rather than wipe out a peaceful group of people. Sir Blake Barbatio didn't seem pleased at all but in the end, eased back on his protests. He was more than convinced that the monks were corrupted but saw reason with his General.\n\nOne of the black-bearded men had been busy drawling out the area around the monk's monastery. His name was Cugath, the strongest of the three council members. Cugath laid the map out on a table and the group migrated over to it. \"It's time to come up with the battle plan in case things turn sour,\" he said.\n\nThe General nodded, \"Yes, best be prepared for the worst as we pray for the best.\"\n\nCugath cleared his throat, \"According to Sir Blake Barbatio's scouts there's a hill overlooking the valley here,\" he pointed on the map. \"Titus you'll oversee everything from here,\" he then pointed to his colleges, \"You two will take a group with you and break off from the main army at this crossroads. One of you will go in each direction and circle around to block the two back exits behind the monastery.\"\n\nHe was referring to two known paths. The main force would setup the blockade on the main road to the monastery; siege weapons would be set behind them.\n\nThe youngest of the three spoke up for the first time, \"The cavalry should be placed on the hill, if anyone flees send a few horses after them. In case there are other paths we don't know about.\"\n\n\"My thoughts exactly, good catch.\"\n\n\"That should work,\" Titus leaned in and rubbed his brow. He hesitated for a moment and studied Sir Blake's expression. \"Barbatio, you'll take a few men and lead the group to enter the monastery. Do take care and be polite. Imply that you're searching for a monk that attacked you and see how they react. Do not; I repeat do not start a fight.\"\n\nThe knight nodded and the council meeting ended, everyone headed for the tent's exit, \"Get some rest, we'll match before first light.\"\n\nA few hours later Sir Blake climbed on his horse and headed out of the camp. He was amazed at how quickly the army had packed up and began their march. A few paces ahead he saw Titus on his horse watching the march along with the Council member that drew the map, Cugath. He came up to them and exchanged nods. Before long he noticed the other two Council members on foot marching with the rest of the army.\n\n\"Shall we,\" General Titus asked before steering his horse and set off to reach the head end of the march, the knight and Council member followed close by.\n\n*****\n\nIt was a long and perilous journey in the scorching desert sun, or at least it felt like it to Athanatos. In reality he had only been traveling for two days. The monk attempted to conserve his water supply, even though his body demanded more. The desert played tricks on the human mind, showing things in the distance that weren't really there, just mirages of false hope.\n\nAthan's mind wanted to see his mentor's secret training grounds, which was little more than a shack--- the true facility was underground--- And because of this desire Athan saw the building in every direction he looked. In the open desert one often lost themselves, either physically or mentally.\n\nLuck was on his side for he knew the way, over the dune and around the bend. Athan chuckled; the sun was getting to him. The true path was by following the stars at night, yet that was a double edged blade in the desert, since there was no shelter during the day. In a few hours the sun would begin to set and Athan would stop to rest. When the breeze would cool down slightly before the stars could be seen.\n\nThe bright stars came out to play and the climate shifted from extreme heat to bitter cold. Athan rejoiced and double timed it at night, with a clear heading and no scorching heat threatening to send him tumbling into insanity.\n\nA few hours later he started to recognize the dun valley, as far as recognizing a dune valley on could, he was getting close. Another few hours--- if he was lucky before the sun rose again--- he would be there. Athan just hoped he wasn't too late; he planned on turning down the mission and returning to King Anders. He was torn between his duty and... well his duty.\n\nThere had to be someone else his mentor could take on this mission. Athan had bonded with and liked Anders as a friend; he would never be able to live with himself if something happened while he was away. And after the last conflict with the Syracuse he had a bad feeling.\n\nTheir numbers appeared endless battle after battle until suddenly as if by distraction the Arcadians were lead to a cavern system. A cavern system that appeared to be a trap yet they were met with little to no resistance.\n\nIt was as if...\n\nSand gave way under him and Athan landed face first into the dune only to slide down, somersaulting, more like uncontrolled rolling to an abrupt and painful halt. Laughter carried by the morning breeze met his ringing ears.\n\n\"Still have much to learn my young student,\" Athan's mentor shouted from a distance. Athanatos glared angrily at the man until he realized his mentor was just joking around. His mentor Yshomatsu had medium length blonde hair, a little darker than Athan's. They both had hazel, slightly green eyes. And as everything with Athan screamed young, rash and impulsive his mentor was the complete opposite. A big history buff, Yshomatsu carried a carefree attitude that unless you looked him in the eyes you'd never imagine the great wisdom he beheld.\n\nAthan picked himself up and dusted himself off before he noticed the taste in his mouth. A few shits later and the clumps of sand were saved from being digested, the thought made him shiver in disgust. He gathered his wits and made his way over to his mentor and they exchanged greetings while shaking hands.\n\nAthanatos stirred in his sleep, his dream replayed a time before the two monks changed their names. A simple fact his brain couldn't remember and it almost was enough to wake him up... almost.\n\nThey discussed current events as they made their way into Yshomatsu's so called hideout. Apparently the Monk Order had made a discovery that would change the world. A way for them to remain hidden within civilizations, they called it a Dream state or something, where their spirits could communicate while their bodies slept. It would bring a new meaning to the monk's quest to keep the balance of good and evil.\n\nYshomatsu explained the Order would fade from the public eyes and allow the rest of the world to do whatever they pleased. Monks would secretly be placed within ranks to keep an eye on things but wouldn't intervene. The Monk Order only planned on acting when true evil presented itself. And it was for that reason that Athan was recalled from his assignment. Yshomatsu explained a cult that worshiped some form of ancient monsters they called fallen ones.\n\nA rough translation of the cult's words but the monk's elder believed they were demons. Old stores turned myths from a long forgotten past when humans didn't rule the world but were enslaved to the beasts. Yshomatsu went on to explain how important this mission was to find and eliminate the cultists, before they possibly could bring back the things nightmares were made from.\n\nAfter a brief argument Athan caved and agreed to the mission, yet it left a foul taste in his mouth, and not for the first time this morning.\n\nOnce Athan was onboard he wondered why someone closer hadn't been called clearly the two, now three days for him to get here and prepare were now wasted. His mentor quickly stopped his student from going down that line of thought. For the two days it took Athan to arrive just so happened to be the exact amount of time he had needed to research leads and find a place to start looking. And the third they both used to mentally prepare for the things they might see.\n\nAthan woke suddenly with a headache and a cold sweat. He remembered everything vividly, all but one detail. His old name, a minor detail that shouldn't have bothered him, but it did. The life he had before the change was like a grain of and in the vast desert compared to his life after the change. Yet he cherished those memories of his childhood and the innocent and eager student, life was good back then, not a worry or care in the world. Each moment was a new experience.\n\nHe sat up and wiped the sweat from his brow, reminded of the bloody sweat from his battle alongside King Anders. Athan never found out what really happened but shortly after his departure the king had been slain in combat. The Arcadians fought over who'd be the next king and later split into many factions. War and peace spread throughout the land as the politics created and destroyed allegiances between parties.\n\nIt didn't help that the monk order that had been a guide to all leaders in the past had suddenly vanished into isolation. After they changed their methods overnight, the discovery of the Dream State altered everything.\n\nAthan attempted his morning routine exorcise but struggled to calm his spirit, his center. Normally he didn't have a problem focusing, but today his mind was wondering all over. These dreams, these memories were troubling him; he had a bad feeling, about his mentor, about everything really.\n\nElpis didn't appear this morning as he had the past few days. Athan enjoyed the young man's company; his eagerness to learn reminded Athan of himself those many years ago.\n\nThe monk ducked into a roll, coming up on his feet to a forward flip only to bounce off the wall into a backflip to land facing the wall. He abruptly stopped the rest of his routine forgotten. \n\nHis mind wondered to the hunt, the searching of many leads. Four days had past; the two monks had crossed off all leads to the cultists but one. The very last lead was a far shot.\n\nYshomatsu had gone over the myths and jotted down a location he believed was described in the story. A cave in the far east mountains, they had investigated leads in order of likelihood and location. Mainly location to save time, the cave was a good six days journey from the underground training grounds Yshomatsu lived in. However now they were only two days away.\n\nAthan Remembered hoping the lead was another dead end and that the cultists were just a rumor they would prove false.\n\nHe decided to sit down and crossed his legs, placing his hands upon his knees palms facing towards the ceiling. Athan closed his eyes and took deep breaths, releasing them slowly in attempt to calm his nerves. Eventually he slowed his heart rate enough to enter a mediation trance. He allowed the memory that has been haunting him to continue. Even if he was disturbed it would take a while to return his mind to his body.\n\nThe monks traveled east, the mountains in the distance grew with each step they took. The giant mountains were beautiful, untouched lands with bright colors as nature thrived here. Snow covered the peaks high above anything man had created. So high in fact clouds often blocked the view of their peaks and created a scene that looked heavenly. The land was equally dangerous as they were beautiful, which was the main reason no one traveled far into them. Mountains rose in the east as far as the eye could see, anyone that attempted to explore further east was never heard from again.\n\nThe same thing could be said from every direction out of the known world, each for different reasons. These mountains in the east were so wild the creatures here grew in both size and appetite; humans were far from the top of the food chain. It would take an army to safely travel and yet no path large enough for an army. The costs simply outweighed the desire to explore new lands.\n\nThe deserts to the west was simply a no man's land, expanding for who knew how far. Hardly any life to sustain a traveler, no water or rain to quench ones thirsts. It was the main reason Yshomatsu placed his training center within the desert, no unwanted company. The shack leading to his underground base was more to avoid the desert conditions than anything else; it was just saver to be underneath the harsh winds and sand.\n\nThe frozen lands to the north were opposite of the desert but in concept exactly the same, barren waste lands with little to no life.\n\nTo the south tropic jungles, the Horadric Legion calls home within its wild atmosphere. Further south are vast oceans and scattered islands. Many people live along the coast and a few of the islands, a place where pirates and little law exist. Many have tried to chart the vast waters and have yet there never has been an end discovered. The oceans seem to go on forever.\n\nBetween everything were forests, grass lands, hills, valleys and rivers/lakes. The Arcadians called these lands home before King Anders fell. One of Anders closest friends would later rise to rule the Horadric Legion, his goal to unite the known world in honor of Ander's memory. He had a lot of work to do, with many factions rising, all with desire for power. \n\nBut that is a story for a later time.\n\nAthan's mind never wondered back then, always remained focused on the task at hand. Yshomatsu discussed the stories he read and how according to the books there were as many different demons as there were gods, maybe even more. His mentor had quite the impressive library, perhaps even greater than at the grand monastery. Yshomatsu was a collector of knowledge and always in search for more. He had so many books in fact he often forgot what he had, ever with the clever card catalog he developed.\n\nYshomatsu talked about how amazed he was when he discovered the demonic books he had in his possession. Even now after reading the passages he believed them to be nothing more than stories. Stories told to scare children or keep people from committing evil acts.\n\nThey made their way into the desolate mountains, praying to the gods not to get lose, but most of all they prayed not to find anything. Over the next few days their prayers went unanswered as they found a freshly cut path leading further up. For a land seldom traveled there shouldn't have been a path like this. There were no signs of wild life, not even a single bird singing in the nearby trees.\n\nThe two quickened their pace, moving as if one being, marching to an unheard drum. Their movements gave a new meaning to the old saying, silent but deadly. With each stop the monks speed increased as if they were floating among the clouds. Then faster than any normal person could see Yshomatsu gave a hand signal and the two vanished behind some shrubbery.\n\nAhead two strange looking pale men in black robes scurried about before entering a dark cave like two blind men with no need of light to guide them.\n\nYshomatsu spared a glance to his student, \"Looks like we found them.\"\n\n\"They could be faking it,\" Athan squeaked back as a hopeful joke, they both smirked and inched closer to the cave, \"Now or never,\" Yshomatsu nodded his agreement and they snuck as quietly as two mice in a field into the dark.\n\nThe cave tunnel snaked around like a giant serpent; the monks had to feel their way forward to the best of their abilities, hoping not to alert the cultists. Before long they could see flickers of light at the end of the tunnel, and if they were lucky it would just be a couple of hermits. Neither one wanted to see what they feared was around the bend.\n\nYshomatsu braced himself against the cavern wall and inched closer to the edge, while Athan did the same on the other side of the light source. Athan's mentor peaked around and gave a wave. Athan like the wind gracefully glided into the opposite shadow back in cover.\n\nWhen they both gave a detailed peak around their respective corners their eyes went wide in shock. Candles were everywhere scattered around a central bonfire that wasn't lit. On the ground there was a white drawling of some short of pentagram design, and around that, nine pale men in black robes; all on their knees chanting in some foreign language. The worst part of it all was that on top of all that--- latterly hanging from chains attached to the cavern ceiling--- was a woman, naked as the day she was born. Her long brown hair hung down covering her face and chest.\n\nThe monks stared at her in awe, like they'd never seen a naked woman before, Athan's jaw hung open, any lower and it would hit the ground. Yshomatsu recognized the scene from one of the demonic books he did research in. The cultists had everything setup for a summoning of some kind, perhaps a deal with a demon. He didn't recognize the pentagram so it couldn't be some plain summoning. With the hung woman, he suspected it was an offering, a sacrifice, maybe for power or some other demonic gift. He honestly didn't believe the sight before his eyes, he as well as his student Athan hoped they wouldn't find out.\n\nBelieve in it or not, it didn't matter the monks couldn't sit by idly and let these pale men harm the chained woman. It was time to act.\n\n\n\n*****\n\nBack at the monastery Athanatos finished with his morning practice routine, as another monk entered the room and bowed.\n\n\"He wishes to speak with you sir.\"\n\n\"Alright I'll be right there,\" Athan quickly went to his room to change. Once he was done he headed to see the Elder. Athan walked down an old hallway, cobwebs littered the ceiling, until he reached a large door. He knocked twice and waited.\n\nNormally Athan would have crossed his arms into each other's sleeves and patiently waited, but today the air was thick and everyone was on edge. There still was no word from many of the Order and Athan assumed he was summoned to discuss the findings of his mentor's mission, which was to look into the missing monks while Athan had been ordered to resort to the books here in the library.\n\nAthan paced back and forth, his relaxed mind-set from his morning exorcise quickly vanished. His mind now wandered, he couldn't stop the feeling like something horrible had happened. A few minutes went by before the door finally squeaked open and Athan entered, brushing past the monk that opened it.\n\nOn the other end of the room the Elder Zoticus stood, he too was pacing back and forth with a worried expression upon his face. Something was definitely not right.\n\n\"Have you heard from Yshomatsu, Elder,\" Athan asked.\n\n\"No, that is the cause of my discomfort, not only have we lost contact with your past mentor but normal villagers are now going missing. I don't understand what is going on. Have you found any answers in the library?\"\n\n\"I have not. I'm afraid there's no record of anything of this magnitude ever happening in the Order before. The nights are getting longer and the air is thick with something I can't explain. Whatever is happening it can't be good,\" Athan replied.\n",
        "\"I need you to go find Yshomatsu and find out what has happened to him and please hurry.\"\n\n\"Right away sir,\" And with that Athan bowed, turned, and quickly returned to his room to pack. The journey to his mentor's hideout wasn't too far but it wasn't an easy trip either. He didn't want to consider that something horrible had happened to his mentor, but the idea kept creeping into the crevice of his mind. Perhaps something ancient had indeed woken from its slumber and was now feasting on mortals around the local towns and villages. Athan was lost in thought for a moment until he realized that he had stopped packing his things. He reached over and placed his rolled up throw bed on top of his pack and tied it up.\n\n*****\n\nBelieve in it or not, it didn't matter the monks couldn't sit by idly and let these pale men harm the chained woman. It was time to act.\n\nAnd act they did.\n\nAs if one the two monks sprang from cover of darkness, closing in on the nearest cultist. With a swift punch the pale man went down, creating an overly loud bang upon the ground. The monks braced for a counter attack, and were stunned when no one reacted. Not even the chained woman was aware of their presence. Athan glanced over to his mentor, it all happened so fast. Time seemed to freeze from the moment that cultist hit the ground.\n\nSimultaneously all the candles in the room flared up. The room got so bright they had to cover their eyes. Athan looked down as he covered his face with his arm. And that's when he noticed it, these cultists were indeed blind. Where their eyes should have been there were scars, as if their eyes had been violently torn out. That explained earlier when the two monks had watched a few of the cultists enter the cave with no light.\n\nThe blinding light continued to brighten; they heard movement all around them. Yshomatsu realized the cultists were finally reacting and screamed out to Athan, \"They're attacking, defend yourself.\" He tried to look and quickly regretted the act, blinding light, brighter than the monk ever thought it could be burned his eyes. He screamed out again but this time in pure agony. He collapsed to his knees, a wave of nausea washed over him and the content of his stomach ended up on the floor.\n\nAthan on the other hand kept his eyes tightly shut, reached out with his senses and could feel the vibrations caused by the cultist's movements. He expected them to fight as one being fueled by their religious beliefs, considering they were blind and everything. \n\nHowever they came at him wildly, as a rock slide would fall upon the mountain side. But come to think of it maybe they were acting as one, and he was just blocking their attacks. It wasn't like he could open his eyes to tell the difference. Instead he focused on keeping him calm and allowing his body to react.\n\nPale eyeless cultists swarmed around Athanatos, limbs flailing around. Athan's body reacted instantaneous by feeling the air move around him, effortlessly blocking or dodging their attacks. Blow after blow were blocked allowing Yshomatsu enough time to recover.\n\nYsh pulled at this robe's sleeve, tearing it from its seam; quickly he wrapped it around his eyes--- he wasn't going to allow another mishap--- and rushed into the fight. Like a drunken sailor he stumbled past everyone. If Athan would have been able to see it he would have burst out laughing. However all he felt was a gush of air go past him.\n\n\"Mentor.\"\n\nYshomatsu abruptly stopped and spun around, having heard his student speak he learned which of the many presences were friendly. He returned a similar phrase and the two fought as one being. Whatever guided the blind cultists proved to be lacking and one by one they fell.\n\nAthan could feel his body weaken, he was human after all. Three cultists were left standing but to the monk's senses it felt like nine and he was getting tired. His reaction time slowed just enough to even the odds.\n\nYshomatsu could feel his young friend and student's movement's slowdown, as if they were connected. He couldn't however feel his emotions or know what was happening. The monks had practiced and mastered fighting blind folded, yet even the greatest among them could only sense another's presence and movements, and nothing more. Yshomatsu considered Athan as a young boy when in reality they were only a few years apart in age. The difference in position had been a result of Yshomatsu growing up at the monastery reading books from the library, whereas Athan lived a less sheltered childhood.\n\nThe Monk Order had found Yshomatsu early and embraced him, allowing his slightly obsessed quest for knowledge to flourish. Athan was found later as an elderly monk walked an empty city street late at night. A group of questionable characters cut off his peaceful walk, Athan appeared out of thin air just as things turned violent. The young orphan saved the elderly monk's life, fighting five to one. In turn the older man took Athan into the monastery, badly wounded and in need of care. From that point on Athan remained and trained his body in the monk's teachings.\n\nA few years later Athan was accepted fully into their ranks and began learning under Yshomatsu. The two bonded over years of exciting missions, learning much from each other. It was for this reason that Ysh now worried about his friend and stepped up his game. Only fair after all, that was exactly what Athan had done when he was on his knees unloading the contents of his gut to the cavern floor.\n\nHis longer, darker hair flowed behind him as he slid in between his pupil and the remaining cultists. Athan felt it and took a deep breath; a moment to recover was all he needed. He kept telling himself as he leaned over feeling light headed. The entire time his eyes had been tightly--- painfully--- shut, yet something tugged at his inner being, urging him to look into the center of the room.\n\nA fury of fists kept the cultists attention, yet one skilled monk various three strangely guided blind men took all the monks energy to withstand. He quickly understood what he had felt from his young friend's presence, fatigue. The monk had taken on all the cultists alone at the beginning. A new wave of something, pride, washed over Yshomatsu as he realized he owed it to his great student to return the favor. He was beyond proud of the young monk.\n\nOnly a few moments had gone by as their past and present flashed behind closed eye lids. The cultists pressed on and he was forced to let the thoughts go as he focused his mind on the task at hand. He blocked and countered blows left and right, expelling more energy than Athan did in his defensive moves.\n\nYshomatsu was gifted with the pleasure of smashing a cultist's nose with the palm of his hand. However the feeling was short lived as he felt a sharp pain slice through his side. One of them had turned to dirty fighting in a desperate last ditch effort by using a blade. The monk grasped at the wound, applying pressure as he dodged the following attacks.\n\nHe could feel the presence of the first cultist, blood gushing from his face. He toppled to the ground as Ysh jabbed at this throat, feeling the windpipe among other things snap. The victory was short lived as the monk's side step was too slow and the blade cut through his shoulder like butter. Followed closely by a series of quick shallow swings, the wise darker haired monk screamed out his frustrations. Pain threatened to lose Yshomatsu over the edge and onto the ground.\n\nHis body wanted to collapse into the fetal position but he held on with an iron will that felt like a fragile string. The cultist swung at him again, only this time Yshomatsu spun, twisting his aching bloody arms in between the cultist's. With the momentum he used the pale man's arm as an extension of his own body. The last cultist, whose attacks had easily been blocked, ran right into the swinging blade, his lifeless body splattered upon the ground in two places.\n\nThe monk finished the act by snapping the gripped arm, the cultist grunted his frustration, Ysh imagined an evil glare if the cultist had eyes to glare with. The move drained him of his last resolve and he collapsed to his knees. The cultist wiggled free from the monk's grasp, hugging his broken arm close to his body. Ysh sat upon his knees gasping for air, his mind wondered to all the good memories he had in his life. Mostly those while training Athan, although in truth the young man did just as much teaching as he had.\n\nHis fondest, no proudest memory was of the time Athan had been given his first solo mission, the look upon his face would be cherished forever, even in death. Yshomatsu sat there in a daze for a while, given the cultist enough time to recover. While he still had his broken arm against his chest the other arm retrieved his weapon, a plain blade with a wooden hilt. Slowly the cultist made his way to the defeated monk, an evil snarl upon his lips as an unseen force guided the blind man.\n\nThe candles around the man went out, yet the ones behind the hanging woman remained bright, created a halo effect around the woman no one could see. The pentagram drawn upon the ground began to glow.\n\nThe cultist reached Yshomatsu and let out a sinister hiss as he raised the blade above his head, quickly bringing it down. The defeated monk tilted his head at the sound and instantly knew what was going to happen.\n\nAn unknown force entered both tired and exhausted monks; they gasped and simultaneously took deep intakes of air. It felt like their bodies had been stuck by an electric bolt of power. Yshomatsu moved faster than ever, circling around behind the pale blind man. With all he had left the monk reached up and snapped the cultist's neck and tossed him to the side. The burst of energy quickly faded and Ysh felt the full force of his injuries assault his nerves, he collapsed to the ground and past out. The battle had been won and his student was safe or at least that's what he thought before darkness over whelmed him.\n\nWhen the power forced itself upon the monks Athan had been struggling with an urge to open his eyes, something within him tugged at his will. He had been winning the tug of war but was overpowered with the rush of energy. His eyes shot open as the wave hit him and witnessed his mentor defeat the last cultist before falling to the group, out cold. But that wasn't what caught his attention; the blinding light was replaced with a sight he couldn't believe.\n\nAthan's mouth hung open yet his dream turned to black. His mind reeled but couldn't continue the memory, it just wasn't there, replaced by darkness. As if Athan had blacked out at that moment in time. He sprang up right, wide awake and covered in a cold sweat. A chill ran up his spin and his body shook from it. His dream had been vivid as if it happened yesterday.\n\nWhat troubled him was the black out, because he remembered recovering at the monastery with his mentor. How much time had passed between memories, what had happened in there after he opened his eyes, or seemingly more important the chained, hanging woman, what had become of her? Question assaulted his mind with no answers in sight.\n\nAfter a while Athan gave up trying to remember, an unsettling feeling remained in his gut, but he ignored it and decided to carry out his day. Later on that night when it was time to sleep Athan focused on the memory. The part he could remember of the two of them recovering and drifted off to relive it.\n\nAthan woke with a start, his vision blurry. In the bed next to him, Yshomatsu his mentor slept strung up with many bandages. The images he imagined from the fight were fresh on his mind, cultists swarming them and their best efforts to defend themselves. He lost his concentration when he heard a grown next to him. His mentor and good friend was waking up and it warmed his heart to see it.\n\nOver the next two days the monks rested, their brothers in the Order attended to their every need. Warm soup and bread were served three times a day, different spices used randomly to keep their taste buds guessing. Something different was in the air, something about them. They didn't speak about it but subtle looks over the two days confirmed they both were thinking the same thing.\n\nYshomatsu had wounds that should have killed him and Athan had bruises but nothing too damaging. The thing that troubled Athan the most was, why he was in need of rest, sure the ordeal tired him but bruises shouldn't have kept him bed ridden for two days. Something happened after he opened his eyes that drained his body's strength. Never the less he shoved that uneasy feeling from his head, all that mattered was the two of them were safe and back at the monastery.\n\nThe thing that surprised everyone within the Order of monks was how quickly they were healing. Both were on the edge of death when they were found. Yshomatsu by physical means, Athan by unknown yet one of them had reached out within the Dream State and called for help. No one knew which one.\n\nIt was most noticeable with Yshomatsu, his open wounds were closing. A process that normally took months and it was happening within a week.\n\nBrothers in the Order brought dinner in that night on the second day and the two monks devoured it while discussing how good it felt to be alive. One of them had said a joke and they both laughed. Yshomatsu laughed so hard it hurt and he accidently knocked over his drink. Athan reacted before anyone in the room realized what had happened, grabbing the cup in midair. He had moved faster than even he could see, everyone gasped, surprised by what happened. And the truth be told they both felt more alive than ever before.\n\nWhatever had happened that night in the mountains had filled their lives with energy and power they had never imagined possible. With new found purpose the two discussed their need to test themselves once Yshomatsu was healed and able. And test themselves was an understatement.\n\nThe mentor's wounds--- the ones he should have died from--- took another week to fully heal. The moment they realized it they were out in the grass fields sparring with each other, beginning with simple sticks. Amazed at their own reflexes, the two didn't even come close to hitting each other. Before long they had an audience, the entire monastery had come out one by one to watch them. The last to arrive and possibly the oldest amongst them was the current Order's Elder, or their leader.\n\nAn hour passed before the Elder rose from his seated position, with the aid of those around him. He cleared his throat and spoke in that beyond wise voice, the kind everyone would stop any activity for the chance to hear it.\n\n\"You two have bonded together and I am proud to call you my students, however great it is to see you spar--- and believe me when I say it has a grace to it like wild animals working together on the hunt--- I believe everyone here would like to see a true challenge,\" There were many cheers, the elder spoke showing great respect and spoke the truth, everyone present did want to see more.\n\n\"Anyone willing and able to fight step forward,\" The Order trained in many aspects, fighting was just one of them. And even though they learned how to fight, it was more about peace than it was about fighting. Their martial arts were just that, art, a form of it anyways. However not everyone in the Order had training in martial arts, some were merely cooks, gardeners, book keepers or farmers. Basically the point is a lot of monks stepped forward but not all.\n\n\"Those of you that took a step starting with you,\" The elder pointed to a monk closest to him. \"Every other man step forward again.\" \n\nIt wasn't a difficult task but it sure did take a while.\n\n\"Now those of you that stepped forward twice...\" He paused for effect.\n\n\"Attack,\" He yelled out while chuckling. Forty monks charged at Yshomatsu and Athan, who honestly didn't have a clue what to expect. Even with their new found gifts the two looked at each other worried but they still smiled, it was just a big sparring match, a game if you would. Now remember forty monks charged into attack, there was still forty more standing by that had stepped forward, waiting for orders to attack.\n\nYshomatsu and Athanatos braced back to back, prepared to have fun and truly put their new so called skills to the test. What happened next was glorious, as the old saying goes.\n\nEverybody was Kung-Fu fighting!\n\n\n\n*****\n\nIn a dark underground room candle light flickered, as if fighting against the all-consuming darkness that wanted to swallow the room whole. At the center of the room a summoning circle was fading with time, having not been used in a while.\n\nWithin that circle lay a bunch of cushions that gave comfort to two beings atop them. A man with long golden hair and an unkempt beard spread across the cushions, a beautiful woman sat upon him, slowly riding him.\n\nBright orange orbs stared down at the man's glowing green eyes, both smiling at each other. The room stunk of sex, the couple had been going at it for longer than they could remember. They were held together by some magic that prevented harm from befalling them. That same magic prevented them from having any rational thought beyond their next orgasm.\n\nFor what seemed like ages the two continued to pound into each other, brief blackouts were the only break they could find, yet it couldn't stop the one that remained awake.\n\nAnytime one of them gained any insight on their situation a presence would cloud their mind, filling their every thought of a red skinned demon. The presence invoked on them an over whelming wave of lust that drove them on in pleasant treatment for countless days.\n\nThe man for instance was having one of these moments. It was as if he was waking up from a dream, a dream he wasn't sure he really wanted to wake from. His body ached, every joint was sore beyond belief... yet he felt so good, the woman on top of him was giving him such pleasure.\n\nBree, he remembered her now. An innocent barmaid from a inn he stayed at who knew how long ago. Yet she was different, her eyes for one thing were large, bright and orange. Her open mouthed smile revealed pearl white and slightly pointed teeth. Her hair was still long and brunette but something twitched atop her head. What... are those two fluffy ears? What the hell was going on?\n\nIn a panic he grabbed her hips with intent to throw her off of him. Her arms were waving in the air as she twisted her hips like an exotic dancer. He couldn't help but glance at her bouncing tits, everything he saw was memorizing. It was like a dance meant to reduce his willpower to ashes.\n\nIt all happened so suddenly, he grabbed her hips and just before he threw her to the side something wrapped around his wrists. He had been too distracted admiring her body to realize what they were. By the time he looked down they had tightened, two fluffy tails, one around each of his wrists. Another tail waved hypnotically behind her. \n\nThen it all came rushing back to him. Missing monks, he was tasked to find them and fell into a trap. A trap planned out by a cunning ancient being he didn't realize at the time was a succubus. Events played out and Bree had helped her gain her freedom. \n\nHe looked around the room, candle light flickered around them but the rest of the room was too dark to notice anything.\n\nHer tails tightened their grip and he found himself in turn tightly gripping her hips, urging her on. His brief moment of clarity was threatening to be thrown to the wind, the mind between his legs quickly taking over.\n\nYshomatsu could even imagine seeing the succubus in his mind, looking as sexy as ever. The monk began to enjoy himself, flexing his lower body as his hands brought her down hard. His glowing eyes glazed over as he gave in to the coming orgasm.\n\nSpeaking of orgasms Bree's body tingled in a series of small rabid explosions as a connection she didn't even know she had opened in her mind's eye. Meridiana was contacting her for the first time since she departed the area.",
        "The succubus appeared excited, yet worried. Without any words being spoken Bree knew what she wanted. Meridiana was ordering her to move Yshomatsu to a new unknown location. Events had been set in motion that would have people searching for him, people that knew their current location existed.\n\nBree could only purr in response as she grinded into him faster, her third tail teased at his balls. The couple looked into each other's eyes with such affection you would think they had been together for years. For the first time since they were stuck in this room together they screamed out at the exact same time, cumming together. \n\nHot liquid filled her womb to be quickly absorbed into her being. Power flashed before her eyes and her body shook uncontrollably. The monk wrapped her up in his arms, worry and concern written all over his face. Yshomatsu might have fallen back into that never ending need to copulate, yet this time had been different. Consumed as usual by the image of the succubus but for the first time he didn't forget who he was physically with.\n\nBut before he could bring voice to his concerns her body stopped shaking.\n\nA fourth tail emerged suddenly to join her previous three.\n\nThe four tails weaved through the air with minds of their own. Bree squealed with delight as she regained control of herself. All of a sudden she had complete control of herself, not like the past few times where she could think for a bit before Meridiana once again took over.\n\nThis time she could remember everything she had learned from that old book. A quick mumbled spell and she would never again be under the influence of that demon spawn. Long overdue, she would have the man of her dreams all to herself.\n\n\"Time to hind you from the mistress and keep you all to myself lover boy.\"\n\nHe looked confused but deep down it felt right, he felt like he belonged with her. He remembered who she was and how he got here but he couldn't comprehend what it all meant. He left out a comforting sigh and leaned back into the cushions to relax and let sleep overtake him.\n\nHis mind was still cloudy and it would take a while to sever the hold the succubus had on him. Bree knew she had a lot of work to do, but with her mind clear it could be done. The book was spot on about the Kitsune and their tails. Now with four tails she could feel the power she could command at her fingertips.\n\nIt wasn't enough power to take on the succubus but it was noticeable enough that she knew with each tail her power would grow. She had just enough to break free and hide, possible enough to start freeing Yshomatsu's mind. But she wasn't sure. She got up with a pleasant moan as his member slide from her.\n\n\"Sleep now my love while I figure things out,\" she bent down and caressed his face. Unbeknownst to her the months Meridiana had been unleashed upon the world much had changed. A growing darkness was taking ever the world and no one out there knew what was behind it.\n\n\n\n*****\n\nSir Blake dismounted his horse as those around him set up the blockade. Rows upon rows of Tower Shields lined the front with arches behind them. The siege weapons were unloaded from the wagons, being built, aimed at the monastery.\n\nOff to the side a group of six prepared their gear. They were the lucky few chosen to enter the building with Sir Blake. They looked like they've seen enough war to be of use. Blake wasn't impressed, but he'd seen worse, they would service. He took a moment to check his own gear before movement on the horizon caught his attention.\n\nOne of the groups that split from the main army had arrived on the other side of the valley. Sir Blake looked up to the hill beside the main blockade. General Titus nodded and a flag-man standing next to him waved his flag in the air.\n\n\"It's time,\" Blake said to the six, standing ready to follow him. In a moment they were walking towards the monastery. Sir Blake was eager to get this show on the road, so many unanswered questions... One of the six men hurried to the knight's side and interrupted his thoughts. Blake remembered him from the war, Plymouth if memory served.\n\n\"Once we get in there the six of us will form up around you, I know we aren't expecting a fight but just in case.\" The war veteran said, little did he know that the knight he was following was expecting a fight. He wanted answers but most of all wanted to know about the raw power the lone monk had possessed.\n\nBefore he realized it they were at the giant monastery doors. With so much on his mind the knight wasn't ready to enter, but before the six following him could tell he was hesitating he reached out and knocked.\n\nThe door opened at once as if someone was expecting them, either that or someone just happened to be standing right there when he knocked. There stood a man who looked like the stereotypical monk, brown robes, and his face was clean-shaven. The top of his head was bald, the rest remained, yet was kept trimmed. The man stood gazing at the seven men with confusion.\n\n\"May I help you my lord,\" He asked. The knight smiled coyly before pushing past the man and looking around the main corridor. When it was clear no one was waiting to attack he looked back at the monk in disappointment. For no one was within the room besides them.\n\n\"As the Horadric Knight left in charge of these lands I demand to speak to the person you look up to.\" It was clear the six men that came with Sir Blake were panicking; this wasn't how any of them had expected it to go. The monk bowed and expressed for the men to stay put while he got the Order's Elder.\n\nSir Blake took a moment to look around, even though they were only in the greeting space between doors. The building was indeed ancient but well maintained; the room was made of a type of wood the knight didn't recognize. He was surprised it wasn't decaying for how old it looked.\n\n\"One of you should stand outside, leave this door open, if anything happens give the signal to the army,\" Sir Blake addressed the men, before one of them volunteered and stepped outside. The remaining men wondered how the knight got so cruel over the years. They vaguely remembered him from the war that conquered these lands. He was a good leader back then, everyone looked up to him. Now however he just appeared to shout out orders like he believed he was above everyone else.\n\nLittle did they know how much he had been through these past few months, but they would see soon enough. They waited for what seemed like an eternity. Their gear got heavier with each passing moment they were left to their thoughts. Sir Blake paced back and forth, which only added to their anxiety.\n\n\"Apologies my lord but I have to ask, are you picking a fight?\" Plymouth's unease showed clearly on his face. And he wasn't ready for the reaction he got. The knight's face flashed with anger and Plymouth flinched as he could have sworn it looked like the man was going to hit him.\n\nJust before Sir Blake struck out in anger he stopped himself, \"I suppose I wasn't thinking, clearly I let my emotions get the better of me. I have been so focused on making the man responsible for my men's deaths pay for his crimes.\"\n\nPlymouth looked at him in new light, understanding that not only has the knight changed but he had to deal with the loss of so many. Even the strongest of men change when dealing with so much death.\n\n\"I realize now that I've gone about this task all wrong. I came here wanting to cut down everyone for the actions of one man. But I'm not a murderer, I'm here seeking justice. I'm sorry for how I've acted, it wasn't my intension.\" 'Way to have a break-down,' He spoke quietly to himself. But in truth it was Plymouth's reaction that made him realize what he was doing. Men under his command used to look up to him with the out most respect. Utter terror on Plymouth's face, a look Sir Blake never wanted to see from his own men, his enemies sure, but never his allies.\n\nThe inner door opened by an elderly man who had the look of great wisdom upon him. Long whitish grey hair came to rest on his shoulders, an equally long grey beard extended to his chest. It alone still had small signs of black among the grey. Unlike the earlier monk this man seemed to have been expecting them, and he wasted no time in announcing it.\n\n\"Gentlemen welcome, now normally I'd invite you in and offer food and drink. However seeing as I looked out my study window and noticed an army at out gates; I have to ask... What is your business here?\"\n\n\"We seek to bring justice to a man we believe to be from your Order of Monks. A moment ago I would have pulled out my sword and demanded his head. However my men here have brought me back to my senses and I'm giving you a chance to prove innocent in his crimes,\" Sir Blake responded attempting to calm himself as he spoke.\n\n\"I'm glad we can be civil, what crimes are you speaking of, exactly what did this man do, and if you wouldn't mind describing him. I'm not aware of anyone in my Order causing any trouble.\" Sir Blake gave his speech and described the monk in question. \"Ah, yes we have someone here fitting that description, however he hasn't left these walls in almost a year. I can send for him if you'd like.\"\n\n\"Yes I would like...\" Blake stated as he gave the old man a cold stare, watching closely as the man walked out of the room. He then turned to his men, \"Form up, he's extremely strong, be ready,\" They formed around him, three kneeled in front with their shields locked together. Sir Blake unsheathed his sword and stood in the middle of them. The last two came up beside him and raised their shields to rest horizontally on top of the shields in front.\n\nThe man standing outside started to enter but before he got far the knight turned to stop him, \"Stay out there if he attacks wave to the army, then join us.\"\n\n\"Yes sir.\"\n\nThe Elder returned shortly after with a man fitting the description, aside from his facial features. This man looked too young, for a moment Sir Blake wondered if this was just more black magic trickery. Unless he's an excellent actor there could be no doubt, this wasn't the same man. Solely based on how confused he looked, it seemed as if he didn't recognize Sir Blake at all. The Elderly man and this new comer quickly came to a stop once they noticed the men in formation. Most likely expecting the men to attack, they were hesitant to remain in the room.\n\n\"You wished to see me,\" Asked Athan, his voice shaky as he struggled to find his confidence.\n\nSir Blake sighed and eased back from his stance, \"No, apologies but the man I seek looks like you, however you aren't him.\"\n\n\"What you mean Yshomatsu, you saw him? Is he ok, what's happened,\" Athan demanded to know, his interest peaked. They discussed the past events while everything the armored knight said made himself seem like the victim. None of it fit, the way he described Athan's mentor was as if he was an evil worshiper of the dark arts. Elder Zoticus made a silent gesture for Athan to get going, he'd have to be quick and find Yshomatsu before these men. Athan bowed and turned to leave, even though Sir Blake hadn't finished speaking yet.\n\n\"Hey, hold up sir, where do you think you're going in such a hurry,\" Inquired Sir Blake.\n\n\"I have things to do and you clearly don't need me here, Elder Zoticus will take care of you,\" With that said the Elder bowed and waved him off. Athan hurried back to his room to finish gathering his things. He wasn't pleased with the rumors this knight spread. He needed to discover the truth for himself what happened to his mentor and good friend. Nevertheless if even part of what the armored knight had said was true Yshomatsu may be in some sort of trouble.\n\n*****\n\n\"Woo boy, steady there,\" The wind picked up all of a sudden and startled Titus' horse. It howled past his ears like a screeching banshee. Movement caught his attention at the monastery, one of the men walked outside. Titus turned to his flagman, \"Get ready.\"\n\nThe man rose from his seated position upon the ground. Unbeknownst to Titus, Sir Blake was just playing it safe by posting a man outside. A few minutes past before Titus realized it and relaxed a little.\n\nThe cold breeze chilled the General to the bones. As much as he loved war he never sought it. If a fight could be prevented it was his duty as General to prevent it. This whole event troubled him, the things Sir Blake had said seemed more like a story or legend of the Gods. Had he witnessed such things, he believed in the Gods of course. However in all the battles he fought over the years, the Gods never joined the fight, so why now in the hands of a monk.\n\nCould it be that one of the Gods had stepped in to tip the tides of war, or something worse perhaps?\n\n\"Sir what's that?\" One of the men shouted out.\n\n\"The man moved, hardly a sign of trouble,\" Titus responded as the man posted outside the monastery began to move towards the building only to stop after a few feet.\n\n\"Not him general, off on the horizon behind our men.\" Titus squinted in order to see, at first nothing caught his attention. Before he spoke out he saw it, a small fog was forming behind the men.\n\nNo, fog wasn't the right word of it, whatever it was, it was pink. The substance grew in mass until the forest behind the men was hidden from view. It remained there for a moment, resembling a big pink cloud.\n\nNone of the men noticed it behind them and Titus was beginning to worry.\n\n\"We don't have a flag for this, one of you ride down and warm them the very Gods are upon their heels.\" All of the men cracked up in laughter at the Generals attempt to lighten the moment. A rider nodded and nudged his horse forward.\n\n\"Go with him and head to the others if they too have that thing behind them,\" Titus spoke to another rider who quickly nodded and was off.\n\nA few minutes later the two riders separated and quickened their pace.\n\n\"Holy hell, wave the flag... Prepare for battle,\" Titus commanded. The monk's had to be behind this. The first flag was waved, all those sitting returned to battle formation, siege weapons were lowered and loaded.\n\nTitus looked on feeling helpless as the horseman reached the men. The other rider disappeared from view behind the monastery. Before anyone could react something happened.\n\nThe pink mass imploded upon itself and vanished.\n\n\"What trickery is this...?\" Titus screamed out only to gasp out in sheer terror as the mass once again exploded out at an alarming rate. However instead of the pink cloud this time the mass was a greenish black, blackest at its core. The mass expanded, enveloping the men who panicked running out in all directions.\n\nAs the men scattered in all directions the mass' core appeared to be changing form, until a shape or silhouette was clearly visible. The black silhouette continued to grow in density as more of the black mist collected together. Eventually the mass / mist's greenish black was simply a green tint as all the hints of black formed into the silhouette and moved.\n\nThe form appeared to stretch out her arms followed by... Wings, wings spread out behind the silhouette. A second later objects fling from the green mist towards each man running away. They looked like long purple tentacles. Either that or ropes, but ropes didn't have a mind of their own. The tentacles reached out and snatched each man and proceeded to pull them back into the mist.\n\nThe distant screams filled the valley and could be heard by the main army.\n\n\"Sound the attack now,\" Titus screamed, flags waved and horns sounded before siege weapons fired boulders at the monastery.\n\n\"Aim at the mist,\" Titus screamed out, \"The mist, damn it, fire into the mist.\"\n\nSiege weapons slowly turned and arrows fired volleys into the mist that continued to grow. The mist along with the silhouette woman headed right for the monastery. The front lines prepared to march forward, although no one was truly able to prepare. This unknown event had everyone scared shitless.\n\nBoulders were launched into the mist, however the winged feminine creature continued forward unaffected.\n\n*****\n\nMeanwhile back at the monastery...\n\n\"The general has sounded the attack get out of there,\" The lone man standing outside yelled out. Siege weapons fired, launching giant rock boulders at the building.\n\n\"I knew it, your Order must be corrupt,\" Sir Blake spat out.\n\n\"Sir, look out,\" The man outside screamed as a boulder crashed through the entrance's roof to land in the dirt on the other side, and slide to a halt. The man howled in pain as the debris landed on top of him, sealing off the building's main exit. The men inside were trapped and needed another way out.\n\nEveryone within panicked as the calm setting turned to utter chaos. Elder Zoticus stumbled back and retreated into the building, all the while calling for men to come to his aid.\n\nAnother boulder plummeted through the air and crashed into the center of the monastery. Unbeknownst to anyone that boulder landed in Athan's room sending debris everywhere. Athan was buried underneath the ruble alive but unconscious.\n\nBy the time Sir Blake recovered he realized three of the men with him were crushed to death. He sighed in sorrow as he picked himself back up. Coughing nearby caught his attention, Sir Blake lifted blocks of wood and threw them to the side.\n\nWith a hole dug into the pile of debris Sir Blake noticed two Roman shields and doubled his effort. Soon the shields were lifted and two men climbed out. Plymouth and another shared looks as they coughed from air thick with dust. Sir Blake was pleased to see the two of them alive and gave them a moment to recover.\n\n\"We'll have to find another way out,\" He told them as he placed his hand upon Plymouth's shoulder and tilted his head at the sealed entrance.\n\nOnce they caught their breath the two men gathered their shields and unsheathed their swords. Lined up next to each other and proceeded into the monastery with the knight closely behind.\n\n\"Be on guard I faintly heard him call for help, they could be waiting for us,\" Plymouth nodded, there was so much dust it was hard to breath, let alone see anything of note. If they were lucky they'd find a hole in a wall and escape the crumbling building before it was too late.\n\nTheir hopes were soon crushed as they heard rumbling ahead.\n\n\"Finish them quickly,\" An older man yelled, clearly it had been the Elder Zoticus.\n\nMonks flew through the air doing somersaults, others rolled on the ground before vanishing back into the dust. They came from all sides, striking blows left and right. Luckily they were unarmed. Flesh against metallic armor, the odds was in the Horadric's favor, if any of them could get a single hit in.\n\nIt was a standoff between Horadric shields, armor and sheer number of monks. A loud snapping sound overhead distracted everyone. Sir Blake looked up just in time to react, jumping for cover. Support beams within the ceiling collapsed as the cinder blocks tumbled down around them.\n\nThe man standing next to Plymouth was crushed along with a few monks. Sir Blake sprung back to his feet, slashing a distracted monk across his chest. He continued forward using his momentum to cut down two more before lunging ahead to skewer a monk in the gut.\n\nPlymouth had been disoriented as a giant support beam slammed into his raised shield. His head spun and ached before a monk drop kicked him, sending him forcefully into a crumbling wall. The shield upon his arm proved to be his lucky charm, saving his life multiple times. However this was the second time Plymouth was buried alive. A fresh cloud of dust and dirt filled the air.\n\nOnce again Sir Blake appeared to be alone. Four monks charged into the room and attacked. The knight swung intending to cut one in half only to have another monk kick the sword from his hand. The monk, who moments before would have been in two pieces upon the floor, round house kicked him in the gut. Sir Blake stumbled back and fell to a knee, grasping at his belly as he attempted to breathe.",
        "Anger coursed through Sir Blake's veins, as he grabbed hold of a four by four and swung with all his might. The block of wood connected with a monk's face and exploded into a thousand splinters. Two came at the knight from each side as their brother fell to the ground between them. The attack left the knight's sides open and vulnerable. The two monks took turns landing punches to his sides and rib cage. Sir Blake coughed up blood and fell back to his knees. Each time he attempted to block he's other side was struck.\n\nThe fourth monk known as Elpis by the Order bent down and checked his fallen brother for a pulse, when he couldn't find one he turned to the kneeling knight. He yelled out in rage standing up straight and kicked.\n\nSir Blake's lungs gave out and collapsed as the monk's foot landed square in his chest. Flung back to the ground, his vision blurred and the world around him spun. His fight was over, as he struggled to take a simple breath. He lay upon the dust covered ground bloody and bruised. It felt like more than one rib was broken, his face was swollen and he couldn't open his eyes. He sounded like a wheezing animal with each shallow breath he took. \n\nThe three remaining monks towered over him in victory; all that they needed was the finishing blow.\n\nYou know that moment people say your entire life flashes before your eyes right before you die. Sir Blake longed to see his childhood, the greatest memories he had. Sadly those memories didn't appear, instead he saw three blurry men standing over him through silted eyes.\n\nHe smiled, mouth full of blood that spilled forth, \"I'll be waiting for you in the afterlife,\" His voice cracked as he struggled to speak.\n\nThe nearby pile of rubble began to stir as Plymouth pushed his way out. His tower shield started to crack under the pressure but he kept pushing, legs beginning to burn and shake. Just before his legs gave out he urged them on for one last push. Finally he was free, as he climbed out the first thing he noticed was three figures within the dust filled air staring down at another. Between coughing fits Plymouth made a judgment call and released his shield. Along his belt he gripped several throwing knives and raised his arm into the air, preparing to throw.\n\nElpis reached down and grabbed the knight by his throat and Sir Blake spat blood into Elpis' face. \"You are the cause of all the suffering in these lands. Say your prayers and I will gladly send you to which ever God you wish,\" The monk said.\n\nThe monk to Elpis' right turned to see what all the commotion was behind him. His eyes opened wide but didn't have time to react before three throwing knives impaled his body. His last breath escaped his lips as his body fell back into Elpis' outstretched arm. The knight once again fell upon the ground, his armor creating a loud thud.\n\nThe now lifeless body laid within Elpis' arms as the man to his left sprung to action. He swung a right hook that Plymouth blocked with a raised elbow, before he pulled out his sword and impaled the monk upon it.\n\nElpis reached out and grabbed Sir Blake's sword as Plymouth raised his shield back into his arm. He took a deep breath before taunting the monk in tattered robes.\n\n\"Let's dance you motherless swine.\"\n\nThe monk lashed out, his sword clashed with the Horadric's shield. Swords and shield struck one another time and time again. Elpis spun between strikes attempting to distract, yet neither man gained any ground as they danced the battle out, superior skill against superior armor. The monk landed several blows around Plymouth's guard only to have them ricochet off the plated armor.\n\nPlymouth had enough of the dance and charged forward, slamming his shield into the monk. Teeth and blood spilled out from Elpis' mouth before steel slashed across his chest. The monk dropped the sword as he rolled back and retreated from the room. Plymouth hurried over to Sir Blake's side, throwing his sword and shield to the ground.\n\nHis worry soon replaced by joy as the knight opened his swollen eyes, \"They sure aren't push overs, huh sir,\" Plymouth joked. Sir Blake coughed as he instinctively laughed.\n\n\"Don't make me laugh, help me... to my feet,\" Sir Blake managed to say between coughs, grasping at his ribs. Plymouth was more than happy to oblige and pulled the knight's arm over his shoulder. Sir Blake hissed in pain as he struggled to his feet.\n\nSir Blake and Plymouth exchanged glances as the dust settled. Entering this building had turned out to be their grave. What remained of the monastery cracked and creaked, pieces of wood continued to fall around them. This only served to stir up more dust, clouding their vision. The entrance behind them had collapsed, they'd have to risk going further inside to find another way out.\n\nThe knight reached down to gather his sword and took a deep breath that turned into a coughing fit. His ribs burned with every movement he made.\n\n\"Leave it sir; we're getting out of here.\"\n\n The two men crept forward, wary about springing any traps or getting ambushed by more monks. They walked through the second door, book shelves and tables were knocked over. Support beams and pieces of the ceiling littered around the room along with a dozen of dead monks.\n\n\"Well we made it inside,\" Sir Blake joked as he leaned on Plymouth's shoulder for support.\n\n\"Yeah only a hundred rooms to go.\"\n\n\"Heh, let's get the fuck out quick.\"\n\n\"Maybe if we stand under that hole the building will fall around us and we'll be out,\" Plymouth replied as Sir Blake started another coughing fit while attempting to laugh. \"This place has turned into a mass grave.\"\n\n\"As it should be, though makes me wonder, what caused the attack.\"\n\n\"It surely wasn't us.\"\n\n\"Right, I would have stepped outside first,\" Sir Blake said with a smirk. Deep down he was over joyed. Not only considering Plymouth saved his life but also because the man had survived as well. Over the past few hours the two of them had bonded, Sir Blake believed he had made a new friend. He didn't have enough friends in this life. A fact he would change if he lived.\n\nThe walls buckled under the pressure of the collapsing roof. The inner chamber was massive. It would have been a sight to behold under normal situations. When thousands of books lined the shelves, chandeliers hung from the ceiling. Unique tapestries lined any open space along the walls.\n\nNow however everything was in shambles, destroyed, ruined or falling apart as the two men stumbled through. There was a humongous hole that continued through multiple walls and floors. One well-placed boulder was all it took to bring this place crumbling down to the ground.\n\nFlapping sounds came from up ahead, getting louder as whatever it was came closer. A thin green mist began to enter the hole, gaining size as the flapping got louder. The mist gathered and appeared to be alive and with a mind of its own. It acted as if a beast, preparing to jump down into the hole. The two men quickened their pace.\n\n\"Well there goes that idea; we're not standing under that!\" Plymouth called out, shield in one hand, knight in the other.\n\n\n\n*****\n\nGeneral Titus looked out at the valley growing more concerned by each passing moment. The green mist now filled the horizon and flowed ever closer to their ranks. Siege and arrows fired consistently into the mist to no avail, and the creature within had vanished behind the crumbling Monastery, clearly not interested in them. Cugath of Titus' war council shouted commands down below, a true Horadric warrior with the courage needed in these times. Without it the army would fall to despair, faced by such abnormal conditions. The Monks clearly practiced some form of black magic after all.\n\nThe mist came to a stop merely fifty feet from the blockade as if an army posed to strike. The green substance began to thicken in mass.\n\n\"Aim the weapons lower, at the base of the shit,\" Commanded Cugath, for he alone recognized the threat based on past experiences standing in formation before another army. A moment later a volley of boulders launched and impacted, squashing sounds filled the air and rumblings began, turning to growls and snarls. The man shouted, pleased to hear something crushed within the mist, pleasure short lived.\n\nThe mists began to part, clearing the once hidden army. The valley was filled with hordes of gruesome monsters. Blood thirsty monsters from the horror stories and legends of old, eager for a fight lined up into mock formations. One green skinned beast took a whiff and appeared to laugh and savor the smell of fear and utter terror.\n\nThe Horadric's applause quickly turned to unsteady and shaking hands. Never before had they faced such foes. Only one among them hid their fear and shouted out, taking action, \"Fire at will, let none last the coming night!\" Cugath's orders were met, siege and arrows unleashed upon their new enemies.\n\n\"Front likes prepare for glory,\" The council member shouted, his lack of fear gave hope to those cowering in it. The men gripped their shields with greater purpose and fortified the wall created by them. Yet the monsters appeared unscathed, fallen ranks replenished by those behind.\n\nDemonic grunts, the whole lot of them. Their skin a deep green, rippling muscles covered with red runic markings. Little to no hair was present aside from atop their skulls, which fell upon their backs in thick dread locks. Each demon looked hungrier than the next. Titus worried that the Monks opened a gateway to the afterlife, and he set mind to task in making them regret it.\n\nOne last howl sounded their attack, every monster in sight charged forth, snarling, to tear into flesh. Another volley of arrows hit the front waves sending many of them to the ground only to be crushed as the Demonic horde charged over them.\n\nThe Horadric lines braced for impact as the horde closed in on them.\n\n\"Show these bruits what it means to face the Horadric Legion and fight to the last breath,\" Cugath shouted out, barely heard by those closest to him as the charging army blotted out all other sounds. A loud clash threated to burst his ear drums as the Demonic horde collided with the shield wall and pushed it back.\n\nBoots dug into the dirt as each man struggled to hold on, it felt like a building had been tossed at them. Three lines pushed forward attempting to halt the horrifying and hungry army's advance. Arrows had ceased to be fired as the archers still grasped at their ears, heads still vibrating from the loud impact.\n\n\"Gather your wits and put an end to these beasts,\" Slowly the archers obeyed Cugath's command and raised their bows into the air. Abate with shaky hands.\n\nTitus looked on in sheer terror, not sure how to comprehend the force before his eyes. The lines below began to shatter under the pressure, and the fighting started, steel against Demonic flesh. Demons fell by the hundreds, yet still they came as if an unlimited force had been unleashed upon the world. The Horadric Calvary would have charged into battle, however the horses disobeyed commands. Scared by the ravenous beasts the horses attempted to flee, bucking up on hindquarters. The lines would have to hold out until the animals were brought under control and set to purpose.\n\nWith the front lines broken swords slashed through Demonic flesh, claws bounced off shields. Others ripped the shields apart before the Demons feasted upon Horadric blood. Horadric lines formed tighter as new front lines were created by those originally in the middle. Once again Demon lines crashed into shield walls. Monsters snarled and threated to break their will to fight with a single stare.\n\nSiege weapons fired another onslaught into the mass of Demons. Cugath was amazed at the furious beats yet stood proud as their numbers fell drastically. A force of sheer numbers that lacked any true skill, purely ravenous animals let lose, nothing more. His eyes opened wide as not even a second later a Demon leaped into the air over the front lines into a siege weapon, shattering it to a thousand pieces. With flaring arms in every direction as a child would in a temper tantrum.\n\nCugath rushed over, unsheathing his sword to confront the beast before it could cause more damage. Two more Demons leaped into the air only to be met with arrows ready for them. Their failure made others think twice about leaping into the fray. Cugath closed in on the first Demon just as it destroyed another of the siege weapons, he screamed out to get its attention.\n\nHe stopped in mid charge as the Demon turned towards him, it straightened out on hind legs, rotating shoulders and flexed its muscles before letting out the most terrifying growl / howl Cugath had ever heard. Cugath was determined to show his men courage and give them the strength to overcome their own fears. Even though deep down he was petrified, the army needed to put an end to the foul and un-earthy force.\n\nHe raised his shield and sword as he entered a fighting stance, taunting the Demon to face him. The beast took the bait and lunged forward beating clawed hands against the shield, threatening to tumble Cugath to the ground. The endless onslaught of blows hit the shield with such force that it began to crack and splinter. Cugath's arm burned yet he held his arm up in defiance.\n\nAll the while Cugath managed to land a few blows of his own cutting flesh, yet the Demon kept at him unaffected. Blood seeped from his wounds and Cugath almost hurled as the foul stench met his nostrils. The man's body ached from the attacks consistently bashed upon him. The Demon pulled back for a strong strike before Cugath dropped to the ground, causing the Demon to stumble.\n\nCugath used his momentum to roll forward while slashing at the Demon's legs, cutting deep into the flesh. The Demon fell to one knee as Cugath rose to his feet behind it, he lunged his blade deep into the beast's back. The Demon howled out in paid before Cugath cut off its head, the body fell to the ground as the head soured off into the distance.\n\nThe army cheered and fought on with new found furiously, spirited on by their leader's courage and will to live. Those lines that had broken reformed into closer formations, until four distinct turtle formations stood against the Demonic horde. In the distraction Cugath hadn't noticed the other siege weapons fall to ruin.\n\nThe Demonic horde slowly crushed the Horadric blockade and when all hope faded from thought they heard horns blow in the distance. Cugath looked up, his body aching from battle. The Horadric Calvary lead by General Titus finally charged down the hill towards them.\n\nDemons turned focus towards the coming force, giving the remaining men cause to fight on. Horses charged with riders lowering their lances as they met and ran through waves upon waves of Demons. Few horsemen fell to the beasts that either got speared, trampled upon or both. In a moment the battle was over, Cugath let out a deep breath. He was amazed that they survived.\n\nAll of a sudden every Demonic body turned to dust and blew out towards the valley. The dust turned to green mist, floating to a single spot. It collected and merged into a massive ball which took shape and solidified into one massively angry Demon. The thing looked like a mix between a grizzly bear and mutant boar from hell. Razor sharp teeth filled its snarling visage.\n\nGeneral Titus called to his men and the Calvary reformed, yet once again shook in fear.\n\n\"Charge forth brothers so we can live to put an end to those responsible for letting such horrors lose upon our world,\" Titus shouted as his steed bucked on its hindquarters before charging forward, quickly joined by all those around him. Horadric warriors screamed out their battle cry as they closed in on their new foe.\n\n\"Circle around, strike when its back's to you!\" The Calvary kept the Demon guessing, yet it turned quicker than anyone imagined possible, swiping down multiple riders with a single swing of its arm. Jaws clamped down on a rider and chumped, bones crushed and blood dripped from its giant maw before the Demon swallowed both rider and horse.\n\nGeneral Titus closed in while the beast was distracted feasting and threw his lance at the creature's throat. The lance impaled within flesh as Titus unsheathed his sword and slashed twice at the belly of the beast. Before the Demon could react Titus rode off to join his brothers circling around the infernal animal. Blood oozed from its wounds, snarling the Demon went into a feral rage and lunged forward, biting, clawing and kicking as if squashing a hive of ants.\n\nOne after another the Horadric riders fell under the clutches of the beast. Covered in blood it was hard to tell how much belonged to the Demon. Titus noticed his lance still dangled from the beast's throat, the blade hung on by a thread yet wasn't deep enough to do real damage.\n\n\"Distract it,\" He called out to his men. The riders grouped up and charged at the monster, lances posed to strike. The Demon swiped, knocking the weapons from wary hands before the beast leap into their ranks. The Demon enjoyed the taste of human blood upon its tongue. Titus closed in from the Demon's blind spot and gripped his hanging lance as he plunged it further into the beast's flesh. The lance pierced brain, before Titus broke the blade from hilt.\n\nThe Demon's furious howl was cut short, going from slaughtering the riders to a lifeless corpse to fall upon the blood soiled ground. The remaining blockade in the distance shouted and applauded the Horadric victory. Once again their General sent the Demons to their makers.\n\nCugath nodded his approval as the remaining riders returned to the frail blockade. The riders were greeted by cheers as they approached.\n\n\"Return home and deliver report, the war upon this Monk order has just begun. We'll need the entire Horadric legion at our backs if we are going to put an end to these Demon worshipers,\" General Titus commanded to the few remaining riders. They nodded and set mind to purpose.\n\n\"Now let us set focus on the Monks responsible for...\"\n\n\"Sir, look,\" Shouted Cugath, cutting his General's speech off for good reason as they all turned to see the lone Demonic corpse turn to dust. Once again the mist spread out and filled the valley. A thick green mist grew to cover the horizon. It grew to such density that the men couldn't see anything through it. Even the Monastery was hidden from sight. It was like their worst nightmare had come to life.\n\nYet the mist did not part this time. It just appeared to sit there, as if waiting for something to happen. Titus was suddenly glad he had sent riders. For it would appear none of them would live much longer. It dawned on him that Sir Blake Barbosa hadn't been seen since he entered the building. Perhaps something had happened within that caused the monks to react. He hoped his knight wasn't responsible. Titus quickly pushed that thought from mind. Blake had been right all along about the Monk Order practicing black magic.\n\nAll the stories Blake had told now paled in comparison to the horrors the rest of them witnessed here today. If they fell here in this valley, Titus hoped that the Demons would turn on their masters and prevent any more demonic summoning before the might of the Horadric Legion crushed the Demons from this world.\n\nThe remaining men formed a line, interlocking their shields together, with the few archers standing behind them. Cugath and Titus stood at the back, prepared to give orders. Unbeknownst to them all a small amount of mist formed behind their lines.\n\nThe dense mist may have stayed where it was but it wasn't still. Tendrils swirled within as if it was alive, either that or something moved within it.\n\nSoldiers shivered as cold sweats threatened to overcome them, afraid of what was coming. It was natural to fear what you didn't understand but the suspense risked breaking the willpower of those that remained."
    ],
    "authorname": "Yshomatsu",
    "tags": [
        "succubus",
        "female demon",
        "monster-girl",
        "kitsune",
        "knight",
        "seduction",
        "soul sucking",
        "monk",
        "dream world",
        "demon"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-inquisition-ch-01"
}