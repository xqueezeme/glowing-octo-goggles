{
    "title": "When We Were Married Ch. 06A",
    "pages": [
        "SOMETIMES, DYING IS EASIER......\n\nTUESDAY, SEPTEMBER 13, 2005\n\nMy name is Bill Maitland. I'm an Assistant State Attorney in the Jacksonville State Attorney's Office. Unofficially I'm the chief prosecutor which means that although in an organizational chart there are two other SAs at my level, in reality I'm the number one guy under the Big Man, State Attorney Austin Edwards, at least for right now. I've finally made the decision to take a black cop, who shot three men breaking into his home including one of them in the back running away, to a Grand Jury.\n\nI might wind up out on my ass at any moment and 10 years of prosecuting will be a memory, but I can't see any way out of it, not and be able to face myself in the mirror.\n\nAt the same time, a woman I have feelings for has left me to go back to her husband and son in France and I'm not at all sure that I've recovered from being dumped by my wife of nearly 20 years for a younger, prettier, more well-hung rival. So, it hasn't been the best six month period of my life and I'm not sure things aren't going to get worse....\n\n####################\n\nFRIDAY, MARCH 22, 1985 \u2013 6 P.M.\n\nI was hitting the books for my sociology class, one of the requirements of pre-law, when Mark Cumber tapped on the door of my bedroom. I was sprawled across my bed, trying to read four books at once, take notes, and prepare for a final that I didn't see any way in hell I could pass. I'd been studying since I got out of classes at 3 p.m. that afternoon and my eyes were beginning to cross. \n\nI almost welcomed the interruption, although I knew I couldn't spare the time for Mark's perennial request that I go out partying on a Friday night with him and the other two guys who share the rent with us for the luxury of an off-campus apartment.\n\nIt really wasn't a luxury. I'd tried dorm living, and, while it was cheap, it was almost impossible to get any real studying done, what with the booze and pot and hot and cold running females that zipped in and out of the bed of any roommate I happened to land. Not for nothing had Florida been named one of the top partying schools in the land.\n\nNot that I had anything against hot or cold females passing through. I'd snagged a couple myself, but most of the guys I'd bunked with came from money or had scholarships or didn't mind taking out loans it would take them 30 years to repay. They could afford to screw around, maybe flunk out as a lot of freshmen did, and someday soon come back with daddy's blessing and financial support. I couldn't do that.\n\n\"Whatever it is Mark, I can't man. I've got a month of studying to make up for in a couple of weeks. Just go on without me.\"\n\nMark was a tall, skinny, white dude trying his best to raise an Afro and look cool. It just made him look stupid but somehow girls pitied him and he wound up scoring pretty regularly. He just looked at me funny.\n\n\"It's not me, Bill. Somehow, I think you're going to want to make time for this interruption.\"\n\nI looked up. Standing behind him in the doorway was the most beautiful thing I'd ever seen in my life. It was a warm day for March in Gainesville and she wore red shorts, a fairly loose white top that somehow bulged out, and a smile that would raise the dead.\n\nDebbie Bascomb was a gorgeous wet dream of a 19-year-old college sophomore at the University of Florida where I am currently working, hopefully, toward a law degree someday in the not-too-distant future. I'd seen her around campus at times, always escorted by one of the school's football or basketball stars or guys who could afford $50,000 cars on their daddies' lines of credit.\n\nThen one night she'd been the center attraction at a would-be frat house gang bang where I was earning a few extra bucks doing waiting and 'scut' work duties. Something, maybe only the distinct impression that she hadn't got involved voluntarily, led me to poke my nose into her personal business and I wound up in the hospital in a coma for my efforts.\n\nI felt pretty silly afterwards. I nearly died, saving the dubious virtue of a reputedly very sexually active coed who never bothered to come by and see me a single time in the hospital, call me or even send me a card. I'd told myself I hadn't done it to make points. I'd have stepped in even if she hadn't been inhumanly beautiful. I told myself that.\n\nI found myself staring at her breasts, then somehow raised my eyes to look into those cool eyes, found mine drifting lower and dropped them to a safer region, which were those hips and legs and found myself getting lost again. She was a big girl. It was a long way from those breasts to her feet. I managed to look up at her face again.\n\n\"Hi.\"\n\n\"uh \u2013 hi.\"\n\n\"I'm \u2013\"\n\n\"I know who you are, Debbie. I've seen you around campus.\"\n\nA little twinge of something that might have been embarrassment flashed across her face for a moment.\n\n\"I'm sorry, but I don't remember running into you.\"\n\n\"You didn't. We don't travel in the same circles. I just meant I'd seen you a few times,\" and then, although I knew it was stupid, added, \"You're hard to miss.\"\n\nThat smile flared on her face again and it was as if the room had gotten 20 degrees warmer.\n\n\"Thank you, Bill.\"\n\nShe looked down at the bed which was a patchwork of books and papers and asked, \"Could I sit down for a minute?\"\n\nI looked around. The two chairs I'd gotten from Goodwill were also covered with academic debris. There was just enough space in my room to turn around and that was it, the bed or nothing. I swept a pile of books and papers up and deposited them behind the bed in a heap.\n\nShe sat down on the edge of the bed and folded one knee under her. Up close she was even more spellbinding. Her eyes were an odd shade of blue green. She stared at me and I felt like a bug pinned to a specimen slide. \n\nI tried to think of something to say but my mouth didn't seem to be working right. I noticed Mark gave me a thumbs up, grinned and vanished.\n\n\"I'm kind of hurt.\"\n\nI stared at her, trying to figure out what she meant.\n\n\"You save a girl from a fate worse than death and then you completely abandon her. I figured you'd at least call me, but not a word. It's been more than a week since you got out of the hospital. Do you go around saving so many damsels in distress that you lose track of them?\"\n\nShe smiled as she said it and I couldn't help smiling back.\n\n\"No, I generally don't make a habit of it. But...\"\n\n\"But....\"\n\n\"I \u2013 uh...I don't imagine you know anything about me, but I'm here on a partial scholarship and working and keeping up a full academic load. When...uh...when I went in the hospital I lost nearly a month. I've got finals coming up in a little more than a month and I can't afford to fail any of them. I've been studying my ass off, plus going to classes. And...\"\n\n\"And?\" \n\nShe leaned forward, her breasts swaying gently inside her blouse. I could tell now she wasn't wearing a bra because of the thimble sized nipples poking out at me. I had lost my train of thought.\n\n\"And?\"\n\nShe was smiling gently and she followed my gaze down to her chest.\n\n\"And...I know you've got a very busy life. You...uh \u2013 have an active social life. I didn't want to...uh...intrude.\"\n\n\"Intrude?\"\n\nThe smile faded.\n\nI tried to make it sound casual, but I couldn't keep a little emotion out.\n\n\"If you'd wanted to see me, to thank me, you would have come by the hospital. You never came by. I just assumed....that you weren't interested in....bringing back any memories....of that night. I figured you probably just wanted to forget all about it. My mother told me about how you were hurt, and that you probably were embarrassed. So I just thought..\"\n\n\"I never came by the hospital? That-\"\n\nThen she stopped herself. Her breasts heaved, which was a show all in itself.\n\nShe took a few deep breaths. Then:\n\n'I came by the hospital. Three times before I ran into your mother. She made it very plain that she didn't want me anywhere around you. I managed to sneak into your room twice when she wasn't around...just to sit with you. \n\nThen she walked in one day and found me there and gave the nurses orders to keep me out of there. She was family. They had to do it. \n\n\"When I heard you'd regained consciousness, they wouldn't put any of my calls through to you. \n\nI have a friend who's an orderly and he told me when you'd been released. I just assumed...you would contact me. I was waiting. And when you never called, I said to hell with it and came over.\"\n\nI felt like shit for what I'd thought. And what I'd thought was that she was just a rich little slut girl who really didn't give a shit about a nobody that had wound up in the hospital helping her.\n\n\"I'm sorry Debbie. I didn't know. I \u2013 uh...look, my mother's not a bad woman. She's just protective. She \u2013 I \u2013 we lost my father when I was a little boy. She's never remarried. I've been her whole life. I was an only child. And she thought you were-\"\n\n\"A stupid, reckless slut that nearly got her son killed screwing around at a frat party.\"\n\n\"Debbie, I-\"\n\n\"You don't need to deny it. That's what she told me when she found me in your room the first time. Do you feel the same way?\"\n\nI just shook my head.\n\n\"I can't say anything about the way you live your life. You're over 18.\"\n\nHer voice rose.\n\n\"You think I went there wanting to be raped. To have those assholes rape my ass until I was torn up inside? To tear my vaginal walls so I might not be able to have kids? To line up and fuck me over and over? That son of a bitch I thought was my boyfriend got me drunk and drugged me.\"\n\nShe lowered her voice.\n\n\"I like parties. I like guys. I like sex. Sue me. Show me that many coeds on this campus that don't feel the same way. But I'm not a punchboard. I don't go to bed with just anybody.\"\n\nSomehow, without knowing how it happened, I'd wound up holding her hands in mine. Her eyes glistened.\n\n\"That wasn't what I was saying. I'm just saying that I can't pass judgment on how you live your life. If I'd thought you...wanted to be there...wanted what was happening, I wouldn't have stepped in. But I didn't think you wanted it. And I was right. I'm glad I stepped in. I always will be. It was the right thing to do.\"\n\n\"Do you always do the right thing?\"\n\n\"I try to.\"\n\nShe was close enough to me that I could smell the dizzying scent of her. It wasn't perfume. It was her. Another few inches and those hard nipples would be grazing my t-shirt. I had never wanted anything more in my life than to lean forward and kiss those red lips. But I couldn't. \n\nShe was grateful to me for saving her but, if I leaned forward and took that kiss, I knew she'd stiffen and draw back and give me a look I didn't want to have to live with. She had come here to thank me, but she was still light years out of my league.\n\nShe licked her lips and I thought I was going to die, or cum in my pants. Whatever, one of those things. Then she pulled back and looked around my little room designed in late 20th century poverty.\n\n\"You save me and sink yourself Bill. That doesn't seem fair.\"\n\n\"It's okay.\"\n\n\"No, it isn't. You shouldn't be punished for coming to my rescue.\"\n\nShe picked up the sociology book, looked it over and said, \"You've got Williamson?\"\n\n\"Yeah.\"\n\n\"I took his class last semester. I got an A. I can tutor you on what you've missed and I guarantee you an A on the final. What else are you taking?\"\n\nI told her.\n\n\"I haven't taken the math yet, but I'm pretty good at math. I have taken the econ and while I haven't taken your lit class, I always ace English. Let me help you on these and you can probably pass everything without killing yourself. Two heads are better than one you know.\"\n\n\"I can't ask you to do that, Debbie. You've got your own classes to worry about.\"\n\n\"I'm ahead on everything right now. And...my econ 2 class is the hardest one I've got. Jerry Harvey has been trying to get me to go to bed with him since I started his class. If I rub my titties on him a little bit, he'll do my assignments himself.\"\n\nI couldn't help smiling at her, although I didn't like the mental image of her rubbing those big breasts up against an old man.\n\n\"And there are whole armies of frat boys who'll do the work in my other classes if I just ask them to, ever so sweetly.\"\n\n\"You make it sound so easy.\"\n\nShe grinned at me again.\n\n\"You think I'm just a pretty face and a pair of D cups? There's a brain inside here, Bill Maitland.\"\n\n\"Yeah, I'm beginning to see that.\"\n\n\"But in the meantime,\" she said, standing up suddenly and holding her hand out to me, \"let me take you to dinner.\"\n\nI didn't grab her hand..\n\n\"I can't, Debbie. I have too much-\"\n\n\"Bullshit. Give me your hand. There.\"\n\nShe pulled me up and for the first time I realized how tall she was. She wasn't wearing heels but I still had to look up slightly. Not a lot, but it was strange looking up into her eyes. It didn't do anything for my self confidence.\n\n\"Come with me. You have to eat something so let me treat you to a steak at Merriweather's and when we come back I'll help you study. I don't have a curfew and I'll stay as late as you want me to.\"\n\nMerriweather's was the best steak place in Gainesville and I couldn't afford to even think of going there.\n\n\"I don't want you to spend that kind of money...\"\n\n\"It won't cost us anything. I dated the son of Ritchie Merriweather, the owner, last Fall. It's too bad he's married because I liked him better than I did his son, but he loves me and he'll feed both of us for free.\"\n\nShe looked at me as if seeing me for the first time, taking in the faded jeans and holed tee-shirt.\n\n\"You got decent clothes? Maybe a jacket?\"\n\n\"Decent clothes but no jacket.\"\n\n\"Doesn't matter. He keeps jackets and ties for special guests. Come on, get dressed. You want me to turn around, in case you don't have on underwear under those jeans?\"\n\nShe grinned at me.\n\n\"If you want me not to, I won't turn around.\"\n\nI thought about arguing with her for a second, then realized she'd get me out of there if she had to throw me over her shoulder and carry me out. I had run into a stacked steamroller.\n\nThe only problem was, I was already falling in love with an angel and I was never going to be able to fly high enough to win her.\n\n########################\n\nTHURSDAY, SEPTEMBER 15, 2005\n\nI still woke up sensing her presence in the bed next to me. I had not heard from her but I hadn't really expected to. I wondered what had happened when she met Philippe for the first time on her return, when she had looked into his eyes. I didn't want to think about their first night together after months apart.\n\nNot thinking didn't make it go away but, even though the thought of Aline with Philippe hurt like hell, it didn't make the feelings I had for her go away. \n\nI made myself NOT think about what I'd told Debbie the day she left. What if she walked back into my office one day in the near future? What if she told me that she and Philippe hadn't been able to put their marriage back together?\n\nWhat if I was unemployed, or moving to another state, my life up in the air, trying as hard as I could to keep a relationship with my kids long distance and still missing Debbie and trying to start a new life? Could I add Aline into that mix?\n\nDamn straight I could. One thing the end of my marriage had taught me was that a job and responsibilities and doing the right thing weren't a substitute for protecting what was the most important thing in your life.\n\nIn my case, it had been Debbie and I'd let her slip away. If Aline came back, no matter what it cost, I wasn't going to let the same thing happen again.\n\nDespite how I felt emotionally, which was drained and tired and old, physically I woke with energy and I felt good. All the propaganda about the value of hard physical training and conditioning had turned out to be true after all. Who knew? Even though I'd slacked off while Aline was here, the conditioning carried over.\n\nWhy the fuck had I never even considered doing this when I was with Debbie and she had begged and nagged me to set foot in a gym, to go with her, even sweetening the deal with an occasional blow job or a really hot fuck? \n\nShe had wanted it and even though I knew now it was for herself, to try to keep alive a flicker of the desire she had once felt for me, she had also been doing it for me. And now, I couldn't even remember what had been so vital that I could never find the time.\n\nRegret is the most useless emotion, or so I'd read somewhere, so I forced myself to think about William Sutton and Shawn Smith and the mechanics of the office and I managed to put Debbie and Aline out of my mind for awhile.\n\nThe process of getting ready to go to the grand jury is not all that simple, particularly when you're preparing to toss them a political hand grenade like Shawn Smith, so I spent time on that one.\n\nAlso, although we'd done a lot of prep work on Sutton, actually filing the charges and setting up the case was a different story. I had two Assistant SAs preparing the case but I was going to be the face of the case.\n\nIf it blew up in our faces, I didn't want to cripple two young attorneys just starting their careers. Better that I go down.\n\nWe'd just started the hurricane of legal forms, but Sutton's attorney, a fairly good trial lawyer named Barry Mahon of the famous Jacksonville Mahon legal dynasty, already was firing back at us as fast as we hit him with motions and counter-motions and requests for delays.\n\nI knew what he was doing; just what I'd do in his shoes. He was going to delay, delay and delay again in the hopes that our star witness would die before the case went to trial. No recorded or written testimony is ever as effective as a live, warm, breathing human being on the witness stand.\n\nThen, there was that distant dark cloud on the horizon. We'd heard more about the snake-bit trial of the Mexican drug cartel warlord who'd been set for trial in the West until the cartel had killed the two U.S. prosecutors on the case in that circuit.\n\nThere had been talk of moving the trial to Idaho and only a week before, the lead federal prosecutor in Boise had come home to find his wife and three children murdered, their heads missing.\n\nWritten in their blood on the walls of his home were words in Mexican that roughly translated to \"Touch us and we will kill you all. El Deg\u00fcello.\"\n\nU.S. prosecutors around the country had received a flash education in Mexican culture and tradition, learning that \"El Deg\u00fcello\" was the name of the trumpet tune played by Santa Anna's army surrounding the Alamo in 1836.\n\nIt meant, according to different sources, \"no mercy,\" \"no quarter?\" and more literally \"slit throat.\" One book translated it as \"The Beheading.\" The cartel thugs who had butchered the prosecutor's family obviously went with the book definition.\n\nThe cartel had moved on the RUMOR that the case was going to Idaho, so prosecutors and cops around the country were justifiably nervous. It had been a long, long time since any organized crime groups in this country had felt free to attack cops or prosecutors.\n\nThis Mexican cartel had dared to go to war against the entire law enforcement establishment of the United States and so far they were winning. \n\nThe DEA and U.S. black Ops groups were moving in Mexico, but the entire country was so corrupt that you never knew who you could trust and often the law enforcement allies you needed were hired killers for the cartel, so taking out their heads was more than difficult.\n\nAll of this was highly sensitive, but prosecutors knew about it and knew the storm was heading for someone. The American government couldn't back off on its prosecution of the cartel warlord who had killed hundreds in Mexico and the U.S., and the cartel wouldn't or hadn't backed off on its pledge to keep him from going to trial.",
        "Like a lot of people who held my kind of job, I half wanted the case, yet halfway hoped it would pass to someone else.\n\nAnd I promised myself that if it came to me, I'd make sure Jimmy, the husband of Debbie's younger sister, Clarice, was called in. I had heard enough to know that he had resources in black Ops he could call upon, and I wanted someone who was of our blood protecting Debbie and the kids if that day ever came.\n\nThe routine, the job, was good for me. I stopped thinking about Aline, about Debbie, about the past and what couldn't be changed and the future and what might be coming. I could just do my job.\n\nAt 11:45 a.m. Reverend Montgomery stormed in. That is, Cheryl had barely enough time to say, \"Mr. Maitland, Rev. Montgomery is headed in to see you.\"\n\nIf this had been a cartoon, steam would have been hissing from his ears. He pursed his lips tightly and gave me what was probably an intimidating stare.\n\n\"I don't know what hold you have over Edwards, but I want you to know the black community is not going to let you railroad a good police officer into prison, Maitland.\"\n\n\"Well, hello Reverend, and how are you today?\"\n\nHe breathed hard.\n\n\"Extremely upset, Mr. Maitland, and you know why. Despite the urgings of the African American community and the police community, you have decided to go forward with this witch hunt designed to put a good police officer into that hellhole of a state prison at Raiford. You know as well as I do that that is tantamount to a death sentence.\n\n\"What's worse, you have somehow managed to intimidate the duly-elected State Attorney to be derelict in his duties and refuse to order you to step down. I don't know what hold you have on him, but it must be truly powerful to convince him to commit professional suicide.\"\n\nI tried to be as low key and calm as possible.\n\n\"Reverend, I'm sorry I've upset you. At the time we last spoke I told you I hadn't come to a decision on the disposition of Office Smith's case; I since have. All I'm doing is bringing the facts before a grand jury and allowing representatives of our entire community to make the final decision on how to handle the case. I would think you'd be glad to have the decision made by a cross-section of the community and not by one man.\"\n\nHe just gave me a long look and then sat down in one of the chairs and got up again as quickly as if he couldn't bear to be still.\n\n\"You truly are smoother than duck shit,\" he said, dropping the Reverend guise for a moment, \"You know the right words and the right tone, but I'm not some idiot reporter or Chamber of Commerce law and order booster. You and I both know you're running this show and whatever happens to Smith is on your head.\"\n\n\"You're exaggerating my influence, Reverend. I think all that 'Angel of Death' nonsense is getting to you. It is quite possible the grand jury will hand down a nolo and refuse to indict Smith. Grand juries tend to be reluctant to indict police officers minus some overwhelming evidence of wrong doing.\"\n\n\"Only this time they won't, will they, Mr. Maitland? You think you can get away with this because you have your boss buffaloed. You have some dirt on him or what? But let me give you some advice. You do this and you'd better get ready for protest marches in front of this office every day \u2013 for as long as it takes. Our community will picket your home as well, not just YOUR condo, but the house in which your ex-wife and children currently reside. There will be television crews and radio reporters and media trucks and everybody in the neighborhood will know they have a nest of white racists in their midsts.\"\n\nI stood up from behind my desk. Something must have passed across my face because Montgomery backed up.\n\n\"You realize you're threatening my family to frighten me off from pursuing this prosecution?\"\n\n\"Not at all,\" and he smiled. A partial smile but he knew what he was doing.\n\n\"You know we are perfectly within our rights to picket your home and actually anywhere else we think we can pressure you to drop this unjust prosecution. The Constitution protects our free speech and assembly rights. If it inconveniences some, or possibly causes an illogical fear, that is not our problem.\"\n\n\"Like you said, Reverend, smooth as duckshit. But you and I both know the impact of shouting protesters, camera trucks parked all over neighboring lawns, the crazies that always come out at such events. \n\n\"And if something happens to my son, or daughter, or ex-wife, well, you had no idea something like that might happen. Right?\"\n\n\"No, I don't know that anymore than you know that Shawn Smith will be indicted and probably convicted.\"\n\nWe stared at each other for a moment.\n\n\"I don't want to do this, Maitland. I think you're a piece of shit, but I don't want to force your ex and your kids to pay for your persecution of Shawn Smith. However, if you go ahead with this, we'll have to start the ball rolling and they will be sucked in. Don't go to the grand jury. I'm not a bad man, Maitland, no matter what you may think now. I don't want to have to live with myself if anything happens to them.\"\n\n\"We're at an impasse, Reverend. I'll make sure my ex-wife and kids are somewhere else when you start your protests and I'll use every resource of this office to prosecute anyone who makes even a threatening gesture against them if you do find them.\"\n\nI used my best intimidating stare and tried to visualize him in a prison jumpsuit.\n\n\"Maybe I'll be able to nail you. Maybe I won't. You'll have to decide, in the words of that old Clint Eastwood movie, 'Do I feel lucky'?\"\n\nStepping to the door of my office, he said, \"I'd ask you the same question, Maitland. Do you feel lucky?\"\n\nAfter he had left, I sat thinking for awhile, and then I headed up to Edwards' office.\n\nMyra said, \"He's inside, Mr. Maitland.\"\n\nI went inside. He was sitting behind his desk, looking through a file.\n\nI stood there and after a few moments he looked up at me. He looked tired. He looked his age, where he usually looked strong and energetic and maybe in his late 40s. Today he looked every bit of his nearly 60 years.\n\n\"I just talked to the Reverend. Thank you for refusing to take me off the Smith case.\"\n\nHe shook his head.\n\n\"Why thank me for something you blackmailed me into doing. You know that's the only reason I'm letting you go ahead.\"\n\n\"Myra came down and talked to me. She thought you'd say to hell with it and just fire me. Why didn't you?\"\n\nHe put the papers down and leaned back in his chair. That easy smile was gone.\n\n\"I took some time and thought it over. If I let you go ahead, I'll be crucified by cops and the African American community. If I fire you, I'll probably have most of the newspaper and television editorial writers after my head. Worse, the average Joe SixPack that doesn't read beyond the headlines will only remember that I'm another corrupt politician cutting deals. They won't remember the name, just the stink associated with it. That's what will kill me.\n\n\"Oh, don't get me wrong. I still think I'm probably sunk in next year's elections, but I think letting you go ahead may be slightly less damaging than firing you. Because you'd do every damned thing you threatened. I know you, Bill.\"\n\nI didn't sit down.\n\n\"I know you disagree with me, but I think you're wrong, Austin. The cops and the blacks will be upset with you, but you have a year to mend fences. And the media will spin this that you're an incorruptible prosecutor willing to take on his own side to find justice. Calvin Coolidge got to be president bucking cops, and Thomas Dewey almost made it as a tough crime fighter. You're not dead yet.\"\n\nEdwards gave me an almost-smile, then looked down at the desk. I think it was one of the private political, name recognition polls he had run every once in a while to see his standing in the public eye.\n\n\"You might be right, Bill, but I doubt it. And I don't think you even realize why you're doing this.\"\n\nI just looked at him curiously.\n\n\"I know you think you're doing this out of deep moral conviction, do the right thing and all that crap. But you can't see yourself clearly. Nobody can. \n\n\"From where I'm sitting, you've never recovered from Debbie dumping you. You almost went over the edge and I very graciously sent you on a cruise to recover and you wound up falling for another woman who put you back together again. Now SHE's dumped you.\"\n\nThere was pity mixed with anger in his gaze.\n\n\"You're still off-kilter. Your head's not on straight, Bill. I think you're trying to destroy yourself the way you did with alcohol. I think you want to be fired, want to be driven out of a life that's let you down, that's hurt you. I think you want to be forced out of your safe, comfortable womb here and given a chance to start over new somewhere else.\"\n\n\"I can see how it might look that way, Austin. But I don't think it is.\"\n\nHe rubbed his chin. \n\n\"Doesn't matter whether I'm right or wrong, Bill. I'm going to give you that chance for a fresh start.\"\n\n\"You're firing me anyway? After what you just said.\"\n\n\"No, go ahead with the grand jury. See it through. But once that's done, in a respectable time, I want you to resign and go somewhere else. Maybe a few months after the start of the New Year. Take until the Spring. \n\n\"But I don't want you by next Summer. That's long enough there won't be any appearance that you're leaving because of Smith. \n\n\"And,\" he said, \"I'll write you any references or recommendations you want. You are a very good attorney. Anyway, the 'Angel of Death' can probably go anywhere he wants and get a job, prosecution or defense, although it might do you good to go back on the other side for awhile. It pays better and you would have a better chance at a private life.\"\n\nWe were both silent for a long time.\n\n\"You sure that's the way you want it, Austin?\"\n\n\"Yeah, I was pissed at you, but I knew what I was getting when I made you my number one. It's just that I don't think I want you around here anymore. I think it would be bad, especially if I go down in flames next November. I'd look at you everyday and blame you. It wouldn't be comfortable for either one of us.\"\n\nFinally I said, \"All right, Austin, I'll start checking around.\"\n\nAs I walked by Myra I saw her working on her computer. She glanced up at me for a moment, but for the first time in a long time, she wouldn't meet my eyes. She knew.\n\nI sat in my office for a few minutes when I got back. I didn't lock the door but I asked Cheryl to keep anyone away that she could. I sat back, then spun my chair around to look at the pictures on the wall, the plaques, the evidence of a decade lived as a prosecutor.\n\nThe kids had been little when I'd taken the job. Debbie and I still had a good marriage. It had been a different world.\n\nNow it was all going away. I wouldn't stay here. I knew that in the moment Edwards had told me my time here was ending, which meant that at least, in a way, I'd be leaving the kids behind. I hated that.\n\nI'd be leaving a job I loved, and now hated at least a little bit. I'd be leaving Debbie. I might be able to start healing if I didn't have to see her every day and remember all the years we'd had together.\n\nThe intercom buzzed.\n\n\"You have a visitor.\"\n\nShe didn't even tell me who.\n\nI didn't turn around.\n\n\"Hello, Bill.\"\n\n\"Hello, Debbie. To what do I owe the pleasure?\"\n\n\"I had a minute. Can we talk?\"\n\nI spun around. It hit me like it did every time I saw her. Women weren't supposed to look that good when they were approaching 40. Why the hell wouldn't she show her age?\n\n\"Talk.\"\n\n\"I just wanted to ask you to be careful.\"\n\n\"Careful?\"\n\n\"I've heard about the Shawn Smith case. There's a lot of buzz among the cops that he's coming unraveled. They say he's drinking, and talking crazy talk. Talking about getting you before you get him.\"\n\n\"Talk is cheap. He knows things are coming to a head and he's scared. I don't blame him. He's got a 50/50 chance of walking away, but not many people would risk their life on those odds.\"\n\n\"You mean he's a desperate man who carries a gun, knows how to use it, has killed people with it, and thinks you might send him to prison.\"\n\n\"Pretty much.\"\n\nShe surprised me by coming around my desk. I pushed my chair back a little. She stood close enough to me that I could smell her perfume. And under it I could smell her scent. I started getting hard despite myself. She'd always had that impact on me until the last few years when had I gotten so old that that scent didn't make me want to throw her down and spread those luscious thighs? How could I have forgotten? But I had, and now when it was too late all that came flooding back into my mind and my body.\n\n\"I've always known more about your work than you wanted me to. People talk. I'd see memos. I looked at your paperwork when you were asleep. You never knew I snooped, did you? When did you start thinking I was just another stupid soccer mom?\"\n\n\"I never thought you were stupid, Debbie. You were smart enough to leave me out of your life for years, fool me into believing you were still my wife.\"\n\n\"Only because you never cared enough to check up on me. You never cared enough to wonder where I was all those nights.\"\n\n\"Because I promised you once upon a time that I was going to trust you.\"\n\n\"Trusting someone doesn't mean not even getting curious those nights I came in late and never said anything about where I was. I wasn't sleeping around, but any normal husband would at least have asked me where I'd been. You didn't even ask.\" \n\n\"You told me you weren't cheating and I believed you, which makes it worse. You didn't even have the excuse of having another woman to distract you.\"\n\nI shook my head and pushed myself as far away from her as I could.\n\n\"Stop, Deb, I don't want to rehash this shit. It's the past. What's this have to do with anything today?\"\n\n\"I know you, Bill. Better than you think or know. You don't have the sense to be afraid of things you should be afraid of. Shawn Smith is dangerous. He shot three men to death, one of them in the back. I want you to be careful, look out for Smith and make sure you have someone around you. You've got investigators, people who carry guns. Assign yourself a security detail. If nothing else, for Christ's sake, start carrying a gun.\"\n\nShe was leaning toward me and I put out my hand to stop her. I didn't want her to get close enough to touch. It was hard enough being in the same building with her.\n\n\"He's scared, but he wouldn't be crazy enough to shoot a prosecutor, especially when he'd be the first person they look for.\"\n\n\"Scared people don't use logic, Bill. You should know that. Are you trying to get yourself killed?\"\n\nI felt like a trapped animal. She just wouldn't go the hell away and I couldn't get past her without touching her.\n\n\"Look, Debbie, I'm touched that you care. I'm not being sarcastic. It's...I know you are probably worried. That's why I never told you everything that goes on here. I knew you would have worried but, really, this is not worth worrying about. I've had people threaten to kill me before, people who could have and would have if they'd had the chance, and I'm still here.\"\n\nThen she had my hands in hers and she was staring down at me. A simple touch shouldn't be that intense, but for a moment I couldn't breath.\n\n\"I'm not asking you for myself, Bill. I know I don't have that right anymore, but you have two kids who love you. You've re-established bonds with them and you're a better father now than you have been in years. Take care of yourself for their sake. I don't want to take them to your funeral. \n\n\"Not for a long, long time.\"\n\nShe released my hands and stepped back, then walked out of my office with only one glance back at me. I could feel her touch long after she'd gone. \n\nWhy, why, why the fuck had she taken Doug into my bed. I could see her in my mind's eyes screaming in pleasure as he rammed his cock into her, because she'd done it when I fucked her. And I knew I'd never get that image out of my head which meant there'd never be a tomorrow for us.\n\nOnly yesterday.\n\n#######################\n\nSATURDAY, JUNE 1, 1985 \u2013 9 P.M.\n\nI was scarfing up the remains of a cold pepperoni pizza with some lukewarm and flat Pepsi when the door to the room swung open. Debbie stepped in, as usual preceded by those unbelievable tits. \n\nIf I could have sold semen by the quart, the amount I'd wasted in the bathroom jerking off thinking about them and other assorted parts of her anatomy could have financed my college education.\n\nShe took in the picture of me on the bed surrounded by books, cold pizza, flat Pepsi and a couple of Playboy centerfolds on the walls of my room that didn't come close to being as hot as she was fully clothed and just grinned at me.\n\n\"What am I going to do with you, Bill. I guess you can take the boy out of Palatka, but you can't take Palatka out of the boy.\"\n\nI had made the mistake of telling her somewhere along the line that when we'd moved south, my Mom and had taken me to Palatka for a year before moving up to Jacksonville. Now she never hesitated to remind me because for some reason, in her mind Palatka was the ultimate hick town.\n\n\"It's Saturday night, the middle of the summer, the living is easy, professors are bored, and the girls are horny, and you're in here eating old pizza and reading textbooks and jerking off when everybody is gone.\"\n\nI guess I started to blush. Even after knowing her for two months, that mouth of hers surprised me sometimes.\n\n\"Debbie...\" I started.\n\n\"Come on, Bill, now you're going to tell me you're the only guy among thousands of males here who doesn't jerk off. Or are you getting so much action you don't need to use your hand?\"\n\n\"Anybody ever tell you you got a mouth on you, Ms. Bascomb?\"\n\nShe made a sucking motion and even though she was playing I got so stiff I couldn't have stood up right then without embarrassing myself.\n\n\"Actually,\" she said, gesturing with her hand as if she was giving a blow job, \"guys have always told me I have a great mouth.\"\n\nI tried to think of a clever comeback to that but the words stuck in my mouth. I finally said, \"Anyway, what are you doing out alone on a Saturday night? I thought that was against your religion?\"\n\nAn emotion that I could almost believe was disappointment flashed across her face for an instant, but I knew I was reading something into them that I wanted to be there and, in reality, it wasn't.\n\n\"I'm on my way over to CC's place. Some people are getting together there, listening to some music, smoking a little dope, just hanging out. I didn't feel like doing anything so I'm headed over there; halfway there I thought about you and figured this is what you'd be doing. It's depressing as hell, to be honest.\n\nShe stood there in front of me and reached out with one slim hand.\n\n\"I probably couldn't enjoy myself tonight thinking about you here alone. Come with me and eat something, have a few drinks and a couple of tokes. You might get lucky and hook up with somebody and then you wouldn't have to beat your own meat. You'll go blind if you do that too much, you know.\"\n\nI pretended I couldn't see her and gestured with my hand as if I couldn't find hers, saying, \"What happened? I'm blind.\"\n\nShe pulled me to my feet so hard that we bumped fronts and the soft pillows of her breasts cushioned the impact, but her nipples were hard enough to cut glass. She wasn't so tall that we didn't' press our important parts together. Then she moved back and she might have been breathing hard. I know I was.\n\n\"Idiot,\" she said softly, \"you know that's the only reason I hang out with you. You're so weird you make me laugh.\"\n\n\"Whatever it takes,\" and although I knew she didn't realize it, every word was the truth. If she was with me only because I made her laugh, I'd take it.",
        "Then she looked down at the bulge in front of my jeans and licked her lips, saying, \"You might want to take care of that before we get to the party. Unless you want to advertise what you've got to the unattached ladies.\"\n\nTwo months ago I could never have imagined joking so easily with anyone who looked like Debbie, but we'd become something like friends.\n\n\"It'll go away. Besides, I want to keep my powder dry just in case...\"\n\nShe just shook her head, saying as she turned to leave, \"You keep it too dry and you'll blow some poor girl's head off when you explode.\"\n\n\"But she'll die happy.\"\n\nShe looked back at me and shook her head, saying, \"I think you're a nice, sweet, shy guy and every once in a while I wonder if it's just an act.\"\n\n\"It's all an act.\"\n\nShe started out the door, wiggling that ass and I almost reached out to pat it but stopped myself just in time.\n\nCC was Charles Carter Winfield, heir to the Winfield Tobacco Fortune and more money than I'd ever be able to imagine having. Winfield himself was a roly-poly plumper with a really nice personality for a guy who lived a life 99.99 percent of the human race would never enjoy. \n\nBut, then he usually had three super hot women in his bed or jousting for a position in his bed. So who wouldn't be jolly?\n\nHis off-campus apartment was a three-story compound with eight bedrooms, game room, pool room, theatre room, room room or whatever the hell you wanted to call it. Debbie pulled up in the circular driveway larger than the house and yard I'd grown up in and let one of the attendants take the keys to her restored 64 Cherry Red Mustang and park it.\n\nWe found our way through rooms where wine, tequila, scotch and Coors, which was imported as tradition would have it straight from Colorado although it was now on sale nationally, flowed in fountains and bartenders were available with glasses, bottles, snifters and anything else your heart could desire. \n\nPot in every brand and species I'd ever heard of, as well as every form- bombers and blunts and hookahs were available from smiling waiters. \n\nJust some people hanging out. I guess in Winfield's world that's what this was.\n\nI followed Debbie as she wended her way from room to room with an ease that showed she'd been here before. I hated it, but I wondered if she was one of the hot babes Winfield fucked in tandem with any friends he felt like sharing with at the moment. If she was, so what. Winfield didn't have to force any woman into his bed. They climbed in willingly.\n\nWe found Winfield on a long couch in the movie room watching a movie called \"Back To The Future.\" which I knew wasn't going to be released until the next month. I figured I'd have to wangle a chance to see it before we left.\n\nHe turned to look at Debbie as we walked in. He had a sheet covering him and a dark complexioned beauty with naked breasts like ripe Macintoshes was obviously jerking him off under the cover. Then she dipped her head under the sheet and the bobbing shape of her head made it clear what she was doing now.\n\n\"Deb, give me a kiss,\" he said and she leaned forward. As he zeroed in on her, she turned her face slightly so he brushed her cheek. He looked at her for a moment and then at me and laughed. It was a good natured laugh.\n\n\"So the stories I've heard are true. God damn, I wouldn't have believed it. It's still good to see you, babe. I've missed you and your-\"\n\nI couldn't see her face but something flashed across his and he stopped, then added, \"that beautiful face of yours. We've all missed you. Ramone, I think, most of all.\"\n\nShe looked back at me and I couldn't read her expression. \n\n\"Bill Maitland, this is CC. CC, this is my friend, Bill.\"\n\nHe reached out and took my hand, then squeezed it as he closed his eyes and groaned. I realized he was cumming in the mouth of the head bobbing under the sheet. Debbie just rolled her eyes.\n\n\"Um, damn...\"\n\nHe just took a few deep breaths and then opened his eyes.\n\n\"So you're the knight errant that's captured our Debbie's heart.\"\n\nShe reached out to rap him on the nose, hard enough to make him draw back.\n\n\"CC, Bill's not familiar with your...warped sense of humor. Ignore him, Bill. He thinks it's funny to play with people's heads. CC, leave Bill alone until he's had time enough to know when you're joking.\"\n\nUnfortunately I had no idea whether he was joking or not, but he had to be and it was the kind of joke one of the beautiful and rich people would run on a poor kid who was completely out of his element. The way Debbie had reacted told me she didn't appreciate the joke.\n\n\"I've heard a lot about you,\" I told him, \"and it looks like it was all true. Who do you have to kill to become your friend?\"\n\nHe looked at Debbie and said, \"I like him,\" then to me, \"Make yourself at home Bill. Things get pretty relaxed around here. Find something, or someone you like and have a good time. With Debbie around, I don't think you'll have a problem finding something fun to do.\"\n\nShe took my hand and said, \"Let's go get a drink Bill.\"\n\n\"Later,\" CC said and sank back onto the couch as the head under the sheet went back to bobbing and a guy I'd just noticed slipped a hard cock into the pussy of the beauty sucking CC and started pumping her vigorously.\n\nI stood there for a moment just watching and realizing I was getting hard until Debbie pulled on my arm.\n\n\"Come on, Bill, unless you want to join the orgy.\"\n\n\"This kind of thing go on all the time?\"\n\n\"You think I know all about it? You think I'm one of the ones that winds up sucking and being fucked. Asshole.\"\n\nShe was stalking away from me and had walked out of the orgy room when I grabbed her arm and spun her around harder than I expected to.\n\n\"Debbie-\"\n\n\"Asshole - let me go.\"\n\nI let her go and then grabbed her upper arm again.\n\n\"Why are you getting pissed off at me, Debbie? You act like you're a friend of his. I expect this isn't the first time you've ever been here. Why wouldn't you know what goes on here. I didn't say you were fucking or sucking anybody. I do a good enough job of sticking my foot in my mouth without your help.\"\n\nShe jerked her arm away from me but didn't walk away.\n\n\"I have been here before, plenty of times. CC is a good guy. There's always plenty of booze, good food, good drugs. And, yes, hot guys. And fun things to do. \n\n\"But you see CC having fun and the first thing that pops into your head is that I must be fucking him. Tell me the truth. You saw her sucking him and being fucked and the first thing in your head was me down there doing that. Right?\"\n\n\"No. Maybe....look you're hotter than hell and I know guys would give their left nut to have you. Why wouldn't you have fun and CC has a reputation for having the best women in his bed? So, yeah, I guess I could see you there. But...\"\n\nI stopped because there was a hurt expression on her face that made no sense.\n\n\"But why do you care what I think about your sex life? Why would you give a second thought to me? We're \u2013 what are we? Friends, I think. I like hanging with you. But we're nothing more than that. \n\n\"You and I \u2013 you're an eagle and I'm a turtle. We travel in different worlds. I got you out of a tight spot and you saved my ass and kept me in school. I guess you must like me, or you wouldn't keep dragging me to places where I can have a good time. But again, Debbie, why do you care?\"\n\n\"I \u2013 I don't know, Bill. Maybe...maybe because....you saw me at my worst. You saw me at my slutty, stupid worst. I don't give a shit about the others, because they're all shit. But you're different. And every time I see you, I see myself there. And I feel...\"\n\n\"You remember the first time we met. I told you I thought you didn't want to be around me because I reminded you of what had happened that night. I think I was right, Debbie.\n\n\"I like you and I am grateful for what you did for me, but I don't want to keep bringing you down every time we're together. I'll go down and call one of the guys. I can get somebody to give me a ride. You stay and enjoy yourself. Thanks for getting me out of that room, for a little while anyway.\"\n\nI had made it back almost to the front door when I heard steps coming up behind me.\n\n\"Don't go away, Bill. I was being stupid. I didn't...\"\n\nI put my hand on the doorknob and sensed people hovering but nobody interfered.\n\n\"I don't want you to go, Bill.\" She put her hand on my shoulder. \"You are a friend. You're the only guy I can spend time with and not worry about when you're going to try to grab a boob or get in between my legs.\"\n\n\"Thanks one hell of a lot.\"\n\n\"Don't go all macho masculine on me. You know what I mean. I know you get hard around me, which is sweet, but I think you actually might like me as a person, apart from my tits and there haven't been many guys I've ever known that I could say that about. I like being with you. Don't go off pissed. Stay here and let's get drunk and stoned and have a good time.\"\n\n\"Shit, you can be persuasive when you want to be.\"\n\nI turned and she hugged me and couldn't help rubbing those sweet yielding mounds against me as she gave me a kiss on the cheek. It was a sisterly kiss, a friend's kiss. \n\nThere is no fucking kiss of death in the world that can compare to a sisterly kiss from a girl you want to be more than a friend to. But what could I do? I was a nice guy, and we all know how that story ends.\n\nSo I want back in and we shot pool and took a dip in his heated indoor pool and watched a porno featuring John Holmes and ate caviar on crackers, drank Tequila and shooters until we both puked, and then smoked about a pound of pot while watching a Three Stooges marathon and both laughed until we puked again.\n\nI loved that she loved The Three Stooges. Girls generally didn't get The Stooges. Oh, they say they do, but they don't. How often would I ever meet a girl who got The Stooges and could also honestly say that her boobs were bigger than the starlet in the John Holmes feature.\n\n\"Did you ever notice that I have big boobs,\" she said at some point during the evening.\n\n\"Nope, I can honestly say I've never noticed,\" I said with almost a straight face and then both of us started laughing so hard we nearly strangled.\n\nI came into and out of consciousness and at one point I noticed a big, dark haired Latin type sitting cross legged with us with Debbie's head in his lap. He leaned over to kiss her and I started to say something.\n\nHe looked up at me and said, \"So you're the hero, huh. You don't look so tough.\"\n\nDebbie opened her eyes and seemed to see him for the first time and rolled to one side and then sat up.\n\n\"He's tough enough, Ramone, tough enough. I don't think you would have done what he did, and you would have had a reason to defend me. He was a stranger.\"\n\n\"He's a nobody, a kid, Cara Mia. You can't possibly \u2013\"\n\n\"He's a man, Ramone. Being a man is more than having a big dick. You're born with that. You have to become a man and, in that, you don't measure up.\"\n\n\"You're just hurt, Cara. She meant nothing to me. She had just...heard about me and...had to satisfy her curiosity. She caught me in a weak moment.\"\n\n\"I was hurt, but that was then. This is now. Get the hell away from me.\"\n\n\"Cara-\"\n\nHe had grabbed her and was pulling her into his embrace.\n\nIt was more of a drunken slap than a punch, but it caught him on the side of the face and in the process of rising it caught him off balance and he went down. An instant later he was up. \n\nGod damn, but he was big. He looked down on me from about six and a half feet, all lean muscle and sinew. At that moment I really didn't care.\n\n\"You're a little punk,\" he said, staring down on me with the contempt that big men always have for a little man.\n\n\"A little punk who's going to kick your ass.\"\n\nThere were guys in waiters' white uniforms and two black guys even bigger and better put together than Ramone between us and then CC was standing between us.\n\n\"Guys, guys, let's not put a damper on the party. No rough stuff.\"\n\nHe smiled up at the glowering Ramone and then over at me and came over and put one chunky arm around my shoulders.\n\n\"Hey, I got an idea. Everybody, everybody who's still able to move. Get your asses out to the vans. We're going to fly down to Miami, be there in an hour or two and you can spend all day tomorrow on my dad's yacht in the Bay. You don't even need to bring along clothing if you don't want to. That's right, clothing optional. Come on.\"\n\nTo a chorus of drunken cheers, the crowd was herded out to a fleet of vans in the driveway. I looked over at Debbie. She stared at Ramone with sheer malice in her eyes and then as he watched came over to me and tucked her arm in mine, making sure to rub a big titty all over me as Ramone simmered.\n\n\"Let's go, Bill. For once, don't do the right thing. Just come with me and stop thinking about things.\"\n\nI could have resisted her as easily as I could have flown away under my own power. A few hours later I woke up in the shade of a tent that had been pitched on a gently rolling polished deck. A soft roundness cushioned my head and someone gave me a gentle kiss on the back of my head.\n\n\"Back in the land of the living?\"\n\n\"Maybe. At this moment I'm not really sure.\"\n\n\"Let's get you some coffee and something to eat if you can keep it down.\"\n\nWithin 10 minutes ship's crewmen dressed in starchy whites had given me two cups of the best coffee I'd ever tasted and within a half hour Eggs Benedict, waffles, crisp thick cut bacon, hash browns with mushrooms AND caviar, oysters on the half shell, Oysters Rockefeller, some kind of vaguely Arabic dip with thick cut potato chips and a half dozen more items.\n\nBecause I'd grown up respectably poor, I'd never eaten like that before and I'd developed a taste for things I couldn't afford that I didn't think I'd ever shake. I was in heaven. \n\nIt didn't hurt that due to some physiological quirk I'd never understand, I didn't' get hangovers no matter how drunk I got the night before.\n\nOver the next few hours the guests and CC did the meet and greet thing, I met some beautiful girls and interesting guys, a few of them very wealthy but not in CC's category. \n\nAt some point in the early afternoon, somebody suggested skinny dipping. There was a microsecond of hesitation and then one guy slipped off a pair of tiny blue Speedos and stood proudly in the Miami sunshine. Then the women started stripping and I started getting a hard-on, which grew as first one and then another set of tits and firm asses were bared.\n\nFinally Debbie looked around and as if challenged, stood up and reached down to take my hand. This time I shook my head no. This I wasn't up to, particularly looking at Ramone by the side of the ship. He had a dick that would have given a stallion an inferiority complex and he looked at Debbie with an air of complacent ownership.\n\nShe gave me a look I couldn't read and walked toward the railing. She slipped her blouse off, the bra underneath it in one quick motion and stepped out of her shorts and panties. Even the other women stared. \n\nShe had a perfect hourglass figure, slender waist and round heart-shaped ass. As she turned to stare at me with another impenetrable glance, her breasts swung on her chest, great teardrop fruit topped by heavy, swollen nipples sticking out more than an inch, the saucer-shaped, plate-sized pink areola puffed out as well. I'd never seen anything so perfectly 'suckable' in my life.\n\nThen she was over the side in one fluid motion, followed by other women and men. Ramone just gave me a nasty smile, swung that dick and then went over the side. In the next few minutes I could hear laughter, shouts, squeals, hoarse grunts. If they weren't fucking they were doing a really good imitation.\n\n\"If you're thinking they're fucking, you're right.\" \n\nI looked up and had to shade my eyes for a moment as the bright Miami sun sent bolts of brilliant lightning into my brain. By the time my vision had cleared, she was sitting beside me on one of the deck chairs that littered the deck.\n\nShe was a leggy brunette, hair cropped short to the base of her neck, but, despite the cut, there was no doubt she was female. She wore a pair of shorts cut way beyond THERE. I thought I might have spotted a few curly wisps from her crotch that proved she was a natural brunette. The rest of her, in a light blue tee shirt over what obviously were unencumbered C-cup breasts, was nice. She was pretty as well, not in Debbie's league, but pretty with nice lips and deep brown eyes, kind of a little pug nose. Not beautiful but cute. Perky would probably be the best word.\n\n\"I'm sorry?\"\n\nShe reached out in an old-fashioned handshake, which I took, and said, \"You're Debbie's pet. You probably already know this, but she's down there fucking and sucking Ramone, and probably every other guy she can get her hands or mouth or pussy around.\"\n\n\"And you are? And why the fuck should I care who she's fucking and sucking?\"\n\n\"It's okay, Bill. Don't get pissed. You have to know she's the village pump. She's fucked every guy on this boat, probably most of the crew and maybe some of the caterers. I'm Amy, Amy Sunderland.\"\n\nShe gave me a penetrating look.\n\n\"You do know she's the classic definition of a nymphomaniac, don't you? Ramone is bigger than a horse, and he couldn't keep her satisfied by himself. She used to pull trains with four or five guys and nearly work them to death.\"\n\nI sat back and sipped at a Tequila Sunrise and wondered how a small town boy wound up in a sybaritic dream of a floating orgy while my mom undoubtedly thought I was hitting the books in my lonely little Gainesville apartment.\n\n\"Again, Amy, I appreciate the news flash, but I'm just laying here enjoying the sun and a break from classes and wondering why you think I'm keeping tabs on Debbie's activities.\"\n\nShe reached out and laid one slim hand on my leg.\n\n\"Don't be so defensive, Bill. Everybody here knows the story. You risked your life to save her from a gangbang she was probably looking forward to, despite her sob story about being drugged and set up. And she's been trotting you out and showing you off to her friends as her newest acquisition. She and her friends have a lot of cars and clothes and jewelry to show off, but nobody else has a genuine hero. You're the flavor of the month.\" \n\n\"But, I wouldn't get used to it,\" she said. \"She goes through guys and cocks faster than condoms, when she feels like using them.\"\n\nShe rubbed my knee a little harder and slid her hand higher. Despite myself, I started to get hard.\n\n\"With all this information, you must be one of her good friends,\" I said tongue in cheek.\n\nShe smiled. She had a nice smile.\n\n\"We're acquaintances. Debbie doesn't have any friends \u2013 male or female. She has girls she uses and guys she fucks. Debbie is all about Debbie.\"\n\n\"Everybody looks out for themselves, Amy. What do you want?\"\n\nShe smiled and the tip of her tongue darted out as she said, \"What do you think?\" and ran her hand up to cover and squeeze my already-hard cock. I thought about it for perhaps a fraction of a micro-second, if that. \n\n\"Lead on.\"\n\nFive minutes later we were in a cabin downstairs as spacious as most hotel rooms and I was firmly inside her. She felt good and she smelled good, her lips tasted sweet and her ass was perfectly fine to hold onto while I pumped into her as fast and hard as I could. I thought I was going to cum quickly but I didn't and I was just as happy to settle into a rhythm.\n\nOn each downward stroke she gasped and grunted a little and dug her fingernails into the backs of my arms, every once in a while murmuring, \"yes...yes...like that..that...\"\n\nI pulled her legs over my shoulders, which tended to be my favorite position because it allowed you a full stroke and she moaned a little more often. I happened to glance at her face and noticed her eyes open and a smile on her lips. She was looking at something behind me.",
        "I slowed and looked behind me. Debbie stood in the doorway. She had her shorts and a top back on. Her golden hair hung heavily around her shoulders, still wet. There was no expression on her face, none at all.\n\nI felt bad for just an instant, guilty. Why, I had no idea. She wasn't mine and you can't cheat on a friend.\n\nI started fucking Amy even harder and this time she did gasp and groan as I hit bottom, hitting her hard enough to bounce us on the bed.. I wasn't showing off. Or maybe I was. When I looked back around the doorway was empty.\n\nSuddenly I couldn't hold back and I was gushing into Amy's warm center and she was putting a death grip on my arms as her pussy spasmed around me. Then I fell to lay beside her and we both tried to get our breath back.\n\n\"It never fails,\" she said in a whisper. \"Guys get a whiff of her and they start squirting. I wish to hell I could figure out what she's got, other than the obvious.\"\n\nI wisely kept my mouth shut.\n\nWhen I got back up on deck I learned that Debbie had taken a water taxi into Miami with a couple of girls and guys. They were going to do a little shopping. I didn't see them again until 7 p.m., when I rode in to the small private airfield where CC kept his private jet waiting.\n\nAs I stepped toward the midsection of the plane I noticed Debbie sitting there in the window seat. There were seats set out in rows of three. I hesitated but then sat down on the outside seat facing the other window in the same row, directly across from her. \n\nShe looked toward the window and the front. Anywhere but at me. We didn't say anything for a few minutes as the plane readied for takeoff.\n\nWhen we were in the air, I leaned over to her and said, \"If I didn't say it before, thanks for twisting my arm to come with you. It was fun.\"\n\nShe still wasn't looking at me.\n\n\"I could see that. How long did it take that bitch to get your cock out? Thirty seconds? You must have given her a real tussle.\"\n\n\"It just came up,\" I said and I couldn't help grinning.\n\nShe turned to me and gave me a look that would have frozen water.\n\n\"I noticed you weren't wearing a condom. If you start getting any burning when you pee, see a doctor. That skank probably is passing around a half dozen known bugs and some that medical science hasn't' named yet. You'll be lucky if you just get the clap.\"\n\nI couldn't believe she actually seemed jealous, pissed at least. I'd never seen her that way since the first day she walked into my room.\n\n\"That's funny, Deb. She thinks very highly of you.\"\n\nIf a look could have stripped flesh from bone, hers would have.\n\n\"I know just exactly what that scummy bitch thinks of me. I bet she told you I was giving Ramone and every other guy a blowjob and a fuck in the water, didn't she? Well, watch Ramone carefully when he gets off this plane and you'll see he's limping a little. That's what happens when you nearly get one of your balls torn off. \n\n\"I told the son of a bitch to let me alone but he wouldn't listen. He really thinks that if he just flashes that dick in front of a woman she turns to jelly. He's been reading and watching too much porn.\"\n\nShe turned her gaze back to me and said, \"And you, you moron, you wouldn't take off your shorts because you didn't want me comparing your dick to Ramone. That was it, wasn't it?\"\n\nWhen I didn't answer, she shook her head.\n\n\"Guys! You think we walk around with tape measures and if you're a quarter inch shorter than another guy we're going to throw you back. If it wasn't so stupid, it would be funny.\"\n\nShe lowered her voice.\n\n\"Look, Ramone is a freak. Nobody I know of has got a dick like his. Anybody that hangs with us knows about him. Guys bring their girlfriends around and, if the girl is any way decent, their guy doesn't need to worry about being ditched. Of course, he nails a lot of the girls who pass through CC's. But...\"\n\nHer voice got even softer. I had to strain to hear her, but I heard every word.\n\n\"You already must know that I was with him - and he was fantastic. There is something..exciting...about being with somebody that big. But it wasn't just his dick. I...cared for him. I really did. I didn't go with anybody else while I was with him, but the bastard couldn't keep it in his pants and I finally realized he never would.\n\n\"So, I dumped him and I dated a few guys and then another winner got me drunk and doped me for that gang bang that you interrupted. I've been having a lot of luck with guys recently.\"\n\nHer expression softened.\n\n\"I wish you had gone swimming with me. We would have had fun.\"\n\nShe shifted back to stern.\n\n\"But you would rather have been fucking that slut. They talk about me, but she's been fucked so many times by doubles and gang bangs it's a wonder you didn't fall in.\"\n\nIf I'd said, \"it would have been a hell of a way to go,\" I think she would have slugged me so I just leaned back in the seat and I was snoring, according to her, before we'd been in the air ten minutes.\n\nOf course, five days later I was on fire when I pissed and I wound up at the campus health center and taking pills and wishing that I wasn't such an easy lay. Debbie laughed until she almost choked when she came by my apartment two days later and she could hear me moaning when I peed.\n\n\"A friend would not take enjoyment in another friend's pain,\" I told her sternly.\n\n\"Just remember this the next time you start thinking with your dick.... friend.\"\n\nThe summer went by and we went out for pizza, went to a couple of campus plays, took in some movies on campus and off. Mostly we just hung out at my place, helping each other with our classes because we were both going full time all year, watching TV, talking about girls and guys and sex and life and what we wanted to do with our lives. \n\nShe was so smart it was scary. I'd always known I was book smart, but she was one of the few girls I'd ever known who could match me and didn't bother to hide how smart she was. I guess when you're built like she was and looked like she did, you could be smart and guys would still be all over you.\n\nThe summer went by even though I wanted it to stop, to stay. I loved every minute I spent with her and she seemed to enjoy my company. I knew this was going to end sooner or later. She could have been going out with a different guy every night, being wined and dined and having serious money spent on her.\n\nI wanted to ask her every day and every night why the hell she was wasting so much time on me, but I could never get the words out.\n\nThen it was Friday, July 19. I hadn't seen Debbie in nearly two weeks, which was kind of unusual. But I'd been busy getting ready for end of course exams as she had and she'd been doing stuff with her family, including going out of town to Disneyworld for a week.\n\nI was still jerking off to fantasies of her as regularly as ever, but I missed her. I'd gotten to like her razzing me and grabbing a pizza on the spur of the moment and talking about anything and everything that popped into our heads.\n\nShe had called me a couple of days before to let me know she was back in town. As usual, we didn't make any plans. She popped in on me whenever the spirit moved her. \n\nThis time, I decided, I was going to be the one popping in. Let me take her out for once. Even if it wasn't a real date, it would feel more like one.\n\nI had a 1969 Volkswagen Bug that my mom had bought in '80 and I had kept running. I thought it would probably be the only time Debbie had ever had the experience of squeezing into a Bug on a night out.\n\nI pulled up to her sorority house, a two-story structure on sorority row. Or rather, I had planned on pulling into the drive in front but it was a Friday night and the place was jumping. I had to pull into a parking space nearly a block away. It was almost 7 p.m. but still fairly light. \n\nI was walking toward her sorority wearing my best jeans and a short sleeved shirt and clean tennis shoes, thinking what it would like to walk up like a real date when I saw her walking out of the front door. She wasn't alone. \n\nA tall black guy had his arm around her waist and as I watched, he leaned down because he must have been 6-6 or 6-8. She leaned into him and kissed him.\n\nI stood there and watched the two of them walk out without letting go of each other. He took her to a white Caddy and opened the passenger side, giving her another kiss as she stepped in. It wasn't unwelcome. She stretched up to kiss him again. Then he closed the door and walked around to the driver's side.\n\nI thought I recognized him. He was Owen Davis-Smith, junior center for the Gators and a lock to go with a million-plus contract to the NBA during the next year. I had even seen him play a couple of times when I'd been given tickets to a few Gator games. \n\nI stood there in the rapidly dying sunlight, blinking like a deer caught in the headlights of an oncoming 18-wheeler. \n\nI couldn't think for a minute. Why was I so surprised? Not surprised, stunned. Why shouldn't she be going out on a date on a Friday night? I hadn't called her, hadn't asked her if she was free. I'd just assumed that she was waiting by her phone for the pleasure of my company.\n\nI didn't even realize what I was doing until I found myself walking back to my Bug, starting it and heading after them. It was stupid. She was out on a date. What the hell was I doing? But I followed their tail lights as they drove away from Sorority Row toward the city's Restaurant and Nightclub Row.\n\nThe traffic was fairly heavy for Gainesville but I stayed with them. I wasn't thinking about what I was doing, maneuvering automatically while my head was somewhere else. The Caddy pulled into Merriweather's. Why wasn't I surprised?\n\nIt was crowded but not full so when the Caddy pulled into a spot about two rows from the entrance, I was able to find a spot two cars over.\n\nI looked over and through the windows of two cars I saw a blonde head and a black one exchanging kisses and then I saw her head vanish, reappear, drop again and reappear and I didn't need to be a genius to know what I was looking at. She had told me that guys loved her mouth and I could understand why.\n\nFinally it stopped and she rose again and wiped the back of her mouth with her hand. They kissed again and then he came around to open her door. I just slid down in my car and they walked in with his arm around her. I didn't think I'd seen them separated since they'd walked into my view at the sorority house. It was as if they couldn't stand to be apart for even a second.\n\nThey vanished into Merriweather's. I thought about leaving. I was still thinking about it an hour and a half later when they walked back out to the Caddy. They were laughing at something. She poked him in the side with her elbow and pretended to swing at him. He caught her hand and pulled her into another hug. It wasn't even a kiss. It was the hug of two people who knew and enjoyed each other.\n\nI followed them to Bugsy's, a pretty hot nightclub on the east side of town where they stayed until 1 a.m. and then to a private home on the city's west side near Highway 301. It was a two-story Tudor. \n\nHe pulled into a two car garage and closed it down behind the car. The lights came on in the living room, then in an upstairs room, probably a bedroom. After about 30 minutes the lights went off.\n\nI sat in the darkness until 3 a.m. when I finally regained sanity. It felt like I had literally been out of my mind, not there, for hours. I tried to think back and remember what was going through my head, but there was only a blank there. \n\nThis was crazy, literally crazy. A girl I knew and had been hanging out with for a few months had gone out on a date, given some lucky, rich, talented bastard a blow job, and now was being fucked silly in his bed. It happened every night somewhere. She wasn't my girlfriend, my wife, the love of my life. She wasn't cheating.\n\nNo, she was just doing what any healthy, beautiful young woman her age should be doing on a Friday night and I was hiding in the dark, stalking her, spying on her like some jealous psycho. This wasn't me. I'd never been like this about any woman.\n\nI drove back to my apartment. It was 3:30 in the morning. Two of my roommates' doors were closed, with the traditional tie around the doorknob. What were the odds both those bastards would get lucky while I was out playing Peeping Tom. \n\nI'd stopped along the way and bought a bottle of Scotch. I sat in the dark, filled a shot glass and started sipping.\n\nI felt the temptation to slip away into that warm and comfortable haze again but stopped myself. It felt like scratching at a scab over a bleeding wound. It hurt a little and made it possible to ignore the terrible pain just below the surface.\n\nI had thought we were friends. We had joked and laughed together and once in a while she had swatted at me, or punched me in the ribs when I was aggravating her. But she had never hugged me like that, never kissed me except in that 'sisterly' way, never held me THAT way. \n\nShe and Owen were friends, probably bed buddies. Debbie and I were...what? Nothing except a girl hanging out with a guy she felt gratitude toward and probably more than a little pity.\n\nBut I guess I must have known deep down. It was why I had never gotten up the courage to pat her ass, to try to kiss her, because ours was a mostly one-sided friendship, one-sided on my side.\n\nThe asshole who was fucking Debbie was tall, athletic, rich and had a life ahead of him I couldn't even come close to imitating. I'd never had a chance from the very beginning, not from the night at the frat house. \n\nWhy the fuck had she come to see me? Why the fuck had she played at being a friend, joking about blow jobs and masturbation and keeping me constantly revved up, knowing she'd never touch me the way she'd touched that black bastard.\n\nHalf the bottle of Scotch had vanished and Mark and one of my other roommates, Dave, were holding me down while two girls shouted in the background. My right hand hurt like hell and my head was hurting from all the yelling. I didn't know what the hell was going on. \n\nMy tongue felt fat and heavy but I managed to mumble, \"Mark, what....what...\"\n\nMark had my right hand which throbbed with my heartbeat held down with the weight of his body.\n\n\"Bill, Bill, calm down. Stop fighting us. Just stop man.\"\n\n\"Mark...what....let me up....let me up...\"\n\n\"I will, Bill, as soon as you relax. Stop fighting us. Can you relax?\"\n\nI lay back and realized I was on my bed. After a moment, Mark and then Dave eased up and somebody turned on the overhead light and I looked around numbly. \n\nIt looked like a tornado had swept through the room. The chairs were snapped and lay in pieces, the dresser had been overturned and the contents strewn around the room and there was a big, big damn hole in the wall next to the bed.\n\nMark and Dave warily got off the bed and left me lying there. Two girls in various states of nudity came up behind them to stare at me warily.\n\nI realized my hand hurt so bad I wanted to scream. I looked down at it and it looked like I was wearing a red catcher's mitt.\n\n\"What-\"\n\n\"That's what we'd like to know,\" Mark said, kneeling down beside the bed. \"We were...sleeping..and all of a sudden all hell broke loose in here. You had the door locked and were throwing stuff around. We had to kick the damned thing down. By the way, you're going to have to pay for these repairs.\"\n\nI looked at the hole in the wall and at my hand.\n\n\"All you,\" Mark said. You punched right through the sheet rock and I think you might have broken one or two of the two-by-four support beams. I think you broke your hand all to pieces as well.\"\n\nMemory flooded back into me.\n\n\"Get me to the emergency room, Mark. I'll pay for all the repairs. I'm sorry.\"\n\n\"What happened, Bill?What in the world happened?\"\n\n\"Growing pains, Mark. I just grew up tonight. I'll explain it to you someday.\"\n\nDespite all the booze I'd had during the night, I was feeling stone cold sober, mostly cold. I wanted to shiver, despite it being in the 70s. After a few tense minutes, Mark and Dave helped me up and I staggered with Mark to my Bug.\n\nI spent five hours at the Shands Teaching Hospital emergency room where I was x-rayed and splinted and told if I was lucky, I might not have done any permanent damage to the bones, tendons and tissues of my right hand and wrist.\n\nI insisted on driving Mark back to our apartment. It was 9 a.m., the sun was shining and Gainesville was green and beautiful. He got out and was getting ready to come around to my side when I said, \"I'm not coming in, Mark. I'll be back in a few days, but I think I'm going to go home.\"\n\nIt felt good to be alone and on the road from Gainesville back to Jacksonville, driving through the small towns and rural countryside of Alachua County. Then I was back on Jacksonville's west side and pulling into the driveway of the small, two bedroom house that had been my home for more than a decade.\n\nI was turning the key in the front door when it opened and my mother took one look at me and gasped, then wrapped her arms around me. She was a small woman, but she seemed to envelop me.\n\n\"Oh, Bill....\"\n\n\"It's OK, Mom. I just want to sleep.\"\n\nShe followed me to my old bedroom, which she'd kept untouched as if I'd never left. I didn't even pull back the sheets. I lay down on my old bed and collapsed into the soothing darkness.\n\nI was disoriented when I woke up. The sun was shining through my bedroom window. Had it been only a few minutes?\n\nMy mother was sitting on the bed next to me.\n\n\"How long.....?\"\n\n\"It's Sunday morning, Bill. You slept more than 24 hours.\"\n\nI rolled on my back and held my hand in its cast up to see if it was still throbbing.\n\n\"Why don't you ever listen to your mother, Bill?\"\n\nI just gave her a curious look.\n\n\"I was trying to spare you. I knew she was going to hurt you, to hurt you bad, and she has. She will again if you go back to her.\"\n\nI just looked at her.\n\n\"You kept calling her name out. I knew you were seeing her and I knew this was coming. She is beautiful and you're a man and I knew you were going to want her, but she is no good.\"\n\nI lay back and took a deep breath. My heart was beating and so I was still alive. I'd survived the worst night of my life. I hoped it would the worst night I'd ever know.\n\n\"We're done, Mom. No need for more warnings.\"\n\nI stayed in Jacksonville for two days and went back to my apartment. It was awkward wiping my ass with my left hand, I couldn't write worth a damn and driving was a pain but it was okay. Then she called.\n\nMark poked his head in my door the following Friday and said, \"Debbie's on the phone.\"\n\n\"Tell her I'm not in. You haven't seen me today. No, tell her I'm visiting my mom in Jacksonville.\"\n\nHe looked at me with a surprised expression. I hadn't told anybody except my mother, and that an edited version, of what had happened.\n\n\"Tell her, Mark.\"\n\nSaturday I stayed at the campus library till past 9 p.m. when they threw me out, hit a McDonald's for a late supper and saw a movie at the Campus Union, making myself as invisible as possible. I didn't get home until nearly 2 a.m. \n\nMark had a tie on his door knob but when I walked in he opened it, stuck his head out because he was obviously not wearing anything and said, \"She came by about 9 p.m. and again at midnight. What is wrong with you, man?\"\n\n\"Leave it alone, Mark.\"\n\nI avoided her the rest of the week, once sitting quietly in my locked room while Mark apologized saying that I had been playing the mystery man for more than a week and they hadn't seen me much. Mark knocked a few times and finally told me through the door, \"It's alright. She walked out and drove off.\"\n\nHe stepped inside my room and said, \"I'm your friend and roommate, Bill. Explain to me how any sane, straight male could send that away over and over.\"",
        "\"Someday. Not now.\"\n\nHe shook his head.\n\n\"Who the hell would have thought it would happen to you, of all people. You know this is hopeless, right? You can't hide from her forever.\"\n\n\"I can try.\"\n\nForever lasted until the following Monday. I was walking into my sociology class when she stepped out in front of me. I had to put on brakes to avoid bouncing into her and I didn't want, above all, couldn't handle hitting those tits. \n\n\"If I didn't know better I might almost think you're avoiding me.\"\n\nI didn't look her in the eye, just stared beyond her to the doorway leading into the lecture hall and said, \"Sorry, Deb, but I have to get in there. I can't afford to be late.\"\n\nAs I tried to slip around her she moved to block me and I had to raise my eyes to meet hers. There was a hint, but not quite, of a smile on her lips.\n\n\"Yeah, I know. They'll throw you out of school if you're late to a sociology class during the summer session. They're really strict this time of year.\"\n\nI had done everything I could do to avoid this, but it was here.\n\n\"Look, Debbie. I really do have to get to class. Don't take this the wrong way, but I've got things I've got to get done and I don't have the time to sit around and talk.\"\n\n\"You really are avoiding me, aren't you?\"\n\nI met her gaze straight on.\n\n\"Yeah. We, uh...I just decided that there's no point....no point in our spending time together any more.\"\n\n\"So hanging with me for a pizza or talking in your room or seeing a movie once in a while is just too much of a strain on your over-booked social schedule?\"\n\nThen she noticed my right hand for the first time and her eyes widened.\n\n\"What happened? Did-\"\n\n\"No, this wasn't Ramone or any of your legions of boyfriends warning me off, just an accident. Anyway, Debbie, I appreciate your taking the time to take in movies with me and talk, but it's not going anywhere and it never will. You need to go back to your kind of friends, and I'll go back to my life. It's been fun, but...\"\n\n\"Just like that?\"\n\n\"No, I thought about this a lot. We're two entirely different kinds of people. Two different lives. It makes no sense whatsoever for us to hang out. Thank you, but let's call it quits.\"\n\n\"You didn't think about talking with me about this?\"\n\n\"About what, Deb? We're friends. We hang out. I like you, you like me, but we're just friends and our lives and our interests would have split us apart sooner or later. We're not 'breaking up.' You have to have been together to break up. We were never together. I'm not going to run away when I see you, but I have my own friends, things I do and they're not things I would do with you. Maybe we'll see each other around. We probably will. I hope you don't take this the wrong way.\"\n\nShe stepped back.\n\n\"Oh. When you put it that way, I won't.\"\n\nShe gave me a look I couldn't read, but that happened a lot with her.\n\n\"See you around....friend.\"\n\nShe walked away without looking back. When she was gone I sagged against a wall, feeling like I'd been gut punched.\n\nI didn't see her, or at least talk to her, for two weeks. I saw her a few times, but she just nodded at me as she walked the campus with friends. A few times I saw her friends huddle around her as we passed, but they never said anything to me. I thought it would get better with time, but I was wrong.\n\nIt was near midnight on a Thursday two weeks later. I was lying on my bed reading a beaten-up paperback version of a late 1960s alternate history science fiction novel called \"Pavane,\" particularly the section titled \"The Signaller.\" It was the saddest damned thing I'd ever read, the story of lost love and what it means to live forever without love. \n\nI'd been reading it when I was 15 years old and Sarah Newman, whom I'd loved deeply and without measure as only a high school sophomore could love, had told me she'd fallen in love with the 6-foot-4 right guard of the Lee High Commodore football team. It had taken me a summer to bounce back and I'd read \"The Signaller\" probably a hundred times.\n\nFor some reason it had become my emotional touchstone whenever my heart was broken. Since I was alone, and would be alone forever, reading about somebody even worse off than me had a therapeutic effect.\n\nI envisioned my lonely life through my twenties and thirties and forties and beyond. I would have affairs and there would be women. As a successful and dashing attorney there would be women, but there would be an unyielding mass of ice where my heart had been that would never thaw.\n\nI realized objectively how silly I was being, but I hurt too badly. I wished a thousand times I had never taken that frat house job and never got mixed up in Debbie Bascomb's life. Then realized that no matter what happened, I was glad I was there for her that night.\n\nThe door to my room swung open and she was standing in the doorway. I absentmindedly noted the low-cut blouse that showed the swells of those D-cups, the tight white slacks that hugged her curves. But it was her eyes that drew me in. Her lips seemed thinner and her cheekbones more pronounced. We just stared at each other for a couple of minutes and I wondered if I'd fallen asleep and was dreaming.\n\n\"How did you...\"\n\n\"I had a key made,\" she said, showing it to me.\n\n\"What....what are you doing here?\"\n\n\"I talked to Dave the other day. He told me how you hurt your hand.\"\n\nWhen I didn't say anything, she stepped into the room, knelt beside the bed and took my cast hand in her two hands.\n\n\"What happened Friday night, Bill? That Friday night.\"\n\nI remained silent.\n\n\"Everything changed that night. What happened? Why did you smash up your room and run home to Momma and decide you didn't want to be around me anymore?\"\n\nI still couldn't talk.\n\n\"Did you see us, Bill? Is that what this is all about. I didn't see you. Were you at the restaurant, or the nightclub?\"\n\n\"I didn't see anything except your black boyfriend that night.\"\n\nI didn't recognize my voice.\n\n\"And his cock. When you were sucking him off in his Caddy.\"\n\n\"You were spying on us? Why?\"\n\n\"I decided for once I was going to surprise you. Got dressed and went to pick you up, but after I saw you loving on your friend I realized you were never going to have any room in your life for a stupid asshole like me.\"\n\n\"You followed us.\"\n\n\"You do have a head on your shoulders. Yeah, I followed you to Merriweather's and saw that blowjob, and to Bugsy's, and then to \u2013 that was his house, right? I thought maybe you'd gone there to talk UF basketball with him. But by about 3 a.m. I figured you were in for the night and just gave it up.\"\n\n\"Did you come up and peep in the window? Did you see him fucking me? Did you see him hammering that big black dick of his in my pussy. Did you jerk off watching us? Isn't that what peeping toms and voyeurs and perverts do?\"\n\n\"No, sorry to disappoint you. I just sat out there in the darkness while you were fucking him and finally figured out there was no you and me and there never would be. I'm slow. It took me months to figure it out. You threw me with those conflicting signals. But I finally got the message.\"\n\n\"You're slower than fucking molasses, Bill. Slower than snails. And perceptive as a rock. The first month or so after we met, I did go out with other guys, and I fucked them. But...\"\n\nShe straightened up and did something that made those phenomenal breasts quiver deliciously. I was enjoying the show. I doubted I'd ever get as good a view again.\n\n\"I started enjoying the time I spent with you. You're a smart, funny guy. You treated me with respect and I could tell you...had feelings for me, even if you never said anything. I enjoyed being with you and \u2013 I just stopped seeing other guys. I figured, sooner or later.... That's what CC was talking about. They couldn't believe it. \n\n\"It got to be a month, and two months and three months that we'd been hanging out, dating without calling it dating. I was wondering if you might be gay, until I saw you with Amy. Then I realized you were just stupid, and last Friday Owen called me. We've known each other since I was 15. We both went to Forrest.\"\n\nShe stared at me defiantly.\n\n\"I like fucking him. He is good. Of course his dick's a little small. He says he's the only black guy he knows with a white man's dick, but he knows how to use it, and, I like him. I was also getting very, very horny. I've never gone three months without some action, not since I was 13. So since you've NEVER asked me out on a date and you hadn't called me, I went out with him. I sucked him off and I spent the night in bed with him.\"\n\nHer voice trailed off.\n\n\"So...\"\n\nI sat up in bed and looked up at her.\n\n\"So why are you here, Debbie? Owen busy with another one of his basketball groupies tonight?\"\n\n\"Why don't you have any self-confidence, Bill? You act like you're a complete loser. You don't have much money and you're not the most handsome stud on campus, but you're brave and smart and funny and Amy said you were pretty damned good in bed. But you would have let Ramone have me that day on the yacht if I'd been inclined that way. You didn't even try.\"\n\n\"It's called realistic, Debbie. I know what I am and what I'm not. And guys like me don't end up with women like you.\"\n\nShe looked at me sadly.\n\n\"No, they don't, if they're like you.\"\n\nWe just looked at each other. I expected her to turn around and leave.\n\n\"You know that you've never touched me. You've never tried to kiss me. Girls - women - don't throw themselves at guys. Maybe a slut like Amy. But women want a man to come after them. If you want someone that looks like me, if you want any woman, you have to take a chance. You have to step out. I like guys, but I'm not going to lay there and spread my legs and beg a guy to take me. I'm better than that.\"\n\nShe stepped as close to the bed as you could get without being on it and looked at me with a gaze that was partly challenge, and partly hope and partly fear.\n\n\"You may not be the best looking guy I've ever been with, not the biggest, damn well not the richest. But I think you're the best guy I've ever been with. It doesn't matter though because we'll never be together if you don't grow a set of balls.\n\n\"You have to take what you want, Bill. So, the question is, do you want me?\"\n\nI knew that someday I'd regret this because I knew that someday she'd tear the heart out of my chest and leave me bleeding. I knew what I should do. But I did what I'd known deep down I was always going to do, no matter what it cost me.\n\nI rose from the bed and pulled her down to me.\n\n\"More than my last breath...\"\n\n##################\n\nFRIDAY, SEPTEMBER 16, 2005\n\n\"How could I have forgotten all of that, doctor? Am I really crazy?\"\n\nTeller leaned forward and puffed on his pipe. She had told him what had happened with her aunt and the aftermath in which the embittered older woman had predicted a betrayal by Bill that apparently had never occurred, but which had sunk into Debbie's brain deeply enough to color her feelings toward her ex-husband.\n\nHe let the redolent smoke out of his lungs and allowed himself to feel a measure of self-satisfaction. He now had a pretty good handle on the forces that had wrecked the Maitland marriage. Most, if not all, of the pieces had fallen into place. Debbie Bascomb hadn't quite put them all together and he wouldn't push the pace.\n\nFor her sake it was important that they came out at the proper time. She needed to accept and understand what had happened, her role and responsibility and her ex-husband's responsibility as well. Psychiatry was nothing if not a way to learn to live with the actions and mistakes of the past, to accept the reality of what was done and could not be undone, and to find a way to make a new life.\n\n\"No, you're not crazy, Debbie. This is a somewhat extreme example of a common phenomena, but it happens often. Memories that are too painful to live with are buried in our subconscious. Embarrassments, disappointments, heartache. They are forgotten over the years and never surface until some event or trauma brings the memories forward.\"\n\nShe leaned forward and clasped her hands together.\n\n\"I could understand forgetting what happened to Clarice, but how could I possibly have dreamed that it happened to me?\"\n\nHe took his pipe out of his mouth, tamped the tobacco down, relit and took in another soothing lungful of aromatic smoke. The delay was deliberate to allow her more time to think about her question. Pipe smoking was a wonderfully innocent way of working delay into a conversation.\n\n\"You've told me about the role that your aunt played in your life. You told me that she was your second mother in every important way. In fact, she was a combination of a mother and sister. When you were going through your wild teenage years, she was the woman you trusted with your deepest secrets you couldn't go to your mother with. She was the person who never betrayed your trust, who always \u2013 to use the common expression \u2013 had your back no matter what.\"\n\nDebbie's eyes misted.\n\n\"She was a wonderful woman. I miss her more now than I did after she died. I guess...I guess forgetting what happened was a way of forgetting how much I lost when she died. If she....if her marriage hadn't collapsed and she had been around when I started to....fall out of love....with Bill, I don't think things would have happened the way they did.\"\n\n\"She would....she would have have made me get my head straight. I can hear her now. She would have told me to either tell Bill I was leaving him or....to...forgive my language but it was what she would have said...fuck him until his eyes crossed and drag his flabby ass to a gym and get him back into shape.\"\n\nTeller saw the raw emotion and wondered if she had ever come to terms with the emotional impact of her aunt's death. Grief and anger at a cheating husband who had contributed to the older woman's suicide were other parts of the puzzle that she could not have known were poisoning her mind and emotions about her ex-husband while it was happening.\n\n\"Even now it's obvious how strongly you felt about her. Even more than the emotional bond was the identification you had with her. She was you in a very real way - blonde, attractive, busty. She taught you, you said, to have pride and confidence in your sexuality and your body. \n\n\"Without training, she was able to provide the support and encouragement you needed to transcend what was actually early sexual abuse by older men. Women who are initiated into sex at such an early age often fall into a destructive pattern of sexual relationships that mirror those early experiences. With her help and guidance you grew into a strong, sexually aggressive but sexually healthy woman.\"\n\nHe released another plume of tobacco smoke and observed the tears streaming slowly down her face.\n\n\"What happened, psychologically speaking, was that you saw yourself in your aunt as her marriage collapsed and she desperately sought the approval and sexual desire of other men to replace what she had had with her husband. You knew, consciously, that the assault happened to your aunt but, in your subconscious mind, you saw yourself as the victim. Because she was you and you had mirrored her life experiences.\" \n\nShe nodded.\n\n\"I can see that. I told you about my nightmare....the one where I saw myself growing old and my breasts were drooping..I looked so damned old. It was terrifying. I know now that I was reliving the way I felt when I was cleaning her up in the shower afterwards. She didn't look that bad, but I couldn't believe she was that old. She wasn't even 60, but she had gotten so old...so old....\"\n\nTeller nodded. She was putting the pieces together.\n\n\"She had always been so beautiful. When I was a little girl I wanted nothing more than to look like her. Men loved her. Even married men who were friends of her husband were always flirting with her. She told me once she'd never be unfaithful to her husband, but that there was nothing as exciting as knowing another man wanted her. I guess....\"\n\n\"What?\" Teller asked gently.\n\n\"That was the way I was with Bill. I loved him, the lazy bastard, and I never cheated on him after we got together in college, but I loved teasing men. I loved knowing they wanted me and I never really thought there was anything wrong with it. That was Clarice.\"\n\nTeller probed a little more deeply.\n\n\"In the bad years at the end of your marriage, when you...engaged in manual sex with several men....did you really think that it was acceptable because Bill had betrayed you first, as Clarice's husband had cheated on her?\"\n\nShe wiped her eyes with one of the tissues in a box in front of her.\n\n\"I don't know. I've thought about it. I told him I never believed it, not really. But...I don't know. Do you suppose I really always deep down believed it...and that's why I've been so angry at him?\"\n\n\"I don't know. What do you think?\"\n\nShe smiled.\n\n\"You know, that's the first time you've hit me with typical shrink language, Dr. Teller.\"\n\nHe laughed.\n\n\"I know. I couldn't resist. To answer your question, it is possible that doubts about your husband's fidelity, even if you consciously denied it, might have sparked anger at him. Particularly since, just as you identified with your aunt, you probably identified Bill with her husband.\"\n\nShe looked troubled. \n\n\"Maybe...but somehow, I don't think that would be enough to have made me ....feel the way I did...do sometimes.\"\n\n\"You're probably right, Debbie. Why don't you think about it until our next session. Try to come up with any other reasons for this deep, stubborn, apparently intractable anger.\"\n\nHe wondered if she would come up with it on her own. She was getting close.\n\n\"There was something else I wanted to talk to you about, doctor.\"\n\n\"We have a few minutes left on this session. What would you like to discuss?\"\n\n\"I know we talked about this one time before...but....I appreciate your help. I'm not throwing up and I feel a lot better about myself and my life now. It's just that I can't help wondering what's the point of going much further. Even if I find out what made me so angry at Bill, what purpose does it serve?\"\n\nShe rubbed her hands together in a classic unconscious exhibition of uncertainty and stress.\n\n\"I mean, even if I discover why I was so angry, why I wanted out of the marriage...the fact is I'm out. Our marriage is history. He...I think sometimes he hates me and most of the time I can't blame him. If he had done to me what I did to him, even though I still think he left our marriage first, I'd never forgive him. \n\n\"I think sometimes that the only feeling I have left for him is guilt. I know there are times I feel flashes....of something like what I once felt for him. But they're only flashes, so what's the point of finally understanding why everything fell apart.\" \n\n\"I told you once, Debbie, that you could stop these sessions at any time. I think, honestly, that you would eventually figure out on your own the source of the emotions you feel toward your ex-husband. Similarly, although complex, I think you will eventually realize what destroyed your marriage, and he does share a portion of the responsibility for that.\n\n\"What you learn about yourself and Bill won't change the past. What happened, happened. The scars you both bear won't vanish. Your marriage is history. But, understanding what happened, and why, might make it easier to form a viable relationship with him in the future. You still share two children and eventually there will probably be grandchildren. You will be part of each other's lives for the rest of your lives.\n\n\"No matter what happens between the two of you, you are still a young woman. You will love someone else again. You might yet have more children and start a new life. I can't help but think you will be better able to forge a new life if you understand what led to the end of the old one.\"",
        "She was silent for a moment.\n\n\"Thank you, doctor. You're probably right that we'll always be a part of each other's lives. Right now I'm losing sleep worrying about him and that cop, Shawn Smith. I don't think Bill appreciates just how dangerous he is, just how much danger he is in.\"\n\nTeller reached out and took her hand in his.\n\n\"I'm aware of the situation, Debbie. I think you underestimate your ex. Bill Maitland might be a driven man who takes risks, but I don't think from my experience with him that he's a foolish or reckless man.\"\n\n\"I hope you're right, doctor, but nobody is bulletproof - sometimes I don't think Bill realizes that.\n\n#############################\n\nTUESDAY, SEPTEMBER 20, 2005 3 p.m.\n\nI have two accounts on my office computer. One is my business account, for anything official. The other is a personal account. I'm on the business account a hundred times a day. I'm on the personal account maybe once or twice a week. My mom still isn't real 'hep' with computers, as she would put it. My kids call me on the phone, and there are very few other reasons for anyone to email me.\n\nBecause I almost never go on it, I've set up a pinging alarm for any email messages that do come through. If I'm out of the office, it will be pinging when I turn the computer on, and if I'm on, it will give me the same heads up.\n\nThe phone had rung five minutes earlier and Cheryl had told me I had Phil Howser, the President of the Fraternal Order of Police (FOP) union on the line. I had talked with him a number of times over the years and he'd always seemed reasonable and not too hard nosed for a cop and a union rep at the same time.\n\n\"What can I do for you, Phil?\"\n\n\"You really need to ask, Mr. Maitland?\"\n\n\"You too? It used to be Bill.\"\n\nHe laughed.\n\n\"You never can tell. Someone might be listening in. You know they've got your picture up on some of the targets at the shooting range?\"\n\n\"Seriously?\"\n\n\"No, but it wouldn't surprise me. You have some guys over here seriously pissed off at you.\"\n\nI'm not surprised. I'm told that Smith is popular over there. Somebody prosecuting him is not going to get any love letters.\"\n\nHe laughed again. \n\n\"I don't know. I think a lot of guys over here would love to screw you.\"\n\n\"A cop that can use puns. Be careful or they'll drum you out. You probably read without moving your lips.\"\n\n\"The only reason I'm not offended about that Bill is that I've been drinking with you at some of the joint State Attorney/Sheriff's office functions and I know you're just yanking my chain. That's why I haven't come down on you with my guys, because I can't see you being the bastard that people are saying you are.\"\n\n\"I'm a sweetheart, Phil, but I'm not going to back off taking the shooting to the grand jury.\"\n\n\"When do you plan on doing it?\"\n\n\"I'd hoped to get it to them this week, but some other things are going on and the foreman and vice-foreman of the jury both had personal crises pop up at the same time. Technically we don't have to give them time, but they wouldn't be able to concentrate with that stuff on their minds. They've had those positions since the grand jury was convened and they know what they're doing, besides being good leaders. I decided to wait.\n\n\"So it will probably be next week, maybe later in the week.\"\n\n\"That gives us a little time. Look, Bill, my guys want me to do SOMETHING. They pay their dues and sometimes they get the feeling they don't get all that much for their money. It would do me good to show them that at least you were willing to meet with us, let us put our two cents in, and maybe, we might change your mind.\"\n\n\"Never going to happen.\"\n\n\"You know that and I know that, but they don't know that.\n\n\"I don't have a problem meeting with you, Phil. When and where?\"\n\n\"How about Friday, at the FOP Hall on Atlantic Boulevard. We don't ever do anything official on Fridays because no one will show up, so it's a good time for the FOP officers and a few key people to meet. Come by and we'll have some coffee and maybe wings and you can talk candidly with us about what's going on. Sound good?\" \n\n\"Yeah. Let me ask you something before you go. I'm hearing rumbles that Smith is coming apart at the seams. He braced me in the sandwich shop across from the courthouse the other day and I seriously wondered if he was going to try something in front of a dozen witnesses, including four or five armed cops.\n\n\"My ex-wife was just in here telling me I need to start carrying a gun because she's hearing the same rumbles over in the PD office. Do I need to start carrying a gun, and if he's having a breakdown, how come the Sheriff is letting him walk around carrying a Glock?\"\n\nThere was a silence and then Phil said, \"He is getting a little raggedy, I'll admit and he's drinking too much. He's got a lot of friends and they're watching him, babysitting him really. Knight won't pull him because he and everybody else thinks if he's removed from duty, it will just make it certain that the grand jury will decide he's crazy and indict him.\"\n\nAnother silence and then: \"He's a good man, Bill. Or, he was. The shooting rattled him...a lot. He's killed men before, but I think the way it went down...it even got to him. I didn't say that, if anybody asks, but even his friends know he went too far. Then, afterwards, his fiancee walked away. He, uh...I think he thought she was the one. I don't think he's been right since she left him. Maybe you can understand that.\"\n\nThe computer pinged. I ignored it. I thought about what Howser had said. Yeah, I could understand a man going to pieces after losing a woman.\n\n\"Then, the strain of having this grand jury thing over his head so long, and that civil lawsuit that could wipe him out financially, it's all played on his mind. That's why his friends are trying to help him hold it together until this passes, one way or the other.\"\n\n\"Should I start carrying a gun?\"\n\n\"It probably wouldn't hurt.\"\n\nI'd almost forgotten the email but after I hung up it popped back into my mind. I called up my personal account and typed in my password.\n\nIt was an email from adjardin@aol.com. I just looked at it for a long time. Eventually I hit the button and opened it.\n\n\"Dear Bill:\n\nI hope this letter finds you in good health and spirits. Paris in the Fall is even more beautiful than I remembered it. Jacksonville and St Augustine and your beaches are very different, but I know you love them as I do Paris. I hope you are as happy today as Philippe and I are. We have found that being apart has made us cherish our marriage more than we once did.\n\nI have told Philippe how you showed me your home town and the great kindness you displayed to me while I was there. I will never forget the two weeks we spent in your city. By the by, Philippe also thinks the Fleur de Lis pendant you gave me is exquisite and I want you to know that I wear it proudly. He said it is the kind of gesture he expected from you, because that is the kind of man you are.\n\nAs I know you will understand, I cannot express the joy that seeing Andr\u00e9 again has given me. He is my life, and as I have done every year since he was born, I am having to struggle with the thought of ever going back to the Bonne Chance. Perhaps this year, my decision will be different.\n\nFinally, I hope that you have found peace in your personal life. I do not know what decisions you will ultimately make about your marriage but, regardless of what happens with Debbie, I want you to know that after knowing you for such a short time, I have no doubt you will find a good woman to share your life with.\n\nI hope you will pardon me for making such a personal judgment, but you are not the kind of man who can lead a life of aimless affairs. You need a woman in the center of your life, and you deserve one. Once you get past the pain you are currently in, I know you will find one.\n\nRegardless, Bill Maitland, I want you to know that I will think of you often. When I wear your Fleur de Lis, I will remember you on the Bonne Chance, and in Jacksonville and St.Augustine. Philippe, too, sends his well wishes and wants me to remind you that friendship, like love, transcends distance and time, and that he is your friend.\n\nWith deepest regard, your friends, Aline and Philippe.\"\n\nI didn't' realize until the letters blurred that I was crying.\n\n#############################\n\nWEDNESDAY, SEPTEMBER 21, 2005 3 p.m.\n\nThe alarm buzzer went off as I stepped through the security booth at the front of the courthouse. The two bailiffs moved toward me drawing their pistols until they both recognized me at the same instant.\n\nI raised my hands into the air very quickly as all activity came to a sudden stop around me.\n\nThe nearest bailiff, an older guy with a few springs of whitish hair still sticking up on an otherwise bald head, put his pistol down but didn't holster it as he stepped toward me.\n\n\"Mr. Maitland?\"\n\nI pulled my coat back to reveal the Glock in a shoulder holster.\n\n\"I have a special permit in my jacket pocket if you'll let me get it out, or you can fish it out yourself.\"\n\nHe looked at the other bailiff, then said apologetically, \"I'm sorry, Mr. Maitland, but could I see the permit. Take it out slowly, okay?\"\n\n\"Sure, I'm sorry. I meant to take the Glock out and show you the permit before I went through the machine, but my mind was somewhere else.'\n\nI showed him the permit signed by the Chief Judge of the Circuit and Austin Edwards. He looked at it for a moment, then said, \"I really am sorry, but do you mind if I call up to the Chief Judge's office. It's just that this is kind of unusual, even for a prosecutor.\n\n\"Sure, go ahead,\" I said, noticing out of the corner of my eye women and men who worked in the courthouse and knew me by sight edging away from me. Just another story to add to my courthouse legend. There were already stories circulating throughout the courthouse about several members of the largely Hispanic night cleaning crews refusing to enter my office, the lair of the \"Angel de la muerte,\" or Angel of Death.\n\nIt would have been funny, except they were as serious as hell.\n\nMaybe they had a point. Half the defense attorneys in the building would plead out clients rather than take me on in court and even some of our own people would take the stairs down rather than ride with me in an elevator. \n\nI had asked Cheryl about it a few days before and she had told me, \"You probably haven't noticed Bill but, except for the two weeks when that French woman was here, most of the time, if you're not involved in a case, you usually walk around with a frown, or you glower at people. Or...you just...shit, Bill, you walk around looking like your best friend just died. It's kind of a downer.\"\n\nI hadn't realized it. I hadn't realized it because even before my marriage went south, I hadn't been the most light hearted of guys. The job kept me from being a happy go lucky soul. But I didn't know that somber had shaded into gloomy and I knew that today I was probably grimmer than usual.\n\nMy mind kept drifting back to Aline's email. You didn't have to be a genius to read between the lines. She had managed to patch up her marriage and she had her son back. How could I be unhappy at that? I wanted her to be happy, but that meant I'd never see her again. That made me unhappy.\n\nThe bailiff interrupted my musings, handing me the permit and apologizing for nearly drawing on me. I assured him there were no hard feelings and took the Glock back after I'd gone through the screening machine again.\n\nI had gotten the Glock from an investigator, oddly enough the one who'd spotted me with Aline at the restaurant, and was given some minimal instruction in how to use it since I hadn't had any firearms training in nearly five years. So now I was carrying and it felt awkward as hell, but I remembered Debbie's words. I didn't want either BJ or Kelly to come to my funeral until they were a lot older.\n\nI had barely walked into my office when Cheryl buzzed me and I picked up the phone. Mitch McConnell, one of our investigators, was on it, talking so fast that at first I couldn't make out what he was saying.\n\nFinally I understood and I nearly dropped the phone.\n\n\"Oh shit. What hospital?\"\n\nI barely remembered to alert security as I went out but I had a driver waiting before I hit the street and he drove me in one of the SA car pool to Baptist Medical Center and went to park while I headed to the cardiac section. McConnell was waiting for me as I walked into the waiting area.\n\n\"How bad is it?\"\n\n\"Pretty bad,\" he replied. \"Pat Peterson, the cop assigned to watch him, heard him gasping and found him lying on the floor in the bathroom at about 2 p.m. He was having a really hard time breathing and complaining of a pain in his right shoulder and arm. I just talked to the doctor examining him and he said it's pretty obvious he's had a major heart attack.\"\n\nThe treating physician, a youngish cardiologist who looked like he had just started shaving, came out a half hour later and confirmed what McConnell had told me. \n\nWilbur Bell, our star witness against William Sutton, had had a major heart attack. They'd had to go in and clean out four blocked arteries.\n\n\"What's the prognosis?\"\n\n\"At his age and with his health problems, not real good. I'd give him 50/50 at best of making it through the night - much worse odds of making it a week or two.\"\n\n\"Shit, shit, shit. Look doctor, the State Attorney's Office, that is the state of Florida, will be paying for his care. Do whatever he needs to improve those odds. If you manage to bring him back, my office is going to be very grateful and our gratitude can be very profitable or useful in a lot of ways. Understand?\"\n\n\"Yeah, but you understand he's an old, very sick man and I'm not a miracle worker. I'll do the best I can, but it's going to be a long shot.\"\n\n\"Sometimes you have to go with what you've got and hope for luck.\"\n\nBefore I left I told McDonnell to arrange with the Sheriff's Office for an around-the-clock security guard to watch over Bell.\n\n\"You really think Sutton would try to get to him in a hospital?\"\n\n\"I don't know, but any man who'd do what he did wouldn't mind throwing the dice if he thought it would save him from the Death Chamber. He or his mother could hire someone. Nature might do his dirty work, but I don't know if he's religious enough to rely on God taking the old man out without some help.\"\n\nOn my way back up to the office, I wondered if I was glowering again. Probably. That son of a bitch Sutton was halfway home to getting rid of his most dangerous witness. Without the old man I wasn't sure I could nail him, and this was entirely out of my hands. There was nothing I could do to alter events. It was up to the doctor, the old man and God. It was, to put it mildly, irritating as hell.\n\nThe only good thing about it was that the anger had driven out the sadness of knowing I'd lost the second woman I'd loved in my lifetime. So far I was batting zero for two.\n\nFRIDAY, SEPTEMBER 23, 2005 3 p.m.\n\nI sat in my chair behind my desk and thought bad thoughts. Wilbur Bell had made it through the immediate crisis, but he wasn't out of the woods yet. He could still die and the moment he did Barry Mahon would start pushing for a speedy trial to keep us from digging up any other proof we could use against Sutton. Not that I had any idea what possible other evidence we could dig up at this late date.\n\nThe phone beeped. Cheryl told me, \"You have a visitor.\"\n\n\"Is it who I think it is.\"\n\n\"Yes.\"\n\n\"Would you remind her that we're divorced.\"\n\nI could hear her from outside my office.\n\n\"Would you remind Mr. Maitland, whose ego is swelling beyond all belief since he's lost a little weight, that every woman, particularly every official with the Public Defender's Office, doesn't come up to his office out of uncontrollable lust for his body.\"\n\nI just grunted. Why the hell did she have to become more like the girl I'd first fallen in LIKE with AFTER we were divorced. If she would just remain a bitch the rules would be clearer.\n\n\"Johnny August would just file a complaint with the Big Man if I refuse to see her, so send her in.\"\n\nShe stepped inside and closed the door behind her. She was dressed in green and white, crisp and trim. She was obviously still hitting the gym religiously. The dress was cut high enough to show off her legs without appearing too slutty. I knew she was still seeing the writer, Clint Abbott, and I wondered who else she was seeing. Looking like this, there had to be someone.\n\n\"So what is so urgent from the PD's office?\"\n\n\"Nothing. I lied.\"\n\nI just stared at her.\n\n\"Oh, get a grip on yourself, Bill. I didn't come here to seduce you. I just wanted to see you packing.\"\n\nShe smiled and I couldn't help remembering the first time we'd met, all those years ago. She had the same smile.\n\n\"I heard through the grapevine that you took my advice and got yourself armed, a shoulder holster and all. I just never thought of you as a pistol-packing prosecutor and I wanted to see what you looked like.\"\n\nVery slowly and deliberately I opened the jacket I wore and let her see the Glock in its shoulder holster. I'd received a little instruction in the easiest way to reach in with my right hand and slip it out quickly.\n\n\"Don't get fancy,\" my instructor had said. \"Get it out, hold it in a two-handed grip, point it in the direction of your target and start squeezing the trigger. The Glock is a fairly rapid fire handgun. You might get all 10 rounds off in a few seconds. Throw as much lead as you can in the direction of the target. \n\n\"Don't get fancy, don't worry if you miss with some. Don't pull it unless you're in fear of your life and then do your best to kill the bastard.\"\n\n\"Wow,\" she said, grinning that same sexy grin I remembered as well as the smile. \"It's true what they say. A guy with a big rod is really sexy.\"\n\nEven as she said it she realized what she'd said and the grin froze. My thoughts probably showed on my face as well.\n\n\"I am so damned sorry, Bill...so sorry. We can't even joke around anymore, can we? You know I didn't mean....\"\n\n\"I know, Debbie. Someday we're going to have to get over tip toeing around...our history. Someday, But anyway, thank you.\"\n\n\"Thank you?\"\n\n\"I'm carrying this Glock because of your warning, which was echoed by other people. I hope I don't need it, but if I do, I'll have it because of you.\n\n\"I hope you don't need it either, Bill. But...I'm glad you have it.\"\n\nShe couldn't think of anything else to say. She turned around and I remembered once again that she was as nice to look at going as she was coming. I must be getting better, because I suddenly wondered what Heather MacDonald or Meagan Whitcomb or even Myra might be doing this weekend. \n\nDebbie might have broken my heart and Aline might have crushed up what few little pieces were still intact, but at least my manhood had been restored. If Debbie could make me horny again, there was still hope for me.\n\nFRIDAY, SEPTEMBER 23, 2005 - 3:45 P.M.\n\nAs she had walked into her office three doors down from Johnny August she noticed Dennis Leary bending over Annette Nettles' desk, whispering something into her ear. The red-headed PD giggled at something and Debbie could have sworn she reached out to stroke Leary's crotch.\n\nIt was only a second and she could have been mistaken, but she was certain of what she had seen, which wouldn't be a problem except that Annette was married to a DEA agent and she had heard some hair raising stories about his exploits in the never-never land between law and disorder that was the DEA. He was a dangerous man by all accounts.\n\nAnd Leary happened to be the best attorney on the staff, second only possibly to Johnny August. She decided she'd have to keep her eyes open and possibly have an informal chat with both Leary and Nettles. While it wasn't on her list of official duties, keeping your best litigator from being shot by a jealous husband was somewhere in there.",
        "Thinking about jealous husbands, she kicked herself again mentally. It was as if some dark part of her unconscious kept pushing her to say the things that would hurt Bill the most. She really hadn't meant the crack about \"big rods\" but she'd known the minute it left her lips what it meant to him and she'd seen it on his face.\n\nWhy in the fuck didn't all men come with a one-size dick. It would make things so much more simple. Bill could have handled her falling for a taller, younger, flat-stomached stud more easily than the fact that Doug had a bigger dick. It was something that hit men where they lived, pun intended, and women had to walk gently around comparisons of dick size.\n\nOf course she knew a lot of the damage she had inflicted, deliberately, in hot blood. It didn't make it any better because she was furious with him for known and unknown reasons. It still had left scars that she knew went back twenty years to when they had first met. He had always been insecure about his size, and like a miserable bitch, she had aimed her verbal blows at his Achilles heel.\n\nBut it didn't do any good to keep kicking herself for what was done. If she could just watch her mouth in the future for similar gaffes, they might one day get to the point where they were just a man and woman who were once married and were still co-parents.\n\nAt least, at least she thought with some satisfaction, he had gotten to the point where he could look at her lustfully again. She knew that look and he had been stripping her with his eyes. It had been six months since he could look at her just as a man and not a hurt husband. It was progress.\n\nLeary stepped into her office, grinning like a little boy who had just gotten away with something. Despite herself she felt a tingle where she didn't want to feel a tingle. Damn, she had promised Johnny August to keep her legs together, and she knew he and Bill were friends, and she was getting regular sex from Clint, but still....\n\n\"Just wanted to pass on a little bit of knowledge, Ms. Bascomb.\"\n\nBill had just given her that look and the Irishman was stripping her with her eyes and her nipples were getting hard and scratchy and she suddenly hoped desperately that Clint was home and free tonight.\n\n\"And that would be, Mr. Leary?\"\n\n\"A friend told me Bill is going to pow-wow with the top brass at the FOP tonight at their headquarters on Atlantic.\"\n\n\"He's going to go into the lair of the enemy? Is he going alone? Does he have a bodyguard with him?\"\n\n\"I don't know. I don't think so, knowing Bill, because, these guys aren't crazy. Phil Howser, the FOP head, will be there and other top guys. I don't think Bill's in any danger.\"\n\n\"That's probably what Custer told his top lieutenants before the party at the Little Big Horn.\"\n\nThe grin faded and he said, \"You really are worried about him, aren't you? Does he know you harbor feelings for him?\"\n\n\"This whole damned office is nothing but a nest of frustrated romance writers. No, I don't harbor feelings for him. But he was my husband for nearly 20 years. He's the father of my children. Of course I'm worried about him. When is he supposed to go there?\"\n\n\"I heard 7 or 8 p.m.\"\n\n\"Okay, thanks for the information. And...\"\n\n\"What?\"\n\n\"Nothing. Thanks.\"\n\nHe stared at her tits for a moment before leaving. She decided to let the matter with Annette ride. She'd get some information before getting into that.\n\nShe knew Leary was right and Bill's going to meet with the FOP was no big deal. Nothing would or could happen. Still....\n\nShe got out at 5 p.m., headed to her gym where she sweated for an hour and watched lithe young female bodies whose breasts hadn't started to droop and whose asses were still perfectly firm attract the envious gazes of young and no-so-young men. \n\nShe received more than her share of lustful glances, so it wasn't jealousy of those firm young bodies that hurt. They might be better on paper if you were scoring individual features, but she knew that one on one there wasn't a one of these young hardbodies she couldn't walk up to and steal a boyfriend from, without breaking a sweat. Her tits and ass still gave her the edge.\n\nBut still, it was depressing. Maybe she was more ripe, more desirable, but it was the ripeness of fruit almost ready to spoil. They had youth and she couldn't match that. The damned clock only ran in one direction, and for her it would always be downhill.\n\nShe couldn't shake the depression the gym visit left her with. She was alone. Both BJ and Kelly were out, BJ spending the weekend at her parents and Kelly living there full-time now. She had called and talked to Kelly the night before. It had taken time, but she was beginning to repair the breach between them. It would heal.\n\nShe grabbed a Lean Cuisine meal from the freezer and microwaved it, then ate it without tasting it. She thought about calling Clint, but for some reason even that didn't appeal to her now.\n\nIt was Bill, she realized. Walking into a building filled with armed cops without a second glance backward. Why the hell would he do something like that when he could have met with them in his office or on neutral ground. Stupid, Stupid, Stupid. For a smart man, he could be so stupid.\n\nShe looked at the clock. It was 7 p.m. He was already there or soon would be. She walked into the den and turned on the Television from Hell. She had thought about getting rid of it because every time she watched it memories of her old life would come flooding back. Bill had been like a kid at Christmas when he came home one day to find that she had purchased it and had it delivered without telling him.\n\nThey had been walking through the Orange Park Mall one day when he'd come across a display for the largest television in the world, with the most gadgets and whistles in the world of electronic entertainment. He had been entranced. Of course, he'd already turned into the world's Number One couch potato.\n\nTheir marriage had been dying, but there were times when flashes of the old feeling she'd had for him hit her hard, and it had that day. Maybe it was a way of atoning for the things she had already done to betray him, but she had loved the look on his face when he walked into the den.\n\nThinking about those days, she watched the television without watching it and at 7:30 she suddenly turned it off with the remote, grabbed her purse and keys and walked into the garage. She got into her 2004 Nissan 350Z, opened the garage door, and pulled out.\n\nShe'd just sit outside the FOP Union Hall and listen to her PD police scanner with channels the public didn't have access to - just sit outside and never even let Bill know she had been there. It made no sense, but she couldn't sit at home tonight.\n\nFRIDAY, SEPTEMBER 23, 2005 - 7 P.M.\n\nI pulled up to the one story building that was the Fraternal Order of Police union hall. The sprinklers had just shut off and I had to step through puddles on the sidewalk walking up. I opened the door and walked in. There was a hallway with a door leading to a large hall where meetings of the membership were held.\n\nI spotted a big bald guy in uniform in the doorway and he waved to me.\n\nI thought his name was Smith or Jones, something like that. He was a Zone Sergeant, the head man for one of four zones the city was divided into for police coverage.\n\nHe didn't offer to shake hands, but he didn't spit on me so I supposed that was progress.\n\n\"Smith? Jones?\"\n\n\"Delwin,\" he said. \"Steve Delwin.\"\n\n\"Never forget a name,\" I said, smiling. He just shrugged. As I walked into the hall I saw about ten men in uniform sitting around a table hitting a coffee pot and three boxes of Ronnie's Wings. I recognized most of them, having met or worked with them over the years.\n\nPhil Howser was a tall, thin guy who hadn't put on two extra ounces since I'd met him nearly ten years before. He got up and came around the table to shake my hand, then introduced me to the guys I knew and a few I didn't.\n\n\"Thanks for coming by,\" he said, then glanced at me again. I was wearing a light jacket because it was getting cool in the evenings.\n\n\"You're carrying. Did you get armed because of what I said?\"\n\n\"You and a few other people,\" I said. \n\n\"You wouldn't have to be carrying if you weren't being such an asshole about Shawn,\" said a big blonde who I recognized as a Narcotics Task Force Lieutenant named Martin.\n\n\"Buddy,\" Howser said, but I waved him off.\n\n\"He has a right to his opinion. I know I'm not popular with a lot of you guys right now. That's why I accepted Phil's invite to come out and talk to you tonight. Could I get a cup of coffee before we start talking?\"\n\nWe talked for an hour and I went through three cups of coffee. Four of the eleven cops were black but they didn't seem any more irate than the white cops. Maybe it's true they all bleed blue blood.\n\n\"I'm doing what I think is right,\" I told one of one of my harshest critics, a SWAT commander named Meyers. \"I know you think I don't have the right to sit in judgment on the actions a fellow cop took in a moment of crisis that I have never gone through. I know you feel a bond for him. But...I understand what you're saying and you have to understand where I'm coming from. When you're on the street, when you're in a crisis situation, you can't wait around for guidance on what to do, for a consensus to form that will guide your actions. You have to take the action you think is right and hope it works out.\"\n\n\"That's where I am. There is no one to tell me what to do. Austin Edwards is the boss, but I'm the guy that has to make the ultimate decision because he's delegated that authority to me and I've been doing it for five years. No matter what happens, I have to live with the result, the fall-out, and I have to be able to look in the mirror when it's all over and live with myself.\"\n\nI looked over at Lieutenant Martin.\n\n\"I know everybody seems to think I have it in for Smith. I have to ask myself, why? They don't give me a bonus every time I send a cop to prison. I don't need any more headlines. I can probably coast on the \"Angel of Death\" crap until I retire. I didn't know Smith before all this started. We've never crossed paths.\"\n\n\"Maybe it's because you identify with those redneck crackers and especially that wife-beating sub-human who was married to my fiancee before I rescued her.\"\n\nI looked up and saw Smith standing behind Delwin. The two of them had walked into the back of the meeting quietly. As Delwin moved aside I saw the Glocks in each hand. Delwin threw his hands up.\n\n\"He caught me by surprise, Phil. I never expected him to show up here.\"\n\nPhil put his hand down to his Glock which he carried in a holster at his side. Smith trained one Glock on him, letting the other one wave back and forth.\n\n\"Don't do it, Phil. We've been friends for a long time, but if you pull a gun on me to save this piece of shit I'll kill you.\"\n\n\"Shawn, put the guns down. You blow me away and one of these guys will take you down. Look at the odds here. Use your head.\n\nSmith bounced from one foot to the other, moving the pistols in his hands back and forth rapidly. He was either drunk or high, or both.\n\n\"You really think so, Phil? You sure one or more of them isn't on my side. How'd I know about this little meet 'n greet where my brothers are plotting with the asshole that's trying to railroad me into prison. Maybe a few of them are with me, and when you guys start firing, the guy next to you you're counting on you to have your back is going to blow your brains out. You willing to take that chance.\"\n\nThe cops sitting around me began to look at each other warily. I could see they were starting to worry.\n\n\"Now, Phil, all of you, take your Glocks out of your holsters, with your left hands except for Martinez. You use your right. And lay them down on the table.\n\nHowser shook his head, but didn't move his hand.\n\n\"I don't give up my gun, Shawn. Not for you or anybody else. If you want to, you open fire and I'll do my best to kill you before I die.\"\n\n\"Looks like a Mexican standoff. Okay, keep your guns but keep your hands away from them and in plain sight. Everybody just stay cool. Anybody moves for a gun, and we all start dying.\"\n\nSmith turned his attention to me. His eyes were glazed, fiery, the pupils dilated. He had to be on something strong.\n\n\"Now you, Mr. Prosecutor. I hear you're armed. Open that coat and reach up with your left hand and take it out with just the tips of your fingers.\"\n\nI did it, moving very slowly. \n\n\"Okay, good. I'm glad to see we're communicating. It's too bad it had to come to this, but you just kept coming after me.\"\n\n\"Shawn, stop,\" Howser said. \"You're having a breakdown. With any luck, you'll get a suspended sentence and have to go into a hospital. It's not the end of the world. There are other jobs out there. You'd be a good private security guy and it might wind up being a better world for you. It's not worth being laid in your grave.\"\n\n\"I'm not going to be laid in my grave. This son of a bitch is. I'm going to walk away from this nightmare and you guys are going to help me.\"\n\n\"You're crazy,\" Martin said. \"Look Shawn, I've been fighting for you. But no way are you going to shoot Maitland in cold blood and have the rest of us back you.\"\n\nSmith looked at him and said, \"In a few seconds, with no warning, I'm going to put a bullet in his head. He'll be dead before any of you can do anything, assuming you want to. Once he's dead, what reason do you have to open fire on me? \n\n\"You, Martin? You remember five years ago, when we moved in on that Coke dealer in Avondale. You were first in the door when he leveled that sawed-off shotgun at you. It jammed, but I pushed you out of the way before we knew it was going to jam. I'd have taken the blast. I would have died for you, you son of a bitch. Because you're my brother and we have each other's back.\n\n\"Once this cocksucker is gone, you're going to forget that and kill me for this scum? He'll be dead and killing me won't bring him back. \n\n\"Every one of you, I've had your back. Martinez, that pretty wife of yours would have divorced your ass and taken your two kids if she'd ever found out about that bitch you kept up in that apartment on 20th Street. But I took the bullet for that and said she was mine and it cost me my girlfriend at the time. But I did it.\"\n\nDelwin just shook his head.\n\n\"I've been on your side, but it's just crazy, man. No way can you get away with it.\"\n\nThe police radio Howser carried crackled and voices came out of it at the same time that the radios carried by Martin and Meyers did.\n\n\"Howser, come back. Answer please.\"\n\nSmith looked around the room.\n\n\"Turn the radios off.\"\n\nNobody did.\n\n\"Why not,\" Smith continued, answering Delwin's comment, \"There are 11 cops here, 12 counting me. You're the leaders. If we stick together and give the same story, how are they ever going to break it? Is any jury in the world going to believe 12 cops lied?\n\n\"I've got a throwdown that can't be traced back to us. He came here to talk to you guys and when I showed up to try to talk sense to him he suddenly snapped and pulled it out and was going to shoot me. People will believe it. They know he's crazy. Everybody at the courthouse knows about how he broke down. They know he's been out of control since that slut wife of his dumped him.\n\n\"That's why he tried to kill me. He told me in front of all of you that I was just another guy like the one who stole his wife. Only I stole the wife of a white man. That's why he hated me, because I was another wife stealer. I tell you, people will believe it.\"\n\nHowser just shook his head and looked like he'd swallowed something sour.\n\n\"No, Shawn. You've gone so far around the bend you don't know how crazy you are. It won't work. Even if you kill Maitland and throw your gun down, none of us are going to let you walk or perjure ourselves to save your ass.\"\n\nThe radios continued to crackle with messages ordering the holders of the radios to check in. No one moved to touch any of the radios.\n\nSmith smiled. It was so confident it raised the hairs on the back of my neck.\n\n\"You'll lie for me. Otherwise I'll tell them that you let me walk in and shoot him and didn't raise a hand to stop me. You can deny it, but there are 11 of you and one of me. Everyone is going to be asking, how could 11 armed cops not stop ONE man. You may not serve time, but you're not going to be cops for that much longer and you may wind up serving time.\"\n\nHe grinned again.\n\n\"Besides, you said it yourself. I'm crazy. At worst I'll go to some nice mental hospital and after a few years I'll be cured and get out. I might even meet some cute nurse while I'm being cured.\"\n\n\"A good plan.\"\n\nSmith and everyone else looked at me.\n\n\"But it has a few...just....a few flaws the size of the Grand Canyon in it.\"\n\nSmith's smile was frozen on his face.\n\n\"Tell us, Maitland, what are the flaws. You going to strike me down with your Angel of Death powers?\"\n\n\"No, nothing like that, more down to earth. You mind if I take something out of my jacket pocket? I'll do it slowly.\"\n\n\"Why not. You're about to die. The rest of you, keep your fucking hands away from your guns. I might only get a couple of you, but two of you at least are going to die. Get it out, Maitland.\"\n\nI reached into my pocket and pulled out a device the size of a cigarette lighter. I held it up very slowly, and as Smith watched I pressed a button. After a few seconds I hit another button.\n\n\"....I've got a throwdown that can't be traced back to us. He came here to talk to you guys and when I showed up to try to talk sense to him he suddenly snapped and pulled it out and was going to shoot me. People will believe it. They know he's crazy....\" \n\nI stopped the recording and watched his face, then looked around at the others. Howser and a few others who were smart enough looked ahead, like a chess master planning out moves three or four steps in advance. They knew. Even if Smith had planted friends, they'd know.\n\n\"I hope you guys won't take offense, but I always tape conversations like this. No one will ever hear it, unless they need to.\"\n\n\"So fucking what? You're going to give it to me or I'll take it off your dead body and destroy it. No one will ever hear it.\"\n\nMoving very slowly and deliberately, holding the recorder in my left hand, I touched two small prongs on the end.\n\n\"This is the latest model, Shawn. Maybe you haven't seen them. They're great. It records but it also transmits. There's a relay link in my car which boosts the message and sends it to a record in my office, in a locked desk. \n\n\"You can destroy this, but Monday morning there will be people listening to this conversation. It's digital so it's recorded everything since I walked in here. Unless you guys plan on raiding my office, and good luck with doing that without leaving so much evidence behind that my office won't need the recording.\"\n\nThe tone on the police radios had turned to desperation before the calls suddenly stopped. The place was very quiet all of a sudden. \n\nI looked at Shawn directly and made myself smile.\n\n\"Oh, and by the way, I'm not giving you this. Shoot me and take it.\"\n\nBefore he could react I turned so my back was to him.\n\n\"Shoot me in the back, Shawn. You've had experience doing that so it should come easy. Try explaining to your fellow officers, and the guys from my office, how you happened to shoot me in the back as I was attacking you.\"\n\n\"Turn around, goddammit. I will shoot you in the back if you don't.\"\n\n \"But that's not the only flaw in your plan. Just the biggest. There are others.\"\n\n\"Maitland, turn around.\"\n\n\"Shawn, dammit, don't, don't,\" Howser shouted.\n\n\"Your finger gets one inch closer to that gun and I'm killing you, Howser. Don't make me. Delwin, Belmont, keep your fucking hands clear of your guns.\"",
        "They were keeping him occupied so I continued.\n\n\"Actually, the biggest hole in your plan is the simplest and it's the one that could send every one of you to prison, or jail, or just to another job. \n\n \"Say you destroy the recorder and maybe it malfunctioned tonight and there is no record in my office. Then all of you have to decide if you're going to lie for Smith.\n\n \"If you lie and agree with Smith that I pulled out his throwdown piece, the first question from everybody is going to be \u2013 why did I pull out a throwdown that NOBODY knows anything about when I've got a perfectly usable Glock that everybody at my office knows I'm carrying and which I've been trained by our people how to use? Maybe you can explain how I pulled out a hidden throwdown, but it's going to stink to high heaven.\n\n \"Of course, you could forget about his throwdown and fire my Glock after I'm dead and that would make for a simpler story. Of course, that still leaves you with the question of how I got shot in the back while attacking Smith\n\n \"But that's not your REALLY big problem. Suppose you decide to hang together and lie for Smith. \n\n \"Get real. Twelve men are going to keep a secret that could send people to prison. \n\n \"You're cops. You know that's not going to happen. Some one will get drunk, or get an attack of conscience. \n\n \"And then it won't be just being kicked off the force. It will be conspiracy to aid and abet first degree murder. It will be being an accesory after the fact, and they'll probably nail you for accesory before the fact because they won't believe a word you guys say. \n\n  \"All of you, every one, will spend ten, maybe twenty years in prison because Edwards will make an example of you.\"\n\n  I stopped and took a deep breath, wondering if my world would end in the next second. \n\n  \"And even if you tell the truth and they don't charge you for letting a man be murdered in front of you, like Smith said, you're you're going to be laughing stocks in your own world. No cop is going to respect 11 guys that let one guy with a gun buffalo them. \n\n  \"The story ever gets on the street, and it will, expect to find a lot of bad guys trying you. But you won't be on the street.\n\n  \"Austin Edwards doesn't love me, but you can't let cops go around killing prosecutors. Bad for business. He'll pressure Knight and before too long you guys will be gone.\" \n\nIt was so quiet I could hear men shifting positions in their chairs, their asses stuck by sweat to the plastic. I could them breathing. Smith sounded like he had asthma, couldn't catch his breath.\n\nI pointed to the table and said, \"They have napkins here, Shawn. Maybe you ought to dry your hands. I imagine you're sweating pretty badly right now. I wouldn't want your fingers to slip.\"\n\nWhy I said that, I don't know. I don't think I have that big a death wish. I think it was just so after he killed me, the cops might tell my kids that story. They would remember me as not being afraid, able to say something cool in a tight spot.\n\nUnfortunately, as I pointed to the napkins the overhead fluorescent lights had sparkled on the Fleur-de-Lis ring. I didn't want anything that would make me want to live so badly right now.\n\n\"Those are the biggies. But I would understand you guys backing him up. You are brothers, after all. Yeah, and brothers in blue are loyal.\n\n\"Martinez, I know your wife will understand. I saw her at that FOP picnic. God, she is hot. Those tits and that ass, and really pretty. When they send you away for a few years, and your own guys start hitting on her in a few months, I know she'll be faithful. She'll understand. When she's alone in your bed night after night and getting horny, she'll understand the duty a cop has to a fellow officer.\n\n\"And when she can't stand it and one of your 'brothers' or some civilian is fucking her one night, she'll feel guilty because your first duty wasn't to her, it was to your brother officer. \n\n\"How many of your wives will be that understanding, I wonder? Will live with empty, cold beds because they know your first duty wasn't to them, but the brothers in blue.\"\n\nI wondered if I'd have enough time to get the rest out.\n\n\"And James, maybe your wife will be one of the loyal ones. But I saw your daughter at that picnic. Really pretty for a 13 year old. Too bad daddy won't be around to be a male presence in her life and put the fear of God into all those horny 17 and 18-year-olds that will be trying to make babies with her.\"\n\nJames was a black officer about the size of a refrigerator. I wondered if he'd go for his Glock or just try to take out Smith with his bare hands.\n\n\"With any luck, you'll be a grandpa when you get out, something to look forward to.\"\n\n\"You are a dead man, Maitland. Walking and talking, but dead.\"\n\n\"I know you're going to kill me, Shawn. And your life is going to end here tonight, one way or the other. It's a shame. You were a good cop. I think you're a good man who made a bad mistake. Mistakes happen. But you won't face up to what you did and pay the price. \n\n\"We have to pay for our mistakes.\"\n\nI stood there and waited for the sounds I expected. I really had no idea if his fellow cops would actually kill him to save me, and even if they fired on him, he'd probably kill me anyway.\n\nI should have been terrified. I pray to whatever God is out there, but I don't really believe. I think when I close my eyes that's it. The 'me' that wakes up every morning will be gone, like a candle blown out by the wind. \n\nI can't make myself believe in the fairy tale of a gracious heaven where I'll be re-united with my father. I wish I could. It would make things a lot easier.\n\nThinking of my father, I wondered what went through his mind in his last seconds. Undoubtedly he'd had time to hear the creaking and thundering of rock and timber giving way and he'd been a miner long enough to know what it meant. A second cave-in in that weakened shaft was it. No more rescues.\n\nHad he thought of me and my mother? Had he had any second thoughts at the last minute about the cost of his last decision? Had he regretted that he wouldn't see me grow up, not being around for his grandchildren? I was already regretting not seeing what Kelly and BJ's children would look like, what my two children would be like as adults.\n\nBut I couldn't do anything different than what I'd done. Every step, everything I'd done in my life had led me to this moment. And I could wish I'd done things differently, never lost Debbie, but I knew I wouldn't have done things differently unless I'd been gifted with foresight and just never took the SA job.\n\nThinking of Debbie made me think of Aline, and of all the images that I carried with me the one that flashed into my mind was her standing in the night rain and the darkness in the forward tower on the Bonne Chance looking back at me across a hundred feet as we rode the white caps. If you could love someone before you knew them, I had.\n\nAnd as she was darkness, Debbie was the light. The picture that was in my mind as I heard the first gunblast was Debbie smiling at me as I walked in the door of our home one day \u2013 I don't remember when. I remembered my heart hurting with the knowledge that this woman loved me. Thinking that I'd never see that smile again, I wasn't too unhappy about the way things had gone. \n\nSometimes, dying is easier.\n\n#########################################\n\nDebbie pulled her 350Z into the parking lot at the front of the long, one story building marked with a big FOP sign. The police scanner had crackled with terse messages with numbers and codes unlikely to be understood by civilians, but she knew that a half dozen police cruisers had been scrambled and would be pulling in any second. The Under-Sheriff and Zone Commander were on the way in separate cars because someone had reported that Shawn Smith, drinking heavily and armed, was on his way to the FOP Union Hall.\n\nFrantic calls to any of the officers known to be at the FOP meeting, and to FOP President Phil Howser, had gone unanswered. One tense voice let discipline slip and growled, \"What the hell is the matter with those guys. Why aren't they answering?\"\n\nAnother had answered, \"Not good. Get the hell over there.\"\n\nThen another voice with an air of command had ordered both of them to switch over to another, private, police channel. It hadn't had to order them to shut up. That was understood.\n\nSomehow she had beaten them all and when they questioned her, the only answer she'd be able to give them was female intuition. As an educated woman, a professional, she'd always scoffed at stories of female intuition, of hunches about children or loved ones in danger. There simply was no scientific proof and nothing close to anything like a scientific theory that could account for such supernatural information.\n\nEven if it couldn't be explained, how else could she explain why she'd left her home to race to a building with no reason to expect any danger.\n\nHowever, inside her, she couldn't deny it. When she heard that Bill had shown up there, even before knowing that Shawn Smith was also headed there, she'd simply known she had to go. Maybe it was nerves, fear for her ex knowing the animosity most cops had for him, residual guilt over how she had hurt him. She could not have foreseen that Smith would show up, but it might have been a fear in the back of her mind.\n\nAs she took her first steps toward the building across the carefully maintained lawn that fronted Atlantic Boulevard the thought came to her \u2013 how the hell would she explain to Bill showing up if Shawn Smith wasn't in there. What if nothing more was going on than a spirited debate over the wisdom of filing charges against Smith. \n\nShe knew he would look at her and he'd KNOW.\n\nHe had been so clueless for so many years, but when he wanted to, he could look into your soul. As Lew had told her months before, he had never looked into her and sniffed the odor of a decaying marriage and her lust for another man, but it had been because he had trusted her.\n\nAnd when he looked into her eyes he'd see past the lies and the defenses she had put up and would see something else, and he would misunderstand. \n\nShe wasn't still in love with him. She had given that up the morning she had called and told him she wasn't in love with him anymore. But...as he had said to her, you can't turn off love that easily, or caring, or affection - whatever word you wanted to use.\n\nShe knew now you could hate someone, or at least be angry enough to want to hurt them badly, and still love them, or the memories you had of them. That was all it was. The memories of a better time when they had been young and she had been center of his life and not an afterthought.\n\nShe heard the gunfire erupt from the long low building in front of her and even through the walls of the building, the shouts of pain and fear.\n\nIn one timeless moment she had a vision. She knew it was a vision and it felt like a true vision, not just a dream-like picture in her mind's eye. She was standing with Kelly and BJ dressed in black and looking down into an open casket. His face was still and calm and composed. He really looked as if he were only sleeping.\n\nShe had leaned over and pressed her lips against his and knew then that he was gone and never coming back.\n\nShe wanted to scream. This wasn't fair. No matter what had happened, no matter what she had done to him, no matter what he said, no matter how many times he pushed her away, he would always come back to her. \n\nHe had told her one night not long after they married and she had told him of the nightmares that had started coming in which he had died after the fight in the frat house instead of recovering, \"That will never happen, Babe. I will always come back to you. No matter what. No matter where I am, I will always come back.\"\n\nOnly he had lied and left her behind.\n\nThen she was racing across the damp grass, kicking off her shoes in an instant, running as the hot tears of a young girl streamed down her cheeks.\n\n####################\n\nAuthor's Note: Once again I'll apologize for the delay in posting. I'd hoped it wouldn't take so long, but I ran into editing problems. I want to thank 'curiouss' for coming to my rescue and editing the text enough to get it posted. I hope the people who've been following the story enjoy the latest chapter. "
    ],
    "authorname": "DanielQSteele1",
    "tags": [
        "marriage",
        "divorce",
        "crime",
        "court action",
        "romance"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/when-we-were-married-ch-6a-1"
}