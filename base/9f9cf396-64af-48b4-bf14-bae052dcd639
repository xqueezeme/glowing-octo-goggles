{
    "title": "Oh Hell!",
    "pages": [
        "\"If thou gaze long into an abyss, the abyss will also gaze into thee.\"\n\nF. Nietzsche\n\n<br> \"Be wary of evil, lest evil may harm you. But be terrified of love, lest love may destroy you utterly.\"\n\nR. Maurice <br> <br> Oh Hell!\n\nFirst there was light.\n\nThen followed sound in the form of a rhythmic thumping inside his head. After a moment of confusion, during which his brain was gradually revving back up to normal processing speed, Mike realized that he was flat on his belly on the wooden floor of his room. Vision still blurry he sat up and cupped his face in his hands, relieved to discover that everything appeared to be in place and nothing felt bloody or misshapen.\n\n\"Fucking ritual musta blown up,\" Mike mumbled to himself. \"What the hell was I even thinking? Not that this sorcery shit would have worked for real anyway. Gee, talk about being desperate.\"\n\nHe slowly propped himself up, checking for broken bones and bruises along the way. But luckily whatever had knocked him out didn't appear to have caused any permanent physical harm. With a final concentrated effort he rose all the way to his feet and turned to survey the damage in the epicenter of the calamity, the elaborate pentagram drawn with the blood of a chicken for the purpose of the ritual.\n\nAnd froze in his tracks.\n\nFor in the center of said pentagram stood a naked girl.\n\nWell, calling her \"a girl\" would be akin to calling a Ferrari \"a car.\" Built like a fitness model, perfectly toned with all the right curves in all the right places. Sporting the kind of body that will make young guys drop down on all four and howl at the moon while older men reached for their heart medicine or Viagra. She was the ultimate walking wet dream of feminine perfection made flesh.\n\nOr she would have been, if it hadn't been for the inhumanly cold black orbs inhabiting her eye sockets and her crimson skin crisscrossed with purple veins like a mesh of dark subcutaneous worms. Not to mention her long black fingernails, resembling the claws of a vicious predator rather than the meticulously manicured nails of a stylish woman. \n\nThe duality of sexual attraction mixed with demonic repulsion somehow made her the single scariest sight Mike had ever laid eyes on. Every cell in his body screamed at him to get the fuck out before it was too late. Run for his life before this being, virtually oozing inhuman power and menace, became aware of his presence.\n\nYet he didn't move a muscle. By all accounts he should have been fleeing in terror, but he remained stationary, frozen like a rabbit caught in the headlights of a speeding car. Paralyzed and unable to utter a word, let alone move. \n\nThough technically not all parts of Mike's body were paralyzed. The front of his pants struggled to hide his throbbing erection, for as a healthy young man his sexual desire was on a hair trigger that not even the ultimate terror could defuse. After all, boobs are boobs. Even infernal and scary ones.\n\n\"Come on Mike,\" he chided himself in an attempt to muster his courage. \"Don't chicken out here. You just summoned a genuine bona fide demon. You da man. You're fucking Gandalf. You can totally do this shit. A walk in the park for a master wizard like you.\"\n\nThe nightmarish apparition gradually seemed to become aware of the presence of somebody else in the dimly lit room and slowly turned to look straight at him. What little courage Mike had managed to muster so far immediately drained out of him like dirty water from a sink.\n\nHer inhumanly beautiful face was framed by a veil of waist-long black hair that he now noticed was matched in color by a generous pubic triangle spreading out from between her legs. Her cold gaze seemed to peer into his very soul, and he could almost feel her presence probing the deepest recesses of his mind. \n\nA few seconds ticked by - the longest few seconds in Mike's short life - and then the girl-thing's face transitioned from aloof predatory coldness to an expression of total disbelief and confusion. \n\n\"Thou hath designs on wooing me?\" she uttered slowly in a surprisingly melodic timbre.\n\nMike made an effort to compose himself.\n\nIt took all his willpower to even attempt to address this scary girl or whatever the hell she was, but he was the one who had summoned her from the abyss, and that made him her master. Figuring that he'd better start behaving a little more masterly, he finally managed to jolt his brain into gear.\n\n\"Hey don't freak on me Desdemona. Just a date ok? I'm not after anything wooey or some shit like that.\"\n\n\"I am called upon to serve as thine escort for a ball then?\" the girl-thing enquired, still seemingly baffled by the turn of events.\n\n\"Yeah... like my escort for the entire evening actually. Escort as in coming along with me that is. Not escort as in... y'know... an escort service...\"\n\nMike pushed his chest out and declared in his most authoritative Ian McKellen voice: \"As your summoner I hereby command you to be my Halloween date!\"\n\nThe girl-thing smiled, showing way too many way too pointy teeth and stepped out of the pentagram as if it wasn't there.\n\n\"Thou commands me not conjurer.\"\n\n\"Whoa!\" Mike yelped and jumped back in terror. \"The book says that no demon can do that without the summoner's permission! What the fuck is going on here? Is the damned thing broken or something?\"\n\n\"I speaketh only truth. Thou commands me not.\"\n\n\"So... erhm... you're like... really not in my power at all?\"\n\n\"Nay.\"\n\n\"But the book said... hell... I mean, no demon can break a consecrated pentagram, right?\"\n\n\"Demon I am not.\"\n\n\"Shit! You'd better not hurt me. I'm serious! My folks are downstairs... I'll scream... they'll call the cops... and I taste horribly anyway. Trust me, I wouldn't eat me even if the only alternative was airline food...\"\n\nThe girl-thing's feral smile receded to a more somber expression.\n\n\"Fear not conjurer, for I would bargain with thee.\"\n\n\"Bargain with me?\" Mike answered confused. \"Like strike a deal? S...sure! For my life or for our date? Please let it be both!\"\n\n\"Swear on thy life and honor to destroy yonder tome with thine own hands and pledge myself as thine escort for the entirety of this hallowed eve I shall.\"\n\n\"Tome? Oh the book? The Codex? Sure -- no problem your scariness. That musty old thing smells like used gym socks anyway and I've already scanned it to disk. We've got a deal. But I'm not getting rid of it until after the date, ok? Please don't take this the wrong way, but I don't think I can quite trust you.\"\n\n\"Thy terms are acceptable,\" she replied with a consenting nod. \"Done.\"\n\n\"One more thing...\" Mike injected nervously.\n\n\"Aye?\"\n\n\"Please don't get mad and go all hellspawney on my ass, but eh... could you stop speaking like a transsexual Shakespeare? It's hard to figure out what you're saying and, to be honest, it just sounds too fucking weird. Even for Halloween. Can't you use your dastardly demonic demon-powers or something and switch to normal English?\"\n\nThe girl-thing tilted her head and regarded him thoughtfully for a second. Then she reacted in a blur of speed.\n\nBefore Mike's brain even registered that she had moved, he was launched into the air and landed heavily in the couch after a flight halfway across the room. He hardly had time to utter the requisite \"oomph!\" before he felt a sharp jerk around his waist, as a pair of small but incredibly strong hands with claw-like nails dived into each side of his pants and ripped them apart as if they were paper.\n\n\"No! Please don't kil...\" Mike started to yell, but his frightened scream was cut short by the girl-thing pressing her black lips against his.\n\nHe felt panic setting in and tried desperately to keep his own lips clenched together as hard as he could.\n\n\"She's totally gonna to eat me\" he thought frantically as he felt her wet tongue forcibly parting his lips. \"She's gonna suck out my lungs and my brain through my mouth or something even worse. O shit, I'm gonna die a fucking Happy Meal!\"\n\nBut then he noticed that it actually felt kinda good.\n\nHer breath was hot with a slight taste of cinnamon, and as she explored the inside of his mouth with a probing tongue he gradually stopped struggling and instinctively began kissing her back. His already hard erection naturally crept further up the Mohs scale, and with his pants having been converted to scraps of torn fabric on the floor, the girl-thing was fully aware of his arousal.\n\nA fact that was confirmed beyond any doubt when he felt a hand unceremoniously grabbing his cock and bending it upwards. She then proceeded lower herself onto his lap causing him to slide inside her without further ado.\n\nWith his mind already close to blowing Mike realized that he was about to have his first sexual experience not involving on-line porn and his own right hand. An intense feeling of joy and anticipation filled him, and he had to fight to refrain from uttering a victory cry.\n\nAfter entering university a virgin, a fact that he considered an embarrassing personal secret, he had pretty much given up on losing his cherry without paying a hooker to pop it. And here he was, practically getting raped by a scary chick with a body hotter than any hooker he had ever seen.\n\n\"Jesus Christ in heaven!\" he gasped as he felt strong vaginal muscles clenching around him as the girl-thing started riding him hard and fast.\n\n\"Language please!\" she scolded frowning without slowing her pace.\n\nMike had a groveling apology on his lips, but was already too far gone to actually utter a reply. This was so fucking unreal, but also totally amazing.\n\n\"Goodbye virgin. Hello John Cena,\" he thought to himself.\n\nEven if the demon-chick ended up killing or eating him, at least he would die a real man. Somehow that notion dispelled his fears, and he was suddenly no longer at all that sorry about his current situation.\n\nHe stole a glance at the girl-thing sitting astride him moving energetically back and forth on his manhood. Her eyes were closed -- thank God for that -- and her perfectly sculpted breasts were dancing right in front of his face. A week ago Mike had no idea that magic existed outside the realm of fairytales and on-line games, yet right in this moment he was sitting in his couch getting fucked by a genuine fiend ascended from Hell.\n\nHe couldn't help but question his own sanity.\n\n\"This is hands down the weirdest nightmare I've ever had,\" he mused to himself. \"But I might as well go with the flow, cause it's totally awesome too. In fact, if this is indeed a dream, I don't wanna wake up again.\"\n\nThus resolved Mike leaned forward and bit into a hard black nipple the way countless hours of watching Internet porn had taught him, and he was rewarded with a loud gasp from the girl-thing. He got the distinct feeling that she hadn't expected any active participation on his part and was positively surprised. She immediately dialed her own activities up several notches, and after less than a minute of intensive nipple chewing, she grabbed his head forcefully and kissed him deeply while her body started twitching and spasming.\n\n\"She's cumming on my cock,\" he realized. \"Holy shit, a real 3D girl is fucking cumming on my cock!\"\n\nThe experience was too much for Mike, who felt a familiar warmth spreading through his abdomen, culminating in a surge of pleasure shooting down the length of his penile protrusion as he started pumping like a fire hose inside this girl... or demon... or whatever the hell she was.\n\nA hands-free orgasm! How cool was that!\n\n****\n\nWhen he recovered from the hardest climax he could remember ever having experienced and opened his eyes, he found her still sitting astride him, scrutinizing him curiously with those eerie black orbs of hers.\n\n\"You were a virgin Michael Weston Bower,\" she stated matter-of-factly. \"No wonder you did not last very long.\"\n\n\"What? Hell no! I wasn't... I.... How...? What...?\" he flustered in a squeaky voice.\n\nShe kept observing him with a neutral expression indicating nothing but idle curiosity.\n\n\"Ok whatever. Color me busted,\" Mike admitted sourly. \"How did you know anyway? Are you like a demonic mind-reader or something?\"\n\n\"I know everything about you Michael Weston Bower.\"\n\n\"Just call me Mike please. Seriously though. Did you just bang me in order to read my mind?\"\n\n\"No Mike,\" she replied, uncoiling herself from his lap. His wet cock to slid out of her with a slurping sound.\n\n\"Truthfully I only needed to touch you in order to bare your soul before me. But I have not visited this realm for a long time and I miss the human act of fornication. Hence I elected to avail myself of your obvious desire for this body.\"\n\n\"Gimme a break here. I'm a dude,\" he protested defensively. \"We think of sex every thirty seconds of our lives. And yeah - you are right. You were my first. I've never had sex with a girl before.\"\n\n\"You still have not,\" she remarked absently while examining his poster collection on the opposite wall.\n\n\"YARH!\" Mike exclaimed and jumped up from the couch. \"You're not a dude, are you? Please tell me that wasn't an ass I just fucked. Oh shit. Oh shit. Oh shit.\"\n\nThe girl-thing giggled amused.\n\n\"In the manner in which you define gender, I am definitely female. But I am not a girl Mike. That would imply me being a human, which I am not.\"\n\nMike relaxed visibly, the thought of being gay apparently causing him more turmoil than the fact that he was standing without pants next to a naked demon from Hell that he'd just had sex with. \n\n\"By the way, is peeking into my soul the reason why you've suddenly stopped talking like Yoda?\"\n\n\"I adapted my diction to yours Mike. I assume that is what you refer to as no longer talking yoda?\"\n\n\"Yeah, pretty much. Anyway, what's your name oh mistress of the dark? You do have a name, right?\"\n\n\"You do not know my name? But you summoned me, did you not?\"\n\n\"I didn't understand half of the bullshit I said during that ritual,\" Mike admitted. \"I just made some sounds that seemed to kinda fit the letters and hoped for the best. That book is written in some crazy gobble-de-gook that's impossible to read. Not even Google Translate worked on it.\"\n\n\"You just made sounds without knowing their true significance?\" the girl-thing reiterated with a baffled expression. \"You are truly a conjurer most strange Mike. And most certainly a courageous one. Who knows what you might have summoned, had you been less fortunate with your utterings.\"\n\n\"Whatever. It worked, right? You're here. So are you gonna tell me your name or not?\"\n\n\"I have a legion of names, but most of them will be impossible for you to pronounce. And a few will literally cause your tongue to rot and fall out if you get a single syllable wrong.\"\n\nShe paused with an introspective expression.\n\n\"I am actually not sure why they have that effect, but I have seen it happen a few times and...\"\n\nSomewhat taken aback Mike cut her off.\n\n\"Just give me the shortest one that will not cause any of my body parts to rot, explode or turn green with yellow polka dots.\"\n\n\"Luci. You may call me Luci.\"\n\nMike's jaw dropped and he regarded her with a surprised expression.\n\n\"Luci? Seriously?\" he exclaimed. \"Not Infernalia von Dragonella, Thorfina Soulreaper, Shalltear Bloodfallen or something like that? Just... Luci?\"\n\n\"Is Luci not a valid name in your world Mike?\" she asked. \"Should I pick a different one?\"\n\n\"Nah, it's ok. I guess I was probably just expecting something grander and more hellish... but never mind that. Luci is fine. If you're still serious about wanting to hang out for Halloween, we need to get you properly dressed though. You sure do look the part out of the box, but without clothes you're not getting inside the club. Not even demons are getting around their dress code.\"\n\nLuci wasn't paying attention. Instead she was busy examining his desk lamp.\n\n\"How can light emerge from this lamp Mike? There is no flame. Is this your magic?\"\n\n\"Nope, electricity. But I'll explain later, if you want. For now let's go raid sis' closet. She's about your size, except for the chest.\"\n\nReluctantly she permitted him to pull her away from the fascinating desk with the magic lamp and lead her down the hallway to another room.\n\n****\n\n\"Ooh!\" Luci exclaimed in wonder when Mike opened the sliding doors to his sister's walk-in closet. \"Is your sister a noble woman?\"\n\nMike rolled his eyes.\n\n\"She is a fucking brat, is what. And annoying as shit too.\"\n\n\"But with such a wide collection of garments surely she must be a woman of considerable means.\"\n\n\"My bratty sister's so-called means consist of dads credit cards, and shopping is her favorite form of entertainment. She hasn't even worn half of this shit. Pick what you want. I guarantee she won't notice it's gone.\"\n\n\"I do not know what one such as I would wear to a ball in your world Mike. There is so much here to choose from. Will this one do?\"\n\nHe shook his head.\n\n\"Nope. That's called a wet suit. It's something you wear when surfing.\"\n\n\"But it is completely dry...\" Luci began.\n\n\"Never mind,\" Mike quickly interrupted before it turned into a longer explanation. \"Try this on instead.\"\n\nGetting Luci properly dressed took a lot longer than Mike had hoped for, but eventually she ended up wearing a plain black sleeveless cocktail dress and long black boots. Thanks to her perfect body she made the simple outfit shine like something that a movie star might wear to the Oscars.\n\nWell, if movie stars had crimson and veiny skin, pointy teeth and black eyes. But the shiny black fabric matched her hair perfectly and the contrast to her skin tone made her a mesmerizing sight to behold.\n\n\"And at least she doesn't have tail and horns,\" Mike mumbled to himself.\n\n\"Huh? Why would I sport such odd appendages?\" Luci asked confused.\n\n\"Oh whoops, I said that out loud, didn't I? Please ignore that Luci. You have everything anybody could possibly wish for. We may need to trim your nails slightly though. They look great and demony, but if we take an inch off you'll have an easier time grabbing stuff without skewering everything.\"\n\nMike got hold of his sisters manicure kit and attempted to trim Luci's long black claws. After destroying a nail trimmer without putting a scratch on any of the nails, he ended up using a bolt cutter from his toolbox instead and availed himself of a metal file for the final touch.\n\nLuci examined her newly manicured nails with great interest.\n\n\"I have never had this done to me before. Thank you Mike. I like the way it looks.\"\n\n\"Glad to be of service Luci. Now you can scratch your nose without ending up looking like Voldemort. Anyway, we need to get going so we can get there before the club fills up. I have to slip into my Witch Hunter costume too.\"\n\n\"Costume? So the ball we are attending is a masquerade?\" Luci inquired.\n\n\"Duh! It's Halloween. Everybody dresses up on Halloween.\"\n\n\"In that event, shall I not wear a costume as well Mike?\"\n\n\"You'll do fine Luci. Trust me. You'll do just fine as you are.\" \n\n****\n\nOn his way out the door Mike poked his head inside the livingroom. \n\n\"Mom, dad. I'm heading out. Happy Halloween to y'all. You too Mr. Taylor... Mrs. Taylor.\"\n\n\"Just a second,\" Mike's dad countered. \"I could swear I heard a girly voice from upstairs. Do you have a girl in your room?\"\n\n\"Yeah dad. My date.\"\n\n\"Oh Mikeyyy,\" his mom cooed. \"You have a girlfriend? About time too, if you want to get married before you hit thirty. Please have her come in and say hello.\"\n\nRight in that moment the girl in question came walking down the stairs with the elegance and grace of a runway model. Mike had to admit that she looked absolutely stunning in his sister's dress.\n\n\"Like a top-dollar hooker from Hell,\" he thought.\n\n\"Are you truly satisfied with this garment in lieu of a costume Mike?\" Luci enquired hesitantly. \"And what is a hooker?\"",
        "\"Never mind that. You look fantastic Luci, and please stop that mind reading shit. Mom and dad want to say hi by the way.\"\n\nLuci nodded and sailed past Mike into the living room where she proceeded to greet everybody politely.\n\nMike's mom was positively boiling with curiosity.\n\n\"It is so nice to meet you..?\"\n\n\"Luci,\" the girl outfitted as a sexy demon in a cocktail dress replied with a soft smile. \"I am Luci. Very nice to meet you too Sarah Weston Bower.\"\n\n\"Just Sarah please. So you are Mike's date for Halloween? I thought he was going with Patricia.\"\n\nBefore Mike could answer, Luci did it for him.\n\n\"A week ago Patricia Carson dismissed Mike for a young male named Desmond Mapother with whom she plans on fornicating tonight. Therefore Mike summoned me to act as his escort in her stead. We fornicated already.\"\n\nMike moaned and hid his face in his palms, while his mother stared at Luci in total bewilderment.\n\n\"Oh my... I... I see. Well lucky that you were available then.\"\n\n\"You sure don't mince words Lucy,\" Mike's dad said chuckling. \"Honesty is not a bad thing... says lots about one's character. A pleasure to meet you.\"\n\n\"A pleasure to meet you too Edward Weston Bower. Or would you prefer Edward? Short names seem to be the preference of most people here.\"\n\nMike's dad chuckled again.\n\n\"Ed's fine Luci. Love your costume. You sure are a fine looking woman. Mike hit the Jackpot with you.\"\n\n\"Thank you Ed,\" Luci replied happily. \"Mike helped me select this dress and showed me how put it on properly.\"\n\nMike's mom scowled accusingly at her son, while Ed gave him a discreet smile and a thumbs-up. Then he cleared his throat and wisely changed the subject.\n\n\"These are our neighbors Luci,\" he said with a swooping gesture in the direction of the other couple, a man and a woman in their forties dressed as Harlequin and Columbine.\n\nThe man raised his beer in a toast.\n\n\"Nice to meet you kiddo and happy Halloween to you. I'm Tom and this is my wife Eli, the woman I am going to fornicate with tonight.\"\n\nTom winked conspiratorially and the woman blushed and raised her beer as well. Luci regarded the couple curiously. \n\n\"I do not understand this configuration,\" she said in a speculative voice. \"May I ask you a question Tom?\"\n\n\"Sure thing. Shoot kiddo.\"\n\n\"You desire to fornicate with Eli, but her desire is to fornicate with a man by the name of Carl Ganth tonight after you fall asleep from ingesting excessive amounts of alcohol, which she is under the impression that you will. How do human couples resolve such discrepancies of intention? Will she fornicate with both of you?\" \n\nThere was a loud crash as Eli dropped her glass followed by a roar of rage from Tom...\n\n****\n\nAs Mike hurriedly backed his car out of the driveway after a hasty retreat, he could still hear angry shouts from inside the house.\n\n\"I LOVE YOU, YOU SAID!\"\n\n\"I'LL DO ANYTHING TO SAVE OUR MARRIAGE, YOU SAID.\"\n\n\"GIMME ANOTHER CHANCE, YOU SAID.\"\n\n\"I DID, AND YOU WENT RIGHT BACK TO THAT COCKSUCKER YOU FUCKING SLUT!\"\n\n\"Happy Halloween mom and dad,\" Mike groaned.\n\n\"Did I do something wrong Mike? I only tried to converse, and I used short names.\"\n\n\"Never mind Luci. Tom's a good guy -- he deserves the truth. But would you mind holding back on the demonic revelations while I still have any friends and family left?\"\n\nLuci nodded.\n\n\"Just tell me when to lie, and I shall do so gladly.\"\n\n\"I didn't mean...\" Mike started in a frustrated tone, but decided to give it up. \"How did you know about that shit anyway? I mean, you didn't touch them or anything.\"\n\n\"I know of people's secret desires and dark dreams. That is part of what I do.\"\n\n\"Well you sure as hell sucks as a conflict resolution specialist,\" Mike noted dryly. \"Better hold on to your day-job, whatever it is.\"\n\nLuci smiled and looked relieved.\n\n\"I am grateful that you are not angry with me for causing turmoil Mike. I have not been here for a long time, so your customs and rules are unfamiliar to me.\"\n\n\"Exactly how long a time?\" Mike asked curiously.\n\n\"I do not know for sure. Last time I trod this continent there were no buildings here. Only Mongols living in round tents.\"\n\n\"Shit! You don't get out much, do you?\"\n\n\"That is probably my own doing. Few people have summoned me and lived, so I am not often called upon.\"\n\n\"Lived? As in, people die when summoning you?\"\n\n\"Yes. A life is the price demanded.\n\n\"Eh Luci -- please don't get any murderous ideas or anything,\" Mike probed timidly \"but why am I still alive then?\"\n\n\"The book protects you because you fed it.\"\n\n\"Fed it?\"\n\n\"Yes. You have consecrated the sigil on the cover with your blood as part of the ritual. Because of the blood-bond it lends you spiritual and physical protection from such as I, and that bond can only be broken by the same blood.\"\n\n\"But you ain't in my power Luci. That book clearly doesn't work as it's supposed to. I mean, you walked right out of that pentagram like it was piss in the snow.\"\n\n\"True Mike. But be that as it may, I would very much like that book destroyed. It wields a measure of power over me that I find rather vexing.\"\n\n\"I see. And just for the sake of argument, what would have happened to me if I hadn't had that book?\"\n\n\"I would have consumed you of course. Body and soul.\"\n\n\"Seriously?\"\n\n\"A girl has to eat,\" she said joyfully and shot him a teasing wink.\n\nMike wasn't smiling back.\n\nTemporarily lost in thoughts he commenced to stare straight ahead while concentrating on driving. He was forced to admit that while Luci may look like a supermodel in demonic makeup, there was no denying that she was the real thing. Even if she occasionally acted like a total ditz.\n\n\"By the way Luci,\" he noted.\n\n\"Yes?\"\n\n\"You gotta update your vocabulary. Nobody says fornicate. It's called sex.\"\n\n\"Sex,\" Luci repeated with an absent-minded expression. \"Sex, sex, sex..\"\n\nMike found himself liking the way her lips formed the word.\n\n****\n\nOutside the club they became the latest addition to a long line of festive people in a broad range of costumes, from the simplest ten-dollar masks to expensive dresses and elaborate makeup. Pirates were popular as always and there were quite a few ninjas as well, but horror was clearly the prevalent trend. Especially vampires.\n\n\"You can always dress cool as a vampire,\" Mike thought to himself.\n\n\"Vampires smell bad though,\" Luci injected. \"And they have no manners.\"\n\n\"For fucks sake, stop reading my mind! It's annoying.\"\n\n\"Sorry Mike...\"\n\n\"Forget it. Let's concentrate on moving forward in this line, or we'll never get in.\" \n\nMike had hardly finished his sentence before the girl in front of them - a curly redhead dressed as a Ghostbuster - suddenly took flight and landed screaming in a garbage container at the edge of the street at least twenty feet away. Luci's movements were so fast that she was about to grab the next person in line before Mike could get hold of her arm and stop her.\n\nShe froze and looked questioning at him.\n\n\"Please stop that Luci,\" he whispered, knowing that she would be able to hear him regardless of how much he lowered his voice. \" We'll get our asses arrested.\"\n\nShe leaned into him and whispered back.\n\n\"But all those people are in our way. Why can we not move them?\"\n\n\"It's called queue culture. We must follow the line and wait for our turn, \"Mike sighed, while checking whether somebody had taken notice of Luci's involvement in the flying Ghostbuster incident. \"Throwing people around like fucking baseballs is not ok around here Luci.\"\n\nLuckily it seemed that nobody had paid attention to what happened. Or if they had, they probably didn't believe what they saw.\n\nThe Ghostbuster girl came staggering back after having untangled herself from the garbage, and resumed her place in the line. She looked disheveled with a few grease stains on her costume and emitted a faint smell of rotten food, but otherwise she seemed unharmed despite her flying exit. The container must have been filled with soft trash, Mike concluded.\n\n\"Thank God,\" he thought to himself.\n\nLuci scowled at him.\n\n\"Surely you mean, thank Luci?\" she mumbled, sounding insulted.\n\nMike sighed and pretended that he didn't hear her.\n\n****\n\nFortunately the line moved faster than Mike had initially anticipated, and it took less than twenty minutes before he and Luci reached the entrance.\n\nThe doorway was decorated to resemble the mouth of a mystic cave complete with live torches, gargoyles and all the medievally inspired ornaments one would expect in such a setting. The club had clearly gone all out in creating an atmospheric and welcoming portal for their guests, even down to the enormous bearded guy guarding the door.\n\nMike judged him to be a wrestler, bodybuilder, biker or maybe all three. Kinda like the love-child of Hulk Hogan and a building. His Viking outfit was the perfect choice for a man of his girth and stature and the large battle-axe leaning against the wall next to him looked real. Not that he would need such a weapon judging from his biceps, both of which were easily more massive than Mike's thighs.\n\nUnfortunately the mighty warrior was about to unleash some bad news on the enthusiastic crowd of partygoers.\n\n\"Sorry y'all,\" his voice boomed just as Mike and Luci were next in line to get in. \"We are full for now. Check back in an hour and maybe some will have left.\"\n\n\"C'mon man,\" Mike pleaded with him. \"I've got friends waiting for us in there. We just spend serious time standing in line.\"\n\n\"No can do,\" Gundar Skullcrusher growled. \"Get lost kid. Gotta close up here.\"\n\nMike was just about to continue the argument, when Luci pushed past him and addressed the Viking warrior.\n\n\"Why are there horns on your helmet phony Viking? That is not right. No Viking has that.\"\n\nThe big warrior seemed visibly annoyed.\n\n\"Huh? Shut the fuck up and move along. What the hell do you know anyway girlie?\" \n\n\"Trust me - she knows,\" Mike added helpfully.\n\n\"Yeah yeah, whatever.\" Brion Bloodaxe grumbled with visible lack of interest. \"Now get lost for real, ok? I'm busy.\"\n\nMike felt frustration rising inside him as he watched all his big plans for the evening go down the drain, but he was forced to admit to himself that he was fresh out of ideas. This hulk of a man could evidently not be reasoned or bargained with, and there was definitely no way to get past him without his consent.\n\nShould his Halloween come to a premature halt right here it sure wasn't for lack of trying though, Mike thought sadly. He had even summoned a demon from Hell itself to bring along to party! If that wasn't preparation, he didn't know what was. But apparently he should have brought a bulldozer too... or maybe a bazooka...\n\nJust then he noticed that Luci was touching the big mans arm lightly with her fingertips.\n\nMike had no idea what she was up to, but it evidently did have some kind of effect. The muscle-head had stopped what he was doing and appeared to be frozen in place, eyes weirdly unfocused as if staring at some undefined point in space. It was also clear from the way the crotch of his leather pants stood out like a tent that Wilhelm the Viking was hiding a seriously barbaric erection inside them.\n\n\"Guy must be hung like a fucking drain pipe,\" Mike observed enviously. \"But what the hell is going on with him anyway?\"\n\nWorried he made a quick scan of the crowd, but nobody seemed to have noticed anything out of the ordinary. It was kinda like before when Luci played pitcher with that poor Ghostbuster girl. For some unfathomable reason nobody paid any special attention to her, despite the fact that she was standing in plain sight obviously engaged in hypnotizing Mr. Beefcake, or whatever the hell she was doing. Almost as if she radiated a distortion field that masked her presence.\n\n\"Totally Obi-Wan Kenobi,\" Mike mused, getting his geek on. \"Use the force Luce... and give that fucking roid-brain a taste of the dark side from me.\"\n\nMike filed his observations under \"weird demon-shit that I'll ask her about later\" and stopped worrying about it. He decided that he didn't give a fuck as long as she wasn't hurting the guy, which she clearly wasn't. Quite the contrary in fact, he noticed. The huge man had begun to breathe heavily and was moving the lower part of his body in a very suggestive manner.\n\nWhatever she was doing to him, Thorfinn Thunderfart was most definitely into it big time. Mike watched in fascination how the mans rate of breathing and level of perspiration continued to increase visibly, and soon the mighty berserker progressed to literally moaning softly while the bulge in his pants shifted and throbbed.\n\nThen without warning the big man suddenly emitted an ear-splitting scream and fell to the ground in agony.\n\nPeople may have been ignorant up to that point, but a three-hundred pound Viking rolling on the ground clawing at the front of his pants like a madman while alternating between screaming and vomiting will get everybody's attention. \n\n\"Hey! This dude has some sort of attack,\" the guy behind Mike yelled and bent down to check on the crying and thrashing Norse warrior. \"Somebody call an ambulance.\"\n\n\"I'll get somebody,\" Mike shouted quickly and hurried inside the gate pulling Luci along with him. Opportunity waits for no man, and he also wanted to get Luci far away from the crowd before anybody noticed her and remembered that she was right next to the guy when he lost it.\n\n\"What the hell did you do to that big lug?\" he asked her in a low voice as they made their way through the wardrobe section.\n\nLuci was all smiles.\n\n\"I let him experience an hour worth of wild and passionate fornic... sexing with the girl of his deepest desires. Who is Harley Quinn?\" \n\n\"Some comic book character, but never mind. You can actually do that? Like giving people juicy day-dreams?\"\n\n\"Yes Mike,\" Luci explained with poorly veiled pride. \"It is a succubus technique that was taught me by a friend long ago. I can assure you that he was enjoying himself very much. So you see, this time I did not move anybody by force. I used only pleasure to move him.\"\n\n\"But that scream. The guy sounded as if he was experiencing the ultimate terror. What on earth happened in the end?\" Mike wanted to know.\n\n\"I am not really sure\", Luci answered thoughtfully and continued.\n\n\"I noticed that Cletus Brown - that is the name of the phony Viking - is haunted by a strong dislike of people who prefer partners of the same genders as themselves. He is also estranged from his father with whom he had a lot of bad experiences while growing up. But in reality he is sad about that and wants to make up and form a parental relationship. Since you told me to be accommodating towards people, I decided to assist him.\"\n\n\"And how exactly did you go about that?\" Mike enquired nervously.\n\n\"As you probably know, now that you are no longer a virgin, humans tend to develop positive feelings towards people they are sexing with.\"\n\nMike felt his cheeks heating up, but said nothing. Luci continued her explanation.\n\n\"So right as Cletus Brown was orgasming I removed this Harley Quinn girl from his mind and inserted his father instead. That way he would have a pleasurable experience with his estranged parent, which will make his positive feelings grow and support their reconciliation. And since his father is of the same gender as Cletus Brown, the positive experience could also help lessen his dislike for people of a homosexual preference.\"\n\nMike couldn't believe what he was hearing.\n\n\"You made a pathological homophobe with daddy-issues think that he had sex with his own father???\"\n\n\"Exactly.\" Luci confirmed happily, clearly expecting praise for her keen psychological insight. \"I did well this time, did I not Mike?\"\n\n\"You... you... you...\" Mike stammered not quite knowing what to say. \n\nIn the end he decided that there really was no point in attempting to lecture an ancient demon that may have been around since actual Vikings roamed the earth, so he just nodded.\n\n\"Good,\" Luci replied, obviously satisfied. \"And please be courteous and stop calling me a demon.\"\n\nThis time Mike couldn't even muster the energy to protest against her reading his mind.\n\n****\n\nThe dance hall was huge - almost the size of an airplane hangar or a small football field - and it was crowded with costumed people in high spirit.\n\nA large square bar in the center of the room was manned by a dozen bartenders, all dressed as classic vampires in sixteenth century-style clothes, who were busy creating colorful drinks for the festive crowd. On a raised stage in the far end of the hall Mike spotted the band that was responsible for the music they were currently hearing - \"Bowling with Skulls\" according to the poster outside.\n\n\"What manner of beverage is it that those people are drinking?\" Luci asked curiously. \"They are very colorful.\"\n\n\"Cocktails,\" Mike replied.\n\nLuci was aghast.\n\n\"They are made from poultry?\"\n\n\"No,\" Mike laughed. \"That's just a name. But why don't we go get you one before we start looking around?\"\n\nAt the bar, Luci browsed the extensive drinks menu with great interest for almost five minutes before deciding on her order. She caught the eyes of one of the vampire bartenders.\n\n\"I want this one,\" she stated, pointing in the menu.\n\nThe bartender studied the menu for a few second, and then looked suspiciously at Luci.\n\n\"That's an alcoholic drink. Are you twenty-one Miss? I will need to see some ID.\"\n\nA dark cloud seemed to drift over Luci's face.\n\n\"Know that I predate your entire species, phony vampire. So go forth and prepare my beverage without delay.\"\n\nMike didn't quite know how to react. So he relegated himself to observing, hoping that the bartender would survive.\n\n\"No ID - no alcohol. House rules Miss,\" the undead bartender said firmly and stood his ground.\n\nLuci looked the man over carefully. Then she pointed at one of the other bartenders further down the bar.\n\n\"Is that phony vampire over there Brad Johnston?\"\n\n\"Yeah, that's Brad. You know him Miss?\"\n\n\"No,\" Luci answered in a cold voice. \"But is he aware that you are sexing with the woman to whom he is wedded in a place called Traveller's Lodge every Tuesday and Thursday?\" \n\nThe vampire bartender turned visibly paler and lowered his voice to a whisper.\n\n\"For Gods sake, shut up! Please Miss! Keep your voice down. I'll make you that cocktail on the house.\"\n\n\"Thank you phony and foul-mouthed vampire,\" Luci answered in a haughty tone. \"And make one for Mike too while you are at it.\"\n\nAs they walked away from the bar Luci was studying her colorful cocktail with unbridled fascination, holding it up so the light could shine through the glass.\n\n\"So pretty,\" she mused happily.\n\n\"Neatly done Luci,\" Mike praised her approvingly. \"No violence and free drinks. I am duly impressed.\"\n\n\"Thank you Mike. I believe that I am beginning to understand this strange world of yours better.\"\n\nHe nodded and whipped out his phone.\n\n\"Time to locate the gang,\" he mumbled and typed a message.\n\n\"By the shithouse. See you ASAP bro,\" the answer ticked in promptly.\n\nThey made their way to the restroom entrance, which was easy to spot at a distance thanks to the large illuminated sign with the classic pictogram of a man and a woman on blue background.\n\n\"Over here my man!\" Terrell's loud voice sounded over the music.\n\nA tall and skinny African-American version of Heath Ledger's Joker separated from a group of people and came to greet them. Mike held up a hand and they did a high five.\n\n\"Great to see ya man,\" Terrell exclaimed. \"Guess you made it safely past Conan the Bizarian.\"\n\n\"Yeah, he was totally down with us,\" Mike replied dryly.\n\n\"And what do we have here? Whoa!\" Terrell's eyes took a trip up and down Luci's athletic body in the tight dress, drinking in all her curves.",
        "\"Babe alert!\"\n\n\"Huh?\" Luci uttered questioning.\n\n\"He's complimenting you,\" Mike translated.\n\nLuci bared her white pointy teeth in a big smile.\n\n\"Thank you kind jester. You look quite garish yourself.\"\n\n\"Dapper is my middle name,\" Terrell declared with a laugh and struck a pose.\n\nThey walked over to join the rest of the group and immediately Luci, as the newcomer, became the center of attention. Especially among the boys.\n\n\"What's your name?\" \"Where do you come from?\" \"Wow, you sure make that dress come to live.\" \"How did you hook up with that dweeb? Please call me when you dump him.\" \"Amazing skin make-up. Is that Latex?\" \"Those claws are so cool! They almost look real.\" \"How well do you see through those contacts? Custom fitted?\"\n\nJust as Mike had expected, Luci answered everything truthfully, and naturally nobody believed a word. They all took her for a cosplayer with an overactive imagination.\n\nThe girls on the other hand greeted her somewhat less enthusiastically, clearly viewing her as a competitor and interloper. Especially one of them - a good-looking brunette dressed as a female pirate - who measured Lucy up with a look of poorly veiled contempt. \n\n\"So what are you supposed to be? Morticia Adams with third degree burns?\"\n\n\"Oh, you must be the Patricia who was supposed to escort Mike on this night,\" Luci acknowledged without seeming offended. \"I am Luci. It is very nice to meet some of Mike's friends.\"\n\n\"We are no longer together,\" Patricia protested. \"Keep him and enjoy him to your hearts content. I don't want him anymore. I've moved on.\"\n\n\"To someone better,\" a tall and muscular blonde guy standing next to her injected with a big grin that did little to hide his satisfaction with the current state of affairs.\n\nLuci examined the man curiously.\n\n\"How specifically are you better than Mike, Desmond?\" she inquired.\n\nHer matter-of-fact question seemed to put him off balance. Apparently he hadn't given the exact nature of his alleged superiority any special thought.\n\n\"Well, Pat... needs like... you know... a real man and all. One who knows how to treat a woman right and stuff...\" he started explaining.\n\n\"Yes,\" Patricia added with elation. \"And we are soul mates. Our love is the real thing.\"\n\n\"Oh, I see. So that is why you have chosen Desmond to be the first man you sex with?\"\n\nThis time Patricia was the one taken aback by Luci's frankness and insight. \n\n\"H... how do you know?\" she stammered, but quickly recovered her composure and switched back into bitch-mode.\n\n\"Not that it's any of your business Luci, but yes - we have in fact talked about taking our love to the next level. Since we are soul mates, we should also be each others firsts.\"\n\n\"Each others?\" Luci remarked with a frown. \"But that is not possible.\"\n\n\"None of your business either. We're both over eighteen and nobody has the right to tell us what we can or can't do. Our love is between the two of us exclusively. You can tell that to Mike as well.\"\n\n\"But Desmond has already sexed with five other people,\" Luci protested. \"The first one was Kelly Franken, so that will make you number six.\"\n\n\"What???\" Patricia yelped and stared at her alleged soul mate with eyes wide in shock.\n\nDesmond shook his head dismissively.\n\n\"I don't know what this bitch is babbling about. Probably something Mike put her up to. It's a lie Pat. A total goddamned lie.\"\n\n\"Kell?\" Patricia asked pleadingly in the direction of a slightly overweight redhead whose face had suddenly turned redder than her hair. \n\nThe two friends looked at each other across the room for a few seconds. No words were exchanged, but none were needed.\n\n\"Nooo,\" Patricia cried and hid her face in her hands.\n\nKelly rushed over to embrace the crying girl.\n\n\"I am so sorry Pat. I was drunk and this jerkazoid took advantage. I should have told you long ago.\"\n\n\"Fuck off Kelly!\" Desmond exploded, \"You wanted it badly and I gave it to you. Took advantage, my ass. You were all over me and my dick that evening. You couldn't get enough of it.\"\n\nKelly slowly looked up at him while holding her sobbing friend. If eyes could kill, Desmond would have been a corpse right there and then.\n\n\"You never forget your first, so why on earth would I want to remember a piece of scum like you for the rest of my life?\" she screamed at him. \"I wish I could erase you from memory and do it over with a real man. Had I been sober, I wouldn't have touched your wrinkly smelly thing with another girl's vagina on a ten foot pole!\"\n\n\"Whatever skank,\" Desmond sneered with obvious contempt. \"Come on Pat. Let's get out of here and lose these idiots. Our love needs nobody but us.\"\n\n\"Don't touch me!\" Patricia cried without looking up from Kelly's shoulder. \"Don't ever fucking touch me again!\"\n\nLuci, who had followed the development with interest and limited situational awareness, picked that moment to address Desmond.\n\n\"So do you and Patricia still plan on sexing later? If you cannot touch each other, will it not be very inconvenient?\" \n\nHaving temporarily forgotten her presence in the fray, Desmond was suddenly reminded of the person whose casual remark had caused everything to come to the surface. Blind rage surged through his body.\n\n\"You meddling bitch!\" he roared and before Mike or anybody else could react, he swung his right fist at Luci and planted a devastating punch right in the middle of her face.\n\nMike heard the snap of breaking bones followed by a scream of pain just as he made it to Luci's side. She seemed confused, but otherwise unfazed. Desmond, on the other hand, had dropped to the floor where he was crouching and cradling his hand in pain.\n\n\"Oh God. My hand. It hurts. She broke it,\" he wailed.\n\nLuci glanced worriedly at Mike.\n\n\"He hit me Mike. Why would he hit me? Did I wrong him in some way? I sense a strong rage.\"\n\nMike shook his head and couldn't hold back a smile upon seeing his former rival for Patricia's virginity squirming in pain at his feet.\n\n\"Don't worry about it Luci. The shithead probably just has a sore hand from jerking off too much.\"\n\n****\n\nAfter a lengthy series of explanations to the bouncers, during which a ranting and raging Desmond kept accusing Luci of intentionally having crushed his hand, he was escorted out by a paramedic and politely but firmly told by the doorman not to return after treatment. \n\n\"I'm telling y'all, that fucking bitch is made of concrete!\" they heard him yell, as he was half walking and half being dragged towards the exit. \"This is all your fault Mike. You'll regret this! I fucking swear you'll regret this!\"\n\nOf course nobody believed that a girl like Luci had any part in crushing the hand of a large and muscular man. The general consensus among the witnesses was, that the punch had landed at an unfortunate angle and that the unlucky Desmond thereby caused the damage himself. Some even theorized that he had stumbled and broken it in the fall. Probably after drinking too much.\n\nMike was impressed with the natural inclination of people to explain strange and seemingly inexplicable events through a story that fit within their personal frames of belief. He wondered briefly what would happen, if he were to actually tell the whole truth.\n\n\"Listen up guys: Luci is actually a supernaturally strong demon summoned by me because I was desperate for a date and couldn't get one in any other way. She made Desmond angry because she read his mind and spilled his secret, but he wasn't strong enough to hurt her and ended up harming himself.\"\n\nYeah right!\n\nHe would be the laughing stock of the group. Some secrets are just so outrageous that they keep themselves. Mike knew that nobody would ever buy this one, regardless of the circumstances. Not even if it was written on the Goodyear blimp at the Super Bowl or posted to Literotica.\n\n****\n\nAbout an hour later the group, sans Desmond, broke up from their table in order to move closer to the stage and the dancing area. After all, that was where the real party was. As they walked past the bar Mike felt Luci tugging at his sleeve.\n\n\"I want another one,\" she declared, and made a beeline for the counter.\n\nThe vampire bartender clearly recognized her, because his face drooped visibly. But he had evidently learned his lesson and simply handed her what she wanted with no questions asked and no payment required.\n\n\"It is red,\" she said happily. \"So pretty, and it tastes good too. Do you want a taste of it Mike?\"\n\nMike shook his head.\n\n\"Thanks, but no thanks Luci. I'm driving so I'm staying off the booze for the rest of tonight. Enjoy your cocktail.\" \n\n\"As you wish,\" she replied and downed it in one gulp.\n\nWhen they reached the edge of the dance floor, Luci stood frowning for a while studying the festive crowd. Then she turned to Mike with a puzzled expression.\n\n\"Nobody is holding on to each other. Everybody are just moving around in a chaotic manner that adhere to no system or style I can recognize. Is that how you dance in this world?\"\n\n\"Yep. Wanna try?\" Mike asked and offered her his hand.\n\n\"I do not know how to perform this dance Mike.\"\n\n\"Don't sweat it Luci. I can't dance for shit either. Like you said, I just move around and rock out to the beat. The only rule on this floor is to have fun.\"\n\nBowling with Skulls had left the scene in favor of an enthusiastic DJ dressed as the Mad Hatter from Alice in Wonderland - a change of venue that suited Mike fine. He never cared much for the Skulls' music and still recalled last summer when their smash-hit \"Cosmic Smegma Implosion featuring Leslie Loon and the Lascivious Legwarmers\" was played constantly all over. After a while he was ready to gouge his ears out whenever he heard it.\n\nMike walked Luci onto the dance floor and they threw themselves into the fray. Initially she seemed confused and looked around frantically to see what other dancers were doing, copying their moves. But gradually she fell into her own style and was soon moving her body with an erotic fluidity that belied the fact that this was her first try at contemporary clubbing.\n\n\"Wowsers! This is seriously hot!\" Mike thought to himself, eagerly eying her agile movements with admiring appreciation.\n\n\"Thanks,\" Luci mouthed back at him with a small pointy-toothed smile.\n\nThis time he didn't bother berating her about invading his mind. To be honest he was kinda getting used to it, and nagging her about didn't seem to help anyway. At least so far it had proven about as effective as complaining about the weather. Maybe Luci was so used to reading minds that she simply did it without thinking about it.\n\n\"Time for a few slow ones,\" DJ Mad Hatter announced. \"And while the lights are low, don't do anything I wouldn't do. Heh, heh, heh...\"\n\nThe light dimmed to a level where your partner was barely visible and instead of lasers and pumping spotlights, six strategically placed disco-balls filled the darkness with a myriad of white stars. The dancers moved together for a slow dance, as the tones of the classic 1977 Fox hit \"Moustaches on the Moon\" rolled out of the speakers.\n\nLuci and Mike embraced and moved slowly in the dark, cheek to cheek.\n\n\"You want to sex with me again,\" Luci whispered next to his ear.\n\n\"Shit. Did you read my mind?\" he whispered back.\n\n\"I do not have to Mike. Your erection is pushing against me. This means that you want to sex, does it not?\"\n\nMike praised his luck that the darkness was hiding the sudden color change of his face.\n\n\"Yeah, you're not entirely wrong. Maybe we could go somewhere more private?\" he suggested with a slightly breathy voice.\n\n\"Why do you want to go somewhere?\" she asked curiously. \"You have your penis with you and I am here. What more do you need for sexing?\"\n\nMike suddenly got a bad feeling about the direction in which the conversation was going, especially considering Luci's complete lack of impulse control.\n\n\"Hey! We can't do it here!\" he whispered urgently. \"Seriously Luci! There are people everywhere!\"\n\nHe felt her hand slide down over the front of his pants and cradle the outline of his cock. It felt so good it made him gasp.\n\n\"Do not fear untimely discovery Mike. It is dark here and human eyes do not see well in low light,\" Luci's voice whispered back at him, and though he couldn't see her, he knew that she was smiling expectantly.\n\nHer other hand had now made its way down to his crotch as well and he felt her fumble with the zipper that was blocking her progress.\n\n\"It's a zipper Luci. You're supposed to open it by...\"\n\nThere was a ripping sound and Mike knew that it no longer mattered. That zipper was toast the moment it got in Luci's way. And with the zipper gone, his hard cock fell out in her welcoming hands by it's own force.\n\n\"Ah crap! I'll never get it back inside my pants as long as I'm hard,\" Mike thought with resignation. \"Now I definitely have to cum.\"\n\n\"But you are already here Mike...\"\n\n\"Ejaculate I mean,\" he quickly clarified.\n\n\"Fear not,\" Luci whispered and put one hand on his shoulder. \"That is the intention. Are you ready?\"\n\n\"Ready for what?\" Mike asked confused.\n\nInstead of replying Luci jumped onto him with the agility of a monkey and wrapped her legs around his waist. Holding on with one hand behind his neck, she deftly guided his manhood to it's intended destination, causing him to almost lose his balance when he once again felt himself enveloped by her tight wetness.\n\n\"Holy shit!\" he gasped way too loud. Luckily nobody seemed to have noticed.\n\nLuci put the other hand behind his neck and went in for a deep kiss while proceeding fuck him with rocking movements. For a girl with such amazing strength she felt surprisingly light, and Mike had no problem moving around like a dancing couple while effectively carrying her on his cock.\n\n\"Maybe I should get a T-shirt printed with Power-Cock Bower,\" he thought with amusement. \"At least from now on I can answer yes the next time somebody asks, if I even lift...\"\n\nOnce again he was struck by how unreal the whole experience felt.\n\nThe day before he had been a desperate virgin who'd just gotten dumped and had nothing to look forward to on Halloween, except internet porn and his own handiwork. And today he was fucking a gorgeous girl - or at least something that looked like one - on a packed dance floor among hundreds of other people to the tune of Noosha Young's enchanting voice.\n\nHe was briefly reminded of an old Jack Nicholson movie quote: \"Did you ever dance with the devil in the pale moonlight?\"\n\n\"Well, eat your heart out Jack,\" Mike thought to himself. \"Cause I'm doing a whole lot better...\"\n\nLuci nibbled his ear.\n\n\"You are indeed doing very well,\" she whispered with labored breathing. \"And we can do it outside in the moonlight later, if you want.\"\n\nAgain ignoring the invasion of his private thoughts, Mike gave himself over to the experience and let his growing desire guide his movements. He cupped Luci's ass with his hands, and used the strength in his arms to increase the speed and stimulation by lifting her up and down. An expression of enthusiasm that clearly pleased Luci, who responded by matching his movements and clinging on even tighter. \n\n\"Luci, I'm not... y'know... using anything, \"he croaked in a strained voice.\n\n\"I am not certain as to what you are referring Mike. Could you elaborate?\"\n\n\"Birth control of course. Something to prevent unwanted pregnancy. I mean, are you on the pill or something?\"\n\nLuci made a strange huffing noise that sounded like somebody attempting to laugh and moan with pleasure at the same time.\n\n\"We are not biologically compatible Mike and cannot breed. So you need not worry or hold yourself back.\"\n\nTo underline her words Luci tightened her hold even more and started grinding him slow and hard while mewling softly against his shoulder. What really tipped the scale for Mike though, were the rhythmic ripples in her body in combination with the pumping and squeezing by her powerful vaginal muscles.\n\nThe feeling was amazing and immediately flushed all his resolve and self-control down the toilet. He opened his mouth to tell her to slow down a little, but all that came out was \"Gyarkh!\" as his cock seized control and began releasing it's payload in long surges of pure pleasure that made his legs wobble and almost caused him to lose his footing. But by some miracle, or maybe sheer force of will, he managed to keep them both upright while they rode the avalanche of orgasmic release in a tight embrace.\n\nThey remained locked together in the afterglow until Mike's deflated manhood slipped out of Luci propelled by the force of gravity. She carefully disentangled herself and discretely slipped the flaccid organ back inside his pants before breaking contact. \n\nTo Mike's satisfaction nobody seemed to pay any special attention to them. He briefly wondered whether they had actually managed to control their own reactions to such a degree that nobody noticed or whether it was Luci's eerie distortion field at work again. But he decided that he really didn't give a shit. They had pulled it off - that was all there was to it - and he felt his male ego growing through the roof.\n\n\"Power-Cock Bower strikes again,\" he thought to himself with no small measure of satisfaction.\n\n\"Would you prefer to be called that rather than Mike?\" Luci asked in obvious confusion.\n\nMichael sighed exasperated.\n\n\"That was an inner monologue, and it's name stems from the fact that it belongs inside ones own head. Know what I'm trying to say here Luci?\"\n\n\"So you do not really want to be called Power-Cock Bower?\" she asked again, apparently still confused.\n\n\"Try it, and I'll call you Boomquifa Scharzmugel and tell everybody to do the same!\"\n\nLuci kept eying him with a look of confusion for a while, but then shook her head and shrugged. She sometimes still had a hard time understanding these weird humans.\n\nShe took time to smoothen her dress while Mike did his best to close his ruined zipper. The damage didn't look too obvious thanks to his black underpants, and he felt confident that nobody would notice.\n\n\"By the way, what happened to your panties Luci?\" he inquired discreetly.\n\n\"Panties?\" she asked.\n\nMike frowned.\n\n\"The bottom part of your underwear. I selected a set of Sis' lingerie and put it out on the bed for you, remember?\"\n\n\"Oh, the undergarments? I forgot to put them on. But why would it be necessary to wear undergarments in this climate?\"\n\n\"You mean, you are wearing nothing under that dress?\" Mike asked, feeling his cock stir slightly despite having just been thoroughly drained.\n\nNow he finally understood why he had been treated to a very visible impression of her nipples through the front of the dress all evening. The thin silky fabric was the only barrier holding them in check.\n\nLuci eyed him curiously.\n\n\"That information made you desire to sex with me more?\"\n\n\"Whoa!\" Mike protested. \"Thinking about your body is the same as thinking about sex, I admit it. But I definitely need to get me some penile restitution before going at it again. I mean, my legs are still shaking. Wanna sit down for a bit?\"\n\nThey joined the rest of their group at a table a few feet from the edge of the dance floor. Everybody was in high spirits, including Patricia who had long stopped crying and even seemed to have overcome her antipathy for Luci. At least she spoke to her with measured politeness, and there was no longer any trace of open hostility in her demeanor.\n\n\"Maybe she finally realized that Luci did her a solid by outing Desmond as the dog he is,\" Mike thought approvingly. \"Dude is a sweet-talking player, and Pat would never have been anything but yet another jizzrag in his collection.\"\n\nLuci, who had left the table almost immediately to go terrorize her personal bartender, returned with a new drink.\n\n\"I got a green one Mike,\" she announced happily. \"I bade the phony vampire prepare you a Penile Restitution, but alas he had never heard of that particular recipe.\"",
        "A few of the table guest within earshot looked puzzled at Mike, but he ignored them.\n\n\"Thanks for trying Luci,\" he replied gratefully. \"I would have preferred a chilled coke anyway.\"\n\n\"Ok,\" she nodded and gave him a pointy-toothed smile. Then she downed her drink in one gulp and wandered off again in the direction of the bar. She was gone before Mike could tell her, that he didn't mean that he wanted that coke right away.\n\n\"Not to be mean or anything Mike,\" Patricia said as she took the seat next to him in Luci's absence. \"But your date is hitting the booze hard. Is that why she acts a little spacey?\"\n\nMike shook his head in dismissal.\n\n\"I don't think alcohol works so easily on her Pat. Luci may not look it, but she has the physique of a tank. Though she's not exactly from around here, so I'd really appreciate it if you'd cut her some slack. She doesn't always know how to act appropriately.\"\n\nPatricia nodded in acknowledgement.\n\n\"Have you considered that she might simply be an air-head? They don't necessarily all have to be blonde y'know.\"\n\nMike couldn't hold back a smile.\n\n\"Some of her insights and experiences would surprise you Pat. Luci is more than she seems. A lot more.\"\n\n\"Yeah,\" Patricia admitted, returning his smile. \"She did nail Desmond pretty good, didn't she?\"\n\nPatricia lowered her gaze and became slightly flustered.\n\n\"Talking about which, I know I was a bitch, and a stupid one too. Luci has done nothing wrong. I was the idiot, and she told me the truth is all. Mike - is there a way back for us? Can you ever forgive your stupid bitch?\"\n\nMike felt his throat tense. He'd had a serious crush on this girl for as long as he could remember, and she had broken his heart less than a week ago. The pain was still fresh.\n\n\"At least not right now Pat. If we can be friends, maybe somewhere down the road.\"\n\n\"I understand,\" Patricia sighed sadly. \"This is not a bribe, but... I wouldn't mind you being my first, y'know. It could even be tonight, if you wanted. But you are with Luci now I guess.\"\n\nMike nodded.\n\n\"By the way Pat. Know what happened to Dog?\"\n\n\"Desmond? He tried calling a few times before I blocked his ass and deleted him from my phone. He was in emergency care somewhere I think. But he is dead to me, so I don't give a fuck where he is or what he does. I will never see him or speak to him again.\"\n\n\"Not my business, but for the record you're doing a smart thing. He's a player,\" Mike remarked.\n\n\"About that, you should avoid him too Mike. Somehow he blames you for everything. And he can be a vengeful son of a bitch.\"\n\nA large glass of coke on the rocks with a lime slice landed on the table in front of Mike, and Patricia quickly rose from the chair.\n\n\"Sorry Luci, I'll move now. Just borrowed your seat for a sec while you were gone.\"\n\n\"Mike is not angry with you Patricia,\" Luci said helpfully. \"But he has already sexed with me twice today and is probably a little tired...\"\n\nHer explanation was interrupted by Mike coughing loudly, and Patricia gratefully seized the opportunity to hastily remove herself from a conversation that was about to yield more information than she cared to know.\n\nMike took a sip of coke and let the bubbly drink chill his throat.\n\n\"Thanks Luci, that really hit the spot.\" \n\n\"Mine is purple, and it has a little umbrella,\" Luci informed him happily.\n\n\"Hey all! Got a great vampire joke,\" Terrell injected from across the table. \"Listen up guys - these two idiots walked inside a haunted house, right?\"\n\n\"Who were they?\" Lucy asked curiously.\n\n\"Not important. But once inside, they spotted a vampire...\"\n\n\"A phony one making cocks?\" she wanted to know.\n\n\"A real one of course,\" Terrell continued. \"So the first idiot got spooked and screamed: Count Dracula! After which the other one went: One-Dracula, two-Dracula, three-Dracula...\"\n\nIt was a pretty lame joke of the kind that gets funnier with increased alcohol intoxication. But people laughed anyway. However Lucy kept waiting in anticipation.\n\n\"Then what happened?\" she asked Terrell excitedly. \"And why did they see more than one Dracula? There is only one of him.\"\n\n\"Eh, that was the joke Luci. There ain't no more.\"\n\nLuci eyed Mike questioning, but he just shrugged. He had a clear feeling that humor simply might be an incomprehensible concept to her. You could technically attempt to explain the joke, but based on what he had experienced so far, he figured it would be an exercise in futility. Besides nothing kills a joke more thoroughly than explaining it.\n\n\"Anyway, you're sure putting those drinks away fast girlfriend,\" Terrell declared in a rather blatant attempt at redirecting the conversation. \"I dig a hot chick that can hold her liquor. How did Mike get so lucky anyway? How did you guys hook up?\"\n\n\"He made a blood bond with the seal of the Grand Codex Vetitum and invoked the forbidden ritual of Asclepius the Elder,\" Luci replied absentmindedly while studying the reflections in her colorful cocktail with great interest.\n\nMike was in the middle of a sip from his coke and burst out in another coughing attack. This time it was genuine and he got fizz up his nose. \n\nTerrell laughed.\n\n\"Staying in character, eh? Say, are you a cosplayer? Your make-up looks pretty damned sweet and I ain't seen anybody create a full backstory for a Halloween character before.\"\n\n\"That's my Luci for ya,\" Mike deflected with forced levity and put his arm around her. \"A fellow geek at heart.\"\n\nTerrell nodded energetically.\n\n\"No shit man. If you add a set of horns to that skin makeup and slap it on a dude, he'd look like the fucking lord and ruler of Hell himself.\"\n\n\"And what prompts your belief that such an entity must be male?\" Luci asked Terrell in a strangely flat tone of voice while regarding him intensely with her inscrutable black orbs.\n\nHe suddenly seemed less comfortable and began to stutter.\n\n\"I'm... well.... of course... \"\n\n\"Hey, let's hit the floor again Luci. My dancing feet are twitching,\" Mike declared and grabbed her hand to get them away from the sudden air of awkwardness.\n\nShe obediently followed him to the dance floor and once again they surrendered themselves to the music and the enticing rhythms.\n\nLuci danced with her eyes closed, and her seductive feline movements belied the fact that she had only just been introduced to this type of dancing a few hours earlier. Mike simply couldn't keep his eyes off her. The way the dress fit her perfect body like a glove, the way she swirled like a ballet dancer and the way her long and shiny black hair whipped around her shoulders like dark mist. She was like an irresistible demonic siren created to lure men into the deepest pit of depravity with her dance.\n\nIn short, she was absolutely gorgeous and the embodiment of everything he had ever dreamed of. \n\nAnd not easy to fool either, as Mike discovered when the beat of the music slowed down and they moved in for another slow dance.\n\n\"You want to sex again Mike? Already? You are such a satyr!\" she chided mockingly in a low voice while digging his half-erect cock out from the ruined zipper.\n\nIn her hand it didn't remain half-erect for many seconds though.\n\n\"Shit Luci! We can't do this again. We were lucky last time, but we're so gonna get our asses caught if we press our luck.\"\n\n\"But you want to,\" she cooed teasingly. \"I can feel your need growing in my hand.\"\n\n\"There're people with fucking phones all around us,\" he tried desperately without being able to muster the willpower to physically push her away.\n\nLuci stopped and looked at him questioning.\n\n\"What is a fuckingfone?\"\n\n\"A gizmo in your pocket that you can use for talking to people in other places. It can also take pictures and send them to the internet...\" he explained.\n\n\"What is an internet?\"\n\nMike gave up and covered her mouth with his own. Bringing Luci a jour with current technology was a major project, and he was rapidly losing the battle he waged with his own cock. Besides, the room was dark and they had done it once without causing an incident. Maybe it wasn't such a big risk after all, he decided. And she was right - he badly wanted to fuck her again. \n\nLuci ended the kiss and turned around so his hardness was against her ass. For a minute or two they danced like that while she slowly and carefully lifted the back of her dress. Then she bent slightly forward and Mike felt his erection entering the familiar pussy from behind, carefully helped along by her hand.\n\nMike couldn't move much because of the awkward angle, but Luci's slow gyrations against him and the feeling of having his cock squeezed in her wet velvety vice was enough to make him see stars and gasp for breath. \n\nIn a short flash of coherent thought he found himself wondering how he had managed that erection in the first place. Even on a good day with copious amounts of porn he'd never felt a need for wanking more than twice. Yet here he was, well on his way to fire his genetic grenade-launcher for the third time in the span of just a handful of hours.\n\n\"Maybe it's because real sex is just so much more awesome than masturbation?\" he wondered to himself. \"Or maybe it's because of Luci? Is she pulling some succubus trick on me or something?\" \n\nBut like the old saying goes: \"Never look a gift pussy in the mouth.\" Mike decided that his curiosity was purely academic, and that he really didn't give a fuck why he was so horny. He was banging the hottest girl in the house, it felt awesome and that was all that mattered.\n\nWell, until his attention was suddenly forced back to reality by the ear-splitting sound of a police siren reverberating all over the hall. Following the siren, a group of spotlights started sweeping the dance floor in an erratic pattern and Mike froze, feeling terror creeping up his spine.\n\n\"What the hell..?\"\n\nThe siren was soon replaced by the voice of the DJ with an announcement.\n\n\"That was the sound of the midnight siren, and y'all know what that means, right?\"\n\nThere was cheering and clapping all over the room, so apparently most people did indeed know what it meant. Unfortunately Mike didn't have a clue, and Lucy didn't seem to give a fuck but kept grinding on Mike's cock as if nothing had happened. \n\nThe DJ continued his announcement.\n\n\"It's now time to reveal the best costumes of the evening, and the lights will show the way to the lucky winners. If the spotlight stops on you, please come forward to the stage to receive your prize. Ready? Set? GOOO!\"\n\nThe spotlights swept back and forth over the floor for a few seconds, before suddenly stopping to illuminate four dancers... and one of them was Luci.\n\n\"Mike? That blinding light is shining right at me. Why is it doing that?\" she asked confused over her shoulder.\n\n\"Didn't you hear? Apparently you won a prize.\"\n\nThe DJ's voice sounded again.\n\n\"Will our four winners please approach the stage? The rest of you, please stand aside and help them make their way forward... thank you... thank you...\"\n\n\"I won a prize?\" Luci exclaimed with joy and straightened up, causing Mike's cock to bend to the point of breaking.\n\n\"AUW! FUCK!\" he exclaimed. \n\n\"You have to head up front with the other winners,\" a helpful girl informed Luci while pointing towards the stage.\n\n\"I have to go and claim my prize Mike,\" he suddenly heard Luci announce in a voice full of excitement. \"I will be right back, ok?\"\n\nAnd without further ado she simply walked off.\n\n\"Luci, no... wait...\" was all Mike had time to utter before he felt his hard cock slipping out of her and saw his cover against curious eyes walk off towards the stage.\n\nHe did the only thing that came to mind in the moment, and covered his protruding manhood with his hands while bending forward like a person with sudden stomach pain.\n\n\"Hey are you ok man?\" a guy behind him asked in a concerned voice.\n\n\"Anemia,\" Mike replied hastily. \"I'm ok. Just need to keep my head down for a sec. Thanks for your concern bro.\"\n\nSafe for the moment Mike evaluated his situation, and it didn't look too good. He was sporting a serious erection that was impossible to get back inside his pants, and even if there had been a way, the broken zipper would not have been able to hold his cock back in it's current engorged condition.\n\n\"I am screwed,\" was the only term he could think of that adequately described his immediate prospects. \"Make it all the way to the bathroom walking in a crouch without attracting attention? Yeah right!\"\n\nHe knew that there was no way it could be done, and that thought alone ought to have been sufficient to kill his erection. But for some reason it wasn't. He was, to put it bluntly, caught in a no-win scenario by his own libido. \n\nJust then a shadow fell on the floor in front of him, and Mike sensed a presence looming. Anxiously he looked up where his eyes met the questioning face of Patricia.\n\n\"Hi Pat,\" he croaked defeated.\n\nMike didn't know what else to say or do. There was no way his luck could be this bad. It had to be a nightmare.\n\nPatricia closed the distance between them and bent down.\n\n\"Do you have a problem I can help you with? I don't mind if it's a hard one.\"\n\nWithout waiting for an answer she slid her hand down behind his and grabbed hold of his cock.\n\n\"Yes, this is definitely a big problem,\" she stated teasingly and moved closer so Mike was able to stand up without flashing the room.\n\nThere wasn't enough space between them for penile masturbation in the traditional sense of the word - at least not if they wanted to keep things discreet - so instead Patricia was rubbing and kneading his cock like a rod of modeling clay.\n\n\"You guys actually had sex right here on the dance floor?\" she whispered in amazement. \"I didn't believe it at first, but your thing is completely soaked. That is her juices I am massaging you with, isn't it Mike?\"\n\n\"And you are doing it great Pat,\" Mike acknowledged dreamily. \"I always loved your hand jobs.\"\n\n\"Well, an eighteen year old virgin who doesn't put out on dates got to have to have something else going for her to remain popular with the guys,\" Patricia explained with a tinge of sadness in her voice.\n\nMike didn't know what to say, and he was too busy breathing heavy anyway. When praising Patricia's handiwork, he wasn't exaggerating. This wasn't going to take long.\n\nPatricia was fully aware of his state of arousal, and intensified her kneading. At the same time she kept whispering right next to his ear, sending wave after wave of sweet chills rolling up his spine.\n\n\"You are getting close Mike. I can feel it. You are almost there. Just let it go. Don't worry about anything. I'm here for you. Let your Pat take good care of you...\"\n\nMike muffled a roar by pressing his mouth against Patricia's shoulder as his orgasm took hold and his cock started pumping inside her skilled hand. She matched her movements to the contractions and kept milking him until he was way past finished and begged her to stop.\n\nAt that time his mighty love-rod had softened and retracted to it's deflated size, and it was easy for Patricia to put it back inside his pants without anybody noticing.\n\nMike relaxed and gave her a big satisfied smile of relief. \n\n\"I dunno what to say Pat, except thanks. I seriously owe you one. You saved my ass big time there.\"\n\n\"I'm the one who needs to apologize,\" Patricia protested. \"For dumping you and buying into Desmond's bullshit. I must have been temporarily insane. I can't think of any other explanation for my behavior. I'm really sorry Mike, I truly am.\"\n\nShe gave him a quick kiss on the lips with just a hint of tongue.\n\n\"Just a reminder that the offer from earlier is still good. I'll be damned if I want my first time to be a quickie on a dance floor in some club, but if you'll care to join me in a place with a real bed later tonight, I'll be very happy to have you as my first.\"\n\nAs if to emphasize her words, she slowly opened her right hand, that was wet and sticky from a mixture of Luci's secretions and his own cum, and proceeded to lick her palm clean like a cat while suggestively holding his gaze.\n\n\"If you liked the hand so much, just imagine how you would love the whole package,\" she teased with a suggestive smile before turning around and walking away without looking back.\n\nMike watched her speechlessly disappearing into the crowd. Yesterday he was a male virgin who had just been dumped and couldn't get a date to save his life. Today he had fucked so much that he was physically sore, and the girl who dumped him had just jerked him off, eaten his cum and practically handed him an invitation to the most important sexual event of her life bent in neon.\n\n\"What the fuck happened?\" he mused to himself. \"I'm exactly the same dude as last week. I didn't even change my fucking aftershave. How did I go from dweeb to love-god in the span of a day?\"\n\nThe only variable he could think of was Luci...\n\n\"Luci!\" he suddenly remembered. \"Oh shit! Luci!\"\n\nApologizing left and right he pushed and shoved his way as close to the stage as possible. He made it to the front row just in time.\n\n\"And our last winner of the evening is the gorgeous demoness, Miss..?\" the DJ asked.\n\n\"Luci,\" she replied.\" And I am not actually a demon.\"\n\n\"Of course you ain't no real demon miss Luci,\" the DJ laughed. \"But you sure have done a fantastic job of looking the part. This skin makeup is amazing, the black contacts and the teeth are top class and the simple dress complements the sexy yet infernal look to perfection. Is it homemade or off-the-rack?\"\n\n\"I borrowed it from Mike's sister, but forgot the underwear,\" Luci answered with a serious expression.\n\nOf course this information caused most of the guys in the vicinity of the stage to break out in cheers and wolf whistling. At the same time most of the girls immediately upgraded Luci's threat level to DEFCON 2.\n\n\"I see,\" the DJ continued after the noise had died down. \"It's probably warm enough in here anyway. So have you had a good time tonight Miss Luci?\"\n\n\"Oh God no!\" Mike thought with a sense of impending doom. \"Please don't let her blurt out everything we just did.\"\n\n\"Do not worry Mike,\" Luci's clear voice sounded from speakers all over the dance area. \"If you do not want me to, I shall not share anything with anybody about our sexing. I do wish that you would stop using bad words though.\"\n\nThat remark brought her laughter and ovations from the audience, while Mike did his best to melt into the ground. A few acquaintances pointed in his direction and gave him winks and victory signs, but he managed to stay largely anonymous while he cursed himself for having forgotten about Luci's mind reading abilities.\n\nWhen the crowd finally quieted down, he DJ continued his interview.\n\n\"Since we apparently won't hear any juicy details about your sexcapades with this lucky Mike-fellow, maybe you could tell us what else you've been up to for Halloween?\"\n\n\"Certainly,\" Luci declared with a big smile. \"This evening the fake vampire assisted me in trying out a cock of each color, except for a pink one. They were all pretty and very tasty. I will definitely have a pink one tonight as well.\"\n\nThe room virtually exploded in cheers and whistling.\n\nThe DJ looked like a man about to either pass out or change career. But the show must go on, and his next question was directed at the technical details of what he assumed was her costume.\n\n\"Once again I must say that your makeup looks amazing Miss Luci,\" he gushed in praise after the noise had subsided. \"Can I feel the texture?\"\n\n\"You may touch me,\" Luci offered accommodating.\n\nThe DJ put his hand on her shoulder and let it slide down her upper arm.\n\n\"It feels warm and soft,\" he commented. \"Not at all rubbery or sticky, but organic. The details in the paint job are exquisite. Easily up to Hollywood standard. Almost like...\"",
        "At that moment the DJ caught Luci's gaze and he froze on the spot. From his position in the crowd Mike saw the man's eyes widen and his lips moving rapidly in something that looked like a silent prayer. Luci just stood patiently, waiting for him to finish his examination.\n\nEventually the DJ seemed to catch himself, and removed his hand from her like somebody who had just touched a hot burner. Somewhat flustered he handed her the prize, and it looked to Mike as if he went out of his way to avoid direct contact with her hand.\n\n\"Thank you for participating Miss Luci, and please accept this diploma and a gift certificate to the Carlson Cineplex Movie Palace, valid for ten movie tickets of your own choosing. Give our winner a hand everybody!\"\n\nPeople clapped while Luci accepted her price, looking very proud.\n\nOn her way down from the stage she was followed by numerous pairs of hungry male eyes, and Mike realized that any notion of being discreet had gone out the window with her newly acquired fame. He doubted that it was feasible to even attempt to explain the concept of subtlety to Luci anyway, so he decided to simply roll with it and do damage control along the way.\n\n\"He gave me a prize Mike,\" Luci announced proudly and held the diploma and the gift certificate out to him. \n\n\"Congratulations Luci,\" Mike forced himself to say calmly. \"You left me in serious pickle though.\"\n\n\"Pickle? What is that?\"\n\n\"A bad situation,\" he corrected himself. \"We were fucking, and you just took off in the middle of everything and left me and my cock standing alone in the open, in view of everybody.\"\n\n\"But I had to go and get my prize Mike. Patricia was there to assist you in my stead, was she not?\"\n\n\"You knew about Pat..?\" Mike started, but thought better of it. Of course Luci knew.\n\n\"Never mind. Mischief managed. Lets just forget it and move on. What do you wanna do now Luci? More dancing?\"\n\n\"I would like to acquire a pink one Mike. Could we return to the table for a while? Or do you want to sex more?\"\n\n\"I'm good,\" Mike said hastily and meat it. He'd had enough close calls for one evening.\n\nSo he walked back to the group while Luci headed for the bar and her personal bartender.\n\n\"Where is Terrell?\" he asked upon noticing the empty seat.\n\n\"He didn't feel good,\" another of his friends said. \"Looked kinda shaky and freaked out. He decided to call it a night.\"\n\nFrowning Mike whipped out his phone and typed a message: \"U ok bud?\"\n\nThe reply came swiftly: \"I know what she is\"\n\nFinding the reply very un-Terrell'esque, Mike typed: \"So what? U racist?\"\n\nThere was no reply.\n\nMystified by Terrell's strange and uncharacteristically behavior Mike tried calling instead, but his call went straight to voicemail. The phone had been switched off.\n\n\"What the hell is his problem?\" Mike wondered. \"He didn't look that drunk. Maybe he hit the weed when he got home?\"\n\nWhatever ailed him, Mike figured that a good night's sleep would help Terrell get his ducks back in a row. He decided to drop it for the time being and check on him the next day. \n\nLuci returned with her pink cocktail and they spent the remaining hour until closing time socializing and engaging in small talk. Several guys and a few girls came by the table and asked Luci to dance. However she politely but firmly declined every single one of them. A few even brought her a drink. In those cases she accepted the cocktail, wolfed it down in one gulp and declined anyway.\n\nAfter a while Mike started to feel bad about it.\n\n\"Y'know Luci, I hope you're not shooting down all those guys on my account. If you wanna dance with other people, I'm totally cool with it. Like a penguin in a freezer cool.\"\n\n\"Thank you for your consideration Mike. If you want me to, then I shall listen to the next person who addresses me and give thought to any suggestion put forward.\"\n\n\"It's not like I want you to,\" Mike defended himself. \"But I don't want you to not do it on my behalf either and... never mind.\" \n\nMike decided to let it go. Luci may have been a demon, but apparently she was strictly a one-man demon. Though he wouldn't have admitted it, even under torture, her unwavering dedication made him feel warm and fuzzy inside. He found himself vaguely amused by the irony that a fiend from Hell came across as more faithful and trustworthy than any earthly girl he had known so far. Patricia included.\n\nOn a whim he bent over and kissed her.\n\n\"Thanks for being such a fucking awesome escort Luci.\"\n\nThe gesture earned him a big pointy-toothed smile.\n\n****\n\nEventually the closing call came, and the staff began herding people towards the exits. Ragnar the Viking and his barbarian compatriots had to manually escort a few loud and drunk patrons out the door, but for the most part the exodus from the club went in a smooth and orderly fashion.\n\nOutside the club Mike stood still for a moment letting the cool October air clear his lungs when he suddenly felt Luci tugging at his sleeve.\n\n\"Mike,\" she moaned in a slurring voice. \"I feel... strange... the ground is moving...\"\n\nMike looked at her and frowned.\n\n\"You're drunk Luci. The booze must have caught up with you after all. Maybe it's the cold that did it.\"\n\n\"The pr... pretty cocks are... doing this to me?\"\n\n\"Yep, that's how they usually work if you drink too many. Apparently on you too.\"\n\nMike put his arm around her for support.\n\n\"Let's get to the car so you can sit down.\"\n\n\"Ohhh everything is moving now...\" Lucy moaned and walked along on shaky feet.\n\nThe parking lot in front of the club had been full when they arrived, so his car was parked in the next one, about half a mile further down the street. They couldn't walk very fast due to Luci's condition, and by the time they were approaching their destination Mike was carrying her in a princess hold.\n\nLetting her walk by herself had proved futile since her motor control was completely out the window and she kept stumbling over her own feet. Where she had shown amazing resistance to alcohol earlier, Luci now seemed to be affected to an extraordinary degree by it.\n\n\"Demons sure are weird creatures,\" Mike sighed under his breath.\n\n\"I.... mmm.... no dzemon...\" Luci slurred against his shoulder without opening her eyes.\n\n\"Well,\" Mike replied out loud. \"You're definitely weird, so I'm at least fifty percent right.\"\n\n\"Meanie!\" she pouted in a very non Luci-like way and hit him with a weak punch.\n\nMike was engaged in wondering where the hell she had picked up that way of talking, when he finally spotted his car. He also noted that somebody was sitting on the hood smoking a cigarette. Mike couldn't believe the audacity of the guy. If there was as much a single scratch, the shithead was SO gonna pay for the repair.\n\n\"Get your fucking ass off my car!\" he yelled and picked up the pace.\n\nAs he got a little closer, the shithead in question turned out to be Desmond.\n\n\"Hi Mike,\" he saluted and jumped down from the car.\n\nDesmond dropped the cigarette to the ground and stomped it out before continuing his greeting.\n\n\"Good to see you. I've been waiting for you two.\"\n\nMike stopped ten feet from the car and nodded at him reluctantly.\n\n\"Next time wait on a bench or something. My car is no fucking sofa. Hows the hand by the way?\"\n\nDesmond lifted his right hand that was in some kind of cast reaching half way up his forearm.\n\n\"As you can see I'm all done masturbating for a while, and thanks to your meddling ass I'm unfortunately without somebody to do it for me.\"\n\n\"Fuck off Desmond,\" Mike growled irritated. \"I didn't do shit to you. But I fucking should have. Pat is a nice girl y'know. She doesn't deserve to be played by some asshole who just want to get his rocks off.\"\n\nMike saw Desmond close his left hand to a fist and felt a measure of satisfaction. He was clearly getting to him. Good! \n\n\"Yes of course Mike. I know that it wasn't you alone. That red skinned hell-slut you are dragging around is as guilty as you are. But rest assured that I'm on to you. I took your woman because I'm the better man, and you just couldn't hack it. Ain't that right Mike? Jealousy's a bitch.\"\n\n\"Are you sure you didn't hurt your head too Desmond? In case it slipped your mind, I was standing several fucking feet away when you guys had your little lovers quarrel. I didn't say shit to Pat before you were dragged out of the club like a sack of garbage. In fact, we hadn't talked at all since she broke up with me last week.\"\n\n\"Oh is that so?\" Desmond sneered. \"Then how the hell did a dumb slut whom I've never even laid an eye on before come up with all that bullshit about me? You fucking wrote her a script, is how! Just admit it sissyboy. This was all your plan, and it worked. You got me good.\"\n\nMike was getting irritated, and the drooling Luci was starting to feel heavy in his arms.\n\n\"Even if I told you everything, you wouldn't understand. So I'm not gonna dignify your ass with a reply. You're in no condition to fight, so why don't you get the hell out of my way. You've said your piece, and I've heard you Desmond. Now start walking.\"\n\nDesmond grinned in an unsettling way like the cat that got the cream.\n\n\"Right you are, I've said my piece. But y'know Mike, I haven't really paid you back for the pain yet. Not by a long shot.\"\n\nMike heard soft steps from behind and looked around to see four men approaching.\n\nHe had been so focused on Desmond that he hadn't noticed their presence, and now it was too late. There was little doubt in his mind that he was facing a goon squad, and their intentions were probably not good.\n\nHe tried to appeal to Desmond's common sense.\n\n\"So you think you'll have an easier time finding somebody to wank your weenie in prison? Which is where you can bet that you're going when I press charges on your ass for assault.\"\n\n\"Just for your information, I'm not here Mike,\" Desmond said with a smirk. \"Right now I'm hanging out at a private after-party with ten people, who'll all swear that I came straight from the hospital and never left. So have fun with your charges... when you get well enough to speak to anybody, that is.\"\n\nOne of the men - a fat bearded guy - grabbed Mike in a chokehold from behind, while another forced Luci out of his grasp and carried her over to Desmond. Mike felt himself being pressed down in a kneeling position by a strong arm. He was fuming with rage, but there was nothing he could do. These guys were brawlers and used to beat up people. Mike was a nerd and no fighter.\n\n\"How do you like that position,\" Desmond asked in a teasing tone of voice. \"I plan to have Pat sitting like that later when we visit her at home. I'm gonna pop that cherry tonight, with or without her permission.\"\n\nMike just scowled and did his best to ignore the bait. Biting wouldn't help, and the more he antagonized his attackers, the more severely he would get beaten. Best to bide his time.\n\n\"What do we do about the slut Des?\" one of the guys asked. \"She doesn't wake up when you shake her. Should we slap her around a little?\"\n\n\"No! Don't do that! She is one concrete bitch you definitely don't wanna hit with your bare hands. Let me try something else instead.\"\n\nDesmond knelt down and pulled Luci up in a sitting position with his uninjured hand. He held her close and screamed right next to her ear.\n\n\"WAKE UP BITCH!\"\n\nThe technique seemed to work at first, and Luci stirred slightly. She even opened a black eye for a moment and looked sleepily at Desmond without any sign of recognition. Then she leaned into his chest and vomited violently against him before falling back asleep.\n\n\"Fuck!\" Desmond roared and jumped up. \"Bitch puked all over me! It's inside my shirt and everything. Arrgh! Fucking hell!\"\n\nHe stomped around, cursing and shaking his shirt for a while. Then he turned to glare at the sleeping Luci with eyes oozing of malice.\n\n\"The bitch doesn't need to be awake in order to be taught a lesson, \"he declared. \"She'll wake up sore tomorrow and know without a doubt that she had a real man inside her... or four. You can go first Curt.\"\n\nMike realized that they planned on gang-raping the unconscious Luci, and completely lost his cool despite his earlier resolution to remain calm.\n\n\"Animals! Pond scum! Toilet bugs! I'll slap you so hard your kids will be born unconscious! I'm gonna kill all of you, I fucking swear!\"\n\nHe heard the guy holding him snicker, and the rest of the crew turned to face him.\n\n\"Uh oh, the mighty mouse is barking,\" Desmond announced with a laugh. \"Make sure our guest of honor watches the entire show Brad. Don't let him look away, ok? This is a very important educational event for him.\"\n\n\"Sure thing Des,\" the guy holding Mike acknowledged.\n\nMike was furious and the feeling of helplessness was driving him crazy.\n\n\"Fucking low lives. I'll kick your asses into orbit. I'm gonna rip out your spines and beat you to death with them! I'll...\"\n\nMike's tirade was cut short by a shrill scream followed by a hollow thud. Luci had moved with her signature inhuman speed and was now standing with a bloody length of bone in each hand and two piles of bleeding human remains at her feet.\n\n\"Is it necessary to beat them as well Mike?\" she asked confused. \"They are already dead...\"\n\n\"Noo! Cuuurt!\" one of the remaining men howled and charged Luci with raised fists.\n\nWith a swift motion, almost too fast for the eye to follow, Luci swung one of the spines and hit the charging goon full force on the side of the head. Mike imagined that he heard a sound like the snapping of a twig, and the assailant dropped like a stone, never to move again.\n\nLuci smiled victoriously.\n\n\"That one was indeed beaten to death. That was good, wasn't it Mike?\"\n\nThe pressure holding Mike down disappeared when the goon behind him staggered to his feet. Desmond was already running for the exit, so the last remaining bad guy - the one whom Desmond had referred to as Brad - was suddenly all alone. Eyes shining with pure terror he slowly backed away, while never removing his gaze from the smiling demon girl standing next to a gory pile of his former comrades.\n\nWhen he was about thirty feet from the car, he quickly turned around and ran like bat out of hell in the same direction as Desmond.\n\n\"Monster!\" he howled in a shrill tone, balancing on the edge of insanity. \"Help! A murdering monster!\"\n\nMike staggered over to Luci while doing his best to not look too closely at the carnage around her.\n\n\"You can drop those... spines now,\" he said carefully. \"There is a drinking faucet over there. Let's go rinse you off and get out of here Luci.\"\n\n\"Sure Mike. Do you not want to beat them first though? Here, take this...\"\n\nShe held out one of the bloody spines to him, and he couldn't help but recoil.\n\n\"No thanks Luci. I'm good. In fact, I'm gooder than I've ever been before. Fucking Mother Theresa good. So lets just get the hell out of here as fast as possible.\"\n\n****\n\n\"Fuck! Fuck! Fuck!\" Mike cursed rhetorically as the bloody parking lot rapidly disappeared in the rear view mirror. \"Luckily this is a shitty area with no surveillance cameras. But Desmond and that asshole saw everything, and with three dead bodies the cops are gonna go through the area with a fine toothed comb...\"\n\n\"Why would anybody use a comb for such a strange purpose?\" Luci asked curiously.\n\n\"LUCI! Shut the fuck up, for the love of God!\" Mike snapped, clearly close to his breaking point.\n\nLuci seemed taken aback by him suddenly lashing out at her. She turned away with a sad expression and commenced to stare out the window at the night-time cityscape rushing by.\n\n\"God does not love anybody anymore Mike,\" she said in a low melancholic voice.\n\nMike didn't know what to respond to that, and they drove in silence for a while. Occasionally he stole a glance at Luci who appeared lost in her own thoughts, and he started to feel pangs of regret for yelling at her. This wasn't her world. She couldn't be expected to know everything about it. She may come across as a ditz and act like a fish in the desert, but who wouldn't in her situation?\n\n\"Luci... I... well... I'm sorry for yelling at you,\" Mike mumbled apologetically.\n\nLuci turned her head and looked at him with her black orbs. She seemed neither angry nor sad.\n\n\"I do not quite understand the reason, but I am well aware of your distress Mike. You are welcome to raise your voice at me, if it helps you feel better.\"\n\n\"No, I am really sorry Luci. I should not have yelled at you. I was acting like a dick. But... seriously - did you have to kill those bastards? We could just have incapacitated them and called the police y'know.\"\n\n\"The police?\" Luci asked with a frown. \"You mean that we could have called upon the guards of the city to execute them in our stead?\"\n\n\"Well, arrested them at least. Today we don't execute people for anything less than murder.\"\n\nLuci's voice turned serious and her black eyes seemed to grow more intense.\n\n\"Know that their souls were dark Mike. They were fully intent on sexing me against my will, judging us to be defenseless and incapable of preventing such an act. Does that not warrant punishment in your world?\"\n\n\"Most definitely,\" he replied carefully. \"But private citizens can't just deal out deadly punishment like trick or treat candy. That's what the law is for.\"\n\n\"Your law will not suffice in this case Mike. My station demands that I not allow such an insult to go unpunished, and that is an obligation that goes before everything. Even our bargain. So their lives were forfeit regardless.\"\n\n\"But you couldn't possibly know whether they would actually have gone through with it...\"\n\nMike stopped himself, suddenly aware of the glaring logic flaw in his argument. Of course Luci knew. She knew exactly what they were thinking.\n\n\"You should also know that they would rape you as well Mike. The one named Curt Mueller had in his possession a bottle, which he was going to forcefully insert into your rectal orifice. He has done so to men on previous occasions, and he derived pleasure from that act.\"\n\n\"Yikes!\" Mike exclaimed. \"I understand that Dog was pissed after all the stuff with Pat, but seriously! Outch!\"\n\n\"That was why you wished for me to beat them to death with their own spines, was it not?\"\n\n\"Just a manner of speaking Luci,\" Mike protested, rolling his eyes in exasperation. \"Nobody actually does stuff like that!\"\n\n\"Really? So maybe we have just created a new tradition, eh? Should we name it?\" she replied with a teasing wink.\n\nMike turned to stare at her in disbelief. Then he noticed her smug expression and realized that he'd just witnessed Luci's first attempt at deliberate humor. It was so outrageous and inappropriate that he couldn't help himself and burst out laughing. It felt great, almost like a mental catharsis after the horrors of the parking lot.\n\n\"You are definitely something else Luci. Gotta give you that.\"\n\n\"So I keep telling you,\" she replied with mock modesty. \"It pleases me that you finally noticed.\" \n\n\"Anyway, how do you feel?\" Mike inquired, changing the topic. \"Are you still dizzy?\"\n\n\"I am fine now Mike. My recollection after we left the ball is somewhat lacking, but I remember regurgitating at some point. Afterwards I started feeling better.\"\n\n\"Yeah, you sure barfed all over Desmond. That was fucking awesome actually,\" Mike noted with a grin.\n\n\"I did? That specific detail eluded me. And how did we get to that arena? I do not recall walking there.\"\n\n\"It was a parking lot and I carried you there,\" Mike replied.\n\n\"You carried me? That was... very nice of you.\"\n\nFor some reason Luci looked happy upon hearing that. But then her face turned more serious.\n\n\"Though I am mystified as to what happened to me Mike. Could the cocks have been poisoned?\"\n\n\"Yeah,\" Mike confirmed. \"They have that effect if you get a lot of them. And I'd say that trying out the entire menu qualifies as a lot.\"",
        "Luci nodded thoughtfully.\n\n\"You know what Mike?\"\n\n\"What?\" he asked.\n\n\"The short period of distress and discomfort was most certainly worth the experience. The cocks were so pretty, and they tasted very good,\" she declared with a big pointy-toothed smile. \"I do not mind getting carried by you either.\"\n\nLuci placed a suggestive hand on Mike's leg.\n\n\"Can you sex while controlling this machine Mike?\"\n\n\"I don't know if I can get it up any more tonight, period. A man has a certain capacity limit y'know.\"\n\nShe slid her hand down to his crotch.\n\n\"You have not yet reached that capacity limit of which you speak, I would wager.\"\n\n\"Even if you were right Luci, I'm definitely gonna crash the car if you go any further with that hand,\" Mike declared reluctantly.\n\nLuci stopped her advances, but kept her hand resting in place while the car made it's way through the chill Halloween night, heading for the Bower estate.\n\n****\n\n\"Looks like mom and dad are out,\" Mike noted when they entered the house. \"Probably a good thing. I dunno if they've calmed down yet after we blew up their little neighborhood get-together.\"\n\nOn the way up the stairs Luci pulled off the dress and stepped out of the boots. She was completely naked when they reached the first floor. \n\n\"I owe your sister my gratitude for the use of this dress Mike.\"\n\n\"I'll be sure to pass it on,\" Mike said with no intention of ever doing so.\n\nThey dumped the dress in the dirty clothes basket, returned the boots to the closet and withdrew to Mike's room. Luci sat down on the bed and patted the mattress with her hand.\n\n\"Is this the place where people are normally sexing Mike?\"\n\n\"I guess you could say that,\" he confirmed. \"As you know I don't have much experience though.\"\n\n\"Would you like to acquire some?\" she asked seductively.\n\n\"Like I said in the car, I don't know if I can get it up Luci. The poor thing has seen a lot of use tonight, as you well know.\"\n\n\"Pray leave that problem to me Mike. After all you summoned me to be your servant, did you not?\"\n\n\"But you aren't,\" Mike protested weakly.\n\n\"I could certainly act that way, if you should so desire oh master conjurer. Now please lie down so your slave can perform oral stimulation on you.\"\n\nFaced with a willing woman as gorgeous as Luci, no healthy male on the planet would have been able to offer any meaningful resistance. So a certain male who went by the name \"Mike\" soon found himself nude on the bed getting a blowjob. Initially he felt a slight trepidation by having a highly sensitive part of his body inside a mouth filled with sharp and pointy teeth, but his cock had no complaints and thus neither did he. Instead he closed his eyes and allowed himself to relax and simply feel good.\n\nIn fact, it felt way too good.\n\n\"Stop!\" he gasped after few minutes. \"Or you're gonna waste a perfectly fine erection in a few moments.\"\n\nApparently Luci didn't want to risk that, so she reluctantly stopped fellating him and rolled onto her back, shooting him an expectant look that was impossible to misunderstand.\n\nBut this time Mike wasn't going to indulge her.\n\n\"Not yet slave girl. First your master wants to try something that he has fantasized about since he watched his first porn movie. Brace yourself.\" \n\nInstead of getting on top of Luci as she had expected, mike placed himself with his head between her legs. She sat up and stared down at him with a confused expression.\n\n\"What are you doing Mike? Are we not sexing?\"\n\n\"I just want to do the same for you as you just did for me,\" Mike explained.\n\n\"But I do not need an erection. In fact, I cannot have one.\"\n\nMike was baffled.\n\n\"Wait Luci! You have existed for like a gazillion years, yet you don't know anything about eating pussy? I mean, at least I have an excuse - I'm a newly converted virgin - but what's yours?\"\n\n\"So this eatingpussy is part of sexing in your world?\" Luci enquired.\n\n\"Yep, so lie back, make yourself comfortable and get ready to rumble,\" Mike declared with unyielding determination and pushed her gently but firmly back down.\n\nOf course he wasn't nearly as self-assured as his cocky attitude suggested, and he also felt a little worried about what he might be getting himself into.\n\n\"What if the fucking thing has teeth or tentacles or some other demon shit?\" he couldn't help thinking.\n\nBut to be fair he'd already had his cock buried in her several times, and nothing had taken a bite out of it yet. So he figured that chances were good that he would find a normal girl-pussy inside her bush.\n\nHer rather well grown bush, to be specific.\n\nNot relishing the prospect of ingesting a pound of demon-fur, Mike moved the wild vaginal vegetation out of the way as best he could. Of course Luci picked up on his thoughts immediately.\n\n\"Who is Crocodile Dundee and what is a weed whacker?\" she asked curiously.\n\n\"A movie character and a gardening tool,\" Mike replied from down between her legs. \"But never mind that. Have you ever considered like... y'know... shaving?\"\n\n\"But I do not have a beard Mike. Why would I shave?\"\n\nMike gave it up with an inaudible sigh and instead concentrated his attention on the task at hand.\n\nThis had truly been an evening of firsts for Mike, and now he had an actual pussy right in front of his face for the first time as well.\n\nA three dimensional pussy.\n\nAttached to a real... kinda... sorta... girl.\n\nNot knowing a lot of specifics about the noble art of pussy-eating, he simply spread the dense vegetation and proceeded to lick everything in sight with large swiping tongue movements like they do in porn movies. Her juices had a vague cinnamon flavor just like her mouth, he noticed with interest. She tasted good.\n\n\"Girl tastes like Christmas,\" he mused to himself, and almost snorted when he got associations of singing fairies dancing around a hairy pussy.\n\nHowever despite his hard work Luci didn't seem to show much of a reaction. From porn Mike knew that girls were supposed to go ape as soon as a man put his tongue down there. So why wasn't she? He started wondering whether she maybe wasn't very sensitive in the pussy region. Maybe she could only get off by being fucked?\n\n\"Does it feel good?\" he enquired probingly through the jungle.\n\n\"Yes, it feels very nice,\" was the response.\n\nNot exactly the level of enthusiasm he'd hoped for. \"Nice\" was pretty much a euphemism for \"yawn.\" So Mike concluded that he must be doing something wrong.\n\nThinking that maybe that clitoris he'd heard so much about was the way to go, he embarked on a search for the mythical creature. He found it buried in a skin-fold right above the vaginal opening and peeled the hood back with his thumbs.\n\nWhen he circled the little knob probingly with the tip of his tongue, he finally got the porn star reaction he'd expected.\n\nThe moment his tongue made contact Luci tensed, grabbed hold of the sheet with both hands and held on like Leo on the Titanic. And as he continued to stimulate the growing clitoris and the area around it, she soon began moaning and thrashing.\n\n\"Now, that's more like it,\" Mike thought to himself and filed this new discovery to memory under Important Pussy Eating Notes. \"I'm actually beginning to get the hang of this shit. Eat ya heart out Casanova - here comes Mike.\"\n\n\"M-Mike!\" Luci yelled in a voice tinged with desperation. \"I am going to orgasm if you keep doing that!\"\n\nOf course that remark only served to encourage him and he intensified his clitoral stimulation, with the predicted result.\n\nWell, maybe the result was a little more than predicted. At least from Mike's perspective.\n\nSuddenly Luci squeezed her legs together and started grinding his head against her groin with both hands while spasming violently. She was incredibly strong and temporarily out of control, and Mike's head was solidly locked in place while she was riding her orgasm. He felt his mouth pressed hard against her pumping vaginal opening, so on a whim he pushed his tongue as far inside it as possible - just for the sake of doing something to contribute to the action.\n\nIt felt like thrusting it into a combined vice and vacuum cleaner.\n\nHaving never experienced a girl's orgasm up and close before he briefly wondered whether this was a typical girl reaction. But somehow he had a feeling that Luci was special in this respect too.\n\nAfter one final massive contraction, that lasted long enough for Mike to fear that he would pass out from oxygen deprivation, Luci fell limply back on the bed with a loud sigh, obviously spent for the time being. But she didn't relax her legs, so his face remained pressed against her pussy in a chokehold.\n\n\"Haim huck\", Mike complained desperately.\n\nLuci responded in a slightly groggy voice.\n\n\"I do not comprehend your words Mike.\"\n\n\"HAIM HUCK HAMMIT!\"\n\n\"Huh?\" was the reply.\n\nInstead of keeping up the yelling, which didn't seem to work anyway, Mike tried to think about his predicament as hard as he could, banking on Luci's tendency to invade his mind all the time.\n\n\"Oh, my apologies,\" she said and relaxed. He was finally free.\n\nMike rolled onto his back, flexing his liberated tongue and praising himself lucky that his skull hadn't been crushed.\n\n\"Crap on toast Luci! You never told me you were doing Kegels.\"\n\n\"I do not recall ever having sexed with a person of that name,\" she replied confused, obviously expecting him to elaborate.\n\nMike sighed exasperated and decided to drop the subject. They were resting on the bed for a while, before Lucy broke the silence.\n\n\"Mike?\"\n\n\"Yeah?\"\n\n\"You brought me to orgasm without sexing. Why did you do that?\"\n\n\"Foreplay of course. C'mon, don't seriously try telling me that you don't know shit about foreplay,\" Mike exclaimed in disbelief. \"I was a fucking virgin a few hours ago, and even I know what that is.\"\n\nLuci regarded him thoughtfully with her dark orbs and said nothing.\n\n\"You seriously don't know?\" Mike repeated.\n\n\"When last I engaged in regular sexing, no man would willingly have put his face against a woman's genitalia. Nor would a man have worked to pleasure a woman in a manner that would not pleasure himself equally. Your world is indeed a wondrous place Mike.\"\n\n\"Well, it's not like I don't expect some pleasure in return y'know,\" Mike remarked smiling and started stroking his cock which hadn't lost any of it's stiffness during his endeavor into the magical world of oral sex.\n\n\"And that you most certainly shall have,\" Luci declared with a smile. \"Mount me Mike.\"\n\n\"Sure thing. One triple-M coming right up,\" he saluted and rolled on top of her.\n\nAs much as Mike had enjoyed their forbidden tryst in the darkness of the club, it had nothing on full-blown sex with total body contact. The feeling was incredible and despite having been regularly milked over the course of the evening, he soon had to slow down to avoid cutting the experience short.\n\nThe irony of fucking a demon missionary style was not lost on him though, and he couldn't stifle a chuckle.\n\n\"Why are you laugh...\" Luci started to ask curiously, but Mike unceremoniously covered her mouth with his own before she could finish her sentence. For the first time in his life he was the one top and in control. Yep, he was the one doing the fucking now, and he'd be damned if he was going to waste valuable sex-time playing twenty questions.\n\nAnd fucking her he did.\n\nOnce he had found a rhythm that suited his level of self-control, Mike even started to feel as if he could continue indefinitely. A feeling that only lasted until Luci was assaulted by her second orgasm. As her powerful vaginal musculature began pumping around his cock, his control dissolved like ice in a desert. At first Mike's instinct was to pull out before it was too late, but that plan was promptly foiled by Luci when she wrapped her legs around him and held him firmly in place.\n\n\"Did she just read my mind or what?\" he thought in passing.\n\nA slight twitch at the edge of her mouth confirmed his suspicions, and in the face of those odds he decided that he might as well give in. He'd read somewhere that the average duration of intercourse in the general population was five to seven minutes, and those guys probably weren't fucking a beautiful female demon with extraordinary vaginal control. So overall Mike felt that he'd done pretty damned good.\n\nHe decided that he definitely deserved to cum.\n\nWith a grunt he started plowing into Luci as deep and fast as he could, soon joining her in an orgasmic finale that took his breath away and set off fireworks in his brain. \n\n****\n\nAfter a quick shower together they sat on the couch holding hands.\n\nMike glanced at the beautiful demoness next to him and knew that he couldn't ignore the elephant in the room any longer. Consequently he posed the dreaded question that had been festering in his mind ever since he realized that he'd had the time of his life, despite the horrors.\n\n\"So what now Luci? Where do we go from here?\"\n\n\"Naturally I will have to return from whence I came,\" she replied with a sad expression.\n\nMike looked down, feeling a little flustered.\n\n\"Y'know Luci, I've had a great time and I kinda like having you around. Of course you wouldn't blend in so well outside Halloween, but maybe we could...\"\n\nShe interrupted him gently by touching his lips with a finger.\n\n\"And I have a function elsewhere which I must attend to Mike. I was not created for the purpose of dancing, sexing and ingesting pretty cocks, enjoyable as it all was.\"\n\nMike wasn't really surprised. In his mind he had always known that their time together would come to an end. But the realization was still disheartening.\n\n\"So you must go?\"\n\n\"I must.\"\n\nShe took his hand and held it firmly.\n\n\"I sense your disappointment Mike, and it honors me that you feel such discomfort in light of my departure from this world. Know that I will miss your companionship in equal measure.\"\n\nShe stood up and walked towards the pentagram where she had first appeared when summoned. But right before stepping onto it, she stopped and turned to look at him.\n\n\"There might be a way though,\" she considered thoughtfully.\n\nThen her face lit up with that pointy-toothed smile he had come to know so well.\n\n\"Why don't you come with me Mike?\"\n\n\"Huh? How would that work Luci? I'm no demon. I can't just pop in and out of existence all over the place.\"\n\n\"I am no demon either,\" she corrected him. \"As to how it would work, I would extract your soul of course.\"\n\n\"Eh, to be honest that sounds kinda bad Luci.\"\n\nLuci smiled encouraging.\n\n\"Not at all Mike. As soon as the body is ripped apart and devoured, the soul will disperse and can be extracted easily.\"\n\n\"Ripped apart? Devoured?\" Mike exclaimed horrified. \"That sounds very... devourery and definitely painful. I'm not sure I like that idea.\"\n\n\"Painful?\" Luci considered frowning. \"I know of the concept of course, but I am not familiar with the true nature of that which humans refer to as pain. So I do not actually know whether or not it is painful...\"\n\n\"But you can tell me all about it later, right?\" she suggested eagerly and stepped over to the couch.\n\nAgainst his own initial misgivings Mike had grown comfortable in Luci's presence over the course of the evening. But once again he felt the numbing terror he had experienced the first time he laid eyes on her. Despite her appearance she was not of this world and did not operate according to its values and rules. To her, the distance from impulse to action was practically zero. She commanded immense power, but lacked any limitation born of human morals. \n\nA tamed tiger is still a tiger, and there was a very good reason why people didn't keep tigers as pets. As much as he had come to appreciate Luci during the great time he had spent with her, Mike was forced to face the undeniable truth. \n\nHe was the only human in the room. And he was in deep shit!\n\n\"You... you can't do this Luci!\" Mike stammered frantically as she wrapped her arms lovingly around him. \"The book protects me.\"\n\n\"What book?\" he heard her whisper next to his ear.\n\nWith a sinking feeling Mike turned his head and stole a quick glance at the table.\n\nThe Codex was gone!\n\n\"Oh hell!\" was the last coherent thought that went through his head before he drowned in a sea of pain and agony, the magnitude of which he had never imagined existed even in his worst nightmares.\n\n****\n\n\"Do you think Mike and his new girlfriend are having a good time?\" Sarah wondered for the umphtienth time that evening.\n\nEd gave her hand an encouraging squeeze.\n\n\"Stop being such a mother hen Sarah. The boy is eighteen for crying out loud, which means that he is technically no longer a boy. I bet those two are fornicating like rabbits right now... AUW!\"\n\nMike's mother punched her husband's shoulder as hard as she could.\n\n\"I know he's no longer my little boy. Doesn't mean that you have to remind me constantly though. It makes me feel old Ed. They grow up so fast...\"\n\n\"Seriously Sarah,\" Ed berated his worried wife. \"You need to start giving him more space and respect him as an adult. I saw you burn something in the fireplace that you took from his room before we left. Was it a dirty magazine or something? You can't keep doing stuff like that. A boy his age has a right to privacy.\"\n\nSarah's face turned red as a beat.\n\n\"All right Ed, maybe I went a little overboard, but it was just a smelly old book he had in there. That thing was unsanitary and probably had mites in it. I wanted it gone.\"\n\n\"Maybe it was valuable?\" Mike's dad suggested.\n\n\"Hardly,\" Sarah contested firmly. \"It was practically falling apart when I lifted it up, and the cover was smeared with old ketchup or paint or something. If he makes a fuzz over it, I'll buy him a new one.\"\n\nMike's dad shrugged. When Sarah set her mind to something, she was a force of nature.\n\n\"It was a little strange though,\" Sarah continued thoughtfully.\n\n\"What was strange?\"\n\n\"At first I asked Consuela to bring me that disgusting book, but she claimed that she couldn't lift it off the table or even move it an inch. She said it was glued in place. However when I went and got it myself, I had no such problems.\"\n\n\"Do you suspect Consuela of deliberately lying to you?\"\n\nSarah thought about it for a few seconds.\n\n\"I can't imagine that Ed. She has been our maid since Mike and Sue were in kindergarten. I trust her in every way. But maybe she is getting a little frail from old age.\"\n\n\"Well,\" Ed declared while getting up. \"If you don't wanna share that fate, you'd better make sure to exercise regularly. So let's head to the dance floor right away pretty lady.\"\n\nSarah giggled and followed her husband's lead.\n\n****\n\nEpilogue\n\nThe young detective entered the room and stood for a moment watching the forensic technicians working on securing evidence from various sections of the crime scene. Almost right away he spotted his colleagues by the couch in the far corner and walked over to announce his presence.\n\n\"If it ain't the greenhorn,\" one of the senior detectives remarked teasingly.\n\nDetective Greene - yes that was actually his name - was used to it. You needed a thick skin in order to work in homicide, in more ways than one.\n\n\"Reporting for duty Sir,\" he said and made a mock salute. The other detectives laughed.\n\n\"So where is the vic?\" he inquired, eager to get started.\n\n\"All over the place,\" detective Greerson said. \"In fact, ya are standing on him.\"\n\nShocked Greene looked down at his feet at the pink carpet.\n\n\"That carpet ain't supposed to be pink y'know. It's actually white.\"\n\nGreene almost jumped away from the carpet onto the wooden floor.\n\n\"He's there too,\" Greerson explained helpfully. \"Every surface in the room is covered with a thin layer of human tissue. We're awaiting confirmation, but it's safe to assume that the DNA will match the vic.\" ",
        "The young detective stared at him with wild eyes. Greerson either didn't notice or didn't care. Those who knew him would say both.\n\n\"If ya want a bigger piece to look at, there's a small pile of raw hamburger and some tattered clothes over by those techs. I think they're almost done, so you are probably welcome to it. There is more hamburger in the evidence container by the door, and I think they sent another pound or so to the m.e...\"\n\nThat was how far he got before detective Greene bolted gagging for the door while holding a hand in front of his mouth.\n\n\"You really are a sonofabitch Greerson,\" one of the other detectives remarked.\n\n\"He'll be ok Dave,\" Greerson protested. \"He's a good kid, and we've all been there. What doesn't kill ya, makes ya stronger and all that shit.\"\n\n\"So what do you think happened here,\" Dave asked.\n\n\"Judging from the scene I'd say somebody put the poor bastard through a blender and spray-painted the room with the juice.\"\n\n\"So we're basically looking for a house painter who owns a giant Kitchen Aid? Should be easy enough,\" Dave sighed sarcastically. \n\nGreerson's stony face took on a troubled look.\n\n\"Hell if I know what we're looking for Dave. When I served Uncle Sam down in the sand pits, those camel fuckers sometimes blew themselves up trying to take us with them. Some wore grenade harnesses or belts, and a few even shoved explosives up their asses. I did a lot of cleanup back then and saw some seriously bad shit, but I ain't never seen anything like this. Not even close.\"\n\n\"He was discovered by his mother?\"\n\nGreerson nodded.\n\n\"She's in the hospital under medical care. Had a total breakdown and can't be questioned for the time being. The father and the daughter are staying at the Holiday Inn.\"\n\nA female detective - an attractive redhead whose maturity was revealed by a few grey streaks in her shoulder length hair - joined the conversation.\n\n\"Do you think this is connected to the multiple homicide at the downtown parking lot?\" she asked.\n\n\"Probably,\" Greerson admitted. \"The two suspects claim that the murders were committed by a girl that we so far only know as Luci in cooperation with the vic of this crime... erhm...\"\n\nGreerson fished out a small notebook and checked his scribbles.\n\n\"... Michael Weston Bower,\" he continued. \"Eighteen years of age and a student at the local university. The existence of the girl known as Luci has been confirmed by his father, but he has no further information about her. We can't do a reliable composite, cause he only saw her decked out for Halloween. All we have on her so far is five foot four, black hair down to her waist, apparently somewhat of a looker, body proportions like a model... and according to the witnesses interviewed - a complete list is in the case files - she comes across as naive and very forward, bordering on tactless.\"\n\n\"That could be any of thousands of young women,\" the female detective sighed.\n\n\"True,\" Greerson agreed. \"But she is connected to a total of four homicides, so ya can bet that we're gonna look for her pretty hard. If she's out there, we'll get her.\"\n\n\"How does the m.o. of the two crimes match?\" she inquired.\n\n\"They don't. Well, except for the fact that they both are equally batshit crazy. In the parking lot two of the vics had a section of their thoracic spine mechanically extracted, which caused massive trauma resulting in almost instant death from blood loss. The third vic had his neck broken from a blow to the head by a blunt object that has been identified as the spine of vic number two. Death was also instantaneous for that one.\"\n\n\"Spines mechanically extracted? How was that done?\"\n\n\"According to statements from the two suspects, the mysterious Luci ripped the spines out of their backs with her bare hands. Though the medical examiner disputes the validity of this, claiming that some type of tool must have been used. The force required exceeds the theoretical maximum of a human hand by a considerable margin.\"\n\nThe female detective shook her head looking like somebody who desperately needed a vacation. \n\n\"Do we have a time of death for this vic?\" Dave wanted to know.\n\n\"Estimated three thirty-five last night. According to the neighbors they heard continuous screaming from this house starting around five minutes past three and continuing for roughly thirty minutes. This being Halloween an' all they didn't think much of it, but fortunately they remembered the time. Plus the fact that it definitely was a man's scream.\"\n\nThe female detective frowned.\n\n\"So the vic is alleged to have screamed continuously for thirty minutes?\"\n\n\"Yep,\" Greerson confirmed. \"Took the poor bastard a long time to die. Whatever happened, he musta been alive and conscious through a lot of it.\"\n\n\"Shit!\" Dave remarked. \n\nGreerson nodded in agreement.\n\n\"Yeah, hell of a way to go...\" "
    ],
    "authorname": "StrangeLife",
    "tags": [
        "halloween",
        "demon",
        "party",
        "infernal",
        "summoning",
        "sex in public",
        "date",
        "drunk",
        "handjob",
        "costume"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/oh-hell"
}