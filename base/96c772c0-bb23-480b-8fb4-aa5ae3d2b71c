{
    "title": "Chasing The Last Road To Stockholm",
    "pages": [
        "This started out as part of my Conversations universe, but turned out a much longer story than I usually write. I do not apologise for its length, however, having received several emails complaining that I just write flash stories and offer nothing that readers can really get their teeth into. \n\nIf you're not keen on long stories -- don't read it. If you're looking for a wank-spank, don't read it -- there's some sex, but that's not what this is about. If you don't like dialogue, then definitely don't read it. \n\nSo, on the basis that you can't please everyone, so you might as well please yourself -- and that my professional pride has been wounded by those questioning my skills -- here goes...\n\nCHASING THE LAST ROAD TO STOCKHOLM\n\n<p align=\"center\">\u00ac\u00ac\u00ac*****\u00ac\u00ac\u00ac</p>\n\nHe comes for everything<br>Even love's gotta die<br>But make him take it on the wing<br>Baby let it fly. <br>Skull shine, skull shine...<br>Reaper Man (B. Lake) 2012<br>\n\n<p align=\"center\">\u00ac\u00ac\u00ac*****\u00ac\u00ac\u00ac</p>\n\nZERO HOUR \n\n\"No sudden movements and don't say a fuckin' word! Gimme the keys and walk away. And don't look back if you want to keep your face!\"\n\nNot the most polite introduction, but I guess carjackers don't have the opportunity to read Miss Manners too often. Well... if you think about it, they're probably driving most of the time.\n\nI'd never been jacked before, and despite the very explicit instructions that had been grunt-hissed at my back while something dug into it very pointedly, I really didn't know what to do. Should I put my hands up? How did I then give them my car keys? I didn't want to reach into my pocket for them, in case it sparked off some sort of reaction; maybe they'd think I was going for a weapon of some sort.\n\nIf I walked away without giving them the keys, it seemed I was dead. If I went into my pocket for them, it seemed I'd probably be dead. If I tried to explain my dilemma I'd probably be dead as well; the sheer venom in that voice stated loud and clear that its owner was just looking for an excuse.\n\nAll in all, it was a very weird situation in which to find myself. I had parked on the side of the road in an ocean of wheat fields, miles from any sign of human habitation, and had been just about to unzip to relieve the strain on my bladder, when the weapon was poked in my back. I mean, how ridiculous was that? When did carjackers start hanging about in fields on the ridiculously faint chance that some traveller might stop right there to take a piss?\n\nThe weirdest thing of all -- the part I just couldn't really come to grips with -- was that I wasn't panicked into just throwing a wobbly right there and then. My mind seemed to be clear, and as I was standing next to my car, it directed me to raise my hands and lean slightly to my right to take a glance in the wing mirror.\n\nThe part of the weapon I could see in the reflection looked to be camouflaged; shades of green and brown in various splotches. The barrel looked to be slightly bent and I couldn't really see much of a hammer... or slide... or even a grip held in that small hand. What the hell type of gun was that? I didn't know what to do with the information, until suddenly the whole thing came into focus in my mind.\n\nI twisted suddenly, my right arm flying out backwards in a desperate attempt to throw them off balance for a second or two while I made a jinking run for the dubious safety of the wheat. I felt a pain in the back of my hand, heard the very distinct sound of teeth knocking together, and gathered my feet under me to run.\n\nUnfortunately the jacker was quicker, grabbing me around the waist and then sliding down to clutch my thighs, then knees and finally my feet. What the fuck?\n\nI leapt out of the encircling arms and desperately looked around as I started to run. Then I pulled to a halt. There was only one of them. And he was flat out and face down on the floor.\n\nIn the errant hand was... a stick.\n\nAs a weapon, it had a few drawbacks. It had no trigger, no magazine, and no sights. It didn't even sport a sharp edge. But its main drawback was that it was... a stick! And not even a very big one, at that!\n\nThe attacker had a few drawbacks as well. These were obvious; such as the fact that they were unconscious, or passed out; and that it was actually a girl, or a really underdeveloped boy. No, the ratio of chest to waist to hips pointed to it being a small girl -- a small, half-naked girl; dressed only in a man's shirt, some plain, off-white panties covering a round little butt, and some sort of knitted grey hat, all of which were distinctly grubby. A panel of the cotton panties had pulled away from the waistband at one hip and left a hole. My ex had a pair like that, claiming that they were just too comfortable to throw out. These looked like they were all too ready to give up and throw themselves out, begging for the sweet relief of the rubbish heap.\n\nI gazed down at the prone figure, the chest rising and falling to offer proof of life, while the faint whistling noise from the unseen face offered proof of a tendency to snore, and tried to work out just what the hell was going on. I realised my adrenaline levels were about ten feet higher than I was tall, and I was actually panting with fear. My heart was only then starting to wind down from Defcon 1 status.\n\nI got angry.\n\nSome midget female had tried to carjack me by threatening me with a twig, and I had very seriously considered giving in to that threat. How very fucking dare she\u203d Okay, I was no Hulk or even a Thor, but I was pretty sure I didn't look like some pushover, either. At five foot eleven and seven eighths, I was actually taller than some of the other Avengers... Black Widow and Scarlet Witch were both shorter than me.\n\nYes, I do have my Nerdling badge, but that still didn't explain why a grubby munchkin thought she could rob me at stick-point.\n\nI pissed on the back wheel of my car while I thought about it. I disarmed her by snapping the twig in two. I nudged her none-too-gently with my foot until she grunted and raised her head. Her face was as grubby as the rest of her.\n\n\"Get up!\"\n\n\"Fuck you, asshole!\"\n\nMy mouth fell open in surprise. I couldn't believe I was getting cheek from some kid -- a kid who'd just failed to rob me, mind you.\n\n\"You kiss your mother with that mouth?\" I growled\n\n\"No. But you can kiss my ass with yours!\"\n\n\"I wouldn't kiss your grubby arse with my worst enemy's mouth!\" I retorted.\n\n\"Only because your dick would probably be too deep in his mouth,\" she came back, and I had to admit, she had some chops when it came to insults. \"You faggots are all the same!\"\n\n\"Well, when faced with you, I reckon being gay would probably be a better choice.\"\n\n\"You better not touch me, or I'll rip your dick off through your asshole.\" Jeez, just the thought of that made my eyes water.\n\n\"Like I said, being gay would be a better choice.\" I held my hand up to stop the flow of her vituperation. She cowered for a moment and then came back snarling.\n\n\"You tried to carjack me!\" I accused before she could get back into full flow.\n\n\"So what?\"\n\n\"So what? What do you mean, so what? You can't just say so what! It doesn't work like that. So what? So ... it's not only illegal on so many levels, it's fucking rude!\" My mind wasn't running particularly smoothly, what with it being inundated by fear, adrenaline, relief and anger all at the same time, and it was all I could come up with.\n\n\"Oh, grow a pair!\"\n\nI stared at her. She stared back. She probably won the staring contest as it seemed she had sheer hatred on her side, while I had to make do with plain old common or garden anger. For a moment I wondered if she had been coached by my ex-wife.\n\n\"Oh, now I get it. I've just realised, you're an actual, real live goblin sent from hell to torment me.\"\n\n\"Was it the teeth and claws that gave me away?\" she sneered.\n\n\"Nope. It was more you being small, dirty and really fugly!\"\n\nTo my surprise, she burst into tears, her shoulders shaking from her sobbing and her face back in the dirt.\n\nAnd we were getting along so well. What a shame.\n\nI did what men do so well in situations like this. I looked around at everything except her, while trying not to frown in guilty confusion and not kick at the dirt with the point of my shoe. I also resisted the urge to polish those same shoes on the back of my pants leg. I mean, I'm not even American and I still felt an urgent need to say 'Aw shucks.'\n\nI took a photo of her with my phone.\n\n\"I'm reporting this to the police,\" I said.\n\nHer head rose once again. \"You hit me!\"\n\n\"Yes.\"\n\n\"You shouldn't hit girls. That's assault!\"\n\n\"Not when they are trying to rob you with a deadly weapon, it isn't.\"\n\n\"It was a stick, you pussy!\"\n\n\"You told me you'd blow my face off with it, you miniaturised uber-bitch.\"\n\n\"Well, between the two of us, which of us has an actual injury, huh? Who do you think the cops are gonna believe? You, a big strong he-man type, or me -- a small, frightened crying girl with a bruise on her face?\"\n\n\"You think I'm a he-man type?\" I was still considering her threat, so I think I was a bit nonplussed, and might have come across as a touch needy. She had a point about the credibility of the two claims.\n\n\"That's what you took from that? Of course I don't think that! You think I need a psychiatrist to comprehend reality? He-man... hah!\"\n\n\"Actually, I think you need a shrink to keep you in a strait-jacket.\"\n\n\"I am not crazy!\" Spit actually flew from her mouth and I saw real rage in her eyes.\n\n\"Oh, well, that's all right then. I just needed to hear you say it, and now that you have, well... you've certainly convinced me!\" I came back, unable to stop myself, despite starting to seriously worry once more. She really was looking a bit crazy. \"I mean, almost all sane people try to shoot people with a stick... when they're five fucking years old!\"\n\nI shouted that last part, tapping my temple meaningfully. I knew she was just a kid with a foul mouth and I - in my adrenaline rush - had responded very inappropriately, but she'd not only made me think I was going to die, her constant insults were getting to me. She just wouldn't shut up and let me think. If she would only shut the fuck up! I should make her shut up!\n\nOh hell, now I sounded loony, as well -- even to my own mind. That was exactly what all the crazies said just before they hauled out the butcher's knife and went all Janet-Leigh-in-the-shower on everyone. I seriously considered for a moment that her lunacy might be infectious.\n\n\"Don't call me crazy!\" she reiterated, her scream so loud it broke halfway through, as if something had snapped in her throat. She rose to her feet, panting hard.\n\n\"Then don't act like it!\" I shouted back. \"And at the same time, stop acting like a fucking toddler! You're what... eleven, twelve maybe? A foul mouth doesn't make you a grown up. Act your age, not your fucking shoe size! Even if you are a psychotic, insane goblin.\"\n\nI couldn't resist throwing that last part in -- it seemed to press her buttons, and despite me being the adult, right at that moment I was all for jamming on those buttons like they were the working parts of an orgasmatron.\n\n\"I'm twenty, you sizeist, misogynistic pig!\" she yelled and darted straight at me. Sizeist! Misogynistic! Me? I marvelled that even dwarf chicks were using those pejoratives now. I didn't believe for a moment that she was any older than fourteen. Maybe fifteen, tops.\n\nHer claws were aimed at my face and I realised, perhaps for the first time since I'd laid her out, that she could truly be a threat. Despite the fear and the anger within me, I also realised that I had perversely enjoyed our exchange of insults and had thrown myself into it. It had been a chance to vent some of the poison that had built up in my system since...\n\nHer shirt flapped open as she came at me and I realised, as well, that, by the small but significant bulges on her chest, I had indeed been mistaken about her being a child. As her fingers drove towards my eyes, I yelled in fear and grabbed for her wrists, catching them more by luck than judgement. We struggled for control of her hands for a moment, but she was too small and had little chance of getting them free to do me damage.\n\nShe tried to knee me in the balls, but I managed to twist and took it on the thigh. While her knee was raised and she was off-balance, I pushed and we both fell to the ground, me on top of her skinny body, holding her arms down alongside her head.\n\nShe wriggled and fought viciously, and then suddenly went so limp that I was taken by surprise, almost releasing her. But I wasn't falling for that! Her lips moved as if she was inviting me to kiss her and I drew my head back sharply, repulsed. Then I understood that she was whispering something. I leaned down close enough to hear, while carefully remaining out of range of her teeth -- I wasn't going to trust this little troll for a moment.\n\n\"Please don't. Please don't do it to me anymore. I'll be good.\" It was so faint, it was almost inaudible. But it was there.\n\nI felt the hairs on my forearms and the back of my neck all instantly stand to attention as if they were on parade, and I think I somehow managed to levitate to a standing position without actually moving.\n\nThen it got worse as, with my weight gone, she simply drew herself up into a foetal position with her eyes firmly closed, put her thumb into her mouth and began to suck on it.\n\nChrist! This was bad. Very bad.\n\nI stared around, searching the huge horizons of the Mid-West for inspiration as to what to do. My first instinct was to get back in the car and get the fuck out of Dodge, before the Earps herded me into the OK Corral and gunned me down like a dog.\n\nJust leave. Yes, that was the sensible thing to do. Of course it was! She was a carjacker, a criminal, and that was all I needed to know. Anything else was out of my jurisdiction. Just leave her there and drive away. She could hijack the next guy who needed to strangle the weasel within her hunting grounds.\n\nAnd... And fuck! I couldn't do that. I have White Knight Syndrome. It's real - you can look it up. I'm irresistibly drawn to women who are damaged.\n\nOh, it sounds great - riding to the rescue of fair maidens and reaping the rewards of fame, fortune and free fucking. Who wouldn't want that?\n\nWell, I don't, for one. It causes me to make some really bad life choices. It makes me think I can fix things that can't be fixed. It makes me want to try and help the helpless, mend the irretrievably broken, heal the mortally wounded. Hold that in your mind and look around you. See the wilfully stupid, the eternal addicts, and the perpetually obstinate who just won't help themselves? And now watch yourself ride in and try anyway. Fun!\n\nI've been told that it's much more common than most people think, and that it could be a symptom of low self-esteem, hoping that someone with even lower self-esteem would love me. That it might be me trying to create a debt that would bind someone to me. That I am possibly trying to use rescue tactics to dominate a weaker person for my own ends. Or that I could just be a big-headed cunt showing off -- although that's my ex-wife's diagnosis and she might be biased.\n\nAdmittedly, those are the dire characteristics of the syndrome. There are some kinder attributes as well, but they're all bad in my opinion.\n\nThe thing is, of course, I'm not actually a knight! I don't have the courage, the know-how or the derring-do to swoop in and actually fix anyone. All I have is the stubbornness to stick around and keep using my unerringly wrong self-belief and emotional need to keep trying, until even I can see that there's no hope -- usually just before the going-down-for-the-third-time bit. Try staying through the self-destruction, the insistence on self-medication, the never-ending mourning for a lost love, the complete and utter lack of any self-esteem, or the addiction that will be instantly cured ... starting tomorrow, I promise! All of those things grind people into fine dust, and, inevitably, those around them are pulverised as well.\n\nNot such a wonderful thing to have, then.\n\nA shrink had explained it all to me -- the idea being that if I knew I had the problem, I could somehow avoid it. I would like to think it's all bollocks, and that I just empathise with sad people... well, sad women. But, unfortunately, there is a truth there. Somewhere within me is a trigger, and if someone pulls that trigger, then the gun goes off. It's inevitable. Therefore, when faced with a possibly wounded bird, I use the shrink's advice; I turn around and walk away before they can pull that trigger. With so many women damaged in some way or another, it makes life pretty lonely at times, but it's better than the alternative.\n\nAnd here it was again.\n\nExpecting her to suddenly come to life and attack me again at any moment, I gingerly leaned down and gathered her up. Then I put her down again, thought some more and sighed deeply. I fetched a travel blanket from the car, wrapped her in it and picked her up again, sliding her onto the back seat. Sweating now, I fastened a seat belt around her with some difficulty, closed the door and climbed in behind the wheel to have a think.\n\nWhat the hell was I going to do with her?\n\nOkay, it wouldn't be right to just leave her out in this enormous, rural farming wilderness where she could be attacked and devoured by a roaming band of voles, or something equally horrific - especially as she was dressed only in a disgustingly filthy woolly hat, a shirt and a pair of tatty knickers. I mean, a passing hedgehog might just get it into his mind to take advantage of her. It could happen! Well... probably not. I had no idea whether there were hedgehogs and voles in the USA. They're tiny, probably nasty, British predators -- mostly of slugs and worms -- and I don't know what the American equivalents are. Probably politicians of some ilk.\n\nIn the rearview mirror, I caught sight of my face and the sardonic grin plastered on it, and relaxed my mouth. I didn't need my weird sense of humour getting me into trouble. Not now.\n\nI had to go somewhere, so I decided to just go forward. The hire car that I'd picked up at the airport in Kansas City had managed to go into a complete snit and sulk when I pressed a few buttons to see what it could do, so now the GPS system wasn't working at all, and my phone wasn't doing a great job of covering the load -- or any load at all, in fact. I determinedly didn't use it much, so it was probably my fault. That morning I'd been heading towards Wichita on something called the 77, and then discovered that somehow I'd apparently meandered off-route and was now on the 56 and had to get back on the 77. According to those numbers, I had apparently wandered across 21 national highways without noticing anything amiss. I think American roads might be numbered by the same people who train British council planners, as there was no apparent logic to them. Whatever the number, when I turned off the highway to seek enlightenment, I was instantly lost.\n\nBeing lost in the USA is very different to being lost in Britain. In my homeland, if you are lost you just find a reasonably-sized road and follow it to the next garage -- five minutes, at most. If you got lost off the main highways in America, all signs and filling stations immediately seem to take shelter underground and can't be found for love or money, and you can end up travelling a hundred miles before you find a living being to ask directions. And usually, that being will speak only Spanish.\n\nI continued down the road, surrounded by enough wheat to drown the world in breadcrumbs. My thoughts drifted, imagining soft, white, puffy crumbs of bread drifting down from the sky. They would bounce off the bonnet -- no, this was an American Ford, not a German-built one, so it would bounce off the hood and...",
        "\"Where are we going?\"\n\nI looked in the rearview mirror as a dirty face slowly hove into view as she sat up.\n\n\"I'm going to stop at the next police station. I won't say anything...\"\n\nShe sniggered. \"The next police station. Right. And what... you're expecting there'll be some guy in blue, with a dome head helmet, saying something like, ''Ello, 'ello, 'ello! What's goin' on 'ere then?' Dream on!\"\n\nHer Cockney accent was abysmal and it sounded as if she'd been dropped on her head as a baby. Even Dick van Dyke did it better. Her stereotyping riled me.\n\n\"No, I'm expecting some fat guy in khakis and a 200 gallon hat, with an M1 strapped on each hip inspecting us to make sure we're the right colour and saying something like 'What y'all hidin' there, boy?'\"\n\n\"Ouch, that hurt,\" she sneered, but I saw a grin flash across her face. \"This is not the Deep South, you know.\"\n\n\"How would I know that? I'm lost, the GPS isn't working, and I haven't seen another person in the last half hour apart from you. I can't ask for directions, and for all I know, we're about to cross the border into darkest Peru.\"\n\n\"You talk funny. Even for a gay English guy, you talk funny.\"\n\n\"No, I talk perfectly normally. You speak funny.\" Any moment now, we were going to get into 'your mother' insults. I eyed her in the mirror. Her face was really dirty, but her eyes were very green -- a dark green, almost emerald. Attractive really. \"And I am not gay.\"\n\nThere was a moment's silence, then, \"So how come you didn't fuck me when you had the chance then?\"\n\nI was gobsmacked, unable even to string a sentence together. The words had been thrown out offhandedly, but listening was a big part of my job and I could hear echo after echo of tension, anguish and fear. I squeezed my eyes shut for a moment in despair at the ridiculous situation I'd got myself into. Then I remembered I was driving and opened them again.\n\nI had two options here. I could tell her the truth; that she looked like she'd been slow-rolled across a heap of coal, smelled like a Gorgonzola-addicted badger and was on a par with a fifty year old heroin addict when it came to being sexually attractive; or I could be polite.\n\n\"I was a little tired,\" I said. I can't help it. I'm English. It's what we do. In Britain, every girl would immediately know what I meant by that was that she was a minger and had more chance of falling pregnant by email than getting fucked by me. I guess we speak in some sort of code of politeness at home. It avoids violence. Underneath that imperturbable exterior, the British are, by and large, a violent race, and even our children -- on learning that we as a people have been almost constantly at war with each other and the rest of the world for almost two thousand years -- take on that fact with equanimity and an attitude of 'Legend! Get stuck in there! Lemme at 'em!'\n\nIt was her turn to look nonplussed. I ignored her, too busy trying to ignore the smell, which seemed to be permeating through the car like treacle -- an inevitable flow that stuck to everything it touched.\n\nI finally gave up, pulled off the road and turned off the engine. \"You look as if you've had a long and very exciting day, running from... whomever or whatever it is that you're running from -- possibly a bar of soap. I have water in the boot. Why don't we rig up some sort of shower thing so you can at least feel clean again?\"\n\n\"You think I'm running from something?\" she demanded angrily. Her tone pressed a few of my buttons.\n\n\"Good Lord, no. I would never think that. No, I knew instantly that you're obviously doing some kind of super-long marathon dressed as a bag lady in order to entertain the massed spectators watching you every step of the way -- probably for some worthwhile charity like Save All Priests From Kids. And when you saw you'd fallen behind, you thought you'd just politely borrow a car to catch up again. Stupid of me really, not to immediately commend you on your efforts. I do beg your pardon!\"\n\nHah! We're polite, but we do sarcasm to Olympic standards.\n\n\"You're mean,\" she declared after a moment. I maintained a dignified silence.\n\nThere was a long pause while she considered my earlier offer. \"You have water in your boots?\"\n\nI sighed. \"The trunk. In the trunk.\"\n\nI got out and retrieved a plastic gallon jug of water that I had stowed there against breakdowns. I'd been warned when I picked up the rental that, where I was going, mobile phone coverage was patchy, at best, and the heat was ever-present. I opened her door and held up the jug invitingly.\n\n\"You'll feel better.\"\n\n\"Nuh-uh,\" she grumbled into the blanket that she held around her like a shield. \"You'll drive off and leave me here.\"\n\n\"I wouldn't. It would be rude. Besides, I didn't think you wanted to be in the car with me.\"\n\n\"I wanted your car. You weren't supposed to be part of the deal.\"\n\nI thought about that and took the keys from the ignition, pocketing them. I might have just put an idea into her head and didn't want to find myself stranded.\n\n\"Come on,\" I ordered. \"Out!\"\n\n\"Not a chance!\"\n\nI lost my temper. \"Get out of the car and wash! You stink like a fox in heat, dressed in a heavy fur coat that was used to clean the decks of the ark -- after all the animals disembarked! My nose is trying to crawl down the back of my shirt in defence. Now move!\"\n\nI grabbed the woolly hat off her head and threw it onto the ground at my feet, half expecting that the bugs I was sure had made their home in there would promptly lift it up over their heads and race off through the grass with it.\n\nI wasn't expecting the mass of golden-red hair that dropped from beneath it as I dragged it away. Okay, the hair was matted and dull, and probably as filthy as the rest of her, but the colour and volume of it was certainly unexpected, to say the least. I'd never seen hair that colour before. It was a melange of copper, bronze and gold. She had precious metals for hair. No wonder I was stunned.\n\n\"That's my fucking hat!\" she yelled, abandoning the blanket and clambering out to grab the filthy scrap. I quickly slammed the door closed behind her and pressed the button on the fob.\n\nShe heard the security beep from the car and turned to grab the handle, only to find it locked. Then she looked at me, tears collecting in her eyes.\n\n\"Please don't leave me here,\" she begged.\n\n\"Oh for Gods' sakes,\" I grumbled. \"I won't leave you here. I wouldn't do that. But I'm not taking you a single centimetre further until you clean off a little -- it doesn't have to be a lot, just something a little more profound than a cat-lick with a wet wipe.\"\n\n\"You're just trying to get me naked!\" she accused. She had a hair-trigger temper. Shit! Another one!\n\n\"Oh, be still my heart! The prospect of seeing a scarecrow with no clothes on has me all a-shiver, my lady. Us farmyard peasants just can't control ourselves when faced with temptations like that! It's just not fair on us, yer worship!\" I frowned at her and offered her the jug once more. \"Hold that. Don't let your smell melt the plastic.\"\n\nI wasn't sure whether she was more offended at my crack about her smell, or the scarecrow bit. I wasn't a woman, so I had no idea of how the ranking of insults worked in the little black book of 'things men do and say that really piss us off.'\n\nI opened my suitcase, dragged out a pair of shorts and two tee-shirts and tossed them to her. She had been taking a long drink from the bottle, and had to juggle things a little to catch them while not spilling, but it did distract her from trying to kill me with venomous bolts of lightning from her eyes. At least that's what I imagined she'd been attempting by the way her frown screwed up her face.\n\n\"Use one of the shirts to wash yourself clean. You can wear the other. And wear the shorts as well. Those knickers are not coming within twenty feet of this car from now on.\"\n\n\"Do you have any shampoo?\" she asked, as if we were in a hotel bathroom. I started laughing at the incongruity. What else could I do?\n\n\"You'll have to wait until we get to a police station,\" I smiled.\n\nShe gave me a snarky grin. \"I don't think that the Sheriff normally lets the public use the showers in the Station House.\"\n\nI let that one go. Hey this wasn't Rome, so I didn't have to do as the Romans do. Or say.\n\n\"You'll have to wait then.\"\n\nThere was a long, pregnant pause which seemed to get closer to term the longer it went on.\n\n\"So... Turn around!\" she said.\n\nI thought about that for all of a split second. \"Not a chance. The last time you were behind me you threatened to shoot me in the face. With a stick. A stick! Hah!\"\n\nI sniggered and she glared at me, and then flounced around to the other side of the car, dumping the jug and clothes on the boot. When she was as far out of my view as she could get, she peeled off the shirt and bent over, drawing off her panties.\n\nI couldn't help it.\n\n\"The driver of that car's probably appreciating the view,\" I mentioned, nodding my head towards the road.\n\nShe gave a little squeak and raced back around to my side of the car, crouching down and bobbing up every now and again to try to see which direction the mythical car was coming from.\n\nHer figure was... unexpected. She had small, round, slightly freckled breasts, so pale that I could see the minute blue veins beneath the skin. Her areolae were small and coral coloured, with bulls-eyes of petite, slightly darker nipples the hue of demerara sugar, which were as perky as the day is long. Her chest narrowed to a trim waist and then widened to hips that drew the eye around to the back where a bum as pert as her nipples was on display, bringing to mind the apple that Paris gave to Aphrodite, and which promptly kicked off the Trojan War. All things considered; a bit skinny and way too dirty for my tastes, but still superb.\n\nI then caught a glimpse of that magical colour at the junction of her thighs and felt a shiver run through me.\n\nSomewhat shame-facedly, I cleared my throat. \"Sorry. That was a stupid joke. I wasn't...\"\n\nI stopped short. I was. I couldn't deny it.\n\nI held my hands out to the side. \"Sorry.\"\n\n\"Pervert!\" she declared. Crouching there, she looked at me for an infinite moment and evidently came to a decision. She heaved a long sigh. \"Fine.\"\n\nWith that one word, I seemed to have been dismissed as a threat. She stood up in all her glory, retrieved the clothes and water and blithely began to wash herself off in front of me. The shirt she chose as a wash cloth was a fine white Lacoste polo shirt that had set me back almost a ton in Regent Street. I'd meant for her to wear that one, and I think that's why she chose it and kept the cheaper Asics generic to wear -- just to piss me off. You try and be nice to people and... ah, what the hell. I never wore it, anyway. I never went anywhere posh enough to need it.\n\nMaking clear my intentions were not those of a cad and a bounder, I circled around well away from her as I went to the boot, scratched around in my suitcase and drew out a bottle of my favourite shower gel. I sighed. It was exclusive to one London shop, and if it ran out I would have to use the local stuff, which didn't show much promise, by what I had seen in the shops so far.\n\n\"Here,\" I said, stretching out my arm to keep the rest of me as far away and non-threatening as possible. Her whisper still haunted me. There'd been serious damage done to her at some stage, and while I didn't mind insulting her, I didn't want to actually spook her into running off completely naked into the wild blue yonder. Then I'd be forced to follow her and somehow get her back -- and knowing her even as little as I did, I guessed that it would probably mean carrying her over my shoulder. \"If you want to use that on your hair, it should be fine. I hope so, anyway.\"\n\nShe nodded at me with a neutral expression, splodged some liquid soap into the palm of one hand and tried to tip water onto her hair with the other. A gallon is quite heavy and her wrists seemed finely boned. I took it from her and began to pour.\n\n\"Thank you.\"\n\nWhen her hair was a mass of soap bubbles and she'd rubbed, scratched and finger-combed through it to her heart's content, I rinsed it off, marvelling at the nasty colour of the water. On the plus side, as it ran down over her face, it washed away what I'd thought was a bruise from my wild swing. I guess she wasn't as delicate as I'd imagined, and my poorly aimed blow had seemingly just smudged the dirt together into one place, rather than doing any real damage; which was a relief to my self-image as a gentleman and a scholar. To be honest, it was a fairly solitary image that was evinced only by me, and my sister Janie had even invented the word Moronerd -- combining moron and nerd -- to describe me more succinctly; at least whenever I was in earshot. She loved me, and that's what sisters do to show their affection -- insult and belittle their brothers as much as humanly possible. That and sometimes give me surprise hugs and a kiss on the cheek when no one could see her with her facade dropped. Naturally, I loved her in return and spent probably far too many hours trying to come up with insults that would cut her down to size. It was almost universally a waste of time.\n\n\"So what's your name? I can't keep thinking of you as my private goblin,\" I half-joked. I hadn't forgotten the threat to shoot my face off.\n\n\"Summer,\" she said after a moment, still bent over and her voice muffled as she worked the dirt out of her locks. I pursed my lips in thought. It was a pretty, if fairly uncommon name. It could be the work of overly hippy and feminist-orientated parents. Or she could be some sort of nature worshipper in disguise. How could I know? It probably wasn't her real name anyway.\n\n\"What's yours?\" she asked after a few minutes more effort on her amazing hair.\n\n\"Bryn,\" I said, annoyed as I heard that note of anxiety in my voice that sometimes popped in when I introduced myself to strangers. It was an echo from my youth, when all the other kids had made it out to be the weirdest and silliest name in the world, and kindly let me know their feelings on the matter in no uncertain terms.\n\n\"Brian?\" she asked, still hidden behind the veil of hair.\n\n\"Bryn, with a 'y',\" I explained. \"It rhymes with tin.\"\n\n\"Ah, Bran.\"\n\n\"Bryn like tin, not Bran like can,\" I averred. I'd heard it all before and had the answers on the tip of my tongue.\n\nFor a moment, I wasn't sure what the noise was that came from behind the copper-gold curtain. But then I recognised it.\n\nShe had giggled. I hadn't expected that.\n\nShe squeezed out her hair when it was finally rinsed, then jerked her head up and sent the whole lot swinging up and over her head to settle all the way down her back, reminding me of that photograph of a woman surfacing from the sea with her hair captured in a wide fan for posterity.\n\n\"Towel?\" she asked hopefully.\n\n\"Sorry, milady. The maid hasn't yet brought them through from the laundry room.\" I used my best Parker voice, the puppet butler and driver to Lady Penelope in Thunderbirds. It went down like a loud fart during that tense silence surrounding a serve for match point at Wimbledon.\n\nShe raised her eyebrows and shook her head slightly in question. I didn't feel the need to explain the joys of my childhood television experiences.\n\n\"Sorry, drip dry service only, today,\" I said.\n\n \n\n\"Okay,\" she replied. I noticed that she was still watching me carefully from the corner of her eye. She was prepared to trust me, but only to a point. She poured soap onto my sopping designer polo shirt and washed the rest of her body, sighing with relief as great swathes of dirt were shifted back to the earth where they belonged.\n\n\"How did you get so dirty,\" I asked, eventually. I'd tried to keep my syndrome at bay as much as possible, desperately not wanting to know anything about her at all. It had sneaked up and mugged me when I wasn't watching, apparently with far more success than she had managed.\n\nShe paused in scrubbing at her left hip and thigh to consider the question, obviously not wanting to give me too much detail. I tried not to look at the area she was washing, but that colour kept drawing my eyes back, like some sort of golden-copper optical magnet.\n\n\"I slept in the fields,\" she said finally.\n\n\"When you say that, do you mean you took a nap, or that you were in permanent residence?\"\n\n\"I slept several nights in the fields.\"\n\nI felt my eyebrows shoot up. \"Wow, now that's some pretty hardcore survivalist stuff.\"\n\nIt actually was. I'd been told that days in June were hot in Kansas, but that nights could get fairly chilly. I had no idea of what predators infested wheat fields, but I guessed there had to be some. Rats were the first thing that came to mind.\n\n\"I dug a hole and covered myself with leaves, to prevent sunburn, and keep warm at night. I think they'd sprayed fertiliser recently, so I kinda stink.\"\n\nThat explained the smell and dirt then.\n\n\"No fire?\"\n\nShe gave a rueful snort. \"Nothing to light a fire with -- and lighting a fire in a field of dry wheat is a quick way to get really toasty... really toasty!\"\n\nI nodded, and then thought of something.\n\n\"So what did you eat?\"\n\nThere was another of those pauses. \"Well, not much really. The wheat isn't ripe, and I didn't have a millstone handy anyway.\"\n\n\"Shit, Summer, how long since you last ate?\" I asked, disturbed.\n\n\"What's today?\"\n\n\"Tuesday.\"\n\n\"Four days.\"\n\n\"Christ!\" I said, aghast. With my history, going without food for that long was anathema. \"And water?\"\n\n\"I found a hose -- part of a sprinkler system, I think -- that still had some in it. It was pretty warm and rank, but it was wet.\"\n\nFuck, she'd yanked on that trigger within me like it was set on full auto. I had to fight the urge to gather her into my arms, but I recognised it for what it was, and managed to quash it.\n\n\"Damn! Look, never mind the washing bit, just drink the water -- as much as you need. Drink it all.\"\n\n\"I'm okay,\" she smiled. \"Don't worry. I drank some earlier.\"\n\nAs she rinsed off the soap, I couldn't help fussing. I just couldn't stop myself. For some reason, I became convinced that if she bent over too much she would probably keel over from lack of food and water. I unlocked the car and made her sit on the passenger seat with her legs out of the door. Then I took the cloth and washed her feet and lower legs, rinsing them carefully. She watched me with an odd look on her face.\n\n\"There you go, love,\" I said, capping the water bottle to keep the last few mouthfuls safe. I leaned forward towards her knees and sniffed. \"All nice and clean.\"\n\nShe burst into laughter. \"Did you just smell my pussy?\"\n\nI felt my face ignite into flame. I hadn't even thought about it. I'd just wanted to check that the awful smell had gone and leaned forward to do it.\n\n\"You did! You smelled my pussy.\" The more crimson I got with embarrassment, the more her laughter ramped up.\n\n\"No! I didn't... I didn't mean to... I mean I wasn't trying... ah, shit.\"\n\nHer laughter continued, slowly growing louder and morphing into what sounded like the genesis of hysteria, and then suddenly she was crying -- great heaving sobs that racked her chest and shook her whole body.\n\n\"I'm sorry. I'm so sorry.\" I muttered, absolutely mortified, although I did realise that it wasn't my apparent truffle hunting in the wrong area that had caused this.\n\nTears were streaming down her face and dripping off her chin, her cheeks shining wet in the sunlight. I patted her shoulder and she blindly held her arms out to me.\n\nAgain, it was the trigger. I knew it was wrong, but I could no more leave her like that than I could suffocate myself by simply trying not to breathe.\n\nI took her hands and drew her towards me. As I did so, she leapt forward out of the car and wrapped her arms around me, holding me impossibly tightly for someone so small, and crying so hard it felt as if things were breaking, tearing and shattering inside her.",
        "There I was in Kansas, the start of the road to Oz, somehow standing by the side of a lane through a desert of golden wheat, holding on tightly to a small naked woman who had recently tried to mug me. This wasn't who I was. I knew that. I'm British, and we don't do that sort of thing; at least not in public.\n\nI knew it didn't mean anything to her, it was just a need for comfort -- a human touch in a time of desperation. I still had no idea of what and why and how, but the last few days must have been a nightmare for her. I knew that she had been hiding out from someone or something, that much was blatantly obvious, but why she hadn't gone straight to the authorities was anyone's guess at this stage. Perhaps a rabid boyfriend or stalker, or possibly criminals of some sort were after her -- or maybe she was the criminal and was hiding out from the authorities. All that was apart from the fact that she'd been abused in some way.\n\nDesperate not to send any messages of weirdness, I just held her tightly to me with one arm, and simply stroked her wet hair with the other hand; combing my fingers through it very slowly and gently from her scalp all the way down her back.\n\nThe problem started when she began to gently rock, as if subconsciously longing for a return to infancy, to a time when being rocked in a cradle, a mother's arms, or on a father's lap meant comfort and peace. That was her need.\n\nHowever, my need was quite different. In my reality my cock was urgently trying to alert me to the fact that a naked woman with a fairly stunning body was pressed firmly against me from my knees to my chest. That was one thing. The rocking was quite another -- it was a simulacrum of sex.\n\nI wasn't filthy rich, but I was comfortably well off, despite all my ex-wife's efforts to the contrary. I wasn't ugly, overweight, particularly stupid or trying to hide baldness, so I hadn't been practicing to be a virgin recently, either. I'd had a few short-term relationships in the past from those wounded birds I couldn't resist, and I wasn't desperate. Besides, I was my own right-hand man.\n\nIn that moment, however, I felt like a man who had been locked away from every aspect of the fairer sex for the past ten years, while forced to continually wear boxing gloves. I felt an extreme anxiety within me -- a desperation almost -- to simply take this woman, throw her to the ground and use her, and for her to use me, for a long, hard time.\n\nSomehow -- I don't know how -- I knew she would have allowed that; she might have hated it, but wouldn't have fought me; perhaps because I was trying to be nice, despite us getting off on the wrong foot, but more likely because she had been forced to react that way to an authority figure, and right now, that was me.\n\nMy erection felt like someone had attached a crowbar to my scrotum and drawn a happy face on the front end of it. It felt as if it was alive within my jeans, straining and struggling to find an opening within the material -- even just a few loose threads that it could peremptorily break through, bursting into the light and then onward, into the contrasting, welcoming darkness within her.\n\nShe looked up at me, her face still wet and streaked with tears. Her eyes were steady on mine, wider than normal, the pupils seeming hugely dilated. Those eyes contained a message -- a ciphered message I was desperate to read but didn't dare decode. At that moment, with the dirt that had muddied my view of her now washed away, I thought that she was quite lovely. However, naked women often look beautiful to the men they are pressed up against, and I knew I had to fight against the Knighthood within me.\n\n\"Summer,\" I whispered helplessly. I had met her less than an hour before, but it felt as if we had spent a lifetime in conflict together; an aeon of emotion. She didn't blink, her eyes still locked on mine.\n\nI have no idea why I did it, except for the fact that I didn't know what else to do.\n\nI sang to her.\n\n\"Out of my depth, in too deep / drowning in the rolling waves / I call to you / I call your name.\"\n\nThe words seem stark and trite when written down on paper, but the tune was a pretty one and despite my voice, seemed to carry my feelings of confusion and fear, desire and desperation. I made the shift into the minor key.\n\n\"In the dark deeps / sinking into the blue / I look to the light above / I call out to you.\"\n\nTrite or not, they seemed to have an effect on her. Her lips parted, the tip of a pink tongue just touching the centre of a generous bottom lip, before darting back into hiding.\n\n\"What was that called?\" she whispered.\n\n\"Wavelength,\" I replied.\n\nThe answer seemed to satisfy her. She seemed to consider for a moment, and then she kissed me, very lightly, her lips unmoving against mine. We held that position for what seemed an age, while in actuality just a few seconds strolled by relentlessly. Then she drew back and placed a tiny hand to my cheek.\n\n\"Told you -- a pervert!\" she whispered. A smile flashed across her face, and a wave of gladness swept through me that no matter what she had gone through, she wasn't completely broken, and I hadn't added to that injury.\n\n\"Goblin!\" I whispered back, and with sheer force of will, let my arms fall to my sides. \"Get some clothes on before you get us both arrested.\"\n\nShe sniggered. \"They won't arrest me. I'll tell them you threw water all over me, got me naked and then wouldn't let me in the car after using me most grievously.\"\n\n\"I hardly consider a hug to be grievous usage,\" I protested mildly, and then snorted. \"As for the rest: no fair using partial truths to lie through your teeth. And grievously? Do people really talk like that here?\"\n\nShe smirked, and didn't answer. I turned away, again having to force myself to do it. Then I thought of something and went to the boot. When I returned, she had the all-too-big shorts on and was using some kind of feminine magic to cinch and knot them tight around her waist. Her still naked breasts bobbled like delicious jellies as she struggled to draw the knot tight, and she finally had to clap her hands to break my attention away from them.\n\n\"Oh, right. Sorry,\" I said automatically, willing myself not to blush again. I held out the hairbrush I had in my hand. \"I thought you might need this.\"\n\nShe took it, faking a frown. \"This is yours. You got cooties?\"\n\n\"I don't even know what cooties are,\" I confessed. \"I guess they're a type of what... an American disease? Nits? Fleas?\"\n\n\"I'll risk it,\" she said, her tone offhand but her expression showing pleasure at the gift.\n\n\"Got a cap?\" she asked as she started to brush the waves of still-damp hair. \"I need a cap. Or I could...\"\n\nShe glanced pointedly at the scrap of filthy wool on the ground where I had thrown it. I shuddered. \"No way! Not a chance! That's never coming back in this car.\"\n\n\"Then I need a cap.\"\n\n\"You don't want to leave your hair to dry?\" I asked, reluctant to see that gorgeous mane hidden away.\n\n\"No, I need a cap. Give me a cap. Or I take the hat.\" Her mood had grown dark again, very quickly.\n\nOkay -- that was strange, but then the whole day was more than strange. Two complete strangers, each knowing nothing whatsoever about the other, having an emotional moment after being locked in battle, viciously cursing each other. Her insistence on covering her beautiful hair was perfectly logica,l in comparison.\n\nI thought for a moment, and then it was back to the boot once more for another search-dive into my suitcase. Successful, I handed it to her and she unfolded the square of silk.\n\n\"It's a handkerchief. My sister gave it to me as a joke. She says she's determined to transform me into a gentleman. I don't think she's backed a winner on that one.\"\n\nSummer held it up, the pale blue almost transparent in the afternoon sunlight.\n\n\"It's beautiful,\" she said quietly. She gathered her hair together, made what looked like mystical movements over her head, and suddenly her hair was bound up in a bun. She covered it with the handkerchief, knotting it at the back.\n\n\"Ooh, fifties chic,\" I commented. \"Very classy.\"\n\nShe struggled into the oversized shirt I'd given her, looking amused at my comment. I was less pleased, as her actions meant those pretty little breasts were now hidden from view. I had really enjoyed feasting my eyes on those whenever she hadn't been looking.\n\n\"We need to talk,\" I said after a moment. The irony that it was me saying that made my stomach clench up, and I put it off. \"We need to do it while finding you something to eat. Let's go!\"\n\nShe looked more than relieved when I ran around, threw the trash in the boot, slammed it shut, and got in behind the wheel. As I swung back on to the road and accelerated up, I got a glimpse of her face and the expression there made it seem like she'd just been granted a reprieve, rather than a ride.\n\nWe drove for a while, the tension seeming to build up between us once more, her mood now bleak and cold.\n\n\"So, where's the nearest reasonably good place to eat?\" I asked, trying to break the silence.\n\n\"Dunno. I'm not from around here.\"\n\n\"Oh. Where're you from?\"\n\nShe waved a hand towards my side window, but pointedly said nothing.\n\nOkay, that went well.\n\n\"Got a surname?\"\n\n\"No!\"\n\n\"Ah, bar sinister then,\" I sighed. She turned and stared at me.\n\n\"I'm not going into any bars,\" she said sternly.\n\n\"No, that's not... It means illegitimate. It's from heraldry. You know, the left-handed bar across the shield...\"\n\nI stumbled into silence; strike two - or two wickets down in the first over, depending on your place of birth.\n\nI tried to think of something neutral to say.\n\n\"So, you hang out and hijack cars around here often? Is it a local custom?\"\n\n\"What? Stop asking me questions! Especially stupid ones.\" Her tone was hostile. So was mine.\n\n\"An hour ago you were trying to hijack me, and now I'm actually giving you a lift to get food. I think I'm owed an answer or two, don't you?\"\n\n\"Fine!\" she said, her voice carrying a flounce that couldn't have been plainer if she'd stamped her foot, crossed her legs and arms and glared at me. She didn't actually do those, but it was all there in what was left unsaid.\n\n\"Fine!\" I shot back. \"What's your real name? Why are you a fugitive and from whom? And how the hell did I end up giving you a lift after you threatened to kill me?\"\n\n\"Nothing to do with you!\" she yelled.\n\n\"It has everything to do with me!\" I shouted back, losing it once again. \"For all I know a convoy of police cars could tuck onto my tail any moment now -- threatening to shoot me if I didn't hand you over. Or even worse, some wise-guy with a toothpick in his mouth and an ice pick in his hand could invite me to go somewhere quiet for a special conversation. And I don't even know your real fucking name!\"\n\nShe hesitated and then sagged into the seat. \"Fine! But you tell me something about you first. All I know about you is that you managed to fight me off and then kind of abducted me. Oh, and your name rhymes with tin. For all I know you could be some kind of rapist and murderer!\"\n\n\"No, because then I'd be wearing a cap with the words 'rapist and murderer' written on it, wouldn't I?\" I came back, with a silent apology to Marty Feldman for stealing part of his joke.\n\nShe stared at me in bewilderment. To be fair, she certainly wasn't the first girl to give me that look. There was a long line of girls who'd worn that same expression when faced by my sense of humour, all the way back to Angela Fowler in primary school.\n\nI shook my head. \"Sorry, it's something my family do. We take parts of comedy routines and adlib them into situations. You have to be in on the joke to get it. If you were part of my family, you'd be rolling in the aisles by now.\"\n\n\"I can only imagine,\" she said dryly.\n\nI sighed. \"Okay, my name is Bryn Idris Lake, I was born in England, I'm divorced and I'm here for a business meeting in Wichita, with a little sight-seeing along the way.\"\n\n\"How's that working for you?\" she asked, her expression neutral.\n\nI knew she was talking about the sight-seeing, but I was still a little pissed at her. \"The name is a pain in the arse -- my mother had some pretty Welsh names picked out for her little girl when she arrived, and when I disappointingly turned out to be a boy, she just stuck with the Celtic. I'm very happy being English, and very unhappy at having an ex-wife. The business meeting is a formality, and so far, all the sights I've seen have been related to wheat or corn in some way. There! Happy now?\"\n\nShe digested that for a few minutes.\n\n\"You're divorced?\"\n\n\"Oh no. I told you things about me. Your turn.\"\n\n\"My name is Charlotte Kennedy,\" she said grudgingly, watching me carefully as if to catch my reaction. The name meant nothing to me, so my reaction was self-limiting.\n\nI waited. \"That's it? That's all you're giving me?\"\n\n\"I only asked you to tell me one thing,\" she said blithely. \"You volunteered the rest. You don't look old enough to be married. Tell me about your ex-wife.\"\n\nI sank down into my seat. \"I'm almost twenty eight. I've known her since I was at school. We got together at university. She fell pregnant. I married her. She turned into the bitch from hell. I divorced her.\"\n\n\"You have a child?\"\n\n\"No. She had a miscarriage. Except she didn't.\"\n\n\"That doesn't make sense.\"\n\n\"No, it didn't to me either. Where are you from?\"\n\n\"California.\"\n\n\"North or South?\"\n\n\"North. Sacramento.\"\n\n\"You're a long way from home,\" I said, trying to get a conversation going that included more than four words.\n\n\"I guess. What did you mean about the miscarriage?\"\n\n\"She told me she was pregnant. Shortly after we were married -- when she was four months along and about to have ultrasound scans done, she told me she'd miscarried. A couple of years later, I found out that she'd never been pregnant. It had all been a lie.\"\n\nShe stared at me. \"Wow! That must have really hurt, both when she told you and when you found out the truth.\"\n\n\"Yes.\"\n\nThere was another thoughtful pause.\n\n\"Why?\"\n\n\"Why did she lie? I think it was economics. I do okay financially, and looking back, I think she just wanted an easy ride after she graduated university.\"\n\n\"You loved her?\"\n\n\"Everybody loved Phoebe. Loving her was my mistake.\"\n\n\"So what happened?\"\n\n\"We married and were happy as pigs in blankets, until a little piece of refuse disguised as a small, weedy, low-life human being came along and convinced her that she had a better future with him than with me. Think foul, but smaller.\"\n\n\"Shit.\"\n\n\"Ah, that's the word I was looking for. Thank you. He was a little shit, and he shat all over my life.\"\n\nThere was a long silence while she considered this.\n\n\"I need more detail than that.\"\n\nI sighed.\n\n<p align=\"center\">\u00ac\u00ac\u00ac*****\u00ac\u00ac\u00ac</p>\n\nLoose arrow, fly\n\nSight on sight\n\nLet murder by\n\nInto the night\n\nOf war.\n\nHold back the Horde (B. Lake) 2008\n\n\u00ac\u00ac\u00ac*****\u00ac\u00ac\u00ac\n\nINTERLUDE\n\nTo understand why Phoebe did what she did, crushing my soul and leaving me barren of feelings, someone would have to understand a little more about me than I'm usually comfortable in revealing.\n\nWhen I got my first laptop, I used to write songs in the woods behind the village. My song writing was my private thing, and I definitely didn't want that to get around, so it was better to do it far away from human earshot. I'd played something for my grandma once, and she'd said how proud she was that I had a nice little hobby; which was patronising, at best. I'd later heard my parents agreeing with her, and wishing that I could get interested in doing something useful -- something they could be proud of, which, I have to admit, hurt a lot.\n\nNone of my family was musical, and none of them really understood or took my ambitions seriously; not even Janie, my sister. If she ever heard me playing one of my own compositions, she'd memorise the words and then sing them back to me in front of other people, pulling faces and singing it wrong until everyone was laughing. She could be mean at times, could Janie. At least she didn't tell people I wrote the words and composed the tune. Her meanness only went so far.\n\nJanie was the world's worst music critic. Well, she used to be. Now -- not so much. Not since...\n\nAs a twelve-year-old kid, I was the most miserable person in the world. I was huge. I was so huge that I had my own gravity system -- little kids getting pulled into orbit around me and circling endlessly until rescued by an adult. My belly appeared around corners before the rest of me, and my arse remained in view when the rest of me had already negotiated that corner.\n\nI got hit a lot. Not hit on. Just hit -- especially on my gut or my arse. Oh, and my moobs were an especially favoured target for some of the nastier kids. Believe me, it's hard to impress a girl even enough to get them not to sneer at you when some kids half your size are grabbing at your man-boobs and comparing them to hers. No friends at all then; never mind dates. Not ever. My size seemed to bring out the bully in everyone -- even the nicer kids. It was as if my bulk alone offended them on some very basic level.\n\nEven my own mother would look at me and tut, usually when I needed bigger clothes, and she was a large part of the problem.\n\nMum came from a really poor family, and I found out later -- when I was adult enough to have really honest conversations with her -- that they often went without food, usually when her dad had drunk his way through his wage packet as soon as he got it, and then pissed away the proceeds of that up against a wall in some alley. When she had me, she was more than determined that her first-born would never go hungry.\n\nRight from the start, I was almost force fed. Even Italian families, who in my experience try to feed everyone who steps foot in their house with at least twice as much food as they need or want, would have been shocked by the amount of food she shovelled into me. And the food itself? Well, my mother seemed to consider anything in the salad family an invitation by the devil to starve her family to death, and any vegetable was treated with extreme suspicion. If it wasn't rich with butter and cream, fats and carbohydrates, then it wasn't worth the effort of eating it. Over-compensation of course - it was obvious to anyone who knew her history. Not a lot of people did.\n\nIt's astonishing that I didn't end up with at least one of the premier forms of diabetes. I mean, I'd heard her in full-on rows with the local doctor about my weight -- her trying to convince him about the size of my bones, he trying to convince her that I was becoming a danger to an orderly solar system -- and both of them ending up angry and frustrated. She'd whisk me back home and make a special lunch or dinner for me -- heavy with great tasting but wildly unhealthy food. If I ever said I wasn't hungry and didn't want to eat, she would turn on the water works. Let's face it; no boy wants to make his mother cry.\n\nWhen I turned ten and was the size of a sixteen-year-old, Mum calmed down, mostly because my seven year old sister would very loudly and determinedly refuse to eat any more than she wanted -- and still remained alarmingly healthy, despite all Mum's fears. Her relaxing was partly because my dad did pretty well at work and none of us were ever in danger of going without, and partly because she finally learned from Janie's blithe disregard that it was okay not to stuff kids like they were geese and you fancied some really good p\u00e2t\u00e9. She gave up on her mission objectives to give me the status of a moon, but it was too late for me by then. I had established patterns of eating, and seemed determined to hit the grave before I hit the legal driving age. Biscuits and crisps at bed time after a big pasta meal, hot salted chips with pizza for lunch, a chocolate bar or three for dessert after a rich breakfast, and a bag of sweets to nibble on throughout the day -- all with Mum's tacit and explicit approval.",
        "Part of my growing up was the realisation that she lied to me non-stop. Everyday... Everyday! I would head for the front door on my way to school, and she would grab me for a hug and a kiss, and tell me I was her beautiful boy. Over her shoulder, in the full-length hall mirror, I could see the back of her, and parts of me hanging out on each side of her. How could she possibly consider me beautiful?\n\nOf course, I was miserable from the time I woke up to the time I fell asleep -- sometimes halfway through a snack. Because inevitably, the fatter I got, the more miserable I became -- and the more unhappy I became, the more I would turn to food to try and find even the smallest measure of pleasure I craved in my bleak life.\n\nBy thirteen I'd turned completely inward, staying silent unless absolutely compelled to say something to someone at school. I still needed to release my inner voice somewhere, anywhere, so I began to write poetry -- which was awful, and then songs -- which were better. I loved writing those. Somehow, when I wrote the words down, I would hear voices singing the tune behind them -- clear and pure and clean in my head. They were usually women's voices, and I sometimes wondered about those women, but allowed that they were probably muses. Those were the easiest to remember, and I'd carefully pick out the notes on my guitar. After a while, all I needed was a trusty hound, and I could have been a tramp and busked for food -- although I would have needed to busk 24/7 in order to keep me fed. I don't know how the dog would have survived.\n\nI was solitary, so I turned to my second great love; my little magic box, which sat on my desk and hummed quietly to itself 24 hours a day, no matter what Dad said about his electric bill. I'd discovered that most computer equipment failures happened during the powering up and down stages, so the hell with doing that! It was too valuable to me. I mean, who wants to lose their one and only friend just because of a few pennies on an electric bill?\n\nBeing a loner, of course I got into every aspect of programming. I mean, I was truly alone but for my sister, and she could only stand having a boy around her for limited periods at that stage of her life. Besides, what else was I going to do -- nip out for a game of football, or do a few laps at the local swimming baths? I could have been effective as a goalkeeper, the opposition would probably never have the space to squeeze the ball past me, as I probably could have filled that goal from side to side. In the pool, I stood a good chance of being harpooned. I was sentenced to the worst of nerd lives.\n\nTo combine my two hobbies, I wrote a program. I ran it and tried singing and playing one of my compositions to my electronic friend. Dissatisfied, I tried again, and the program got bigger and bigger as I rewrote the code three more times, importing and adapting free code posted online by other programmers. The next time I played my guitar to it -- as badly as ever -- it faithfully recorded the sound and then allowed me to alter just about everything about it until my playing sounded almost as good as Knopfler, Page, either of the Hawkins, or Santana -- and I was still trying to step it up to try and get even near to Hendrix. I kept at it and added whole sections to the program to allow me to artificially add other instruments; strings, brass, percussion -- pretty much anything I wanted.\n\nI became a keyboard player -- even if it was only a computer keyboard. I kept improving the program, spending days writing and rewriting code, and even more time with headphones clamped on tight, playing and perfecting music I'd composed.\n\nIt was around my sixteenth birthday that I finally accepted that with my voice, I was never going to make it as a singer. Britain's Got Talent would just have to eat its heart out when I didn't turn up to audition. I was a bit sad about that: I'd seen a video of a duo called Jonathon and Charlotte on that programme and if he'd had a lot less hair, a couple of pounds more fat, and a much worse voice -- he could have been me. She was hot! If he could get together with a girl like that with just his voice, perhaps even I could. That is, except for one thing: his voice could grace any opera hall in the world and mine sounded more like a goose farting in a colander.\n\nI had needs! Basically, I just really, really wanted to be with a girl I wasn't related to at some stage -- just to see what they actually felt like, even in a non-sexual way. I had the idea that they probably felt smooth and soft underneath those clothes. I knew most of them were pretty and all of them were mostly mean, but they usually smelt really good -- I knew that as my sister had friends who would call round, although I would hibernate in my room whenever they did to try and avoid offence.\n\nI was writing songs that I would never sing, until one Sunday morning, I woke up with a strange notion rattling around in my head. I watched a whole lot of YouTube videos that day to get things right in my mind, and carefully rewrote one of my songs, changing the key and the tempo. I added a few cellos and a marimba to the opening backing track, and then recorded it, adding full orchestral background to the chorus and adjusting the words to fit the need as I went along.\n\nOn Monday I posted a CD and an accompanying letter through the local letter box on the way to school, and settled down to my miserable life once more.\n\nI know now that it was an idiotic thing to do. It was never going to be heard. Not a chance in a million would anyone take any notice of a CD from an unknown source.\n\nIt turned out I was number one million and one.\n\nI discovered later that the secretary whose job it was to open unwanted mail and chuck it in the bin, misread my odd name and confused me with Greg Lake of Emerson, Lake and Palmer. With him in mind, she listened to the CD and then forwarded it to the music editor whose job it was to evaluate new possibilities. The secretary had done her research and attached a memo, noting that she thought it was a decent ballad, and that Greg Lake had had success writing some pretty good songs in the past, after he separated from ELP. She'd also noted the recommendation in my letter as to whom the song was designed and written for. The editor took a listen and agreed, forwarding the CD on to Robbie Williams' agents. They listened to it in turn, realised that it was a good fit for him and -- with the now-absent Gary Barlow being the main song-writing contributor to most of Take That's hits -- decided that my composition might help keep his solo career at the top of the hit parade, or at least out there and being taken seriously.\n\nIt turns out that it was the accounts department who first discovered the error. They had gone back and checked my letter to confirm the address of Greg Lake's agent, so they could send out the standard contract and a cheque to lock it down. That's when the shit hit the fan -- of a jet engine! Who the fuck was this Bryn Lake guy?\n\nThey'd already spent a whole lot of money and time on studios, musicians and backup singers, as well as engineers and a producer. Hell, the music video was almost completed -- and the budget for that was already spent!\n\nThe studio, the label reps and Mr Williams' agency got together in a panic for an emergency meeting. They'd spent all this money on the assumption that they were operating under a standard music agency agreement with someone they had worked with before -- even if it was a long time ago. Now they had to talk to some unknown wild card, without even a contract signed. Of course, it didn't help that Robbie liked the song and didn't want to discard it. The label had signed him in the biggest music deal ever seen in Britain up until then, and knew they would have to treat him with kid gloves for a while until they got their investment back. The blame went round and around that meeting table a couple of dozen times, before they gingerly decided to go with it and see what came out the other end.\n\nWhen I got a contract in the post a few months later -- at best expecting an automatic rejection slip of some sort -- read it, and eventually woke up again, I turned to my electronic friend for advice. In the end, online research led me to phone a Mr Paul 'Call-me-Lappies' Labuschagne and ask him to represent me in the matter. Once he understood what I was saying and that there was already a contract out there for me to sign and -- even better -- that no further effort was required from him on my behalf to get it sold, he set aside his disbelief and became really enthusiastic about adding me to the string of songwriters and musicians on his books.\n\nLappies was a South African ex-pat, who had moved to Britain in the nineties and started up a small, but very effective agency. Initially, he signed up everyone that had a shred of talent in the entertainment industry, but quickly refined it to music -- his first love -- although happy to keep representing those in other fields that he had already signed up. He was a big Afrikaner with a strong accent, a huge smile and the ability to get people to like him very quickly. Behind the smile, he was intelligent, trustworthy, honourable and very, very crafty. His business quickly became successful.\n\nI signed with him, although I didn't sign that particular contract with the record label in the end. Lappies had a meeting with them and -- having discovered through contacts that the song was all done and dusted, part of an album ready to ship out and hit the music stores and internet within the week -- he basically sneered at their contract and settled down to negotiate something far better for the two of us.\n\nI signed a better contract, instead. For him it was a cut of a higher percentage. For me, it was my name as sole writer on a song which quickly climbed up the hit parade. I didn't get paid an option, and had to wait almost a year before I saw any real money, but then the automatic royalties system kicked in and cheques rolled in regularly each month. Lappies loved it. So did I.\n\nMy sister, whom I'd sworn to secrecy on pain of death and telling everyone she still wore My Little Pony onesies to bed each night, stopped taking the mickey out of my songs and even promised me her first born if I would just introduce her to Robbie Williams. Sadly for her, I never met him -- or anyone else at his label. Unfairly, I was put on some shit list with them for several years until my folio of hit songs grew too big to ignore.\n\nDespite their desire to broadcast the success of their strange lonely son to family and friends, my parents were sworn to secrecy, as well, much to their chagrin. They understood the reason. They could see from any newspaper they cared to read that fame tended to do weird stuff to people when it first happened, and knew that I was both too young and too locked inside myself to handle that sort of nonsense. I got to see that up-close way better than I ever wished.\n\nI wanted to keep my songs to myself.\n\nI'd listen to girls singing it at school, or dancing to it while sharing it on their iPods or phones, and keep a small smile of satisfaction to myself. The success of that song gave me some self-belief, self-confidence and self-awareness. Not a lot, but enough that when combined with the money I got when the royalty payments started coming in every month, it got me masses of gym time with a personal trainer and dietician. Over the next two years, I cried a lot when I was alone -- from the pain throughout my body, from exhaustion and from loneliness. However, the fat melted away to be replaced by a modicum of muscle, and when the trainer finally gave me a nod of respect, I was ready for university and a degree in computer sciences -- although I was still not really ready for girls.\n\n<p align=\"center\">\u00ac\u00ac\u00ac*****\u00ac\u00ac\u00ac</p>\n\n \n\nTake the burden\n\nCarry the weight\n\nDodging the eye\n\nAway from the light\n\nMake it work hard\n\nKeep it sightless of fate\n\nPay it dear and precious\n\nAlways, (always, always) out of that sight\n\nRings (B. Lake) 2005\n\n<p align=\"center\">\u00ac\u00ac\u00ac*****\u00ac\u00ac\u00ac</p>\n\nZero hour +1\n\nSummer and I were lost in a crossword. At least that's how it felt. Intersections would appear every couple of miles, forming a never-ending grid of regimented crops with no sign of civilisation on either side. I guessed that even wheat needed roads to get to mills, feed stores and bakeries, but I couldn't swear to it as there was no sign of any of those as we drove on and on.\n\nSummer, or more correctly Charlotte, had lapsed into a sullen silence after I regaled her with the story of how I first got a date with Phoebe; her hearing me working on a song in the woods, stopping to chat -- and to my astonishment, admiring my work. I had persuaded her to sing along and recorded her voice, and as a reward promised her pizza. I'd stopped at that point -- getting lost in memory.\n\nMore worryingly than Summer's attitude, I realised that she was sliding her butt forward and slumping down in the seat whenever a car or truck came towards us. When on one occasion we were overtaken, she slid off the seat altogether to crouch in the footwell. I raised one eyebrow and she scowled up at me, her lips screwed up tightly into a little bud that looked alarmingly kissable. As the truck breezed past us, I saw what seemed to me to be a very ordinary man, wearing a checked shirt and a cowboy hat. He glanced over and then concentrated on his driving.\n\nWhen I described him to Summer, she seemed relieved, but refused to say who she was watching out for, turning her head away and looking out of the window, keeping her thoughts to herself. For a while I thought about how she refused to tell me who was chasing her, and the words in my head seemed to flow like tributaries of a river. As the scenery slowly rolled past, they all came together into a delta to form the song that would eventually become Chasing the Fast Road.\n\nAiding the composition of that was the fact that we were travelling on what I would normally consider a gravel road -- a farm road -- a seemingly infinite off-white path that simply went straight for mile after mile, crunching under the tyres as it unwound in a continually direct uniform strip. I kept the speed down to thirty miles an hour, all too used to the sudden inexplicable bends that appeared in British roads solely to challenge a driver's skill at getting around a corner while going too fast. I didn't want to face that on a surface made of stones kept together only by the force of gravity, but other drivers seemed to regard it as perfectly normal, sweeping past us at much greater speeds.\n\nGravel seemed to be fairly standard for the area, and little heaps of grit appeared on the verge from time to time, probably for top up or repair purposes. One of my main concerns was that this would turn out to be the grit that I'd been instructed to try when I visited Nashville, the next stop on the tour that Lappies' personal assistant had strung together for me: a tour of icons, musical greats, and the offices of their agents. My preferred ideal of seeing America would be from the upper deck of one of those luxury trains I'd seen in movies -- hopefully in first class -- with some excellent catering. I also wanted to see the real America behind the shadows on movie screens, so I guess it was my own fault.\n\nNow I was here, it felt a bit weird. It was all too a bit too big for my liking, and I felt almost itchy within my skin. The whole country was too big, with too much sky. I was seated next to a pretty, albeit goblin-tempered woman, in a huge car that effortlessly swallowed every bump in the road, surrounded by wheat as far as the eye could see. This was not what I'd expected this trip to be. I missed my little corner of the world. I needed to see more people, more buildings, more hills, more rain. One day out of London, and I was already homesick.\n\nI was also in trouble. I had the gnawing certainty that this thing with Summer, whatever it was, would turn out badly. Not for the first time in my life, I mentally swore at the part of me that forced me to remain with her. It had been bad before, but after she'd hugged me, my oh-so-wonderful syndrome was buzzing along merrily like a Japanese Shinkansen -- a bullet train -- seemingly unstoppable and moving too quickly to ever halt, or even slow down enough for me to jump off.\n\nI sighed, and then brightened a little as houses came into view and we drove into a town... a village... a roadside camp? I had no idea what to call it. The houses were an almost uniform white with very little to differentiate between them -- apart from some having grey roofs and some red -- with huge spaces of bare land between them. Little huddles of these were gathered together here and there, and the sum of those clusters was more like a clot on the landscape than anything else I'd ever experienced.\n\nSome had cars -- or fridges, stoves or sofas, or all of the above -- in the front and back yards; which couldn't be called gardens by even the most enthusiastic stretch of the imagination. The surrounding fields were a rich, emerald green or a bright, shining gold -- while the yards and public grassed areas were a lifeless brown. There were way more basketball hoops than the flagpoles proudly flying the Stars and Stripes that I'd been led to expect. To be honest, I couldn't help comparing it to the remnants of a gypsy camp I'd seen once, after the caravans and trailers had moved on.\n\nMore promising for Summer's empty belly were the bigger houses and neater yards that appeared a few blocks further into what turned out to be the township of Lincolnville. In the distance, I spotted the first sparse signs of life with a few people moving in and out of what was obviously some sort of trading store. My hopes were dashed once again, when I got closer and realised it sold auto parts. Okay, it was mid-afternoon and most of the residents were probably either working in the fields, or somewhere with a few more enterprises, but this looked like a ghost town.\n\nI let out a noise of annoyance. How could anywhere with more than a dozen houses sell auto parts but not food?\n\n\"What's bugging you?\" Summer asked.\n\n\"I can't find a place to eat,\" I complained.\n\n\"You passed a diner a few blocks back. I thought you weren't going to stop so I didn't say anything.\"\n\nI cocked my head at her, askance. I sighed. \"Okay, I'll turn around.\"\n\nI retraced the route until she pointed out what I'd previously taken to be a double-length garage with a couple of small windows in the side. It looked very similar to some of the houses: four metal covered walls and two plain roof sections leaning against each other. It reminded me of photos of the old prefabricated houses they churned out by the thousand after the war for the hordes of returning soldiers and their families.\n\n\"That's a diner?\" I asked, disappointed at the shredding of my movie-inspired expectations.\n\n\"It's not where Harry met Sally,\" she agreed, picking up on my dismay. \"But it's food.\"\n\nI parked and she fussed with the handkerchief on her head. I realised that she was making sure it covered her hair completely. Yep, she was being followed all right, and that being the case, that magical hair would draw attention like a lighthouse in the middle of Trafalgar Square. In my imagination, I placed a huge rotating lamp on the top of Nelson's head and sniggered at the incongruity.\n\nShe glared at me, and I did my best to look innocent. After a moment she sat back and looked at the diner.\n\n\"I don't have any money,\" she said finally.\n\n\"I kinda guessed that, I've pretty much seen everywhere a pocket might be expected.\"",
        "She snorted her annoyance. \"Jeez, you're not going to give me a break, are you?\"\n\n\"Well, apart from not going mediaeval on your arse when you tried to mug me, not leaving that same arse for the children of the corn to munch on, then helping you shower, giving you a ride and now about to fill that growling belly of yours -- no. No breaks from me. You pretty much hit that nail bang on the head.\"\n\nHer hands formed those claws again, and my throat definitely felt threatened.\n\nWanting to forestall any more physical animosity, I climbed out of the car, went around and opened her door. \"After you, milady.\"\n\nEven barefoot and clad in clothes that threatened to drown her, she entered the diner as if she owned it, and I found myself smiling at her manner.\n\nLunch, dinner, or tea -- depending on how you regarded that meal -- was interesting. She ordered a burger and chips, which order I doubled, and then ordered a coffee with milk and some pecan pie for myself. When the food arrived, I immediately regretted doubling up on her order, and stared aghast at the massive size of the patties, the sheer bulk of the bacon, cheese and other sundry items within the buns, and just shook my head. In the end, however, she somehow managed to munch her way through both burgers, all the chips and then stole half my pecan pie -- which was almost sublime it was so good -- before finally giving up. I had to tap her knuckles with my spoon before she gave up trying to snaffle the ice cream as well. I realised it was true: everything was bigger in America, and I had to learn to think in those terms.\n\n\"Damn, I needed that!\" she said, reclining in the cane back chair and slurping noisily at the huge glass of soda, the top of the straw only just managing to break the surface when it was served.\n\n\"How much was it?\" she asked when the bill arrived, then looked completely blank when I told her.\n\n\"What the hell's a pony got to do with it?\"\n\n\"A pony, my poor uninformed colonial lass, is twenty-five pounds, although this time I'm talking dollars. How much should I leave?\"\n\n\"Leave five dollars for the tip.\" She frowned at my raised eyebrows. \"Twenty per cent, cheapskate! They need the tips!\"\n\n\"Don't they pay their staff properly?\" I asked, dropping thirty-five dollars on the table. Her comment had stung. I wasn't a cheapskate by any means, but I thought a surcharge of twenty per cent for simply taking an order and bringing the food to the table was still a bit steep. I wondered if I was supposed to tip the cashiers and shelf-packers in the shops, and mentally shrugged; perhaps that was just how it worked here.\n\nI checked our bearings with the cook behind the counter, who was wearing a rather grubby apron and a white... whitish hat of some sort. Disappointingly, and contrary to my expectations, he was quite thin, wasn't sweating hugely and was clean-shaven. He gave the information I needed, but when he pointed out directions for me, he waved his spatula in wide arcs. I felt redeemed. To my mind, that was how a short-order cook was supposed to act.\n\n\"Head toward the silos over that way. Turn onto 6<sup>th</sup> and keep going till you hit 56.\"\n\n\"But I need to be on 77,\" I protested.\n\nHe sniggered. \"Same thing...\"\n\nI could hear the word 'dummy' unsaid in that sentence. At least it explained how I'd got so lost while never deviating from the right road.\n\n\"Aah. Thank you,\" I said, and after a few more questions, returned to the car.\n\n\"There's no sheriff in this place,\" I commented to Summer. \"We can find one in Wichita, I guess, although I don't think we really need to.\"\n\nThere was a silence between us as we passed an attractive brick church and a few rather more upmarket houses. The local council or its US equivalent should put in a one-way system to ensure that all visitors had to go through this part first, I thought.\n\nWe reached the highway, and turned south towards the I35, the silence stretching out to uncomfortable levels. I was about to make some inane remark, when she turned to me.\n\n\"Tell me a joke.\"\n\n\"Really?\" I had definitely not expected that.\n\n\"Why not, we're both on edge. It couldn't hurt.\"\n\n\"Okay.\" I put on a West Country accent. \"Near my house there's a little office park with just two offices. One is a genealogist and the other is a gynaecologist. A friend asked me what the difference was. I explained that one looks up the family tree and the other looks up the family bush.\"\n\nSummer stared at me for the longest moment, while I kept my face absolutely straight. I was about to apologise to her and berate myself for the inappropriateness of the joke in her circumstances -- although she hadn't actually told me of them, so how was I to tell her I'd guessed? Then her mouth twitched and her nostrils flared a couple of times. She snorted, then giggled and then loudly gave one of the sweetest and yet filthiest belly-laughs I'd ever heard. Soon we were both laughing - her at the stupid joke, me with pleasure at the sound of her mirth. Damn, she had a sexy laugh.\n\nThe rest of the journey passed very pleasantly with both of us telling jokes, and silences suddenly broken by a cry of, \"I know one, I've got one! Listen to this...\" The jokes ranged from pre-school all the way to filthy, with both of us rocking from side to side with laughter.\n\nI made my way hesitantly through the toll and the interchange, remembering to drive on the wrong side of the road at all times and brutally suppressing every instinct to move to the left, and in no time, we reached the eastern approaches to Wichita. I followed the signs and soon parked up alongside a humungous mall, finding a shady spot in the parking area.\n\n\"Please stay here,\" I said as I switched the engine off. \"I promise I won't be long. I'm going to put your seat back and you can take a nap. Nobody will see you unless they walk right past the car. I'll lock the doors, but you can open them from the inside if you absolutely have to.\"\n\nShe looked worried.\n\n\"I'm not going to report anything to any policeman, okay? No harm, no foul I guess, so don't worry about that. If you leave the car dressed like you are, they may very well pick you up as a tramp -- as a vagrant, I mean not a... and either move you on or put you up for the night. If you go into the mall, ten to one they'll think you're a shoplifter and put your face on video -- without that bonnet you're wearing. Now, I don't know who you're running from, but I'm guessing you don't want your picture flashed around.\"\n\nShe gave a tiny nod.\n\n\"I'll be back soon,\" I said, looking at her steadily. \"Please stay safe!\"\n\nAnother tiny nod. I reached over her, ignoring the way her body suddenly stiffened up, and used the backrest lever to lower the back of her seat so she could lie down.\n\n\"Do you want the blanket?\" I asked quietly as I sat back.\n\nYet another nod. Her eyes were locked on mine, questioning my motives and actions within their depths. I ignored the question, reached back and dragged the travel blanket to the front. She curled up, looking for all the world like a little girl after a long outing, and I spread it over her, unable to resist tucking it under her here and there.\n\nShe gave a deep sigh, and drifted off to sleep.\n\nI stared at her. How did anyone drift off that quickly? Actually, she hadn't 'drifted' off at all; it was more like the start of a Formula 1 race, she was away so fast.\n\nI locked the doors, pocketed the keys and hurried into the mall. I found the right shop and began to make guesses as to what would be best to buy. Then it was onto the huge store nearby for basic essentials. There, I discovered that Summer wouldn't have been out of place at all, and that some people seemed to dress up to go shopping in pretty much anything they'd found in a bargain bin at a charity shop. One woman was actually wearing pyjamas as she herded a small group of children from aisle to aisle -- pushing three trolleys full of bulk-buy items between them.\n\nIt took almost forty-five minutes in the end, partially due to my standing and gawping at the passing parade, but when I hurried back I found I could have taken my time. Summer was still fast asleep, and didn't seem to have moved at all since I'd left.\n\nCognisant of the fact that she wasn't wearing a seat belt, I drove very slowly and carefully through the car park -- which could have contained Wembley Stadium within its perimeter -- to the other side of the mall and repeated the exercise in different shops, returning to stow new bags on the back seat alongside those I'd already left there. The rear half of the car was becoming very congested. I put the two bog-standard suitcases I'd bought for her in the boot alongside mine.\n\nI carefully wafted the contents of one of those bags under her nose and sat back, watching her. Her nose wrinkled and her chin lifted slightly. I gave the bag another waft and her eyes popped open.\n\n\"Panda's orange chicken?\"\n\nI stared. \"How the hell could you know that just from the smell?\"\n\nShe clicked her tongue dismissively. \"I'd know that scent anywhere. When I was little, my grandma used to take me to Panda every time I visited her. It was the best scent in the world to me.\"\n\n\"Duly noted. I shall try never to get between you and a box of this stuff for fear of being steamrollered flat.\"\n\nShe sat up, keeping the blanket over her, took the carton out of my hands and proceeded to demolish the contents at a rate of knots.\n\n\"Oh, did you want some?\" she said as she finished the last scrap, having the grace to look slightly embarrassed.\n\n\"I wouldn't have dared to ask,\" I said. \"I try never to risk having a hand bitten off just for the sake of fast food.\"\n\nShe sighed contentedly as she peered around to see if there was anything else that might be edible. I passed her the bag of spring rolls I'd bought for myself, and she dove right in.\n\n\"You have good taste,\" she muttered through a mouthful.\n\n\"Good to know.\"\n\n\"You ate already?\" she asked as she withdrew another spring roll and contemplated it.\n\n\"Yes.\" I'd eaten a really early breakfast on the plane, and with my background I was always careful about what I indulged in. The diet plan I'd taken on was simple -- eat little, but eat the best. Take-away Chinese food didn't really fit into that plan, and I'd only ordered the spring rolls so that she wouldn't feel awkward at eating alone. Her diet, on the other hand, seemed to be to eat everything edible at the earliest opportunity at the fastest possible speed, and after what she'd been through -- if she was telling the truth -- then I couldn't fault her on it.\n\nThe thought of my airborne breakfast brought me to marvelling how everything had happened so quickly. That morning I'd been over the Atlantic, and before much more than half the day was up, I was in a car with a runaway of some sort who had threatened to kill me, helping to hide her from pursuit while watching her demolish Chinese takeaway.\n\nIn fact, I rather enjoyed watching her eat. She didn't take enormous mouthfuls, quite the opposite. The food still seemed to disappear at an astonishing rate.\n\nShe noticed me watching her and paused in her efforts to get the Panda Group a top-100 rating on Wall Street by doubling their turnover in one sitting.\n\n\"So, what's in the bags?\" she asked, still chewing, and nodding towards the back seat.\n\n\"That's just a few things so that you don't draw attention to yourself. I mean, my shirt and shorts somehow look better on you than me, but you still look like you got dressed in the dark... in your Dad's wardrobe.\"\n\nShe looked a little sad for a moment, but she was completely woman, and in seconds was diving in, delving through the bags to look at the clothes I'd bought for her, little noises of approval or approbation coming from her as she investigated each article in turn.\n\nHolding up a small crop top, she smiled sardonically. \"Really?\"\n\n\"I thought that if you wore that, people might be looking more at your... your figure, rather than your face.\" I offered in my defence. \"I know it's all cheap as chips, but I wasn't sure of your sizes, so I got a bit carried away in the store. Look, we can get you better stuff when we get into the city itself and find you a boutique and\u2014\"\n\nI broke off as she took a quick look around the car park and then calmly whipped the tee-shirt off. I heard a noise emanate from deep within my throat as those wonderful little round creations came back into view and Mr Happy gave a little leap of joy. So perky!\n\nSadly, within seconds they were covered up again by the plain white crop top, which somehow managed to make her look every bit as attractive as she'd been while topless. It wasn't low cut, but it fit her tightly enough that I could clearly see the shape and texture of every inch of those breasts. The garment was sleeveless and as she adjusted the thin shoulder straps, her tits jiggled and shook slightly, which was more than enough to make old Mr Happy salute her once again.\n\nI noticed she was watching me out of the corner of her eye. Still no complete trust there. Fair enough.\n\n\"I got some underwear as well, although I wasn't sure of your bra size, so...\"\n\n\"You didn't just show your cupped hands to the assistant and ask for one that size?\" she asked seriously, and then grinned.\n\n\"I've never had my hands on yours, so how would I know?\" I came back at her.\n\n\"I thought all men were pretty good at judging size when it came to tits.\"\n\n\"We are, but women are equally good at making them look bigger, so we always get it wrong.\"\n\nShe grunted noncommittally and delved into another bag. Then she burst out laughing.\n\n\"Seriously?\" she giggled. \"Pink panties with a teddy bear on them? You still think I'm twelve?\"\n\n\"I like teddy bears. I still have mine from when I was a baby,\" I said, stalwart in my self-defence, while wishing I hadn't mentioned it at all.\n\n\"Let me guess; you were hoping to see me in these to bring back childhood memories, and not because you're a pervert?\"\n\nI stammered a denial. The thought had never crossed my mind. I'd simply bought a dozen different pairs and hoped that one of that volley would hit the target size.\n\n\"Relax! How does someone your age still blush?\" she demanded.\n\nI frowned at her, which she simply ignored.\n\n\"Watch out for me,\" she instructed, and swept her shorts off, pulling the pink teddy bear panties up over her legs and arching up to draw them tightly over her hips. Once again, I got a flash of that wonderful colour at the isthmus of her thighs. Then I saw the resultant camel toe with the teddy bear now comfortably ensconced just above it, and realised that it was almost as sexy. There was definitely something to the idea that hiding and hinting was sometimes better than all out in the open. I just couldn't decide which I preferred.\n\nShe started pulling on a pair of jeans. \"When I said watch out for me, I meant outside the car.\"\n\nI started guiltily. I'd known what she meant, but hadn't been able to even blink, while my eyes were fixed on every movement she made. I looked around, but there was nobody close enough to the car to see her.\n\nWhen she was finally settled, after pulling on socks and the lone pair of sneakers that actually fit of the three pairs I'd thrown in the shopping trolley, she adjusted the mirror on the visor to try and see how she looked. She chose one of the two baseball caps I'd got, and substituted it for the handkerchief. It was black with quite a long peak that I hoped would help hide her face, and the word 'London' across the forehead in order to throw out the suggestion that she was a tourist.\n\n\"You look good,\" I offered. \"Like a university student.\"\n\n\"I am a university student,\" she replied. \"Or I was until...\"\n\nShe broke off abruptly. \"So? Now that I'm respectable, is this the moment you hand me over to the police?\"\n\nI pulled an exasperated face. \"No! Why do you keep asking that? I already said that I wasn't going to do that. I'll take you wherever you need to go, or I can book you into a hotel if you want to lay low for a while. Whatever you want.\"\n\n\"My Good Samaritan, huh?\"\n\nI shrugged. \"No, but I can't just dump you on the street and drive away. That wouldn't be right.\"\n\n\"And you always do the right thing!\"\n\nI laughed bitterly at that thought, which actually sounded more like a bark -- not a pleasant sound. She drew back slightly.\n\n\"God no! I fuck up all the time!\" Sad Alice, who enjoyed constantly mourning her last lover; Rosalynn, who was the life and soul of every party -- with a lot of chemical assistance; Dinah, who was oh-so determined she had no worth, and needed to sleep with every man in the world to try and prove it; and, of course -- Phoebe, my over-ambitious and ever-angry ex-wife. They could all attest to the truth of that statement.\n\nHer head tilted to one side slightly as she considered my words, her eyes locked on mine. Then she sighed.\n\n\"Where are you headed?\" she asked, seeming to want to change the topic.\n\n\"Some hotel called the Drury Plaza.\"\n\n\"Can I come with you to get a real shower and clean up, and then I'll get out of your hair.\"\n\nI thought for a moment, and realised the White Knight didn't want her to go yet; but I couldn't allow it to take over my decisions.\n\nShe noticed my hesitation. \"Never mind. I shouldn't have asked. Just drop me wherever's convenient.\"\n\n\"No, I was just thinking of something,\" I said. \"Of course you can. We could both do with a real shower. You also need to sort out the stuff on the back seat before you go, and it will let you do it in peace while keeping you out of sight. And I promised to take you to a proper clothes shop. I'd be glad to help.\"\n\n\"I still don't have any money\u2014\" she started.\n\n\"Oh stop!\" I said, grumpily. \"I know that. You're broke, you're being chased by someone, and you need help. I get it. So let me do that for you!\"\n\nI pulled up the map app on my phone with some difficulty, and handed it over to her. \"In fact, you can help me by directing me to the hotel. You pointing the way would be better than a voice trying to talk me through it. It's somewhere near a river. And keep an eye on my driving! Don't let me turn onto the correct side of the road.\"\n\nShe sniggered softly. \"Jackass!\"\n\n<p align=\"center\">\u00ac\u00ac\u00ac*****\u00ac\u00ac\u00ac</p>\n\nDrifting on down the winds of the sea\n\nHiding away from your blatant decree\n\nSeeking the deepest trenches of time \n\nFor the infinite pressures of deep blue brine\n\nShades of Blue (B. Lake) 2015\n\n<p align=\"center\">\u00ac\u00ac\u00ac*****\u00ac\u00ac\u00ac</p>\n\nZERO HOUR +3\n\nWe set off from the mall, and within fifteen minutes I drew up outside a big square red-brick building. One of the staff brought out a trolley and loaded the cases and Summer's shopping bags onto it, before leading us towards the reception desk.\n\nA little niggle in my brain suddenly came to the fore and I drew her to one side. \"I only have one room booked. I'm going to have to tell them that we're a couple. Are you okay with that?\"\n\n\"It's all right. Don't worry about it. I do know how hotels work,\" she replied. \"I haven't been trying to be anonymous my whole life. Show them your passport.\"\n\nSummer fussed with the bags as I presented my passport and sapphire credit card at the same time, which seemed to create bigger smiles all round, and do away with any questions while the receptionist booked us in.\n\n\"What's the round building over there?\" I asked, trying to distract her from asking for ID from Summer. I wasn't sure how it worked here, but in Europe everybody booking in had to show ID.\n\n\"That's the Century Two,\" she said, returning my credit card and handing me a room card with it. \"It's one of Wichita's landmarks. Would you like a brochure?\"\n\n\"Please,\" I said, turning and giving the room card to Summer. \"Why don't you head up to the room, love. I want to find a place we can go this evening.\"",
        "She looked a little puzzled until I winked at her.\n\n\"Okay,\" she said, and kissed my cheek, which made that part of my face surprisingly happy.\n\nI watched her butt as she followed the baggage trolley to the lift, then turned back to the clerk once more, who was holding out a brochure.\n\n\"There's a guest appearance by an Eastern European youth orchestra playing tonight sir, if you enjoy the classics. They've had very good reviews.\"\n\n\"I do,\" I said, reading the name on her badge. \"What's your opinion, Miss Arthern?\"\n\n\"That's Annie-May, sir. And I really enjoyed them -- they were very good.\"\n\n\"Can you book me two tickets?\"\n\n\"Of course, sir. I'll put it on your account and send the tickets to your room as soon as they arrive.\"\n\nI wasn't actually planning on going, but it had distracted Annie-May from asking about Summer -- even if it was an expensive ploy.\n\n\"What's the dress code?\" I asked.\n\nShe pursed her lips. \"Whatever you're comfortable with, I guess. A lot of ladies go in cocktail dresses.\"\n\n\"Is there a fashion boutique nearby? I think my girlfriend might want a new dress for that.\" I'd deliberately gone out to emphasize that we were a couple\n\nShe glanced at her watch. \"I think most stores will be closed by now.\"\n\nShe bit her lip, considering. \"I have a friend who owns a dress store that she might open up again if I ask. Or she might bring some dresses here. What size is your partner?\"\n\n\"English sizes and American sizes are different, aren't they?\" I asked, and she nodded. \"And you're a woman, Annie-May, so you probably know better than me. Tell you what. If you wouldn't mind, would you ask your friend to bring some examples of her wares, evening and daywear -- if she would be okay with that, of course?\"\n\n\"I'll do so, Mr Lake. Oh, and if I might say so, I really enjoy your music. I especially loved the one you wrote for Sam Smith.\"\n\nI was gratified that at least someone knew my work. Songwriters are on the whole very much like scriptwriters at the Oscars -- more likely to draw a 'who the fuck is that' than cheers, approbation and the throwing on stage of panties by screaming groupies. Writing is perforce a dark and lonely existence -- no matter the medium.\n\n\"Thank you. That's very kind of you to say so.\"\n\nShe smiled as I confirmed her guess as to who I was, and got on the phone. While I was waiting for the lift, I overheard the words, \"... and such a cute accent!\" which made me smile.\n\nOn the way up to my room on the top floor, I thought of something and couldn't help smiling again. Perhaps we could actually go to the concert, if Summer wanted to. God knows, she needed something to distract her from her troubles.\n\nWhen I entered the room, I tipped the bellboy and looked around. It was large, airy and well-appointed, with two big king-sized beds -- probably enough sleeping room for six adults or seventeen kids by British standards. They were completely covered in a gay profusion of colours -- courtesy of Summer's new clothes\n\nI grinned and shook my head. It had taken just two minutes for Summer to turn a luxury suite into an unreasonable facsimile of my sister's room back at home. Hearing a shower running at full tilt from behind a door, which I presumed led to the bathroom, I sat at the desk and called down to reception.\n\n\"Yes, Mr Lake?\"\n\n\"How did your friend respond, Annie-May?\" I asked.\n\n\"She was very happy to help, sir. She'll be here within an hour with a selection of her ranges.\"\n\n\"Could I ask a favour? Would you call her and ask her to bring along any mantillas she might have in stock?\"\n\nThere was a pause, then, \"I've texted her your request, sir. Oh, and I'll send your tickets for the concert up as soon as they arrive. It was fifty-two dollars and will appear on your bill with us.\"\n\n\"Thank you. That's excellent service.\"\n\nShe sounded pleased when she thanked me in return. Good service -- I'd been told to expect that in America. Thank god that was one thing that Britain had imported from the States. Remembering some of the tales I'd heard of service at home back in the eighties, I could only cringe at how tourists must have seen us in those days. Hopefully, they had put it down to England being too busy swinging to the latest hits to care about that. Music -- now that was something where Britain could stand up and hold its own in any company.\n\nAll of which drew me back to thinking of Chasing The Fast Road -- the song I'd composed in my head earlier. I quickly wrote down the lyrics on some hotel stationary, and above the words made little symbols I'd invented for myself which would remind me of how the tune went when I'd heard it in my mind.\n\nAs I finished, the noise of the shower stopped and the sound of a hair drier took its place. I took some bottled water from the mini bar and sipped at it while looking down over the river that ran through this part of the city. The sun was setting, the view was peaceful and pretty, and as the evening rush hour tailed off, the noise from the streets was muted. All was apparently well in my world.\n\nExcept, of course, it wasn't. My common sense and white knight were still at war; one side claiming that Summer's presence was a disaster waiting to happen on just so many levels -- anything from jail time to permanent residence beneath American soil; while the other side claimed that she was lost and alone and needed my help, and besides which, she was just so perky!\n\nThe debate raged on and on within me and in an effort to turn down the volume on that internal argument, I eventually perched on the end of one of the beds and switched on the television. I flicked through channel after channel of talking heads discussing a variety of subjects which included the latest political scandals from Washington that were dragging on day after day under the banner of breaking news; the latest trends; the latest medications for various diseases and illnesses that seemed mostly to focus on weight, limp penises and burst arseholes; and a massive variety of things that I needed to buy now, Now, NOW! -- Before they ran out of stock! I thumbed the remote and turned it off again, feeling restless and wishing Summer would come out of the bathroom.\n\nFinally, she did and part of me wished she would go back in again -- as she was pressing a whole different raft of buttons. She was dressed in a simple, sleeveless frock in swirls of primary colours, that finished halfway up her thighs and immediately reminded me of my washing her legs. The dress had been inexpensive, but she still somehow made it look like haute couture.\n\nHer face was clean, her eyes bright and shining, and her confidence seemingly restored to a natural default as she bent slightly forward to brush her hair; still using my brush, I noticed. I guessed I wasn't going to get that back anytime soon.\n\nI'd stood when she entered the room, and promptly had to sit down again before Mr Happy's antics embarrassed both of us.\n\n\"Hungry?\" I asked.\n\n\"I could eat,\" was the simple reply. I could only marvel at the storage capacity of her small body, no matter how shapely it was.\n\nI got onto room service and in a short time, we were both munching on hot beef sandwiches with a sauce that constantly threatened to leak over everything in sight; my shirt and trousers, her dress, the bed covers, the carpet and probably the walls and ceiling. The porter delivered the tickets at the same time. I offered them to Summer.\n\nShe looked at them curiously, looked interested, and then her face dropped. \"I can't. My hair draws too much attention.\"\n\nShe looked pensive. \"I suppose I should cut it off.\"\n\nMy face must have shown my horror at that suggestion, as Summer sniggered. I hastened to dispel that idea. \"Let's not get ahead of ourselves. There might be a way for us to hit the concert unnoticed -- even with your mane.\"\n\n\"What way?\"\n\n\"I'm waiting for a delivery. We can decide then.\"\n\nSummer shrugged and settled back, tucking one foot under the other thigh and swinging the dangling leg off the side of the bed. The towel never looked in danger of slipping for a moment, although my eyes were ready to do their sworn duty and swivel towards her at the slightest provocation.\n\nDammit! Get yourself under control, man!\n\n\"What happened after that first date with Phoebe,\" she asked after a few moments of silence. Her tone said boredom, but her eyes flashed with curiosity.\n\n\"Ah...\" I said, after swallowing the final remnant of my sandwich. \"That...\"\n\n<p align=\"center\">\u00ac\u00ac\u00ac*****\u00ac\u00ac\u00ac</p>\n\nMini skirt\n\nOpen shirt\n\nWild flirt\n\nDirt Alert\n\nWe're on the prowl tonight\n\nWe're on the prowl tonight\n\nGirls' night (B. Lake) 2014\n\n<p align=\"center\">\u00ac\u00ac\u00ac*****\u00ac\u00ac\u00ac</p>\n\nZERO HOUR +4\n\n \n\nI took a moment to gather my thoughts about Phoebe.\n\n\"On that first date I treated her to a pizza in return for her singing on a sampler I was putting together. We had a good time, and I surprised myself by being able to speak without stuttering and stammering every time she looked at me. When I mentioned I had two tickets to a Take That concert the following week and offered to take her, she agreed to go with me. I must admit I was lying to her right then -- as I didn't actually have any tickets and up until that moment, no plans to go to the concert. However, I consoled myself with the knowledge that it would be true in a few hours, as I knew a couple of scalpers and could get tickets with a phone call, although at eye-watering prices. She was worth every penny, and more.\n\n\"The next date was to the movies, and the one after that, we went to the Victoria and Albert and then the Tate, catching the train into London. We kissed in front of Rodin's sculpture of The Kiss until moved on by security, although Phoebe wanted to stay and argue the point with the guard.\n\n\"You see, the thing about Phoebe was her temper. Most people, when they get cross, sort of build up to it. But Phoebe could go from calm to all-out rage in an instant. So I dragged her out of there before she exploded, and let her rant at me, instead.\"\n\nSummer cocked her head. \"Was she always like that? You said you knew her at school.\"\n\n\"I think so, although I didn't realise it at the time. How could I? I never spoke two words to her, or anyone else.\"\n\nShe looked at me and an expression of sympathy drifted across her face. I hurried on, not wanting to get into my past. Even Phoebe was a safer topic than that.\n\n\"I did notice something weird; I must admit. When we were on lunch or break time, she would always either be in a group or on her own. I didn't know why, and I certainly didn't ask, but she never seemed to have any one-on-one time with anybody. She had lots of friends, but none of them were really a best friend type thing. Everybody else had a friend that they always hung out with, and the two would join a group or drift away, and sometimes they would be with a boyfriend or girlfriend, but you always knew who their school buddy was -- their real friend. Phoebe didn't have that, which was pretty sad.\"\n\n\"What was your buddy like?\" she asked.\n\nThe question took me by surprise and I admitted more than I'd wanted to. \"I didn't have one.\"\n\nThe earlier look of sympathy returned, now as one of real concern. I hated that look and stared at my feet, forcing a laugh.\n\n\"Hah, yeah, I was that kid. There's always one in every school.\"\n\n\"How,\" she asked quietly. \"I mean, why?\"\n\nBitterly regretting starting this line of conversation, I stumbled through the story of my weight difficulty -- although calling it a difficulty was a bit like calling the collapse of the Twin Towers a slight design defect.\n\nLuckily, I was interrupted by a knock on the door. Summer squeaked and promptly hid in the bathroom. When I opened it, I discovered an attractive blond woman in her mid-forties, flanked by three rails of hanging garments, all carefully covered in plastic.\n\n\"Mr. Lake,\" she said with a pleasant breathiness to her voice. \"I'm Debbie Wanamaker. Annie-May called to say you needed some clothes.\"\n\nI shook her hand and waved her in.\n\n\"Summer, the lady from the boutique is here for you.\"\n\nThe little redhead exited the bathroom in a flash and soon the two women were going through every dress, blouse and pant-suit with appropriate noises of approval and admiration.\n\nDebbie pulled me aside, speaking quietly. \"The way Annie-May spoke, I'm guessing that you're footing the bill. What's the budget here?\"\n\nI checked a few tags, the prices clearly but discreetly marked. \"Whatever she wants,\" I said.\n\n\"She's a lucky girl,\" Debbie whispered.\n\nI'd thought about the situation while waiting for Summer to leave the bathroom earlier, and had come up with an idea for a cover story. It wouldn't hold up against any real investigation, but might pass casual interest. I raised my voice slightly so that my little goblin could hear me.\n\n\"Summer and I grew up near each other in England. Her family emigrated to California when we were teenagers, and we only recently found each other again. Now we're a couple, and I want her to know how much I still love her, which is why I requested your assistance. However, I am trying to train her out of that awful accent she picked up while she was over here.\"\n\nSummer didn't seem to notice, but I noted how still she became while I was establishing our faintly ridiculous cover story.\n\nDebbie was delighted. \"Oh, that's so romantic! So how did you find each other again?\"\n\n\"Facebook,\" Summer piped up, before I could say anything. \"My mother divorced my dad, remarried and I took my step-father's name, which meant that Bryn couldn't find me. But I kept an eye on him, and when I discovered that he'd been divorced, I messaged him. He came over here to meet me, we clicked again, and now we're touring a little so he can see America.\"\n\nWow, she was such a good little liar!\n\n\"Yeah, things just developed from there,\" I mumbled.\n\nShe gave Summer a hug. \"Right, let's get started.\"\n\nIt turned out that Annie-May had a good eye for sizes, which made things easier. Summer would go into the bathroom and change, and then give Debbie and me a little fashion show. Mr. Happy really enjoyed it, as she chose outfits that revealed a modestly exciting amount of cleavage, a very pleasant amount of thigh, or both. Finally, she came out in a long black evening dress which covered only one shoulder and was slit almost all the way up to her hip on one side.\n\n\"Beautiful!\" exclaimed Debbie. \"You look wonderful!\"\n\nShe turned to me for agreement and all I could do was nod very enthusiastically.\n\n\"Oh, he likes it,\" Debbie smiled. Then she drew a long white shawl from a hanging bag.\n\n\"Ah, that's lovely,\" I said quickly. \"You will be the most beautiful woman at the concert tonight, even if the other members of the audience won't get to appreciate that wonderful hair.\"\n\nAs the couturier wound the red locks into a bun and then settled the mantilla over her head, turning the LBD into a Spanish noblewoman's court dress, Summer's eyes grew bigger as she realised what I was saying, and let out a whisper. \"A real date.\"\n\nDebbie looked confused for a moment, so I pulled out my wallet to distract her.\n\n\"Would you prefer cash or plastic,\" I asked her. Avarice took the place of curiosity as I settled the bill. Debbie offered a ten percent discount on the volume of items we'd chosen, which I returned as a thank you for her after-hours service. I was getting the hang of this tipping thing.\n\nFinally, with thanks echoing from both sides of the transaction, Debbie left -- her rails a lot emptier than they were when she arrived. Summer stared at the cupboard where they hung.\n\n\"Jesus, Bryn. This is a lot of stuff. You can't keep doing this. How much do I owe you now?\"\n\nI laughed and shook my head. \"It's a gift. Now, what do you think? Do we go to the concert or not? It's up to you. If you don't feel safe, then we stay here.\"\n\n\"Don't change the subject. This is a lot of clothes. I'm in your debt.\"\n\nI walked over and took her hand. \"No. You're not. When you leave, you simply pack it in the cases I got you and walk away. No debt, no ties. Nothing owed.\"\n\nShe seemed a little put out.\n\n\"The concert?\" I prompted.\n\n\"Well, I am dressed for it,\" she said. \"It would be a shame to waste the tickets...\"\n\nSummer broke off, considering. She stepped to one side and looked at herself in the mirror, fussing with the mantilla, the shawl's folds of pale, delicate lace patterns drifting down over her shoulders -- reminiscent of a nun's wimple -- and hiding her hair very effectively. Her bun even made it look as if she had a comb in her hair, which is how it is normally worn.\n\n\"... And nobody can see my hair.\" She bit her lip. \"Let's do it!\"\n\nIt was a delightful evening, Summer seeming to relax into her role as my English girlfriend transplanted to America, trying out various things she'd heard me say as we sat in the auditorium waiting for the music to start.\n\n\"So taking the piss is one thing, and taking the mickey is another?\" she whispered, her breath sweet and warm on my ear.\n\n\"No, they both mean the same thing - teasing or mocking someone. Taking the mickey comes from taking the Mickey Bliss -- rhyming slang.\"\n\n\"I'm never going to get used to this.\"\n\n\"There are a lot of expressions about piss,\" I said. \"Getting pissed is different from being pissed off, which is different to pissing it down or pissing around.\"\n\nShe stared at me, and I could tell she was wondering whether I was indeed taking the piss.\n\n\"You guys are weird. Why are there so many sayings about piss? This is not the conversation I ever imagined at an evening of classical music,\" she said finally.\n\n\"So let's talk about you,\" I suggested.\n\n\"Let's not,\" she countered. \"You seem to know music, talk to me about that.\"\n\nI started to tell her about aspects of my musical life, but of course that brought Phoebe into it and I ended up telling her how we had married instead.\n\nAt the time it had made sense. We were in love, and she loved me as much as I loved her -- at least I'd thought so. We'd been hitting the mattresses and making love at every possible opportunity, so when she told me she was pregnant towards the end of my master's degree year, probably due to taking antibiotics for a bout of thrush, it never crossed my mind to question it and she accepted my immediate offer of marriage with a charming display of loving me up at the restaurant where I popped the question and offered a ring. I'd bought it a month earlier, waiting for the right moment.\n\nHer kissing me as frantically as she did might have caused a problem -- as her short dress rose up almost to her waist due to her straddling my lap -- but it was a family-owned Italian restaurant and, true to the romantic soul of that nation, we were serenaded instead of sent packing.\n\nWe were married within a month.\n\nNow in the know about my secret career and income, she chose a house for us to buy. I chose a much smaller one, and we compromised on the one she chose. Then we compromised once again on something between the two, and after the echoes of Phoebe's screaming outburst died away, I put up with a week of frosty silence.\n\nThree months later she told me she'd miscarried.\n\nI cried.\n\n\"That's so sad,\" whispered Summer. Remembering my grief, I could only nod at her, glad that the orchestra chose that moment to start tuning up, following the traditional lead of the oboe.\n\nThe concert was superb, opening with Smetana's The Moldau, and closing with Saint-Seans' Dans Macabre. The percussionists playing the xylophone, vibraphone and marimba on the latter piece brought ducks swimming to mind -- the music smooth and even on the surface, but them working like mad underneath it to propel the music along as they bent, sweating over their instruments. I made a mental note to add those instruments to my music program.",
        "Summer took my arm as we walked back to the hotel.\n\nAs we walked, my White Knight spent time pointlessly wondering what she was going to do, and trying to convince me I could allow myself to go a little further without becoming hopelessly ensnared. The logical part of my brain, however, was shouting that as soon as we reached the hotel, I was going to simply pack her bags, shake her by the hand and wish her well with the rest of her life. I had a meeting in the morning, and was due in Nashville the evening of the next day, with a stop of my choice somewhere in between so I could get a taste of the real small-town America. I hoped it wouldn't be Lincolnville. My immediate future was clearly mapped out, and didn't include her on any part of that map -- not even in the margins. I decided that that was what I was going to do -- be tough! Break off whatever this was cleanly and clearly, give her the bags and some money, and say goodbye. Despite how good she smelt, there would be no more allowing her to pull that trig...\n\n\"Hungry?\" I heard myself ask. What the fuck was wrong with me?\n\n\"I could eat,\" she said.\n\nCursing myself for my weakness, I checked with reception as to restaurants in the area. Annie-May was off-duty, but the night porter gave us a few recommendations, and suggested we try the restaurant next to the hotel. I ended up eating a really good trout, while Summer went all-in over seven rounds with something called a Mahi-Mahi. After my face must have showed my shock and horror, it turned out not to be dolphin, which is what I thought the waiter had said. Even so, I politely turned down an offer to taste anything called dolphinfish. Summer had no problems tasting my trout, however, and once again I had to rap her on the knuckles in order to stop her trying to snaffle the linguine from under my fish after she had ploughed through hers.\n\nFor a large part of the time, I'd watched her eat, fascinated by the unwieldy process of her cutting something with a knife and fork, then putting down the knife, transferring the fork to the other hand to impale a piece of the fish, and then starting the procedure all over again.\n\nWhen she sat back after demolishing two portions of chocolate cake, to sip daintily at the brandy liqueurs I'd ordered, she raised the question I'd been struggling to pose.\n\n\"So, what are we going to do with me now?\"\n\nThe question was simple and there was no shading in her tone to indicate a preference. Our dinner conversation had stayed strictly away from that, concentrating on the concert. I'd tried to entertain her by sticking two forks into bread rolls to make them dance, in imitation of Charlie Chaplin's famous scene. However, where he'd made it a charming interlude, I managed to flick one clear off the table onto the foot of a passing waitress who, to her credit, didn't turn a hair -- simply picking it up and bringing me a fresh one. She and Summer had giggled all the way through my stumbling, embarrassed apology.\n\nNow we were at the nub of it.\n\n\"What do you want to do?\" I asked. She knew what I meant.\n\n\"You're in charge,\" she said quietly. \"You're the one who kidnapped me and brought me here.\"\n\nI looked at my watch. \"It's too late for you to hit the road at this time of night. I could see if they have a room open here...\"\n\n\"No! I can't let you keep spending money on me all the time. Shit, I hate owing people for anything.\"\n\n\"Well, I'm not letting you wander the streets alone at this time of night. Maybe a taxi...\"\n\n\"Again, more money! Stop it! I'll stay with you. You've already booked a room, so it's not going to cost you anything more.\"\n\nI was a bit startled, and I heard the Knight chuckling in the back of my head. I opened my mouth and then shut it again. She leaned towards me.\n\n\"Just to be clear here. There's more chance of me checking myself back into that institute... nuthouse... whatever it was, than climbing into bed with you. You understand? Tell me you understand!\"\n\n\"Rude, but clear. You weren't invited, so the warning was a little over-the-top. But clear.\"\n\n\"Just as long as we're clear.\" Despite her words, she seemed a little taken aback at my rebuttal, and lapsed into silence. I couldn't think of anything to say either, and the meal that had started with conversation and laughter, ended in a moody hush. I called for the bill, tipped twenty five percent just to make sure, and held her seat for her as she rose.\n\nThe trip back to the room was as quiet as the grave on a day the cemetery was closed and the grave-diggers and mourners had all gone on strike in order to watch England play Germany at football.\n\nDespite my saying I needed to pee, she dived into the bathroom as soon as we got to the room, the lock being pushed across very loudly and the shower starting up once again. I was beginning to regret agreeing to this room-sharing, and then reflected that I hadn't actually agreed at all. I had simply been told what was going to happen. With my background, that didn't settle very well on me. Plus I really needed to pee. It had been a long time since conducting my last stand at the toilet and I'd drunk quite a bit of fluid since then.\n\n\"Don't take all night in there,\" I called. There was no reply. Five minutes later, despite channel surfing once again in an attempt to take my mind off it, my bladder urged me to the bathroom door, where the shower was still happily burbling.\n\nI knocked. Then I knocked again. There was no reply. Another knock was successful only in me being further ignored.\n\n\"Oy!\" I yelled. \"Get out of the fucking shower! I need the loo -- and even you don't need three showers in a day! Despite those horrible, noisome memories.\"\n\nI kicked the door in frustration.\n\nFive minutes later the door cracked open slightly.\n\n\"What do you want?\"\n\nI stared at the one eye I could see.\n\n\"What do I want? Oh, let me see now, hmm. Access to a loo would be pleasant, a shower I could use would be nice, or just being allowed into my own bathroom! How about that? Unreasonable?\"\n\n\"I'll be finished in ten minutes.\"\n\n\"No, you won't,\" I said. \"You'll be finished in one minute or you'll be on your arse on the pavement in two. You may be rich bitch in your world, but in mine you're just an impolite, often obnoxious goblin. Get your butt covered up and out of that bathroom. Now!\"\n\nThe door slammed shut. I started a very loud countdown.\n\n\"Fifty-nine ... fifty-eight ... fifty-seven ... \"\n\nIt went all the way down to three before the door opened and she exited in a mist of steam and exotic scents. She had a towel around her chest, another around her waist and a third on her head as the inevitable turban. She clutched a hand-towel, dabbing at her face and shoulders.\n\nI looked inside. There were two more towels on the floor, sopping wet. And that was the sum total of towels. I was pissed off.\n\n\"You used all the towels, and just left them on the floor.\"\n\n\"And...?\"\n\n\"What am I supposed to use?\"\n\n\"Ring down for some more.\"\n\nI stared at her. She sat on the far bed and began to look uncomfortable as the silence drew out.\n\n\"What?\"\n\n\"I just realised. You're not a goblin. That would be unkind to goblins. You've promoted yourself to a hobgoblin -- the worst kind. Solid hobgoblin -- all the way through. Let me guess, you're an only child and have lots of servants. So ... some kind of rich-bitch?\"\n\n\"What's your problem?\"\n\n\"You're my problem, hobgoblin!\" I spat. \"You've been through a tough time, I get it. I don't know the details, but it's been tough on you. And I guess you had some sort of shitty upbringing where you weren't taught to share anything. But I wasn't brought up like that. If I wandered into someone else's house and simply emptied their fridge, or rearranged their furniture for my comfort, or used all their stuff without leaving anything for them, I would have felt my dad's belt across my arse. It's rude! Were you never taught that?\"\n\n\"It's just towels,\" she protested. \"Call down and ask for more.\"\n\n\"That's not the point,\" I said. \"There are two of us here, and one of us is just thinking about herself, which pisses the other one off. It's called being selfish. So, you ring down and organise more towels while I go and spend an hour in the shower. Then do whatever you want to do.\"\n\nI pointedly picked up my wallet, passport and car keys, showed them to her and took them with me into the bathroom, locking the door and then peeing with enormous relief, and climbing into the shower with a sigh of satisfaction.\n\nIt had been a fucking long day!\n\nIn fact, it had been a long year. I soaped myself up, and couldn't help remembering Summer doing the same thing alongside my car. Mr. Happy certainly enjoyed the memory. We shook hands.\n\nSummer faded and was replaced by an image of Phoebe stretched along the back of the sofa, her naked body and glistening vulva open and ready for me to enter her. In my imagination, I paused to gently claw my fingers down her back, making her shiver, her muscled butt quivering with impatient pleasure, but she'd told me in no uncertain terms that she was too wet to wait any more for that long, slow, steady push into her; the swollen outer lips bracketing the inner lips, which were pink and smooth and so wet -- more than ready to guide me straight to her entrance and then accompany me inside. Whenever I drew back, they reappeared to do that duty all over again.\n\nPhoebe faded and Summer returned to push her naked hips high and pull her panties on once again. That memory was locked very firmly in my memory.\n\nOnce those panties were in place, her image was replaced by a memory of Alice, a leggy brunette who had drawn me into her life with her tragic, liquid eyes, and into her bed with her remarkably firm tits. A messy blow-job, which was cut short, was replaced by her kneeling between my legs with her tits pressed firmly against and around my cock, her saliva providing more than sufficient lubrication as it slipped and slithered up and down between them. I had cum against her chin, throat and chest, and she had growled very convincingly in pleasure at her success. Of course, that pleasure would only last until she remembered her ex-boyfriend, and she would be drawn back into the cycle of moping and weeping for him. I'd heard that she switched to moping and weeping about me after I left her.\n\nSad Alice's eyes were replaced by Summer's tits as she drew that crop top down over them, covering all and concealing nothing. I loved that blouse. In turn, those perky little apples were replaced with Dinah's big, beautiful, bouncing babies -- a pair of breasts that should quite rightly be sculpted to be shown in the Louvre. Hers were bigger than Alice's by far, and yet the dark-haired girl had been so much better at using them. Dinah's trick was to use them to attract a guy, find a place that was at least semi-private and then fuck him righteously well. My problem was her doing that trick when we were supposed to be an exclusive couple. Seeing her bent over the stove in the kitchen at a house party we went to while at university was a pleasant sight -- especially as her naked tits flopped back and forth with wild abandon. Most unpleasant was the sight of some guy I'd never seen before ploughing into her from behind, groping those humungous hemispheres whenever he could find the time.\n\nMr. Happy didn't like that memory, and softened to my touch. We don't like sharing our toys. We don't play well with others, apparently.\n\nRosalynn was proof of that -- tall, slim and dainty with an air of fragility about her -- and yet a tiger between the sheets. During her time on coke, she had introduced me to the joys of anal sex, which I hadn't really given much consideration to before. Ros' slim body, tanned with no tan lines, stretched out on crisp, clean white sheets, looked like a model from a photographer's studio, or a fine artist's easel. She would look over her shoulder at me, give me a little wink, tell me she was all ready, and then raise her hips. The butt would seem to widen as her vulva came into view, both that and the little pucker so nearby glistening with lubrication. She would wait until I'd squeezed the head of my cock inside her, pause for a long moment, and then slam her hips back, forcing every millimetre of me into her. From then on it was a non-stop rush as she squeezed and massaged me throughout each thrust until both of us would come, shouting and laughing at the pleasure.\n\nRos would do that for her dealer as well, to pay for the heroin she injected into herself when she found she needed the rush no matter what.\n\nIn comparison, Phoebe's mistakes seemed almost mild, until you considered I wasn't married to the others.\n\nMr. Happy was now Mr. Mournful, so I switched back to memories of Summer. It hadn't been 24 hours, so they were still fresh and bright in my memory.\n\nThose perky nipples that I imagined nibbling upon, the round breasts against my palms, my cheek against her belly, my hands squeezing her butt, my tongue on her cunt and clitoris, a finger cautiously exploring that sweet little puckered exit, my cock in her hands, her mouth, her belly.\n\nAn image of her eyes fixed firmly on mine suddenly came to the fore and stayed there, along with the memorised taste of her lips. I was helpless against those, and within moments, my cum baptised the walls of the shower while I panted with heaving lungs at the incredibly powerful orgasm those memories had caused.\n\nI leaned back against the shower wall, my chest heaving.\n\nFuck me, I was as daft as a brush!\n\n<p align=\"center\">\u00ac\u00ac\u00ac*****\u00ac\u00ac\u00ac</p>\n\nAlphabet woman\n\n(Looking for an Alpha male)\n\nAlpha ray purse\n\n(No beta man just an Alpha on sale)\n\nAlpha Centauri girl\n\n(Gonna fly you to the stars, all the way)\n\nAlpha wave slave\n\n(He'll keep you in chains, all the lonely, long day) \n\nAlpha Beta Games (B. Lake)\n\n<p align=\"center\">\u00ac\u00ac\u00ac*****\u00ac\u00ac\u00ac</p>\n\nZERO HOUR +20\n\nI came to, the soft buzzing of my phone alerting me that it was time to get up and prepare for my meeting with the record label execs whose offices were nearby. It was just a meet-and-greet, but Lappies reckoned it might open a few doors, and have them consider buying the rights to some of my songs, for bands on their label. What the hell, it couldn't hurt.\n\nI twisted to reach my phone and turn off the alarm, when I realised my other arm was pinned down.\n\nI turned back and was confronted with a mass of red hair that spilled across the adjacent pillow and half my chest. It smelt wonderful.\n\nAs quietly and gently as possible I pulled my arm -- which at that moment felt more like a lump of clay that had spun off the potter's wheel, rather than an appendage that was still attached to me -- from beneath her neck. Summer mumbled and muttered and curled up tighter.\n\nAs I sat on the bed, I could only stare at her and shake my head. She looked like a normal twelve-year-old, dreaming of things both childlike from her past and a mysterious adult future, not the grown woman who had given me the silent treatment the previous night. When I'd cracked open the bathroom door after sluicing away the sweat, worries, troubles and semen of the day, I'd found a small pile of soft white towels waiting for me. The rest of the room was in darkness. I'd dried off, hung up the towels, searched around by the light of my phone until I found a pair of shorts, then crawled into bed.\n\n\"You could at least say thank you,\" her voice had drifted over from the other bed. \"For arranging fresh towels for you.\"\n\n\"Go to sleep, Summer,\" I kept my tone conversational.\n\n\"A thank you isn't a lot to ask for, you know!\"\n\n\"Go to sleep, Summer.\"\n\n\"Common decency, that's all. I'm just saying.\"\n\n\"Go to sleep, Summer.\"\n\n\"It's not much to expect...\"\n\n\"Shut the fuck up, Summer.\" My voice was still carefully neutral.\n\nThere had been a noise suspiciously reminiscent of a raspberry, and then a soft giggle.\n\nSometime during the night she'd moved over to my bed in order to use my arm as a neck rest. The way it felt, at the same time she may very well have pounded it into a shape that was more comfortable for her.\n\nWhen I got out of bed and looked down at her as she slept, she looked all pink and lovely, and for a moment I had the urge to touch her arm. I shook it off with difficulty and headed for the bathroom. I had to think about the events of the night. Sense and nonsense were once again warring in my head.\n\nDespite the dead arm, and the agonising tingling when it came back to life, I brushed my teeth, washed my face, and then dressed quietly. I wrote a quick note explaining I'd be back in a couple of hours, but to order room service if she got hungry. Heh. If she got hungry?\n\nI headed down to the reception, wished the ever-smiling Annie-May a good morning -- who arranged a taxi for me in return, and left for my meeting.\n\nAfter all that travelling, in the end it was a bit of a let-down, to be quite honest. I had no clear expectations of what I thought it would be like, but I'd hoped for a little more than a well-carpeted suite of offices, with cubicles of worker bees droning quietly in the background on phones or computers.\n\nThe label execs were nice enough and, although they offered tea, we shared a pot of coffee as we went through the little introduction dance of polite chit-chat, and got down to business. I presented them with a show-reel on DVD that Lappies had knocked together for me, and the four of us watched it, as various well-known music stars serenaded, crooned or belted out my songs on various videos they'd produced. The suits were a little more enthusiastic at that point, and I could almost see the little dollar signs circling their heads, like old-time cartoons.\n\nThey in turn presented me with one of their DVDs, and we watched many of their stable of singers and bands do pretty much the same thing that mine had. It gave me a good idea of their individual styles and ranges, which meant that I could tailor songs specifically for them, and that was one of the main points in me being there in the first place. All good then.\n\nFinally, we were through, and with promises of keeping each other in mind echoing between us, I made my way back to the hotel, my mind more occupied with Summer and her presence in my bed that morning, than on the pleasant hour or so of business.\n\nWhat had she indicated by crawling into bed with me?\n\nIt wasn't for sex; that was for sure. She was dressed in a tee-shirt -- one of mine, now I came to think of it -- and a pair of loose-fitting jogging pants. I couldn't remember buying those at the mall, but I suppose I must have. There was no way that Debbie would have presented that rather ratty looking item amongst her array of dazzling creations.\n\nWas it for comfort? Warmth? Security? All of those, or some other mysterious reason? Perhaps it was indeed to torment me, and live up to my nickname for her.\n\nI shook my head. How the hell could I know what was going on in the brain of a woman I'd met less than twenty-four hours earlier? Or any woman if it came to that? I wasn't stupid, but when it came to women, I was thicker than two short planks. My Knight simply threw me into the fray willy-nilly. It certainly didn't provide any great insights, or anything else I could usefully wield in my fight to save the princess in the tower.\n\nI flashed back to Phoebe at school. She hadn't been damaged. So why...\n\nIt suddenly came to me. Other kids sat with her at school, but they always approached her in a group, not on their own.\n\nMy mouth actually dropped open.\n\nThey were afraid of her -- too afraid to be alone with her to face that incredible temper if they did or said the wrong thing. That's why she was always either alone or in a group -- and why she had no real close friends."
    ],
    "authorname": "SleeperyJim",
    "tags": [
        "action",
        "adventure",
        "cheating wife",
        "highway song story",
        "hospitals",
        "kidnapping",
        "no real goblins",
        "psychology",
        "redhead",
        "romance"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/chasing-the-last-road-to-stockholm"
}