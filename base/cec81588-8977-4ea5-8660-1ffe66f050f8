{
    "title": "Holly and Sarah",
    "pages": [
        "It happened in October. I'd been dating Holly for just over a month by that point. We had met on a night out and hit it off immediately. Things were going pretty well - I didn't necessarily think our relationship would last in the long-term, but she was fun to be around and we always had a good time together.\n\nHolly was hot - so hot in fact that a few of my friends had made jokes that they didn't know what she was doing with a guy like me. I kept myself in good shape, but there was no doubt that I'd lucked out with her. She had impeccable bone structure in her face, gorgeous brown hair that fell to her shoulders, and piercing blue eyes that made me putty in her hands every time she looked at me. She had a great body too, with a shapely bum and nice, perky breasts.\n\nNot to mention the sex - it was unquestionably the best I'd ever had. Holly and I had first slept together after our second date, and we now seemed incapable of being together for long before we ended up fucking. I'm not ashamed to say that Holly called the shots in the bedroom, but she knew exactly what she was doing, and I already loved nothing more than our steamy sex sessions.\n\nSex was definitely on my mind that Friday night. Holly had dragged me round to her friend Sophie's house, ostensibly to introduce me to her closest friends, although it felt much more like she was showing off that she was in a relationship. For all I liked her a lot, Holly was clearly Queen Bee of the group and wanted her friends to know it. I wasn't that interested in getting to know them and longed for the drinking and chatting to stop so Holly and I could head upstairs to bed.\n\nHer friends were pleasant enough. Sophie didn't seem that interested in me, but laughed and joked her way through the evening and made sure things weren't awkward. Lauren was quieter but made more of an effort to chat. By midnight, both of them were pretty drunk and I hoped I wouldn't have to wait too long for some alone time with Holly.\n\nAnd then there was Sarah. Unbeknownst to Holly, Sarah and I had already got to know each other very intimately, but I wanted to keep the details of our encounter a secret from my now girlfriend, and I knew Sarah felt the same way.\n\nWe had both been at a party, about a year earlier, for our mutual friend Chelsey's birthday (Chelsey and I had also hooked up before, but that's another story). Sarah and I hadn't met before this, but it didn't take long before we noticed each other and struck up conversation.\n\nSarah came across as very shy when we first met, but she had nothing to be shy about. She looked really hot - her tight black dress barely covered her fit arse and showed off her gorgeous figure and long, smooth legs perfectly. Her brown hair cascaded in gentle curls down to her chest, and she had a very cute smile. I had instantly wanted her, and it became clear that she felt the same way.\n\nThe party was in a hall that had been hired out for the evening - it was packed with people and starting to get very hot and sweaty, especially as people drank more. I took Sarah by the hand and led her to a small storeroom in the corner. As soon as the door closed behind us, we wasted no time in making out lustfully.\n\nAs our tongues mashed together, I reached round and lifted Sarah's very short dress up before kneading her arse. Before long, she stepped back from our making out and began unbuckling my jeans. Within no time at all they were around my ankles and Sarah was on her knees licking my very erect cock.\n\nShe sucked me like a pro for a couple of minutes, but I knew we didn't have long - noise was coming from the other side of the door and I didn't want to miss the opportunity to fuck Sarah. I pulled her up onto her feet and motioned to a stack of chairs. Sarah read my mind and rested her front on the chairs, sticking her bum out ready for me to take her.\n\nI took my cock, which was now soaking wet, and began to guide it into Sarah's pussy, but she stopped me, grabbing it and turning her head round to whisper to me, \"Fuck my arse.\"\n\nI should have been surprised by this, but lust had taken over and I needed no encouragement. Eagerly placing my cock at the entrance to Sarah's back passage, I gently eased myself into her arse. She tensed up as I did so, but relaxed as I worked it into her. Before long, my whole length was buried in her behind.\n\nI could have cum there and then, and it took everything I had to stop myself. After pausing for a moment, I began pulling my cock out of Sarah's arse before shoving back in again. She moaned loudly and was clearly in some discomfort, but we were soon going at a pace that relaxed her and she murmured in pleasure. I reached round to strum her clit whilst we fucked - she was soaking wet and getting wetter still.\n\nAnd in an instant, it was all over. The incredible tightness of Sarah's bum got too much for me and I began shooting streams of cum deep inside her. Seconds later, Sarah came hard too. We waited for a moment before I pulled out of her and we readjusted our clothes. We had been in the storeroom for no more than fifteen minutes, but every one of them had been amazing.\n\nI didn't see Sarah again after that until I started dating Holly. In truth, I had been a little disappointed that we hadn't swapped numbers and tried to hook up again, but I had put the whole experience down to a drunken dalliance.\n\nYet now, here Sarah was, sitting on the sofa next to Holly, my new girlfriend and her best friend. I must say that more than a few impure thoughts about our encounter crossed my mind as I looked at her that evening, but given how well things were going with Holly, it never seriously occurred to me that we might rekindle our lust for each other.\n\nIn any case, Sarah had made me promise we'd keep the events of a year ago secret from Holly. We set eyes on each other again after Holly and I had been together for a couple of weeks - I was leaving Holly's house as Sarah was arriving.\n\nWe were surprised to see each other. Sarah seemed especially nervous and, checking that Holly wasn't in earshot, she whispered to me, \"Please don't tell her about us. She knows I hooked up with a guy at that party but she has no idea that it was you. She won't take it well.\"\n\nWhilst I thought her reaction was a little over the top - I hadn't even met Holly when Sarah I had got together - I had no desire to ruin what I had with Holly so promised Sarah I wouldn't say anything. To be fair to Sarah, Holly absolutely was the jealous type and I didn't imagine she would be relaxed at hearing that her boyfriend had once anally fucked her best friend. Given how dominant Holly was in their friendship group, I could understand Sarah's concern. She looked relieved and we didn't mention it again.\n\nThat hadn't stopped us shooting each other a few nervous glances as we sat and drank on that evening at Sophie's house - no doubt there was still some bubbling sexual tension between us, but my mind was on the fantastic sex I knew I'd be having with Holly once we got to go upstairs.\n\nTo my relief, Sophie announced at about 1am that she was too drunk and tired to stay up, and we all took this as our cue to get up and go to bed. Lauren, Sophie and Sarah trundled wearily up to bed, leaving me and Holly alone in the living room.\n\nI turned to her on the sofa and she pulled me in for a deep, sensual kiss, grabbing the back of my head to pull me in closer.\n\n\"Tired?\" I asked sarcastically as we finished kissing.\n\n\"Not for what I have in mind,\" she replied, grinning broadly.\n\nAnd with that, I took her hand and we made our way up to our bedroom. Sophie lived in a big house, and I was delighted that mine and Holly's room was situated away from most of the other rooms upstairs - with that and the drunken state of her friends, I knew we wouldn't have to be quiet.\n\nNo sooner had we entered the dimly lit room and we were taking each other's clothes off - within seconds they were in a pile on the floor. We stood there completely naked. I looked at Holly and drank in the sight of her fit body, my cock already hard as steel.\n\nHolly smiled at me and took my hand, pulling me towards the bed before pushing me down onto it - as usual, she was taking control. She stood at the foot of the bed and leaned over to take my cock in her hand.\n\n\"I know you've been wanting this all evening,\" she purred. \"I think you deserve a reward for being so patient.\"\n\nAnd with that, she began wanking me hard, starring at me all the while with a lustful glint in her eye. I looked back at her and thought again how much it turned me on to be with such a sexually confident woman.\n\nShe continued with her expert handjob for a couple more minutes, not once breaking her gaze into my eyes. Even in my drunken state, I knew I couldn't keep this going for long and wanted to make sure we fucked before I was spent. I sat up, kissed Holly and pulled both of us further back on the bed before motioning for her to mount me.\n\n\"Eager boy,\" Holly whispered as she straddled me and lined my cock up with her pussy, groaning as my shaft entered her.\n\nI sat up slightly with my head on the pillow to watch the show that was about to commence right in front of me. I loved it when Holly rode me - I could last longer in this position, even though she was such a pro at going cowgirl.\n\nI wasn't disappointed. Holly placed her hands on my chest and began pushing herself up along my shaft before dropping back down. Within seconds, she was already going at quite a pace, her boobs bouncing up and down as she moaned loudly. My cock was quickly getting slick with the wetness of her pussy.\n\nI placed my hands on Holly's thighs and stroked her as she rode me hard. Our eyes met again and we exchanged smiles before she pushed me back onto my pillow and we fucked harder still.\n\nThis continued for a couple more minutes, until I caught sight of something out of the corner of my eye. With Holly starring upwards, clearly close to an orgasm, I turned my head to the corner of the room near the door where I noticed movement. We hadn't turned the lights on, so the only light came from the street lamps outside, but I could see enough to notice that we weren't alone anymore - someone was standing near the door, resting against the wall.\n\nMy mind swirling with alcohol and sex, I didn't react to this at first and instead tried to look more closely, all the while thrusting my cock up to meet Holly's pussy. Thankfully, she didn't notice at first how distracted I now was.\n\nAnd sure enough, as I looked closer, I saw to my surprise that it was Sarah. And more than that: I could tell that Sarah had stripped down to her bra and knickers, and it looked like she was touching herself as she watched us.\n\nMy girlfriend's best friend - a very hot girl I'd once hooked up with myself - was masturbating whilst watching us fuck. It took everything I could muster not to cum there and then. I didn't know if Sarah could tell that I'd seen her, but I kept watching her, all the while fucking Holly.\n\nHolly, who still had no idea what was going on at the other side of the room, rode me until her orgasm hit. She came hard before bending down to kiss me.\n\n\"You ok, baby?\" she asked, \"Ready for another go?\"\n\n\"Sure,\" I said, not entirely convincingly, as I glanced towards Sarah.\n\nThis time her eyes met mine and she knew I'd seen her, but she didn't let up and kept frigging herself.\n\nHolly sat back upright and resumed our fucking in earnest, heading towards a second orgasm in succession. I didn't know where to look, but my eyes kept darting towards Sarah.\n\nHolly noticed.\n\n\"Eyes on the prize,\" she said with a smile, turning my head back towards her.\n\nI did my best, and focused on her for another minute or so, but I couldn't get the thought of Sarah out of my head and had to look again.\n\nHolly stopped.\n\n\"What is up with you tonight?\" she asked crossly.\n\nAnd with that she got off me, looking unimpressed and leaving me just seconds away from cumming. At first, she didn't notice our visitor but then Sarah moved, presumably to try and leave, and Holly saw her.\n\n\"Sarah!\" she cried out, \"What are you doing?\"\n\nSarah froze by the door, standing there in just her underwear. Holly turned a lamp on and, for a moment, the three of us were still and just looked at each other, assessing the situation.\n\n\"I'm sorry,\" Sarah said softly, still clearly pretty tipsy, \"I thought I left my bag in here so I came to try and get it.\"\n\nI didn't believe her, and Holly didn't look like she did either.\n\n\"Were you watching us?\" she asked Sarah, now sounding a little calmer.\n\n\"Ummm...\" Sarah didn't know what to say.\n\n\"You were, you naughty girl!\" Holly interjected, looking more like she was enjoying the situation. \"And did you like what you saw?\"\n\nNow she was teasing Sarah. I felt like I ought to say something, but I couldn't do it. I was transfixed at the sight of my naked girlfriend and her nearly naked friend talking like this.\n\n\"I...I...\" Sarah mumbled, \"I did.\"\n\nHolly smiled. I had no idea where she was going with this, but she was clearly in control of whatever happened next. Silence fell as she planned her next move.\n\nEventually, standing up off the bed, she beckoned Sarah over to a chair next to the bed. Her friend, saying nothing, obliged and sat down.\n\n\"Now, Sarah, my poor man here was about to cum, but you interrupted us, and we can't leave him like that, can we?\" Holly asked rhetorically.\n\nAnd with that, she moved back towards me and took my cock in her hand. I was hard as a rock and couldn't believe what was about to happen. Sarah sat open-mouthed only a metre or so away from us and watched intently as Holly bent her head down and began nibbling and kissing around my crotch. She clearly knew how close I was to cumming and wanted to put on a performance for Sarah before I did.\n\nI was in heaven when, after what felt like an hour of teasing, Holly began licking the whole length of my shaft before slipping it into her mouth and sucking me gently. I was careful to keep my eyes fixed on her, but I longed to look back at Sarah, who I could see from the corner of my eye was rubbing herself through her lacy black knickers.\n\nReading my mind, Holly took my cock out of her mouth for a moment.\n\n\"It's ok, babe, you can look,\" she said, before resuming the blowjob.\n\nI didn't need a second invitation and turned to watch Sarah. She had the look of a woman possessed as she starred back at me, captivated by the sight of me of Holly on the bed. As Holly sucked me harder, Sarah removed her bra, freeing a pair of shapely breasts, and slipped her panties down her long, smooth legs. Looking straight at me and Holly, she penetrated herself with one hand and resumed rubbing her clit with the other.\n\nThe sight of this gorgeous woman fingering her beautiful, clean shaven pussy, combined with the sensation of my amazing girlfriend sucking me off finally sent me over the edge, and I began shooting ropes of cum into Holly's waiting mouth.\n\nShe moaned as I fired my load into her, before removing her mouth from my cock and very obviously swallowing it all. I hoped beyond all hope that this wouldn't be the end of proceedings, but I had no idea what was going to happen next.\n\nHolly and I both turned to Sarah, who had stopped masturbating but looked absolutely desperate to cum herself.\n\n\"Enjoy the show?\" Holly asked with a smirk.\n\nSarah nodded silently, shifting awkwardly in the chair.\n\n\"Good,\" Holly replied. \"And don't worry: there's plenty more where that came from.\"\n\nI was delighted to hear it, though I knew it'd be several minutes at least before I could perform again. I needn't have worried - Holly had a plan.\n\n\"My turn,\" she announced, sitting up on the bed in anticipation of some oral action of her own.\n\nI got up, ready to switch positions with Holly, but, as I was about to start licking her out, Sarah blurted out, \"Let me do it.\"\n\nAt first, I thought I must have heard her wrong, and no doubt Holly did too, but when she said it again, we both sat up on the bed and turned to look at Sarah, who had stood up from the chair.\n\n\"Please, I want to,\" she said softly.\n\nI thought I was dreaming, and I hoped and prayed that Holly would acquiesce and make this the greatest night of my life. I turned back to her. She looked shocked and just stared back at Sarah's naked form, standing just inches away from her. I watched her processing Sarah's request and I wanted to jump for joy when a gentle smile appeared across her face.\n\n\"Ok,\" she said softly.\n\nSarah smiled back. I shuffled out of the way, not wanting to do anything to impede what I knew would be an incredible sight. Holly moved back and propped her head up on a pillow. I sat down in the chair. And Sarah got onto the bed and nervously moved towards Holly. We were ready.\n\nI could feel my heart throbbing with anticipation as I sat back in the chair to watch the performance that was about to begin on the bed in front of me. And I longed to be able to join in, just as soon as the effect of my previous orgasm had subsided.\n\nSarah softly took Holly's thighs in her hands and began sensually rubbing her tongue down the inside of her legs, moving closer and closer to her pussy, without touching it. Holly purred in anticipation, but I knew she wouldn't want to be teased for long. \n\nAnd sure enough, after a couple of minutes of Sarah's toying with her, Holly reached out to touch the top of Sarah's head and guide it towards her pussy. Sarah obliged, moving further forward and licking Holly's slit from bottom to top. Holly gasped loudly and pulled Sarah closer. Already I could feel my cock beginning to stir, so incredible was the sight.\n\nSarah lovingly lapped at Holly's pussy for what felt like hours. I watched, almost hypnotised by what was going on just inches away from me, stopping only to pinch myself that what I was watching was real. Despite my mind being addled with alcohol and lust, I was alert enough to enjoy fully the sight of my girlfriend and her best friend entwined in the throes of sex.\n\nHolly hadn't cum yet, but I could tell she was close. She turned her head to look at me and smiled, but she was soon overcome by Sarah and threw her head back on the pillow, writhing as her friend ran her tongue all over her pussy and clit. Holly's moans grew louder, though I was confident that Lauren and Sophie would be sound asleep by now, and my cock started to get erect again.\n\nI was wanking myself furiously by the time Holly's first orgasm hit. She looked over to me again as her body rose up of the bed and she cried out in pleasure before falling back down. But Sarah wasn't done and did not let up at all, her head still buried between Holly's legs. She knew exactly what she was doing and was clearly giving a masterclass in eating pussy - one that I hoped I would be able to replicate.\n\nWith Sarah still busy licking her pussy, Holly beckoned me over to the bed. I got on it and positioned myself next to her. I leaned in and kissed her deeply, but the attention she was getting from Sarah was again too much and pulled away from me and came again.\n\nSarah again showed no sign of stopping and continued feasting on her friend. I couldn't quite believe that Sarah, with whom I'd shared a very intimate encounter a year earlier, was so enthusiastically loving another woman. Her own lithe figure was well and truly on display, and I thought about fucking her from behind whilst she ate my girlfriend, but I didn't want to push it too far with Holly at this stage, and instead admired Sarah up close.\n\nHolly was cursing loudly as orgasm after orgasm hit her. I joined in, kneading and licking Holly's boobs, which intensified her reaction. Finally, after more climaxes than I could count, Sarah stopped and brought her head up from Holly's pussy, her face wet with its juices and still with the look of a woman possessed by sex. Holly sat up on the bed, still panting heavily, and we all paused for a moment.",
        "We sat together on the bed, catching our breath, for a minute or so. Sarah and I eyed each other coyly, clearly both waiting for Holly to take control again. I longed to fuck them both, but I knew how jealous Holly was and even now didn't think I'd be allowed to be so intimate with another woman in her presence.\n\nAnd sure enough, Holly broke the silence, stroking my thigh but looking at Sarah.\n\n\"Ok. He looks nearly ready to fuck again,\" she said softly, a naughty smile creeping across her face again, \"but I think we need to make sure.\"\n\nAt Holly's instruction, I lay back on the bed. She moved towards my cock and beckoned Sarah to join her. I was already fully hard, but I wasn't about to resist what was coming. I could feel the breath of two beautiful women on my cock, and they were about to suck it.\n\nHolly went first. She took my shaft in her hand and gripped it firmly at the base, then, looking up at me with her piercing blue eyes, she began lovingly licking it all over. I moaned with joy - this really was the best night of my life.\n\nSarah watched Holly sucking me, clearly desperate to join in but waiting until she had permission to do so. My cock was well and truly wet by the time that Holly finally turned to her friend, still gripping my cock, and pointed it towards her.\n\nSarah wasted no time in sticking most of my length into her mouth and was soon bobbing up and down on my dick. I moaned again. I cast my mind back to the time that Sarah had sucked me before - she was incredible and better - dare I say it - even than Holly.\n\nThe two of them took turns for a couple more minutes, but my night was well and truly made when they started working on my cock together.\n\nAt first, one of them would suck me whilst the other licked my balls, but the real highlight came when Holly was again licking my shaft and Sarah joined her. I thought I'd died and gone to heaven when I watched these two amazing women each licking my cock from base to tip. When they both reached the top and started making out, I thought that my life was complete.\n\nDespite all this, I knew that another orgasm might signal the end of the evening, and I wanted to save it. I would have happily cum from this double blowjob, but I longed to fuck them both, especially Sarah. So, having allowed them to kiss each other around the head of my cock a couple more times, I took the opportunity to shuffle up the bed, and looked expectantly at Holly.\n\nShe read my mind and flashed a sexy smile in my direction.\n\n\"I think somebody is ready to fuck,\" she announced.\n\nI nodded eagerly as Holly moved towards me on the bed and got ready to mount me again. For all I was really hoping to fuck Sarah, I could hardly refuse another opportunity to have Holly ride me.\n\nShe started slowly, rising gently up off my cock before gradually sinking back down. I was pinned to the bed, consumed by lust and delighted I was having my needs so thoroughly quenched. Sarah sat and watched us, wasting no time in fingering herself again but looking desperate to be more involved.\n\nHolly clearly read her mind and stopped riding me for a moment.\n\n\"I think poor Sarah's feeling a bit left out,\" she whispered. \"Shall we let her join in?\"\n\nIt wasn't a question that needed answering. I took Sarah's hand and pulled her closer to me. She looked completely overcome by the situation but kissed me softly. I felt Holly flinch as Sarah and I made out - clearly she wasn't entirely relaxed at Sarah and me getting intimate.\n\nI gently pulled back from my kiss with Sarah - she was smiling at me and looked more relaxed. Then, suddenly feeling bold enough to test Holly's patience, I lay my head back on a pillow and coaxed Sarah to come and sit on my face.\n\nHolly tensed up again as Sarah climbed over me and rested her neatly shaven box on my mouth, kneeling over me. Her smooth legs were positioned either side of my head, trapping me in a world of sex, with Holly still sitting on my cock. I ran my hands up Sarah's thighs, eliciting a shiver of anticipation from her, before tilting my mouth up to begin feasting on her.\n\n\"Oh fuck yesssss,\" Sarah purred as I ran my tongue all along her wet slit.\n\nShe had waited a long time to get any sexual attention from me or Holly, and she was clearly going to enjoy it. I decided not to tease her too much and went straight to it, licking her sweet pussy all over and massaging her clit with my tongue. Even with my hearing and vision obscured, I could feel her reaction convulsing through her body.\n\nHolly, who had remained still during all this, finally started moving again and, even though I couldn't see her, I knew she was putting all her energy into riding me hard. She moved faster up and down my cock, working away on me as I ate out her friend.\n\nIn truth, it was difficult to focus on licking Sarah whilst fucking Holly - I tried awkwardly to move both my tongue and my cock in unison, but it proved impossible to keep up a steady pace and I resorted to letting Holly use my cock to get herself off whilst I focused on pleasuring Sarah with my mouth.\n\nThe room was soon filled with groans of ecstasy from all three of us as we settled into a rhythm, our bodies intertwined in passion. I worked my way around every inch of Sarah's pussy, methodically caressing her with my tongue whilst Holly went at it on my cock. She was now fucking me at such a pace that I think I'd have cum already if it hadn't been for the distraction of Sarah sitting on my face.\n\nI don't know how long we fucked for, but every second of it felt amazing. We became a complete triangle when I felt Holly's fucking slow down and she and Sarah leaned in to make out whilst we fucked. At this, my cock swelled harder still and I licked Sarah more vigorously.\n\nBoth girls came in unison. I felt Holly stop moving up and down on me, as she arched back and cried out as she orgasmed. Sarah clamped my head in place with her legs as I licked her to the point of no return, and released me as she too squealed with ecstasy. My face was wet with Sarah's juices, just as my cock was with Holly's.\n\nTogether they got up off me and we again sat on the bed, catching our breath. I had spent the hours leading up to this desperate for sex with Holly, but the night had panned out beyond my wildest dreams or fantasies. I longed to be able to finish by fucking Sarah.\n\nHolly moved over to kiss me. Her tongue snaked into my mouth and we made out sloppily, our naked bodies tangled together. She switched to do the same to Sarah. And then Sarah in turn came to kiss me. There were no boundaries any more - this was just about sex.\n\nWhen Holly came back to kiss me again, I decided to seize the moment.\n\n\"I want to fuck her,\" I whispered in her ear.\n\nHolly looked at me. She had a mischievous glint in her eyes, but I could tell that she was trying to process her boyfriend's request to have sex with another woman - and not just another woman, but her closest friend.\n\nI don't think my cock will ever swell harder than it did when she gave her answer.\n\n\"He wants to fuck you,\" Holly said, turning to Sarah.\n\nAgain, Sarah looked almost embarrassed but nodded gently. Taking this as my cue, I moved behind her on the bed, so as to take her from behind. Sarah knew what I was doing and moved into position, arching her back to push her bum up to meet my cock.\n\nHolly clearly didn't want to miss out on the action, and shifted so she was lying underneath Sarah, her legs positioned either side of her friend's. She again pulled Sarah in for a kiss and their bodies mashed together on the bed once more.\n\nI took Sarah by her smooth, fit buttocks and pulled her back towards me. Then, lining my cock up with the entrance of her wet pussy, I slid it all the way into her in one shift motion.\n\n\"Urrrrrgggghhh!\" Sarah cried, breaking her kiss with Holly.\n\nShe was tight - more so than Holly - but very wet. The feel of her pussy around my cock was incredible and I wasted no time in fucking her hard and deep. Able to see and feel Sarah's naked form up close - in a way that I hadn't during our quickie a year earlier - I noticed what an incredible body she had, and I was sure to move my hands all over her gorgeous legs and arse in particular.\n\nHolly remained under Sarah as we fucked, caressing her friend's body as my cock ploughed into her. Not wanting my girlfriend to miss out, I was about to reach down and feel her pussy, but she clearly wanted more and made her way up the bed until her pussy was in line with Sarah's head.\n\nSarah didn't need to be told what to do. With my cock plunging into her pussy, she arched her neck downwards and, for the second time that night, began eating her best friend's pussy. Once again, the room was filled with groans from all three of us.\n\nWe continued like this for several minutes, and I could feel that my orgasm was not far away. Sarah was struggling to focus on eating out Holly whilst she was getting fucked herself, but she still managed to sloppily lick all around the wet lips positioned in front of her face. For her part, Holly decided to add a couple of fingers to the equation, and soon she was furiously rubbing her own clit as Sarah ran her tongue around it.\n\nI gazed down at the incredible sight before me and again couldn't believe my luck. Holly's eyes met mine as she came for what felt like the hundredth time that night.\n\n\"Yesssss, Sarah!\" she hissed, clamping Sarah's head between her thighs.\n\nI didn't let up and kept fucking Sarah hard as Holly moaned her way through her orgasm.\n\nShe finished and fell back on the bed. I stopped for a moment, as did Sarah, like we were pausing for breath before one final go at each other.\n\nKeeping my cock buried to the hilt inside her, I slowly ran my hands up the back of her gorgeous legs and up onto her bum. Suddenly remembering my anal encounter with Sarah a year earlier, I decided to tease her by rubbing a finger around her puckered ring as I resumed fucking her.\n\nThis was soon too much for Sarah, who arched her head up to cry out in ecstasy one final time. Holly moved to kiss her as she reached her climax, and I felt her juices seep all over my cock.\n\nSeconds later, my fucking relentless, I finally stopped and blew my load deep in Sarah's pussy.\n\nAs I pulled out, exhausted but still amazed by the best sexual experience of my life, I smiled at Holly and lay down next to her. Sarah disappeared to the bathroom but soon came back and settled on the other side of Holly, and the three of us drifted off to sleep.\n\nSarah slipped back to her own room a few hours later, and Holly and I were woken shortly after 9am by Sophie, who announced she was making breakfast. Still feeling a little worse for wear, we said nothing to each other about the night's activities as we got ready and joined the others for food.\n\nThe five of us made idle chatter as we sat around Sophie's kitchen table. I couldn't help but glance at Sarah a few times as we ate. At first, she seemed to be avoiding my gaze, but, when the others seemed distracted, she made a point of beaming at me, and I smiled back.\n\nIn no time at all, the girls were upstairs again packing their bags to leave. I sat by myself downstairs and reflected on the sex I'd had with Holly and Sarah, still unable to comprehend it all.\n\nEvery man fantasises about having a threesome with his girlfriend and her friend, but I'd actually got to experience it, and it had exceeded even my wildest dreams. I don't know how it happened - and I didn't much care - but I'd seen a side to Holly that I longed to see again, and it was incredible to have been able to fuck Sarah again. I was desperate for a repeat, but in truth I accepted that it was likely to have been a crazy, drunken one-off.\n\n\"What are you gawping at?\" Holly said, snapping me out of my daydream as she came downstairs with her bag.\n\n\"Nothing,\" I said with a smirk, scarcely able to suppress my lie.\n\nShe shot a knowing smile back at me. Soon, Sarah and Lauren joined us and we all said our goodbyes and thanks to Sophie for hosting, before heading out of the front door. Lauren hugged us all goodbye and sped off in her car, leaving me, Holly and Sarah standing on the driveway.\n\nWe walked slowly away from the house, each of us saying nothing but clearly hoping someone else would. Then, once we'd turned down the road, Holly gently took my hand before doing the same to Sarah on her other side.\n\n\"So,\" she said as a broad grin spread across her face, \"Back to mine?\""
    ],
    "authorname": "whathappensinmexico",
    "tags": [
        "bisexual female",
        "blowjob",
        "cowgirl",
        "friends",
        "girl on girl",
        "mff",
        "pussy eating",
        "voyeur",
        "threesome"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/holly-and-sarah"
}