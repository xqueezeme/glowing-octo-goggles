{
    "title": "Lost Empire Ch. 73",
    "pages": [
        "0001 - Tempro\n\n0003 - Conner- Thomas\n\n0097 - Ace - Zimmel\n\n0098 - Lucy\n\n0101 - Shelby (mother ship)\n\n0125 - Lars\n\n0200 - Ellen\n\n0250 - Tendra\n\n0301 - Rodrick\n\n0403 - Johnathon\n\n0778 - Jan\n\n0798 - Celeste - Shelby (human)\n\n0805 - Toran\n\n0808 - Radella\n\n0908 - Tara - Mara\n\n1000 - Sherry\n\n-------------\n\nUngrown - unnumbered\n\n------------\n\n0100 - Derry (father ship)\n\n0667 - Marco - lost\n\n0999 - Zan - still lost\n\nRescued from Tendraxians so far\n\n------------\n\n6 on Shelby\n\n8 on Lucy\n\n----------------\n\nKnown and OR numbered\n\n----------------\n\n0501 - Thaddeus\n\n???? - Lena\n\n----------------------------------\n\nDerrick watched as the last of the Delcron fleet was moved. He was about to have Shelby move the ship when her human counterpart whispered to him.\n\nDerrick turned, whispering back in disbelief, \"You've got to be kidding me. Seriously?\"\n\n\"I'm afraid so, she's even willing to pass through 'the evil eye' as she puts it. It seems their whole race is geared toward battle. Shelby said that her bio-readings are already starting to fail,\" the deadly serious Empress stated.\n\nHe shook his head, blowing out a breath of frustration. He looked at the Empress, then Shelby.\n\nA moment later, he cleared his throat. \"I'm sorry, Admiral,\" he stated as Bee appeared next to Hartwell.\n\n\"Why is she back here?\" a shocked Hartwell asked.\n\n\"Her scans appeared to indicate that her bio-readings were failing. Apparently, being with you on the ship is the only thing that has stabilized her.\" Derrick told him.\n\nA groan escaped his throat as he stared at the trembling Bee. \"How am I supposed to...\"\n\n\"Her whole raced is geared toward battle. Set her to a task. She just might surprise you,\" Derrick told him.\n\nHartwell shook his head in disbelief. His sister was bad enough; now this?\n\nDerrick smiled, seeing the exasperation on Hartwell's face. It was about time the man felt some of the frustration that he did.\n\n\"Now I know that, we're going to have to have it out when this is finished,\" Hartwell growled.\n\n\"Yeah, if I remember right the last time, you hit the deck before I did. Get over it!\" Derrick responded.\n\n\"Ha! As I saw in the replay of it, you were right on my heels. I think we need another go at it. Besides, I am having issues right now with you,\" Hartwell growled louder.\n\nA rather loud Empress interjected, \"I am not about to watch the two of you act like little boys, trying to beat the crap out of each other again. I suggest that the both of you get over it!\"\n\nThe Empress's forceful voice caused the both of them to pause, looking at her.\n\nDerrick and Hartwell could only stare at the Empress. Damn, Derrick thought, when in the hell had she become so forceful?\n\nThe Empress put her hands on her hips, staring at them with even sterner looks. Walking to Derrick, she poked him with her finger. \"Damn it, Derrick! I've barely gotten you back. Here you want to end up injured, away from me even longer in the med ward.\" Here she turned toward the image of Hartwell, a slight smile on her lips. \"Johnathon, code Epsilon, Mu, Psi, Rho, Epsilon, Sigma, Sigma, Chi, Omicron, Nu, Tau, Rho, Omicron, Lambda. Alpha, Omega-001a. Confirm\"\n\nA shocked Johnathon bowed. \"Code confirmed. I await your orders, Empress.\"\n\nA startled Derrick started to say, \"Johnathon, belay those...\"\n\n\"I am sorry, sire, I cannot, that was an emergency override that cannot be superseded,\" a sad-looking Johnathon stated.\n\nAn even more startled Derrick and Hartwell turned to stare openmouthed at the Empress.\n\n\"Now then,\" she said, a deadly serious look on her face, \"when all this is over, then we will see about settling this. The both of you would do this right now, something we don't have time to do. Johnathon, if he makes any move to engage in the activity that we both know that he would\"\u2014here she stared directly at Hartwell\u2014\"shock him until he is unable to continue.\"\n\n\"But...\" Hartwell started.\n\nThe Empress turned to Derrick, then she slightly smiled. \"I may not be able to do this to you, YET. I am working on it. This way, we can get through all of this without the both of you injured. At least not by each other.\"\n\nDerrick and Hartwell could only stare at each other, then an uproarious laugh came from behind Hartwell.\n\nHartwell whirled to stare at his sister. \"I am not finding this a damn bit funny,\" he told her.\n\nDerrick also turned when he heard laughter behind him. Trent Hartwell was as well laughing at his brother's situation.\n\n\"You always did seem to have a penchant for trouble. Plus, you always seemed to be in the middle of it.\" Trent said as he started to laugh harder. Then Trent suddenly turned serious. \"I have been fighting, training, on the run for years. Don't think that you can take me like you used to.\"\n\nHartwell stared hard at his brother. Seeing the battle-hardened look in his eyes, Hartwell nodded. \"I can see that you have been through a hell as bad if not worse than my own.\" Letting out a sigh of defeat, he nodded to the Empress and Derrick. \"We should table this for a more peaceful time. Then we can beat the hell out of each other,\" this last said almost in a whisper.\n\nDerrick's eyes were wide as he stared at Hartwell, then the Empress. \"I fully agree., With the current situation, that would be very wise.\" Nodding to the Empress, then Hartwell, he clicked off, heading to the command chair. \"All ships, Captains, report in.\"\n\nEven as he received the reports, he heard the wind-up, then Shelby stopped. Derrick saw that they were a substantial distance from the others. Even as he watched, he saw the Delcron fleet move into a strange configuration.\n\nDerrick was staring as he tried to figure exactly what the Delcrons were doing. Then it hit him: he saw most of the fleet off to one side. A wide smile crossed his lips, and he nodded his approval. Not exactly what he would do; then again, he did only have fifteen ships.\n\n\"Mary, I need an analysis of the Creagon formation,\" Derrick ordered Mary.\n\n\"Yes, sire,\" came her reply. \"Analysis complete. It appears they are advancing in columns. This is more than effectively hiding their total numbers. I am also detecting three very large spheres a great distance behind the columns.\"\n\n\"Damn it! I was afraid that the last time wasn't a fluke. Advise all ships of this new threat. Connect me to all Captains.\" A moment later, five holograms appeared. \"I don't want anyone taking unnecessary risks. With this formation, it's extremely hard to get a read on them. If your ship gets damaged, I want you out of there immediately!\"\n\nAll five nodded as their holograms winked out. Derrick could only watch as he saw the ships of the empire move into a defensive position.\n\n\"I believe I see what they are trying to do. All ships concentrate fire on the four columns to this side. Do not, I repeat, do not allow them to start separating,\" Derrick ordered as he saw ten columns start to advance upon them. He just hoped that destroying the four columns before them was enough.\n\nDerrick took a deep breath, tensing up as the first of the EIGs opened fire. As he suspected, the destruction of those in the front started a cascade effect along the line of the column. Nodding, he watched as well over half of those behind were obliterated by their own ships.\n\nWithin moments, it appeared as if those behind were hesitating, then they started to veer off. Those that escaped the destruction tried to regroup, only to be blown away by the targeting systems of the EIGs.\n\nEmperor Kandra watched openmouthed at the sheer beauty of the destruction wrought by the other empire. It seemed that only a few moments passed, then there were four less lines of the enemy.\n\nA thin smile crossed his lips as he nodded. This would be a wonderful ally in the future, if they got that far. His attention then turned toward his own fleet. Barking out orders, he tried to have his ships to copy the other empire's strategy. At first, it seemed to work, though, as he was soon to find out, his fleet lacked quite a bit of the power that the other empire's fleet had.\n\nKandra saw that his fleet hadn't even got half of the ships in the six columns. Sure enough, the Creagon fleet started to split off into several vee formations. These formations then started to try to flank the Delcron fleet.\n\nThe definitive word was 'try.' Several of Derrick's ships appeared on the other side of the Delcron fleet.\n\nWithin moments, the Creagons started to concentrate fire on two of the EIG's.\n\n\"Thomas, Ellen and Lars are taking concentrated fire,\" Derrick called.\n\n\"I'm on it, sir. Damn it! Lars, haul her ass out of there before you both are incapacitated! Lucy, Tendra, lay down cover fire. Watch your flanks, there are more of them moving in,\" Thomas stated. \"Got Ellen, though she's a little shot up.\"\n\n\"Good, I want as many of you there to aid the Delcrons. Even as strong as they are, the Creagons still have the numbers. According to Mary, we've only eliminated half of them. Good god!\" A shocked Derrick stated. \"She's reading almost two hundred fifty-thousand out there. That doesn't include the three spheres nor the ships with them.\"\n\n\"WHAT!?\" a startled Thomas almost shouted. \"All Captains, all ships form up on Conner, no more playing with them. I want spread fire; take as many of these bastards as you can. If you are damaged, retreat to the Emperor and Shelby.\"\n\nThe next several hours were filled with the mass destruction of the Creagon fleet, as well as a large portion of the Delcrons, taking as many of the enemy as they could.\n\nDerrick could only shake his head at the massive area of wrecked and destroyed ships. What a damn waste, he thought, then several alarms were going off. Shit, he thought, as he saw that the three spheres were starting to advance toward the battle.\n\nDerrick was even more shocked when he received a transmission. What the hell, he thought, then the image of what he could only describe as a praying mantis appeared.\n\n\"SSSo the great humanoid empire has emerged. We will not fail to crusssshh you. Your bodiessss will feed my larva for generationssss to come,\" the insect voice stated.\n\n\"Like hell!\" Derrick shouted, his temper starting to rise. \"Your fleet is defeated. You have nothing left.\"\n\nA shrill laugh that sounded between the tearing of paper and a grinding noise fired back at Derrick. \"Fleet? They were nothing. Thessseee world sssspheresss hold our power, power that you have no hope to defeat. You might have dessstroyed one, along with it'ssss queen, againsssst three? Give up, we will kill all of you quickly. Then my larva can feasssst for many generationssss.\"\n\nDerrick growled, then looked at the image of Mary. Nodding, a smile formed on Derrick's face. \"I have a better idea. Why don't you and your ship, plus all on it, just die!\" Derrick could see several of the insects behind the Queen becoming anxious, then start yelling.\n\nA few moments later, an intense beam raced past Shelby and the rest of the fleet. \"Where is thissss power...\" The Queen started as the picture began to shake, then was cut off as the sphere shuddered, then exploded.\n\n\"I am afraid that it will take some time for me to fire another, sire. This took all the planetary generators to reach you,\" Mary's hologram stated.\n\n\"Thank you, Mary. I am hoping that this display might deter the other two spheres from attacking. Though, knowing them from the last battle, this will make them more anxious to attack, then retreat.\" Derrick said.\n\n\"From the analysis I have done of them, now and before, I have to agree, sire,\" Mary replied.\n\nDerrick nodded as he read over the damage that his fleet had suffered. Five of the ships were out of the fight, three of them without trans-warp.\n\nStepping to the open floor of command, Derrick called all the ships and the Captains.\n\nAs soon as they appeared, Derrick started. \"It appears that even with the destruction of one of the spheres, they are still coming to finish the fight. We are without the backup of the Imperial planet.\"\n\n\"We still have ten ships in the fight, sir. That should be more than enough to kick their asses,\" Thomas stated.\n\nDerrick nodded. \"It should. Though, as I remember, it took all five of you last time to take out one. You have twice that this time. But don't think they haven't tried to improve since our last battle, either.\"\n\n\"Well,\" Thomas stated, \"I hope so, I want to see the new redoublers in action. We haven't really had a chance to try them out. I, for one, am excited to see just how much more powerful the ships are. A real chance to blow the hell out of...\"\n\n\"Enough, Thomas. Don't start going out on your own, you understand? This is a team effort. Together, or not at all. We are far stronger together than we are apart,\" Derrick stated curtly to Thomas.\n\nThomas stopped, blinking rapidly, with a surprised look on his face. \"I am sorry, sir, I didn't mean to belittle the rest of the group. They have performed exceptionally so far. I am just anxious to get out there and end this threat, as I am sure we all are.\"\n\nDerrick stared at Thomas a moment, a look of almost disbelief on his face. \"Alright, let's get this done. Watch your backs and those of your comrades.\" All the ships and Captains bowed to him, then paused when Derrick held up a hand. Turning to Shelby, Derrick could only shake his head.\n\n\"He was always a hothead. Great damn soldier, still a hothead.\"\n\n\"I am sure with the reminder that you just gave him, he will do as you say,\" Shelby replied. This, of course, had Thomas blushing.\n\n\"Oh, of that, I am sure. I just hope it's far sooner than later. I don't want to lose him or any of them,\" Derrick said.\n\n\"Derrick, they are good at their jobs. They have experience against this enemy from the last battle. We will prevail. After all, we do have the most advanced ships here,\" Shelby said, making all of the ships' and Captains' chests swell with pride.\n\nA still worried Derrick looked at Shelby, then shook his head. \"I have seen extremely well-trained troops fall to lesser troops and ships. What did them in wasn't weapons nor men. It was the fact that they were vastly outmatched by superior planning and execution of those plans. I intend to do the same as I always have, with superior planning.\"\n\nShelby's face held shock a moment, then a proud smile took over her features. \"I have to admit your military mind puts mine to shame for the moment.\" This Shelby stated with a sly smile on her lips.\n\nDerrick's eyes narrowed as he looked closely at Shelby, then relaxed as he nodded. Turning, he addressed all the ships and his Captains. \"These spheres have thousands of times the power and weaponry. As you might remember, the last time we faced one, it took five ships to destroy it and almost one Captain.\" This last he stated while turning to look at Mara. \"Actually, almost two.\" This last he directed toward Thomas.\n\nShelby turned toward all those present. \"I have done an in-depth analysis of the last battle with a sphere. They seem to have a type of dampening field when they are attacking. I believe this is why Captain Thomas wasn't aware that he was in imminent danger.\"\n\nThomas softly growled, then nodded his head. \"I went in thinking I was unstoppable.\"\n\nShelby could only shake her head, then continued. \"We are not going in singular any longer. You will have backup, or you don't go; do I make myself clear?\" When no one said anything, Shelby almost shouted, \"I said do I make myself CLEAR! You do not want to go against me nor the Emperor on this. Ask Derrick if you don't believe me,\" Shelby said, turning to bore holes in Derrick with her eyes.\n\n\"I suggest all of you listen to her. The alternative could be quite painful, believe me,\" Derrick said with a slight shiver, remembering picking himself off the deck the first time they met. \"All of you keep your head on a swivel when engaging the enemy. The enemy won't give you any quarter. Though it bothers me, I expect you to not, either.\"\n\nAll of them were nodding their heads in agreement when several alarms went off. \"I am detecting both spheres and their accompanying ships advancing,\" Shelby advised.\n\n\"Good hunting. Do the empire proud. Prove to these repulsive insects that humans can dish out the pain just as well as they can,\" Derrick said as he saluted all the ships and Captains who then winked out.\n\nKandra was proud of his people as they fought alongside the Humanoids. They had lost almost half their ships, though nearly all the Creagons were gone.\n\nHe was looking over the readings when he growled, seeing the three world spheres that were holding station. The enemy almost out of sensor range, Kandra was about to order his ships forward. Suddenly a massive energy beam passed his and the humanoids' fleet, striking one of the spheres. The sphere shuddered, then exploded.\n\nBlinking his eyes, a small smile crossed his features as he saw that the sphere's destruction was complete. That's one less of them to breed more, he thought. Now to get the others.\n\nHe had all the remaining ships form up on his. Unfortunately, this took thirty time units. Kandra was about to order his ships forward when he got a call from the humanoid Emperor.\n\n\"Emperor Derrick, it has indeed been a pleasure to battle with you. We are moving into position to commence bombardment on the remaining two spheres,\" Kandra stated.\n\n\"I appreciate the help, Emperor Kandra, though I think that we have enough power to take both of them. I realize that you are also honor-bound to attack, though I say let us go first. Who knows, we might actually win. You have suffered enough loss,\" Derrick suggested.\n\nKandra thought a moment, then nodded. What better way to build an ally than by saving them when they needed it. Hiding a smile, Kandra nodded.\n\n\"We will finish regrouping, then join the fray. It is a good day to fight. Win or die, it is a very good day!\" With a nod, Kandra signed off, then started issuing rapid-fire orders.\n\nDerrick turned toward the viewscreen as all ten ships got into position. He tensed up as he saw the fighters that were coming in before the spheres.\n\nDerrick looked to the side, seeing Lars, Ellen, Tendra, Toran and Radella, Ellen and the last two without trans-warp. They weren't that inexperienced. Hell, Derrick thought, they had done well against almost overwhelming odds.\n\nDerrick turned back, then watched as the first sphere came in, its weaponry firing almost continuously. All ten ships started to fire as soon as the sphere was in range.\n\nThe first sphere, its engines destroyed within moments, slowed to a stop. All ten ships almost as one then turned to fire at the second rapidly advancing ship. This one, though, was somehow deflecting almost half of the beams, though those that got through were starting to rip the infrastructure to shreds.\n\n\"Thomas! Mara! Get out of there. The first sphere is still active.\" They all heard the voice of Brown, then watched in horror as Marco flew between them and the first damaged sphere. Marco was putting everything he had into his assault. Then he shuddered as he started to drift away.\n\nBoth Mara and Thomas started firing at the crippled sphere, then were shocked when Brown somehow turned Marco back. Opening up with the last of his power, the sphere began to shake even more violently.\n\nA very weak hologram of Brown appeared on every ship. \"It was an honor to fight with all of you.\" Brown coughed, then looked at Mara. \"You were the greatest friend I ever had. Thank you.\"\n\n\"Shelby, get him out of there!\" Derrick was shouting as he saw Marco start to pick up speed. \"No, damn it! He's using the last of the ship's power for a suicide run. Get him, Shelby!\"\n\n\"I... I can't, Derrick. I can't get a positive lock,\" Shelby stated with tears in her eyes.\n\n\"It's ok, sir,\" Brown's hologram stated. \"I am proud to do something worthwhile in my life, if only once. I gladly sacrifice myself for the empire.\"",
        "With that, Brown's hologram vanished. All of them could only watch as Marco hit the sphere with great speed. The resulting explosion ripped across the other crippled ship, blowing half of it away.\n\nAll the ships turned to what was left of the second sphere as they converged, firing on it till there was little left.\n\nAnger greater than anything he'd ever felt before was tearing at Thomas's heart. \"I need a status report, all ships.\"\n\nMoments later, an enraged Thomas reported to Derrick. \"Most of the ships have sustained minor damage. Both pieces of shit have been completely destroyed. I am not sure if I can do this much longer, sir. I don't...\n\nJust then, a weak, staticky sound broke through. \"Sssso, once again, the Humanoid empire defeated ussss. It ssseemsss that you are not asss weak asss we first thought. Good. Next battle, we will meet, then my sssuperior ssskills will...\"\n\nWith his teeth clenched tight, Derrick almost hissed. \"The next time? There won't be a next time. That is four queens that your race has lost, a serious loss. If we do meet again, we will annihilate you and your race. That isn't a threat but a promise.\"\n\nAgain, a hissing, grating sound that Derrick could only assume was a laugh came from the com.\n\n\"Sssso, a challenge. As for them, they were weak. I will produce better, ssstronger onesss that will not lossse to you,\" the voice returned.\n\n\"If you get a chance,\" Derrick hissed as he cut the transmission. \"Did you get a location?\" Derrick asked.\n\nA moment later, Mary appeared. \"Yes, sire, they seem to be further into the next galaxy than the Delcrons.\"\n\nShocked a moment, Derrick thumbed the com. \"Emperor Kandra? Do you happen to know the location of the Creagon planet?\"\n\nKandra's vision appeared before Derrick. \"Yes, we do. We were surprised that they traveled this far. It is obvious that they were far more upset than we first thought.\"\n\n\"I am thinking of launching an offensive against them. It's about time we took the fight to them. Shouldn't take us too long to be ready. I just want permission to cross your space to reach them,\" Derrick asked.\n\n\"For this, we will have no problem granting it. Though I am afraid we have business of our own that we need to finish before we can start that,\" Kandra stated, a small smile on his features.\n\nDerrick could only nod his head as he considered. The Delcrons had been nothing but patient and honorable. \"Yes, I suppose that we do. That is, if your daughter still wishes,\" Derrick started.\n\nAn almost shrill female voice was suddenly heard. \"By the feline god, she more than wishes it. I must have him or die trying. If you wish me to, I will gladly volunteer to bring him out of hiding. I will not be denied my mate!\"\n\nShelby rolled her eyes, then thought about it for a few moments. Leaning over, she whispered in Derrick's ear, \"Though I do not like this, I guess we have no choice. I think, though, that I need to see their rules before this 'contest' starts.\"\n\nDerrick nodded as he could only stare at Shelby. Perhaps this one might be better suited for her hands. She had, after all, handled their marriage and him quite handily.\n\n\"That might be an excellent idea.\" Turning toward Kandra, Derrick asked for a copy of the rules governing the contest that Jimison and Difina of the Delcrons would have.\n\nMoments later, a rather thick book appeared beside Derrick. Looking at Shelby, Derrick said, \"Not your typical light reading, I see.\"\n\nA smirk appeared on Shelby's face as she turned to Derrick. \"You forget I read nearly as fast as you. So, a bit of light reading, possibly.\"\n\nDerrick turned back toward Kandra and Difina. \"I am afraid that at the current speed that we all can maintain, it will take time.\"\n\nKandra waved his hand. \"Time matters not that much for now, though in a few weeks it will. I am afraid that Difina's mating rage will have grown to the point that we might have to confine her. That, I am afraid, might kill her. Therefore, I hope that it isn't for an extended time.\"\n\nDerrick's eyes grew wide as he stated, \"Nothing that long, though it will be at least four days.\" Kandra nodded as they bade each other good day.\n\nReaching out, Derrick again thumbed the com. \"Colonel Dempsy, I need you on the bridge as soon as possible.\"\n\n\"I am on my way, sire,\" came Dempsy's voice. Derrick shook his head. Knowing Onai, she and the doctor that had come aboard would both accompany him."
    ],
    "authorname": "Pars001",
    "tags": [
        "non-erotic",
        "science fiction",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-73"
}