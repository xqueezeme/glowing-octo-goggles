{
    "title": "I Will Love You Forever Pt. 2 Ch. 05",
    "pages": [
        "By the end of April 1946, the kingdom of Hungary becomes a republic, 400 coal miners are killed during an explosion in Germany, Juan Peron is elected President of Argentina, Ho Chi Mihn signs an agreement with France that recognizes Vietnam as an autonomous state, the League of Nations disbands and transfers its missions to the United Nations. For the first time in Japan, women are allowed to vote and Masahharu Homma is executed for leading the Bataan Death March that resulted in the deaths of thousands of prisoners.\n\n********************************\n\nCivil Rights events\n\nIn Morgan v Virginia, the Supreme Court rules that a Virginia law requiring segregated seating in interstate busses is an \"unconstitutional burden on interstate commerce.\" President Truman appoints a presidential committee on civil rights in response to a wave of violence against African Americans living in the south; Ebony Magazine publishes the profiles of six Negro Newsman of White Dailies. Included are Earl Brown of Life, Ted Poston of the New York Post and William A. Brower of the Toledo Blade. The print media in the United States at this time is almost but not completely segregated. Only a handful of African Americans are employed as journalists.\n\n********************************\n\nIn Music\n\nA revised and streamlined version of Showboat opens on Broadway, Buddy Ebson is one of the stars, Al Jolson records his old hits for his Columbia biopic \"The Al Jolson Story\", B. B. King begins working as a professional musician in Memphis, Tennessee and Chet Atkins makes his first appearance at the \"Grand Ole Opry\"\n\n********************************\n\nThe week passed quickly with no mishaps but Kenji still maintained that they were still experiencing a time of temporary calm. The beginning of the storm didn't show itself until the following Monday when Patricia went to class fully expecting to bump heads with Professor Hathaway.\n\nAs always, Kenji walked her to class and left her with a light caress of her hand. Patricia sat in her seat and prepared for the surprise quiz that was no longer a surprise. She ignored the sound of the students coming in and only looked up when she felt someone standing next to her.\n\n\"How are you doing?\" A male voice asked rather nervously. It was the student who from the week before who had warned her about Hathaway.\n\n\"Hello.\" Patricia replied politely. She wondered what he wanted and why someone was actually talking to her after weeks of ignoring her.\n\nShe stared at him when he sat in the empty seat next to her. She was about to ask him what he was doing when and instructor walked in and cleared his throat.\n\n\"My name is Professor Clarence Books.\" he said and looked around the room, his eyes resting on Patricia a tad longer than they had on anyone else's. \"I will be teaching this class for the duration of the semester and I want to make a few things clear.\"\n\nPatricia settled in for the same spiel that Hathaway had delivered several weeks before but was surprised.\n\n\"One of the first things that I want to clarify is this, I don't give a damn about whether you're white, black, purple or green, I expect the work to be done. At the risk of getting myself into a bit of trouble I also want to say this, it is most unfortunate that Professor Hathaway allowed his personal beliefs to interfere with his responsibility as an educator. I'm quite sure that you are well aware of what I'm talking about so I don't need to expound in it. Rest assured that nothing like what happened will occur in this room as long as I am the instructor. Everyone and I do mean everyone is entitled to an education so having said that please open your text....\"\n\nPatricia stole a glance around wondering if everyone else was a shocked as she was. Her next thought was about who would have turned Hathaway in and if he would somehow hold her responsible for it even though she hadn't said anything to anyone about her problems with him except Kenji and Joel. The last person she looked at was the man sitting beside her. \"Was it him?\" she wondered as she looked away before he caught her looking at him.\n\nAs she looked forward to listen to the instructor, she had to admit that the class had a different feel to it than the weeks before. It didn't feel as oppressive and she found that she actually enjoyed it. After class was over the mystery student introduced himself.\n\n\"I'm Bernard Hammond.\"\n\n\"It's nice to meet you, I'm Patricia Takeda.\"\n\n\"I know who you are.\" Bernard replied with a smile, \"And it's nice to finally officially meet you.\"\n\n\"I don't mean to be rude but why now?\" Patricia asked.\n\n\"Excuse me?\" Bernard asked not sure about what Patricia meant.\n\n\"This class started weeks ago so why are you just now speaking to me?\" she asked trying hard not to sound abrupt but she really wanted to know.\n\nBernard caught off guard by the question became flustered. He was told that all he had to do was introduce himself and that was even more than he wanted to do. As far as he was concerned, he had done his duty by telling someone about Hathaway and to sit next to her in class had been a very stupid move on his part.\n\n\"Oh... hey I've got to get going! My next class starts in a few minutes.\" he said avoiding the question.\n\nBefore Patricia could say anything more, he grabbed his books and took off. She didn't notice that someone sitting in the far back corner of the classroom was watching her.\n\n*******\n\nKenji was waiting for her when she came out. He was actually about to go in after her when she walked out.\n\n\"Kirei? Is everything alright?\"\n\n\"I'm fine but you're not going to believe this.\" she said as they walked outside.\n\n\"So he is gone?\" Kenji asked when Patricia told him about Hathaway.\n\n\"Supposed to be.\" Patricia replied as she played with his long fingers.\n\n\"Still you must be careful.\" Kenji said catching her fingers in his without looking.\n\n\"I know and how do you do that?\" Patricia asked.\n\n\"You make the same pattern every time.\" Kenji replied chuckling, \"But Kirei, I mean it, be careful just because he is not here doesn't mean that he still can't harm you.\"\n\nPatricia looked at him, \"You're thinking that he'll think that I'm the one who complained.\"\n\n\"Yes and even though you weren't, he will hold you responsible.\"\n\n\"I've already thought about that.\" Patricia replied. \"I almost forgot, one of the other students sat beside me today and introduced himself.\"\n\nKenji's reaction was much the same as hers had been. \"After all of this time? Who was it?\" he asked.\n\n\"Bernard Hammond and I don't know anything about him.\" Patricia replied.\n\n\"I think our time of peace is coming to an end.\" Kenji said more to himself than to Patricia, \"and Kirei be careful of this Bernard Hammond until we know more about him.\"\n\n\"I will and I really hope your wrong about our time of peace ending. How was your class?\" she asked.\n\n\"The same as always.\" Kenji replied. \"Andrew Kelley and his friends still haven't spoken to us or accosted us but I think that it will change soon. Remember not to go anywhere alone.\"\n\n*********\n\nHe walked Patricia to her next class and met Joel at theirs. He immediately noticed the grim expression on Joel's face.\n\n\"What is it?\" Kenji asked concerned.\n\nJoel lifted his bag from the desk to reveal a Star of David that was large enough to cover the desk drawn in yellow paint. Kenji looked down at his own desk and saw written in English, \"Jap go home.\" Kenji looked around to see if anyone looked suspicious, his eyes resting on Andrew who for the first time in weeks spoke to him.\n\n\"What are you looking at?\" Andrew snapped.\n\n\"I am wondering why you have broken the uneasy peace between us.\" Kenji replied. \"We have not spoken or crossed paths in weeks and now this?\"\n\nAndrew looked at Kenji with a confused expression. \"What in the hell are you talking about?\" he asked.\n\n\"Come see.\" Kenji replied, a challenge in his voice.\n\nCurious, Andrew left his seat and walked over to Joel and Kenji's desk. His eyes widened when he saw the Star of David drawn on Joel's desk and the message written on Kenji's desk. He hadn't authorized this; the order not to bother any of what he called the melting pot was still in effect. \n\n\"Wh.....\" Andrew stopped himself, he wasn't about to air his dirty laundry in front of Kenji and Joel. Without saying a word, he turned, walked away and headed back to his seat while he scanned the faces of what he considered his inner circle. Of the four of them, only one, Ernie Powell looked guilty and couldn't meet his direct stare. He would be dealt with later.\n\nAndrew sat in his seat furious that someone would disobey him. The thing that really surprised him was the one who had done it. Ernie was a follower through and through and wouldn't disobey an order of his own volition without being pushed into it which meant one of the others had put him up to it. But who was it?\n\nWhoever it was ruined his plans, he was actually in the process of planning something but it now had to wait. The Jap was back on full alert as was the Jew and the Jap would warn his woman as well. Andrew couldn't wait to get his hands on whomever it was that had gotten Ernie to disobey him. The objects of his obsession had just gotten a reprieve.\n\n*******\n\nAfter the last class of the day, Andrew and his crew went to the diner to kill some time. There was a meeting with the rest of the group scheduled for later in the evening and he wanted the mess with Ernie taken care of before then. Andrew had already cleared his schedule with his parents and so he wasn't expected to be home early. He really didn't have to clear things with them but it made them feel good and it avoided any problems. But that wasn't it, he genuinely loved and respected his parents and it was their home.\n\nWhile they waited for their orders to be taken, Andrew decided that it was time to find out who the culprit of the graffiti was. He looked around the booth at each man before speaking.\n\n\"You know,\" he said, \"I never rescinded the order about the Jap and his buddy.\" \n\nHe watched as they looked at each other and noticed again that only Ernie gave any indication that he had been the one to go against a direct order. The question was why. Just as he was about to ask, Andrew heard Becca come into the diner.\n\n\"There he is!\" she said to whomever she had come in with, \"I'll talk to you later.\"\n\nA moment later she was sitting next to Andrew with her hand high up on his thigh and moving it up toward his crotch. Andrew happened to look at Ernie and saw a look that he had never seen before- jealousy. Ernie, he realized had a thing for Becca. He had to wonder just how long Ernie had felt that way and if Becca knew.\n\n\"So baby, we got time for a ride?\" she asked her hand now over his cock and rubbing it until it was hard.\n\n\"Sure baby.\" Andrew replied looking at Ernie who was looking away but his jaw was twitching.\n\nBecca's hand stopped moving. She was surprised by the quickness of Andrew's response; it had been weeks since he had responded so quickly. She also knew that Ernie was pissed, she had given him a blowjob... not even one of her special ones for doing a favor for her and now he thought that she belonged to him.\n\nThat she kind of implied that she was breaking up with Andrew might have contributed to that belief didn't matter. She had no plans of doing so and if Ernie was stupid enough to believe it then too bad for him but she had to keep him quiet even if it meant giving him more blowjobs. She found herself kicking herself for her rashness and wondered how long it take Ernie to spill the beans.\n\n\"Let's go.\" Andrew said as she pushed her out of the booth and then made her stand still. Although he was sure that everyone knew what happened between him and Becca, he was still a gentleman. He used her body as a shield to hide his hard on. Like Becca he wondered about the quick reaction and wondered if it wasn't because he knew that someone else wanted her even if he didn't.\n\nHe drove them to the parking lot of an abandoned store, parked in the back, unzipped his pants and waited for Becca to get comfortable. He groaned when her hot mouth covered the head of his cock and sucked. He knew that he should have felt guilty about using her like this but he didn't, he simply didn't care. He was well aware of the fact that Becca was in love with him but there wasn't a chance in hell that he was ever going to marry her. For now, he would enjoy the offerings of her lips and mouth.\n\nHe tangled his fingers in her blond hair as her head bobbed up and down on his pole with varying degrees of pressure and speed. This was the one thing that he was going to miss about her and he hoped that his future wife would be as talented as Becca when it came to sucking cock.\n\n\"God!\" he cried out when she did that little thing with her tongue signaling that she was going to make him come. He pressed her head down into his lap and held it there for a few seconds before letting her up for air. That was his way of telling her to slow it down.\n\nBecca caught her breath and went back the task of pleasing Andrew. It wasn't long before she was flicking her tongue across the underside of his cock where the shaft met the head and then sucked on it. The feeling was incredible and Andrew often wondered where she had learned it. He was going to come and this time he wasn't going to stop it. He held Becca's head still so that the only part of her mouth she could move was her talented tongue and began to pump into her mouth. Every so often he would stop long enough for her tongue to dance across that sensitive spot before thrusting in as far as he could go without actually making her gag.\n\n\"Fuck!\" he screamed as he finally emptied into Becca's waiting mouth. Even though he was empty, he kept thrusting so that just the head of his cock slid in and out of her mouth. He loved the feeling of having the head of his sensitive cock sucked after he came.\n\nFinally spent, Andrew rested his head against the headrest of the car. He knew that Becca was expecting something in return and be fair; it had been a long time since he took care of her. \"Strip.\" he said as he began to stroke his cock that was already beginning to recover.\n\nBecca didn't need to further encouragement. Her Andrew was back. She had managed to make him forget about the black woman although she didn't know how she had managed it. She stripped to her bra and panties, straddled Andrew's lap and began a slow grind against him. \n\n\"I love you baby.\" she moaned when Andrew lifted the cups of her bra to expose her breasts and took a rose-colored nipple into his mouth and sucked.\n\nAndrew froze, knowing that she loved him and hearing it were two entirely different things.\n\n\"Get off!\" he said shoving her off from his lap.\n\n\"Wha....\"\n\n\"Get dressed, we're done here.\" he said gruffly interrupting her.\n\n\"I don't.....\"\n\n\"Get dressed!\" he snapped.\n\nBecca dressed as tears ran down her face. She couldn't imagine what had happened, all she had said was... It hit her like a ton of bricks, Andrew didn't love her, had never loved her and he saw her as nothing but a whore to be used for his pleasure. Her face burned as she realized that everyone with the exception of her knew this, even her so-called friends knew it but hadn't said anything. The tears flowed faster as she imagined the whispered conversations that were taking place behind her back even as she dressed very humiliated.\n\nShe forced the tears to stop, finished dressing and jumped out of the car. Without looking back, Becca started walking. Several minutes later, she was home, in her room and ripping the notebook containing her wedding plans to shreds. By the time she was done, the pages of the notebook littered her room. \n\nShe sat on the bed and began to cry but not out of sadness but anger. \n\nAndrew was going to pay for this.\n\n*******\n\nAndrew drove straight to the meeting place even though he was early. He didn't want to face the questioning looks he would have gotten if he had gone back to the diner. In retrospect, he realized that he had handled Becca's revelation wrong, he should have continued as he had been, made her come and taken her home. \"The talk\" would have occurred a few days later.\n\n\"Too late.\" he thought to himself. He would just have to deal with whatever she told people and move on.\n\nHe pushed Becca out of his mind and thought about Professor Hathaway. Everyone in their group had heard about what happened to him and all of them were angry. All of them, Andrew included saw what happened as Patricia's fault and there had been some talk of retaliation.\n\n\"Not yet.\" Andrew had advised, \"if we make a move now the school will know that it had something to do with Hathaway and he was already being watched and let's face it, targeting the woman was a mistake on his part. It was only a matter of time before she or someone else said something.\"\n\nReluctantly, the others in his group agreed.\n\n\"And if you see the others, tell them the same thing.\" he added. \"They are not to be touched until I say so. Is that understood?\"\n\nHe had no doubts that he wouldn't be disobeyed a second time once word about Ernie spread. Hathaway had made him his second in command of the small but growing group; he would be the one leading tonight as Hathaway had another meeting to attend. It wouldn't be too long before they would need to start delegating or they would have to begin accepting nominations for officers. That time hadn't come yet but if the group continued to grow at the rate that it was, by the time spring break came they would have to consider it. There was still plenty of time before the big group meeting but he went into the small garage anyway and began to set up the folding chairs.\n\n*******\n\nHathaway glared Marji his wife of fifteen years and didn't like what he saw. She was an attractive blonde-haired woman with cornflower blue eyes and a petite build. At one time, he had considered her perfect, his soul mate and the future mother of his children. Now all he saw was a stinking filthy Jew. As far as he was concerned, she had lied to him when she told him that she was pure. It didn't matter that she thought that he was asking if she was a virgin and if he had asked about her family, she would have told him.\n\nIn his mind, she still lied.\n\nHe still remembered the day that he found out. They had just moved and he was unpacking the box that contained family heirlooms. He came across her family bible that he had never looked at partly because he never thought about it and partly because he wasn't interested. The real interest in genealogy wouldn't come until after he made his discovery.\n\nHe opened the bible and began to look at the names. When he saw the first Jewish last name, he flinched but then relaxed when he saw it was from the 1700's. He almost put the bible away but he kept reading and saw with mounting horror that there were several Jewish last names in her line with the last being as recent as December 1935, after that there were no more entries because he wouldn't allow it.\n\nThe name was written in Marji's neat handwriting. \"Naomi Lynn Goldstein, born December 10, 1935\" he saw red but forced himself to calm down. Part of this was his fault, he should have checked her family out before he married her but her last name had been Johnson at the time... how could he have known? In addition, her parents hadn't looked Jewish in any way. They were blond haired and blue eyes as Marji was, in other words they were perfect.\n\nBy the time he met them, he and Marji had already married and were living in California. It was during that visit that he found out that his sweet Marji was worth quite a bit of money. That was the only reason why he was still with her and why although angry, he didn't care that he lost his job. \n\nThe discovery about Marji's lineage happened a short ten years almost eleven years ago. When he confronted her with his newly discovered knowledge, she didn't see the issue and told him so. ",
        "\"So what?\" She asked and shrugged her shoulders, \"I don't care.\" she added.\n\n\"You don't what?\" he screamed at her as he approached her, his hands in tight fists at his sides. He remembered the fear that had been in her eyes as he got closer to her. Up until that day, he had never laid hands on a woman and had to force himself to walk away after that first punch. \n\nHe looked over at her again and wished that he could get rid of her without losing the money but it was impossible because of the way her father had set up the trust fund. If she died, he wouldn't see a penny of it, part of it would go to her father's college alma mater, part of it to some charity that Marji supported and the rest of it to the Jewish Hospital. Those little pieces of information she divulged after he tried to force her to sign her money over to him. \n\nOver the years whenever Marji talked about leaving him, all he had to do was hit her a few times and mention Naomi. \"She's how old now?\" he would ask and Marji would fall into line like a good little Jew. He wasn't worried about her telling anyone, she would be too afraid and ashamed to admit that her husband hit her and was an anti-Semite amongst other things... his secret was safe with her. \n\nMarji fixed his plate, sat it in front of him and hurried away. She didn't want to give him any reason to call her names or to hit her. She knew that he was going to one of his meetings and entertained the idea of leaving him for what had to be the thousandth time over the past ten years. She never did simply because she knew that he would have someone kill her niece. She had actually considered suicide and had planned it out until he informed her that if she left him in any manner, he would kill Naomi and whatever family members that he could find...\n\nThen there was the matter of the money, he made her add his name to the account. If she took any extra money out, he would know. In order to have just a little money in case the opportunity came or she became brave enough to tell her family, she began to cut back on her personal expenses. Instead of going to the hairdressers every week, she went three times a month and so far, he hadn't noticed. She started buying the least expensive bath oils and soaps and that escaped him as well. Had they been sleeping together he might have noticed but for now, at least she was safe. Hiding the money became another issue. If he caught her with it, he would beat her and take the money to use on the whores that she knew he slept with or he would add it to the money that he was steadily taking from the accounts.\n\nThe only place that she could think of was the chest that was given to her years ago. One night when he was gone to one of his meetings, she emptied the chest and put the money in the bottom in a small purse that had once belonged to the same grandmother who had given her the chest. She wasn't sure of how much money she actually had because she would always just grab for the purse, put the money in and lock the chest back up.\n\nAn hour later, he was gone and Marji let out a sigh of relief and prayed that he wouldn't come back.\n\n*******\n\nThe drive home was quiet. Each of them was glad that the day was over and Patricia was glad that she had a few days before she had to return to school. All of them were looking forward to spring break especially Kenji and Joel. Their schoolwork had almost doubled and both of them were looking forward not only to the break but also for a chance to get ahead in their studies. Of the two of them, Kenji was by far in better shape mainly because of all of the reading that he had done over the years and so far, everything had been little more than a review.\n\nOne of the things that Kenji wanted to do was to take Patricia and the children up to Manzanar, the other thing was to teach her how to drive. As of yet he hadn't mentioned either thing to her figuring he would wait until spring break to say anything. All he wanted to do now was to get home, see their children, have dinner and make love to Patricia after the children were in bed.\n\nUnfortunately, he had to study first but the good thing was that Patricia didn't have to be up early the next morning and he could do with just a few hours of sleep. Kenji reached over and took the hand closest to him, gave it a gentle squeeze and a caress to make his wants and needs known. Patricia looked over at him, smiled and returned the squeeze as she wondered just how late he and Joel would have to be up. She squirmed in her seat as she envisioned being in bed with Kenji and of the things that he would do to her.\n\nPatricia glanced back at Joel and smiled at him. He was such a sweet man and deserved to be happy with someone. She only hoped that whoever it was, that she would appreciate him for what he was and be deserving of him. Joel caught her looking at him and smiled back, Kenji was one lucky man.\n\n*********\n\nAbby had dinner almost ready when they got home. Ralph and Marie rushed to the door to greet them with Ralph taking Joel's bag as soon as he saw them. \"I want a son.\" he thought to himself as he watched Ralph take his bag to the library. He picked Marie up after she greeted her parents and kissed her cheek, \"I want one of you too.\" He murmured as he hugged her.\n\nIt was possible he realized. He could become a husband, a father and a physician. He was becoming someone that a woman could be proud to say that he was her husband. Joel set Marie on her feet and went to help Abby finish dinner so that Kenji and Patricia could have a few minutes alone with each other and the children. He wondered for not the first time if he was in the way and decided to talk to Kenji about it later but in the meantime, he would continue to enjoy the feeling of belonging.\n\nDinner was a noisy affair with Marie repeating the alphabet taught to her by none other than her big brother. She was a pretty little girl who would grow up to be a beautiful woman. Her dark almond shaped eyes sparkled as she recited the alphabet with a few mistakes that Ralph gently and quietly corrected. She stood up and took a bow when everyone applauded, her curly pigtails almost touching the floor because she bowed so low.\n\n\"Well done pretty one!\" Kenji complimented before he turned to Ralph, and well done to you too, you are a good and patient teacher.\"\n\n\"Thank you papa.\" they replied in unison.\n\n\"Yes,\" Patricia agreed, \"very well done! In addition, because you both did such a good job, you can stay up fifteen minutes later.\n\nRalph grinned in excitement. These times didn't happen often but when they did, it made him very happy. An extra fifteen minutes meant an extra bedtime story or two if he chose the right ones and it also meant more time with his papa. \n\nPatricia knew this and wasn't hurt by it. It was only fair that Ralph would want the extra time with Kenji, so would Marie for that matter. She would use the time to get their bedclothes and bathes ready and then get ready for Kenji. She helped Abby clean up the dishes while Joel and Kenji read to the children.\n\n\"How are you doing?\" she asked as Abby put away the leftovers.\n\n\"I miss him.\" she replied softly.\n\nPatricia stopped what she was doing and hugged her. They all still missed the sometimes-grouchy older man and always would. She was glad that Joel was still spending some time at the house even though Abby said that she didn't need him to.\n\n\"What can we do to help?\" Patricia asked.\n\n\"Exactly what you're doing.\" Abby replied as she wiped the tears away from her eyes. \"Just keep moving forward with your goals and don't let anything or anyone stop you. It's what Ralph would want.\"\n\n\"I promise.\" Patricia replied.\n\nAs of yet she still hadn't told Kenji that she wanted to study neurology as opposed to obstetrics. What she didn't know was if the change in study was even a possibility. Why she hadn't said anything yet, she didn't know except that she knew that he was looking forward to them practicing together and she didn't want to disappoint him. The other issue was that more schooling would be involved and she wanted another baby, something else that they hadn't talked about mainly because Kenji had another three and a half years of school to complete and then he had his residency and then he had to get his practice started....\n\n\"I have something for you, it's from Ralph.\" Abby was saying. \"I'll give it to you before I leave.\"\n\n\"Ok,\" Patricia replied wondering what it could be.\n\nAbby left soon after the kitchen was cleaned, kissing Patricia, the children and Kenji and bid Joel goodnight before leaving\n\n\"I can come over later.\" Joel said hugging her.\n\n\"I'm fine! So stay here and I promise to call you if I need anything.\" Abby replied.\n\nNothing that Joel said could change her mind. On her way out, she took a large envelope out of her purse and laid it on the living room table. \n\n\"That's for you and Patricia\" she said to Kenji before she walked out.\n\nThat envelope was a reminder to her that she needed to make sure that her own affairs were in order. For the most part, she felt fine and she intended to watch Kenji and then Patricia graduate from college. She might have to be carried in but damn it! She was going to be there not just for herself but for Ralph as well.\n\n*******\n\nThe children were in bed leaving the three adults alone.\n\n\"Joel, why don't we get started on our studies?\" Kenji asked.\n\nThat was Patricia's cue to start getting ready. The envelope lay forgotten on the living room table as Kenji, Joel headed toward the library, and Patricia went upstairs to take a shower and to insert the diaphragm. Afterwards she would read some more of the novel that she had been slowly making her way through.\n\nBoth men watched Patricia walk up the stairs before they went to the library.\n\n\"There is someone for you.\" Kenji said as they sat down.\n\n\"What?\" Joel asked his heart pounding.\n\n\"There is someone for you and you will be as happy with her as I am with my kirei.\"\n\nJoel realized what had just happened. Kenji in a very non-threatening way had just told him that he was very aware of his feelings for Patricia and he had not missed the \"my Kirei.\"\n\nThis seemed to be as good a time as any to talk about the possibility of his moving out.\n\n\"I think that you're right.\" Joel replied letting Kenji know that he was not a threat to his and Patricia's marriage. \"I was actually thinking about the possibility that I might find someone and have children of my own.\" he added.\n\nKenji smiled at him, the smile reaching his eyes. He was glad that Joel caught his meaning without him having to be blunt. \n\n\"I was also thinking about something else.\" Joel said.\n\n\"What is that?\" Kenji asked.\n\n\"I was thinking about finding my own place or renting a room from Abby if she'd let me.\"\n\nKenji didn't say anything as Joel continued.\n\n\"You, Patricia and everyone else have been so good to me but I think that you and Patricia want and need your privacy back.\"\n\nNow that Joel understood about Patricia, Kenji didn't see a real need for Joel to leave but he understood. The only real issue that he saw was that the children had come to love Joel and would miss him horribly. They hadn't quite gotten over the loss of Ralph and if Joel left....\n\n\"Joel, I understand and respect your decision but could I ask a favor of you?\"\n\n\"Anything!\" Joel exclaimed happy to be able to do something for Kenji.\n\n\"Could you wait to move until the semester is over? It will give us time to acclimate the children to the idea and it will give you some time to find a suitable place if Abby declines your offer.\"\n\nJoel gave it some thought. \"I can do that and I'll talk to Abby about renting from her in a few days.\" he replied.\n\n********\n\nIt was just past ten when Kenji decided that he had studied enough. He bid Joel a goodnight, went to the kitchen and filled two glasses with water to take upstairs with him. As he walked through the living room, he saw the envelope that Abby left and wondered about it. It would wait he decided as he climbed the stairs where Patricia was waiting for him.\n\nThe door to their room opened as soon as he reached it telling Kenji that Patricia had been waiting for him. He sat the glasses of water on the dresser and reached for her. He inhaled the scent of the only perfume that she ever used although she had others. This one was the scent of the very first bottle of perfume that he bought for her and whenever she wore it, he remembered the day that she first wore it. It smelled of flowers and as if it had been created just for her.\n\n'Kirei....\"\n\n\"Talk later.\" she interrupted as she pulled him further into the room by the buckle of his belt.\n\nKenji looked down at her, smiled and took a heavy breast in each hand gently kneading it as he allowed himself to be led toward the bed. Patricia had the belt undone by the time they reached the bed, his slacks were unbuttoned, unzipped and down over his hips by the time she had him turned around and sitting on the bed. His cock jerked in anticipation of what was about to happen. It had been several weeks since he had the pleasure of feeling her mouth on him and since he had last tasted her.\n\nIt was a reminder that they had to take care of each other and not fall into the pattern of making love quickly and falling asleep. No matter what else was happening around them, they couldn't ignore the physical part of their lives any more than they could afford to ignore the emotional part of it, to do so would only invite trouble and plenty of that was coming without them adding to it.\n\nKenji gasped as Patricia took the head of his cock into her mouth and swirled her tongue around it. His hips involuntarily jerked forward in an attempt to push his member further into her mouth. Instead of teasing him, Patricia took more of him in which surprised him because part of the pleasure for her was hearing him say her name as he begged her to end it and then in the next breath beg her to slow down because he wanted the torture to last.\n\n\"Kirei... not... yet... please...\" he begged as he felt the telltale signs of his impending release start at his toes and begin to make their way up his feet. If she stopped now.... \"Kirei!\" he called out again wanting but not wanting her to stop.\n\nPatricia knew by the way his cock was throbbing that they were approaching the point of no return and stopped much to Kenji's relief and frustration. She waited several minutes until his breathing slowed before starting again but this time she didn't stop even though he begged her to. It had been far too long since she cared for him like this and she vowed that it wouldn't be so long the next time.\n\nShe felt his hands on her head and felt him gently hold it still as he gently but firmly slid in and out of her mouth speaking in Japanese between the moans of pleasure. She had missed this, missed hearing those words that she knew were words of love mixed in with words of pleasure. She had never asked him what the words meant because it didn't matter and they added something to their lovemaking.\n\nShe moaned when the first taste of him touched her tongue. Kenji had released her head allowing her to take him as deep into her mouth as she could without gagging. His hands however hadn't left her face. He cupped her cheeks and stroked them with his thumbs while still murmuring softly in Japanese. Patricia sucked and licked until he was dry and whimpering for her. Without hesitating, she stripped off her nightgown and got onto the bed with him. This was one of her favorite parts. The closeness that they always experienced after making love had always been a high point for her.\n\nAs soon as she was close enough, Kenji grabbed her and kissed her not caring that he had just come in her mouth. He moved his lips all over her face, kissing her eyes, nose and cheeks until he found her lips again taking in her breath as he kissed her.\n\nGently he took her arms, raised them over her head, and held them in place as he looked into her dark eyes. \"You are my kirei forever.\" he murmured as he kissed her again and kissed her chest. For a brief second Patricia wondered what happened that he said that, in all of the times that they made love, he had never said anything like it. \n\n\"I know.\" she replied and then moaned as he took a nipple into his mouth and began to suck with the strong pulls that made the fluid that was accumulating between her legs run out of her and onto the bed.\n\nKenji released her arms and kissed his way down her body stopping to worship the belly that had carried their two children. As of yet he hadn't touched the part of her that he wanted so desperately to taste. He could smell her and knew how wet she was. All thoughts of teasing her as she had teased him flew out of his head the second he took his first taste of her in weeks.\n\nHe could hear her crying between the moans of pleasure, she had missed this part of their lovemaking too. Unable to hold off any longer, Kenji lapped at Patricia until he was sated and then latched onto her clit and began to suck, nibble and lick until she came crying out for him.\n\nAs her orgasm waned, he stayed where he was, his tongue still pressed against her clit which was throbbing like a heart beat. He gave it a soft kiss, got to his knees, positioned his now erect cock at her vaginal entrance and slid in. Once in as far as he could go, Kenji paused and closed his eyes before beginning to pump slowly and deliberately in and out of her. He opened his eyes to see Patricia staring up at him with a questioning look in her eyes. He smiled down at her and began to pump in earnest. A minute later, he collapsed on top of her crushing her to him with an intensity that startled her.\n\n\"Kenji?\" she asked when they caught their breaths and she was securely in his arms, \"what's going on and don't say nothing.\"\n\n\"Kirei....\"\n\n\"No you don't, talk to me.\" she urged.\n\nShe listened without interrupting as he told her about his concerns about her safety and finally Joel and his feelings for her.\n\n\"Joel? Me?\" she asked shocked not addressing the safety issue.\n\n\"Why are you so surprised?\" Kenji asked, \"You are beautiful, intelligent, compassionate and a woman that any man would be proud to have by his side as I am.\"\n\n\"But... I didn't know... you have to know that I love you and wouldn't dream of doing anything like that with anyone and I don't care who it is!\"\n\n\"I know that Kirei and what happened a little while ago was just a little insecurity on my part.\" Kenji replied.\n\n\"Insecure? You?\"\n\nKenji gave her a small smile, \"Yes kirei I do have insecurities.\"\n\n\"I don't know what to say to that except that if they're regarding me and another man you have nothing to worry about.\" she replied kissing his chest.\n\n\"Patricia, something is going to happen. I don't know when, how or who but that is where most of my insecurity lies, I am afraid that something is going to happen to you.\"\n\nThe fact that he called her by her given name frightened her more than anything else that he could have said. It meant that he was frightened for her.\n\n\"Like what?\" she asked.\n\n\"I don't know but please be careful.\"\n\nThey talked for the rest of the night about anything and everything. It reminded them of the days before they had children and before they started school. They found that talking went a long way toward alleviating but not erasing any anxieties about her safety.\n\n\"I vote that we do this once a week.\" Patricia said as she snuggled closer into Kenji's body.\n\n\"I would like to make an amendment to that.\" he replied as he kissed her head. \"I think that we need to take thirty minutes out of each evening to talk and once a week we spend at least one evening a week in bed just as we did last evening.\n\nThat issue decided, they slept for an hour before Kenji had to be up to get ready for school. Patricia was going to have a relatively easy day because her parents were coming over to spend the day with her and the children. She still hadn't told Kenji about the possible change in her plans but decided that it could wait until another time.",
        "**********\n\nWhile he showered and got ready for the day, Patricia packed lunch for him and Joel and made breakfast. When Joel appeared, she greeted him as she always did.\n\n\"Good morning!\"\n\nJoel looked at her trying to decide if Kenji had said anything to her about their discussion about his feelings toward her. He let out a sigh of relief when she greeted him as she normally did and saw the lunches sitting on the counter.\n\n\"Did Kenji mention that I might be moving?\" he asked.\n\n\"Yes he did but you know that you're welcome to stay here don't you?\" Patricia asked.\n\n\"I know and thank you but you and Kenji need your space and privacy, I'm going to talk to Abby about moving in with her.\" Joel said.\n\n\"You know, I think that's a great idea! I worry about her over there all alone.\" Patricia said.\n\n\"Then it's settled provided Abby agrees.\" Joel replied feeling oddly relieved, \"oh, did Kenji also mention that I would stay until classes are over?\"\n\n\"Yes and its fine.\" Patricia replied.\n\n********\n\nIt was the weekend before they knew it. Patricia was much happier with her first period class and Bernard had started to speak to her even outside of class but had continued to decline the offers of an introduction to Kenji and Joel.\n\nShe shrugged it off and went to meet Kenji for their break.\n\nThey were in the middle of making plans for the weekend when there was a commotion about a hundred yards to their left.\n\n********\n\nJoel was coming out of the building and went in the direction of the school's bookstore when he heard someone crying. He looked around to see if he could pinpoint where the sobs were coming from and headed toward the sound that was coming from around the corner of the building.\n\n\"You bitch!\" he heard a male voice say, \"You said that you were breaking up with him!\"\n\n\"I... I'm going to but I haven't had a chance!\" the female voice replied.\n\n\"Yeah? Well what did you do when he took you for a ride?\" the male voice asked angrily, \"Why didn't you do it then?\"\n\nJoel was about tot walk away deciding that it was a lover's quarrel when he heard the sound of flesh hitting flesh and the agonized cry of the woman.\n\nBefore he could stop himself, he walked around the wall to see one of Andrew's friends hitting a woman who he knew to be Andrew's girlfriend.\n\n\"Hey!\" he called out.\n\nErnie and Becca both looked at Joel in shock. Of all the people to interfere, he had been the last person that either of them would have expected.\n\n\"Get out of here Jew boy!\" Ernie hissed not releasing his grip on Becca.\n\n\"I.... I can't.\" Joel said softly. What he really wanted to do was to run as fast as he could but he couldn't. Not if he wanted to be worthy of someone, not if he wanted to start standing on his own two feet.\n\nErnie shoved Becca away from him and walked up toward Joel, \"Get the fuck out of here before I break your other hand.\"\n\nJoel swallowed hard but held his ground. \"I... I don't think that A...Andrew would...\"\n\n\"Andrew?\" Ernie sneered. He grabbed Joel by his shirt and threw him to the ground. \"What I want to know is why a fucking Jew is defending a cockwhore!\" Ernie exclaimed.\n\n\"A what......\"\n\n\"This bitch sucks cock for fun and to bribe guys! Did she suck yours so that you'd help her? What did you promise to do for her?\" Ernie asked as he kicked Joel in his side. \"She should have chosen better!\" he exclaimed as he kicked again.\n\nJoel rolled out of the way and ended up in full view of several students. Suddenly students all of whom were shouting and cheering whenever Ernie got another kick in surrounded him and Ernie.\n\n\"Stand up you Jew bastard!\" Ernie screamed.\n\nJoel lay on the ground not moving hoping that Ernie would just walk away. As he lay there, he began to think about one of the things that Kenji told him.\n\n\"You cannot allow people to treat you this way.\"\n\nIt was now or never.\n\nSlowly Joel got to his feet. The crowd went wild as Ernie gave Joel a dismissive smile and then changed his mind; he was going to kick this Jew's ass.\n\n*******\n\n\"What's happening?\" Patricia asked.\n\n\"I don't know.\" Kenji replied as he stood up. \"Come on, let's go see.\" he said offering Patricia his hand.\n\nBy the time they got to the crowd, they couldn't see but knew that there was a fight. Uninterested, Kenji turned to pull Patricia away from the crowd when he heard someone say, \"Come on Jew boy!\"\n\nA feeling of dread filled his stomach; he knew that it had to be Joel. He looked down at Patricia, he didn't want to leave her in the crowd alone but he had to know that it was Joel. Not knowing what else to do, he pulled Patricia through the crowd until he could see who was fighting hoping that he was wrong.\n\n\"Oh my god.\" Patricia whispered as she looked at a bloody heap lying on the ground.\n\n********\n\nJoel got in one good hit before Ernie began to beat him landing blows wherever he could. All he could do was drop to the ground, curl up in a ball, cover his head and pray for it to be over. He could hear the crowd screaming for him to get up and he wanted to, he wanted walk away under his own steam.\n\n\"What's wrong Jew?\" Ernie taunted as he started to kick him again.\n\nJoel braced himself for the kick that never came. The crowd had gone silent and he wondered why. He risked a peek through his arms and saw Kenji standing face to face with Ernie who was no longer looking so brave. The next thing that happened was that he heard Patricia calling his name. He didn't reply because as much pain as he was in, he wanted to see how Kenji handled Ernie.\n\n\"So now we have the Jap!\" Ernie said loudly, \"You suck his cock too?\" he shouted back at Becca who had the grace to turn beet red as she realized that if everyone didn't know about her, they did now.\n\nHe turned back to face Kenji who hadn't moved.\n\n\"You want your ass kicked too?\" he asked.\n\n********\n\nJoel started to get up but Patricia stopped him.\n\n\"What are you doing?\" she asked as she pushed him back down.\n\n\"I... I have to get up.\" he whispered. He knew that if he didn't, that he would never stand up for himself again.\n\n\"Joel....\"\n\nHe rolled away from her, slowly got to his knees holding on to his sides. When Patricia offered to help, he waved her away. Finally, he was on his feet swaying from side to side as if he was drunk. He fastened his gaze on Kenji's back and slowly stumbled toward him only vaguely hearing the roar of the crowd. He took one agonizing step after another until he stood next to Kenji who was still regarding Ernie with something that Joel had never seen him display before-anger.\n\nErnie was about to say something when Andrew's voice rang out.\n\n\"What in the hell is going on here?\"\n\nHe looked over at Ernie, then Kenji before finally looking at Joel. \n\n\"Get the fuck out of here.\" he said.\n\n\"No, I'm not going.\" Joel said standing as tall as his aching body would allow.\n\n\"Joel, you have made your point, it is time to go.\" Kenji said softly and placed a hand on his shoulder.\n\n\"But....\"\n\n\"It is over for now.\" Kenji said, \"You have made your stand.\"\n\nReluctantly Joel turned and walked away under his own strength. It was important that people see that he didn't need Kenji or Patricia's help. The crowd parted as they walked through but no one touched or spoke to them as they passed. \n\nPatricia went ahead, gathered her and Kenji's things, and headed for the car.\n\n\"Class.\" Joel whispered.\n\n\"Missing one class will not hurt anything.\" Kenji said.\n\n\"Class.\" Joel said and headed in the direction of the building where their classroom was.\n\n\"Kenji?\" Patricia asked worriedly.\n\n\"I'll stay with him and when your class is over meet us in front of our classroom.\" Kenji replied.\n\n\"Shouldn't we take him to see Paul?\" she asked.\n\n\"Yes but he will not go.\"\n\n\"Make him!\" Patricia demanded crying.\n\n\"Kirei, today Joel stood up and faced difficult odds. He wants to send a message and that message includes that he is no longer afraid and that he will not hide.\"\n\n\"That's just stupid!\" Patricia replied angrily.\n\n\"We will take him to Paul as soon as class is over.\" Kenji assured her as he watched Joel walk unsteadily into the building.\n\n********\n\nAndrew watched as Kenji, Joel and Patricia walked away and wondered what happened that made the Jewish man grow a set. He looked over at Ernie and walked over to him noting that he was swallowing nervously. He also noticed Becca standing off to the side looking equally as nervous.\n\n\"What happened?\" he asked Ernie when he reached him.\n\n\"I.... I don't know... he butted in on me and Becca's conversations and....\"\n\n\"He touched me!\" Becca called out \"and Ernie stopped him.\" she added.\n\n\"Is that true?\" Andrew asked not believing it. \n\nErnie's face had gone a brilliant red, one of the sure signs that he was lying.\n\n\"Sure, that's what happened.\" he replied.\n\nAndrew looked at Ernie and smiled at him, \"Thanks for looking after my girl.\" He said.\n\nLater when Becca wasn't around he was going to find out the truth but for now, he needed to maintain control.\n\n\"Listen up!\" he said to the group surrounding him, \"Leave them the fuck alone! If I find out that they've been touched there's going to be hell to pay is that understood?\"\n\nSatisfied that his orders would be obeyed, Andrew headed toward class. It wouldn't look right if all of them missed. He was surprised to admit that he felt a little respect for the Jew; he had taken one of them on knowing that he would get his ass kicked.\n\nJoel and Kenji were in the room when Andrew and his crew came in. To his credit, Joel didn't even flinch when he heard the voice of the one who beat him. Kenji kept one eye on Joel ready to move if he began to have trouble and kept his ears tuned toward Andrew and his group. He missed most of the lecture but wasn't worried about it. From what little he heard it was on a subject matter that he was familiar with and knew well.\n\nAfter class, Kenji packed up their books and waited as Joel got to his feet.\n\n\"I did it, I got my ass whipped but Kenji, I did it! I didn't run!\"\n\n\"But you didn't lose.\" Kenji replied.\n\n\"Of course I did!\" Joel replied, \"Look at me!\"\n\n\"You may have lost the physical battle but Joel; you won a much more important one, a personal one. We are proud of you.\"\n\n\"Why is it that as much as I hurt, I feel so damned good?\" Joel asked.\n\n\"It is because you stood up for yourself.\" Kenji replied, \"We need to go, Patricia is waiting for us and I promised her that we would take you to see Paul.\"\n\n********\n\n\"Jesus Christ son!\" Paul exclaimed when he examined Joel. \"And I suppose you don't know who did it?\" he asked.\n\n\"I... yes sir I do but I'm not saying.\" Joel replied as Paul palpated his rib area and sides.\n\n\"Doesn't matter, I already know who did it.\" Paul said as he sat back. \"You're lucky. The ribs are bruised but not broken and you're going to look and feel as if you've gone a few rounds with a heavyweight fighter but you're going to be all right. Just take it easy for the next few days and go to the hospital if you have any trouble breathing.\"\n\n\"Yes sir!\" Joel replied wincing as he stood up.\n\n\"You three watch yourselves.\" Paul said as he helped Joel with his shirt. He had been the one to report Hathaway after slipping in and observing his class not once but twice. He had also been hearing things from other faculty members of which only one agreed to go to the dean with him.\n\nPaul watched as the three of them walked away and looked at his watch. He had a meeting with one Bernard Hammond who was the son of a friend who happened to be taking the same classes as Patricia. It was actually he that told Paul what was going on. There was only one concern that Paul had about Hathaway losing his job and that was that he would blame Patricia for it and find a way to go after her.\n\n\"Shit.\" he cursed as he realized that he might have just inadvertently placed Patricia in danger. After the meeting with Bernard, he would call and talk to Kenji.\n\n*********\n\nThe walk to the car was agonizingly slow. Kenji wanted to run ahead and get the car but he didn't want to leave Patricia and Joel alone. The parking lot was deserted when they got there and much to Kenji's pleasure and surprise, the car hadn't been touched. Just to be safe, Kenji examined the tires of the car. Deeming them untouched, him and Patricia helped Joel into the back seat.\n\n*********\n\nAndrew watched the trio as they made their way to the car. Once again, he was reminded of the fact that none of his supposed friends would stand up for him as the Jap had stood up for the Jew, which reminded him, he and Ernie had to have a little chat. He waited until they drove off before heading to his own car, Ernie and the gang was waiting for him.\n\n********\n\nJohn and Hattie were waiting for them when they got home worried but not quite panicked but getting close. Hattie took one look at Joel and went into full mother mode.\n\n\"My lord! You poor baby!\" she exclaimed as she grabbed a washcloth.\n\nJohn rolled his eyes and let her finish fussing before he asked what happened.\n\n\"Hurt like hell but feels good don't it?\" he asked when Joel finished telling him what happened. \"I knew there was a backbone in there!\" he added.\n\n\"It sure does feel good.\" Joel agreed although he hoped that he never went through anything like that again.\n\n\"I got an idea.\" John said, \"Why don't me and Kenji there teach you a thing or two? I used to be a boxer and Kenji can teach you some more of that stuff he does.\"\n\nJoel felt a surge of excitement, his pain temporarily forgotten as he considered John's offer.\n\n\"I accept!\"\n\nKenji and John looked at each other and nodded, this is what they had been waiting for.\n\n*********\n\nErnie sat between Brad Monk and Dean Elderman. His stomach churned with nerves, he knew that Andrew hadn't believed Becca when she said that the Jew had tried to touch her. In retrospect, he realized that it was a stupid lie and that they would have done better if they had stuck to some semblance of the truth if not the truth itself. There was no way in hell that the Jew would have gone anywhere near Becca if he hadn't been trying to help her, Andrew and everyone else knew it. One thing was for sure, he wasn't taking all the blame for this and he sure as hell wasn't about to be disciplined on Becca's behalf, the bitch had lied to him. She had no real intentions of leaving Andrew, she had used him in order to get him to write and draw on the desks of the Jew and the Jap and if he was punished, he was going to take it out of her hide. \n\n********\n\nErnie wasn't the only one who knew that Andrew didn't believe the lie. Becca had no plans of saying what she did, it just slipped out and now that impromptu lie was going to come back and bite her in the ass. She could only imagine what was going to happen, Andrew would talk to Ernie and the fool would tell the truth in hopes of saving his own ass.\n\nIt occurred to her that between the Jew and Ernie, the Jew was the one who showed true strength but not only that, he had come to her defense. Something that no one not even Andrew had ever done for her but that was beside the point, he was still a Jew. If she was sorry about the lie, it was only because she hadn't gotten away with it. \n\nThe question was what would Andrew do once Ernie told him the truth? Would he accept that she did it because she loved him so much and had been hurt? No, she decided, he would not buy it because he would not care. Maybe now would be a good time to go visit those relatives down south. She would drop out of school, she was failing anyway and had been biding her time until Andrew proposed to her and leave town. She might have thought about staying if there was even the slightest chance of that Andrew could love her. But that wasn't going to happen her ill thought out plan assured it.\n\nShe practiced in her head how she was going to tell her parents that she was wasting their money by dropping out of school and that she was in fact failing all but one class. After several minutes she concluded that there was no way that she could tell them that they wouldn't go nuts. \n\nThe next question was, did she do it now or wait to see what happened with Ernie? She debated for over an hour before deciding to wait.\n\n********\n\n\"Care to tell me what really happened today?\" Andrew asked Ernie as he sat down across from him.\n\n\"It's like Becca said, the Jew tried to touch her and I helped.\"\n\nAndrew looked at Ernie and shook his head.\n\n\"I'm not buying it.\" he said. \"You and I both know that that Jew boy was afraid of his own shadow. There's no way in hell that he would have touched something that he knows is mine so I'm going to ask you again, what in the hell happened that got the Jew riled enough that he confronted you?\"\n\nErnie's face turned bright red as he realized that he had to tell the truth.\n\n\"I... we were arguing.\" Ernie said quietly, \"and I guess he heard us.\"\n\n\"He picked a fight with you because he heard you and Becca arguing? That must have been one hell of an argument, what was it about?\"\n\n\"A misunderstanding.\" Ernie replied already anticipating the next question.\n\n\"About what?\" Andrew asked.\n\n\"Ummm it, private.\" Ernie replied.\n\nAndrew nodded his head and a few seconds later, he and Ernie were alone.\n\n\"Is this private enough?\" he asked as he scooted closer.\n\nErnie nodded his head and spilled his guts without being asked another question.\n\n\"It was you who did the star and graffiti?\" Andrew asked.\n\n\"Yes.\"\n\n\"And for a blowjob from my girl?\" Andrew asked his tone icy.\n\n\"S... she said that she was going to break up with you and....\"\n\n\"Is that what the misunderstanding was about? And don't lie.\" Andrew warned.\n\n\"I... I got really mad and I hit her.\"\n\nAndrew's eyes hardened. That he had already dumped Becca was of no consequence. It wasn't officially over until he said so and he hadn't said so. That Ernie had done something that even he wouldn't do fueled his anger further but that he and Becca had screwed up the time table for the Jap and the Jew was the final straw.\n\nHe stood up, went to the door and called the other two men back in. \n\n\"It seems that Ernie here thought it was more important to have his cock sucked rather than obey a direct order.\" Andrew said. \"Not only that, it was Becca who he let suck his cock. And that was like a slap in the face. Their little session just set us back in how soon we dealt with the melting pot.\"\n\n\"I'm sorry, I won't do it again!\" Ernie said regretting that he had allowed himself to be used by Becca.\n\n\"Yeah well, here's the problem, you didn't come to me when she came to you.\" Andrew said as he walked over to Ernie and punched him in the face. \"You ruined any plans that I had for them for a fucking blow job!\" he punched Ernie again in the face. Hs shook his hand, looked at the to men, nodded and walked out confident that they wouldn't go overboard but would make sure that he got the message and would get Ernie home.\n\nHis next stop was to see Becca.\n\n*******\n\nBecca's anxiety level rose with each passing moment. She jumped when she heard the doorbell and Andrew's voice as he amiably chatted with her parents before asking to speak with her. She ran a brush through her hair, touched up her lipstick and went down the stairs with a fake smile plastered on her face. Andrew greeted her with a fake smile of his own.\n\n\"Are you available for a ride?\" he asked.\n\n\"Sure... let me grab a sweater.\"\n\nSeveral minutes later, they were at the same vacant lot where Becca had made her feelings for Andrew known.\n\n\"Do you know what I hate?\" he asked as he shut off the engine.\n\n\"Liars and cheaters.\" Becca said softly. She didn't offer to suck his cock or make apologies or promises. He wouldn't listen to her.\n\n\"Right, liars and cheaters.\" he replied, \"is there something that you want to tell me?\"",
        "Becca started to say no and then decided on the truth as she saw it.\n\n\"Admit it! You're jealous of that Jap and his black bitch! I see how you look at her when you think no one's looking!\"\n\nAndrew fought to keep his expression neutral.\n\n\"You haven't been interested in me since you first saw her! Last night, did you come because you were thinking about her?\"\n\n\"Shut up Becca.\" Andrew said not liking how close to the truth she had gotten.\n\n\"Why? Is that the reason?\" she asked crying and too angry to care that she was treading on thin ice. \"And you know what? Yes, I sucked Ernie off and yes I asked him to mess with the Jap and the Jew and do you know why? You're too goddamned afraid to! You walk around talking about how your father was a war hero and maybe he is but you Andrew Kelley are a wannabe! You talk a good talk but that black bitch is still here along with her mongrels! I loved you! All you had to do was at least pretend that you cared just a little... oh but wait! The great Andrew Kelley hates liars but which of us is really lying? Which of us is afraid of doing what needs to be done? But you know what I think?\" Becca asked,\n\n\"I think that you want the bitch for yourself but you won't admit it. I think that the only reason that they're off limits is because of her! What will your so called friends think when I tell them that you have a thing for the Jap's wife? What will Hathaway say? Hmmm? I bet by the end of tomorrow that there'll be another leader. Good bye Andrew, I hope that the bitch is worth it.\"\n\nShe started to get out of the car but Andrew stopped her.\n\n\"You've had your say now I'm going to have mine.\" he said holding her arm in a viselike grip. \"Your new boyfriend told me everything and it's to his credit that he did although he did try to lie about it. In one afternoon, you and he managed to blow what plans I had to hell and back. Ernie won't be back at school for a few days because... well if you go to see him you'll know why.\"\n\nBecca's mouth went dry; she could only imagine what happened to him.\n\n\"As you know, I don't believe in hurting women so this is what's going to happen, you're going to stay the fuck away from me and anyone in my group and that includes Hathaway. If anything happens to anyone in that little melting pot, I'll hold you personally responsible and I'll have no compunction about sending someone who doesn't mind hurting women to you for a visit. If I hear one little rumor about anything, I'll know that that it came from you... Am I clear or do I need to prove my point?\"\n\nBecca tried to pull free so that she could get out of the car but Andrew held on to her.\n\n\"You didn't answer the question.\" Andrew said calmly.\n\n\"Fuck you and your .....\"\n\nAndrew whistled and waited. After a few moments, Brad and Dean appeared at the far end of the back parking lot. It was at that moment that Becca realized that Andrew meant what he said, he really could and would have her hurt and that he wouldn't feel remorse. He would justify dealing with her being hurt by saying that he wasn't the one who did it. She also wondered for the first time why she had been so attracted to him. Part of it was his looks, part of it was because he was popular but mainly it was because of his politics and that she thought that he would go far. \n\nHe was a coward who was afraid of more than he would or could ever admit to.\n\n\"One more time.\" Andrew said, \"Do you understand what will happen if you interfere with us in anyway?\"\n\n\"Y...Yes.\"\n\n\"Do you understand that the Takeda's and the Jew are off limits to you and anyone else who you're thinking about involving?\"\n\n\"Y...yes.\"\n\n\"Do you understand what will happen if I hear one rumor about me or anyone in my group?\"\n\n\"Good, I'll take you home and remember what I told you. One more thing, stay away from Hathaway got it?\"\n\nBecca nodded, this was an unfamiliar Andrew and he scared her. \"I got it.\" she said softly.\n\nAndrew nodded at the two men, started his car and drove Becca home without saying another word to her.\n\nBecca got out of the car and didn't look back. If Andrew thought that he had seen the last of her, he was sadly mistaken. This one time taught her a lesson; she couldn't afford to be impulsive. She would do as she planned and head south to visit relatives, she simply couldn't face the stares and whispers that would plague her until someone or something else came along.\n\n*********\n\nAfter his meeting with Bernard, Paul swung by Kenji and Patricia's house. He had talked with Bernard who finally admitted that he wasn't comfortable with sitting with Patricia in class.\n\n\"You weren't supposed to that!\" Paul snapped and then backed off. \"All you were supposed to do was introduce yourself to her.\"\n\nA few minutes later, Bernard left feeling better that he didn't have to sit with Patricia but was all right with just saying \"hello.\" Paul sat at his desk for a few minutes before leaving to go to see Kenji and Patricia.\n\nThey had just tucked the children in when he showed up. After declining the offer of refreshments, Paul told them about Hathaway and Bernard,\n\n\"So the only reason Bernard talked to me was because of you.\" Patricia said softly.\n\n\"Yes.\" Paul said, \"but if it counts for anything, he really does like you he just....\"\n\n\"I get it.\" Patricia said wearily. \"He doesn't want to be seen with us because of Andrew and his friends.\"\n\n\"That's the gist of it.\" Paul said sadly, \"but I want you to be careful. I've been hearing rumblings about Hathaway and his extracurricular activities.\"\n\n\"Kenji thinks that he might blame me because he lost his job.\" Patricia said.\n\n\"That is a very real possibility and one that I hadn't thought about when me and another faculty member went to the dean.\" Paul admitted. \"My concern at the time was that he would flunk you out of his class. Patricia I'm sorry if I made things worse.\"\n\n\"You didn't and thank you for your help because you and I both know that Hathaway would have succeeded if you hadn't stepped in.\" Patricia replied.\n\n\"You're welcome and let me reiterate, please be careful. How's Joel?\" Paul asked changing the subject.\n\n\"He is still in considerable pain but quite proud of himself.\" Kenji replied as he looked at Patricia out of the corner of his eye.\n\n\"Kenji, you be careful too.\" Paul said as he stood to leave. \"One more thing,\" he said before he walked away, \"there are people who are on your side, they're just afraid to say and show it.\"\n\nPatricia knew that Paul meant for the statement to be comforting but it wasn't. It was like someone saying that there was water or food available but then there was no way to get it. She didn't convey her thoughts to Paul because she didn't want to hurt his feelings but also because she knew that he understood.\n\n\"Paul thank you for coming and for your continued friendship and support of us.\" Kenji said offering his hand.\n\n\"Yes, thank you.\" Patricia said as she walked up to Paul and hugged him.\n\nAfter Paul was gone, Kenji looked at Patricia. There was very little of the sparkle that he loved seeing in her eyes. The beating that Joel took was part of it, the constant stress of never knowing what was going to happen was the rest of it. What she needed Kenji decided, was to be cared for.\n\n\"Come Kirei, let me care for you,\" Kenji said holding out his hand to her. He led her to the bathroom, turned on the shower and helped her undress. \"In you go.\" he said, \"take your time, I will care for the children.\"\n\nAs soon as Kenji closed the bathroom door, Patricia began to cry. She almost missed the days when they had to hide in the house in some ways; it was so much easier than now. At least they knew whom they were hiding from and could take precautions. And poor Joel... She cried through the shower but by the time she got out, her resolve was back.\n\n\"We can do this!\" she said as she dried off and put on her nightgown. She kept talking to herself as she brushed her hair and then her teeth reminding herself of all that they had been through together and that they had always prevailed. \"And we will this time too.\" she murmured.\n\n\"Better?\" Kenji asked from the bathroom door.\n\n\"Better.\" she replied. \"Where are the children?\" she asked.\n\n\"They are at Abby's house along with Joel.\" Kenji replied.\n\n\"What? What are they doing there?\" she asked surprised.\n\n\"It has been too long since we have had the house to ourselves and while you were in the shower, I called Abby to see if she could care for them for two nights and Joel volunteered to help her.\" Kenji replied.\n\n\"Two nights? But Joel....\"\n\n\"It is done.\" Kenji said, \"We need this and we need to sleep.\"\n\nIn spite of her protestations that she wasn't tired, Patricia was asleep almost as soon as her head hit the pillow and Kenji wasn't too far behind her.\n\nThe two days were gone before they knew it but it was what they needed. The sparkle was back in Patricia's eyes and they were both well rested and anxious to see Ralph and Marie. Abby brought them back on Sunday afternoon, stayed for lunch and fixed a plate for Joel who was still in a lot of pain but was still proud of himself.\n\n\"And he should be.\" Abby said after updating them on Joel.\n\n*********\n\nThe weeks following the fight between Joel and Ernie were quiet. Ernie wouldn't even glance in Kenji and Joel's direction. The only evidence of the beating that he received courtesy of Andrew and the crew was his nose. It had been aquiline and perfectly shaped, now it was bent slightly to the left.\n\nJoel now stood taller and walked with more confidence. The boxing lessons from John and martial arts lessons from Kenji went a long way toward building his self-confidence as well as the fact that he was bulking up because of the exercise and good food.\n\nWhat no one missed was that Becca was gone. Just as she feared would happen, her name was all over the campus and the whisperings weren't kind. Even the girls who were supposedly her best friends were giggling and sharing secrets that they swore to keep. Becca was unaware of all of this; she was long gone visiting family in the south for the summer. Unfortunately, for her, her parents didn't take the news of her not returning to school well but overrode her decision.\n\n\"You will come back here and finish!\" her father snapped, \"end of discussion!\" Becca was on a train a few days later headed to South Carolina.\n\nThe only two people that her leaving mattered to was Ernie, as he hadn't collected on what he thought she owed him and Andrew. For him her leaving meant that she wouldn't be here to spread what he convinced himself to be lies. He didn't want Patricia Takeda and she wasn't the reason why he hadn't moved on the Jap and the Jew.\n\n********** \n\nFinally, spring break had arrived much to the relief of Kenji, Patricia and Joel. Several days of relaxing was what all of them needed. Joel for all practical purposes had already moved to Abby's house but spent some nights at Kenji and Patricia's house when their study sessions went too late. By the time he finally moved, Ralph and Marie had gotten used to the idea and the fact that Joel sometimes spent the night helped.\n\nBy mutual agreement, Kenji and Patricia decided that they wouldn't as much as look at their books. They would spend those days relaxing and spending time with their children and family. As of yet Kenji hadn't mentioned the trip to Manzanar or teaching Patricia how to drive, He was hesitant to start filling up their precious free days although they would be good things to do. \n\nOf the two activities, it was the trip to Manzanar that Kenji dreaded but he wanted his children to know the history of the place, he wanted them to know this of his Patricia's history. \n\n\"What are you thinking about?\" Patricia asked as she out a cookie sheet full of freshly baked cookie sheets on the counter.\n\n\"I was thinking that it is time that you learned how to drive.\" Kenji replied as he took a hot cookie from the sheet.\n\n\"Really?\" Patricia asked excitedly.\n\n\"Yes Kirei, really.\" Kenji replied smiling at her.\n\n\"When? Now?\" Patricia asked.\n\nKenji laughed at her enthusiasm; it remained one of the things that he loved most about her.\n\n\"Will tomorrow be soon enough?\" he asked taking another cookie.\n\n\"Yes!\" Patricia squealed and hugged him. \"Tomorrow is perfect!\"\n\n****** \n\nSunday morning came and Patricia was up early anxious to have her first driving lesson.\n\n\"Kirei, it is only six, Nick and mother will not be here until ten, come back to bed; I miss you.\"\n\n'I'll go make breakfast!\" she replied as she threw on her house robe.\n\nKenji got up, looked down at his erection and shrugged before getting dressed for the day. He could have stayed in bed but there was no real point to it if Patricia wasn't in bed with him. He could hear her puttering around the kitchen getting ready to make what he considered the best breakfast, eggs cooked over easy, pancakes and fried potatoes with tea.\n\nHe peeked in on the children before heading to the bathroom. Satisfied that they would sleep for a while longer, he hurried to the bathroom and then down the stairs for one of his guilty pleasures. Patricia had a habit of singing while she cooked, and as soon as the meal was prepared, she stopped singing. The thing was she only did this in the morning when she thought that she was alone.\n\nKenji closed his eyes and listened to her soft but melodic voice as she sang a rendition of Nat King Coles's \"I love you for sentimental reasons\" sometimes it would be \"let it snow, let it snow\" and it would be July. He never knew what song that she would be singing and it didn't matter, he loved it. He never let her know that he was listening because he knew that she would stop.\n\nAs soon as she stopped singing, he knew that breakfast was ready.\n\n\"It smells good.\" he said walking into the kitchen and hugging her.\n\n\"You could have stayed in bed.\" Patricia replied already knowing that he wouldn't have.\n\n\"I missed you, sit and let me serve you.\" Kenji said taking the plate from her with a kiss.\n\nPatricia sat down and waited with one ear listening for Marie who was always awake before her big brother. She was surprised that they managed to get through breakfast before they heard little footsteps coming down the stairs.\n\n\"Mama?\"\n\n\"In the kitchen baby.\" Patricia called while smiling at Kenji.\n\n\"Why can't it always be normal like this?\" Patricia wondered as she thought about Andrew Kelley, Hathaway and Lawrence Goodman. She stopped herself from thinking any more about them deciding that she wasn't going to let them ruin these moments. It was the moments of normalcy that had gotten them through the war and it was moments like these that would get them through whatever was coming next.\n\n\"Come pretty one.\" Kenji said gently, \"I will fix your plate.\"\n\nMarie gave Patricia a hug before going over to Kenji to be picked up for her morning hug and kiss. By the time Kenji finished fixing her a plate Ralph had appeared. He kissed and hugged Patricia, then Marie before bowing to Kenji and then hugging and kissing him.\n\nHe was growing into a tall handsome boy looking very much like his father but more like his mother in personality. Patricia watched him and already knew what the future held, an endless number of girls chasing him and him driving them to a distraction because he could be aloof. In that way he was very much like his father but then like his father, he was affectionate and those he loved knew that they were loved. Catching her looking at him, Ralph smiled at her revealing a little of the rarely seen mischievous side of him and the dimples that would become more pronounced as he grew up.\n\nPatricia sighed as she looked at Marie and almost felt sorry for the young men that would come to court her of whom she was sure would be many. A very protective father and mother as well as an older brother would carefully scrutinize each of them. Patricia could already see what Marie would look like as an adult, she would be beautiful with her Japanese ancestry giving her an exotic look. With a start of pleasure, Patricia realized that she was thinking of the future in a positive way.\n\nThings were going to get better. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "japanese",
        "racism",
        "kenjiro",
        "patricia",
        "joel"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-05"
}