{
    "title": "Surefoot 02: Imbarrazzo",
    "pages": [
        "USS Surefoot, Deck 2, Alpha Squad Quarters:\n\nJonas was certain he had felt more physically exhausted in his life. Damned if he could think of when.\n\nAlpha Squad had woke up an hour before, at 0630 hours, determined to take advantage of the quiet hours and get a workout in the gym. Which was fine, usually; physical fitness was a necessity the more sedentary Jonas accepted as part of being in Starfleet. But then Eydiir had volunteered to provide the rest of them with instruction - and the Capellan proved to be just as tough as the worst drill instructors back at the Academy, all the while demonstrating how fit she was herself. Even Neraxis was cursing between ragged breaths, and she was the one majoring in Security.\n\nEydiir was a mystery to Jonas. She came from a primitive society that was exposed to the rest of the Galaxy by early space travellers before the introduction of the Prime Directive, though they managed to retain their cultural identity, living in nomadic tribes and settling disputes with duels. Capella had become a protectorate of the Federation, and many Capellans had joined Starfleet as Security officers, their size, stamina and demeanour seemingly making them ideal.\n\nBut Eydiir had joined to study medicine, with the justification that the fight against injury or disease was every bit as valid as that against Klingons or Cardassians. And, she reasoned, the physical well-being of the fellow members of her Squad was included in that.\n\nBut damn it, did she have to be so relentless at it?\n\n\"I am going... to crawl into... that mess hall,\" Neraxis was promising hoarsely as she undressed, her cerulean skin beaded with sweat. \"And I am going to eat everything. All the food, the chairs, the tables... you too, Scrappy, if I can get a good hold of you.\"\n\nEydiir was nearby, looking none the worse for wear for her workout. \"Pegging out would defeat the purpose of this morning's physical training.\"\n\nBeside her, Sasha was pulling up the bottom of her T-shirt to mop her brow, revealing a pale pink midriff. \"It's 'pigging out'. Pigs are a Terran mammal with a reputation for overeating.\"\n\nJonas looked away, afraid of being caught watching. It had been three days since their arrival on board the Surefoot, working and studying under the AWE Program that took them out of Starfleet Academy and into the real world. It had become the most exciting time of his life, as exciting as his first spacewalk when he was a kid, helping out his mother and her crew in her salvage company. And his friends in Alpha Squad were the best, better companions than he had known in his first year as a cadet - even Giles, when he wasn't being a smarmy jerk.\n\nBut there were times, like this, when the female members of the Squad seemed so... casual... about undressing, about hopping in and out of the sonic showers... they weren't flaunting themselves, or doing anything enticing or flirtatious. Far from it; they were professional, and rightfully expecting the same from their male comrades.\n\nAnd Giles seemed cool about it all as well - but then he was tall, broad-shouldered, blonde and full of teeth, a poster boy for Starfleet Academy. And Kitirik, the only Qarari in Starfleet let alone their Squad, was not bothered by what humanoids looked like without their clothes. Curious, maybe, but not bothered.\n\nIt wasn't fair! Why did Jonas have to be the only self-conscious one among them?\n\nHe started at a pair of blue fingers snapping in front of him. \"Hey, Scrappy, you okay?\"\n\nHe nodded absently. \"Yeah, just aching from those shoulder rolls.\"\n\nNeraxis grinned, standing there with a towel wrapped around her, leaning in and whispering, \"Yeah, I'll have a word with Sasha, see if she can get Tall Dark and Dour to ease up next time.\" She patted him on the shoulder. \"Come on, better get in line.\"\n\nHe nodded, waiting until she turned away before dropping his exercise trousers, leaving himself in boxers; he was not prepared to go all the way, and he didn't care what anyone said about it.\n\nThere were twin sonic showers in their bathroom, and Sasha had set up a random rota for their use in the morning, with Kit and herself in first, while others used the time waiting for whatever ablutions they performed at the twin sinks. Jonas felt the vibrations from the shower through the adjacent wall he was leaning against, a somnolent effect that conspired with his fatigue to make him snooze standing up - until he moved, and felt more protests from his shoulder and neck muscles. Who needs to roll on the floor, anyway?\n\n\"Jonas.\"\n\nHe looked up; Eydiir was standing behind him, not appearing sweaty or tired or anything normal, of course. Her usual stoic expression, however, now displayed what looked like sympathy, as did her tone. \"I realise you are not accustomed to the levels of exertion that some of us are. Yet you persisted without complaint, which was more than Giles did; for a while, I thought his mouth obtained the most exercise.\"\n\nAt the sink, Giles stopped splashing beard suppressant on his face to note, \"I'm standing right here while you're talking about me.\"\n\n\"Indeed.\" She focused on Jonas again. \"I just wanted you to know that I admire your resolve.\" She nodded at his shoulder. \"But it's obvious you are in pain as a result. Here, allow me.\"\n\n\"What? No, it's okay-\"\n\nBut she reached up from behind and put her hands on him, fingers kneading strongly. A wave of initial pain ran through him... quickly replaced with relief, as her efforts released the tension and knots, making him close his eyes and relax.\n\n\"Hey, I get the next go with those Magic Hands,\" Neraxis quipped.\n\n\"No sorcery is involved, and I am not as familiar with Bolian musculature, but I will endeavour to learn more. Is this working for you, Jonas?\"\n\nA sound from the sink made Jonas open his eyes again, as Giles was staring in his direction, guffawing and declaring, \"It sure looks like it's working!\"\n\nJonas blinked, confused - what the hell was he talking about? - just as one of the sonic shower doors slid open, and Sasha stepped out, towel around her. \"What's going on?\"\n\nJonas' heart leaped into his throat, and he didn't have to look down to know what everyone else was staring at. He caught Sasha's eyes, saw the embarrassment there, the embarrassment that mirrored his own.\n\nNow Kit emerged, wrapped in his own towel. \"Respected friends, I-\" Then he stopped, nonplussed. \"Friend Jonas, are you suffering from some sort of an allergic reaction?\"\n\nThat broke the ice, making some of them giggle, or even laugh out loud.\n\nBefore he could die of mortification, Jonas dipped out of Eydiir's grasp and rushed back to the sleeping area to get dressed, not caring if he stank for the rest of the day.\n\n\"Jonas?\" Neraxis followed him in, still clad in a towel. \"Hey, Buddy, it's no big deal.\"\n\n\"I know.\" He couldn't look at her, afraid he was now as red as she was blue.\n\n\"I've got six brothers,\" she reminded him mildly, putting a hand on his shoulder. \"It's nothing I haven't seen before.\"\n\nHe pulled away from her, carrying his combadge instead of staying to pin it on, still unable to look at her. \"Gotta go.\"\n\n\"Buddy-\" She reached out for him again.\n\nBut he dodged and almost rushed out, ignoring the others as he exited into the corridor, wishing for an amnesia virus to strike them all, or a spatial anomaly to swallow him up.\n\nThe remaining Alpha Squad members looked at each other with mixed measures of confusion and chagrin, the perplexed looking Kit's throat turning yellow-red. \"Why did Friend Jonas leave? I thought we were meant to breakfast together? Was he going to Sickbay?\"\n\n\"We, ah...\" Sasha fought to control her ongoing blushes as she looked to the rest of the Squad. \"We should get dressed and get ready for our shift. And maybe Eydiir can explain to you what happened.\"\n\nBetter her than me, Sasha thought, thinking she would probably screw that up the way she screwed this up.\n\n*\n\nDeck 1, Bridge:\n\nFirst Officer Commander T'Varik sat in the Captain's Chair, hearing the doors slide open behind her, but never veering her gaze from the PADD in her hand as she announced clearly, \"The 0800 shift begins at 0800 hours; I do not expect you to arrive at that time, but to be ready to begin your duties, is that understood?\"\n\n\"Yes, Ma'am,\" came a deep, purring, familiar voice. \"Sorry, Ma'am, won't happen again.\"\n\nT'Varik looked up, but did not turn around, aware that it might be construed as surprise; other races had an illogical need to 'catch out' Vulcans in the alleged display of emotion. \"Captain, you are unexpected. Have you forgotten that CPO Grev is meant to be senior officer on Alpha Shift?\"\n\nHe stepped into view, along with several members of Alpha Squad. \"I switched with him at the last minute. He wanted some extra time to prepare some egregiously difficult tests for the Engineering cadets today.\" He rested a hand on the arm of his chair. \"Status?\"\n\n\"All systems nominal. The news and messages arrived at 0455 hours, the systems software updates and Level 3 diagnostic tests have been completed, we are good to go to warp and proceed to Luntanu.\"\n\n\"Well, we will be as soon as you've vacated my chair.\"\n\nT'Varik offered a look at some of the cadets who'd sniggered at Hrelle's remarks, before rising and stepping aside. The Caitian settled into the padded cushion. \"Ahh, nice and comfy, you must see about warming all my seats from now on, Commander.\" \n\nHe looked around, winking at his stepdaughter Sasha at Ops (though Sasha looked distracted for some reason, which he put down to her wanting to act professional), Neraxis at Tactical, and Eydiir and Kit at one of the Science stations, next to the enticing - and annoying - Counselor Kami Shall, acting as instructor; at least today she had chosen to wear a standard uniform instead of the usual minidress. And - \"Who's this at Helm?\"\n\nThe figure turned in her seat and rose to attention, a slim, earnest Terran girl with soft, dark features, her arms straight at her side. \"Cadet Rina Chaudri reporting as ordered, Sir!\"\n\nHrelle blinked. \"At ease, Chaudri. I once saw a cadet snap in two doing that.\" He looked to T'Varik. \"Where's Giles?\"\n\n\"Mr Arrington is spending Alpha Shift in the hangar bay with Lt. Velkovsky preparing for his shuttle pilot certification.\" Her expression narrowed, slightly. \"It appears my counterpart at the Academy Annex where Mr Arrington was based was negligent in completing this before the start of the Program. I, of course, would not have allowed such an oversight.\"\n\n\"Of course.\"\n\n\"Cadet Chaudri has agreed to cover for him for Alpha Shift.\" To the nervous-looking young woman she added, \"Which she will be unable to do if she continues to stand there.\"\n\n\"What- oh, yes, Ma'am, of course, Ma'am.\" She returned to her place.\n\nHrelle leaned back in his chair, suppressing amusement, remembering being just as nervous on his first assignment. \"Very well, Ms Chaudri: set a course for the colony on Karakol, Warp One, proceed when ready.\"\n\nHe watched the girl at the helm console in front of him move her fingers over the panels.\n\nThen again.\n\nAnd again.\n\nShe was tensing now.\n\nHrelle could feel more eyes on her as the expected signals did not come about. He wanted to say something, but thought that would only make the girl feel worse.\n\nT'Varik had no hesitation, however. \"Cadet Chaudri, is there a problem?\"\n\nThe girl didn't look up, and Hrelle could almost smell the anxiety from her as she stammered, \"N-No, Ma'am, I'm-\"\n\nThe Vulcan started to approach, but Hrelle held up a hand to stop her, before rising himself and approaching, kneeling down beside Chaudri as the girl was beginning to appear stressed. She looked to him, eyes wide, almost teary-eyed. \"Sorry, Sir, I- I'm just-\"\n\n\"Shhh.\" He kept his voice low, friendly, showing no anger or anxiety. He still remembered his outburst with Giles the other evening, and how that might have left some of the new arrivals intimidated by him. \"Put your hands on your lap. Take a deep breath. Come on, do it.\"\n\nChaudri bit her lip as she did so.\n\n\"Now,\" he continued, \"Just remember your ASIDES.\"\n\n\"Sir?\"\n\n\"ASIDES. The mnemonic. Don't they teach that any more?\" He looked to T'Varik, before returning to Chaudri. \"A-S-I-D-E-S. You'll know it as we go through it, and I want you to take the appropriate action at the appropriate time, okay?\" When she nodded, he started with, \"A: Astrogation plotted, so we're going to the correct destination.\"\n\nHer fingers moved over the navigation panels, breathing out. \"Astrogation plotted, Sir.\"\n\n\"S: Structural Integrity Field online, so the ship doesn't rip apart when we hit warp.\"\n\nShe moved more confidently now. \"Structural Integrity Field online.\"\n\n\"I?\" He asked, prompting.\n\nAnd Chaudri picked it up. \"Inertial Dampening Field online.\"\n\nHe nodded. \"So we don't turn into paste inside the ship. Then there's D-\"\n\n\"Deflector dish online,\" she finished, her hands moving swiftly over the panels. \"E: Engineering alerted that we're about to go to warp.\"\n\n\"Excellent. And finally the second S.\"\n\nChaudri started, but then stopped and looked to him in confusion.\n\n\"Smile,\" he replied warmly. \"You've made it to where you have wanted to be: at the helm of a starship, about to outrace light itself. This is what your ancestors and mine dreamt about when they were planetbound and looking up at the stars.\" Then he leaned back. \"What's more, you have *me* as your Captain! And I'm *amazing*! I'd marry myself if I wasn't such a loud snorer!\"\n\nThat made her grin, and then blush at her own reaction.\n\n\"Now,\" he finished up, \"Since the folks on Luntanu are probably waiting for their medicines and mail and ice cream and such, maybe we should get going, yes?\"\n\nChaudri smiled and nodded, showing none of the anxiety she had displayed moments before. \"Aye aye, Sir! Luntanu, Warp One!\"\n\nHe straightened up, watching the screen and feeling the subtle shift as the space outside the Surefoot warped and propelled them forward.\n\n\"Warp One achieved, Sir,\" Chaudri announced proudly.\n\nHe patted her on the shoulder. \"Keep us at Warp One for an hour, and take us up a warp factor at hourly increments until we reach Warp Four, and then hold. The old girl deserves a bit of foreplay.\"\n\n\"Yes, Sir.\"\n\nHrelle smiled and moved back to his chair - but not before feeling his ears twitch, and he looked behind him, confirming that Kami was sitting there, looking at him - and purring too, a sound only he could hear. He frowned at her; why was she acting that way?\n\nHe started when T'Varik drew up to his other side, her voice low. \"Captain, if I may have a word in private?\"\n\n\"Of course, Commander.\" He walked around to the outer ring of the bridge and towards the doors to his adjacent office, but not before he stopped and looked at Sasha. \"Ms Hrelle, you're in command until further notice.\"\n\nShe had been pretending not to be eavesdropping on the adults, but now straightened up, her jaw almost dropping open. \"Sir?\"\n\n\"Just don't leave sticky child's fingerprints all over the seat, and you'll do fine.\"\n\nAs the clearly-delighted Sasha moved from Ops to the Captain's chair, Kami rose as well. \"Do you mind if I tag along for this as well?\"\n\nT'Varik looked to her archly. \"Your presence will not be necessary, Counselor.\"\n\nKami smiled. \"If I had a credit for every time someone told me that...\" She brushed past them and towards the corridor outside.\n\nHrelle just shook his head. \"Best not to try to argue with her, T'Varik, believe me.\"\n\n*\n\nIn his office, Kami took a seat, sitting on it backwards and resting her arms and chin on the back of it, her tail swishing gently behind her, while Hrelle leaned against his desk and gave T'Varik his full attention, having worked out that something was bothering her. And that he was probably at fault. \"So, what's up, Commander?\"\n\n\"Captain, our arrangement onboard your ship was that I would remain in charge of the cadets, their behaviour and development. Your actions with Cadet Chaudri were in violation of that arrangement.\"\n\nHe nodded, as if considering her words, and then replied with, \"I'm afraid you're in error, Commander.\"\n\nShe raised an eyebrow.\n\nWatching them, Kami chuckled, \"If you had a coat, T'Varik, right now I'd be asking if you want me to hold it for you while you two fight it out.\"\n\nThe Vulcan ignored her. \"Would you care to enlighten me as to the nature of my... error, Captain?\"\n\n\"You are quite right about our arrangement. When the cadets are doing all their cadet work - taking instruction, taking exams, planning their careers and reviewing their work to date - you have the final say, though I might kibbitz from time to time.\"\n\n\"'Kibbitz'?\"\n\n\"Never mind. As I was saying, when they're being cadets, they're yours.\" Now he straightened up, indicating the door. \"But when they're out there doing the grown-up things like bridge duty and other real work, they're members of my crew.\"\n\n\"Then I must question your approach towards your crew. I have observed you at length. You are overly familiar, both with the permanent members and with the cadets. It is not professional.\"\n\n\"Oh?\" He folded his arms across his chest.\n\n\"And if you had a coat, Hrelle...\" Kami remarked.\n\nNow he acknowledged the Counselor. \"Do you have something more than jokes to offer here?\"\n\n\"Yes, actually. The Commander is right, you are overly familiar.\" Then she looked at T'Varik. \"But then you're too distant, so it all balances out.\"\n\n\"Indeed?\" The Vulcan did not sound at all convinced.\n\nKami chuckled. \"Merely the opinion of someone who's been a Counselor for as long as you've been an instructor, and for as long as the Captain's been a commanding officer. Your approach is obviously successful back at the Academy, dealing with hundreds of cadets on familiar ground.\n\nBut this is different. They're in smaller groups, they're far from home, and expected to work and live like adults, some of them for the first time in their lives. It will be stressful. Hell, it's stressful for the more experienced officers and noncoms; smaller crews like ours will naturally gravitate towards familiarity. They need us, and all our individual approaches to them.\"\n\n\"And when they're with me,\" Hrelle declared, \"Then my approach is to be Papa Bear. And that's non-negotiable. Is that clear?\"\n\nHer expression shifted, and she clasped hands behind her back. \"I... believe it is, Sir.\"\n\n\"So, to recap: when they're crew and not cadets, what am I?\"\n\n\"You are the commanding officer.\"\n\nHe shook his head. He wasn't prepared to let her go that easily. \"That's not what I said. What am I?\"\n\nShe drew a breath before finally replying, with as much reluctance as a Vulcan could reasonably display, \"You are... Papa Bear.\"\n\nHe held out his arms magnanimously. \"Thank you. Now, Commander, I know you've just finished your shift, but would you mind going back in and telling Sasha that I'll be in here doing paperwork and probably having a nap, and that she'll have to stay in charge for a little while longer?\"\n\n\"I cannot imagine her protesting overmuch about that.\" She nodded and started towards the door.\n\nBut not before Hrelle said, \"Commander T'Varik?\"\n\nShe stopped and looked at him one final time. \"Sir?\"\n\nHe regarded her with genuine feeling. \"The cadets are marvellous, and will make exemplary members of Starfleet - and a big part of that is due to your hard work and expertise. You have my appreciation and gratitude; neither may be logical, but I promise they're both deserved.\"\n\nShe regarded him, her eyes widening slightly, before replying, \"You are... welcome, Captain.\"\n\nThen she departed, allowing Hrelle to focus on Kami, who was sitting there, still giving him that enigmatic look - her tail swishing furiously behind her as she started purring again. \"What's wrong with you?\"\n\nShe lifted her head. \"You're a sexy bastard, did you know that?\"",
        "\"What?\"\n\nShe nodded enthusiastically. \"Where have you been hiding all this time? You're understanding and supportive to the cadets, magnanimous and charming to your First Officer, you're flirting with me-\"\n\n\"What? No I'm not!\"\n\n\"If you're not, then I'd hate to see what you'd be like if you were making an effort!\" But then her expression changed as she asked, \"Why, though? Were you like this on your last ship?\"\n\nNow his expression changed, as well, sobering. \"No.\"\n\nNow her tail stopped swishing. \"What's wrong?\"\n\nHe looked away, thinking he needed some decorations in here, something to break the monotonous feel, make it seem like he was really living here. \"While I was recuperating, I wanted to send personal messages to the next of kin of the crew of the Furyk. I wanted to tell them how sorry I was, and how I proud I was to serve with their loved ones, maybe even offer some personal anecdotes. I know it had been over six years since then, but I thought they deserved it.\"\n\n\"So what happened?\"\n\nHe looked to her again. \"I had... nothing to say. I could remember the senior staff, things about them, little habits and memorable traits. But the rest? I saw these names on a list, and that's all they were. They died under my command, and that's all they ended up meaning to me: names on a list.\"\n\n\"Well, like you said, it had been so many years ago, and you'd been through so much in that time. You can't be expected to remember every little thing about, what, over a hundred and thirty crew?\"\n\n\"That's no excuse.\"\n\n\"Actually, it's a pretty good one. Have you heard about the new Galaxy-class starships they're bringing out in a few years? There'll be over a thousand people on those. Would you want to have to worry about remembering all those people?\"\n\n\"No. Because I wouldn't accept command of one of those monstrosities. I'd rather keep it small, so at least I know my crew, and they know me.\" He paused, then asked, \"Is that wrong?\"\n\nShe sighed. \"The only thing that's wrong here is that I'm your Counselor and you're my patient and I can't take you next door to your quarters and let the fur fly.\"\n\nHrelle rolled his eyes, growling, \"Get out.\"\n\nShe rose, smiling. \"Ooh, Papa Bear's getting angry. I hope he doesn't spank me.\"\n\nHe pointed to the door. \"Now.\"\n\nAs she departed, she gave him a final look and, \"Actually, that's not true, I hope he does...\"\n\nHe stood there, alone, collecting his resolve; her scent lingered, strong and heady. If he didn't know better, he'd swear she was in Season, and not taken any suppressants. But then he suspected if that were the case, his own physical reactions would be... embarrassingly obvious.\n\nHe needed to lose himself in work. \"Computer: detail outstanding tasks.\"\n\nThe female computer voice spoke up. \"Quartermaster reports for the next period require reading and authorisation. There is a Performance Review Report due for Chief Petty Officer Grev. There is an outstanding subspace message from Captain Lucille Arrington of the USS Impala. There is-\"\n\n\"Stop.\" His heart raced, and not in the way that it had when Kami was in the room. She wasn't letting up. But then he figured she wouldn't. He should just play it and-\n\nNo. He couldn't hear her voice again. \"Computer: translate the message from the Impala into text on my monitor.\"\n\nHe sat down behind his desk and read. Yes, it was pretty much as he expected.\n\nHe leaned back, fighting the knots appearing in his stomach. \"Computer: send a reply to Captain Lucille Arrington, USS Impala. The message reads: 'Request Denied'.\"\n\n*\n\nDeck 4, Main Engineering, 1300 Hours:\n\nChief Petty Officer Grev looked up from the status panel he was hunched over at the approach of the newcomer. \"Ah, you're the ugly one I've heard about.\"\n\nSasha stood before the Tellarite. \"No, the ugly one is the one you see in the mirror every day.\"\n\nGrev grunted with satisfaction. \"And what can I do for you, Squad Leader Hrelle?\"\n\nShe glanced around. \"Well, it's lunchtime for the rest of Alpha Squad, but Jonas hadn't shown up in the mess hall, so I came looking for him.\"\n\n\"He's not here, he's down in the Secondary Hull.\"\n\n\"Oh? Is everything okay?\"\n\nGrev nodded. \"Quite! I've been setting up deliberate faults in systems throughout the ship for the Engineering cadets to find, diagnose and repair. Young Jonas volunteered to go down there himself. He didn't even want the turboshaft extended down to it, he was happy to crawl through the connecting pylons.\" He grunted again, patting his belly. \"I wouldn't do it, not with this waist.\"\n\n\"Oh.\" Now she was getting a little worried. Since the incident in their quarters that morning, Jonas had kept himself away from the other Squad members, and her attempts to contact him by combadge were met with curt responses about his being too busy to talk. \"Well, I hope you don't starve him.\"\n\n\"There are replicators down there. And don't worry, I'll make sure he eats, he's too good to lose.\"\n\n\"Thanks.\" Sasha departed, brow furrowed. She had really messed up this morning, not responding the way she should have, and she knew it.\n\nShe returned to the table in the mess hall where Neraxis, Giles, Eydiir and Kitirik sat, already halfway through their lunches or more. Neraxis looked up. \"Well? Where is he?\"\n\nSasha sat down, staring blankly at the chicken salad sandwich she never started; she didn't feel like eating anyway. \"He's hiding in the Secondary Hull.\"\n\n\"And he's still not answering your hails?\"\n\nShe shook her head. \"Don't blame him, I suppose. He must hate my guts for not doing something.\"\n\nOpposite her, Giles was swallowing ample mouthfuls of pepperoni pizza, making noises of satisfaction before washing it down and saying, \"So, Lt. Velkovsky was telling me about her flyer in the Delos Run: a custom-designed Waverider with a 500-millicochrane engine-\"\n\n\"Giles,\" Sasha cut in, staring at him in disbelief. \"We're talking about Jonas here!\"\n\n\"What's there to talk about? Our Engineer had some Morning Glory. We should just be thankful for the integrity of his boxers that we didn't get a glimpse of Little Jonas.\"\n\n\"You're a class act, you know that?\" Neraxis grunted.\n\nHe looked to Kitirik. \"Hey, Kit, you're male too, you know what I mean.\"\n\n\"No, Friend Giles, I do not. Sexual reproduction for the Qarari is merely a function, it is not pleasure-driven. None of our male genders react as yours does.\"\n\n\"'None of'? Wait, how many male genders do you have?\"\n\n\"Five. Each gender manages a different aspect of our society: military, government, manufacturing-\"\n\n\"Five?\" Giles exclaimed. \"How the hell do you function?\"\n\n\"We're discussing Jonas here, guys,\" Sasha reminded them, sighing. \"I'm at fault. I should have said something right away, but I was just-\" She looked across, seeing someone at an other table, pushed aside her own lunch and rose. \"I'm gonna go get some advice. Catch you later.\"\n\nThe table grew silent and still for a moment.\n\nThen Giles reached for one half of Sasha's sandwich. \"Be a shame to let this get thrown back in the recycler.\"\n\nNeraxis glowered at him. And reached for the other half of the sandwich.\n\n*\n\nKami pointed her fork at T'Varik's lunch. \"Your grapefruit's gone bad.\"\n\nThe Vulcan carefully pushed aside the fork with her finger, to prevent bits of the fried beef clinging to it from falling onto her food. \"As I have already stated, it is not grapefruit, it is gespar, a Vulcan delicacy. It looks exactly as it's supposed to look.\"\n\n\"Ahh. Thank you for clearing that up.\" The Caitian took another mouthful of her own lunch before noting, \"Feta cheese or ricotta would go well with that grapefruit.\"\n\n\"Tell me, Counselor, what is your secondary course of action for when your humour fails?\"\n\nKami considered her answer. \"I flash my boobs.\"\n\n\"If I lie and inform you that you are hilarious, will you spare me that?\"\n\n\"Excuse me.\"\n\nBoth women looked up to see Sasha, T'Varik replying first with, \"Can we assist you, Crewman Hrelle?\"\n\n\"Um, I don't know. May I sit down?\"\n\nKami waved to the seat next to her, still wolfing down her meal. \"What's up?\"\n\nSasha was flushing as she slid into the seat, wishing she'd stopped for a drink, just to have something to keep her hands busy. \"Um, something happened this morning in our quarters, involving Jonas. We, ah, we'd just got back from the gym, we stripped down and were lined up to use the showers... Jonas had hurt his shoulder, and Eydiir was massaging it- it seemed to be helping him-\"\n\n\"Oh boy...\" Kami's eyes widened.\n\nT'Varik looked to her. \"Your reaction suggests an awareness of the problem at hand.\"\n\n\"Well, let's let our Squad Leader finish her story.\" Kami smiled teasingly at Sasha. \"Go on...\"\n\nSasha cleared her throat, certain she was turning so red she could be mistaken for an Alert signal. \"And... his shorts got tighter on him. And everyone saw.\"\n\nThe Vulcan raised an eyebrow. \"As I understand human adolescent males, this reaction is typical for any number of reasons. What happened then?\"\n\n\"And... then Kit said something, because he didn't know what was going on, because the males of his species don't... operate like that, apparently. It broke the tension and we couldn't help but laugh. But Jonas took it badly and left. And we haven't seen him all day, he won't answer my hails.\"\n\nThe Counselor nodded, still smiling. \"That would explain why I saw Kit studying instructional texts on humanoid male reproductive systems. It seemed a bit too dry for pornography.\"\n\nSasha wrung her hands. \"I didn't handle it well.\"\n\n\"Your self-assessment is correct, Crewman,\" T'Varik agreed, continuing to consume her meal. \"You allowed the situation to escalate needlessly.\"\n\n\"It wasn't exactly covered in the Command courses I took.\"\n\n\"Nevertheless,\" the Vulcan continued, \"Your leadership skills require the ability to react positively to the unexpected; there are a number of texts I can suggest-\"\n\n\"Thank you, Commander, but in the meantime, what about Jonas? He must be mad as hell at me-\"\n\n\"Very likely,\" T'Varik agreed. \"As he counted on you to manage the situation, but failed.\"\n\nKami looked to her. \"I don't think our Squad Leader here came to us to add to her self-recrimination.\" To Sasha she announced, \"Your Squad's shift ends at 1600 hours. Have them report to my office at that time, I'll move your first group session up from the end of the week to today.\"\n\nSasha looked relieved, rising to her feet. \"Thank you, Counselor.\"\n\nAs she departed, T'Varik set aside the remains of her meal. \"Your tone suggested rebuke. I cannot be blamed for Mr Ostrow's response to his own body. Human adolescents frequently overreact over minor incidents; infatuations become classic love affairs, dissolutions become dramas, parental lectures become inquisitions.\"\n\nKami sighed, playing with her own food. \"I went through my first Season when I was twelve, years before I should have. And it started at the most inopportune time as well: my great-grandmother's funeral. She was an important poet on my homeworld, and the funeral was attended by hundreds of people paying their respects, and I was in the middle of this throng when I could feel the heat from my nethers, and the release of very potent pheromones that were having an effect on everyone around me.\n\nBy the time I realised what was happening, I was too embarrassed to excuse myself or tell my mother, who might have given me a suppressant. But my scent was... distracting everyone around me, and I could hear all their whispers and see their looks to each other, wondering who it was.\n\nFinally, my mother grasped that it was me, and nearly pulled my arm out of the socket as she dragged me out of the funeral, with seemingly everyone present laughing. I wasn't laughing at the time; I would have gladly died on that day from mortification; now, thirty years later, I can laugh.\"\n\nShe looked to T'Varik. \"Cubs, even ones as old as our cadets, do not come to us pre-programmed like tricorders, with everything they need to function in life. They overreact because they need experience to provide them with perspective. And until they gain that perspective, they need to get it from us.\" She rose, lifting up her tray. \"You done with that grapefruit?\"\n\nT'Varik nodded, allowing the Caitian to take the tray and leave without further discussion.\n\n*\n\nSecondary Hull, Maintenance Bay:\n\nJonas sat alone, wanting to enjoy the final few hours onboard a real starship, before his inevitable dismissal. It was going to happen, he was certain of it. Sasha would be reporting him for sexual misconduct, something for which Starfleet had zero tolerance. There would be a hearing, condemnations, his mother would be informed-\n\nNo.\n\nNo, he would resign before that. It was a tiny, tenuous grasp of dignity and control, but it was one he still possessed. Then he could return to his mother and the salvage business, make up a story about flunking out of the classes. He wouldn't tell her the truth about her perverted son-\n\n\"Mr Ostrow?\"\n\nHe jumped, nearly falling out of his chair, before rising to his feet. \"Commander T'Varik! I wasn't expecting you!\"\n\n\"Obviously.\" She stepped into the bay, glancing around at the shelves and containers of parts and tools, hands behind her back as if she was conducting an inspection.\n\n\"Um... what are you doing down here, Ma'am?\"\n\n\"I am of course familiar with the schematics of an Oberth-class starship, but I have been reliably informed by Captain Hrelle that this is not the same as 'walking the decks, smelling the air and touching everything'.\" Her tone suggested what she thought about that notion. Then she looked to him. \"Why are you hiding out down here, Mr Ostrow?\"\n\n\"Hiding? No, Commander, Chief Grev ordered us to locate and identify-\"\n\n\"-Malfunctioning components, yes, I am aware of that. I am also aware that you have been down here for 6.423 hours, far longer than it would require for someone with your superior ability to find, diagnose and replace the faulty power conduit that the Chief set down here.\" She stopped at his table, indicating a unit sitting there. \"This conduit, in fact. The Chief noted its replacement on his diagnostic board, but was happy to let you waste time down here.\" Now she looked at him. \"I am not. You should have reported back directly after completing the task.\"\n\nHis face reddened. \"Yes, Ma'am.\"\n\n\"I also understand that you have ignored repeated communications from your Squad Leader. That is not acceptable. I should not have to explain why.\"\n\n\"No, Ma'am.\"\n\n\"You have been scheduled to attend a meeting at-\"\n\n\"Ma'am,\" he interrupted. \"Excuse me, but-\" He swallowed; never in his life had he expected to be saying what he was about to say. \"But I wish to tender my resignation from Starfleet, effective immediately.\"\n\nT'Varik stared at him. Then she responded with, \"Denied.\"\n\nHe blinked. \"Ma'am- you don't know- something happened- it'd be better if I resigned before they kick me out-\"\n\n\"Whether or not I know the reasons behind your impulsive and illogical action just now is irrelevant. Starfleet has invested too much in your development to allow you to abrogate your career path.\" Now she approached him, making a visible attempt to relax her posture and tone. \"Jonas... no one is going to 'kick you out'. I will not allow that. Your presence here is valued by everyone. Myself especially.\n\nAlpha Squad is meeting with the Counselor in her office at 1600 hours in order to resolve... whatever has occurred. I expect you to participate fully towards that resolution; you owe that much, to your friends, to yourself... and to me. Is that understood?\"\n\nHe shook a little, but nodded.\n\n\"You will also make up for the time you have wasted down here. Schedule extra work sessions in your off-duty hours with the Chief.\"\n\n\"Yes, Ma'am.\"\n\n\"Now, follow me back to the primary hull. Bring the figurative fruits of your labours with you.\"\n\n\"Yes, Ma'am.\" As he lifted up the faulty unit and followed, he asked, \"Commander, I thought you came down here to do a walking tour of the rest of the ship?\"\n\n\"Never mind, Mr Ostrow.\"\n\n*\n\nDeck 1, Bridge, 1430 Hours:\n\n\"So, we're all sitting around the dinner table,\" Hrelle was recounting from his chair, while most of the crew and Kami listened with amusement - except for Sasha, sitting at Ops and shaking her head. \"And Sasha's mother is desperate to try to break the ice between her daughter and myself. But this little six-year-old terror was having none of it, glowering at this horrible alien intruder in their lives.\n\nAnd Sasha's mother's saying to her, 'You've never met a Caitian before, sweetie, I'm sure you have plenty of questions to ask him.' And I'm all, 'Of course, ask me anything.' So Sasha's staring at me, and you can see the wheels turning in her head as she thinks of the best way to scare me off. Finally she asks, 'Are you furry all over?'\"\n\n\"Captain...\" the teenage Sasha prompted now. \"There really is no need to finish this story.\"\n\nBut Hrelle ignored her. \"And I answered, 'Why, yes.' And then she asks, quite loudly and clearly, 'EVEN YOUR PENIS?'\"\n\nThe bridge crew erupted into laughter, Hrelle indulging them before continuing. \"And her mother gets all shocked, and orders her to apologise, which she does - well, the bare minimum anyway. But when her mother goes into the kitchen, Sasha leans forward in her chair opposite me, takes one look at the kitchen door to make sure it was closed, and informs me in a whisper, 'I'm not really sorry, you know.'\"\n\nAs everyone laughed again. Hrelle finished off with, \"Fortunately, she warmed up to me after a few more weeks like that. Any more stories I can tell them, Sash?\"\n\nShe turned in her seat and held up a hand. \"No thank you, Sir.\" Then she returned to duty at an alert appearing on her Ops board. \"Sir, there's an incoming message from Captain Arrington on the USS Impala. I'll play it-\"\n\n\"Belay that!\" he snapped, making people jump. He ignored the looks around him as he rose to his feet and headed towards the door. \"Patch it through to my office. Counselor, you have command until I return.\"\n\n\"Are you sure that's wise, Captain?\" she called after him. \"I might take us all to Risa or give everyone the day off or something.\"\n\nHe ignored her as he departed. In his office, he forced himself to calm down and sit as he called up the message, allowing it to play in her voice. It wouldn't be as bad as he thought, he told himself.\n\nSeconds later, he was on his feet, flinging his chair across the office to strike the far wall.\n\nJust as the door opened and Kami stepped in. \"Good for you, I always thought that chair was a nasty little bastard.\"\n\n\"And I thought I left you in command!\"\n\n\"You'd have been better off leaving a pair of socks in charge. We both know you only did it to keep me from coming in here.\"\n\n\"Well, clearly that's worked out well.\" He paced back and forth behind his desk.\n\nShe retrieved the chair, checked it for damage, and returned it to its place. \"Sit.\"\n\n\"I don't feel like sitting.\"\n\n\"And I don't feel like arguing with a short-tempered cub who should know better. Now, sit.\"\n\nWith a display of reluctance, Hrelle complied, as she drew up behind him and put her hands on his neck and shoulders, kneading them. She grunted. \"Seven Hells, I'd have more success massaging a Horta; relax, or I'll get a sedative from Dr Ling. Now, you want to tell me about the message?\"\n\nHe grunted as well; despite himself, he was responding positively to her touch, as it loosened the knots in his muscles. \"Captain Lucille Arrington has contacted me three times in the last 24 hours.\"\n\n\"Not love letters, I take it?\"\n\n\"No. She wants to have a private word with Giles.\"\n\nShe waited for more, and when none was forthcoming, she replied with, \"I hate to play Devil's Advocate, but what's the problem with a request like that?\"",
        "\"The problem is it's never been made as a request. It's always been a demand, peppered with insults. In the twenty-five years I've known her, she's never been anything but utterly contemptuous to me. Her grandfather was the Academy Superintendent when I was a cadet, he was an old bastard who hated me, and encouraged her to lead her brothers, siblings and cousins, upperclassmen all, to harass and bully me.\n\nMost times, I never even saw them, just felt the effects of their handiwork: sabotaged schedules, ruined uniforms and missing possessions from my quarters, reworked reports to give me failing grades, changed locks. I tried to fight back, and ended up getting put on report, with all their accounts outweighing mine. Then it grew worse...\"\n\n*\n\nStarfleet Academy Grounds, Twenty Five Years Ago:\n\n\"On the ground, Pretty Kitty!\" Cadet Lucille Arrington screamed at him.\n\nCadet Esek Hrelle didn't move; it took all of his willpower not to pop out his claws and rake her throat open. And though he knew that brief moment of satisfaction would not be worth the court martial, stockade and dismissal from Starfleet, it was still so tempting.\n\nAround him, the rest of the Arringtons were jeering and cursing him, calling him Plebe and Pussycat and more filthy insults; occasionally some of them would reach out and try to grab his tail, forcing him to keep it as close to his body as possible. He focused on their leader -- and the PADD in her hand, the PADD containing the only copy of his warp dynamics report, due tomorrow. If Lucille kept it or destroyed it, he'd fail.\n\nShe held it up higher again, as if he might have forgotten it was there, glee broadening the grin on her narrow, tanned features. \"Come on, Pretty Kitty, get down on all fours. That's where cats belong.\" She looked around; the Academy grounds where they had cornered Hrelle was dark, deserted, and quiet, apart from the frogs croaking incessantly from the nearby pond. \"Or should we just throw away all this hard work you put into it?\"\n\n\"No!\" he snapped, swallowing down the bile in his throat along with his pride. To the jeers of Lucille's mob he lowered himself to his hands and knees, his pony-tailed mane dropping to the left side of his face. He stared at the grass, his fingers sinking into the cool wet earth.\n\n\"Now,\" Lucille continued. \"Let's hear the Magic Word.\"\n\nHrelle understood the reference, an old Terran expression. \"Please.\"\n\nBut the girl made a humourless laugh. \"No, no, no, Pretty Kitty. That's for humans. Real People. Your Magic Word... is 'Meow'.\"\n\nNo.\n\n\"Come on, Pretty Kitty. Meow for us.\"\n\nNO. To the Seven Hells with all of you.\n\n\"Last chance, Pretty Kitty.\"\n\nHe couldn't do it. He couldn't. Better to resign and walk away. Better still to leave them bleeding and screaming for their mothers.\n\n\"Have it your way, Plebe-\" She drew back her arm.\n\nHe meowed.\n\nEveryone had shut up in time to hear it, loud and clear.\n\nThey had a good laugh at that.\n\nHrelle's claws sunk into the grass, as if readying to dig himself a grave.\n\n\"Now, that's more like it, Pretty Kitty,\" Lucille declared. \"Who says cats can't be trained?\"\n\nFrom the corner of his eye, Hrelle could see her boots, all shiny and immaculate. Now, his PADD was dropped to the grass beside them.\n\nHe reached out for it - but not before Lucille moved one of her boots over it. \"Not so fast. One more Meow. A good, long one, like you're in heat.\"\n\nHrelle swallowed, feeling his pride sent to the far side of the system, as he gave them what they wanted...\n\n*\n\nKami had stopped massaging, and now moved around to face him, her expression one of stunned disbelief. \"How... How did you keep from killing them?\"\n\nHe couldn't look back at her; he still couldn't fathom how he could still feel so mortified after a quarter-century. \"I was alone, the only Caitian there in my class. I was disowned by my clan for coming there and taking over the business back home. I needed to stay because I had nowhere else to go.\" Now he looked up. \"And I didn't want to give them the satisfaction of succeeding in driving me away.\"\n\nNow it seemed to be Kami's turn to do the pacing, with barely-contained outrage, her tail swishing furiously. \"Who does that? Who does that to another sentient being?\" Then she calmed down again. \"But she can't still be like that? Can she?\"\n\nHe cleared his throat. \"Computer: replay the last message received from the USS Impala.\"\n\nThe computer obeyed, and a female voice filled the room like a spectre. An angry, spiteful spectre. \"Hrelle! Who the hell do you think you are, refusing an order from me? I was defending the Federation when you were betraying it to the Bel-Zon, you tailless, gutless coward! Get my nephew on a secure channel ASAP, Pretty Kitty, or I'll have you mewling on the ground again!\"\n\nThe office went silent again.\n\nKami was staring in the direction of the speakers. Now she looked to him again. \"I want to meet this bitch.\"\n\n\"You think that's wise?\"\n\n\"I don't care if it's wise or not, I want to rip the arrogant smug ape's throat out!\" She stabbed a clawed finger at him. \"Don't you dare give her anything!\"\n\n\"Is that my Counselor advising me, or my friend?\"\n\nNow she stopped, staring hard at him with a certain measure of chagrin. \"I don't know why you ask me in here for advice.\"\n\nHe chuckled. \"I never ask you in here, you just keep barging in!\" Now he sobered and returned to sit behind his desk. \"It's so bizarre. After all the far more terrible experiences I had with the Bel-Zon, this Academy humiliation should be nothing. Yet, I hear her voice today, and I lose my temper.\"\n\nKami drew closer, leaning against his desk, her tail calmer. \"You've had time to face and deal with more recent events. But I bet you suppressed what she did to you, put it in the back of your mind and never had to consider it until now. It's a nerve you never realised was still exposed until it was touched again. So... what are you going to do about it?\"\n\n\"Well, for one thing, I'm not going to lose my temper again; she doesn't deserve it.\" He cleared his throat. \"Computer: send a reply to Captain Lucille Arrington, USS Impala. The message reads: 'Request Denied'.\"\n\n\"Acknowledged.\"\n\nHe straightened up and met Kami's gaze. \"What?\"\n\nShe smiled. \"Nothing.\"\n\n*\n\nUSS Surefoot, Deck 2, Counselor's Office, 1600 Hours:\n\nThe six members of Alpha Squad sat in a circle on the floor with varying degrees of apprehension, with Kami among them, smiling at each in turn. \"Some of you have already had solo sessions with me, but for the rest, this is the first time we've met professionally, so I need to put down a few ground rules about our times in here, requirements we need to agree upon.\n\nThe first requirement for being in here, whether individually or as a group, is Discretion. This is meant to be a safe and secure place; what's said in here stays in here. We do not discuss it outside this room, whether with colleagues, family members, anyone else. This applies to me as well, unless what I learn here might affect the health and safety of yourselves or others. Violation of this is a very serious offence.\n\nThe next requirement is Openness. Knowing that confidentiality will be maintained in here, we should feel secure enough to open up. That 'we' includes me; you can ask me anything, and I promise I'll answer it if I can.\"\n\nSitting opposite her, trying to look cool and casual, Giles folded his arms across his chest and asked, \"Anything at all?\"\n\n\"Yes, Giles. It wouldn't be fair of me to hold back while still expecting you to do otherwise.\"\n\n\"No matter how personal?\"\n\nShe smiled. \"Do you want to test me? Go on, then.\"\n\nHe smirked. \"Okay: who was your best lover?\"\n\n\"Giles!\" Sasha, sitting on Kami's right, snapped.\n\n\"Class act as always,\" Neraxis grumbled.\n\n\"You are a braying ass,\" Eydiir declared, glowering at him.\n\nBut Kami held up a hand. \"Settle down. I did say he could ask.\" She focused on Giles again, her voice becoming more melodic, sultry. \"Well, Giles, my best lover was Rmorra, a Caitian male who served as a Starfleet security officer assigned to the Federation Archaeological Bureau, protecting ancient planetary sites from scavengers.\" She leaned back and smiled with the memories invoked. \"He had a scent like honey and sandalwood, fur the colour of chocolate, pointed-tipped ears, and shoulders a light year wide. And when we were together... he made my body *sing*.\"\n\nThe room was still, but then her eyes grew sad. \"He was my husband. He was the father of my cub. And he was my best friend. And the only time he ever made me cry was the day he was shot in the back and killed by raiders on a nameless planet, for some broken pottery.\"\n\nThe room grew unbearably silent. Giles' expression shifted from the prurient to the penitent.\n\n\"Sorry, Giles,\" Kami apologised. \"I know you were expecting something sexy. But I didn't promise sexy, only personal.\" Her gaze narrowed. \"How about you, Giles? Who was your best lover?\"\n\n\"She's at the end of his right arm,\" Neraxis quipped, provoking titters among them, and a glare from Giles.\n\nBut the boy recovered quickly, angrily declaring, \"Lovers, actually. They were twins. We had a hell of a time before I left the Academy Annex.\"\n\n\"Twins?\" Kami's eyes widened with awe. \"That *is* impressive. What were their names?\"\n\nNow he paled. \"I, ah, shouldn't reveal their identities.\"\n\n\"I understand. What about first names?\"\n\n\"Oh, uh... Carol. Carol, and, uh, Janet.\"\n\nKami nodded, looking to the others again. \"Which brings me to the final requirement: Honesty. I know there may be times when you don't feel like participating, and that's fine. But it's something else entirely to be dishonest. And as honesty is integral to a member of Starfleet, it's a critical requirement.\"\n\nHer gaze narrowed. \"I have been a Counselor for longer than any of you have been alive. I have degrees in Interspecies Psychology. And my Caitian senses allow me to detect the subtle changes in your scents, your voices and expressions, everything that will tell me when you're talking crap.\" Now she offered Giles a final look. \"So when you *do* talk crap, I may not say anything at the time. But I won't forget.\"\n\nGiles looked away.\n\nNow she leaned back, looking to each of them in turn. \"Well? Are we agreed?\"\n\nThey all made various nods or sounds of assent.\n\n\"Good. Well, most of these first group sessions tend to be boring, as nothing ever happens so soon. However, Jonas has raised something interesting for us.\" At his glum reaction she explained, \"I'll use humour to defuse tension, Jonas, never to ridicule.\" She looked around again. \"Does anyone want to say anything first?\"\n\n\"Yes.\" Sasha leaned forward, catching Jonas' attention. \"I'm sorry about what happened this morning. I didn't react the way I should have, both as your Squad Leader and your friend. And then you took off and went on your own, didn't respond to my hails. You must have been so mad at us-\"\n\n\"Mad at you?\" he interjected, looking confused. \"I thought you were going to have me arrested!\"\n\n\"Arrested? What- What for?\"\n\n\"You know, the Starfleet policies against...\" Jonas paled. \"Sexual misconduct and harassment.\"\n\n\"The definitions of sexual misconduct and harassment are by necessity broad,\" Kami informed him, looking to the others again. \"And open to interpretation, but typically grounded on a party feeling harassed, victimised or threatened by another party's words or actions. Did anyone feel threatened by what happened?\"\n\n\"Absolutely not,\" Sasha declared.\n\n\"Hell, no,\" Neraxis added.\n\n\"You have proven yourself to loyal and tenacious,\" Eydiir contributed. \"Not threatening.\"\n\nKami looked to Kitirik. \"How about you, Kit?\"\n\nThe Qarari's throat folds reddened. \"I feel more sympathetic than threatened. Based on what I have researched, the humanoid male reproductive system seems needlessly complicated.\"\n\n\"You should read up about the female systems,\" Kami offered with a smile, indicating Giles. \"And how about you, stud? Were you threatened?\"\n\nGiles smirked. \"Not from what I saw, no.\"\n\n\"Son of a bitch, Giles!\" Sasha exclaimed, looking ready to throttle him. \"Can you stop being a schmuck for one damn minute?\"\n\nAt everyone's agreeing reactions, Giles breathed out, looked to Jonas and muttered peevishly, \"Sorry, okay? I was just joking. Look, it happens to all guys.\"\n\n\"Then why didn't you say something?\" Kit asked. As everyone looked to him, the Qarari continued. \"When I later understood more fully the biological and societal issues involved, I realised I had made a grievous error in protocol with my questioning. But you cannot claim ignorance. Friend Jonas has been consistently cordial and accommodating to you in all the times I have witnessed you two together. Yet you said nothing to support or comfort him when he was distressed. What if it had been you in his position?\"\n\nEydiir spoke up now, glaring at Giles. \"A good question.\"\n\n\"This is confusing for me,\" Kit confessed. \"Friend Giles, please forgive me if I have overstepped my social boundaries-\"\n\n\"No. No, you haven't.\" A more subdued Giles looked to Jonas again. \"Sorry, pal. And... I'm sorry about this morning. You're... you're a good teammate.\"\n\n\"Jonas,\" Kami said softly, \"No one here is exempt from embarrassing moments, myself included - someday I may tell you what happened to me at a funeral when I was much younger - and living together, you will see each other's dirty underwear, both physical and figurative. You'll see each other naked, you'll know who's having their periods, or breaking wind, or even who's shedding their skin.\" \n\nShe smiled at Kit's flushed reaction to that last example. \"The important thing is that you'll learn to accept each other, to trust each other, and to give each other space and privacy when needed. And Jonas, I think you'll look back on today as something to laugh about.\"\n\nJonas nodded - but he was wiping tears from his face.\n\n\"What is it?\"\n\nHe breathed in, looking both stressed and relieved. \"I was- I was terrified that I'd have to leave. I- I grew up alone, with just my mother and the workers in her company around me. No one my age. Then I joined the Academy, and met so many amazing people... you guys are the best. So, I was just afraid that you wanted me out.\"\n\nSasha smiled at him. \"It would take a lot more than what happened to do that.\"\n\n\"Indeed,\" Eydiir agreed. \"As we have not yet disembowelled Giles, our standards must be extremely low.\"\n\nGiles gave the Capellan a sarcastic thumbs up.\n\nBeside him, Neraxis pointed at Jonas' chest. \"What have you spilled down here?\"\n\nJonas looked down - as her blue finger shot up and flicked his nose.\n\nShe grinned. \"You gotta be more on the ball than that, Scrappy. You got a Big Sister now.\"\n\nEveryone smiled, as Kami wound up the proceedings. \"Well, that worked out well. Maybe we can move onto a less-embarrassing topic for all of you? Anyone have anything new to bring up?\"\n\n\"I do, Respected Counselor,\" Kit offered. \"What can you tell me about masturbation?\"\n\n*\n\nDeck 2, Executive Officer's Quarters, 2200 Hours:\n\nT'Varik had been in the midst of reaching a new meditative level when her door chime rang. The disappointment and annoyance she felt for 6 milliseconds was examined and mentally filed away for further scrutiny as she rose from her meditation mat, slipped into a simple black robe and approached her door. \"Open.\"\n\nHrelle's frame filled the doorway. \"Commander, am I disturbing you?\"\n\n\"Yes, but only to a manageable degree. How may I assist you?\"\n\n\"I need to bring you up to date on a situation involving one of the cadets. And... I would like some advice from my First Officer.\"\n\nShe regarded him for a moment, before stepping aside and allowing him to enter. \"Computer: raise illumination to standard levels. Do you require me to lower the room temperature, Sir?\"\n\n\"No, it makes me feel at home, though ours wasn't such a dry heat.\" He sighed. \"This is about Mr Arrington.\"\n\nShe made an almost discernible effort not to display a discernible reaction. \"He is proving to be an enduring figure on this mission.\"\n\nHe recounted the messages from Captain Arrington, and the increasing hostilities between Hrelle and her. When he was done, he breathed out and said, \"So, I wanted your opinion on the situation. Am I being unreasonable?\"\n\n\"Yes.\"\n\nHe blinked. \"You don't want to take your time, have a good think before giving me your answer?\"\n\n\"There is no need. You repeatedly acted inappropriately to a simple request.\"\n\n\"It wasn't a request, it was a demand! Like she was still an upperclassman and I was the lowly plebe she could demean!\"\n\n\"Nevertheless, you should not allow your past experience to affect your present behaviour. Granted, it was not put through proper channels, but it was in the end a simple communications request.\"\n\nHe grunted, conceding the point. \"Maybe you're right. Maybe I-\"\n\nHrelle's combadge chirped. \"Bridge to Captain.\"\n\nHe tapped the badge. \"What is it, Chief?\"\n\nThe gruff Tellarite voice came through loud and clear. \"Captain, sensors have picked up a Starfleet vessel on an intercept course with us at high warp. Its registry beacon identifies it as the USS Impala.\"\n\nHrelle looked to T'Varik as he replied, \"Thanks, Chief. I'm on my way.\" As he tapped the comlink shut, he asked the Vulcan, \"I know your shift isn't starting for another two hours-\"\n\n\"I will get dressed and meet you on the bridge directly.\" She turned and started slipping out of her robe; Hrelle was already out the door.\n\n*\n\nOn the bridge, Grev vacated the Captain's chair, but Hrelle had stopped at the station occupied by Lt. Abed, the Security officer, a confident, experienced man whom Hrelle wished had more to do on this mission. That wish now dogged at him. \"Mr Abed, glad you're on duty. Think I might need someone other than one of the kids on Tactical.\"\n\nThe Terran grinned. \"Has Starfleet declared war on us?\"\n\nHrelle was grateful that T'Varik had stepped onto the bridge, giving him a chance to not answer that while he finally took his seat. \"Hail them.\"\n\nThe Beta Shift Ops officer, an Andorian cadet whose name escaped him at the moment, frowned. \"Trying, Sir, but they're not responding.\"\n\nHrelle's hackles rose, but he kept calm. \"Helm, stay on course to Karakol, Warp 4. Mr Abed, what's our weapons status?\"\n\nHrelle felt the stares on the back of his head. \"Our weapons, Sir?\"\n\n\"Yes, you know, the things we use when we get into fights. What's our status?\"\n\n\"Uh, phasers and photon torpedoes are operational but offline, as expected. I don't- Sir, the Impala is on a parallel course, but at Warp 8. They're passing us... turning... Sir, it's on a direct heading for us!\"\n\n\"Helm, full stop. Go to Yellow Alert.\"\n\nFrom her own station on Hrelle's right hand side, T'Varik looked to him. \"Captain, are you sure this is-\"\n\nHe shot her a look. She was astute enough to cut off any further protest.\n\n\"We're at full stop, Sir,\" the Helm officer informed him. \"Impala dead ahead, reducing speed... Warp 6... 4... 2...\"\n\nHrelle heard the bridge doors open again, and a scent told him who it was without him looking; he hoped the Counselor wouldn't interfere. \"Try hailing them again.\"\n\n\"Aye, Sir.\" A moment later, she announced. \"No response.\"\n\nHrelle felt his grip on the arms of his chair tighten. What was Lucille playing at? Leaving her assigned patrol route to come here over a stupid request? Did she really think she could come here and make him roll over and meow for her again? \"Where's the Impala?\"\n\n\"Almost two thousand kilometres dead ahead.\"\n\n\"Put it onscreen.\"\n\nThe viewscreen altered, and then they all saw the imposing shape of the Nebula-class cruiser: larger, younger, faster and better-armed than the Surefoot. In another life, he might have eventually captained a ship like that.",
        "But that life wasn't this one. \n\n\"I... do not comprehend Captain Arrington's behaviour,\" T'Varik admitted.\n\nHrelle grunted. \"She's stepped in front of us, showing how big and intimidating she is. Ops, has there been any response to our repeated hails?\"\n\n\"No, Sir.\"\n\nHe steeled himself. Fine, be like that, you bitch... \"Go to Red Alert! Shields up, bring all weapons online, lock onto their bridge!\"\n\nThe ship responded to his command automatically, as the klaxon sounded and the light strip running around the circular bridge over every station suddenly went to apple red. But the living components of his ship weren't automatic.\n\nUntil he roared, \"NOW!\"\n\nThen he felt the crew jump into action, even as the tension and confusion multiplied, their collective training overcoming any hesitation they may have had over his orders. \n\n\"Shields up,\" Abed responded. \"Phasers and photon torpedoes online, Sir! All weapons locked on their bridge!\"\n\n\"Any response from the Impala?\"\n\n\"They've raised shields, Sir, and- now there's an incoming hail!\"\n\n\"As expected. Put it onscreen.\"\n\nSeconds later, the image of the Impala was replaced by a bridge, similar to the Surefoot's but larger, the image focusing on its Captain's chair, and the middle-aged Terran female with copper hair and a rounder face than Hrelle remembered it. If he had been of a different frame of mind, he might think she looked handsomer now than when he last saw her years ago.\n\nUntil she opened her mouth. \"Hrelle! What the hell are you playing at? How dare you lock weapons on another Starfleet vessel? I knew you couldn't be trusted-\"\n\n\"Captain Arrington,\" he said calmly over the klaxon, \"Welcome to our little part of the sector. And... thank you.\"\n\n\"What? What are you talking about?\"\n\n\"Why, for assisting us with a test of our Red Alert drill. We appreciate you deviating from your normal patrol, and hope it hasn't inconvenienced you too much.\"\n\nShe looked stunned, but then her scowl returned. \"No. No, you won't get away with what you've done. I'll see to that!\"\n\nHe made a show of appearing slightly hurt. \"Oh. Well, perhaps you'd like to come aboard so we can discuss this matter, or any other you'd care to raise?\"\n\n\"You bet I do!\"\n\n\"Fine, I'll have my transporter officer liaise with yours and-\"\n\nShe cut off her end of the transmission.\n\nHe relaxed, a little. \"Cancel Red Alert, drop shields, release weapons lock on the Impala and secure from General Quarters. And have Cadet Arrington come to the bridge and await further orders. Don't tell him why.\"\n\nThe bridge crew visibly relaxed as well. Counselor Kami stepped down next to his chair, her voice low. \"You okay?\"\n\nHe nodded, looking to T'Varik. \"I want you with me in the meeting, as a witness. Feel free to speak up at any stage if you believe it it's appropriate.\"\n\nShe nodded. \"Will you meet Captain Arrington in the transporter room?\"\n\n\"No,\" Kami spoke up now. \"Make her meet you, on your terms.\"\n\nHrelle smiled. \"Fine. But you get to escort her to my office. Think you can do it without killing her along the way?\"\n\nShe drew up with mock indignation. \"I am the very font of diplomacy, Captain, Sir.\"\n\n*\n\nDeck 1, Captain's Office:\n\nHrelle was sitting behind his desk, with T'Varik standing beside him, as the door slid open, and Kami entered, with Captain Arrington - and a security guard Hrelle didn't recognise. The woman nodded towards Hrelle. \"There, Mr Esbirro. Arrest him.\"\n\nHrelle folded his hands on top of his desk, his voice and expression still genial. \"That seems a rather extreme greeting, Captain.\"\n\n\"It is also without foundation or legality,\" T'Varik informed her.\n\nArrington glared back. \"Who the hell are you?\"\n\n\"I the hell am Commander T'Varik, the First Officer.\"\n\n\"Well, I'd think a Vulcan would be the first one to recognise that attempting to attack another Starfleet vessel is a court martial offence!\"\n\n\"No offence has been committed by Captain Hrelle. Indeed, he has followed Starfleet regulations.\"\n\n\"Excuse me?\"\n\n\"General Order 12: When approaching a vessel with which communication has yet to been established, all Starfleet vessels are to maintain maximum safety precautions, regardless of the origin of said vessel, be it a foreign power, a hitherto unknown ship, or a Starfleet vessel.\"\n\n\"I still remember reading about the incident involving Admiral Kirk encountering a commandeered USS Reliant,\" Hrelle reminisced, as if they were sitting around a table making small talk. \"Many lives were lost at that time because he disregarded that Order. Definitely not one of his more laudable moments. You performed your part in the role of the aggressor perfectly, Captain.\"\n\nT'Varik folded her hands behind her back. \"It has been recorded that you repeatedly refused to respond to our hails, and that your ship took a hostile stance against ours. You may still wish to file a complaint with Starfleet Command, but the resulting investigation will decide in our favour - and of course they will be made aware of your original reasons for contacting us.\" She raised an eyebrow. \"As will your own crew.\"\n\nArrington's face tightened, then she glanced at her security guard. \"Wait outside for me.\"\n\n\"Yes, Ma'am.\"\n\nAs he left, Arrington added, nodding towards Kami, who was leaning against a nearby wall, tail lazily swishing behind her. \"Send your Counselor out.\"\n\nHe leaned back in his chair. \"She's aware of everything, as is my First Officer.\"\n\n\"Well, I want her out!\"\n\nKami folded her arms across her chest. \"Well, I want you to kiss my furry ass, but we can't have everything we want in life.\"\n\n\"I will remind you, Captain,\" T'Varik interjected, as calmly as ever. \"That Captain Hrelle is in command of this vessel.\"\n\nArrington's face screwed up in disgust. \"This pathetic little barge barely qualifies as a vessel.\" Now Arrington sneered at Hrelle. \"Are you content to let your women fight your battle, Pretty Kitty? I don't know how your wife ever put up with you.\"\n\n\"I was an amazing fuck. Now, what really brings you to our neck of space?\"\n\nArrington scowled - Hrelle wondered if that had been her default expression all her life - and made a dramatic show of gathering her strength to announce, \"You know why I'm here! I want to have a private word with my nephew. I was happy to do so over a subspace channel, but you forced me to come here.\"\n\nHrelle nodded. \"You should look up the definition of 'forced', it might surprise you. Still, I'd be more than happy to fulfil your request. But... you haven't said the Magic Word.\"\n\nShe was almost shaking with barely-controlled fury. Through clenched teeth, she declared, \"If you think you're gonna make me meow for you, you son of a bitch-\"\n\n\"Meow?\" He shook his head. \"Of course not. The Magic Word is 'Please'. It's always 'Please'.\" He rose to his feet, walked around the desk and faced her, making her remember how taller he was compared to her. \"I'm not so petty as to humiliate you the way you did me - and are still trying to do. I wouldn't demand that; I've suffered far worse than anything you could ever have done or could do to me. \n\nBut I do demand respect. No more, no less. Respect for me, for my crew, for my ship. If any of that is beyond your capabilities... leave. We have a mission to Luntanu.\"\n\nArrington steeled herself once more, shooting glances at T'Varik and Kami, before finally offering, \"Please.\"\n\nHe turned and nodded to Kami, who departed. Arrington glared at him. \"Enjoy your little victory while you can, Hrelle.\"\n\nHe frowned at her. \"This is no victory, Lucille. Really. I've found that after twenty-five years, you remain a petty, spiteful little cow, still acting like we're back at the Academy. There's no growth, no maturity, no repentance. Nothing. It seems like such a waste. I should hate you. But as a wise friend reminded me, I should not allow my past experience to affect my present behaviour.\"\n\nThe door slid open again, and Kami entered with Giles Arrington.\n\nHrelle looked to T'Varik. \"Let's give them some privacy.\" In the corridor, he asked Kami, \"When they're done, escort the Captain and her guard back to the transporter room. Commander T'Varik and I will be on the bridge.\"\n\n\"Aye, Sir.\" She was smiling.\n\nHe reminded himself to ask her about all this later, as he walked alongside his first officer. \"I hope I redeemed myself back there.\"\n\n\"Redemption is not mine to bestow, Captain. However, I can confirm that you behaved within the parameters expected of you, particularly given the provocation. I must confess I initially had doubts as to your account of the harassment you received when you were a cadet; having met the woman now, however, such doubts have eroded. Rest assured, had I been an instructor at the time, harassment such as you undoubtedly received would not have occurred.\"\n\nHe was smiling. \"Thank you. And I hope you don't mind my reference to you being a 'wise friend'.\"\n\n\"Vulcans are naturally reticent about labels such as 'friend', with their emotional connotations. However, I cannot disagree with the adjective 'wise'.\"\n\nHe shot her a look, though he knew better than to ask if that was a joke.\n\n*\n\nGiles was dumbstruck with seeing his aunt, especially when it dawned on him that she was most likely involved with the Red Alert, something that had shocked him and the rest of Alpha Squad from a game of Double Jack in the rec room. He came to attention, her familial connection suppressed by duty. \"Ma'am, Cadet Giles Arrington reporting as ordered!\"\n\nShe smiled. \"At ease, Giles. I am still your Aunt Lucille.\" She approached, clasping him by the shoulders and squeezing. \"How are you doing onboard this heap, and with him?\"\n\n\"Um- Um, I'm fine. My Squad's a good group, and my supervisor-\"\n\n\"Has he been harassing you? Threatening you?\"\n\n\"You mean Captain Hrelle?\" He recalled the Naughty Step punishment on his first day, and the subsequent time in the brig on his first night. But after the private talk he'd had with Hrelle, he realised what an ass he'd been to the man, and regretted his hurtful remarks. \"No. Not in the least.\"\n\nLucille studied him, as if maybe he'd been conditioned to say all that. \"I'm sorry you weren't posted with me; you know I tried. I'm even sorrier that you're stuck with that traitor as a commanding officer, but he obviously has too much influence with the organisers of the Program.\" Now her hand moved up to his face, cupping his cheek and patting it. \"But this can work to our advantage.\"\n\nConfusion etched his features. \"Um, Aunt Lucille, I don't understand-\"\n\nHer voice dropped to a murmur, even though they were alone in the room. \"I've been talking with the rest of the family, and we've agreed that you should stay onboard, for a while longer anyway. Stay... and watch.\"\n\n\"Watch? For what?\"\n\n\"For anything he does that's against regulations, anything suspicious. Anything we can use to bring to Starfleet Command so that they can finally recognise what a mistake it was to accept him back into our ranks.\"\n\nHis heart had begun to race. She wanted him to spy on Captain Hrelle? Was she serious? \"Um... I thought he had been cleared of any wrongdoing?\"\n\nHer face hardened. \"There's a difference between finding someone cleared, and having no evidence of wrongdoing by them; Hrelle is definitely in the latter camp. Now think about it: he was declared a hero, could have had any number of high-profile postings. But he's chosen to take this insignificant posting, obviously to operate without oversight. But having you here, watching him, we can gather evidence to use against him.\" \n\nShe knelt, lifting up one of the legs of her trousers, reaching into her boot and withdrawing a small black rectangular box with a dull silver mesh flip-up top. She rose again and handed it to him. \"This is for you. We were going to arrange to deliver this to you at a scheduled stop in Adhafera at the end of the month, but Hrelle has unwittingly given us this opportunity to get it to you sooner.\"\n\nHe accepted it, examining it. \"It looks like an old-fashioned Starfleet communicator.\"\n\n\"Yes, and anyone who examines it will think it's just another antique. But your brother's office in Starfleet Intelligence has modified it to send messages that are encrypted and undetectable by standard Starfleet equipment, and possesses a range of twenty light years. You can send audio or data streams, and they'll bounce through the subspace buoys undetected to get to me. It's even keyed to your biometric pattern so that no one else will discover its secrets.\"\n\nHe stared at it, before looking up at her again. \"I- I don't know if I can do this. I talked with him, he told me his story-\"\n\n\"Yes, and I'm sure he painted a picture of himself as innocent, a victim of circumstance and conspiracy, the tragic hero. Don't believe him. There is far more going on that you can imagine, Giles. Starfleet, maybe the very Federation itself, is counting on you.\" Now she straightened up. \"Consider this an order, Cadet, orders no one else is to know about. Do you understand?\"\n\nHe looked to the device, then to his aunt, and then to... what? Betray his captain? Could he do it?\n\n\"Giles!\" she snapped.\n\n\"Yes!\" He swallowed. \"I'll... I'll do it, Ma'am.\"\n\nShe smiled. \"Of course you will...\"\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... FIELD TRIP"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "science fiction",
        "space",
        "federation",
        "caitian",
        "starfleet"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-imbarrazzo-ch-01"
}