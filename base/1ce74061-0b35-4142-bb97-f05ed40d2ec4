{
    "title": "Boston to Birmingham Ch. 06",
    "pages": [
        "This is the last installment. Thanks for reading, and especially for the comments, as always.\n\n.................................................\n\n\nHardy woke with a start, trying to understand why he felt so happy. Then Gwen stirred and snaked a hand over his chest, hugging him lightly.\n\n\"Good morning, my love. Did you sleep as well as I did? I have to tell you, it's the best nights' sleep I've had in over three years.\"\n\nHe caressed her hair lightly.\n\n\"Like a rock, you wore me out. In my defense, I'm still not quite up to my old self.\"\n\nShe moved languidly over his body, rubbing every inch of skin she could into to him.\n\n\"Don't worry. I've got a new kind of physical therapy in mind for you, one designed to improve you endurance and flexibility. It'll have to be at night mostly. Scheduling and all that.\"\n\n\"He had moved a hand down, capturing her breast and rolling the nipple.\n\n\"I don't know, I've always enjoyed early morning workouts.\"\n\nHe was reaching farther down when the door banged open and Melissa flew into the room, jumping into the middle of the bed. Gwen shrieked and covered her chest. Melissa rolled her eyes.\n\n\"Good morning, parental units! Mrs. Hendricks said to tell you breakfast is getting cold, and that she has errands to run, so one of you has to take me to school. And mom, if you were so interested in modesty, you should have shut the door last night, or at least covered yourself. What a sight for a shy young, impressionable girl!\n\nI'll probably be scarred for life.\"\n\nIt was all she could do to hold her laughter in as both of them glowed red.\n\n\"So, chop chop. Get your showers, and I don't mean together. I'd hate to explain I was late for school because I couldn't get my parents out of the bathroom.\"\n\nShe was up and bounded out before Gwen could even fuss at her. Hardy broke down, and soon she joined him.\n\nShe got a serious look in her eyes.\n\n\"Better get used to this.\"\n\n\"What?\"\n\n\"Our children barging in on us at inopportune times.\"\n\n\"How many children are we talking about here?\"\n\n\"Well, this house has five bedrooms, and you know how I hate to waste space.\"\n\n\"Four? How long will that take, we're getting kind of old you know.\"\n\nShe punched him in the arm.\n\n\"Speak for yourself. But I agree, we should start soon. I don't want you changing diapers in your fifties.\"\n\nThe looks they exchanged seemed almost magical. They reached for each other when Melissa barged back in.\n\n\"Gee, am I gonna have to hose you guys down? Mom, just give me your keys, I'll see you this afternoon.\"\n\n\"Young lady, you are not driving my Rover! I'll take you, and on the way we're going to have a LONG talk about respect for your elders and recognizing the need for privacy.\"\n\n\"I guess this is a bad time to tell you I called Aunt Daisy and told them you were back together. She wants you over at her house, soon as possible.\"\n\nSomething in Gwens' eyes warned her she had finally stepped over the line, and she fled the room.\n\n\"MELISSA SUE WILKES, GET YOUR BUTT BACK HERE RIGHT THIS SECOND!\"\n\nThey heard the front door slam, and her yelling something about waiting in the car.\n\nHardy held her grinning.\n\n\"Don't worry, she's just happy. You know this Facebook generation, it hits their mind and the whole world knows about it.\"\n\n\"Facebook, oh shit. You know how many family members she has as friends? All of them. The old ones that don't have computers will be getting calls, if they haven't already.\"\n\nShe noticed the change in his eyes.\n\n\"Having regrets all ready?\"\n\n\"No, baby, no. I just wanted a little more time for us to get to know each other again. I know we think we already do, but three years is a long time. We have to get used to each other, we're both different now. I just wanted a little quiet time, that's all.\"\n\n\"Don't worry, I'll just tell everyone you tied me down and raped me into submission. That'll shut them up.\"\n\nGwen almost fainted.\n\n\"Please don't tell anyone about last night. I'm kind of ashamed, but I was desperate. But, it got you back to me, so I don't regret it a bit.\"\n\n\"Don't worry, Gwen. I'll never tell, think of the damage it would do my reputation.\"\n\n\"I have to tell you, honey, that I now know that reputation is mostly smoke and mirrors. You're a very decent man disguised as a rogue. Besides, being the woman of the most dangerous man in town is kind of good for my image. Now, I've got to get going, or Melissa will be late.\"\n\nShe dashed out while Hardy ate a large breakfast. Mrs. Hendricks was pleased her efforts were appreciated. Greg came in and got a cup of coffee, sitting across from Hardy, grinning.\n\n\"Say it.\"\n\n\"Say what, Hardy?\"\n\n\"That I told you so. That you were right.\"\n\nHe laughed.\n\n\"I don't have to, you just did. Welcome back to the family.\"\n\n\"Huh?\"\n\n\"Welcome back to the family. It was close there for a little, but they liked Gwen a whole lot more than they did you, so push come to shove, if you hadn't straightened up you were out. They almost had a pool going to see how long you could last. I'm glad we didn't, I would have lost. I thought you were a lot more stubborn.\"\n\n\"Well, I'm glad to have provided so much entertainment to you all.\"\n\n\"Oh, don't get huffy, one of your cousins is bound to screw up, and we'll have something else to talk about.\"\n\n\"In fact, I have a feeling I know what it's gonna be, and no, I'm not telling you, you'll see soon enough.\"\n\n..................................................\n\nGwen felt like she was going to an execution. Marcus opened the door, and folded her into a big hug and a kiss on her cheek.\n\n\"Congratulations.\"\n\nShe rolled her eyes.\n\n\"God, does everybody know?\"\n\nAunt Daisy had come up behind them, and as usual rapped her cane on the floor when she wanted attention.\n\n\"Marcus, if you're done mauling your cousin, would you please shut the door. My goodness, no manners at all. Come on girl, we have things to discuss.\"\n\nThey went into the parlor, a room so formal it was rarely used. Oh, man, this must be serious.\n\nShe sat at a small table covered with books.\n\n\"Come on girl, we haven't got all day.\"\n\nShe surprised her by not mentioning Hardy at all. In fact she didn't say anything at all about him for the next ninety minutes.\n\n\"Gwen Marie, this is our year to host the Commemorative Cotillion. I can't believe it's been ten years already. You are official hostess, so you've got a lot of things to get done in the next few months.\"\n\n\"Huh?\"\n\n\"What communication skills! Are you sure you're a lawyer? The Commemorative Cotillion of the Daughters of the Confederacy, girl, the biggest social event in Birmingham, at least to the older members of the social elite. Invitation only, full costumes. If the man has been in the military, he has to wear a uniform, preferably one matching the rank of an ancestor, the higher the better.\"\n\n\"We only have it every two years, and combine it with the coming out of our female children sixteen and older. Melissa Sue will of course represent us. Any questions?\"\n\n\"A lot. I thought you brought me here to talk about Hardy and me. And I'm not even a member of the Daughters, am I?\"\n\n\"Why would I want to talk about you and Hardy when there is so much other important stuff going on? You got him back. Hurrah for you. I always knew you would.\"\n\n\"Not could we focus here, and yes, you're a member, have been since last year. You're welcome.\"\n\nFor the next hour she overloaded Gwen with details. What was expected as hostess. What was required attire. As hostess, she was expected to foot most of the bill, there were many members who had no wealth left, only a proud heritage.\n\nShe was expected to make discrete inquiries, and fund the attendance of as many as possible. Not to worry, she would have help. Daisy, Hildy, and two women she didn't even know would take care of that part. \n\nShe would also have a decorating, catering, and entertainment committees. There was to be a historical consultant [who turned out to be Marcus] on the proper dress. Basically all she had to do was referee arguments and write checks.\n\n\"Think you can handle it, girl?\"\n\nShe smiled wryly.\n\n\"Do I have a choice?\"\n\n\"No.\"\n\n\"Well, all right then, when do we start, and what's the time frame?\"\n\n\"Five months. No time to waste. Lots to do you know.\"\n\nAunt Daisy was really excited, far more passionate than she had ever seen.\n\n\"Look here, girl. This is what you're supposed to look like.\"\n\nThe woman was absolutely beautiful. She had a parasol, a shawl around her bare shoulders, and a dress that was magnificent, resplendent with petticoats and a hoop. There was another woman, much younger, just as attractive, standing beside her.\n\n\"They're so beautiful. Why do they look familiar?\"\n\nAunt Daisy laughed.\n\n\"Because the older one is your grandmother, and the younger one is me. I told you, except for the hair color, you look just like her. I'm sure you'll top us both. Hardy will be so proud.\"\n\n\"That was us, I won't tell you the year. Look at this.\"\n\nThere had been a painting on the wall that had been draped ever since Gwen had been coming ti her house. Aunt Daisy removed the cover.\n\nIt was a portrait, made from the photograph. The women seemed to glow. Daisy sighed.\n\n\"This was my favorite of all the family portraits. I draped it the day Ginny died. I'm commissioning one of you and Melissa to hang beside it. When I pass, you get them all. You're rich, so Marcus and a few deserving individuals in the family will get my money, but you will inherit this, the family home and all its' contents. Marcus knows and approves. Even if you never live here, keep it in the family. Nine generations of our family have lived here. I won't rest if it passes into the hands of strangers. Promise me, Gwen, please.\"\n\nGwen took her hands.\n\n\"I swear to you, my beloved Aunt Daisy, that as long as I live it will remain in the family, if nothing else, as a loving tribute to a woman who has become to mean so much to me.\"\n\nFor the very first time in all the time she had known her, Aunt Daisy cried. It seemed to embarrass her. Gwen hugged her until it passed. Finally, she shoved her away.\n\n\"Look at me, such a sentimental old fool. You must think I'm losing my reason. I...\"\n\nGwen folded her back into her arms.\n\n\"Please hush, Aunt Daisy, and just let me love you for a moment. Please.\"\n\nDaisy surrendered, it had been years since anyone had held her with this much passion. She finally pushed her away.\n\n\"Go on home now, child. You got a good man and a good child waiting for you. You have no idea how lucky you are. We'll talk tomorrow, lots to do you know. Shoo.\"\n\nDaisy sat and stared at the portrait for a long time after she left, remembering better days.\n\n.................................................\n\nGwen came home and hugged Melissa, Hardy, and Greg hard, without a word.\n\nSoon she was immersed in the mechanics of hosting and funding the cotillion. Some of the older members sniffed at the sacrilige of a Yankee being in charge, but when Aunt Daisy trotted out her pedigree like a prized mare, going back nine generations, saying where she was raised didn't matter, the fact that she was where she belonged did, they relented. Especially when they realized if they pissed her off there would be no event.\n\nHardy and the men expected to be escorts got a big surprise. The dance would be traditional ones from the late eighteenth and early nineteenth centuries, and they were expect to know and perform them at a reasonable level. Tutors had been arranged, and practices were organized. The Viennese Waltz, the Virginia reel, the Parade, even the Polka were the ones practiced, as they were the most popular dances of the time.\n\nThis made it interesting for the younger generation, they had to secure dates early enough to make the practices. This led to a flurry of dates, phone calls, and text messages. Melissa had nineteen invitations.\n\nGwen talked to her about it, she hadn't accepted any and she wanted to know why.\n\n\"Most of these are suckups, they don't want to go with me, they want to go with the rich girl. I know I'm only seventeen, but Pleasant Hill is a hotbed of political movements. Parents are already pushing their children to make life long committments they had nothing to do with love, as long as they 'marry well'.\"\n\n\"Don't you like any of the boys at school?\"\n\n\"Some. Believe it or not, most are intimidated by who I am. Heir to the Howes and Canadays, with Hardy Wilkes as my father figure, they're scared to death. Some are just shy. I really like one boy, but he doesn't know I exist.\"\n\nGwen laughed.\n\n\"Honey, as pretty as you are, there isn't a boy in Birmingham who doesn't know you exist. This is your night and your choice, so ask him, don't wait.\"\n\n\"That's not done.\"\n\n\"Maybe it wasn't done in 1850, but this is the New South, women are much more empowered, ask him! All he can say is no. Hardy didn't come after me, I had to practically drag him to the altar.\"\n\nSpeaking of altars, Gwen and Hardy were taking it slow, dating as it were. They often told each other they were loved, but Hardy hadn't brought up marriage, and Gwen was not going to screw things up by pushing him. Still, sometimes.....\n\n................................................\n\nMelissa gathered up her courage and approached the boy of her interest.\n\n\"Jimmy, I'm having some of the guys over to my house for a pool party Saturday. Would you like to come?\"\n\nJames Gregory Madsen nearly fainted. Melissa had been the girl of his dreams from her first day at the academy. He watched her blossom from a shy, insecure girl into the confident young woman before him. It rattled him so bad words almost failed him.\n\n\"Uh, what?\"\n\n\"Pool party, this Saturday, my house. Be there at three, all right? My mom and dad like to meet my new friends.\"\n\nShit! He had heard enough of the legend of Hardy Wilkes to be intimidated. His dad was a defense lawyer, and he had heard enough stories about what a cast iron bitch Gwen was to consider her equally intimidating.\n\n\"Uh, yeah, sure, I guess.\"\n\n\"Great, we're gonna grill out later, have a fire and roast marshmallows. See you.\"\n\nAnd then, in a swirl of shimmering hair and understated perfume, she was gone.\n\nHis friend stood there with his mouth hanging open.\n\n\"Good God Almighty! Melissa Wilkes. I am now a firm believer in miracles.\"\n\n\"I'm not going.\"\n\n\"Are you insane? Blood having trouble getting to your brain? Mine does whenever she's too close.\n\nThe Queen of Pleasant Hill invites you to her home, of course you're going. Your dad is gonna shit.\"\n\n\"I'm not in her league.\"\n\n\"Asshole, nobody is in her league! I'd cut off my left nut for an invitation like that. Say you're going or I'll kick your ass.\"\n\n\"Mighty brave words from somebody half my size.\"\n\n\"I mean it, I'll knock you out and dump you on their front lawn if I have to. Go!\"\n\n\"I'll think about it.\"\n\nWhen Jimmy casually mentioned he might be going to a pool party/cookout Saturday, his parents only seemed mildly interested.\n\n\"That's nice\", his mom said, \"do we know the family?\"\n\n\"You might. Melissa Sue Wilkes invited me. Dad, I believe you know her mom, Gwen?\"\n\nHis dad almost choked on his tea, and his mom nearly dropped a dish.\n\n\"Gwen Canaday Wilkes? Ex wife of Hardy Wilkes? Isn't she that rich Yankee that moved down here a few years back?\"\n\n\"That's her, mom. So, mind if I go?\"\n\nHis mother was almost drooling, thinking of the implications, the possible doorways that might swing open.\n\nHis dad laughed.\n\n\"Go on, son, have a good time. But if that girl is half as tough as her momma, about all you'll ever get to say is 'yes dear'.\"\n\nJimmy was handsome in his own right, but was too shy to realize it. Tall, jet black hair that made his blue eyes stand out. He ran cross country and played basketball, so he was in top physical form.\n\nMany of the girls at school thought he might be gay because he rarely dated. He just didn't know how to act around the female of the species.\n\nAt two forty five Saturday afternoon he was ringing the doorbell of the Wilkes household.\n\nGwen answered the door.\n\n\"Uh, hi Mrs Wilkes. I'm Jimmy Madsen...\"\n\nHe didn't get to say more before Gwen was shaking his hand.\n\n\"It's good to meet you Jimmy, Melissa speaks highly of you. I know your father, a fine attorney. Give him my best. Please come in.\"\n\nShe said something over her shoulder and a tall man appeared at her side.\n\n\"Jimmy this is my hus...er, Mr. Wilkes.\"\n\nHe held out his hand and got a firm shake.\n\n\"Welcome, Jimmy, any friend of our little girl and so on. Melissa is out by the pool, why don't you join her? We'll be out later.\"\n\nGwen felt a thrill course through her when Hardy said 'OUR little girl'. Yes, yes, yes!\n\nBut she soon had other concerns, thirty teens require a lot of attention.\n\nMost had been there and knew the rules. If it was going to be just a few girls, they could wear what they wanted, and Gwen had seen a few suits that were so tiny it seemed a waste of time to don them.\n\nIf boys were to be present, then the suits had to be more modest. Gwen had actually sent a girl or two home to change. She was pleased to see even though they were bikinis, they were modest ones.\n\nSmall groups clustered, dispersed, realigned. Melissa had a firm grip on Jimmies hand, leading him around. He was stiff as a board for the first half hour before he started to relax.\n\nThere were a few envious stares and a few hostile ones. Five boys there had invited her to the cotillion, and she had turned them all down.\n\nGwen knew boys, and girls, and teenage hormones, so she kept a close eye on everyone. She knew there would be touches, discreet kisses as the kids paired off, and that was fine. Anything else was not.\n\nShe had caught a couple in the pool house, he already had her top off. They were both banned from the house. After that she didn't have any trouble. She wasn't foolish enough not to know that a lot of them were sexual active, and she spent many nights worrying about Melissa.\n\nShe had 'the talk' with Melissa just after she moved in. No one had talked to her about sex, and she actually cried at times as Gwen explained it to her. She promised her if she felt urges she would talk to her, and agreed she was too young.\n\nBecause of her past, she was emotionally a few years behind her body, and Gwen wanted her to mature a little before she even considered it. She remembered her own past and knew if she really wanted to have sex there was really no way to stop her. So far Gwen thought she was still a virgin, but who knows? It came down to trust, and Melissa never gave her reason not to.\n\nThe party was a huge success. The boys got more reserved when Hardy came out and started the grill, but he said little and was pleasant, so they relaxed.\n\nMelissa and Jimmy were now officially an item. One look at Jimmy and you could tell he was smitten, and Melissa glowed. Gwen took Hardy by the hand as they stood watching. She had tears in her eyes.\n\n\"She's growing up, honey. Soon she'll be gone, off to college and the rest of her life. I wish I had gotten her earlier, I wish...\"\n\nShe dropped his hand and fled into the house, leaving him confused for a second. She had been increasingly moody lately. Was she having regrets?\n\nIt would kill him if she decided after all this she didn't want him. She was back in a few minutes, dry eyed. She took his hand again.\n\n\"Sorry honey. Mommy blues, I guess. Don't they make a cute couple?\"\n\nHe couldn't help smiling.\n\n\"Yes they do. He hasn't got a chance. When a Wilkes woman wants something, the fires of hell couldn't stop her from getting it. I know from experience.\"\n\nShe wanted to throw him down right there beside the pool. Instead she squeezed his hand and gave him a kiss that held a lot of promise.\n\n\"Hey, behave there! Is this the example you want us to follow? All right, here.\"",
        "Melissa grabbed Jimmy and gave him a quick little kiss. Hardy thought Jimmy might pass out.\n\n\"Get used to it, son. You're with a Wilkes now, and no man alive has figured out how to handle them. I'm proof, I've been trying for years.\"\n\nMelissa and Gwen glowed with pride. Jimmy just glowed.\n\n\"Dad! Watch the grill. something might be burning.\"\n\nHe gave both a quick kiss.\n\n\"You're right. Something is heating up.\"\n\nHe turned back to the grill, while the kids who had watched the whole thing erupted into giggles and snickers. Gwen grabbed Melissa and fled into the kitchen.\n\nAfter they composed themselves they returned, bearing platters. The tables were set, and soon the hungry teens were devouring burgers and hot dogs as fast as Hardy could get them off the grill.\n\nThe girls helped gather the dishes, while the boys helped pick up the mess. It was getting dark and a little cool, so everyone changed into jeans and tees while Gwen and Hardy started the fires.\n\nThey had bought four portable fire pits and had arranged them across the yard. Soon the sweet smell of cherry wood filled the air, and marshmallows, chocolate, and graham crackers appeared, along with other snacks. Melissa made a point of joining every group, with Jimmy in tow.\n\nHardy and Gwen sat in the shadows, watching. A couple would fade into the night for a quick kiss, but return before someone came looking for them, careful to obey the rules. Melissa and Jimmy wandered by, and she gave a quick wave.\n\n\"Did they let go of each other long enough to eat?\"\n\nGwen laughed. \n\n\"Just barely. I think they were hungry for something else.\"\n\nGwen watched closely as Melissa pulled him behind the huge oak at the corner of the yard. Two minutes later, when they walked back to the fire, you could have hit Jimmy over the head with a two by four and he would have just smiled.\n\nShe left him long enough to kiss Gwen and thank her for her advice. She seemed to have found her date for the Cotillion. \n\nBy ten everyone was gone but Jimmy. He was allowed to stay until eleven while they cleaned up. He offered to help, but they shooed them into the house, saying they could handle it.\n\n\"What do you think they're doing now?\"\n\nasked Hardy as he took the last trash bag to the bin.\n\n\"If I had to guess, I'd say they were verifying the fact that they both have their tonsils still.\"\n\nsaid Gwen laughing.\n\n\"Come over here honey, I want to show you something behind this oak tree.\"\n\n..................................................\n\nGreg was still there, he seemed in no hurry to return to Boston. When Hardy got shot, he took an indefinite leave, turned the business over to the partners, and came down immediately. He seemed to be gone a lot lately, and when Gwen asked him about it he said he was going for long drives, enjoying the countryside. His drives lately had extended to overnight excursions.\n\nAfter verifying Hardy was going to survive, he paid a surprise visit to Roy.\n\n\"Know who I am?\" Roy nodded.\n\n\"Something I can help you with?\"\n\n\"I hope so. I need to find Ronnie Wilkes.\"\n\nRoy's eyes hardened.\n\n\"Don't concern yourself. This is family business, we'll take care of it.\"\n\nGreg exploded.\n\n\"That was my daughter he almost got killed!\n\nHardy is like a son to me, and now he's lying in a hospital bed shot to ribbons! They're my family too, so it is my fucking business. Now, you gonna help me, or do I have to hire outside the family?\"\n\nRoy and Harry, who happened to be there, was awed by the feeling of raw power that radiated from Greg. The man was pissed.\n\n\"No offense, there. We're just used to handling things ourselves.\"\n\n\"I intend to let you. Anything you want, and I mean ANYTHING, you let me know. Money? No limit.\n\nLegal services by the best money can buy if you need it. Just one thing I ask. I'm there when you get him, understand? Give me your word as a Wilkes.\"\n\nFeeling like he was making a deal with the devil, Roy extended his hand.\n\nGreg gave him a gym bag. Roy opened it, it was packed with cash.\n\nHe looked up in wonder.\n\nTwo hundred thousand. If that runs out, I'll give you more. Spread it around, if there is any left after we find him, keep it. Now get to it!\n\nHe strode from the room without a backwards glance. Roy and Harry looked at each other before Harry shuddered.\n\n\"Glad he's not pissed at me.\"\n\n................................................\n\nRoy put a bounty out, big enough to get a lot of attention. Will Rob heard about it through the grapevine, and hoped he would be the first to find him. He knew what would happen if he didn't.\n\nRoy won the race. One of the younger cousins found the hot car behind an old abandoned house.\n\nGreg, Roy, and six of the toughest men in his crew waited until midnight before slipping through the brush. Greg moved like a ghost.\n\n\"He's done this before\" Roy thought, watching him.\n\nRonnie never had a chance. He was asleep on an old sofa when they burst in. He didn't get a single shot off.\n\nRoy was well on the way to beating him to death before they pulled him off.\n\nGreg got his attention.\n\n\"I want you to tie him up, then leave. I'll take care of him.\"\n\nRoy started arguing about upholding the family honor. He stopped in shock when Greg pulled a combat knife out of nowhere and laid it against his throat.\n\n\"Listen to me Roy. I said I'd take care of him. And I will. I bought and paid for him. Leave me two guys and go on home. We're all tied together, so it's the same family now. Please, Roy.\"\n\nHe left his two toughest cousins. The look Greg had in his eyes when he left made the hair stand up on the back of his neck.\n\n\"Wait outside,\" Greg told the two remaining men, \"I'll be a little while.\"\n\n...............................................\n\nRonnie came to his senses to see a man he didn't know watching him. An older guy, he looked like he worked in an office. He felt a sense of relief, he wasn't going to die. There was a small fire going in the old woodstove, even though it was warm. The man smiled.\n\n\"Good, you're awake. Let me introduce myself. I'm Greg Canaday, the father of the woman you sold out to the Escobars, and the father in law of Hardy Wilkes, the man you tried to murder. You almost got him, but Hardy is just to damn tough. I thought about waiting until he could take care of you personally, but I don't have that much patience.\"\n\nRonnie started to get really nervous. The man returned to stirring the fire. When the flames leaped up he stopped.\n\n\"Let me tell you a little about myself, Mr. Wilkes. I was born rich and got even richer. My dad was afraid I would become weak, so he sent me to VMI for my education. When you're a rich Yankee kid in a Southern military school, you learn to defend yourself pretty quick. It also taught me how Southerners think.\"\n\n\"I loved the place, and as an alumni I support it generously. My family has a tradition Mr. Wilkes, we have represented our country in every war since the Revolution.\"\n\n\"I went straight out of school into the Army, the last year we were in Southeast Asia.\"\n\nHe paused, remembering.\n\n\"I did things there, Mr. Wilkes, terrible things.\n\nI ran a crew on the 'night shift', know what that was? No? Good, very few did.\"\n\n\"I swore if I got back home I'd never raise a hand against another person, but I'm afraid you've forced me to break that oath.\"\n\n\"You're going to die tonight, Ronnie. It won't be quick, it won't be painless, you can scream if you want. If I get tired of hearing it I'll cut your tongue out. You ready?\"\n\nBefore he could answer or beg, Greg pulled the combat knife he was heating in the fire and laid the flat of the blade against his cheek. The skin immediately seared and a terrible stench filled the air.\n\nRonnies' scream caused one of the cousin to jump off the porch. He was about to go in when the other pulled him back.\n\n\"Best leave it be.\"\n\nThirty minutes and many screams later, it got silent. Greg appeared at the door, blood soaked clothes in his hand. \n\n\"Clean up, will you? And tell no one. If you do and I find out, I would be very displeased\" he said as slipped into the darkness.\n\nThe youngest cousin went into the house, rushed back out and spewed his supper into the bushes. The older one went in slowly and stopped stunned.\n\nRonnie, or what was left of him, was slumped on the floor. The knife had been jammed into the wall above his head. Something dangled from it. The man looked closer. It was a tongue.\n\nThey never spoke of what the saw, only telling Roy that Ronnie had been dealt with. At later family reunions, they avoided Greg like the plague.\n\n..................................................\n\nGwen was rushing around, preparing for the Cotillion, Greg would appear and disappear with a strange smile on his face, and Melissa was experiencing love for the first time, so Greg was at loose ends.\n\nJimmy had pretty much become a fixture at the house, and they managed to get in extra dance practice with Gwen and Melissa. Jimmy was determined not to embarrass her, and Hardy just liked to dance. Besides, it was great exercise.\n\nHis body was almost completely healed. He started spending time at the farm, attending to things that got neglected when Joshua became ill. There was always a younger cousin or two around to watch him while Hildy was gone. She seemed to be gone a lot lately. Hardy wondered about that, but it was none of his business. Besides, she seemed happier now than he had ever seen her.\n\nHardy had found two younger female cousins and paid they on the sly to make sure Hildy wasn't overworked and to help prepare the Sunday dinners.\n\nThey were getting bigger and bigger until the average group was around fifty, and they had to move it outdoors. Hardy had a shelter built that could hold about a hundred, complete with kitchen.\n\nA lot of time was spent looking at the herd of cattle Hardy had bought.\n\nHerd was a bit of a grand word for five cows and a bull, but he had plans.\n\nThey were Scottish highland cattle, small, shaggy, Hardy loved the way they looked. \n\nGreg had found them on one of his drives while in Tennessee, and kept on about how they looked. Hardy looked them up on the computer, and nagged the whole family into going to see them.\n\nGwen thought they were cute but was still too much of a big city girl to get close. Melissa and Jimmy were soon in the pasture petting them, after getting permission from the owner. He didn't have any for sale, but gave Hardy a few names.\n\nThree weeks later he bought two cows in Tennessee, two in Arkansas, and a bull from Georgia. He was like a kid at Christmas when they were delivered.\n\nOne huge benefit was the way Joshua reacted to them. It was the first thing that sparked his interest since the surgery. He soon spent time with them daily, making them pets. At the sound of his yell, they would charge the fence, fighting for attention. When the first calf appeared he was so happy he almost gave out cigars.\n\nGreg gave him a computer, and at eighty two he learned how to use it. He corresponded with other owners constantly, looking for additions to the herd. Soon visitors would show up, usually for Sunday dinner, and discuss cattle until everyone in the family knew way too much about cows.\n\nGreg surprised the family when he bought the farm two properties over, saying it was just an investment. Hildy was over constantly, supervising the remodeling of the house. He then bought ten Highland cattle, after getting Josh to agree to look after them.\n\n.................................................\n\nThe time for the Cotillion was fast approaching. Gwen felt overwhelmed at times, even with the help she was getting. It was to be held on one of the grand old plantations just outside town.\n\nThe plantation was long gone, and the house was now used for marriages, corporate events, and private parties. The big draw was the ballroom, a cavernous room capable of holding three hundred.\n\nSo far she had two hundred forty confirmations.\n\nAbout half needed economic assistance, and Daisy discretely supplied the necessary funds, mostly as a kindness for old friends. Though she would never mention it, she was sure this would be her last cotillion, and she wanted to go out in style.\n\nTailors had been laboring constantly to make sure the suits and dresses would be ready.\n\nThere was a strict code for the women. The ones being presented could wear white, ivory, yellow, pale pink or light blue.\n\nThe mature women could wear red, blue, green, in darker colors, or gold. The older ladies, especially the widows, were encouraged to wear black.\n\nTwo weeks before the affair, Gwen went for her final fitting. She was stunned when the seamstress told her she would have to let it out just a little.\n\nShe knew she had been eating erratically and hadn't been exercising lately, but thought she had lost instead of gained. Oh well, she would take better care of herself after it was over.\n\nThe next morning she woke nauseated, and just barely made it to the bathroom.\n\nShe was due at the plantation for the final run through, so she ate an antacid and went to pick up Aunt Daisy. \n\nShe was still feeling queasy, but managed to get through the meetings. On the way back though, she had to pull over. Daisy insisted she see a doctor, couldn't be coming down with something when the cotillion was so close.\n\nDaisy made a call, her cell phone was her one concession to the modern world, and a doctor was waiting when they arrived at her house.\n\n\"Who makes house calls anymore?\" she thought, as he took her temperature and checked her blood pressure. He asked her questions and began to smile.\n\n\"Please come to my office tomorrow, Mrs. Wilkes. I need to run a few tests to confirm your condition.\"\n\nDaisy was alarmed.\n\n\"Condition? Answer me straight, what do you think is wrong with her?\"\n\n\"I don't think anything is wrong with her that a little time won't fix.\"\n\n\"How much time? We have a very important social event coming up in just a few days, will she be all right by then?\"\n\n\"Oh, I have no doubt she will be well enough for your event. And the time frame is roughly about seven to eight more months.\"\n\nHe looked into Gwen's nervous eyes.\n\n\"I firmly think, my dear, you're about to experience the joy of motherhood. Tell me, when was your last period?\"\n\n\"It should have been almost two weeks ago, but I have been irregular in the past, especially under stress.\"\n\nThe implications suddenly hit her.\n\n\"OH MY GOD! I'm having a baby!\"\n\nShe collapsed into the sofa, crying uncontrollably.\n\nDaisy was hugging her, crying with her.\n\n\"Hardy will be so proud! I wish I could see his face when you tell him.\"\n\n\"Hardy! What am I gonna do about him? I love him, he loves me, but he hasn't brought up getting remarried and I've been too scared to ask.\"\n\n\"Tell him it's time to stop dallying around and be a man. I have no doubt he will stand up to his responsibilities.\"\n\n\"No, I want him to marry me because he wants to, not because he thinks he has to. What a mess.\"\n\nShe lowered her head sobbing again.\n\nDaisy cleared her throat as though she had something distasteful in it.\n\n\"Well, you could always take care of it, discretely. He would never know.\"\n\n\"Take care of it? Oh, you mean an abortion! NO! Even if he doesn't want it, even if he leaves me, this baby will be born.\"\n\nDaisy patted her hand.\n\n\"Good girl. Now, compose yourself and think of a way to tell him.\"\n\n..................................................\n\nHardy noticed Gwen was a lot quieter than usual that night, but just left her alone, thinking she had the upcoming affair on her mind. He did tell her his costume was ready. She told him she had her last fitting too. They agreed not to see them until the night of the event, hoping they would both be pleased.\n\nStill, he glanced up from time to time, catching her watch him.\n\n.................................................\n\nHardy had been thinking a lot about marriage, lately. He wanted to ask her in the perfect place, at the perfect time. He decided to do it at the cotillion. It would be a magical night.\n\nUnbeknownst to everyone, he had his own surprises planned for that night. \n\nFinally, the night was at hand.\n\nGwen had been doing a lot of thinking also. She had decided to bite the bullet and tell him right afterwards she was pregnant. That way, if he reacted badly, she would have good memories about the cotillion.\n\nGwen, Daisy, Hildy, and Melissa got dressed at Daisy's, not wanting the men to see them until the last minute.\n\nHardy, Greg, and Jimmy dressed at their house, called for the limo, and soon arrived at the door.\n\nIt was opened by Daisy, and the men were escorted to the parlor, with the door left open to a full view of the stairs.\n\nDaisy got their attention.\n\n\"Gentlemen, Miss Melissa Sue Wilkes!\"\n\nShe floated down the stairs like a vision in a dream. A pale yellow dress, shoulders bare and a ribboned cameo around her neck. Her hair cascaded in loose ringlets framing her face, with matching ribbons woven through it.\n\nJimmy nearly passed out. He was dressed in a planter's suit of the era. frock coat, laced collar, high boots.\n\n\"Miss Hildy..um..Baker!\"\n\nHildy was a vision, medium red satin gown, white lace gloves, lacquered comb holding an elaborate hair style. Red satin slippers adorned her feet. She, too, seemed to float as she moved. A double strand of pearls wound round her neck.\n\nGreg was grinning ear to ear. Her escort for the night. He wore the uniform of a Union captain.\n\nThere was a serious discussion among the members, but Greg said if he couldn't wear it he wasn't going. It was finally permitted, as the committee said, as a gesture of reconciliation over past difficulties.\n\nDaisy waited a full five minutes before announcing Gwen.\n\n\"Mrs. Gwen Marie Wilkes!\"\n\nThe gown was shimmering gold, layers of lace and silk, with matching gloves. A single diamond glittered at her throat, courtesy of Daisy. A simple lace shawl framed her bare shoulders.\n\nHer blond tresses were arranged artfully in a semi-bun.\n\nHardy couldn't even remember breathing, and he would have bet his soul she never once touched the steps on the way down.\n\nHe had the uniform of a major from the First Alabama, authentic in every detail, complete with sash and saber. Gwen had talked him into growing his beard back, just for this event.\n\nThe men each gave their ladies a single red rose, and were allowed to kiss their cheeks, mustn't disturb the makeup, please.\n\nThey also gave Daisy a rose each, yellow, white, and red. They were also allowed to kiss her cheek.\n\nHer eyes glowed with more emotion than Gwen had ever seem. She wasn't to travel with them, she had her own escort. She teased Gwen relentlessly by not revealing him.\n\nWhen the limo pulled into the plantation drive, it pulled over in a designated area, where four carriages were waiting. They were polished and shining, the horses curried and plumed.\n\n\"What's this?\" Melissa cried with excitement.\n\n\"This is my contribution to the festivities. Jimmy, Greg, Will Rob when he arrives, and me will escort each guest to the front steps of the mansion and inside. You ladies and Aunt Daisy will greet them as they enter. Go on, we'll be there when the last guest arrives.\"\n\nHe had also hired two different groups of photographers and videographers to immortalize the event. \n\nAs official hostesses, they had arrived an hour early. Soon, carriages were rotating through the gates, everyone wanted to arrive in style, so no one drove. Gwen, Melissa, Hildy, and Daisy welcomed them all, urging them to try the finger foods being offered by servants dressed in the garb of the mid eighteen hundreds. The orchestra was tuning up and the festivities would begin soon.\n\nThe guests mingled, seeing and being seen. There was a 'parlor' where the adult ladies could get more serious refreshment than that offered in the ballroom. and a 'drawing room' available for the gentlemen. Gwen, for reasons unknown to Hardy, wasn't drinking, and he decided maybe it was best if he left the libations alone. They circulated for forty five minutes, keeping an eye on the youngsters.",
        "Suddenly there were two loud raps at the head of the stairs. It was Marcus, dressed to the nines in period clothing, holding a large cane. He had a small, almost invisible headset on.\n\n\"Ladies and Gentlemen!\"\n\nHis voice echoed and boomed all over the ballroom. courtesy of a very discretely place PA system.\n\n\"In your time honored tradition of your ancestors,\n\nit is time for the presentations. Dancing will commence shortly afterwards. Places please! We will commence in exactly five minutes.\"\n\nThe 'presentations' were for the younger women to be formally introduced to the elite of local society. Afterwards, every couple would go up a back stair, to be introduced and proceed down the main stair into the ballroom, to appropriate applause. The hostess and her family were always presented last. It was said that the importance of your ranking in society was revealed by the order of presentation, with the most important going last.\n\nThe girls were presented first. Marcus would rap his cane twice for attention, and then announce them. Melissa was the very last.\n\n\"Ladies and Gentlemen, may I present to you Miss Melissa Sue Wilkes, escorted tonight by Master James Madsen.\"\n\nMelissa remembered the night for the rest of her life. She told her children years later she knew then how Cinderella must have felt.\n\nThe adult introductions started, couples gliding down the stairs to polite applause. It was getting closer to the end before the dancing.\n\nHildy and Greg were to be introduced, then Daisy and her escort, and finally Gwen with Hardy.\n\nHardy thought Gwen was acting strange, and she thought he looked nervous as a cat at a dog show.\n\nThe curtain opened and Hildy and Greg appeared.\n\n\"Ladies and Gentlemen, Mr. and Mrs. Greg Canaday!\"\n\nGwen blurted \"What?\"\n\nGreg looked over his shoulder with a grin as the curtain closed. \n\n\"We eloped last weekend.\"\n\nDaisy stood with a smug smile, Hildy told her earlier in the week, making her promise not to ruin the surprise.\n\nGwen got another shock when Aunt Daisy stepped up to the curtain with her escort.\n\n\"Ladies and Gentlemen, Miss Daisy Howe, escorted by Mr. Joshua Hardy.\"\n\nDaisy had on a black, lace accented dress, with red trim and a red shawl. Josh had on a sergeant's uniform, in honor of an ancestor who won the Confederate version of the medal of honor.\n\nMost knew she would never see another Cotillion, and their applause let her know just how much she was valued.\n\nThey stepped up to the curtain. Hardy arranged for Marcus to hold the curtain for a moment.\n\nHe held her hand tightly for a second, before dropping to one knee.\n\n\"Gwen, I thought about how to tell you just how deeply I love you, but words fail me. Just know, I never want to spend another night away from you,\n\nmy lover, my woman, my wife. Will you marry me again?\"\n\nGwen looked into his eyes, blurted out \"I'm pregnant\" and in the grand tradition of Southern Belles going back over three centuries, fainted dead away.\n\nMarcus thought he heard the signal, rapped twice, and announced them.\n\n\"Ladies and Gentlemen, your hosts, Mr. and Mrs. Hardy Wilkes!\"\n\nThe curtain opened to Hardy, down on one knee, holding an unconscious Gwen.\n\n................................................\n\nThere was a collective gasp from the ballroom, and Marcus quickly closed the curtain. There were two doctors in the crowd, and they were rushed to the top of the stairs.\n\nGwen stirred, waking up in Hardy's arms while he was still on his knees. It all flooded back to her, and she grabbed his head kissing him repeatedly, and with passion, stopping occasionally to profess love for him. \n\nThe doctors, upon arriving on the scene, smiled and pronounced her sufficiently recovered to resume the festivities.\n\nThey did get to a do a belated grand entrance, and the reason for the delay shot round the ballroom with the speed of light.\n\nWhen the curtains opened, the applause lasted three minutes.\n\nMelissa and Hildy met them at the foot of the stairs. Melissa gave a little fist pump and said \"You go, Mom!\", then patted her stomach.\n\n\"And you too, little brother or sister.\"\n\nDaisy, Gwen, Hildy, and Melissa hugged in a group, crying, even Daisy. They all had to retire to the powder room to fix their appearance.\n\nThe Cotillion turned into a personal celebration for the Wilkes/Canaday clan. After being assured by the doctor it was all right, they danced the night away. All things end, so at midnight the ball was officially closed.\n\nThere was a run on bedrooms as the younger generation changed into party clothes. As a gift for Melissa on her eighteenth birthday Hardy and Gwen had rented one of the smaller halls at The Club, a nearby landmark, and turned it into a dance club, complete with lights and a DJ.\n\nHardy and Gwen were the official hosts and chaperones, as well as four other couples. He had rented rooms for them, as well as the bridal suite for himself. Greg and Hildy were going home to their house, the farmhouse they had renovated.\n\nJoshua escorted Daisy home, and spent the night, sleeping in the same bed with someone else, the first time in over thirty years either had done so.\n\nThe kids had a ball, and kept the floor full until two thirty. Most had rooms reserved with the families, but a few, including Melissa, decided to go home.\n\nGwen objected.\n\n\"No one will be there, I hate to think you'll be alone.\"\n\nMelissa was looking down and blushing furiously.\n\n\"Uh, Mom, I won't be alone.\"\n\nRealization hit, and Gwen gave the small look a woman gives when she understands her daughter is no longer a child.\n\n\"Be careful, honey, promise me.\"\n\n\"We will Mom. I love you, and don't tell dad, okay?\"\n\nShe stood at the entrance watching as Jimmy pulled up and opened the door for Melissa, before heading back to the suite. \n\nAs she walked she rubbed her tummy absently, wondering how many more will give her the heartbreak of watching them grow up and venture out in the world.\n\n.................................................\n\nAnd now we're back to the start of our tale.\n\n...............................................\n\nThe little girl finally got her hair braided and bounced into the arms of the man who had just entered.\n\n\"Grandpa, is Grandma a Yankee?\"\n\nHe looked at her, the light of his life for forty years, still a beautiful woman in his eyes.\n\n\"Well, she was honey, but she got over it.\" \n\n...............................................\n\nEPILOGUE\n\nJoshua died eighteen months later, but not before he got to hold his great grandsons, Joshua Hardy Wilkes and Gregory Canaday Wilkes in his arms. He said later it was the proudest moment of his life.\n\nYes, Gwen had twin boys the first time out, followed by Annette Daisy Wilkes, named for Daisy and Hildy, whose real name was Annette. She never said how she got the nickname Hildy.\n\nDaisy passed shortly after Joshua, but not before she got to hang the portrait of Gwen and Melissa beside the one of her and her beloved sister Ginny. Marcus found her in a chair, facing the paintings. True to her feeling, she never got to attend another Cotillion.\n\nMarcus became instantly very wealthy and ended up marrying a girl he met in college. She was white, a Chapman, ironically, another cousin. They had four children.\n\nGwen kept the maintenance up on her home, allowing the Daughters of the Confederacy to use it as a base. She would go every once in a while, when she was feeling old or missing Daisy, and sit beneath the portraits, remembering.\n\nGreg and Hildy moved to Boston, but after one winter they were back to stay. He settled down to raising Highland cattle, becoming one of the foremost breeders in the country. Hildy discovered a passion for horses, and her Arabians were considered some of the best to be found.\n\nHe passed at seventy five. Hildy lived another dozen years, but most of the sparkle was gone from her eyes. She said before she passed that her greatest comfort was knowing that Gwen had taken her place, and that the family was in good hands.\n\nGwen and Hardy lived in Birmingham for eight years before they both retired to the farm.\n\nThey stayed because Gwen spent two terms as District Attorney and one as a Circuit Court judge. Guess Paul was right.\n\nJ.T. passed, quietly. Will Rob said it was the first thing he ever did quietly.\n\nWill Rob finally retired after two more terms as sheriff, and he gave Gwen the framed news article and the tanned snakeskin.\n\nAllen Hovis was in jail three years, wearing the bitch tag of an hispanic gang, before he was found with his head in a toilet, drowned.\n\nVincente Escobar disappeared during a cartel war. He was never seen again, although rumors persisted for years he was living in Italy with his family.\n\nAnne Burnside retired with full honors, and married, a beautiful woman named Victoria, and they run a resort in the Bahamas. She seems happy with her life, although occasionally she will see a blonde couple at the resort and indulge in a daydream.\n\nMelissa Sue Wilkes attended Alabama, and took her law degree at Harvard.\n\nJoshua joined the Army and made it a career.\n\nGreg studied law, but ended up entering a seminary and becoming a Baptist minister.\n\nAnnette Daisy married badly, twice, before finding a good man. They've been together ten years.\n\nRoy miscalculated and ended doing ten years.\n\nJune bug graduated while he was incarcerated.\n\nWhen his family needed something, a cousin was always available. Hardy and Gwen paid their living expenses until he got out. By then, he retired, draws a check, and laughs at the world. \n\nHardy and Gwen? They love each other madly, and spend their days in harmony. Gwen is is the undisputed matriarch of the family, helping them wherever she can. Many went on to college on mysterious scholarships and grants. The Sunday dinners have become legendary.\n\nThis really is...the end.\n\n..............................................\n\nOops. Not quite. I already have a series about Melissa Sue plotted out, but it will be a little while, got too much going on right now. Thanks for reading.\n"
    ],
    "authorname": "qhml1",
    "tags": [
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/boston-to-birmingham-ch-06"
}