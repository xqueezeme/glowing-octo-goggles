{
    "title": "Let Me Help You, Good Doctor Ch. 07",
    "pages": [
        "Dominique's eyes flickered open and stared at the ceiling as she over heard Nik in the kitchen. What was he doing in there, she thought as she raised her heavy head. After everything that happened the night before Dominique had little energy to do much, but lay there. She had never been so thoroughly satisfied and exhausted at the same time. So, that's angry sex. At first she thought it was overrated, but now she definitely sees the upside. After their little tryst in the living room, they went back to the bed for a quick nap, then started making out like they were teenagers on a date before he ordered a pizza for them. They ate in front of the fireplace, naked and Dominique was actually shocked that she had no inhibition about being naked around him. She even turned her phone off. \n\nShe had to move around though; she couldn't just stay around here, no matter how much she was enjoying it. She slowly pried her way out of bed and grabbed one of his shirts to put on. She didn't even bother to look into the mirror; she just went directly into the kitchen to find him in front of the stove. She giggled silently as she watched him flipping pancakes in his green lounge pants that fit nicely on his hips. Okay, enough of this watching. She tip toed over to his side and his eyes immediately met hers.\n\n\"Good morning you.\" He said as she sat down on the counter.\n\n\"Hey, and here you are again in the kitchen.\" She smiled.\n\n\"You've seen my family, us Italians cook.\" He shrugged and she laughed.\n\n\"Are you telling me those pancakes are homemade?\"\n\n\"If you count Bisquick as homemade.\" He laughed and she couldn't help but laugh as well, \"Have I told you how sexy you look all rumbled?\"\n\n\"Plenty of times, yes.\" She smiled as he leaned closer and kissed her, \"Don't start that again.\" She whispered against his lips. \n\n\"I have no idea what you are talking about.\" He said still kissing her.\n\n\"Well, your mother would be very disappointed in you if you burn my breakfast.\" She laughed and he started laughing too.\n\n\"Alright then, what were you going to do today?\"\n\n\"Finish the plans for Katrina's baby shower and then possibly talk to Jason to see where his head is at.\" \n\nNik tensed up immediately when she mentioned his name. She was still harboring over that maniac. Nik blew out hot air narrowing his eyes at the pancake. Dominique immediately noticed the tension in his body and slid off the counter and stood behind him. She wasn't sure what to say and the only thing she could do was wrap her arms around his mid-section. She felt his body slowly loosen up at her gentle touch. She planted little kisses on his back when they heard the door. Who could that be, Nik thought to himself as he slowly moved out of her embrace. \n\nAs soon as he opened the door, he felt a sudden soft jab on his shoulder; \"You know, little brother, you have to be on alert at all time.\" he looked into Giovanni's smiling face. \n\n\"What are you doing here?\" Nik smiled embracing him.\n\n\"I came to see you and check out some places to stay since you want me down here.\" Giovanni said walking in.\n\nAs soon as Dominique confirmed that it was really Giovanni, she tried to quietly move to Nik's bedroom to hide. He already caught them in a bad situation once, no point in him catching it again. \n\n\"Yea, that's great. I know some places around here you can look at. I was just cooking some breakfast.\" \n\n\"Oh really? Well, I'm sure Dominique is enjoying that breakfast. How are you doing, Dominique?\" He said and she turned around to face him. \n\n\"Hey, I was just...\"\n\n\"Save your breath. You both are grown and I already had a feeling that something was going on.\" \n\nDominique was going to say something but thought it was best to keep her mouth shut, \"Yea, well I will just put on my clothes.\"\n\n\"Don't get dressed on my account.\" Giovanni said and Dominique just shook her head as she went into the room.\n\nHe waited until Dominique shut the door, admiring the sway of her ass, \"You sure know how to spoil a nice breakfast.\" Nik finally said.\n\n\"Apparently, I've done it before, so I'm use to it. You are going to show me some houses?\"\n\n\"You are trying to get right to it, huh?\"\n\n\"Well I want to establish some sort of ground when I get ready. Right now, I'm just dealing with getting money together and stepping out quietly. That's the main thing that the boss wants is for me to step out quietly and make sure that I don't get anyone coming back for me.\"\n\n\"Wait a minute; you think that's going to be a problem?\" Nik said crossing his huge arms.\n\n\"Well, I don't think it is, but he seem to think so. I think it's more that he respects that I am getting out and he wants the transition to go smooth.\"\n\n\"The boss sounds real cool about losing an employee after so many years.\"\n\n\"Well, he told me that after so many years of being loyal and me wanting something more, he can't help but let me go.\" He sighed and Nik just nodded, \"Don't worry little brother everything is going to be cool. You just worry about that woman in there.\"\n\n\"Speaking of which, I have something to talk to you about.\"\n\n\"Oh, so you mean you want some advice about women? You haven't asked me for any advice since you became the Italian Stallion.\" \n\n\"Ha ha, very funny. I'm being serious though.\" Nik was about to open his mouth but that's when Dominique came in wearing what she had on yesterday.\n\nNik went back to the kitchen as he watched her sit at the table, \"So Giovanni, what's your next step when you move here?\" Dominique asked.\n\n\"Getting a job really, I just don't know what to do. I mean when you spend years doing nothing but security work, you kind of draw a blank on what's next.\"\n\n\"Well, what about working with your brother?\"\n\n\"Um, no. I don't want to be a police officer, I will leave that to my brother and papa. I want something different, just not sure what.\"\n\n\"You will find out brother. You could always open a business.\" Nik said fixing a plate and sitting it in front of Gianni.\n\n\"I must admit, hanging around the boss made me want to own a club, but I would want something real classy and nice. A place where you can listen to good jazz music, listen to poetry, and enjoy some Italian food.\" Giovanni smiled.\n\n\"That's actually a pretty good idea Giovanni. I mean I would certainly go. You should look into a silent partner though, just a thought.\" Dominique shrugged. \n\n\"Maybe, but everything is still up in the air. I just want to concentrate on getting a job for now and then possibly working on the club thing.\" Nik sat a plate in front of Dominique and sat next to her. \n\n\"Yea, I think you may even get mom and dad to come. You know they love old school jazz, but we will get into that later. Let's eat.\" Nik said and everyone dived in. \n\nAfter breakfast, Dominique went back home trying not to disturb the two brothers. She had a pretty busy day, trying to finalize a couple of things for Katrina's shower and the rehearsal dinner. She sighed leaning against the door thinking back to last night. There was something so spontaneous about what they did as well as romantic. She took a deep inhale, trying to get a hold of her rapidly beating heart. Why was it reacting this way thinking about Nik? It was very welcoming but scared the crap out of her at the same time because she didn't understand why she was feeling this way for Nik but nothing came up when she thought of Jason. She sighed to herself; she needed to clear her head.\n\nShe threw herself back into work and planning. She didn't even call her friends, just spent most of her day trying to make arrangements. She called Candy to setup for them to go and pick out some food for the rehearsal dinner tomorrow. \n\nEverything was going up so fast and Dominique couldn't figure where her head was at. One moment she was all for going after Jason and the next she would have doubts about them being together. This wasn't suppose to go this way. She ran her nervous fingers through her hair and headed out, \"Nicole, I'm about to head out for awhile.\" \n\n\"Yes, ma'am, want me to sit by the phones?\" \n\n\"No, you have some tests I know you have to study for. Let's go ahead and close up the office. I'm going to take everything else home.\" \n\n\"Okay, I hope everything is okay.\" \n\n\"I'm fine sweetheart; just want to do some work from home if that's possible.\"\n\n\"Well, thank you Dominique. You want me to come in tomorrow?\"\n\n\"I'm going to be so busy with the wedding and everything that I'm not going to come in.\"\n\n\"Seriously Dominique, are you alright?\" \n\n\"I'm just a little tired with planning and everything. I'll be alright.\" Nicole nodded and followed behind her. \n\nDominique met up with Candy and waited patiently for the food samples. Candy was doing her usual babbling and Dominique half listened and half went into her own world. She should pay attention to Candy and make sure she is not missing important things about the wedding. \n\n\"Dominique, are you okay?\" Candy asked and Dominique finally looked at her.\n\n\"I'm fine, just have a lot on my mind.\"\n\n\"It's not about the wedding is it? I don't want to put too much stress on you.\" She said it as if she was actually concerned. \n\nDominique bit down on her lip, \"It's not the wedding, just other stuff like work.\"\n\n\"What's been going on with work?\"\n\n\"Nothing serious, just not enjoying it like I use to. I don't understand why because I'm coming out with a book soon and I have plenty of clients that come to me but I don't get the same enjoyment that I use to get, it's been that way for awhile now.\" \n\n\"You know before I decided to be a doctor, I use to be a secretary for a big Fortune 500 company that my dad owned. I was destined to take over the business, but one day I felt like I was in a rut and it didn't give me that same enjoyment. It was then that I realized that I did that for my father. So one day I left the company and started going to medical school.\"\n\n\"That's fine Candy, but I'm too far into my business to just start over.\"\n\n\"Why not? People do it all the time. I know lawyers that have been doing it for over ten years and then decide to go to culinary school because it makes them happy. What makes you happy?\"\n\nDominique swallowed hard and sat back in her seat, \"I'm starting to really love planning again. Every party or special occasion that my friends or aunt have put together, I planned and coordinated. When I was younger I use to plan the weddings for my dolls.\" They both started laughing, \"I went into this career because...\" she paused remembering who she was talking to, \"I just thought it was convenient and whose to say that years from now that will make me happy too.\" \n\n\"No one, but it's better than how you feel now . Besides, just the experience and the ride is worth it. You never know until you tried.\"Dominique shrugged, \"Dominique, I know that you and Jason are very close and that will make us close as well. Jason cares about your well being and happiness. If this is what makes you happy, I'm sure he will be all for it.\"\n\n\"What if I fail?\"\n\n\"You made a therapist business very successful and that's a hard business to do as well, especially getting clients.\" She paused, \"Have you talked to Nik about it?\" \n\n\"Huh? Oh Nik.\" Dominique quickly recovered, \"I haven't really had this conversation with him.\"\n\n\"Are you going to?\" \n\n\"I mean, it may be something we talk about later. You know when the time is right. We are pretty early in our relationship for us to discuss future plans.\"\n\n\"Ladies?\" he couldn't have come at a better time, Dominique thought as he sat down the sampler plates.\n\n\"Well, I can tell you if you do decide to go into that career field, I can recommend you to a lot of people. I may not be from around here but I know people that know people.\" Candy smiled. Dominique smiled, \"If I decide to do it, I'll keep that in mind.\"\n\nThey finished the rest of the sample lunch talking about the rehearsal dinner and Candy went ahead and decided to have this place serve at the wedding. Dominique thought about what she told Candy. She couldn't change her career now, she put so much time and effort into therapy, but she still didn't feel the same about it. \n\nShe went to the restaurant and saw Katrina and Jade sitting around, laughing. Dominique promptly plopped herself at the table and they both looked at her as if she was a stranger.\n\n\"Okay, I'm guessing that something is wrong.\" Jade said.\n\n\"I just came back from lunch with Candy. I think I'm unhappy with my job.\" Dominique said.\n\n\"What? I thought you liked getting into people's business.\"\n\n\"That's not what I do!\"Dominique pouted, \"I'm starting to realize how much I really like planning parties and weddings.\"\n\n\"Well, we always told you that you were great at it. I know anytime I want to have any kind of party to call you.\" Katrina nodded.\n\n\"Do you think that I can start doing that as a career? Wedding planning and everything?\"\n\n\"Dominique, we think you can do anything and we will be right there supporting you. Are you thinking about quitting?\"\n\n\"I don't know anymore. I've been so confused the last couple of weeks with work, Jason, and Nik.\"\n\n\"What's going on with Nik and Jason; besides, that huge fight they had?\"\n\n\"Well, you know that he kissed me in the office? I didn't feel anything when he did not like how I feel when Nik does it and I know what you all are thinking and it's not like that. I know that I'm meant to be with Jason.\"\n\n\"If you know it, then why aren't you feeling this way with Jason. Apparently hanging around Nik is making you rethink a lot of things.\"\n\n\"I know, that's why Nik and I can never be together. He is making me question everything that I'm so use to and I don't like that. I'm comfortable and I just want to be happy.\"\n\n\"Well if that's the case sweetie, why did you start off the conversation saying that you think you are unhappy with your job?\" Jade asked and Dominique clamped her mouth shut.\n\nAt that moment, Nik and Giovanni walked in with Scott and James. Giovanni was the first person that came over to the table. \n\n\"Hello ladies, let me introduce myself...\" Giovanni said turning on the charm and Nik put his hand on his brother's shoulder.\n\n\"Both of them are taken.\" Nik assured him.\n\n\"Why the hell you invite me to stay in a town where most of the beautiful women are taken?\" Giovanni said shaking his head.\n\n\"Ladies, this is my older brother Giovanni. He just came to visit and look at some places to stay.\" Nik said.\n\n\"Nice to meet you Giovanni, I'm Jade.\" Jade smiled, shaking his hand.\n\n\"Nice to meet you too Jade. You must be the one that James was talking about?\"\n\n\"Oh, he talks about me?\" she said casting a glance at James who only shrugged, \"I guess I am. Well, are you guys hungry?\"\n\n\"Starving, that's why we are here.\" Scott said.\n\n\"Alright, get a table and one of the waitresses will be ready.\" \n\nThe guys went ahead and picked a table but Dominique grabbed Nik's hand, \"Can I talk to you for a minute?\" she asked.\n\n\"Sure, is everything alright?\" he said and she stood up.\n\n\"Yea, let's just talk outside.\" She went outside and Nik followed closely behind her telling everyone that he will be right back. \n\nShe clutched on to her purse looking down at the ground as they walked up the block. Nik could tell that something was on her mind as he looked at her fidgeting fingers. This must be something big, he thought.\n\n\"What made you go into police work?\" she finally asked.\n\n\"What?\" \n\n\"What made you go into police work? Was it your dad?\"\n\n\"Well, like I told you before, it was part of that, but the other part is I always wanted to help people.\"\n\n\"Even with the risks?\"\n\n\"Believe me, I know about the risk, sometimes my dad would come home so late and he would work so much over time. I know about the bad risk, but the good out weighs the bad. I love protecting people, part of the reason I joined the military.\"\n\n\"So, you could see yourself doing this like ten years later and still be happy?\"\n\nHe stopped in mid-step and she stopped too, \"What's this about Dominique? Are you thinking about going into police work?\"\n\n\"Oh no, it's just I'm wondering about me being happy doing what I do.\"\n\n\"So, you're having second thoughts?\" She sighed and they started walking again.\n\n\"Truthfully Nik, I did get into therapy because I thought it would make my mother proud of me. Remember I told you how proud she was when my older brother got into it. I graduated at the top of my class, I got my license at a young age, and my own practice.\"\n\n\"Well, looks like that didn't work because she still hasn't talked to you.\" She quickly turned her head to him and shook her head.\n\n\"You're right. I liked doing the work but it's getting to the point where I'm ready to go as soon as I get in. I feel like if I stop doing it, people would look at me as a fraud.\"\n\n\"When are you going to stop doing things for other people? It seems like we have this conversation all the time. Dominique, what makes you happy?\"\n\n\"Honestly? I love planning parties and weddings. When I was in college, I use to look into Public relations work and I even met a woman who did it. She had her exciting days and her not so exciting days but it was still cool. Now that was really something that I could see myself doing.\"\n\n\"Why didn't you do it, besides your mother?\"\n\n\"I was scared. I didn't know if I would be any good at it, plus when my brother decided to go into photography, my mom went on and on about how unpredictable it was and that he needed a lot of people to know who he was. She wanted her sons to be doctors, so I figured if I became a doctor she would be proud.\"\n\n\"You have been doing it for years and nothing has changed. If you are unhappy doing this then it will reflect to your clients. If you think you will be happy, you know planning parties or P.R. work then do it.\"\n\n\"Wouldn't it be useless because I'm not in a big city where a lot of people would need me?\"\n\n\"Hell, Dallas is not that far. You can do that in Dallas. You build up a client list here, if you're good word will spread and you will get plenty of business. And since I do know you, I know that you will be good.\" They both stopped and turned to look at each other.\n\n\"That means I will have to go back to school and start all over again.\"\n\n\"You can do it.\"\n\n\"What about...?\"\n\n\"Stop questioning and just do it. As long as it's something that sounds plausible and legal, you can do it. I mean you survived medical school and everything else, you can survive this. I believe you can do it.\" He said grabbing a hold of her hand. \n\n\"You really think so?\" he nodded, \"You know, I really appreciate that. I'm going to look into it.\"\n\n\"Don't look into it, do it.\"\n\n\"Thank you Nik.\"\n\n\"Now, can I get some food to eat?\" He said, point his head in the direction of the restaurant.\n\n\"Well, how about you come over later tonight and help me look at some schools?\"\n\n\"Oh, are you inviting me to come spend the night again?\" he smiled and she just sighed.\n\n\"Yes, I am Nik. Besides, I know that you will help me. Come on, let's join everyone else.\" She said pulling back towards the restaurant. \n\nLater that night, Dominique was sitting in front of the computer on Nik's lap looking through some of the local schools. They left Giovanni in Nik's apartment which was fine with him. He didn't want to real be witness to them being all snuggly as he calls it. They weren't snuggling, they were just hanging out, Dominique thought. \n\n\"So, I think that one would be your best bet. If you want, you can take some online classes and still work on some other stuff. You know you can gradually let the business go, that way you can really know if you are ready for this.\" Nik suggested.\n\n\"That's what I was thinking. I'll call the academic counselor tomorrow and ask some question. See, I told you, there was some good to you being here.\" She smiled.",
        "\"Ha, very funny.\" He said pinching her side.\n\nShe started laughing and was going to lean in to kiss him, but heard her door, \"Is that your brother?\" she asked.\n\n\"I don't know. I would think he would call if he needed something.\" He said as she got out of his lap. \n\nDominique went to open the door and gasped at seeing her Aunt Crystal standing there, \"Aunt Crystal, what are you doing here?\" she swallowed.\n\n\"I told you that you don't visit me enough so I take it upon myself to pop up. And here is Nik again?\" She said as she saw him sitting in front of the computer, \"Am I interrupting something?\" she smiled and Nik cleared his throat. \n\n\"No, we were just looking up some schools.\"\n\n\"Schools? Nik, are you going to school?\" \n\n\"Um, no auntie, I am.\" Aunt Crystal looked at her.\n\n\"What?\"\n\n\"I'm thinking about going back to school to change my career. I'm thinking about doing party and wedding planning, something I'm happy doing.\" Crystal stared at Dominique and she felt as if Crystal was going to let her have it and tell her how stupid this decision was. She knew it, she shouldn't have sprung it on her like this; she should have gradually let her know it. How would she do this if she didn't have the support of her aunt? \n\nSuddenly a huge smile spread across her face, \"That's so great.\" She finally said wrapping her arms around Dominique.\n\n\"You're not mad or anything?\"\n\n\"Of course not, I'm happy to hear about you finally doing something that you love. I know how you liked to do it when you were younger and how much you enjoy doing it now for your friends.\"\n\n\"Wow, I didn't think you would be so happy.\" \n\n\"Dominique, like I told you before, your happiness is what's important to me. Now speaking of which, I got an interesting call from my brother after years of hearing nothing from him.\" \n\n\"Um,\" Nik started bringing both women's attention to him, \"should I leave you two alone?\"\n\n\"No Nik, it's okay. You know about the situation.\" Dominique said.\n\n\"Yea, it's fine Nik, in fact from what my brother told me what happened, I'm liking you a little more.\" Nik cocked the corner of his lip, \"He told me that you came there and confronted him about being your father and you and some guy caused a scene there.\"\n\n\"I had to auntie, I feel like I should say something and not let him keep thinking that I don't exist.\"\n\n\"He also told me that you have some way convinced his wife that you are his child and that she wants you to know more about your brothers and sister.\"\n\n\"What did you tell him?\" Dominique asked as her aunt walked into her kitchen.\n\n\"I told him that it was about time. I mean you don't want anything from him. You are a grown woman and able to get what you want. It's time that he does acknowledge you and give you the respect you deserve. It's the same with your mother.\"\n\n\"She acknowledges me.\"\n\n\"Not like you deserve sweetheart. I have seen you work and strive to be the best. I've seen you attempt to find out who you are and I believe it's something you are still working on.\" She grabbed her chin, \"I miss the happy go lucky little girl that wanted to make things fun and I want you to experience life. I don't want you to live someone else's, but yours and get what Dominique wants.\" Nik nodded and smiled to himself as he saw tears begin to form in the corner of Dominique's eyes, \"If I'm able to get my nursing degree and work in a hospital while raising you, then you can finish school and create another business. You are my baby and I want the best for you.\"\n\n\"I know you do Aunt Crystal.\" Dominique sniffled.\n\n\"Now, are you ready for this new change?\" she smiled and Dominique nodded, \"Good girl, now when are you going to change and invite me to come over more.\" Nike and Dominique started laughing. \n\n\"I guess I can definitely make some time for you to come by.\" Dominique said moving into the kitchen.\n\n\"I know you will, now, what do you say I invite you all out to eat. It's my first night off in awhile and I want to enjoy it.\"\n\n\"Well Auntie, why don't we eat here? I can put something together.\"\n\n\"Oh, now that will be very nice of you.\" Crystal smiled. \n\n\"Nik, you might as well see if Giovanni want to come over and get something to eat too.\" Dominique said, looking into the refrigerator. \n\n\"Who is Giovanni?\"\n\n\"That's Nik's older brother, he came by to check on some houses.\" \n\n\"Oh and I bet he is just as charming as Nik too.\" Crystal said walking into the kitchen.\n\n\"He maybe, but I'm definitely better looking.\" Nik smiled.\n\nAs soon as Nik closed the door, Aunt Crystal looked over at Dominique as she maneuvered into the kitchen, \"So, I see that Nik is here.\"\n\n\"Aunt Crystal, don't start.\" \n\n\"What? I'm just saying he has been here a lot.\"\n\n\"He is just a good friend and helping me with a lot of stuff.\" Dominique explained.\n\n\"Well a lot of couples start off as friends in the beginning.\"\n\n\"I know but that's not me and Nik.\"\n\n\"What's his favorite color?\"\n\n\"He likes the color gray.\"\n\n\"What did he want to be when he was little?\"\n\n\"He always wanted to be a cop or be like his big brother.\"\n\n\"What does he dream of doing?\"\n\n\"Just being a police officer and possibly being a detective, what are you trying to say Auntie?\"\n\n\"Well things like that are things that men tell women that have some sort of emotional ties to.\"\n\n\"Yea, that's why I said we are friends.\"\n\n\"Okay then, when was his last relationship?\"\n\n\"He hasn't really been in any relationship. According to him, he has never been in love.\" \n\n\"Oh really, very interesting.\" She smiled.\n\n\"Auntie, I know you are trying to say something.\"\n\n\"I can tell some things when a man looks at a woman. There is a glimmer in his eyes when he looks at you.\"\n\n\"What do you mean a glimmer?\"\n\n\"You will see pretty soon, now start on that meal.\" \n\nDominique looked at her with uncertainty, but just continued cooking. What was she talking about a glimmer? That is the normal glimmer that's always in Nik's eyes. There is nothing there but two good friends hanging out. \n\nDominique smiled at her Auntie as she watched her look in the cabinet for something else to fix. She knew some of the struggles Crystal had to face being a single parent, but she never really appreciated her as much as she does now. Her aunt has been her rock and support system. Dominique reached over and wrapped her arms around Crystal's neck which caught her off guard. Crystal started laughing as she hugged her back. \n\n\"What was that for?\" \n\n\"Just because, I love you so much.\" Dominique said.\n\n\"I love you too; now don't think that's going to get you out of cooking. Men like Nik love a home cooked meal,\" Crystal said as Dominique finally released her.\n\nAfter dinner, Crystal and Giovanni stuck around from a little bit, just talking and playing cards. Nik kept his eyes on Dominique, feeling real comfortable with her as if he belonged there. She looked so sexy laughing and relaxing with his brother and her aunt. It just kept making him think that he couldn't wait till they got alone. When no one was paying attention, he would reach under the table and squeeze her thigh and she would run her hand up and down his thigh. \n\nHe kept that promise as soon as Giovanni left and he carried Dominique into her bedroom. She was laughing and giggling the entire time as he set her on the bed. She pulled him towards her as they both struggled to get their clothes off. \n\nTonight is was different, the passion and fire was there, but it was something else too. Nik took his time with her, kissing every part of her body softly. Dominique returned the kisses, holding on to him tight. He let her ride him and watched as the moonlight from the window bathed against her nude body as she took him in. She looked down at him with her eyes filled with promise as her nails dug into his chest. She was a goddess to him. He clasped their fingers together and moved her hands till they were above his head which made her press her body close to his. He kissed her with a renew passion as his hips thrust up to meet hers. She softly whispered his names against his lips as she felt her body start to build. He leaned his head back as his body start to tighten. He didn't know what he was feeling, but he didn't want to let it go. He didn't want to let her go. His sensual, sexual goddess. His Dominique. They crashed together with him spilling himself deep inside her. Her body was trembling against his which made him hold her tighter. \n\n\"Wow, that was...\" she breathed.\n\n\"I know.\" He said trying to catch his breath.\n\nAfter they calm their body down, Dominique moved off him and settled right next to him. Nik held on to her and Dominique had her head on his chest, her fingers lightly running up and down his chest. Dominique's body still felt like it was tingling all over, but also so worn out. Nik was so tired that he could barely keep his eyes open. She had to admit, she was starting to have a great appreciation of having him in her bed. She almost wished that they could stay like this. \n\nShe looked up into his half closed eyes, \"You think your brother heard us?\" \n\n\"Does it matter if he did?\" he breathed.\n\n\"Yes, I don't want him to think that I'm some sort of freak.\"\n\n\"Baby, I hate to break it to you, but you are a freak.\" Her mouth instantly dropped and he started laughing.\n\n\"You think you are so funny?\" she said and he just shrugged.\n\n\"I just tell the truth.\" \n\n\"Whatever. I guess it doesn't really matter.\" She said laying her head back on his chest, \"I guess I have to get through this rehearsal dinner now.\"\n\n\"Yep, that's why we need to go to sleep so we can be fresh as a daisy.\" \n\n\"Nik, do you think...\" she started.\n\n\"Dominique, baby, I have an early day tomorrow and you have one too. We need to get some rest.\" \n\nHe mumbled and Dominique pouted lightly. Oh well he was right, they did have a big day ahead of them and she needed to get some sort of rest, \"Good night Nik.\" \n\n\"Night.\" He mumbled.\n\n\"Sweet dreams.\" She said jokingly.\n\n\"Mmm hmm, love you.\" He breathed and Dominique's head immediately went up.\n\nDid she hear what she thought she heard? No, it couldn't be, but what if it was? She shook him a little to wake him, but he didn't move. She shook her head and smiled. No, she didn't hear that, maybe she was more tired than she thought she was. She laid her head back down and let the rise and fall of his chest slowly lull her to sleep.\n\nThe next day, Nik rushed over to James' shop before he went in for work. He was a man on a mission, moving past everyone, not paying attention to anything around him. As soon as he got to James' office, he pushed open the door. James looked up, his face riddled in confusion thinking that something must have happened.\n\n\"I think I'm sick.\" Nik suddenly said.\n\n\"What do you mean? What's wrong with you?\" James said with actual concern.\n\n\"I think I'm sick. I did something that I have never done before last night with Dominique.\"\n\n\"Man, if you enjoyed it, just say you did. It's nothing wrong with that.\"\n\nNik scrunched his face up in confusion, \"What the hell you talking about?\"\n\nJames opened his mouth and quickly closed it, \"Whatever you talking about. What did you do?\" James said clearing his throat.\n\n\"I think I told Dominique I loved her, while I was sleep.\" \n\nJames chuckled lightly and quickly cleared his throat, \"Are you serious?\"\n\n\"I have never been more serious before in my life. She was messing with me and kept talking about sweet dreams and all that stuff. Then I just busted out and said it.\"\n\n\"You said I love you to her in your sleep?\"\n\n\"I think I did.\"\n\n\"Well, what did she say?\"\n\n\"I don't know. I think she tried to wake me to see if I really did say that and I pretended like I was knocked out sleep.\"\n\n\"Damn, are you telling me that Nik is ready to be taken off the market?\"\n\n\"I'm not saying anything like that; I'm just saying that I said it and I think I'm sick now.\"\n\nJames put his file down, \"Alright, let's see.\" He walked up to Nik and felt his forehead, \"Do you feel kind of dizzy sometimes when you around her?\"\n\n\"Sometimes.\" Nik nodded.\n\n\"You feel a little like you have a one track mind and your heart beats rapidly around her.\"\n\n\"Exactly. I'm sick right?\"\n\n\"Yep, you sure are. You are love sick.\" James laughed going back to his chair.\n\n\"This is not a laughing matter. I could be dying.\"\n\n\"Man, there isn't anything wrong with you. You just got bit by the bug, enjoy it.\" James said kicking his feet on his desk.\n\n\"I thought it would be something that I would notice right away.\"\n\n\"Nik, I don't know what your conceived notion of love is, but it has been there for awhile. You are just finally admitting it. No warning or anything. Now I told you that you have been spending a lot of time with Dominique, it was bound to happen.\"\n\nNik sat down slowly in the chair opposite James, \"Are you serious? Am I in love for real?\"\n\n\"I can't really tell you man. I just know the symptoms; only you can tell if you really are.\"\n\n\"It just can't be. I'm the Italian Stallion; I just don't 'oops I fell in love'.\" \n\n\"Well, how do you really feel about Dominique?\"\n\n\"Okay, I can answer that. She is exciting and mysterious.\"\n\nJames immediately cut him off, \"I didn't say what she is, I said how do you feel about her.\"\n\nNik didn't know there was a difference, \"Well, I feel warm inside around her. She makes me feel like I'm important and the only man in the room. She can stand toe to toe with me when it comes to us arguing and it excites me that she is not one to back down. She makes me feel warm and loved... Oh shit, I am in love.\" Nik said hitting his head against his hand. \n\n\"It happens to the best of us.\"\n\n\"Easy for you to say, the girl I'm in love with is convinced that she is in love with her best friend.\"\n\n\"I'm pretty sure that's something that you can fix. Just tell her how you feel and everything will be okay.\"\n\nEasier said than done, Nik thought to himself as he set back in his seat. How was he going to break this to her? James was right though, he needed to tell her. At least to let her know how he feels and then let her make the right decision. \n\nThat night, Dominique had everything setup at the party and watched as everyone was mingling and enjoying themselves. Dominique missed most of the rehearsal dinner trying to get everything together for tonight. Even though it was a lot of hard work, she was so proud of herself. \n\nEveryone was enjoying themselves and the food, but Dominique kept having a nagging feeling eating away at her. Where was Nik? He hasn't returned any of her calls or showed up yet. That was so unlike him. She hoped nothing happened to him, she didn't know what she would do if...\n\n\"Dominique,\" she was zapped out of her worried trance as Jason appeared behind her, \"hey, you have been kind of spaced out.\"\n\n\"I know. I'm looking for Nik, he hasn't showed up yet.\"\n\n\"Is he still mad after everything that happened the other day?\"\n\n\"No, we talked about it and he is okay. He hasn't answered my calls or anything and it's unlike him.\"\n\n\"I'm sure he is okay.\" He paused and licked his lips in uncertainty, \"I want to make sure everything is okay with us too.\"\n\n\"Jason, I don't really want to talk about that.\"\n\n\"Well, we need to. I need to explain what happened.\" Dominique sighed and turned her full attention to Jason, \"I'm sorry about what happened. I don't know what came over me.\" \n\n\"Jason, it's forgotten.\" \n\n\"No seriously...\"he paused, \"Oh, it's forgotten?\"\n\n\"I'm just wondering why. Jason, you are about to get married and here you are kissing me.\"\n\n\"I can't explain it. I think I just enjoyed talking to you and everything felt so right between us.\" Dominique bit down on her bottom lip.\n\n\"Jason, I know that everything was moving so fast for you. Are you sure that you are ready for this next step?\"\n\n\"I am, I went and did some soul searching and I am absolutely ready to marry Candi.\" Dominique sighed, \"Good, I'm glad.\" Strangely, she was glad and at that same time she felt guilty.\n\n\"Jason, I have something to tell you.\" She was going to open her mouth but she felt a pair of arms around her waist.\n\n\"Hey, baby.\" She instantly recognized Nik's voice, \"What's going on?\" Nik narrowed his eyes at Jason.\n\n\"Nothing. There isn't anything going on here. We are just talking.\" Jason smiled.\n\n\"Nik, it's okay.\" Dominique said turning in his embrace and planting a small kiss on his cheek.\n\n\"Well, you missing your party, aren't you man?\" Nik warned, giving Jason an icy stare.\n\n\"Yea, well I guess I should get back.\" Jason said going inside.\n\nDominique stared up at Nik, \"What was that?\" she said.\n\n\"What, just doing that whole possessive man thing.\" He smiled, \"Is there something going on?\"\n\n\"No, but why are you late?\" she wrapped her arms around his neck.\n\n\"I had some things that I had to figure out and pick out a very fly suit.\" He pulled away from her and did a couple of GQ poses, \"You like?\" Dominique couldn't help but start laughing.\n\n\"I definitely do like. You look like you belong on Italian Vogue. Now, let's go into the party and have fun.\"\n\n\"Wait, I have to talk to you about something and I'm sorry about breaking it to you here, but I can't really wait any longer.\"\n\nDominique gasped, backing away slight, \"Is everything okay? Is something wrong with you? You know I will help you whatever it may be.\"\n\n\"No, no, I'm fine and you saying that only makes me more sure of what I already know.\"\n\n\"What's the matter Nik?\" \n\nDominique has never really seen Nik so serious, besides the fight that him and Jason had, he has always been kind of cool and carefree. Nik took a deep breath and realized that his palms were sweating, damn was it really going to be this hard? He rehearsed it plenty of times in his head and finally came across the right thing to say, but with her finally staring back at him, he was getting speechless. There was only one phrase that came to his mind.\n\n\"Dominique, I l-lo-lo-lo-lo.\" He stammered and cleared his throat.\n\n\"You what?\" \n\n\"Okay, give me a moment.\" He let out a long sigh, \"I lo-lo you.\" \n\n\"You low me?\" \n\n\"No, damn it, why can't I say it?\" he whispered.\n\n\"Okay Nik, I know all about this, you are feeling pressured and you want to release something. I want you to take a deep breath, think about you saying it in your head and it will come naturally. Just let it flow and you will feel this whole weight off your shoulders and...\"\n\n\"I love you, Dominique.\" He suddenly said. Dominique's mouth hung open as she stared back at him expecting him to say ha ha, I was just joking. Nik waited and just listened to the crickets outside. Okay, what the hell? This isn't what he expected. His body was so tense that he felt like he could shatter. She closed her mouth and opened it to say something but closed it again. What the hell could she say?\n\n\"What did you say?\" it was now her turn to stammered.\n\n\"I need to repeat myself? Okay then.\" He cleared his throat, \"I love you Dominique.\" \n\n\"Oh, wow, that's quite a shock. Are you sure about that?\" she said before stopping herself. He chuckled lightly, \"I'm very sure.\" Dominique's throat was dry and she couldn't do anything but walk past him. Wait a minute; she wasn't supposed to walk away. \n\n\"Dominique, where the hell are you going?\" Nik said catching up with her and grabbing her arm.\n\n\"You weren't suppose to fall in love with me.\"\n\n\"Well damn sorry.\" He said sarcastically and Dominique just sighed loudly ready to walk off, \"Dominique, hold on damn it. I'm laying everything on the line. I love you and I want to be with you.\"\n\n\"But why? Why me?\"\n\nHe chuckled, \"Why not you? Baby, you have made me feel more of a man than I ever felt before. You have done so much for me and I love the fact that with me, I know how sexual and mysterious you are with me. I feel like I want to help you and see you through your journey of being in a new career. I want to be there for you. Tu sei il sole del mio giorno. I really love you.\"",
        "She heard what he was saying, she just wasn't sure if it was meant for her. It wasn't supposed to be this way. This was supposed to be Jason, but she just clearly told Jason to marry Candy. \n\nNow here was Nik telling her that he loved her and wanted to be with her. Why did she feel like she wanted to fall into his embrace and just scream yes? Something was holding her back, though. There was so much deception that this started on and she wasn't sure she was meant for this. \n\n\"Damn Dominique, I'm not asking a hard question. You have me over here sweating bullets.\" \n\n\"I'm sorry, it's just I don't know.\"\n\n\"Don't know what? You don't know if you love me too?\" she looked off couldn't bare to look into those emotion filled green eyes. She never seen him look so vulnerable, \"Dominique, I know that you feel like you should be with Jason, but baby I've been right here for you. You and I have spent more time together than you have with Jason and you are telling me that you want to be with him? You can't tell me that after everything that we've done, that you don't feel anything for me.\" \n\nShe swallowed hard, \"You're right, I can't tell you that I don't feel anything for you. It's just with everything that's going on, I don't know if I'm ready for this yet.\" \n\nAs soon as the words left her mouth, the light diminished from his eyes. That special spark that was always there was fading. His stance dropped a little and he looked everywhere but at Dominique.\n\n\"Wow, this is how it feel , huh.\" Nik said feeling his body cringe.\n\nDominique lower lip began to quiver as she looked into his defeated face, \"Nik I told you, it's not that I don't feel anything for you. I don't know if I'm ready yet.\"\n\n\"But you were ready with Jason, so it's me?\" She shook her head vigorously.\n\n\"No, no please don't think that.\"\n\n\"It's cool Dominique really. You know how I am I will bounce back.\" He put on a fake smile but swallowed hard, \"I do love you. I really do and I hope you soon will realize that you love me too before it's too late.\"\n\nToo late? For some reason hearing those word chilled Dominique. Before it was too late? What was going to happen? Her mind played those words over and over again. She bit down on her bottom lip and saw Candy peeking her head outside.\n\n\"Hey, we are starting the toast. You two want to come in? She stood there waiting in silence. She looked between the both of them and saw the tension between them both. \n\n\"Yea, we better go in, baby.\" Nik suddenly said, making Dominique's eyes focus back on him. \n\nNik squeezed by Candy and walked inside joining the rest of the party, \"Are you guys okay?\" Candi asked as soon as Nik was out of ear shot. \n\n\"Yea, we are okay, but you shouldn't be worried about us.\" Dominique mustered all her strength to plant a smile on her face, \"You have a party to entertain.\" She said pulling Candi back inside. \n\nShe would just have to deal with Nik later, but she knew pretending to be girlfriend and boyfriend throughout this party was going to be hard for the both of them. Her body yearned for his touch, but she couldn't make a hasty decision about this. Especially when she thinks about everything that has happened in her family. \n\nShe barely listened as friends and family rambled on and on about how Candi and Jason were going to live a long life together. It all sounded like gibberish to her at this point, she couldn't stop thinking back to the look on Nik's face. \n\n\"Can I say a couple of things?\" she knew that voice. She looked up and saw Nik holding the mike, what was he doing? \n\nShe swallowed hard saying a little prayer to herself that he wouldn't say anything to embarrass her; no he wouldn't, not Nik. At least she hoped.\n\n\"I just want to wish you guys the best of luck on your new journey. It's amazing when you found that one that makes your heart beat faster every time she comes into the room or makes you feel like Superman when you are feeling low. I just hope that my girl and I get there one day. I want to leave you with something that my dad always say, 'Quando amate qualcuno esso e come l'oceano, esso puo essere calma, puo essere intense, ma allo stesso tempo puo essere bella, ampia e degno esplorare. Now for you non-Italian folks,\" the crowd chuckled a little as he planted his eyes between the couple and Dominique, \"When you love someone it is like the ocean, it can be calm, it can be hectic, but at the same time it can be beautiful, vast, and worth exploring.\" Dominique's heart leaped in her chest as those emerald eyes filled with promise settled on her. \n\nHe quickly turned back to the couple. \"A toast to Jason and Candy.\" He said lifting his glass and everyone in the party followed, except Dominique. \n\nShe swallowed and followed along with everyone else, \"Salute.\" She murmured."
    ],
    "authorname": "Myanlass",
    "tags": [
        "interracial novella",
        "interracial romance",
        "romance novella",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/let-me-help-you-good-doctor-ch-07"
}