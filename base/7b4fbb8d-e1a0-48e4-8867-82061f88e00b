{
    "title": "A Blind Date for the Holidays",
    "pages": [
        "<p align=\"center\">Chapter One</p>\n\n\"Well, at least it's a nice place.\" The words slipped out as I sipped my wine. They weren't particularly loud, but still.\n\nI glanced around quickly and sighed in relief when no one in the restaurant reacted. I guess they were all too busy enjoying their meals to care. Either that or they were so caught up in the holiday season that they didn't notice.\n\nMore likely, they were just too tired to react. The combination of Thanksgiving and Black Friday took a lot out of most people. In either case, the whole situation was embarrassing enough without me being caught talking to myself. I was on edge and knew it, but I had good reason.\n\nI was on my first blind date. Well, almost anyway. This Billy guy would have to actually show for it to be official. I still couldn't figure out how I let Janet convince me to let her set me up. She was my former college roommate and my best friend, but still, a blind date? At my age? Twenty-five was way too old to be going on your first blind date!\n\nThat's what I told Janet too. Her response? First, she reminded me that I wasn't quite twenty-five yet and then she argued that the opposite was true. My best friend insisted that the older you got the more likely you were to go on a blind date. Her logic made sense, but honestly, the idea of blindly meeting with more and more strangers as the years passed was too depressing to think about.\n\n\"Breathe,\" I said softly to myself, trying to relax by taking another sip from my second glass of wine. My stomach was empty so I needed to pace myself, but the whole situation had me more than a little uncomfortable.\n\nThe fact that I was turning twenty-five in a few weeks didn't help. My friends insisted it was still young, but it didn't feel that way to me. I was turning a quarter of a century. Almost a third of my life was gone.\n\nI glanced around the restaurant to try and distract myself from feeling old. The holiday decorations were abundant this time of the year and impossible to ignore. Seeing them felt sort of like a mixed blessing. Thoughts of Christmas helped my mood a little because they reminded me that I was going home soon and would see my family, but they also made me feel lonely.\n\nThanksgiving was my first big holiday away from home. My family always celebrated together, but they lived across the country now and I'd decided it was too soon to go home after moving here only a few months ago.\n\nIt sounded reasonably at the time, but Thanksgiving by yourself in an apartment was not something I'd recommend if you weren't used to it. Can you say depressing?\n\nNot that I regretted moving here. My new job was great. It kept me even busier than I expected, which I liked, but because of that I hadn't really had a chance to make many new friends. I think that was at least part of why I agreed to go on this blind date. It would be so much nicer to have someone in my life right now, especially with my birthday fast approaching.\n\nIt didn't help that my two older brothers were married by the time they turned twenty-five. Mom had mentioned the fact more than once in the last few months. I sometimes tried to throw her off by mentioning that my younger brother Sean was graduating college this year and would need to find someone soon, but it seldom worked.\n\nI once tried to explain to her how people were getting married much older these days, but mom didn't understand. She came from a small town where most people married young. She hadn't out and out said it, but I'm pretty sure to her being female, twenty-five and unmarried made you a spinster. Which brought me back to another reason for this blind date. I was getting desperate.\n\nStill, I don't think I would have done it if this Billy guy wasn't a longtime friend of Janet's. My best friend grew up in one of the nearby suburbs before traveling across the country to go to college. She'd planned on coming back after graduating, but found a job too good to pass up.\n\nJanet swore Billy was great. She started trying to set us up as soon as I settled in. I grilled her about him until she admitted that he was a bit odd, but in a good way. I wasn't sure what that meant. I tried to get her to explain, but my friend's answers were vague at best. Janet swore I'd like him if I just gave it a chance. I wasn't so sure.\n\nOn the other hand, what could it hurt? I had moved across the country for a new job a few months ago and I didn't know anyone here. Mom and dad were not thrilled when I told them I was going. They were the typical overprotective parents and didn't like the idea of my being alone. Truthfully, neither did I, but I couldn't pass up the opportunity. Besides, it was time I went out on my own.\n\nI admit, it took some serious soul searching after one very long conversation with Janet for me to finally work up the courage to do it, but I had and I didn't regret it. Well, not most of the time, anyway. I should have gone home for Thanksgiving.\n\nMy company didn't give people off for Black Friday. It was the main reason why I'd decided not to go visit my family. I didn't want to request a day off so soon after joining the company. It turned out to be a mistake. The office was empty today with most people taking the day off.\n\nIt didn't help that those who did come in spent most of it talking about how much fun they had on Thanksgiving. Honestly, I even found myself getting a little jealous of the ones who complained about their families.\n\nIt's not like I hadn't expected the loneliness, but it got to me sometimes. I wasn't used to it. I had one of those close families. I mean, my mother complained when I decided to go to a school a whole three-hour drive away from home. My father didn't seem any happier, but honestly with him at least some of it was the school I chose.\n\nMom insisted I come home at least once a month and 'popped in' for a visit with my father or one of my brothers frequently enough for Janet to tease me about it. The funny part was that I remembered just how 'brave' I thought I was when I chose my university.\n\nI had an inkling of just how sheltered I was growing up, but not the extent. College had been quite the eye opener. I wasn't remotely prepared for some of what I found at my extremely liberal college. It was so alien to me that I would have been lost without Janet's help.\n\nI was still on the conservative side despite the exposure I received, but I'd learned to accept that the world was a lot bigger and a lot different than what I was brought up to think. Of course, most of the differences didn't matter in my day-to-day life. I was who I was, and although college had changed how I viewed some things, it hadn't changed me, at least not in any significant ways.\n\nThat didn't stop me from enjoying the experiences and insights I gained while away at school. I had plenty of great memories. Most of them involved Janet. She was my best friend and I couldn't picture my life without her in it. I think the fact that it had worked out so well was at least partly the reason for me finding the courage to take this job and move away from home.\n\nUnfortunately, it turned out moving across the country for a job was a lot different than going off to school. I liked my coworkers and had even gone out for drinks after work once or twice, but I didn't really connect with any of them.\n\nMaybe it was because unlike in college, everyone here already had their friends, or maybe it was just what it was, but I figured that even if this Billie guy and I just ended up as friends that would be okay. I could use a new friend right about now.\n\nI mean, if there was something more there that would be great, but I hadn't found a guy to hold my attention for more than a couple of months yet and at my age I was starting to think it would never happen. Which sort of brought me back to my original point. How did I let Janet talk me into this?\n\nI suppose going on a blind date might be more fun than spending another night working, binge watching some television show or even worse, sitting through one of those Hallmark Christmas movies that I'd been getting sucked into recently. Then again, maybe not. A lot depended on the guy. He could be a loser or worse, a psycho. That's why these types of set ups were always so stressful. I took a deep breath and let it out slowly.\n\nIn the end, blind dates all came down to a matter of trust. I don't mean trusting the guy since you didn't know him by definition. I mean trusting the person who set you up, and the bottom line was that I trusted Janet. She was my closest friend despite the fact that we were nothing alike. She wouldn't have set me up with someone crazy or a loser.\n\nBesides, worst case, at least I'd have a story to tell my friends and family. They were always pestering me to date more. Mom and dad had been trying to 'help' me find a husband for years now. It was annoying, but I understood. They just wanted me to be happy.\n\nMy parents loved being married and having kids. They assumed it was impossible for me to be happy unless I had the same. It's not like I didn't dream of having a family someday, but 'my knight in shining armor' hadn't come along yet so I found other ways to make myself happy. Frankly, by this point I was starting to accept that he might not exist.\n\nIt made me a little sad at times, but mostly I'd learned to accept it and focus on my career. As it turns out, I was pretty good at what I did. That made me happy. It frustrated me that my parents couldn't see it. Their constant pushing and setups were getting extremely old by the time I moved away.\n\nTo be fair, my parents' machinations worked out well for my older brothers. They were both happily married and I know for a fact that my parents introduced my oldest brother Mike to his wife Tammy. I think mom also had something to do with Paul meeting Cheryl too, but she never admitted it. Tammy was currently pregnant with her their second child. Paul and his wife had just had their first a few months back.\n\nI hated disappointing my parents. On the other hand, even they didn't want me to settle for someone I didn't love. Well, they hadn't so far. I was a little concerned that that might change in a few years.\n\nMom had taken to trying to set me up with some of her friends' single sons just before I left, but I knew most of them since we were kids and there was nothing there. I refused to let her set me up on a blind date with the few I didn't know because I hated to get her hopes up. Besides, it made me feel desperate...and yet, here I was allowing Janet to do the exact same thing.\n\nTo be fair, getting set up on a blind date was a lot less stressful with Janet. She didn't make it sound like she was already planning out my wedding with Billy like my mother did whenever she so much as mentioned a boy. Mom could be quite the trip sometimes.\n\nThe frustrating part was that it wasn't like I didn't date back home. It just never worked out. I'd learned long ago not to tell my mother about the guys I was dating because she'd start asking questions and wouldn't stop until I introduced her to whoever it was. At that point, she'd start treating the guy like family which never went well.\n\nIt either scared him away or worse, made him difficult to get rid of when I realized he wasn't the one. In fact, I was pretty sure my mother still kept in touch with the last guy I brought home. He was everything she wanted in a son-in-law. Too bad there was no real chemistry between us.\n\nFrankly, I hadn't met a guy I could picture spending the rest of my life with yet. There were a couple of close calls, but sometimes I think that was just wishful thinking. Still, that didn't mean I stopped trying. I hadn't date anyone since moving, but I'd gone on a date with a guy a couple of weeks before I left home.\n\n\"No wait.\" I frowned to myself as I thought about my last date. I remembered we went to dinner and then watched some fireworks. \"That was back in July.\" I was surprised when I did the math. I hadn't been on a date in almost five months? That didn't sound right, but with the move I guess it was possible.\n\nOkay, so maybe I was dating less and less as time went by, but now that my career had taken off, who had the time for it? All the hard work I'd put in was starting to pay off. This new job was exactly what I was looking for. It would give me the experience I needed.\n\nI think in some ways my focus on my career was hardest on my parents, especially mom. She didn't get that I had ambitions outside of meeting the right guy and starting a family. I can still remember her reaction when I told her what I wanted to get a degree in at college. Instead of being excited for me, my mother had frowned and then tried to convince me to become a teacher. She said it would make my life easier once I had kids.\n\nI must have told her a thousand times, especially as I got older and no Prince Charming appeared, that I didn't need a family of my own to be happy. She would just pat my hand and smile at me in that infuriating way of hers before telling me I'd understand once I met the right man.\n\nThe last time I got so frustrated that I told her in no uncertain terms that I didn't have the time to waste looking for him and that she'd just have to accept my life for what it was, like I had. Her shock at my outburst was understandable. I seldom lost control and lashed out at my mother, but I did that day.\n\nThe worst part was that instead of getting what I was trying to say, mom acted like I was just having a bad day. I'm not sure why, but I found myself apologizing after I'd calmed down. I guess it was just the thing to do to keep the peace. Still, I think that was the moment I decided that I needed some space from my family, at least for a little while.\n\nMy father was even worse than mom. I didn't even try to make him understand. It would have been a waste of time. I loved my parents dearly, but there was no arguing that they were both born a generation too late, maybe two. To them, a person couldn't possibly be happy on their own. It drove me crazy.\n\nAnd yet here I was sitting in a restaurant waiting for a blind date. I groaned to myself and thought, 'Someone, please kill me now!'\n\n\"Would you like a refill?\"\n\nI was startled from my thoughts. That's when I noticed the waiter standing there smiling at me. I glanced down at my glass and frowned when I saw that it was empty. So much for pacing myself. I shifted my eyes to my cell and checked the time before answering. Fifteen minutes late. It looked like I'd been stood up. I wasn't sure if I was more irritated or relieved.\n\n\"Yes, thanks.\" I decided this whole situation warranted a third glass of wine, but I knew I'd need some food to go with it. \"I should be ready to order by the time you return.\" The waiter nodded, took my empty glass and disappeared.\n\nI opened the menu. I'd already looked it over, but the restaurant had a surprisingly large selection so I perused it one last time just to make sure I didn't miss anything. In the end, I couldn't decide between the Marsala and the Saltimbocca. Both sounded amazing.\n\nI was happy that this Billy guy chose Italian. It was my favorite. The smells coming out of the kitchen were mouthwatering. He might be a jerk for standing me up, but hopefully he had good taste in restaurants. And who knows? Maybe he had a legitimate reason for not showing, not that it mattered. I'd probably never meet him now. Oh well, such was life.\n\nThe waiter brought my refilled wine glass back and placed it in front of me. I closed the menu and lifted the glass to my lips briefly. If the food was half as good as the wine, then this was going to be an amazing meal. I was just about to flip a proverbial coin on which item to order when we were interrupted.\n\n\"Trish, right?\"\n\n\"Yes,\" I replied tentatively.\n\n\"Sorry I'm late, but there was an accident I couldn't get around and I didn't have your cell number to let you know.\" I listened to the words, but honestly, not much registered after I realized this was my blind date.\n\n\"You're Billy?\" I asked, still not quite believing. I'm sure my reaction was on the rude side, but I thought I had the right. Sure, Billy was just as good looking as Janet promised. The dark hair and eyes were sexy, or might have been if I were into Billy's type.\n\n\"Belinda, but my friends call me Billie,\" came the reply, along with an apprising look that quickly turned to one of concern. I guess my shock was obvious.\n\nThe first clear thought that formed after my befuddled brain started working again was completely inane. I thought, 'Oh, Billie with an ie, not a y.' Thankfully, I didn't voice it out loud. Unfortunately, what finally came out wasn't any better.\n\nI thought of myself as open minded, especially considering my conservative upbringing, but this was too much. At first, I thought it was some sort of twisted joke, but if it was, then Billie clearly wasn't in on it. What was Janet thinking?!\n\n\"Um, but you're a girl.\" The words slipped out and I held back the embarrassed groan that would have followed. On a good note, if there was such a thing in all this, my words helped Billie finally realize why I was so shocked. It was her turn to be surprised.\n\n\"She didn't!\" Billie snapped rhetorically as she plopped into the chair across from me shaking her head. \"You're straight, aren't you?\" I nodded somewhat numbly. She clearly wasn't going to take this any better than I did. \"I will kill Janet!\"\n\n\"Get in line,\" I snorted, suddenly finding the situation somewhat funny. I'm sure all the wine I'd drank helped.\n\nWell, I wanted a blind date story to tell my friends and family. This was definitely that. Not that I'd ever tell my parents about tonight. They'd completely lose it and probably insist I stop being friends with Janet. I loved them dearly, but they weren't the most open-minded people in the world. Not that I'd be forgiving Janet for this any time soon. What was she thinking?\n\nI cringed as a memory from my childhood popped into my head. I was ten when my older cousin Justin came out of the closet. His parents reacted badly. Okay, that's an understatement. They kicked him out of the house. He was only fifteen at the time. My parents' reaction wasn't much better. They talked about him as if he died.\n\nThankfully, my aunt Ellen and uncle Teddy took Justin in. It caused a rift in the family, but I was happy my cousin didn't end up on the street. It's sad really. I was never close with Justin, but aunt Ellen and uncle Teddy used to be my favorites. I hadn't seen any of them in almost fifteen years.\n\nI'd played with the thought of trying to get in touch with them every so often, especially in my late teens, but by that time they'd moved away. Besides, mom and dad still refused to even talk about them. I guess I could have tracked them down, but if my parents ever found out they would not be happy and I hated disappointing them.\n\nI returned to the present and turned to the waiter who was watching us with far too much interest. \"We're going to need a few minutes.\" He nodded in understanding, having overheard the conversation. Great, a witness. Billie grabbed the guy's arm before he could leave.\n\n\"Bring me a single malt scotch, neat.\" She paused before adding, \"Make it a double.\" The waiter nodded and disappeared wordlessly. Billie and I stared at each other in silence for a few moments once we were alone.\n\n\"Well, this is awkward,\" I eventually sighed.\n\n\"You think?\" It was Billie's turn to snort. She used one hand to push her long, straight dark hair away from her face. It shined despite the dim light and looked like her natural color.\n\nI wished my own dirty blond hair was that straight. Then again, if I had to choose, I'd pick her eyes over her hair. They were a deep chocolate. My own light brown eyes were unspectacular. Okay, they did have a hint of green to them, but most people never noticed.",
        "\"Like what you see?\" Billie asked with a raised eyebrow. I guess I was staring a little too intensely. The fact that she thought it was in interest stunned me. I couldn't speak for a moment. Instead, I blushed in embarrassment and pushed my wine glass back. Now was not the time for me to get drunk and I was already halfway there.\n\n\"I'm sorry I was staring,\" I finally got out. \"It's more in shock than anything else.\" That should have been the end of it, but instead my mouth kept moving. \"I mean, you're beautiful, but unfortunately, not my type. I'm not a lesbian.\"\n\nI had to force myself to keep my voice steady as I said that last part. My comment on her looks earned me a surprisingly sexy smile that made me more than a little uncomfortable. I was quickly learning that I wasn't nearly as open minded as I thought.\n\nBillie took one look at my expression and laughed. Thankfully, she chose not to be offended. I blushed even darker and drank from my glass despite my decision to hold off on the wine until I got some food in me.\n\n\"I'm sorry,\" I mumbled in apology again.\n\n\"Why are you sorry? It's Janet who should apologize, to both of us.\" Billie shook her head and looked away. \"I can't believe she set us up like this.\"\n\n\"You can't believe it?\" I pushed my embarrassment back and let my annoyance at my former roommate show. \"At least she set you up with someone that meets your sexual preference!\" My words drew Billie's dark orbs back to me, causing me to take another large swallow from my glass before pushing it toward the center of the table once more.\n\n\"That's an interesting point.\" Billie had a thoughtful expression. \"I wonder why she did it.\" A memory tickled the back of my mind for a moment as she paused, but then Billie started talking again and I lost the thread. I really needed to eat something soon. \"You two didn't experiment back in college, did you?\" It actually took me a second to understand what she was asking.\n\n\"No!\" Okay, so I was rather loud in my denial based on the looks I received from the people nearby, but there's only so much shock a person can handle in one night. \"I never so much as kissed Janet and we were roommates!\"\n\nBillie laughed at my reaction for a bit before her expression slowly morphed into something more thoughtful. It didn't take her long to share what she was thinking.\n\n\"I did once. Back in high school.\"\n\n\"What?\" Janet was so boy crazy that it didn't make any sense. \"You and Janet...\"\n\n\"Just one kiss.\" Billie shrugged. \"It didn't go over well. I'm pretty sure it grossed her out. Thank God Janet was cool about it afterward.\"\n\nOkay, that might have been the first thing that made sense to me in this whole situation. I would have bet almost anything against Janet being gay. On the other hand, I wasn't surprised that she'd been supportive of Billie afterward. Janet was the most opened minded person I knew.\n\nBillie was staring off into space, obviously remembering, but I thought there was something more to her expression than just what happened with Janet. I was proven right a moment later when she added, \"We were sophomores and I was struggling. It took me another year to finally admit what I was out loud.\"\n\n\"That must have been hard.\" I tried to imagine how it would feel, but couldn't really. My family would have completely lost it. My life would have been over as I knew it.\n\nBillie gave me a measured look, but before she could say anything more the waiter returned with her drink. She thanked him and then finished half of it in one swallow. Apparently, I wasn't the only one who needed liquid fortification to face this situation.\n\n\"I'm hungry.\" Billie stared into her glass for a few seconds and swished the remaining scotch around before taking another sip. \"I missed lunch. Do you mind if I order?\"\n\nI hesitated. If we ordered that would mean we were going to stay and share a meal, but then again, it's not like sharing a meal meant anything more than two people eating together. The truth was that at this point I didn't feel like going back to my apartment and nuking some premade frozen dinner, not with the smells still coming out of the restaurant's kitchen. Besides, I really shouldn't drive without eating something first.\n\n\"Why not? I'm hungry too. We can plot how to get even with Janet over dinner.\" I was joking, mostly.\n\n\"There is that.\" Billie had a nice smile.\n\nHer face was squarish and her skin was darker than mine. It was also smooth and unblemished, or at least that's what it seemed like from this side of the table. There was a definite Spanish vibe to her looks, but nothing specific.\n\n\"Give me the Marsala.\" Billie ordered without looking at the menu. She obviously came her often. \"And another scotch.\"\n\n\"Is the Marsala that good? I was waffling between it and the Saltimbocca.\"\n\n\"There're both amazing,\" she replied confidently. \"If you want, you get the Saltimbocca and we can share.\" I decided not to read too much into her offer.\n\n\"Hmm, a little bit of both...I like that.\"\n\n\"Not so little,\" Billie replied as she handed the waiter her menu. \"The servings here are pretty big.\"\n\nI ordered and the waiter took my menu too. I hesitated, but then added another glass of wine to the order before he disappeared. I told him to bring it with the food, hoping both came sooner rather than later.\n\n\"So,\" Billie said into the silence that followed. \"You and Janet were roommates for four years. How did you survive it?\" I knew she was just trying to make conversation.\n\n\"It wasn't that bad,\" I offered, but then grinned and added, \"Although, it took some getting used to with her snoring and all.\"\n\n\"No way! Janet snores?\"\n\nWe chatted about nothing special for a while. I think we were both just trying to accept the situation for what it was. It helped that we both knew Janet. We shared some of our more interesting stories about her. Janet was a good person and a better friend, but she was definitely different. Only she would do something like this surprise set up.\n\nEventually the waiter delivered our meals and we started to relax as we ate. The food was amazing. We shared as Billie suggested. In the end, I really couldn't decide which dish was better.\n\n\"I'm having a good time,\" Billie said when we were done. \"Despite this date not being a real date.\" She was wiping the corners of her mouth with her napkin. It drew my eyes to her lips. They were nicely shaped, neither too big nor too thin. My own were bigger than I'd prefer, but not obnoxiously so. \"I'm glad we decided to stay and eat.\"\n\n\"Me too.\" It was the truth. Billie was funny and I enjoyed talking to her. It was too bad she wasn't a guy. Not only was she as good looking as Janet promised, but this was the best night out I'd had in a long time. \"So, tell me the truth, were you really late because of traffic?\"\n\n\"No,\" she admitted with a laugh, blushing slightly. It was hard to spot on her, but I was watching for it. \"I couldn't decide on an outfit. I saw your picture on Janet's Facebook page and I didn't want to seem like a plain Jane next to you so it took me a while to figure out what to wear. I must have tried on ten different outfits.\" I appreciated the implied compliment, but didn't focus on that.\n\n\"Plain Jane, you?\" I gave her a look of disbelief. She was wearing brown leather pants, dark boots and a thin, long sleeved black turtle neck. The outfit was perfect for her. It looked sexy and just a little bit dangerous. \"Don't be ridiculous.\"\n\n\"Thanks.\" Billie was already smiling, but it turned a little smoky at my compliment. I was just being honest and hadn't meant anything by it. I was hoping she didn't read too much into it, but based on her expression I was afraid she might have. Her eyes drifted down my body and settled on my breasts momentarily before returning to my face. Okay, there was no might about it.\n\nIt's not like people looking at my chest was a new thing. I mean, my breasts weren't huge or anything, but I wasn't small either. Okay, maybe they were a bit larger than average. It's not like it was something I could control.\n\nI'd developed early and got more than my share of attention from the guys because of it. I'd learned to deal with the attention years ago, but this was different. This was Billie, a girl.\n\n\"I saw they have tartufo on the menu.\" I figured a change in topic was the safest approach to dealing with Billie's sudden attention. \"It's my favorite, but I'm not sure I have room for dessert.\"\n\n\"We can share it, if you'd like.\"\n\nI swallowed uncomfortably. It wasn't the offer. It was the way she'd said it. I'd never been hit on by a woman before and had no idea how to deal with it. I mean, it was nice to be seen as attractive, but the whole situation was just too weird.\n\n\"That's okay,\" I said a little too quickly. \"I saw the way you were eyeing the cheesecake at the next table earlier. You should order that.\" I didn't mention that at the moment she was eyeing me almost the same way.\n\n\"It is my favorite,\" she laughed, settling back into her chair and finally looking away. I actually sighed in relief. Billie's interest was obvious and pretty intense when she looked at me that way. It made me uncomfortable, but in a weird way I couldn't quite put into words. All the wine I'd drank still wasn't helping.\n\nThe conversation moved on to safer subjects. She told me about some of the other good restaurants in the area and we discussed our jobs. I knew Billie was a real estate agent from Janet, but it quickly became obvious that she was good at her job.\n\nI chose to live in an apartment when I moved here. I wanted to make sure the job worked out first before investing in a place of my own. Besides, I needed to save for another year or two before I would have enough for a decent down payment. After talking to Billie for a few minutes about the area, I found myself hoping we were still friends when it came time for me to find something more permanent. She was clearly good at her job.\n\nThe waiter came by and we ordered some coffee. It didn't take much for Billie to convince me to order dessert despite how full I felt. I really did love tartufo. Unsurprisingly, she picked the cheesecake.\n\nThe conversation lulled when dessert came, but there was nothing uncomfortable about the silence. Well, not until I caught Billie staring at me again.\n\n\"What?\" I asked, afraid of what she might answer, but curious just the same.\n\n\"I love your eyes,\" she replied, making me swallow nervously. \"They have a touch of green in them that's very...enticing.\"\n\nBillie leaned over the table toward me. Maybe it was to get a closer look at my eyes or maybe it was something else. I felt an odd flutter deep in my belly and I pulled back, literally. There was suddenly a foot and a half between me and the edge of the table.\n\n\"Wow! Sorry. I didn't mean to make you cringe.\" It hadn't been a cringe exactly. Frankly, I didn't know what to call it.\n\n\"I'm the one who should be sorry.\" I shook my head, not wanting to think about how I'd felt as Billie grew near. It was still no excuse for me reacting like she had the plague. It was time to change the subject again. I pulled my chair back in toward the table and added, \"Actually, Janet is the one who should be sorry. What was she thinking?\"\n\n\"Um,\" Billie began tentatively. \"I've been wondering about that too.\" She paused briefly before continuing. \"Please don't be offended, but the only answer that makes sense is that she thinks that it's possible you're a lesbian.\" I pretty much came to the same conclusion already. I mean, why else would Janet have done it?\n\n\"Yeah, it is the only answer that makes sense.\" Now that I'd had time to calm down from the initial shock, I realized I wasn't nearly as surprised by this set up as I should have been. \"In fact, I do have one foggy memory of her accusing me of it.\"\n\n\"She did?\"\n\n\"Yeah,\" I answered, trying to hide my embarrassment and probably failing miserably.\n\nI'd blocked out the memory of Janet's accusation pretty much from the moment it happened, but tonight I was just buzzed enough for it to resurface. I'm sure a lot of it had to do with the situation.\n\n\"It was junior year. We had just gotten back to our room from a night out. We were both drunk and she blurted out a question that honestly, was more like an accusation.\"\n\n\"She asked you if you were a lesbian?\" Billie seemed a little too amused by the fact for my comfort, but I ignored it for the moment.\n\n\"Asked? Not really. She insisted!\" I shook my head as the memory became clearer. \"I denied it rather emphatically and that was the end of it, or at least I thought it was, but she must still have her doubts.\"\n\n\"Apparently.\" The laughter in Billie's voice made me groan, but that wasn't half as concerning as the look she was giving me. I was afraid that she thought Janet was right despite everything I did to convince her otherwise.\n\nI took a deep breath and let it out slowly. If Billie couldn't accept the truth, then that was her problem. I'd already made it clear that I was straight. What else could I do?\n\nThat's when the last part of the conversation with Janet from all those years ago popped into my head. Not only had my roommate accused me of being gay, but she insisted that if I were, then she had the perfect girl for me. It was a friend from high school. What were the odds it was Billie? I mean, how many gay friends could she have in high school?\n\n\"This is all so overwhelming.\" I was talking more to myself than Billie, but she heard and her smile faded. I had no idea why the memory made me feel so melancholy.\n\n\"Are you going to be okay?\"\n\n\"I still don't get it. I never hit on a girl in my life and I dated plenty of guys, especially in college. Janet and I are going to have one very long conversation soon. That is, if I decide to ever talk to her again.\" I was kidding, mostly.\n\nI paused as a myriad of thoughts flew through my head, but I wasn't oblivious to the concern still obvious in Billie's dark eyes. I decided it was time to lighten the mood a little.\n\n\"Well, I wanted a blind date story to tell my friends and family. This will definitely be that.\" It was the best I could offer and Billie did seem to relax a little at my tone. Not that I'd ever tell anyone about this. Well, not my parents anyway.\n\nThankfully, she changed the subject after that and I think we were both were relieved. It wasn't long before we were laughing and talking comfortably with each other again. It was weird how well we got along as long as we stayed away from the topic of my sexual preference. Well, that and Billie didn't look at me too intently.\n\nWe were laughing at one of Billie's stories when the waiter dropped the check off. There was a bit of awkwardness as we both reached for it, but Billie insisted on paying. She told me she'd write it off as a business expense since we'd talked about my need for a place eventually. She said she was planning on being my agent when the time came.\n\nI didn't quite buy that as the only reason she insisted on paying, but by the same token I now felt obligated to use her and that probably meant a somewhat lucrative commission for her. At least, that's the rational I used when I gave in and let her take the check.\n\nWe were waiting for the waiter to return with her receipt when I asked, \"Are you up for dancing? I'm not ready to call it a night.\" I think the only one more surprised than Billie by my question was me. She gave me an odd look. \"What?\" Okay, so I sounded a little defensive, but I couldn't help myself.\n\n\"Sounds like fun.\" Her expression was once again making me nervous which unfortunately, made me ramble a bit.\n\n\"The good news is that we won't be competing for attention. I mean, if you find a girl you're interested in, you won't have to worry about me trying to steal her or anything. The same is true if I find a guy. Wait, unless your bi?\" I didn't quite groan at what I'd blurted out, but it was a close thing.\n\n\"No, I'm not interested in guys in that way.\" Her dark orbs met mine and my heart began beating far too quickly for my liking.\n\nWhat was wrong with me? I'd never been interested in girls before, but if I were being honest, there was something about Billie that got to me. A horrifying thought fought itself to the surface.\n\nCould Janet be right about me? The answer came to me immediately. It was a resounding no!\n\nI mean, it was impossible to deny that Billie's dark Spanish looks were sexy as hell. On the other hand, I'd met plenty of beautiful women before and never felt this kind of attraction. Okay, so occasionally I'd feel drawn to one of them, but that was normal, right? Everyone liked to be around beautiful people. That didn't mean anything.\n\nThe problem was that this time was different. Billie was the first girl who ever hit on me, or at least that I knew was doing it. Worse, I couldn't help but like her. I had a feeling that we could become good friends, but she wanted more than simple friendship and that was beyond me.\n\nEven now, as my mind raced, Billie was watching me with an odd sort of anticipation. I wasn't oblivious to the desire in her dark, knowing eyes or how it made me feel. I simply chose not to accept it, any of it. I couldn't. I simply wasn't strong enough. Even if I were, I couldn't do that to my parents. It would kill them.\n\n\"Please don't look at me like that!\" I blurted out in a harsh whisper, trying to distance myself from the moment. \"It's just so wrong!\"\n\nI'm not sure what I expected Billie's reaction to be. A large part of me wanted her to be offended and storm off, but Billie being Billie, she just smiled instead.\n\n\"There's wrong and then there's wrong.\" Billie's cryptic words didn't help. I had the feeling that she knew exactly what she was doing to me. Thankfully, the waiter returned and distracted her.\n\nI began to seriously regret suggesting we go dancing. I wanted to tell Billie that I'd changed my mind, but the words wouldn't come. My mind was still spinning as we made our way out of the restaurant.\n\nI smiled when I realized how nice it was out. That was one good thing about moving here. It was definitely a lot warmer than it was at home this time of the year. I might miss the cold when it got closer to Christmas, but then again, maybe not.\n\nIt was a beautiful night and I couldn't deny that I had a great time at dinner, but the fresh air helped clear my head and I realized that this couldn't go any further. It wouldn't be fair to Billie. Now I just had to convince her. I made myself stop following the brunette. She paused and looked back at me.\n\nI'd already told Billie that I wasn't a lesbian a few times and each time she accepted my words easily enough, but then she'd look at me with those dark chocolate eyes of hers in a way that made it obvious that she didn't believe me, or that she hoped I'd change my mind, as if that were possible.\n\nI quickly looked away from her and stared up at the star filled sky instead, taking a deep breath. It helped. It helped a lot. I realized that this whole situation wasn't me. I knew exactly who I was and what I wanted out of life and this wasn't it.\n\nI glanced back at Billie and saw her watching me and waiting. The oddly content smile on her face made my pulse quicken. It was time to end whatever this was. I opened my mouth to force the words out, but Billie cut me off.\n\n\"So, why don't we go together on my motorcycle? We can come back for your car later. The place I have in mind isn't far.\" My conviction to stop what was going on and go home weakened considerably.\n\n\"You have a motorcycle?\" My voice didn't quite squeak, but my words weren't so much of a question as a surprised reaction. I'd never been on a motorcycle before and it was something I always wanted to do.\n\n\"Yes. Do you want a ride?\"\n\nMotorcycles were not something my parents condoned and they let my three brothers and me know that at an early age. Their mantra about how dangerous motorcycle were kept me away from them when I was younger. I didn't really know anyone with one as I got older so the opportunity never arose. Besides, I came from a small enough town. My parents would have heard if I got on one, and even at my age, I still did my best to avoid one of their lectures.",
        "Only now, I was far from my old hometown. They'd never know. It was oddly intoxicating to realize that. I knew that part of why I moved here was to get away from my parents who could be a bit overbearing at times. Janet insisted it was more than just a bit, but in either case, this would be the first time I'd done something my parents wouldn't approve of since moving here. Well, other than not leaving as soon as I learned Billie was a lesbian.\n\n\"I really shouldn't,\" I hemmed and hawed, trying not to picture how angry my parents would be if they ever found out. I might be almost twenty-five, but I was still their little girl.\n\n\"Come on, you know you want to,\" Billie teased, clearly amused by my reaction.\n\n\"Well,\" I said slowly, meeting her dark orbs and smiling despite myself. \"I guess so. I mean, I'm still not really sure I'm sober enough to drive anyway.\"\n\nI don't know what I was expecting, but Billie's motorcycle was a lot bigger than I thought it would be. It was also black which somehow suited her. I didn't know much about motorcycles, but I saw that it was a Harley.\n\n\"It's a Softail Deluxe,\" she explained, seeing my interest. \"I've been thinking about switching to a Street Glide, but I haven't made up my mind yet.\"\n\n\"You do realize I have no idea what you're talking about, right?\"\n\n\"Don't worry about it,\" Billie laughed as she watched my growing excitement. That lasted until I noticed something.\n\n\"I don't see any helmets.\"\n\n\"I didn't bring one tonight,\" she replied with a shrug. \"I own a couple, but I only wear one when I'm going on long trips out of state.\"\n\n\"That's stupid,\" I said without thought. \"It's just as dangerous not having one on for a short trip.\" My outburst made her laugh again for some reason.\n\n\"I like the feel of the wind in my hair.\" She couldn't be serious, could she? It was so dangerous!\n\n\"Isn't it illegal not to wear one?\" I wasn't just stalling. The idea of getting on a motorcycle was scary enough, but to do it without a helmet seemed downright crazy.\n\n\"Depends on the state. It's not illegal here, but it is for a lot of the neighboring states,\" she explained. \"That's one of the reasons why I wear one when I go on long trips.\"\n\n\"Um, I think maybe we should take my car.\" Billie was watching me. I think she could see the war I was having with myself.\n\n\"We can if you want, but the dance club I'm thinking of isn't far and you seemed pretty excited about riding on my motorcycle a few moments ago.\" Billie was looking at me, waiting to see how I responded. I was tempted despite how nervous the idea made me. She saw and added, \"I bet you'd love the feel of the wind through your hair.\"\n\n\"My hair doesn't do well in the wind. I'll look like a witch by the time we arrive.\" Not that I thought she was wrong about how much I'd enjoy it. Still, was that a good enough reason to risk it?\n\nThe answer was obvious. I wasn't one to take crazy chances. I was about to tell her that we needed to take my car when I saw the challenge in her eyes. I saw something else there as well, but I refused to dwell on its' the meaning. Instead, despite my misgiving, I said, \"Fine, but if we ever go on another ride, you have to promise to bring helmets, for both of us.\"\n\n\"Deal,\" Billie agreed easily, making ready to get on her motorcycle.\n\n\"One sec,\" I said, reaching into my bag and pulling out a tie for my hair. Sure, I wanted to feel the wind in my hair, but I needed to be somewhat presentable when we arrived at the club. Billie had no idea what the wind would do to my long wavy hair.\n\nIt didn't take long for me to tie it up. I frowned when I noticed the way Billie watched me do it. She must have seen my discomfort because she turned away, but not before I saw a grin spreading across her lips.\n\nBillie took my purse and stowed it away before showing me how to get on the motorcycle. She made sure I knew where to put my feet and warned me where not to touch. I was wearing a blue, mid-thigh skirt so getting on was going to be a bit of a challenge. The fact that I had on sliding shorts underneath made me less self-conscious about wearing something so short, but still, I expected that it would leave little to the imagination when I straddled Billie's motorbike.\n\nMy pale-yellow sleeveless top was a little flimsy for riding a motorcycle. I'd left my jacket at home since it was supposed to be such a beautiful night, but I figured I'd survive. Apparently, Billie disagreed because she pulled out her leather jacket from one of the saddle bags and handed it to me. It was surprisingly heavy, but that didn't stop me from nodding in thanks and putting it on.\n\nBillie climbed onto her motorcycle first and then held it steady while I got behind her. It was a bit tricky in the skirt, but I managed.\n\n\"You're going to need to wrap your arms around my waist or you'll fall off,\" Billie said, looking at me over her shoulder. \"Don't worry, I promise not to read too much into it.\" I don't know why, but the way she said it made me blush.\n\nThat didn't stop me from doing what she said, although I didn't squeeze hard. I was self-conscious about pressing my breasts against her back even considering I was wearing her heavy, leather jacket. That only lasted until we actually started moving. At that point, I squealed and grabbed on tight.\n\n\"You okay back there?\" she asked as we picked up speed.\n\n\"I'm great!\" I cried, excited by my first motorcycle ride. It was even better than I expected. I forgot about my fear. \"This is so cool!\"\n\nThat made her laugh as she picked up more speed. We weren't really going that fast, but it was a ride I'd never forget. There were a lot of things about it that made it special along with it being my first time on a motorcycle.\n\nI couldn't hold back the grin that split my face as my curly hair blew crazily despite my having tied it up. I'd curse about it later, but right now it just added to the exhilaration that took hold as we streaked down the road.\n\nThe powerful motorcycle vibrating between my legs felt a little decadent and naughty. So did having my arms wrapped around Billie's flat stomach, but I didn't dwell on that part, or at least I tried not to. It wasn't easy with us sitting so close.\n\nThe road started twisting. I saw it coming, but I was enjoying myself so much that instead of being afraid I did what came naturally. I leaned into the turns. It's what I remembered doing when I was a kid on my bicycle, especially when I was trying to keep up with my brother Paul and his friends.\n\nThey didn't like me tagging along with them. Thinking about it now, it was pretty funny, but back then it used to piss me off, a lot. I hated the way their longer legs made it easier for them to go faster.\n\nBillie leaned into the turns as well which was no surprise. What was, was the fact that we moved so well together, like we'd been doing it for years. My chest was pressed against her back as I continued to hold on to her narrow waist and we shifted from side to side, moving as one. I lost myself in the feel of the wind, the road and Billie.\n\nWe arrived at the club far faster than I would have liked. Billie smiled at my disappointed look as she helped me off the bike. She quickly joined me, taking the jacket back and putting it away before handing me my purse.\n\n\"My hair must be a mess.\"\n\n\"It's fine,\" Billie said, but then she paused and frowned. I guess it must have been pretty bad if she didn't stick with the lie. \"Well, there are a few strands you might want to fix.\"\n\nI leaned forward toward the small mirror on the handle bars of the motorcycle. We weren't in the brightest part of the parking lot, but I could see well enough. My hair was not good. I did my best to straighten it with my fingers. I looked at Billie for confirmation that I fixed the worst of it once I was done.\n\nI swallowed as she leaned closer and lifted her hand to fix a strand I missed. She wasn't quite looking at me in the same way as when she leaned over the table at the restaurant, but there was something in her expression and I felt the same flutter deep in my belly. I should have ignored it. I knew that, but just this once I let myself enjoy the sensation.\n\nI tried to convince myself that it was just the excitement from the combination of the ride here and somewhat drunken state, but that didn't explain my attraction to Billie. Yes, my attraction. I could deny it all I wanted, but the truth was the truth. I had no idea what to do about it, or even if I wanted to do anything about it.\n\nBillie was checking to see if any other hairs were out of place when our eyes met. Her dark orbs locked with mine. I'm not sure what she found there, but it must have been something to catch her attention the way it did. Billie's expression softened briefly before a slow, sensual smile spread across her shapely lips. She moved closer.\n\n\"What are you doing?\" My question came out rushed and a little breathless.\n\n\"I'm going to kiss you.\" Billie's answer stunned me, but no more than my body's reaction to her words. My nipples stiffened enough to be noticeable if anyone were looking and the flutter in my belly turned into a warm glow of something I didn't want to name.\n\nBillie moved closer and I felt a pang of anticipation and fear that nearly overwhelmed me. I couldn't let this happen. What would my parents do if they ever heard? More to the point, was I willing to accept what it meant about me? Would I still be me afterward?\n\n\"But...\"\n\n\"Shh.\" Billie placed two of her fingers against my lips silencing me before dropping her hand back to her side. \"Think of it as an experiment. If it grosses you out or you don't like it, I'll back off and never try it again.\"\n\n\"Like you and Janet back in high school.\" The words slipped out of my mouth. \"Will we be able to be friends afterward?\"\n\n\"I doubt we'll ever be just friends,\" Billie replied confidently, leaning even closer. Her lips were only inches from mine. My pulse was beating so fast I could actually hear it. \"Not with the way you look at me.\"\n\nThe way I was looking at her? What did Billie mean? I was about to ask her when her lips touched mine and all thoughts of talking disappeared.\n\nThere was no way I should have been surprised when Billie's lips brushed against mine. After all, she'd out and out told me she was going to kiss me, but I guess a part of me deep down still didn't believe.\n\nHer lips were soft and insistent and I was horrified, but not because I didn't like the kiss. It was because I wasn't remotely grossed out by the feel of her lips against mine. No, I liked it. I liked it a lot. I felt my body react in ways I'd only dreamed about.\n\nI wasn't a virgin. I slept with a few guys. Usually, I told myself it was because I loved them, but the truth was that I was just drunk at the time and hoped I would. It never worked out. Worse, I never really enjoyed what happened all that much. I told myself it was because I hadn't met the right guy, but I think deep down I knew the truth. I'd just been very good at hiding it from everyone, especially myself. Well, except Janet.\n\nBillie's kiss grew more aggressive and instead of pulling away like I should have, I found myself parting my lips ever so slightly. That was all Billie needed to take the kiss to the next level. She wrapped her hands around my waist and pulled me into her. Her tongue pushed past the little resistance I offered and our mouths locked together.\n\nI lost track of time for a while. Who am I kidding? I lost track of pretty much everything except Billie. I loved the feel of her hands holding me tight against her. My body responded to her touch. The fluttering in my gut turned into full blown need and my nipples stiffened to the point that I was afraid Billie could feel them through our shirts.\n\nHer close proximity was more intoxicating than any wine I'd ever tasted. Something inside of me yearned for Billie in ways I can't explain. It felt incredible. It also scared me to death.\n\nI'm not sure what would have happened if this had occurred anywhere else other than a parking lot, but thankfully it didn't, so the moment had to end. At least that's what I told myself despite the fact that Billie continued to deepen our kiss, trying to claim me for her own. My resistance was minimal, but still there.\n\n\"Now that's a damn shame.\" The deep voice startled me enough to make me pull back from Billie. She let go reluctantly. I'd never felt such a strong a mix of disappointment and relief. I forced my attention away from Billie and focused on the guy who'd spoken. He was obviously on his way into the dance club.\n\n\"What is?\" Billie snapped. I didn't think she was really mad at the guy, only annoyed that he interrupted.\n\n\"That you two are off the market,\" the guy grinned. \"You're both fine looking women.\"\n\n\"What makes you think you'd have a chance even if we weren't?\" Billie sounded calmer, but her irritation at his arrival still had her on edge. Well, either that or she was flirting. The thought caused a sudden surge of jealousy. It washed over me like a tidal wave. I was completely unprepared for it.\n\nI knew Billie had no interest in the guy. Yet, I felt what I felt despite the illogic of it. I was already in shock over the emotions Billie had caused in me all night, especially when she kissed me, but this was too much. I felt an odd kind of numbness settle over me.\n\n\"Oh, I'd have more than a chance.\" The guy didn't seem offended. In fact, he laughed.\n\nYou had to give him points for cockiness. Not that it didn't make sense. There was no arguing that he was handsome. The fact that he was tall, blond and well-muscled didn't hurt either. I was sure he'd have his pick of the women inside. \"I could have shown you both a great time. It's too bad you're lesbians.\"\n\n\"I'm not a lesbian.\" The words came out automatically. The guy seemed surprised, but it was Billie's reaction that was more telling. She looked momentarily hurt, but then smiled sadly.\n\n\"That's not true, no matter how much you want it to be.\" Her voice was surprisingly calm. \"A straight girl doesn't react to a kiss from another woman the way you do.\"\n\n\"I'm not a lesbian,\" I repeated, willing it to be so.\n\n\"Accepting the truth is harder for some.\" Billie's eyes were locked on mine and it felt like she was gazing deep into my soul. I felt my resolve weakening, but my fear grew in inverse proportion.\n\nIt wasn't just my sexual orientation that would change if I gave in to Billie. It was everything. My relationship with my family. The future I had planned. How I viewed the world. Everything. Would I even still be me?\n\nI was close to panic and had no idea what to do about it. Hell, who was I kidding? I was way past panic. I was out and out losing it.\n\n\"I'm sorry,\" I said with some difficulty, and then repeated the lie for the third time. \"But I'm not a lesbian.\" Billie stared at me in silence. It made me nervous so I tried to explain. \"One day, I'm going to meet the right man and settle down. My father is going to walk me down the aisle and mom is going to spoil my kids. It's been my dream for as long as I can remember.\" I would have continued to ramble, but Billie finally spoke.\n\n\"You're not ready.\" There was acceptance and a deep sadness in her voice that hurt more than just her. She stepped back and turned toward the guy. I'd forgotten he was there. \"What's your name?\"\n\n\"Ken.\" He'd obviously been close to leaving us to our conversation before Billie brought him back into it.\n\n\"Of course, it is,\" she sighed, shaking her head. \"Well Ken, it's your lucky day. My friend here says that she's straight. We came here because she wants to dance. Why don't you take her inside and spin her around the floor a few times?\"\n\nThe feeling of betrayal made no sense and I knew it, but just like most of the emotions I was feeling tonight, that didn't stop it from washing over me. The weird part is that somewhere deep down I found myself wishing it would just drown me and put me out of my misery.\n\n\"You can't be serious.\" Ken was clearly just as surprised by Billie's offer as I was.\n\n\"I am.\" Billie had turned just enough to make her deep brown eyes dark pools and unreadable in the parking lot's dim light, but I could tell she was looking at me again. \"He's tall, blond and handsome. The perfect Ken to your Barbie. I hope you get everything you want out of life.\"\n\nBillie started walking toward the dance club, leaving Ken and I behind. My heart beat picked up considerably. Part of me wanted to stop her, but I couldn't do it.\n\nI watched in sadness as she neared the doorway. In a moment, Billie would walk through it and out of my life. I knew it was all for the better, but something was screaming in my head to stop her. Unfortunately, or possibly fortunately, it wasn't in me to actually do it.\n\nBillie passed through the doorway without ever looking back. She'd apparently accepted the reality of the situation better than me. I kept telling myself that it was better this way, but something deep down insisted I was a liar. I did my best to ignore it.\n\n\"Are you okay?\" I turned to Ken at his question. There was concern in his eyes. Not only was he handsome, but apparently, underneath all that ego, he was a decent guy too. I could do a lot worse. I smiled up at him, but it took an awful lot of effort.\n\n\"I'm good,\" I offered. \"Let's go dance.\" I had a sudden need to be inside the dance club.\n\nI took hold of Ken's well-muscled arm and led him through the entrance. The club was packed and the music loud. I scanned the place as soon as we were inside. I wasn't looking for Billie. I was checking out the crowd.\n\nAlthough, I did notice that she seemed to have disappeared which concerned me a little. Billie was obviously upset when she walked away from me. It was only natural that I'd want to make sure she was okay. Right?\n\nYet, despite my best efforts, I couldn't find her. How could Billie have disappeared so quickly? Sure, the place was crowded, but she only beat us inside by a few seconds.\n\n\"How about a drink before we hit the floor?\" I smiled at Ken's question, wondering if like most guys, he needed some liquid courage to dance.\n\nI thought about if for a moment and decided that he was too confident for that. That meant he was asking so that we could get to know each other. My opinion of Ken was definitely on the upswing.\n\nI pushed my concerns about Billie from my mind. She was probably fine and I was here with Ken now. I needed to focus on him. Besides, even if she wasn't okay, there was little I could do about it. I was the one who caused her to be upset so I'd probably only make things worse.\n\nI told myself to forget the dark-haired beauty, but it was proving more difficult than I expected. I had to forcibly remind myself that she was the one who left me in the parking lot with a complete stranger before I could give my attention fully to Ken.\n\n\"Sure,\" I said agreeably. We made our way toward the bar. It was even more packed than the dance floor, but it helped having someone Ken's size leading. I saw how many of the other women ogled him as we made our way, and I admit that it felt good. This was the way things were supposed to be.\n\nKen and I chatted amicably through our first drink. He was pretty funny and had me laughing more often than not. The fact that we hadn't danced yet didn't bother me. I wasn't really in the mood to dance anymore anyway.\n\nIt turns out that Ken had moved out here to this coast only the year before. Our home towns were in neighboring states so we had something in common to talk about. I was having a surprisingly good time.\n\nWell, except for the fact that I didn't see Billie in the crowd anywhere. The place was packed, but not that big. It's not like I was seriously looking for her, but you would think I would have spotted her by now if she were still here.\n\nThe thought of her having left concerned me. We did come together after all. I'd enjoyed the ride on her motorcycle and was hoping for another. Besides, if she were gone, how was I supposed to get back to my car?",
        "It struck me that Billie probably expected me to find another way home. It made sense based on what happened, but I found myself unwilling to accept it. Sure, I could probably get a ride from Ken. Either that or I could Uber it, but you didn't leave a person somewhere when you were the one who drove them there. It just wasn't right.\n\nMy sudden irritation was a bit overblown and I knew it, but that didn't lesson it in the least. I needed a distraction. I grabbed Ken's hand and led him to the dance floor. He was a surprisingly good dancer and after a few minutes I finally felt myself starting to calm down. That's when I spotted Billie's dark head of hair.\n\nMy anger at being abandoned disappeared and was replaced with something else. Billie was dancing with two women. Both of them were blond and attractive in their way. I couldn't take my eyes off of them despite my best effort. Well, Billie anyway.\n\nShe moved to the music with a natural ease that was hard to ignore. I wasn't remotely surprised. It was just so Billie. Everything about her was grace and beauty. The idea of her being a bad dancer never entered my mind. I felt a little better when I realized that the blond couple were a little older than Billie and obviously together.\n\nThat only lasted until I noticed that Billie wasn't smiling and seemed to be going through the motions despite how well she moved. I felt bad because I knew it was my fault. I should never have let her kiss me. I have no idea what came over me.\n\nIt was a mistake in so many ways, but the worst part was that it cost me Billie's friendship. I wish she would just forget the whole thing ever happened. I wish I could. The feel of her lips against mine would haunt me for a very long time.\n\nI was lost in thought as the DJ switched to a new song. I was dancing with Ken, but honestly, I was in my own little world. I'm not sure how long we were there before I noticed a dark-skinned beauty join Billie and her friends.\n\nI might be straight, but I wasn't oblivious to the way the new girl stared at Billie. She wanted her, not that I blamed the woman. What girl wouldn't if they were a lesbian? I wanted to wish her luck. Billie was someone special, but I couldn't do it.\n\n\"I'd like another drink.\" My abrupt request surprised Ken, but he nodded in agreement and led me off the dance floor.\n\nThe next hour went by quickly enough, especially when a couple of Ken's friends joined us. They joked and teased each other a lot. It was pretty funny. I liked the fact that they did their best to include me, but mostly I just sat back, drank and watched them go at it.\n\nThe more I got to know Ken, the more I liked him. He would fit right in with my family. My brothers would love him. I realized that I was drunk when I caught myself staring at him and wondering what our kids would look like if we ever got married. Considering we'd just met that was silly, but it didn't stop my musings.\n\nWe were both blonds so the odds were pretty good our children would be too. That would make my dad happy. He had dark hair and swore that one of the main reasons why he fell for mom was her golden locks.\n\nI could just picture a little boy with Ken's strong chin and my skin coloring, or maybe a little girl with my cheekbones and his eyes. Mom would love that. Ken had the most beautiful blue eyes. He really was a handsome man.\n\nI clearly wasn't the only one who thought so. I'd caught more than one of the women in the place glancing our way. Some of them were giving me jealous looks, but most were simply eyeing Ken hungrily. It got worse as the night passed and they got drunker. Ken seemed used to the attention.\n\nOr maybe he was just too focused on me to notice. I wasn't blind to the fact that he was staring at me with the same intensity that those women were looking at him. Maybe he was really that into me or maybe he just liked the challenge of trying to be with me after catching Billie and me kissing.\n\nI didn't know the reason, but I can't deny that I liked the attention. It's not every day that a gorgeous man looked at me the way he was. The problem was that despite my enjoyment, that's all it was. There was nothing more there, at least not for me.\n\n\"Do you want another drink?\" I glanced down at Ken's offer and saw that my glass was empty again. It took me a moment, but I realized that the waitress had only brought us a new round a couple of minutes ago. Everyone else's glass was still at least half full. It was time to slow down.\n\n\"No thanks. I'm good for now.\"\n\nHe and his friends went back to their conversation and I went back to my daydreaming. My family would welcome someone like Ken with open arms, especially if we ended up having a couple of blond-haired kids. I could just picture Christmas day at my parents' house years from now.\n\nThe adults would be sitting around the living room watching the kids opening their presents. Ken would be next to me on the love seat, holding me close. Ours kids would be excitedly talking with their cousins as they tore into the wrapping paper, their chocolate eyes filled with excitement.\n\nOur daughter's face would light up as she lifted the dress my mother bought her to her torso and pushed her long, dark brown hair out of the way to see how it looked. She was all smiles as she noticed how well the color went with her deeper skin tone.\n\nWait, chocolate eyes, dark brown hair and deeper skin tone? That wasn't right. Everything about Ken was light. Why would we have children with that coloring? I started to shift the vision of our kids to something more likely, but before they could fully form my daydream wandered off in a different direction.\n\nKen and I were still on the loveseat, but he was holding me now, and it was amazing. I'd never felt safer or more loved. Being in her arms...I mean his arms... My alcohol befuddled mind had me spinning in confusion.\n\nThe daydream seemed to take on a life of its own. Ken kissed the top of my head, mostly because that was the only place he could reach. I decided to fix that by lifting my chin so that I could give offer my lips to him for a heartfelt kiss. Only, as I looked at him the vision blurred as if it were trying to shift, but I refused to allow that.\n\nI focused until I could see Ken's strong, handsome face clearly and feel his large muscular body against my own. He was smiling down at me as I leaned into him. Ken hugged me tight and brought my mouth to his own. Our lips touched, but instead of the love and passion I expected, I felt nothing, nothing at all.\n\nThat would have been bad enough, but in my drunken state the shock of the moment caused me to lose my focus, and suddenly my daydream shifted despite my best efforts. The arms around me shrunk considerably. So did the body I was leaning against, but both felt just as good in their own way. No, if I were being honest with myself, they were somehow better. I still felt safe and loved, but I also felt...well, like I truly belonged.\n\nThe lips kissing me softened considerable, but not in a bad way. They fit mine perfectly. More telling, the fire that had been missing from Ken's kiss struck full force and I gasped. I'm only felt this way once before. I opened my eyes in my daydream and there she was, Billie. This was wrong even when I was just imagining it, but for just a moment I let myself enjoy the feelings that I'd been fighting all night.\n\nThat's when the vision took a darker turn. My family noticed that Ken had changed into Billie. My father's expression turned into one of thundering anger while my mother burst into tears. My oldest brother Mike look horrified and Paul expression was filled with sad disappointment.\n\nThe worst was my youngest brother Sean. He looked betrayed, which was odd because he was the rebel in our family and most likely to accept something like this, but in my daydream even he couldn't handle it.\n\nAll of that was hard enough to envision, but then the kids I so desperately wanted slowly began fading away. I snapped out of the daydream forcibly. I must have had an interesting expression on my face because Ken, who was sitting next to me, was frowning in concern.\n\nI tried to smile up at him, but it wouldn't come. So instead, I shifted closer, took his glass and downed the remains of his drink before leaning forward and kissed him without warning. I'm sure his friends were surprised, but Ken seemed to take it in stride.\n\nNot only was the man handsome, but he was one hell of a kisser. It was nothing like in the daydream. I definitely felt something and it was good. That should have made me feel better, but it didn't because as good as his kiss was, it didn't compare to the one I'd shared with Billie.\n\n\"I've got to go.\" Okay, so maybe it was a little abrupt considering I'd just kissed Ken, but my sudden need to run was damn near overwhelming.\n\nKen stared at me in silence for a few moments before nodding in acceptance. I was confused and embarrassed so I didn't bother saying goodbye. He had an odd expression, but didn't say anything as I stood and left.\n\nI was standing outside before I was able to actually put a coherent thought together. The cool night air helped clear my head from its alcohol induced haze. I groaned and shook my head. Ken was the perfect man and I'd walked out on him. Hell, I'd run. What did that say about me? What did it say about my future?\n\n\"You bitch!\"\n\nIt took me a moment to realize that the outburst was directed at me. I turned and saw one of the blondes that had been dancing with Billie staring at me angrily. The fresh air was sobering, but I was still in no shape for this.\n\n\"Pardon me?\" It was the best I could offer. I noticed that the woman was a little younger than I organically thought, but still older than Billie and me. I guessed maybe her late twenties or early thirties.\n\n\"I don't know what you did or said to Belinda because she won't talk about it, but whatever it is was must have been bad. I've never seen her like that.\" The anger of the woman's words flashed in her eyes. She looked more than willing to continue laying into me. I was so stunned that it actually took me a second to realize she was talking about Billie.\n\n\"All I did was let her kiss me,\" I said defensively, causing the blond to stop mid rant, but only for a moment.\n\n\"And that put her in such a miserable mood?\" The disbelief damn near dripped from the woman's words. I didn't blame her. It didn't make sense. I could have left it at that, but for some reason I felt like I needed to explain.\n\n\"I shouldn't have. I'm not a lesbian,\" I said with a shrug. \"She knew that, but insisted that we try it.\" I paused, trying desperately to forget how Billie's kiss made me feel. I could still taste her lips on my own despite everything that happened since. \"I had to tell her three times when we were done before she accepted the truth.\"\n\n\"Whose truth?\" The blond was staring at me intently, obviously reading something from my expression. It made me uncomfortable as hell.\n\n\"The only one that matters,\" I answered with more conviction than I felt, but then I ruined it by adding with less confidence, \"I can't be a lesbian. It would ruin everything.\" The blond took another long look at me and then shook her head.\n\n\"Ah, one of those.\" She still looked annoyed, but there was something else there as well. \"My wife was like you.\"\n\n\"Wife?\" The question was silly. I knew lesbians could get married, but it surprised me just the same. I guess it was because the blond was the first married lesbian I'd ever met in person, at least that I knew of anyway.\n\n\"Arlene,\" the blonde replied. \"She's getting the car. We need to get home. Our babysitter has a curfew.\"\n\n\"Babysitter?\"\n\n\"Yes,\" the woman said in an odd mix of forced patience and thankfully, sudden humor. \"Lesbians can have kids. It's actually easier for us than for homosexual men. We just need a sperm donor. Of course, some do adopt. God knows there are plenty of kids out there who need a good home.\" I was stunned. It made sense, but it was all so foreign to me.\n\n\"For those who want biological children, it's just a matter of deciding who has them. I even know some couples where both have had kids.\" The blond was fighting a smile as she explained. I guess my expression was comical to her. I'm glad I couldn't see it. The conversation was embarrassing enough.\n\n\"My wife Arlene had both of ours. Frankly, as much as I love them, I had no desire to go through child birth.\"\n\n\"And it doesn't bother you that they're not yours?\" Her smiled disappeared and her eyes flashed angrily again. I quickly replayed what I said and realized my mistake. \"I mean biologically.\" The blond frowned at me as if judging my words, mostly because I'm sure she was. I met her gaze, trying to let her see that my mistake was naivete and poor wording, not any desire to offend or judge her.\n\n\"I'm more of a nurture type of girl rather than nature,\" she answered somewhat flippantly.\n\n\"I didn't mean to offend...\" I began, deciding a full apology was necessary, but the blond shushed me with a hand gesture.\n\n\"I know, it's just that you hit a sensitive subject. I had to adopt both my kids before I had any legal rights in regards to them. I get it, but it pissed me off just the same. Not only was it expensive, but we had to put up with a home study. Can you say intrusive?\"\n\nI suddenly realized just how little I knew about what it meant to be a lesbian outside of the obvious. I knew deep down that I wanted kids more than anything else despite my denial of the fact when I spoke to my parents. I'd just never thought about having the ability to have them without being married to a man. It was just too far from the way I was brought up.\n\n\"Of course, in the long run none of what I went through to adopt them matters.\" The blond was obviously thinking about her family. The tension was gone and she was smiling once more. \"Only that it happened.\"\n\nI felt myself calm down a little. I still didn't like all of the ramifications of what I was learning, but it was impossible not to feel the love and pride that this woman had for her children in her voice.\n\n\"My kids and Arlene are my life.\" She stared at me as if daring me to argue. I remained silent and continued to watch her. \"Unconditional love doesn't need a blood bond.\" I didn't know why the blond was sharing all of this with me, but I drank in each word. She gave me an odd grin before adding, \"So, you see, if you were a lesbian, you wouldn't have to give up on having a family.\"\n\n\"I'm not a lesbian.\" The words were sounding more and more hollow, despite them apparently being my mantra tonight.\n\n\"I'm not saying you are,\" the blond replied easily. \"But let me offer you a bit of advice. It took my wife a long time to learn this and she swears she kicks herself every day for it.\" She paused, waiting to see if I was willing to listen. I hesitated, but then nodded.\n\n\"If you were by chance, a lesbian, then denying it isn't going to help. It's not something you can wish away. Sure, you can marry a guy, have kids and live the American dream, but there's always going to be something missing.\"\n\nShe paused again, giving me a long, hard look. \"You might grow to love the guy, but you'll never be in love with him. You can't, by definition.\"\n\n\"I know,\" I whispered hoarsely, thinking about how perfect Ken was and how he did almost nothing for me. Worse, no man I'd ever kissed made me feel the way Billie had when her lips touched mine. The blond was still looking at me intently, but I couldn't meet her gaze. She eventually sighed and looked away.\n\n\"For what it's worth,\" she added. \"The American Dream is a lot more flexible than most people give it credit for.\"\n\n\"Maybe,\" I admitted slowly. \"But my parents aren't.\"\n\n\"Yeah, I hear you.\" The blond snorted and shook her head. \"Arlene's parents dealt with our marriage okay. Well, once we gave them grandchildren anyway. My parents, not so much.\"\n\n\"Do they talk to you?\" This time I met the blondes' gaze. I had to know. It was one of my biggest fears and I wasn't sure I could deal with it if my parents abandoned me.\n\n\"I'm working on them,\" she shrugged sadly. \"I think dad is starting to accept it, but mom is still having issues. Recently, I've taken to sending them pictures of the whole family once every month or so.\" She sighed to herself before adding, \"I don't think my mother would throw them out, but whatever.\" Her expression was something I could empathize with easily.\n\n\"I love my mom, but the problem is that she still trying to see me as the daughter she wanted, not the one she got. It hurts because it means she doesn't love the real me, but I'm hopeful that one day that will change and we'll reconcile.\"\n\nThose words hit me hard. Would my parents be able to accept me if I were a lesbian? Would their love for me get them past their prejudice or would they disown me? I really didn't know the answer to that question and it scared me on a level I couldn't put into words.\n\n\"But if they don't then so be it.\" The sad resolve in the blonde's voice made me want to cry. \"I can't imagine my life without Arlene and the kids. If my parents can't accept that then I'll just have to learn to live with it.\" She was clearly a woman who'd come to terms with her reality. \"Better that then I lie to myself and spend the rest of my life trying to be someone I'm not, alone and miserable.\"\n\n\"I really don't think I'm a lesbian.\" The denial fell from my lips easily, but by this point I knew I was saying it more for me than anyone else.\n\n\"Stop worrying so much about labels,\" the blond said knowingly. \"Lesbian, straight. Girl, boy. None of that matters. What does is how you feel about the special person in your life. I don't know if you and Belinda are meant to be, but she's definitely...oh fuck!\"\n\nHer unexpected outburst as she broke off the conversation shook me from my thoughts and I looked up, following her gaze. The dark-haired beaty who had danced with her, Billie and Arlene earlier was coming toward us. The blond did not look thrilled to see her. Actually, that was an understatement.\n\n\"I get what you're going through and I feel for you. Most of us have been there to one degree or another, but I may never forgive you if what I think is about to happen does,\" the blond grumbled angrily, just loud enough for me to hear. \"Jenna has been trying to get Belinda into bed for months. She's a real piece of work.\" The loathing was thick enough to taste. \"To hell with forgiving you! If Belinda goes home with Jenna because you screwed with her head, intentional or not, I may have to kill you.\"\n\nI was stunned into silence as a flood of emotions overwhelmed me, none of them related to the blonde's threats. We'd only been talking for a few minutes, but she'd shared a lot in that time and I knew she was just concerned for her friend. That didn't help me cope with my own feelings.\n\nFirst and foremost, I sure as hell didn't want Billie going home with a woman like this Jenna based on the blonde's reaction, but it was more than that. I didn't want Billie going home with any woman, or man for that matter. It wasn't just my jealousy that made me momentarily speechless. It was a possessiveness toward her that I'd never felt for another person in my entire life, man or woman.\n\n\"Hey Sam!\" This Jenna woman's triumphant smile as she joined us irritated me in ways I can't explain. At least I now knew the blonde's name. \"Billie agreed to give me a ride home.\" I hated her voice. I swore I heard an underlying meanness in it. \"Isn't that nice?\" I hated the fact that she seemed so smug. Who was I kidding? I hated her, plain and simple, and it had little to do with her or her words. \"Here she comes now!\"\n\nBillie drove up on her motorcycle. She'd already taken out her jacket and was holding it up to Jenna. It made sense. The woman was wearing even less than me and it was a cold night. Despite her action, I noticed that Billie's eyes were on me and not the dark beauty stepping toward her.",
        "The brunette was only a couple of steps from Billie when I finally reacted. I moved forward with three of the longest strides I'd ever used in my life, especially in a skirt. I stepped between the two, taking Billie's jacket and put it on in one smooth motion. I also climbed on to the motorcycle behind her far quicker than the skirt should have allowed.\n\n\"Hey!\" Jenna cried, shocked by my actions. She wasn't the only one. Hell, based on Billie's expression there were at least three of us.\n\n\"Sorry for the confusion, but Billie's my ride,\" I said in a tone that left no room for argument as I put the strap of my purse over my shoulder. \"We came together.\"\n\n\"But how am I going to get home?\" Jenna was more than a little miffed. I was not one to gloat, but it was suddenly a lot harder to avoid than it should have been.\n\n\"Arlene and I will give you a ride,\" Sam put in helpfully.\n\n\"We will?\" The other blond from the dance floor had just pulled up in an SUV and gotten out to see what was going on. Arlene had arrived right behind Billie. My guess was that they'd been talking in the parking lot. It made sense based on how long my conversation with Sam had been. Something had to have delayed them both.\n\n\"Yes, we will.\" Sam was smiling widely, not bothering to hide her satisfaction. She didn't even try and look innocent.\n\n\"Samantha, I know that look.\" Arlene was staring at her partner with her hands on her hips. \"You're either up to something very bad or very good.\"\n\n\"Only time will tell,\" her wife grinned cryptically, all but pushing Jenna toward the SUV. \"I'll explain later.\" Arlene shook her head, but joined her partner in shepherding the brunette to their car. Jenna was not happy, but had no chance against both blonds. In moments Billie and I were alone. We remained silent until the SUV passed us on the way toward the exit.\n\nArlene smiled and waved from the driver's seat. Samantha did too from directly behind her, but only with one hand. The other was stopping Jenna from undoing her seat belt. I shook my head and grinned as the SUV passed out of view.\n\n\"I hope a cop doesn't stop them,\" Billie said with a shake of her head. \"I'm pretty sure kidnapping is still against the law.\" We looked at each other and suddenly we were both laughing. It felt great.\n\nUnfortunately, it couldn't last forever. Eventually we finished and ended up staring at each other, somewhat awkwardly. It didn't take a genius to realize that Billie wanted an explanation. The problem was that I had no idea what to say. I hadn't thought about what I was doing when I grabbed her jacket and climbed on the motorcycle. I'm simply reacted.\n\n\"Look, you should know that I'm even more confused now than I was before,\" I admitted. \"Talking to Sam helped, but I'm still digesting her words and what they mean to me.\"\n\n\"Then why?\" It was a fair question and had more than one answer.\n\n\"I couldn't let you leave with Jenna. You deserve better.\" It was a truthful answer, just not the right one. Billie gave me a look and I shifted nervously, unable to meet her gaze.\n\n\"I need more.\" Her voice was calm, but I could hear the underlying hope, mixed with a healthy dose of fear.\n\nBillie was still upset from earlier. I hadn't meant to hurt her, but obviously had. I knew I had to give a different answer if I wanted her to give me a ride back to my car. I also knew that what came next had to do with a lot more than a simple ride.\n\n\"I can't make any promises,\" I said slowly, meeting her eyes. \"All I know is that right now, I would rather be here with you than anywhere else.\" It was the best I could offer.\n\n\"That will do,\" Billie said with a slow smile. \"For now.\" My heart beat considerably faster at the look in her eyes.\n\nI didn't get a chance to reply. The motorcycle had been idling, but with one fluid motion on Billie's part the engine revved and we were off. I barely got my hands around her waist in time not to fall off. It was close enough that I squeaked. I could feel Billie's laughter through her stomach muscles.\n\n\"Not nice!\" I cried, but the motorcycle was so loud that I'm not sure she heard. If she did, Billie chose to ignore my words. A moment later, I was too distracted by the ride to care. I really did love motorcycles!\n\n'Something else that will upset mom and dad,' I thought glumly, but then shrugged, refusing to dwell on it tonight. I was almost a quarter of a century old. It was past time that I stopped worry so much about what they wanted and focused more on what made me happy, and right now I was happy. Maybe it wouldn't last, but so be it.\n\nBillie chose a different route than we arrived by. The road here was wide, flat, straight and mostly empty at this time of night. In moments, we were going much faster than we'd gone earlier. I'd forgotten to tie my hair up this time and it blew wildly. I'd curse later, but I loved how it felt right now.\n\nBillie had to be cold since I wore her jacket, but she didn't seem to mind. The motorcycle purred under us and I held onto her tight, only partially because of how fast we were going. Our bodies seem to mold together seamlessly wherever we touched. I refused to think about how that made me feel. I simply enjoyed it.\n\nThe street was well lit, but I couldn't make out much beyond the road so eventually I gave up trying and rested my head on Billie's shoulder. It felt so good that I actually felt myself relaxing despite how fast we were going. Everything faded away once more except the vibration of the motorcycle, the feel of the road beneath us and Billie.\n\nI was so in the moment that I didn't realize we were nearing the end of the road until Billie downshifted and slowed. I lifted my head reluctantly and saw the upcoming turn. It struck me that I had no idea where were, but it didn't bother me. I trusted Billie.\n\n\"Hang on,\" she called over her shoulder. \"The road gets a bit twisty from here.\" I nodded in response.\n\nBillie wasn't kidding. We were going slower, but the constant shifting from side to side as we turned first one way and then the other didn't make it seem so. Once again, I found it strange at how well our bodies moved in tandem. It wasn't long before my head was once more lying against her back. I let the motorcycle and Billie's motion direct my own.\n\n\"That was amazing,\" I said with a loud sigh as we finally stopped. \"I really do love your motorcycle.\"\n\n\"It's a start,\" Billie said with a grin that I chose to ignore. It wasn't hard when I realized that we weren't back at the restaurant and my waiting car. Instead, we were at my apartment building. I'd forgotten that Billie knew where I lived. I told her when we talked about her helping me find a new place.\n\n\"What are we doing here?\" The question came out normal, but I was feeling anything but. Billie took one look at my face, snorted and started laughing.\n\n\"Relax. I brought you home instead of to your car because you're still too buzzed to drive.\" That made sense. I was more than just buzzed. There was no way I'd pass any sobriety tests right now.\n\n\"Thanks,\" I said, getting off the motorcycle somewhat awkwardly. Billie pulled me close as soon as I was free of it. My eyes must have grown huge because she actually laughed again, not that it made her let go of me.\n\n\"I'm not trying to seduce you into inviting me up.\" One again I felt the strange mix of relief and disappointment. \"It's only our first date, after all. Everyone knows that doesn't come until the third.\" I knew Billie was just having some fun at my expense. That didn't mean I had to take it.\n\n\"That's for straight people. I heard it was like the sixth for the LGBTQ community.\" It was a silly statement, but the best I could come up with to try and get back at Billie for teasing me.\n\n\"Not around here,\" she retorted easily, and then snorted and added, \"Or anyplace else I've ever been.\" We fell silent and Billie looked at me, waiting for something.\n\n\"I like your friends Sam and Arlene,\" I said, knowing I was about to ramble, but unable to help myself. It's what I did when I was nervous.\n\n\"Call her Samantha. She hates the nickname Sam. Actually, she's not crazy about most nicknames. She's the only person other than my parents who insist on calling me Belinda. Jenna calls her Sam just to annoy her.\"\n\n\"Oh damn!\" I snapped. \"Now that I've got the name Sam locked into my head, it's going to take forever for me to adjust to calling her Samantha.\" Billie grinned at my outburst. \"Oh well, just another reason to hate Jenna.\"\n\n\"She'd not that bad.\" Billie wasn't quite laughing, but her eyes shined with humor.\n\n\"If by 'not that bad' you mean gorgeous, then I guess I understand.\" My tone was more than a little sarcastic and I tried to pull away, but Billie refused to let go. In fact, she pulled me closer.\n\n\"I prefer blondes.\"\n\nHer lips were only inches from mine and suddenly I knew why she was holding on to me. Billie wanted another kiss. I didn't need the quickening of my heartbeat to know that I did too. The only problem was that she was waiting for me to make the next move and I was too scared to do it.\n\nBillie wasn't the shy type so I knew her reluctance was out of concern for me and how I'd react rather than any hesitation on her part. The desire in her deep chocolate eyes made that obvious. I told myself to lean forward and do it, but remained motionless. Billie eventually took that as a sign and let me go, but instead of pulling away, I waited. That's confused her.\n\n\"We don't have to if you don't want to.\" Her words were tentative which was so unlike her. I didn't like how they sounded. I knew it was my fault.\n\n\"It's not a matter of want,\" I snapped in frustration.\n\n\"You're afraid. I get it.\" Billie was giving me an understanding look, but she was wrong.\n\n\"No,\" I replied, shaking my head, but then clarified. \"Well, yes, I am afraid, but that's not what's stopping me.\"\n\n\"Then what is?\" It was a fair question. What was stopping me?\n\n\"I could say a lot of things. I'm still really confused and not sure if I'm ready for this to be something more than a blind date gone wrong. You know, just one of those weird stories you share with friends.\" I didn't quite groan to myself as I realized I was rambling again. \"And even if it is something more. Can I handle it?\" I hesitated and looked up at her before continuing. \"Will you be able to deal with the crazy that is obviously me?\"\n\n\"I'm willing to try.\" Dammit! Right answer.\n\n\"You know,\" I sighed loudly, ignoring my internal struggle. \"No matter how this ends up, I think I'm going to kill Janet.\"\n\n\"I'll hold her down for you,\" Billie said easily, but then added, \"Well, if it doesn't work out. Otherwise, I sort of owe her big.\"\n\n\"Very funny.\" My tone let her know I didn't see the humor. I probably would later, but not right now.\n\n\"You need to make a choice,\" Billie said seriously into the silence that followed. \"Either let me know you care and are willing to see what happens between us by kissing me, or step back and let me go.\"\n\n\"Those are my only choices?\"\n\nBillie paused before answering my question, looking momentarily startled by whatever was going through her head. I so did not want to know what she was thinking, only another part of me desperately did.\n\n\"Not really,\" she laughed suddenly. \"But I really do want another kiss, just to make sure what I felt the first time was real. Don't you?\" The answer was obvious since I was still standing close to Billie, but apparently, she needed more. It annoyed me for some reason.\n\n\"You know, whether I'm straight or a lesbian, I'm still the same girl!\" I blurted out.\n\n\"I know that,\" Billie injected pointedly, making sure I saw the truth in my own words. I paused at the realization, but now wasn't the time to think about that.\n\nI suddenly wanted Billie to kiss me very badly. \"My point being, that if you expect me to be the aggressive one in our relationship, then you're going to be disappointed.\" Did I really just say that? Oh my God!\n\n\"Is that all it is?\" Billie laughed in relief. Apparently, my mortification didn't seem to faze her in the least. \"Come here.\"\n\nI'd barely registered her words before Billie's lips covered mine. I had a horrified moment of 'what am I doing?', but then I stopped thinking and just let myself feel. They say that some drugs are addictive after the first dose. I'd never understood until that moment.\n\nI didn't think it was possible, but our second kiss was even better than the first. Poor Ken's kiss paled in comparison. So did every guys'. I had no idea how much of it was because Billie was a girl or how much of it was because she was Billie. I guess in the end it didn't matter.\n\n\"Wow,\" I said when we finally pulled apart. I didn't want it to end and no one had interrupted, but I saw the look in Billie's eyes and understood.\n\nIf we kissed any longer than it would morph into something more, first date or not. Billie clearly wanted that and if I were being honest with myself, a large part of me did too, but I wasn't ready. I didn't know if I ever would be.\n\n\"I'll come by tomorrow at around ten,\" Billie said, her voice a bit off as she fought to regain control of her emotions. \"You'll need a ride to pick up your car.\"\n\n\"Thanks,\" I said, finally stepping back. It was surprisingly difficult. Billie smiled in understanding. She asked for my apartment number and I told her. That's when I noticed I was still wearing her jacket. \"Wait! Take this.\" I started to pull it off, but she laughed and shook her head.\n\n\"No thanks. Hold on to it. I'll pick it up tomorrow. This way when you wake up and realize what happened you can't freak out and avoid me.\"\n\n\"I won't.\" Billie raised an eyebrow in obvious disbelief. I frowned and added, \"But you need it. It's cold out!\"\n\n\"Are you kidding? After that kiss, I'll be warm all night.\" I blushed and tried to offer her the jacket again. Billie just laughed and pulled away.\n\nI watched her go until her tail light faded before making my way into my apartment building. I found myself brushing one hand along the sleeve of the jacket as I waited for the elevator. It was heavy and made out of leather. It really wasn't me, but it was Billie.\n\n\"Life just became a whole lot more interesting,\" I smiled to myself at the thought, but then I swallowed and added more seriously, \"And scary.\"\n\n<p align=\"center\">Chapter Two</p>\n\n\"My God, what have I done?\"\n\nI seldom got drunk these days, but I couldn't deny the truth. Not with the way my head was pounding. It hurt. It hurt a lot. Although, not all of the pain had to do with my hangover.\n\n\"What was I thinking?\" I groaned as I sat up in bed. I saw Billie's jacket on my desk chair and grimaced. She was right. I'd have to see her again to return it. That thought scared the hell out of me. Mostly, because despite being horrified by the idea, there was also a part of me that felt oddly content with the knowledge.\n\n\"I need a shower,\" I grumbled, stumbling out of bed. That's when I noticed the time. I had twenty minutes before Billie was supposed to arrive to take me to pick up my car. \"Great, just great!\"\n\nIt wasn't nearly enough time to get ready. Oh, I could probably make myself presentable in twenty minutes, but that was about it.\n\n\"Who am I trying to impress anyway?\" The question rang hollow as I pulled off my clothes and jumped into the shower. I was out in record time.\n\nI didn't even bother trying to dry my hair. I brushed and tied it up still damp. That was the best I could do. I threw on a pair of jeans and a tee-shirt and barely had time to put on some basic makeup when there was a knock on my door. I glanced at my cell phone. It was exactly ten.\n\nI went to the door and threw it open. I opened my mouth to say something unkind because I was hungover, cranky and uncomfortable facing Billie again, but then I saw her standing there smiling warmly at me.\n\nI froze, not expecting the kick I felt in the pit of my stomach. It was quickly followed with a warmth that was even more shocking in its way. I was completely unprepared for my reaction to Billie. I had myself convinced that this morning would be awkward, but this was worse...much worse.\n\nI was so focused on trying to figure out how to let Billie down gently that I never took into consideration that I might be just as attracted to her sober as I was drunk, maybe even more so. I tried to convince myself that the slight hardening of my nipples was due to the breeze that came in when I opened the door, but was only moderately successful. Mostly because I had a sudden flashback to how Billie's lips felt against mine.\n\nIt's not like I thought I'd find her ugly this morning, but I didn't expect the jolt of desire. I had a sudden and desperate need to taste another of her kisses, but I squelched it mercilessly. Thankfully, I was stoic enough not to show my feelings. Well, except for the whole freezing in place and looking like a statue thing.\n\n\"Miss me?\" Billie's smile grew as she obviously guessed what was happening. I couldn't have that.\n\n\"On time today, I see.\" Okay, I was being a little snippy, reminding her of her showing up late at the restaurant the night before, but it was better than completely falling apart which what was what was happening on the inside, at least a little.\n\nI was still hungover and my brain felt like mush. I knew I'd kissed Billie the night before, but I half convinced myself in the shower that it only happened because I was drunk and confused. Seeing Billie, not to mention feeling my body's instant reaction to her, quickly made that a lie that I couldn't maintain. And yet, I couldn't accept the alternative either.\n\n\"Do you need more time?\" I frowned at the question. A part of me wanted to scream out yes and it had nothing to do with getting ready to go pick up my car.\n\n\"No, I'm good. Let's go.\" I tried to push past Billie, but she didn't move.\n\n\"Aren't you forgetting something?\" My heart beat quicker. I thought she wanted a kiss hello. There was no way that as going to happen. I opened my mouth to tell her that, but she spoke first. \"My jacket. I brought my spare today, but it's a little cold out this morning so we'll both need one.\"\n\nOnce again, I felt that odd mix of relief and disappointment that seemed to happen a lot when I was with Billie. I nodded and ran back inside to grab her jacket, hoping she didn't see my embarrassment. Billie was waiting for me at the door. I hadn't invited her in and I guess she was brought up too well to wander in on her own. I put on her jacket as I joined her.\n\n\"I'm ready.\" I was a little out of breath. I told myself it was because I'd rushed to grab the jacket, but I was in better shape than that.\n\nInstead of turning to leave, Billie stepped close. This time I was certain she was going to try and kiss me. In my mind, I stepped back quickly, but in reality, my body refused to move. Traitor! Yet, instead of kissing me, Billie reached out with both hands and fixed the collar to the jacket. I'd been in such a rush I hadn't notice it was folded under.\n\n\"That's better,\" Billie said, smiling sexily, although I'm not sure she was doing it on purpose. Thankfully, she turned and led me down the hall and to the elevator. \"How's the hangover?\"\n\n\"I may never drink again,\" I moaned as the elevator opened and we walked in. Of course, Billie laughed. Bitch.\n\n\"Maybe we should get some food into you first.\" Okay, maybe bitch was a little harsh.\n\n\"There's a greasy spoon around the corner,\" I suggested. \"A lot of their specials are a heart-attack on a plate, but I'm addicted to their cheesy breakfast potatoes. Besides, it's close and cheap.\"\n\n\"Sounds good.\" I had the feeling that Billie was just humoring me. She didn't sound like she was all that thrilled at my description of the place despite her words.\n\nBillie clearly took care of herself and probably normally ate much healthier. I tried to do the same most days, but today was so not one of those days. I was in desperate need of something to help with this hangover.",
        "\"Don't worry,\" I offered as we left my apartment building and began walking. \"Their coffee is also very good. I'm sure they have a fruit cup or something if you don't want to eat fried.\"\n\n\"It's not that,\" she laughed briefly. \"I know the place you're talking about. They have the best gyros in town. I'm just trying to decide if I can handle one now. It's awfully early.\" I grimaced at the thought of putting something like that in my stomach. We fell silent for a few seconds as we walked.\n\n\"I'm surprised their gyros are good. I wasn't crazy about their falafel.\" I was just making conversation. The silence was bothering me because it gave me too much time to think. I figured that food was a safe topic.\n\n\"Yeah, it surprised me too the first time.\" She paused briefly before adding, \"You want to try Ricci's Spa for falafel. I know, the name is terribly, but the food is pretty good.\" Another brief pause as we turned the corner. \"Now for omelets you want to go to Antonia's. Their western omelet is my favorite, but they're all incredible.\"\n\nI had the feeling that Billie was trying to make me feel more comfortable by continuing to share small talk about food. Unfortunately, it wasn't really working, but I appreciated the effort just the same.\n\nBillie wasn't dressed all that differently from me, but on her the jeans, tee-shirt and leather jacket looked much better. It probably had more to do more with the way she wore them. Billie was one confident woman. I liked that about her. Well, that and her sexy Spanish tinged looks.\n\n'Stop it!' I snapped at myself and forced my eyes away from the woman. \"You certainly know your breakfast places around here.\"\n\n\"It's my job,\" she shrugged. \"I can't sell real estate if I don't know the area.\" She saw my expression and added, \"Don't be too impressed. I also used to live a few blocks away from here before I bought my own place.\" Billie laughed yet again. She was obviously in a good mood and despite myself, I let it affect me. I joined her and a lot of my uncomfortableness disappeared.\n\nWe continued talking about nothing special as we finished the walk and entered the diner. The d\u00e9cor was almost as cheesy as the breakfast potatoes I ordered and the holiday decorations only made it worse, but that didn't stop us from sitting and ordering.\n\nForty minutes later we were done eating and I had to admit, being with Billie was just as enjoyable this morning as it was the night before, even without the wine. Our conversation had a depth and realness to it that made me feel like I'd known her for years instead of less than twenty-four hours.\n\nThat's not to say we spent the whole time talking about heavy things. We didn't. In fact, most of the conversation was spent telling stories about our friends and families. Billie had a way of making every antidote she shared somehow funny and entertaining.\n\n\"So tell me, how did you and Sam...I mean Samantha, meet?\" Billie's offered a slow half smile at my slip up on her friend's name, but didn't comment. Instead, she answered my question.\n\n\"I have no idea.\" I frowned as her half smile blossomed into a full blown one. \"She's always been a part of my life. Samantha was my next-door neighbor growing up.\"\n\n\"Oh.\" I kept my expression as blank as I could, but Billie seemed to guess my thoughts anyway.\n\n\"No, not in that way.\" Her tone let me know she was teasing me, but just a little. I blushed slightly, but once again she thankfully didn't comment. \"Samantha is four years older than me. She's actually good friends with my brother Francis.\"\n\nI smiled as Billie proceeded to share some stories about growing up as the tag along to her brother, Samantha and their friends. We hadn't really talked much about our families last night. I was glad she was opening up to me about hers today.\n\nI shared some stories about Mike, Paul and Sean as well, but mostly stayed away from stories about mom and dad. It just felt too weird talking to her about them considering how unhappy they would be with Billie, her life style and the fact that I was sitting here with her.\n\nWe remained at the table far longer than the meal took. I guess we were both enjoying ourselves too much to leave. It was so nice to have someone to sit and talk to about something other than work. All of the friends I'd made since moving were from my new company. I refused to dwell on the fact that I'd known Billie less than twenty-four hours and was already far more comfortable with her than I was with any of them.\n\nIt came time to pay and I figured it was my turn. \"I've got this.\"\n\n\"No, this is my treat.\" Billie dropped more than enough money on the table to cover the check, including a nice tip. I was ready to argue with her, but she had already turned and started walking toward the door. I was annoyed as I followed her. I didn't catch up until we were outside.\n\n\"Are you going to insist on paying every time we go out?\" I didn't bother hiding my irritation.\n\nInstead of retorting in kind Billie flashed one of those smiles she had that made me lose track of things. She really was an attractive woman and when she smiled...well, let just say it didn't do anything to help the confusion I'd been feeling since I set eyes on her the night before.\n\n\"I like the sound of that.\" I wasn't sure what Billie was getting at until she added, \"The fact that you said 'every time'. I guess that means you plan on seeing me again.\"\n\n\"Not if you insist on paying!\" It was a silly retort and not really the point. I was not going to see Billie again, at least not in the way she meant. I wanted to be her friend, but that was all I could handle. I just wish my body agreed with me because it tingled in places it shouldn't when she laughed at my reaction.\n\n\"Fine, you can buy me dinner next Friday night.\" Billie was doing a terrible job of hiding her grin as she twisted my words into getting her way.\n\n\"Hey! That's not what I meant.\" I was so not going to go out with her on a Friday night. That sounded way too much like a date.\n\n\"Okay, then I'll buy. I don't really mind.\"\n\n\"Absolutely not! I'm paying.\" I felt momentarily triumphant until I realized that somehow, I'd committed to going out with her again, and on a date. Sneaky bitch!\n\nAlthough, I wasn't really sure if I was talking about Billie or my subconscious. She'd tricked me into agreeing too easily. Clearly, I wanted to see her again despite my misgivings. Misgivings? Now that was a huge understatement!\n\nWe fell silent as we walked to where she'd parked her motorcycle. I was lost in thought trying to make sense of what I was feeling. Maybe 'make sense' was the wrong choice of words. I was vacillating between trying to force my feelings into non-existence and enjoying how they made me tingle on the inside.\n\nI know it should have been a simple choice, but you have to understand, this was the first time I'd ever felt this way about another human being. My upbringing kept on insisted it was wrong, but the emotions I was feeling were far too heady to ignore.\n\n\"You want to go to a movie after dinner on Friday?\" I knew Billie was just trying to get the conversation going again, but the thought of being in a dark theater with her was uncomfortable. We were too old to be caught making out at a movie, but I wasn't sure if Billie would try it anyway so I quickly steered her away from that suggestion.\n\n\"Maybe we can go dancing again instead.\" It seemed harmless enough, but then I remember the sight of Billie moving on the dance floor from the night before. That was bad enough despite her being not really in the mood and dancing with someone else. How would dancing with her for real make me feel? \"Or something else. I don't feel like going to a movie.\"\n\n\"We'll figure it out when it gets closer.\" Billie seemed unfazed by my words as she took out her phone and handed it to me. \"Here, put your number in here. I will call you sometime during the week and we can finalize.\"\n\nI looked at her phone as we walked. It was no big deal to give her my phone number. Friends did that all the time. Hell, people who barely knew each other did it. Still, it felt odd giving Billie mine. I don't mean bad, just odd. It felt almost like I was giving her a part of me which was ridiculous. It was just a phone number.\n\nOn the other hand, it meant she would have a direct link to me. That she could call me any time. That I was committing to having her in my life. My heart started beating twice as fast as before.\n\n\"I can always just block her number.\" I mumbled the words so softly that Billie didn't hear them. Either that or she chose not to comment.\n\nI entered my number quickly and handed back the phone. Talk about embarrassing. Of course, her hand brushing mine didn't help. I felt the jolt down to the pit of my stomach, perhaps even a little lower.\n\n'Okay! I get it! You're into her!' I groaned silently to my body, and then frowned as I realized I was treaty my body and mind as if they were two separate people arguing over what was going on. \"Okay, that's just crazy.\"\n\n\"What's crazy?\" Billie asked, making me realize that I'd said the last part out loud. Great!\n\n\"Nothing.\" Okay, so my answer came a little too quickly and I was clearly full of it, but Billie was kind enough to let it stand.\n\nIt wasn't long before we made it to where she'd parked her motorcycle. The first thing I noticed was the two helmets. The sight of them made me smile. She hadn't forgotten. Billie's was black with some sort of purple design on it. It looked cool. It was feminine without being too girly. It fit her personality.\n\nThe one I'd was going to be using was all black. Billie helped me put it on and made sure it fit right, adjusting it as necessary. She also helped with my hair while I swallowed once and tried to hide how her touch made me feel. I'm not sure I succeeded, but she didn't comment as we both got on. It was much easier in jeans.\n\n\"Hang on.\" That was the only warning I received before Billie pulled away from the curb, but I was expecting it after last night so I didn't squeak this time.\n\nThe thrill of being on her motorcycle again sent a shivered down my spine. I really loved how it made me feel. The only downside was the helmet. I mean it was definitely safer and my hair probably wouldn't be half as bad when we were done, but I missed the wind whipping through my hair. I also missed being able to lay my head against her back, but I didn't dwell on that.\n\nIt was light out and the road was more crowded today. It made me more self-conscious at first. It wasn't until we were stopped at a light that I realized there was one other good thing about wearing a helmet. It covered my entire head and the windshield was dark so no one could see me. I wasn't trying to disguise myself, but there was no way anyone would recognize me. That helped me relax despite the odd looks some of the drivers were giving us.\n\nIt wasn't long before I tuned out the cars on the road and let myself enjoy the ride. Well, that and the feel of Billie. My arms were once again rapped around her waist. This time she was wearing a jacket so I couldn't feel her flat stomach as clearly, but I felt oddly content pressed against her back.\n\nI didn't pay attention to our route, but it quickly became obvious that Billie was taking the long way to the restaurant where I'd left my car. I didn't mind. Frankly, I was enjoying the ride too much to care. The truth was that it could have gone on for hours and I wouldn't have minded.\n\nIt wasn't just being on the motorcycle, not in and of itself anyway. It was the peaceful feeling that came over me while I rode behind Billie.\n\nI'm sure she thought she was being patient with me, but it was obvious in every look we shared what Billie wanted from me. It didn't help that part of me wanted what she was offering in return. The fact that I wasn't yet capably of accepting it all made me feel worse.\n\nOnly, none of that mattered when we were riding. We couldn't really talk and Billie was focused on controlling the bike so I could simply enjoy the moment without feeling pressured or overthinking it. The anonymity of the helmet only added to the feeling of contentment.\n\nI did my best to hide my disappointment when we finally arrived at my car. The restaurant was just opening for lunch and the parking lot was still mostly empty. Billie pulled her bike into the spot next to mine. I got off first and she followed, kicking the kickstand into place and propping her motorcycle.\n\nShe pulled off her helmet and my breath caught for a second when her dark hair came cascaded down her shoulders. I shook my head at my reaction before pulling off the helmet I was wearing. The sun was brighter than I expected and I had to blink a few times before my eyes go used to it.\n\n\"I don't suppose you feel like lunch?\" Billie took my helmet and secured both it and her own on her bike.\n\n\"You can't be serious?\" I knew she was just trying to extend our time together and part of me was tempted, but we literally just finished breakfast less than an hour ago. \"I'll be sick if I eat another thing.\"\n\n\"There is that,\" she laughed in agreement, but then sighed and added, \"And I am supposed to be showing a house to a couple in a little bit. I have to go home and change first.\"\n\n\"Thanks for the ride.\" I took off my borrowed jacket and tried to hand it to her. Billie refused to take it.\n\n\"You keep it for now. This way I know you won't try and bail on our date next Friday.\" She grinned at me and I couldn't help snort in laughter.\n\n\"You used that same logic on me last night.\"\n\n\"It worked, didn't it?\" I couldn't deny her point. It was a fifty-fifty on whether I would have answered my door this morning if I hadn't had her jacket.\n\n\"You can't keep using this jacket like that. Eventually, you're going to have to trust me not to run.\"\n\n\"Eventually,\" Billie agreed easily, making it obvious that she wasn't willing to do that yet. Smart girl.\n\n\"Take the jacket. It's yours.\" I guess she could tell from my tone that I was ready to be stubborn. I expected Billie to argue, but instead she surprised me by reaching for it.\n\n\"Okay,\" she said easily. \"I guess you're right. You never know when I might need to lend it to someone else who I'm giving a ride...Jenna for instance.\"\n\n\"You didn't!\" I snapped, truly angry at her for the first time. Again, her reaction surprised me. Billie grinned widely.\n\n\"Just checking,\" she offered in explanation. \"You're jealous. I like that.\"\n\n\"I am not jealous!\" I snapped, throwing the jacket at her and turning toward my car.\n\nI didn't realize she'd followed me until I reached the driver's side door. I reached for handle, but before I could open Billie had the gall to grab my shoulder and spin me until I was facing her.\n\n\"What are you doing?\" I asked, my pulse suddenly racing as I backed away from her. I only made it a single step before I bumped into my car. Billie stepped closer, reached past me and placed her the jacket on the roof of my car.\n\n\"It's yours for as long as you want it.\" She was only a few inches away from me and suddenly I was having problems breathing, much less thinking.\n\nI was mad at Billie and I knew I had a right to be. She shouldn't have teased me with Jenna, but I couldn't hold on to my anger as her dark orbs locked with mine. Instead, all I could think about was how Billie's lips felt against mine.\n\n\"You wouldn't!\" I gasped out. I wasn't even sure if I was afraid that she would or that she wouldn't.\n\n\"Sure, I would. I'm going to kiss you,\" Billie said making her attention clear. \"Unless you tell me you don't want me to.\"\n\n\"I...I...\" I couldn't get the words out. Billie smiled that sexy smile of hers. She was obviously done waiting. She leaned in and instead of pulling away like I told myself to do, my lips met hers hungrily. I groaned as once again, parts of me lit with desire I only seemed to feel at her touch.\n\nI'm not sure when her hands took hold of my waist. I only remember liking the way it felt as she pulled me against her. I moaned into Billie's mouth and her hands became more aggressive, dropping to my ass. Her knee slipped between my legs and pressed against me. The heat that caused spread quickly. It wasn't something new to me, but the intensity was.\n\nI lost track of time and pretty much everything else once again. I'd like to say I came back to myself eventually, but it was Billie who stopped first. It couldn't have been easy for her, certainly not based on the fire I saw in the depths of her dark chocolate eyes as she forced herself to step back.\n\n\"I have to go.\" Her voice was almost gruff as she fought for control. A part of me wanted to argue, but that's when I started noticing more than just Billie.\n\nWe were in a parking lot and there was a car pulling in a couple of spots down. The road was busy and there were plenty of cars passing in front of the restaurant who could see us. It struck me that I no longer had the helmet to hide my identity.\n\nWhat would I do if someone from my work saw me and began spreading rumors on Monday? The thought horrified me and quickly washed away whatever desire I was feeling.\n\nThe intellectual part of me knew that I wasn't doing anything wrong. Okay, so maybe such an extreme case of public affection was a bit over the line, but that would have been true even if Billie was a guy. No, the issue was that Billie was a she. I could argue that there was nothing wrong about that, but emotionally I wasn't ready to accept that. I couldn't get past the biases I'd inherited from my family. I wanted to be better than that, but wanting and being were two different things.\n\n\"Maybe you should give the jacket to Jenna.\" The words slipped out of my mouth, but I couldn't regret them, not even when I saw the hurt in Billie's expression. \"I'm afraid I'm simply not wired for what you want.\"\n\n\"Seriously?\" Billie snorted, not bothering to hide her disbelief. \"No one kisses like that without there being feelings involved. You're 'wired' the same as me. You just need time to come to grips with it and understand that it won't make you less, but more.\"\n\n\"It goes against everything I was brought up to believe!\" Billie was surprisingly calm as she looked at me after my outburst.\n\n\"Maybe so, but you're not limited by that as much as you think.\" She paused and waited for me to make eye contact with her. \"Trish, you're using your upbringing as an excuse. You're afraid of what being into me means. I get that. You're afraid of how it will affect your future. I get that too, but don't limit yourself by saying it's something you can't accept. If that were true you would never have let me kiss you last night, much less now.\"\n\nI couldn't find fault in Billie's logic, but this wasn't a logical issue. Still, what she said helped. I shook my head slowly and let out a long breath.\n\n\"I'm really not sure why you're putting up with my craziness.\" I was stepping back from the intensity of the emotions I was feeling. Billie could see that, but instead of forcing it, she let me.\n\n\"I can put up with an awful lot for kisses like that.\" She was grinning, but there was a seriousness in her eyes that touched me in ways I can't explain. \"I'll see you on Friday.\"\n\nI nodded, not trusting my voice. Billie moved to her motorcycle and put back on her helmet. She lifted the kickstand up and started her bike. I thought she was going to pull away without another word, but instead she asked, \"Can I call you tonight?\" Once again, I nodded, not even hesitating this time. I couldn't see her smile because of her helmet, but I swear I could feel it.\n\nBillie pulled out of the parking lot and I watched her go until she was out of sight. I blinked a few times and turned back to my car. That's when I saw her jacket resting on the roof. I'm not sure why, but it made me smile. I didn't need it for the car ride. That's didn't stop me from putting it on.",
        "<p align=\"center\">Chapter Three</p>\n\n\"I've got to get going. I'm showing a couple of houses.\" Billie sounded like she'd prefer to stay on the phone with me. I thought that it was likely considering we'd only been on the phone for twenty minutes. Last night we'd spent almost an hour and a half talking despite having had breakfast together.\n\nI'd spent quite a bit longer than that thinking about Billie and what having her in my life would mean in the long run. Frankly, I hadn't thought about much else. I was worried about how my family would take the news. I worried about how it would affect my job. I worried about a lot of things, but all of my worries seemed to fade in importance whenever I heard Billie's voice.\n\nTalking to her on the phone was both harder and easier than seeing her in person. The sexual tension was still there, but far less intense. That meant I wasn't nearly as distracted. Our first phone conversation had started off stilted, but after a few minutes it became obvious that whatever was between us was more than simply physical attraction.\n\nBillie had me laughing and joking before long and suddenly it was an hour and a half later. I hung up reluctantly despite that, but the good mood that came from talking with her persisted until I'd fallen asleep.\n\nThree days. I'd only known Billie for three days, but it felt like so much longer. I shook my head, amused by how disappointed I felt that she was getting ready to hang up already.\n\n\"I should be done in a few hours if you want to meet for dinner or drinks later.\" My heart beat picked up considerably at her offer, but I forced it back under control.\n\n\"I can't tonight,\" I answered a little too quickly. \"Part of the deal when I moved away from home was that I would call my mother once a week. We speak every Sunday night.\" It was obviously an excuse, but that didn't make it any less true. \"You have no idea the grilling I'd get if I tried to cancel.\"\n\n\"No worries,\" Billie said easily, hiding her disappointment. \"Another time. I'll talk to you tomorrow.\"\n\n\"Goodbye,\" I said and listened to her hang up. I put my phone down reluctantly, almost as if I held it long enough, she'd get back on.\n\nI needed a distraction so I put on a movie, but I didn't end up watching much of it. After about twenty minutes I gave up and started cleaning my apartment. If I couldn't clear my head and relax at least I'd do something production. Besides, it was past time that I gave my place a good cleaning.\n\nI was generally a neat person and I tidied up before I went to bed most nights, but my apartment wouldn't pass my mother's inspection if she were here. I loved the woman dearly, but mom was a cleanliness Nazi. The thought made me smile as I went about the task at hand.\n\nA couple of hours later I was just finishing cleaning out the refrigerator when the phone rang. My pulse quickened considerably until I glanced at the time and realized it was my mother and not Billie calling me back. It's not like she was supposed to, but I guess a part of me hoped.\n\n\"Oh Patricia, you have it bad,\" I grumbled to myself. I guess I was done denying my feelings for Billie. I just wasn't sure what to do about them yet. I laughed briefly at myself, but then my phone rang again and I realized that mom was waiting. That's when a wave of guilt hit.\n\nSuddenly, everything that had happened the last few days, everything I'd learned about myself, every new feeling Billie had awakened in me weighed me down in ways I can't explain. The phone rang a third time and I forced myself to reach for it.\n\n\"Hi mom.\" It was my typical greeting, but mom being mom, she saw through it immediately.\n\n\"What's wrong? Is everything okay at work?\"\n\n\"Everything is fine mom.\" I cursed myself silently. I should have known better than to answer the phone when I wasn't fully in control of my emotions. \"I'm just finishing up cleaning my apartment. You know how much I love doing that.\"\n\nMaybe mom wasn't the most open-minded woman in the world, but she was a good mother who loved her children dearly. She always could tell when something was bothering me.\n\n\"And work is going well. How is daddy?\" I didn't quite hold my breath as I waited for mom's response.\n\n\"He's the same,\" she finally answered, letting me off the hook, at least for now. \"He's outside working on fixing the garage door opener again. We could have bought a new one for the amount of money he's put into repairing it, but you know your father.\"\n\nI grinned, thinking about all of the times we'd had a similar conversation about my father and his attempts at repairing things around the house. You would think that a man with the number of tools he owned would be handy, but not so much.\n\nWe talked for about twenty minutes, which is to say mom gave me an update on my family, friends and neighbors with me making the appropriate noises when called for. I then proceeded to spend a couple of minutes talking about work and what had happened in the last week.\n\nThe weird part was that it was all I could do not to tell her about Billie. Mom would have loved that I had someone special in my life. It's what she always wanted for me, but it's not like I could mention Billie and leave out the fact that she was a girl. After all, Janet had done that to me and I was still trying to decide if I should forgive her.\n\n\"Patricia, please make sure to take care of yourself,\" Mom said toward the end of our call. \"And remember, I'm here if you need to talk.\" I knew her mom-radar was still telling her something was up and I felt bad keeping what was bothering me from her, but I was still working through what having Billie in my life meant. I wasn't ready to talk to anyone about it yet, much less my mother.\n\n\"I love you mom,\" I said, ignoring her not so subtle prompting. \"Tell daddy that I love him too. I'll talk to you next week.\"\n\n\"Okay,\" she said slowly, obviously not happy with my response.\n\n\"I can't wait until Christmas. Seeing everyone will be great!\" I figured reminding her that I would be home in less than a month might put her in a better mood. Well, that and possibly distract her from what her mom-radar was telling her.\n\n\"Don't forget it's your father's birthday that weekend.\" I wasn't sure if mom was being gracious or had actually been distracted, but I was thankful in either case.\n\n\"I remember. Any idea on a gift?\" It would have to be something small. I didn't want to pay extra to carry it in my luggage and I didn't want to ship it directly. I liked handing my family and friends their gifts personally, wrapped by my own hands.\n\n\"Garage opener repair for dummies.\" Mom's glib answer actually made me laugh. It also gave me an idea. My dad wasn't much of a reader in his younger days, but he was doing more of it more recently. I had a couple of favorite authors I thought he might like.\n\n\"You know, I might just tell him you suggested that when I see him.\"\n\n\"You wouldn't.\" Mom knew me too well. Daddy was a good man, but a bit on the sensitive side when it came to this type of stuff. That didn't stop mom and my brothers from teasing him, but I didn't because I was daddy's little girl.\n\nI sighed to myself, once more thinking about how my parents would react if they ever learned about Billie. I didn't like keeping things from them, especially mom. She was too good of a mother for us to be friends as I grew up, but she was always there for me. The only other person I felt close enough to talk to was Janet and I wasn't talking to her.\n\nJanet had tried calling me a couple of times since Friday night, but I refused to answer. My surprise at her setting me up with Billie had turned to anger the next morning. It didn't even matter if she was right in the end. Friends didn't do what she'd done to me.\n\nOf course, that meant that I didn't have anyone to talk to about what was going on with Billie. Maybe that was better in the end. Then again, maybe not.\n\n<p align=\"center\">Chapter Four</p>\n\n\"I can treat for dinner anytime. It doesn't have to be this weekend.\" I felt a massive wave of relief as I pressed the start button on my microwave. I tried to ignore the sense of disappointment that went hand in hand with it.\n\nIt was Wednesday and I got stuck in the office late. I was getting ready to heat up some leftovers when Billie rang my cell for what was turning into our nightly call. The first bit of news she shared was that her parents had called earlier in the day and told her that they needed to move up their annual Christmas decoration party to this weekend because of her sister Camila.\n\n\"It's really no big deal. Go to your parents and spend time with your family.\" I enjoyed our daily conversations, but delaying seeing Billie again wasn't necessarily a bad thing. I couldn't forget how out of control she made me feel and I wasn't used to that.\n\n\"I am not cancelling our date. That's not why I brought it up.\" Billie's tone made her message come across loud and clear. I wasn't getting out of our date so easily. My apprehension at seeing her on Friday night returned, but by the same token, I felt a twinge of pleasure and found myself smiling for no apparent reason.\n\n\"But how are we going to go on a date if you have to be at your parents?\" I opened the refrigerator and took out some fruit juice to have with dinner. I also reached for a glass from one of the cabinets.\n\n\"I was hoping that you would come with me.\"\n\nThe glass slipped out of my hand and shattered on the floor. It took two tries for me to catch the juice before it hit the tiles too. I half crushed the carton and some squirted out of the top, but that was still better than what could have happened.\n\n\"What was that noise? Are you okay?\"\n\n\"Please tell me you did not just invite me to meet your parents?!\" It was a rhetorical question asked in at least one octave higher than my normal voice.\n\n\"You could come as just a friend. My parents are 'the more, the merrier' type of people.\"\n\nI shook my head, but didn't comment as I put the juice container down on the counter. I looked at the mess and tried to decide whether I should try and cleanup the spilled juice or the broken glass first. Definitely the glass.\n\n\"Are you there? Is everything okay?\"\n\nHow could Billie be so completely clueless? There was no way I was going with her this weekend to meet her family. It was too soon for that. It was way too soon for that! Hell, I wasn't sure it would ever not be too soon for it!\n\n\"I'm fine,\" I finally said. \"I dropped a glass and it shattered. I need some time to clean up. Why don't you call me back in an hour? That will give me a chance to eat as well.\"\n\n\"You haven't had dinner yet?\" Billie asked in surprise, but then continued before I could explain about working late. \"Okay, be careful. I'll call you back in a little bit.\"\n\nThe cleanup took longer than I expected, but that was okay. I was no longer hungry anyway. Instead, I sat at the kitchen table and grappled with my thoughts. I was still doing so when my cell phone rang. I looked at caller ID. It was Billie. I reached for the phone, but my hand fell short.\n\nIt went to voicemail eventually, but she didn't leave a message. Five minutes later my phone rang again, and then five minutes after that. I ignored it both times. That's when Billie texted me.\n\n'You can't avoid me forever. You still have my leather coat.' That made me smile despite my spinning head. A new text came in when I didn't respond. 'Look, I'm sorry. I guess I didn't think it through.' That deserved an answer, and a snide one at that. I picked up my phone and send a quick response.\n\n'No, really?'\n\nMy phone started ringing again a moment later. I was tempted to not answer yet again, but I was being childish and I knew it.\n\n\"Trish?\" Billie's voice sounded worried. Part of me felt that it served her right, but a larger part of me didn't like it.\n\n\"You owe me a new glass, and a half carton of juice.\" My tone was sharp, but the initial shock of her request was finally starting to wear off. \"And I had to wash the kitchen floor? Do you have any idea how much I hate doing that?\"\n\n\"Talk of meeting my parents bothered you that much?\" I actually pulled the phone away from my ear and stared at it for a moment, counting to ten to calm down before bringing it back to my ear.\n\n\"For a moment,\" I began slowly. \"Let's say that I was completely comfortable with the fact that last Friday night threw my whole world view on its edge. Let's say that I was perfectly at ease with dating a girl, which if you haven't figure it out yet, I'm not.\" The flow of words was picking up speed, as was the intensity.\n\n\"Or even better, let's say you were a guy and I didn't have to face any of that. Why on God's Green Earth would you think I'd be okay with meeting your parents less than a week after I met you?\" I could feel blood literally pounding in my ears. \"We've had exactly one date and it was a blind one at that! Do you really think you know me well enough to invite me to a Christmas decorating party? With your entire family, no less?\"\n\nI didn't give her a chance to answer before I added, \"One that, based our previous conversations, would most likely entail at least one overnight stay since it's a six-hour drive from here?\" I paused, but only briefly. \"Or is this just something you do? Invite whoever you're dating to your parents' house to meet them after one date?\" The was a pregnant pause as I finally ran out of words.\n\n\"No, I don't typically invite anyone I'm dating to meet my parents,\" Billie finally responded. \"And you're right. We would have had to spend at least one night, possible two. I didn't think it through.\" It was her turn to pause, but she clearly wasn't done so I waited. \"I guess I didn't want to give up our date Friday night and I figured this was a way to do both.\"\n\nBillie paused yet again, but this time I knew she wanted me to say something. I just wasn't sure what that was, but it became clear a moment later. \"Are we okay?\"\n\n\"Yes, but you owe me,\" I answered, finally calming down. It was time to lighten the mood a little. \"I guess I'll just have to learn to live with the fact that you're not as perfect as I originally thought.\"\n\n\"Ouch! That hurt!\" She didn't sound hurt. Frankly, she sounded more amused. \"And what's with the whole 'God's Green Earth' thing? Where did that come from?\"\n\n\"It's one of my mom's sayings.\" I didn't want to get into a conversation about my mom. Not yet anyway, so I changed the subject. \"We'll skip this weekend and figure out something next week when your back from your parents.\"\n\n\"Absolutely not. We're still going out on Friday.\"\n\n\"But you need...\" Billie didn't let me finish.\n\n\"My sister Cammie is the one whose changed our plans, not me. I'll leave early Saturday. They'll just have to wait until I get there. It's not that far away.\"\n\n\"Billie, that's...\"\n\n\"Relax,\" she interjected again. \"It won't be that big of a deal. Besides, I'm afraid if I let you out of our date this weekend that not even having my leather coat will make you see me again.\"\n\nThat wasn't true and I'd almost said it out loud, but I hesitated when I realized just how much had changed in the last week. I'd want to see Billie again even if I didn't have her jacket. The conversations we'd been having this week were bringing us closer together quicker than I expected. I missed Billie despite talking to her every night.\n\nThe truth was that there were times, especially at night when I was trying to go to sleep or early in the morning before I got out of bed, when I ached for the touch of her lips. That thought struck me silent once more. Billie took my silence the wrong way.\n\n\"Look, I'm not leaving without seeing you. We can do anything you want.\"\n\n\"I'm going to hold you to that.\" I found the thought amusing. I'd have to figure out something interesting to pay her back.\n\nBillie and I spoke for quite a bit longer which was pretty common for us these days. She was obviously excited to be going home this weekend despite how the change in plans almost ruined our second date. She shared a lot of stories of her family's Christmases.\n\nSomewhere in the middle I started getting in the spirit and shared some stories about my family get togethers as well. I hadn't been in the mood to decorate for the holiday yet, but Billie's excitement was contagious. I found myself playing Christmas music in the background and digging out some boxes from the back of the one oversized closet in the apartment.\n\nI set up the family of ceramic Christmas teddy bears I'd collected over the years on top of the refrigerator and the Precious Moments nativity my parents gave me on one of the end tables in the living room.\n\nI put a bunch of other knickknacks throughout my apartment as Billie and I continued to talk. I only had a one-bedroom so it didn't take very long. There were only two places bare when I was done, the coffee table in the living room and the kitchen table. That's when I pulled out the most important box out of the closet. I opened it and smiled at its contents. There were at least ten snow globes inside, but the two largest ones were my favorites.\n\nOne was of a family decorating a Christmas tree. The base was a bunch of colorful holiday packages. That one went on the coffee table. The other was a village Santa with a line of children waiting to talk to him. People were ice-skating on a small pond off to one side and a well-lit Christmas tree was on the other. There were even some kids sledding in the background. That was the larger of the two and went on the kitchen table, but not before I put the Christmas tablecloth down. It was red with holly leaves etched on the edges. I fell in love with the latter the first year I'd had my own apartment.\n\nI should have put the rest of the snow globes back in the closet because there really wasn't any room for them with all the other decorations I put out, but I was crazy about Christmas snow globes and found places for most of them.\n\nI looked around the living room when I was done. Everything was perfect. Well, almost everything. There was one thing missing. I frowned because it really wasn't something I wanted to do myself. The solution came to me and was so obvious that it made me laugh.\n\n\"What so funny?\" Billie asked over the phone.\n\n\"You'll see.\" My cryptic response didn't sit well with her, but I refused to explain. It was going to be too much fun to drop it on her last minute. After all, Billie did owe me.\n\n<p align=\"center\">Chapter Five</p>\n\n\"Don't let it drag on the ground!\" Last year Janet helped me lug my Christmas tree home. This year Billie was the lucky one. It was the only thing missing from my apartment. The fact that it was warm out made the effort a little sweaty, which just seemed wrong. It was always cold out when I picked my tree up in the past.\n\n\"I still think you planned all this so that you won't have to pay for dinner,\" Billie teased good naturedly.\n\n\"I'll pay next time,\" I insisted. It's not like I chickened out on going out with Billie. It was just that I didn't want to put up my Christmas Tree by myself and she did say we could do whatever I wanted on our Friday night date. \"And you owe me. Besides, don't I get any credit for cooking for you?\"\n\n\"Depends on how good the food is,\" she grinned. \"I'll let you know after I we eat.\"\n\n\"I am an excellent cook.\" I wasn't usually one to brag, but her teasing sort of demanded it. Besides, I really was pretty good. Mom had insisted I learn. She always swore that being a good cook might or might not help you catch the right man, but it would definitely help you hold on to him.\n\nIf my mother could only see what I was using all her teaching efforts in the kitchen for now. Poor mom. \"I made honey glazed chicken. You'll love it. Just make sure not to eat too much. I expect you to help decorate the tree.\"\n\n\"Aha! Free labor. That's what this is all about!\" Billie was having far too much fun at my expense. \"First you drag me to three different Christmas Tree lots to find the perfect one and now you're going to bribe me with food to help you set up the poor tree you finally picked.\"",
        "\"Don't start on that again!\" I snapped, but I was having a hard time not laughing. Billie had never put up a real Christmas Tree before. Apparently, her parents were against using a real tree for the holiday. \"If you call me tree-killer again, I can't promise that what I feed you will be safe!\"\n\n\"You are what you are.\" Her sigh was way over the top. \"I guess I'll just have to learn to live with the fact that you're not as perfect as I originally thought.\" I probably should have expected Billie to throw my own words from the other night back at me eventually.\n\n\"Sigh all you want, just make sure to make the turn wide enough not to get the tree caught in the doorway or you're going to see just how 'not perfect' I can be.\" We were finally entering my apartment building.\n\n\"Yes dear.\"\n\n\"Keep it up smart ass...\" I was afraid I might have gone a little too far with my last comment, but Billie laughed so I guess she wasn't offended. I was surprised with how comfortable I was with the back and forth between us.\n\nThe only other person I felt this relaxed with was Janet and it took us years to get that close. Billie and I had only known each other a week. The fact that we'd talked every night since our blind date helped, but it was more than that.\n\nWe entered the elevator and had to stand the tree up to make it fit. Somehow, Billie ended up in the corner blocked from view. She was holding the trunk with both hands to steady the tree.\n\n\"You know, if you didn't want to be seen in public with me, all you had to do...\" Billie tone was still joking, but I could tell she was half serious and I didn't want that. I reached out and moved the tree to the side so that I could look directly into her eyes.\n\n\"I am a little nervous about that,\" I admitted. \"But that's not why I changed our plans. Having a Christmas Tree is a big deal for me. I guess I could have bought and tried to set it up myself, but I thought it was something we could share.\"\n\nBillie tilted her head and looked at me. I stared right back, trying to let her see how important this was to me and what it meant to me having her help. I guess it worked because she seemed to relax into a warm smile. Unfortunately, that didn't stop her teasing.\n\n\"You know, they make fake trees that look even better than the real ones.\" I shook my head and moved the tree back so that it was blocking her again.\n\n\"Oh, I give up!\" I snapped as the elevator opened on my floor, but her comment had me grinning. \"I bet your Christmas tree is silver!\" We started moving down the hallway with the tree between us.\n\n\"It's green,\" she corrected. \"But there is snow on the ends. It looks very real.\" I think Billie was kidding, but I couldn't be certain.\n\n\"Sure, it does.\"\n\nWe brought the tree into my apartment. It took some careful maneuvering to get it through the door and into the corner of the I'd cleared for it.\n\n\"Wow,\" Billie said, looking around my apartment for the first time. She'd only seen it from the doorway the previous Saturday and it hadn't been decorated for the Christmas yet. \"You really get into the holiday spirit, don't you?\"\n\n\"What's that supposed to mean?\" I knew exactly what she was talking about. I really had overdone it this year, but I was having too much fun to admit that.\n\n\"Have a thing for snow globes, do you?\"\n\n\"I don't know what you're talking about.\" I tried to keep a serious expression as I said it, but Billie gave me a look and suddenly we were both laughing. \"Alright, it's sort of an addiction. I've been collecting them for years. Believe it or not, I own a lot more than you see here. I left a box at my parents.\"\n\n\"Om my.\" Billie's laughter didn't look to be slowing anytime soon.\n\n\"Stop stalling,\" I said, changing the subject. \"This tree won't get in the stand itself.\"\n\nWe set the tree up with some difficulty which, in my experience, was pretty much status quo when setting up a real Christmas tree. It's not like they were made to sit in stand. I think Billie was surprised when I broke out a small hand saw I'd picked up earlier in the week. Thankfully, we only needed to trim a few branches to get it to fit. Okay, so I made Billie help shave about a quarter of an inch from the bottom too. Sue me.\n\nShe didn't understand why so I explained that I wanted to make sure the tree would absorb the water I'd fill the base with later. I'd also put in an aspirin, but I didn't tell her that, mostly because I wasn't sure it actually helped. It was something my father always insisted on doing and I wasn't willing to chance not doing it. I was putting the tree up early this year and needed to make sure it lasted.\n\nI also enlightened Billie to the fact that with a real tree you had to give the branches time to settle before you could decorate, which of course, caused Billie to tease me some more. We were both in a great mood despite our efforts so it was all done in good fun.\n\n\"There's wine in that cabinet. Please pour me a class of the Chardonnay. I bought some scotch yesterday since that what you drank last Friday, but feel free to take whatever you want. I'm going to check on dinner. I'll give you a tour later, but feel free to look around. It's a small apartment so there's not much to see.\" I was rambling again, but being in the same room with Billie did that to me unless I was busy doing something like putting up the tree.\n\nI left her in the living room and moved to the kitchen. I'd cooked the chicken all day in a crock pot, but it was still going to take a little while to finish preparing. I told Alexa to put on some Christmas music and went about getting dinner ready.\n\nTwenty minutes later we were sitting at the kitchen table. I'd removed the snow globe and the table cloth. The former because it took up too much room. The latter because I didn't want to ruin it. My mother would not be thrilled to learn about us eating on a bare table, but so be it. It's not like she'd be happy about anything that was happening tonight. Well, except the chicken. I'd done an excellent job with it, even if I did say so myself.\n\n\"This is amazing,\" Billie said for the third time as she sat back from the table, her plate empty of the seconds I'd given her.\n\n\"Don't sound so surprised.\" Okay, maybe my tone was uncalled for, but I was much more comfortable with Billie when we were going back and forth. The banter kept my mind occupied and stopped me from rambling.\n\nThis was our second date and the third time Billie and I met in person. You would think I'd be used to her effect on me, but not so much. It didn't help that my eyes kept being drawn to her lips. I'd stopped after the first glass of wine, afraid of what might happen if I had anymore.\n\n\"Well, we talked every night this week and usually you were microwaving something for dinner.\"\n\n\"Who has time to cook midweek?\" I retorted. \"And I'll have you know that at least half of those times I was heating leftovers, not nuking a frozen meal.\"\n\n\"Live and learn,\" Billie laughed as I stood and began to clear the plates. It was safer that way. Seeing her so happy and content because of the meal I served made me feel good, but it also unsettled me.\n\nI didn't count on Billie helping cleanup after we were done eating. Still, it was nice to have help washing, drying and putting the dishes away. We were done in no time and moved to the living room.\n\n\"You know,\" Billie said as she looked around at all my decorations once more. \"You are missing one thing.\"\n\n\"What's that?\" I asked, wondering where she was going with her comment.\n\n\"Mistletoe.\" Her answer surprised me into an embarrassed laugh.\n\n\"Like you'd need it.\"\n\n\"Good point.\" Billie stepped close before I could react and pressed her lips to mine. It took me a couple of seconds before I started to return her kiss. In part because I was surprised and in part because her lips felt so good against mine.\n\nOddly, my hesitation had nothing to do with the fact that she was a girl. I guess I'd finally accepted that about Billie. Well, either that or her kiss overwhelmed me.\n\n\"That was sneaky,\" I said when she finally pulled away, but despite my words, I was desperate for her to do it again, not that I'd tell her that.\n\n\"I wanted to make sure you knew how much I appreciated dinner.\" Billie paused and shook her head once before adding, \"Well, that and I'd been wanting to do that for days, ever since our last kiss.\" The fact that I felt the same didn't help my control any. I was tempted to initiate another kiss, but that simply wasn't me.\n\n\"Tell the truth. You're just trying to get out of helping me with the rest of the Christmas Tree set up?\" Billie smiled and shook her head at my sad attempt at humor.\n\n\"You caught me,\" she sighed, stepping further back. I didn't like that so I followed her. Of course, as soon as I realized what I was doing I kept moving right past her to the box of Christmas lights and ornaments I had taken out of the closet earlier.\n\n\"The sooner we get started, the sooner we'll be done.\" I put the box down on the end of the coffee table and took off the top.\n\n\"You make it sound like so much fun,\" Billie teased, moving closer to help with the lights.\n\n\"And just think,\" I added, refusing to be outdone. \"You get to do this all over again tomorrow with your family.\"\n\n\"Don't remind me,\" Billie sighed, taking the first set of lights to the socket to test them. \"It may rain. I'll need to check the weather report in the morning, but it doesn't look good. If it's supposed to rain then I won't even be able to ride my motorcycle.\"\n\n\"Just remember to wear your helmet if you do.\" I loved riding on Billie's motorcycle, but that didn't mean I was oblivious to the dangers involved. A simple precaution like a helmet seemed obvious, but Billie didn't seem to agree.\n\n\"Yes dear.\"\n\n\"Must you?\" I sighed, but it only made her grin.\n\nThankfully, there were no issue with the lights. I let Billie finish them while I went into the kitchen. I came out to find her putting some of the generic ornaments on the tree.\n\n\"What are you doing?\"\n\n\"Decorating the tree,\" she answered with a frown. \"I was careful to pick the ornaments that I didn't think had any special meaning to you. Did I pick wrong?\"\n\n\"Yes,\" I replied, but then I shook my head and added, \"No. The ornaments you picked don't have any special meaning, but it's not time for them yet.\"\n\n\"I didn't see any garland in the box so I just assumed...\"\n\n\"We make it ourselves in my family.\" I held up the carton of cranberries. \"Can't you smell the popcorn being made?\"\n\n\"Oh,\" Billie said, nonplussed. \"Come to think of it, it did seem odd for you to be making popcorn so soon after we were done eating. I just didn't think anyone actually strung popcorn anymore. Well, outside of the movies.\"\n\n\"Popcorn and cranberries,\" I corrected, refusing to react to her teasing tone. \"It's worth the effort. You'll see when we're done.\"\n\n\"Yes dear.\"\n\n\"One more of those and I'm not going to let you help.\" Billie opened her mouth and I raised an eyebrow, waiting to see how she reacted.\n\n\"This should be interesting,\" she finally said. She was a smart woman. There would have been no more kissing tonight if she'd pushed me. I was so the type to bite off my nose to spite my face when I got mad. Thankfully, it just didn't happen very often. \"It will be a story to tell my family.\"\n\nI wasn't sure I wanted her to share any stories about me with her family, but I knew that was my problem, not hers. Billie had every right to tell them what was going on. I was the one in hiding, not her.\n\nBillie only stuck her finger with the oversized needle three or four times as we strung the popcorn and cranberries. Each time she'd curse and I'd laugh. I did stick my own finger once, but I refused to admit it to Billie. It took quite a while to make enough garland to cover the whole tree with just the two of us.\n\nToward the end she pulled out her phone, opened the camera app and handed it to me. \"Do you mind? My family will never believe me without proof.\"\n\n\"Why do I get the feeling that I'm being teased again for making you take part in such an old-fashioned tradition?\" I asked pointedly.\n\n\"Maybe a little,\" Billie laughed, but then added, \"Honestly, old-fashioned or not, I like it. Well, not the sticking myself with a needle part so much.\" She paused, glancing at the long strings of homemade garland we'd already made. They covered most of the table. Her eyes shifted back to me. \"But the rest was a lot more fun than I expected. I can't wait to see how it looks on the tree. I'm glad you invited me to help you with your tree.\"\n\nThere were layers of meaning in what she was saying. I could feel it. It made me blush as I took the phone from Billie and snapped a few pictures for her to show her family. She continued to watch me with an intensity that reminded me of the look she gave me just before our first kiss. My body responded, remembering the feel of her lips against mine, but I did my best to ignore it.\n\n\"Thanks,\" Billie said when I started to hand her phone back to her. I don't know what came over me, but suddenly I pulled the phone back and dropped into her lap somewhat brazenly.\n\n\"I want a picture with both of us,\" I said a little breathlessly. \"If you don't mind?\"\n\n\"I'd like that too.\" Billie followed her words by reaching up, placing her hand behind my neck and pulling my lips to hers. I didn't bother to fight her. Frankly, it was exactly what I wanted her to do.\n\nThe kiss last longer than I expected, but I didn't pull away until her other hand started caressing my body. It was only resting on my hip, but it too soon for that.\n\n\"Let's get that picture,\" I said, pulling my mouth from hers somewhat reluctantly. I swallowed with difficulty as I held out her phone and shifted on Billie lap to get us both in the picture frame. I had my free hand around her neck so I wouldn't fall off. \"Smile.\"\n\n\"Not a problem,\" Billie replied in a sexy tone just before I snapped the picture. I quickly stood afterward. Sitting on Billie's lap with her hand resting on my hip was more challenging than I expected. Apparently, my body wanted more than my brain could handle.\n\nI handed her back her phone and sat again, but this time in my own chair. I could feel my body respond in disappointment, but I ignored it. Thankfully, things calmed down after that and we went back to stringing popcorn and cranberries.\n\n\"I think I'm going to show Samantha, Arlene and the kids those pictures as well,\" Billie grinned at one point. \"The kids will love it and want to make their own homemade garland which will drive Samantha nuts since she hates this kind of stuff.\"\n\n\"Don't be mean,\" I interjected, but it was halfhearted because I was suddenly lost in thought. There was a part of me uncomfortable with Billie showing anyone the selfie I took of the both of us, but I couldn't very well say that now. I shook my head, wondering what had come over me to even take the picture in the first place.\n\nIt wasn't long before we were done. Billie helped me wrap our homemade garland around the tree and I quickly forgot my concerns as we laughed and joked.\n\n\"See, beautiful!\" I declared once we were done. Billie didn't comment on my decree, but I could tell she liked the way it looked too. \"Now we do the ornaments.\"\n\nThe tree decorating went quickly enough after that. The Christmas music was still playing in the kitchen and my place was small enough that it made nice background music as we put the ornaments on the tree and talked. I explained some of my ornaments, but mostly the ones I'd picked up myself or been given by as friend. I didn't get too much into the ones my family gave me.\n\n\"Janet gave me that one the first year I got my own place.\" Billie was holding a small Precious Moments ornament that said best friends.\n\n\"You do know you're going to have to forgive her eventually, right?\"\n\n\"I don't want to talk about Janet tonight.\" My tone was curt, but I was having such a good time decorating the tree with Billie and I didn't want thoughts of Janet ruining it. Billie gave me a careful look before nodding. I knew she wasn't done with the topic, but she had agreed to put it off until another day. \"Thanks.\"\n\n\"Where's your angel?\" Billie asked once we were done with the ornaments. We were both sitting on the couch. She had recently refilled our drinks and we were sipping from them enjoying the sight of the tree.\n\n\"I don't have one,\" I replied, but then corrected myself. \"Well, actually I do. Mom gave it to me, but it was a bit obnoxious. I've been putting up a star I made in sixth grade, but it's pretty much on its last leg. I need to replace it.\"\n\n\"Seriously? No angel? On a tree like this?\" Billie seemed almost horrified by the thought, which made me laugh. \"At least I know what to get you for Christmas.\"\n\n\"You don't have to do that.\"\n\n\"I know I don't have to,\" Billie responded, making sure to make eye contact. \"But I want to.\" It would have been perfect if she left it at that, but she just had to add, \"You can always hide it in the closet next to your mother's if you hate it.\"\n\n\"I don't hate my mother's angel.\" It was the truth too. It was a perfectly fine angel, if not quite my taste. \"I know it's silly, but I guess I just wanted to make the tree mine.\"\n\n\"That's not silly at all,\" Billie said, no longer teasing me. \"I guess I'll just have to figure out something else to get you for Christmas.\"\n\n\"You could come with me and help me pick it out.\" The offer slipped out without me really thinking about it.\n\n\"I'd like that,\" Billie said softly, and suddenly we were kissing again.\n\nI'd made out with enough guys over the years to know what to expect, only with Billie it was different. I'd enjoyed kissing most of the boys, but Billie's lips burned with a need that matched my own. Our mouths felt like they were seared together. It took all my efforts not to totally let go of whatever control I had left. Billie's kisses...they did things to me.\n\nI'm not sure how long we sat lip locked, but when we finally came up for air my lips were actually raw. The fire in Billie's eyes melted parts of me that I didn't even know existed. I wanted her to kiss me again despite my sore lips, but she pulled back.\n\n\"It's late,\" she sighed. \"My parents' house isn't that far away, but they're expecting me extra early to make up for the lost night.\"\n\nI picked up my cell phone from the edge of the coffee table and looked at the time, more to help calm me down than anything else. Still, my eyes grew wide when I saw how late it was. Decorating had taken a while, but we'd also been kissing for a lot longer than I thought.\n\n\"Wow, sorry.\"\n\n\"I could call my family and tell them to decorate without me?\" Billie's tone was almost wishful, but I couldn't let her do that. Besides, I knew what she was really asking and I wasn't ready.\n\n\"This is only our second date.\" The statement seemed unconnected, but we both knew what I meant. Billie proved that by mumbling a response under her breath as she stood.\n\n\"If you think I'm waiting until our sixth date...\"\n\nI'd joked about the LGBTQ waiting until the sixth date before sleeping together that first night. It was ridiculous and I was embarrassed once again for saying it. Plus, the truth was that I didn't want to wait that long ether. Well, if I worked up the courage to be with her at all.\n\n\"I still owe you a dinner out.\"\n\n\"Next Friday,\" Billie said confidently. \"I won't be back in town until Tuesday night and the week will be crazy after that.\"\n\n\"Okay,\" I said, trying not to dwell of the intense anticipation that welled up in me. \"I'm going to miss our conversations.\"\n\n\"Oh no. I'll still be calling you every day. They're the highlight of my day.\"\n\n\"Mine too,\" I admitted, causing Billie to pull me into another kiss. I didn't fight her. In fact, I was so lost in the feel of it that my phone actually slipped out of my hand and ended up on the couch. I didn't notice until Billie broke away from me and stood.",
        "\"I need to go.\" Her tone was abrupt, but I understood. \"I have to leave by six am.\"\n\n\"Text me when you reach your parents so I know you arrived okay.\" I was tempted to remind her about her helmet, but didn't want to ruin the moment. \"And thanks for helping out with the tree. It meant a lot to me.\"\n\n\"Me too,\" Billie said as she walked to the front door and opened it. I followed her. \"I'll talk to you soon.\"\n\nI thought she'd slip out without giving me another kiss, but she ended up hugging me and pressing her lips to mine one more time. Thank God! I wanted another kiss so badly that I almost didn't care if any of my neighbors saw me. Almost. I was the one who pulled away this time. The door was open and one of my neighbors liked to do laundry late on Friday nights.\n\n\"Be safe.\"\n\n\"Always,\" she replied, stepping through the door. I started to close it, but could leave things like that.\n\n\"And please don't forget to wear your helmet!\" I shut the door right after that so I couldn't hear her say 'Yes dear' yet again. Instead, all I heard was her laughter. It sent a warmth through me that wasn't completely unexpected.\n\n<p align=\"center\">Chapter Six</p>\n\n\"I've got to go in a few minutes.\"\n\nMy disappointment didn't really surprise me, but that didn't make me feel any better. I had a rough day at work and was looking forward to speaking with Billie. Talking to her always made me feel better.\n\nWe'd talked every day she was away, but it was not nearly as long as usual. Billie got home late yesterday. We talked, but she was so tired that I didn't have the heart to keep her on the phone long. I was hoping tonight would be different.\n\n\"You showing another house?\"\n\n\"No. I'm meeting Samantha for dinner.\" There was a slight pause before she added, \"You're welcome to join us.\"\n\nI smiled at the offer. Frankly, I was surprised by how tempted I was to agree. I liked Samantha and getting out of my apartment sounded like a good idea. It was Wednesday night and the week was dragging.\n\n\"Is Arlene going to be there?\" At first, I wasn't sure why that mattered.\n\n\"No, she's taking the kids to the book store. The one on Main Street. It has someone who reads stories to the kids on Wednesday night. This time of the year it will probably be Christmas related.\"\n\nI'd heard plenty about Timothy and Cassandra, Samantha and Arlene's kids. It was obvious that Billie loved them. She treated them like they were her nephew and niece, and based on some of the stories she'd shared I was betting that they thought of her as an aunt, possibly even a favorite aunt.\n\nWe got talking about Samantha and Arlene a few nights ago and when the kids came up, I could hear how close Billie was to them in her voice. She clearly liked kids and that was important to me, not that we talked about it directly. It was way too soon for that. Plus, there was the whole not sure I was willing to commit to the kind of life style Billie represented. On the other hand, I was having more and more problems seeing my life without her in it, especially after last Friday.\n\n\"Thanks for the offer, but I need to get some work done.\"\n\n\"I understand.\" I could tell that Billie did, but I also could tell she was disappointed. It made me feel bad because I was just using work as an excuse. Sure, I had stuff to do, but nothing that was that earth shattering.\n\n\"You can call again later tonight if you want.\" The words were out before I realized I was saying them, not that it mattered. It wasn't that big of a deal.\n\n\"Oh no!\" Billie laughed, obviously happy with my willingness to talk to her again today despite her refusal. \"I'm only calling you once a day. I don't want to scare you off.\" I wanted to tell her that she wouldn't, but I didn't. It would speak to a level of commitment that I was unwilling to admit quite yet. Billie continued before I could respond anyway. \"Although, I wouldn't mind if you called me later. I'll be home in a few hours.\"\n\n\"I'll talk to you tomorrow.\" There was no way I was going to call her.\n\n\"Until then,\" Billie said easily in reply. \"But feel free to change your mind. I'd love to hear from you.\" She paused, but only briefly before she added, \"Talk to you later.\"\n\n\"Goodbye.\" I hung up the phone and shook my head. I had to keep repeating to myself that we'd only known each other for a week and a half because on some levels it felt like I'd known her far longer, like all my life, but it was just too weird to contemplate.\n\nI tried working for about fifteen minutes before I finally gave up. I wasn't in the mood. I wasn't quite sure where I was going as I left my apartment with keys in hand. Twenty minutes later I was standing in front of the book store on Maple wondering what I was doing there. That's didn't stop me from walking in and making my way to the kid's section.\n\nThere were about dozen children there altogether. They were sitting in a circle around a woman who clearly took great pleasure in reading to them. I realized that she was reading the Grinch to them almost immediately and smiled. I loved that book.\n\nThe parents were all sitting nearby. It wasn't hard to spot Arlene. She had a cup of coffee in her hand and was sitting at one of the high tables with two of the other mothers. That caused me to pause. It didn't take a rocket scientist to realize that I wanted to talk to Arlene, but I had expected her to be alone. Samantha had said her wife had a similar problem to mine when they first met. I guess I wanted to get Arlene's perspective.\n\nWell, that and see her with her kids. I was going to have kids, one way or another, and I needed to make sure...I'm not even sure what I needed to make sure of. No, that wasn't quite true. I just didn't like what it meant about me.\n\nI wanted a family and the truth was that I was scared to death I wouldn't be able to have a normal one if I ended up with Billie. I wanted to make sure that I could live with the type of family that Arlene and Samantha had. I guess I thought that by seeing Arlene with her kids it would all make sense, one way or another.\n\n\"Trish?\" I swallowed at the surprise in Arlene's expression as she called out to me. I wasn't even sure she was going to remember me, much less know my name. It made me feel good that she did because it most likely meant that Billie had been talking to her about me.\n\n\"Hi,\" I said moving toward her. \"I'm supposed to be doing some work at home, but couldn't focus. I decided to come and do some shopping. My father loves a good book and his birthday is coming up. Plus, I still need a few Christmas gifts. Billie mentioned that you would be here and it didn't seem polite to come without saying hello.\"\n\nArlene gave a surprisingly piercing look, clearly not buying my story. I thought she was going to call me on it, but instead, she invited me to sit with her and her friends.\n\n\"Come join us for some coffee. This is Lynn and Susan.\" She then turned toward the kids sitting in a circle and pointed out two with obvious pride. \"The two mesmerized blonds right in front are Cassandra and Timothy, Cassie and Tim to their friends.\" She paused and grinned before adding, \"And when Samantha's not around.\"\n\nI laughed at her joke. I guess Samantha was even more of a stickler about nicknames than I originally thought.\n\n\"I'm going to call them Cassandra and Timothy, just to play it safe. I've already seen your wife when she's angry.\" I paused when I realized I'd called Samantha her wife. First, because I was surprised that I truly thought of them that way and second because of her friends sitting with us.\n\nI quickly realized that I was being silly. I thought of Samantha and Arlene as a married couple because that's what they were and it was pretty obvious that Arlene's friends knew Samantha. Neither of Cassandra and Timothy's parents were the type to keep their lifestyle a secret. Why should they have to? I knew it was just my own prejudices coming out.\n\nThankfully, all those thoughts went through my head very quickly so I didn't have to explain them. That would be a bit mortifying. Instead, I finished what I was saying about Samantha being mad at me. \"I could do without that experience again.\" This time it was Arlene's turn to laugh as I picked her kids out of the small crowd in front of the storyteller.\n\nI couldn't stop myself from smiling at their enthralled expressions as they listened to the woman reading. Cassandra was five and Timothy three. \"They are just as adorable as Billie said they were, maybe even more so.\"\n\n\"The twins next to them are mine,\" Lynn said with the same kind of pride. Lynn and her kids were African American with her being a touch lighter than them.\n\n\"And the boy pulling on that poor little girl's pony tail in back is mine.\" Susan voice was a mix of pride and annoyance. \"Excuse me.\" The pale skinned brunette got up and went to her son. I tried not to grin. It was hard, especially when the boy finally realized that his mother was standing over him. His expression was priceless.\n\nSusan came back and the three started talking about the normal things that mothers talked about. It was oddly comforting as they complained about their partners, Susan was married to a guy named Mark who sounded like a bit of a workaholic. Lynn was married to someone named either Terrie or Terry who was clearly a sports fanatic. I couldn't figure out whether her spouse was a guy or girl, but as time went by, I realized that it didn't seem to matter. That relaxed me more than anything else.\n\n\"So, how do you know Arlene?\" Susan eventually asked, trying to get me involved in the conversation. It was a kindness, but I froze, not sure how to answer.\n\n\"She's a friend of Billie's,\" Arlene interjected easily. I'm not sure what came over me, but suddenly, I felt very daring. Something inside of me couldn't leave it at that.\n\n\"We're dating.\" I guess I wanted to see their reactions. I mean sure, they had to be somewhat open minded if they were friends with Arlene and knew about Samantha, but a part of me still expected them to point their fingers at me and called me unkind names. The funny part was that it almost happened.\n\n\"Billie? Isn't Billie's a...\" Lynn began, but then stopped talking and blushed badly. \"Sorry, I just didn't picture you as...\" This time when she stopped talking, she actually groaned. For some reason, her reaction actually made me smile instead of horrifying me as I expected.\n\n\"Don't feel bad, neither did I. I'm still trying to come to grips with it.\" It was the truth too. I guess that's why I'd decided to use what, for all intents and purposes, were strangers as my guinea pigs. It was a lot easier telling them I liked a girl than it would be my family and friends. Well, except Janet. Apparently, she knew before me.\n\nArlene gave me another piercing look before turning and grinning at her friend. \"You have to forgive Lynn. She and her husband Terry come from a small town where apparently there are no homosexuals.\"\n\n\"And if you believe that...\" Susan put in helpfully, making me actually laugh, if only briefly.\n\n\"You should have seen me when I saw Arlene and Samantha together for the first time and realized they were a couple.\" Lynn actually crinkling her nose at the memory. \"I was brought up by surprisingly liberal parents, but didn't have any real exposure. I think my mouth actually hung open.\"\n\n\"It wasn't quite that bad.\" I had a feeling that Arlene was being kind.\n\n\"Well, you should have seen my reaction when my best friend set me up with a blind date that happened to be a girl.\" It was still hard to believe. My anger at Janet was lessoning, but I hadn't returned any of her calls yet either.\n\n\"She didn't!\" Lynn's reaction was oddly satisfying. Billie kept telling me I needed to forgive Janet, but it wasn't that easy.\n\n\"And let me tell you,\" I added pointedly. \"I was not brought up by liberal parents.\"\n\n\"Isn't Billie the hot real estate agent?\" Susan interjected.\n\n\"I would say so. Don't you agree Trish?\" Arlene grinned, but I knew she was watching my reaction carefully.\n\n\"Yes,\" I answered honestly, blushing slightly.\n\n\"You go girl!\" Susan teased. \"I would have asked that one out if I didn't have my Mark.\"\n\n\"Hunh?\" Okay, so that slipped out without my realizing it.\n\n\"Looks like I'm not the only one with limited exposure,\" Lynn laughed. \"Susan was bisexual before she married Mark.\"\n\n\"I still am,\" the other woman shrugged. \"But these days I'm monogamous. I don't need anyone else now that I have my Mark.\"\n\n\"A fair point.\" Lynn was still smiling as she shook her head. \"I'm not sure I'm ever going to get used to this big city life.\"\n\n\"Don't sell yourself or small towns short. There are plenty of small-minded people in the 'big city' and fair-minded people like you in small towns.\"\n\nFurther conversation ended because the storyteller finished and suddenly, we were inundated by five giggling children.\n\n\"Who are you?\" Timothy asked me almost immediately.\n\n\"Timothy, that wasn't very polite.\" Arlene was frowning at her son.\n\n\"Sorry Momar,\" the boy said contritely. He was just too cute.\n\n\"I'm Trish,\" I smiled down at the boy.\n\n\"She's a friend of aunt Bel.\"\n\n\"Aunt Bel?\" I asked in amusement.\n\n\"We can't call her aunt Billie,\" little Cassandra answered confidently. She didn't explain why, but I was guessing it had to do with Samantha's dislike of nicknames. \"And aunt Belinda was too hard to say when we were younger so we call her aunt Bel.\" The little beauty was clearly not shy, but then again, I noticed she kept her mother between us.\n\n\"Logical,\" I said with a straight face. I was wondering why Samantha let that nickname stand. Thankfully, Arlene guessed my thoughts and explained.\n\n\"Samantha took pity since Cassie couldn't pronounce Belinda.\" The woman grinned before adding, \"Of course, she tried to get the kids to call Billie Aunt Belinda when they were a little older, but by that time it was a lost cause, especially when neither Billie or I would back her up.\"\n\n\"That must have gone over well,\" I laughed and the others joined me. It felt pretty good. It was the first time in a while that I'd sat with a group of friends and just laughed. Okay, so maybe it was a little premature calling these women friends considering I'd just met them, but I could see it happening in time. I certainly liked what I knew about them so far.\n\n\"You do not want to get on Samantha's bad side,\" Lynn said, sounding like she had some experience with that as well. \"Thankfully, she's quick to forgive.\"\n\n\"Only if the person is truly contrite over whatever caused them to get on her bad side in the first place,\" Arlene put in with a shake of her head. \"Otherwise, she can hold a grudge with the best of them.\"\n\n\"Jenna?\" I couldn't help ask.\n\n\"Actually, no. That woman is a complete...b-word.\" I thought it was funny how Arlene cleaned up her language in front of the kids. I'd have to remember to be careful too, not that I was a big curser. \"Samantha says Jenna is evil incarnate wrapping in a beautiful package.\"\n\n\"Sounds like Samantha,\" Susan grinned.\n\n\"I wouldn't go that far, but Jenna's not my favorite person either.\" Arlene was frowning, obviously lost in thought. I was curious, but by the same token I didn't want to talk about Jenna anymore. That's when a thought struck me.\n\n\"Hmm,\" I said slowly. \"Maybe I should have introduced myself as Patricia to the kids? No one calls me that except my family, but...\"\n\n\"I like the name Trish better. I'm going to call you that.\" Cassandra words came out as a statement fact. For some reason, I thought not even Samantha would be able to get her to change her mind. Biological daughter or not, this little girl clearly took after Samantha.\n\n\"Me too,\" I smiled. Cassandra returned it, clearly warming up to me. I didn't realize quite how quickly until she turned to her mother.\n\n\"Can I call her aunt Trish?\" I wasn't the only one surprised by that question. \"I mean, I've heard you and Moms talking about her and aunt Bel, and how Trish might be the one.\"\n\nArlene looked at me uncomfortably. I smiled and shrugged, letting her know it wasn't a big deal. Billie was their friend so of course they were hoping things would work out between the two of us. Of course, in my opinion it was way too soon to be talking about me being the 'one' even if I was starting to get comfortable with my attraction to Billie. Well, maybe not comfortable, but...something.\n\nI thought I'd dealt with the whole situation pretty well, but then innocent little Cassandra's next words threw me for a loop.\n\n\"And aunt Bel looked awfully happy when she picked up Moms earlier. She spent a lot of time talking about Trish, and you said...\"\n\n\"I know what I said,\" Arlene interjected, cutting her daughter off. \"I just didn't realize how closely you were listening.\"\n\nMy pulse quickened quite a bit. I wasn't stupid. It was obvious that Billie liked me. She'd made that clear, but if she was talking about me to her friends and they were starting to think of me as 'the one' for her...well, that was scary. I just couldn't decide if it was in a good way or bad.\n\n\"Well, can I? Can I call her aunt Trish?\" Apparently, Cassandra was going to insist on an answer.\n\n\"No, you cannot,\" Arlene said, locking eyes with her daughter briefly and letting her know she was serious. Oddly, Cassandra wasn't the only one disappointed. That's when Arlene turned and looked at me, adding, \"At least not yet.\"\n\n\"Hey! Isn't Moms eating dinner with aunt Bel tonight?\" Timothy interjected. It was obvious the thought just hit him. The change in subject was a relief for more than one person.\n\n\"Yes,\" Arlene answered before turning to me.\n\n\"Moms?\" I couldn't help ask. I'd heard Cassandra call Samantha that earlier, but I thought it was accidental. Clearly, I was wrong.\n\n\"The kids call me Momar for Mom- Arlene and Samantha Moms for Mom - Samantha. Originally, they tried out Momsa for her, but they prefer Moms.\"\n\n\"I love it!\" Lynn laughed. \"They are so pale and it's sounds so ghetto.\" Arlene rolled her eyes and shook her head at her friend's comment, but didn't bother replying.\n\n\"You know, for a woman who seems so against nicknames, Samantha is allowing her kids to use quite a few of them,\" Susan added. I nodded in agreement.\n\n\"That's because our two little darlings have her wrapped around their little fingers,\" Arlene laughed in reply. \"Besides, they had to call us something different.\"\n\nI frowned as what she said struck me. I mean, it made sense. Of course, it did. The kids had two mothers so they would need to differentiate somehow. I'd just never thought about it before.\n\n\"I always took for granted that my kids would call me mom, just like I called my mother.\" The words slipped out. They were said softly, but still drew everyone's attention. Honestly, I was a bit stunned and not thinking clearly, despite it being such a simple realization otherwise I would never have added, \"I wondered how many other things I take for granted that I'll have to reevaluate now that I'm discovering some things about myself.\"\n\n\"Less than you think,\" Arlene answered kindly. \"But probably more than you're prepared for right now. Give it time.\" I didn't know what to say to that and hated the fact that everyone was still looking at me. Even the five children, although I doubt they understood.\n\n\"Okay, so who's hungry?\" Lynn's question was a kindness to distract them all from my freak out. It was met by a general hubbub from the kids. I'd never appreciated anything so much.\n\n\"We're off to the local diner for dinner,\" Susan added. \"You're welcome to join us.\"\n\n\"I've already eaten. Another time,\" I answered, meaning it. I needed some time to think about everything I'd learned tonight, but I could definitely see these women becoming friends, and the truth was that I could use some right about now. \"I still need to find that birthday present for my father I came here for.\""
    ],
    "authorname": "JoeDreamer",
    "tags": [
        "lesbian first time",
        "holiday",
        "first time",
        "blind date"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-blind-date-for-the-holidays"
}