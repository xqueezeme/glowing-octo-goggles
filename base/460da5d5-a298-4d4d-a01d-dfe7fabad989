{
    "title": "One Way to Graduate",
    "pages": [
        "One Way to Graduate\n\nWritten by Cafter Homme\n\nEthan and Nora are two people who would usually never cross paths, but when Ethan's sister Vicky invites the severely-disabled Nora over for an aftergrad party on false pretenses, Ethan has to step in. What follows is not a conventional romance, it's a telling of one night shared by two students with incredibly different lives as they grow closer, and learn to understand each other.\n\nFile this under disability stories, this one has elements of bondage in Nora's tethers and fixtures and her body's limitations, but there's little kink here otherwise. A high school romance I never thought I would write, this story was a roleplay I threw in a blender and refined while other ideas were stewing, before it grew into a longer, more detailed story.\n\nThanks to aliasMV for beta reading this one, and helping along the way!\n\nChapter 1\n\n\"Oh boy, here we go...\"\n\nEthan's sigh filled the soon-to-be invaded peace of his bedroom, as pop music permeated the single-story house, from roof to floorboards. Despite having a pitiful stereo in the family room, the walls still rattled with muddy bass. The 25-year-old could only rub his temples and try to relax after the initial blast, desperately hoping the party wouldn't get too crazy, and more importantly that he would have no part in it.\n\nVictoria, or rather, Vicky had called every single one of her friends to come over for the \"best grad party ever held in Rainier,\" a pitifully low bar, and yet still one he had no interest in competing for. She had bribed Ethan with a night for himself, alone in this house, for him to invite friends, or a special someone else. Of course Ethan had accepted, only for his date to cancel on him last minute, so a quiet evening with chips and beer was all he got out of that deal. Had it been worth it?\n\nThe thin walls shook as the bass dropped, and Ethan spotted the time: only 7:12pm.\n\nDefinitely not.\n\nEthan hoped he'd have no reason to exit his room and be forced to interact with Vicky's friends. No good story started with a college dropout wasting his night with a bunch of high school seniors -- well, graduates now. Besides, Ethan knew he'd feel old just hearing them talk. So here he was, a pizza box on his bed, his mouse in his right hand and the WASD keys in his left as he tried to drown it all out.\n\nOf course, he had seen this coming as soon as his parents announced they'd be leaving for the weekend for Aunt Dorothy's funeral. They both trusted their children to be responsible adults during that time, but Ethan knew Vicky was teetering on the line. A bunch of minors in a big house party like this? Coming-of-age movies had writ the plot in stone at this point. He just hoped it wouldn't come to that, for his own sake.\n\n<hr size=\"2\" align=\"center\" style=\"width:100%\" >\n\nSitting in the back of her van, Nora's chair jostled and rattled, the long metal arm holding her tablet bouncing up and down with every pothole they hit on the long-neglected forest roads.\n\nHer mom turned down the pop-country and glanced into the rear-view mirror. \"I'm surprised Vicky would hold a party like this, her parents always seemed so buttoned-up to me.\"\n\n\"Aaaaahhhh,\" Nora moaned in agreement, glancing up at the van roof. An old habit.\n\nLooking at the unwieldy tablet mounted in front of her, Nora scanned each button with her eyes, searching in subsets and folders for what she wanted to say, all the while her fists clenched with concentration and her knees squeezed the foam divider between them, her cheek pushing not so gently into the headrest arm to the left.\n\n\"I am. Surprised. Invitation!\" eventually erupted from the tablet's speaker, in the sweet voice of a girl from Wisconsin, resimulated and slightly digital, but better than Siri or Alexa, and a far cry from Microsoft Sam. It was Nora's voice, even if it had been donated.\n\nHer mom nearly looked back but thought twice and kept her eyes on the road as the one town cop drove past. \"Oh Nora, don't say that! You deserve to let loose as much as any of your classmates. You graduated just like them, same tests, same marks, no easy road. Work hard, play hard, as I always say! Now... are you sure you don't want me to come in? In case you have an acc--\"\n\n\"NNNNNNNNNGGGG\" Nora nearly wailed, if her throat would untighten for just a second. Her mom was sincere, generous, selfless, but wow could she be overbearing, and tonight that's the last thing Nora needed.\n\nBesides, they had done a full bowel routine right before putting this fun forest green v-neck and black tights on under all her braces and security straps. You could still see the bulky pad of her diaper, but looking down at herself with a not-inconsiderable bit of struggle against her body's various pulls and spasms, Nora realized the clear acrylic tabletop her wrists were tethered to made the bulge pretty hard to make out.\n\nThank God. Nora thought to herself, her mouth hanging open yet silent. Her head pressed to the left again when they hit another bump, stressing her out as the heavy communicator bounced on the end of its mast. Nora couldn't track her eyes properly until it settled down.\n\n\"I am. I will be. Fine. Mom. Thank you.\"\n\n\"Of course, sweetie.\" her Mom lilted, pulling up to Vicky's place, top-40s faintly audible from the street.\n\nNora's body twisted in her chair as she waited, slowly, but ceaselessly. It was her first high school party... and since graduation had been only a few days back, she wasn't even in high school anymore. Better late than never!\n\nWith the van parked, door opened, ramp lowered, and quite a few hooks and anchors released, Nora was finally free to eye the 'forward' arrow on her screen, but not before her Mom replaced the damp bandana bib under her gaping mouth and gave her a peck on the forehead, causing her to moan \"Guhhhh!\" with her cheeks glowing beet red, hoping no one saw from the window.\n\nIt was somewhat exciting for Nora to drive her chair up the street to the nearest driveway curb, down the sidewalk, and up to Vicky's door. Her mom had of course offered to ensure she got inside, but Nora asserted she was a big girl, that it wasn't too far, that Vicky and her friends would help her without a doubt!\n\nBy only a few minutes, though, Nora was wishing she had said yes, her attendant joystick on the handlebar behind her always made for a smoother ride than relying on her eyes to drive. Moving forward, not-quite parallel to the sidewalk, drifting left, stopping, turning a hair right, correcting too far the other way; Nora made a lazy zigzag all the way to the source of the music. A few bumps and barriers made her nervous, never at risk of actually getting stuck, just for the strangeness of being without someone, anyone, for this brief moment. It was so freeing for the teenager, who had only a few years earlier been without a voice or a way to direct her own chair, to now be able to drive her own uncooperative body up the street to a friend's house.\n\nBy the time Nora got herself to the unfamiliar front door, the nervousness and excitement and focus had taken its toll. Her body was spasming hard, as it always did when she didnt let it have its way, her knuckles white as they gripped the fuzzy braces tightly. If they hadn't been tethered down by the soft cuffs on her wrists, those fists would have been straight out, back, forward, reaching all around, getting in the way of her eyegaze; and besides how much Nora hated hitting people, the last thing she needed was more attention. With those troublesome appendages anchored down, though, just like her legs and chest and the rest of her, Nora was pretty confident, sitting there looking at the door. Sure her mouth was half-open, drooling a bit onto the cloth below, but Nora had been doing that all her life, and Vicky had never had a problem wiping that up in class, had she?\n\nNora was confident, until she realized she didn't have someone with her to reach out and hit the doorbell. Why didn't I think of this?\n\nDiscouraged, Nora didn't need head control to know that her Mom's van and all its safety was somewhere behind her, watching, waiting for her to get inside, and she almost turned around to head back, to go home.\n\n'No.' A little voice told her. 'You can do this.'\n\nNora steeled herself, her face twitching and slack-jawed, yet her eyes fiery; determined not to run away from something so simple.\n\nThose eyes -- the only thing Nora had confident control over, and only when she asserted it -- they razed her Connect menus, drilling into each icon until they opened up and spilled their contents on the display, finally landing on her phone's remote control. The phone itself was pinned to her thigh by her tight leggings, where Nora could feel it buzz, but she wrote on-screen, \"Hey V!!! I am just chilling outside your front door, can you open up?\"\n\nNo answer.\n\nThe music blared and Nora couldn't hear anyone coming, nor the familiar buzz of a text. She shot off another message, but still the same null response. Where was she?\n\n'If Vicky knew I was coming, why wasn't she ready? She knows my situation.' Nora worried. Yet it wasn't long before she had devised a backup plan. She could knock, if she really wanted to.\n\nNora eyed the arrows and nudged her chair closer, gently, until her footrest was close to the door, the one her pretty, unscuffed shoes were strapped firmly to, and then Nora nudged her chair hard! Twice! It was clumsy, but the closest she could make to a \"knock.\"\n\nJust when Nora was about to try again, the door finally opened and there stood Cole, the hottest guy in their graduating class, standing like a deer in headlights, looking down at her with a red solo cup in his hand.\n\nNora blushed hard, looked at her tablet to say \"Hi\", but didn't have the time before Cole shouted the worst thing she had heard in months...\n\n\"Vickyyy!? What the fuck?! YOU INVITED THE VEGETABLE?!\"\n\n\n\nChapter 2\n\nRipping a bite out of his third slice, Ethan was locked on his monitor.\n\nHe really wished he had the concentration to listen to some loud music as he played, just to drown out the party, but then again that was Ethan's problem, wasn't it? Focus. It was why he couldn't get through his second year of architecture, why he had to come home, why he had to deal with his kid sister's parties and irresponsibility.\n\n\"You show so much promise,\" was what they always said, only for Ethan's attention to wander halfway through a single lecture.\n\nHe eyed the other open window, minimized. AutoCad. His project to get back into school, or just an internship, his last ditch effort to show them how proficient he could be, if only he could focus. Ethan knew better than to open it now, the blaring music would only distract him again, so his eyes grew rapt with fighting the monsters on his screen.\n\nEthan tried his best to ignore the girly sounds of celebration outside his door as the fight got tougher in his little world behind the screen. He got tense as he played, his hand curling around the mouse and his simple office chair suddenly uncomfortable.\n\nA small cutscene with dialogue interrupted the gameplay before this new enemy attacked. She was fast, and hit like a truck too! Ethan just needed to play it cool, keep his shield up and not get distracted. The enemy flapped her wings and rushed towards him! Now or never!\n\n\"YOU INVITED THE VEGETABLE?!\"\n\nA single voice cut through the pop music and broke Ethan's hair-thin attention, drawing his eye towards the closed door in complete dumb surprise as the boss' swords dealt a killing blow.\n\nGlancing back at the screen, Ethan knew this run was over. His character respawned in the first level, at which point he muttered \"nope\" and closed the game, revealing his medium-density community design, which he quickly minimized again for the millionth time, almost muscle memory to avoid what he should be working on. He needed to breathe, maybe play something less stressful.\n\nEthan leaned back... then eyed the door again. 'Vegetable.' Had he heard that right? Maybe zoomers were being zoomers again. He didn't know. Maybe 'vegetable' suddenly meant something else, like 'fruit' had kind of evaporated. Ethan sighed; he didn't miss high school one bit. He was curious what was going on though, and at the very least he needed a drink.\n\nHe really didn't want to be a creep, slipping out of his room so timidly, but then again having to deal with introductions, judgemental glances, and the general stress of trying to act aloof enough to impress a bunch of kids wasn't really worth it. Sliding into the kitchen, it seemed the party was concentrated in the living room, a surprisingly responsible choice from Vicky. Then again, the sun was still beaming over the mountains. Plenty of time for this to get properly crazy.\n\nAn eye over his shoulder, Ethan opened the fridge to find all his beer missing, save for the cardboard. Eyeing a bottle of Orange Crush and swearing, he grabbed that instead and closed the--\n\n\"Hey Ethan.\"\n\nFuck! He bit his tongue and smiled thinly at the small figure behind the fridge door. Suzie, his sister's BFF was standing there, sipping one of his cans! How did she get there, how fast? Always loitering around Vicky, Suzie had this indescribably awkward presence, and a talent to get close to Ethan whenever possible.\n\n\"Oh. Hey. Party's going well, I hope,\" he offered politely.\n\n\"It can always get better. Why don't you join? We could all hang out and chat and...\" she started, but Ethan was suddenly hit by a glare of the sun, from a car or something, hitting him square in the eyes. He squinted towards the hall, spotting the silhouette of a stocky guy standing in the doorframe in front of... it looked like an equipment cart on the front porch.\n\n\"Why is the front door open?\" he squinted.\n\nSuzie followed Ethan's line of sight, \"Oh my god, that's Nora. I can't believe she actually came!\"\n\nThe guy shifted, and sure enough, there was a face among the apparatus, and Ethan was embarrassed to finally recognize a very elaborate wheelchair there, with a desktop tray thing, and a computer, and straps and... it was a lot.\n\n\"We call her robot girl.\" she added under her breath.\n\nEthan gave Suzie a sharp look.\n\n\"What?! It's better than 'the vegetable!'\"\n\nEthan couldn't disagree, suddenly remembering his sister whining about having to take care of \"some stupid special needs idiot\" at school to buff up her college applications. It had been through those thin walls, to Suzie or another friend, definitely not to him or their parents, or he would have remembered her being chewed out for being so insensitive.\n\nThough, had he been any better at eighteen? Ethan couldn't answer that question.\n\nShaking his head, he grabbed a glass.\n\n<hr size=\"2\" align=\"center\" style=\"width:100%\" >\n\nThe girl Ethan had noticed was actually on the verge of tears by the time her helper pushed past the jock.\n\n\"Hey asshole... she's not deaf! You want her dad stomping your ass?\" Vicky warned, getting up to Nora's chair to grab her joystick somewhere behind, by the push bar.\n\nFurious, embarrassed, deflated, Nora sat there, trapped, wishing for the millionth time that she had Vicky's sharp tongue. The disheartened girl could plainly see all the words she had bottling up in her throat, spread across icons and buttons on her screen, just out of reach. The eyegaze was acting up, the pointer dashing all around so she couldn't hover over what she wanted to say. Her teary eyes instead drilled into Cole, who wouldn't look at her directly, instead focusing on Vicky, above, behind.\n\n\"Who the hell are you waving at?\"\n\n\"Her mom! Who could also stomp your ass, lifting this one every day.\"\n\nVicky's defense tasted a bit sour to Nora, hurting her pride, but she knew she was a burden, so stomached the slight. Her cradling headrest keeping her tense neck pointed forward, Nora only heard her Mom start the engine and drive off. She was on her own now.\n\n\"Fuck, man, get out of the way!\" Vicky spit at Cole. \"I need to get her inside.\"\n\nAnd he did, with a disgusted glare which Nora returned, best she could, as her chair was pushed and driven over the threshold, albeit clumsily, and parked in the far corner of the living room. There were maybe twenty people already there in the house, music blaring, and they were all quiet, staring for an uncomfortably long moment.\n\nNora looked at the screen again, trying to blink away the tears and try again. Even if it were responding, Nora's \"voice\" wasn't really built for quick comebacks. Besides taking half a minute just to string a sentence together on the best of days, the tablet didn't even allow saving swear words into buttons for quick-access. Sometimes Nora felt like such a child, being pushed around and cleaned up after, even as her tongue-tied mouth wanted to tell Cole to 'fuck right off!'\n\nLooking at the screen again, it was a bit better. Her cursor hovered over \"Thank you\"....before wandering away.\n\nDamn it!\n\nStill Nora kept her real voice silent; she didn't like how people looked at her when she tried to speak. Sometimes it was too loud, other times embarrassingly deep or squealy; but never, not after years of speech therapy, never had it resembled intelligible words.\n\nShe tried the eyegaze again, almost usable.\n\nVicky picked up the cloth bib draped across her chest and wiped Nora's chin, before crouching down beside her chair. \"I'm sorry about Cole. Too many tackles to the head, you know how boys are! You ok? You came all prepared to have a good time?\"\n\nNora looked up for 'yes' and her caretaker for the night smiled.\n\n\"Yeah, you look... cute! And I saw your changing bag hanging behind you. You're not gonna make me pull a school nurse routine tonight, are you? Please? No messes?\" Vicky intoned a bit too loud for Nora's liking.\n\nShe frowned but not much of it showed on her shifting face.\n\nNora knew she was a burden... but that was a kind of mean way to say it. Still, the guest strapped into her chair looked down for 'no', and Vicky piped up, \"Spectacular! So glad we are on the same page!\"\n\nThe host of the party jumped to her feet and Nora could get a full view of the cute, shoulderless top and jean shorts she was wearing, the heels, simple gold accents too. It was altogether a pretty little ensemble that Nora unfortunately thought looked better on her friend than it ever would have on her twisted body.\n\nOf course, Nora thought herself pretty enough; sandy blonde hair and big cute wire-frame glasses firmly hooked over her ears, but it was undeniable that she didn't look like everyone else. Deformed slightly from the strange mix of spasticity and paralysis that her brain ordered up for her nervous system all day long; the lack of weight-bearing made Nora's feet twist oddly; her joints (knees especially) didn't bend all the way, too used to sitting in chairs; her muscle tone was irregular, her slim frame softer in some places of total atrophy and rock hard in others from endless searing tension; and her face was passably cute until she tried to use it. She thought her breasts were nice at least, perky and soft, and hopefully someone would like what they saw... someday...\n\nNora took relaxants, of course, along with a bevy of other medication, but growing up her whole life in a chair; Nora had to be realistic. She was cute, maybe pretty, but not shoulderless-crop-top-and-short-shorts pretty.\n\nIt was tough not to be jealous of Vicky. All her friends were here, and even though Nora had been invited, she had only passed by these people in the hall, sat across from them in classes, maybe exchanged a few words here and there when a teacher forced them to.",
        "Sitting alone, Nora tried to enjoy the music, moving her arm up and down in time to the beat, but of course it just hit the tabletop and pulled at the security tether in random intervals, loudly, awkwardly, drawing attention.\n\nVicky looked at her \"dancing\" in a strange way Nora couldn't interpret, and then walked off before she could ask for a drink.\n\n<hr size=\"2\" align=\"center\" style=\"width:100%\" >\n\n\"Yeah, I can't believe robot girl actually came!\" Suzie said yet again, the two of them joined by more girls, one of which Ethan was eyeing to possibly dilute the drink she was pounding. Someone had bought a keg. Messy.\n\n\"Mhmm.\" Ethan muttered to entertain her, drowned out by the music. Suzie's whole vibe didn't sit well with him, and as often as he eyed the hallway back to his room, she tugged at his arm like a little girl who wanted a plush to hug. Deciding to be polite, he nodded and smiled at the inane conversation. He did not want to hurt her feelings, she was just young after all.\n\nEventually the topic turned back to Nora.\n\n\"Your sis is amazing, you know?\" Suzie continued as Vicky burst past the douchebag-looking guy at the door and pushed the disabled girl in, settling her and her bulky wheelchair close to the music by the living room. \"She's such a good soul. Doing her best to help Nora out in class, making sure she doesn't drool on her notebooks. Giving her a chance to be normal, even with everyone talking behind her back.\"\n\nTrying to ignore the ingratiating girl, Ethan's eyes kept settling on Nora just sitting there in the corner, her arms... tied down? It didn't look precisely out of place, with all the other bracing, but he wondered why anyone would ever do that, until her arm banged on her tabletop twice, somewhat in time with the music, and Ethan could see her whole body convulsed as she did, totally tense and uncoordinated, before settling back down.\n\n'Curious.'\n\nEthan knew Suzie was speaking, and what's more he knew he was staring impolitely, but in between polite nods he couldn't pull his eyes away.\n\nThe girl's face was clear of the acne of her classmates, yet slack-jawed, a twitching smile and roving jaw and tongue leaving it hard to read her expression. Yet Ethan looked from the straps and bars and braces and chair up to her eyes, and while they wandered a bit, they were clear, insecure, searching. She seemed to be alone in the living room, as the group had now been distracted by some guy's dancing. It's almost as if they had reformed their circle away from her, and Ethan suddenly noticed the kitchen, which had been empty when he was searching for a drink, was now loud and a bit crowded. Ethan looked back at Suzie, her baby blues on him as she flashed her most winning smile.\n\n\"You had it soooo lucky before they integrated the classes, Ethan, seriously!\"\n\nHe couldn't believe where their conversation had ended up, distracted as he was, and his stomach sort of twisted, unable to hold back the filter any longer.\n\n\"You know how cruel you're being, don't you?\"\n\nSuzie and the other two girls just froze, their dumb smiles fading fast, and Ethan left the kitchen towards the living room -- or rather took two steps, before turning back to grab the pop and an extra glass from the cupboard.\n\nEthan strode into the living room, some of the high-schoolers giving him a few looks as he approached and crossed the seven degrees of ostracism around Nora's wheelchair. He was not too sure if she had noticed, with her eyes roaming about, her head moving from side to side in the cradle that held it in place, and her open mouth twitching, drool dripping down her chin like Suzie had mentioned so callously. He honestly had no idea what the girl's condition was yet, but from what he could surmise from Vicky and Suzie's complaining, he just had to imagine there was a normal, 18-year-old graduate inside that distorted body.\n\n\"Hey! Glad you could make it.\" Ethan said, trying not to speak down to the literally wheelchair-bound girl, but also trying not to sound like that one receptionist in every soulless company who was contractually obligated to speak to you. He shook himself out of his own head. \"You want a drink? I got some orange soda, there's also cola, and probably some stuff I'd get jail time for mentioning.\" Ethan added with a chuckle.\n\nNora's eyes became clear as day, looking right at him, and the tips of her open mouth tensed up in a clumsy smile.\n\n\n\nChapter 3\n\n\"Nora's situation is complex.\"\n\nThat's what doctors and therapists had told her parents for years, and how they explained her condition to friends and family, ever since Nora was born under just-as-complex circumstances. It was easier to remember than the myriad terms and disclaimers and medical lingo which never quite described her anyways.\n\nEven with the body parts she could assert control over, like her eyes; Nora only had intentional control, like when you think about breathing. When she unfocused, those eyes would wander, pull up or to the left, and her \"lights would go out\" as one conscripted assistant in 7th grade had called it. She remembered how that boy would snap in her face over and over, confident she had lost attention in class, while Nora was listening along to the teacher just fine. That was long before Nora could string together whole phrases for herself, or drive her own chair, so many people thought (and still did): if Nora couldn't control her eyes, or stop her arms swinging out, she surely couldn't make any other decisions for herself, could she?\n\nCompared to the circle of scantily-dressed girls across the room dancing away, or the gang of guys laughing, chugging far from their first beers, Nora was quite new to making her own choices.\n\nNow that she thought of it, tonight may have been the first night she could truly make her own choices, unfiltered by an attendant or her Mom, once her tablet started behaving again. She just needed some help to do so.\n\nAnd so Nora \"turned the lights on\" as Ethan approached, making eye contact with the lanky-but-fit guy with the messy brown hair approaching her. Still her neck wasn't cooperating, pressing her cheek firmly into the left arm of her headrest, so Nora had to look at him out of the corner of her eye and force a flickering half smile onto her mouth, which was agape as always.\n\nNora eyed her screen with the greatest intensity she had ever mustered; she couldn't leave this guy waiting any more than necessary. Luckily, it behaved.\n\nEthan wasn't sure if he should be looking at Nora, or the monitor hanging in front of her, as she obviously struggled to reply. He thought about it again. She didn't seem to be struggling, per se; just focused. The process of using only her eyes to communicate, which was new to Ethan, simply took some time. It was... awkward. Just standing there, holding the drinks, Ethan made sure to smile at Nora periodically so she knew it was fine. He was compelled to fill in the blanks for her, but quickly decided that wouldn't help and waited for the pre-recorded voice of her big mounted tablet computer to answer.\n\nA girl's voice, a bit younger-sounding than Nora looked, spoke up. \"Yes. Thank you so much. Thank you-- Thank-- Soda Pop. Please!\"\n\nNora flicked her eye at the orange bottle in Ethan's hand and back at him, and smiled her crooked smile again. 'Message sent, and received.'\n\nNodding, Ethan set the glass on a nearby end table and poured some bubbly orange soda in. He glanced over to Nora's hands, her wrists tethered to the center of her tabletop with maybe six inches of slack. They were wrapped in something similar to a wrist brace or splint, with fingers tightly curled around a fuzzy fabric palm pad. Her fingers themselves looked slight and smooth from disuse, and the way Nora's arms erratically moved, pulling at the tether or pushing at the plexiglass tabletop lazily but firmly, made Ethan realize she could not hold a drink, or anything.\n\n\"Uhm, can you uh... how do you...?\" he stuttered, as it dawned on Ethan a glass container for Nora's drink was probably the dumbest choice possible.\n\nWithout warning, the smaller body of Ethan's sis butted in between the two. She snatched the glass out of his hand, plopped a straw in, and put it in a cup holder on the far edge of Nora's tabletop with a too-quick smile.\n\n\"There you go, Nora! This is fun, yeah?\" Vicky said, almost like addressing a child, before she turned back at her brother with an expression that mixed anger, embarrassment and a death threat, all in one glare.\n\n\"What the fuck do you think you're doing?\" she breathed just under the blaring music, right up close, trying to overcome the height difference with some awkward f-bombs. \"You said you'd stay in your room!! We had a deal! Suz is fucking crying and now you're trying to drown a...\" she held back the c-word on the tip of her tongue.\n\nEthan took a deep breath before answering frankly. \"Relax. I was just getting a drink. Besides, your friend here seemed kinda on her own so I was making sure she's comfortable.\"\n\nHe could not only see but practically hear Victoria roll her eyes at that. \"You're being super dumb right now. Just get the fuck out. Nora's fine, see? She's having fun.\"\n\nEthan glanced down at Nora behind his sis, whose eyes were darting frantically between them, the glass out of her reach, and her tablet screen. \"Well, maybe we can ask her,\" he said simply, knowing how the little control freak would love that.\n\n\"Nora, right?\" he started. \"I'm Ethan, Vicky's brother. You look pretty solo here, and... uhh...\" Ethan paused. It was clear to him that no one else was going to even acknowledge the poor girl, especially if Vicky was acting like this, so he suggested more than he had ever planned to. \"I'm playing some video games in my room if you wanna watch.\"\n\nNora's eyes flicked between the two siblings standing tall in front of her.\n\nVicky was being really weird all of a sudden. Nora had never seen her classmate as a source of bountiful patience or whatever, but Vicky was acting like she would have in the halls, when Cole or any of the other sporty guys saw the volunteer walking with a disabled girl to their next class. Every time, Vicky would drift off, or get really short with her or quiet. Of course, that jerk had been invited -- and greeted her with such charm -- along with a few others Nora knew Vicky was into, so Nora could only guess that Vicky would probably be acting like this all night!\n\nIt was becoming obvious to Nora her helper was incredibly embarrassed by her bulky chair, and the monotonous voice, and everything else. Far from surprising, it was a time-honored tradition at this point for people Nora considered 'friends', and that just depressed her...\n\nAnd yet Vicky knew her. She wasn't a real caretaker, but she had known Nora needed a straw. Not to drink, of course. Nora couldn't even drink with a straw -- she would definitely choke -- but she was always excited to get a straw full of soda poured on her tongue, just to taste it. It was a perfect treat, and the rest would have to go in her feed line.\n\nOh god, Nora thought, I would have to show him my feed line!\n\nThis was all so complicated, and being given a choice like this, to stay at the party with girls her age, or go off with this cute boy Nora barely knew? Body tensing in stress, part of her wished her Mom was calling the shots again... until Nora recoiled internally at that reflex.\n\nFUCK. NO.\n\nThis was her time to grow up and direct her own life!\n\nNora looked at her Dynavox and, with pre-compose turned off so she could speak quickly, she said, \"That's nice. I would like to. Short break.\"\n\nShe glanced past Vicky to smile at her well-intentioned brother, but the princess just gasped, betrayed, and blew up at him!\n\n\"Stop it, you prick! You're messing with everything!\" Vicky whined at Ethan, before she conspicuously realized she was drawing even more attention to them, and quieted her voice. \"Ugh... fine!\" she drilled her finger into Ethan's chest. \"But if robot girl tells her mom she didn't have a good time, then you're paying for the fucking kegger!\"\n\nNora froze, and even her body's subtle writhing stalled, all tense. She looked up at Vicky, then Ethan. Her mom had paid for the keg? Her mom had... paid Vicky... to invite her? Nora's heart sank, as the fragile fantasy of being just another normal teenager at a normal aftergrad party shattered to bits.\n\nEveryone in the room was either staring or ignoring her.\n\n'No one wants me here.' she thought. 'I should go home... I should call my... I should...'\n\nNora had no idea what to do, she was so hurt, and so indecisive, and so scared, and-- As her hands gripped the braces so hard she thought she would create diamonds, her strapped-down feet pulling, her body resisting her like it always did; Nora couldn't hold her voice back any longer.\n\n\"EEEEaaaaaaaAAAAAH!\" she let out in a squealing cry of despair, tearful and angry at the one person here who she had trusted to care!\n\nChapter 4\n\nEthan was stunned by his sister.\n\nVictoria -- with her finger poking his chest, telling him \"how it is\" -- was being incredibly difficult tonight, dense and shallow too, and Ethan couldn't help but think she seemed to be matching Suzie's casual bitchiness more and more every day. He had no doubt the group of friends she seemed desperate to impress were the center of it all.\n\nHigh school was the fucking worst.\n\nEthan opened his mouth to tell her off before he heard an ear-piercing wail behind him, drawing the attention of every guest in the house. He bit his tongue, as it wasn't dissimilar to a small child throwing a tantrum between sobs, and Nora's face didn't look much prettier than one as she tensed and shook in her braces and bonds, absolutely distraught. The very drama he had wanted to avoid had rapidly escalated and Ethan knew he needed to take control of the situation, however he could.\n\nNora just wanted to yell at Vicky, but her voice -- her real voice -- barely cooperated, so she let herself cry; let herself scream out incoherently and ruin the picture-perfect party Vicky had arranged. Every eye was on Nora shaking and crying in her chair, but for once she didn't care one iota. She couldn't believe her Mom! She couldn't believe Vicky! 'How could they do this!? Without saying anything?! Anything!?'\n\nBut Ethan stepped in close, kneeled down, and locked eyes with Nora, his eyes, his calm assured voice, laissez-faire, who the fuck cares.\n\n\"Nora. Nora! Hey! Listen to me. Let's all calm down now, we're here to have fun, right? You're here, it doesn't matter why. You said you wanted to chill. Let's... cool off and uh... try to enjoy the night, okay? Ignore them. Pizza helps me whenever I'm angry, so maybe we can try that.\"\n\n'Pizza helps me whenever I'm angry? What a line,' he kicked himself. It didn't matter. Ethan's face was more pleading than reassuring, but he tried to correct that.\n\nNora, pissed off, wanted to scream at Ethan, 'I can't even fucking eat pizza!' but she realized within two seconds that alienating the one person on her side, who was talking to her like a real person, wouldn't do any good. Sometimes she was glad to have a permanent filter on. Sometimes.\n\nEthan kept his breathing steady as he looked at her tear-streaked face and she seemed to focus on him in between whole-body sobs. He poured himself into that link they had, talking softly, \"It's okay...\" not daring to touch her, not even thinking about how her agitated squirming shook the chair much stronger than he ever expected, just focusing on her gaze as Nora slowly quieted, and her breathing slowed, and her face relaxed, crying softer now, looking at him between tense glances upward. He kept his eyes on her regardless. He wasn't asking her to forgive, but to ignore.\n\nAll Ethan had wanted was some peace and quiet and now here he was defusing a bomb. Or had he set it off? He sighed. Either way it was of his sister's making, and he had no words; playing with people like this shouldn't even need a lesson, it should have been learned long ago.\n\nI guess this is just what happens at teenage parties.\n\nEthan considered pushing Nora towards his room but within a few seconds he clued in on how that could be misconstrued, both by others and her, so he preferred to allow her to decide, again. \"We can go take a break, like you said, or,\" he added, \"we can call your mom and I can make sure you get home.\"\n\nVicky stormed off, obviously more worried about the pressurized life of the party, even though that was already shot and flat. There was no way Ethan would be paying for their booze, but that was hardly important now.\n\nNora directed her teary eyes to the green \"Yes\" button on her screen. She wanted to go home, entirely overwhelmed with it all, but her eyes didn't track. The cameras were being thrown off by her tears, and she blinked rapidly, panicking, and only making it worse.\n\nSomehow, Ethan recognized this, saw her terror, anger, frustration, and struggle all playing out in the subtle movements she could manage, and hesitantly grabbed the bib from under Nora's drooling mouth, lifted her wire-frame glasses, and dabbed her tear-stricken eyes, before wiping her messy chin and runny nose for good measure.\n\nNora was shocked. Not that being cared for was anything new: it was her whole life. There was no reason this should be significant, when she needed her chin wiped dozens of times a day, with her mouth so restless and unwilling to just close. It was normal-- or since that word was meaningless to her: it was necessary.\n\nBut his touch, that was new.\n\nNora almost couldn't believe herself as she finally typed, \"No. Okay. Let's go. Soda Pop. And. Break.\" but was pleased with herself when Ethan smiled shyly, stood up and grabbed her glass, his, and the plastic bottle too.\n\n\"Come on, I have a game paused I'm sure you'll like seeing me die in,\" he said, urging her to follow.\n\nOnce he was confident the girl could drive herself, Ethan overheard Suzie trying to mend the situation with Vicky in the kitchen as he passed by. \"Aww, your brother's so cute! Taking that load off your ass so you can hang out with us.\"\n\nSimmering, Ethan kept the lead, but idly wondered if that girl was aware of how demeaning her words were, or if she was actually being sincerely clueless. He resisted the urge to glare at Suzie and his sister, not wanting to create more drama, as any worry he had caused this whole disaster simply evaporated. They were still being cruel, insensitive, playing with this poor girl. This had all been an inevitability, Ethan was just the lucky guy to set it all off.\n\nNora heard the girls too, but no snarky comments could be typed up while she focused on driving her chair behind Ethan without running into any furniture or walls. The pair went down the narrow hall, and Nora slowly realized she wasn't heading to a rec room or something, but his room.\n\nNora gulped, or tried, but the drool was already dripping again. She really wanted some of that orange soda...\n\nChapter 5\n\nEthan had to clear some space for Nora's chair to get into his room, having underestimated just how big it was; what with holding a young woman and her computer and all. Luckily there was plenty of open area in the middle -- he was too busy saving for his own place to fill it.\n\nNora drove in carefully, more used to wider ADA doorways, and once her eyes were free, she admired the angular posters of buildings and old maps meticulously scattered around Ethan's room. It was almost as big as hers, though it looked much bigger without the shelves and equipment and hoist lift and all. A haphazardly tidied queen bed took up the grand majority, but somehow it still looked smaller than her twin-size hospital bed. Once she was done gawking, Nora turned in place so she could face Ethan, who closed the door with a thud.",
        "Ethan's head pressed against the wooden barrier between them and the outside, and he took a deep breath. A few seconds later they could both hear the din of conversation resume out there, and the music shortly after that.\n\n\"Sorry about... that,\" he sighed out, rubbing his eyes, trying to destress. \"Sis can be a little ridiculous when boys are involved and... I can't stand her friends. I uh... I'm sorry. You deserve an apology for that mess out there, even if Vicky won't give you one.\"\n\nNora didn't know what to say. After grad and all, getting invited to a party had made it all seem real, like she was a grown-up... or maybe... but the whole night had crashed and burned so fast... faster than a nightmare, spiraling out of control. Due to her own mother's white lie, the whole pretense of her invitation had been a... a sham! She was totally unwanted, and it showed.\n\nAlmost everyone out there had just stared; from her rolling in, throughout the whole incident! Nora had to consider that maybe life at school had gotten comfortable being addressed only by teachers and carers, but now... now it was on full display how her classmates looked at her. Distant. Cold. Annoyed. Nora had been at the party all of half an hour and received nothing but embarrassed glances and insults. They were just so... so... Words failed her.\n\n\"How can I? They. No.\" her Dynavox spouted, disjointedly. Nora paused to just precompose properly, finishing and looking at Ethan as the voice said simply, sorrowful in its lack of emotion, \"How can they not see that I am in here?\"\n\nEthan's gut twisted. Not only was this the first time he had heard Nora speak in complete sentences, taking him a bit off guard, he didn't have an answer for her. Her question really tested the line between his idealism and latent misanthropy, well-developed at college, as he realized just how much his own opinion of the girl in front of him had shifted the moment her words became smoother and sharper to the point.\n\nHe moved to sit on his bed, observing Nora and all her bulky equipment. Her mouth moved on its own, face shifting often enough he couldn't trust it to show how she really felt, her eyes darting hard left and far upwards every so often, even crossing slightly once or twice. Still, Ethan could somehow tell Nora was looking at him, or trying. She was undoubtedly there.\n\n\"You know what?\" he offered, running his hand through his hair, \"It's not so bad. We can have our own party here. With blackjack and... uhhh, with games and soda, of course. I might run outside once we run low on supplies, but you don't have to go anywhere you don't want.\"\n\nNora's gaze flew to her screen, while her jaw kept making this open chewing motion and her arms tensed inward from concentration. Ethan stayed perched on his bed like that, just pondering and waiting, before the voice from Nora's device cut the silence and the tension as if with a razorblade.\n\n\"Yeah. That sounds fun. F-U-C-K them.\"\n\nIt was ridiculous hearing this innocent, flat midwestern girl voice say that; Nora had to admit, but she was proud to catch Ethan unawares, save for a small curvature of a smile forming on her mouth.\n\nHe did a double-take, then burst out laughing, realizing she really was a normal 18-year-old girl in there like he had guessed, sailor's mouth and all. Luckily she was laughing too, in her own way, as the two eased up a bit.\n\n\"Yeah, seriously. You deserve better friends.\" Ethan said summarily, before changing the topic abruptly to keep away from things he couldn't fix.\n\n\"So, we can play some games like I mentioned and keep it chill here, and I can help with... whatever you need,\" he trailed off, looking over at his PC. It might be like playing with Vicky next to him in the old days, watching his every move, disinterested but glued to the screen just like him. He tried to think of something else, but came up blank, hoping it didn't sound too boring.\n\nNora thought that was a fine way to kill the evening, but her thirst was getting to her. She directed her wandering gaze at the glass then the screen, taking her time now to pre-compose. \"I want a taste. Please. Can you use the straw to put soda pop on my tongue? Then we can play.\"\n\nRemembering the glass in his hand, Ethan jumped, \"Oh, of course! Sorry! Okay...let's see...\" He set it on the nightstand next to his bed, close to his guest.\n\nNora directed her seat to tilt backward so it all wouldn't pour out of her mouth immediately, and then watched as the older boy approached timidly with a strawful of sweetness. \"Slow.\" she said with a glance. She didn't have the calm and concentration to muster closing her slack jaw right now, and she wanted to savor this.\n\nEthan, leaning over her, found it so weird to be poking into a girl's open mouth while she was telling him how from a speaker cantilevered behind him, but he did as instructed, leaving her with half a straw of orange soda, on and under her restless tongue, while the fizzing surface in the glass barely dropped. He had definitely over-poured.\n\nNora practically bubbled, shaking in her braces and bonds, enjoying the decadent sweetness. She didn't use her mouth much, usually tasting only minty toothpaste while relying on a g-tube for the rest of the day, so this felt special, as simple as it was. Part of her had really wanted to taste beer tonight, or get a little drunk maybe, but the soda was so sweet Nora pretty much spaced that. She looked up at Ethan leaning over her and almost laughed happily, but kept her vocal chords in check... barely.\n\nLooking at some drool on her lip, Ethan decided to wipe it off again, pulling up her bandana bib and flatly ignoring what was underneath. Redirecting his thoughts away from a disabled high-schooler's perky breasts, Ethan wondered if Nora would need to spit the soda out or not, but then realized it would probably end up on her chin anyways. He changed the subject, walking over to his desk, and Nora turned and repositioned herself near his chair.\n\n\"So, games. I have like... a lot of games here. So we can try something we both like. My library is full of stuff I never played before, I... might have a problem.\" Ethan chuckled, looking back, and reached to adjust Nora's glasses down her nose so she could see his monitor from her reclined position. He felt like he was invading her space every time, but Nora didn't seem to mind.\n\nTruthfully, she was elated! 'Oh my god he just went for it!'\n\nNora had been feeling much too awkward to ask a strange boy to wipe her face or adjust her glasses, as ridiculous as that sounded, but luckily he didn't make her ask! Nora blushed a bit at his touch but thankfully he didn't notice, or let it slide. Life in others' hands made thank-yous almost meaningless if overused, so she kept them for only the most very precious moments, and thinking of how Ethan was creating a safe, comfy space for her, when he so obviously wanted to be alone; Nora felt he deserved one, for doing more than his sister had; for saving her from Vicky, honestly.\n\n\"Thank you.\" she said simply, as all that intentionality dissolved in the flat pre-recorded voice, before adding, \"Replace it with a cloth from my bag behind me next time. Getting damp.\"\n\n\"Oh, uh, sorry!\" Ethan apologized, noting what was effectively a diaper bag hanging off the pushbar behind Nora, but she shook her head clumsily, to imply 'it's okay', making her neck retaliate and push her left cheek into the headrest firmly.\n\nThe glasses, already pushed down, fell all the way off and Ethan replaced them again with those deft hands, so easily, while Nora's own clenched uselessly on her tabletop. Demonstrating exactly why thanks got old fast in her lifestyle, Nora just smiled and let out a little squeal, something inside telling her she didn't need to hide her voice from him, at least not too much...\n\nEthan grinned when he heard that, it was just... infectious. Yet as he sat there, scrolling through titles aimlessly, he wondered if it was right to enjoy, as awkward as it sounded. To Ethan, Nora sounded a bit like a happy baby when she was having fun. And he had seen how she cried. Was it wrong to compare her to a baby? He forcibly scribbled over that thought, burying himself in the list of titles.\n\nAfter reaching an impasse, Ethan finally just restarted the game he had already been playing: it was action-packed and full of greek mythology references, good distracting fluff. He didn't ask if she could play, and Nora was happy to skip the formalities. Without some special tech she had used once at summer camp for kids like her, she couldn't, and that had been some simple up and down game with birds and pipes. Nora eagerly watched Ethan's articulate hands trigger keys and commands right when he wanted to -- timing was everything for survival in this brutal game. Ethan got massacred and she let out a short gasp of a laugh, before eyeing her words, trying to think of things to ask to keep the conversation moving, the two of them both sucked into their screens.\n\n\"Is anyone in your family disabled? You are very handsy. You seem comfortable helping me.\"\n\nEthan coughed at her question. \"Uhm. Handy. Like hand-EE. Not handsy... that uh... means something very different.\" He reddened a bit but hoped she couldn't see that, before focusing on the game. \"Uh...and not really. Although Vicky is a bit braindead at times.\" He added with a grin.\n\nNora hadn't noticed the autocorrect, but something made her refrain from telling him that, instead retorting, \"How dare you. That is not funny.\"\n\nEthan whipped around, but was greeted by the open-mouthed, crooked smile again, and he groaned, turning back. Dead again. \"You're unbelievable! There's no intonation! I thought you were actually offended!\"\n\nNora squealed a bit too loud, wishing she could just giggle like the other girls. \"Who says I am not? Just kidding! Just kidding! Just kidding!\"\n\nEthan dosed his new friend with some more soda and began that same level again, frustrated, but he hid a smile. The two of them got into a groove, as he learned how long it took just to talk with Nora. Luckily he could just focus on his game while she typed with her eyes. It worked for her too, as she didn't feel that ever-present rush to reply, just taking her time, enjoying the fizz and trickle of sweetness.\n\n\"You are right. She is a little brain dead.\" Nora added. \"Did you know? She stole my test answers. Biology class. All semester. I am starting to regret letting her.\"\n\nFists closed tightly out in front of her, Nora was still mad, but it was almost inconsequential as the salve of gossip, and Ethan's \"No way!\" kept her mind off the actual hurt. Watching him fight off minotaurs and gorgons, her face was pressing to the left again, almost bashful, but just another broken reflex. Imagining she was using those big hands on the keys, so quick, so easy, Nora realized he had been right. Minus the pizza, this was kind of the perfect distraction.\n\n\"You are very good. Stick to your game. I will stick to annoying you. We will play to our strengths.\"\n\nEthan laughed a bit at that, before reaching back and swatting Nora's knee playfully below her table. She was wearing soft leggings, and Ethan succumbed to another killing blow, as he noticed her skinny leg was far tighter than he expected.\n\n\"Sorry, did... did you feel that?\" Ethan sipped his glass, waiting for the level to load, and for her response.\n\n\"I am not that kind of paralyzed. I feel everything down there.\"\n\nEthan almost choked on his drink, his mind going straight to the gutter. Nora's did too upon hearing the voice playback, even if she hadn't intended it that way, and she refrained from telling him about the charley horse that was rearing its head, searing her thigh for the nth time today. A part of her imagined him using those dexterous hands to unclip her table and massage her, like that cute physical therapist did twice a week... far far too infrequently. Nora's legs squeezed hard on the foam bolster keeping them aligned. She winced from the cramp and almost asked...\n\nBut Ethan was back in his game by the time Nora was done daydreaming.\n\nNora delved back into her communication menus, piecing together something to say next. If nothing else, this was solid conversation exercise for a girl who hadn't been able to say more than 'yes' and 'no' with her eyes a few years back. Her speech therapist would be over the moon, especially once she mentioned it was a boy.\n\n\"You have a nice bedroom. But living at home. Isn't this a long way to travel for college?\"\n\nEthan sighed, having enjoyed not thinking about his failures for two moments, but he collected himself. It wasn't her fault, she couldn't have known it was a sore topic. \"Nah, I was at UW in Seattle for a few semesters, and... it didn't pan out. My family doesn't have much saved up and I didn't want to waste it there. It was fun while it lasted.\"\n\nTurned to stone again by a glance in the wrong direction, Ethan tried to relax and just found himself pissed at the pop music pouring in from the door.\n\nNora knew she had hit a nerve, so tried to divert, but this still left a minute-long chasm of open air, regardless. \"Yes I understand. My family is very in debt because of my cerebral palsy. I have been accepted to schools because of scholarships only. Cash in on this S-H-I-T, baby!\"\n\nNora winced a bit at the cold read of \"baby\" compared to what she had in mind, the lyricism just gone, but luckily Ethan laughed... and it wasn't pandering, like most people.\n\nSick of his game, Ethan whipped his chair around and dropped some more soda in Nora's mouth. \"I mean, take what you can get, right? But... I have to ask... why can't you just say 'shit', or 'fuck'? I've heard you try and it keeps spelling it out.\"\n\nNora sighed throatily and began composing. \"Parental controls. I just graduated and Mom still thinks I will use profanity at wrong time. Or I should never. I do not know. I have yes and no. Eyes up and down. I can yell for help. Usually. Everything else must be asked so I can confirm. I only received this communication tool three years ago. They forget I have been listening and watching for eighteen.\" She added a deep moan, \"Unnnnnggghh!\" to show just how frustrated she was.\n\nEthan couldn't imagine being trapped inside a writhing body with only 'yes', 'no', and a few other simplistic codes at most, but he also couldn't just say 'sorry', or 'wow, that sucks'. After apologizing once for his sister, seeing how it fell so flat and led to nothing but a cynical dead-end, it felt so inadequate for the shitty hand that Nora had been dealt; a drop in the bucket. Sympathy wouldn't change a thing.\n\n\"You know... I'm pretty good with computers, maybe I could unlock you?\"\n\nNora's excited smile was loud enough for Ethan to hear: 'Fuck yeah.'\n\nChapter 6\n\nWhile Ethan was hunched over his keyboard, poring through Dynavox manuals, trying to block out the sound of some glass breaking in the kitchen, Nora was slowly turning her chair in place, looking around, admiring the room. Without siblings, Nora had never been in the room of someone else her age, and she couldn't help notice how many knick-knacks and souvenirs and things were all around. Back at home, Nora had posters and a flowery pink paint job she had loved as a kid, but hardly any things. She admired some of his trophies, a set of tiny magnets formed into the Eiffel Tower, a baseball in a clear plastic cube. Nora imagined Ethan putting every single one in place himself, by hand, and herself whistling the way people in movies did when they were impressed.\n\n\"How do you have so much stuff?\" her speaker asked.\n\nEthan shrugged simply as he skimmed a support forum thread. \"I don't know. Things just come into your life and you hold on before the next trash day comes...\"\n\nShe frowned inside at that, looking down at her arms extended straight out in front of her, padded fists pressing into the tabletop.\n\nEthan clued into his careless phrasing one second too late, and tried to change the subject. \"Most of this needs to be boxed up anyways when I move. Here, can I take a peek at your machine?\"\n\nNora maneuvered closer and Ethan went hunting for a cable before he plugged his computer in one end and the tablet in the other and--\n\nThe screen went black. After a moment of disbelief, Nora panicked, \"eeeeeeaaa!!\" shaking in her chair, her link to the world around her broken! If he damaged--\n\nThe tablet screen lit up again, this time her words and phrases were all gone, replaced with what looked like some 3D space with buildings and people and...\n\n'What is this?' she thought, looking at Ethan, whose face had gone pale white.\n\nHis gut fell out on him. This was his urban neighborhood project, on Nora's screen!! A sudden, panicked shame erupted as he apologized and scrambled and skimmed more of the docs and then finally just pulled the cable out, making both their computers go black before returning to normal.\n\n\"What was that?\" Nora asked once her eyegaze tracker behaved again.\n\n\"It was nothing, a project for school, before I was-- Your screen acted like a second monitor, I'm sorry I--\"\n\n\"No. I mean your reaction.\" The flat midwestern voice seemed almost accusatory but her limited expression was anything but.\n\nEthan couldn't explain it, why he had become so insanely defensive and erratic. Part of it had been fear he had broken Nora's tablet, her voice, her control to the chair, her connection to the outside world and to him, here. But now that he knew that wasn't the case, another part was this intense worry... worry his design wasn't good enough, that he would never get back into school, that he would never escape this little town in the Cascades, worry that he--\n\n\"Can I see it again?\" Nora's voice cut through his spiraling.\n\nHe shook his head and Nora tried her real voice, \"Aaaahhhhh!\" something like 'Come on!'\n\nIt seemed to work on him, softening his resolve, even though Nora knew she was anything but smooth. Still, he gradually came around, and closed the dumb game (she had been too polite to say) to reveal a more sparse scene of buildings in white wireframe on his monitor.\n\n\"Wait, let me turn on the feature layers...\" he muttered, and sure enough, trees filled in the sidewalks and then glass in the storefronts and trash cans and electric scooters and people walking made the street come alive, the colors painting in, cars driving and stopping.\n\nNora's jaw would have dropped if it wasn't already hanging open. She looked back at her screen to speak, flicking her eyes around so deftly, Ethan could almost see the words pouring out of her, still like honey dripping much too slow. Finished, her eyes met his and she beamed. \"You made this!? I didn't know it could look so real!\"\n\n\"Well it's mostly the software...\" Ethan started but Nora just moaned \"UH!!\" curtly at him, unamused by his humble deflection, peeking again. She was enamored, and Ethan found his timid clicking turn into the careful pans and orbits of a digital tour guide, showing the girl in her chair all the features and design elements, like how he had the plaza arranged to allow the sun to filter into some building but not others; how the residents all lived above shops; how the bike lanes were protected by the parked cars like he had seen in a photo of Denmark.\n\nHe pulled all these random references up for Nora, showing her his rationale even though she knew nothing about design, and yet the girl's attention was rapt, as her fists tightened, her knees squeezing the bolster. It was all so impressive, and a small but unignorable part of her was actually jealous of Ethan and his able body. He could study all this so easily, not just the tools but the research too, without spending time on care or bowel programs or physical therapy or speech programming, all the myriad of complexities she had to consider before even getting to homework, never mind something Nora even wanted to study. Nora had no idea what she wanted to major in, but it sure as hell wasn't going to be \"disability studies\" as one advisor had mentioned. She had more than enough of that on the daily.",
        "Still, that feeling passed quickly, as he kept them moving along.\n\n\"You added ramps to the sidewalks and stores.\" Nora said simply.\n\n\"Well... yeah. Anything new these days should be accessible, shouldn't it? I think it's a law.\"\n\nNora didn't know for certain, but the fact he had still considered people like her in his community design brought a certain flutter to Nora's tummy.\n\n\"I mean it's the 21st century, you shouldn't have to ask for a ramp, right? You deserve better. Formaggio's on Main Street doesn't have one,\" he pointed his thumb at the half-eaten pizza, cold by now. \"I gave a guy a push up the steps like... a month or two ago?\"\n\nIt took Nora a second to reply, but Ethan had grown used to taking a breath so he didn't interrupt her. \"As good as that place smells. A ramp will not help me. See. I am a very tough customer. Pizza parlors do not like it when your Mom brings in a blender.\"\n\nNora made her best attempt at the sound of a roaring motor spelling a pizza's demise as the speaker recited its lines, and Ethan let himself chuckle, starting to get her brand of humor. \"Yeah, letting pizza be my big pitch was pretty dumb, sorry.\"\n\nAlmost on cue her open mouth drooled a bit more down her chin and he gave her a wipe, unable to ignore the blushing smile and batting eyes she lent him when he did. Ethan knew this kind of casual care must be banal for her, but it still felt oddly intimate for him, and what's strange was... she seemed to know it?\n\nHe looked back at his screen once another dose of orange crush was being savored.\n\n\"You know, honestly, this could be far more accessible. I could put bump stripping leading to the bus stop for the blind, and the sidewalk could be wider, and you know you could just have every business' front door be motion activated, and...\"\n\nNora just watched the boy in front of her as he gestured at his screen with a passion and consideration she wouldn't have expected from \"Vicky's dropout brother,\" as she had known Ethan before tonight. He went on and on, extrapolating different points of issue for people of all abilities, it was like a floodgate had been opened, but Nora couldn't help thinking he was being so serious: like just cause she was here, he had to accommodate every disability ever.\n\nWell-meaning as his intentions were, Nora rolled her eyes and began cooking up her own 'suggestions' while he spitballed, as she had just a few pet peeves built up over the years... like how his apartments needed narrower halls and smaller bathrooms, big clawfoot tubs, and shaggy carpets; and she even gave him some notes about moving outside in a big chair, making sure the sidewalks and park paths were all brick -- all different kinds, if possible! The more her body shook, the better, like a workout! She didn't need to mention the massive pothole her Mom had hit outside. \"...more of those, please!\"\n\nEthan got the joke immediately but sat through the whole spiel, shaking his head with a grin while Nora squealed over top of her own words, wishing they had a bit more tongue-in-cheek. \"You think you're sooo funny,\" he smirked at her.\n\n\"Aaaaahhhhhh\" she looked up to confirm, 'you bet your ass', tongue flexing out and back, firmly not in cheek.\n\n\"Okay, but opposite day aside, this is what I'm talking about! I never would have thought of the bricks. Maybe I should get more of your thoughts sometime, based on your... uhm... experience. I mean... this whole model is just a dumb idea to get back into school, or maybe an internship in the city, but we could sort of collaborate on this... if you want.\"\n\nEthan looked back at Nora, having not at all expected the evening to go down this rabbit hole, and found her far more lit up and invested than he imagined, even if she couldn't express that excitement physically, beyond some agitated squirming in her chair, her balled fists pawing at the table unsteadily.\n\n\"I would like that.\" she typed, and he nodded, smiling at her.\n\n\"Yeah... me too.\"\n\nThe two of them held eyes for a second too long, both kind of understanding what the other was thinking, almost. Ethan knew he was muting her with his stare but he couldn't imagine any words to fill the space, any that would match this feeling of acceptance and relief after he had been so wound up about the whole thing. Her excitement, and the chance to explain his ideas without pressure, had just dissolved a huge block he didn't even know he had.\n\nNora finally broke off, to say, \"Did you forget about something? A-S-S-H-O-L-E?\"\n\nHe had indeed, by about the fourth letter being spelled out to him by the steady, pre-recorded voice, he knew exactly what he had to do.\n\nConnecting their computers via a different port -- one which wouldn't give them both a heart attack this time -- Ethan opened a Dynavox configuration tool, and found himself faced with a lock screen. He looked at Nora, disappointed with the roadblock. \"I think the princess is in another castle. If there's a passcode I can't change any--\"\n\n\"1. 2. 3. 4.\" Nora's computer spouted as her eyes ticked each button.\n\n\"What?\" Ethan looked at her incredulously.\n\n\"1234,\" she repeated alongside, \"Uhhhhah!\"\n\nSure, the passcode worked on his first try, but Ethan found himself scrolling through language menus and permissions toggles with his eyes glazed over. He couldn't hold his tongue.\n\n\"Your mom put the password as 1234... right in front of you.\" It wasn't really a question, more a realization.\n\nIt took a moment, but he dared not turn his chair before the voice spoke, \"Yes. What is the matter? It looks like it worked. Did it not work?\"\n\nEthan flipped a toggle or two and saved the config with the same filename so no one would notice a change. \"Yeah it worked, but don't you think it's kinda fucked?\" He swiveled his chair to look at Nora and her brow was twitching, furrowing unsteadily as her eyes held steady on him, obviously prodding him to continue. \"You're... pretty much an adult in there, and you still have parental guides in place and... you know the password, your 'rents didn't even come up with something hard to guess, they just relied on you not being able to push a button or touch a screen to... free yourself.\"\n\nNora glanced at her screen, ready to hop to her Mom's defense, but she hovered over the \"No\" button long enough there were like a dozen denials entered into the composition box. She cleared everything and began a new sentence, hitting the Question folder and selecting \"Why\", before the autocomplete \"is\" and back to the home screen \"that\". Here Nora savored the feeling of creating a new word shortcut and typing out \"F-U-C-K\" and looking at the save button only for it to... save! No warning popup!\n\nThe cursor wobbled and wandered as Nora speedily flipped until she was on her last page of buttons, words, symbols, meanings, unreachable syllables... \"fuck,\" past tense, \"fucked.\"\n\n\"Why is that fucked?\" Nora heard her tablet finally say the word properly, not just spelling out the unpermitted words this time, but letting them ring from her voice!\n\nDistracted by the feeling of shedding a few more tethers, Nora quickly added a few more swear buttons and started riffing with her eyes, as pumped as the first day she got her tablet, turning off pre-compose, inundating Ethan with, \"Fuck. Shit. Titties. Bullshit. Asshole...\"\n\nEthan couldn't help but be swept up by Nora's absolute beaming and squealing at him once she heard the young girl's voice finally recite a half-decent impression of Carlin's seven dirty words, and he let the password issue slide. Nora's evening had been hard enough already, and Ethan simply swallowed his concern; she needed a win.\n\n\"Oh shit, what have I unleashed here?\" he teased, to which Nora replied with another stream of insults and cusses in glee.\n\nHe gave her some more soda while her eyes were busy.\n\n\"Thank you for my graduation present. Ethan. You are a fuck-ing amazing friend for doing this.\" Nora smiled so hard at him her eyes almost squinted shut.\n\n\"Of course, Nora. You're a really special girl... I mean... if there is anything else I can unlock, these hands are here.\" he winced at his wording and let a smile suffice as Nora typed back.\n\n\"I told you! You are handsy, asshole!\" she laughed, tensing completely and squealing.\n\nIt was only when Nora didn't untense that Ethan let his smile fall; and when her eyes rolled up to the left he reached out to shake her shoulder; and when her jaw opened so wide it cracked, he felt for if she was still breathing; and when her face pressed hard to the left he tried to make eye contact again, calling her name; and when her wrist tethers were taught enough to strum he ran to the door to get Vicky; and when he touched the doorknob he heard behind him, \"Don't leave me.\"\n\nChapter 7\n\nEthan spun round to find Nora still in the midst of... a seizure? Her whole body was tense -- tenser than usual -- but her eyes, while unsteady, were trained on him. He left the door to fend off the blaring music and dashed back toward Nora just as her chair started to rattle, her knee bouncing, her body beginning to spasm and far more aggravated than before, grunts escaping her throat. What the hell was going on?!\n\n\"Nora!? Nora!! What is it, what should I do?\"\n\nNora's entire body tensed, even her lungs refusing to let her breathe for a terrifying moment, before devolving into a tremor, and then a squirming, and then the large movements began. Her hands hit the tabletop and her body bucked forward, shoulders digging into the bars keeping her pinned to her seat, her head tipping forward to hang and lose all the sweet orange buildup into the waiting bib, before her neck fired it back into the headrest, with a moan of pain.\n\nAll she could think was, 'of all times, why now??'\n\nHer body seemed intent on escaping the braces and tethers and security of her chair, all without any input from her, the passenger inside.\n\nShe was about to eye her tablet and tell him what was happening, but just as Nora realized the tracking wasn't following her restless shaking, Ethan grabbed her head and held it firm to the headrest as her body shook and arched, one hand on her forehead above her glasses, while his other hand held one of her arms down so it wouldn't block the sensors. She was way stronger than he would have imagined her to be, his agitated breath near her ear.\n\n\"Hey, shhh, it's okay. What's going on?\" he asked, obviously terrified, \"Should I go get Victoria?\"\n\nNo!! Nora looked downward hard before realizing he couldn't see her signal. That's the last thing she needed! Sure, Vicky knew the basics of her care from school, but this had only happened once with her there, and the reluctant caregiver had frozen completely; a contrast to the firm, decisive hands holding her restless body now.\n\nNora tried her best to focus on the screen as her eyes glanced up-left intermittently, her arms pulling hard at their tethers, each fist wishing it were curled against her chest painfully, wrists rolling against their immobilizing braces; Nora's ankle orthotics suddenly tightened in her shoes as even her feet tried to twist. Her body bucked forward and back over and over as if someone was giving her the Heimlich -- and it didn't feel much better -- but luckily her shoulder bars and Ethan's hands kept her mostly in place. Still-- repetitive, intense movements kept Nora from even breathing easily, her tongue thick in the back of her mouth, and typing was slow.\n\nEthan felt so far out of his depth, afraid this cute girl was about to die in his room.\n\n\"I am fine. Wait. Hold me.\" she finally made out, opting for quick and short. And he did as instructed, aghast that the girl violently convulsing in front of him could call this 'fine'. And Nora would have admitted -- if words were less precious -- that she was in severe pain, but this was far from her first dystonic episode and if she didn't want probes in her brain to quell the fits like the specialist had recommended, then she just had to wait for these storms to die down.\n\nYet as much as she hoped this might be fleeting, it just wouldn't die down! Nora was already burning from pretty much every muscle, rubbed raw by her restraints affixed for this very reason, and as embarrassed as she was of exposing her... 'workings' to Ethan, she needed to do something more than wait it out.\n\nEthan held on from behind the chair as the girl inside flexed and bucked, her slim body moving in a way he didn't want to think about right now, all the while acting like this was... normal? Luckily she began typing again, and he watched Nora page through screens and scan for what she wanted to say, in between full body spasms, until she reached a page called 'Emergency', and selected something called 'Dystonia.'\n\n\"My name is Nora. I am okay. This is not a seizure, it is a storm of uncontrollable movement overriding what I want to do. I am still conscious while this happens. I need some water, and a pill, but it is kind of complicated. Are you able to help? Please press 'Continue.'\"\n\nMustering something akin to confidence, Ethan told her he was... and with a tap, the instructions poured out of the tablet's speakers in sections. He let go, and anxiously left her to spasm helplessly while the script autoplayed in front of her.\n\nHe set to work. There was a pouch on a hook behind her shaking chair, almost like a plastic IV bag, ending in a thin tube which Ethan followed to a little plastic pump before the tube snaked around the seat and under Nora's shirt. The thought of a tube entering his body did not feel... comfortable, but Ethan tried his best not to think about it.\n\nTaking a small bottle of water from her hanging care kit, Ethan hastily dumped it in the feed bag before sorting through more pill bottles than he had ever seen for the one the instructions called for. He held Nora's head steady again so she could confirm with a glance to the up-right, away from her reflexes, that it was correct. He smashed two pills on his desk with the butt end of the bottle and brushed the powdery bits into the bag, before shaking a bit to dissolve it faster, finally hitting a green button on the tiny pump.\n\nNora just had to wait -- that's all she could ever really do -- and hope her Mom's prepared instructions were clear enough, before Ethan returned and held her tight into her seat again, his strong hands resisting her body's best fight. \"It's done, it's... going in.\"\n\nSure enough, the water started moving along the feed line, up Nora's shirt and into the g-tube port on her belly. It wasn't audible but she felt the familiar coolness enter her tummy.\n\n\"Thanks for poisoning me. You are the best!\" she typed while her neck pulled and tensed. She held whatever poker face she could manage for juuuust a second, but inevitably a squeal and a big prankster smile cracked through!\n\n\"Oh my god, you're terrible!\" he balked, heart beating like crazy, \"Now, of all times to make a joke! Can't make it easy on me, can you?\"\n\nAmid the squirming and rattling and the pain and anxiety, the two couldn't help but laugh in their distinctly different ways, and Ethan relaxed somewhat, fear turning to embarrassment as he realized how close the two of them were, and how much she still needed him there.\n\n\"What? Am I not easy enough?\" Nora typed with another messy smile between spasms, adding a loud \"Ahhhhh-eeee\" at the end.\n\nHad she just said what he thought she said?\n\nGlowing red, he admired Nora closely as he held her from behind; her cute nose and freckles, her surprisingly straight teeth, and the sharp hazel eyes trying to look back at him, even when her neck had other ideas.\n\nWhen Ethan first saw Nora, it had been impossible to tell what the girl inside felt when she had barely any control of her body, her expressions, her body language; and the lack of tone to her 'voice' didn't help either. But between her over-the-top displays of emotion bursting through her shell, her ridiculous humor, and a certain... intuition, Ethan was starting to read past the broken fa\u00e7ade, to understand who Nora really was, and he had this feeling her innuendos -- her 'mistakes' -- were something more. Yet it gnawed at him that he couldn't be sure, because if he was wrong... he didn't want to be wrong.\n\nJust as the most violent motions were starting to subside, a quiet \"guhhhhh\" interrupted Ethan's reverie, and he followed Nora's eyeline down to her chest, the bib in disarray, her shirt all stretched and twisted from the convulsions; her green v-neck revealing one cup of a lace bralette, threatening to reveal more. He didn't have to hear the tablet's \"Please\" or see the blush on her cheek before he readjusted her shirt, her back arching conveniently, and then pulled the bib down to cover most of her exposed skin and cleavage.\n\nNora was self-conscious, but only because she didn't usually wear something so... the words 'impractical' and 'age-appropriate' competed in her head. To be honest, she was more likely to have a sweatshirt on at home or school, like the one she had received from the university as part of their welcome package, which was already on its way to threadbare with how often she asked for it when being dressed. No; she didn't usually wear something that highlighted her chest so much, or something that had a risk of exposing even more when her body was bouncing up and down in a rare storm; or when her arms were outstretched and pushing together; the list goes on...\n\nBut what had changed in the last year of school, her senior year with Vicky as her assistant, is how she saw boys sneaking looks at the long-legged, stylish, vapid girl by her side, and how much Nora realized she wanted to be seen that way too, even if it was awkward and fleeting, maybe unrealistic. Not as a curiosity, like most saw her, but as a young woman with goals and a life and desires and significant roadblocks, that's all.\n\nDesire and courage were two different things though, and there was her Mom to deal with too, who bought all her clothes and had to be convinced that even this simple outfit wasn't 'impractical.' But using that word put her down, made Nora feel like maybe she was a lost cause, like: 'Life with CP is hard enough, why complicate matters?' It had been her Dad who stepped in and said something to her Mom that saved her, she didn't know what.\n\nAll that effort for a form-fitting v-neck with long sleeves; the lace bralette was a whole other story -- with definitely no rescue from Dad.\n\nBut to her surprise, the battle hadn't been pointless! She was sure she caught Ethan looking before he fixed her bib. She was sure of it!\n\nNora had spent her whole life watching people from her fixed perspective; looking up from her chair, or a bed, seeing their emotions pass across their faces effortlessly, transparently, when they thought no one was looking. Nurses and caretakers were the worst, especially back before she had a voice when they took her intelligence at face value; while Nora was stuck behind a mask that had its own ideas, they had zero filter. It was easy to pick up.\n\nAnd honestly, once she noticed him that way, Ethan wasn't any less obvious than those jocks watching his sister; his eyes wandered across Nora's body at every chance they got, no matter how much he tried to recover.\n\n'Too late, caught you,' Nora couldn't help but giggle inside.\n\nIt was clear, Ethan was undoubtedly affected by watching her move -- even if little of it was 'her', per se -- and yet he was still a perfect gentleman who squared her up; straightening her glasses again and more importantly pulling up her neckline and relaying her bib -- more modestly than she wanted, but far better than it was.\n\nBut now that the anticonvulsant meds were working and she was quieting down into that same-old, slow, athetoid twist in her chair, and now that the fire in her muscles was cooling to a dull ache she would surely feel in the morning, his hands were still holding her, and she could appreciate how close he was, undistracted by life inside a jackhammer. His touch was so much firmer and more real than her parents or caretakers' perfunctory duties throughout the day. He really held her, carefully but honestly. Nora wanted to touch him back, hold him tighter in return, but that had never been in the cards for her...",
        "Or was it? Her eyes glanced to the screen, reviving a bit of that confidence she thought she left on the front porch.\n\n\"You have saved me twice now.\" the speakers recited, flatly.\n\n\"What do you mean? You said you were fine!\" Ethan poked her, making light of it but obviously bitingly sarcastic. He realized her fit was mostly over and loosened his hold. Not wanting to come off inconvenienced like some jerk, he added awkwardly, \"Really, it was nothing.\"\n\nNora typed furiously. It wasn't nothing to her.\n\n\"No. You had a party-ending disaster and took care of it. Actually. Twice. And. You saw my feed line and wiped my spit. How the hell are you not afraid of me yet?\"\n\nHe balked and stood up, zipping up her care kit, hanging it from her handlebars, and retreated to his bedside, to which she followed the few feet.\n\n\"Afraid of you?! Nora, I was afraid for you! I thought...\" he let out a sigh, \"I thought you might die, or at least need an ambulance! How often do you have to go through all that?\"\n\nHe waited, wishing he could still peek at her screen, but it felt better to sit across, in front. Watching Nora compose her thoughts over her shoulder had felt... intimate in some way, and he didn't think he deserved to cross that line. Nora's tight hands touched together in the middle of her tabletop, and he caught her eyeing him eyeing her, before darting back to her screen. Ethan could tell she didn't like how long it took, getting anxious, but he was patient, grabbing his drink and giving her some too.\n\n\"More when I was a child. Now it is like one or two times a month. So. Lucky you I guess. People do die from it. But. Only if I were left alone for a long time. Breathing is hard. Muscles burn. It is like running a marathon. Or so they tell me.\" Nora added a big smile when the voice got to that last quip, but Ethan's face was far from amused.\n\nHe honestly couldn't imagine his body not only refusing his commands, but also liable to go into such a frenzy at any time. \"That's awful. Is there a cure?\"\n\nNora looked up before typing so he got the gist before the details, but those came quicker this time. \"Sure. Deep brain stimulation.\"\n\nEthan almost did a spit-take of his soda. \"That sounds a bit... invasive, doesn't it?! Why am I picturing a deep tissue massage with your head cut open? Like 'Oh Doc, I've been real tense, give it your all!'\"\n\nNora's whole body shook and spasmed with a laugh that squealed out of her open mouth, before she had her eyes back on the screen building her reply. \"It is not much better than that. I heard the word PROBE and said. No. Way. If it happened to me more often then okay. Maybe. But no. Medication works fine. I just cannot be left alone.\"\n\n\"Wait, so you're never alone?\" he had to ask.\n\n\"No. I love the gap between Mom's van and the school front door. I drive myself in and wait for Vicky to arrive. All by myself. It is great. But now school is over. I am always within eyesight of someone. Morning to night. Then the health monitors take over.\" Nora stopped there, not wanting to tell Ethan how her Mom or Dad had to come in every few hours to turn her in bed.\n\nWhat was said was enough. Ethan's eyebrows raised at the now-obvious consequences of Nora's disability. Somehow he fully understood that Nora needed help with virtually everything, but he hadn't fully grasped the fact that she required someone, nearby 24/7, having zero alone time, no sacred space to escape to whenever she wanted to. He grew a little more thankful then for his room, even if it was under his parents' roof.\n\nEthan didn't know what to say. \"Well, I hope you can be yourself here, like you're alone... or something, I don't know.\" he ruffled his messy curls and tried again. \"Consider this room a private space. It's off-grid, no trackers or health monitors or anything.\"\n\nNora smiled silently, thinking of the phone under her leggings, or the GPS in her Dynavox. Still, if she just... tuned it out -- the devices, the tickle of medicated liquid slipping into her, the ache of her braces trying to correct her in every which way -- Nora realized she was alone... with him. She was miles away from a safety net, a girl alone in a cute boy's room, and anything could happen...\n\n\"I just hope you're still having a good time, considering.\" He gestured to the room with its two occupants alone, muddled pop music hammering on the door, and the obvious traumatic event now behind them.\n\n\"Oh my god. Shut up. Asshole.\" Nora typed at his ham-fisted goodwill, interrupting her fantasy. Maybe she was overstepping, but he needed to talk to her as honestly as he touched her. \"I am having a good time. Yes. Thanks to you. No one from school would have helped. I would be alone with that shit tee music all night. If I had a dystonic storm out there with those idiot plural. I could have hurt myself. Badly. I have done it before. That is why I am all tied down. Instead I am in here with you. Our private space. And. Good time. Is an understatement.\"\n\nNora reread her thoughts. It was crude and honest, too honest, but she eyed the \"Speak\" button anyways and looked at Ethan as seriously as she could. Of course her face continued to move and so did her tongue. She made some throaty \"UH\"s where she wanted emphasis, but mostly let the words speak for themselves. Most of all she just focused on his face as each word was recited.\n\nEthan suffered the sharp end of Nora's unlocked tongue, blinking dumbly at the sudden change of tone, when he had sat there for like five minutes expecting a very different response. It was softened only by Nora grunting and rolling her eyes dramatically, but she was right. He had helped her, because... he had to admit he found Nora attractive, whether it was in spite of her tied-down, uncooperative body or because of it; he didn't know. He had to start treating her normally, that's all she wanted...\n\nThe flat voice interrupted his inner debate, \"What is up? Remember I am the one who cannot talk. Right?\"\n\nEthan glanced up at Nora's eyes sparkling with her wit locked up inside, before they pulled up-left and her arms shook, spasming straight out. 'Perfect timing,' she thought, but luckily it only lasted a moment, and then her braced right fist wasn't hitting the hard plexi but instead his open palm; warm, soft. Nora looked at Ethan, confused.\n\n\"I was trying to think of what we were doing before you seized up,\" he white-lied with a smirk, looking at her, his heart beating a mile a minute. \"I offered to unlock anything else, but I guess I didn't just mean your voice. I can... help you with other things, if you want.\"\n\nNora's lashes fluttered, her back pasted to the chair seat. Was he asking what she thought he was?\n\n\"I mean... have you ever held a guy's hand? You yourself said I'm handsy, you must agree I know how it's done.\"\n\nShe melted in her seat, looking down at the useless fist, curled tight. Yet she felt his palm on her fingers. Her arm shook even as she begged it not to move an inch.\n\n\"I do not know if I can.\" she said eventually. The tone was flat but her words held all her uncertainty and desire, bare, heart on her sleeve.\n\nHe smiled gently. \"Let's give it a try.\"\n\nChapter 8\n\nNora's cheeks turned a rosy shade. Was she feeling flush from the storm, or was it by being taken care of by this boy, so ready to jump to her aid, and now ready for... more? It was hard to tell, but Nora's mind was flying a mile a minute as Ethan confidently began tearing the velcro from her right wrist. It was necessary to get at the brace's own fasteners underneath, sure, but... he didn't know how her body worked, the ways it pushed away every person she wanted to get close to...\n\nHe was going to get himself hurt!\n\nEyes wide, darting between him, her arm, and the screen -- she wanted to type but he was so fast! -- Nora moaned a warning, \"Ughhh!\" and tried to calm her muscles, but thinking about them only agitated her arms more, an endless cycle like resisting pins and needles when you've been in your chair all day.\n\n\"It's okay. Just tell me if I hurt you, or something, alright?\"\n\n'It's not okay!' Nora panicked, which only made her body more tense, and right when the velcro tore, her fist went flying up, missing his face by just an inch or two, waving around unsteadily in the air, outstretched.\n\n\"Woah!!!\" Ethan dodged. \"You nearly got me there!\"\n\nHe grabbed her thin forearm and brought it down again, not without effort, so Nora now had a moment to type things out. \"I am sorry. I am dangerous.\"\n\nEthan chuckled, before realizing what she really meant. It wasn't a playful threat; it was a solemn admission of guilt, built up over years of untold accidents she could only watch her body cause.\n\n\"Hey,\" Ethan rubbed her shoulder gently, \"I'm fine. You didn't hurt me. I'll go a bit slower now that I know you're coming out swinging.\" He smiled simply, not making fun, just trying to keep the mood light.\n\nNora flicked her eyes up for 'okay, I guess,' and watched as the boy unfastened more velcro and unwrapped the brace from her wrist, pulling the plushy ball end out of her clinging grip, causing her fist to collapse and dig her short nails into her palm. It wasn't too bad, her mom had trimmed them just a few days back, and she made a throaty sigh: slipping her braces off put the relief of going braless to shame.\n\nThe exposed skin revealed some inoffensive fragrance and maybe a hint of sweat, and Ethan's hand tentatively wrapped around the girl's small, balled-up fist; admiring the slim fingers all pressed together and smoothly curved at the joints, the knuckles like unimposing foothills, the odd bend of her wrist almost asking for the brace's guidance again. He found it oddly feminine, so delicate, with skin lacking most wrinkles or patterns; soft from a life of complete disuse.\n\nNora felt his warmth around her clenched fist, tracing her, every touch laced with curiosity about the differences between them as his dexterous hand swallowed her little club-end whole. She felt everything, every stroke and graze and grip. From internment in the braces with guided outings in therapy to sudden contact; it was all so very new! Then he went for more.\n\nHe began to pry her fingers open, which wasn't too tough itself, but spreading them apart elicited a pained grunt from Nora, \"Agh-uhhhh!!\"\n\nHe stopped, her speech saying all it had to.\n\nThe two of them wouldn't be interlocking fingers, it was plain to see. Her eyes almost begged him to try again, knowing full well it wouldn't work. Her physical therapy routine didn't include that in their stretches, and why would it? Nora was wholly discouraged, wondering if she could work on it; wondering if she would ever get a chance like this again, but Ethan blew her silent doubt away like it was nothing. He simply slipped his fingers into her palm and let her spasticity hold down gently but persistently, as it had her whole life.\n\nNora hadn't known what to expect, but feeling him instead of a palm protector, imagining she was consciously holding him instead of a glorified stress ball was... incredible! With the pressure of his other hand fighting her unsteady arm, keeping it at bay -- without pushing down too hard either -- Nora felt so safe right then, wishing she always had him holding her down instead of hard plastic and tethers. She thought about moving her arm and it simply shook in his grasp, but the intended side-effect worked! Her hand reflexively gripped him tighter -- slightly, she wasn't as strong as she thought she was -- and after trying to smile a few times she simply squealed and looked his way so he would get it.\n\n\"So you've really never done this before?\" Ethan asked. It hadn't really been too hard, all in all.\n\nNora looked into his dark eyes, casual and unaffected but focused on her, so close; Nora's darting around once in a while when she would lose control, then right back. With great reluctance she glanced at the screen. \"If I say yes. Just in therapy. Therapist guiding my hand with a utensil. Practicing. Pointless. Or when young. With Play-Doh\u2122 or finger paint. It is not the same as.\" Nora couldn't find the final words -- in her head, not on the screen -- and the sentence timed out and auto-played.\n\n\"As what?\"\n\n\"This feeling.\" she eventually replied with those flat words, her gaze carrying all the earnest wonder they lacked. Nora might still have been strapped securely in her seat, but she felt closer to Ethan than she had been to anyone...\n\n\"And... is it like you expected?\" he smiled, enjoying how novel this was for her.\n\nNora took a moment to think. Her cheeks flushed, almost embarrassed by how affected she was, and definitely annoyed by the bolster between her knees. That damned 'posture correction' kept her legs apart, and kept the empty feeling there too, as it was too far down to even push on the padding of her diaper. She hadn't minded it for years and years, but just in the last couple -- when the carers' hygienic wipes began to do more than tickle, Nora blushing and gripping her thumbs in something more than just shy boredom -- that's when it became her sworn enemy, rivaled only by the wedge pillow that filled the same job in her bed. Nora eyed their hands entwined, and at Ethan looking at her sweetly, and then down at her writhing body and her gently squeezing thighs.\n\nFuck she was pent up, and warm, and about what? Was this what 'getting turned on' was all about?\n\nShe had asked Vicky once in the school cafeteria, \"Do you ever feel warm and tense in your V-A-G-I--\" but the volunteer had acted so weird, panicking and shutting off Nora's speaker before it could finish her thought, and the two uneasy companions had finished their lunch in silence. That had been enough to stymie any further questions, but who else her age could she ask?\n\n\"You are very warm,\" she finally typed, not wanting to say more than she should.\n\nEthan wasn't too far off, himself, but knew very well what the tightening in his jeans meant. \"Hmmm, yeah... you're warm too. And smooth,\" he replied, his thumb stroking her idly. With every lingering touch he felt like he was transgressing some unspoken set of boundaries and taboo, each one seeming insurmountable ahead before they dissolved to pointless worry in hindsight.\n\n\"Said no one ever.\" She squealed alongside the speaker and squeezed his hand again. It was clumsy; Ethan had to hold her arm in place on the tabletop to resist the yank and push, but he could see-- he could feel her intention.\n\n\"Well, they're just distracted by all this...\" He didn't have to gesture to make his point. \"I'd say you're a pretty smooth talker at least... I mean, with some killer lag.\" He laughed with a squeeze back, prompting Nora to absolutely glare at him and moan 'I'm going as fast as I can!' before she focused on her screen.\n\n\"So. You have found my true disability. No comedic timing. The doctors say I cannot quip. And you are teasing me. Ruthless. Asshole.\"\n\nEthan didn't just chuckle to himself, he laughed outright, rubbing her arm and feeling her whole body tense with every silent, gasping laugh of her own.\n\n\"Well, you've put up with so damn much already, what's one more jab?\"\n\n\"Jab? Oh. You are beating up cripples now? Very cool.\"\n\nEthan couldn't help himself, and he stood up from his bedside, leaned over, and kissed Nora's cheek. It was more than a peck but he didn't linger either, pulling back while she fluttered between the two sideguards in her headrest, attention locked on him regardless of her head's excited movements, an unmistakable smile on the corners of her mouth, and in her sparkling eyes.\n\nNora's disbelief burned bright red where his lips had touched, and some sort of tiny involuntary sound escaped her. She caught herself embarrassed not by him but by how excited her body got, how transparently down for that kiss she was, how obvious it was she had been waiting for him to simply make that move like he had to make all the moves tonight.\n\nShe averted her gaze just long enough to trigger one word: \"Again.\"\n\nInfused with all the confidence he needed, Ethan stooped down as requested -- no, as commanded -- but just as his eyes closed, Nora used all her focus to turn her head sharply and catch his kiss on the upper edge of her open mouth!\n\nEthan recoiled just a bit, caught off-guard by the messy kiss! It didn't take him more than a second to decipher the mischievous grin behind her roving expression. The passive girl had reeled him right in and got him good! She was just full of surprises!\n\n\"Sneaky!\" he chided her, \"So you want a real kiss, then....\"\n\nShe squealed, shook, and glanced hard upward, 'Took you long enough!'\n\nRestraining her wrist again with the tether, he freed his hands and brought them to Nora's face, brushing her sandy hair away and wiping her chin dry, before gently pushing on her jaw.\n\n\"Can I?\" He asked before using more force. She was tense, unsurprisingly, and Ethan had no intention of hurting her for this, when he could kiss so many other places instead...\n\nNora was up for anything it took at this point, glancing up for 'go ahead,' or was it 'good luck'?\n\nCradled between her chair and his attentions, there was nowhere for Nora to retreat to as he caressed her cheek and gently-but-firmly closed her gaping mouth, forcing her head back into the cushion, until her teeth met each other; an odd feeling for the girl who hadn't done a whole lot of chewing in her life. Focused on the boy above her massaging her jaw into submission, Nora hoped this would work, just once... so maybe she could feel what those girls in the living room felt when they drank too much and found someone to pull aside and...\n\n\"You okay?\" he asked, wiping a tear away from under her foggy glasses.\n\nNora glanced up for 'yes', blinking fast to quell the tears. She didn't want to derail this... \"MMMMMmmmmmph!\" she added, eyes hungry, mouth held closed. 'Kiss me already!'\n\nEthan let another tear fall. When none followed, he leaned in.\n\nShe had no idea if her lips were puckering right, but it must have been close enough. Ethan's face, so close to hers, held no hesitation -- none of the fear or pity she had expected for her first kiss -- as he held her head steady between two strong hands, thumbs holding her jawline. Nora shut her eyes and felt his lips on hers, full and warm, a bit wet but also... all-consuming. Bound as it was to the chair, her body shook, twitched, and tested every restraint keeping her down, but it almost didn't matter as his soft touch kept her right where she needed to be.\n\nFor as long as he could.\n\nEthan didn't expect her to kiss him back, and she didn't really -- she couldn't -- but her lips were pliable for just a few sweet moments before her face grimaced and jaw muscles really cranked back open.\n\nHe tried not to let his discouragement show. The hardest part for him was decoupling her body -- her expressions -- from the intentions and desires underneath. What felt to him like a girl somewhat disinterested, then rejecting his advances, was actually frustrating Nora just as much, if not more.\n\nShe was about to apologize, about to call this all off, but Ethan leant in and began kissing her neck, something she hadn't expected... to feel so good! Nora eyed her screen over his back, \"I did not know people kiss there. Please keep doing that.\"\n\nEthan chuckled, listening to her guttural purr. Even that didn't sound 'sexy' per se, it was just her uncoordinated vocal chords trying their best. He didn't really want to get into why he knew this secret spot was so sensitive, how many girls it had worked on in college when he should have been focusing on his grades. But Nora was different, this wasn't a drunken fling in a frat house or a dorm room. Last he checked, Orange Crush was zero proof.",
        "He caught his mind wandering, and he just refocused on how Nora's skin felt, how it tasted, as he pulled her damp handkerchief bib down and off... exposing her chest above the v-neck cut of her shirt -- pretending he hadn't already seen more than he should have in her fits -- and ran his lips over her collarbone, as far as he could follow until the padded shoulder bars blocked his advances.\n\nNora could hardly handle this overwhelming sensation, her body pulling and shaking within the tight clearances allowed by her rolling cage. This kind of care and devotion to every inch of her exposed skin was revolutionary to a young woman who knew 'care' to mean something much less passionate.\n\nNow if only she could expose more for him, herself...\n\nThat tense, agonizing feeling below was only growing now, and Nora couldn't help but worry. There were so many roadblocks between here and there! She didn't even know what 'there' even was for a girl like her! Did Ethan? Would he back out once he saw her tube again? Or her diaper?!\n\n\"Ethan.\"\n\nAt the odd incantation of his name, he pulled himself off of the vulnerable girl in front of him, and glanced at the door as a first instinct. He always locked it to keep some privacy and now he hoped nobody would come asking about Nora, only to see the host's older brother making out with a girl who could not move at all on her own. He caught himself. That probably wasn't the issue, \"What is it? What's wrong?\"\n\n\"I do not want my first kiss to be my last. Please. Try again.\"\n\nNora tried to close her hanging mouth and some twitches registered on her lips, her head shaking, the warm bedside light flickering in her wire-rimmed glasses.\n\nEthan obliged her, cradling her cheeks again and firmly closing her jaw, but he didn't close all the way this time, leaving space... space he invaded with his tongue when his lips met hers, full and twitching and uncoordinated in their hunger for more. Her chin was slippery -- Ethan had forgotten to wipe her face -- but he could feel Nora pushing toward him, if nothing else.\n\nIt was strange; kissing a girl who could not embrace him, or feel him up. But with both arms strapped down, Nora was all his, and that anxious energy emanating from the inevitable knock on his door actually urged him on; urged his tongue deeper to flick at hers while it could. Exploring her for the first time, it was more than a little exciting to kiss this beautiful, helpless girl properly.\n\nEthan still felt guilty about how Nora's disability excited him, but then it crystallized: he enjoyed her. The two of them got along far better than any of his dates in the past year, better than anyone in his life, that was already clear from just talking tonight. He enjoyed Nora, and she lived in this body. It was all one package.\n\nHis body was as close to hers as it could be and Ethan could feel his cock harden on the hard metal he was leaning across, as he deepened the kiss. He needed to get her in his bed, now.\n\nLuckily, Nora was thinking the same thing, desperately.\n\nChapter 9\n\nHe hummed something deeply into her mouth, satisfied, before separating himself, his cheeks almost as flushed as hers. \"...you're a pretty good kisser, y'know?\" he confided from a steamy inch away. A polite exaggeration, sure, but he was still trying to catch his breath. Ethan couldn't deny that he had enjoyed that.\n\nA giggle escaped her as a choking shake, but a clear smile pulled at her lips and squinted her eyes.\n\nNora doubted it, but had no doubts about the connection forming between them. Trying to reach his lips again, Nora lifted her head and it merely drooped forward, making another wet mess down her chin and chest that Ethan had to wipe away with the soft bib he had torn from her neck earlier, now more careful to fold it into a small square and keep it close by. She could only sadly laugh to herself as his hands cupped under her ears like he had before... and instead rested her head back. Oh, she would never ever be smooth.\n\nHe was hovering though, and that was silencing her.\n\n\"Aaahhhhngggggk,\" Nora moaned, rolling her eyes over and over until he caught her meaning: 'Please, if you're not going to kiss me, get out of the way.'\n\n\"Sorry.\" she typed first, once she could see her tablet. \"I wish you could be right here and I could whisper like they do in movies.\"\n\nEthan just shook his head. \"Why are you sorry? I was the one blocking your eye-line.\"\n\nShe gave him a 'what a gentleman' glance and kept typing, eyes moving a mile a minute while he stroked her arm idly. Taking a second to enjoy his touch, Nora wondered if maybe she could be smooth, for once...\n\n\"Speaking of which,\" her prepared folder of segues came to the rescue, \"you should mount my tablet at a good angle when you move me to your bed.\"\n\nNora's cheeky forwardness right then made Ethan double-take, then look at her screen to read the textbox for himself, lighting him up with the biggest oh-no-she-didn't grin! For the record, Nora was still terrible at being smug or cool, her body twisting in her clumsy silent laugh, her giggle bubbling over in gasps.\n\n\"Oh yeah? When I move you into my bed?\" Ethan teased, looking behind himself at his queen mattress, a simple sturdy Ikea thing, and privately thanked himself for cleaning up for his failed date the night before.\n\n\"Only if you want. Handsy. I thought you were going to show me things.\" Nora was bright red now, not even knowing what 'things' she was necessarily implying. She almost didn't hit send, silently begging someone to turn this screen off and shut her up! What was she saying? What was she making this poor midwestern girl say?\n\nBut Ethan did know what she was implying, and even wholly caught off guard by her cheeky request, he was thankful she had broached the subject, still nervous about what she could and couldn't do, or how far they could go.\n\n\"Ok, princess. How do we get you out of all this?\"\n\nNora led Ethan through it all, wishing her mom had pre-written a script for this... before she recoiled from that thought: her mom should have nothing to do with the words she was saying right now. First, her table tray had to come off, but her wrists were currently tethered to a D-ring in the middle -- one braced and one not -- so he needed to detach her from that first.\n\nWatching for any sudden moves, Ethan freed Nora's left hand from the plastic and felt bracing like he had her right, but luckily this one didn't reach out to punch him in the face. Letting go of her wrist, Nora's left arm instead slowly tensed up toward her and pressed her useless hand into her modest chest. It pressed in and rolled reflexively, mashing her boob underneath with a weak but persistent force. Nora blushed. Left unbound for too long, sure it could get painful -- that's why she slept with her wrists tethered away from her, too -- but in her current mood the pressure was... nice. Ethan found himself staring at the spastic girl touching herself awkwardly for a second, but her other arm spasmed, waved, and slammed down on the plexi tabletop loudly, startling the poor boy and leaving Nora gasping in silent laughter. Even with a wince from her unprotected hand's impact, that was priceless, and Ethan knew full well he had been caught staring.\n\n\"Uhh, I was just wondering if I should stop you from-- stop it from doing that.\" he mumbled with his tail between his legs.\n\nNora smiled inside, while typing, \"No. Leave it. I like it.\" and then returned Ethan's stare in playful defiance while her athetotic fist idly massaged her breast in front of him. For the first time in her life, Nora wasn't embarrassed by her left hand's ideas. His secret glances and dumbstruck stares were cute -- and hungry -- making it all worth it.\n\nThat left the wild one, her right arm. Wristcuff still fastened, she instructed Ethan to pull the soft tether out from the tray top, bend her arm in half, take the strap like a leash and wrap it under her armpit and around the front and velcro tight to itself. Now folded like a bird's wing -- with great effort -- writhing harmlessly like its sister, Nora typed again, \"Now just make sure I do not punch myself.\" It was rare but very possible -- with her tightly curled fist up by her shoulder and face -- and why Nora's mom and caretakers used this simple tie as a temporary solution when transferring her in or out of her chair, or at the community center pool over in Olympia. This arm was the real animal.\n\n\"What about your legs?\" Ethan asked while he began fiddling with the different connections of her table tray. It seemed obviously made to be disassembled with almost no effort, Ethan thought, eventually sliding the tray off the armrests and setting it aside. \"Are they going to kick me too?\" he wondered aloud.\n\nIt was only when his eyes fell on her empty lap that Ethan realized how unnecessary his concern had been. With the tray gone, bib too, he finally had a good glimpse of Nora's eighteen-year-old body, unlike any other. She was probably shorter than his sister if he could have stood her up straight, and just as thin. She wasn't sitting so much as cradled by her chair. Her chest thrust forward as her hips ground into the seat in the latest great idea her body had for drawing his eye. Other than a periodical squeezing around a padded section dividing her knees, and a persistent squirming that seemed to get her nowhere, Nora's thighs looked too thin to put up that kind of fight, two wide-set twigs wrapped tightly in some black leggings with a strange bulge by her hips.\n\nNora looked down for 'no, they won't' and typed four words that were even harder to say than asking to get in his bed. \"Pull up my shirt.\"\n\nEthan did as commanded... and found quite a surprise -- a couple, actually.\n\nHe had of course known the tube he had given Nora meds through must go somewhere, and yet the white plastic cap punctuating the soft expanse of bare skin still caught him off-guard, the clear tube definitely going inside. What was far more confusing and unsettling was the other side of her belly, almost hidden by the high waist of her leggings, equidistant from her belly button, the skin raised by something big, round, and flat... and obviously underneath.\n\nWhen he wiped whatever expression he had off his face and looked up, Nora was already typing.\n\n\"I know it is gross...\"\n\nEthan wanted to say it wasn't, but her words didn't pause long enough for him to lie.\n\n\"...but it is really important. On my right there is my G-tube. It is how I eat everything. Everything. I have the real word programmed in here but it is a mouthful.\" Nora wished she could paint a smirk on her drooling lip; the digital voice did always say 'gastrostomy' wrong, but it made a decent joke for her at least. \"The big bump is an implant that gives me anti-spasticity medication right in my spine. Side-effect is my legs are thinner, but it is better this way.\"\n\nNora's eyes followed his back downward, before she asked him...\n\n\"If you are going to move me out of my wheelchair. I need you to promise me. Ethan.\"\n\nHe focused, caught off guard by the weird pronunciation of his name again. \"Anything, what is it?\"\n\nNora wished she didn't have to say this, it was so awkward. She warned him it would take a long time to type, and then began, \"I trust you. But. I need you to know that out of my wheelchair I cannot do anything. If we do things together. You will need to move me. And help me talk. And...\" she hated typing this so much, \"...clean me afterward. Dress me. And make it look like this never happened. Do you understand what I am asking?\"\n\nHe stopped and truly looked at her, holding her right hand away from her face, then just holding it. \"You're saying that if I can't take care of you, I should stop here...\"\n\nWith a sour turn in her tummy, Nora glanced up for 'yes'.\n\nHe slipped his fingers into her angry fist to steady it. \"Do you think I can handle it?\"\n\nWith a smile flitting between confident, nervous, excited; Nora again glanced up for 'yes'.\n\nEthan nodded. \"I promise I'll take care of you, Nora. Don't be scared.\"\n\nTo be honest, the impromptu carer wasn't as turned off as Nora thought he was. Neck deep already, no matter how things looked, Ethan was game. Part of him knew this. Part of him, a sliver still apprehensive, wanted to stop. Another part couldn't stop watching her weak fist grope her own boob while her innocent eyes were so hopeful he would help her get closer to him, so obviously and earnestly hoping he wouldn't be scared of her.\n\nThe last part of him just got on with it. \"Is there anything else I should do?\"\n\nEyes darting about, she explained how to turn off the pump he had triggered earlier, pinch the tube and detach it, before he could close the cap.\n\nShe watched his hands hesitate, before assuredly detaching her feeding tube like he had done it a hundred times before. A little caught off-guard, she tried to pick up the pace, but her eyes could only type so fast!\n\n\"I am in a posture system for my hips.\" she explained, as sitting all day with spasms had the painful habit of dislocating hips and twisting spines over time. She needed it, but she sure as hell didn't need it right now. \"Just undo everything down there.\"\n\nEthan could do that much for sure. He followed her slim legs down to little loops keeping Nora's knobby knees hugging the bolster between, unfastening and removing the cumbersome foam separator. It seemed he would be doing the separating himself, sooner rather than later. Refocusing, he found two big bulky pads on her shins, apparently keeping her from slipping down the seat, which he unfastened with a knob in the middle and stashed by the discarded tray top and other pieces. Lastly, two tight velcro straps around her ankles, keeping her slightly-twisting feet in their resting points with her shoe soles down on the footrest; those were slipped free as well.\n\nHer angry arm waved, elbow out, pacified by the simple bondage, as Nora's body sat nearly free in front of his crouching stance, twisting clumsily every so often yet never truly stopping. It felt like she was putting on a show for him, but he knew that wasn't right -- wasn't correct nor even okay to think, and yet the endless twisting and bucking and squirming had him firmly at attention.\n\nEthan did notice the way Nora's spasms and motions gradually quieted as he followed her curves downward, the implant giving her some noticeable respite below the waist, but they still weren't motionless. Now, with nothing holding them in place, Nora's legs gradually ventured away from their rigidly-set positions, her foot kicking out a bit, resulting in nothing but a gentle nudge as he kneeled before the disabled girl in her throne, looking down her nose at him.\n\n\"Uuuuhhhhhng,\" she almost whimpered, her head shaking side-to-side of its own volition. She had no words, none at all. With only her two shoulder bars keeping her back against the seat, Nora had never been this naked or vulnerable with anyone who wasn't related to her or paid to be there -- and naked was a relative term, with all her clothes still on...\n\nHe started to fix that, untying her shoe and slipping it off to find... another brace, this one hugging her foot, ankle, and shin, before slipping off the other shoe, and finding the same. Her little curled toes poked out of the thin white plastic and Ethan wondered just how Nora lived in this soft prison. Her feet looked off... entirely unused to bearing weight, and Ethan was reminded again that he was undressing the most helpless, cute, disabled, innocent, eager, unique woman he had ever had a chance with.\n\nTo Nora, the boy kneeling in front of her looked so trepidatious and hesitant... until he didn't. Suddenly that clinical, caring facade broke again like the snap of latex gloves coming off, and his hands had returned to something more passionate and intense and instinctual; abandoning his task of unwrapping her from the many parts and pieces of her orthotic shell, running up her atrophied thighs from branch to root, his thumbs grazing the empty void between and stopping before touching anything too naughty -- avoiding the puffy something-or-other in her leggings which blocked the terminus of her thigh gap. His touch tickled her in some new way that didn't make her laugh but groan, much too loud, \"UuuuhhhHHNG!\"\n\nEthan shushed her with an anxious glance at the door and laughed sweetly, amused by how a simple stroke on her inner thigh sent her body back to fits, relaxed and assured by how plainly she was enjoying this. He was too. This was interesting. Different.\n\nBiggest understatement of all time.\n\nNora noticed him getting close to her groin, though. She couldn't stomach the idea of telling him about her diaper yet. Even if he had promised, even if he could see the bulky absorbent pad under her leggings by now, even if he had taken everything so far in stride; she couldn't bring herself to speak of it, so she diverted as quickly as she could.\n\n\"Please help. This hand. I need a break. Put a pillow or something underneath.\" Nora said, adding what she hoped were 'pretty please' eyes.\n\nStanding high over her again, Ethan mustered his courage and slowly slipped his hand between her slim fist and her boob, protecting it from the repetitive kneading, imposing his own grip on her. To his delight, this was simpler. Nora's breast was that of any girl; it was warm, soft, and felt amazing under his touch, the lace bralette merely a texture beneath her shirt, no padding to get in his way: as if she could be any more vulnerable...\n\n\"Does this work?\" he asked breathily into her ear. Nora tried to feign surprise or indignance but it wasn't worth the effort, instead melting at the smirk in his voice. Nora blushed at how well her baiting had worked, and how quickly he saw right through it. She barely held back a moan as her spastic, folded hand pressed on his, tightly; almost under the illusion she was holding him there, imploring Ethan to grope her harder.\n\n\"That is pretty good,\" she let her tablet say as she squealed happily; terrible at being coy.\n\n\"Oh yeah? Pretty good? I can do one better.\"\n\nNora looked down at how the thin green shirt hugged her slightly-misshapen torso, its deep v-neck cut open and offering her chest to him, the part of her body she was most proud of. She glanced just in time to watch his hand retreat... no, don't leave... only to slip into the cut and under her bra effortlessly, so firm and strong as it cupped her better than any underwear could. Nora couldn't believe this was happening! This boy had just skipped past everything she was ready for. He was so sure of himself. He was so warm. This feeling was incredible, unmatched in any way.\n\nBut looking downward -- moving her neck -- had angered her body, overreaching however much will she was allotted, and Nora whined as her stupid, damaged motor cortex pushed her face away from him again, firm against the far side of her headrest, even going so far as to take full command so Nora could only stare at the cheap popcorn ceiling for several endless seconds. Ethan paused only briefly, before he dipped into her vulnerability and caressed her neck with his mouth as she lay there with zero control, sending a flash through her chest and between her legs, a desire Nora knew she had never touched upon before, even in her lonely writhings in bed, imagination doing its very best. Now she knew for sure: her imagination had no fuck-ing clue.\n\nThis moment, this impenetrable incapacitation, even worse than usual -- though definitely not as bad as the storm earlier -- while he continued to explore her body so confidently, while she couldn't say 'no' or 'stop' if she tried: Why was this, of all things, making her so tingly and tense deep in her belly; in her private place? Nora had spent so many years fighting her body, hating how every chance for normalcy passed her by due to that same feeling of being trapped and useless, hating how people touched her and moved her without her say, well-aware how much she needed them to... Why did she get so excited by him slipping his hand somewhere he shouldn't before he even asked, when countless carers had done the same, leaving nothing but a feeling she was a passenger in her own life?"
    ],
    "authorname": "cafterhomme",
    "tags": [
        "disabled",
        "wheelchair",
        "comfort",
        "assisted masturbation",
        "cerebral palsy",
        "paralyzed",
        "understanding",
        "romance",
        "happy ending"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/one-way-to-graduate"
}