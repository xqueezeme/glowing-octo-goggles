{
    "title": "A Misdirection of Affection Ch. 03",
    "pages": [
        "The morning after her stroll down memory lane, Dessi got a text from Gina, suggesting they meet at The Noggin Shop after lunch. Before responding that it was OK, Dessi arranged for her oldest son, Alex, to drop her off there and pick her up later, since he wanted to use the car that day. Alex was a lifeguard at the YMCA that summer- a job that left his hours flexible to have a little fun before he left for college that fall. Dessi was going to miss him, and it was a bit uncomfortable to think of him doing the things Ian did at that age.\n\nAlex had to drop her off a little early, so Dessi sipped a coffee and soaked in the memories of being in the place where she and Ian had had so many conversations. She was glad their corner table was open. The Noggin Shop hadn't changed much- perhaps the owners knew better than to change a good thing.\n\nGina arrived a little before 1, looking like she'd been crying. When Dessi looked at her questioningly, Gina waved her hand and said, \"I just came from seeing my parents. This week in June is always a hard time for us.\"\n\nAt the mention of Ian's parents, Dessi got a little concerned and asked, \"Did you tell them...?\"\n\n\"Oh, no no no no. Nothing like that. They're not ready yet, and I don't think I've gotten all of the story yet, right?\"\n\n\"Right...And I think I'll need to talk to them eventually, but I'm not ready for that yet. I'd like to talk with you first- you're a little less intimidating!\"\n\nGina smiled and said, \"I wasn't always. I went through quite a bitch phase a few years back, but a lot has happened since then...\"\n\n\"Did your husband know you then?\"\n\n\"Ohhh, honey. The stories I could tell...but not today. Tell me more about you and Ian. Did anyone else know he was gay?\"\n\nDessi sat up straighter and put her drink down. \"That's what I wanted to tell you about. Apparently, a few months before I met him, he was just starting to realize that he thought about sex in a different way than other guys talked about it. He had a few good friends back then. And I guess he gave them too much credit. He trusted them enough to try to process it a little with them. Nothing too serious- just asking if they'd ever thought about this, or wondered about that. And...it didn't go so well.\"\n\nDessi started tearing up, thinking of the hurt and loneliness Ian must have felt. Gina, who was still emotionally raw from the morning, wiped away a fresh tear from her own eyes.\n\n\"He wouldn't tell me who the guys were, and one of them had already moved away anyway, but they responded pretty bad. They called him some hurtful names, told some lies, and completely cut him off. They never talked to him again.\"\n\n\"Bastards.\"\n\n\"Yeah- but typical teenage boy stuff. I have a few of my own now, so I can imagine how they might respond if they were scared. You try to raise them right, but...\"\n\n\"I know, I know. I forget that they're really just kids. But you'd hope they could be nicer...more understanding, maybe?\"\n\n\"They get scared, Gina. Scared of being outcasts themselves. High school is so merciless, so cruel. It just eats up nice kids...like Ian.\"\n\n\"But he seemed to make it out OK, from what I remember,\" Gina said, thoughtfully.\n\n\"Oh, Gina, he held back so much. He didn't know how to talk to your parents about what he was going through, and he didn't want to put that burden on you, either. He said he turned to the stars at night to find consolation. He started talking about how the stars were there to fight off the darkness.\"\n\n\"I remember when he said something like that. It really stuck with me. I didn't think of it as...morose or sad or anything, not at the time.\"\n\n\"Well, it was. There were some days I was really worried about him. It's like he was carrying a big old weight around. I think that's what bonded us- once he told me, I could help carry that weight. It never occurred to me let him carry a little of my burden, too. I didn't want to scare him away.\"\n\nGina reached out and touched Dessi's hand- an instinctive move from her work at the shelter, something to encourage a person to open up. \"Your burden?\"\n\n\"Oh...nothing unusual. Just a bad home life. Abusive dad. Divorce. That sort of thing. But I felt embarrassed and stained, like no one would love me if they knew all about me. Turns out most people are thinking that about themselves anyway.\"\n\n\"I know, Dessi. I see it every day.\"\n\nWaving her hands in front of her face to fan the tears, Dessi let out a big breath, picked up her coffee, and continued. \"Anyway, it got better once he got to college. It was a fresh start with new friends. He was hopeful he could find more people who were gay or who at least were sympathetic. He was loving his science classes, and he was just starting to swim.\"\n\n\"I remember it was like he never wanted to come home- I felt abandoned,\" said Gina, looking away.\n\n\"Well, once he met Patrick he never wanted to leave.\"\n\nGina put her mug down on the table a little harder and faster than she had intended to. \"Patrick? Ian had a boyfriend?\"\n\n\"Ohhhh no. Not a boyfriend. A crush. Poor Ian- he was pretty sure Patrick wasn't gay. Almost 100% sure. But they were friends and Patrick was a sophomore on the swim team. They spent a lot of time together and Ian was crushing hard. I couldn't blame him. I eventually went to visit Ian the month before...before his accident, and I met Patrick. He was a fine piece of man meat. He's probably pot-bellied and bald by now, but 19 years ago...wowwie! Blond hair, blue eyes, sculpted body, tight ass...the whole package.\n\n\"Dessi- you're a married woman!\" Gina teased.\n\n\"Hey, my husband doesn't mind what gets me in the mood, as long as he's the one that gets in me when I am in the mood.\"\n\nGina didn't know what to say- she just laughed and glanced around to make sure no children were listening. But she was getting to the age when even college students were starting to look much younger than she remembered being in college.\n\n\"Anyway,\" Dessi continued, \"you weren't the only one that felt abandoned. Ian was my best friend and the love of my life, remember? When your family traveled south for Christmas that year...\"\n\n\"Oh yeah, to Grandma Jean's place,\" Gina smiled.\n\n\"I was bouncing off the walls. I had counted on making my big move on him over Christmas. I had to settle for New Year's. I came over your house for New Year's Eve.\"\n\nGina looked puzzled and squinted her eyes at Dessi. \"New...Year's...Eve...\" she said softly, trying to remember. Then suddenly her eyes went wide. \"OH! Oh my God! You...you were the girl that...you were so tiny, then. You had such long, straight hair. And you...you spent the night, didn't you? And you were the reason Ian locked me out of his room!\"\n\nDessi's mouth opened wide in shock. \"How did you know I...you remember?\"\n\n\"I was 11, Dessi, not 4. I remember meeting you, though I had forgotten it until you mentioned it. And yes, I knew you spent the night. I was up in the middle of the night to go sit on Ian's recliner. I sometimes did that if I woke up at night. It was...is...a very comfortable recliner. I saw you walking from the bathroom to his room and then when I got there, the door was locked. I was so mad at you.\" Then Gina's eyes opened wider in sudden realization, \"You were walking back from the bathroom- had you and Ian just...?\"\n\n\"No. Well...no. Ian was asleep- he didn't know I had snuck into his room instead of leaving to go home that night. After I got back to his room, I locked the door. I tried to have sex with him, but...I don't think you want the details...\"\n\n\"Did you or didn't you?\" Gina blurted.\n\n\"Yes, but he wasn't...he never...\" Dessi glanced around and lowered her voice. \"He didn't get inside me that time.\"\n\n\"That time?\"\n\nDessi closed her eyes and smiled, thinking back to the summer after her graduation.\n\n\"Yeah, I finally bedded him a few weeks before he died.\" She opened her eyes. \"But that was it.\"\n\nGina looked down at her drink, then off to the side. \"OK, this is weird. Like, I feel like I should be able to be a grown-up about this, but it's just weird to be talking about him like this. What sister knows the details of her brother's sex life?\"\n\nDessi looked away and said jokingly, \"Well, you don't know the details, really.\"\n\nGina grabbed a napkin and threw it at Dessi, it made it halfway across the table and then floated down. The two women laughed.\n\nThey talked for another hour, filling in some details of Ian's story for each other. Then Dessi asked about Gina and her life.\n\n\"I've been married 6 years and we have 4 kids- 1 biological and 3 adopted. I work at a women's shelter which also has a crisis pregnancy center. My husband and I have adopted some of the kids that girls there aren't ready to keep.\" Then she patted her stomach and smiled, \"Plus we've got another baby on the way, but I haven't told Andrew yet.\"\n\nShe spoke of Andrew's body shop and her own work managing the shelter. She didn't mention the arrangement that first got her and Andrew together- that was a private story reserved for only a few. But she did say they were roommates before they began dating. Dessi thought that was romantic. \"It probably wasn't like what you think,\" Gina said cryptically.\n\n\"After Ian died, my parents kind of shut everything out- they just didn't know how to handle it. As a 12 year old girl, my world was falling apart and mom and dad weren't responding to me. I got rebellious and ran with a wild crowd. I still did fine in school, but I just did everything I could to avoid being at home. It was like a cemetery there all the time.\"\n\nDessi reached out to hold Gina's hand and said, \"I'm so sorry- I wish I had talked to you then. I wish we could have been there for each other.\"\n\n\"I was 12, I probably would've ignored you. But thank you. And all that you're sharing now is so meaningful, so thank you for that, too. But anyway, I went to college, made dumb mistakes and still graduated. I had a huge argument with my parents, blamed them for a lot of things and said some hurtful things before moving away. I finally ended up working at the shelter, and around the time Andrew and I got engaged, I got back in touch with my parents. We've been repairing that relationship, and a lot of that has to do with finally getting them to deal with their grief over Ian in a healthy way.\"\n\n\"Wow, Gina. I just...wish we could have connected sooner.\"\n\n\"Me too, Dessi. And I have something to ask of you, if you don't mind.\"\n\n\"What is it?\"\n\n\"Ian was pretty distant after he left for college. We thought it was just normal 'leaving the nest' type of behavior, but now it sounds like there was more to it than that. But you were still a part of his life then. Do you have any pictures you wouldn't mind giving up- pictures of you and Ian or of just him- from that year? We didn't really know my brother during the last year of his life.\"\n\nDessi sighed, \"I do have pictures- not a lot- but let me see what I can bear to part with. Or maybe you could scan a bunch of them...?\"\n\n\"That would be so awesome, Dessi, thank you! Maybe the next time I'm in town...?\"\n\n\"Or if you want to stop by my place on your way out of town, I could pass them off to you, as long as you swear to bring them back.\"\n\n\"Or I might see crazy Dessi?\"\n\n\"She's been in her cage a long time, but she'd get angry over Ian.\"\n\nGina could tell there was some truth to the humor. They got up to leave together and went out to the street. Alex was just arriving to take Dessi home, and Gina had some other errands to run in town. They made plans for Gina to stop by that evening, then said good-bye.\n\n&nbsp;\n\n******* \n\n&nbsp;\n\nAlex dropped his mom off at home and then drove to work. Dessi prepared some food to cook for dinner later, started some laundry, then went to see what pictures she could give to Gina. It scared her to think of someone else taking the photos, and she wished she had scanned them and backed them up a long time ago. \n\nFlipping through the dozens of prints, she smiled at the memories of those two short years. She had really changed herself- reinvented her personality and lifestyle. Ian was such a big part of that. She had wanted to be the kind of girl that deserved such a kind and caring man. He had given her a picture of what a person could be like without needing to put others down or use people \n\nHe had also redeemed her view of sex. It had always been something others used to hurt her or else something she used to manipulate others. Without even talking about it, Ian had helped sex to become an expression of love and closeness and trust. She had had far less sex with Ian than with any of her past boyfriends, but the special nature of those times marked her indelibly. \n\nDessi's ears began searching the house. She was pretty sure she was alone. Alex was at work, Nathan at his friend's pool, Sammy with Rick at soccer practice... She moved the box over to the bed. She had reached a group of pictures from Ian's last month. She knew where those memories would lead, even without pictures of the best part of that night. She looked at a photo of her wearing a shiny blue strapless dress, sitting at a candle-lit table with Ian. She remembered the waitress complimenting them as she snapped the picture...\n\n&nbsp;\n\n******* \n\n&nbsp;\n\nIt was late May. Dessi had just graduated high school...finally. Telling her mom she was going to visit some old friends for a weekend, she drove up to Ian's university to surprise him. He hadn't come back at the end of the semester, citing the chance to take some summer courses on astronomy and the need to practice with the swim team.\n\nDessi had his address, so she drove up there on Friday morning and wandered around campus. She would probably never end up going to college, she thought. She had graduated, yes, but not with high marks. It was always so hard for her to concentrate, and so the tests never reflected her grasp of the material. Her mom would probably be happy to have her at home for a while as she figured out her next steps in life. Dessi wanted for Ian to be as much a part of that plan as possible. She had a surprise for him that she hoped would help.\n\nIn the days before cell phones were in everyone's pocket, it was hard to show up unannounced and find someone. The weather was nice, though, so once Dessi had stretched her legs and gotten some food, she settled onto a bench outside Ian's dorm. The breeze on her neck was a strange feeling, and Dessi rubber the back of her head nervously.\n\nIn the mid-afternoon, after Dessi had been waiting for over an hour, she saw a group of 4 guys walking up to the dorm. Ian was among them. Dessi stood up and quietly joined the back of the group. They were talking about relays and yards and strokes- must be the swim team, she thought. They paid her no mind as one of them swiped an ID card to open the dorm. She walked in with them, then held back. \n\nOnce they entered the stairwell, Dessi followed, staying a floor below. She heard them saying good-byes and planning to meet later for dinner. Dessi found Ian's floor and walked up to his door. She rubbed the back of her neck, then knocked on the door. A few seconds later, a shirtless Ian pulled open the door.\n\nHe stared at her briefly, then squinted his eyes for a few seconds, looking confused. Dessi held out her arms for a hug and said a nervous, \"Surprise!\"\n\nShaking his head to clear it, Ian stepped forward and pulled Dessi into an embrace. Then he glanced up and down the hallway and pulled her into the room. Shutting the door, he said softly with surprise, \"Oh my God, Dessi! What happened to you hair? What are you doing here? How did you get in? Girls aren't allowed in this dorm...you need a school I.D. to...\"\n\n\"Are you happy to see me?\" Dessi interrupted him. Worried that she had made a few bad decisions.\n\n\"Well...YES!\" Ian said, a little flustered. \"Hold on a second,\" he said, reaching for his room phone. \"Are you here for the day?\"\n\n\"And the night, too, and tomorrow, if that's OK.\"\n\n\"Yeah...sure...hold on.\" He punched a few numbers into the phone and held the receiver to his ear. Dessi sat down on the bed and wondered why he hadn't moved his recliner into his dorm.\n\n\"Patrick? Hey it's Ian...Yeah, I'm gonna bail on dinner tonight. And probably stuff tomorrow, too...No, it's fine, my, uh...my cousin surprised me with a visit.\" Dessi pouted at that cover story. \"No, he's too young...he just got his license and everything...No, we will definitely not do that...No, I'm gonna hang with him tonight and tomorrow, I'll have him crash in my room...Meet him?...Uh, sure, maybe for lunch tomorrow...we can figure it out later...OK, I'll see you around, bye.\"\n\nDessi was a little offended. \"Your cousin? He? Ian!\"\n\n\"Hey, gimme a break. No girls allowed; if the Resident Adviser gets word, you need to get a hotel, and I get in trouble. And people are going to see us together at some point, and with your hair...gone...you can pass for a teenage boy. It was the best I could think of on the spur of the moment- except I didn't expect they'd want to meet you.\"\n\nPacified, Dessi got up and walked toward Ian, \"Well, I guess that's plausible enough. Do you like my hair?\"\n\n\"Why did you cut it so short? I thought you loved your hair?\"\n\n\"I do...did. But I thought this way I look a little more like a guy, and maybe...you know...maybe you would like that...Maybe it would be easier to...try to have sex, if you can imagine you're with a guy...And besides, I was able to slip in the dorm by walking right behind you and your friends, and no one noticed- camouflage!\"\n\n\"Oh, Dessi, that's...I don't know what to say. That's so thoughtful...and creepy...and sad...and...and I feel bad that you feel like you need to do that.\"\n\nIt wasn't going the way Dessi had hoped. But what did she expect? For Ian to throw her on the bed and ravish her right away?\n\n\"Ian, you forget how happy I am to do things for you...you forget how much I love you. But don't worry about it...let's go out!\"\n\n&nbsp;\n\n******* \n\n&nbsp;\n\nIan got dressed and they moved Dessi's bag into Ian's room. With her hair so short, wearing boy's clothes made her appear to be a teenage boy, so no one stopped them as they came and went. Ian even registered her as an official guest, \"Dezi.\" They went into town and visited a coffee shop that was less popular with college students so they could have more privacy as they talked. They spent a few hours catching up, then planned to head to dinner. But as they walked out of the coffee shop, Ian stopped short.\n\n\"Dessi, did you bring any nice clothes...like, girl clothes?\"\n\n\"No, I didn't think I'd need anything. I just brought a few changes of clothes- most of them like this.\" She wondered where this was heading.\n\n\"I'd like to take you to a nice place- as a graduation present. Let's get you something nice.\"\n\n\"Ian, we can't just...\"\n\n\"We can and we will,\" Ian insisted. He drove them to the mall and they found a store with nice women's apparel. Ian helped her find a beautiful outfit and then paid for it. They packed it up, went back to the dorm, and Ian changed into something more formal. They walked out to the car and drove to the coffee shop. It had a clean, private bathroom where Dessi could put her dress back on. She felt a little giddy at the thought of a real date with Ian.\n\nThey ate at an expensive Italian restaurant and talked like the close friends they were. Dessi asked about Patrick, and though Ian was reluctant to talk about him on their 'date,' Dessi pushed and prodded until Ian shared about his crush on his swim team partner. After they had eaten their fill and the sky was getting dark, they returned to the car. When they pulled into the coffee shop again, Dessi asked Ian, \"Why...?\"",
        "\"You don't think we can get away with pretending you're a boy in that dress, do you? We'd never make it past the front desk!\"\n\n\"Well, maybe you could say your cousin is a cross-dresser!\"\n\nIan smirked and looked into Dessi's eyes. \"Short hair or no, in that dress, you look all woman. Now go take it off.\"\n\nMaking some remark about not knowing he was in such a hurry to get her clothes off, Dessi shuffled out of the car and into the coffee shop. She returned a few minutes later, dress in her arms, dressed like a boy.\n\n\"Happy now?\" she teased.\n\n\"Happy to see you, yes.\"\n\nThey drove back to the dorm, Dessi shifting in her seat in anticipation.\n\n&nbsp;\n\n******* \n\n&nbsp;\n\nBack at the dorm, as Ian unbuttoned his shirt, he looked at Dessi sitting at his desk and said, \"I'd suggest you sleep on my roommate's bed, since he's gone for the summer, but I'm guessing that's not the sleeping arrangements you have in mind.\"\n\nDessi smiled and moved over to the bed. \"You'd be right. Though we might have to do some rearranging- one bed isn't going to fit us very well, especially when you start rolling in your sleep.\"\n\n\"Well, I may roll, but you're the kung-fu queen. You actually bruised my shins during our naps last summer.\"\n\nDessi stuck her tongue out at Ian, then threw a pillow at him. Ian deflected the pillow and sighed as he started moving the beds next to each other. \n\n\"You don't have anything you need to do tomorrow?\" Dessi asked.\n\n\"No. I was just going to hang out with the guys in the evening. We all have papers to write for classes this month, so that's what we do during the weekend daytime.\"\n\n\"Well, maybe I should have you go spend time with Patrick in the morning, then when you come back all horny I can give you some relief.\"\n\nIan laughed, but then got a little more serious. \"Dessi, let's leave everyone else out of this. I just...I want to do this for you.\"\n\nFeigning innocence, Dessi said, \"Do what, Ian?\"\n\nNow it was Ian's turn to throw a pillow. Dessi said more seriously, \"Isn't it even a little bit for you, too?\"\n\nIan shrugged, \"I won't deny that it's nice to get some release, and I like being close to you. But I think the most enjoyable part is knowing I can make you a little bit happy. I know how important this is to you. I'm worried that won't be enough in the long run- for either of us- but I'm OK not thinking about that tonight.\"\n\n\"Good. Good enough. Now finishing taking off those clothes and let me enjoy that sexy body of yours. I like what college is doing to you!\"\n\nNot waiting for Ian to comply, Dessi climbed towards Ian and began pulling down his pants as he stood next to the bed. He helped finish that task, and Dessi began rubbing her hands all around his chest and abs. He was definitely getting toned.\n\nPulling his cock out through the front of his boxers, she took him in her mouth and began bobbing. Ian was soft, but he moaned at the contact. As he hardened in her mouth, he put one hand on the back of her head, gently guiding her ministrations. She pulled away for a second, looked up at Ian's face, and asked, \"Does the short hair help? Can you pretend I'm a guy?\"\n\n\"I...I don't know. It's hard to forget that it's you, Dessi...\"\n\n\"Well I'll stop talking and you can try to picture whatever...whomever...you want when you close your eyes.\"\n\nDessi got back to work, bringing Ian to full stiffness. She then wiggled him around to get his boxers off and guided him onto the bed.\n\n&nbsp;\n\n******* \n\n&nbsp;\n\nRemembering that night, more than 18 years later, lying on her bed, Dessi slipped a hand into her shorts and began to rub herself. She glanced at the bedroom door to make sure it was locked. No one was home, but no sense in taking chances, right? She began to slowly move her hips around, remembering the feeling of Ian rolling on top of her that night.\n\n&nbsp;\n\n******* \n\n&nbsp;\n\nDessi pulled off the uncomfortable boy clothes she had been forced to wear. She hadn't bothered to put on panties when she had changed out of her dress earlier, so she was soon naked on the bed next to Ian. He looked up and down her body and slowly moved one hand up and down his cock to keep it firm. \"Do I need to...do you need to do anything to...get ready?\"\n\n\"Ian, usually a girl needs some help getting wet enough to take a guy, but I've been ready for this for a long time. Lie on your back, I'll get on top to start so we can be sure you actually get inside this time.\" It was a joke, but neither of them laughed.\n\nIan stretched out and held his penis up. \"Do you need me to...hold it or anything?\" he asked. Dessi straddled him and reached between her legs to take hold of his warm shaft. \"No, I got it,\" she whispered. Then settling his tip into her entrance, Dessi sank down until she had taken him all the way in. They both moaned- Ian from the completely novel and pleasant sensation of having his cock wrapped in a tight, warm hole. \n\nDessi moaned from the satisfaction of finally feeling Ian inside her. That it had been about 2 years since she had had sex made the sensation all the more fulfilling. She had almost forgotten the joy of having her tunnel stuffed with a warm, pulsing fullness. The feel of a hard body rubbing against hers. She knew she would cum, hopefully before Ian did.\n\nIan's eyes were closed and his mouth was wide open, silently gasping at the feeling of Dessi moving up and down on him. He didn't know where to put his hands. At first he rested them on her thighs, then he moved up to her hips and shared in the rhythm of her motion. Then he moved his hands up to her breasts. Though he didn't feel any particular fascination with that part of a woman's body, he knew she wanted to be touched there. When his fingers reached her nipples, which were hardened to little points, Dessi squeaked and pushed harder down on him.\n\nIan found that concentrating on touching Dessi distracted him from the almost overwhelming urge to thrust and cum as quickly as possible. So he rubbed all along her body- her arms, her thighs, her back, when she leaned over to lie on top of him. It wasn't but a few minutes before Dessi's breathing got erratic and mixed with groans. She was on top of him, rubbing their chests together. Her hips started grinding faster and her arms closed around him, squeezing him. Dessi kept her face on Ian's chest, her cheek resting on his pectorals. She wanted to kiss him, but she was worried she would ruin the experience for him. Plus, their height difference would have made it impossible for her to reach his lips without pulling off of him, and there was no way she was doing that now.\n\nIan moved one hand down to her butt cheeks, which were clenching and releasing as she sped up her thrusts. She was so small that one of Ian's hands could cup both cheeks. When he did so, she moaned and started gasping. Ian's other hand wrapped around her back and rested on her spine.\n\nDessi's motions became urgent, and her high-pitched grunts were unmistakable- if anyone had passed by Ian's door, there would have been no doubt that his visitor was not who she pretended to be. Pressing her body closer to Ian's, Dessi slowed down her thrusts but made them firmer and longer, rubbing her clit along Ian's shaft.\n\n\"MMM! NNN! MMMff!! Ohh God, Ohhh God. Ian! Ian!! I'm so close Ian! Nnnngh!\"\n\nFeeling her small body moving furiously on top of his, Ian simply held her close and felt a surge of love for his friend. Staring at the ceiling, he said softly, \"I love you, Dessi. I love you in every way I know how.\"\n\nThat was all it took to push Dessi over the edge. She had cum before from sex. She usually had some sort of orgasm with her partners. But she had never experienced one such as this, where her emotions and her body collided and shook her to the core. Pushing Ian in as deep into herself as she could, Dessi cried out in joy and even a little terror at how strongly she felt everything. She put her mouth in Ian's chest to muffle the noise.\n\nIan wasn't expecting to feel her walls squeezing his shaft when she came. But everything was suddenly tighter. He felt her whole body shaking and jerking every few seconds. He moved his hand from her back to her head and gently stroked her short hair. Dessi's arms squeezed him tighter and her thighs clenched around his legs.\n\nDessi was feeling weakened from her orgasm, which was still making her tremble and shiver on top of Ian. She didn't realize how close he was, and Ian himself was surprised by the urgency he was feeling. Even as Dessi came, Ian was starting to thrust his hips up at her, gently but insistently. As soon as he could tell that she was finished, Ian rolled them over without warning. The act of rolling caused them to disconnect for a second, but as soon as Ian was in place on top of her, he used his hips to find her slit, and then pushed in, violently.\n\nThough Ian wasn't the tallest guy Dessi had been with, the difference between them was substantial enough that, in this position, her head was at the level of his chest. So with Ian on top, beginning to thrust into her, Dessi turned her face to the side so she could breathe. Ian's head and shoulders were on his pillow, which was odd. He felt like he was fucking the bed, since he couldn't see Dessi.\n\nHe moved his hands so that they were under Dessi, holding her shoulders so that his thrusts went as deep as he could go. Ian felt his cum rising. His thoughts were a mixture of Dessi, Patrick, and faceless, nameless guys from his imagination. He could barely hear Dessi's squeaks below him, muffled as they were by his body on top of hers. He only hoped he wasn't hurting her, but at that point he was too far gone. She was saying his name. \"Ian?...Ian?...Ian!!\"\n\nPulling out to just his tip, Ian thrust back in hard. After a dozen or so thrusts, he just pushed deep and felt his release. Dessi's eyes went wide as Ian came inside her. She had planned to be on top or beside him, somewhere in a position to make him pull out. She had tried to get his attention to warn him, but he was like a man possessed. \n\nShe wasn't protected and wouldn't consider wearing a condom with Ian. Feeling his pulsing inside her, Dessi resolved not to worry about it. Worst case scenario, she would have a permanent bond with Ian, something to ensure he would always be in her life. For the moment, she would enjoy the feeling of his ultimate satisfaction- the release that she had given him.\n\nIan stayed on top her her for a few minutes, letting his breath return to normal. Only when Dessi tapped his chest with her hand and asked to be let up did he come to his senses and roll to his side. They stayed like that- side by side in bed- until Dessi broke the silence with a question, \"Well, what did you think?\"\n\nIan took her hand in his and said, \"Well, there's something really awesome about it. But Dessi, I don't want to hurt your feelings when I say that it just doesn't feel right to me.\"\n\n\"I know Ian, but it's not, like, repulsive or anything, is it?\"\n\nIan thought about that, staring at the ceiling, and finally said, \"No, not repulsive, just...off. Like something's missing.\"\n\n\"Maybe I should strap something on my front to look like a penis, huh?\"\n\nIan laughed, though she hadn't been entirely joking.\n\n\"I'm tired, Dessi. That took a lot out of me. If you go to the bathroom, remember to put boy clothes on first. It's halfway down the hall, you can't miss it.\" It wasn't the most romantic ending to their love-making- Dessi putting on shorts and a shirt to go out into the common bathroom- but since she knew it would end up with her in bed next to her lover, she didn't mind.\n\nSlipping back under the covers, Dessi found Ian fast asleep. She cuddled her way under his arm and joined him in happy slumber.\n\nEarly the next morning, they made love again. Slower, less urgent. They spooned, which Ian said made it look like he was with a man, which helped that \"something missing\" that he had talked about. That time, Dessi didn't even think about it- Ian came inside her, gripping her whole body in his arms and pulling her against him. She couldn't have moved off of him if she had wanted to. She realized it would be cruel to deny him that pleasure, anyway, and she delighted in the feel of his cum filling her.\n\nThat Saturday, they walked around campus, watched a movie, and talked about their families and their futures. Ian never set up for his friends to meet Dessi, though they did bump into Patrick at lunch. Fortunately, he was on his way in while they were heading out. He gave Dessi and Ian a funny look, but didn't ask any questions. He and Ian arranged to meet at the pool later that day. \n\nWhen they had some privacy to talk while walking, Dessi asked about the possibility of them being together as a nontraditional couple. \"I don't know if you'll ever want me the way I want you, but sex isn't everything in a relationship, Ian. We have everything else, don't we?\"\n\n\"You're right, Dessi. I care about you, and I do love you. I even want to want you in that way. It would be so much easier if I did. Sex is only a part of who we are, it's not what has to define us, but still...\"\n\n\"So how about it? We could be together- I could even move up here and find a job. We'd be best friends, we could have sex to keep me happy and to give you some release. I...I might even be OK with you...you know...trying sex with a guy. I don't know. We could figure it out.\"\n\n\"You mean like I live some double life?\"\n\n\"No, just...we love each other, and we're together, but you have these needs that I can't meet, so...we get creative.\"\n\n\"That's...different. But tempting. I'll...think about it, OK? We can talk more when I get home in July.\"\n\nThat was more than she had expected. An \"I'll think about it\" was a step in a good direction. Later that afternoon, Dessi packed up and headed home, never to see Ian again.\n\n&nbsp;\n\n******* \n\n&nbsp;\n\nThinking back on that weekend while she rubbed her clit, Dessi brought herself to three small orgasms. She smiled to think what her husband was going to experience that night. She washed up and put some of the pictures in a zippered bag for Gina, pausing to look at the last photo of Ian she had. He was wearing shorts and a white t-shirt, his gym bag in hand, leaning against the trunk of his car and smiling at the camera. He was on his way to meet Patrick at the pool as Dessi was leaving to go home. He had promised to be back home in July and said that they would see each other a lot that month. But a few weeks after her visit, he and Patrick and another guy from their team died in a car accident. No one even knew to tell Dessi- his family didn't think to contact her. When he didn't answer her emails, she visited his house in July. His mother answered the door and talked almost like a robot. \n\nDessi remembered the shock and grief of that time. She was lost, adrift at sea. She was afraid she would go back to a different life, a different Dessi. She had ended up at a church, which was where she eventually met Rick. He had been patient, kind, affectionate...she hadn't been ready to talk about Ian, and Rick had never asked. But it might be time to tell that story.\n\n&nbsp;\n\n******* \n\n&nbsp;\n\nAfter dinner with her family, Dessi was picking up plates for Rick to wash when the doorbell rang. Grabbing the bag of pictures, she met Gina at the door. Dessi invited her in, but Gina said, \"Maybe next time, I don't want to lose too much daylight on my drive.\" \n\nThe two women chatted on the doorstep for a minute. Alex pulled in the driveway, back from work. He walked in the house and Dessi stopped him. \"Alex, this is my friend Gina.\" Alex said hello then went inside as Dessi told him where to find his dinner. As they watched the boy go in the house, Gina commented, \"Well he certainly doesn't get his height from you. Is your husband tall?\"\n\nDessi quickly turned her head and looked at Gina, who was smiling. Dessi's eyes softened, then she pulled the door closed. Indicating that they should walk to the car together, Dessi put her hand on Gina's elbow.\n\n\"Gina...I debated not telling you, but I feel like I have to. I'm hoping you'll come back to visit, and we'll have to talk more before then. You should know- Alex...my son...he's Ian's.\"\n\nHaving just gotten to the car, Gina put her hand on it and leaned against it. It was like the wind had been knocked out of her.\n\n\"Dessi, I didn't...are you sure?\"\n\n\"Positive. It happened a week before Ian died. I wasn't with another man until I got married, almost three years later. He was an accident, of course, but I couldn't just...you understand.\"\n\nGina silently nodded, still shocked. \"Does he know?\"\n\n\"He knows Rick isn't his biological father. He was 2 when Rick and I married. I had started going to church after Alex was born, mostly because they had free child care and I needed the break. I met Rick there, and he didn't need to know about my past- has was...is...so kind and gracious. He's the only dad Alex has ever known. I've never told Rick about Ian and I've never told Alex either. At first it hurt too much, then I was embarrassed. And your parents didn't...\"\n\n\"I know Dessi. They weren't the warmest people after they lost Ian.\"\n\n\"And then, it just became...the past. But meeting you yesterday...it seems like it's time to tell that story. Eventually, I'd like to see your parents and introduce Alex.\"\n\n\"We'll talk Dessi, we'll talk. Maybe next time I can bring my little brood with me- when you're ready, of course. I...I want us to be a part of Alex's life...and your life! But you're going to have to talk to Rick and Alex first.\"\n\n\"Yeah, I know. He's a good man, but it will be hard. I just don't know where to begin.\"\n\n\"Well, Dessi, the best advice I got about that was to go home, give him the ride of his life, and then talk about what's on your mind.\"\n\nDessi giggled, and Gina joined in until both women were laughing next to the car. As laughter resolved into smiles, Gina got in her car and looked longingly at the house. \"This has been a good weekend, Dessi. Thank you so much for sharing with me.\"\n\nThrough the open window of the car, Dessi leaned in, touched Gina's cheek with the backs of her fingers, and said, \"I'm so glad we could talk, Gina. We always need more stars to fight the darkness, right?\" \n\n&nbsp;\n\nThat concludes A Misdirection of Affection. I appreciate your votes and your feedback. After a short break from writing, I'm planning to tell the story of Gareth and Gina's relationship from her college days, told from Gareth's perspective. "
    ],
    "authorname": "nageren",
    "tags": [
        "discussion",
        "male virgin"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/a-misdirection-of-affection-ch-03"
}