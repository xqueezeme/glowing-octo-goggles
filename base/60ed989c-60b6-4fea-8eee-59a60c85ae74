{
    "title": "Treasure Ch. 76-80",
    "pages": [
        "Orlando, Florida \n\nDonna stirred from her sleep, her face tucked in to her husband's shoulder as his chest rose and fell. She was sore, satisfied, hung over and tired in some order she would figure out later. They had been back home for a few days, as Roadkill had to get back to running his company and she had shifts at the hospital. \n\nTheir honeymoon wasn't what they expected, not with all the drama with Rori. She smiled as she thought back to how much things had changed in the last two weeks. Her daughter was finally happy, she could see it in her eyes and hear it in her voice. She wasn't an unwanted crazy person that couldn't be trusted, she was a strong werewolf who now had a Pack of her own. So many things in her life made sense now. \n\nShe let her hand drift down his graying chest hair and over his stomach. It wasn't flat, but it wasn't flabby either; it was the kind of body you got from hard work and harder partying. Last night's blowout at the Club had been epic, and Three Tequila had shown her that her tolerance had improved quite a bit since she was young. The combination of fried food, beer and shots caught up with her, and she ran into the bathroom and threw up in the toilet. \n\nShe felt her hair being gathered back as she finished, flushing it and rocking back on her knees. Roadkill handed her a cup of water, and she rinsed her mouth out before spitting it in the toilet. \"You all right,\" he asked. \n\n\"I feel like I'm too old to drink like that,\" she said. \"God, why did I do shots?\" \n\n\"Because all the Ladies were doing them.\" He helped her to her feet and handed her a large glass of water and two Advil. \"Chug this and then brush your teeth, I'm taking a shower.\" \n\nShe finished up, then joined him in the shower. \"How are you feeling?\" \n\n\"All right. I'm a little more used to this life than you are. If you alternate shots with a glass of water, you'll do better. More breads, less grease helps too.\" \n\n\"Those onion rings the Prospect makes are fantastic, though.\" She helped him with his back, then he turned around and helped her. The mutual aid had predictable consequences for the newly married man, and his thick cock was soon poking her in the back. \"Didn't you get enough last night,\" she asked. \n\n\"Like a man could ever get enough of you,\" he said as he pulled her back into his chest. \"I know you aren't up for anything, though.\" \n\n\"I can help you with your little problem,\" she said. \n\n\"Don't ever call that little,\" he teased. She moved him so his back was blocking the spray, then got the Ivory Soap bar from the holder. Using her hands, she coated his shaft with soap and started to jack him slowly. \n\n\"Shit that feels good, babe,\" he said. She was using both her hands with a light touch, moving up and down but also rotating her hands. Possum made sure she was keeping her hands good and soapy as she moved quicker, especially as she started to focus attention on his sensitive head. \"Oh god...\" His legs started shaking as she used her left hand, squeezing his shaft firmly as it jacked up and down, while her right palm was twisting back and forth on the head. He let out a loud moan as his hips bucked forward and he started to shoot his cum onto her stomach. \"Fuck, woman,\" he said as he finished. \"That was intense.\" \n\n\"You like it?\" \n\n\"I loved it, but my dick is still tingling and sensitive. I don't think we can do this all the time.\" He kissed her deeply, then got out so she could do her hair. By the time she was done, he was already ready for work. Trucking companies didn't do suits, he wore jeans and a company logo polo shirt. \"I'll be home about seven,\" he told her. \"Want me to pick something up?\" \n\n\"No, I'll make something.\" Donna was starting a night run at the hospital, so she was going to get some stuff done in the morning and nap in the afternoon. After a shared dinner, she had to leave for work about ten. \"Love you.\" \n\nHe pulled her into his arms and kissed her, leaving no doubt whose woman she was. \"I love you, Donna.\" He walked out to the garage, opening it and starting his motorcycle. She got dressed and started cleaning up the bedroom again. Her stomach still wasn't settled, and she thought about what she might be able to eat as she headed for the kitchen. \n\nShe heard the door open to the garage, wondering why she didn't hear his motorcycle. \"Baby, did you forget something,\" she called out as she walked towards the room. \n\nShe saw the open door, no one was there. She didn't have a chance to say anything before arms were around her neck in a chokehold. She struggled, she kicked, but the blackness came and she fell limp in his arms. \n\n- \n\nRori was cleared by the Pack Doctor to shower in the late afternoon, and it felt amazing. Chase helped her with things, the skin had healed enough but the muscles and tissues were still healing, and she couldn't stretch much. \"This having you help me shower is becoming a trend,\" she teased as he got into the shower at the Pack clinic behind her. \n\n\"Well, quit being a chew toy or a scratching post and I won't need to,\" he teased. She moaned in pleasure as the warm water ran down her body. He did her hair for her, rinsing the shampoo and putting in conditioner before he clipped it up out of the way. He used a sponge to gently clean her body, taking his time. He couldn't resist a nip or suck here and there as he went, and his arousal was obvious. \"If you were healed, I'd be taking you so hard right now you wouldn't be able to walk out of here,\" he teased as he kissed her. \n\n\"If I was healed, I'd be begging for more,\" she told him. \"I'm not quite there yet.\" \n\n\"I know.\" He rinsed out the conditioner and quickly cleaned himself, then turned off the water. He grabbed a towel, drying her hair before gently drying her back and the rest of her body. She stepped onto a towel outside the shower while he dried off, then he had her lean up against the vanity so he could dry her hair. When he turned it off, her phone was ringing. \"Wait here, I'll get it,\" he said. He dashed out of the room and grabbed her phone from the table next to the hospital bed. Pressing her unlock code, he answered. \"Roadkill? Hey, Rori's in the bathroom.\" \n\n\"Chase, I need to talk to her right now, it's important.\" \n\n\"No problem, here she is.\" \n\nChase handed her the phone and as soon as she said hello, he started to talk rapidly. \"Rori, something's wrong. I came home, Donna wasn't here but all her stuff was. Her car is still in the garage, her purse, phone, everything is here but she isn't. Have you heard from her?\" \n\n\"Not since last night, she facetimed me to check in before your party,\" Rori said. Chase could feel her worry over the bond. \n\n\"I've called Mongo and Three Tequila, they're putting the word out to everyone, but no one has seen her today. The house was open when I got home.\" \n\n\"Any blood? Signs of a struggle?\" \n\n\"Not that I saw.\" He was close to breaking down. \"She was happy, she has work tonight, she wouldn't just LEAVE without a call or a note. I had to call and ask, because the only people who wanted her dead were your kind.\" \n\n\"Those men are gone, I took care of all that,\" she said. \"Once I came forward and met with the new council, it didn't take long. There is precedent in our laws that Chase was not aware of. Sawyer helped us with the legal aspects. There is a Pack Affiliate designation that can be given to a human who has proven loyal to the Pack and knows of their nature. The Alpha must designate them to the Council and is responsible for them, and they have to swear not to reveal our nature. The lawyer handling our estate was given this status thirty years ago, and he was the last one in North America to receive it. Chase and I did that for both of you, and your status was approved by the new Council. You and Mom are in no danger from us. In fact, you're considered Pack, so we protect you as much as we do our own.\" \n\n\"God, Rori, I don't know what to do.\" \n\n\"Trust the Club and keep your phone close, we're coming,\" she said as she stared at Chase with a 'don't even try to tell me no' look. \"I love you, Dad. We'll find her.\" She hung up the phone and walked back into the hospital room. \"Help me get dressed, we need to talk to the Council NOW.\" \n\nTen minutes later, they were in the conference room with the Council and most of the North American Alphas. Rori recapped the conversation with her stepfather quickly, then asked for help. \n\n\"None of us were involved, Rori, and you'll get all the help you need,\" Chairman Coffey said. \"Take the jet, we're not going anywhere until after the Alpha challenge, so the pilots are just sitting around.\" \n\n\"Are you leaving your Betas here with the Pack,\" Alpha Michael asked. \n\n\"Actually, I'd like to bring Keith and Coral with me for security,\" Chase said. \"Rori isn't in fighting shape yet and I have no idea what we're walking into. Can you watch over them while we're gone?\" \n\n\"Of course.\" \n\n\"I'd like Charles to go with some of our warriors,\" Alpha Martin said. \"We still own a townhouse down there we can stay in, and some of my men are very familiar with the area.\" They should be, they spent six months watching Rori and her Mom in Orlando with Ashley. \n\n\"That would fill up the plane,\" Chairman Coffey said. \"If you need more, just ask. Hopefully you are back before the challenge, but if only one Alpha pair is gone it won't raise too much notice.\" \n\n\"I'll know more when I get there. The Steel Brotherhood is already working it, and I'm the only one with status in the Club.\" \n\n\"Go pack, I'll have drivers ready in ten minutes,\" Alpha Michael said. \"Just keep in touch.\" \n\nThey all got up, and Sawyer was first to give her a gentle hug. \"It will be all right,\" he told her. \"Do you want Ashley to help?\" \n\n\"I'm not taking your mate from you if I don't have to,\" Rori said. \"We have enough but thank you. If I need her help, I'll call you.\" He hugged his little brother before we left the room. \n\n\"Your bags are coming down now,\" Sally said. \"Alpha Chase asked me to get them ready while you were still on the phone with your stepfather.\" \n\nRori looked at Chase who just shrugged. \"Anything we don't have we'll buy down there. Come on.\" They loaded up two cars and sped to the airfield north of Duluth. The plane was waiting, and ten minutes later they were wheels up and headed for Orlando to find her mother. \n\nCharles looked at the young Alpha pair from his leather seat across the small table from them. \"I have a request,\" he said. \"We will need to be able to communicate while we are down there.\" \n\n\"You and your men want to change Packs?\" \n\n\"It would be an honor to be part of my Granddaughter's Pack, even if it is only temporary. I already cleared it with Martin, he understands the need and expects it.\" \n\n\"Wow.\" They went through the ceremony and Rori felt the new Pack bonds snap into place. \"Welcome to the Arrowhead Pack, Gramps.\" \n\n\"I love you, Charlotte, and this time I'm telling you that when you can't shift and run off,\" he said. \"Get some sleep, we won't get much once we arrive.\" \n\nCh. 77 \n\nOxbow Lake Pack House \n\nAs soon as Rori and Chase had left. and the door was closed, Sawyer was looking at Chairman Coffey. \"Where are Daniel and Craig Forrest right now?\" \n\nAlpha Michael answered instead. \"They were dropped off at a hotel by the Mall of America yesterday.\" \n\n\"It's right next to an international airport,\" Sawyer said. \"We need to know where they are NOW, not where we left them. I don't believe in coincidence; someone kidnapping Rori's mother the day after they leave here with a grudge?\" \n\n\"You're right, Sawyer,\" the Chairman said. \"Do we have anyone in the Twin Cities right now?\" \n\nEveryone shook their heads no. \"Our men returned here after dropping them off, and everyone else was pulled in to search for Gruber.\" \n\n\"Call the hotel and find out if they are still registered there. Does anyone have assets who work for the airlines?\" \n\n\"I have one who works for the Transportation Security Administration,\" Alpha Mitch said. \"I can have her search the security records out of Minneapolis.\" \n\n\"Good. I'm going to give Alpha Malloy a call, see what he can find out from his end.\" He was the Alpha who had been put in temporary charge of the Donner Pack until the challenge between Sawyer and Daniel could happen. \n\n\"Sir, ask him to check Pack records for any land, people or assets in Florida. I would also request that we get any computer hackers in our Pack involved. We need to see if there were car rentals, Uber drives, if their credit cards have been used or if they registered at a hotel. I'd like to have some leads for Rori by the time they land.\" Sawyer's nervousness was clear, he would do anything for the Pack his younger brother and sister led, and he loved Rori like a sister already. \"I feel in my gut those guys are behind this.\" \n\n\"Good idea. Sawyer, don't forget you have to train. After all this, I can't afford to see you lose your challenge and end up with Daniel back at his Pack, that would be a nightmare.\" \n\n\"I understand, Mr. Chairman.\" The meeting went another ten minutes, an update meeting was set just after lunch. Sawyer left the Alphas called for his mate through their bond. \"Where are you?\" \n\n\"Beta's office.\" With the Council taking over the Alpha's office and conference room, Alpha Michael and his mate were doubled up in the Beta's office. It didn't have a separate room, but it did have a smaller table and lots of white boards around. Three laptops were set up, and Ashley was busy dividing the white board into sections labeled Tracking, Assets and Leads. \"Hi baby,\" she said as he pulled her into his arms. By now their wounds were healing well and moving around didn't hurt too much. \n\n\"Setting up the command center?\" \n\n\"Working room, too many Alphas around in the conference room.\" They had drafted a few Enforcers and Warriors with law enforcement experience to help out. It would take them most of the day to get organized, and information was slow coming in. \n\nAt the lunch meeting, they confirmed that Craig and Daniel were still registered at the Mall of America hotel, and that was about it. By evening they had people in place, and some more information came in. The cleaning lady confirmed to one of our people that the beds had not been slept in, and nothing had been charged to the room. They were working on getting access to hotel security camera video. \n\nJust after dinner, they got a call from their TSA insider. \"Both men checked through security last night at the Minneapolis airport, boarding a flight to Atlanta that connected to Orlando. They arrived at five this morning.\" \n\n\"MOTHERFUCKER, I'M GOING TO FUCKING KILL HIM,\" Sawyer yelled as he jumped to his feet. \n\n\"Get in line,\" Alpha Michael said as he pushed him back into the chair. Sawyer may be an Alpha heir, but he didn't have the Alpha position, and this wasn't his land. Sawyer's wolf backed down. \"Keep your emotions in check, boy, that won't help Rori find her Mom. Ashley, give them a call and let them know we've confirmed they are in Orlando.\" \n\n\"Yes Alpha.\" She pulled out her cellphone and started talking. Sawyer told everyone he was going to take a walk and calm down. He pulled on a jacket and walked out the back door into the cool air. \n\nHis emotions were all over the place as he entered the woods, so he muted his mate bond so Ashley wouldn't be distracted while working. His heart went out to his family, and he had to make sure they were all right. Calling Chase, he waited only one ring before he picked up. \"Sawyer?\" \n\n\"Yeah. You heard, right?\" \n\n\"Rori is still talking to Ashley about it. We're set up in the office of the condo down here, but right now we don't have anything to go on. The news doesn't change anything, we figured those bastards were down here. I just don't know what the end game is.\" \n\n\"Money, revenge maybe? Rori inherited the fortune that was coming to the old Council. That would be all right, it's just money. We get her back, and we worry about these guys later. I'll go to war with you if we have to.\" \n\n\"I doubt that will be necessary, it's not like those two have much of a following right now.\" \n\n\"What else are you doing?\" \n\n\"Rori's already been to the Steel Brotherhood clubhouse, they've called in reinforcements from all over the Southeast. She said they would have two hundred members looking for Possum by tonight.\" \n\n\"How's Roadkill?\" He chuckled a little, not being from a biker culture the nicknames amused him. \n\n\"Distraught. If Craig is lucky, we get the bastards before the Brotherhood does. Those guys will make it last for weeks if they get them.\" \n\nSawyer was deep into the woods now. \"I'll call you later, I just wanted to tell you I'm here for you, all of you. I love you, Chase. Let Coral and Rori know I love them so much. Hell, tell Keith I love him like a brother too.\" \n\n\"I will. Thanks for everything, Sawyer.\" He hung up and was about to put it back into his pocket when it vibrated, a text message was coming in. He glanced down at it and froze. \n\nIt was a picture of a bound and naked Donna in a concrete room, one ankle chained to the wall. \n\n\"DO I HAVE YOUR ATTENTION? SHOW THIS TO NO ONE OR SHE DIES.\" \n\n\"What do you want.\" \n\n\"YOU WILL NOT TAKE DANIEL FROM US. WHEN THE CHALLENGE COMES, YOU WITHDRAW. MAKE UP A REASON, BUT IF WE FIND OUT YOU TOLD ANYONE ABOUT THIS, SHE DIES. TAKE A HONEYMOON WITH ASHLEY, AND TWO WEEKS LATER WE WILL TELL YOU WHERE TO FIND HER. IF YOU COOPERATE, SHE WILL BE GIVEN FOOD AND WATER AND A BLANKET. IF NOT, HER BODY WILL NEVER BE FOUND. DO YOU UNDERSTAND?\" \n\nHe didn't have a choice, not now. He couldn't do this to his brother's mate. \"I understand. I'll do what you say.\" \n\n\"GOOD. WE HAVE SPIES EVERYWHERE, WE WILL KNOW IF YOU DON'T. YOU CAN'T TRUST ALL THE PEOPLE YOU HAVE SURROUNDED YOURSELF WITH.\" \n\nAnother photo came through, someone had placed some bottles of water, a blanket and some food bars next to her. \"HER LIFE IS UP TO YOU.\" \n\nSawyer was shaking, he leaned back against a tree trunk and slumped to the ground. The text was right about one thing, events had proven he couldn't trust the Council or the Alphas. He looked back at the text messages from the unknown number; he could have someone check it out, but who could he trust to do that? If the wrong person found out it was over, he would have killed her mother. \n\nHe sat in the snow, staring at the phone, wondering what to do. Who could he trust? The first person he thought of was his mate. After a hundred and thirty-two years of living, he had one now and he needed her like he needed air. He couldn't imagine withholding such a secret from her, and she would be able to help. He opened up the bond, trying to keep his feelings out of it. \"Ashley? I need you to come outside with me now.\" \n\n\"Sawyer, we're busy, I don't have time to play around now no matter how horny your wolf is right now.\" \n\n\"Honey, I need you outside. I know what you are doing, and I wouldn't ask you if it wasn't important. I need you to make an excuse and leave, don't tell them you're coming to see me. I'll explain later.\" \n\nHe knew she would feel his fear and anger through the bond, he couldn't hold it back any more. There was a pause before she replied to him. \"I'm in the hall, where are you?\" \n\n\"Grab a coat and boots and head out the back. I'm about six hundred yards straight back.\" Ten minutes later, she was sliding down the tree to sit in his lap; he might be dumb enough to get his jeans soaked in the snow, but she knew better. \"What I'm about to show you, you cannot tell ANYONE. No linking, it has to be our secret until we agree on how to proceed. Do you understand, baby?\" \n\n\"What's happened,\" she said as she brought her hand up to his cheek. \"Why do you look scared?\" ",
        "\"Promise me no one else will know.\" \n\n\"I promise.\" He brought out the phone and unlocked it; he had already moved to the first picture he received. Her mouth hung open, and the mate bond surged with the emotions she was feeling. She read the messages, then went back and looked at the whole string again, staring at the photos and carefully reading the messages he'd already read fifty times. \"Fuck.\" \n\n\"Yeah.\" She sagged against him, needing contact to ground herself as she tried to make sense of it all. It took a few minutes before she sat up and was ready to talk. \"It's not his Pack doing this, we know they are down there.\" \n\n\"He doesn't want us to think it's him.\" \n\nHe nodded. \"Daniel has to come back for the challenge, and his father will be with him. If I withdraw, under the rules he automatically becomes the Alpha. As a sovereign Alpha, he cannot be attacked or interfered with. Craig figures that if I do what I'm told, they'll think I chickened out and by the time I can say anything, it's too late.\" \n\n\"But why? Two weeks later they are still exposed.\" \n\nHis eyes suddenly got wide as he realized what they were planning. \"True, unless they kill me too. The only way they get away with this is by killing me AND Donna, since she will point to them if she is released.\" He pushed her up and scrambled to his feet. \"We don't have a choice, we have to bring others in.\" \n\n\"The messages warned us about that, said they had spies all around. You think they mean the Council?\" She couldn't believe the new one was corrupt too. \n\n\"I don't know. Right now, if they aren't blood or mate, I don't trust them.\" She took his hand as they started to walk back towards the Pack House. \"I'd trust Chase, Rori, Coral and Keith.\" \n\n\"You can trust Charles and Martin, they are blood and I trust both of them with my life,\" she said. \"I don't know the others here enough to trust them. Nobody else down in Florida.\" \n\n\"Rori is going to want to bring in the Brotherhood.\" She grew up with them, she trusted them more than werewolves with good reason. \n\n\"Let's cross that bridge when we get to it. We have to let them know what to look for.\" \n\n\"We need to do this from our room, I can use the cellphone connection on my iPad to talk to them. I don't want to take any chances they've got an IT guy feeding them information.\" Ashley texted Charlie and asked him to get Rori, Chase, Coral and Keith into a private room with him and Skype him when they were ready. \n\nIt was good they had sent the others out of the house, because Rori's scream damn near broke his screen when he shared the messages. \n\nCh. 78 \n\nRori let her emotions out for a minute, then she calmed down as she sat in Chase's lap and he rubbed her back. Sawyer filled them in on everything and showed them the photos and messages, then his suspicions on their plan. \n\nYou could see the strain on Rori's face. \"We know these two are behind it, right?\" \n\n\"We don't have proof, it's all circumstantial right now,\" Sawyer said. \"It wouldn't be enough to convict them before the Alphas and Council right now, even with their flight. The text message was worded to give them deniability, and since they aren't the Alphas of the Donner Pack, they can't order wolves to do it. We need direct evidence of their involvement, like an eyewitness to the abduction. The best thing would be to have Donna identify one of them.\" \n\n\"We need to find your Mom,\" Coral said. \"Everything in their plan depends on it. The real question is whether they have anyone working with them down here, since they will both have to leave for the challenge in two days. It makes things a lot different if they have help.\" \n\n\"To me, it looks like they have her hidden and plan to leave her alone,\" Keith said. \"They've got her chained in a small space with poured solid concrete, I didn't see any windows so I'm assuming it's easy to secure. If the door is heavy duty and insulated, it's the kind of place she could scream all day and no one would hear her. The chain is not going to be broken by a human.\" He looked at the photo again. \"The water they gave her will stave off death for a few weeks, assuming the temperature in the room isn't too high. I don't see her sweating, so it's probably in a climate-controlled space or underground, which isn't common down there.\" \n\n\"What about food?\" \n\n\"You can go weeks without food, but what is in the photo could keep her going for a week or two easy. She's not going to be able to do much physically, that will help. Really, if they leave more water, she could live in there for weeks. They would never have to return.\" He looked back at the last text. \"They said they would tell you where to find her, not deliver her to you.\" \n\n\"Fuck,\" Rori said. \"Coral's right, finding her is the key. Can we use the number to help find her?\" \n\n\"We don't have any contacts within the cellphone companies, I checked when we were hoping to track their phones,\" Ashley said. \"Our guy at the hotel called both their phones and no one picked up, but he could hear their phones through the door of their hotel rooms. Whatever phones they have now, we don't have the numbers of. We don't even know if the number those texts came from is real or spoofed.\" \n\n\"Orlando is a big damn town, we're not going to find her without help. We could go to the cops,\" Ashley said. \"This is a kidnapping, we bring the FBI in and show them the texts. They have the authority to track that cellphone down for us.\" \n\n\"Dangerous,\" Rori said. \"We involve the human authorities and we risk exposure, plus the Brotherhood won't work with them. Roadkill won't even file a missing persons report, he refuses to go to the police. The Club will help if we bring them in. Craig and Daniel have no connections with them, so any moles they had won't be there.\" \n\n\"Do they have connections where we need them?\" \n\nShe just looked at Sawyer like he was an idiot. \"There are thousands of members, and more affiliates. We're everywhere. Trust me, the Brotherhood is pissed off. If I show them the pictures, they'll take care of things and you'll never find the bodies.\" \n\nThey talked about plans for a few more minutes, then Sawyer brought it to a close. \"So to recap, no one outside of this group is to know about the messages except the Brotherhood, and Rori is going to fill them in. We keep the Council and the others looking for them in Orlando.\" \n\n\"That's it,\" Chase said. \"We'll call you back late tonight after Rori is done with church.\" \n\nThe call was ended, and Sawyer pulled Ashley into a deep kiss. \"Are we doing the right thing?\" \n\n\"You haven't met the Brotherhood like I have,\" she said. \"Those men will do anything to get Possum back. Now, I have to get back to work, and you need to train. Find some enforcers and get some sparring in, but don't get hurt. I'll see you back here in a few hours.\" She got up and left the room, leaving him to change into sweats before he headed to the training facility. He hoped to Luna the challenge would happen. \n\nTwo hours later, Rori and Chase were in Church at the Orlando Steel Brotherhood clubhouse. The place was packed, prospects manned the doors as members from five surrounding chapters joined them. Mongo and Three Tequila were up front with them at a table along with the senior members of the charters that came to assist. \n\nAfter it was gaveled to order, Roadkill told everyone what he had found when he got home. Chase had already hooked his iPad up to the big TV projector and went through what they had found out. When he started to show the text messages he'd caught on screen capture during their talk with Sawyer and Ashley, the place damn near exploded when they saw Possum's condition. Mongo banged his gavel over and over until the place quieted, then Chase continued on. \"The men that have Possum are similar to Club Presidents; the Challenge is for the title, and the loser can be killed or exiled. It's serious shit, and my older brother is the one who they are trying to pre-empt by taking Canvas's Mom,\" he said as he turned to Rori while the photos of Daniel and Craig were put up. \n\n\"These are the two men we are looking for. Three Tequila has already emailed these pictures to all Chapter Officers, if you don't have one get it forwarded or texted to you. As much as I'd like to kill them, we can't just yet. Not until we know where they are holding Possum and we get her back.\" She looked out over the assembled bikers, it was a big and scary group. \"Not that I'd mind if you beat them up a bit, just make sure they can talk.\" \n\nThe men grinned at that, most of them thinking of ways they could torture men who DARED to do this to one of their Club's Old Ladies. If they were brutal, Rori could just imagine what the Steel Ladies were thinking. Chase took over again. \"Daniel and Craig Forrest aren't an easy takedown. Both are big and smart, and they have money to spare. They know Rori runs with the Brotherhood, so keep the cuts hidden and use cages when you can, it will arouse less suspicion. Stay in groups of four or less, if they see the whole Club coming, they'll bolt. We are working to get a location for them, but right now we know nothing. Our best guess is that the room is in an industrial building, or might be a tornado shelter in a more expensive home.\" \n\n\"What about the text? I can help you find them with that, I work for Verizon,\" one of the Jacksonville members was standing up. \n\n\"Yes, if there is anyone with access to phone, police, airport, any other databases that would help, meet up here after we break.\" \n\nMongo stood up next to him. \"We'll pair other Charters up with some of our guys and start canvassing. Hotels, bars, clubs, show the pictures around and see if anyone recognizes them. War room will be here, check in every hour or so and we'll keep a map updated with what we've found out. Make sure all of your cellphone numbers are checked in at the desk up front, we'll use group texting to keep everyone updated. Biggest thing is we don't get stupid and go in too fast with too little. If we spring the trap and don't catch both mice, Possum will pay the price. Now let's go find her.\" There was a roar as the men stood up started to filter outside. Groups of two or three formed up, guys knew each other from various Club functions and it was all pretty smooth. The Ladies manned the communications, sending out group texts with initial assignments for all the Orlando members. \n\nRori and Chase stayed at the Club to help coordinate everything, plus they were the only ones who could talk to Sawyer and Ashley as well as the werewolves. The search continued, the Prospects in the kitchen bringing food in for them as they continued working. So far, nothing. \n\nBack at the Oxbow Lake Pack, a phone call came in just after nine at night. \"QUIET,\" Ashley said as she put her phone on speaker. \"Go ahead, Chaz.\" \n\n\"Yeah, this is Elliot Webster, I'm a TSA supervisor out of the Twin Cities,\" he said. \"I put an alert in the system on Craig and Daniel Forrest, so I would be notified if they tried to fly. I just got the message, they are boarding a plane right now for Minneapolis.\" \n\n\"Shit, they're at the Orlando airport? Let's get them,\" one of the warriors said. \n\n\"They aren't flying out of Orlando, they are flying out of Fort Lauderdale, connecting in Minneapolis for Duluth. Do you want me to have them stopped?\" \n\nThe group looked at each other, Sawyer shook his head. \"We know where they are going, we'll take it at this end.\" They copied down the flight number, then thanked him and ended the call. \"Ashley, call Rori and Charles. Let them know they went from Orlando to Fort Lauderdale.\" He cursed, their job just got infinitely harder. Those cities were almost a three-hour drive apart, and that meant Donna could be anywhere in between. \"We need to bring the Alphas in on this.\" \n\nTen minutes later, everyone was sitting in the big conference room as Sawyer laid out what they had learned. \"The flight arrives in Minneapolis at 7:15, they change planes for an 8:30 flight to Duluth arriving at 9:48.\" \n\n\"We can't grab them in Minneapolis, they won't leave the terminal,\" Alpha Michael said. \"We can pick them up in Duluth, we just have to make sure they get on the plane.\" \n\nChairman Coffey scoffed. \"On what charge? What evidence do we have to arrest them?\" He looked around the room. \"I know we all suspect them, but right now we have nothing except they were in the same town for a while. Sawyer, what do you think?\" \n\n\"You're right, sir. Right now, we have nothing that ties them to the kidnapping.\" He had more, but he couldn't share it with the Council, and even that may not be enough. They could just say people were working without their knowledge as the text implied. \"I just don't want to lose them again. They are rogues, put people on them to watch them.\" \n\n\"I don't want to spook them, if they scent werewolves following them in the airport...\" \n\n\"Sir, let the Brotherhood do it. Rori can call the St. Paul chapter and give them the information, we can use the humans to make sure they get on the Duluth flight where we can pick up the trail.\" Everyone agreed to the plan, it made sense. \"We stay focused on finding two things; Donna's location, and evidence that would tie the Forrests to the kidnapping. We have less than 36 hours until the challenge, after that if Daniel wins, the two are untouchable without solid evidence.\" \n\nThe group broke up, and Sawyer and Ashley made the phone call on Skype to Chase and Rori in their room. \"I'll take care of the watchers at the airport,\" Rori said. \"The news that Donna might be down by Fort Lauderdale has really thrown a wrench in things. We've got the local chapter there involved directly, and we're sending people along the way. It's a needle in a haystack,\" she said as she yawned. \"We're shutting down for the night. Call us if you get any leads.\" \n\n\"Will do. Good luck, Rori, we'll find her.\" \n\n\"I know.\" The call ended, and Ashley turned everything they knew over to the Ladies who were manning the room for the night shift. Sawyer walked her back to their room, both of them nervous that this wouldn't end well. They would continue in the morning. \n\nThe three bikers watched their targets get off the plane from Fort Lauderdale. They ate a late dinner and had a few beers at a bar in the terminal, then boarded a commuter turbo-prop for Duluth. Photos and comments were relayed live to Rori via text, and she forwarded the information to the Oxbow Lake command center. Enforcers watched them as they arrived in Duluth, rented a car and drove to the Radisson Harborview Hotel. They stayed back as they checked into their room, and one of the Enforcers planted a camera in the hallway outside as another rented a room down the hall. The two men didn't emerge again until nine in the morning, when they went downstairs for a lavish breakfast. \n\nSawyer's anger grew and grew as the time approached. Twenty-three hours and he would have to withdraw his challenge or be the cause of Donna's death. \n\nCh. 79 \n\nNo one could have predicted the search would be broken wide open by a five-foot-nothing, pink-haired woman of Japanese-American parents in Silicon Valley, but it was. The Steel Ladies chapter in San Francisco had put out the word to help, and Spider Monkey found it. She worked at Google Headquarters. \n\nThree Tequila took the call as she was opening up the email. \"EVERYONE SHUT THE FUCK UP,\" she yelled as she put the call on speaker. \"Sorry, go ahead Spider Monkey.\" \n\n\"OK, so I was able to trace back the spoofed phone number to the original cellphone,\" she said. \"It's been inactive since yesterday and is registered to Donner Pass Property Management.\" \n\n\"Oh hell yeah,\" Chase said. \n\n\"It gets better,\" she said. \"The thing about the iPhone is that it doesn't really turn off unless you power it down, and location tracking is still enabled. The phone is in Duluth right now at the Radisson Harborview.\" \n\n\"Our suspects are there, this gives us the first direct tie,\" Chase said with a smile on his face for the first time in a day. \"Thank you so much, this gives us what we need to hold these guys responsible. Have a great day, Spider.\" \n\nShe laughed on the other end of the line. \"What, you don't want to hear the rest?\" \n\n\"There's more?\" \n\n\"Of course, silly. I work for Google, we know EVERYTHING. Including how that phone was used with Google Maps to give directions from the airport to a house in Orlando, then to a house in Jupiter, Florida.\" She read off the addresses, the first was Roadkill's house. \"The second is where they stayed for about five hours before going to the airport in Fort Lauderdale. That's where they are hiding her.\" \n\nRori was already pulling up the address on Google Maps, it was a large home between A1A and the beach on the way to Juno Beach. It was set alone, no other houses within a quarter mile. \"I'll send the group text,\" she said. \n\n\"We can't thank you enough, Spider Monkey. Whatever you need is yours,\" Chase said. \n\n\"That's dangerous, I'll have to think about it,\" she said. \"Good luck, get her back.\" \n\n\"Damn right we will.\" He hung up, just as the phones lit up with Rori's group text. \n\n\"TARGET LOCATED, 1987 COASTAL CIRCLE, JUPITER, FLORIDA. RETURN TO CLUBHOUSE OR HEAD TO JUPITER, DO NOT APPROACH. WILL SEND STAGING LOCATION ASAP THANK YOU ALL- RORI.\" \n\nChase was already on the phone to the pilots, telling them to warm up the plane. \"Is there a private airport near there,\" he asked one of them. He told them to prepare to head there and turn around and be ready to fly to Two Harbors as soon as possible after they landed. He then sent a message to Charles and the others back at the condo, telling them to pack quickly and pick them up because we needed to get to the plane immediately. \"We've got to go soon,\" he told Rori. \"Roadkill, you're with us. Mongo, are you going with?\" \n\n\"If you have room,\" he said as Chase nodded. They'd leave two people here to return the rental cars, one of the warriors could fly back. \"Baby, can you stay here?\" He kissed her, and they walked out of the conference room to the main area. People were getting up and looking to him for direction. \"We're converging on Jupiter. I don't need more than thirty people, I prefer those with military or law enforcement backgrounds. Check in with Tequila, strap up and get going. We'll text you the rally point.\" \n\n\"FUCK YEAH,\" one of the men yelled as he headed for the door. \n\nChase, Rori, Roadkill and Mongo piled into one vehicle while Charles, Coral, Keith and two others got in the second van. On the way to the airport, Chase called Ashley in the Oxbow Lake Beta's office and asked her to step into a private area, so they could talk freely. \"We know where she is, one of the Steel Ladies got into their phone,\" he said excitedly. He gave him the address. \"We also have proof they were involved, Rori is forwarding the screen captures now. The phone is owned by the Donner Pass Property Management Company and was used to get directions to both Donna's house and the house we're headed to now. If she's there, we've got him dead to rights. The Brotherhood is heading there now, we're heading to the airport now.\" \n\n\"Oh HELL YEAH,\" Ashley yelled on her end. \"I'll let everyone know up here, you guys get her back.\" \n\n\"Don't do anything yet,\" Chase said. \"We don't know who the moles are, and the last thing we need is for someone to tip their guy off there is a raid coming. In fact, even if we get her back, we're only telling you and Sawyer. I don't want them to take off on us, I want Sawyer to coat his teeth with their blood.\" \n\n\"Mine too,\" she said. \"A lot of us want a piece.\" \n\n\"I'll call you back in a few hours and let you know. If anyone asks, we got a lead on a property in Orlando and the Brotherhood is preparing to storm it.\" \n\n\"Got it. Good luck, Chase.\" He hung up the phone. ",
        "Mongo stared at him. \"You've got rats on your end?\" \n\n\"Yeah, remember the text message that talked about how they would know if Sawyer told someone? The only ones who knows what we are doing here him and his mate.\" \n\nThey were still twenty minutes out from the airport when Mongo got a call from Granite, President of the Fort Lauderdale chapter. \"I've got twenty men surrounding the property, no cars, no activity,\" he said. \"What the fuck am I waiting for?\" \n\n\"Go get her,\" Mongo said. \"If she's there, get her into a car and head for the airport. We'll be waiting for you.\" He hung up as Roadkill looked at him. \n\n\"You're getting her without me?\" \n\n\"Granite can handle it, and I'm not leaving her in that fucking cell a minute longer than I have to,\" he said. \"This shouldn't take them long. I just hope they capture someone there, and they wait until I get there.\" \n\n\"You take care of that for me, Mongo. I've got to take Possum home.\" \n\n\"Fucking count on it, brother.\" \n\n- \n\nMongo left the twenty in place as he met with his team leaders a mile away from the house. \"We think she's being held in the garage or this back shed,\" he said as he pointed to a map they'd printed off the web. \"The house is up on piers, so there probably isn't a poured concrete room there. Team one, front door. Two, back door. Three, garage. Four, changing house. Rest stay around the outside, don't let any of these fuckers escape, and capture them if you can so we can take them to the Woodshed.\" The men grinned. \"Get out your phones, set timers for ten minutes. We go at zero, break cover and go straight for your objective.\" \n\nThey synced up their phones, then drove their cars down the road and parked out of sight of the house. Team One staged themselves at the fenceline, out of sight in the trees. They'd already run a long chain back to a pickup that would pull an entire section of iron fence down when they got the go signal. Teams Two and Four staged themselves by the dunes at the closest spots to the patio doors and the pool's changing house. Team Three was staying in vehicles, they would crash the driveway gate and go straight to the garage. \n\nGranite checked his text messages as the men reported ready to go, four minutes left. He made another call to Mongo while he waited. \"We're about to go in,\" he told him. \"Three minutes fifteen seconds.\" \n\n\"Thanks, brother,\" he said. \"I'll wait for your call. We're just landing now.\" \n\nThe old pickup he was sitting in was first in line, it had a rusty brush guard that would take out the gate without a problem. He reached his left hand into his cut, taking his Glock 19 out and checking the ammunition. \n\nOne minute. \n\nHe called the lookouts posted at each end of A1A where the roads went into the area, his men would send a group text if they saw police coming. Everything was quiet. \n\nTen seconds. \n\nFive. \n\nThe driver put it in gear and accelerated hard towards the driveway, taking the turn at speed and not slowing down for the gate. The metal screeched as it was pushed aside, and ten seconds later they stopped in front of the side door to the garage. Granite was out in a heartbeat, the driver right behind him as he put his size thirteen boot next to the handle and busted the door in. Gun up, he turned on the light as he scanned the garage. \"CLEAR,\" he yelled as he reached the front of the white Lamborghini. \n\n\"CLEAR.\" \"CLEAR.\" \n\n\"OK, check for trapdoors or hiding places while I check with the other teams.\" He almost made it to the door. \n\n\"GRANITE!\" One of his men was looking under a Porsche that was in the shop area of the garage. \"There's something here.\" The others ran over and put the car in neutral, then released the brake so they could push it back. Granite grabbed the handle at the edge of the diamond deck plate and pulled; it hinged back to reveal a pit with a set of stairs, and a scared, naked woman at the bottom. \"FOUND HER,\" he yelled as he went down the stairs. \n\nShe was screaming, her eyes covered as the light hit her eyes for the first time in a day. \"It's all right,\" he said as he went over to her. \"It's Granite, the Brotherhood is here for you.\" He pulled off his cut an draped it over her. \n\n\"Oh God...\" She reached for him and hugged him as she cried in relief. \"Roadkill?\" \n\n\"He's at the airport, we'll bring you to him. Shimmy, go back to the cars and grab some sweats. Cottonmouth, find the key or some bolt cutters.\" He pulled out his phone and called Mongo. \"We got her, let her talk to Roadkill.\" \n\nHe tried not to listen as she was crying and talking to her Old Man. The other team leaders checked in, nobody had been found. The house itself was full of art and expensive toys, just like the garage. \"Close all the doors and see what we can do to fix the gate,\" he told the team leaders. \"Let's make it look like no one has been here.\" \n\nA pair of cutters took care of the shackle around her leg, and Granite helped her stand and pull on a set of sweats that were too big for her. He lifted her out of the pit, and his VP carried her out to the waiting SUV. He got in beside her. \"Clean up and get the hell out of here,\" he said. \n\n\"I'm on it, get her out of here,\" his Master-At-Arms said. \n\nThe driver put the van in gear and Possum looked up at him with teary eyes as she handed him back his phone. \"Thank you,\" she said softly. \n\n\"I'm so happy to get you back,\" Granite said as he held her shaking hand. \"We got lucky.\" \n\n\"I'm in Jupiter?\" \n\n\"Yes, what do you remember?\" \n\n\"I walked into the kitchen, someone grabbed me from behind and choked me out. I woke up in the trunk of a car. We drove for hours, when I was let out, I was in that garage. They... they...\" He could hear the fear in her voice as she started to shut down, and he didn't have to guess what they had done before they left her chained and naked in a concrete pit to die. He pulled her head onto his shoulder, letting her cry it out onto his T-shirt and cut. His hands were clenching, he wanted to beat some people to death, and no one had been there. His club felt cheated. \n\nShe finally stopped sobbing halfway through the trip. \"Do you need to see a doctor? Did they use... I mean, do you need a morning-after pill or something?\" \n\nShe shook her head. \"I'm sterile. I'll get tested back home to make sure they didn't give me anything.\" They were coming up on a Raising Canes, and her head snapped up. \"Can we stop? I'm fucking starving, granola bars and water don't do it for me.\" \n\n\"Sure.\" They went through the drive-through, where they got enough Caniac combos for everyone. \"I love these things,\" she said in between sips of her sweet tea. They finished eating just as they drove onto the airport road. \"Roadkill is going to be mad at me,\" she said. \"I didn't leave any for him.\" \n\n\"I don't think he will be thinking about anything but you,\" he said. Rori had joined the hug, Chase right behind her. He checked his phone, telling them they were five minutes out and getting the response they were gassed and ready. They drove onto the tarmac to where the private jet was waiting. \"Damn, nice ride.\" \n\n\"Nice friends,\" she said. They stopped and Roadkill damn near tore the door off to get to her. She clung to him like a spider monkey as they kissed. \"I love you, baby,\" she said in between kisses. \n\n\"I love you too.\" She hugged him tight, and Roadkill awkwardly shook hands with Granite as he held her up. \"Thank you for everything,\" he said before he walked her to the stairs of the plane, where the pilots were starting the engines. \n\n\"Granite, we owe you and the Club a lot,\" Chase said as Rori hugged the big biker. \"There's a party coming this next summer, we'd like you to come.\" \n\n\"I'd like that,\" he said. \n\n\"You too, Mongo. Thanks for everything,\" Rori said with a hug. \n\n\"Heading back to Orlando?\" \n\nRori shook his head. \"Nope. Back to the North Shore. The fuckers who did this to her,\" he looked towards the plane, \"They're back home and they have no fucking idea what I have in store for them. They were in on the conspiracy that killed my parents and many others, they won't die quickly. Mom will see them suffer.\" \n\n\"That's all I wanted to hear,\" Mongo said as he gave her a hug. \"Get going, we'll clean up.\" \n\nThe jet took off over the water and turned northwest, chasing the sunset the first hour of the trip. Donna spent the whole trip sleeping in her husband's arms, their executive chairs reclined and the armrest out of the way. The rest sat quietly, talking over the Pack bond, about how they would play this. \n\nTheir revenge needed to be complete, public and painful. By the time they landed, they had it figured out. \n\nCh. 80 \n\nSawyer walked out of the Pack House just before eight in the morning, Ashley by his side where she would stay as his Second. His face was grim and serious, and he held her hand tightly as they passed through the assembled people on the way to the Challenge Circle on the front lawn. Wolves from all the Packs had lined the path, wishing him luck and giving him encouragement. They opened the circle around him, and they walked together across the circle to the Alphas. His mother, Colletta, stepped forward to embrace them both before she walked back to stand behind his brother, Alpha Carson Nygaard of the Cascade Pack. \n\nAll five of the Council members were here, as well as almost all the Alphas. The temporary Alphas had made the trip for this challenge after not being here for the aborted trials. After the events of the past week, the Werewolf races were united in their desire for justice and transparency. It was time to take the trash out, and Sawyer was the designated garbage man. \n\nThe entire Donner Pack had been brought here on buses to see the challenge. They cheered as Sawyer came up, wearing thin athletic shorts only despite the twenty-degree weather. His chiseled physique, impressive with his firstborn Alpha roots, was on display. Ashley growled at a few she-wolves who stared a little too closely, she was HIS and they could get their own male. \n\nThe crowd stirred as the sound of a car approaching told them of Daniel's approach. He and his father had stayed in Duluth overnight, getting a breakfast at the hotel before driving here. Their SUV stopped near the Pack House, and Daniel got out the passenger side and walked confidently towards the circle in his stylish warmup suit. His father Craig, the former Council member, was dressed in a fancy suit with sunglasses. Both glared at the people who snarled or growled at them, their wolves hating the disrespect. The crowd parted for them too, but not the same way as they had for Sawyer. They were silent, many of them turning their backs on the two disgraced wolves as they passed. \n\nThere was no doubt whose blood the crowd wanted to see spilled today. \n\nDaniel stopped at the edge of the circle, pulling off his expensive warmups and shoes and placing them in the bag his father carried. His build was impressive; he was a firstborn of an Alpha and had been one for years. This would be no easy battle, not when you saw the two standing near each other in front of the Council, their seconds slightly behind and outside them. Steam rose from their near-naked bodies as they bowed to the assembled Alphas. \n\n\"This morning we will determine the Alpha of the Donner Pack through single combat. As required by our Laws, Alpha Malloy will immediately step aside in favor of the victor. The challenger, Sawyer Nygaard, oldest son of the former Cascade Pack Alphas, has been found to be an acceptable Alpha candidate by both the Council and a vote of the Donner Pack. He has properly and formally challenged Daniel Forrest, former Alpha, prior to him being restored to his position after charges against him were dropped. The battle will end on submission or death, and the winner may choose if the submitting wolf is allowed mercy. Do you have any questions, gentlemen?\" \n\n\"No, Chairman,\" Daniel said with a smirk. \n\n\"I have a request, Mr. Chairman,\" Sawyer said as he stepped forward a pace. \"I would ask that all the Alphas be present for the challenge. Alpha Rori and Alpha Chase are delayed slightly. Oh wait, I think I hear them coming.\" The crowd turned to where a green SUV with tinted glass was driving towards the circle. The Pack members moved aside as it drove through the ring, stopping right behind the two challengers. \n\nDaniel was trying to figure out what was happening, while Craig was fuming with anger at the disrespect being shown. \"THIS IS DISRESPECTFUL, driving a car into the challenge circle? We should expect MORE from an Alpha!\" \n\nThe engine had stopped, and the driver's door had opened while Craig was complaining to the Council. Chase stepped out, closing the door as he glared at the Forrests. \"You are right, Mr. Forrest. We SHOULD expect more from an Alpha.\" He went around to the passenger side, opening the door for Rori. She stepped out to cheers from the crowd, for some it was the first time seeing the Lost Alpha in person. Instead of joining her, they both moved to the rear passenger door. \n\n\"Mr. Chairman,\" Sawyer said, \"Before the challenge can commence, charges of Kidnapping, Rape of a Human, and interfering in an Alpha Challenge have been filed against Craig and Daniel Forrest. Here is the warrant for their arrest.\" He took the paper from Ashley and walked forward to hand it to Chairman Coffey. \"Enforcers, place them under arrest.\" \n\nEight men ran forward, silver chains and shackles held in gloved hands as the two tried to resist. \"This is ridiculous, he has no evidence,\" Craig protested. \"Don't stand for this behavior!\" \n\nAlpha Chase opened the back door, and the crowd went hushed as a middle-aged human was helped to her feet. \"I agree, we can't stand for this. I am Donna King, Alpha Rori's adoptive mother, and I was kidnapped, raped and left to die by these two men.\" Her husband Roadkill got out behind her, he looked ready to kill and was obviously armed. \n\nNo one could make a sound, everyone except Sawyer's inner circle after the text message was out of the loop. Craig was standing with his mouth opening and closing like a carp struggling to breathe on the dock, and Daniel? Daniel has pissed himself. The smell and the sight started people snickering, then it moved to full-blown laughter. Rori and her allies were smiling, they FINALLY had the bastards. \n\n\"The evidence was presented to me,\" Charles said, \"and as a Council member with jurisdiction, I signed the arrest warrants.\" \n\nChairman Coffey looked at the paperwork and nodded, it was all in order. \"Take the prisoners to the cells, and make sure you hose that one off,\" he said. The two were quickly shackled and hauled off as the crowd jeered at them. Daniel was crying, and Craig looked like he had seen a ghost. He turned to Alpha Malloy. \"I guess you get to keep the Pack for a few more hours. The challenge is postponed until the charges are resolved. The preliminary hearing will be at nine o'clock in the dining hall. Sawyer, Charles, meet us in the conference room in five minutes. DISMISSED!\" \n\nSawyer and Ashley went over to hug Donna, who was still shaking after standing up to her rapists. The group hug had to be interrupted, as so many people wanted to see her, and Sawyer had to go. \"Stay with them, I'll link you when we're done,\" he said to his mate. He ran back to his room to dress and get his phone. \n\nWhen he arrived at the conference room, the Council was waiting. \"Why the hell are you blindsiding me with this, Sawyer? You too, Charles, you're on my team?\" \n\n\"We had no choice, sir. This is how we found out.\" He took a moment to connect his phone to the screen in the room. \"I was out in the woods when I got these messages.\" There were gasps of surprise as he pulled them up, especially when the photo of Rori's mom came up. \"The messages said they would know if I involved you or talked to anyone, that they had people everywhere. I didn't know if it was true, but I couldn't take the chance.\" \n\n\"He brought me in along with his immediate family,\" Charles said. \"That's where I've been until last night. When you sent us to Orlando after Donna was reported missing, we worked a parallel path with the Steel Brotherhood. They were the ones who found where she was being held and broke her out, not us.\" \n\n\"They also provided us with proof these two were involved,\" Sawyer said. \"They identified the phone, and the destinations programmed into it match Donna's house and the place they held her. The airport times match the two as well. Add in the victim statement, and we had more than enough to charge him.\" \n\n\"I signed the papers myself on the plane back last night,\" Charles said. \"We didn't tell you, and we wanted to make all this a surprise so the two wouldn't bolt if one of the moles got wind of it.\" \n\nChairman Coffey leaned back and pinched the bridge of his nose. \"All right. Go prep for the preliminary hearing.\" \n\nForty minutes later, the dining hall was filled to capacity, and cameras broadcast the proceedings to all world Packs and to overflow rooms in the Pack House. Once again, viewing was mandatory except for those on duty who would watch the tapes later. Sawyer sat at the Prosecution table, and the crowd booed and jeered the Forrests as they were led in. Craig still had his suit on, but Daniel was wearing scrubs. \n\nThe room went silent as the Council and Alphas walked in and took their seats. \"This preliminary hearing is called to order,\" Chairman Coffey said as he banged the gavel. \"Craig Forrest and Daniel Forrest have been charged with kidnapping and rape of a human and interference with an Alpha challenge. The female victim was under the protection of the Arrowhead Pack as she was designated by the Council and Pack to have Pack Affiliate status. Therefore, the attack is no different than an attack on a Pack Member by two werewolves with no current Pack affiliation.\" There was a gasp in the crowd. \"Mr. Restwell, how do your defendants plead?\" \n\n\"Not guilty, your honor.\" \n\n\"Very well. Mr. Nygaard, present your case.\" Over the next thirty minutes he detailed the movements of the two men, using eyewitnesses, TSA information and the cellphone data that had been cracked by the Google tech. He then showed the text messages and photographs he had been sent, the ones that included the chained and naked Donna. Finally, he called Donna to the stand. She held back her emotions long enough to identify her attackers and detail the rapes and her confinement and abandonment. \"In conclusion, in a desperate effort to head off a valid Alpha challenge, these two men went after a human important to my family. They kidnapped, raped, imprisoned and abandoned her. The Packs deserve their justice.\" He sat down, and a spontaneous applause broke out until it was quickly silenced with the gavel. \n\n\"Mr. Restwell, does the defense have anything to add?\" \n\n\"No sir.\" \n\n\"Very well. The Council will consider the evidence and render a decision in one hour.\" He banged the gavel, and everyone stood as they walked out. \n\nCraig and Daniel were led into a small room with a desk and left with their lawyer as Enforcers waited outside. \"What chance do we have,\" Craig asked him. \n\n\"None,\" Treadwell said. \"They've got you dead to rights and they know it. My advice is to plead guilty and ask for mercy.\" \n\n\"Mercy? From them?\" Craig just laughed. \"Do you remember what they did to Alpha Todd? CHARLES did that with Alpha Martin!\" \n\n\"Look, at this point you're both going to die, it's a question of how it happens. Your only chance at a quick death is the guilty plea.\" \n\nForty minutes later, the proceedings were called to order again. \"The Council has considered the evidence and finds it sufficient to hold Craig and Daniel Forrest over for trial.\" \n\nTreadwell stood, waiting for permission. \"Sir, the defendants would like to change their plea to guilty, and request sentencing include the mercy of a quick death.\" ",
        "\"I see. Do you both understand that by entering a guilty plea, you do not limit the Council in the determination of the punishment?\" \n\n\"We do, Mr. Chairman,\" both men said. \n\n\"Very well. The guilty plea is accepted. The sentence is death, the method of execution is to be determined solely by the affected Pack Alpha. Alpha Rori King, step forward please.\" She did, shanding in front of the Council in front of the table by her brother-in-law. \"Alpha King, the men have asked for mercy, but any mercy must come from you. What do you choose?\" \n\n\"I will show them all the mercy that was shown my Pack members when these two conspired to wipe them out. I will show them all the mercy they showed my mother when they kidnapped her.\" \n\n\"We were pardoned for that,\" Craig shouted. \n\nRori turned to him and gave him a glare that would freeze water at fifty feet. \"I have not forgotten, my Beta has not forgotten, and my family has not forgotten.\" She walked up to the other side of the table. \"My mother is not only part of my Pack, she is part of the Steel Ladies. When they were rescued, I promised them I would make your death long and painful, and I will.\" Daniel was shaking now, and had pissed himself again. \"Alpha Michael, do you have any old buildings you've been meaning to replace?\" \n\nHe thought for a second. \"We have an abandoned cabin, the foundation is shot so we were planning to tear it down next year.\" \n\n\"Would you mind if I used it?\" \n\nHe smiled wide. \"I would be happy to let you save me the trouble of tearing it down.\" \n\n\"Thank you. If you would lead these two pieces of shit there, along with anyone who wants to watch and the cameras, I have a few people who will deal out justice. I just need to borrow some gasoline, a sledgehammer, a steel bar and a knife.\" \n\n\"I think my Beta can help you find all those.\" The proceedings were closed, and the place emptied as they all walked a few miles to the derelict cabin. \n\n\"Chain them naked and spread-eagle on the floor in the main cabin, and rip the door off,\" she told the Enforcers. They pounded spikes into the floor and attached chains, fixing them in place. The silver in the shackles prevented them from shifting. While they were doing it, Roadkill was building a fire in the barrel in the yard. When he had it good and hot, he put a steel bar in to heat up. The cameras were set, the clearing around the cabin was filled with witnesses, and it was time. \n\nRori and Chase stood in front of them. \"Normally, a rapist would be castrated and left to bleed out. Since it was his wife, Roadkill gets the honor. Beta Keith, whose sister was raped in the destruction of our Pack, will make sure they don't die too quickly.\" She handed Roadkill a large knife while Keith put on heavy gloves and pulled the glowing-red steel bar out of the coals. \n\n\"You never fuck with a biker's Old Lady,\" he said just before he grabbed Craig's cock and balls and pulled. One swipe of the knife and they were detached as he howled in agony. He tossed them on his chest, then stepped aside. Keith laid the iron bar over the wound, cauterizing it instantly, and ramping up the pain to the point Craig passed out. \n\nDaniel was begging for mercy, but he didn't get it. He was staring at his own balls lying on his chest when the bar was placed down, and he also passed out from the pain. \n\nThey woke ten minutes later when water was tossed on their faces. The cabin smelled like gasoline, and Rori was standing in front of them with a sledgehammer. \"My Mother died in her own home, pregnant, her arms and legs broken as they burned it around her.\" She walked up towards Craig, swinging the sledge she crushed his right femur as he screamed in pain. \"That was for her.\" \n\nKeith was next, he broke his left leg. The sledgehammer was handed off to those with a need for vengeance until both couldn't move. \"You can pray to Luna all you want, but you're going straight to hell,\" Rori said. She tossed a flaming torch to the side wall, it caught on the gasoline and flames quickly spread. Chase tossed one to the other side, then they backed out. A camera was left in the doorway to record their end for posterity; it lasted a little longer than they did. \n\nRori waited until the cabin had collapsed on itself before she turned around and took Chase's hand. \"Alpha Michael, can you make sure people watch the fire until it's cold?\" He nodded and sent out some assignments. The two walked hand in hand, the crowd parting for them, and they led a procession back to the Pack House. \n\nIt was over."
    ],
    "authorname": "partwolf",
    "tags": [
        "biker",
        "club",
        "werewolf",
        "werewolves",
        "pack",
        "alpha",
        "luna",
        "mates",
        "action"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/treasure-ch-76-80"
}