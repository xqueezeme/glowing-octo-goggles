{
    "title": "The Grey Lady Ch. 07",
    "pages": [
        "Jake could tell his men were itching for a fight as tension filled the air. They were coming up fast on The Ramrod as his men scurried to battle stations. The Ramrod turned: it could obviously see the Gray Lady coming and moved to get positioned for a fight. Jake knew that that ship would be at its most vulnerable position as she presented her broadside during her turn. The Ramrod's gun ports, open and exposing her big guns, could pose a problem however to the crew of the Grey Lady.\n\nThe Ramrod's Captain Harry DuFey was definitely someone who would turn and fight, not run. The man may be an idiot, but from what Jake knew about DuFey, the man loved a good brawl. Jake had met him several times and found the Captain to possess a high opinion of his sexual prowess to the serving wenches in the tavern, though he usually saw them as merely cunts and tits. He did remember that the pirate had a hair trigger temper and maybe Jake could use that against the man. If he could just hit her broadside while she was turning, it would inflict more damage. IF! Sometimes that was a big word.\n\n\"Fire!\" The chase gun belched its shot, the cannon ball flying towards the Ramrod to drop short and wide of its mark. He called out to his men and sails flapped as the Lady dipped in the water, the wind and waves lining her up.\n\nStill heavy in her turn, the Ramrod's gun ports were open and her heavy guns ready to fire. The Ramrod's answering volley sounded, three of her heavy guns sending out smoke and shot. Jake watched in anticipation, keeping an eye as to just where they would land. It would be close but Jake knew that their shot would fall short too. He had no intention of giving them a second chance. He wanted, nay, needed the first hit. Jake watched the opposing ship continue her turn. He knew that DuFey, like him, would not fall short a second time.\n\nThe Lady dipped and Jake waited for the next wave to approach. He heard the splash as the Ramrod's cannonballs missed their mark. One was close enough that the wind sent a faint mist their way.\n\nThe next wave loomed and the Lady started her climb up it. As they approached the crest, he called it. \"Fire!\" Again the chase gun fired and he felt the ship quiver beneath his feet. He watched the cannon ball sail out over the water and held his breath. On the Ramrod, he could see through his eyeglass as her men scattered, trying to clear out of the way of the incoming shot.\n\nIt hit the foremast, causing it to fold over, the fore topsail hanging useless as it pointed towards the deck. The flying jib, jib and fore staysail buckled and drooped, skimming the water and tangling fore and starboard of the ship.\n\nThe Ramrod wallowed into position, her bow pointing towards the Lady. The injured ship shook as her chase gun fired, but the shot didn't make it far, tearing through its own useless sails to head down into the waves. But that action did manage to clear the path for the next shot that the Ramrod would fire. It hit the Lady and damaged her jibboom and bowsprit. Yet, the Lady continued to plow up the space between the two ships.\n\n\"Fire!\" One more shot from the Lady's chase gun, this time they hit the Ramrod hard, taking the foremast out at the base. The mast hung over the starboard side. He would have to board her from port side. Otherwise that mast could damage the Lady.\n\n\"Cathcart!\"\n\n\"Sir!\"\n\n\"Let Mr. Bilge know to prepare port side. Be quick about it!\"\n\n\"Aye, Sir!\" Cathcart ran below to give Bilge the news so he could move the men to the port side.\n\n\"Shrouds First Wave!\" Some of the men on deck started climbing up the shrouds, grabbing boarding lines and waiting anxiously for the command to board. Jake recalculated and came alongside the Ramrod. Bilge was ready and through the gun ports the six pounders began to fire. The direct hit took out the Ramrod's port side gun deck to render their heavy guns useless and leaving a gaping hole in the side of the ship. However, it also made the Ramrod susceptible to sinking. He knew that he needed to hurry and get on board to get the plans.\n\n\"Swivel guns, Fire!\" Several swivel guns let loose with grapeshot, hitting various shrouds, stays, the main sail yardarms and men over on the Ramrod. They answered with their own grapeshot, taking out some woodwork and hitting one of the Lady's gun men. In the lull, Jake shouted what the men had been waiting for. The air between the two ships was alive with the exchange of men as the rocking ships dipped towards each other. The sea could either harm or help, and this time there was just enough sway that the two ships almost kissed masts. If an occasional sabre happened to slice through an opposing pirate's line causing him to plummet into the waters between the two ships, well, these things happen.\n\nJake was ready with his cutlass as the first man landed on his ship. Steel clanged against steel as Jake fought the man. But being eager didn't necessarily mean good as the man was too easily overcompensated. Jake brought the cutlass up the inside, slicing through the man's tendon, forcing him to drop his blade. A quick step in as he sliced into the man's gut ended the fight.\n\nHe grabbed a line and used it to get a running start, sailing over the space between the two ships. One of his crew men -- Carter -- was fighting. He broadsided the Ramrod crewman, sending the man sprawling. Carter gave a salute to Jake before turning to face the man again, ready to continue. Jake knew that Donovan was busy working his way into the bowels of the Ramrod. He hoped that the man was successful.\n\nLooking for DuFey, Jake turned in time to meet the next man head on. This man was more proficient. Jake let the man advance, holding back as he looked for weaknesses. The longer a man fought, the more fatigued and careless a man could get. He heard Mr. Bilge bellow, and knew that the man had just dispatched another one.\n\nHe blocked another thrust from the young Ramrod crewman and grinned at him. They moved back and forth, each giving and taking ground. Another thrust blocked, Jake's cheerfulness was apparently bothersome to the young man.\n\n\"I'll cut that grin off 'n yer face, old man!\" The pirate scowled and stepped up his efforts but Jake was beginning to see mistakes.\n\nJake laughed. \"Old? Your eyesight must be going. Don't they feed you good on this ship?\"\n\nAngry, the young man attacked with renewed vigor.\n\n\"You know, we can stop now and you won't get hurt,\" he told the young pirate dryly.\n\n\"Ah... scared... are... ye?\" The Ramrod pirate was punctuating each word with a swipe of his cutlass.\n\n\"No. Are you?\"\n\n\"I... plan... on... ... running... ye... through...\" The young man launched at Jake, bringing his cutlass up to slice through Jake's upper sleeve. He felt the sting. A little deeper and it could have done real damage. As it was, it was just an irritation.\n\nJake returned the favor, slicing his cutlass down through the layers of clothes to cut a long gash down he pirate's chest and stomach. Not enough to kill him, just enough to hurt and leave a scar.\n\n\"Giving up, old man?\" The man grimaced.\n\n\"Letting you catch your breath.\" The young pirate definitely had a fighter's soul. He gave a loud cry and launched towards Jake again, cutlass raised and murder in his eyes. Jake dispatched him quickly, leaving him sprawled on the deck. He glanced around, still not finding DuFey anywhere.\n\nHe looked back at his ship. There was some fighting going on. He needed to find Bilge, get the documents and get gone -- the Ramrod would not stay afloat forever. And they could not stay forever. Time was running out quickly. Standing beside him was one of his crew. The man smiled at him before jumping in the fray, sword clanging in challenge.\n\nHe could see Bilge fighting his way over to Jake. The large man with his bald head and gold earring certainly looked the part of a pirate. He could see that the man trying to get over to him but the pirate that Bilge was fighting wouldn't give way. Suddenly the first mate in frustration, feinted and pivoted, reaching out to his opponent's arm and waistband. He swung the man up over his hand, turned towards the railing, pitching the man into the ocean, then giving out a loud barking yell.\n\nDamn!\n\nCathcart fell and another crew man filled the space left. Bilge moved to his other side and the two of them fought their way below, looking for Captain DuFey's cabin below. The Ramrod shuddered, wounded in the water. Jake could tell that she was just hanging on before plunging to the bottom of the ocean. All around them, men fought with sabre or cutlass. Any Lady crew member not fighting was down below, having memorized the list of loot that the Grey Lady was interested in. His men all knew that time was not a friend here, making a conscious effort to find and return back to their ship with the loot. Everyone needed to get busy before the whole purpose for this adventure was lost.\n\nThe Captain and First Mate reached the cabin and tore into it, starting a search for the documents. Jake was somewhat surprised at the filth they found. The first time he had met the man, he had not been too impressed with the personal hygiene of the pirate. In fact, he thought for sure that even if he had not seen the dirty man topside, he surely would smell the pirate, assuming he was down wind of the fellow. Perhaps the man was hiding.\n\nDuFey's poor housekeeping might actually be a problem for Jake and Bilge, making it harder to find the plans for attack. The one saving grace was that The Admiral had told them the basic information that it would contain. Jake was exasperated. Didn't the man ever clean up? He found a ship's log book and noted that its last entry was three weeks ago. The floor was littered with scraps of paper and dirty clothes. Empty wine bottles rolled around, clunking together before rolling back across the floor. Bilge rifled through a stack of papers over by the bunk. Jake discovered a book and glanced through it to find it filled with pornography. He felt like searching through this room was like looking in the disorganized mind of DuFey. Dammit! Where were those documents?\n\nFinally, Jake found them, among the bits of maps and old shipping list and under a particularly ripe wedge of cheese. Jake felt certain that the Ramrod's captain had never expected the real reason for the attack of The Grey Lady. Of course, DuFey thought that The Grey Lady was just a pirate ship. Hell, most of them thought he was a pirate, just like Sam did. Only a few knew the truth. Bilge knew. Toby knew. So did a few others. And maybe eventually Sam would know too. Meantime, the less that knew, the better. After all, all the crew really cared about was how much their portion of the booty was this trip. The Quartermaster would inform everyone the tally after today.\n\n\"Found them. Now let's get out of here.\"\n\nJake rolled the papers up and stuffed them inside his shirt that was tucked in his pants.\n\n\"Well, look what I found,\" a grinning Bilge latched onto a small chest filled with coin stashed under a table in a corner of the cabin and gave it a kiss. It would act as a good cover for the real reason for their attack. Besides, one never turned down coin!\n\nAs they headed for the door, Jake noticed a large trunk in the corner with a bit of frilly fabric sticking out. On a hunch, he crossed and lifted the lid. Inside he felt as if he had struck more gold. It appeared to be some unlucky lady's trousseau. He grabbed a few things, slinging them over his arm before heading back topside.\n\nThey stepped out to find the Grey Lady's men heading back to the ship, loaded down with loot. Jake pitched the clothes over to a crewman headed to the Lady. The Ramrod's deck was littered with the dead and dying from both sides. Jake found a Lady's crew member still alive -- Jimmy -- a grabbed the young man's arm. The young man gave a groan as Jake lifted him up and tried to speak.\n\n\"Hang in there, Jimmy. You'll live. We'll get you back home.\" He turned to shout at his crewmen lagging on the Ramrod. \"Make it quick, men!\"\n\nBilge handed off his chest to one of their men and bellowed to the crew to wrap it up before finding the Ramrod's gang plank to bridge it across the two ships. He grabbed another fallen crew member, carrying him across to the Lady.\n\nJake crossed back over using the plank for a bridge and laid Jimmy on the deck, leaning the young man's back against the railing. A quick look told him that the man should survive the skirmish.\n\nBack aboard his ship put him in contact with the odd Ramrod crew member that had made it across. There appeared to be only about half a dozen of them left. A couple made a wild leap back over to their ship. Another couple attempted to fight their way through but they were quickly dispatched. One decided to jump in the ocean.\n\nBilge called cast off and the few stragglers came running, either jumping to make it back to the ship or scrambling across the makeshift bridge. The First Mate picked up the plank and shoved it into the water between the two ships before pulling away from the wounded Ramrod. As it wallowed in the water surrounded by debris and the odd crewman, a wave splashed over the side to tip saltwater in her open gun deck, causing the Ramrod to start listing ever so slightly.\n\nFrom nowhere, Donovan appeared from the bowels of the Ramrod. His appearance caught the Ramrod crew off guard. The young pirate was running at full speed, weaving in and out of the men and leaving a wake of cries and curses. Donovan was quite literally running for his life as being left on the Ramrod could result in a very painful death.\n\nWith a final burst of speed, the young man headed straight for the railing of the Ramrod, leaping off and throwing himself at the Grey Lady's railing. On the Lady, her crew was cheering him on with shouts of encouragement. The space between the two ships felt unsurmountable.\n\nA shot rang out from the Ramrod and Donovan jerked, the bullet obviously finding its mark in his back. It appeared that he wouldn't reach his ship after all. The young man was falling and despite the pain, he threw out his hands, trying to at least touch the railing. An answering shot came from the Lady as Mr. Bilge fired, killing the Ramrod pirate that had shot Donovan.\n\nOver the railing of the Lady came a hand, large and black. Pain jolted through him, and he screamed through it as Pegs looked down at the young man being held above the water by the large man's hand. Peg's grinned, his small, white peg-like teeth gleaming at the injured Donovan. With very little effort, the African pulled Donovan up and over the railing, dumping him on the deck of the ship. Donovan let out a cry of pain and relief.\n\nBilge took the wheel from Jake as the Lady picked up speed, attempting to put distance between the two ships. Jake crossed over to the young man crumpled on the deck.\n\n\"Welcome aboard, Mr. Donovan.\" Jake grinned. \"A bit flashy of an entrance, but it achieved the desired results. Did you succeed?\"\n\nDonovan looked up at him, panting and grimacing in obvious pain. \"Aye, Sir!\"\n\n\"Good man! We'll get you fixed up so you can enjoy your bonus.\"\n\nThe Grey Lady's crewmen sent up a cheer, slapping backs and already spinning outrageous yarns of this latest adventure. They were anxious to have the loot tallied, eagerly anticipating how much their cut would be. Now that the battle was over, they would be ready to get back to Wexling to spend it on drink and pussy. Some of the things grabbed probably didn't have a large monetary value, like a sewing kit or pewter dishes or a cask of salted pork. Still, he supposed that the odd chest of gold would placate the men.\n\nThe wind caught The Grey Lady's sails as she turned towards home, her speed somewhat hampered by the damage from the battle. Jake stood watching as they distanced themselves from the Ramrod. Bilge was at the wheel trying to pull further away, calling to the men to raise the sails. Jake crossed, looking back towards the wounded ship surrounded by a fair amount of flotsam and jetsam. He heard Donovan speak from where he lay on the deck propped against the side.\n\n\"I set it, Sir. But not in the magazine. I wanted to give us time.\"\n\n\"Where then?\"\n\n\"In the...\"\n\nThe sound was loud. First one and then a second explosion went off as the bomb exploded, setting off the magazine nearby. The men on the Grey Lady stopped their celebration and watched the Ramrod rain down bits of the ship on them and the surrounding area.\n\n\"...ship's pump.\" Donovan looked up at the Captain, grinning.\n\n\"Well played, Donovan.\" Jake turned to grab two men nearby. \"Pim, you and Stan, get Donovan here below to the infirmary.\"\n\nJake figured that with favorable winds, they should be home in several weeks. He called out for a tally to be made as to what repairs were needed, and which ones would have to wait until they reached Wexling.\n\nJake headed to the cabin to check on Samantha and Toby. But as he neared the cabin, he could hear a roaring sound. Outside the door he could see Toby against the wall, unconscious. A quick check told him the lad should be fine once he came to. But what about Samantha? Turning toward the cabin, the splintered door jamb held the door ajar. His heart stopped. The sight inside that greeted him looked more hellish that what he had just witnessed topside.\n\nIn the middle of the room was Captain DuFey, covered in blood. Clutched between his two hands was Samantha. Limp as a child's rag doll, she hung a good foot off the floor, being held aloft by her neck only, covered in blood.\n\nIn fact, everywhere there was blood. The room and everyone in it appeared awash in red.\n\nJake took out his pistol and aimed. There was a loud report as the bullet found its mark. The large man froze, dropping Samantha in the growing pool of blood. A hole appeared in the side of the man's head before he crumpled beside her.\n\nWith the sound of gunfire, some of the crew came running. As they started arriving, Jake knelt beside Sam, feeling for a pulse. It was an anxious moment before he felt it there, slow and faint but steady. He picked her up gently and the men parted to allow him to pass as he carried her to his first mate's cabin. Meanwhile, Bilge ordered two men to started cleaning the room. Another man helped Toby to the infirmary where the lad was found to have a lump on the back of his head and a king sized headache.\n\nThe First Mate glanced at the dead DuFey. No wonder they had not seem him on board his ship. The man had managed to make it over to the Lady without either Jake or Bilge seeing him. He yelled to Pegs to grab the dead pirate and throw him overboard. With the amount of blood that he was covered in, it would be a quick meal for the sharks. Fish food. The man was a pig and sometimes made stupid mistakes and Bilge had wondered how the man had managed to hang on to his ship. It was probably just a matter of time before one of his own crewmen had dispatched him to a watery grave. It was ironic that a mere slip of a woman had gotten the best of the pirate.\n\nJake got fresh water and started cleaning the blood off of Samantha. The quicker he could find where she was bleeding from, the quicker he could stop the flow. He removed each article of clothing, washing the exposed skin and looking for cuts and scratches. She lay there, still and unconscious, as he cleaned her body. A cut on her right palm was all he found and he quickly stitched and wrapped it up.\n\nAround her neck was the start of an almost solid band of black. That and the cut on her hand appeared to be the only actual injuries that she had sustained, which meant that all that blood in the cabin must have been DuFey's. He was thankful for that through he wished she would wake up\n\nSlowly the Captain's cabin emptied as the men finished their work. Though they were definitely efficient, there was still a coppery smell of blood that filled the air. Bilge could almost taste it. He suspected that it would take some time to clear the stench of it out and opened the porthole in an attempt to air out the room. Meanwhile, Jake had wrapped Samantha in a clean sheet and carried her back into his cabin, laying her under the covers before talking to Bilge to get the full report.",
        "Bilge informed him of all that he had discovered, handing him the blade he had cleaned after finding it in a pool of blood.\n\nToby had not been able to answer many questions as to what had happened. The bump on the back of his head had given him quite a headache and his eye sight was a bit blurred, but he was pronounced in need of a day or two of rest. Bilge had questioned him and started putting the answers together\n\nBilge watched as Jake took out the documents and locked them away in the desk. At least that was a success. The First Mate glanced over at the woman asleep on the bunk. He suspected that this time Jake may have underestimated this woman. He knew better that to smile as he wondered just how long it would take the man to realize it himself. The Captain was relatively intelligent, but sometimes we can't see the things right in front of our own nose.\n\n\"You best get your own wound looked at,\" Bilge kept a straight face.\n\nJake momentarily looked at him, confused, before Bilge nodded in the direction of Jake's arm. The Captain downplayed the cut.\n\n\"I've had worse cuts before just shaving.\"\n\n\"Maybe you need a new razor -- Sir.\" Bilge couldn't resist a grin as Jake removed his shirt while Bilge got out the bandages. It didn't need stitches and as the First Mate wrapped it, Jake made note.\n\n\"One of the first things we need to do when we get to Wexling is get a new doc. At least one that can fight. Doesn't do any good to have an infirmary if the doctor goes and gets himself killed on practically the first job out.\"\n\n\"So, how's Samantha?\"\n\n\"She'll be okay. At least, I think.\"\n\n\"Care to let me in on exactly what happened? I am just curious...\"\n\n\"I found DuFey swinging her around like a toy. Course, that was after Sam managed to stick him a couple of time, I think. I decided to put him out of our misery.\"\n\n\"By the way, that fabric you picked up is over there.\" Bilge pointed over to the trunk top. \"And we should meet up with the Admiral sometime tomorrow.\n\n\"How many did we lose?\"\n\n\"Fifteen injured, three of them unable to work right now. That includes Donovan. Six dead.\" Bilge paused. \"Including the fact that someone went down and shot Pete through the bars of the brig.\"\n\nJake stopped and looked at him incredulously. \"What? Did they try to get him out?\"\n\n\"No. Just shot him right through the bars.\" Jake stopped for a moment. \"I thought that you'd find that interesting,\" Bilge said. He could see the Captain's mind heading for the same conclusion he had made.\n\n\"We have a spy on board?\"\n\n\"It may look that way,\" Bilge said quietly. \"Maybe he was part it?\" They both grew quiet, turning over the implications in their minds.\n\nAt last, things quieted down. Toby was in his hammock for a couple of days of rest. Still unconscious, the Captain kept Samantha tucked in the bunk. Cook had brought him something to eat, though he really wasn't hungry. He ate anyway as he knew that he needed to keep up his strength. He sat there looking at her. Despite the beating she had taken, she was doing good. He had told her to be strong, and she had. She had protected herself. He smiled.\n\nSamantha became fitful in sleep and he found that she seemed calmer when he held her in his arms. Needing sleep too, he stripped down and crawled in bed beside her, feeling the warmth of her body. Her skin, though bruised, was soft and warm. He drew her into his arms and in her unconscious state, she seemed to burrow into him, letting loose a deep sigh. He ran his hand along her back, comforting her. She turned her face into his chest, her soft breath tickling the hairs there. Sleep finally claimed him too.\n\nLater that day, Samantha stirred, waking Jake. The look in her eyes told him of her pain. She cleared her throat, bringing her hand up and wincing when she touched the bruise.\n\n\"What happened?\" she croaked.\n\n\"I came in and found DuFey treating you like his favorite toy.\"\n\n\"And?\"\n\n\"I shot him.\"\n\n\"What took you so long?\" She paused. \"Wait, you knew him?\"\n\n\"Captain Harry DuFey.\"\n\n\"The captain of the Ramrod? No wonder he wanted your treasure.\"\n\n\"So, how did you manage to stab him?\"\n\n\"I told him that I would tell him where it was.\"\n\nJake grinned at her. \"Remind me not to reveal any secrets to you.\"\n\nA knock at the door was Cook with broth for Sam. Jake took it and crossed to the bunk, carrying the tray. \"This will make you feel better than anything else.\"\n\nShe slowly sat up, obviously in pain but determined nevertheless. The covers fell away, bunching in her lap to reveal those soft twin peaks, full and heavy and delightfully inviting.\n\nJake rested the tray on her lap and sat beside her on the bed facing her, their bare thighs touching as the broth warmed and wafted its scent to entice her to eat. He watched her breath deep and with a somewhat shaky hand began to spoon the liquid from the bowl to her lips, blowing to cool it. With the first spoonful, most of the contents wound up on her breast instead of in her mouth.\n\nJake quickly leaned forward to lick the drops of broth from her breast, his tongue broadly swiping across the top of her right breast and catching Sam by surprise. He looked at her, his smile distinctly impish.\n\n\"I shall be milady's napkin,\" he told her. She gave him a fleeting smile. Each spoonful gave her strength and eventually the entire spoonful was making it to her mouth, though if the truth be known, he really didn't mind cleaning her up. Apparently, neither did Sam. She took the last spoonful of broth and started to lift it to her lips before stopping and purposefully tipping it to dribble the broth on her breast. She looked up at him.\n\n\"Sorry. My hand slipped.\" She gave him a slight smile.\n\n\"I can see that.\" He leaned in and licked all of the broth off of her. \"Better now?\"\n\nShe nodded as he took the tray from her and set it on the desk. He turned to find her staring at his nude body with neither passion nor fear. He knew that she needed time.\n\nHe crossed to her, smiling, before leaning over to kiss her lightly on the forehead, then crawled into bed beside her and pulled the sheet back with one hand. He looked at her and pat the bed beside him. \"Come on, dear. You need more rest.\" He waited patiently as she slowly scooted down beside him. He pulled the covers over both of them before pulling her in close to his side. As they settle down for sleep, he slowly stroked her hip, her skin smooth and soft. Back and forth his hand traveled across that gentle curve before drifting up to cup her breast. She sighed and he smiled. She was a very passionate creature; she just didn't realize it.\n\nHe could feel her body start to relax. She leaned into him, her arm eventually stealing around his waist and her head tucked under his chin. Her breathing slowed and he could tell that she was dreaming. Low and soft she whispered as he held her close. At first, it was just mumbling -- he could not discern any specific word. Then, she took a deep breath and a name slipped out from between her lips. \"John.\" His hand stopped, her voice sounding worried -- it must be a bad dream. He wondered just who John was.\n\nHe pondered the events of the day until he followed her into somnolence.\n\n*****\n\nIn the morning Samantha awoke to find herself alone in the room. Her fingers touched the bed where he had lain and felt cool sheets. By the sun filtering through the porthole, she knew he had probably been up for some time. Memories flooded back from the previous day and a thought crossed her mind. Jake had not mentioned Toby. Was the lad okay? The last time she had seen him he had been unconscious. Her heart wrenched at the thought that he might be badly hurt! Or even killed! Surely Jake would have told her if that was so, unless he had been afraid to say. She had to find out the truth!\n\nSamantha threw the covers off and tried moving to the edge of the bed. Muscles screamed and she grimaced as she forced herself to stand. Looking around, she didn't see her clothes anywhere. Every part of her body hurt as she crossed over to the trunk. She opened it and started to rummage through it, looking for her clothes somewhere.\n\n\"If you will tell me what you seek, I will help you find it.\" Jake's voice came from over near the door. She stopped, standing up straight and turned to him. Her heart jumped just seeing him. He leaned back against the door, arms crossed.\n\n\"Is Toby okay?'\n\n\"Yes, but you won't find him in that trunk.\"\n\n\"No, I know that. I was looking for my clothes to go check on him. Is he really okay?\"\n\n\"Yes, he's really okay. Oh, he has a nice lump on his head and a bit of a headache, but he should be back to normal tomorrow.\"\n\n\"Well, where are my clothes?\"\n\nHe pushed off, crossing over to the porthole. Beneath it was a bundle of clothes that she had not noticed. He dropped it in her hands and she was marveled at its touch.\n\nShe crossed to sit on the bunk and unwrapped the soft materials. It was obviously a silk dress, soft in a silvery shade of lavender. Sam held her breath. Never had she seen anything so beautiful. She looked up at Jake with a question in her eyes.\n\n\"I liberated it from the Ramrod. As much as I personally prefer you as you are now,\" Sam flushed as his eyes looked at her with definite lust before he continued, \"I feel that if you were to venture out as such I might have a mutiny on my hands. Besides, your pirate clothes do not do you justice. I'm sorry that there is no maid to dress you. I will have to do.\"\n\nHe helped her rise and she could feel his eyes on her, watching as the dress slid over her body. She marveled at how wonderful it felt. Despite her bruises, the material caressed her sore skin. Though obviously made for a woman who was a bit taller than herself and a bit less endowed, the dress could definitely be worn by her. It had a square neckline accented with delicate white lace and puffy short sleeves. The high empire waist fit just under her bust line. Falling in a gentle flair to the floor, the hem of the skirt was decorated with fabric roses about the size of her palm and were in a shade deeper than the dress. A row of tiny buttons ran down the back, causing Jake no end of trouble as his fingers now attempted to button them. Despite the lack of undergarments, Samantha still felt more properly attired wearing the dress.\n\nJake finally buttoned the last button with the aid of a few mild explicatives, then rested his hands on her shoulders. She turned to face him, joy showing on her face.\n\n\"Thank you.\"\n\n\"You look beautiful.\" He ran a finger along her chin and lifted her face up to kiss her, one arm gently wrapped around her and his other hand stroking her hair. It was a soft gentle kiss, lightly probing. Insistent. He raised his head to stare deep in her eyes, his hand still on the back of her head with her hair woven through his fingers.\n\n\"I don't think you realize just how beautiful you are.\"\n\nShe blushed at his words, and yet his arms strangely comforted to her.\n\nHe looked down at her with an intensity that took her breath away. \"I was afraid that I had lost you.\" He paused, taking a deep breath before continuing. \"But you stood up for yourself. I'm very proud of you.\"\n\n*****\n\nThe trip he and Bilge had made to pass on the document to the Admiral had been successful. The Admiral's ship had appeared on the horizon near midmorning and they had rowed over in the long boat leaving the Quartermaster in charge. The Admiral had been very happy with the results, including the blowing up of the Ramrod. They were paid handsomely for the job before Jake and Bilge headed back to the Grey Lady.\n\nWhen he had returned back to the ship, he had found her looking through the trunk. She was naked and bent over the trunk, her ass and pussy prominent. He had kissed that area, drank her nectar, had cupped that ass, had made love to that body.\n\nThe look she gave him when he presented her the dress was worth everything. Funny how one thin dress could make her smile. The way she stroked the soft material -- he imagined her stroking him with such love and care. And yet he hated to cover her nude body -- one of his favorite views of her -- only to be outdone by the view of her under him in bed in the throes of sexual bliss. Even with all the bruises, her beauty almost left him breathless. Then the dress went on, and her face lit up.\n\nThe buttons had proved to almost be his undoing. How in the hell did women do it? His fingers had felt thick and cumbersome, finding it hard to shove the small buttons through even smaller holes.\n\nHer beauty showed a certain fragility. The dress somehow accented her curves despite the fact that it hid them more than the pants and shirt had. The thick blue bruise that surrounded her neck and the finger bruises on her arms were the only outward evidence of what she had endured. That and her weight loss. He really needed to get her to eat more to get back to the weight she was when she arrived on board The Grey Lady.\n\nBut the effect was incredible. It looked as if it had been made just for her. His Moon Goddess. His Grey Lady.\n\nHer hair was soft as he felt it brush against his hands and he gently drew her to him, proud of her strength -- it had taken a lot to fight as she had, especially after all she had been through. But she was learning to be strong. It worried him that she still claimed to have no memory of her past. Or had her memory returned and she just kept it from him? Just who was this 'John'?\n\nHer lips were soft. Her eyes showed in their grey gaze the pain she still felt. But behind the pain he saw something else, something new.\n\nHe held her close, wondering just who she was. "
    ],
    "authorname": "Opensesame54321",
    "tags": [
        "pirate",
        "pirates",
        "high seas",
        "historical romance",
        "regency romance",
        "battle",
        "pirate ship",
        "sea battle",
        "sword fight",
        "amnesia"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-grey-lady-ch-07"
}