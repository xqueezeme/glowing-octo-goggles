{
    "title": "Cherry Blossom Girl Ch. 03",
    "pages": [
        "\u2014Evanslily, thank you.\u2014\n\n*\n\n\"C'mon! Give me that\u2014oh, damn.\" \n\nNoah always loved a vocal woman but tonight Jillian's barrage of instructions distracted instead of aroused. He'd been fucking her long enough\u2014and well\u2014to do without a GPS readout.\n\n\"Yeah-yeah-yeah!\" she chanted in one breath then sagged onto her elbows, groaning while she fisted the sheets. He spanked her reddened cheek to silence her incessant yammering; that it excited her was the added bonus. He watched his handprint bloom across her pale flesh, a sight that should have hurtled him right to the edge except he found himself imagining his hands on darker skin. \n\n\"Don't stop!\" \n\nStartled back into the present, he picked up the tempo and worked her harder to compensate for the moments he compared her to another woman. He grabbed a fistful of coppery-brown hair while his other hand teased her swollen nub in a way guaranteed to set her off. \n\n\"Right there, right there, right\u2014there! Just like that,\" she wailed and shook her head. \"God, baby yes. Just like that.\" \n\n\"Enough talking.\" The smack of his palm and Jillian's startled yip drowned out the rumble of thunder above. \"Show me how nasty you are.\" \n\nJillian didn't disappoint. She pushed her hips back to meet each long, inward drive. The front of his thighs burned as they slapped the backs of hers, faster and harder. He planted his left foot on the bed to give himself more leverage while he filled every bit of her. Jillian hissed and bit her lips when he leaned down and nipped her ear. \n\n\"You love being fucked like a little whore, don't you?\" \n\n\"Uhn.\"\n\n\"I didn't hear you,\" he whispered as he tugged on her hair then slowed his thrusts, keeping her suspended on the precipice between tension and release. He kept pushing her, teasing her; the friction relentless with every prolonged motion.\n\n\"Noah, please...ah, fff-uck!\" \n\n\"Say it.\"\n\n\"Love it...\" her voice cracked from enthusiastic use, \"...love being your whore.\" \n\n\"That's what I thought,\" he told her as he resumed the maddening pace she craved. His fingers launched a twin attack on her nipple and clit that made her come harder for him. \n\n\"Don't stop! Don't. Fucking. Stop.\" \n\nJillian collapsed facedown onto the bed, tremors wracking her body inside and out as his hips pummeled her ass. Within seconds he had her twisted onto her side, intent on finishing her off in her favorite position. Her brown glare turned wild yet her body remained spent and compliant when he planted his hands on either side of her head. He rocked inside her in a rhythm steady enough to entice and slow enough to let her recover. But Jillian hadn't called him over for a sweet, gentle loving. She never did. That was his favorite thing about her.\n\nShe dared him with her eyes. \"Do it.\" \n\nThe needling pain when she dug her nails into the back of his thigh unleashed the animal in him. He reared up onto his knees and straddled her bottom leg. \n\n\"Like this?\" he demanded over the punishing stroke her body invited. He pushed her thigh closer to her chest and pinned her knee to the mattress. Her hand latched onto his wrist, a silent welcome for more. \"Is this...how you like it?\" \n\nHe had her alternating between clawing the sheets and palming her full breasts, her face contorted in sweet agony as he withdrew and plunged into her again. Her voice dropped to a breathy whisper; a \"yes\" that touched the hidden corners of his mind in a way her high pitched antics hadn't. Goosebumps raced along his arms and transformed into energy rushing over his skin, crackling, too good to bear. He closed his eyes and let the memories pull him into the undertow. \n\n\"Oh...damn.\" Her plaintive sighs spun inside his head until they matched the ones that haunted him for weeks, until the deepest part of his mind heard one voice. \n\n\"Noah...\"\n\nNoah.\n\n\"I'm...coming.\"\n\nFeels good.\n\n\"You feel so good.\" \n\nThat was the trigger. \n\nHe climaxed in the next breath; pleasure fizzled the instant his eyes met Jillian's. Deep brown eyes, but no hint of amber. He flopped onto his back while the last of his release drained into the condom. The blissful state of nothingness that came after sex flitted away before he could enjoy it.\n\nHe squashed the images that sprang up\u2014images that had gotten him off better than Jillian just had. He stared up at the ceiling and forced his rebellious mind to go still. \n\nThey lay side by side on their backs while the distant boom of thunder invaded their relaxed silence. Noah exhaled. Jillian inhaled. It struck him how out of sync they were. For some reason the observation soured his mood. \n\nShe turned her head and offered him a lazy smile. \"I think you just killed me.\" \n\nHe ran a finger along her chin and said, \"Welcome to hell.\" Her entire body shook with laughter. \n\n\"I don't know what I like more, your wacked-out sense of humor...\" Her scarlet nails raked his chest. \"Or...\" \n\n\"Just who are you trying to kid here?\"\n\nThis time when she laughed, Noah joined her. Tonight wasn't a total waste after all. The thought held true as she fit her body against his side. This was what he missed about having a woman in his life, this feeling of being surrounded by softness and warmth; the freedom of it. But he never fully relaxed into it with Jillian, which was just as well. \n\nSomewhere between following her words and absently stroking her back, the sweet tang of strawberries and citrus assaulted his nose. The fragrance wasn't bad, just tediously candy-like for a woman past twenty. And it definitely couldn't compete with the delicate, warm scent that had lingered on his sheets after... He squeezed his forehead. This shit had become a twisted ritual. At the rate he was going he'd soon become a perfume Goldilocks. He needed to move.\n\nJillian slipped on an oversized football jersey and filled him in on the details of her settlement while he dressed. Her ex had gotten the townhouse along with the Benz and cash. In exchange, she now had full ownership of the day spa he'd helped her start and less guilt over the marriage she'd sought to end. \n\n\"I can't believe it's really over.\" \n\nAnother man would've wondered if he'd heard a tinge of sadness in her voice. But he wasn't the rebound man, competing with history and building hope on a false attachment. He was here for uncomplicated fun, nothing was expected of him and that suited him fine for now. Still, he stayed and listened because in some odd way, they'd become friends.\n\nThey ended up on her back porch, passing a glass of Riesling back and forth. The June air was a mix of clean, warm and damp\u2014a typical Florida summer night. The remnants of the thunderstorm lit up the night sky on its way the next zip code. Jillian's body curled into a tight ball as she sat with her legs drawn to her chest. Her knees formed a mountain beneath the faded jersey stretched over them. A sealed pack of cigarettes balanced on the summit. \n\n\"What's up?\" he asked.\n\n\"Nothing.\" \n\nHer restless fingers fiddled with the box, an unconscious gesture until he cast a quizzical gaze towards her hands. Her expression turned sheepish and she set the cigarettes on the small table between them. \n\n\"I thought I'd feel different\u2014more excited or at least relieved, and I don't. Weird, huh?\" \n\nNoah didn't know what to add to that so he waited for her to continue.\n\n\"It's kinda sad when you think about it. You spend nine years building a life with someone and then it all boils down to paperwork and legal fees. \"\n\n\"Regrets?\"\n\nShe made a dry \"hmm\" sound. \"A ton. From beginning, middle to end. You know how people say: 'you just know it when you've found the one'? Take it from me, you know when you haven't.\"\n\n\"You knew this even before you got married?\" \n\nShe pursed her lips. \n\n\"My whole family, everybody, got so wrapped in all the wedding hype\u2014the planning, the caterers...it was total chaos. All I kept hearing was that pre-wedding jitters were normal, even my mom said it. But deep down, I knew something wasn't right. And the closer we got to the date, the worse I felt about calling the whole thing off. I remember I literally felt like I was on a runaway train and I couldn't stop it.\" She tilted her head towards him. \"You know, you're the first person I've ever admitted this to?\"\n\n\"Eric never suspected the whole time you were together?\" From what he understood, when Jillian's ex had suggested couples counseling, she'd seen it as a chance to get someone else to break the divorce news.\n\n\"I never told him and he never asked. But I think you know when someone isn't one-hundred percent with you.\" She paused and rubbed her legs. \"We've been battling it out for, what\u2014almost two years? And now that I've finally got my freedom, I don't have a clue what comes next. This whole moving-forward-and-starting-a-new-chapter thing is scary.\"\n\n\"Hate to break it to you kid, but you've doing that already, one day at a time.\"\n\nShe rolled her hair into the black scrunchie she had on her wrist and studied him. \"How did you get to be so wise?\"\n\n\"Must be one of my hidden talents.\"\n\nHis pulse leaped at the chance at sexual gratification when her gaze flew to his crotch. \"I have a few of my own, how 'bout we compare?\" she asked as she took the goblet from him.\n\nNoah shook his head in amazement. \"A mind reader too.\" He grabbed the hem of her shirt when Jillian rose from her chair. \"Uh-uh. Right here.\"\n\n\"My neighbors...\"\n\nHe tugged on her shirt until she stood between his legs. \n\n\"Don't tell me you're too chicken.\"\n\nShe looked to the line of trees along the garden and back.\n\n\"You're on.\"\n\n* * *\n\nWhile Ty walked to the passenger door, Sascha debated asking the question that had ping-ponged in her mind last night and all day today. This should be a no-brainer. He was attractive. Their bratty, sibling banter made her laugh. Yet they weren't as close as they should be. Always a niggling 'but'.\n\nThe thick summer air clung to her skin as she exited the car. \n\nTy tipped her chin up. \"Goodbye, sweetness.\" His goodbye sounded so formal, its finality amplified by the night calm. No 'goodnight'. No 'I'll call you'. No plans for another date; just a sinking feeling as his mouth descended on hers. \n\nHis kiss was slow and charming, like curling up in front of a fireplace under a favorite blanket. She recognized the slow build up of desire from her early days with Alex and the similarity should've encouraged her to forge ahead but for one problem: Noah Jameson. Clarification. How it felt to be near him. There'd been nothing safe and neat about him; she had no familiar MO to draw upon and it thrilled her in a way she didn't understand but didn't want to like. Unfortunately for Ty, the comparison gave her ambivalence something to hang its hat on. \n\nWhy Noah of all people? The randomness of that night had to be a fluke.\n\nShe grabbed the back of Ty's neck and put every bit of heat she could muster into kissing him back. If this was to be the last time they saw each other, then she'd give him something good to remember. \n\nTy made a low sound of pleasure. He pressed against her until she stood pinned between the hard lines of his body and the car's hard, cool metal. She swallowed an uneasiness that skittered along a tightrope between tension and arousal.\n\n\"Do you want to come up?\" It was a spontaneous outburst, one she regretted when the muscle above his jaw twitched. \n\n\"Yeah, that's why I'm gonna head home.\" \n\nTy was such a wonderful surprise yet sometimes she didn't know if he was being suave or sincere. The mystery of it intrigued her even as it put her on guard. Still, according to current conventions, they should've had sex three or four dates ago. Despite his recent subtle and not so subtle hints, he remained a gentleman about waiting. That had to be a testament to how much he liked her, that he wasn't a player. \n\n\"Come up.\"\n\n\"Only if you're sure.\" \n\n\"I'm sure,\" she lied and wrapped her fingers around his wrists in the hopes she'd absorb the heat he radiated since she posed her question. Of one thing she was certain: a man like this wouldn't hang around for dates that ended in the parking lot. \n\nShe didn't know he'd been holding his breath until a whoosh of air fanned her cheek. His full mouth curled into a smile, transforming this half-Italian man into every woman's type. Why were they standing around in the parking lot again? \n\n\"Girl, I've wanted you for so long, you better be worth the wait.\"\n\nShe forced a laugh. \"Sweetness, if that's your idea of charming a girl, then your game needs some serious work.\"\n\nHe cupped her face and his warm gaze held hers as though he wanted her to really see him. \"You won't regret it, I promise,\" he whispered, seeming to know how desperately she needed to hear those words. Car lights passed over them, chasing away the fragile connection they made. \n\n\"Let's go,\" she said gently, relieved to find her words more aligned with her feelings this time. \n\nShe took his hand in hers and led him through the resident parking garage to the lobby. The prospect of being intimate with another man had been playing in her head for weeks. But not because of the man hugging her from behind as they waited on the elevator. No, old curiosities had resurfaced and new ones had been born since she'd gotten a taste of her neighbor. \n\nUntil tonight her dates had ended with chaste kisses in public places. But behind closed doors she wantonly mimicked Noah's touch with such dazzling results, she wondered if maybe, just maybe, the woman she once imagined herself to be wasn't a fantasy ideal. She'd been used to shooing away the question with mental lists of all the ways Alex had made her happy and the contentment that their sex life wasn't bad at all\u2014regardless of what Cosmo said. Now thanks to her recent sexual odyssey, she learned the nuances of touch that led her to sweeter pleasure. She'd get to try out all her discoveries with Ty\u2014and soon, judging by the way he pressed against the small of her back. \n\nThe elevator opened and they began their ascent.\n\nBeep.\n\nSex with Ty. Excitement fluttered in her stomach. \n\nBeep.\n\nWould he be slow and sweet like his kisses? \n\nBeep.\n\nYou better be worth the wait. \n\nNew insecurities contaminated what little air circulated the cab. She was so lost in her maze of thoughts she jumped when Ty ran his fingers up her arm. He chuckled. \n\n\"You're all wound up, baby girl. Nervous?\" \n\n\"A bit, yeah,\" she croaked, which sent a heat of embarrassment up her face. God, she could be such a ninny at times. \n\nPing.\n\nHe reached for her hand, his smile patient and warm like his voice when he promised, \"You're in good hands, you'll see.\" \n\n\"I know. It's a good kind of nervous.\"\n\nHis fingers wrapped around hers. \"You know, you're not the only one who's nervous.\" He didn't show it, but real or not, his vulnerability made her brave as she led him to her door. \n\nThey started kissing the instant the door slammed behind them. She reached for the light switch but he caught her hand and put it around his waist. Every instinct demanded she slow him down but she talked herself out of it. Sleeping with another man was the final act in ending Alex's reign, nerves were natural. She curled her fingers into the \"v\" of his shirt. This was nice. She liked him. Maybe this was what they needed to break down the invisible wall between them.\n\n\"You smell so good,\" he whispered as he nuzzled her neck. \n\nOf all the things to say. \n\nFor a second, Sascha wondered if she imagined it. She traced the line of his jaw then tilted his face up to hers to banish the memory of another man's beard tickling her fingertips. It didn't work. The play of shadows dissolved his features into phantom shapes, making the moment surreal. She kissed him before their chance slipped away. \n\nSlow, heavy footfalls passed her door on their way to a life where she didn't exist. She arched her body into Ty's hands, silently imploring him to make her feel that she mattered. This had to be more than what happened next when two people had gone out on more than three dates. \n\nShe waited and waited for conviction to take root and rise up. She couldn't find it in the endless black around them, not while her ears strained to hear her neighbor's door open and shut. The hard thud dragged her back to the reality of Ty's mouth traveling down her neck to the skin her dress exposed. If she could desire a stranger, then surely she'd feel more with Ty. He was far more worthy. \n\nShe reached for the switch again, needing to see his face, needing reassurance. Lightning flashed quick, quick and gone. She saw pieces of furniture, Ty then darkness. He pinned both of her wrists above her head with one hand while the weight of his body anchored her against the door. \n\n\"Where do you think you're going?\" The practiced silk in his voice was replaced with a roughness she never expected. His sudden dominance awoke a dark curiosity but memories pressed to the surface; fleeting impressions of feeling trapped and unable to breathe. The zipper on the side of her dress slowly came undone. Part of her wanted to shrink away, part of her wanted to push him back. Instead, she commanded herself to stay still and succumb to the feeling of being wanted. \n\nWhat he was doing felt nice. Maybe in a few moments his hands would feel like they belonged on her skin. Maybe after tonight she'd emerge on the other side of the breakup tunnel. \n\nThis could feel right...if she just gave Ty a chance. \n\n* * *\n\nNoah stood with his hands planted on wet tiles while warm water pelted the knot between his shoulders. His post-sex mellowness had gone straight to shit the second he pulled into the garage and saw Sascha strolling hand in hand with another man. There she was all sunshine and smiles in her yellow summer dress\u2014a total one-eighty from the last time he'd seen her. \n\nHe dried off and pulled a pair of cargo shorts and a white tee from the dresser. He dressed, not giving a damn about what was happening on the other side of his bedroom wall. \n\nHe flopped onto the couch, propped his feet on the coffee table and reached for the text book and highlighter. Frankie lay balled up on her favorite blanket at the opposite end of the couch. The dog's contented state was the opposite of his. And all because of one woman. He would've sworn she'd fallen off the planet if it weren't for the times her parking spot lay vacant and the night he'd woken up because of a loud crash coming from her apartment. \n\nHe would've forgotten that night and the following morning long ago\u2014and he would forget, of that he was sure\u2014because there wasn't anything special about her. Well, except for the fact that they were neighbors. \n\nThose first days after he let stupidity rule, he'd opted out of taking the stairs in favor of the elevator just to prove that walking past 406 meant nothing, that seeing her again was no big deal. He'd gotten over it by week's end but the heightened alert in the seconds before he left his apartment or returned home persisted. They'd come face-to-face again; the where and when was the element of surprise he didn't care for. That part got to him more than he wanted to admit. \n\nAll of this could've been avoided if he'd listened to the voice of reason that night. But no, he let his dick do the thinking. But then there'd been little time for rational thought that night. One minute she was writhing over him, breathless and coming. \"I want more,\" she murmured against his neck then fell asleep within the next breath. While she lay snuggled against him he'd fantasized about all the things they'd do come sunrise. That was until she whispered another man's name.\n\nHe'd spent restless hours on the couch, frustrated with sexual need\u2014haunted by the fact that what his body craved lay in his bed\u2014and hating himself for it. To add insult to injury, she treated him like a sexual predator and couldn't bring herself to ask him if they'd had sex. She stood before him all impassive and regal as though stating the question herself or entertaining possibility it happened had been beneath her. ",
        "It had been a scene straight out of an after-school special with Sascha cast as the sainted martyr and he the nefarious punk who dared to put his hands inside her white panties. She probably wanted to rise out her mouth at the idea that she'd said \"fuck\". He'd have bought her act if she hadn't said the things she had. But she'd been fully aware of what she was doing when she invited his touch. The virginal neurosis was just a front for her disappointment over waking up in the wrong bed and that it had been so easy for her to get there. \n\nHe gave up the pretense of doing research, dropped the highlighter in the book and grabbed the TV remote off the table. There wasn't much on at this hour but anything was better than remembering the brittle sound of Sascha's voice before she'd left his bedroom.\n\nSomehow, her polite words landed harder than any obscenity could. Maybe because she'd robbed him of the chance to take a parting shot without looking like the ass he'd made of himself. There he stood with his blood pressure rising while she walked out like a cool breeze. She didn't even slam the door on her way out. \n\nOf course she'd done it on purpose; women were the ultimate warriors when it came to mental combat. What irked him most about that Saturday morning was how he let his anger slash the tethers off his self-control. He made it easy for her to best him, when she'd been the one in the wrong. \n\nProximity and his bruised ego had extended the expiration date on a memory that would've faded by now. That's all this was. \n\nHe focused on the eleven o' clock news, which doled out its nightly parade of negativity and disaster. Dozens of camera lights ricocheted off a mangled black Aston Martin sitting atop a flatbed truck. Robin Montgomery's accident. The iconic image not only captured the crash's obvious violence but more so the callous manner reporters and photographers had swooped in like vultures to pick over suffering and death for the sake of ratings. The camera cut to Luciana Cortazar.\n\nThe woman's South American accent added fire to her determination as she revisited her son's memory. \"These people have never once reached out to any of the victims or their families to apologize. They act like it's nothing, like we will forget. It's not right. We have no choice but to ask the court to make them accept responsibility.\"\n\nA montage retold the story as the reporter narrated the latest installment in the media's favorite tragedy. Another crushed car, relatives and friends crying and clutching each other as the verdict came, Robin Montgomery with her head bowed down.\n\n\"...The emergency responders who reported to the scene will be among the first to testify. Attorney's for the Montgomery family have requested a closed court hearing due to the graphic nature of the injuries sustained by Jaime Cortazar and Courtney Benson.\"\n\nNoah switched the channel. Same story, different storyteller.\n\n\"The trial is slated to go on for several weeks due to the number of witnesses, including the occupants of the two other cars that narrowly avoided a collision with Robin Montgomery that night.\"\n\nHe aimed the remote towards the screen again. \n\n\"\u2014avis, whose emotional testimony at the criminal trial moved several jurors to tears, is expected to testify.\"\n\nHe turned off the TV, refusing to get sucked into the obsession with all things Montgomery. Frankie's head popped up. The sudden hush in the room felt tight. He needed to move and his guest needed a walk.\n\n* * *\n\nIt had to be a cosmic joke. The woman had been a ghost for what, a month now? But there she stood holding that guy's hands to her heart. Was he the one whose name she had whispered? Their intimate body language made Noah decide to head for the pond. \n\nFrankie's nose, on the other hand, found an intriguing patch of grass that warranted thorough investigation. He tugged on her leash and used his best baby talk but she refused to budge; just like a canine version of Aunt Lilly-Beth. \n\nThe moment he looked up was the moment Sascha noticed him. He knew it, felt it, despite the distance, trees and shadows between them. She dropped the guy's hands and turned her head so fast it was telling. Maybe not so intimate. \n\nSuddenly he found his patience with his canine charge had been restored. He didn't bother to glance over to the guest parking lot again. He found the calm he sought well before he crossed the street and walked into the night air, content to let Frankie dictate the pace.\n\n* * *\n\nSascha walked into the deserted lobby, wondering if she'd made a mistake. In the end, it was Ty who called a halt to their evening. But then making out with an iceberg didn't exactly spark romance. He'd been polite enough to stoke her guilt about misleading him and reserved enough to make it obvious she'd screwed up. When she suggested they get together for lunch, he replied with a vague, \"I'll call you and let you know how my week looks.\" \n\nYeah, she wasn't optimistic that they'd bounce back from this. But shouldn't she have been more excited about sex itself instead of hung up on it being a sign of progress? At least you won't have to listen to him calling you sweetness\" if it doesn't work out.\n\nA haggard Annette Alijevic, who lived on the south end of Sascha's floor, walked into the lobby just as she was grinning to herself. \n\n\"Jeremy, slow down!\" Annette cried in an exasperated mom's tone as her six-year-old son raced ahead leaving her to drag their suitcases behind her. She gave Sascha an embarrassed, please-bear-with-me look then blew out enough air to make her bangs flutter about. \n\n\"Long day?\"\n\n\"That's an understatement,\" Annette grumped as they filed into the elevator. \"We were stuck on the runway for almost two hours in Denver.\" She smoothed Jeremy's hair, adding, \"To him, it felt like four.\"\n\n\"No, ten!\"\n\n\"Hold the elevator!\" a familiar voice called out as the door slid shut.\n\nThe night just kept getting better. \n\nOf all the people she would've paid not to see right now, Noah Jameson owned the number one spot outright. \n\nIn the last month she learned that once he left his apartment, it took two minutes for his Jeep Wrangler to emerge from the garage. He went to work before she had breakfast, jogged on Tuesday nights and must've slept in on Wednesdays. Granted, staring out the peephole and peeking through windows to keep tabs on a neighbor was a bit...unorthodox. But stalkerish? Nah. \n\nStalkers didn't use the intel they gathered to actively avoid their target. And she'd done a fine job of it until Annette pressed the door open button. Sascha looked over and silently cursed the woman. At least she had a few seconds to prepare, unlike earlier when she all but jumped out of her skin when she noticed him standing in the shadows. And they weren't alone. Sascha retracted all the un-neighborly thoughts she'd hurled at Annette.\n\nA fluffy, beige dog appeared. Then came a line of red leash. Sascha braced herself. More leash and finally the man who'd taken her masturbation fantasies from gauzy black and white to vivid Technicolor. A slight jerk of his head was the only clue that seeing her came as a surprise. Their eyes collided for a split second; long enough to make her remember those green eyes on her face while he touched her, the way they hazed when she touched him back. Thank goodness for Annette and Jeremy.\n\n\"Thanks,\" he said to Annette who now stood taller. Her face brightened and her body language softened in the subtle way women employed to attract attention. \n\nAnnette pressed the button. \"I think you're going to four, right?\" Man, it must be nice to flash a smile and have the female population fawn all over you.\n\nHis mischievous gaze jumped from Annette to Sascha. \"Looks like we've got a little reunion going.\" How crafty of him. Some things never change.\n\n\"Is that your dog?\" Jeremy asked, his little voice and big blue eyes full of longing. \n\n\"No, she belongs to my aunt. I just got roped into babysitting her for the weekend.\" \n\nThe size disparity between human and canine made the lapdog appear dainty at his feet. The image was impossibly cute and Sascha couldn't stop smiling.\n\nJeremy bent down with his usual high octane speed, his little hands reaching for the dog who ducked behind Noah's leg. Her tail thumped the floor.\n\n\"Jeremy!\" Annette chided. \"Did you ask if it was okay to pet her?\"\n\nHe looked up at Noah. \"Is it okay?\" He started to lunge once he got the approval but Annette caught his shoulder. \n\n\"Be gentle when you approach her or she'll get scared. Put out your hand and let her come to you. See?\" \n\n\"She likes you,\" Sascha remarked as Jeremy knelt down. \n\nJeremy looked up again. \"What's her name?\"\n\n\"Frankie.\"\n\n\"She's so cute,\" Sascha said, unable to help herself as the dog rolled over for a belly rub. She chanced a glance to her right and got caught. Nothing new there. Noah's lips curled up as though he relished seeing her unsettled. Yeah, some things never changed. \n\nAnnette asked, \"Is she a Lhasa?\"\n\n\"She looks like a terrier,\" Sascha said just as Noah answered, \"She's part terrier and a lot of mutt.\" \n\nTheir eyes met again and she offered him a half smile, testing the waters. When didn't scowl or tense like a snake ready to spew venom the way he had that morning, she took it as an encouraging sign. She'd talk to him\u2014that was the mature thing to do rather than skulking around as if she were avoiding a Jehovah's Witness.\n\nSascha's determination grew as Noah allowed her and Annette to exit the elevator first. Annette was too preoccupied with getting Jeremy home to notice Sascha's deliberately slow pace which allowed Noah catch up with her before she reached her apartment. Nervousness bubbled up her throat as his earlier friendliness turned into chilly reserve.\n\n\"Noah.\" She hadn't spoken his name aloud since she told Ana about 'that night'. The sound of it made her self-conscious, as if she'd taken a liberty when she had no right to. \"Do you have a minute?\"\n\n\"What's up?\" he asked in a tone so relaxed, it mocked her efforts to elude him these past weeks. Of course he'd shrugged off their unfortunate night. He didn't seem like the type who'd pine over a PG-13 encounter. Well, not exactly PG-13...\n\n\"I...uh...wanted to talk to you about what happened with us.\"\n\nThey stopped in front of her door. Her brain hurried to find a good script to lead off with.\n\n\"Okay, talk.\" \n\n\"About that night...I mean the morning after we...\" His gaze cooled. Oh, yeah, he hadn't forgotten. \"I wanted to apologize. I said some things that came out wrong. Waking up in a strange place, well it freaked me out. And then when I couldn't remember what had happened right away...\" She winced inside as she recalled her immediate conclusion. \"I wish I'd handled it better.\"\n\nHis eyes drifted down as if he were contemplating her words but when he looked at her, his expression gave nothing away. \"No hard feelings.\" \n\n\"Really?\" She tilted her head as she searched for hidden messages to decode, a habit she picked up with Alex when they'd had to go several rounds before he admitted to being upset. \n\nNoah quirked a brow, as if to say, \"duh\" and nodded. \"It happened, it's in the past. Let's leave it there.\" His tone all but held a nonchalant shrug and though she felt relieved, it bugged her too. Was she that forgettable? \n\n\"I'm glad you see it that way,\" she said, trying to mimic his breezy demeanor meanwhile resenting it. \n\n\"Someone's overdue on her treats.\" Frankie's furry head popped up the instant she heard \"treats\", causing him to smile. \"You have a good weekend.\" \n\nHe turned\u2014dismissing their night together, the weeks of hiding like a criminal and an apology she'd fretted over\u2014and proved just how forgettable she was with his simple salutation. \n\n\"So that's it? You're not going to apologize?\" Even with his back to her, Sascha knew she'd shocked him. Good. \n\nWhat the...? Noah couldn't believe she'd taken that do-the-right-thing tone with him, similar to the one Aunt Lilly-Beth still employed from time to time. Little Miss Priss was the last person he expected to remind him of the ballsy flower child who'd raised him longer than his own mother had.\n\n\"Oh, I'm sorry I didn't break out the champagne after you accused me of forcing myself on you.\"\n\nShe shelved the school teacher attitude right away. \n\n\"I never said that. Okay,\" she amended ruefully when he sent her a sarcastic look. \"It might have come out that way and I'm sorry. But...\" She paused as though debating whether to continue then shook her head. \"You said some ugly things too and you were already pissed off before I even said a word.\" She wouldn't have said that if she remembered everything. He found himself suddenly very grateful for her fuzzy memory. \n\nHer elfin chin came up as if daring him to deny her claim. She seemed to enjoy goading him, yet she retreated and crossed her arms when he took a step towards her. The reaction bothered him.\n\nHe recalled his loss of control that morning from her perspective and realized she expected him to attack. Regret for the way he'd handled the situation now came with fierce disappointment in himself. Whether or not his anger had been justified, seeing her shrink away reminded him why he vowed he'd never be like Hugh. That alone, was reason enough to apologize. \n\nBesides, holding onto a grudge meant he cared and he didn't\u2014not beyond the fact that they were neighbors and that he didn't want every time they ran into each other to turn into a tense ordeal. There was no other choice but damn, he hated how easily she'd brought him to heel. Man, just get it over with.\n\n\"You're right,\" he conceded after a calming breath. \"I was out of line.\" Her brown eyes went wide when he offered his hand. \"How about we call a truce?\" \n\nShe hesitated then reached out her hand to his. \"Okay...I'd like that.\" The half smile she offered matched the tinge of skepticism in her voice. \n\n\"Then we have a deal.\" \n\nHe shook her hand and for some unknown reason held onto it a second longer than necessary before he let go. \"Good neighbors from now on,\" he promised while he held her gaze. She seemed to be trying not the blush and that took a huge bite out of apologizing. \n\n\"Sounds good,\" she said. \"I'm glad we had this talk.\" \n\n\"Me too.\" \n\nShe bent down to scratch Frankie's a chin and presented him with a tempting view down her dress. He averted his eyes, determined to exercise the restraint he'd failed so royally to demonstrate the last time they were together. Truce or not, she'd better get up soon because a saint he wasn't. \n\n\"Well, goodnight.\" Her practiced smile as she disappeared into her apartment was a carbon copy of the ones she'd offered many times before. \n\nIn time he'd forget the way her face lit up when she smiled a genuine smile. If only she didn't live next door. \n\n***\n\nIsabel Cortazar's unofficial bachelorette party began with a spa date that spanned an entire Saturday afternoon. They settled on the fourth of July weekend to accommodate her cousin and maid-of-honor, Rafaela Torres, whose baby was due a few weeks before the wedding. \n\n\"I can barely keep up with non-pregnant people in a spa, can you picture me when I'm out to here?\" she joked as her arms formed an oval the twins inside her tummy seemed intent on reaching. \n\nSince Rafi had become a familiar face over the course of several Christmases and birthday parties at the Cortazar home, Sascha took advantage of the time to get to know Isabel's college friends, Taryn Perrilloux and Sydney D'Alessio, better. In between manicures and outdoor massages, the party of five spent hours talking about current news, Hollywood gossip and inevitably, men. Choosing whether to put Lincoln Park After Dark or Ballet Slippers on their nails had been the biggest decision of the day. By the time they left the quaint bungalow to get ready for dinner, they'd been pampered from head to toe and happy to have been born women. \n\nThe group reconvened at Saffron East, a trendy eatery Isabel had chosen because it offered a compromise for a celebration that included a mom-to-be: great food in a sexy nightclub setting\u2014minus the need to shout over booming bass beats. Modern refinement and dramatic gestures were in the weathered, wide-planked floors and high-backed wing chairs that felt like mini sienna cocoons. Silk lanterns hung from the ceiling in various lengths, shapes and fiery shades. \n\nTheir server, who could've been a beach-boy-next-door, returned to the table and surveyed the boisterous brunettes all dressed in red, except for Isabel, who wore ivory. \"How is everything?\" \n\nSydney brought her napkin to her mouth and whispered to Sascha, \"I swear, they must hire based on looks.\" \n\n\"For real,\" Rafi agreed, her big black-brown eyes full of dismay. \"I look like a heifer in an Abercrombie catalogue.\"\n\n\"No, you don't,\" Sydney said with an exasperated under-look as she surveyed Rafi, whose alabaster skin made her gamine features appear ethereal, \"but you sure eat like one.\" \n\nRafi wielded her fork like a sword. \"Watch it, girl\u2014I'm hormonal.\" \n\nSydney slid the dessert plate they shared towards Rafi as a peace offering before addressing the waiter. \"I'd like to see the manager.\"\n\nTaryn and Isabel sent curious gazes from across the table while the curtain came down on his easy going friendliness. \n\n\"Certainly. I'll have her come over right away. Is there anything I can do for you?\"\n\nPoor guy. The way he maintained his composure made Sascha want to put him out of his misery. From her own experience, she knew that hospitality workers didn't have it easy even on a good day. \"Maybe you can answer a question,\" she said, her voice laced with laughter. \"Some of us want to know if you're all hired based on looks,\" \n\nHushed giggles flew around the table. Jason's face lit up even as he pretended to scowl at them. \"Are you ladies trying to say I wasn't any good tonight?\"\n\nRafi smirked. \"Do you get that a lot?\"\n\nTaryn covered her nose and mouth with both hands while her lively hazel eyes widened with disbelief.\n\nSydney tipped her head to one side and pushed back a mass of sandy brown curls as big as her personality. \"I find that hard to believe\u2014\" she made a point of reading his nametag\u2014\"Jason. I bet you're good\u2014every night.\" \n\nAll eyes locked on Sydney. A stunned quiet blanketed the table and gave way to a calypso of voices and clinking silverware. \n\n\"Oh, no you didn't!\" Taryn said in her lush, Savannah drawl, announcing the collective thought they all shared. \n\nEmbarrassed chuckles erupted and the commotion drew inquiring eyes to their table.\n\nSascha said, \"I guess you just figured out who's the bad one in the bunch.\"\n\n\"We can't take you anywhere,\" Rafi muttered with mock admonishment as she glanced over to Sydney.\n\nSydney leaned an elbow on the back of her chair and struck a confident, screen siren pose. \"I like to make things interesting. You all had a good laugh,\" she pointed out then set her dark gaze on Jason's face. \"And I saved you from having a typical night at work. A little 'thank you' would be nice.\" \n\nHe winked at her. \"Next time you come in, dessert's on me.\" \n\n\"What an interesting proposition,\" Sascha added in a droll tone.\n\nSydney's head whipped around. Laughter rang out as she blinked, opened her mouth then closed it again, looking like a cartoon character. It was the funniest thing she'd done all day.\n\nJason eyed Sascha while he lifted Isabel's goblet and filled it with water. \"Let me get this straight, she's the bad one?\" He executed his task as though perfection would stop the color from rising to his cheeks. He failed adorably. \n\n\"He likes you,\" Taryn gushed once he left their table. Sydney waved her off, saying that being flirtatious was just part of ensuring a good tip. But that didn't stop Rafi from daring her to leave her number on the bill.",
        "\"What are you, my pimp?\"\n\nSascha had a witty remark ready to go but the words died when she looked past Isabel's head. Noah Jameson was talking with the manager. She kept staring, partly out of the shock of seeing him here and mostly the shock of seeing him in a suit. He wore the navy ensemble as if he belonged in fine clothes. His lack of a tie hinted at his signature ruggedness. The beard had been gone for a while now and his hair had grown out. \n\nThe conversation around her faded into a distant buzz when he dipped his head and mouthed, \"Hello.\" Always polite. The observation made her smile back at him and with it came the familiar wisp of interest that stirred whenever he was near. \n\nIn the last few weeks she'd begun to suspect and hope it wasn't all one sided. The rush of excitement she felt was so out of proportion with their exchange, it had to be silly. Oh, to find joy in small moments again. Silly is a sign of progress. \n\nThe women were so engrossed in deciding Sydney's fate, Sascha's secret smile went unnoticed to them all\u2014all except Isabel Cortazar.\n\n* * *\n\n\"You know him?\" It almost sounded like an accusation\u2014one Sascha expected the instant Isabel's eyes skipped to Noah's table. Though friendly curiosity lit up her friend's angelic face, the flatness in her faint Brazilian accent rang loud in Sascha's mind. \"What's the story?\" \n\nShe forced herself to maintain eye contact, aware that today's highlights would eventually reach Alex's ears. \"He lives in my building,\" she replied, hoping her offhand delivery had deemed the information too trivial for further investigation. This had to be cosmic payback for the day at the bridal boutique when she'd let it \"slip\" that Ty had planned to take her to Universal Studios\u2014something Alex had promised her but put off. \n\nHer vow to keep her friendship with Isabel separate from the breakup had been temporarily dwarfed by the urge to show Alex she could be okay without him. Over the weeks and months that passed she began to believe it for herself and the need to present a cheerful fa\u00e7ade in front of Isabel, for his benefit, had faded. But the hollow feeling that she had just tampered with the truth was back, only there was no reason for it this time. \n\nYet, she couldn't very well confess to her ex's sister that she'd hooked up with her neighbor, now could she? Her private life wasn't anybody's business and it wasn't as though she had cheated on Alex. \n\nSo why did she feel...guilty? \n\n\"He's good-looking.\" \n\n\"Yes and you're getting married\u2014eyes forward,\" Sascha said, not daring to look back as she tapped the crystal embellished headband Isabel wore as a tiara. Isabel wrinkled her nose in response. Alex used to do the same thing whenever he couldn't find an adequate rebuttal to something she'd said. \n\n\"It doesn't hurt to look at the menu as long as I don't buy.\"\n\n\"Oh, I bet you'd just love it if Nate said that to you.\" \n\nThe tilt of Isabel's head spoke volumes. \"He knows better.\"\n\nThey caught up with Sydney, Taryn and Rafi then crossed the wooden bridge that separated the dining area from the lounge. Two massive Buddha heads sat in a shallow pool of water beneath it, flanking either side. The lounge itself was pure theatre. Chocolate-brown and pops of orange covered the low slung furniture made of leather and suede. Amber votives dotted the coffee tables like tiny sunsets while a well-dressed cast carried out various scenes. Conversation jumbled with laughter, buoyant and flirty, like the downtempo soundtrack playing in the background.\n\nThe bridal party settled on a pair of sofas along a wall of bamboo stalks. A round of martinis followed, with Taryn being first to raise her glass and say, \"To love being better the second time around.\" \n\nThey were all overcome by the moment as Isabel teared up and offered them a wobbly smile\u2014or at least tried to. \n\n\"I know it's your party and you can cry if you want to\u2014but don't, okay? Hormones remember?\" Rafi told Isabel, who wrinkled her nose and answered, \"Okay, mama.\" \n\n\"To the irony of drinking virgin when you aren't one,\" Rafi deadpanned while she dabbed the side of her nose. Laughter pealed out as their glasses clinked. \n\nTime drifted while they joked about Isabel's in-law dramas and debated how to resolve them. The crowd had grown since a live band had taken the small stage near the dance floor. The music's jazzy dissonance had a folksy spirit mixed with enough pop to be infectious. Sascha's head and shoulders swayed with the piano-tinged drumbeat, pretending to be out there with the dancing couples until she sensed someone watching her. \n\nNoah. \n\nIt seemed appropriate to wave and offer him an acknowledging smile, so she did. Per their truce, he responded in kind while he listened to the man next to him. She sipped her drink and returned her focus to the stage. \n\nMoments later, Sydney's deliberately knowing expression caught Sascha's attention. \"Looks like we have company.\" \n\n***\n\nA simple hello led to Isabel inviting Noah and his brother Rourke to join the group. While they all swapped stories about their night, the brothers explained they were there to support a friend, the band's lead singer. \n\nNoah reached across Sascha's lap to take Isabel's proudly offered left hand, a gesture that had become second nature. Only the Pope's ring had seen more action than that Asscher-cut diamond. He whistled as he inspected the ring, instantly charming Isabel. He cast Sascha a quick, roguish glance as if to let her know that had been his intention all along. \n\n\"Does he realize he's going to have to keep this up?\" \n\nHe aimed Isabel's hand towards Rourke, granting Sascha a closer view of his watch. She frowned. From her days in Guest Services checking in business travelers and VIPs, she'd learned to spot the difference between a designer timepiece and one few people could afford. \n\nRourke leaned in, his expression more kind than impressed. \"He's set a high standard for himself.\" \n\n\"I'm worth it,\" Isabel told him, with a diva-like tilt of her chin. \n\nThe brothers shared a knowing look before Rourke grinned and said, \"Those are the other three words that get a man into trouble every time.\"\n\nWhile Noah seemed relaxed and open in getting to know her friends, his younger brother remained interested yet assessing. Still, Sascha sensed sweetness behind his reserve, a trait reminiscent of Ana. \n\nUnable to help it, she found herself cataloguing the vague differences between the siblings with hawkish green eyes. Dressed in a tan suit, Rourke\u2014with his reddish-brown hair and taller, bigger build\u2014didn't give off an air of mystery like Noah and had no break in his nose to give his face character. No, he was all about the strong jaw and perfect bone structure those Ralph Lauren ads touted. But the fact that he didn't automatically assume Taryn was flirting with him was what made him so attractive.\n\nA few times when Sascha caught him watching her, he smiled his enigmatic smile, making her suspect that he knew she wasn't merely his brother's neighbor. Then she'd realize he was looking past her to the stage and wondered if she'd been projecting. \n\nHer suspicions rose again as he took special notice when Noah draped his arm on the backrest behind her. The mischief twinkling in his eyes made her want to hide her face before she sensed Noah's cut-it-out-man censure. Rourke countered it with an expression akin to an amused dare. \n\nShe and Sage had owned that look throughout junior high when they'd shake down their older brother Leighton for chauffeur services in lieu of their silence about the times he and Deiah Guthrie did homework. In his bedroom...with the door closed. She had to turn away or risk a fit of giggles at how Noah was taking shit from his little brother.\n\nIsabel leaned in conspiratorially. \"What's so funny?\"\n\n\"Nothing,\" she replied, unable to disguise her mirth, \"just having a good time.\"\n\nRourke had focused on the stage again when Taryn said to him, \"She's amazing, isn't she.\" \n\nFallon Sharpe's bruised, quirky voice turned the piano melody into a moody lullaby, veering off to quiet places before it soared above the crowd, eliciting applause. Rourke's face softened with unabashed pride. \"Yes, she really is.\" \n\nHis gaze never faltered as if he couldn't miss a moment of Fallon's last song in the set. No wonder Taryn's attempts to ingratiate herself had failed; the man was lost for someone else. The open adoration on his face reminded Sascha of the months when everything she did and said had centered on seeing that look and feeling that love from Alex. Once in a while she believed she saw a flicker of something close, something that made her hang on and try harder. For what? She reigned in her thoughts, determined to savor every drop of goodness this night had to offer.\n\nOnce the band left the stage and club tunes took over, the men excused themselves from the group. \n\nSydney elbowed Taryn before she cocked her head in Fallon and Rourke's direction. \"Now that explains why you weren't getting anywhere.\"\n\nTaryn pouted. \"I think I liked it better when I thought he was gay.\" \n\nSascha already knew what was coming when Sydney's sphinx-like eyes landed on her. \"You and the other one had a lil something-something going.\"\n\nRafi's brows wiggled suggestively. \"Maybe there'll be some Melrose Place action in Sascha's building.\"\n\nIf they only knew. \n\nThe heat of embarrassment swept across Sascha's face and it got worse when Isabel bounced shoulders with her and said, \"I don't think she'd mind.\"\n\nSascha raised her hands in surrender. \"Are we going to sit here and rip on me or are we going to dance?\"\n\nIsabel, whose heritage included a love of music, revelry and friends, insisted they all take to the dance floor. And whatever Isabel wanted was law. That's how it would be from now until the wedding. \n\nRafi gave a valiant effort but by the third song her energy wilted. Isabel took her home, insisting that the others stay and enjoy themselves. The remaining trio danced until the music slowed to a languid, couples' pace\u2014their cue to head out. Sascha wove through the maze of paired-up bodies and got broadsided by a couple who must've thought they were on Dancing with the Stars. Too preoccupied with sending them a dirty look, she didn't see the next hit coming from behind. The forward momentum launched her to the edge of the dance floor where Noah stood mere few feet away.\n\nShe shrugged. Now that she'd escaped being turned into dance floor road-kill, the whole incident seemed funny. \"It's kind of dangerous to be out here all alone,\" she joked as she neared him, intent on catching up with the girls.\n\nHe took her hand in his. \"I'll be brave if you'll be brave. And I promise I'll try not to step on your feet.\"\n\nUncertain about what to do, she searched for Taryn and Sydney and found them shooing her on with sweeping hand motions as he led her back to dance floor.\n\n\"You're pretty good,\" she told him once they settled into an easy rhythm. He held her like a lady as they glided to the middle of the floor.\n\nHe drew back his head and his lips curled up. \"Liar. I'm just smart enough to let you lead.\" \n\nHe'd done the same thing that night in his apartment. She became more convinced of it each time she replayed it in her head.\n\n\"But that's not always your way.\"\n\n\"I try for balance. Taking control and letting go both feel good in their own way.\"\n\n\"It depends on who's letting go and who's taking control.\"\n\n\"Touch\u00e9. It's a fine dance between responsibility and trust.\" His fingers pressed against her spine as if to emphasize his point. Was he asking her to trust him? The idea made her wary...because she wanted to believe.\n\n\"Like a game,\" she said flatly, wondering if that's what all this was.\n\nHis eyes shimmered with hot secrets as roamed her face. So intense. \"You said you didn't like games.\" \n\n\"But you didn't believe me.\"\n\n\"Maybe I want to.\" \n\nIt must've been obvious that wasn't the answer she expected because his expression softened. He rested his cheek against her temple as if he wanted to soothe her, as if he needed it too.\n\nHis breath fanned her ear when he spoke again. \"Do you remember what I told you?\" God, he could make reading a postcard sound erotic.\n\nThis time it was Sascha who drew back her head. \"You said a lot of things.\" And when they talked their trivial, neighborly talk she wondered if he'd meant them.\n\n\"Women have so much power,\" he said in a low tone as if the very idea turned him on. The pads of his fingers danced across the top of her hand; back and forth, back and forth, as if he'd concentrated his most fervent desires in the littlest touch. \n\n\"A man can think about all the ways he wants to touch a woman. The way she'll look at him when he pleases her.\" His nose brushed hers yet he continued to hold her like a lady. \"He can dream about kissing her and all the things he wants to do with her. But none of it can happen until she lets him.\" The dark anticipation in his voice set off an answering heat inside her.\n\nHis eyes were almost black in the half light. And he was waiting for her, just like he had before their first kiss. But where there was once cockiness, she now sensed doubt. His words hadn't been rehearsed; they were a confession and he seemed uncertain about her. \n\nFor weeks she'd been left to wonder if that night had merely been the result of proximity and hormones. Did he think about her too? She felt brazen now that she had the answer to the last question. And when she touched her lips to his, his kiss told her everything. \n\nNoah made his decision the instant he heard Sascha's moan. Her laughter, her uninhibited joy as she danced with her friends, was that who she really was? And to think he'd once dismissed her as another part of his daily routine; someone he'd have to say hello to because she lived next door. \n\nBut there was nothing routine in the way her tongue stroked his, the way she tugged his hair, deepening their kiss. Her taste rolled through him\u2014just as good as he remembered. He wanted more of it, all of it. Yes, he was done pretending that watching her from afar would be enough, done pretending he didn't want to wake up to her scent on his sheets. Done pretending she didn't matter when he knew remaining indifferent shouldn't require so much effort.\n\nThe first word he heard when the kiss ended was his own name then, \"We shouldn't do this.\" She sounded perfectly unconvinced as she licked his lower lip, the feather light touch made his body feel like stretched wire\n\n\"You're right. Not here.\" \n\n***\n\nHer apartment was twenty feet closer but the condoms were over at his. Or so he hoped as he shut the door and backed Sascha against it. \n\n\"Noah\u2014\" \n\n\"Say it again,\" he mumbled against her neck. There'd be no confusion about who she was with tonight. He heard the smile in her voice when she whispered his name.\n\n\"I...mmm...before we go further, there's something I have to know.\"\n\n\"What?\"\n\nShe sighed when he nuzzled her ear. \"Are you...?\" She pushed at his shoulders until they were face to face. \"Are you seeing anyone?\"\n\nWhat?\n\n\"No,\" he answered truthfully. \"I wouldn't have brought you here if I was.\" But her question had cracked the lid on old uncertainties. He had to know she if was with him all the way. \"What about you?\"\n\nShe turned all haughty princess on him, making him smile inside. Women.\n\n\"I wouldn't be here if I was.\" She drew his jacket closer around her shoulders and the corners of her mouth curved down. \"Guess I just ruined the mood.\"\n\nThe disappointment in her voice pleased him yet her question spotlighted the absurdity of their situation: they were strangers\u2014familiar strangers. Odd how she felt like neither and both at once. \n\n\"It was a fair question.\"\n\nHe brought her hand to his lips and swept them across her knuckles. She reacted as though he hadn't done it countless times during their drive home. He remembered how she enjoyed being touched that first night; in fact she'd seemed starved for it. Tonight was no different. He made a mental note of it and tugged her closer.\n\n\"And no, you didn't ruin the mood.\"\n\nShe reached for his other hand. \"Good, 'cause I think I'd kick myself if I had.\" Her unaffected candor was disarming and made him feel out of his depth. She wove her fingers around his and smiled as if she read him easily. \"I think we zoomed past the point of being coy a while ago, don't you think?\" \n\nHe saw a hint of hesitation veiled beneath her humor. If he were any kind of gentleman, he would've asked her if she was sure about spending the night with him. He contemplated the words, he really did, but he just couldn't bring himself to say them. The twinge of self-reproach that came with it wasn't enough to turn him into a saint or a fool. \n\n\"Where exactly was that?\" He caught a whiff of the fragrance he remembered as he pressed a kiss on the inside of her wrist. \"Here?\"\n\nHis arm circled her waist when she shook her head.\n\nAnother kiss, this time inside her elbow. \"No?\"\n\n\"I think I better show you.\"\n\nAnd did she ever. His whole body tensed as she cradled his face in her hands and brushed her mouth over his. She did it as though she had all the time in the world. Or maybe she too wanted to savor every little touch just in case. Unable to wait a second longer, Noah drew her closer, fitting her to him. \"More,\" he rasped when the tip of her tongue flicked across the seam of his mouth. \"Don't hold back.\"\n\nHer kiss was a hot, wet, free fall into addiction. Every undulation of her hips matched the thrust of her tongue. He shuddered as his mind raced ahead to the moment they'd move together like this with him inside her. Her helpless whimpers when he squeezed her backside, made his cock ache. Still, he wasn't too far gone, he hadn't crossed the line.\n\nWhen the kiss ended, he rested his forehead against hers, his eyes boring into hers. \"Yeah, we're definitely past the point of being coy.\"\n\nShe licked her lips. \"Show me.\"\n\nHis thoughts became murky; all centered around Sascha, all centered on having her at last. Bedroom. That's where they should go. His jacket fell onto the living room floor; the first buttons on her shirtdress came undone. Her nipples puckered under her bra as his thumbs stroked her. The longing would end soon. They would have the night they were supposed to have. Dress gone. Not enough light. He had to see her. He reached for the switch and froze. \n\nThe line. \n\nThere she stood in boyshorts and a bra\u2014both red. No frills, no lace, just a rich red and lots of creamy almond skin. The tomboyish shorts and her slim curves were a sexy contradiction. He circled her, noting the faint striations along her torso, the length of her legs, the tempting swell of her ass. A dancer's body. This is what he'd missed out on the last time. Sascha turned as well, until they stalked each other like partners in a primal dance. She tensed briefly when he drew her back to his chest and pressed his erection against her.\n\n\"I can't decide whether I want to keep looking at you or if I want you naked,\" he admitted as his fingers contemplated the hooks on the back of her bra. \n\nAs much as he fantasized about taking her from behind so he could watch his cock slide in and out of her, he had to see her face their first time. He would look in her eyes the instant he penetrated her and catch every expression as she submitted to him, knowing she was about to be fucked...by him. He had to see it. \n\nShe pivoted in his arms, her brown eyes lusty and shy as they met his. \"We should get rid of some of your clothes while you decide.\" \n\nHe offered himself up gladly, eager to feel her hands on his skin and doubtful he could remain still as she tugged his shirt out of his pants. With her mouth to his neck, her teeth grazed his pulse again and again. His hand fisted her hair, guiding her down the line of his newly exposed skin. He groaned, getting harder for her when her warm mouth closed on his unpierced nipple. Imagine when she did it on the other side. The line.",
        "Sascha's toes curled into the carpet as she shoved his shirtsleeves down his arms. She felt like she was in the arms of an affectionate lion as Noah rubbed the side of his face against her hair. She sensed a tightly leashed power within him that thrilled her and scared her because of the temptation to push and push until he let go. \n\nHer fingers skated over the ancient scroll inked along his side. All night, she'd delighted in the fact that she knew the body hidden beneath his elegant clothes. The voyeur in her relished it. \n\nSascha's second little secret? Her oral fixation. Holding an object in her mouth while her teeth examined its texture triggered the most hedonistic pleasure. And Noah's pierced nipple was the devil's work, calling her to lick, taste...and bite. She ran her tongue across her teeth to dull the need to devour before her lips touched the silver hoop with great care. \n\nOnce she'd bitten Alex hard enough to mark his skin. Not only had she been shocked at her own abandon, she'd been mortified at his response. She vowed right then that no man would ever look at her like she were a freak. But the way Noah arched into her mouth made her question her resolve. Was there a chance he'd be receptive? Adrenaline flooded her veins at the thought. The sound of his groan swept over her as she suckled him and ran her palm over his zipper. \n\n\"Ah, yes.\" At the sound of his voice, heat gathered and coiled into a tight ball sinking lower and lower within her core.\n\nHer last bit of self-preservation kicked in as she felt him beneath her palm. So masculine. So strong. So alive. Did she really think she could take on a man like him? \n\nYes. \n\nWhatever came before him didn't matter. \n\n\"Do it again.\"\n\n\"What\u2014this?\" she asked as she stroked him again. A dark spell took over. \"Or this?\" she demanded as her teeth raked his collarbone then traveled lower.\n\nShe heard him say something about a line before he claimed her mouth. Then her feet left the floor. She sunk into the rush, into the magic of being wanted by this man. He laid her down on the bed, his hands unsteady as they fumbled with her bra. She would've offered her help but she fared little better in her attempts to rid him of his trousers. Besides, he'd left her without a breath to speak when he snuck his fingers inside her panties and put his lips to her breast. \n\n\"So wet already.\" \n\nSensation glittered over her skin with every roll of his tongue across her nipple and each silken tug of his mouth. Her fingers threaded his hair, pressing him closer to her. It was too much. It wasn't enough. \"Please. Need you,\" she whispered against his neck.\n\nSuddenly they were rolling on the sheets, rolling in the d\u00e9j\u00e0 vu and excitement of the moment. Sounds of laughter and frustration got caught in their kisses as they wrestled with the last pieces of fabric between them. They barely parted as he reached for the night table. The sight of him kneeling between her legs made her wonder if she was really here, if she was really doing this. She swallowed when her eyes fell to his shaft. Beautiful might not be the word to describe this part of him, but she felt compelled to look. The more she stared, the more she had to because she'd done that to him. He was pagan and wild and unlike anything she'd known. And he made her believe she could be his equal.\n\nHe hooked his hands under her knees and dragged her down the sheet until his cock jutted above her mound. \"Put me inside you.\" He hissed when her hands closed around his sheathed length. God, he was throbbing! Her eyes flew to his face, now tight with strain. \"Do it,\" he rasped before she fit the head to her entrance. \n\nHis fingers strummed her clit, replacing the last slivers of doubt with a need to be filled so strong, feeling him inside her became as vital as air. He planted his hands on either side of her shoulders, caging her in. Just like in her midnight fantasies, his gaze held hers while he settled between her thighs. \n\n\"Kiss me,\" she whispered. And he did until every thought, every breath, was for this man in her arms. Little by little she felt his weight bear down on her; felt his warm skin rubbing over hers.\n\n\"Ready?\" \n\nSascha bit her lip and nodded. She was diving headlong into a fate much darker than she'd ever known and she couldn't stop herself for the world.\n\n\"Wanted this for so long.\" Me too.\n\nHer nails dug into his biceps when the first blunt probing came. \n\n\"Relax,\" Noah rumbled in her ear as he rocked over her. \"I'll go slow.\" But he didn't sound convinced. She shifted, trying to ease the discomfort. His breath hitched in. \"Don't. Do. That.\" Agony laced his words as he gripped her hips, stilling her. \n\n\"I'm sorry.\" Her hands fell to the mattress as he withdrew from her. She should've known better than to think she'd suddenly morph into a skilled seductress.\n\n\"Don't be.\" He gave her a quick kiss, his smile rueful as the tip of his nose brushed hers. \"It just feels too good when you do that.\" \n\nHe shouldn't have admitted it. Not when he made those sexy noises. Not when withholding pleasure went against her nature. \n\n\"Sascha, no!\" he growled as she writhed beneath him. He squeezed his eyes shut and shook his head as if trying to clear his mind of a haze. \n\n\"Yes, yes!\" She fisted the sheets and bucked repeatedly, shivering as his cock slid over her slick folds and his chest brushed her nipples. This was heaven.\n\n\"You'll make me...come.\" The very thought melted her. She arched up for more of the delicious contact and the promise of pleasure around the corner but his hand tightened on her hip. \"I want to make this good for\u2014\" \n\n\"It is!\" \n\nThen his fingers were at her entrance; touching her, guiding himself into place. She looked down her body, her eyes transfixed as she watched, knowing what was to come. Her skin was the only thing keeping her in one piece.\n\n\"Look at me.\" Her heart thundered as she obeyed. He brought her hands above her head and laid his palms over hers. His green gaze came at her full force as he pushed into her. She'd never known this kind of ferocity in a man.\n\nThe relentless pressure of their joining turned into a sudden, sharp sting. She jerked and went crashing through the barrier between past and present. Ugly memories sprang up, gaining momentum, threatening to break over her in a million little splinters. And then they were upon her, fast, cutting and brutal. Her senses collided at once.\n\nCan't breathe. \n\nHer arms tensed, seeking freedom. \n\nTrapped. \n\nCan't breathe.\n\nNoah frowned. He should be fully sheathed within her by now yet she felt resistant. The need to get deeper inside her bordered on obsession\u2014then it became one. She cried out and turned her head away when he thrust harder.\n\nA virgin? \n\nHe went still. Suddenly her reaction that Saturday morning, the flickers of hesitation he'd mistaken for shyness all made sense.\n\nHe rolled away and swung his legs to the floor, needing something steady under his feet because he felt like he'd been dropped from a building. From the corner of his eye, he saw her clutch the sheet to her chest. There she sat in the middle of his bed with miles of white fabric around her, looking lost and uncertain. Again. \n\nHe should reach out and do something to put her at ease but he couldn't unclench his fists. The only words that came to him were the very ones he wasn't sure he wanted answered. \"Who hurt you?\""
    ],
    "authorname": "August_Bouvier",
    "tags": [
        "interracial romance",
        "neighbors",
        "romantic drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/cherry-blossom-girl-ch-03"
}