{
    "title": "The Mechanic Pt. 04",
    "pages": [
        "All good things must come to an end: this is the final instalment in the The Mechanic series. Like my other stories, this is not a 'wham bam, thank you ma'am' story, and you'll probably want to read the other parts in the series first to understand the backstory. For those of you who have been following my characters every step of the way, trust me in saying that I will miss them as much as you will! But I hope you'll enjoy their finale. I'd love to hear from you; drop me a comment to let me know what you think. Happy reading! \n\n* * * * * \n\nMegan shuffled the little envelope a little closer. The object had been lying on the breakfast bar between them for the best part of fifteen minutes. Megan seemed a bit shy about actually handing it over, but it had clearly been the thing on her mind; conversation so far had been awkward and a little forced. \n\n\"What's this? Is that for me?\" Rowan decided to help her along. \n\nMegan's face lit up. \"Open it,\" she said, beaming. \n\nRowan took out the card within. It had a picture of a U-Haul moving truck and the words 'Housewarming Party' plastered across the top. Rowan dropped the card with a thud. \n\n\"You're moving in with her!?\" \n\nMegan nodded and looked at her expectantly; nervously. \"I know it's quick...\" \n\n\"It is... You've only known her for three months.\" \n\n\"I know but... When you know, you know. You know?\" \n\nRowan smiled. There was entirely too much knowing going on in that sentence. \n\n\"It's going really well between us. I really like her. I want to spend the rest of my life with her! Plus, you've always said I need to get out of my tiny place,\" Megan rattled on. \n\nRowan had said that. She hadn't meant U-hauling with the first girl to come along, naturally. Jordan had certainly embedded herself into Megan's life very swiftly. Ever since the two had finally admitted they liked each other, they had been practically inseparable. Rowan had not seen much of Megan lately and she'd only met Jordan a few times, mostly in passing. \n\nMegan and Jordan had met up with Rowan for a meal once, where they'd been properly introduced. However, the two love birds had been very busy with each other, which left little room for getting to know Megan's crush properly. \n\nAdmittedly, they did seem a very good match; endlessly chatting and bantering. They'd even finished each other's sentences a few times. Still, this talk of wanting to spend the rest of their lives together was giving Rowan heart palpitations. How could they possibly know that? \n\n\"Oh Rowan, it's the perfect place for us. And we're both in such dinky places now. She's in a student room! And don't worry, in the new apartment we'll still have plenty of space to avoid each other if we need to!\" Megan laughed, but it still sounded slightly forced. \n\nSeeing Megan's discomfort, Rowan realised she wasn't being the supportive friend she should be. The fact that she couldn't picture moving in with someone she'd just met didn't mean that it couldn't make her friend happy. Megan was well aware of Rowan's feeling on this topic, so she'd probably been dreading the moment she had to bring it up. \n\n\"Well, that's amazing then. I'm really happy for you guys,\" Rowan said with a genuine smile, pushing down her internal panic. She got up to emphasise her words. \n\n\"Congratulations!\" She pulled Megan into a bear hug. \n\nHer friend looked utterly relieved. \"Thank you! So you'll be there?\" \n\nRowan returned to the invite. The party was next Friday. So soon. \n\n\"Of course, I'll be there. I wouldn't miss it for the world.\" \n\n\"Great! We're moving in this week, actually. I was going to ask you for help but I didn't want you to take time off work, and Jordan has two bulky big brothers who are helping us. We don't have much stuff anyway. It will probably only be two car loads.\" \n\n\"I would have closed the garage for a day to help you. You're my best friend; no customer or motorbike can compete with that.\" Rowan winked. She meant it, but she was secretly quite glad she did not to have to miss out on the business. \n\n\"Are you going to bring Riley?\" Megan asked with a curious smile. \n\nRowan tapped the invite on the breakfast bar pensively. \"Yeah, I think I might...\" That would at least give her someone to talk to while Megan and Jordan and their couple friends were smooching in the corners. \n\nMegan was positively beaming. \n\n\"What?\" Rowan asked, already knowing the answer. \n\n\"Just this... Seeing you like this. You're not even freaking out about asking her to come with you anymore!\" \n\nRowan shrugged. She wasn't, but that didn't mean they would be next to move in together. Trust Megan to interpret this in her overly optimistic way. \n\n\"It's going really well, isn't it? You've been on a few dates, right?\" Megan fished. \n\n\"Dates...,\" Rowan started. She couldn't really deny anymore that she had been on dates, much as she would like. \n\n\"Yeah, I guess. We went to the theatre where she played the piano on stage; I told you about that...\" \n\n\"Oh yes, that was fantastic,\" Megan said with a dreamy smile that suggested she had a bit of a crush on Riley herself after that. \"You were super impressed with that, weren't you?\" \n\nRowan huffed. Of course she was, but that wasn't the point. \n\n\"Anyway,\" she continued, \"we also went for a bike ride to that ice cream parlour. And we've been to Luigi's for a meal, and to the cinema to see the new Cate Blanchett movie. She says she has a bit of a thing for Cate. She sure is settling into this lesbian thing nicely. \" \n\nRowan grinned casually. She'd been rattling this off factually, not wanting to encourage Megan's romantic ideas. She just enjoyed hanging out with Riley; no wedding bells or thoughts thereof required. \n\n\"Sounds amazing!\" \n\n\"It's been nice, actually. Although she's giving me serious blue balls.\" \n\nRowan laughed. She'd meant it as a joke to lighten the serious tone of the conversation, but Megan gave her a reproachful look. \n\n\"Maybe that will teach you that not everything is about sex!\" \n\n\"Not everything, no, but a little bit of it would be nice.\" \n\nShe was just playing with Megan now; the truth was, she was alright with waiting for Riley. She had two healthy hands and a huge collection of toys to take the edge off. \n\n\"And would you have stuck around for this long if she'd given you that?\" \n\n\"Maybe...,\" Rowan lied, \"but I know that that's exactly the reason you told her not to sleep with me.\" \n\n\"She told you then? Well, I don't regret a thing. It is clearly working.\" \n\nRowan smiled. Riley hadn't told her that with so many words but it had been easy to put two and two together; it was exactly as she'd suspected then. And if she was completely honest with herself, she was actually grateful. Megan was right: she probably wouldn't have stuck around if Riley had put out again already. So, yes, it was working; whatever 'it' was. \n\nMegan continued: \"Anyway, I'm glad you're going to ask her.\" She had a funny expression on her face and Rowan looked at her suspiciously. \n\n\"What now? What am I missing?\" \n\n\"I sent her an invite too,\" Megan said, pleased as punch with herself. \n\nRowan should have seen that coming. \"Are you guys friends now then?\" She asked, pretending annoyance. \"Or just ganging up on me again?\" \n\nShe had her own ideas about why Megan had asked Riley, but she realised she wasn't as frustrated about her meddling as she'd once been. In fact, she was quite pleased; it would take the gravity off her asking Riley. \n\nMegan was still smiling. \"I just like her, that's all. I want her there, without or without you.\" \n\n\"Oi! Harsh dude!\" \n\nMegan laughed. \"I didn't mean it like that. I want you there too, of course. I want you both there, attached to each other or not.\" \n\nNice save. If those were her options, Rowan would choose attached, preferably to Riley's lips in a dark corner somewhere. \n\n\"You could have told me that before grilling me about asking her, though.\" \n\n\"I just wanted to see if you'd invite her.\" 'How far you've come,' was what Megan actually meant. Rowan for once had not disappointed her. \n\n\"Anyway, now that you'll have a date to the party, you know what that means, right?\" \n\nRowan had no clue. She looked at Megan quizzically. \n\n\"You'll have to coordinate your outfits.\" \n\n\"What are you talking about?\" Was this some new part of dating that Rowan didn't know about, being so new to the whole thing? \n\nMegan pointed at the invite. \"It's a costume party!\" \n\nRowan grabbed the card and stared at the smaller print across the bottom. She hadn't gotten this far, thrown by the shock of the moving in bit. There it was, brazen as brass: 'Come dressed as your favourite lesbian character from tv, movies, books, or music.' \n\n\"You've got to be kidding me,\" Rowan mumbled, more to herself than to Megan.\" She really wasn't feeling this theme. She was drawing a complete blank on what to do with it. Whatever happened to good old-fashioned 'hookers and vicars'? \n\n\"We thought that since it's already such a lesbian thing to do, U-hauling after three months, we may as well go all the way,\" Megan beamed. \n\n\"But lesbian characters just look like you and I anyway, don't they? Not much dressing up required then.\" \n\n\"Like you, for sure!\" Megan laughed. \"Find some accessories. Be creative!\" \n\nWhen Megan had left a while later, Rowan was still racking her brain for ideas on who to go as. And apparently it had to be a duo act too. Typical Megan to spring something like this on her a week before the project was due. Didn't these student types realise other people had real jobs that kept them busy? \n\nShe got out her phone, which she'd actually bothered to charge for a change. She'd saved Riley's number in there a while ago, thinking in a moment of weakness that it would make it easier to make plans in the long run, if she was going to keep seeing the girl. \n\nHowever, so far she'd either just shown up, they'd made plans face-to-face, or Riley had called her at the garage. Somehow it was still a threshold for Rowan to call Riley on her mobile, as if that blurred some boundary; giving Riley instant access to her whenever she wanted; or at least, whenever her phone was charged and within reach. \n\nRowan's reluctance to go down to the garage just for a phone call eventually overcame her discomfort. She browsed to Riley's contact and hit the call button. \n\n\"Hello, Riley speaking.\" \n\n\"Hey straight girl.\" Calling her that was still fun, even if Riley had shown repeatedly that she wasn't so straight after all. \n\n\"Rowan? Are you actually calling me on your mobile!?\" \n\n\"Yeah, I am. It was charged and right here, so I just figured it was easier...\" Rowan wished Riley wouldn't make such a big deal about it. \n\n\"Oh wow. Am I promoted to the inner circle at last then? Now that I finally have your number, you know I am going to message you at funny moments, like in the middle of the night, right?\" Riley teased. \n\n\"You can totally message me when you feel funny in the middle of the night and are thinking about me because of it. Make it spicy, though. At least I can have some fun too,\" Rowan threw back at her, chuckling. \n\n\"So, what can I do for you? I believe it's my turn to take you on a date. Are you getting impatient?\" \n\nRiley was clearly enjoying her temporary position of power. She'd certainly gotten more confident as Rowan had continued seeing her. \n\n\"It is your turn. So are you going to ask me to come to Megan's party then?\" \n\nRiley laughed. \"You got your invite too then? You know, you have a funny way of asking someone out. Still doesn't sit right with you, does it?\" \n\nWhy did this girl see straight through her at every turn? \"Fine... Will you come to Megan's party with me?\" \n\n\"As your date?\" \n\nRowan could picture Riley's smug face as she asked that. \n\n\"Yes, as my date. Although I'm starting to regret this already.\" \n\n\"Oh, don't be grumpy. Of course I'll be your date. Did you see the theme?\" \n\n\"Yeah, what a pain... Megan reckons we should coordinate our outfits or something,\" Rowan said reluctantly. \n\n\"Of course we should!\" \n\nClearly, this was a well-known fact to anyone who'd ever gone to a costume party with a date. Rowan realised she may as well rope Riley into accomplishing this challenging task. \n\n\"I've got nothing on that. Lesbian couples in tv series or movies, who are distinctive enough to dress up as? I assume your knowledge on the topic is limited too, being straight and all?\" She teased. \n\n\"I may have done some catching up on my lesbian popular culture recently... I have some ideas actually.\" \n\nRiley went into an enthusiastic relay of her ideas and what items they would need to make it convincing. \n\nRowan was blown away. \"When did you have time to think about this? When did you get your invite?\" \n\n\"Last week... You?\" \n\n\"Today...\" Rowan couldn't believe her best friend would actually invite Riley before she invited her. \n\nRiley laughed. \"She was probably terrified about telling you; knowing your thoughts on such romantic notions as moving in together.\" \n\nAgain, Riley surprised Rowan with her accurate analysis of the going-ons between her and her long-time best friend. How had she become so knowledgeable about their feelings? \n\n\"So, happy with the plan?\" Riley continued. \"Can I order the stuff? I've got it all ready to go in my Amazon basket.\" \n\nIt wasn't like Rowan had any better ideas, and she quite liked Riley's; that was, after the girl had explained the ins and outs of the tv show Rowan hadn't watched, and the characters they were going for. \n\n\"Sure, go ahead,\" she said, marvelling at the fact that this was going to be the second time Riley would dictate what she would wear. What was this girl doing to her? \n\n* * * * * \n\n\"I gotta give it to you. You could have done a lot worse with the comfort factor of our outfits,\" Rowan said, gesturing towards a girl who was dressed rather elaborately in a long skirt, corset and top hat. \n\n\"That's Gentleman Jack!\" Riley said enthusiastically. She binged that show but had never thought to use it as her costume choice. That was a shame; Rowan would have made an excellent Anne Lister. Although getting her into a skirt would have been challenging. \n\nInstead, they were both wearing baggy orange trousers and shirts with big black boots, complemented with custom-created prison IDs. She'd given Rowan a pair of fake black-rimmed specs to complete the look. \n\n\"Riley, Rowan, there you are!\" Megan and Jordan came bounding over. Megan looked at them for only a moment and then said: \"Or should I say 'Piper and Alex'? Orange is the new black indeed; I don't think I've ever seen Rowan in orange!\" \n\nRiley gave Rowan a smug look. She'd guaranteed the mechanic that people would recognise who they were meant to be. Rowan rolled her eyes at her. \n\n\"And you are?\" Rowan asked Megan. \n\nRiley also couldn't really place their outfits. Jordan was wearing some sort of staff badge and was carrying a mini painting around her neck. Megan didn't seem particularly dressed up but had a fake pregnant belly. \n\n\"Please tell me that's not a hint for what you two will be doing next,\" Rowan said with a look of horror, when Megan thrust a turkey baster in her face, saying: \"Does this help?\" \n\n\"We are Bette and Tina, from 'The L Word', and this... Rowan, you'll appreciate this...\" Jordan produced a blanket, \"is our cloak of boringness.\" She threw it over her and Megan's heads. \n\nRiley had started watching 'The L Word' but did not understand any of the clues. \n\n\"Spoiler alert!\" She said. \n\nThey all laughed. Megan said: \"Ah, sorry Riley. We forgot you are new. You'll get a few more spoilers probably. I think we have the entire cast of the show here tonight. By the way, this is Jordan. Jordan, this is Riley.\" \n\nRiley shook Jordan's hand, glad to meet the girl that was clearly making Megan so happy. She deserved it. Riley didn't know the bartender that well, but she really liked her. She had a sense that while Megan was clearly an excellent match-maker, her own love life had been more challenging. \n\nThe hostesses took Rowan and Riley on a tour around the house in which they ooh'ed and aah'ed in the right places. Riley could feel Rowan's discomfort at the domesticity of it all and she tried to ignore her hopes of one day moving in with Rowan. That was going to be a big one. \n\n\"Ah see, here's Dana now,\" Megan pointed out as they passed an attractive brunette in a very short skirt with a tennis racket. \"I told you we had the whole L Word cast here.\" \n\n\"As long as no one pulls a Jenny and jumps in the pool,\" Rowan grinned. \"Sorry, more spoilers.\" \n\nRiley looked around, amazed at the number of people and the creativity of their costumes. She felt excited to be included in such an interesting new community and be welcomed as one of their own. She had never realised there were this many lesbians in town. \n\n\"Are they all gay?\" She whispered to Rowan. \n\n\"Don't ask her. She thinks everyone is gay,\" said Megan, who overheard her. \n\n\"Well, I can only go by who's slept with a girl at least once, and that's quite a few of them...,\" Rowan said with a dirty grin. \n\nRiley felt a pang of jealousy. No wonder a few of the girls they'd passed had given them weird looks. How many of them had Rowan slept with? \n\n\"To answer your question,\" Jordan interrupted her unpleasant thought, \"yes, this is kind of the lesbian party. We'll have a small thing for our families too, but it turns out most of our friends are lesbians!\" \n\n\"Anyway, make yourselves at home. Help yourselves to drinks. Feel free to add music to the queue. Basically, do whatever you like, except have sex in our bed,\" Megan laughed and winked at Riley. \n\n\"Awww...\" Rowan pulled a sad face, \"Sofa is okay, though?\" \n\nAt that, she received punches from Riley and Megan simultaneously, while Jordan gave her a covert nod. \"Yeah, go wild on the sofa. We're going to replace that anyway,\" she whispered. \n\nAs Megan and Jordan walked off to greet other guests, Rowan and Riley helped themselves to some drinks. Rowan had brought her own hip flask filled with her favourite whiskey and grabbed a beer too, while Riley opted for white wine. They looked for a place to sit or perch and found an empty armchair. \n\n\"We can fit there,\" Rowan said decisively. \n\nRiley snuggled on Rowan's lap while they sipped their drinks and chatted. \n\n\"We should probably go and be social, shouldn't we?\" Riley said, after a while, realising she hadn't spoken to anyone else since they got here. \n\n\"Yeah, probably,\" Rowan said, taking a sip from her flask. \"In a bit...\" She wrapped her arms more firmly around Riley and grabbed her butt. \"I'm still enjoying this.\" \n\nRiley smiled. Of course she was. Although they still hadn't had sex, their physical contact had certainly increased throughout their later dates, and it had become more and more tempting. And then there were the kisses... \n\n\"Me too,\" Riley said with a naughty grin, \"and this...\" \n\nShe pressed her lips to Rowan's and felt the mechanic respond instantly by welcoming her tongue into her mouth. She could taste the whiskey Rowan had been drinking: a strong residue of smokiness, yet clearly very different from tobacco. She let her tongue caress Rowan's and felt Rowan's hand roam her buttocks. Maybe tonight was the night they could finally take things a step further? \n\n\"You know what?\" Riley said as she laid her head on Rowan's shoulder a little later. \n\nRowan went to fondle her breast but Riley caught another girl's gaze and slapped Rowan's hand away. They may be surrounded by other lesbians, they were still in public. \n\n\"You should have come as Ruby Rose's character in 'Orange is the New Black'.\" \n\n\"Oh yeah? Why's that?\" Rowan mumbled, distracted by her fingers, caressing Riley's belly. \n\n\"She looks like you. She's really hot. But she's not with Piper in the series, so you couldn't be her.\" ",
        "\"Oh? Who's she with then? Anyone hot?\" Rowan gave her a wicked grin. \n\nRiley flicked her head. \"Don't you worry about who she's with, you're not her,\" she laughed. \n\n\"Although she does even have cool tattoos just like you,\" she added, wrapping her fingers around Rowan's inked bicep. \"Will you tell me about them sometime?\" \n\nRiley had been intrigued by the sleeve since they'd first met. She had elaborately explored the images when she'd been in bed with Rowan, but all she knew was that each image represented something that was important to Rowan. And Riley was super curious about what was important to Rowan. \n\nThe cogs and other mechanical parts on her hand clearly stood for her passion for motorbikes, but Rowan had never divulged the meaning of any of the other images. \n\n\"Sure. What do you want to know?\" \n\nRiley had not expected that; Rowan had been rather secretive about it before. But then, that had been the first time they'd met and they didn't even know each other. \n\n\"What does this one stand for?\" She traced her fingers over the crocodile head that was peeking out from under Rowan's shirt. \n\n\"Ah, that one is for adaptability. You know that crocs evolve to deal with anything that's thrown their way? As a species, they have been around forever and they will survive us all. Even within one lifetime, I think that's an invaluable ability, to be able to adapt when life throws you curve balls.\" \n\nRiley thought about Rowan's experiences with Diana. Was that what she was talking about; that she was able to overcome her challenges by evolving, by changing her outlook on life? \n\nA conflicting thought was triggered at the back of Riley's mind: Megan had told her that Rowan also believed that a tiger didn't change its stripes. The mechanic used this to argue the fact that she didn't - and wouldn't - do relationships. Riley had assumed the tiger on Rowan's forearm was there to remind her of this. \n\n\"What about his one?\" She asked, indicating the tiger. How did her tiger theory relate to her crocodile one? \n\n\"The tiger...\" Rowan stroked her arm pensively. \"That's kind of my spirit animal, I think. Its strength, its independence, its perseverance... That sounds really deep, doesn't it?\" She laughed, but Riley sensed it was a bit forced, as if there was something she wasn't quite ready to reveal. \n\n\"The mountain is for nature,\" Rowan continued quickly, \"and how tiny our part in it is. The clockwork is for temporality. That reminds me not to waste any time on things that are not worth it, whether that's activities, people, thoughts... Its mechanics are exposed to indicate that we can take control of our time if we choose to...\" \n\nShe touched each image in turn and seemed to lose herself in her reflections. Riley was moved that she would share these intimate thoughts with her. \n\n\"And this one?\" She asked softly, stroking the saxophone on her upper arm. She'd seen it before and had wondered if maybe Rowan played. \n\n\"That one is for my father. It's the sound of my childhood, hearing him play. He was a mechanic too and I would usually be hanging out in his workshop after school. Whenever he had a free moment he would pick up this old sax that was completely covered in grease and play some blues tune.\" She smiled sadly. \"I got this when he passed away a few years ago.\" \n\n\"Oh, I'm so sorry. I didn't mean to upset you,\" Riley said, feeling Rowan's pain. \n\n\"It's okay... It's good to think of him, and seeing this reminds me of him every time. He actually hated tattoos so I'm not sure he would have appreciated the tribute much.\" Rowan laughed. \n\n\"It's the thought that counts, though. I'm sure he would have appreciated that.\" \n\n\"Yeah, perhaps... Anyway, I think that covers them all.\" \n\nRowan tucked her arm behind Riley's back. There were still a few smaller images that she hadn't talked about, but clearly the time for sharing tattoo meanings was over. That was okay; Riley had learned that with Rowan, patience was the way forward. \n\n\"Thanks for telling me.\" \n\nRiley looked around her and realised most of the girls that had been standing around them had moved on and where chatting with others, getting drinks, or smoking on the balcony. \n\n\"Time to mingle, I guess,\" Rowan said, reading her mind. \n\nRiley nodded and reluctantly got off her lap. The thought of separating herself from Rowan was made easier only by the fact that she knew who she was going to find first; she had some sanity checks to carry out. \n\n* * * * * \n\nMegan added some more upbeat songs to the playlist; the party was in full swing and the first brave souls had started busting some moves. \n\n\"Hey Megan! This is a great party. Thank you for inviting me.\" \n\nMegan looked up to see Riley smiling broadly at her. \"Of course. Glad to hear you're having a good time.\" \n\n\"This place is great and Jordan is awesome too. You guys are adorable together. I'm so happy for you,\" Riley continued. \n\nMegan smiled. They were happy together. After years of keeping her head down while being too busy working and studying to think about anything else, she felt like things had finally worked out for her: she had a great girlfriend and a lovely apartment; she was close to finishing her degree. And on top of that, her match-making efforts for her best friend were going really well too. \n\n\"Speaking of happy together... You and Rowan...,\" she started with a broad grin. \n\nShe had to say, she was impressed with Riley. All the girl had needed was a nudge in the right direction; a little encouragement to confirm that her feelings weren't misplaced. After that, she had run with it, without any further help or encouragement, and she had clearly managed to at least make some cracks in the massive walls around Rowan's heart. \n\n\"How's that going?\" She continued when Riley only smiled and looked away with a hint of a blush forming. \n\n\"It's going really well, I think...\" Riley bit her lip. \"Has Rowan said anything? Does she think it's going well?\" \n\nMegan smiled. How could Riley possibly be insecure about this? Rowan had never stuck around this long for anyone. In fact, no matter how hard Rowan tried to hide it, Megan had never seen her this infatuated with a girl. But then, Megan could probably see past Rowan's cool attitude a lot better than Riley could. \n\n\"She's been going on dates... She's matched her outfit to yours for the party... That is big, Riley. I don't know what you're doing, but it is working!\" \n\n\"I've been doing what you advised me to do.\" Riley paused, looking uncomfortable. \"All of it...\" \n\nMegan knew exactly what she meant. Not having sex with Rowan straightaway would definitely have helped to keep her interested. Not many girls resisted Rowan's charm. \n\n\"Well done. I can't imagine that has been easy,\" she chuckled. \n\n\"Oh my god, you have no idea. It's so hard!\" Riley laughed too. She cleared her throat and continued: \"Anyway... I think I'm ready. I think it's been long enough...\" \n\nIt was halfway between a question and a statement. Megan chuckled again. She thought she was ready? That was the understatement of the century. \n\n\"I heard about your little stunt with the strap-on. That certainly got Rowan's attention; she couldn't stop talking about it.\" \n\nRiley turned bright red. \"You really don't have any secrets from each other, do you?\" \n\n\"Nope, none,\" Megan said happily. Somehow, seeing Riley and Rowan's relationship come together made her almost as happy as her own. \"Are you planning to use it then?\" \n\n\"Do you think it's too soon?\" Riley asked doubtfully. \n\nTime for a reality check. \"Rowan's had a perpetual hard-on for you for months. You sure kept her on her toes.\" \n\nRiley smiled at that and looked pleased with herself for a moment, before the doubt returned to her expression. \n\n\"Yeah, but, you know what I mean... Her rules... Will she still see me after that? Or will it just be a once off? Will that be the end of it?\" Riley was looking anywhere but at Megan. \n\nMegan leaned in and waited for Riley to raise her eyes to hers. \"I think you've already shown that you are outside the bounds of her rules. Remember that I said you needed to show her that you're different from all the other girls?\" \n\nRiley didn't reply but Megan could see her gaze shift for a moment. She realised she'd made the same mistake that had upset Riley before, mentioning 'all the other girls'. That was clumsy. \n\n\"Anyway,\" she continued quickly, \"you've done that. You're in a different category now. If you want to sleep with her now, you have my blessing. Your training is over; you have graduated.\" \n\nRiley laughed. \"Thanks, Megan. For everything.\" \n\nMegan pulled her in for a hug. She'd never hugged Riley before and maybe it was the gin she'd been drinking, but it just felt right. \n\nRiley turned away and Megan was about to congratulate herself on another job well done when the blonde turned back with a serious expression. \n\n\"One last question... Just how many other girls have there been?\" \n\nOh shit. Megan hadn't seen that one coming. She tried to keep the panic off her face. Even if she wanted to tell Riley, she had no idea. The short answer was: too many for Riley to be comfortable with; way too many for anyone to be comfortable with. \n\nShe couldn't stop herself from doing some rough maths in her head: since she and Rowan had reconnected five or six years ago, Rowan had probably hooked up with a girl twice a week on average. Add to that the occasional splash-out weeks on holidays, and - god forbid - the times she'd been with multiple girls on one night. Plus the girls that never even made it to her apartment; the quickies in the bathrooms of bars. There was just no adding it all up. Riley would run screaming. \n\n\"It's probably better to talk to Rowan about that...,\" Megan said meekly. She was ashamed of her cop-out, but she couldn't bring herself to give Riley a rough estimate or, probably worse, lie to her. \n\nRiley's face said it all. She was freaking out anyway and not doing well hiding it. \"That many, hah?\" \n\n\"Hey, none of them meant anything to her. You do! You shouldn't compare yourself to them,\" Megan tried in vain. How had this gone so wrong all of a sudden? \n\n\"It's fine,\" Riley said, but her face said that it was anything but fine. She turned away to walk off. \n\n\"Riley, wait...\" Megan got her attention but had no idea what else to say; she had no idea how to fix this. \"Are you okay?\" She asked weakly. \n\n\"I'm fine.\" Riley gave her a forced smile and walked off towards the kitchen. \n\nAs soon as she'd left, Megan's attention was demanded by two of her friends who came to tell her they were leaving and thank her. Megan looked over their shoulder, still preoccupied, and saw Riley pour herself a big glass of wine. She made a mental note to find Rowan and tell her what had happened, as soon as she could. \n\n* * * * * \n\nJordan couldn't help but smile when she saw Rowan unsuspectedly pouring herself a drink. She'd just overheard Megan and Riley talking and couldn't believe the little blonde was actually planning on bringing out the strap-on on her enigmatic girlfriend. Who would have thought she had the balls? \n\n\"I have a feeling you're going to get lucky tonight,\" she said, stepping up behind the mechanic. \n\n\"Are you offering?\" Rowan turned round with a big grin on her face. When she saw Jordan, her grin didn't falter. Instead, she added: \"Oh, it's you... We may need to check with Megan first then.\" \n\nJordan was taken aback. Was she being serious? Megan had always said that her friend was kind of sleazy, but she couldn't really think there was any chance that was what Jordan was insinuating. \n\n\"And with Riley, I imagine...,\" she said coolly. \n\nRowan's face clouded over, as if that hadn't even occurred to her. Maybe she wasn't quite on the same page as Riley about the status of their relationship after all. \n\n\"That's who I was talking about, anyway - the one you may be getting lucky with,\" Jordan added. She stopped herself from saying 'your girlfriend'. Somehow she sensed that would open a whole other can of worms. \n\nRowan looked intrigued now. \"What makes you think that?\" She sounded nonchalant enough, but Jordan could see her interest had been piqued. Jordan wasn't planning on giving the surprise away, though. \n\n\"Just a feeling...,\" she said mysteriously. \n\n\"So far not much has been going on in the feeling department,\" Rowan mumbled; mostly to herself, it seemed. \n\n\"Things may be about to change, though.\" \n\nAfter Rowan's earlier lewd comment towards her, Jordan was quite enjoying keeping her in the dark. She was curious how Rowan really felt about Riley. From what Megan had been saying, she'd assumed it was going really well, but now she wasn't so sure. \n\n\"How's things going between you and Riley, anyway?\" She asked. \n\nRowan shrugged noncommittally. \"We're not quite getting a U-Haul just yet.\" She grinned, and added: \"You and Megan sure seem happy together. I don't think I've ever seen Megan this happy.\" \n\nJordan was pleased to hear that from someone who knew Megan so well, but she was also blown away by Rowan's evasiveness about her own relationship. She had no idea what to make of that, or of the mechanic in general. She realised that even though Rowan was her girlfriend's best friend, she hadn't spent a lot of time with her. Sure, they had met a few times, but she'd never talked to Rowan without Megan being there. \n\nShe wondered all of a sudden if Megan had orchestrated it that way for some reason. But what reason could that be? Jordan couldn't help being curious about this mysterious too-cool-for-school woman. She could certainly see her physical appeal, but there must be more to her than her cavalier attitude and hotness for Megan to care so deeply about her. \n\n\"You know, when I first saw you I thought you were Megan's girlfriend.\" \n\nJordan wasn't quite sure why she was sharing this. Maybe it was an attempt to find out more about her. Maybe there was something about Rowan that was inviting her to reveal such thoughts and reflections; as if by making herself less mysterious, she could make Rowan do the same. \n\n\"Did you?\" The mechanic just asked, with an amused grin. \n\nJordan nodded. \"You picked her up from the boxing gym on your bike.\" \n\n\"Oh yeah, I remember that. You looked like you were ready to punch my face.\" \n\nJordan laughed. \"I was sizing you up, to see if you were any competition.\" \n\n\"And what was your conclusion?\" \n\n\"My first thought was that you may be, yeah,\" Jordan admitted, again not sure why she would admit this. She had actually still been gathering intel for her friend Sam at the time instead of going after Megan herself, but she'd definitely thought Sam would have her work cut out for her. \n\nRowan looked satisfied, too satisfied. \"And my first thought was that you were hot. Going to the gym suddenly made more sense.\" She winked. \n\nJordan huffed. \"Are you always this sleazy?\" \n\nRowan laughed wholeheartedly. \"I see why you and Megan work together. Or has she already corrupted you against me?\" \n\nJordan smiled. As much as Megan did not agree with Rowan's lifestyle, there was no way she would talk badly about Rowan. In fact, Jordan wasn't sure there would be a future for a girlfriend that couldn't get on with Megan's long-time best friend. She knew there was a long and complicated history there, but Megan had been fairly brief about it. \n\n\"You were together, right? You and Megan?\" \n\nRowan nodded. \"Sort of... A long time ago.\" \n\n\"Sort of? What does that mean?\" Jordan pried. \n\n\"It means we slept together.\" \n\nJordan knew there was much more to it than that, but clearly Rowan was as reluctant to talk about it as Megan was. She wasn't very surprised that that was how Rowan summarised her past with Megan. \n\nFresh into her relationship with Megan, Jordan had quickly found out that Rowan had shaped many of the assumptions Megan had about other women. Even just being friends, with Rowan's fast and furious lifestyle a constant feature on the periphery of Megan's life, Megan had subconsciously started to expect that what women wanted from other women was a quick fuck. Jordan had experienced this first-hand and had to try hard to convince Megan she wanted so much more than that. \n\n\"Yeah, but you sleep with a lot of women, don't you?\" She said. \n\nRowan shrugged. At least she had the decency to not look proud about that. \n\n\"And you're not friends with all of them, I assume?\" \n\nRowan chuckled. \"God, no. They wouldn't want that either.\" \n\n\"So why does Megan? Did you treat her better than these other girls?\" \n\nJordan knew it wasn't her place to judge the past but she couldn't imagine Megan as one of Rowan's play things. The mere thought of Rowan treating her as such made her mad. \n\n\"We treated each other well.\" Rowan seemed lost in thought for a moment. Then her wide grin returned and she added: \"Why? Do you need some tips?\" \n\nThere she went again with the sleaze. \"Thanks, I've got it covered,\" Jordan said, trying not to sound too icy. \n\n\"I'm sure you do.\" Rowan winked at her. \n\nWhen the mechanic saw that Jordan wasn't amused by her comments, her expression grew more serious. \n\n\"Hey, I'm just messing with you. I can see that you make Megan really happy. She's much happier than she ever was with me. She's always wanted this kind of 'happily ever after'. I could never have given her that. That was never in the cards for me.\" \n\nThat was quite the sudden change of character. As soon as the nonchalant facade dropped for a moment, Jordan could see the side of Rowan that her girlfriend valued so much. \n\n\"But it is now. With Riley,\" she said kindly, believing it was true. \n\nThere was something sad about Rowan's smile. \"Yeah maybe. We'll see...\" \n\n* * * * * \n\nSam's phone buzzed for the first time tonight. Usually there would have been more messages, but her girlfriend was also at a party tonight; she would have been hard-pressed to find a moment to text. \n\n[How's the party, Miss Belivet?], the message said. \n\nSam smiled. When they'd spoken about this party, her girlfriend had actually considered joining her. She'd said it sounded like the perfect opportunity to meet Sam's friends. Besides, costume parties were right up her alley. \n\nNeedless to say there were plenty of challenges with that idea. First, her girlfriend being a famous actress and their relationship - along with her seeing another woman in the first place - being on the down-low, they had to be careful no one at the party would post anything on social media or spread any rumours. Second, her agent had arranged for her to go to this red carpet event and she couldn't really get out of it. In the end, they had jointly decided it was for the best if she didn't come, but they'd had a lot of fun picking Sam's costume. \n\n[It's good fun but it would be even better if you were here. How's yours?], Sam replied. \n\nThe reply came instantly, which made Sam think she may have snuck out to have some phone time. [As expected. It's fine. Good champagne at least. But I have some youngster trying to chat me up...] \n\nSam smiled. This happened to her a lot. And of course, strictly speaking, it was how Sam and she got together. Sam had received the shock of her life when she'd seen the actress in her local supermarket. However, she had quickly realised she could not let this opportunity pass her by. \n\nThey'd ended up spending the night together but Sam had never imagined anything would come from it. Even when the actress had ended up staying at Sam's house for the remainder of that weekend and they'd spend the whole weekend in a blissful cycle of sex, snoozing, and eating, Sam had thought she'd never see her again after that. \n\nTo her complete surprise, however, she'd stayed in touch and they had been meeting up in secret ever since - sometimes at Sam's house, other times in the penthouse of some fancy hotel she was staying at. ",
        "Even though their relationship was far from conventional and they couldn't exactly be out together - yet? - Sam couldn't be happier. She was completely crazy about her girlfriend and couldn't believe her luck that she was the one for someone whom the whole world mooned over. \n\nShe wondered who was at that party that had set their mind on her other half now. [Anyone I know?], she typed. \n\n[Oh, you probably do. He was in a few movies with me a few years ago. I better not kiss and tell though.] \n\n[You better not be kissing him. You behave yourself!] \n\nSam knew she wouldn't do anything, but it was still a difficult thought that her smoking hot girlfriend was surrounded by stupendously hot Hollywood actors who would kill to be with her. \n\n[He's got nothing on you, champ!], came the reassuring reply straightaway. \n\nSam was still smiling at her phone when someone nudged her. She looked up to see a blond girl looking at her expectantly. \n\n\"Sorry, what was that?\" Sam asked. The girl must have asked her something but she'd not caught it. \n\n\"I asked if you could pass that bottle of wine,\" the blonde repeated. \n\nSam had been getting herself a drink when her phone had demanded her attention and she was still standing in the kitchen, blocking the drinks table. \n\n\"Sorry, sure,\" she replied, passing the bottle. \"Orange is the New Black, right?\" She added, pointing at the girl's outfit. \n\nThe girl nodded. \"Piper... But call me Riley.\" \n\n\"Nice to meet you, Riley. I'm Sam.\" \n\n\"Who are you meant to be then?\" Riley looked at the retro camera hanging around Sam's neck and the Santa hat on her head. \n\n\"Therese, from the movie 'Carol'. Or from the book 'The Price of Salt', if you're a purist.\" \n\nRiley nodded understandingly. \"So where's your Carol then?\" \n\nSam smiled to an inside joke. \"She couldn't make it tonight...\" \n\n\"Was that her you were so busy texting? Doing the famous 'phone girlfriend' thing, are you?\" Riley smiled conspiratorially. \n\nSam chuckled. If only Riley knew how close she was to the truth. Her girlfriend was famous alright. \n\n\"Something like that,\" she replied with a knowing smile. \n\nRiley gave her a curious look and asked: \"How did you two meet then?\" \n\n\"We met in the supermarket and ended up chatting. One thing led to another and we've been together ever since.\" That was a very brief summary, but it was nothing but the truth. \n\n\"No way!\" Riley looked at her disbelievingly. For the first time Sam noticed that she was a bit drunk, by the way her reaction was just a little too over the top. It wasn't such an unlikely scenario, to meet someone in the supermarket, once she left out the part that that someone was a famous Hollywood star. \n\n\"So where is she tonight?\" Riley asked. \n\n\"She had another party she couldn't get out of.\" \n\n\"Must be nice to know you can trust your girlfriend not to have too much fun without you,\" Riley mumbled. \n\nSam was confused. Where did that come from? Riley was staring into space distractedly, so Sam decided to ignore her comment. \n\n\"Anyway, I really wanted to be here regardless. Jordan has been my best friend since school. Are you a friend of Megan's?\" She tried to continue their conversation. \n\n\"Yeah, kind of... My... The girl I came here with is Megan's best friend.\" \n\n\"Oh, you're with Rowan?\" Sam suddenly recalled seeing the dark-haired woman in a similar orange outfit with a pair of spectacles she didn't usually wear. Alex, it now suddenly clicked into place. \n\n\"Yeah, you know her?\" Riley looked her intently. \n\n\"We've met...,\" Sam replied vaguely. \n\nThe night she had met Rowan had started off very normal but had ended in a completely unexpected way. Sam had been out with her colleagues, as she often did on a Friday. She'd been drinking beer at a fairly rapid pace and had been rather desperate for the loo. In her cubicle, she'd realised there was no toilet paper, and, without asking, she'd been offered some from the next cubicle; handed to her by a tattooed hand from under the divider. \n\nWhen Sam had come out, her saviour had still been there, washing her hands. They'd looked at each other appreciatively and must have had similar thoughts, because in no time they were making out against the wall in the bathroom. Sam couldn't remember what had been said to trigger that, but it must have been alcohol-induced too because she didn't usually do things like that. \n\nSam had ended up at Rowan's place and they'd had a short but very intense time in her bed. As it turned out, they were both more into giving than receiving. The sex had felt more like a wrestling match, while both of them got hornier with every move. They'd eventually both gotten off from the sheer feeling of grinding into each other and pinning each other down. \n\nSome of these thoughts must have shown on Sam's face because Riley surprised her by asking: \"Did you sleep with her?\" \n\nSam hesitated. It was a long time ago - surely before these two were together - but Riley seemed upset suddenly, taking a large gulp of her wine before urging: \"Did you?\" \n\n\"Yes...,\" Sam admitted, causing Riley to drain the rest of her glass in one swig. \n\n\"That was a long time ago, though. And it didn't mean anything; it was just a wild night. We'd been drinking, you know...\" Sam wasn't sure why she felt the need to explain. \n\nRiley refilled her glass. \"That's what she said too.\" She pointed to another girl who was chatting just outside the kitchen. \"And her, and her...\" She pointed at a couple of other girls. \n\nShe took another sip of wine and asked: \"Has Rowan slept with Jordan too?\" \n\n\"What!? No!\" Why on earth would she think that? \n\n\"Well, it sure looked like they wanted to a moment ago,\" Riley murmured. \n\n\"Jordan has just moved here. And she's with Megan. She would never do that.\" Sam said, even though she had no idea why she was put in the position to have to justify her friend's decency. \n\n\"And Rowan wouldn't either, I'm sure,\" she added, not remotely sure at all. She didn't even know Rowan. \"She's with you now, isn't she?\" \n\n\"You'd think that, wouldn't you...?\" Riley slurred, now seeming even more drunk. She was refilling her glass again. When had she emptied that? \n\nSam's phone buzzed again. She realised she hadn't replied to her last message. \n\n\"Hey, don't let me keep you from your girlfriend,\" Riley said. \"I better go find mine... Well, whatever she is...\" \n\nBefore Sam could stop her, she wandered off, leaving Sam utterly confused about what just happened. \n\n\"Lesbian drama...,\" Sam muttered to herself as she turned back to her phone. \n\n* * * * * \n\n\"Here you are. I've been looking all over for you!\" Rowan looked up to see Riley walking towards her. \n\n\"I've been right here all along,\" Rowan grinned. \"Where have you been looking?\" \n\n\"The bathroom, the bedroom, the broom cupboard...,\" Riley said, looking slightly puzzled now that she had found Rowan in such a completely normal place as the living room. \n\nRowan burst out laughing. \"Why would I be there?\" \n\n\"It doesn't matter... I need to ask you something.\" \n\nRowan had a feeling she knew what this was about. Jordan had let something slip earlier about Rowan getting lucky. Maybe Riley had said something to her or to Megan. Was Riley going to ask her to have sex? \n\n\"How many women have you slept with?\" Riley burst out. Her eyes were slightly out of focus and her speech a bit slurred, but the expression on her face was dead serious. \n\nRowan's mood dropped. Where did this come from? This did not feel like the kind of question that would lead to sex. If she had been thinking about it earlier, Riley certainly did not seem in the mood for sex now. Besides, how had she gotten this drunk this quickly? She'd been fine when Rowan had left her a little while ago. \n\n\"I'm quite tired. How about you? And I've had enough to drink. Let's go home, okay?\" She tried gently, meaning of course that Riley had had enough to drink. \n\n\"Don't avoid the question. Tell me!\" Riley was raising her voice now. \n\nThis was not a topic Rowan was particularly keen to go into, especially not in a drunken state at the end of a night. She wasn't sure what to do to calm Riley down. Something told her she wouldn't welcome a hug or a kiss right now. \n\n\"Do you really want to get into this right now? Let's go home. We can talk about it in the morning.\" \n\n\"Come on, give me a ballpark figure. A hundred? Five hundred? A thousand!?\" \n\nRowan sighed. Even if she wanted to tell Riley - which she certainly didn't - she couldn't; it wasn't as if she'd kept count. She'd been having a good time with a lot of different ladies for a long time. Surely that wasn't something Riley wanted to hear more about? \n\n\"I saw you flirting with Jordan. Are you going to sleep with your best friend's girlfriend too?\" \n\n\"What!? What are you talking about?\" \n\nRowan was shocked. Had she been flirting with Jordan? It was possible; flirting was like breathing to her: it came so natural and was kind of something she couldn't not do. But she would certainly not sleep with Megan's girl. Even in Rowan's book, that was not done. \n\n\"You, telling her she is hot; that she made you want to go to the gym...\" \n\nRowan looked at her in disbelief. Had she said that? No girl could ever make her go to the gym, no matter how hot she was. \n\n\"Excuse me...,\" Riley said suddenly. She turned round abruptly and rushed towards the bathroom. \n\nRowan was still trying to recall her conversation with Jordan. She remembered talking about Riley; about how 'happily ever after' may be on the cards for Rowan now too. Very unfortunate that the girl apparently hadn't heard that part. \n\nWhile chatting with Jordan Rowan had actually realised for the first time that things were different now; that she couldn't just hook up with any girl she fancied anymore, now that Riley was in the picture. It had been easy to forget that while going about her everyday life; it wasn't like she had a solid stream of hot women walking into her shop. When one did walk into her shop, well, that was a different story. But a night like tonight - being around this many lesbians - would previously have gone very differently for Rowan. \n\nThe loss of this freedom had suddenly hit her when Jordan had sternly suggested she'd have to check with Riley as well as with Megan, when Rowan had joked about hooking up with Jordan. Riley would certainly have been as disapproving of this idea as Megan would have been. Did that mean that Riley was to her what Megan was to Jordan? \n\nWhen Riley returned from the bathroom she looked pale and there was a sheen of sweat on her forehead and nose. \n\n\"Are you alright?\" Rowan asked. The booze had caught up with her, it seemed. \n\n\"I think I need to go home...,\" Riley replied in a small voice. \n\n\"That's a good idea. I'll take you.\" Rowan felt bad for Riley but she was glad the girl had at least reached the right conclusion. \n\n\"No! You're a womaniser and you're not coming anywhere near my house.\" Riley's earlier anger came back in full force. \"I'll call Sarah or Jenny and ask them to pick me up.\" She started patting her pockets for her phone. \n\n\"It's one in the morning. Come on. Your friends are probably sleeping. Wait here for a second, okay? I'll just tell Megan we're leaving.\" \n\nBefore Riley could protest any more, Rowan rushed off to find Megan. Fortunately, she found her quickly in the small flat, as many of the other guests had already left. \n\n\"Meg, hey. We're going to take off. I need to get Riley home. She's a bit upset.\" That was the understatement of the century. \n\n\"What happened?\" Megan switched immediately to concerned friend mode, even though Rowan could hear she'd also had a few drinks and she was enjoying life; Megan had always been a happy drunk. \n\n\"No idea. She was asking these weird questions all of a sudden, like how many women I've been with. No idea what's gotten into her head!\" \n\n\"Oh... Shit...\" \n\n\"What? What it is, Meg?\" \n\nMegan's face had dropped and her earlier giddiness had disappeared completely. \n\n\"Oh, I'm so sorry, Rowan. I said something. I think I may have caused this.\" She looked devastated. \n\n\"Why? What did you say?\" Rowan tried to stay calm. How bad was it? How much damage control would she have to do? \n\n\"I can't remember exactly how it happened, but I was telling her that she'd shown you she was different from all the other girls you'd been with... I mean, she is different, right?\" \n\nWhen Rowan didn't respond, she added: \"She seemed happy about that at first, but then she asked me how many others there had been. She seemed pretty upset after that. I was going to find you and tell you, but I never got around to it. It completely slipped my mind. I'm so, so sorry, Rowan!\" \n\nRowan was trying to assess the severity of the situation. \"What did you tell her? About the other girls?\" \n\n\"I didn't tell her anything! I said she should talk to you.\" \n\n\"Well, she did that...,\" Rowan mumbled. Then, realising this wasn't her friend's fault she said: \"Thank you for not saying anything. You were right in telling her to come to me.\" \n\n\"I should never have mentioned anything! I don't want this to come between you two.\" \n\nLeave it to Megan to worry about the beautiful fairy tale romance shattering because of a bit of history better left buried. \n\n\"Hey, don't worry about it. We would have had to address it at some point. I can't take away the women I've slept with - and I wouldn't want to. I don't expect you to cover for me. If Riley can't cope with my past...\" She trailed off and saw the panic in Megan's face rising. \n\n\"Anyway,\" she continued quickly, \"the main thing is that I get her home now. She's quite drunk.\" \n\n\"Make sure she's okay.\" Megan's voice was still laden with guilt. \n\n\"It's not my first time taking a drunk girl home.\" Rowan winked at Megan, trying to lighten the mood. \n\n\"I know. Just don't do what we did then...\" \n\nRowan grinned, glad to see her friend smile. \"You know me better than that.\" \n\nMegan gave her a sceptical look, which made Rowan laugh. \n\n\"You weren't that drunk and you were literally begging for it. And I was kind of drunk too; what was I supposed to do? You know I can't resist you.\" She gave Megan one her most over-the-top sleazy grins. \n\nMegan laughed. \"Alright, alright, enough of that! Go on, get out of here!\" \n\n\"Don't worry. I'll be a perfect gentleman. Thanks for the party. Please thank Jordan from us too.\" \n\nWhen Rowan returned, Riley wasn't where she left her. Why did 'wait here' never work with drunk people? She should have known better. \n\nAfter a brief search, Rowan found her outside, sitting next to a bush at the front of the house. \n\n\"I'm really not well...,\" Riley admitted, looking even greener than before. \n\nRowan couldn't suppress a chuckle. \"I can see that. Now can I take you home?\" \n\n\"Okay, but only because my phone has died and I can't remember how we walked to get here. I'm still upset with you, though.\" \n\n\"Of course, duly noted. Let's go.\" \n\nRowan helped her up and led her towards the sidewalk. A walk would do her good at least; sober her up a little. \n\nReaching Riley's house was a bit of a struggle because Riley kept wanting to sit down and go to sleep. In addition, she couldn't quite remember how to get to her place and Rowan had never been there. \n\nRowan had considered bringing her to her own apartment instead, but she knew that she herself preferred to be at home when she wasn't feeling well. She imagined Riley would feel better waking up in her own bed. \n\nWhen they at last made it through the door, Riley staggered off in the dark. Rowan followed her, trying not to trip over anything or bump into things. \n\nReaching the top of the stairs, it appeared Riley had made her way to her bedroom and Rowan heard her collapsing on the bed. She found a light switch next to the bed. \n\n\"Let's get you out of these clothes,\" she said, reaching out. \n\n\"No! Go find another girl to take advantage of, player!\" \n\nRowan chuckled. \"Come on, you'll be much more comfortable.\" \n\nAs she struggled with Riley's top, pinning her belligerently waving arms down, she reflected on what Riley had said. Rowan knew that she was only saying it because she was drunk, but drunk people told the truth, didn't they? What if she really was just a player? What if that was who she was meant to be? Why was she here playing at relationships? \n\nShe eventually managed to get Riley's top and trousers off but left her underwear. She didn't want Riley to wake up naked and wonder what had happened. \n\nShe couldn't help but admire the girl's body: her breasts, looking full in her lacy bra; her flat belly; her long, elegant legs. \n\nIt had been so long since Rowan had seen her without her clothes on. She had been thinking about it a lot; she had pictured undressing her again. This was obviously not the situation she'd imagined. However, seeing Riley half-naked now - even though she was drunk, even though she was currently snoring quietly - made Rowan's body stir. If only the blonde wasn't so drunk... \n\nThose were the thoughts of a player, weren't they? Those were not the thoughts of a loving girlfriend. Was that what she was supposed to be, a loving girlfriend? \n\nRowan was surprised when her usual discomfort at the word remained absent. She gave Riley another appreciate gaze. She knew she should not be looking at her this way when she was in this state. Girlfriend or not, Rowan would never take advantage of a drunk girl. \n\nHowever, listening to Riley's relaxed breathing, she felt something else; something she couldn't immediately place. A wave of affection washed over her, as if she was looking at a puppy or a kitten. She felt strangely protective over the sleeping girl; she felt responsible for her being safe and well. \n\nShe suddenly realised she wanted to stay. She had to make sure Riley was okay. It would be a super early start to get to work, but there had to be a bus she could catch from her. It didn't really matter; she would make it work. \n\nAfter making sure Riley was comfortable and leaving a glass of water, some painkillers and a just-in-case bowl by her bed, Rowan made her way into the living room. The room was tidy and dominated by a large bookcase, a piano, and a large comfy sofa. A small coffee table and a TV stand with a modest flat-screen completed the room. \n\nCuriously, Rowan scanned the book shelves. There were a fair number of books related to security, cryptography, infrastructure, and other IT related matters; her work resources. The other shelves were filled with fiction: mostly fantasy, by the looks of it. \n\nRowan picked up a copy of 'The Fellowship of the Ring' that looked really old. Perhaps this was a collectors' item because Riley had the same book as part of a set sitting on the shelf below. \n\nSo the girl liked reading? They hadn't discussed this before and Rowan was pleased to discover this. She had a sudden vision of relaxing on that sofa with Riley, both engrossed in books. \n\nWhere did that come from? Since when did she waste valuable time with hot girls reading books? \n\nSurprised by her own thoughts yet again, Rowan moved on. She perhaps shouldn't be snooping but someone's house said so much about a person. It was like she was getting to know Riley more with each object she picked up. \n\nShe browsed a small collection of DVDs in the TV stand: mostly chick flicks; she'd have no choice but to tease Riley about that later. 'The Horse Whisperer'; really? Rowan would have to introduce Riley to some classics and broaden her horizon. \n\nSo, now she wasn't only reading books with Riley but watching movies too? This was starting to get dangerously close to girlfriend territory. At least, as far as Rowan could judge; she'd never actually had a real girlfriend. \n\nShe felt strangely at ease in Riley's home, considering she'd never been there before. She realised she could easily picture herself spending more time here; spending more time with Riley. ",
        "She waited for the inevitable wave of distress, which didn't come. Completely absent was that iron fist that usually seemed to grip her throat and constrict her breathing when she considered being tied to one person and one person only. \n\nInstead, she realised she was smiling. Could she actually do this? Have a relationship with Riley? Be with her whenever they chose to be? Be true to her? Did she actually want these things? Perhaps she did. \n\nSomething niggled in the back of her mind and caused her smile to fade. Riley now though she was a massive player and had slept with armies of women. It was kind of true but it had taken a drunk freak-out to show that Riley was not as okay with this as she may have seemed. \n\nIf Rowan wanted to make this work, she had to sort out this issue with Riley. Of course, she couldn't take away her history, but she could be honest and open; tell Riley what she wanted to know. She may not understand everything - much less be happy about everything - but Rowan knew it was the only way to even the playing field. She had to come clean, about everything. \n\nPleased with her resolution but suddenly exhausted, Rowan sat down hard on the sofa. She had to get some sleep. At least the sofa was long enough for her to stretch out on and it seemed comfy enough. \n\nShe found a fleece blanket, which Riley probably used for snuggling on cold evenings, and pulled it around herself. She settled down and arranged one of the big cushions under her head. This would work. \n\nShe'd nearly dozed off when suddenly something jumped on her with a satisfied purr. Rowan recovered from her shock quickly when she remembered Riley saying she had a cat. Clearly, this one had waited until Rowan was down to come and show that this was his house. \n\n\"Hello handsome,\" Rowan said, stroking the cat's head. \n\nIt purred again and pushed into Rowan's hand, before settling down on her chest and going to sleep. Its relaxing presence soon sent Rowan off to a dreamless slumber. \n\n* * * * * \n\nRiley was awoken by a gentle head butt against her nose. She groaned as this friendly sensation was immediately following by a heavy pounding in her head. \n\n\"Hey Chopin,\" she croaked, stroking the cat's head. \n\nHer mouth was dry and her voice clearly needed a bit of a warm-up. She recognised the tell-tale signs; where did this hang-over come from? Was she that drunk last night? \n\nLast night; what had happened last night? Riley struggled to remember anything. She gently looked around the room for clues. \n\nThe alarm clock told her it was 11.30 am. That was strange. Usually her cat would have woken her much earlier, demanding food. Unless he had tried but Riley had been completely non-responsive. In that case, he must be starving now. \n\n\"Are you hungry?\" She asked the cat, pleased to hear her voice a bit more audible now. \n\nChopin looked at her with a neutral expression and certainly didn't act as if the world was ending, like he usually did. Had Riley gotten up to feed him earlier and come back to bed? If she had, she couldn't remember. \n\nOn the side table next to her bed were a glass of water and a box of painkillers. Grateful, Riley took some, carefully lifting herself up while battling the increased pounding. As she did this, she noticed a bucket on the floor. Charming. Thankfully, it was empty. \n\nRiley's brain still struggled to comprehend the situation. Judging from the way she felt, she had been very drunk last night. Yet, she seemed to have been the most pre-emptive drunk ever; predicting exactly what she would need in the morning or during the night. None of it made any sense. \n\nIt wasn't until she saw her orange prison uniform neatly folded on the chair in the corner that snippets of memories started drifting in. The costume. The party. Rowan. \n\nA smile started around her lips when she remembered snuggling with Rowan in an armchair, talking, kissing. However, now that the stream of memories had started, she couldn't stop it. Where the memories were trickling in at first, more now came rushing, flooding her fragile head with thoughts she wasn't ready for: her conversation with Megan; the one with Sam; with Rowan... \n\n\"Oh god...,\" she moaned out loud, as pieces of her conversation with Rowan slowly came back to her. \n\nWhat had she said? What had she done? She remembered picking a fight. She remembered calling Rowan a player; telling her to go away; not wanting Rowan to take her home. She realised that Rowan must have done so regardless. \n\nAn image rushed into her head of Rowan taking her top off. She peeked under the duvet; she was still wearing her underwear. What did that mean? Had anything happened? She couldn't remember, much as she tried. This was bad. Where was Rowan now? She clearly wasn't in Riley's bed. Had she left? \n\nRiley tried to piece together more of what happened last night. Megan not wanting to tell her how many women Rowan had been with. Sam admitting she'd slept with Rowan. Rowan flirting with Jordan. Her confronting Rowan. A wave of nausea hit her. She ran to the bathroom; the wine and the anxiety had finally caught up with her. \n\nFlushing the toilet a few minutes later, she flopped down on the bathroom floor. She had been such a dick. No wonder Rowan had left. Riley could hardly blame her if she'd left forever. Just when things had been going so well, Riley had to go ahead and ruin it with her insecurities and invasive questions. \n\nFeeling equal measures of angry and sorry for herself, Riley dragged herself downstairs. She couldn't face thinking about how to continue her life knowing that she'd chased Rowan away with her own erratic behaviour. She needed coffee; coffee would fix things. \n\nThe first thing Riley noticed in the kitchen was the half full cat bowl. Characteristically, the best bits had been eaten from the middle while some drier chunks were caked around the edges, suggesting the eater had gotten bored of the mundane task of picking up food halfway through. Clearly, this was a fresh bowl of food. Or rather, it had been a few hours ago. Who had fed her cat? Riley felt like a detective analysing a murder scene. \n\nOn the kitchen counter was Exhibit B: a random and seemingly unrelated collection of items. Riley first picked up the paper bag bearing the logo of the coffee shop around the corner. Inside were a croissant, a plain crusty roll, and a savoury pie of some sort. Riley's stomach protested at the fresh bread smell wafting her way. \n\nShe now saw a note that must have been obscured by the bag at first. Maybe this investigation would be swift after all. \n\n[Morning straight girl. I hope you're not feeling too rotten this morning. I had to leave for work but I got you some breakfast, in case you were up for that. If not, I've also left you my personal go-to for hang-overs. Eat it all. Drink the juice too. Trust me, you'll feel better. X R.] \n\nRiley sat down heavily. Here she was, thinking she'd completely ruined things with Rowan, feeling sorry for herself, while Rowan had done all this. \n\nThe mechanic had clearly stayed here all night; had gotten up ridiculously early to trek across town in time for work; and had even found the time to go get breakfast and feed Riley's cat. This made Rowan the best girlfriend ever, if that was indeed what she was to Riley. \n\nThey'd still not had that conversation and after the way Riley had behaved last night, she wouldn't be surprised if Rowan wanted to take things down a few notches. \n\nAt least Rowan hadn't run away screaming. She'd still taken drunk Riley home and stuck around to make sure she was okay; that made her a good friend at the very least. \n\nBut Riley didn't want to be just friends with Rowan. This unexpected sweet gesture only cemented that in her head. She wanted to wake up to sweet notes from Rowan and cute little surprises. Better yet, she wanted to wake up to Rowan in bed next to her. \n\nThis meant she had to find out where she stood with Rowan and, more importantly, she had to apologise for behaving like a complete asshole. \n\nTheir argument last night - or rather Riley's attempt at arguing with Rowan - had now mostly come back to her. Riley had been trying to find out how many women Rowan had slept with. She hadn't gotten anywhere near an answer, but her suspicions had been confirmed that there had been a great number. \n\nIn her inebriated state, this had upset her more than she'd realised. Of course, it would have been cute and romantic if they had been each other's firsts, but that was clearly a ridiculous notion when it came to Rowan. But why did it matter so much to Riley who had gone before her? \n\nRiley pictured all the beautiful women who not only had the looks to lure her handsome mechanic into bed, but also had the skills and the experience to know what to do once they got there. How could she compete with that? She, who wasn't particularly pretty and certainly didn't know what she was doing in the sapphic bedroom. \n\nOn the other hand, Rowan seemed interested enough in her to have stopped sleeping around; or so she said at least. And she had certainly been keen to try the strap-on, as per Riley's suggestion. \n\nThat was meant to have happened last night, Riley suddenly remembered. She'd felt ready to take the next step with Rowan. Did she still feel that way? Did Rowan's history really matter? Surely it was the present she should be focussing on? \n\nRiley's brain was protesting all these profound thoughts with a dull pounding. She still hadn't had her coffee but suddenly the distance to the coffee machine seemed the width of the Grand Canyon; impossible to bridge with her aching body. \n\nShe had to fix this hang-over if she was going to do any relationship fixing or apologising today. And there was no doubt in her mind now; that had to be done. \n\nShe suddenly remembered Rowan writing something about 'her personal go-to for hangovers'? Riley looked at the only remaining item on the counter: a jar of pickles. Eat all of that? Drink the pickled juice? That was disgusting. Surely, that wasn't what she meant? \n\nRiley didn't like pickles on the best of days but the mere thought of it now made her stomach twist in protest. If only she could get to the coffeemaker... Maybe she should shower first. Or lie down for a bit. Or just stay here and rest her head... \n\nIt was almost seven when Riley rang Rowan's doorbell. Rowan should have finished work. It had taken Riley a few hours after finding Rowan's note to get her act together and start feeling a bit more human. With a few stops on the way to Rowan's, it had taken her a long time to get here. But at least, having walked here, she now felt mostly okay. \n\nShe hated to admit it but it was probably the pickles that did most of the curing. She'd tried to nibble one very carefully and it hadn't been as offensive as she'd expected. After two or three, she'd forced herself to eat the plain bread roll and had slowly managed to have a shower, make some coffee and tidy the mess she'd left in her hangover wake. \n\nShe had utterly surprised herself when a while later she'd found she'd eaten all the pickles and actually felt a lot better. Maybe she should put a bit more trust in Rowan's weird ways. \n\nRowan appeared in the doorway in joggers and a tank top. Wasn't she aware it was winter? Clearly, her body realised that now that she was standing in the open doorway; Riley could see her hardening nipples push into the fabric of her top. \n\nThe ensemble reminded Riley of the morning she'd woken up here, when Rowan had been very similarly dressed. She hadn't been wearing any underwear then, Riley fondly remembered. She wondered if she was now. \n\nRowan put the towel that was in her hand around her neck, which instantly made her look like the hottest person at the gym. Riley noticed her hair was wet and had been dripping onto her shoulders. \n\nCatching Riley looking at her clothes, Rowan said: \"I just threw this on. I was in the shower.\" \n\n\"I'm sorry I missed that,\" Riley responded, cheekier than she felt. \n\nRowan smiled but kept looking at Riley expectantly. Of course she was wondering why Riley was here. \n\n\"Do you have plans tonight?\" Riley started. \"Do you have time for apologetic sushi?\" She held up the take-out bag. \n\n\"That's my favourite kind,\" Rowan grinned. \"And I see you went to my favourite place too. How did you know?\" \n\n\"Megan,\" they said at the same time. Once again, Riley had turned to Rowan's best friend for advice, which she'd been more than happy to provide. \n\n\"I also brought you this.\" \n\nShe gave Rowan the bottle of her favourite whiskey. She'd had to message her friend Ollie to ask for the name of the stuff. In the shop she'd been horrified at the price. How did Rowan afford to drink this? She'd figured considering the giant mess she'd made, it was more than worth it. \n\nRowan looked impressed. \"Wow. Thank you. Did I forget it's my birthday?\" \n\n\"I'm so sorry I've been such a dick. Please can you just forget all the stuff I said last night?\" \n\nRowan frowned and seemed to be considering it. Riley waited anxiously. Surely Rowan would forgive her, or at least give her a chance to make it up to her? \n\n\"Can't do that I'm afraid...\" \n\nRiley's heart dropped. \n\n\"I'll definitely have to use some of it against you at some point. It would be too much fun not to. But you are forgiven for being a dick.\" \n\nRiley felt a surge of relief and was suddenly lost for words. All she could do was smile gratefully. \n\n\"Are you coming up?\" Rowan asked, already turning around. \n\nRiley nodded and swallowed hard to suppress her nerves. This was going to be the first time she was alone with Rowan in her apartment since their first - and only - wild night together. So far, she'd been avoiding the temptation being here would bring. But tonight, she wasn't worried about the temptation. She was ready to give into it, if Rowan still wanted to. \n\n* * * * * \n\n\"Do you want a drink?\" \n\nRowan walked into the kitchen while Riley followed shyly. She hadn't really expected any sign of life from Riley today - let alone a visit - but the girl looked like she'd recovered fairly well. \n\nRowan peered into the fridge. She didn't have much. She wasn't prepared for visitors. \n\n\"Beer?\" She asked, grabbing one for herself. \n\n\"Oh, no thank you. I'll just have some water, please.\" \n\nRowan laughed. \"Still feeling a bit delicate?\" \n\nRiley nodded and looked embarrassed. \n\n\"Did you eat the pickles?\" \n\n\"I did,\" Riley admitted, \"and I think they helped.\" \n\n\"Did you drink the juice?\" \n\n\"I considered it... but no. That's where I drew the line.\" \n\nRowan had to laugh again at her disgusted facial expression. \"Well, there you go. If you had, you'd be right as rain now.\" \n\n\"Maybe...,\" Riley said, unconvinced. \n\n\"I guess I shouldn't drink this rather aromatic whiskey now either then?\" \n\n\"Not if you want me to stay...\" Riley's face seemed to take on a green sheen at the sheer thought of the smoky aroma. \n\n\"I can wait...\" Rowan winked at her. \n\nNow that she finally had Riley in her apartment, she wasn't going to let her go that easily, regardless of what would happen here tonight. \n\nThey sat down on the floor at the low coffee table in the lounge, after Rowan's suggestion that it was more in keeping with the Japanese atmosphere, and unpacked the sushi. \n\nRiley had done well; she'd chosen a great selection, including a few of Rowan's favourites. She'd probably been informed by Megan on that one too. \n\n\"Thank you for breakfast, by the way,\" Riley started, still looking shy and guilt-ridden. \"And for feeding Chopin.\" \n\nRowan chuckled. Of course the cat would be named after a classical music composer. \n\n\"You're welcome. He fell asleep on my face. I don't usually have that problem with pussies. Although he was very demanding about food in the morning; that part was familiar.\" \n\nShe grinned widely at Riley, who rolled her eyes and then smiled. That was better; she seemed to be loosening up a bit. \n\n\"Hey, erm, about that...,\" Riley started, clearly embarrassed now, \"about last night... Nothing happened, right?\" \n\nRowan had to laugh, more about Riley's mortified face than about the fact that she actually thought something may have happened. \n\n\"You mean, did we have sex? Before or after you passed out?\" \n\nRiley blushed profusely and Rowan immediately felt bad for making fun of her. \n\n\"No, nothing happened. I took your clothes off so you'd be more comfortable but I didn't take advantage of you.\" \n\n'Despite what you may think', she wanted to add. She thought better of it; there were better ways to address Riley's drunken concerns. \n\nThere was a pause in which they both focussed on eating their food; Riley considerably slower than Rowan. \n\n\"So, about what you asked me last night...,\" Rowan eventually broke the silence, having decided to come clean to Riley about her history. \n\n\"It's okay, really,\" Riley interrupted. \"I shouldn't have asked. It's none of my business and it's in the past. It shouldn't matter to me how many women you've been with.\" \n\nThe way she rattled that off made Rowan think that maybe Riley had been doing some thinking of her own; that she'd rehearsed what to say about the topic. It 'shouldn't' matter to her; that was clearly what she'd been telling herself. \n\n\"But does it?\" Rowan simply asked. \n\nRiley averted her eyes and played with her chopstick. \n\n\"A little bit,\" she admitted eventually. She looked up and directed her big blue eyes directly at Rowan's soul. \n\n\"But really,\" she seemed to force herself to continue, \"as long as you're not sleeping with other women anymore... You're not, are you?\" There was a sudden look of panic in her eyes. \n\n\"No, I'm not,\" Rowan reassured her, still surprised at how little it stressed her out now that she was justifying herself to another person. \n\n\"There is no one else. Somehow you've made me lose interest in other girls with your voodoo magic.\" \n\nThis brought a smile to Riley's face. As much as Rowan liked seeing her happy, she knew the topic still had to be addressed. She could not have this hanging over her head like Damocles' Sword; waiting to take her down at the next drunken or insecure moment. \n\n\"Anyway...,\" she tried again, \"I'm not going to lie to you: I have been with a lot of women. A lot... You asked for a ballpark figure, but the truth is, I couldn't tell you how many if I tried. I didn't exactly keep track... So, hundreds? Definitely. Thousands? Probably not...\" \n\nRiley looked pale and stressed-out. For a moment Rowan wondered if she would run off to the bathroom again. She knew she had to press on quickly. This was just the introduction for what she really wanted to tell Riley. \n\n\"I know that's not what you wanted to hear, but there's something you should know about that.\" \n\nRowan stopped, suddenly unsure how to go on. Apart from Megan - who had her own special way of getting information out of her - she'd never talked to anyone about this. \n\n\"What?\" \n\nRiley was looking at her with glistening eyes, waiting. Was she welling up? So much for it not mattering how many women there'd been. Rowan sighed. Here went nothing. \n\n\"It's always been very one-sided. I didn't want any of them touching me. I don't like other women touching me. I don't usually let them.\" \n\nRiley looked confused. \"What do you mean?\" \n\n\"I used to be... Well, I guess I still am, mostly, a bit of a stone butch.\" \n\n\"What does that mean?\" \n\n\"It's the opposite of a pillow princess,\" Rowan tried to explain in the simplest way possible. \n\nRiley clearly still did not understand and Rowan was reminded once again of how recently she'd stepped out of her straight, vanilla world. There was no reason for her to be familiar with these terms. \n\n\"It means I prefer to be the one touching a girl, eating her out, fucking her. Rather than her doing those things to me. I don't want women to return the favour, so to say. I just don't like it. It makes me feel... uncomfortable.\" ",
        "It was difficult to read Riley's expression now. She was looking intently at Rowan. Did she understand? Did she think that was weird? \n\n\"Why?\" Riley asked then, her expression visibly softening. \n\n\"I don't know... It wasn't always like this. I guess it's a way of opening myself up that I'm not willing to do; a part of me that I'm not willing to give up to a girl I'm just having fun with.\" \n\n\"But what about the girls you were with for longer? What about Diana?\" \n\nRiley hit the nail on the head; Diana was a complicated one. \n\n\"Diana was the definition of a pillow princess; it was all about her getting off for her. I guess that's probably when it started for me... It's not that she never did anything, but I guess I just got used to giving more than receiving and I found out I liked it that way. In hindsight, every part of that relationship was about moulding me into the person she wanted me to be, and making me believe I wanted to be that person; that I chose to be that person.\" \n\nRowan paused. She hadn't anticipated talking about Diana. But then, she had to admit that Diana was pivotal to her sexual past. If she was going to come clean about the past, Diana was a good place to start. \n\nShe continued: \"When we separated I found that I couldn't let that side in anymore; other people touching me, I mean. It wasn't even on my radar anymore. I'm usually, let's say, rather gung-ho about getting a girl off. As you may have noticed.\" \n\nRiley smiled at that. Rowan knew she had been particularly diligent with her that first night. She just had been so much fun to play with, in her lesbian virgin state of wonder. \n\n\"What about Megan?\" Riley asked. \n\nRowan had noticed before that she was very curious about Rowan's past with Megan. Time to come clean about that too. \n\n\"I think it just takes me a long time to get to a point where I may let someone in. I never stick around that long. Apart from Diana, Meg has been the only other one who's been around long enough. She's helped me a lot to explore beyond my own boundaries. She showed me that I can enjoy receiving too, but it took a long time before I even let her try.\" \n\nRiley looked pensive. This was probably not what she wanted to hear about: the intimate, life-altering experiences Rowan had had with other women. \n\n\"But I touched you, that first night,\" Riley said in a small voice, her big eyes once again holding Rowan's. \n\nSo she did understand what Rowan was getting at. \n\n\"Yes,\" Rowan said, almost relieved, \"and you made me come. And I very much liked that. That was kinda new... That's usually something I keep in my own control too. I told myself at the time that it wasn't a big deal; that I got carried away in the heat of the moment, but I think I wasn't being completely honest with myself.\" \n\nRiley looked at her with her innocent eyes and Rowan felt an overwhelming urge to kiss her. She forced herself to keep talking, to get the words out she needed to say. \n\n\"I guess that's my point. It was different with you, that time. It is still different with you. And that is a big deal. I've been thinking and I feel like I could... I do... want to try those things with you, if you do too... When you are ready, of course.\" \n\nRowan had never felt this nervous. That was a big deal too. Since when did she get nervous around girls? But there it was, her soul laid open and bare, for Riley to either accept or reject. \n\nTo give herself something to do, she got off the floor and sat down heavily on the sofa. \n\n\"Well, I've been doing some thinking too,\" Riley started, making Rowan's heart beat faster with nervous anticipation. \"And I am ready,\" she concluded. \n\nIt took Rowan a moment to comprehend that simple statement. She'd been waiting so long that now that the moment was here, it didn't seem real. \n\nShe stammered: \"Are you sure? I'm happy to wait. Well, happy is a big word, but I don't want to ruin what we have...\" \n\n\"And what's that?\" Riley asked with a sly grin. \n\nGotcha. Rowan laughed. That was the key question, wasn't it? \n\n\"A platonic relationship?\" She offered, still unable to name whatever it was they had by using the 'g-word' out loud. \n\nRiley laughed too. \"Nice save! Well, that's definitely about to be ruined then.\" \n\n* * * * * \n\nRiley felt honoured that Rowan had shared this important part of herself with her. She could hardly believe that out of the legions of women Rowan had slept with, only a few had had the privilege of touching her, of making her come. That was big, wasn't it? \n\nOf course, it wasn't great to hear that the woman who she hoped would be her girlfriend had hundreds of women to compare her to, but Rowan considered her to be different; from all of them! \n\nRiley climbed into Rowan's lap. She kissed her softly and let her lips linger. \n\n\"Thank you for telling me,\" she said softly. \n\n\"Are you okay? I mean, about the other women; the stone butch thing? Everything?\" \n\nRiley felt touched that she cared so much. \"I am. Because it's part of you, and I want all of you, just as you are.\" \n\nShe saw the relief on Rowan's face as she smiled and pressed her lips to Riley's. This time her tongue caressed Riley's lips. Her hands moved onto her buttocks. \n\n\"Rowan...\" Riley whispered into Rowan's lips. There was one more thing she wanted to clarify, after what Rowan had told her. \n\nRowan took a moment to pause what she was doing. \"Yes?\" She murmured, her lips still attached to Riley's. \n\nRiley moved her head back so she could look into Rowan's eyes. \n\n\"I really do want to touch you but I want you to tell me if I make you uncomfortable, okay? We can take this slow...\" \n\nRowan looked back at her for a moment, with an expression Riley couldn't read. Then she grinned and said: \"Do you really think you'll be able to stop?\" \n\nRiley accepted Rowan's decision to make light of the situation. Clearly, there were still a few emotions too close for comfort for the mechanic. \n\n\"I might...,\" she replied with a wink. \n\nWhen their lips met again, they wasted no time parting them, letting their tongues meet. Despite the fact that by now she'd shared a lot of kisses with Rowan, Riley knew she would never get bored of the feeling of kissing her; of feeling her tongue brush against her own lightly at first; of feeling it push and turn more adamantly as the contact continued, eager for more. \n\nRowan's hands moved from her butt to her back, pulling her closer. Riley knew they wouldn't stay there for long. There were other parts of her body Rowan was more interested in. And, she had to admit, she was more interested in Rowan going there.  \n\nNow that she had decided this was going to happen, she could hardly wait. She was going to have sex with Rowan. Although it wasn't their first time, it felt like it was. It was the first time in which they were more to each other than a quick fling; in which they both agreed that there would probably be more after. \n\nRiley interrupted their increasingly lascivious kisses to pull her shirt over her head, exposing her lacy red bra to Rowan. \n\nHer action had the desired effect. Riley saw with delight how Rowan's eyes widened slightly and her mouth opened inadvertently. Her hands moved as if drawn by a magnet. She cupped Riley's breasts from below, while her head dipped down to kiss the soft skin above, which was pushed up into an enticing swell. \n\nRiley let her have her moment until her lips were starting to crave Rowan's attention. She pulled Rowan's head up, receiving a faint grunt of disappointment. \n\n\"Don't give me that,\" she said with a reprimanding look, \"I need you up here too.\" \n\nRowan grinned broadly. \"But look at them... They are so beautiful.\" \n\nRiley smiled happily. She could hardly take credit for the appearance of her breasts - she had Mother Nature to thank for that - but Rowan's appreciation felt like her greatest achievement. She pressed her lips to Rowan's gratefully. \n\nThe thought of touching Rowan resurfaced and Riley's body responded eagerly. She felt a wave of nerves, immediately followed by that all-familiar rush of excitement that usually made her press her thighs together to try to contain the wetness. Of course, straddling her hot mechanic, she couldn't do that and she felt her knickers getting soaked with her keen anticipation. \n\nRiley's hands were on their own mission, clearly urged on by her throbbing sex, which appeared to be taking over control of her limbs. Rowan gasped as Riley's hand slipped under her shirt and onto her flat belly. Riley paused for a moment. Was this still okay? \n\n\"Just cold...,\" Rowan reassured her, as her teeth grazed Riley's neck. \n\nEncouraged, Riley let her hand slide further until her fingertips met the subtle swell of Rowan's breast. \n\nStill fighting her nerves at being one of the very few who had ever touched Rowan here, she pressed on, cupping her hand gently over Rowan's breast. Much smaller than her own, it fit easily in her hand and Riley massaged it gently, getting used to the feel of it. \n\nShe kissed Rowan's neck as her fingers stroked her areola. She felt the nipple hardening and gently rolled it between her fingers, as she took Rowan's ear lobe into her mouth and sucked on it. \n\nRowan sighed and stroked the back of her head. Encouraged, Riley slid her other hand under Rowan's shirt too and cupped both breasts, savouring the feeling of the hard nipples against her palm. \n\nAs she explored her confidence slowly grew and her fingers played with Rowan's nipples more daringly. Rowan kissed her lips eagerly, clearly still feeling comfortable with Riley's touch. Would she also be okay with Riley going further? \n\nAs soon as she'd allowed the thought in, she knew she wouldn't have the self-control to wait much longer. She wanted to feel Rowan, all of her, and she wanted it badly. \n\nShe held onto one breast, as if to distract Rowan's attention from her other hand, which she slid down over Rowan's stomach and her belly button, until she reached the waistband of her joggers. \n\nWith great reluctance she paused for a moment to give Rowan a chance to stop her. When no objection came, Riley untied the thick cotton cord that held the joggers up around the lean woman's body. She slowly slipped her fingers inside the waistband. She chuckled when she didn't encounter another elastic band underneath. \n\n\"No boxers, again?\" She asked with a grin. \n\n\"I wasn't expecting company,\" Rowan replied, returning the grin. \n\nClearly going commando was quite a regular for at-home Rowan. The thought sent an excited quiver to Riley's lower body. She would never be able to pull that off. She'd be dripping down her legs half the time. Maybe Rowan didn't have that problem. She couldn't wait to find out. \n\nShe eased her hand further down, keeping contact with Rowan's skin. Although she'd been here before, there was much more gravity behind her actions now that she knew Rowan's feelings about it. \n\nHer fingers grazed the top of the coarse hair on Rowan's mound. Riley couldn't help looking into the mechanic's eyes, trying to gauge her reaction. \n\nThere was a faint smile on Rowan's lips, but also an intense depth to her eyes that Riley felt herself drawn into while her hand was drawn further down. \n\nRowan's body gave a tiny twitch when Riley's fingers reached the top of her lips. Riley tried to control her urge to plunge straight in and let her finger travel down first, tracing the soft contours of Rowan's lips. \n\nReaching the end, Riley encountered the first signs of Rowan's excitement and she gently dipped her fingers in the slick wetness. Rowan twitched again and Riley looked up to see if she was still okay. \n\nRowan smiled reassuringly. \"Go on...,\" she said quietly. \n\nRiley didn't need any more encouragement. She slipped between Rowan's lips and revelled in exploring the soft, silky folds of Rowan's sex. So much for her thought that maybe the mechanic didn't get as wet as she did... \n\nWhen Riley finally grazed Rowan's clit, a sigh escaped the mechanic's lips. \n\nNo longer worried Rowan was having second thoughts about letting Riley touch her, Riley circled her clit in the way she liked it herself. She wasn't sure how Rowan preferred it. She was sure Rowan gave her a few pointers last time, but she'd been in a bit of an amazed daze then, so she couldn't recall any specifics. \n\nAs if reading her mind, Rowan said: \"Oh yeah, just like that...\" \n\nIt came out in a low groan that excited Riley as much as what her fingers were doing. She really was making her lover feel good. \n\nShe felt Rowan spread her legs a little further underneath her and raise her hips to meet Riley's touch. Encouraged, Riley rubbed her a bit harder. Was that what she wanted? \n\nAs a response, Rowan grabbed the back of her head and pulled her into a kiss. Her tongue entered Riley mouth powerfully at the same time as her other hand pushed down on Riley's from outside her joggers. \n\nRowan groaned into their kiss as Riley's fingers crushed harder into her clit. A memory rushed back into Riley's mind: Rowan had done the same last time, urging her to press harder. She did like it rough, then. \n\nRiley did her best to keep up her speed and pressure as she switched to an up and down motion. She was guided by Rowan's hand, which had now moved inside her joggers too. Riley was glad for the instruction; she wanted to make Rowan feel as good as she felt; to make her come as hard as she was rubbing her. \n\nWith a sudden move, Rowan snatched Riley's hand away and broke free from their kiss. Riley looked at her in confusion. Had she hurt her? \n\n\"Not yet!\" Rowan gasped. \"I don't want to come yet.\" \n\n\"Awww,\" Riley pleaded, kissing Rowan's lips teasingly and twisting away from her grip to dip her fingers back into her pussy. \"Please?\" \n\nRowan pulled Riley's hand out of her joggers resolutely and pinned both her hands behind her back with one of her own. She had such a strong grip. Her free hand now traced the exposed top of Riley's breasts again. \n\n\"It's much more fun to stay this horny a bit longer...\" \n\nShe followed the contour of Riley's neck up and grazed her sensitive skin with a short fingernail. Riley shivered involuntarily. \n\n\"Yeah, that's what I thought...,\" Rowan added, pressing her lips onto Riley's neck. \n\n\"I want to see you,\" Riley sighed. \n\nShe surprised herself. She hadn't been aware of the thought before it had left her mouth. \n\n\"What's that?\" Rowan said distractedly, still nibbling on Riley's neck. \n\n\"Please can I see you? All of you?\" \n\nLast time she'd touched Rowan, it had been inside her boxers, just like it had been inside her joggers now. Even after, Rowan had kept her boxers on the whole time, Riley now realised. \n\nShe had never actually seen Rowan's pussy, and even the rest of her body had been mostly covered by her duvet or hidden against Riley's own body. She hadn't really thought about it at the time, but now she understood that was probably also a common theme for Rowan. Was Riley special enough to see her as well as touch her? \n\nRowan surprised her by not saying anything. Instead she got up from the sofa, lifting Riley's body along with her own. A surprised squeak left Riley's lips. \n\n\"Where are we going?\" She asked, as Rowan started carrying her off as if she was as light as a pile of clothes. \n\nThis woman was freakishly strong. But then, she probably spent half her day dragging around heavy motorcycle parts. \n\n\"To the bedroom,\" came the simple reply. \n\nThat had to be a good sign, right? \n\nRowan laid her down gently on the bed and switched on the bedside lamps. Riley shuffled herself up a bit to lean against the pillow and moved to one side so Rowan could join her. However, the mechanic remained standing at the edge of the bed and winked at her. \n\nShe then pulled off her shirt in one smooth motion, exposing her small breasts. Riley felt like a girl in a teenage rom-com, gasping at the handsome new hunk in school taking off his shirt after sports practice on a hot day. \n\nRowan's broad shoulders extended perfectly into her muscular arms, one of which was covered completely in those beautifully realistic tattoos. Her nipples now stood erect, making her breasts look neat and pointy. \n\nRiley allowed her eyes to roam over Rowan's flat belly. She could see the outline of her abs at the top and she knew that with even the slightest tightening of her core, the other four of the six pack would make an appearance. \n\nRowan rested her hand on the waistband of her joggers and looked at Riley with a grin. It wasn't shyness or reluctance to show her body that was making her pause; she was teasing. 'You want to see what's underneath, don't you?' that look said. \n\n\"Take them off... Please,\" Riley said, after what felt like an eternity of Rowan's look challenging her. She couldn't wait a moment longer to see the rest of Rowan's gorgeous body. \n\nRowan was clearly satisfied. She gave the waistband a small push past her narrow hips. The baggy material slid easily down her legs. She stepped out of the joggers matter-of-factly and looked at Riley as if to say: 'Happy?' \n\nRiley sure was happy. She took in the sight of the part of Rowan's body that had been so well hidden. Where her lean legs met was a neatly shaped triangle of short, dark hair. The point of the triangle ended where her lips began, leaving these shaved clean and looking inviting. \n\nRiley realised she was staring but she couldn't draw her eyes away. She desperately wanted to roam her fingers through that coarse triangle again, and into the valley below. \n\n\"Your turn.\" \n\nRowan's voice drew her out of her reverie. The mechanic was looking at her and gestured for her to come over. \n\nRiley felt instantly shy. Of course Rowan had seen her naked before, but that time her clothes had come off gradually, in the course of their love-making. She could never strip off while Rowan was looking at her with that level of intensity. \n\n\"Come on, don't be shy,\" Rowan said, taking her hand. Clearly Riley hadn't done well keeping that emotion from her face. \n\nShe slowly got off the bed and stood in front of Rowan. At least she wasn't starting completely from scratch. Her shirt had already come off in the living room and had been forgotten ever since. \n\nRealising Rowan wasn't going to make this any easier on her, Riley sighed and nervously undid her trousers. She pushed them down and awkwardly kicked them off her feet. Only then did she look up at Rowan's face. \n\nThe mechanic was taking in the sight of her, still with the same level of intensity in her eyes. Riley had done her best to look good in her matching bra and g-string and she could see her efforts did not go unnoticed. \n\n\"Damn, girl...,\" Rowan's voice came as a husky whisper, \"you are gorgeous.\" \n\nRiley smiled shyly and, encouraged by Rowan's praise, started doing a quick twirl. \n\nShe never made it past the halfway point; Rowan grabbed her hips and held her in position with her back towards her. She felt Rowan's eyes roaming over her backside for a moment, before the mechanic pressed herself into her and wrapped her arms around her. \n\n\"You have the cutest butt in the world,\" Rowan hissed in her ear, pressing her hips firmly into Riley's backside. Somehow it sounded like an accusation. \n\n\"Erm... I'm sorry about that?\" Riley tried. \n\nRowan chuckled. \"Don't be. It just makes it very hard to just stand there and watch. That's all...\" \n\nHer hands moved across the front of Riley's thighs and pulled her even more firmly against Rowan's lower body. She felt the mechanic shift slightly, her pussy hair scratching Riley's butt cheeks as she pressed into her. \n\nRiley suddenly realised the power she had. She leaned forward slightly and pushed her ass back into the hollow of Rowan's body. \n\nRowan's hands moved to her hips, giving Riley space to bend over more. Riley gave the tiniest wiggle with her backside. She wasn't sure what was guiding her movements, but it sure wasn't any rational thought. She never would have believed she would be capable of being so uninhibited around her hot, experienced lover. ",
        "\"You're such a tease,\" Rowan groaned, pulling back firmly on Riley's hips and grinding her crotch against her butt. \n\nThen she pushed Riley away resolutely and swung her round to face her. Her breathing was ragged, as if it had been a great effort to do so. \n\n\"Lose the underwear, now!\" \n\nThere was a feverish look in Rowan's eyes. \n\n\"Or what?\" Riley replied with a cheeky smile, still surprised but ecstatic with her sudden bravery. \n\n\"Don't mess with me, girl. You have three seconds...\" \n\nRowan got on the bed and leaned against the pillows, ready for the show. She started counting back from three menacingly. \n\nWhen she reached one, Riley lost her nerve. \n\n\"Okay, okay. Wait...\" \n\nShe fumbled with her bra clasp, which did not want to come undone. Riley cursed. She took her bra off every single day and never had any trouble. But now that it mattered, the damn thing wouldn't cooperate. \n\nRowan was snickering. \"Come here,\" she said. \n\nEmbarrassed, Riley kneeled on the bed next to her and leaned over her so the Rowan could reach her back. \n\nEffortlessly, Rowan's right hand snapped open her bra, which fell free from her chest immediately. How did she do that so quickly, with one hand!? Riley suppressed the thought that Rowan had had a lot of practice. \n\nBefore Riley could protest, Rowan's hands moved next to her g-string and slipped it quickly over her hips and down her legs. \n\n\"I could have managed that one,\" Riley smiled. \n\n\"You were taking too long.\" Rowan winked. \n\nShe grabbed Riley's buttocks firmly and guided her astride her body. Riley hovered over her belly, feeling slightly self-conscious about pressing her soaking wet pussy into Rowan. \n\nClearly, the mechanic considered this less problematic; she pulled Riley's hips forward and lifted her upper body to kiss her neck and breasts. Riley felt herself come in contact with rock-hard abs and couldn't suppress a sigh as Rowan sucked one of her nipples into her mouth. \n\nUnable to resist both gravity and the pull of Rowan's strong arms, Riley allowed herself to sink into Rowan's body. With Rowan's face between her breasts and the rest of her body between her legs, Riley had a hard time focussing on all the exhilarating sensations that rushed at her at the same time. \n\nShe became aware of Rowan rocking her body rhythmically against herself and realised she was rubbing herself against Rowan's belly. Had long had that been going on and who had started it? \n\nRiley had no idea, but she knew she did not want it to stop. The pressure and motion were delicious stimulation on the sensitive area around her clit. \n\nRowan leaned back, causing Riley to gasp disappointedly. However, she did not have to wait very long to find out Rowan's next intention. \n\n\"Move up,\" Rowan said, as she pulled Riley's hips towards her upper body resolutely. \n\nShe nimbly moved her arms inside Riley's legs and resumed her hold of Riley's butt, still pulling her up, but now more slowly and gently. \n\n\"What are you doing?\" Riley asked, unsure, now perched on Rowan's chest. \n\n\"I want you to sit on my face,\" Rowan said matter-of-factly. \n\nRiley felt a slight panic rising. She'd never done that before. Neither she nor her exes had ever initiated it. She'd always felt it was too much like she was forcing herself onto the other person; like she may suffocate them with her body. She also still felt self-conscious and the thought of bringing her sex this close to where Rowan could see, smell, and even taste her, made her nervous. \n\n\"Erm... I'm kinda wet,\" she said, stalling. \n\nRowan chuckled. \"I know. That's the best part. I remember how good you taste. Please let me have it.\" \n\nWhen Riley still hesitated, she asked: \"Have you never done it this way?\" \n\nRiley simply shook her head. \n\nRowan sucked air in through her teeth. \"Girl, you haven't lived! I'm so glad we're about to rectify that.\" \n\nShe kissed Riley's inner thighs and grinned. Then her expression grew more serious and she added: \"Why don't we try it and if you don't like it, we'll stop?\" \n\nGrateful of her understanding, Riley nodded and allowed Rowan to guide her into a position half an inch from Rowan's lips. \n\nRowan trailed kisses on her inner thighs, each one a little closer to the centre. When she eventually raised her head slightly and kissed Riley's outer lips, Riley had been waiting eagerly for a while. \n\nTheir lips remained connected as Rowan lowered her head and pulled Riley with her. She gently pushed Riley's legs apart to get her to sink lower onto her mouth and then slipped her tongue between Riley's lips. \n\nRiley gasped. She'd forgotten how good Rowan's tongue felt between her thighs. \n\nRowan, it seemed, had not forgotten what Riley liked. After some exploration with her tongue, she got to work in earnest, sucking Riley's clit into her mouth while rubbing the sensitive skin around it with the tip of her tongue. \n\nIt seemed surreal to Riley now that she had been reluctant to try this position. It made her feel incredibly horny and she couldn't help but press herself more and more into Rowan's face, responding to Rowan's movements. \n\nRowan surprised her by slightly tilting Riley's hips and sliding her tongue deep into her pussy. \n\n\"Oh my god,\" Riley sighed, as Rowan gripped her hips and ass and pulled her down onto her tongue. \n\nWith this grip she had great control over Riley's position on her face. She held her in place while she slowly fucked Riley with her tongue. Not that Riley was complaining; she felt herself taking over the rhythm Rowan had set, rocking her hips into the mechanic's face. \n\nWhen Rowan's tongue retreated and returned to her clit, Riley was unable to hold back. With Rowan's hand encouraging her, she ground her sex into Rowan's mouth. She was vaguely aware of her own moans, and of Rowan's satisfied groaning noises into her pussy. \n\nAs she started to come, she felt Rowan tighten her grip and increase her speed and pressure. \n\nConvulsing on Rowan's face, Riley let the orgasm wash over her, as Rowan held on to her for dear life. The build-up of months of fantasising and masturbating over this moment - over merely being with Rowan and coming at her skilful hands or tongue - came rushing over Riley in an overwhelming wave of ecstasy. \n\nWhen Riley came back to her senses, she realised she was leaning both her hands on Rowan's forehead and had clearly been scuffing and pulling her hair in the process. \n\n\"Sorry,\" she said, pulling herself up and stroking Rowan's hair out of her eyes. \n\nRowan, who was still gently moving her tongue up and down Riley's pussy as it continued to pulsate from its recent pleasure, now surfaced at last and grinned at Riley. \n\n\"No problem. I take it this was a success after all?\" \n\nRiley sighed contentedly. \"Oh yes...\" \n\nShe slid off Rowan's chest and lay down next to her, lazily draping her arm and leg over Rowan's body and kissing her lips gratefully. \n\nFeeling herself start to doze off, Riley willed herself to wake up. There was something she had to ask Rowan. She was nervous, about asking and about the answer, but she knew she would regret it if she didn't do it now. \n\n\"Rowan?\" \n\n\"Hmmm...\" \n\nRowan's relaxed response told Riley she may have been just as close to drifting off. \n\n\"What you just did to me...,\" she started. She paused to search for words. \n\n\"What about it?\" Rowan prompted after a moment when Riley still hadn't formed her question. \n\nRiley found encouragement in the fact that she sounded genuinely intrigued in what Riley wanted to say. \n\n\"I thought that maybe... I could try doing the same... For you, I mean.\" \n\nRowan didn't answer straightaway. \n\nRiley could feel her hesitation and, her own confidence hanging by a thread, she stammered on: \"It's just something I've been thinking about; that I'd like to try it. To try and make you feel as good as you make me feel, I guess... If it would be okay with you. I'd understand if it's too much...\" \n\nShe urged herself to shut up and play it cool but it was probably too late for that. \n\n\"Have you really been thinking about that?\" \n\nThe question surprised Riley. Was that such a strange thing to think about? Maybe Rowan thought sex hadn't been on Riley's mind, because she'd kept Rowan waiting this long? How wrong that assumption was; it had been excruciating to wait this long. \n\nRiley propped herself up onto her elbow so she could look at Rowan and said: \"Oh yes... And it was very nice in my fantasies.\" \n\nRowan smiled. \"I bet... I think it would be very nice in real life too.\" \n\nRiley's heart skipped a beat. \"Is that a yes?\" \n\nRowan pulled her on top of her and kissed her deeply before replying: \"That's a yes.\" \n\nRiley kissed her back. At least she knew what to do with that part. The rest she'd have to wing. All she had to go on what was Rowan had done to her and what she'd seen in her countless hours of 'research'. This was the moment to find out if that had been enough. \n\nRiley trailed kisses down Rowan's cheeks, her jaw, her neck, her chest. Here she hesitated. She was intrigued by what her mouth could do with Rowan's boobs, but she was also a woman on a mission; an impatient woman, at that. \n\nRowan seemed to read her mind. She put her hands on Riley's head, played through her hair for a moment, and gave her a gentle nudge. 'Go on,' that nudge said. \n\nRiley continued her trail over Rowan's belly, raining kisses there because it was so gorgeous, and then diverting slightly towards her hip. \n\nShe felt Rowan part her legs so her body could ease between them. She shuffled down and nervously took in the sight in front of her. \n\nShe couldn't believe she was this close to another woman's sex; to Rowan's sex. Right in front of her eyes was the neat triangle of dark hair, with immediately below the folds that hid the part of Rowan Riley was insatiably curious about. \n\nShe could see that Rowan was as excited as she was; her outer lips were slightly parted to reveal her swollen inner lips. They gleamed with anticipation. \n\nA sweet scent welcomed Riley, which made her wonder if it would taste as good as it smelled. \n\nCautiously, Riley pressed her lips to the black triangle, resisting the urge to go straight for the source of the inviting aroma. When Rowan didn't object, she pressed another kiss slightly lower; and another one until she felt the indent of Rowan's lips against her lower lip. \n\nPressing her mouth against them, she slipped her tongue slowly in between Rowan's lips. \n\nSeveral sensations reached her at once: her tongue was greeted by a soft, velvety feel and a sweet, yet tangy flavour that matched the scent that now coated her nostrils; she felt Rowan's hands spasm on the back of her head while the mechanic gasped sharply. \n\nRiley pulled back in alarm. \"Is it okay?\" \n\n\"Oh yeah...\" Rowan sighed, relaxing her hands and stroking Riley hair. \"It's just been a very long time.\" \n\nIt wasn't until Riley felt her gently pulling her head closer a moment later that she felt confident enough to continue. Letting her tongue slip back in, she slowly explored the velvet folds. \n\nShe discovered the deep, hot entrance at the bottom where the sweet juices appeared to emanate from; the hard, little bead towards the top which she knew deserved a lot more attention; and the silky, slick sea that connected the two. \n\nHer tongue zeroed in on Rowan's clit and circled it like Rowan had done to hers. Paying attention to Rowan's cues, she tried different movement and different spots, thoroughly enjoying the learning process. \n\n\"A little to the left... That's it...,\" Rowan helped her along. \"A little harder... Harder... Oh yeah, just like that...\" \n\nRiley's tongue was applying brute force to Rowan's clit, going harder and faster than she would have imagined possible. Rowan's hips were matching her movements. Between Rowan's hands on the back of her head and her lower body rocking into her face, Riley was trapped inside Rowan's pussy; to her greatest delight. \n\nEncouraged by Rowan's pleasure, she wriggled her hand underneath her chin. When she started inserting her index finger, she was rewarded with another gasp. \n\nThis time she knew a gasp was good and she wasted no time adding her middle finger. She relished the tightness around her fingers and the smooth ease with which they slid in and out, lubricated by her earlier efforts. \n\n\"You're a quick learner...,\" Rowan groaned and pushed back on Riley's fingers. \n\nRiley smiled. She knew she'd surprised Rowan with her actions, but she remembered very well how the mechanic had done the same thing to her the first time they were together; how amazing it had felt to have Rowan's fingers inside her and her tongue on her clit. \n\nRiley's fingers pumped in and out of Rowan's pussy hard and fast, as she tried her best to match the rhythm of her tongue and hand to that of Rowan's demanding hips. \n\nTogether they reached a frenzy in which Riley wasn't sure who was fucking whom. It didn't matter; she heard Rowan breathe fast and groan softly. Riley pressed her own pussy into the mattress; she was horny too, but she had no hands or concentration to spare for her own excitement. \n\nRowan's orgasm was silent, but Riley felt it coming; her lover's muscles tensed and her hands convulsed on the back of Riley's head. \n\nRowan suddenly retreated sharply from Riley's tongue and held her head back. She took control by pressing herself firmly onto Riley's lips while she came. Her pussy crushed Riley's fingers in powerful waves and her hips gyrated against her face. \n\nRiley was elated that her mouth and her fingers could do that to Rowan. She stayed in place until she felt Rowan's body calm down. She then rested her head on Rowan's thigh, while slowly retreating her fingers. \n\nRowan's hand gave her hair a single stroke, as if that was all the strength she could muster, and then gave her a quick pull on her arm. Riley understood the hint and moved back up to lie next to Rowan. \n\n\"Was that okay?\" She whispered. \n\nRowan stroked her back. \"That was perfect.\" \n\n\"So, can I do that again sometime then?\" \n\nRowan laughed softly and pressed a single kiss on the top of her head. Despite Rowan's lack of a direct reply, Riley felt satisfied this had not been the first and last time. \n\nShe snuggled deeper into Rowan's arms, assuming the position she'd been in earlier, as if they could repeat this joyous circle over and over again until they were both utterly spent. \n\n* * * * * \n\nRowan listened to Riley's slowing breathing. Every now and then, one of her limbs on Rowan's body twitched as she drifted off to sleep. \n\nIt gave Rowan some time to think. It had been so long since anyone had touched her the way Riley had. She hadn't said anything more because she didn't want to make Riley nervous, but the last face that had come anywhere near her pussy had been Megan's, many years ago. Even more so than touching, going down on someone was usually strictly one-way traffic for Rowan. \n\nWhen Riley had asked, it had taken Rowan a moment to decide if she was willing to go there. She certainly understood the girl's desire, but Rowan had felt like there was no way back once she let her in that far. It would be an unquestionable admission that Riley was special to her; that she was much more than just a good time. \n\nIt had been Riley's innocent, honest expression - and, to be fair, her confession that she'd been fantasising about it - that had swayed the decision. Rowan had seen pure affection and desire in the girl's eyes. Riley really wanted this; to make Rowan feel good, to return her admiration, to get closer to her. \n\nAnd Rowan had realised she wanted her to get closer. More than her physical desire for her tongue between her thighs - which she had actually forgotten felt so amazing - it was the shared intimacy she found herself craving. \n\nShe'd already broken all her rules by dating Riley, by sleeping with her again. Now she'd admitted to herself that her final boundary had been shattered too; she'd developed feelings for Riley. And those feelings meant that she was heading deeper and deeper down the rabbit hole with Riley. She had no idea what that meant, and that scared her, but she knew she wouldn't be the one to stop them now. \n\nRiley gave a little moan that was very reminiscent of the noises she made earlier, sitting on Rowan's face. She pushed herself into Rowan's thigh in her sleep. Rowan smiled. Whatever was happening in Riley's sleep was clearly doing it for her. \n\nRiley's next moan a moment later was much louder and caused her to stir. She'd woken herself up. She lifted her head off Rowan's chest, looking embarrassed. \n\n\"I'm sorry, I must have dozed off. Was I sleeping for long?\" \n\n\"Not that long... Good dream?\" Rowan asked. \n\nRiley blushed profusely, which confirmed Rowan's suspicions that she'd been continuing what they'd started in her dream. \n\n\"I can't remember...\" \n\nThat was clearly a lie. Rowan chuckled. \"Sure...\" \n\nRiley smiled despite her embarrassment and moved on top of Rowan again. When Rowan kissed her lips, Riley opened hers eagerly. Whatever she'd been dreaming, she was certainly hungry for something. \n\nRowan opened her legs, grabbed Riley's buttocks and pulled her in between them. Riley pressed her lower body into Rowan's, while she kissed her passionately. \n\nRowan felt her grinding her pussy into her own. She tilted her hips slightly to position her clit against Riley's and pulled the girl firmly into her. \n\nRiley's uninhibited horniness was a real turn-on. Rowan moved with her and felt herself start to lose control over her actions. She had intended to be gentle with Riley - to take it easy because she was so new to this - but this girl was driving her crazy with desire. \n\n\"Rowan?\" Riley breathed in her ear. \n\nThe last time she'd started off like that had worked out well for Rowan. \n\n\"Yes?\" \n\nRowan pulled on Riley's ear lobe with her teeth and tried to get her body another bit closer to hers. \n\nRiley pulled her head free and looked earnestly at Rowan. \"I think I'd like to try it now. The... erm... you know what...\" \n\nRowan suppressed a chuckle. How could this girl still be so shy, after all they'd just done? \n\n\"You mean the strap-on that does not strap on to anything?\" \n\nRiley blushed and nodded. Her bashfulness was adorable. Clearly, she was much braver when she was shopping online with her hands in her knickers. At least, that's how Rowan pictured the moment Riley had decided to buy the toy. \n\n\"It's right next to you in the drawer.\" \n\nA while ago, Rowan had cleared out all her other accessories, which were nothing more than remnants of a past neither of them needed to be reminded of. \n\nRiley slid off her to get the strap-on and handed it over to Rowan. Her hand trembled a bit. \n\n\"There's some lube in there too...\" \n\n\"Right, sorry.\" \n\nIt was blatantly obviously that Riley had never done this before. And that, despite her brave face, she had no idea how this worked and what to expect. Rowan urged herself to slow down. This would require thoughtful initiation. \n\nRiley handed her the lube and bit her lip. Rowan smiled reassuringly and put some lube on the short end of the dildo; the end that was meant to be inserted into the 'giver's' pussy. \n\nShe'd put it in once before to take a picture for Riley, but she'd never used a strapless strap-on before. She was a bit sceptical about how well it would stay in place in action, but she had to admit she wasn't opposed to the feeling of the bulbous end inside her, and it felt fairly secure. She'd find out soon enough. \n\nRiley looked at her expectantly; a barely-concealed gleam of excitement in her eyes. \n\nUsually, Rowan preferred to strap up outside the room and come back in sporting her synthetic hard-on, but she did not want to keep any part of the process from her adorably curious newbie lover. ",
        "She slowly pushed her end inside her and took the other side in her hand. She let her hand trace the length of the shaft and pushed it against her pussy. \n\nAs the hard, cold silicon made contact with her hot, wet skin, Rowan shivered with the pleasure of anticipation. \n\nShe felt the dildo get slippery and she slowly rubbed it to spread her wetness along its length. As her fingers and the silicon occasionally brushed her pussy, Rowan almost felt like her hand was stroking her own penis. \n\nRiley was looking at her with wide eyes; intimidated and intrigued at the same time. \n\n\"That's so hot,\" she whispered. \n\nRowan took Riley's hand and moved it up and down the shaft underneath her own. After a moment, she let go of her hand. \n\nRiley continued stroking, getting more and more into it. Rowan sighed as Riley's hand made the dildo rub against her clit. \n\nSome genius sex toy designer had put some little bumps in exactly the right place for the giver's pleasure. The sight of Riley jerking her off only contributed to Rowan's horniness. \n\n\"You have good technique. I guess that's what you get with straight girls, hah?\" She teased. \n\n\"I've never rubbed a girl's dick before,\" Riley retorted. \n\nRowan laughed. \"Could have fooled me...\" \n\nShe groaned softly. Riley had now figured out which of her movements caused Rowan most pleasure and was using this to her advantage. She grinned cheekily as she pushed the dildo against Rowan's clit. \n\n\"You know... When I first saw it, I was quite intimidated by it,\" Riley admitted, still stroking lovingly, \"I mean, it's so big!\" \n\nRowan couldn't help but tease her some more. \"I would have thought you were quite used to dicks, being straight and all.\" She winked at Riley. \n\n\"I've only been with three guys...\" \n\nIt came out so matter-of-factly, as if it was a just reflection that happened to be spoken out loud. \n\nRowan looked at Riley incredulously. Only three!? How was that even possible? A hot girl like Riley must have had guys falling all over her. She'd have to actively avoid sex to only ever have been with three people before her. How on earth had she done that? \n\n\"Three guys and one woman?\" She asked, trying to keep the amazement out of her voice. \n\n\"I don't take sex lightly,\" Riley said, her eyes looking deeply into Rowan's. \n\nThere was no judgment, no warning; just another honest revelation. \n\n\"What happened with you... that wasn't like me at all. You somehow had a very strong effect on me. You made me lose my modesty.\" \n\nRiley laughed, but Rowan felt the weight behind her words. \n\nThe past months flashed before Rowan's eyes. While she'd done her best to consider sex with Riley just another one-night stand, for Riley it had been so much more from the start. Not only had it been her first time with a woman; it had also been an uncharacteristic leap of her morals; and had increased her number of sex partners by a third. \n\nAnd Rowan had thanked her by completely blanking her for weeks. It was a miracle the girl was still around. \n\nRowan pulled her closer and kissed her gratefully. \"I'm glad you came over that day,\" she simply said, unsure if it conveyed her complex web of emotions. \n\n\"Me too...\" \n\nRiley smiled warmly at her, before her smile transformed into a naughty grin. \n\n\"Besides...\" She took a hold of the dildo at the base, pressing her hand into Rowan's pussy. \"I've never had one this big before!\" \n\nRowan laughed. \"I'll take it easy, I promise.\" \n\n\"Okay, let's do this.\" \n\nRiley picked up the lube and looked unsure. \n\nRowan chuckled at the practical turn this had taken. She showed Riley how to spread the lube over the dildo. Riley had fun with that, making sure her hands ran as much over Rowan's pussy as over her dick. \n\nRiley then surprised Rowan by pushing her back into the pillows and straddling her. Rowan looked on in amazement as she took a firm hold of the dildo and positioned it against her entrance. The girl sure knew how to take initiative. \n\nThis was another thing Rowan usually liked to keep firmly into her own hands, but somehow the way Riley took charge really did it for her. \n\nRiley slowly lowered herself down. Rowan held onto her hips to steady her, while she took in more and more of the length. She watched the dick slide inside Riley and felt her excitement growing. \n\nShe helped Riley move back up and down again to get used to the size. After a few times, Riley's butt touched Rowan's thighs and she settled down with a sigh of relief; she'd taken in the whole length. \n\nShe gave Rowan a mischievous grin and pushed herself up and forward, before grinding down again. \n\nAs she started riding the dildo, Rowan was amazed by how much she could feel. While normal strap-ons gave her a base to grind into, this one left her pussy free to make maximum contact with Riley's. In addition, there was the hard material that rubbed into her clit whenever Riley retreated slightly. \n\nRowan grabbed Riley ass and pulled her against her, while the girl rocked on her lap. Rowan pushed her hips up to meet her movements and tried to get deeper inside her at every stroke. \n\nRiley moved her upper body forward, her boobs swinging in front of Rowan's face. Rowan buried her face in them and kissed them eagerly. \n\nRiley was moaning and moving wildly. Rowan got hold of a nipple and sucked it. Her hands were frantic on Riley's ass, pulling the girl into her as she fucked her from below. Her clit was on fire from rubbing against Riley's and she was sure Riley's must feel the same. \n\nRiley's hand slapped the back of her head hard. Rowan looked up in surprise, Riley's nipple slipping out of her mouth. \n\n\"Careful with those teeth, you!\" \n\n\"Oh sorry,\" Rowan grinned apologetically. \n\nShe took Riley's nipple back in her mouth and circled her tongue around it. \n\n\"That better?\" \n\n\"Hmmm, yeah... It took me by surprise, that's all... Don't hold back, just leave them attached, okay?\" \n\nRowan grinned and grazed her teeth over Riley's skin. She was far beyond holding back, and so was Riley, by the looks of it. The girl threw her head back and jerked her hips on Rowan's lap. \n\n\"Oh my god, I'm coming...,\" she moaned. \n\nRowan anchored herself against Riley as the girl started to shake. Her hands held onto Rowan's head and squashed her face into her chest. \n\nRowan felt herself getting close to the edge as she took in the sensations coursing through Riley's body. \n\nThe girl panted and quivered and rubbed herself against Rowan. Rowan could feel Riley's quickened heartbeat pulsating in her clit. \n\nShe wished she could feel the tightening of Riley's pussy on the shaft that was pumping hard inside her. She could feel the contractions pulling on her, trying to get her closer, absorb all of her into a blissful hot, wet world. \n\nWhile Riley's orgasm waned, Rowan turned her over onto her back, careful to not let the dick slip out of her. Riley opened her legs eagerly. \n\n\"Fuck me, Rowan,\" she said, pure desire in her eyes. \n\nThat was more than Rowan could take. She pushed Riley's legs wide open and thrust deep inside her. \n\nRiley's hands were on her back, scratching, rubbing, pulling her closer. Rowan's hips pumped hard on top of Riley. The girl could now take the size of the dildo comfortably and Rowan felt her hips rise and fall to match Rowan's thrusts. \n\nRiley's lips grazed her neck, driving her insane. Rowan's lips met hers. She was crazy with desire. If there was ever a girl she'd wanted to fuck more, she had no idea about it. \n\nPushing deep into Riley's pussy, Rowan's clit rubbed hard against Riley. It must be her imagination, but she could now feel Riley's hot pussy tight around the whole length of the dick, welcoming her, begging her for more. \n\nAs her movements got faster and harder, she knew she couldn't last much longer. Riley was breathing heavily and moaning underneath her. \n\nHer legs wrapped around Rowan's thighs and her hips were lifted off the bed to get Rowan deeper inside her. By now, Rowan had learned to recognise the specific tell-tale signs that Riley was close too. \n\nUsing a last burst of energy that came out of nowhere, she cranked up the pace one more notch, earning an appreciative groan from Riley. \n\n\"Oh goooood...\" \n\nRiley's body convulsed underneath her as the blonde tensed all her muscles. Rowan felt Riley's pussy squeezing her as her orgasm took her, even though this wasn't physically possible to feel through the synthetic dick. The mind was a powerful thing. \n\nThe sight and feeling of Riley coming sent her over the edge and she joined her lover into the overpowering whirlwind of sexual release that had been long forthcoming. Her hips still pumping and her pussy still grinding, her mind went blank as she completely gave herself to her lust, to the moment, to Riley. \n\nAfter what seemed like an endless wave of exhilarating pleasure, Rowan felt Riley's body relax. She allowed her own to slump down on top of Riley's and buried her face in her neck. As her cheek brushed Riley's, she felt the tears on Riley's face. \n\n\"Are you okay?\" She asked concerned. Things had gotten pretty wild. Had she accidentally hurt Riley? \n\nRiley sniffed and smiled. \"I'm okay. Just a bit overwhelmed. That was amazing... You're amazing.\" \n\nRowan was relieved. She understood that feeling. As she looked down on Riley's tear-streaked but happy face, she felt her own emotions rushing to the surface. \n\nShe hadn't come together with a girl in a very long time. In fact, it had only happened to her a few times and never in such an overwhelming fashion. Clearly, there was something to be said for sex with someone she actually cared about; for sex with feelings. \n\nNot wanting to let the perceptive Riley see those feelings, Rowan moved to slide off her. \n\n\"No, stay,\" Riley said immediately, holding on to her. \"Just for a bit...\" \n\n\"It's not going to go soft, you know,\" Rowan joked; the dildo was still embedded deep in the other girl's body. \n\n\"Even better...\" Riley smiled, wrapping herself around Rowan and pulling her close. \n\nRowan rested her head on the pillow next to Riley's and allowed her mind to enter that blissful after-sex slumber. \n\nShe wasn't sure how long she'd been there when she felt Riley stir underneath her. The girl was pushing her hips into Rowan and kissing her neck. Her hands were caressing Rowan's buttocks. \n\nRowan lifted her head and looked at Riley. She raised her eyebrows questioningly. Riley smiled mischievously. \n\n\"Again?\" Rowan asked in disbelief. \n\nShe'd always thought she was insatiable but Riley was sure giving her some competition. \n\nAs a reply, Riley grabbed her and started humping her from her position underneath her. Rowan grinned. Two could play that game. \n\nShe slid her hands underneath Riley's butt and lifted her off the bed, getting on her knees between Riley's legs and plunging deep inside her. \n\nShe held Riley up by her hips and used her upright position to thrust powerfully into the slender body. \n\nRiley's nerves about the dildo's size were long forgotten, and so was Rowan's caution with it. Riley's feet were gripping onto her calves and she was urging Rowan on with incomprehensible cries of pleasure. \n\nWith less stimulation on her clit in this position, Rowan became aware of different sensations. She felt the bulbous end of the dildo rub inside her, hitting a deliciously sensitive spot at every thrust. Was this what Riley was feeling on her end? If this was what being fucked felt like, she understood why girls liked it so much. \n\nUrged on by her own pleasure and by Riley's, Rowan pumped her hips at a steady pace. It was slower than before, but she could see it was enough for both of them. \n\nThe start of her own orgasm caught her by surprise; she'd never relied on anything but her clit for her orgasms and now this thing inside her had kicked her over the edge without her even realising how close she was. \n\nShe groaned and held onto Riley for dear life. It was all she could do to keep herself up while her orgasm made her whole body tremble. She looked down at Riley's body: at the gorgeous long legs wrapped around her hips, the full breasts and the hard nipples that displayed her pleasure, the half-open mouth that panted as she moved her hips against Rowan's jerking dick inside her. \n\nRiley's breath escaped in a deep sigh when her body contracted in ecstasy, a mirror image of Rowan's own body. Her orgasm was more modest than those before, but Rowan saw fresh tears forming in Riley's eyes as the blonde twitched gently in her arms. \n\nAfter holding her a moment longer until her body slumped down, Rowan eased herself out of Riley and collapsed next to her on the bed. She kissed Riley's tears away and wrapped her arms around her. She felt her own eyes burning with emotion too. \n\n\"Rowan?\" \n\nRowan smiled to herself. How many questions could one girl possibly have? \n\n\"Yes, Riley?\" \n\nRiley wrapped her hand around the sticky dildo and stroked it gently. \"Can I have a go with this sometime?\" \n\n\"Don't push your luck, girl,\" Rowan replied gently. \n\nCould she have a go one day? Rowan wasn't sure. It didn't seem likely she would ever allow anyone to do that to her, but no matter how many had come and gone before Riley, Rowan found herself in a completely new territory; one where her boundaries were being shattered quicker than she'd ever thought possible. \n\n* * * * * \n\nThe bright winter sun hit Riley's face. For the second time ever, she found herself in Rowan's bed in the morning. It felt strangely similar and yet completely different. \n\nLike the last time, their night had been filled with sex - endlessly repeating cycles of the most amazing, mind-blowing sex - and Riley felt exhausted from a lack of sleep. \n\nThe strap-on she'd bought for them had been a great success. After its first initiation, they'd had a few more runs with it throughout the night. They had both not seemed to get enough of it. \n\nThey'd had a sleepy, lazy fuck after their first nap. Riley had sat in Rowan's lap, her back against Rowan's chest. She'd slowly moved on the toy while Rowan had rubbed her clit at the same time. They'd taken their time with that one; Rowan had teased her mercilessly before finally letting her come. \n\nRowan had even taken her standing up against the wall. Or, that's how it started. Before long, she'd picked Riley up and held her up against the wall while standing in front of her, thrusting into her. Riley smiled to herself as she remembered kneeling down in front of Rowan after that and taking the dildo into her mouth, licking it and sucking off their juices. Rowan had certainly liked watching her do that. \n\nOf course, she'd gotten distracted and had moved onto Rowan's pussy next, removing the dildo so she could bury her face between the mechanic's legs. \n\nShe still couldn't get over how good the other woman's pussy tasted and how much she enjoyed tasting her. \n\nRowan's legs had buckled as she came. Riley had enjoyed showing her that she wasn't the only one who could make a girl lose her steadiness. \n\nRemembering made her pussy tingle and she rolled over to wake up Rowan. \n\nHowever, the mechanic was already awake. She was staring at the ceiling and appeared lost in thought. By the looks of it, her thoughts were less happy than Riley's. \n\nRiley kissed her gently. \"Good morning, handsome.\" \n\n\"Morning.\" \n\nRowan's smile was forced. Riley felt her old insecurities rushing back. Was Rowan regretting having her here? Was she going to be kicked out unceremoniously again? \n\n\"Penny for your thoughts?\" She asked cautiously. \n\nIf this was going to happen, she may as well know now. Even as she thought that, she was sure she would not be able to handle the hurt Rowan's rejection would bring. \n\n\"I've never done this before.\" \n\nRowan was still looking at the ceiling. \n\nIt was not what Riley had expected to hear and she wasn't sure what Rowan was talking about. She'd already told Riley about the touching and she kind of figured the same was true for the oral sex, but she sensed that wasn't what Rowan meant. \n\n\"What haven't you done before?\" \n\n\"Everything... You, this...\" \n\nRowan stopped abruptly and sighed. Her hand stopped mid-gesture and fell down in frustration. \n\nThis was the first time Riley had seen her struggle for words. What was going on? Being unable to read the situation was even more nerve-racking than thinking she was about to be kicked out of the house. \n\n\"You've done me before...,\" she teased, trying to coax a smile out of Rowan. She was grasping at straws, trying to comprehend the situation. \n\n\"No, I mean, this... Waking up the next morning feeling like this.\" \n\nRowan finally looked at Riley. Her eyes were deep puddles of warring emotions. \n\n\"Sex with feelings... Mutual feelings. They are, right? Mutual, I mean?\" \n\nRiley saw the insecurity in Rowan's eyes. She'd never seen it there before, yet it was beyond any doubt the prevalent emotion in the other woman's face. \n\n\"Of course they are,\" she confirmed quickly, taking Rowan's hand in hers. Her feelings for Rowan were getting stronger even as they were lying here having this conversation. \n\nRowan smiled a pained smile. \n\n\"What we did last night... What we have been doing the past few months... Opening myself up like this... I just feel... I don't know. I really like you.\" She sighed again. \"It's terrifying, actually.\" \n\nRiley felt a surge of happiness at Rowan's confession, but she was also finally starting to comprehend what Rowan was struggling with. Were her feelings for Riley enough to overcome her fears? \n\nRiley nodded understandingly and stroked the tattooed tiger on Rowan's forearm. \n\n\"What about your stripes?\" She asked gently. \n\n\"My stripes?\" Rowan looked at her in confusion. \n\n\"A tiger doesn't change its stripes?\" \n\nRealisation dawned on Rowan's face. \"Megan...,\" she said, more to herself than to Riley. \n\nRiley nodded. \n\n\"I may have been wrong about that. I think they are fading...\" \n\nRelief coursed through Riley. \n\n\"So I can stay for breakfast?\" She asked with a wide grin, trying to lighten the mood a bit. That usually worked well with Rowan. \n\nRowan smiled, finally looking a bit happier. \n\n\"I thought we could maybe go for a walk in the park after, or something...\" \n\nThat was probably the most couple-y thing she could think of. Riley would take it with both hands. \n\n\"I'd like that.\" \n\n\"Riley?\" \n\nRowan turned on her side to face Riley. She was still struggling with something. Riley waited for her to form her words. \n\n\"It's just... Relationships...,\" Rowan stumbled, \"I don't know how to do that.\" \n\n\"That's okay...,\" Riley whispered, \"I do. I got this.\" \n\nSeeing that Rowan wasn't completely convinced she added: \"Don't worry. You won't hurt me.\" She hoped it was true. \n\nRowan nodded, confirming to Riley that that was what she'd been thinking. \n\n\"Just... don't hurt me either, okay?\" Rowan then said in a small voice. \n\nRiley's heart melted with overwhelming love. With the mechanic's stoic demeanour and her guarded approach to life, Riley had never realised she was worried about Riley hurting her too. The admission that Riley was able to hurt her now carried more meaning than anything that had gone before. \n\n\"I really like you too, Rowan. I will never hurt you.\" \n\nRiley wanted to say so much more. She wanted to tell Rowan that she'd never felt about anyone the way she felt about her; that she couldn't imagine a life without her; that she loved her. \n\nShe knew it was too early to say these things. Rowan's first steps into the realm of relationships were still wobbly; her new way of life still fragile. So instead Riley cuddled her and poured every ounce of reassurance into her touch. \n\nRiley waited as long as she could before she eased herself out of Rowan's arms and slipped out of the bed. ",
        "\"Where are you going?\" \n\nRowan's groggy voice gave away the fact that she'd dozed off, probably exhausted from the emotional turmoil in her head. \n\n\"To make some breakfast for my... girlfriend?\" \n\nRowan smiled. \"I like the sound of that.\" \n\n\"Which part; the breakfast part or the girlfriend part?\" \n\n\"All of it.\""
    ],
    "authorname": "Salandar",
    "tags": [
        "lesbian friendship",
        "oral sex",
        "relationships",
        "straight girl",
        "strap-on",
        "lesbian sex",
        "lesbian sex",
        "oral"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-mechanic-pt-04"
}