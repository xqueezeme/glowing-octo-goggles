{
    "title": "Tybalt and Juliet Ch. 12",
    "pages": [
        "Author's Notes\n\nAll characters are at least 18 years old, except where stated otherwise.\n\nThanks for reading and please do leave feedback.\n\n*****\n\nJake's POV\n\nI woke with a raging boner. Amy was draped across my body, her head resting on my chest, her hair a tangle of curls. Normally I'd deal with my hardon quickly, then jump out of bed into the shower, but instead I held her contentedly, watching in awe as she peacefully slept on.\n\nIt was a little strange to be waking up in her bed. I'd always sleep on my air mattress on the sitting room floor whenever I stayed over and, before breakfast, would be dragged into the garden by her eight-year-old stepbrothers, demanding a game of football. I smiled to myself as I savoured the peace of that morning. I'd grown very fond of Tom and Ben - I could just about tell them apart now, but it had taken six months.\n\nI thought back to the first time I'd met the twins, in fact Amy's whole family - literally the morning after the two of us had got together. The whole thing had been so bizarre, it really had. And a shock to everyone. They'd come back home after visiting Rob's parents to find a strange boy working on his maths revision at the kitchen table, with Amy still upstairs in bed. After the revelations about the previous evening had poured forth, it was a miracle that her mum had allowed the two of us to date.\n\nIn hindsight I'd bonded with her family pretty quickly. The boys liked me because I played football with them in the garden, especially first thing in the morning when the rest of the family was still in bed. Rob seemed to enjoy my company. True, he wasn't the most exciting conversationalist, but he was always friendly and welcoming. Since the prom, things had been a little awkward between the two of us - Amy and I had been waiting for him to collect us when Ritchie attacked us, and Rob clearly blamed himself for what had happened, (Amy's mum certainly did). \n\nQuite what Jenny Norton would have made of Amy and me having sex, I wasn't sure. Apart from my girlfriend's midnight curfew, the other iron rule that her mum imposed was that I had to sleep downstairs whenever I stayed over. We'd broken the spirit of that rule twice previously, when Amy had slept in the sitting room with me, but losing our virginities upstairs in her bed had shattered it completely. \n\nBut maybe that was unfair; initially Amy's mum had been a little wary of me, understandably concerned that I would lead her daughter astray in our crucial exam term. Amy was the most precious thing in the world in her mother's eyes; Jenny was strict to protect her, perhaps counterproductively so. \n\nJenny's reaction on meeting me was understandable, but she'd at least given me the benefit of the doubt and the chance to prove myself. James' mum (a fellow lawyer at the same firm, who'd known me since the age of five), had undoubtedly helped to allay fears. Eventually though, I felt confident I'd won her over; the tear that Jenny had wiped from her eye as she'd waved the two of us off to the prom had been genuine - she'd been happy to see Amy happy - that was all that mattered. No one could have forseen what would happen later that night.\n\nOf course, there was one member of Amy's family that I hadn't met - that was her dad. He hadn't ever come up in conversation - ever. Not even on exam results day, no 'your dad would be so proud,' no congratulations card on the mantlepiece, nothing.\n\nThere were two things I knew about him, or thought I knew: I presumed that his last name was 'Norton', as that was Amy's surname and the one her mum used professionally. Secondly, as Jenny was a natural blonde, he'd certainly have given my girlfriend her dark hair and brown eyes, but beyond that, I knew nothing - not even if he was dead or alive. I'd been waiting for Amy to mention him, so I could ask her about him. But not a word - a complete mystery.\n\nAmy began to stir beside me.\n\n\"Jake?\" she whispered. \"Are you awake?\"\n\n\"Yes,\" I whispered back, lightly stroking her back. She scooted upwards and our lips met. We kissed tenderly.\n\n\"Last night was amazing,\" she said. \"Thank you. I'm so happy to be with you.\"\n\n\"It was wonderful,\" I smiled. \"I'm so in love with you!\"\n\nShe stroked the top of my chest making small circles around my nipples and running her fingers through the wispy blond hairs. She inhaled deeply, intoxicated by my scent.\n\n\"Oh Jake,\" she sighed, \"you're so manly, so masculine.\" She shuddered in delight.\n\nWe kissed again and she shifted her position, moving her body across so she was lying more on top of me. I felt her leg brushing against my erect shaft, her eyes widened in excitement.\n\n\"Jake, you're hard!\" she whispered.\n\n\"That's what you do to me!\" I replied.\n\nI felt her arm moving down my body and she grasped my cock in her hand.\n\n\"He's so big!\" she whispered in amazement. \"I can't believe he fitted inside me like this!\"\n\n\"I didn't hurt you too much did I?\"\n\n\"No,\" she said, \"it pinched a little to begin with and then it was a bit uncomfortable, but after that it was just really nice - really, really nice!\"\n\n\"And you're not too sore now?\"\n\nAmy shook her head. \"No, I thought I might be, but no, not at all.\"\n\nI kissed the top of her head and she began to move her hand in long, lazy strokes.\n\n\"That feels really good,\" I murmured.\n\n\"You make me really horny too,\" my girlfriend replied.\n\n\"Really?\" I smiled. \n\nShe nodded and I rolled over onto my side, letting Amy rest on her back. We kissed again and I brushed her hair tenderly away from her face.\n\n\"You are so beautiful,\" I murmured.\n\nI ran my hand over her body, caressing the proud swell of her breasts and the sweep of her hips. I ran my fingers through her coarse pubic hair, cupping her mons and dipping into her slit.\n\nAmy's eyes widened in delight as I made contact. She was wet. Very wet.\n\n\"You turn me on so much!\" she gasped.\n\nOur mouths met again and our tongues slid past each other, tenderly at first, then more intensely as I stroked her. My cock throbbed painfully as she gripped me in her small hands. I broke the kiss and stared deep into her eyes, which smouldered with love and lust.\n\nI kissed gently along her jawline, bringing my hand up from her sex to cradle her cheeks, letting her savour the scent of her own arousal. She whimpered as my lips slipped lower and I took each nipple in turn, pulling it softly into my mouth and letting my tongue swirl around the rock-hard buds.\n\nAmy grabbed my hand sharply, pulling my fingers between her thighs and guiding me to her clitoris. In the past month she'd become more confident, more assertive about directing me to where she wanted me to go.\n\nObediently I began to make gentle circles at the base of her mons, spreading the wetness of her arousal across her labia. Amy started to buck her hips. Her moans were becoming louder and deeper; if we weren't careful, she'd end up cumming soon, and I didn't want that, at least not yet. She yelped in protest as I removed my hand and rolled her onto her front. \n\nI moved on top of her, pressing my chest against her back and letting my cock slide along the cleft between her buttocks. She hissed in surprise and delight as she felt my erection pressing against her.\n\nShe began lift her hips, pushing her bottom back against me, feeling my steely hardness between her cheeks.\n\n\"Ah fuck Jake!\" she cried. \"You feel so good, so strong, so hard. I love this!\"\n\n\"Yeah,\" I replied. \"You like my big cock?\"\n\n\"Yeah, Jake, you feel amazing. You turn me on so much.\"\n\nI brushed her dark hair away from her face as her mouth searched frantically for mine. We kissed again, our tongues writhing together in pleasure as we ground against each other.\n\n\"Yeah Amy!\" I cried breathlessly. \"Tell me what you want, what you want me to do to you.\"\n\nHer phone buzzed on the bedside table.\n\n\"Oh fuck!\" I cried in frustration.\n\nSomeone was calling her. I pushed up off her. She turned and looked at me dejectedly.\n\n\"Sorry Jake,\" she said. \"It's probably Mum. I'd better answer. I'll get rid of her as soon as I can.\"\n\nShe reached across to pick up her phone, glancing at the screen as she brought it to her ear.\n\n\"Hello, Jackie?\" Amy said, a little breathlessly. (Jackie was her boss at the Stables.)\n\n...\n\n\"No, it's OK, you didn't wake me up,\" she said, fighting to get her breathing under control.\n\n...\n\n\"Oh no! Is she OK?\"\n\n...\n\n\"Yes, of course! More than happy, anything to help. What time do you want me?\"\n\n...\n\n\"No, it's OK, Mum can give me a lift. You've got other things to worry about.\"\n\n...\n\n\"Could Jake do that?\" Amy said into the phone, turning to look at me. \"I'll have to ask him, but I'm sure he would.\"\n\n...\n\n\"Yes, he's been checked for the Campsite. He'll have the certificate at home. I'll get him to bring it.\"\n\n...\n\n\"OK, I'll text you when I've asked Jake and I'll see you at half nine.\"\n\nAmy removed her phone from her ear and pressed the button to end the call, a look of disappointment in her eyes.\n\n\"I'm sorry Jake,\" she said. \"Change of plan. Jackie's mum's been taken ill overnight and she's in hospital in Sheffield. Jackie's gonna go up and see her as soon as she can, but she's got three birthday parties booked in today. And she's gonna have to cancel unless I go in.\"\n\n\"That's fine, honestly,\" I replied, doing my utmost to suppress my frustration. \"Jackie's been so supportive of us both this summer, we need to support her now.\" Every fibre of my body wanted to fuck my girlfriend, but that would have to wait.\n\n\"The other thing,\" Amy continued, \"there's a hack booked in for this afternoon - just a small group. Tim was going to lead it, but he's going up to Sheffield with Jackie. I said I'd ask you. Could you do it? Is that OK?\"\n\n\"Yes, of course,\" I nodded.\n\n\"So Jackie needs to see your criminal records certificate - it's for the insurance. You've got it at home right?\"\n\nI nodded again. \"Yes, it's in one of my desk drawers.\"\n\n\"And you'll need to bring your passport and your NI number as well.\"\n\n\"That's fine, I bring those.\"\n\n\"Thank you, Jake,\" Amy said, kissing me softly on the cheek. \"I'm sorry.\"\n\n\"Amy, don't apologise!\" I said.\n\n\"But I wanted to stay in bed with you all day!\" she moaned.\n\n\"That's OK,\" I replied. \"We'll be together for most of the day and then when we're done, I can bring you back here and we can rip each other's clothes off and pick up where we left off!\"\n\nI kissed my girlfriend lovingly on the lips.\n\n\"Come on,\" I said. \"Let's go down and have breakfast and then we can jump in the shower together!\"\n\n-\n\nI'd wanted to take a shower with Amy from almost the day we'd got together. I'd fantasised about running soapy hands over the smoothness of her skin and cupping her pert breasts as I pressed my hardness against her buttocks. My girlfriend though, had always politely declined whenever I'd suggested it.\n\nThat morning was different. We'd eaten breakfast together in the kitchen, but before Amy had disappeared upstairs again, she'd whispered in my ear that she wanted me naked in her bathroom. My erection hadn't fully subsided since we'd got out of bed, even in the light of Jackie's phonecall and with Amy's instruction to join her, I leapt again to full salute.\n\nThree minutes later, to the millisecond, I slid open the door to the shower cubicle and slipped under the stream of warm water. Amy's eyes sparkled as I bent my head to kiss her.\n\nWordlessly she began to wash me, tenderly spreading bubbles of soap across my chest. I turned and felt her sweep her hands between my shoulders, before sliding them down my sides. She squealed with delight as she grasped my buttocks.\n\n\"Oh Jake,\" she cried, \"I love your bottom,\" she sighed. \"It's so firm and pert and uuuhhhh,\" she shuddered.\n\nI turned to face her once more and her eyes widened as her gaze alighted on my fully erect cock. She reached forward to touch me, circling me with her delicate fingers. I felt her begin to stroke me as I trailed my hands across her stomach.\n\nWe kissed again.\n\nI turned her and took a few drops of shampoo in my palms. She mewed contentedly as I lathered her hair, before doing to same to my own. Amy handed me a bottle of conditioner and I repeated the process.\n\nI pulled her body against mine, reaching around to cup her breasts, nuzzling against her wet hair. She murmured in appreciation as she felt my hardness press against her.\n\n\"Oh Jake,\" she moaned. \"You are too perfect. How did a girl like me end up with such an amazing guy like you?\"\n\nI kissed her gently on the cheek, and soaped up her back. She reached behind to grasp my cock once again.\n\nShe wanted me, I knew it. I was horny, so horny. I leant forwards to kiss her, slipping a little as I did so. Couldn't we be just five minutes late?\n\nCommon sense intervened and Amy turned off the shower, turning to face me.\n\n\"Come on,\" she said. \"Let's get dried off. We haven't got much time. And we've got to make sandwiches to take with us.\"\n\n-\n\nI parked the car in front of the Stables. I'd dropped Amy off about a quarter of an hour earlier and had gone home to change and to pick up the various documents that Jackie required.\n\nThe door of the office was open, but I knocked anyway.\n\n\"Oh hello Jake,\" said Jackie, looking up from her desk. \"Thank you so much for doing this.\"\n\n\"That's OK,\" I replied. \"Anything to help.\"\n\nJackie smiled. \"Have you got your criminal records certificate?\"\n\nI slid it across the desk and she read it through quickly to make sure I was 'clean', before writing the number down in her records. Then she scanned my passport into her computer.\n\n\"Do you have your NI number?\" she asked.\n\nI recited it from memory and she typed it into the database.\n\n\"I'm sorry about this bureaucracy,\" she said. \"This is the last thing either of us need right now, but if we don't do it and something goes wrong, we're in big trouble.\" She slid a couple of sheets of paper across the desk. \"This is a standard casual contract, if you can just sign the back page, then we're done.\"\n\nI skimmed the wording and then signed.\n\n\"So the only other thing I need to say, and I hope it's not too controversial,\" Jackie smiled, \"is to tell you to do what Amy tells you. Let her deal with fitting helmets and all that sort of thing - she's had the training and she knows what she's doing.\"\n\n\"Of course,\" I replied smiling. \"I always obey her instructions!\"\n\nJackie smiled back at me. \"Great. I need to lock up here and get going, but you go and find her and I'll see you next week.\"\n\n\"OK,\" I replied. \"And I hope everything works out alright with your mum.\"\n\n\"Thanks Jake,\" Jackie smiled. \"And thanks for doing this.\"\n\n-\n\nI leaned against the fence talking to Danny's dad as we watched his daughter and about half a dozen of her friends riding around the sandy arena under Amy's expert eye.\n\n\"I didn't know Emma rode,\" I ventured.\n\n\"It's her latest five-minute wonder,\" he replied wearily. \"One of her friends has been having lessons here this summer and the rest of them have caught the bug now. Just as well it won't stick, it'd be a very expensive hobby.\" \n\n\"Well, when she turns sixteen, she can earn the money to pay for it herself,\" I suggested.\n\nDanny's dad grimaced. Emma knew how to wrap him round her little finger - there was no way she'd be getting herself a job in a year's time.\n\n\"She's fifteen now?\" I queried.\n\n\"Yup, can't believe it,\" he replied. \"She was born only five minutes ago, now she's getting ready to take her GCSEs! It's gone so quickly. Danny too - he'll be leaving home in under three weeks - not that he's been around much this summer.\"\n\n\"Have you heard from them?\" I asked. Danny and Lauren were backpacking round Europe.\n\n\"I know they got to Prague a couple of days ago,\" he replied, \"but you've probably seen more on Facebook.\"\n\nI shook my head. \"Danny's always been a bit hit-and-miss with social media,\" I replied. \"And I think the last photos I saw were from Vienna - that was a week ago maybe. Lauren's always been very discrete about her relationship with Danny. If you just looked at the stuff online, you'd hardly know the two of them were going out.\"\n\n\"Well they seem to be having a good time,\" he said. \"They'll have blown all the money they earnt at the start of the holiday, before they get to university,\" he added ruefully.\n\nThere was a pause.\n\n\"You and Amy weren't tempted to go away?\" he asked, indicating my girlfriend with a nod of his head.\n\n\"We wanted to,\" I said. \"We were just making plans when the prom happened and we had to abandon them. But we're going to Dorset the weekend after next for Amy's birthday. Then she leaves for uni the same week as Danny.\"\n\n\"What's happening to Ritchie?\" he asked hesitantly, as if he wasn't sure if he should ask about my attacker.\n\n\"There's going to be a hearing in the magistrates' court in Guildford in early October. But it'll just be a short appearance. If he pleads guilty then there'll be a sentencing hearing early next year, but if not, there'll be a full trial, maybe not until next summer.\"\n\nDanny's dad shook his head. \"Such a waste,\" he sighed. \"The best three years of his life spent in a young offenders' institution. And as for that school...\"\n\n\"Brian!\" Danny's mum was calling her husband.\n\n\"Must go and do her bidding,\" he said, rolling his eyes.\n\n-\n\nI watched Amy discretely from the side of the arena. She was an exceptional instructor - she had an eye for detail, but was positive and encouraging to each one of the girls as she gave her feedback. And she looked so hot in jodhpurs and riding boots!\n\nMy conversation with Danny's dad had highlighted the inescapable fact that I'd been trying to ignore for so long: Amy and I would be parted in under three weeks. It seemed particularly cruel after the summer that we'd endured - we were just hitting our stride as the next phase of our lives beckoned.\n\nPerhaps I was being a little too melodramatic. London was under an hour by train from Cambridge, a journey that thousands of commuters endured every day. Amy would be living a fifteen-minute bus ride from King's Cross station. Door to door, from my college to her halls would be round ninety minutes. Certainly doable, if we made time for each other. If we could make time for each other. If we wanted to make time for each other.\n\nI heard a noise behind me. A young couple, maybe a year or two older than me were walking hand-in-hand towards the paddock, carrying a couple of rucksacks.\n\n\"Can I help?\" I asked.\n\n\"Yeah,\" said the guy, \"we're booked in for a hack at two o'clock. We were just checking we'd come to the right place.\"\n\n\"Oh right,\" I responded. \"Well Amy's in charge, she'll need to go through the paperwork with you and get you kitted up, but it'll be me taking you out. I'm Jake by the way.\"\n\nWe shook hands.\n\n\"Simon,\" he said, \"and this is Julie.\"\n\n\"I thought there were four of you, all on the same booking?\" I asked.\n\n\"There were,\" he replied, \"but the other couple...\" his voice trailed off, \"well they may not be a couple anymore.\" He looked a little embarrassed.\n\n\"We did send an email earlier,\" added Julie.\n\n\"I don't think anyone's checked the messages since about half nine,\" I responded apologetically. \"It's only the two of us here at the moment, but if you come back just before two, Amy will sort you out. I'm just here helping out really.\"\n\n\"OK,\" he nodded. \"Is it alright to have our picnic in one of these fields?\"\n\n\"Well strictly speaking they belong to the farm next door,\" I said. \"But the best place to go is down to the millpond.\" I pointed to the path. \"Just follow the line of the fencing down to the stream and then turn right past the weir. You can't miss it. Oh and you might find a few grumpy anglers telling you that it's private property, but just say that Jake Hardwick said it was OK!\"\n\n\"Thanks,\" said Julie smiling. \"We'll see you later on.\"",
        "-\n\n\"You worked at the Stables long?\" Simon asked. We'd stopped at the top of the escarpment to give the horses a long drink.\n\nI shook my head. \"It's my first day!\"\n\nHe gave me a quizzical look.\n\n\"It was meant to be the owner and her son working today, but they had a family emergency, so they've gone up to Sheffield. Amy got called in on her day off and I'm from the farm next door, so I said I'd lend a hand. They'd have had to cancel your hack otherwise.\"\n\n\"Well thanks,\" said Julie. \"I hope they're going to pay you!\"\n\n\"Yes, they'll pay me,\" I replied. \"I signed a contract very quickly this morning!\" \n\nI took a swig of water.\n\n\"You guys students?\" I asked.\n\nSimon nodded. \"Yeah, Julie's at Exeter, I'm at Bristol. We're starting our third years now. You?\"\n\n\"Starting at Cambridge in October,\" I said, trying not to sound too smug. But my curiosity had been piqued. Exeter and Bristol were about an hour apart by train - the two of them were in a long-distance relationship, as Amy and I would soon be.\n\n\"Sorry,\" I said, a little nervously \"I don't wanna pry, but how do you guys manage? I mean, being at different unis? It's just my girlfriend and I, well, we'll be in the same boat soon.\"\n\nA broad smile broke out across Julie's face. \"Is it Amy?\" she asked excitedly.\n\nI blushed and nodded.\n\n\"I knew it!\" she laughed, jabbing her boyfriend in the ribs. \"You're cooking tonight!\" \n\nSimon grimaced and gave his girlfriend a sideways look. \"We were together, what, eighteen months before we went to uni?\" he said.\n\nJulie nodded. \"And I guess we'd heard how so many couples split up when they leave school. And we realised that if we wanted to stay together, we'd have to work at it and compromise far more than we'd ever done before.\"\n\n\"So we said we'd see each other two weekends out of three,\" Simon continued, \"but we also said we'd try to do something together away from both unis, on one weeknight each week.\"\n\n\"And we both did Art A level at school, so we go to a watercolour group in Taunton - halfway between us. We have a meal together in a restaurant every Wednesday, spend two hours painting, then get on different trains back home.\"\n\n\"And we both ride, obviously,\" he added, \"so a couple of times a term we go for a hack at a riding school near Tiverton. Actually there's a group of us who normally go - all couples, but, well, we might be the only couple left now.\" He gave a wry smile.\n\nI nodded. \"And did you find it easy to keep the routine going?\"\n\nJulie thought for a moment, she smiled. \"I think we realised that as soon as we skipped a week, we'd skip another, then another and we'd end up drifting apart. Sometimes it's really hard to get on the train on a Friday night at the end of a long week, but I know if I don't, I won't get to Bristol until Saturday lunchtime at the earliest and that's a big chunk of the weekend gone.\"\n\nSimon put his arm round his girlfriend. \"The middle of the first year was hardest, but once we got through that, it was much easier. We're closer now than ever before.\"\n\n\"And happier,\" Julie added, kissing him on the cheek.\n\n\"Don't take each other for granted Jake,\" Simon said. \"But if you put in the leg work and it's meant to be, you'll stay together.\"\n\n-\n\nAmy's POV\n\nThe third birthday party of the day had just finished. I was exhausted - 'knackered' as Jake would say.\n\nThe first one, Emma Curran and her friends, had been fine, but the two events in the afternoon for the eight-year olds, they were more stressful than anything else I'd done at the Stables. \n\nThere'd been the usual squabbles about who was going to ride which pony, but fortunately none of them had fallen off. You needed eyes in the back of your head for the younger ones. That was the worst thing, having the parents watching you from the side line, waiting to blame you if something went wrong. I couldn't ever understand how Jackie was so blas\u00e9 about them.\n\nThe ponies had had enough as well. They'd almost overheated over the course of the afternoon, so I'd led them round to the back of one of the barns to stand in the shade and to cool them down under the hose pipe.\n\nI glanced across the paddock towards the farm fields beyond. I could see three figures emerging from the heat, leading their horses towards the Stables. It was Jake and the two students.\n\nThe two boys were bare chested and had slung their riding tops over their shoulders. Simon was good looking, no mistaking that. His pale skin glistened with sweat and his pecs were well defined. There was a rugged wiriness to him, from the tight curls of his black hair to the lean sweep of his stomach. A body that most of the boys at school would have envied - and rightly so.\n\nBut Jake was something else. \n\nSix feet of blond, manly magnificence; perfection from his broad shoulders to his muscular thighs. His skin was lightly tanned, a soft bronze which glowed like the polished armour of a demigod and his cheeks shone with the rosy hue, radiating strength and confidence. \n\nA shiver of electricity ran through me and I felt the heat rising in my core. I was horny, so horny for him. \n\nMy eyes slipped lower to the bulge in his jodhpurs. How I wanted to drag him into one of the hay stores and impale myself on that glorious cock.\n\nI sighed inwardly in frustration. I took a few deep breaths, fighting to bring my urges under control.\n\n\"Good hack?\" I called.\n\n\"Yeah it was great,\" Simon replied. \"Very hot though.\"\n\n\"We walked the final mile to let the horses cool down,\" added Julie.\n\nThe three of them had reached the back of the barn and were tying up their horses in the shade. My boyfriend gave me a beaming smile.\n\n\"Can you put the tackle away?\" I asked Jake, fully aware of the double entendre.\n\n\"I'll give you a hand,\" said Simon, collecting up the helmets as my boyfriend lifted the saddles. The men disappeared round the corner of the barn.\n\n\"Can I do anything to help?\" asked Julie, standing a little awkwardly as the horses started to drink.\n\n\"Actually, if you could help me take the ponies back to their field, that would be great,\" I replied. Then we can give the horses a wash and a rub down.\"\n\nWe grabbed two ponies each and began to lead them away from the paddock.\n\n\"You are one lucky girl Amy,\" said Julie, flashing an envious smile across at me.\n\nI looked at her quizzically, not sure what she meant.\n\n\"Jake,\" she explained.\n\n\"Oh,\" I felt myself blushing. \"He told you?\" I felt a little confused and uncomfortable - Jake was normally super-discreet about our relationship, it was very unlike him to blab. He knew how I liked to keep things like that private.\n\n\"Well, we guessed, but yeah, he said you were going out when we asked.\"\n\nI smiled awkwardly. \"Yeah, I'm really lucky,\" I agreed. \n\n\"You been together long?\" she asked.\n\nI shook my head. \"Not really,\" I replied, a little uneasy with the direction that the conversation appeared to be heading in. \"Six months - since Easter. It still feels very new. I wish we'd seen more of each other over the summer, but we've both had jobs. This is the first day we've worked together - he's normally up at the Campsite over the other side of the village.\"\n\n\"That chest!\" she said, a little too dreamily for my liking, \"I mean Si's pretty fit, but Jake - wow! And he's two years younger.\"\n\nOne of the ponies snorted as if in agreement.\n\nI blushed again. I certainly didn't feel comfortable discussing my boyfriend's body with someone I'd only just met. I wasn't good enough for Jake, I knew that, Julie wasn't helping.\n\n\"And what he keeps in those jodhpurs, wow!\"\n\nI looked down, wishing she'd shut up. If she hadn't been a customer, I'd have snapped back at her and told her to mind her own business.\n\nJulie looked across at me, maybe she realised she'd overstepped the mark. \"Sorry Amy, I didn't mean to offend you. I'm not going to try and steal him off you!\"\n\nI smiled weakly. \"No it's OK, I didn't think that. It's just we're going to different unis soon and, well, there's gonna be all these super-smart girls in Cambridge and, well, I'm worried he'll forget all about me. I've been trying to pretend for so long that I'm not in love with him, but I really am. I'm just frightened what's gonna happen next. He's perfect. Everyone can see that - even someone like you who's only just met him.\"\n\nWe reached the field where the ponies lived and removed their bridles to release them. They made a swift dash to the shade.\n\nWe turned to head back to the Stables and Julie put her arm across my shoulder.\n\n\"Has Jake ever cheated on you?\" she asked, breaking the silence with the most direct question.\n\nI shook my head, looking up at her in alarm at her intrusive questioning. \"No, never.\"\n\n\"Other girlfriends before you?\"\n\n\"No, I'm his first,\" I replied. \"The girls at school thought he might be gay - he was that uninterested in them.\"\n\nThere was a pause, then Julie spoke again.\n\n\"Si and I have been together for four years. Two years ago, when we left school, I felt exactly the same way you do now. He's at Bristol, I'm at Exeter. I thought there was no way we'd last being at different unis. But we have. No, it hasn't been easy, but we're even more in love with each other now.\"\n\n\"Do you live together?\" I asked.\n\nJulie shook her head. \"No. We're about an hour away from each other by train, the same as you and Jake will be. I know it feels such a long way at the moment, but it's nothing - it really isn't any distance at all.\"\n\n\"Really?\" I asked. Maybe this was a lot more doable that I thought.\n\n\"Have you talked to Jake about it?\" she asked.\n\nI shook my head. \"No, we should have done,\" I began. \"But, well, it's been a really difficult summer and I suppose we're just trying to live in the moment while we can.\"\n\n\"Oh!\" said Julie quietly, as if doubting her earlier optimism.\n\n\"Did you see the scar on his arm?\" I asked.\n\nJulie nodded. \"It must have been a pretty bad cut, and not long ago, by the looks of it.\"\n\n\"He was stabbed, back at the end of June - after our prom,\" I said quietly. \"I was with him.\"\n\n\"Oh no!\" Julie exclaimed in horror. \"Who did it?\"\n\n\"One of the other boys at school. He was drunk and he'd worked himself up into a fit of jealously,\" I explained. \"He's on remand in a young offenders' institution. The trial won't be till next year.\"\n\n\"I'm so sorry,\" said Julie, shaking her head. \n\n\"We've just had to take each day as it comes. We just haven't been ready to talk about being split up at uni yet.\"\n\nWe were nearing the paddock again. Jake and Simon had moved the three horses round to the side of the barn and were showering them with cool water from the hosepipes.\n\n\"Jake loves you,\" said Julie simply. \"We could tell, just by the way he was watching you. And the two of you, if you've come through all that, you'll be together for a long time, I know you will.\"\n\n-\n\nJake was waiting for me in the car while I locked up the stables; I always kept him waiting. Jackie had phoned to talk about the bookings for the next few days.\n\n\"Sorry that took so long,\" I said as I jumped into the passenger seat. I kissed him on the cheek.\n\nI was expecting him to turn the key in the ignition, but he didn't. He turned and smiled at me, a dreamy look in his eyes.\n\n\"You OK?\" I asked.\n\n\"I was just thinking how much I love you,\" he said. \"I really do. You were amazing today.\"\n\nI felt myself blushing. \"I love you too. I couldn't have done it without you.\"\n\nHe moved his hand up to brush my hair away from my face. We kissed deeply. I felt myself beginning to tingle.\n\nHe broke the kiss and he pressed his forehead against mine. His deep blue eyes mesmerised me. I was under his spell. He stroked my cheek tenderly. We kissed once more, then he turned and started the engine.\n\n\"How's Jackie?\" he asked.\n\n\"She's OK,\" I replied. \"But she's not going to be back tomorrow unfortunately.\"\n\n\"Oh no,\" he said. \"So do you need me again? I don't have to be at the Campsite until two, so I can be with you up until lunchtime.\"\n\n\"Could you?\" I asked. \"I mean, we'd have to check with Jackie, but that would really help.\"\n\n\"Of course,\" he replied. He eased the car into gear and we edged out into the road.\n\n\"How was the hack?\" I asked as innocently as I could. I was a little annoyed that Simon and Julie had found out that Jake and I were a couple and I wanted to get to the bottom of what he'd told them.\n\n\"It was fine,\" he replied. \"They were both very good riders, much better than me in fact. We could have just given them their horses and a map and sent them off.\"\n\n\"You are a really good rider,\" I reassured him.\n\n\"Well, not really,\" Jake answered. \"I've only ridden once since the end of May - that was with you on A level results day. I'm really out of practice. We had to take it easy because of the heat, but on a cooler day they might have got frustrated with how slow I was.\"\n\nJake was being modest of course, but I let it go.\n\n\"They worked out we were an item,\" he volunteered.\n\n\"How did they do that,\" I asked feigning surprise.\n\n\"I don't know,\" he replied. \"I think Julie's the sort of person who makes it her business to notice things like that. There are a fair few people like that round here - no matter how hard you try, you let a clue or two slip.\"\n\n\"Hmm,\" I murmured non-committally.\n\n\"How were the last two birthday parties?\" Jake asked, not noticing my displeasure.\n\n\"Exhausting,\" I replied. \"You need eyes in the back of your head with the little ones. It was the ponies I felt sorry for - they can't cope with this heat.\"\n\nWe were approaching the roundabout on the ring road and I stayed quiet to let Jake concentrate on the traffic. Once we were clear of the junction, he spoke again. \n\n\"You going to miss the Stables?\"\n\nI nodded. \"Yes, I think so. I don't know what I'd have done without it this summer. And Jackie's been such an amazing boss - so understanding.\" I paused. \"What about you and the farm? You've lived there all your life.\"\n\n\"Yeah, I suppose,\" Jake replied. \"I think I'm ready for a change though,\" he added. \"Mum says that there'll be so much going on at Cambridge that I won't give the farm a second thought. I'm not sure that's true though.\"\n\n\"She's really going to miss you, your Mum,\" I stated.\n\n\"I think so,\" he said quietly, \"Dad will too. I know he doesn't really say much and doesn't show his emotions, but I think it's gonna hit him quite hard. Especially when I'm not around for milking in the mornings - it's good to have the company when you're getting up before sunrise!\"\n\nJake was right. I remembered the first time I'd met his parents, when I'd been invited to lunch at the farmhouse on Easter Saturday. I'd expected his dad to have a similar character to his son, but he was much quieter, almost shy. Jake had inherited much of his personality from his mum, that was clear, but shared his father's wry sense of humour.\n\nWhen Jake had been injured, it had been his mum who'd been calm and had taken the attack in her stride. But his dad's face had been the epitome of agitation, his brow deeply creased with concern and anxiety. He'd insisted on remaining by his son's side through that first night, despite the hospital staff trying their best to discourage him.\n\nAnd then, much to Jake's embarrassment, after A level results day and his university place was confirmed, his dad had told everyone he met that his son was going to Cambridge. The whole world, not just the village, knew how clever Jake was and what he'd achieved!\n\nI sighed inwardly, conflicted. Jake's dad was so proud of him. I felt a little wistful. I had so many reasons to hate my own father, but deep down I hoped he'd have been proud of me.\n\n\"You OK?\" Jake asked, shaking me from my inner thoughts. He turned the car into my road.\n\n\"Yeah,\" I nodded. \"Sorry, just a bit tired after today. I need a cold drink and a cool shower.\"\n\n-\n\nI could hear the sound of running water as I tidied the dining room, clearing away the dirty glasses and cutlery from our meal the night before. Jake had looked a little disappointed when I'd dispatched him upstairs for the first shower after we'd arrived back, but I wanted a little time on my own for almost the first time that day, partly so that I could eliminate any visible trace of our amorous activities of the previous evening, but also to process, to take stock of the fact that I was no longer a virgin.\n\nAlthough Jake had been as tender as he possibly could, having sex had hurt, a lot. I knew it would - my boyfriend was big. Thick, long and big. I'd imagined the first time would feel like being stabbed with a baseball bat, but it was a stinging, pinching sensation, not the bruising blows of a blunt weapon. Jake wasn't attacking me, his actions weren't the source of my discomfort, no the pain was the futile revenge of the innocence that I was casting aside. \n\nI'd kinda expected to feel different when I woke up, as if released from my childhood bonds like a butterfly leaving its chrysalis. Maybe I wanted to feel different too. But I didn't, I really didn't. Perhaps that was a disappointment; the busy, unexpected day at work had felt much like any other. Jake was with me of course, but things had been so hectic, we'd hardly spoken and when we had, I'd been telling him what to do.\n\nI picked up his shirt from the chair where I'd partially undressed him the previous evening, clutching the soft cotton against my bosom. I took a deep breath, inhaling his scent - intoxicating; I shook with anticipation.\n\nI thought back to the previous weekend, when Jake had stayed over after James' party. Mum had heard us fooling around in the sitting room. I'd drunk a little too much that evening - that had been deliberate. Then, uninhibited, I'd changed into my new lace nightie and had jumped on Jake as he'd returned from brushing his teeth.\n\nIt had been such a special night - Jake had explored me with his mouth, caressing my lips with his tongue. Then I'd begged him to push his finger inside me for the first time. I'd cum so hard, shrieking and wheezing into the folded T-shirt he'd given me to hold over my mouth. No wonder we'd woken Mum up.\n\nThen I'd dragged him to his feet, kneeling before him to take his glorious cock in my mouth, stretching out my neck. I'd retched and choked as the fat purple head had begun to slide down my throat - that was when I saw it - those bright blue eyes glazing over, surrendering to lust. Jake, the gentlest, kindest, most conscientious teenage boy, had lost control; had lost control, because of me.\n\nI'd demanded that he cum on me, that he paint my face with his eruption. I'd felt his seed pooling against my nose, dripping down my cheeks to my waiting tongue. Then I'd taken him into my mouth again, sucking his cock clean. He'd bent down to kiss me, tasting himself, thanking me, loving me.\n\nMum hadn't said anything the following morning, but after lunch, once Jake had left, she'd dragged me into the sitting room to talk. She wasn't angry - just very disappointed. Disappointed that I'd spent the night with Jake, while the twins had been asleep upstairs. Disappointed that we'd flouted her rule. Disappointed that we hadn't waited until we were alone with no possibility of being disturbed.\n\nAnd she blamed me. She knew me as she knew herself. She knew it was me who'd instigated it, the one who'd corrupted Jake. She'd found the lace nightie and knew I'd planned it all. My boyfriend was a saint as far as she was concerned - he'd never have suggested having sex downstairs with the rest of the family up in bed. She'd hoped we'd used protection.\n\nAnd that was my cue to surprise her. Mum had been astonished when I'd told her that I was still a virgin. She'd assumed that Jake and I had planned our weekend in Dorset to have sex for the first time. I told her proudly that I'd wanted to wait until I was sure that the time and person were right. Yes, we'd played around a little, but Jake had never once complained that we hadn't gone far enough or tried to push me into taking the next step. ",
        "Mum and I were both crying by that point. We hugged each other and she told me how proud she was of me. As for Jake, well he could walk on water as far as she was concerned.\n\n-\n\n\"You taste of pizza!\" I teased.\n\nWe were lying together on the sofa, in our pyjamas, pretending to watch some panel show on the repeats channel. It was strange - this was what I'd imagined having a boyfriend would be like. Cuddling on the sofa, eating junk, watching junk. But being with Jake hadn't been anything like that. True we'd watched a couple of movies together, but that had been once a month at most. The only time he took an interest in the television was when he was discussing Doctor Who with the twins, but that was just a pretence for their benefit, nothing more.\n\nJake was an outdoors person; maybe I was too now. He'd changed me, the whole summer had changed me - a lot. That was something I'd worry about through university: I'd hardly changed him, but he'd never agree. He'd always say that he'd become less angry and less cynical, but I don't really think that was true.\n\nHe brushed the hair away from my face and looked up at me, staring deep into my eyes.\n\n\"What are you thinking?\" he asked.\n\n\"Just how much I love you,\" I said.\n\n\"I love you too,\" he replied.\n\nI kissed him lightly on the cheek, then laid my head softly on his chest, listening to his slow heartbeat as he stroked my hair. I looked down his body to his crotch, where the folds in his pyjama bottoms betrayed his manhood. Even part-concealed by the fabric, his cock was impressive, draped lazily across his thigh. I'd seen it proudly erect so many times, but soft? - only in outline. Even after he'd cum he'd still be semi hard. I was intrigued. I wanted to take it in my hand and feel it grow in my grasp as the blood surged within him.\n\nJake was distracted by a wise crack on the television and I felt his laughter reverberating through his chest. Now was my chance. I floated my arm over his chest as subtly as I could, then, purposefully, I slid my hand under the waistband of his pyjamas. \n\nHe gasped as my fingers encircled him, a hiss of surprise - I'd caught him and his cock unawares. I lifted him gently, testing his weight - satisfyingly heavy, flaccid like a party balloon half-filled with water. I looked up at him in delight.\n\n\"I love your willie!\" I giggled.\n\nBut already his cock was changing - growing, hardening. Beneath the warm velvet skin, the steel core was rising, fighting to escape the confines of my fingers, sliding across his hip to salute me with the fervour of an officer cadet. \n\n\"You're hard!\" I exclaimed.\n\n\"That's what you do to me,\" he replied.\n\n\"But so quick!\" I could hear the awe in my voice, as the heat began to rise in my core. His arousal was turning me on too.\n\n\"It only takes a few seconds,\" he smiled.\n\nI stretched the waistband of his bottoms and hooked it under his balls, exposing his weapon in all its glory. I feasted my eyes.\n\n\"Wow Jake,\" I gasped. \"You're amazing.\"\n\nJake reached for the remote and flicked off the television.\n\n\"Er, I'm up here,\" he said.\n\nI turned to look at his face, my cheeks flushed with excitement. He grasped me firmly beneath my arms and pulled me over to lie on top of him. I squealed with delight as he held me, feeling his hardness trapped beneath me.\n\nHe kissed me softly then looked deep into my eyes. I ran my fingers through his silky blond hair. There was a trace of anxiety in his eyes, no, more like hesitation. He didn't know what I wanted. He didn't want to kill the mood by taking control.\n\nI moved my legs to straddle his, shifting awkwardly to keep my balance on the narrow sofa. I kissed him again, letting his tongue play against mine - probing and tender at the same time.\n\nJake was an amazing kisser. He had this way of cradling my face, brushing my jawline with his fingertips, that made my body tingle at his touch. Once our lips met, he knew I was putty in his hands. I was lost in him completely, willingly surrendering, secure in his powerful embrace.\n\nIntoxicated, I scrabbled to locate the hem of his pyjama shirt, blindly pulling his torso upright, fighting to slip the garment over his head. Then I held my arms aloft, imploring him to rip my top from me in turn. My lips fell again on his and I began to grind against him, blinded by passion. I clung desperately to him as he rolled the two of us over and my back sank into the cushions.\n\nHis mouth left mine and he kissed frantically down my neck and across my collarbone. Then abruptly he stopped, lifting his head up to feast his eyes on my breasts. I arched my back, inviting him, no, begging him to soothe my throbbing nipples with his tongue. \n\n\"Please Jake, please,\" I whispered imploringly.\n\nHe smiled at me, hesitating for a moment, wondering if he should tease me. But he didn't. \n\nHe dipped his head, closing his lips over my right nipple. I held my breath, waiting for his tongue to flick across the tip, hanging in anticipation.\n\nShort little taps on the side of the nipple, then his tongue raked across the top - I gasped as electricity sparked through me. Now he was swirling his spittle around the sides, lovingly caressing me with his wetness.\n\nThen changing sides, repeating the process, delighting my breasts with the delicate precision of a musician, drawing my moans and yelps through the crescendo of pleasure to the intense peak of orgasm.\n\nThe dam broke and my body shook.\n\n\"Please Jake, please Jake, please,\" I panted desperately, clawing blindly for him. \"Let me hold you, let me hold you.\"\n\nHe crawled over me and I threw my arms and legs around him, pulling him downwards against me, gripping him tightly as a koala might cling to a tree. I felt my breathing slow as I luxuriated in the security of his embrace, my breasts pressed in relief into the soft downy hairs of his chest.\n\nHow long we stayed like that, I do not know. I felt a gentle kiss on my forehead and I opened my eyes. Jake was looking down at me, a smug smile written across his face. He was almost punchable.\n\nHe kissed me again.\n\n\"Let's go upstairs,\" he said softly, his eyes twinkling in anticipation.\n\nI let Jake lead me by the hand up to my room. Instinctively I moved to lie down and to pull him on top of me, but he stopped me, pulling me upright in the centre of the bed so that we knelt facing each other, our knees touching. He reached forwards and took each of my hands in his.\n\n\"I want to look at you,\" he said simply.\n\nJake could have looked at me however we were positioned on the bed, but that wasn't what he meant. He was about to show his dominance over me, to take me for a second time, but for now he wanted us to be equals, perhaps to assure himself that the two of us together were consenting to the act about to take place.\n\nI looked up into those deep blue eyes that sparkled intensely with love. I lifted my hand to stroke his cheek, feeling the softness of his skin. His chest was bathed in the soft glow of the fairy lights that hung above my bed and his wispy hairs shimmered like strands of gold. I let my hand trail downwards, drawing my fingertips across his torso, as if checking that the vision of masculine beauty before me was truly real.\n\nMy eyes sank lower. His glorious cock stood proudly to attention, honouring me like a ceremonial flagpole. Delicately, tentatively, I wrapped my fingers around his girth, testing him as if touching him for the first time. Then I moved my hand lower, pulling his foreskin down, revealing the deep purple bulbous head, the ultimate source of my pleasure.\n\nI kissed him on the lips again, then moved lower and he leant backward to offer me his chest. Still grippling his hardness with one hand, I followed the contours of his torso with my mouth, nuzzling against his pecs.\n\nI looked up at my boyfriend again.\n\n\"Can I kiss him? I want to kiss him. I love your willie so much, I want him in my mouth. Please Jake, please?\" I begged.\n\nHe nodded, a little nonplussed by my pleading.\n\nI shuffled back a little and bent forward again to kiss his tip. I felt him gently hook my hair away from my face. I rested my cheek against his thigh, allowing me to look up at him, to watch him watching me.\n\nI reached forward with my tongue and licked his shaft, feeling the ridge that ran up the underside. I saw Jake close his eyes and a low groan emanated from his throat. He stroked my hair lovingly.\n\nCautiously I began to place little kisses along his length, brushing his hardness with my lips and lubricating his shaft with the lightest flicks of my tongue. I reached the top and began to dribble my spittle over his head, spreading it across the purple bulb with my fingers. I blew gently across the moistened surface, eliciting another appreciative moan.\n\nI moved my hands up to Jake's chest and pushed him gently backwards. He obeyed and lay back on the bed, spreading his legs either side of me. Then I crawled forwards, watching his face as my nipples raked up his thighs and onto his abs. I pushed down a little, letting my breasts slip either side of his shaft, wrapping him into my bosom. That felt so good. I'd never realised how sensitive the little valley was, but Jake's cock was a perfect fit.\n\nMy boyfriend bucked his hips a little, tickling the underside of my mounds with his pubic hair. I shut my eyes, lost in the sensation.\n\n\"Does that feel good?\" I whispered.\n\n\"Urrrghhh,\" he moaned back in wordless agreement.\n\nI slipped down his body again, opening my lips wide to take his head into my mouth. His cock jumped as he felt my tongue make contact. I savoured the taste of his pre-cum, that slightly salty sweetness blended with a hint of metallic bitterness - that was what I enjoyed most about blowing Jake, that chance to savour his most masculine essence, to celebrate his manliness in all its glory.\n\nI looked up at him, my mouth stuffed full with his dick. Jake had propped himself up on one elbow and was gazing lovingly into my eyes. He moved his free arm downwards and began to stroke the side of my face with his hand. I tilted my head slideways, letting him feel his cock through my cheek. Another moan of delight as he felt the bulge of his swollen hardness with his fingertips.\n\n\"Fuck Amy,\" he groaned. \"That feels so good!\"\n\nI placed my hands either side of his pelvis and began to slide downwards, wanting to take as much of him into my mouth as possible. I loved the feel of his smooth skin sliding past my lips as I pushed his head ever closer to my throat. I began to make swallowing motions, trying to coat him with as much wetness as possible. I'd taken him all the way in before, I was desperate to do it again. I could feel my own arousal building in anticipation.\n\nI started to bob up and down, licking and sucking as I did so. Jake's grunts were becoming louder now and he was lifting his hips to encourage me. I slid my hands under his butt, kneading the muscular globes. So fucking sexy. \n\nI was pushing harder at the bottom of each stroke. Jake shuddered each time his tip reached the narrow gate at the back of my mouth. I moved one of my hands across to cradle his balls in the palm, pressing against the root of his weapon with my fingertips. He'd taught me how to do that, to make him last longer and make his climax more intense.\n\nThen I stretched my neck to its fullest extent and slid his rod down my throat, forcing my nose down into his forest of golden pubic hairs. The sound of my retching reached my ears, but I pressed onwards, desperate to swallow as much of his hardness as possible. Jake's pleasure was all I cared about. I couldn't breathe, but that didn't matter. I felt my face flushing and tears beginning to stream out of my eyes.\n\nI pulled off him in triumph, gasping for air. I knelt above him to kiss him.\n\n\"Fuck Jake!\" I cried. \"I need you now, like, really, really now!\"\n\nI straightened up and reached behind me to the bedside table, slipping open the drawer to retrieve a condom. Jake crawled forwards, kneeling before me again as I rolled the latex sheath over his erection and smothered it with lube.\n\n\"How do you want...? Should I er...?\" he asked hesitantly.\n\n\"Get on top of me Jake,\" I instructed, as I lay down on my back. He scrambled between my open legs. I reached forward to catch his cock as it bobbed in front of me, guiding him as his chest moved downwards against mine.\n\nI rubbed his tip against my sex. I was wet, so wet for him. My lips were swollen in excitement, slippery with the juices of my arousal.\n\nHe pressed his forehead against mine, staring deep into my eyes.\n\n\"I love you so much,\" he whispered.\n\n\"Please Jake, please,\" I whimpered. \"I need you now.\"\n\nHe began to push. Slowly. Easing his bulbous head into my channel, stretching me open again, all the while watching my face for the signs of discomfort that I was determined not to show.\n\nIt hurt, of course it hurt. I was no longer a virgin, but my boyfriend was so big I'd always known the second time would be painful too. But that didn't matter. All I wanted now was for Jake to take me, to possess me, to own me. I released his cock from my hand and threw my arms outwards, surrendering to him.\n\nHe brought his lips down to kiss my mouth, which hung open in awe of him. His tongue pushed hungrily against mine and I responded vigorously, gripping his face between my hands, desperately losing myself in his passion.\n\nWe broke the kiss and he looked down at me, searching my eyes again for signs of pain.\n\n\"Please Jake, please,\" I begged, raking my hands down his back to his fabulous bottom, pulling him into me. All I wanted was to feel his steely hardness inside me, filling me, completing me.\n\nHe pushed forwards tentatively, gingerly. I arched my back against the power of that first full thrust, calling him deeper as I stretched around him. I threw back my head, gasping in pleasure, my eyes sightless as my fingers clawed at his skin. \n\nThen suddenly he was all the way inside me, sheathed to the hilt, splitting me open as the two of us united. My muscles gripped every inch, binding him to me, enslaving his flesh to my service. The pain was excruciating, but irrelevant, like the high-pitched ringing of a distant alarm bell, instantly dismissed by the roaring heat within me. Nothing could persuade me to let him go.\n\nKisses, little kisses, delicate kisses - on my cheeks, my lips, my forehead; Jake's tenderness in that most masculine of acts. My mouth searched blindly, my tongue thrusting against his, as I tightly gripped the back of his head. Moans and whimpers emanated from my chest, words impossible, unfit to carry my emotions.\n\nFor how long we kissed, I know not, but Jake would have held me for eternity, safe and secure in his embrace. Gradually my vision began to clear; his face began to appear above me, cradled between my hands. His eyes sparkled with love for me. I nodded, pleading with him to begin, then, as I felt the slow withdraw as his hips eased away, I pressed my forehead against his, curving my body upwards and inwards, as if to prevent him escaping from me.\n\nThen he thrust forward again, a flash of exquisite pain shot through as I yielded to his advance. I arched my back as he filled me once more, a warm pleasure flooding through me.\n\n\"So good,\" I managed to moan.\n\n\"Yeah?\" he asked softly, \"you like that?\"\n\nI nodded.\n\nHe pushed up away from me a little, straightening out his arms a little and I craned my neck forwards to see where we were joined. He knew I wanted to watch.\n\nHe thrust again - slow, yet powerful, stretching me open as I surrendered to him. The pain was lessening as my body grew used to him, and now the pleasure was beginning to win through. I began to gasp each time he pushed into me, encouraging him onwards. Above me the sinews of his body glistened lightly with perspiration and the shadows cast by the fairy lights above us, accentuated his muscles even more. His raw scent was intoxicating, a testosterone-charged heat that drove me wilder still.\n\nI was beginning to lose control again, but to pleasure this time, not to pain. The love of my life was lifting my soul from the bed where I lay, driving me to places never before seen. The heat that burned in my core was spreading throughout my body, firing my arousal to ever greater heights.\n\nThere was a change in Jake too, as he responded to my moans. I felt him take my hands and pin them above my head; he was dominant, in charge and in control - his masculinity fully unsheathed. He began to increase his pace, driven onwards by the same urgent, primeval desire that commanded me. Harder. Faster. Deeper.\n\n\"Yuss,\" I hissed each time he hammered into me, squealing and moaning in equal measure. \"That feels so-so-so good.\"\n\nEvery movement of that steel within me, buried deep inside, spun ripples of excitement throughout my body. Jake pistoned into me with the intensity of a steam train, building the heat inside me each time his balls slapped against my thighs. \n\nHe brought his chest down again to meet mine, crushing my nipples against his torso, binding me ever more tightly to him. He pressed his forehead against mine and I felt the sweat streaming across his brow.\n\n\"I'm getting close, I'm getting close,\" he panted.\n\n\"Go Jake, go!\" I urged, \"go-go-go-go-go!\"\n\n\"Grrrrr-aaaaaggghhhhh!\" Jake cried, thrusting forward one final time, collapsing against me as my pussy contacted around him.\n\n\"Fuck Jake, fuck!\" I screamed, pulling him ever more tightly into me as my climax catapulted me to unknown worlds.\n\nJake lay on top of me as my breathing returned to normal, lightly stroking my hair and kissing my forehead. I opened my eyes and smiled up at him.\n\n\"Wow! I came so hard!\" I marvelled. I leant upwards to kiss him. \"I'm so in love with you.\"\n\n\"I love you too,\" he said.\n\nI released him to dispose of the condom and he lay down on the bed again. I snuggled into the crook of his arm, lightly playing with the golden hairs on his magnificent chest. I let the warmth of his body gently carry me to sleep - safe and secure in his protective embrace. \n\nJake was my man and I was his woman. There was nothing else in the world."
    ],
    "authorname": "SpindleTop",
    "tags": [
        "high school",
        "horses",
        "riding",
        "romance",
        "second time",
        "stables",
        "summer",
        "first love",
        "18-year-old",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/tybalt-and-juliet-ch-12"
}