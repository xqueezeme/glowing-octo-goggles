{
    "title": "Lifes Changes Ch. 10",
    "pages": [
        "I woke up the next morning feeling hung over. As if I as on a drinking binge for a week. Pam handed me a glass of orange juice that tasted so good I drained the glass in on gulp. I looked around the room and asked\n\n\"Where's Bill.\" \n\n\"He left for work early today, he thought it was best for you not to see him. He said you've been worse this year then you ever have before and he was afraid you wouldn't be able to control yourself if he was here.\"\n\n\"He's maybe right. Did I do anything last night I need to apologize for?\" I asked\n\n\"No you were the perfect nymph you were just very demanding. Do you remember anything?\"\n\n\"Very little I remember eating and then coming up here with Jenny and I tasted her and then you. Then I smiled at Bill so he would mate with me. And then there was a name I was supposed to remember. It was very important that I remember it.\"\n\n\"Was it Desrei? That was what you kept saying over and over.\" She asked \n\n\"No I don't think so. Or maybe it was when I had to remember it. I'll have to remember what the owl said.\"\n\n\"What owl, Mayle\" Pam asked \n\n\"The one in the tree. He told me many, many things but I can't remember them right know.\"\n\n\"Mistress do you hear what you saying?\" Pam asked \n\n\"\"What do you mean?\" \n\n\"You just said you talked to an owl.\" Pam said with a surprised look on her face.\n\n\"Well of cause I talked to an owl. He was very smart he knew lots of thing about the forgetting, but I just can remember them all right now. There was a name I was suppose to remember but it had to do with when I remember it.\"\n\n\"Mistress did you talk to anyone else?\" Pam asked in awe\n\n\"Well I did talk to a squirrel but he wanted to be petted more than talk and the deer he had his own problems then there was a bear and fox. But the owl he was the smart one.\" I said as I got out of bed. My legs felt like jelly and they hurt like I ran a marathon. Then I said, \"Today can you find me something softer to wear that skirt yesterday was rough on my exposed skin. God I wish I could go with out cloths I'd feel so much better.\"\n\n\"How about a satin slip under the skirt. I know you don't want to wear anymore cloths than you have to but you do have to wear something.\"\n\n\"I guess that will have to do. What about tonight can we go to Jenny's so Jon can work till nine?\"\n\n\"Yes she thinks it would be a great Idea and we can stay out by the pond in the forest.\"\n\n\"Oh good that will remind me of home.\" I froze and then said. \"Now why would I say that\"?\n\n\"Maybe it has something to do with breaking the spell?\" \n\n\"No for that I have to remember the queens name on the day after my renewal.\" I turned to Pam and asked. \"Did you understand that?\"\n\n\"Yes as clear as a bell. Now why can you tell me that today? And yesterday it would have come out as gibberish.\"\n\n\"The owl said that once a human said my nymph name I would remember it maybe I'll be able to speak of the forgetting as well.\" I didn't feel tired anymore I felt charge I said to Pam \"Let me take my shower then we'll go to the computer and see if I can read you the passage I read to you yesterday.\"\n\nI when down stairs after showering and getting dressed. Pam handed me a bowl of fruit and a glass of juice on my way to the den she had the computer all ready up and site with the circle of trees was all ready up.\n\n\"I see you remembered my pass word.\" \n\n\"Of cause Mayle. Now can you read what's written there?\" Pam asked I read the first paragraph then I asked\n\n\"Well did you understand what I just said?\"\n\n\"Yes. Mechi was the Mage that loved the Queen of the Fairy folk and caste the spell. That's too bad I really like listening to you when you spoke Fairy speak.\" Pam said. I relaxed my self and then read the passage again. This time Pam said. \"No not a word but that has to be the sweetest sounding language I ever heard. It makes me want to kiss you and make love to you.\"\n\n\"Stop right there if we get started neither of us will be going to work and Jon's workers will get nothing done. I guess I can turn it on and off as I like. I best get ready Jenny will be here shortly.\" We went back into the kitchen and Pam handed me the cooler and I said\n\n\"Thanks I finished all the fruit you gave me yesterday. I can't believe how hungry I was. Oh and dinner last night was superb.\"\n\n\"You are expending a lot of energy. So I imagine you need a lot of food to keep up your strength. So tonight I'll make more. You seemed to be very hungry; you had three lobsters and two baked potatoes. Not counting the salad and the fish.\"\n\n\"God if I eat like that all the time I'd be a round little nymph wouldn't I.\" I said\n\n\"Do you realize that was the first time you called your self a nymph?\" She asked\n\n\"Well I guess I'll have to start thinking of myself as one seeing I maybe one after all.\" Pam nodded her head and then I said \"Well I better get out side before Jenny gets here and those works get here. They looked offal good yesterday. I don't want to even think what could happen if I was in the same house as they are.\"\n\nI kissed Pam then when out side to wait. When the two-construction worker showed up. I wave to them then smiled. As they were going in the house I heard one say to the other.\n\n\"Dam she has to be the sexiest thing I ever saw.\" Then the other said \n\n\"When she smiled at me a got wood. Dam I wouldn't mine give her a taste of junior.\" I almost laughed out loud. I know they did know I could hear them. Jenny pulled up just as the men went into the house.\n\n\"Well I see you didn't jump those two. So you must be under control.\" Jenny said in a joking manner.\n\n\"Oh don't get me started you don't know how hard it was getting in this car and not following them into the house.\"\n\n\"So your ready to go again? I don't know how you do it. Jim's thinking of calling up an army detachment for tonight. He thinks twenty to thirty men should do the trick.\"\n\n\"Mmm that sounds lovely. Do you think he can?\" I said half serious \n\n\"Sheri you little slut.\" Jenny said laughing I guess I shouldn't tell her I was serious. \"So you all are coming over to my house tonight and Pam's cooking dinner in Ginger kitchen. I'll tell you Ginny's not real happy about that. That almost put the cabash on the whole thing till Pam promised you would smile at her extra sweetly.\"\n\n\"So now Pam's pimping out my smiles is she well I think when this is all over her and I are going to have a little talk that may just end up with a paddling.\"\n\n\"Well she may just like that.\" Jenny said as we both laughed. Then she asked, \"So what's tonight going to be like?\"\n\n\"I haven't a clue this time everything's different. I never remembered what happens after Bill started fucking me but last night I remember different things. Not the whole journey put parts of it. Like the part with the owl I don't remember speaking to anything.\" Jenny stopped me\n\n\"Hon I don't understand you.\"\n\n\"What part didn't you understand?\"\n\n\"Well the parts after you said remember different things. Then you started speaking Fairy speak I think Pam calls it.\"\n\n\"Well that's odd I didn't have any problem with Pam this morning. I wonder why you can't understand me\" I sat there thinking the problem though till we arrived at my office building.\n\nOnce in my office I asked Ginger what my schedule looked like \"Mr. Davenport would like to see you he has some equipment request he needs you to sign and Jeff Franks would like a moment of you time. A phone call will suffice. Other wise that's it.\"\n\n\"Schedule Mike for this morning and I'll call Jeff now. When Kim gets here have her come in.\" I sat at my desk and called Jeff. He had a small question about the equipment we were giving a way then I called Pam at the office\n\n\"Pam It's Sheri. Do you remember when I was talking to you about the owl.\" I asked I wanted to see if she could understand me.\"\n\n\"Yes Ma'am do you remember anything else?\"\n\n\"No I just wanted to see if you could still understand me. When I tried to tell Jenny about it she didn't understand me she said I was speaking in Fairy speak. I wonder why she didn't understand me and you do.\"\n\n\"Maybe it's because I said you Nymph name and she hasn't yet.\"\n\n\"That could be can you call her and tell her my name so she calls me it?\" I told her\n\n\"Of cause that's a good way to see if that's what we'll have to do. If it is then Bill and Jim will have to say your name too.\"\n\n\"Ok I talk to you later or maybe not. Oh and the next time you pimp out my smiles I'll paddle your ass.\" I told her\n\n\"Oh you heard about that did you. He wouldn't let me use his kitchen until I promised him you would. I'm sorry I won't do it again.\" I laughed she sounded so upset.\n\n\"I'm just teasing you now don't worry I'm not mad. I talk to you later. Or do some thing nice to you. I can still taste you on my tongue.\" I laughed again when she moaned.\n\nKim came in at about twenty after nine and I said, \"Well are you always going to be late?\"\n\n\"You said I set my own hours so technically I'm not late. But I had to stop off at personnel when I came in this morning to drop off some paper work.\" She told me then smiled at me sweetly.\n\nIt came flooding back to me about the green-eyed female being the off spring of the Mage and the nymph. And yes that smile will be trouble for me. I found it irresistible as I'm sure so did many others.\n\n\"That smile's gotten you out of trouble before hasn't it?\" I asked after I got myself under control.\n\n\"Yes it works quite well especial when I use it on cops. I've never gotten a speeding ticket. I don't find many that can resist it.\" She said but I could see she was trouble that I resisted it. I was having troubles resisting, my pussy was dripping like a faucet but I was determined to take control of this relationship. I will give into her but under my terms not hers. And my advantage was I knew what that smile can do. I asked\n\n\"Where should we start with the gym?\"\n\n\"I think we should get me an office first. I don't need to be in your hair all day. And I'm sure you don't need me up here. I'll keep you abreast of what's going on, on a daily basis till you feel you can trust me on my own.\"\n\n\"Do you have any equipment vendors in mind?\" I asked\n\n\"Yes I have three that I want to call. I'll make sure they all know the other's involved then we'll see who comes up with the best deal. I think we should go with two new stair masters two new tread mills seeing they're your favorite. Some weight trainers and a couple of stationary bikes. That's for starters then well see what's used and what's not. We can always add more, later. Do you have anyone on staff that can lay carpet and install lighting?\"\n\n\"That we'll have to talk to Mike about. If he doesn't have the manpower we can contracted it out. How do you know the stair masters and the tread mill are my favorite?\"\n\n\"Janie told me. We had a little party last night to celebrate my new job. She said you invited her and Kandy to the party on Friday as well.\" It surprised me that she knew about Kandy.\n\n\"So you know about Kandy?\"\n\n\"Sure I don't see what Janie sees in her, but if that's her thing let her enjoy it. Personally I don't see what any of you bisexuals see in the one eyed worm but you must get some pleasure out of it. I can't stand the thought of anything bigger than a finger going up in me. Maybe a nice fat tongue but that's about it.\"\n\n\"You don't even like dildos or vibrators.\" \n\n\"No I tried on once it hurt to much. I never enjoyed the feeling of being penetrated. It feels totally foreign to me. As if I'm being stabbed with a red-hot poker. I gives me the creeps just thinking about it.\" She said as she shivered\n\n\"I'm sorry to here that.\" I told her\n\n\"Don't be. I have enough fun with out it. Especially if I find someone with a really talented tongue.\" She said smiling at me sweetly. Just then Ginger knocked then came in and said\n\n\"Mr. Davenport is here.\" \n\n\"Please have him come in.\" Then to Kim I said \"If you don't mind I need to speak to him privately first.\" I really didn't but I need her out of my sight to get myself under control.\n\n\"Sure I'll wait in the outer office.\" I could see she was troubled that her smile wasn't working on me. I consider myself lucky for the intrusion. I began to wonder how much she knew about what that smile could do. Kim left with Ginger as Mike came in.\n\n\"Well Mike how much are we spending today?\" I asked \n\n\"Not much only two hundred grand but that's several pieces of equipment. I wouldn't do them all at once except they will take some time coming in. So the bills won't be here all at once and before you ask yes we need all of them.\"\n\n\"If you say so Mike. How desperate are we?\" I asked seeing the urgency in his face\n\n\"Those first two pumps if the one that running now fails. We'll all be out of a job until I can get the air-conditioning system back up. I'm sure you being a computer guru knows what happens when the air conditioning goes down.\"\n\n\"Yes I do. Is guru the politic correct way to say nerd?\" Mike laughed and said\n\n\"You got me I almost did say nerd.\"\n\n\"Don't worry Mike give me a pair of taped up glasses and a pocket protector and I'm your typical nerd. I don't care.\n\n\"But your the prettiest nerd I ever seen.\" Mike said then quickly apologized \"Sorry I didn't mean anything by that.\"\n\n\"It's ok you think I'm pretty I try to be pretty. Just don't try and force yourself on me.\" Mike was going to deign he would which I know he wouldn't. I held up my hand and said. \"Lets get back to business. What else do you have for me?\" I could see the relief in his eyes that we were getting off that subject.\n\n\"That's about it. I did hire three new employees and I'm still looking for three more. By the way is that the new fitness trainer you hired.\" I told him she was. \"Well I think I'll have to started going to the gym more often.\"\n\n\"Don't bother if you looking to make her one of you conquests. Hey aren't you married?\" I asked\n\n\"Yea. My wife says I can window shop all I want as long as I don't go in to the store. And she's pretty to look at.\" We both laughed.\n\n\"If that's how I'll get more people in the gym then so be it. And speaking of her do you have a office for her yet?\" I asked\n\n\"Yes I do right across from the gym that some computer nerd was using for a storage room. They're moving the equipment out as we speak.\" He told me\n\n\"How many rooms did I stash stuff into?\" I asked\n\n\"From what I gather quite a few. Franks has his people empting rooms out all over the place. Who ever is getting this stuff has hit a gold mine.\" Ginger came in and said\n\n\"Mrs. Macon There's a Anton Phillips here to see you and Ms. Swan said you'll what to see him.\"\n\n\"Thank you Ginger and her name is Kimberly or Kim.\" Then to Mike I asked, \"Do you mine he's the one who hit the gold mine.\"\n\n\"No I'm done if you are.\" \n\n\"Ginger, show Mr. Phillips in would you.\" Ginger opens the door for Anton and Mike stood up when he came into the room. I said, \"Mike Davenport I'd like you to meet\"\n\n\"Anton Phillips leading pass rusher of the NY Giants. And if I may the next Hall of Fammer.\" He finished for me\n\n\"We'll see about the Hall of Fame when they vote next.\" Anton said modestly.\n\nLooking at him he seemed bigger then When I seen him Saturday. He was wearing a pair of faded jeans and a golf shirt that looked too small for his wide frame. And he sure looked good too to bad he didn't like women. Then I thought to my self \"Control girl control.\"\n\n\"Mr. Phillips If you don't mind me asking why did you leave. You were still on top.\" Mike asked.\n\n\"The names Anton. I could live with hurting after a game on Wednesday. But when I was still hurting on Saturday I knew it was time to leave.\" He said with a laugh. Mike then said to me\n\n\"I'll get a couple of my guys and we'll meet you down by the gym.\" Then he left\n\n\"Ms. Macon I want to thank you for this donation if there is any thing I can do for you. You just let me know.\" Anton said\n\n\"You can start by calling me Sheri. And I'm glad to do it.\" Anton gave me a big smile, which caused me to smile back at him. Then I said, \"Let's go down and see what you're getting.\"\n\nKim Anton and I got on the elevator and rode down to the third floor. On the way I said. \"You do understand that no one needs to know about Dominators?\"\n\n\"Of cause I wouldn't dream of bringing it up.\" He said looking hurt that I would even mention it.\n\n\"I guess I didn't even have to mention it did I.\" I said \n\n\"No, but I can understand why you would think you would have to. That was your first time you were ever in my club. We are very discreet you name doesn't appear in any of my records. My hostess, happen to see you name and where you live and brought it to my attention because she knew Kimie lives down here. Other wise I wouldn't have know where you lived. And I didn't know your last name till Kimie said it yesterday.\"\n\n\"I'm sorry I even brought it up.\" I said feeling like a heel. \n\n\"Don't be. Today is a good day. I already have people lined up to teach mother on welfare how to us these computer so they can get jobs and get off welfare and give their kids better lives. So today is a great day.\"\n\nHe made me feel better just by telling me this and the enthusiasm in his voice. I could tell he really enjoyed doing this. As we got off the elevator about fifteen people met us working to get the equipment down stairs. I realized these were my people they worked for me. Mike took Kim and me over to the office he had for her and said\n\n\"This should do we will bring up a desk and some chairs. Franks can set you up with a computer and a phone. What do you think it's quite big?\"\n\n\"It's perfect and it's real close to the gym.\" Kim said Then Mike was called away Kim said to me \"How am I suppose to dress. I can't be instructing in a dress all the time.\"\n\n\"Of cause not. You can wear work out cloths. But I would like you to keep a business dress or suit handy in case you have to go to a meeting with the president or the CEO and in case you have to go to a board meetings. The work out cloths must be conservative nothing racy.\"\n\n\"How about if I come dressed for business then change when I'm going to be in the gym. Then if I have to go to a meeting I'll be ready. And I'll be dressed to go out to dinner or what ever.\"\n\n\"That's fine with me.\" I told her then looking at my watch I said, \"It's time for Ginger to go to lunch. I'll be in my office if you need me.\"\n\nWhen I was back in my office Ginger said \"I'm sorry I don't know what came over me. Kimberly said you would want to see him and I interrupted you meeting it won't happen again.\" I knew why she did it but I couldn't explain it to Ginger she wouldn't believe it if she did understand me.\n\n\"That's ok she can be quite compelling just remember you work for me not her. Think what I would want.\" She said she would and she left for lunch. As I sat at my desk the phone rang\n\n\"Hi busy for lunch?\" Janie asked \n\n\"No come on down.\" Janie was there with in minutes She sat on the couch with me and said\n\n\"Well how are things going?\n\n\"Not bad been kind of hectic today. What's up with you? I hear you and Kim had a little party last night.\"\n\n\"It really wasn't much of a party. We sat around had some champagne and talked. It was ok I told her you invited Kandy and me to your party. She told me you invited her first. So since we where all going to be there I figured it was ok I told her.\"\n\n\"Yea that's fine. I'm not real sure why I invited her myself. But I did so that's the end of it. She knows about Kandy? I asked\n\n\"She's known about Kandy a long time. She doesn't care. In fact I think she likes him better now that he's wearing a dress.\"\n\n\"I wonder why she hates men so much?\" I asked of cause I knew the answer.\n\n\"Oh she doesn't hate them she doesn't have any use for them and the one eyed worm, as she calls it. When I showed her my strap on she made me promise not to try and use it on her. She won't let me put more then one finger up her. In fact she'd rather I didn't put any up. She hates to be penetrated.\" Changing the subject I asked",
        "\"So what did Kandy think about the party. Did you get her a party dress to wear?\"\n\n\"After I left work yesterday I stopped and got one, plus a few more to wear around the house. When I got home She was already dressed and making dinner. She didn't have any make-up on or her nails done. When I showed her the dresses I bought her she got all excited and when to try them on. I put on her make-up and did her hair. She was so excited she had to change her panties twice so as not to get the dresses stained. When she put on the party dress I said that she was going to wear that to the party. She got all up set saying she couldn't go. I'm sure you know the arguments she gave. Well after I told her she wouldn't be the only she male there she was all for the idea.\"\n\n\"When Kim came over with the champagne. She asked Kandy to stay and join us. Which was a first she never asked Kenny to stay and Kenny always felt out of place when she was there. But this time she asked him to stay and we had a great time.\"\n\n\"I know you said that Kenny didn't want you with other men and you didn't want him with other women. Are you both still against that?\"\n\n\"We never discused it since that first night why?\n\n\"I was just thinking that you might like to have a go with Bill and I might have a go with Kandy. I just want to know what's off limits and what's not. Don't get me wrong I love Bill with all my heart but some times I like to try someone else.\"\n\n\"Well I don't know I'd like to try some one else too but if Kandy says she doesn't want me too I'll have to do as she says. Even though I'm his Mistress now I can't go against his wishes.\"\n\n\"I understand if Bill didn't want me to be with some one I wouldn't do it either. I just want to make sure we all know the ground rules before they get broken and some one gets their feelings hurt.\"\n\n\"I'll see what he says.\" Then to change the subject she asked \"So what do you think of Kim doesn't she have sexy eyes?\"\n\n\"Their quite unique. And She's quite pretty and that smile of hers is very alluring.\"\n\n\"Oh when she smiles at me I just want to melt. I'd do anything she asked me.\" Janie confessed. I was pretty sure she would do just about anything Kim wanted. I'm sure it was Kim that got her to cheat on her husband Janie never stood a chance. Looking at my watch I said\n\n\"Well it's time to get back to work.\" Janie left and I started doing some work that's been needed doing for some time. At three o'clock Ginger bussed me to let me know that Kim and Anton was waiting to see me. I wouldn't have minded making Kim wait for a while but I couldn't see making Anton wait too. I told her to send them in.\n\n\"Sheri I just wanted to thank you once more for the donation.\" Anton said\n\n\"Just put it to good use that will be thanks enough.\" I told him \n\n\"You can be sure of that. I have to go. I have a long drive back and I have to get that truck emptied before I'm done. I'll bid you lovely ladies ado.\" And then he was gone. I turned my attention to Kim\n\n\"Now what do we do with you?\" I asked \n\n\"Mr. Davenport has a desk in my office all ready and Mr. Franks promised he'd have a computer and a phone in tomorrow morning. If you want I can get started cleaning up my office, or I could make a few phone calls. What ever you want me to do?\" I could see she was leery of me since I haven't responded to her smiles yet.\n\n\"Go ahead and get you office set up. I have plenty of work up here to do. Once you get your phone in then you can start making calls.\" I told her\n\n\"Yes ma'am\" She said and I swear she almost tried to curtsy before she left. I thought to myself that girl was physically draining.\n\nI sat back at my desk and for the next two and a half hours I actually got some work done. At five forty five I walked out to Gingers office and handed her some papers I needed her to file and copy and said.\n\n\"Tomorrow will you copy these and file these others. I think were done for today, at least I am.\"\n\n\"Sheri I like to apologies again for earlier.\" I stopped her \n\n\"Don't worry about it she has a compelling personality. Just try and fight it. You can leave now if you'd like I have to wait for a ride. I'll be leaving shortly too.\" I told her\n\nTwenty minutes later I was getting into Jenny's car. \"Well Mayle what was your day like?\"\n\n\"It was full very full you wouldn't believe who was there to see me today.\" she asked who. \"Anton Phillips.\" I explained how the master came to be there.\n\n\"You sure lead a charmed life maybe there is something to this Nymph thing.\" Jenny said\n\n\"So what did Pam tell you? I see you called me by my Nymph name.\" I asked\n\n\"Just about everything but go ahead and tell me again to see if I understand you.\" I told her about the owl and what I knew about Kim and her green eyes.\" Jenny stopped me\n\n\"Did you say green eyes what kind of green eyes\"? I told her about Kim's eyes \"That must be Jack's daughter. Kimberly Swan she's a stone fox well at least she was. I haven't seen her in four or five years. She used to make my pussy drip just looking at her.\"\n\n\"Her father has the same color eyes doesn't he?\" Jenny said he did. \"And her mother died in child birth didn't she?\"\n\n\"How did you know that? No body ever talks about that. From what I heard it almost killed him. The only thing that kept him going was his daughter. He's devoted to her. He gives her anything she wants and he can afford it. Jim's his tax lawyer he's got more money then Midas.\"\n\n\"Oh darn, I think I may have screwed up.\" I said I told jenny about inviting her to the party on Friday.\n\n\"Oh dam I guess we're not going. Wait you said she knows you where at Dominators. So she must go too, she might have seen me there a time or two.\"\n\n\"She might have but how do I asked with out telling her everything.\" I asked but I was getting to the point of not caring. All I could think about was bathing and eating.\n\nAs we passed my house I saw that the workers were still there and the drive way was littered with boxes. Once Jenny had stopped the car I got out and when straight inside taking my clothes off as I went. I slowly slipped into my Nymph persona the closer I got to their pool. Once I was naked and in the pool I was a nymph once more. Pam came out on to the patio and waved at me\n\n\"Come female mate come join me in the pond. Take off your cloths and bath with me.\" I told her. She stripped off her cloths and jumped in the pool\n\n\"Mayle it's good to see you.\" \n\n\"It's very good to see you one who named me first. Today is a wonderful day I'll dance and chant with my sisters in the circle of trees tonight, put first I must eat. Is there food for me to eat?\"\n\n\"Yes I have much food for you. It will be done soon then you can eat.\" She said to me\n\n\"Where is my male mate will he be here to mate with me?\" \n\n\"Yes He's in the house. I have to go now and get the food ready.\"\n\n\"Yes get the food ready I need nourishment.\" I told her as her got out of the pond. Bill came out as Pam went in they said something to each other. Then Bill took off his cloths and sat on the edge of the pool. I when over to him and said\n\n\"Come bath with me we must be clean. Before we eat then I can ride you wonderful meat to the circle.\" He said something to me I couldn't understand. Then he said\n\n\"Mayle can you understand me.\" \n\n\"Yes I understand you now. Now that said my name.\" He slipped into the water and held me. I saw tears in his eye's I asked \"Why do you cry today will be a great day?\"\n\n\"I'm losing you your not the one I married.\" \n\n\"Don't cry when my rite of renewal is over everything will be as it should. I'll be the same as I was only better.\" I had no idea why I said that.\n\n\"But you have never been like this before. This time everything is different.\"\n\n\"Tomorrow you'll see I be as I should be. Is it time to eat yet I need nourishment? So I can smile on you and you forget these unhappy thoughts.\" Pam came out and said it was time to eat I said to Bill. \"Come let us eat then I will quench my thrust on the females then you can send me on my journey.\"\n\nWe went in the house Jenny and Jim were there, also naked and we sat down to a fine feast. Once we were done I drank my fill from Jenny and Pam leaving them unconscious. Then I turned to Bill. I smiled my special smile and he became instantly hard. He plunged into me and before I felt the first thrust I was flying above the trees. Looking for the clearing where I would find my sisters dancing and singing.\n\nBut I couldn't find it; the clearing was not where it should be. I felt a compelling force to descend to where I met with the owl yesterday. When I was on the ground in front of the tree that held the owl he said\n\n\"Well little nymph what are you doing back here so soon? Shouldn't you be in the clearing with your sisters.\"\n\n\"I know I tried to find the clearing but I couldn't. I was compelled to come back here. Did you compel me to be here?\" I asked very confused\n\n\"No little one. I hold no power to compel you.\" \n\n\"If you didn't then who did?\" I asked \n\n\"I compelled you to be here.\" I heard behind me. \n\nI turned around. Before me was a tiny Nymph no taller then four and a half feet. Her hair was dark red almost black. She had little nubs for breasts, her ears came to a sharp point her eyes where almond shaped and hazel in color. She was completely nude as all nymphs are in the renewal. She looked very familiar. But I'm sure I never seen her before. Behind me I heard the owl take flight. I turn to watch him fly away as she said\n\n\"Leave him be. He has served his purpose now let him do what all owls do at night. Hunt for food.\" I turned back to the other nymph and asked\n\n\"Do I know you?\" \n\n\"No my daughter we have never met. But I've been watching you come to the renewal every year since your first. I had hoped that you would have been ready many years ago, but it took many years for you to get everyone in place. Now you are ready to assume your rightful place among the creatures of magic.\" When she paused I asked\n\n\"You call me daughter but you are not my mother. Who pray tell are you?\n\n\"I will explain everything to when you return to me. Your male mate will soon succumb to the pleasure of your body and inject his seed. When your spirit returns to your body you must tell your female mate that your next journey will be your last for tonight. Then you will come here and I will explain everything you need to know. Tell her not to try and wake you before you awaken on your own. If they do then act of progression will not be completed and your spirit will be stuck here with mine till another nymph strong in the power comes.\" I felt Bill expanded in me and I said\n\n\"I must leave but I will be back.\" \n\n\"Yes come back but tell your Female mate not to wake you.\" She said sounding desperate\n\n\"I will if she understands me.\" \n\n\"She will I have made it so.\" I was going to ask her how but the next instant I was lying with my face on the mat panting for breath. When I recovered I turn to look at Bill and he was still enthrall with the pleasures he took from me. I looked for Pam she was sitting up still recovering from the pleasure I had given her. I went to her and knelt down next to her and asked\n\n\"Can you understand me?\" Pam cleared her head with a shake and said \n\n\"Yes Mayle very clearly.\"\n\n\"Good listen to me and stop me if you can't understand me. I will take one more journey this night. No matter what happens don't wake me. I will wake on my own when I am ready. Do you understand?\"\n\n\"Yes my Mistress I understand not to wake you, let you wake on your own no matter how long that takes.\" I was reasonable sure she would do as I ask. I went to Bill he was still enthralled. I whispered in his ear.\n\n\"Do as Pam says. She knows my mind.\" Then I turned to Jim and asked \"Are you ready for me to smile on you so you can take me on my last journey.\" Jim looked at me but didn't understand. He was the only one not to call me by my Fairy name. So I smiled at him extra sweetly as Pam had promised. Then I got back on my knees so he could mount me. When he pierced me with his manhood I was once more standing before the Nymph in the trees.\n\n\"You have returned swiftly my daughter. That is good. Now I will answer your questions before we begin the Act of Progression.\"\n\n\"Why do you call me daughter. No other nymph has called me daughter in the renewal. Why do you?\n\n\"Come let us sit and I'll explain everything to you.\" We sat on a patch of spongy moss that felt cool and damp on my bottom. \"I call you my daughter because that is what you are. As was your mother and her mother all the way back to my Jazelle, who was my daughter. You are my descendent. You are the rightful heir to my throne. And you will be the Queen of the Fairies when you awake to the world of the human.\"\n\n\"I don't understand how can I be that. Are you Queen Desrei? The queen of the nymphs that Mechi loved so much.\" I asked. The other nymph laughed\n\n\"Mechi never loved me. He loved himself more then anything else. Mechi loved power. He wanted to rule all of the Fairies, but he knew that he could not do that because only a nymph can rule the Fairies.\"\n\n\"So he decided that if I was his consort he could rule in my stead. I refused him, because I knew he had a cold cruel heart. I didn't know what his plan was when he said if I didn't agree to be his consort and let him rule. He would make it so that I would rule no Fairies.'\n\n\"When I finally realized what he had planed. I tried to stop him by stripping all the mage of their power. But Mechi had caste enough of the spell to render all Fairies forgetful. Mechi's plan was so that only the Mage would remember. Now only I remember what it was like before the forgetting. And soon my daughter so will you and all Fairies will remember what and who they are.\"\n\n\"How can you still be here if you are dead?\" I asked \n\n\"When Mechi caste his spell, he knew that all nymphs would have to come to the renewal at least three nights out of the year. He couldn't stop that, even before the forgetting we had to do that. Some Fairy Folk spent many days and even weeks here. Only wakening to consume nourishment to sustain their bodies. What he added was that nymphs would be compelled to ride the male meat to get here. It was a form a humiliation so that you were dependent on the males to get here and you were forced to receive mass quantities of male seed to get here.\"\n\n\" How it ached my heart to see my nymphs subject themselves to the humiliation of being force to seek out the quantities of males to make the journey possible. As you, yourself had to do. But that will all end when you awaken. Then all Fairy folk will be able to come here just by closing their eyes and wishing themselves here.\"\n\n\"When I realized what had happen and there was no way of fighting it I knew that I had to get my spirit here so I could pass on my knowledge to the one who would finally break the spell. So when I knew the fever would come for me I went to a place that I would have no male contact. When the fever took my mind to force it into the renewal my body die and my spirit was trapped here.\"\n\n\"You said all Fairy Folk would be able to come here. Do you mean the mage and the green-eyed females too?\" I asked\n\n\"Yes them too, as well as the black giants the elves, troll the leprechauns and even the compelled ones. All will be able to come here.\"\n\n\"Who are the compelled ones?\" I asked \n\n\"The compelled ones are the humans that serve us. They come to the nymph and stay with us to serve and protect us. You have several. They are compelled by desire but are free to leave whenever they wish, most don't. They serve a vital function. They are like an anchor for us. They keep us from getting too wild. Your male mate has done this many times. He is worried that you will be lost to him. When you awaken and say the chant of progression then he will know that he has not lost you.\"\n\n\"What of the powers that these Fairies should have?\"\n\n\"All the powers are subject to you. You can remove or grant power to any you see fit, Fairy and human alike. Use this power wisely. The power of the Mage can never be returned. When I stripped them of it I made it permanent due to their arrogance.\"\n\n\"What about the green eyed females why can't they have sex with males?\"\n\n\"That was so they didn't have off spring, the off spring would be demon in nature.\"\n\n\"Can't I remove their uterus and allow them the pleasure of penetration.\" I asked\n\n\"We didn't know about such things in the time before the forgetting. When you are Queen the you can make the change.\"\n\n\"Now we must start the Act of Progression. This is where my powers will be passed on to you. You will know every thing Fairy Folk do with their powers. Most you will ignore but you will know when they use their power for evil. Now kneel before me my daughter so we can begin.\" I can't tell you what happen for I do not know. One second she touched my head with her hands the next I was waking up in my bed.\n\nWhen I awoke I realized I was in my own bed in my own room. I was startled at first; trees in a dark forest surrounded me, then the next moment I was in my room on my soft bed. I looked around the sun was coming into the windows and Pam my sweet Pam was asleep in the chair next to the bed.\n\nAs I stretched, I felt my joints protest in pain. I must have slept in one position all night. My movements had awaken Pam. She looked to me with relief on her face. She said\n\n\"Oh good you finally awake. I had the devil of a time keeping Bill from taking you to the hospital. He's been very worried. Seeing you haven't move since we laid you down on that bed. He even put a mirror to you nose to see if you were still breathing.\"\n\n\"What time is it?\" I asked not sure what Bill was so worried about \n\n\"It's three in the afternoon.\" She told me \n\n\"Well I can see why he's up set I never sleep this late.\" I said as I sat up. My back made me acutely aware that I hadn't moved for a while.\n\n\"Mistress it's three in the afternoon on Friday. You sleep for over forty hours.\"\n\n\"My God no wonder he's upset. How did you ever keep him from trying to wake me?\" I asked\n\n\"Well it wasn't easy he made me promise that I'd allow him to take you to a hospital if you didn't wake up by six. We had quite a few arguments but once I said it was what you wanted he back down.\"\n\n\"I'm glad you won. Where is he now?\"\n\n\"Down stairs getting some thing to eat. He hasn't left this chair since noon yesterday.\" She told me.\n\n\"I'll have to do something nice for him. Is every thing set for the party?\"\n\n\"Just about, Bill wanted to cancel but I talked him into waiting till five before we canceled. If you want we can still cancel?\"\n\n\"No I want it to go on as scheduled I have some things to settle. Now let me get a shower.\" I told her I knew I had to make the announcement soon but I wanted to be clean. Before I let my Fairy Folk know there was a new Queen on the throne.\n\nOnce I was showered and dressed. I put on some light make-up. Not that I need any for who ever saw me would see me a beautiful if I chose, but that was not what my powers were for. I stood in front of my full length mirror closed my eyes and said\n\n\"My name is Mayle I am the true and rightful heir to the throne of Queen Desrei. Pay homage to me Beings of the Fairy Folk.\" In my mind's eye I saw thousands and thousands of Fairy Folk kneel before me and pledge their allegiance to me. Then all of the Fairy Folk knew what they were and what powers they had. Then I said, \"Use your powers wisely or suffer my wrath.\" That was something I had to say. I don't want to sound like I was getting a big head. When I open my eyes and turned. I saw Bill and Pam kneeling before me.\n\n\"No you two don't have to kneel to me. That was just for my people.\" I said embarrassed\n\n\"We are your people. We are the compelled. We are here to serve.\" Bill said",
        "\"Then serve me by never doing that again.\" I told him \"Now up with both of you.\" They both stood and I asked Pam \" Is there any thing to eat I'm starving.\"\n\n\"What would you like my Queen.\" I was not going to like this it's one thing to have strangers call me that another to have my mates call me that.\n\n\"I would like you never to call me that again. Bill, its wife or Sheri. Pam, its Sheri or Mistress I've gotten use to that. Then I like some fruit and toast with strawberry jam on it. No meat I'll never eat meat again. You all can it won't bother me. I just can't. Orange juice and coffee lots of coffee.\" I walked over to Bill and put my arms around him. He wrapped his around me and squeezed me tight. We kissed passionately but also lovingly then he said\n\n\"I so glad to have you back I thought I lost you.\" \n\n\"I'm sorry I scared you. I did know it would take that long.\" He asked me what had happen I told him every thing I remembered, which was quite a lot. Then Pam called me down for breakfast. After I ate breakfast Jon came and asked how I like my closet.\n\n\"Oh I haven't seen it yet. Come up and show it to me.\" \n\nJon showed me the closet that Pam and Bill had all ready filled. There was room for more. Then Jon said\n\n\"Well I'm pretty proud of the way it came out. Do you think it's fit for a Queen?\" I almost laughed but said\n\n\"Yes Jon it's fit for a Queen. You did a wonderful job.\" I took out my checkbook and wrote a check for the balance then a separate one for Jon of two thousand for getting the work done on time and on budget. He said\n\n\"You don't have to do this.\" \n\n\"Yes I do I appreciate good work. And this is superb.\" I said and gave him one of my smiles not a sexual one because that would be cruel, but one that will make him feel special. After he left I looked over the closet again. I just loved it. At six Bill came up and said\n\n\"If we're going to have that party I think its time we get dressed don't you?\" We took a quick shower together. When we started getting dressed Bill took his breast forms and but them in the bra he was going to wear I said\n\n\"Oh no you don't need them any more.\" I placed my hands on his chest and then pulled my hands out and his breasts followed. I was as surprised as he was. I kept pulling till they were a foot out from his chest he said\n\n\"Honey I going to lose my balance.\" \n\n\"Your right way too big.\" I pushed them back in till he had about a C cup. \"There that's better. Anything else you want my love.\"\n\n\"How long will they last?\" Bill asked \n\n\"Till I tell them to go back in. I really didn't need to use my hands, but I wanted to. Oh and I made them extra sensitive.\" Then I waved my hand over his crotch area and his cock and balls disappeared and a cunt appeared in its place. I waved my hand over my pussy and then I had a ten-inch hard on that was as wide as Bill cock. I grabbed a hold of it. God that feel good, I could see why guys like to beat their meat so much.\n\n\"Now you can see what I've been feeling all these years.\" \n\n\"Does that really work? I mean shoot cum and every thing.\" \n\n\"Besides shooting cum I don't know what every thing is, but yes it shoots cum too but I can't make babies with it. Well what do you think want to give it a spin sometime?\"\n\n\"Oh yes I'd love to, how about now.\" I could see the excitement in his eyes\n\n\"No. I want the first time to be special so we can take our time and really enjoy it. We'll do it this weekend.\" I told him then I turn around to find Pam standing there she took one look at my cock and dropped her jaw. \"And you, I'm really looking forward to see how good you really are at sucking one of these.\" I then said to both of them \"I guess we can throw away Mr. Strap-on.\" They both agreed with me.\n\nAfter getting dressed, I wore a green silk dress with spaghetti straps that stopped just below my stocking tops and five-inch stiletto heels. Of cause I got rid of my cock. It's fun to play with but I like my pussy better. I called Jenny at home\n\n\"Well back from the land of nod I see. Are you cured or do we have to do it again tonight?\" She asked\n\n\"No all cured I'll never have to do that again.\" \n\n\"Oh too bad I really enjoyed you drinking your fill of me.\"\n\n\"Oh I'll still do that. But I won't get all crazy like that again. Are you coming to the party tonight?\"\n\n\"Well I don't think that's a good idea. We wouldn't want our secret getting out. If you know what I mean?\"\n\n\"You don't have to worry about that. Miss green-eyes and her father won't say anything about that to anyone.\"\n\n\"How do you know that?\" She asked \n\n\"Let's just say that when I tell them to do something I know their going to do it.\"\n\n\"You sound pretty confident seeing you never met her father.\" \n\n\"You just come tonight and enjoy yourself. Let me worry about Mr. Green-Eyes.\" I told her\n\n\"Well ok I hope you know what your doing?\"\n\n\"I do, wear something sexy for me. And I'll promise I'll make you pass out.\"\n\n\"You got a deal.\" She said. \n\n\"And bring your little slut too.\" I said like the wicked witch from Wizard of Oz.\n\n\"Ok we'll be there with bells on.\" She said just before hanging up. Hmm bells, well they did have those nipple rings I could hang some from them. No I'll save that for another time. Bill came over to me and said\n\n\"Sheri could you give me back my penis. This pussy's fun but if I'm not going to use it I rather have my cock back.\n\n\"Oh I'm sorry sure there you go. How about your voice a little sweeter.\" I said\n\n\"Ok.\" He said then cleared his throat not use to the higher pitched voice. \"How about a little longer hair and real finger nails instead of the fake ones.\" As he asked he received. Then I saw Pam in the closed deep in though still naked. I walked up to her and put my arms around you from behind and asked\n\n\"What's troubling you?\" \n\n\"If I'm going to be serving I'd like to wear something that fits the mood I'm in.\" I kissed her shoulder and asked\n\n\"How's that?\" Pam was now standing in five-inch heels, suntan crotch less pantyhose, and a French maid's uniform. With corset and hat. It fit her like a glove. Pam looked at her self in the mirror and said\n\n\"It's perfect. And very reveling.\" \n\n\"If the party gets going the way I hope then you'll look like this.\" As she watched the front of her uniform melted away to reveal her lovely breasts with the chain attached to her nipple rings. Her panty hose changed to thigh high stockings with garters attached to her corset under the uniforms skirt. Her panties disappeared. \"Mm yes I like that don't you.\n\n\"Yes I do it's so sexy.\" Looking at my watch I said \n\n\"Go make sure everything is ready our guest will be arriving shortly.\" By the time I was done speaking her uniform was back in place.\n\nAfter she was gone I closed my eyes and looked for Kimberly. She was at home sitting on her couch rubbing her pussy in her birthday suit. I thought to myself nice looking body. Then I sent her a message.\n\n\"I believe your suppose to be at my house tonight.\" Kim went to her knees and said.\n\n\"I'm sorry my Queen I thought you wouldn't want me there.\" \n\n\"I would have told you not to come, if I didn't want you.\" \n\n\"Yes your my Queen I'll be there shortly.\" I close the image then I concentrated on her father. He also went to his knees I said\n\n\"Rise Come to my house be there by eight o'clock please.\" I said \n\n\"Yes my Queen.\" He said then I closed the image Now that all the invitations were out I relaxed.\n\nI went down stairs I saw Pam bouncing around trying to get everything in order. I never saw anything as precious as watching a French maid skip in a pair of five-inch spike heels. I saw Glenda opening a bottle of wine and I mentally pinched her nipple. She jumped and said\n\n\"Hey no fair.\" \n\n\"I'll show you no fair.\" I said as I mentally shoved two fingers up his ass. I saw him jump then grinned \"Now that's no fair and your lucky I stopped at the fingers.\" I laughed when he gave me a grin that said he'd like a little more. I figured I'd better stop before she was walking around with a hard on. At exactly seven thirty the doorbell rang Pam answered it and let Jeff in. I somehow knew he'd be first. He walked up to me and bowed and said\n\n\"Thank you for inviting me my Queen.\" I should have figured he was a compelled one. I knew there wasn't anything I could do about it. It was his choice.\n\n\"Thank you for coming but you can call me Sheri unless it's formal. I don't want every one at work to wonder why you're calling me your Queen.\" I told him and he said he would. Janie and Kandy arrived next.\n\n\"Well this is Kandy. I've been looking forward to meeting you.\" Turning to Glenda I said, \"This is my husband Glenda.\" they said hello to each other then Glenda took Kandy way to get drinks. I said to Janie. \"She's really pretty is that her real hair.\"\n\n\"Yes she always kept it long so it works well. Glenda's a real looker. Oh by the way Kim said she wouldn't be coming that you would understand.\"\n\n\"Oh she'll be here I'm sure of that.\" Janie looked at me puzzled. Next to arrive was Beth and Julie Ann I said, \"I'm really sorry I didn't get to meet you the other night I was not myself.\" They said they understood, but I doubt they did. They weren't one of mine.\n\nWhen Debbie and Mary arrived I introduced them to Jeff and then left them to talk among them selves. Before I knew it Jeff was getting them drinks and filling plates for them. Debbie was training him quickly. Jenny and Ginger arrived just before Sharon and a fellow she knew. At eight o'clock I focus my attention outside. Kim was talking to an older Gentleman. I believed was her father seeing I could see his green eyes glowing in the dark. I then focus my attention on Pam and sent her a message\n\n\"Pam dear, they're are two persons coming to the door. Have them wait outside the den, I'll let you know when to let them in.\" She said yes my mistress as I made my way to the den.\n\nI focused my attention out side the door of the den. When Pam escorted Jack and Kimberly Swan I told her to have them wait. After doing what I told her she went back to the kitchen. I waited a full five minutes before I told Pam to let in Mr. Swan. She let Mr. Swan in who went straight to his knees before me. In his heart I saw grief. His heart was filled with it.\n\n\"My Queen I have come at your request. What will you do with me?\" He asked\n\n\"Mr. Swan I wish for you to release your grief. You have grieved too long for the death of your wife.\" I told him\n\n\"My Queen I always knew it was I that killed her. It had to be something I did. Even though I didn't know what it was. Now that my true self has been restored to me. I know for certain that I did kill her.\"\n\nMy heart ached for this man he didn't know what could happen when he married his wife. How could anyone blame him for the consequences of their love? I had him stand and put my arms around him and pulled his grief from him. I knew I would have to make a journey to the renewal to release it from me but it was worth the journey. I also knew I would be making quite a few journeys to the renewal in the next couple of weeks. Once I released him I said\n\n\"I have lifted you grief from you now go and live life to it's fullest. Your wife would want it that way. But first please wait outside the door while I talk to your daughter.\" He went out the door and his daughter came in. She also when to her knees and said\n\n\"My queen what do you wish of me?\" \n\n\"Well now we both know what we are don't we? I can't say I never used my power to my advantage. At least I didn't realize I did. Can you say the same?\" I asked\n\n\"No my Queen I knew my smile was special. And I used it to my advantage quite often.\" Well at least she wasn't trying to deceive me.\n\n\"What should I do with you?\" I asked I already knew what I was going to do with her.\n\n\"You should strip me of my power and let me live as a normal human.\" This surprised me. I would have bet she would have asked for mercy.\n\n\"Don't you think that's kind of rash? Do you feel you can't control yourself and your actions?\"\n\n\"Yes my Queen I can now that I know what I can do with my smile. I also know that the men that tried to convince me that they could change me, was because of the way I smiled at them. They were only after me because of the way I smiled on them.\" She told me which was true. I could also see that she was sorry for doing to these men what she did.\n\n\"I think as punishment for this you should keep your smile, but learn to use it wisely. You do know as I do that there are different ways to use your smile. You must use them in the proper way. When I see you use them in an improper way then you must submit to the punishment I see fit. Do you agree with this?\n\n\"Yes my Queen. And I'll never use them at work. Well at least not to get me out of trouble or so I get my way. The only one's I'll use is the one that make a person feel special and good about themselves.\"\n\n\"Good now wait outside the door while I speak with your father.\" Once she was gone and her father stood before me I said, \"Has your grief left you.\" Sometimes it took more than one lifting especially when the person grieving did so for a long time.\n\n\"Yes my Queen. I just hope Jasmine my wife feels I grieved long enough.\" He said. I could still see some grief in him.\n\n\"I'm sure she does. Most Nymphs wouldn't want their mates to grieve their passing. They lived life to the fullest and never feared death. Their biggest fear was that their mates wouldn't want to live on with out them. I'm sure your Jasmine felt the same way.\"\n\n\"I'm sure your correct she was always one to live life to the fullest. She was always one to try new things. She could talk me into just about anything. And some of the things she talked me into were at the time quite risque. I always tried to talk her out of it but I knew I wouldn't regret trying them.\" I saw a smile come to his face when he said this.\n\n\"I have a few questions for you. Please answer them as honestly as possible. I won't judge you or think badly of your answers. One how do you feel about people who practice alterative sexual lifestyles?\" I asked\n\n\"My Queen, Jasmine would always tell me that what a person does in their own bedroom is of no concern of ours. In fact she and I would stray from the quote normal life style on quite a few occasions. I never objected to anyone lifestyle and never felt that their lifestyle made them a good or bad person just the way they lived their life. As I'm sure you know my daughter is a lesbian and I have no problems with that.\"\n\n\"What if you found out that some one you do business with was say a cross dresser and bisexual?\" I asked\n\n\"Do you mean Jim Marsh? I've know Jim was as transsexual for quite some years.\" He told me which really floored me.\n\n\"You knew that?\" \n\n\"Yes I happen to see him in the shower at the club just after he got his breasts. It didn't bother me. And I'd be a fool to drop him as my tax lawyer because of it. He's saved me quite a bit of money over the years and he doesn't try and rape me when he bills me. I didn't know he was bisexual. I knew he had that lovely wife of his I just figured she wanted him to dress that way. Jas had me do it a couple of times, but it wasn't for me. She also had me date a transsexual one time it was very nice I really enjoyed it. Jas knew I was a bit of a bisexual and allowed me to indulge in it. She was good at talking me into doing what I really wanted to do. Even though I protested too much.\" I saw another smile come to his lips.\n\n\"Good I'm glad you feel that way. I hope you continue to indulge yourself. Now lets move on to your daughter, I think you indulge her too much. She doesn't mind flaunting the fact that you give her what ever she wants. I think it's about time she learned to make it on her own. She had a wake up call when she found out I was her new Queen, but I think you should tighten the purse strings a little. Just so she knows that she has some responsibilities to grow as a person. This is not an order, it's only a suggestion from her boss to her father nothing more.\" Jack started to laugh then said\n\n\"You may not believe this, but Kim and I just had this discussion yesterday when she told me how much she was making. I've paid for her house and her car and I told her the rest was up to her. If she wanted something then she could buy it with her own money. I agree with you I spoiled her too much. That doesn't mean I won't buy her presents it just means I won't be paying her way any more and she agreed with me. You made an impression on her before she found out you were the new Queen.\"\n\n\"Well I think were done here. I would like you to join the party if you would like. But you don't have too.\" I told him I did hope he would.\n\n\"I would like too. I think Jasmine would have like it to know that the first party I've been to since her death was to yours. I'm sure she would approve of that. I did notice a real pretty woman standing next to Jenny Marsh.\" I descriped Ginny for him and he said. \"Yes that's the one is she available.\"\n\n\"Please send in your daughter and after I'm done with her I'll introduce you to her. And her wife, you already know her.\" I told him trying not to laugh Jack left with a bewildered smile on his face. Then Kim came in. She went to her knees till I stopped her. I like her on her knees before me but I wouldn't force it. I said to her\n\n\"Do you know why you can't be penetrated?\"\n\n\"Yes my Queen it was so I didn't have a baby.\" \n\n\"Yes that's it. But I see a flaw in that reason. If you are raped not only will you have to go though the pain of penetration but also you still maybe come pregnant. So to alleviate that problem I'm removing the spell of painful penetration and I'm going to make is so all the girls born of Nymphs mothers and Mage fathers are born without a uterus. So from this moment on you can be penetrated with out the pain you had felt before. I'm not saying you have to be penetrated but you can enjoy it if you want to.\" I couldn't read her reaction at first then a smile came to her face she then asked\n\n\"Does that mean I won't have anymore periods?\" I told her it did, she said. \"Thank you I never saw the need for them since I wasn't going to have kids anyway. I don't know if I'll have intercourse but at lease I have the option. Thank you my Queen.\"\n\nThis I could see she enjoyed, I wouldn't mind missing a few of my own but I still wanted a child. For a nymph it meant only one but I'd be happy with that. I just hope it's a girl. I took Kim's hand in mine and said\n\n\"Now that all this serious talk is over why don't you and I go and have some fun. And while we're at it, lets see if we can get your father laid.\" Kim giggled then said\n\n\" I can't think of anything better. Oh by the way. I noticed Jenny Marsh is here is she bi too?\" I told her she was. \"Oh goodie I've had fantasies of her since I was sixteen. She's a cute little thing.\"\n\n\"She's had a few of you too from what I hear. Now come on.\" I said as I pulled Kim by the hand out the door of the den and then I wrapped my arm around Jack and guided them over to Jenny and Ginger. They both looked a little scared, Ginger more so then Jenny. They both looked like they would run at anytime.\n\n\"Jack, Kim, I'd like to introduce you to Jenny Marsh and her husband Ginger.\" Jack took Jenny's hand and kissed it then did the same to Ginny while saying\n\n\"Two very beautiful women I must have done something right.\" I thought to my self I could use some wine. Then Pam appeared with a tray with several glasses of wine. I had to wonder if that was a compelling or just her knack at being a good waitress.\n\nI left Jenny and Ginny to entertain Kim and Jack and made my way over to Glenda. \"Well love how is it going?\"\n\n\"Pretty good, everyone is having a good time. That Kandy is a really nice girl. This is her first time out in public. Both her and Janie have hit it off well with Beth and Julie. Jeff can't seem to do enough for Debbie and Mary.\"",
        "\"Good I was hoping they would hit it off. He needs some one.\" I said\n\n\"Have you noticed the fire flies tonight?\" She asked \n\n\"No. We usually don't have too many around here.\" \n\n\"Well we have our share and then some. There's a whole bunch outside our screened patio tonight and they seem bound and determined to come in. They keep flying around the door.\" She told me.\n\n\"I haven't seen fire flies for along time. Come on lets go look at them.\" I said, probably more excited then a thirty year old had a right to be. I took Glenda's hand in mine and pulled her out to the patio. When I got out there I could see what she meant. There were hundreds of them all flying around the door way that lead in from the yard to the porch. I could also hear tiny voices saying\n\n\"There she is. Do you see her?\" These weren't fireflies they moved too fast. Fireflies moved slowly that's why it was so easy to catch them. These flies darted from one spot to another in the blink of an eye. There incessant noise compelled me to go out to them. Once I was out side among them. They hovered or flew around me in circles. All saying something to me but with so many, I couldn't understand what they were saying. Finally I said\n\n\"Please one at a time I can't understand you.\" When one of them flew up to my face it said.\n\n\"Good evening my Queen. We are the sprits that live in the forest near by. Were here to pay homage to you and to offer you our services.\" now that this one was closer to me. I could see that it was not a fly at all. It looked like a tiny man with wings. It had hair and a nose, pointy little ears. These were one of the things Desrei thought were extinct along with the unicorns.\n\n\"Well little sprite what kind of services do you provide?\" They all looked at each other and mumbled amongst then self's then the one that spoke first said.\n\n\"We don't know. We could relay messages, we use to light the way of Nymph in the wood but you don't need that. If you think of anything let us know we'll be glad to help.\"\n\n\"If I think of something I'll let you know now please return to the forest before some human tries to capture you.\" I told the sprite\n\n\"Oh no human can catch a sprite we're to fast for them. Also we can disappear from one spot and reappear in another. We will do as you request my Queen. If you ever have need of us just call and we'll came as fast as we can.\" The little sprite said just before they all vanished. Bill came up behind me and asked\n\n\"What were they?\" I told him. \"You mean like tinker bell. I always thought they weren't real. Live and learn.\" He took me in his arms and said. \"Tonight I want only you no one else just Bill and his wife Sheri.\"\n\n\"I agree I have to tell Pam she needs to find someone else tonight. I hope she doesn't take it personally. I'll be as delicate as possible with her.\" We kissed for a long time till the mosquitoes got too much for us then we went back inside.\n\nI found Jenny and Kim going at it pretty hot and heavy on the living room couch. Ginny was sitting in Jack's lap on the recliner. Jack had his hand up Ginny's dress. I couldn't see what he was doing, but Ginny sure seem to like it. I saw Sharon standing by herself in the dinning room I asked her\n\n\"Where's your friend Bob?\"\n\n\"He told me he was sexually liberated and that he could handle just about anything. But when I told him that some of the girls here were really guys. He told me that was too weird for him and he wanted to leave. So I showed him where the door was and when he asked if I was leaving with him. I told him he was too much of a prude for me. Screw him, if he thinks sexually liberated is watching me eat pussy then have two girls in bed him he has another guess coming.\"\n\n\"You know just because he doesn't want to suck dick doesn't make him bad?\" I told her\n\n\"I know he was a louse lay to. I thought if he could watch Glenda he might learn something but he says and I quote \"I not getting into bed with another guy and that's final. Hey you found one for Debbie and Mary. Do you think you could find one for me?\"\n\n\"I see what I can do, I can't make any promises.\" I told her I couldn't help giggling.\n\n\"I know you can't. But guys just seem to flock around you. At least the kind of guy's I looking for do. You know bisexual and submissive.\" When I turned my attention to look for Pam Jenny came up to me and said.\n\n\"Sheri my love if you don't mind Ginny and I are going to leave. It's midnight and we thought we'd like to get to bed soon.\"\n\n\"What about Jack and Kim don't tell me your going to leave them after getting them all worked up?\" I asked\n\n\"Who do you think we're going to bed with silly?\" Jenny said with a laugh\n\n\"Oh silly me I might have thought you were talking about you and your husband.\" I said in a serious voice.\n\n\"Oh I sleep with Ginny anytime I want but when I get a chance at getting it on with someone like Kimie well I can't pass it up. And Ginny said Jack has one nice piece of meat hanging between his legs. Maybe we'll switch in the morning.\" She said giving me her sly smile\n\n\"Just remember Jack hasn't been with anyone since his wife died and Kim isn't into guys.\"\n\n\"We'll see what happens. I'll call you tomorrow and let you know how everything worked out.\" We kissed lightly then they left with Jack and Kim right behind.\n\nI went in to the den and found Janie face between Beth's legs and Kandy happily sucking Julie's cock. I sat down next to Beth and watched Kandy suck her first real cock. I rested my hand on Beth's thigh. She leaned over and kissed me I could smell Janie's pussy on her face and tasted it on her lips and tongue. Then Beth said\n\n\"I hope you don't mind she was just to beautiful to pass up.\" \n\n\"I don't mind. I want you all to have a good time.\" I told her \n\n\"We are you can be sure of that. Julie and Kandy are having a great time too.\" Just then Beth had a gut wrenching orgasm. Then I watched as Julie pumped a load of cum into Kandy's mouth. Janie rested her head on Beth's thigh and looked up at me and said\n\n\"Hi there. I love your parties.\" I leaned over and kissed Janie on the mouth and tasted Beth for the first time. Not bad I'll have to see what she tastes like first hand. I said to Janie\n\n\"It looks like Kandy likes my parties too. I have a king size bed in the spare bedroom would you all like to take this up there.\"\n\n\"I would, how about you Beth can you stay the night?\" Janie asked\n\n\"As it so happens I brought a change of cloths for Julie and I just in case. I'd love to spend the night.\" Janie started to laugh and said\n\n\"So did I. I was hoping something like this was going to happen.\" Then to Kandy and Julie she said, \"Why don't you two go out to the cars and bring in our bags. Then we can continue this up stairs.\" After the two husbands went for the bags and Beth went to the bathroom Janie asked\n\n\"Are you okay with this? I know we said that it would be Glenda and Kandy and you and me.\" I stopped her and said\n\n\"It's fine with me I just want everyone to have a good time. Bill and I want to be alone tonight anyway. And as far as you and me there's always tomorrow.\" I said the last with a smile that suggested that we would be having fun tomorrow.\n\nJanie and I left the den and found Jeff on his knees devouring Debbie pussy. He was completely naked and Debbie was fully dressed. Janie and I watched Debbie climax then she said to Jeff\n\n\"You're getting better. A few more lessons and you'll be as good as any girl.\" Then to me she said, \"Can you believe he's never eaten pussy before?\"\n\n\"That's a shame I'm sure he's had his dick sucked a few times.\" I said to both of them then to Jeff I said. \"You were one of those one way lovers weren't you? All for you and if the girl got off she was lucky.\" Jeff hung his head down and said\n\n\"Yes ma'am I was very selfish I'm sorry for that now.\" \n\n\"I think I should dress you up as a girl just so you know what we have to go though. And then I'll treat you like one for the weekend. Do you think that would be a fitting punishment? \" I could see Debbie was leading him in the direction she wanted him to go. I could also see that Jeff was thrilled to be going in this direction.\n\n\"That would be fan...I mean that would be an acceptable punishment for my selfishness. Thank you.\" Debbie waved her hand for him to move back. After he did she stood and said\n\n\"For the rest of the weekend you may call me Mistress Debbie and you can call Mary, Miss Mary. Now get dressed while I go talk to Mary. On the way to my place we'll stop at the twenty-four hour Wal-Mart by the highway to get you some cloths to wear this weekend. I hope you have a credit card with an acceptable limit on it. I don't think I should have to pay for your clothes.\" She said as she straightens out her dress.\n\n\"No Mistress I'll be happy to pay for it.\" Jeff said as he scurried to get dressed. Debbie, Janie and I when into the dinning room I stopped Deb and said\n\n\"Your not wasting any time, are you?\" \n\n\"Are you kidding I didn't think I get this far for a couple of weeks but the more I push the more he bends. It's like he's been begging for it.\"\n\n\"Just remember what I told you.\" I warned her \n\n\"Right. He has to look like a guy when he goes to work. One question can I get him tit's like Ginger has?\" Debbie asked\n\n\"As long as they don't show when he comes to work. If I were you I'd talk to Ginny before I had anything done.\" I said to her. Debbie confirmed she would.\n\nAs we walked into the kitchen we found Sharon sitting on a chair sucking on Pam's breast. Pam's outfit had changed to the more provocative one. How it did that I wasn't sure. Mary was on her knees with her face between Sharon's legs. Sharon was very close to her orgasm. She was grinding her pussy into Mary's face. As she was sucking one of Pam's tits and her hand was mauling the other. Pam looked like she was about ready to cum herself when Sharon screamed her orgasm. Sharon's hands went to hold Mary's head in place as her body spasmed.\n\nPam fell back against the wall and her hand moved down to her own pussy just as she was about to touch herself, she pulled her hand away. Then she open her eyes and saw me standing there. I walked over to her, she had that scared rabbit look. I took her right nipple in my mouth and my hand when to her pussy.\n\nI slowly stroked her pussy as I sucked on her nipple. My tongue played with her nipple ring pulling it and twisting it as best it could. Pam had been close, just a few short minutes of this and she came on my hand. She moisture came flooding out of her, soaking my hand and running down her legs. I continued to kiss her breast and held my hand on her pussy till she calmed down and opened her eyes. When she did I asked in a quiet tone so no one else could hear.\n\n\"How did you outfit change?\" \n\n\"I don't know. I went into the living room wearing the other one. When I saw what Miss Jenny and Ginger where doing with the other two I turned to leave wearing this one.\" Pam told me also in a quiet tone\n\n\"It must have been a suggestion I put in the material. You look absolutely delicious in it. \" I told her\n\n\"I really like it. Can I keep it?\" I caste a mental spell at the outfit and said\n\n\"Which ever you want, this one or the other. Just think of it and you'll find it in the closet.\" I pulled my hand from her pussy and stuck my fingers in my mouth. As I turned around I saw Janie and Debbie looking at me. I pulled my fingers from my mouth and said.\n\n\"Excuse me, she just tastes so good.\" Mary and Debbie said at the same time.\n\n\"Yes I know.\" Then Janie said \n\n\"I don't know but I'd like to find out.\" We all laughed then I said to Pam\n\n\"Pam would you please show Janie to the spare bedroom. The one with the Sleigh bed.\"\n\n\"I would be happy to show her my Mistress.\" Pam said as she curtsied then asked Janie to follow her.\n\nDebbie then asked \"Would it be okay if Mary stayed here tonight. I want to make Jeff as feminine as possible. Before she tries to have sex with him.\" I sent a message up to Pam to have her bring down my double headed strap-on dildo and Bill's breast forms seeing we wouldn't be needing them anymore.\n\n\"Sure she can stay, then Pam will have someone to play with. Bill and I would like to be alone tonight. Sharon you are welcome to stay as well. If you don't mind sharing a bed with Pam and Mary.\"\n\n\"Thanks I really didn't want to go home alone tonight,\" she said just before Pam came down with a bag and handed it to me.\n\n\"Here Debbie, these may come in handy.\" I told Deb as I handed her the bag. She looked in it and said\n\n\"Wow would they ever. Are you sure you won't need them?\" \n\n\"No I have something else that works just as well.\" I told her. Then she said to Mary\n\n\"Mar I'll call you tomorrow to let you know how things are going. I'll leave you the car. I'll drive Jeff's.\"\n\n\"You know you'll have to come up with a female name for him. And I should warn you he has to want this for it to work.\" I told her\n\n\"He seems too but how do I know for sure?\" \n\n\"I'll ask him, he'll tell me the truth.\" I told her. I went in to the living room where Jeff was still standing, now fully dressed. I asked\n\n\"Jeff I'm going to ask you a question and I want the truth. Are you ok with what's going on between you and Debbie? I don't want you to do this to please me. I want you to be happy and if you're doing this to please me you won't be happy.\" Jeff looked at the floor then he looked around to make sure there wasn't anyone else in the room then said\n\n\"My Queen I don't know how to say this with out sounding like a sissy. I like it, I really do. I know a man's not suppose to like being treated this way. But it feels so right. I never respected women because they would let me do what I wanted. You were the first to demand respect from me that's why I'm one of the compelled and Mistress Debbie is the other. She took charge the second you introduced us. Please let me do this.\"\n\n\"Ok Jeff if this is what you want then you have my blessing. If you're going to start dressing like a girl then you'll need a girl's name. Do you have one in mind?\"\n\n\"No my queen I think my Mistress should give me one.\" He said \n\n\"Very well then. I'm sure she'll be right out.\" I said as I returned to the kitchen. I said to Debbie \"He's all yours just remember he need sexual release too. A slaves no good if he doesn't get to cum.\"\n\n\"Don't worry about that. He'll learn to control his orgasm but he will have plenty of them. He has two women to satisfy now. I know Mary's dieing to do it again. Now that she knows she likes it, with feminine males anyway.\" Debbie said as she waltzed out of the kitchen picking up Jeff on her way out the door. I could stop this just by wishing him to stop it but I had to let him try it. No matter what control she had on him I had the ultimate control. I took Pam to the side and said\n\n\"Sweet love, would it be okay if Bill and I were alone tonight. It's the husband wife thing again. Nothing against you.\"\n\n\"Yes my mistress. You two need some time alone. Bill was very worried about you. I'll sleep with Mary and Sharon.\"\n\n\"Thank you sweetie, I love you.\" I told her and we kissed. I walked over to Bill and said. \"I'm all yours do with me as you will.\"\n\n\"I want to be Bill tonight. It maybe a little hard with the presents you gave me.\" He said looking down at his chest.\n\n\"Lets go up stairs and I'll make everything right. Then we can make love as a man and wife should.\" I turned to the others in the kitchen and said. \"Ladies we bid you a good night. We will see you all in the morning or whatever time we get up.\"\n\nBill and I went up stairs his arm around my shoulders and mine behind his back. Once we were in the bedroom with the door closed he took me in his arms and we kissed a very passionate kiss that left us both breathless. He unzipped my dress and he let it fall to the floor. He got down on his knees and slide off my stockings and removed my garter belt. He then placed one light kiss on my bald pussy.\n\nWhen he stood up I unzipped his dress and let it fall to the floor. I then unbuckled his bra and removed it. At the same time his breasts retracted back into his chest, his hair shorten, his voice became normal and her nails shorten and the polish was removed. I went down to my knees and removed his garter belt and stockings then I pulled down his panties and took his cock in my mouth and gave it a quick suck. It was salty from his sweat and not very appealing. I stood and we kissed again then I said\n\n\"I'll put the cloths away and you get the shower ready.\" Bill went to get the shower ready while I hung up the dresses on the dirty side of the closet and everything else went into the hamper.\n\nI went to the bathroom when I was done and found Bill already in the shower. We washed each other and ran soapy hands all over each other. Bill was at full erection by the time we were done. And I was as excited as I've ever been. When we were dried Bill scouped me up and carried me to the bedroom and laid me on the bed.\n\nHe started kissing me, first my mouth then my neck. He worked his way down to my breasts. After he left kisses all over my breasts he sucked the left nipple into are mouth and his tongue played with my nipple ring. He pulled and twisted the ring with his tongue sending a warm glow though out my body. Then he sucked the nipple it self. When I thought I was going to cum He switched to the other nipple. When his tongue pulled on the ring on that one, I came.\n\nIt was a small climax it didn't leave me breathless. But I did have a warm glow fill me as a squeak leaped from my mouth. Bill then moved down my body leaving kisses and licks on his way till he reached my mound and quickly stuck his tongue in me. I shivered at the suddenness of it.\n\nBill continued to lick up my cream. He lifted my legs and licked up my ass crack where some of my cream had flowed. His tongue licked between the crack but he left my rose bud alone. God how I wished he would lick the hole down there. Was it only weeks ago that I wouldn't let him near there.\n\nBill next moved to my clit and sucked on it. Sending me into another orgasm. This one was a big one that ripped though me, leaving me breathless. Bill continued sucking and licking my pussy though three more climaxes. Till I pulled him by the hair and screamed\n\n\"Fuck me Bill Fuck me now shove you fat cock up my cunt. I want you in me now Please fuck me.\" Bill smiled his sweet devilish smile and kissed his way up my sweat soaked body. When Bill was looking me in the face and I felt the head of his magnificent cock at the entrance to my cunt I said \"Come on baby please shove your big hard fat cock into my cunt and fuck me.\"\n\nBill swiveled his hips slightly pushing the head of his cock into me. I gasped at the feel of it wedging the lips of my pussy open. He stopped just at the entrance. I groaned in frustration as I pushed my hips up to take him in to me. Bill was ready for this; he pulled back at the same time. His cock moved neither in nor out. I reached up to grab his nipple ring, but he grabbed my arm instead and pinned it to the bed. His other hand pinned my other arm to the bed as well.\n\nBill then slowly ever so slowly slid his cock into me. I felt every inch of his nine fat inches fill me till I felt his pubic bone rest on my over sensitive clit. I sighed deeply at the fullness I felt. These were the times I remembered most. After the craziness of the week the first time we made love was always the best. I looked up at Bill as he smiled down at me. I smiled a special smile at him not one that would drive him into a sexual frenzy but one that convened deep love. He said\n\n\"I'm sorry for teasing you. I didn't want you to go on any journey tonight. I wanted you here with me.\"\n\n\"My love I'll never go on a journey while your making love to me again. The only journeys I'll make from now on will be while I sleep and you can go with me if you like.\" A light dawned in Bill's eyes and he said",
        "\"Your right I can. I wonder what it's like to go to the renewal.\" \n\n\"It's wonderful we can go tonight but first a lot less talk and a lot more action if you don't mind. Although I love you deep inside of me I love it even more when you're moving in and out of me. And if you ever tease me like that again I going to make you into a eunuch and get myself someone else to satisfy me.\"\n\n\"Your wish is my command my Queen.\" He said as he started pumping his cock in and out of me.\n\nBill made love to me for what seemed like hours. His firm cock pierced me again and again bringing me to an unremembered number of climaxes. When he was ready to cum I was ready for him to do it. I wanted to feel his hot thick cum squirt into me. When he came I came too then he collapsed onto me. His hot sweat soaked body felt so good against me.\n\nWe both must have fallen a sleep after that, because the next thing I knew we were standing in a glen hand in hand. We were both naked and Bill was sporting the C cup breasts I gave him earlier and his hair was longer. Longer then what I gave him, it went down passed his shoulder blades. His facial features were more feminine then he ever had with makeup. His only male feature was his soft penis and balls hanging between his legs. He looked at me and asked. \"Where are we?\"\n\n\"We're in the renewal. This is where I come to when I go though the metaphase.\" Bill looked around and asked\n\n\"Is this it, you just come here? \n\n\"No this is were I start. From here I usually take to the air on the first day and fly with the birds. On the second day I talk to the animals of the forest. And on the third day I go to the clearing and dance and chant with my sister nymphs. What should we do first my love.\"\n\n\"Would you talk with me first my daughter?\" I heard behind me. I turned and saw Queen Desrei standing close by.\n\n\"Oh my Queen I did as you asked. Your people are free of the spell of Mechi.\" I said after I fell to my knees before her.\n\n\"Stand my daughter you are Queen now. You have broken the spell and have assumed your rightful place as Queen. Already there are many of the Fairy Folk in the clearing celebrating the end of the dark times.\" She said as she place her hands in mine. Then she asked, \"Is this your mate\"\n\n\"Yes this is my husband, my anchor in the wild times. My very best friend and my lover.\"\n\n\"He is a pretty one. If Mechi looked like this, maybe there would have been a chance.\" She said eyeing up my Bill. \"Well enough of that. In the clearing you will find several Fairy folks that have business with you. You will need to take care of that. Then you two can enjoy yourselves.\"\n\n\"Will I see you again?\" I asked her \n\n\"I'll always be here. I have nowhere else to go. I could think of worse places to spend eternity then in the renewal. Now go and conduct your business then enjoy the rest of the your life.\" We said our thanks and she disappeared. I turned to Bill and said. Are you ready to go to the clearing?\"\n\n\"I have one question before we go. Why do I look like this?\" He asked referring to his feminine features\n\n\"Because my love that's how you truly want to be seen. This is the image you want to project.\" I told him\n\n\"How come we don't have any cloths?\"\n\n\"Because cloths hide the true beauty of the person. No one ever wears cloths in the renewal. But what you see here isn't always what you'll see in the waken world. What you see here is the way we want to be seen.\"\n\n\"No one will think it's strange me looking like this?\"\n\n\"No my love in fact very few will even take notice. Now are you ready to go to the clearing.\"\n\n\"I guess so I just wish I had some pants.\" \n\n\"Don't be silly. Now take my hand. You should be able to do this on your own, but the first time I show you how. Ready?\" When Bill nodded his head I leaped into the air pulling Bill with me. We hovered about ten feet off the ground. Bill looked panic stricken. That's why I didn't go any higher. I asked\n\n\"You ok with this.\" He said he was but I had my doubts. \"Ok were going to go higher. Just hold onto my hands and I show you something I love to do here. Ready?\" He said he was We shot up into the air and spun at the same time till we were about fifty feet above the tree tops, I stopped us and laughed a hearty laugh. Bill looked like he was going to be sick.\n\n\"Are you okay love?\" I asked \n\n\"That's something I'm going to have to get use to, but yes I'm ok.\" I looked to the horizon and saw an orange glow. I pointed at it and said to Bill\n\n\"That's where the clearing should be. I never seen it lit up like that. Come on lets go there. This time I'll take it easy, no more spinning.\"\n\nI slowly moved out so Bill could get use to it. When I could see he was getting a custom to it I would speed up. We arrived at the clearing a few minutes later. We stayed outside the glow of the lights. There were large burning touches around the circle that gave off the glow we saw. In the center of the clearing there was a platform about ten-feet above the ground. On the platform was large golden throne with a smaller throne next to it. Around the platform were thousands of people. I've never seen so many people in the clearing before. Usually there were only ten or twelve nymphs with me during the last night of the rite of renewal.\n\n\"What are you waiting for?\" I heard behind me. I knew in an instant it was Desrei.\n\n\"Why are they all here?\" I asked her\n\n\"They came to see their Queen. A few have business with you, only three. Then there will be a celebration. Don't worry you don't have to stay for all of it. Go on they want to see you.\" I turned to Bill and said\n\n\"Are you ready for this?\"\n\n\"I guess so. I hold no power here. Your the one with all the power.\" \n\n\"Darling you hold more power then any of them down there. You hold my heart, to me that's more magic then any of them hold. And remember I can cancel their magic with a thought.\"\n\n\"Spoken like a true Queen. Now get going.\" Desrei said then disappeared. Somehow I doubted she had gone very far.\n\n\"Ready?\" I asked Bill, he nodded his head and we moved out into the light. The noise from the gathering was thunderous until Bill and I move into the light. Then all became quiet as everyone in the clearing went to their knees. We moved out to the center of the circle then descended to the platform. A short young man with a green hue to his skin approached me and went to his knee. And said\n\n\"My Queen. I am Navin my ancestors were the keepers of the throne. I will announce all who have business with you. My loyalty cannot be bought. Do you wish for me to continue in this service?\n\n\"That would be fine for now Navin.\" I told him. I remembered who his ancestors were and how they were loyal to the throne. \"Please have everyone rise, then let us contact what business we must.\"\n\n\"As you please my lady.\" then to the audience he said, \"Queen Mayle has given you permission to rise. All those having business with the Queen please step forward.\" Two people stepped forward. One was a leprechaun and the other an elf. Navin signaled the leprechaun to come up first. I sat on the throne and Bill sat on the smaller one. The leprechaun when to one knee and said\n\n\"My Queen. My name is Laurel after the forgetting my ancestors had a large amount of gold that they knew didn't belong to them. They also knew someday the rightful owner would come forth and claim this gold. My ancestors invested this gold and over the centuries they have increased the value many times. After the reawaking, I came to realize this gold belonged to you my Queen. Does my Queen wish to know what her account is like.\"\n\nI nodded my head and the leprechaun's hand extended a gold coin. I new what the coin would do in my hand. I accepted the coin and in an instant I knew what had happen to the gold. How much was there before the forgetting. How it was invested and how much there was now. I was stunned by the amount I was worth. I stood and said\n\n\"A rise Laurel I am honored to be served by such a esteemed family as yours. Your ancestors were noble Folk and their name will live on in the memories of all the Fairy Folk. I thank you and you're fore fathers for taking care of my treasury and cultivating it into what it is today. If I may request that you and your family continue in the management of this account till the end of time.\" I saw a tear come to his eye then he pull himself upright and said \n\n\"It would be my honor and my families honor to serve our queen in this capacity.\" He placed his hand on his heart, \"It's my pleasure to serve My Queen.\" He said just before leaving the platform. Next came the Elf. \n\n\"My Queen My name is Efin. My ancestors also acquired a larger holding of land and livestock after the forgetting. We also knew it didn't belong to us and someday someone would come and lay claim to it. That day has come. I hope our management of your estate will please you as much as the management of your treasury.\"\n\n\"Efin your family served the queens of the Fairies since time immortal. It's a privilege to served by one such as you. I am relieved that your family has held my estate in trust since the forgetting.\" \n\nEfin extended a hand carved stick that had ornate drawings on it. The drawing meant little but the magic in the stick told me all I needed to know. My wealth was beyond measure. I owned three thousand buildings in thirty different countries throughout the world, four major hotel chains. The livestock was all gone, except for a few racehorses. Instead of the carriages and carts that the former Queens owned I now owned two hundred vintage automobiles in ten different museums throughout the world. I also owned large tracks of land in almost every country in the world. These were mostly forestland that was inhabited by creatures of magic. I also owned a twenty-room mansion on a three thousand acre plantation, fifteen minutes from where I now lived. I had Efin rise and said\n\n\"Efin your family has done me proud. The growth in my estate throughout the centuries has been astronomical. You family's name will be remembered forever. I make one request that you and your descendents manage my estate till the end of time.\" \n\n\"My Queen it would be our honor to serve you. And the management of your estate is a privilege.\" Placing his hand over his heart he said, \"It's my honor to serve you and all who follow you.\" Then he withdrew. Navin then approached and said\n\n\"My Queen that's all the business that you have to deal with, but there are a few representatives of different races of the Fairy Folk that would like to come forth and offer their services. I'll try to keep it down to a hand full.\" \n\n\"That would be fine but let the music begin and the celebration start.\" I told him then I handed the coin to Bill and asked him \"Do you feel anything in this?\" Bill took the coin in hand I could see by the look on his face that he too could see what I saw.\n\n\"My god Sheri is this really all yours.\" I nodded my head and then handed him the stick. His eyes bugged out then he said. \"Your worth billions\" \n\n\"No my love we're worth more then billions.\" Then I said, \"did you see the mansion fifteen minutes from where we live?\" He nodded his head \"Can you imagine the parties we can thought there?\" I said with a giggle. I turned my attention back to the crowd before me as a gnome made its to the top of the stairs. I went over and sat on the stair just below the top. The gnome stood on the top step so he could talk to me face to face. He was about eight inches tall. He looked like one of those yard gnome you see in some people's yards.\n\n\"My Queen If you need and yard work done, me and my brothers would love to do it for you. We haven't had any real work in centuries and now that we have our memories back we'd really like to put them to use.\" He said rather informally. I later found out that gnome's were a very informal bunch. \n\n\"I do have some need of you right now but later I may have a lot of need for you. I'll send you a message when I decide what I'm going to do.\" I told him \n\nI met with about a dozen other representatives then the sky started to lighten up and I knew it was time to leave. I turned to Navin and said, \"It's time for us to go.\" \n\n\"Of cause my Queen. Would you like to set up a schedule to hold court?\" He asked I thought and said \n\n\"Why don't I hold court on Friday's every week. If we need more then I'll come more often if we need less then I back off some.\" \n\n\"That should be perfect my Queen. Until next time.\" he said as he bowed then disappeared. I turned to Bill he gave me the coin and the stick and asked \n\n\"How do we get back?\" \n\n\"That's easy you just wish yourself back in your body.\" \n\n\"That's easy enough.\" He said He closed his eyes and he disappeared. I wasn't far behind him. \n\nI woke up, Bill was still lying on top of me where he had collapsed last night. His half harden cock was still inside of me. I felt sticky from sweat and cum that had leaked out of me. I went to rub the sleep from my eyes and almost poked myself in the eye with the stick. I looked in my hand and I still held the stick and the coin. I could still feel the magic in them. It was the first time I ever brought something back from the renewal. \n\nI kissed Bill's head that lay next to mine on the pillow. I finally got him to wake up; he looked around and realized that he had fallen asleep on top of me. \"Oh I sorry did I sleep on you all night?\" \n\n\"I guess so I doubt you climbed on top of me after you fell a sleep. I like you on top of me but if you don't mind getting off I have to pee and I need a shower really bad. I think were stuck together\" Bill rolled off of me and said \n\n\"I feel like I didn't sleep all night. And did I have a weird dream.\" I rolled over onto my side and asked him\n\n\"Did it have anything to do with these?\" I showed him the stick and the coin. Bill looked at me in shock and said \n\n\"Do you mean that was real?\" \n\n\"Yes my love that was real. And we are the riches people on earth. Now this rich bitch is going to take a shower do you want to join me?\n\n\"Yea I need one.\" Bill got up and then said, \"What time is it I feel exhausted?\" \n\n\"It's one in the afternoon. You feel that way because your brain didn't sleep it was awake in the renewal. You body did sleep though. That really doesn't help much when the brain is tired. Hey think how I feel I've done this every night this week. Come on you'll feel better after a shower and you'll smell a lot better too.\" I said waving my hand in front of my face.\n\n\"Hey you don't smell that great either.\" \n\n\"Your nose isn't as sensitive as mine is. But I agree I smell pretty bad too.\" I said as I headed for the shower.\n\nOnce we showered I put on a short skirt and a tank top with out underwear. Bill put on panties and then said \"do you know what happen to my breast form?\" \n\n\"You don't need them anymore. All you have to say is I want to look like a girl. If you want a pussy instead of a dick you say I want to be a girl.\" I told him \n\n\"That's it you don't have to wave you hands or anything?\" \n\n\"No unless I want to give you bigger tits or something. I spelled your body to change by you saying those words. And to turn back you say I want to be myself. Come on decide what you want to be and get dressed. We still have company. And I want to go look at that plantation today.\" \n\n\"You really want to do that? I want to look like a girl.\" \n\n\"I want to look at it then we can decide. It may not be in the best of shape.\" I told her \n\n\"Twenty rooms will be a lot to clean.\" \n\n\"We can hire people to clean them, or I could ward off the rooms we don't use, so no dirt or dust gets in them. I'll remove the wards when we have guests.\" I told him \n\n\"Ok it can't hurt to look.\" Bill said as he finished getting dressed\n\nWe went down stairs. On the way down I sent a message to the Elf holding the key that I would like to see the house today at four. He told me he'll meet me at the house and that it needed cleaning but other wise it was in perfect shape. I thanked him and ended the message. We found everyone on the patio. Pam jumped up and got me a cup of coffee and a bowl of fruit. She got the same for Bill as well. \n\n\"How did everyone sleep?\" I asked \n\n\"Four to a bed was fun in the beginning but after about three hours Beth and I kick, Kandy and Julie off the bed, they slept on the floor.\" Janie told me \n\n\"I'm sorry next time will get one of those air beds. Mary how did you all do?\" I asked\n\n\"I think we were fine. How about you Sharon?\"\n\n\"I was fine I had a boob or a pussy in my face all night.\" \n\n\"So what does every one want to do today?\" I asked \n\n\"Kandy and I have to be leaving soon. We have his parents coming over for dinner and she needs time to get her make-up and nail polish off and I need to get cooking dinner.\" Janie said \n\n\"Julian has to work in the ER tonight so we'll be leaving soon too.\" Beth said I was disappointed that neither of them was staying. Mary said that Debbie hadn't called yet so she didn't know and Sharon had a dinner date tonight. Then the phone rang it was Jenny \n\n\"Hello love. I'm glad your up. Kim's been dieing to talk to you. Can we come over it'll be just three of us. Jack had a golf date he needed to make.\"\n\n\"Sure come on over. And maybe we can have some fun.\" I told her she said they'll be right over then hung up. \n\nBeth and Julie said there good byes and after they left Janie said \"I really had a great time I wish we didn't have to leave so soon but we made these plans a couple of weeks ago.\"\n\n\"If they leave early then come on back. I'm sure we'll still be up.\" I told her.\n\n\"If you really don't mind I just might. We don't have anything planed for tomorrow so if we're up all night we can sleep in tomorrow.\" Janie said excitedly\n\n\"No we don't mind in fact we'd love to have you.\" I told her just as they were leaving. Jenny, Ginger and Kim arrived just as Janie and Kandy left.\n\nKim when straight to her knees and said \"My Queen I want to thank you for lifting the spell of pain for me and all like me. The one eyed worm isn't as bad as I feared.\" I looked up and saw the shocked looks on Jenny's and Ginger's faces. I pulled Kim into a standing position and said to her\n\n\"I gather you let some one penetrate you and you enjoyed it.\"\n\n\"Yes my Queen it was wonderful. Last night Jenny used a vibrator on me and this morning Ginger and I had intercourse. It was fantastic. Now I know why women love it so much. Thank you for my self and all who are like me.\" She said. I could see the excitement in her eyes as her tears flowed down her cheek.\" \n\n\"Your welcome.\" I turned to Pam and said. \"Pam would you get Kim a cup of coffee or what ever she wants.\" Then to Jenny I said \"Would you like a cup too?\"\n\nJenny grabbed my hand and dragged me into my den, spun me around and pushed me into one of the recliners. She stood in front of me placed her hands on her hips and said\n\n\"What the hell was that all about?\" \n\n\"What are you talking about?\" I asked and gave her a smile that was meant to make her confused. Jenny wasn't having any of it and was bound and determined to get an answer from me. \n\n\"Oh don't try and turn that smile on me. I want to no why that girl called you her Queen not once but twice. She acted like you were personally responsible for her pleasure when getting fucked.\" I knew she wasn't going to fall for any of my magic and I really didn't want to try and fool her. I stood and took her hand and sat her on the couch with me. And said\n\n\"Jenny what I'm about to tell you has to stay between just us. I mean our group. And really if you try and tell anyone else they'll think you nuts.\" I waited for her answer\n\n\"Your not going to tell me about you beging a Nymph again are you?\" She asked\n\n\"Jen not only am I a nymph I'm the queen of the Fairy Folk of which Kim is one.\" She looked at me not believing what I was saying. \"Do you want me to prove it?\"",
        "\"Sure prove to me you're a nymph. Do you have some sort of magic powers?\" I could see the doubt in her eyes and I couldn't blame her. If she told me what I was telling her I'd have called the wacky ward by now. \n\n\"Tell me what, if anything you would want to change on your self.\" I told her She looked at me confused so I said, \"Would you like bigger breasts longer hair, longer legs or different color eyes?\"\n\n\"Ok I'll bite make me taller.\" She said I stood and had her stand as well. Jenny was a little taller then I was about two inches or so. When she stood this time She was six-inches taller then I was. The surprise on her face was remarkable. \"How did you do that?\" \n\n\"I told you I'm a nymph I have the power to give people what they want.\" I giggled and said, \"Check between your legs.\" Jenny reached in to her shorts and touched her self. And gasped in shock. She pulled down her shorts and found a semi-erect cock and a set of balls between her legs. \n\n\"Oh my God is this real?\" She asked. I walked over and started stroking her cock. Her eyes closed as she purred her content. \n\nI returned Jenny to her normal five foot five height and drop to my knees. I took her cock in my mouth and started sucking the head. Once I had the head nice and wet I started sucking more of her ten-inch cock into my mouth. Her cock wasn't as wide as Bill; I figured if I was going to suck it I might as well be comfortable. \n\nIt didn't take me long to work it into my throat. Once it was there I started to do my swallowing trick, which work on her the same as it did on Bill. Jenny started grunting moaning as she pumped her cock into my mouth and down my throat. After a few minutes of this Jenny said\n\n\"Oh god I feel so strange. This is great but I feel so weird. There's a pressure building inside of me. Oh god what's happening.\" She screamed as her body jerked and she pumped gob after gob of cum into my mouth. \n\nIt felt and tasted like Bill's cum. When Jenny stopped cumming she collapsed onto the couch pulling her cock from my mouth. I knelt there holding a small amount of her cum in my mouth as I waited for her to recover. When she looked at me I knelt up and kissed her on the mouth. When she opened her mouth to except my tongue I pushed her cum into her mouth. She pulled away from me and said\n\n\"Eww what was that? I laughed and said \n\n\"That's your cum sweetie. If you cum in my mouth you're going to tasted it too.\" \n\n\"Since it's mine I guess it's ok. You know it really does tasted like cum.\" She said, as she finally tasted what was in her mouth. She looked down at her soft cock and said. \"You might as well take this away. That was fun and I'd really like to try making love to you with it, but I really don't want it hanging between my legs all the time.\" \n\n\"Oh I can only give you things I can't take them away.\" I said trying to hold in my laughter as Jenny's jaw dropped and she stammer something unintelligible. Then I bent over and kissed her dick and it disappeared. \n\n\"Don't do that you scared me half to death. I though I'd have to walk around the rest of my life with that thing swinging between my legs.\" I laughed and said\n\n\"You'd be the prettiest transsexual walking around.\" We both laughed then I asked. \"So do you believe me?\" \n\n\"How could I not after what just happen. And by the way I can see why everyone thinks you give great blowjobs. That was fantastic. Can we do it again sometime.\" \n\n\"Of cause and if you want I'll give you one to fuck Ginny with.\" I told her as she stood up and pulled up her shorts. We left the den, linked arm in arm. When we entered the living room I asked \n\n\"Do you want to go see a house with us?\" Jenny looked sad and said \n\n\"Are you thinking about buying another house and moving away?\" \n\n\"I actually own this house already. It's part of my royal estate the elves have been holding for me.\" \n\n\"So you really are a Queen? She asked \n\n\"Yes. I'm the queen of the Fairy Folk and all beings of magic.\" \n\n\"And Kim is one of you subjects?\" She asked \n\n\"Yes and her father as well and thousands more. All my treasures and holdings were held in trust until the Awaking that happen yesterday. I know this sounds bizarre to you but it's all true.\" \n\n\"It does sound bizarre, but after what just happen in there I have to believe you and the way Kim threw herself at you I have to believe you are a Queen. So what's this house look like your going to see?\"\n\n\"I have a vague image of it but that's all. It sits on a three thousand acre plantation and it's quite big.\" I told her \n\n\"I'll go with you. I'm sure Ginny will too.\" She told me as we walked out on to the patio. Kim walked up to us and said \n\n\"You mage. I mean Sheri I have an appointment this afternoon. Glenda told me that Janie and Kandy are coming back tonight. I was wondering if I could too?\" \n\n\"Of cause you can and bring your father too. If he wants too.\" I told her \n\n\"Thank you I'll see if he does. Until to night then.\" She said then she waved to Jenny Glenda and Ginny and left.\n\n\"Where is Pam and Mary?\" I asked Glenda\n\n\"Their upstairs getting change to go with us to see the house. What were you two up to in the den so long.\" \n\n\"Sheri was telling me that she was a Queen and then she gave me a fantastic blow job.\" Bill laughed but Ginny said \n\n\"What do you mean she's a Queen and then I want to hear how she gave you a blow job?\" Jenny explained what she knew and how I gave her a blowjob. He looked doubtful so I said\n\n\"You don't believe me do you? Check between your legs.\" Ginny felt between her legs through the skirt she was wearing. She then pulled down her skirt and panties and looked between her legs and said\n\n\"What did you do?\" She sounded panic stricken \n\n\" I made you into a real girl. Do you like?\" I asked \n\n\"I don't know it feels so different. Can I have sex like a girl does?\" She asked as she stroked herself\n\n\"Of cause you can. Would you like Glenda to make love to you?\" I asked \n\n\"Not right now but definitely later.\" I waved my hand over her pubic area and then said\n\n\"When you want someone to make love to you as a girl. Just say I want to be a girl. When you want to turn back just say I have to be me. You can only do this with people of the Fairy Folk. If the person your with isn't then you won't change except for Jenny because she knows about us.\" \n\n\"So all I have to say now is. I have to be me.\" Ginny said and she changed back into her normal state. Then she asked, \"Will this be permanent?\" \n\n\"Until I remove the spell or you piss me off.\" I said with a giggle. Jenny said \n\n\"Hey how come I didn't get a spell?\" I wave my hand over her and said\n\n\"You have to say I want to fuck like a man. And to go back you say. Its better to be a women.\" \n\n\"I want to fuck like a man.\" Jenny said then her cock grew in her pants and stuck out the top. \"Definitely it's better to be a women.\" After her cock disappeared she said \"Yea I like a smooth front then all that bulging. \" We all laughed then she asked, \"When are we leaving? \" \n\n\"It's three o'clock now we could go and look around the estate before the caretaker gets there. We just have to wait for Pam and Mary.\" \n\nWhile we waited I drank two more cups of coffee everyone else had one each. It was twenty after three when Pam and Mary finally came down. I said to both of them. \"Did you all have to make those outfits?\" Both girls blushed a deep red and looked at the floor.\n\n\"I'd say from those blushes these two had a little taste of heaven.\" Jenny said both girls blushed even deeper. \n\n\"Grab your purses girls and let's go.\" I said Bill and I jumped into our car while Pam Mary Ginny and Jenny jumped into Jim's car. Bill sat in the passenger seat while I sat behind the wheel. I asked Bill \"How come you didn't drive?\" \n\n\"What if for some reason I got stopped. I'd have a hard time explaining why I'm dressed in women's cloths.\" He told me I said \n\n\"Look at your drivers license.\" Bill opened his purse and looked at his license. \n\n\"Did you just do this?\" He asked as he realized his license showed that he was female and it had a picture of him looking like one.\n\n\"No that's part of the magic. Everything that could give you away as a guy changes except for this right here.\" I said as I grabbed his cock. \"You could even go to work like that and all your clients would recognized you as a girl and that you've always been one. When you change back to a guy it wouldn't even phase them unless you do it right in front of them. And you can't, you have to do it in front of me, Pam, Jim and Jenny or by your self but not in front of anyone else.\" \n\nTwenty minutes later we pulled into the drive way to the plantation. About a hundred feet down the drive off to the right. We saw a house that was bigger then Jenny's or ours. But it didn't look like a twenty room mansion. Bill asked \n\n\"Do you think that's it?\" \n\nNo it's down further. We'll know it when we see it.\" I told him I drove on further then came to a clearing with a large house in the center. There was one other car there that I could see. I stopped the car on the circle drive and got out. Jenny parked behind me and they also got out. I noticed a gentleman standing on top of the stone steps by the entrance to the house. His appearance was a spell that hid his elfin features. Jenny came up to me and asked \n\n\"Are you sure this is the right place.\" She looked like she was afraid of getting arrested for trespassing. \n\n\"I'm positive. Why don't you all stay down here, while I go talk to this gentleman?\" I told everyone. I walked up the steps and when I came a breast of the elf He bowed and said \n\n\"My Queen I'm Gavin caretaker of the home. As you can see it's a very beautiful home. And if I may it's fit for a Queen.\" \n\n\"Yes Gavin the outside is quite beautiful. If I may ask you a personal question.\" \n\n\"Anything my Queen.\" \n\n\"How did your people manage during the forgetting with out memory of your magic to hide your elf appearance?\" I asked I knew it was a very personal question but I had to know.\n\n\"This spell you see before me was part of the forgetting spell. My people didn't even realize we were elves until the awaking. We always thought we were human. So we kept the spell in tact and only one of magic can see thought it.\" \n\n\"You said you're the caretaker. Do you live in that house by the gate?\" I asked \n\n\"No my Queen I live down the road about a mile or so The corporation has a security service that checks on the house several times a day. The home you saw by the gate is also empty. Would my queen like to see the inside?\" \n\n\"Yes I would is it okay for my family and friends to come in as well?\n\n\"Of cause my queen all your friends and family are welcome. Are you thinking of living in the home?\" I looked at him to see if he objected to it, but I saw no objection in his face. \n\n\"I was thinking of it. Is there a problem\"? \n\n\"Oh no my Queen. When we learned that you lived near by we were hoping that you would. A home this beautiful should be enjoyed. If you do want to move in, the corporation will return the furnishings that were put in to storage so they wouldn't be lost in a fire or a hurricane. If that's what you want. Other wise we can furnish the home how ever you would like. Personally if it were I, I would furnish it with modern furniture. It's much more comfortable than the older antic furniture.\" \n\nI sent a message to Bill to bring everyone up as Gavin open the door then went to security panel and punched in the code. Once everyone was in the entrance hall Gavin explained the history of the home \n\n\"The home was built in eighteen-thirty-five. It was lived in until eighteen fifty-six when the corporation, ah, your estate purchased the property. Due to the fact that it was empty and own but the corporation from the north it escaped Sherman's destruction. The home has been renovated three times since your estate took possession. The latest was five years ago when the central air conditioning was added a long with the pool, the sauna and the exercise room.\" \n\nWe walked into the kitchen and Gavin continued. \"As you can see the kitchen is completely modern. All the appliances are up to date.\" \n\nGavin show us around the rest of the home. The bedrooms, all on the second floor, were large with large walk in closets that made the closet Jon just installed look like a junkyard. There was no furniture in the home and all the carpets where missing. The floors were tongue and groove southern yellow pine polished to a high gloss. The master bedroom was bigger then the entire down stair of the house I now lived in. There were eight bedrooms on the top floor that all lead out to the balcony that stretched around the entire top floor. The master bath had a tub that was twice the size of the one in my bath. The shower could fit six easily and had six showerheads and three body sprays. There was three sinks one toilet and a bidet. The walls, floor and counter tops were pink Italian marble. \n\nWhen we were done with the main and the top floors. Gavin took us down to what he called the play area. On the bottom floor was the exercise room that had a stair master a treadmill weight machine and free weights. Next to it was an entertainment room that had a state of the art sound system that could be controlled from any room in the home. And a sixty inch wide HDTV with stereo surround sound. Not to mention the pool table and bar. When we were done with the entertainment area Gavin said \n\n\"Before we go in to the play room. I just wanted to tell you that the corporation some how knew that the owner of the estate would be sexually adventurous. So this area was added to accommodate that part of their personality. This all could be removed if that is your wish.\" \n\nGavin open the door to the play room. I knew in a instant the play room was not meant to play board games in. There where razed platforms with big mattress on them cover in black silk. The floor was also very spongy to step on. \n\nThen Gavin walked over to a wall that was covered in mirrors and pressed a button. The wall slid open to reveal a full-blown dungeon. There was a cross rack and an assortment of spreader bars hanging on the wall. Along with cuffs whips chains and paddles. The ceiling had several sets of pulleys hanging form it. I look over to Bill and Pam and they both had a dreamy look in their eyes. Jenny and Ginger also had that look. Mary looked shocked. I thanked Gavin and he took us back thought the playroom and into the exercise room and out to the pool area.\n\nThe pool was an Olympic size pool that was half covered with screening. The screening dipped down below the water line to keep the bugs out at night and it could be opened during the day so the entire pool could be used. Next Gavin took us to the carriage house \n\nThe carriage house was really a ten-car garage. There was room for six more cars seeing that four of the stalls were already filled. There was a Lamborghini a Porsche a Mercedes and a Viper. I turned to Gavin and asked \n\n\"Why are these cars here?\" \n\n\"The corporation always keeps four cars here. So that when the owner of the estate did show up they had something to drive. In a year or two these cars would be replaced by four new cars and these would go into one of the collections.\" \n\n\"So all the cars that are in my estate were for the owner of the estate when they claimed it. Other wise they when into the collections. \" \n\n\"Not all the cars go into the collections only a select few. The ones our museum's curators deem collectible, the rest were sold off. That concludes the tour of the house is there anything you would care to see again. Or would you care to see the gatekeepers house?\" \n\n\"I would like to see the Gatekeepers house as well on my way out.\" \n\n\"Very good Ma'am. I'll meet you at the house. Please take your time here, there's no rush. We want you to feel at home here.\" Gavin turned and went to his car. Once he was out of hearing Jenny said \n\n\"You have to let me drive this car. I'll do what ever you ask but I need to drive this car.\" She said as she caressed the Lamborghini. I could see Bill thought the same of the viper and Ginny had her eye on the Mercedes. That Porsche looked pretty good to me. \n\n\"Of cause we can always take them out for spins. I'm trying to figure if I want to live here.\" \n\n\"Why wouldn't you want to live here the place is gorgeous? You can lie out by the pool and sunbath nude and no one will report you to the cops. Like happen to me once. That master bedroom and bath is to die for. And the play area, well I can just imagine the fun we'll have down there.\" Jenny said. She made all the arguments to live here except one. I mentally asked Bill to take everyone outside except Jenny. When we were alone I went to her and said. \n\n\"I'd love to live here my only problem is what I do about you. I don't want to lose you as a friend and lover.\" Jenny wrapped her arms around me and said \n\n\"You won't lose me I'll come to visit all the time.\" I knew that's not how it will work out.\n\n\"You'll come for a while then you think it's too much of a hassle. And stop coming then I'll be stuck in this big house with out you.\" I said as a tear crawled down my face. Jenny knew I was right but she didn't want to say it. Then I said\n\n\"Why don't you and Ginny come live here with me? I think you'll love it here.\" Jenny thought it over and said \n\n\"I would except for one thing. Ginny and I both love our privacy. I know it doesn't seem that way but we do. We can have all the people we want over, But when we don't we can close our door and just relax.\" I knew there was that problem that's why I wanted to see the gatehouse. I said \n\n\"What if the two of you move in to the gate house then you won't be that far away and still have your privacy. And you can drive the Lamborghini any time you want.\" Jenny laughed and said \n\n\"That's not fair. I'll tell you what Ginny and I'll look at the gatehouse, it's pretty big. Then we'll talk it over privately. If we decide not to, then you'll have to respect our answer ok.\" \n\n\"When you make your decision then I'll make mine.\" I told her. We walk out side hand in hand. We got back in our cars Jenny asked Mary and Pam to ride with us so she and Ginny can talk. When we got to the gatehouse Gavin was already there with the doors open. \n\nThe four of us went to the house while Jenny and Ginny stayed in their car talking. I knew if I wanted to I could hear what they were saying but I respected their privacy. As I walked up to Gavin he could see by the look on my face that I was not that happy. \n\n\"My Queen, are you displeased with the property?\" He asked in a low voice. \n\n\"I'm quite pleased with property my troubles lie else where.\" Gavin look at me then at Jenny's car and then at me again and nodded his head. Then he said. \n\n\"This home can be renovated to anyone taste's.\" I almost hugged him. \n\n\"Thank you Gavin you are obviously a wise man.\" \n\n\"Thank you my Queen. Most elves are.\" He said it in a way that was not bragging but stating a fact. Jenny and Ginger got out of their car and came up to the house. Gavin showed the house to them as if they were potential buyers. When we were done I thanked Gavin and told him I'd be in touch. He bowed and went back to the big house to close it up. I asked Pam and Mary to ride home with us so Jenny and Ginny could talk. \n\nWhen we arrived home I sent Pam and Mary out to get some steaks and some lobsters, for dinner. Jenny and Ginger pulled into our drive way and came in the house. I had mentally talked to Bill on the way home and told him of my plan he thought it was a good one and was all for it. He didn't want to lose their friendship either. Jenny sat us all down and said \n\n\"Are you both sure you want to do this. I mean move out there into that big house and have us move into the smaller one.\" Bill and I both said that we were \"Ok there's some changes I want to make to the house. But there not major ones.\" ",
        "\"So you're going to do it. And Ginny's alright with it?\" I asked my excitement showing.\n\n\"No Ginny's not alright with it. She wants to move into the big house with you. I'm the one that wants the smaller one. She wants you to promise her she can cook in the kitchen in the big house at lease twice a week. And she gets to plan every other party we have Pam can have the other ones.\" I was about to tell her she could cook all the meals and all the parties but I knew that would upset Pam. \n\n\"Pam and her can work that out. I'll let Pam know she has to share and she can't but in when its Ginny's turn. Jenny you can make what ever changes to the smaller house you want. The estate will handle it.\"\n\n\"Then I suggest you let Gavin know we'll take the houses.\" Jenny said I sent a message to Gavin \n\n\"Gavin's thrilled he'll send a interior decorator to work on furnishing the big house and he needs you to tell him what change you would like in the smaller one so he can send the right people to help us with it.\"\n\n\"You knew we'd take the smaller one?\" Jenny asked \n\n\"No I thought you weren't going to do it. I'm pleasantly surprised that you did. I really thought Ginny wasn't going to go for it.\" I told her \n\n\"Then how did you know to tell Gavin?\"\n\n\"I didn't I just told him now.\" I could see the confusion in Jenny's face. \"Jen I can talk to any of my subjects just by thinking of them and then speaking to them in my mind. \n\n\"Wait you can talk to any of you subjects just by thinking about them? What about Glenda and Pam.\" \n\n\"Yes them too because they are my subjects. They are the compelled ones. They are compelled by desire to serve me.\" \n\n\"What about Ginny and Me? Can you communicate with us?\" Jenny asked \n\n\"No you are not compelled to serve me. So I can't communicate with you that way.\" Then I remembered that I gave them magic so they were now beings of magic until I remove it. \"Let me try something.\" I said to Jenny then I mentally said to her \"Jenny can you hear me?\"\n\n\"Of cause I can hear you.\" She said out loud. Then I sent \n\n\"Jen I'm talking to your mind. Ask Ginny if she hears me.\" \n\n\"Ginny can you hear Sheri speaking?\" She asked as I told her a joke. Then Jenny laughed and said, \"That's too funny Sheri. Ginny did you hear the joke she just said.\" \n\n\"No, and I'm not sure I like the fact that you two can talk to each other with out me hearing.\" Ginny said then I laughed and sent to him \n\n\"Ginny you're just and old stick in the mud.\"\n\n\"I am not and I'm not old either.\" I laughed even harder because she didn't realize I said that to her mind \n\n\"I guess I can talk to you two.\" I then told them why. \"You just have to remember when I'm not in the room that you have to talk with your mind. If you're in a room with other people they'll think your nuts.\" I told them \n\n\"\"Well this was fun what are we going to do about dinner.\" Jenny said \n\n\"I sent Mary and Pam for steaks and lobsters.\" \n\n\"That sound good put it's already Seven thirty by the time we eat it'll be ten. Why don't we save the steaks and lobsters for tomorrow and get something quick or go out to dinner.\" Jenny asked \n\n\"Pam's still at the store she's going to pick up something for dinner and the steaks and stuff we'll save for tomorrow.\" I told everyone\n\n\"Hey that trick is like a cell phone.\" Jenny said\n\n\"Better I don't have to pay for the call and she's never be out of range and her phone will never be busy.\" I said with a laugh. \n\nThe phone rang and it was Debbie. She and Jeri were on their way over. I told Pam to get enough for about a dozen people. When I told Glenda Jenny and Ginny what was going on Jenny said\n\n\"Well since were going to have to wait for dinner I'm going to have a snack.\" She got down on her knees in front of me and said. \"If you all don't mind. This morsel has been staring at me since we got back and I been dieing to eat it.\" Jenny flipped up my skirt and spread my legs and licked my pussy lips. I sighed and said\n\n\"You make yourself at home and Glenda and Ginny can take care of themselves.\" I said as I lay back on the couch and slid my butt forward to give Jenny easier access. \n\nJenny licked the outer lips of my pussy giving then a beautiful tongue bath. When they were nice and wet from her saliva she slid her tongue inside me and licked at the walls of my cunt. Glenda and Pam were great pussy eaters but Jenny was the best. \n\nHer lips were soft and tender and her tongue was hard and probing. She didn't try and devourer me, She licked me like I was a bowl of milk that she didn't want to splash all over. When she move up to my clit. She licked it tenderly bringing it to full erection. Then she sucked it into her mouth and nibbled on it lightly. While her fingers slid into my hole giving me the pleasure of penetration. Her other hand slid up my body under my shirt and griped my right breast. \n\nMy orgasm crept up on me, my legs started to vibrate and my breath became ragged. Jenny pulled on my nipple ring and shoved two finger of her other hand up my ass and her mouth suck hard on my clit sending me into gut wrenching orgasm. I know I screamed obscenities but I don't remember what they were nor did I care. \n\nWhen it was over I laid there gasping for breath as Jenny tenderly licked my cum that was flowing out of me. When she was done cleaning my pussy she knelt up and tried to remove my tank top. I gave her what assistance I could till she pulled it off my head. She looked down at me and with and evil smile she said.\n\n\"Now I want to fuck you. I want to fuck like a man.\" I felt the tip of Jenny's cock at the entrance of my cunt then I felt her slid the tip in me. \n\n\"Yes Jen fuck me fuck me hard.\" I cried. Jenny slid all the way in me. Her cock was warm and hard. I felt full, not as full as when Bill fucks me, but full non-the less. She leaned over me and I saw her smiling face. The face that said this is fantastic. \n\n\"Oh Sheri your cunt is so hot and wet. It feels so wonderful around my cock. How do guys do this with out cumming immediately? I feel like I could cum just by staying still.\" I slapped her butt and said\n\n\"You better not. You started pumping that cock in to me bitch or I'll take away your magic.\" She smiled and pulled all the way out of me till just the head was in me then slammed it back in. \"That's it fuck me just like that. Pound your meat into me.\" \n\nJenny started fucking me with abandon. After a minute or so of my pounding my pussy she said, \"You know we have a audience?\" I looked over to the other couch and saw Ginny and Glenda both naked with smiles, a mile wide on their faces. Both had their hard cocks in their hands jerking off. I turned back to Jenny and said \n\n\"If they want a show lets give them a show. Fuck me bitch fuck my ass off.\" Jenny smiled again and said \n\n\"Oh you got it bitch. I'm going to fuck you like the slut you are. I'm going to fuck you till you can't walk.\" Her dominant side was coming out as it always did when we got it on. But this time it was stronger. I wondered if that cock gave her a dose of testosterone too. \n\nJenny continued to fuck me with everything she had. And we continue to swear at each other like two sailors on a weekend pass. But she didn't last long. She wasn't use to having to hold back to give me as much pleasure as she could before cumming herself. Jenny cried \n\n\"That's it that's all I can take of your sweet pussy I going to cum.\" \n\n\"Cum in me babe fill me with your cum.\" I cried. I was close too. My pussy spasmed in orgasm as Jenny cock fill me with hot creamy cum. \n\nAfter she was done cumming and had regained her breath. She pulled her soften cock from me and sat on the couch next to me. I felt her cum oozing out of me. I turned and looked at our two husbands. And said \n\n\"The shows over time to pay the admission charge. Come on you two time to clean up.\" Glenda and Ginny both dropped to there knees. Glenda started licking my pussy while Ginny sucked Jenny's cock into her mouth. Jenny said \n\n\"Easy girl that thing is pretty tender.\" Ginny slowed up as Jenny purred her approval. After the girls were done cleaning us up Glenda sat back on her heels and said \n\n\"You know that tasted just like when I cum in you.\" I laughed and said\n\n\"Of cause. I had to make it taste like cum. Your cum is the one I tasted the most and beside I like the taste of your cum. I figured I be sucking her off a lot so I might as well drink your cum from her too.\" Jenny asked \n\n\"That's what Glenda's cum tastes like?\" \n\n\"Definitely, I could tasted Sheri's pussy but the cum is definitely Glenda's.\" Ginny said\n\n\"Well you have good tasting cum Glenda. Not that I'm going to me tasting a lot of it.\" Jenny said. I slapped Jenny on the thigh and sat up and said\n\n\"I don't know about the rest of you girl's but I'm going to take a shower before the food gets here. Does anyone want to join me?\" \n\nAll four of us went to take a shower. It was a tight squeeze but a fun one. Either a tit or a cock was poking me in different places. After the shower we all fought over the make up then Ginny and Glenda put on camisoles and tap pants, Jenny and I stayed nude. We went back down stairs to find that Pam and Mary had returned from the store and Debbie and Jeri had arrived.\n\nPam had out did herself, she had gotten about fifteen pounds of boiled shrimp. Two very large vegetable platters, a couple hundred chicken wings. There was also coleslaw and potatoes salad, noodle salad and all sorts of chips and dips. Plus several large fruit trays. \n\n\"Pam you out did yourself. This all looks so good. I don't know about anyone else, but I'm starving.\" I said to every one I filled a plate and sat out by the patio table. Pam had moved out several chairs from the dinning room and two card tables we had in the garage. \n\nAfter every one else had filled their plates and were sitting out on the patio Debbie had started telling everyone what had happen in the Wal-mart when they left here. That's when I took a good look at Jeff or should I say Jeri. \n\nShe was standing off to the side. She was wearing five inch spiked pumps; the way her feet bulged out of them I could tell they were too tight on her. She was wearing nylons so I could see that her legs were shaved. Her skirt was very, very short maybe three inches below her crotch and it was very, very tight on her. So she had to be wearing very long stocking or panty hose. Her back was straight and for Jeff that was unusual. Sitting in front of a computer had given his spine a slight curve. \n\nThe blouse he was wearing had ruffled sleeves and the front was ruffled, it too was tight. His ears were pierced and large hoop earrings were hanging from them. Her make-up was over done almost to the extent of being whorish. The blond wig looked ridiculous on her. I sent a message to her and asked \n\n\"Jeri why aren't you eating?\"\n\n\"I'm not that hungry My Queen.\" She said I could tell that was not the real reason \n\n\"Is it because the corset your wearing is too tight?\" I saw him look away then I said, \"I want the truth Jeff.\" \n\n\"\"Yes my Queen it is.\" He told me as he looked at the floor. Then my ears picked up the conversation. Debbie was saying \n\n\"When I told the cashier that all the cloths were for him they laughed so hard they all most pee themselves\" Debbie laughed then too, but she was the only one. I looked at Jenny and I could see fire in her eyes. Mary looked embarrassed. While Glenda and Ginny both looked like they could kill. Pam just looked at the floor.\n\n\"What did you just say?\" I asked my tone was not a pleasant one \n\n\"I said.\" She stared then I stopped her \n\n\"I heard what you said. I just wanted to make sure I was still in the room. Glenda take Jeri up stairs and wash that make-up off her. Then get her something to wear something soft preferably. Ginny would you give her a hand?\" Ginny knew that was not a question. \"Pam is there something you can do inside.\" Pam got up and left and Mary followed. \"Jen would you like to leave\" \n\n\"Oh no I'm staying right here. I have a few choice word of my own to say.\" Debbie was stun that every one left including her precious Jeri and Mary. \n\n\"What's going on here?\" Debbie asked as forceful as she could but she knew she was in trouble. \n\n\"Who do you think you are humiliating him like that? What gives you the right?\" I said I stopped after that. I knew if I didn't calm down I'd do something I would regret.\n\n\"What do you mean I thought he wanted me to? He didn't object.\" \n\n\"Of cause he didn't. You are his Mistress he supposes to do what you want. Did you ever see Jenny or I humiliate our husbands?\" \n\n\"Well no but I haven't been around you that long.\" She was getting defensive now\n\n\"You've been around Jim a long time. You didn't even know he was submissive to Jenny. When someone puts their life in your hands you have a responsibility to protect that person. Just like you do with Mary. Jeff is not a toy you can abuse and then throw away. I feel responsible for him since I introduced him to you. Now I feel terrible because of what you did. Do you think he could ever look these women in the eye again?\" I could see she was sorry now. She hadn't realized she had gone too far. \n\nI mentally asked Jenny if she had any thing to say. She told me she didn't I had said all there was to say. Then she told me to smite her. I laughed so hard I almost laughed out loud. I told her I was a nymph not a knight. Jenny said \"Oh yea there's a difference.\" \n\nI could have spell banished her. In a spell banish she would leave here go home back her things get in her car and drive away to another city in another state. We would forget she ever existed and she would forget she knew us. It's a pretty harsh punishment only used for the most serious offenses\n\n\"Look I'm sorry I guess I got in over my head. I'll apologies to her and ask her forgiveness. And if you want I'll tell her I can't be her Mistress any more. She couldn't have gotten too attached to me yet.\" Debbie said \n\n\"That's fine with me but as for you not being her Mistress that's up to her. It's always up to her.\" I told her. \n\nI mentally told Bill, Pam and Ginny That they could come back. Bill told me that they almost had Jeri ready and will be down in a minute. Pam and Mary came back out on the patio. And after Pam refill my wine glass she sat down next to Mary. \n\nFive minutes later Glenda and Ginny came in with Jeri who was wearing Glenda's pink camisole and tap pants. Ginny or Glenda had worked their magic on Jeri's own hair and make-up. She was wearing Pam's ruby earrings in her ears. When I asked, Bill told me Pam said she could borrow them but she had to give them back. \n\nDebbie took Jeri's hand and asked her to go inside with her. When they left everyone started talking to find out what happen. Till I held up my hand and all was quiet. I'm not one to listen in on other people conversations but this time I felt I owed it to Jeff. From somewhere in the house I heard Debbie say. \n\n\"Jeff I'm really sorry for humiliating you yesterday. I went to far, it was uncalled for. You put your trust in me and I betrayed you. Can you forgive me? If you don't want to be my submissive any more I'll understand. I'll pay you for all the cloths I made you buy and I never say anything to any one about you. If you still want to be my submissive then I swear as god is my witness I'll never humiliate you again and I'll protect you from any one else humiliating you.\" Then Jeff said \n\n\"Of cause I still want you to be my Mistress. We all make mistakes. I'm sure I'll make quite a few. But with you guidance and support I hope I won't make the same mistake twice. As for the humiliation I didn't care for that, lets never mention it again.\" Then there was silence and I'm sure they were kissing. \n\nI hoped they were on the right track. But I would have to check on it from time to time in the future. I turned my attention back to the patio. Jenny realized what I had done and asked.\n\n\"Well did he forgive her?\"\n\n\"Of cause he did. I think she was very sorry. She really didn't know any better. I'll ask Jeri from time to time and make sure she's not abusing him to much.\" I told her\n\n\"How would you know he's telling the truth?\" Jenny asked \n\n\"He has to, just like you do. All my subjects have to tell me the truth.\" I told her\n\n\"Your telling me I can't lie to you if I wanted to. How come?\" Jenny asked\n\n\"I worked a spell on you and gave you the ability to use it. So in essence I gave you magic. When you accepted that magic you became one of my subjects. And the magic forces you to tell me the truth. Now you could tell me a half-truth like say I asked your age. If you were twenty-nine years old and you birthday was tomorrow then you could say you're in your twenties and that would be the truth. But you couldn't say you were in your early twenties. You don't have to answer me you are not compelled to answer. But if you do then you must tell me the truth. Just like I must tell you the truth.\" \n\n\"So if I asked you if you ever had an affair that Bill doesn't know about you would have to say.\" Jenny asked she was trying to get me in trouble. \n\n\"I'd have to say no never. That, my dear friend, would be the truth. I would never asked that kind of question around your husband because I wouldn't want to hurt him or get you into trouble.\" I told her to let her know I didn't appreciate her trying to get me into trouble. Then from across the table I heard Mary say\n\n\"What are you two talking about?\" I had forgotten she was there. I gave her a confusion smile. She turned to Pam and said, \"Do you want to go for a swim.\" Pam said she did and they both got up took off their cloths and went for a swim. \n\n\"Ok what just happen?\" Jenny asked \n\n\"I gave her a confusion smile and her mind went back to the last thing that she thought about before the subject of magic came up.\" I told her. I knew what the next question was before she asked it \n\n\"And how many times have you used that one on me.\" \n\n\"Once, I tried it earlier when you confronted me about Kim's behavior. It didn't work. It sometimes doesn't work on strong willed minds.\" I said a little embarrassed \n\n\"I guess I should take that as a compliment. I do remember that my mind became a little confused but I was able to clear it.\" Debbie and Jeri came back on to the patio and sat down at the table. Debbie said \n\n\"Jeri and I had a long talk and she wants to stay with me and I promised to never humiliate her again. And she promised to always tell me if I go to far.\" I turned to Jeri and asked if that was true and she said it was.\n\nPam and Mary had gotten out of the pool and dried off. When the doorbell rang Pam put on a robe she had in the hall closet and answered the door. Jack and Kim came out on to the patio Jack walked over to Ginny and kissed her on the mouth and said \n\n\"How's my girl tonight.\" \n\n\"I'm better now that your here, come on have a seat. And I'll get you a glass of wine.\" Ginny said. Obviously Jack made an impression on Ginny. Ginny got up and walk over to Kim and said \"Can I get you something to drink too?\" \n\n\"A glass of wine would be good.\" She kissed him and I saw her nipples harden through her tight tank top. Kim took one look at Jenny and I and asked her father. \"Dad would it be ok if I got naked too?\"\n\n\"I don't see why not, it wouldn't be the first time we saw each other naked.\" Then to me he said \"Kim and I are nudist have been since she was little. Her mother got me started. She just loved to be nude. After she died I just kept doing it. Kim was always running around nude. I had a hell of a time getting her to wear cloths to school the first year.\" Jack told us as he pulled off his golf shirt. \n\nOnce Kim was naked she came over to me and said, \"Can I speak to you privately?\" I took Kim into the Den and asked \n\n\"What's the problem?\" Kim's body was what I expected. It was tight, not a bit of flab on it. Her legs were well muscled but not the type you see on weight lifters. Her arms and stomach muscles were well define but not unfeminine. ",
        "\"Oh no problem. I just wanted to thank you for lifting my father's grief. I found out more about my mother today then I did my whole life. I never knew he loved her so much.\" She said\n\n\"Your welcome I just wished some one had done it sooner.\" She came closer to me and said \n\n\"Now that you're my Queen can we still get together as lovers?\" \n\n\"What kind of nymph would I be if I didn't let someone as beautiful as you became one of my lovers?\" I told her and then reached up and kissed her on the mouth. Her lips were soft and they smelled of the lip-gloss she was wearing. Then her tongue slid into my mouth as her hand touched my breast. The kiss lasted for a minute or so and then I pulled back and she said\n\n\"I really like your nipple rings they look just like Jenny's.\" \n\n\"Thanks we got then at the same place at the same time. I think we should get back out side. I want to see what impressed Ginny so much.\" \n\n\"That would have to be my fathers cock. It's quite impressive.\" \n\n\"Kim he's your father. Your not suppose to notice that.\" Kimie laughed and said\n\n\"I'm also my mothers daughter. Besides you can't help but notice. Come on.\" She said as she half dragged me outside. When we got outside Kim walked up to her father who was now sitting down and said \n\n\"Dad stand up and show Sheri your dick.\" I was embarrassed and said \n\n\"Kim behaves yourself.\" Then to Jack I said, \"You really don't have to.\" Jack stood and said \n\n\"I don't mine your going to see it sooner or later.\" When Jack stood up my eyes when straight down to where his cock was. It wasn't hard but it was big, about seven inches long and one inch thick, and that was soft. I wonder how big it would get. To answer my question Jack said\n\n\"It doesn't get a whole lot bigger it mostly just gets hard.\" \n\nDebbie came up to me and said, \"We'll be leaving now. Mary wants to have a go with Jeri and I have some more apologizing to do. And I want to stop at that Wal-Mart and tell the cashier that I was just kidding her yesterday that we only did it as a joke. Bill gave Jeri some pants and a shirt to wear on the way home. I'm really sorry again\" I hugged her and said \n\n\"We all make mistakes, now all of you go home and enjoy yourselves.\" I put on the robe that Pam had on and walked them to the door. As I opened it I found Janie walking up the drive with Kandy and my next-door neighbor, Mrs. Miller with them. My neighbor came up to me and said \n\n\"Mrs. Marsh can I talk to you?\" I turned to Janie and said \n\n\"Janie everyone's on the patio, go and make yourselves comfortable. I'll be right out.\" Then to my neighbor I asked \n\n\"Mrs. Miller what can I do for you?\" \n\n\"Mrs. Marsh this is a conservative neighborhood we don't allow people of your kind to live here.\" I knew something like this was going to happen. I really expected it sooner.\n\n\"Mrs. Miller what kind of people am I?\"\n\n\"Nudist and sexual perverts. I saw your friends in your pool swimming in the nude. It's discussing. People sitting on your patio with out any cloths on. I'm going to report you to the community association. They'll make you sell your home.\" I almost laughed the association would take a year to even hear the complaint. \n\n\"Mrs. Miller you know the association won't do any thing. If they tried and forced me out they would have to buy my home and give me fair market value. Which we both know isn't going to happen. Now lets talk about you being a peeping tom. I sure the association would love to hear about that one.\"\n\n\"Don't try and make me look like the criminal here Mrs. Marsh. I have the law on my side.\" Which of cause she did.\n\n\"Mrs. Miller you will no longer see any one on my patio in the nude. But if I catch you looking in my windows I'll have you arrested for trespassing and invasion of privacy.\" I told her then I turned and walked away. \n\nI was never one to walk around naked before, but I'll be dammed if some bitch is going to tell me I can't do it in my own home. I contacted Gavin \n\n\"Gavin who do I talk to about getting me in to the mansion as soon as possible?\" \n\n\"That would be me my Queen. I've been appointed your liaison to the corporation. Anything you need I will provide. If you would like I could have the interior decorator at the mansion tomorrow. You and I could meet with her there and discuss what you would like.\" \n\n\"That would be fine I'll be there at one tomorrow.\" I told him \n\n\"It will be my pleasure to see you and your family again. Until tomorrow my Queen.\" \n\n\"It will be a pleasure to see you again too Gavin. I'm sorry I contacted you so late. I'll try and not let it happen too often.\" I told him\n\n\"Not a problem my Queen. It's my pleasure to serve. Until tomorrow.\"\n\nI walk back onto the patio and waved my hands and put a ward around the patio so that anyone looking from the outside would only see an empty patio. The only problem was it also kept out any breeze we might get. Jack looked at what I had done and said\n\n\"Have some problems with your neighbors?\" \n\n\"Yes it seems were all sexual perverts. And she's going to call the community association on me.\" I told him \n\n\"Not a problem, the association doesn't meet till next month and I'm sure the president won't take up the discussion of the matter. For at lease six months.\" Jack told me \n\n\"And how do you know that?\" I asked \n\n\"Because if you and your husband had showed up to some of the meetings you would have know that I am the president. And everyone like's the way I handle the meetings. I tackle the real problems and the silly ones like this one are put on the back burner to be studied for awhile.\" He gave me a smirk and said \"A really long while. I'm glad you put up the ward now she can't get pictures. Mrs. Miller can be quite the pain in the ass.\"\n\n\"I need a month then she can take all the pictures she wants because I'll be out of here.\"\n\n\"Where are you going?\" Janie asked \n\n\"A home on SR 32 about fifteen minutes from here.\"\n\n\"The old Biltmore Estate?\" Jack asked.\n\n\"Yes that's it. It's part of an inheritance I just received.\" I said to Jack but nodded toward Janie. Jack got my drift and stopped asking questions. I turned to Janie and said \n\n\"Why don't you and Kandy slip into something more comfortable?\" \n\n\"Are you sure it's all right.\" She asked \n\n\"I'm sure it's fine.\" She turned to Kandy and said.\"\n\n\"Do you want to get the bag from the car?\" Kandy said he would and left to do so. Janie then said to me \"I'll be right back.\"\n\nI sat down next to Jenny and Kim sat down next to me. I then said after Janie and Kandy were gone\n\n\"Glenda, Pam we need to be at the mansion at one tomorrow so don't let me over sleep. Jen Gavin needs you there too. Where's Ginny?\" I asked and saw her hand rise up in front of Jack.\n\n\"The little slut couldn't wait.\" Jenny said laughing Jack just gave me a smile. Kim rested her hand on my thigh and started running her fingers in circles. Then Kim said\n\n\"If you all have to leave early tomorrow maybe we should move this party along.\" \n\n\"Well do you all want to move this inside where it's air-conditioned. I'm sure things will heat up rather quickly.\" We all stood up except for Jack and moved inside. \n\nKim stayed with me every step of the way she obviously had her sights set on me and wasn't going to give up. I pulled Kim by the hand over to one of the couches in the living room. I pushed her down on to the couch and straddled her legs with mine, and sat down on her lap\n\nKim's arms went around me; hands grabbed my ass and pulled me closer to her. Our lips met and I slid my tongue into her mouth. When my tongue touched hers I felt something hard. I pulled my mouth off hers and asked what was in her mouth. \n\n\"It's my tongue ring. I put it in while you were talking to you neighbor. I always wear it when I going to have sex with someone. Do you want me to take it out?\" \n\n\"No, I just wasn't expecting it.\" I told her before I covered her mouth with mine once more. This time I felt for the ring. It wasn't really a ring it was really a ball that had a post that went through her tongue to a clasp on the bottom. \n\nKim pulled her mouth from mine and started kissing my neck I happen to look over to the other side of the couch and saw Glenda sitting there with Kandy's head in her lap. Janie was sitting on the arm of the couch, naked, watching Kandy suck Glenda's cock. When Kim started sucking my right nipple I closed my eyes and forgot about what was going on next to me. \n\nKim sucked my nipple into her mouth and the ball on her tongue caught on my nipple ring and she jerked it tight, sending a wave of orgasmic bliss throughout me. When she started rubbing the ball on my hard nipple the feeling went straight to my pussy. I felt my moisture flow out of me and onto Kimie's lap. Kim picked me up and laid me onto the couch and started kissing her way down my tummy. \n\nGlenda Janie and Kandy had moved. Kandy was now on her back on the floor between the two couches, with Janie in a sixty-nine position above him. Glenda was on her knees fucking Janie from behind. Kandy was obviously licking both Janie's cunt and Glenda's cock. Janie, I imagine, was supposed to be sucking Kandy's cock but with Glenda fucking her with his huge cock. All she could do was hold herself up and tell Kandy how good it felt. \n\n\"Oh Kandy she's so big. I'm filled with her can you see how full I am.\" Kandy could only grunt her answers \n\nWhen Kim 's mouth reached my pussy I closed my eyes once more to concentrate on the pleasure she was giving me. I felt Kim's tongue lick around the lips of my pussy cleaning up any cream that was left. When her tongue slid into my cunt I felt the ball on her tongue rub against the walls. It was a strange feeling as that ball rubbed places that only felt soft flesh before. \n\nOnce Kim had cleaned me inside and out she next attacked my clit. She licked it and sucked on it till it was fully erect. Then she rubbed the ball on it I sat straight up and gasped. I looked down into her emerald green eyes that sparkled up at me. She knew what I was feeling as the hardness of the ball rubbed against my nub. I could see it in her eyes. They seem to be smiling up at me. \n\nKim then started to suck on my clit even as she rubbed it with the ball. I was close to cumming, very close my legs were vibrating as the tingling sensation started in my toes. Then she reached up and grabbed my nipple ring and gave it a twisted. My orgasm shot through me. Sparks when off in my eyes as I came hard. My creamy cum flowed out of me. Kim was not one to waist a good cum, her mouth dropped to my hole and she sucked up all that poured out of me. \n\nWhen my hot cum had stopped flowing Kim went after my clit again. I stopped her begging her \"No more please, I can't take any more for now.\" \n\nKim kissed her way up to my mouth and we kissed once more. I tasted myself on her tongue. My tongue played with the ball that gave me so much pleasure. When we broke our kiss she asked\n\n\"You like that didn't you my love?\"\n\n\"Yes it was wonderful. It was so different. Did it hurt getting your tongue pierced?\" I asked \n\n\"No not much at first. You have to live with some swelling and then you talk funny for a while. Next time I'll bring the diamond stud you'll love that one. The roughness drives most girls crazy.\" She told me and we kissed again. \n\nI turned my attention to where I last saw Glenda Kandy and Janie. Glenda was now sitting back on her heels Janie had her pussy planted solidly on Kandy's face. Janie was breathing hard as she held herself up while Kandy cleaned out her pussy. \n\nMy mouth was dry and it felt like it was filled with cotton. I turn back to Kim and said. \"I'll return the pleasure you gave me, but first I want to get something to drink.\" Kim smiled down at me and said \n\n\"You don't have to I enjoyed giving you pleasure.\" \n\n\"I want to, but I really need to drink something.\" Both of us got up and went to the kitchen. After getting a soda each we looked out on to the patio. Jack had Ginny lying on the table and he was sucking Ginny's cock. \n\n\"Obviously your father like sucking cock too. Was he the guy you were talking about?\"\n\n\"Oh no we never did this kind of thing together before. In fact I don't think he's had any sex since mom died, before last night that is. And the way he's going to town on Ginny's cock there he seems to like it. Where's Jenny? I haven't seen her since we came in. \n\n\"That's because you've had you face stuck in my pussy the whole time. Jenny's more of a private person. She like taking her lovers into a room so she can be alone with them.\"\n\n\"I see what you mean yesterday while we were kissing in the living room she was ok but once I started sucking her tits She was all for leaving. When we got to their place she took me straight to her bedroom.\" \n\n\"That's Jenny when she wants it she wants it now.\" I said Kim drain her soda and put the can on the counter. She then wrapped her arms around me from behind kissed me on the neck and said\n\n\"You know I don't know why I feel this way but I could really fall for you. I never felt this way about anyone else. But you, you could make me a one woman girl.\" I was flattered, but I wasn't sure if it was just me or my being a nymph that she was responding to. So I said \n\n\"You're just responding to the nymph in me.\" \n\n\"I don't think so you never smiled your infatuation smile at me. I think maybe it's because you didn't cave into my smile like so many others did. I'll tell you that day you said I was late I smiled at you. The one that every other girl has begged me to take her to bed with and it didn't even phase you. That worried me. Then later in the day Ginger your secretary she made me wait outside your office till I was announced no one has ever done that to me. I was scared, I figured I met my match.\" \n\nI turned in her arms and said \"Two days earlier I started my rite of renewal. That's when everything started falling into place. The night before you smiled at me I learned who you where and what had happen with the forgetting. But in the morning I didn't remember much of it, but when you smiled at me everything came back. I knew who you were and I knew I was a nymph. And that night I found out I was the heir to Queen Desrei throne. So you help all this come to pass.\" \n\n\"What about Ginger?\"\n\n\"Ginger's compelled to me. After I told her you had away about you and she was to fight her impulses to do what you say, she did. She made you wait and I'll tell you if Anton wasn't with you, you would have waited a while.\" \n\n\"Your not going to make me wait anymore, are you?\" She asked \n\n\"I will if you piss me off.\" I said and we both laughed then she said \n\n\"I mean tonight.\" Then she gave me a sexy smile.\n\n\"No love not anymore tonight.\" I said and took her hand and walk back in the living room. I saw Janie and Kandy on one of the couches talking and kissing and even giggling. Glenda had her back to the other couch just relaxing. I asked him \n\n\"You ok.\" He said he was Then I asked Kim. \"Do you want a roll in the hay with Glenda?\"\n\n\"Oh no I seen what she's packing and that's a little big for me. I don't see how you take it being as small as you are.\" \n\n\"You'll stretch enough to accommodate her and she is an excellent lover. She'll never hurt you.\" I told her \n\n\"I think I'll wait and have a few more smaller ones in me before I try something that big.\" Then quietly to me she said. \"I think she's wider then my dad. Dad's longer, but not by much.\" \n\nI pushed Kim down on the couch so she was lying length wise and straddled her waist and said \"Didn't we say something about not making you wait?\" \n\nI leaned down and kissed her mouth, a thrill when through me when I felt the tongue ring again. After kissing her for a few minutes I moved down to her breasts they were as big as Janie's, but her nipples were darker and bigger. After lovingly kissing and licking her breasts I moved to her right nipple and sucked it in to my mouth. I scrape my teeth on the nipple bring it to hard attention. I worked her nipples, first one then the other, for sometime. I had Kim panting and moaning and begging me not to stop. \n\nI then moved down to her tight tummy kissing and licking it. I bath her belly button with my tongue. It was a shallow button, almost an outtie. She seemed to really like the attention I paid to it. But the smell coming from her pussy was compelling. It drew me closer. My own arousal surged the closer I got to her slit. \n\nAfter taking all the time I could. I finally split the folds of her womanhood. Her flavor was intoxicating; it had to be the best pussy I ever tasted. It was creamy almost tart in flavor. It made my mouth water just being close to it. \n\nWhen I moved back up to her clit it stood an attention. Her clit had to be the longest one I ever saw. It was an inch and a half or longer. And it stood up like a little hard cock just begging to be sucked. I massaged it with the flat of my tongue and then I made a tube of my tongue with her clit in the center. Then moved my tongue up and down almost like jerking her off with my tongue. \n\nThis really got to Kim her legs were trembling. Her stomach was rippling. Her chest was heaving. She was saying something but it was unintelligible. When she came she came hard her cum splashed out of her soaking my chin and neck. My mouth dropped down and I sucked up all that I could. I then sucked her clit into my mouth and sucked hard on it. Kim came again this time harder then before. \n\nMy neck and chin where soaked in pussy cum. My mouth dropped down and sucked more of her tart buttery flavor and again I when after her clit. Sucking it again into my mouth. When she came a third time she passed out. After I cleaned her up, sucking up all her girl cum. I slowly kissed my way up to her face. She had a sweet smile of contentment on her lips. \n\nWhile I waited for Kim to recover and become conscience again I looked over to where Janie and Kandy were sitting. Janie was slowly stroking Kandy's cock keeping her at a constant state of arousal. I asked \n\n\"Were you two watching?\"\n\n\"Of cause we were. It's always a pleasure to watch a champion pussy eater at work. Of all the times I been with Kim I never seen her cum that hard. Kandy came once and is hard again.\" \n\n\"I can see. How did you like my Glenda?\"\n\n\"I'm sorry I can't say anything about that, I don't want to hurt anyone's feelings and I acted like a slut in heat.\" \n\n\"You can tell her.\" Kandy said then to me she said, \"It was the best fuck she ever had. And I'm glad I watched it.\" \n\n\"No it was not the best fuck I ever had. It was good I might even say fantastic but it was just a fuck. Glenda and I did not make love. Only you and I can do that.\" Janie told him I could tell she was trying to keep Kandy from getting jealous \n\n\"Jane I told you, you can fuck any she male you want as long as I'm there to watch. And I know you love me but you have to admit Glenda fucked the hell out of you and she was the best. With what she's got she'd have too. But she was very gentile.\" \n\n\"Ok she was the best I ever had. Are you happy now? I just don't want you getting jealous. And I don't want you thinking I don't love you because I'm getting fucked by someone else.\" Janie told him then I felt movement next to me. I looked down and Kim opened her eyes and I said\n\n\"Well decided to come back to us?\" Kim pulled me into her arms and hugged me tight then kissed me and said\n\n\"That was the best I ever had. What you did with your tongue was wonderful. Let me return the favor.\" \n\n\"I'd love for you to, but some other time right now I think I'd like some Kandy.\" I told her and then looked up. I saw a surprised look of Kandy's face. I looked right at her with the sexist look I could come up with. And said \"Well how about it can I have some Kandy please?\" \n\n\"Go ahead Kandy give her a tasted of sweetness.\" Janie told her ",
        "\"Are you sure I'm not as big as Glenda.\" Kandy said \n\n\"I can see how big you are, and it's plenty big enough for me. Are you going to give it to me or do I have to beg.\" I said as I stood up and walked over to him. I looked at Janie and asked, \"Do you mind letting me lay there? I hate getting rug burns on my back.\" \n\nJanie stood up and said, \"Of cause you can as long as I can watch. \"Then she kissed me, and whisper in my ear a thank you. I knew it was for letting him fuck me, but I wasn't letting him fuck me. I wanted to be fucked. I wanted to be fucked badly. Kandy still hadn't moved so I said. \n\n\"Are you going to get up you do you want me to climb on?\" I saw Kandy swallow then he said\n\n\"I'm not sure how you want me to do this.\" \n\n\"Well first.\" I said as I straddled his legs and sat on his lap facing him. \"You start by kissing me. I like to be kissed, a lot. Then you can nibble my ear but not much. Then you can.\" He stopped me there when he kissed me. We kissed for while, but not long enough. He then went for my ears and nibbled on them. He moved down to my neck and on to my breasts. \n\nHe went straight for my nipple and sucked it into his mouth as he rolled me onto my back. \"Oh god yes suck it baby and play with the ring.\" I instructed. Kandy was a fast learner as his tongue pulled and twisted the ring. Then he switched to the other one doing the same. \n\nThen he started to move down but I stopped him \"No I need you in me. I need your cock in me.\" Kandy's mouth moved back to my nipple. I also felt the head of his cock searching for the entrance to my pussy. I took a hold of it and guided it to my hole. As the head of Kandy's cock slid passed the outer folds of my pussy I sighed and said \n\n\"Oh that's it give it to me baby. Shove that cock into me.\" Kandy shoved ever inch he had deep in me. \n\n\"Oh you so hot and wet.\" Kandy cried \n\n\"You made me that way lover. Now give it to me, fuck me.\" Kandy started pounding his cock in me. I knew he wouldn't last long and I really didn't need him too. I already felt my orgasm building in me. Then she said\n\n\"Oh god I there I'm going to come.\" \n\n\"No wait. Wait for me hold off I'm almost there.\" I told him Kandy's face scrunched up and he clenched his teeth and groaned as he continued to pound me. The mire act of asserting my control on him and him accepting it was enough to put me over the top. \n\n\"Now Kandy, I cumming now. Cum with me squirt your cum in me. Let me feel you fill me with your hot cum.\" Kandy groaned out and fired his hot cum deep in side of me.\n\nWhen he pumped his last load in me he collapsed on me. We lay there gulping air into our lungs. Kandy's cock was still pulsated in me as we recover. Once he regained enough composure he raised himself up and looked down at me I smiled and said\n\n\"Now since you had to clean Janie after Glenda fucked her. I think she should have to clean me after you fucked me.\" We both looked at Janie who was kneeling next to us so she could watch. \n\n\"Ok girl out of the way I'm going to finally see what she tastes like.\" She told Kandy \n\nKandy pulled his limp cock from me and sat back on the couch. While Janie pulled my legs so I was hanging off the couch and clamped her mouth to my pussy. I sat up and watched as Janie licked up all Kandy's and my cum as it flowed out of me. Kim came over as sat on the edge of the couch and watched Janie then asked\n\n\"Does she really like that?\" \n\n\"I guess so she's sure doing a good job at it.\" I told her but I was beginning not to care what Kim was saying. \n\nJanie had cleaned up what cum was there and was now working on my clit. Kim got up and went over to Kandy and knelt down in front of her. She said something to Kandy and Kandy nodded her head. I watched as Kim's head lowered and she stuck out her tongue and licked up some of the cummy mess from around Kandy's cock. \n\nI saw Kim tasted the cum and the shrug her shoulders and go back for more. Mean while Janie was really working my clit over. I was having a hard time trying to watch what Kim was doing. When I saw Kim suck Kandy's cock into her mouth I came. My whole body convulsed as I held Janise head firmly to my pussy. Janie's mouth had moved down to suck my cum while her fingers pinched my clit. Cum pored out of me and into Janie's mouth. I know I screamed my cumming as I humped my pussy on Janie's face. After I came Janie when back to my clit but I stopped her and said.\n\n\"No more I'm done for to night. I going to find my Glenda and go take a shower.\" Janie nodded her head and said. \n\n\"If Glenda doesn't want to join you then I will.\" Kim pulled Kandy's half hard cock from her mouth and said. \n\n\"I could use one to.\" \n\n\"Well what did you think of the taste.\" I asked Kim \n\n\"It's ok, nothing to write home about.\" \n\n\"That because you haven't tried it straight from the tap.\" I told her \n\n\"Hey I'm trying here, but Kandy's not cooperating.\" Kim said as she continued to stroke Kandy's cock.\n\n\"Give the girl a break. That's not a pussy there a cock need time to recharge.\" I told her with a laugh then I said, \"Besides when a girl has used her cock as well as Kandy did it gets real sensitive to stimulation. I can see Kandy's feeling some pain right now.\" Kim look up at Kandy and could see the pain there and said\n\n\"Why didn't you tell me?\"\n\n\"I didn't want to discourage you. You looked like you were enjoying your self.\" Kandy told her\n\n\"I was but I don't want to hurt you. I'll do this some other time.\" Kim said as she kissed Kandy's cock one more time then she kissed Kandy's mouth. \n\n\"I'm going to see if I can find Jenny and Pam. Then I'll go looking for Glenda.\" I told them. \n\n\"Jenny and Pam when into the den earlier. I haven't seen either of them since.\" Janie told me. \n\nI went to the den and open the door as quietly as I could. Jenny and Pam were a sleep on the floor. They had made a bed with blankets and sheets. Jenny was lying on her back with Pam cuddled up to her. Pam's head rested on Jenny's chest. And they both had sweet smiles on their faces. \n\nAfter closing the door I went to the patio. Jack Glenda and Ginny were all sitting in chairs looking completely exhausted. I walked out onto the patio and asked. \"Well you three look done in. I gather there's none left for me.\" All three said if I gave them a minute they would take care of me. \n\n\"Some how I think that's going to be the longest minute of my life. Really, I done for the night I was just wondering who was sleeping with whom. Jack do you have a preference?\"\n\n\"\"Sorry I need to go home I have a meeting at ten in the morning with a client. Then we're hitting the links at noon.\" Jack stood and said \"Well girls I had a great time. We need to do this again real soon.\" Then he came over to me and said so only I could hear. \"Thanks for inviting me tonight and thanks again for yesterday.\" \n\n\"Don't mention it but the next time I want some of this.\" I told him as I squeezed his limp dick. I saw pain in his face, but I didn't squeeze him that hard. So I gathered he had a really great time. Then he said \n\n\"That's deal just invite me back.\" \n\n\"I'll make sure you get an invitation to our house warming party.\" I told him \n\n\"That's something I don't want to miss. It should be a hell of a party.\" He said with a grin. \n\n\"Yes it should be. I think a three day party should warm up the place nicely.\" I told him \n\n\"Oh yea. Give me a couple weeks notice so I'm plenty rested.\" Jack said with a laugh. Jack started getting dressed while I walked over to Glenda and asked \n\n\"Are you ready for bed?\" \n\n\"Yea but I figured I'll sleep with Ginny in one of the spare rooms and Kim could sleep with you. Janie and Kandy can sleep in the other spare room.\" He told me I was disappointed he didn't want to sleep with me so I asked \n\n\"Why not let Kim and Ginny sleep together and you can sleep with me?\" \n\n\"It's because Jenny and I have a rule. I can only sleep with guys or she males and she can only sleep with girls. I know it's a silly rule but that's the way we do it. We always have. I'm not the one that's going to break that rule. So if you want, I'll go home to sleep. Then Kim can have the bed to herself and you two can sleep together.\" Ginny didn't look like she could make it up to bed never mind going home. \n\n\"No that's ok you two take the first room, Janie can have the other and Kim and I will have the master bedroom. Are you two sure you can make it that far?\" I told them\n\n\"I think so give us a few minutes.\" Glenda told me \n\n\"Well don't sit here too long. I'd hate to see you two fall asleep out here.\" I leaned over and kissed Ginny and Glenda. Then said \"Good night I'm going for a shower and then to bed.\" \n\n\"Kim might have other ideas.\" Glenda told me \n\n\"She might but the only way she getting anymore tonight is with her own hands. I'm done I just hope I can get to the shower before I pass out.\" I left the patio and went back in the living room and said to Janie \n\n\"You and Kandy can sleep in the same room you did last night. Kim would you like to sleep with me.\" \n\n\"Oh yea sleeping with the boss now that's something I always wanted to do.\" Kim said\n\n\"The way you old boss wanted you back so bad makes me think you slept with her too.\" I said \n\n\"Ok I did but she was my lover before she was my boss so that doesn't count.\" She said with a giggle\n\n\"I'll let you know right now. There's not going to be any hanky panky going on in that bedroom. I am going to take a shower and go to sleep. So if you still want to fool around maybe Janie will be more accommodating.\" \n\n\"Don't look at me I'm done and so is Kandy.\" Janie told her\n\n\"As long as I don't have to sleep alone I'm fine with it. Besides I kind of tired too.\" Kim told us. We went up and had a quick shower then got in bed. I the next thing I knew it was morning."
    ],
    "authorname": "Scribler",
    "tags": [
        "asked queen",
        "queen fairy",
        "time queen",
        "life fullest",
        "ginny glenda",
        "pleasure serve",
        "left janie",
        "janie stood",
        "pam called",
        "ginny sitting"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/lifes-changes-ch-10"
}