{
    "title": "The Furies",
    "pages": [
        "In the quiet, backwater system of Halderon IV, the old war horse had been put to pasture. She floated majestically in geostationary orbit over the gas giant that star maps called HV-16 and the locals called Lesvous. A bevy of smaller ships darted around the system, all of them hopelessly obsolete by modern standards, consigned to system defense duty and anti-piracy patrols. Compared to the old campaigner, they were state of the art. \n\nAlmost one thousand years had passed since her massive, seventeen mile long keel had been laid down in the long ago vaporized shipyards at Arnhem. She had been the first of fifteen ships of her class. Massively built, heavily armored, carrying the then revolutionary, fifteen inch Particle Projection Cannons, and internal bays for a whole wing of fighter/bombers. In her day, she had been the pinnacle of space going naval technology and, with her sisters, had been a thorn in the side of the Terran Authority's reconquest of the galaxy. \n\nFor one hundred bloody years, she and her sister ships had protected the Gunarian Confederation from being annexed into the Terran Authority. The Treaty of Sol III in 3745 had marked the end of hostilities, as the Confederation had bowed to the inevitable and joined the Authority voluntarily, rather than face long years as an occupied power. Four years later, she had been refitted and with a loyal Terran crew and joined the Authority Navy. \n\nIn her nearly limitless positronic database, the bloody history of the reconquest was stored. She had rained fire and death on the rebellious planet of Sig-Alpha five, taken part in the great naval engagement on Centauri Prime, provided fighter support in the final battles against the Volluskuns and taken part in more skirmishes and fleet actions than most people could imagine. When her battle board was lit, she was as close to sentient as any machine humans had ever constructed. \n\nEventually, time and technology turned her cannons into pea shooters and her hangar decks into less than today's auxiliary carriers boasted. She had been consigned to the scrap yard, when some bean counter realized she was the oldest active duty ship in the Authority fleet. Rather than scrap her, the powers that be had parked her here in orbit and turned her into a training ship for new pilots. \n\nThe old warhorse was quiet now. The only sound and fury aboard came from raw recruits shooting at targets or blowing off steam. Her great guns had been silent for more than a century and the battle circuit that would bring her to full wakefulness had been dark for twice that. She slept, and perhaps she dreamed of battles in days long gone by. She remained as a living monument to man's determination to conquer the galaxy.\n\n<center>***</center>\n\nErica Davies sat in the darkened conference room, watching the gas giant spin beneath the ship, through the big armalite picture window. Ancient wind storms left mottled yellow spots in the planet's dark green face. A belt of them along the equator had been ancient at the time the Yorktown's keel had been laid.\n\nDeparting from a small intra-system liner she watched the shuttles that were bringing in a new batch of recruits. For the last five years her job had been training others to go into combat. At forty-three she felt as old as the ship she was assigned to. Like her, she had been put out to pasture. Unlike her, Erica was still in her prime.\n\nThere was no hell for a combat pilot quite like the one she was living in. She felt like the attendant at a filling station, watching the cars go by, but forever kept away from the action. Despite the reams of requests, she was stuck, away from the adrenaline rush and excitement of active duty on a combat vessel. She held her hands up and examined them, turning them from front to back again and again. \n\nShe saw long, delicate fingers, with the nails cut short. The skin was still soft and supple, but for how much longer? she wondered. Time, the fighter pilot's most deadly enemy stalked her now. One day those hands would no longer react with lightning speed. The reflexes would fade and the strength would succumb to the ravages of old age. She still had them now and wasting away here while a major war was being fought was slowly killing her. \n\nEvery one hundred and twenty days she sent a new batch of freshly minted pilots to the combat zone in Delta quadrant. She had seen the casualty lists and knew that over eighty percent of them never lived to draw their first month's pay. The Trog were the first race humanity had met who matched them in both technological accomplishment and ruthless determination. \n\nThey actually called themselves the Slanesshs, but the Terrans referred to them as troglodytes, which had been shortened to Trogs. They were a reptilian race, taller and more heavily built than humans and covered in a scaly greenish hide. They breathed an atmosphere that was very similar to human tolerances and thus, both races coveted the same kind of planet, although the Trogs couldn't survive on the more arid worlds.\n\nExploration had led to incidents, incidents to threats, threats to confrontation and now a hot war raged. The Trogs had a numeric advantage, the Humans a slight edge technologically, and for the past decade they had been killing each other with zealous abandon. Stalemate gave way to frustration and frustration lead to atrocities on both sides. The war was basically a bloodbath, centered on the jump bottleneck at Yalo. Each side felt it could win a war of attrition, so the plasma kept flying. \n\nYalo was the key. The only planetary system with a star that provided enough energy to recharge a jumpship's engines, that was strategically placed to bridge the great stellar void called the abyss. Whoever controlled it could make incursions into the other's space with impunity. It was said that more beings had lost their life in that system than all the other systems in space combined. Erica doubted that, having some personal history that let her know better, but the Terran media repeated it like it was gospel in all the war newscasts. \n\nErica brushed a lock of her long blonde hair from her face as the door to the room slid open on almost silent servos. She didn't have to ask who was there, she already knew. Sgt. Major Tucker. With his arrival she scooped up the folders on the polished table and tucked them under her arm. Erica rose smoothly, with a fluid grace that was almost feline and turned on her heel.\n\n\"They're landing now,\" the grizzled veteran said in his customary soft voice.   \n\n\"Bring 'em to the squad bay, Earl, and don't spare the fists. We need to toughen them up more, we're losing so many.\"\n\n\"Not your fault, Boss, don't even go there,\" he said quietly.\n\nTen years together did something to people. A mutual respect developed that was almost as deep and strong as lovers shared. Erica was a tough disciplinarian, and a stickler for the regs and military courtesy. The big NCO was the only man on the ship who could even think of being so familiar with her except the captain. To everyone else she was a straight-laced, no fun, kill-joy of an old bitch. Old tight-ass, they called her, though never when she was in earshot. \n\nTucker had watched over her when she was a raw recruit, drug her ass out of uncounted dives after William had been killed, and saved her from demotion or discharge on a dozen occasions or more when she was younger. It was something they never mentioned, an unspoken understanding that her gratitude was beyond words.\n\n\"Mercy. Just be prepared to ride 'em hard. New policy is in effect, we are getting criminals with high aptitude scores who are given a choice of prison or the military again. We aren't winning this one, Earl, and the Authority heads are getting desperate.\"\n\n\"You got it, Boss,\" he said before turning and disappearing into the cold steel hallway. \n\nErica glanced out at the stars one last time before heading for her office in the squad bay.\n\n<center>***<center>\n\nLeigh Collins trudged down the shuttle gangway and reluctantly fell into line with her group, purposely standing a half step back from the crisp imaginary line the others toed. While they all gawked at the ship she kept up an air of disdain. What a bunch of rubes, she thought. There was nothing impressive to her, the shuttle landing, massive machines, or scurrying techs. Even the raw size of the cavernous bay made no impression upon her.\n\nUnlike most of her fellows, she hadn't volunteered and couldn't give two shits about getting her citizenship. She had grown up on the hive world of Taltos III and before her twelfth birthday she had become an accomplished thief. She would still be there, happy and living below the official radar screen, if her shithead of a boyfriend hadn't ratted her out to save his own skin. She still owed him and he had better be praying she didn't survive this ordeal. \n\nLeigh zoned out as the ship's PR officer began to read a prepared speech. She had been sleeping in an abandoned storage room when they came for her. Tall, grim men in black armor and helmets that covered their eyes. The dreaded TAC unit, storm troopers of the Terran Authority's tenuous grip on the planet.\n\nShe had fought of course; her preternatural reflexes and experience from years of living on the mean streets, coupled with her desperate fear had almost gotten her out of it. She had dropped five of them, and was squeezing past the last one standing when he tagged her in the ribs with his stun stick. \n\nLeigh remembered the pain, like a million needles being jabbed into her body, especially in her nipples, mouth and pussy. She had come to in a holding room, with her hair frizzed and everything she owned, including her teeth, aching. They had stripped her, bathed and disinfected her and tattooed a number on her left hip. She was still disoriented when the door to the ten by ten holding room had swung open and a burly man in uniform had walked in.\n\n\"Got a name girl?\" he grunted as he eased his bulk into the chair on the opposite side of the table that was the room's only furnishing. \n\n\"Speak up.\"\n\nWhen she remained grimly silent his face softened slightly and his body language changed minutely. Less threatening, but she could tell he was still alert.\n\n      \n\n\"Look kid, I don't need a name, I can just call you by your number. Hell, you don't even have to talk to me, but it would do you well to listen to what I have to say.\" \n\n\"Leigh. My name is Leigh.\"\n\n\"That's better. Okay Leigh, I'm Sergeant Brannanberg. I don't think you need me to tell you, you're in deep shit.\"\n\n\"Why? I haven't done anything,\" She bluffed.\n\n\"Shit girl, half the whores on Balefeas didn't do anything. Most of 'em were just like you, unregistered and grabbed for some petty crime.\"\n\n\"What's that got to do with me?\"\n\n\"That's where you're heading, kid. First they'll open your head up and stick a nice nano processor in there, it'll make you pliable. Hell, you won't be able to say no. Probably give you a boob job while you're out since the titty fairy wasn't kind. Then it's off to a life devoted to getting off any swinging dick that has the creds your owner demands for your services. Should be easy on you at first, you're young and pretty. But after a while, you'll end up in one of the sleazy places, blowing sailors for a cred or two and engaging in the most depraved shit your little mind can come up with for a fiver.\"\n\n\"I'll die before that,\" she said. Her voice was steady, but she had heard of Balefeas. Her body was suddenly covered in a clammy sweat. No one deserved that, especially not her.\n\n\"Nah, the NAC will keep you from harming yourself, unless a paying customer demands it. Hell, I saw a girl take a horse up her ass there when I was still a wet nose with the one-oh-eight.\"\n\nDespite her wish not to, she knew in her heart he was being truthful.\n\n\"Why are you telling me all this?\" she asked. She could hear the fear in her voice and hated herself for showing weakness.\n\n\"Well, you're quick. Damned quick. I watched the vid of you taking out most of the TAC team that went to get you. Not bad for an untrained kid. I'm the recruiter for the Space Marines here, but I also fill a small quota for the Naval Air Service if I get one who qualifies.\"\n\n\"And?\" she asked cautiously.\n\n\"And if you have the brains to go with the reflexes, this is your lucky day,\" he said, fishing a sheaf of papers out of his black brief case and tossing them on the desk.\n\nLeigh looked them over, but she had never learned to read. The man seemed to understand and took them out of her hand.\n\n\"Full pardon, for all crimes against the authority. Registration, as a full human, don't bother telling me you aren't, I know that, doesn't make a fucking bit of difference to me and application for citizenship.\"\n\n\"What do I have to do?\" she asked tentatively, expecting the worst.\n\n\"Just put your X on the dotted line, kid. You get the pardon, registration and an application for citizenship. Of course you have to earn that, five year commitment to the Navy. Odds are you won't live long enough to draw your first paycheck, but it beats sucking cock for the next thirty years don't it?\"\n\n\"Some deal.\"\n\n\"If we weren't getting our asses handed to us by the Trogs, it wouldn't even be offered, sweets. You'd already be on a transport and sporting a shaved head, big tits, some new hardware and a different attitude.\"\n\n\"Five years and I'm done?\"\n\n\"That's the deal. Don't expect to live to see it though, unless you're even better than I think you are,\" he said, extending a pen to her.   \n\n\"You're mighty fucking encouraging,\" she snapped.\n\n\"I save the ass kissing for people who have a choice, kid. Honor, glory, duty, great pay, see exotic places, the girls will be creaming their panties over you in the uniform, all that crap. Why not be straight with you? If I told you, you were signing up for a firing squad, I figure you'd take that over the life of a pleasure girl.\"\n\n\"Life sucks,\" she said resignedly and made her mark on the line.\n\n\"Beats the alternative, kid, always remember that,\" he said as he stuffed the papers in his briefcase and stood up. \n\n<center>***</center>\n\nKatie stared around the huge landing bay with wide eyes. She had never seen anything remotely like it back home. She had chosen the space corps to do her five years of service right after graduating from intermediate school. Well, chosen might be a bit of an exaggeration. The recruiter had been tall, handsome and dashing in his aviator's uniform. His pitch had been smooth and polished, but the whole time he had been staring at her with come hither eyes.\n\nHer pussy still tingled when she remembered meeting him after the job fair for tea at the local pub. Tea had given way to ale and she had been pretty tipsy when she agreed to go back to his room for a night cap. The night cap had tasted a little funny, but she was too far gone to worry about it.\n\nThe room had been cheap, but to her eyes it was grand. He had wasted little time, getting her to sign on the dotted line, and then tossed the papers into a stack on the desk. She remembered his strong hands on her shoulders, pushing her down to her knees. She had felt so incredibly naughty as she undid his dress trousers and fished inside for his cock.\n\nShe was already well acquainted with the male anatomy and couldn't wait to see what this man had in his pants; she was sick of pale, thin boys.\n\nThe sergeant certainly didn't disappoint. He was easily two inches longer than the biggest she had ever had, and much thicker. She gently stroked the satiny skin, watching his pulse in the thick blue vein that ran the length of his cock. It was large and thick, with a pinkish purple head. She was still just watching and stroking him when he tangled his hands in her dark black hair and pulled her towards it. \n\nThe head bumped her full lips and she parted them, gently sucking it into her mouth. Katie swirled her tongue around the head, enjoying the strong masculine flavor. When the sergeant groaned, she began to stroke the shaft, sucking until her cheeks hollowed and using her tongue on the underside.\n\n\"God damn, who'd have thought it? A cocksucker like you on this backwater,\" he exclaimed. \n\nKatie preened at the praise and redoubled her efforts, twisting her hand on the shaft as she stroked and cupping his balls with her other hand. Soon he grunted, and his hands locked onto her head. He began to pump his hips, slowly fucking her face. Each time his cock head hit the back of her throat she would gag, but she was loving it.\n\nWithout warning he pulled her to her feet and undid her tight pants. He shoved them to the floor and then put his weight against her, riding her down on the bed. Lying with his weight on her, he reached between their bodies, grasped his cock and rubbed it up and down her moist lips. When he found her entrance he thrust himself forward, driving four inches of his hardon into her yielding body.\n\nKatie gasped, and then moaned as he sank the rest with another thrust and began to stroke into her. She wrapped her legs around him, raising her hips to meet his thrusts. Soon she was groaning and whimpering as he relentlessly pounded into her. It felt indescribable and she realized what she had thought of as good sex was child's play. \n\nHe had come with little warning, pumping his load into her and rolling off while she was still panting. Her head was foggy and she thought this was how a girl was supposed to feel after sex, before the darkness had rushed in to claim her.\n\nShe awoke alone in the room, with someone pounding on the door. She had scrambled into her pants and opened the door, only to be grabbed by a strong man in shock armor who twisted her arm and lead her downstairs to a bus. \n\nHe had been a great fuck, but she swore she would rip the son of a bitch's dick off if she ever met him again. They hadn't even let her tell her folks good bye. Just a quick trip to the space port and she was on her way.\n\nBastard.\n\n<center>***</center>\n\nRachel Loudelk's mind was also drifting as the PR officer's speech dragged on and on. The tall girl with dark hair and bronzed skin stood head and shoulders above the girl on either side of her. Even the one size fits all, unisex, gray jumper she wore couldn't disguise her lush curves or proud breasts. \n\nUnlike her fellows, she hadn't volunteered for service. She was the eldest daughter of a tribal elder on Crotius, a reservation world. Her people had a centuries old agreement with the authority. In return for letting them live their simple lives, without interference or exploitation, they sent a guaranteed quota of warriors each year. It was a mater of tradition and honor that the eldest child of each member of the council always went when they came of age. \n\nShe wore a small medicine pouch around her neck, a parting gift from her mother. It was also part of the agreement that she could wear it while on duty. Her people were the only members of the military who could wear non-regulation ornaments. She wore it with pride, and felt superior to those around her. They were all in it for the money, or the glory or personal gain. She was there as part of her people's warrior tradition that spanned back across the ages to when man hadn't even left the tiny ball of dust that had spawned him.\n\nShe was physically gifted and had breezed through boot camp, the mental games being child's play compared to the grueling training she had undergone while studying with her mother, a tribal shaman. Long before her drill instructors said so she was tough, capable and confident. She kept a cultivated aloofness among her peers, which many took for a feeling of superiority.\n\nBeneath the fa\u00e7ade she was a warm and vibrant girl and her gregarious nature chafed at the isolation. She was hoping to make friends among the pilot trainees, now that the mind games of basic were over and she could lower her guard. ",
        "<center>***</center>\n\n\"All right, listen up,\" a deep baritone bellowed.\n\nThe cadets were all snapped from the near catatonic state the endless speech had produced. The PR officer was smiling and saluted before he exited, leaving the standing on the pad with only a giant of a man in an NCO's uniform that had more stripes than any of them had ever seen.\n\n\"I'm Sergeant Major Tucker and for the next four months, your sorry asses are my responsibility. The officers will make pilots out of you, I'll make soldiers out of you. I want you ladies to get your gear and form up over by blast door C. You've got two minutes to get whatever it is you've got in there, out of your system, or I'll be taking it out personally. Move!\"\n\nLeigh moved slowly over to the gear bags and located hers. She shouldered it and moved over to the blast door with the rest of the excited cadets. Her contempt for her fellows was barely contained and was sufficient to keep anyone from introducing themselves.\n\n\"Form up, follow me,\" the sergeant bawled, then exited at a swift route step.\n\nThey had learned to march in basic, but Leigh would be damned if she would become a faceless cog in the Authority war machine. She intentionally stayed out of step. \n\n\"Halt!\"\n\nThe big man walked back to Leigh and stared at her from under the smokey bear hat.\n\n\"Did you forget to take your dildo out this morning, sweet pea?\" he asked with a big smile.\n\n\"No, Sergeant,\" Leigh replied, ignoring the suppressed giggles from her fellows.\n\n\"Well, are you just too stupid to stay in step?\"\n\n\"No, Sergeant.\"\n\n\"Listen girly, you got hot panties or something? You looking for some dick?\"\n\n\"No, Sergeant,\" she replied through clenched teeth. Everyone was staring and laughing at her now.\n\n  \n\n\"Well, sugar britches, why you trying to get daddy's attention then?\"\n\nLeigh was fast, incredibly fast, but she never even saw the backhand that sent her sprawling to the deck. Big, ham sized hands seized her jumper front and jerked her to her feet. She kicked out, landing a solid blow between the big man's legs. To her amazement he just smiled.\n\n\"Keep it up sugar, I like it rough,\" he said.\n\nShe was jerked up and slammed to the deck, the shock of her feet hitting so hard sent waves of pain up her legs and into her knees and hips. Before she could move he drove his knee between her legs. Leigh screamed, she had never felt pain like that. With total disregard the big man slammed her, face-first, into the bulkhead, causing her to see stars. Several backhanded slaps, delivered in rapid fire had her tasting blood. He beat her casually, unhurriedly, and without the faintest hint of emotion. \n\nIn her life she had been beaten by several men. Angry men with fire in their eyes, aroused men with lust showing on their faces and even a sadist with unholy ecstasy as he inflicted pain upon her. Tucker's face showed nothing, he might have been swatting a mosquito for all the concern she saw. It was calculated, brutal, and at the same time almost casual. It was the most frightening thing she had ever witnessed.\n\nHe stepped back and executed a spinning kick, driving the sole of his combat boot into her stomach. She fell to the deck and retched. Her body screamed and she tasted the smoky taste in her mouth that let her know a tooth was broken. He pulled her up to her feet by her jumper and locked eyes with her.\n\n\"Now darling, you fall back in with these other twats and keep up. If I have to stop this collection of split tails again, I'll pull every hair out of your cunt while the whole damn ship watches on closed circuit.\"\n\nLeigh staggered back to her place and fought the nausea and dizziness. She was disoriented and in pain, but she kept up, certain of only one thing. If she screwed up again, he would do exactly as he promised. \n\n<center>***</center>\n\nHolly Dupree marched along, occasionally stealing a glance at the small girl struggling next to her. Holly was from old earth, the scion of a very rich family. Her parents had protested violently when she chose to earn her citizenship in the Navy, rather than taking the civil service job they had arranged for her.\n\nShe was regretting her idealism now. The beating the small girl had taken could only be described as brutal. Holly had never even been spanked before she arrived at boot camp. In the thirteen weeks there she had been slapped repeatedly, punched, kicked, and pinched. Her big breasts had seemed to be an inviting target and they had been so bruised and swollen before boot camp ended she had gone up a cup size.\n\nThe DIs had been merciless, and she had always been a target. It wasn't that she was clumsy or dumb, just that she had never had to do for herself. There was a maid back home to clean up and make the bed. A valet to help dress her and a cosmetologist to do her makeup and hair. \n\nDespite the abuse, she had persevered and was now excited to be training on fighters. Her black belt, or primary drill instructor, had made her take the aptitude test a second time, not believing how well she had scored. The greatest thrill of her young life had been marching up to him after graduation and receiving her first salute from the son of a bitch.  \n\nThe dark haired girl stumbled and started to fall. Holly's hand shot out, grabbed a handful of her jumper and kept her on her feet. \n\n\"Lean on me,\" she whispered urgently. \n\nThe girl looked up at her though pain glazed eyes and nodded dully. Holly slipped her arm around the girl's small waist and half-led, half carried her through the maze of corridors.\n\nShe wondered why she was helping; the girl had been so mean tempered on the flight no one would talk to her. Then she remembered boot camp. The first five k run. She had been the one stumbling then and if it hadn't been for another dark haired girl, doing for her exactly what she was doing now, she would have washed out on that hot summer day. \n\nShe had paid her back, on a hot sultry night. Allowing the little butch to suckle and nuzzle her big tits until she fell asleep. She had thought that evened the score, but she realized now she was really evening it. Helping someone in need with no expectation of reward. As they filed past the Sergeant Major, into the squad bay, Holly held her breath. He saw them, she could see it on his face as plainly as day, but he said nothing.\n\n<center>***</center>\n\nMindy closed her eyes as her hips moved into the fast driving rhythm she knew Leia adored. The room was dark and smelled heavily of aroused women. Sweat dripped off her lean body as she drove the thick dildo into the lush redhead beneath her.\n\nMindy was naked, save for the red harness around her waist. Leia wore a thin olive drab tee-shirt that covered her full breasts and the thick, fire proof socks all techs wore. Mindy was between Leia's splayed legs, holding her body up on her arms and working the big dildo into Leia's tight, pink pussy.\n\nThe insistent alarm continued to buzz, but for a few more strokes they both pretended it didn't exist. With a soft moan and sigh, Leia came. Her pale body arched and her hips shot up to meet Mindy's. The lithe blonde collapsed onto the redhead's soft body and for a timeless moment they lay still.\n\nMindy rolled off her body and lay panting as the redhead sat up. \n\n\n\n\"Thanks love, nothing like a quickie to make the shift seem short,\" she said with a giggle.\n\nBefore Mindy had even caught her breath Leia wiggled into her coveralls, leaned over and kissed her damp brow and slipped out of the room.\n\nThe tall girl rose and unbuckled the harness, tossing it and the slick dildo into the dirty clothes hamper. She showered quickly and slid on a pair of issue boxers. An issue tee and issue knee stockings came next. From the closet she retrieved the long black trousers, grey blouse and black dress jacket. Another induction day, another class, another night of missing her girl. What a fucking way to live, she thought as she placed her cap on her head and sprinted for the squad bay.\n\n<center>***</center>\n\nRaven \"Lucky\" West sauntered into the squad bay. She wore the same dress blouse and trousers as Mindy, but instead of a dress jacket, she wore a leather bomber's jacket. 151st fighter group, Hell's Angels was stenciled on the back, along with a logo of a starfield with a scantily clad female devil on a motorcycle. On the left sleeve was a stylized hand of cards. Five of diamonds, two of clubs and three aces of Diamonds. \n\nOnly an ace with over fifty sorties to their credit could wear the jackets, in lieu of a dress jacket. The patch was her badge of honor, the five and two representing sorties flown and the three red aces each represented five confirmed kills. Hearts indicated ten, Clubs twenty. An ace of spades represented fifty. Any pilot who saw her would know immediately she had flown fifty two combat sorties and scored fifteen confirmed kills. \n\nLucky wore hers mostly because \"Surfer\" Gibson couldn't and it gave her a leg up in the pussy contest. Lucky was a tall girl, with wide hips and heavy breasts. Her face was pretty, but not stunning and the glasses and long brown hair softened her appearance a bit. She was excited today, more so than she usually was with an incoming class. She had seen the new policy regarding training. Thirty fresh bitches, straight from planet side and not a swinging dick to be seen anywhere they were allowed to go. A dyke's dream come true. She couldn't wait to get a look at them and decide which one she was bedding first.\n\n\"Surfer\" Gibson was a tall, lithe girl with a toned body and jet black hair. She was stunningly beautiful and the uniform showed off her trim body to best advantage. She was casually leaning against an RFD MkII trainer and had the same hungry look Lucky was sure she was wearing. The two butch flight instructors had a friendly standing wager. They kept score on the recruits they bedded during each four month cycle. Whoever lost had to play the bitch for the other during the two week down period between classes, when they kept each other company.  \n\nWhen Captain Davies entered the bay from her office they both came to attention. Lucky suppressed a grin when she noticed how gingerly Surfer was moving. She had gotten in her last fuck before the new class arrived less than an hour earlier and she could still see visions of the lithe girl's upthrust ass as Lucky's big red dildo pounded into it.\n\n\"Ladies,\" Erica said with a nod.\n\n\"Captain,\" Lucky replied with a salute.\n\n\"Boss,\" Surfer replied before saluting.\n\n\"Where's the Goose?\" Erica asked after returning the salutes.\n\n\"Here,\" Mindy called as she entered the squad bay at a trot. \n\n\"They should be here any minute. I don't need to tell any of you we're taking a beating out there or that our pilot losses are unacceptably high. Command is asking us to put more emphasis on defensive formations and evasive maneuvers. Tucker will enforce stricter discipline. Goose, they aren't hitting what they shoot at, that's the word from the field, any ideas?\"\n\n\"Yeah, take the skirts off and turn 'em loose on real time targets. You're never going to learn gunnery shooting at stationary targets and drones,\" she replied. \n\n\"Lucky?\"\n\n\"I agree, Captain. Letting them go live is going to result in more training accidents, but you can't substitute for the real thing, even the simulators aren't the same.\"\n\n\"Surfer?\"\n\n\"If we are going to go live, lets change up the flight training and stress landings first.\" she replied thoughtfully. \"That's where we have the most accidents.\"\n\n\"I don't know,\" Erica said thoughtfully.\n\n\"It's up to you, Boss,\" Lucky said, \"but if you want them to survive longer in combat, you're going to have to risk losing a few in training. That's the way it always works.\"\n\n\"All right, I'll run it by the man.\"\n\nThe sound of marching feet echoed in the squad bay, suspending the brief meeting. Tucker marched them in sharply.\n\n\"Platoon, halt! Left face! At ease!\"\n\nErica surveyed them, the expectant faces and bright eyes. She read them all, from the farm girls to the city girls, the cocky to the shy. It had become routine for her. And it killed her to know she would be sending most of them to their deaths in about four months. One in particular caught her eye, her face was bloody and she marked the girl as a troublemaker if she had already earned Tucker's ire.\n\n\"Welcome aboard TAS Yorktown. I'm Captain Erica Davies, Boss to you all. I know you're all tired, so I'll keep this brief. I assume Lt. Commander Haniford has already bored you to tears,\" she said, waiting for the titters and giggles to die.\n\n\"Yorktown is the oldest ship in the fleet, the last with a fully functioning civilian city onboard. York is completely off limits to you all, for now. Anyone caught there will be jailed. No exceptions. Don't say you weren't warned.\"\n\nShe looked at them for a long moment before continuing.\n\n\"We'll be your training crew, so let's get the introductions over, and let you draw your temporary bunking assignments. I'm Yorktown's Air Boss, anything that flies is my responsibility. I've been a combat pilot for longer than most of you have been alive. Lucky?\"\n\nThe stacked woman moved confidently to the front of the formation as Erica stepped back.\n\n\"All right girls, my name's Raven West, but you'll call me by my call sign, Lucky. We do things a little different here, you'll each get a call sign and you'll be known by that for the rest of your training period. Get used to it, get used to responding to it. In combat, it's what you will hear from your wing mates and you need to answer to it as naturally as you do your given name.\"\n\nShe paused briefly, and then continued.\n\n\"I'm the senior flight instructor here. I've got five years combat experience and over fifty sorties. I can teach a monkey to fly one of these birds, and I can train you if you're willing to learn. Surfer.\"\n\nThe dark-haired girl glided to the podium. She surveyed them quickly, settling in on a tall, busty blonde for her primary target.\n\n\"Marina Gibson. Surfer to you. I'm also a flight instructor, but my primary job will be to teach you unarmed and armed combat techniques, as well as a physical training regimen to get your bodies ready for the Gs you'll be pulling. I have four years combat experience and have killed a Trog, hand to hand. Goose.\"\n\n\"I'm the Goose,\" she said, from her place near one of the planes, \"I'll be your primary gunnery instructor. If you don't kill them, they will kill you. Lucky and Surfer will show you all the acrobatics, with me it's deadly serious. I wash out half of those who fail each training class. Anyone can fly one of these things, but it takes dedication to be a good shot. If I think you aren't as serious as you need to be, I'll form forty-four your ass, most ricky tick. Tucker.\"\n\n\"I'm Sergeant Major Tucker. Don't have no fancy call sign. You'll call me Sergeant Major. First one to call me sir, I'll take you across my knee and tan your ass. I'll teach you how to perform effectively as a unit. Discipline here is my responsibility and you girls are going to be as disciplined as the emperor's guard, mark my words.\"\n\n\"All right,\" Erica intoned, \"fall out, find your rooms and stow your gear. I'll be conducting interviews this afternoon and all of tomorrow. You have free run of the flight crew service area. Get to know your way around. Come Monday, be ready to start learning. Dismissed.\"\n\n<center>***</center>\n\nThe express lift that took her from the flight deck to the bridge rose soundlessly. Only the slight sense of motion in her stomach gave away that she was moving at all. It rose five hundred decks in the space of a minute before it stopped with a gentle bump and the doors hissed open.\n\n\"Air Boss on deck,\" the sentry called out before she even got out of the lift. Everyone on the bridge snapped to attention.\n\n\"As you were,\" she said and the crew went back to work. \n\nThey were all young and fresh faced. Command rotated them every six months; just about the time they started to figure out a bridge crew on a parked ship was about as useful as tits on a boar hog. This crew had just arrived with her cadets and would get a thorough, if narrow, taste of life on the bridge of a star ship.\n\nCaptain Quarrels sat in the padded skipper's chair, with his ever present cup of tea. He was in his eighties now, at that point where you either get promotion to flag rank or start thinking about life after the service. He was qualified, but knew he wouldn't see another promotion. Command of the Yorky was a highly prestigious way of easing you out. His days in uniform were numbered, just like hers, and the two career military personnel shared a bond. \n\n \n\n\"Captain,\" she said, offering a salute.\n\n\"Erica,\" he replied with a mischievous smile.\n\n\"Permission to speak to you in your office?\" \n\n\"Of course, of course, come along young lady,\" he said, rising stiffly and limping to the blank door that marked his office. Inside the room was sumptuously appointed, with real wood furniture and real silk upholstery. He sat behind his big desk and smiled easily.\n\n\"What can I do for you? Haven't decided you're hard up enough to take me up on my offer of bed and breakfast, I suppose.\"\n\nDespite herself Erica laughed. He drove her to the brink with his lack of formality, and made passes at her that were so intentionally clumsy they were comical. One day she swore she was going to take him up on it, just to see his face, but not today.\n\n\"I suppose you saw the directive from command?\" \n\n\"Which one? The one that reprimanded the chef for cooking too much or the one that directed me to institute harsher measures to stop fraternization, as if I can control hormones with orders, or the one directing me to begin live situation training, forgetting the ship hasn't moved since before I was born?\"\n\n\"The one directed at the flight crew,\" she said, shaking her head.    \n\n\"Oh come on, smile. Yes, I saw it. Stupid. It isn't as if you are sending them off half-cocked, so to speak.\"\n\n\"Perhaps we are,\" she began.\n\n\"Poppycock. Utter balderdash. You do as fine a job training these children as anyone in the fleet.\"\n\n\"I'd like your permission to go to live fire gunnery drills, sir.\" \n\n\"Do you think that's wise?\" he asked, suddenly serious.\n\n\"I think it's the only way we are going to give them an edge. The instructors all agree. I'm just concerned about safety.\"\n\n\"You're the Air Boss. I'll rubber stamp whatever decision you make, my dear. I too, think it's the only way we can give them a more realistic training program, but I would never have stepped on your toes to suggest it...\"\n\n\"Thank you, sir,\" she said, saluting. \n\n \n\nHe smiled and gave her a wave as she exited.\n\n<center>***</center>\n\nLucky, Mindy, and Surfer all sat at the wooden table and downed beers as fast as Bel, the crippled bartender, could bring them. It was their last evening of liberty until after the initial flight training was completed and as usual, they were tying one on, speculating and telling lies. Bel sat with them often, as much one of the girls as any man could be. In fact, Lucky had dubbed him an honorary lesbian. He wore that title with as much pride as he did the small medal of honor around his neck.\n\nHis bar was the place where the pilots on board hung out. Small, smoky, and filled with memorabilia from his flying days, he had bought it off the last owner, who had also been a combat veteran. There were no patrons this early and the bar girl knew better than to go near Lucky or Surfer when they were drinking. The last time she had found herself mildly drunk and sandwiched between them. Not something she would normally mind, but the two of them were so competitive she had missed three days of work before she could walk straight afterwards. \n\nBel was a short man, with thick arms and a barrel chest. He had been crippled when his Executioner had been too close to the line of fire of a battleship's main battery. Both legs had been vaporized below the knee and he now got around on prosthetics. He passed more tankards around and eased into a chair.",
        "\"Indian girl is hot,\" Lucky commented.\n\n\"Straight as an arrow, too,\" Goose observed.\n\n\"Ya think? I kinda got a good vibe from her,\" Lucky went on.\n\n\"Indian, shmindian, I can't wait to get between the legs of that blonde bombshell,\" Surfer added.\n\n\"She's straight, too,\" the Goose predicted.\n\n\"Honey, there ain't none of 'em straight once I get between their legs. She'll be giving me head before she knows thrust from yoke, bank on it,\" Surfer said with almost arrogant confidence.\n\n\"Go ahead, set your sights on her, it won't be my ass Lucky is tearing up,\" Goose said, smiling evilly when Marina blanched.\n\n\"You bitch,\" she hissed at Lucky. \n\n\"Not me, I swear it,\" Lucky said holding her hands up even as she started laughing.\n\n\"She didn't rat on you. I know how a girl with a well fucked ass moves. I'm not above taking the back door from time to time and Leia loves it,\" Goose said while pouring another drink.\n\n\"You are so whupped,\" Surfer said, trying to change the subject.\n\n\"Oh Lucky, that's it, tear me up baby!\" the Goose cried in a reasonably good imitation of Surfer when she was playing bottom.\n\n\"One of these days, Goose, I'm going to tear your ass up,\" Marina threatened.\n\n\"When did you girls get so into ass fucking?\" Bel asked.\n\n\"It wasn't my idea,\" Surfer said petulantly.\n\n\"You've got a cute ass, you didn't complain when I started,\" Lucky said.\n\n\"Shut the fuck up,\" Surfer growled. \n\nLucky managed a big shit-eating grin while Bel and the Goose hid theirs behind their steins. A group of techs came in and Goose checked them out, disappointed to see Leia wasn't among them.\n\n\"How bout that farm girl, the one with the nice ass?\" Goose said.\n\n\"Straight,\" both Lucky and Surfer said in unison.\n\n\"I think you're both wrong.\"\n\n\"I wonder if she's a natural blonde,\" Surfer said, returning to the current object of her attention.\n\n\"It's probably shaved, she looked pretty freaky to me,\" Lucky opined.\n\nAs the hours passed, their speculation grew from orientation to shaved or natural to wild and freaky or missionary only. The bar filled, then slowly emptied and still they carried on. It was well past 03:00 before they staggered out, leaning on each other for support.\n\n<center>***</center>\n\nLeigh had been dreading it for several hours when her turn came. She entered the Air Boss's private office and sat stiffly in the chair before her desk. The tall woman took her time going over Leigh's dossier before looking up.\n\n\"Nasty shiner, you've got there,\" Erica commented.\n\n\"Yes ma'am, should have been watching where I was going,\" Leigh replied instantly.\n\nShe wasn't a faceless cog. But she wasn't dumb either. Alleging on the Sgt. Major would get her run out of the service, and Balefeas was waiting if she washed out. \n\n\"At least, you're not a rat.\"\n\nErica looked into the recruit's eyes and felt her breath catch in her throat. There was something there, something disturbing. She was an excellent judge of people, but this girl was an enigma. And something about her was disturbingly captivating.\n\n\"Well, recruit, I've looked over your folder. Pull your weight, learn the job and respect your fellows and the past will carry no weight with me. Screw up again and I'll personally see you on the next transport back to that shit hole you were born on, and you know what that means as well as I do.\"\n\nErica saw the anger flare in her eyes, and felt the challenge.\n\n\"Permission to speak freely, recruit. Get it off your chest, it's the last time you'll be free to show your ass around here,\" Erica said, coming around the desk. \n\n\"I don't care about your fucking navy. I'm not intimidated by your trained gorilla. And I'm not intimidated by you!\" Leigh shouted, before launching herself at the tall woman. \n\nLeigh was angry. Angry with the world for turning on her, angry at the Sergeant Major for embarrassing her, angry at herself for losing it, knowing full well she was throwing her life away, but more than anything she was angry with this tall woman, who brought home to her in a threat, just how out of her control her life had become. Leigh's sudden attack caught Erica off guard and the short girl quickly caught both her wrists. \n\nErica drew her right arm back quickly, while forcing her left arm out. This pulled Leigh close to her body, and allowed the Air Boss to use her weight. She pressed forward with her chest, but the small woman surprised her, releasing both of her wrists, sliding under her arm and locking her arms around Erica's waist. Erica grimaced, and then used her legs to propel herself backwards. The lip of the desk hit Leigh in the small of her back, and both women went across the desk, landing in a heap on the other side, as the roller chair shot out of their way and things crashed to the ground. \n\nThey came to their feet, but Leigh still had all the leverage. She was suddenly aware of how soft the tall woman's body was in her arms. She smelled the faint scent of lilacs from her hair, and saw her pulse beating in her elegant neck. There was something disturbingly sensual about her commander now and Leigh felt an unfamiliar thrill at being in control.\n\nErica smashed back with her elbow and the air left the small woman's lungs in a rush. A second vicious jab and Leigh released her hold, realizing she could be battered in this position with no way to defend herself or exert control over the taller woman. Leigh kicked free of Erica's body, knocking the tall woman to her knees. Both women came to their feet, facing each other and panting.\n\nThey circled warily, each looking for an opening. Leigh saw one first, skating to her left she feinted towards Erica's midsection, and then threw herself at the tall woman's legs. It should have knocked her down, but Erica had not been fooled by the feint and drove her knee up, catching Leigh squarely in the chest.\n\nThe wind was knocked out of her and before she could get a breath, Erica kicked her hard in the ribs. She rolled over onto her back and was staring down the barrel of Erica's dress pistol. Leigh's anger burned out as suddenly as it had risen and she relaxed on the floor, trying to breathe.\n\nThe door opened and Tucker stepped in. Seeing the big man, Leigh died inside, realizing she had just let her temper seal her fate. She wondered if the Air Boss would shoot her. Suicide by design was better than what awaited her.\n\n\"MPs are on the way, Boss,\" he said. Leigh noticed his voice was different, softer and deferential, almost meek.\n\n\"Belay that.\" Erica said, still breathing hard.\n\n\"What'll I tell 'em?\" he asked, cocking his head and giving her a quizzical look.\n\n\"Tell 'em to get the boys from Bio down here, I saw a rat. And get this piece of shit out of my office,\" she said, indicating Leigh with her boot toe. Tucker nodded, reached down and bodily lifted Leigh by the scruff of her neck. He walked out of the office, with the small woman's feet dangling two inches off the floor.\n\nAs the door closed four men in shock armor came running around the corner. Leigh found herself with her feet on the floor and stood there, weighing her chances of making a break for it. \n\n\"Relax, boys,\" Tucker said easily, \"False alarm, the Air Boss has a furry visitor. I'll put in a call to Bio, sorry to have shook you out,\"\n\nThe leader smiled and took his helmet off.\n\n\"Don't sweat it, Sergeant, first action we've had in months. I'll need a signature though,\" he said, pulling a pad from his back pocket. \n\nTucker signed it and the MPs headed back, grousing about women and their frailties.\n\n\"What the fuck is going on?\" Leigh asked as Tucker propelled her towards her quarters with a shove.  \n\nThe tall man said nothing, until they were in Leigh and Rachel's room and he shut the door. With that same casual disinterest, he smashed his balled fist into her stomach, doubling her over. With both hands he caught her jumper and jammed her back into the bulkhead. Her head smashed into the wall and she saw stars. Her face was even with his and her feet were dangling well off the deck.\n\n\"I been doing this a long time, girly. I was whipping recruits into shape before you got your first period. I know your story and it don't mean shit to me. I've washed out hundreds of pukes like you, who don't belong in my beloved Navy.\"\n\n\"I don't want to be in your fucking Navy!\"\n\n\n\n\"If you'd rather be working on your back, just say the word,\" he replied in that strangely soft voice.\n\nBeing reminded of what she was avoiding by being here took the fight out of her. Her temper had nearly cost her again and she was still not sure why it hadn't. \n\n\"I'm sorry, Sergeant. I thought that was where I was heading when you showed up.\"\n\nHe looked long and hard at her, his brown eyes boring into her. Leigh met his gaze, even though she felt an overwhelming desire to lower her eyes.\n\n\"Sorry don't cut it here. You got a chip on your shoulder the size of this ship and you've been throwing a personal pity party since you landed. Woe is me, I'm so put upon. Everybody hates me, guess I'll go eat worms, Boo hoo hoo,\" he said with sarcasm dripping from the high falsetto he used.\n\nLeigh saw contempt in his eyes and anger, but she also saw something that hurt even more, pity.\n\n\"I am being screwed over,\" she protested, but it sounded hollow even to her.\n\n\"Yeah, that's some screwing. That's twice the Boss has stuck her neck out for you. Twice she's risked twenty years of spotless service to keep you out of trouble. I'd have form forty-foured you from the get go, but I have less tolerance for uppity pukes than the Boss does\"\n\n\"I never asked her for any favors!\"\n\n\"No, your real tough, a real lone wolf. But she's done it just the same.\"\n\n\"Why?\" Leigh demanded.\n\nHe shook his head and sighed.\n\n\"You think you're the only one who ever came to the service to avoid Balefeas?\" he asked.\n\nTucker dropped her to the floor and, spinning on his heel, exited the room. For a long time, Leigh sat on the floor in shock.\n\n<center>***</center>\n\nErica was returning the things they had knocked over to their rightful place when Tucker slipped into her office.\n\n\"All square,\" he said.\n\n\"That girl is going to be the end of me, Tuck. I just feel it.\"\n\n\"Lotta rage in her. Lotta hate. Maybe too much to salvage. You're running a lot of risks, Boss.\"\n\n\"I know, Tuck, I know. But I can't condemn her to Balefeas without trying, you know I can't.\"\n\n\"I know. For what it's worth, I think she has the makings. I just don't know if she can let the hate go, but I've seen worse in my time. I remember this one hellion from Hell's Kitchen...\"\n\n\"That's enough out of you,\" she scolded.\n\n\"I haven't started yet,\" he replied with a grin, before exiting her office.\n\nErica sighed and collapsed in her chair. Leigh's file was still open before her. She had only to fill out a forty-four and she would be rid of her. Discipline case, unfit for flight training. It was that easy. Instead she scrawled 'attitude problem' in the notes field and tossed the folder in with the others. \n\nAs she sat there, she wondered if she was really taking chances because she didn't want to send the girl to a life of sexual slavery or if there was another reason.\n\nErica hadn't been physical with anyone since her fianc\u00e9 William had been killed. She was in her sexual prime and still she avoided men. But when the small woman's hands had locked around her waist, she had felt it. A thrill that had nothing to do with the danger.\n\nShe was very proper, but she wasn't dumb. She knew all about Lucky and Surfer's activates as well as the Goose's girlfriend. She had never felt herself attracted to any woman, but in the dark, quiet of her office, she couldn't get the small girl's face, especially those angry eyes, out of her head\n\n<center>***</center>\n\nThey all stood at attention in the big bay. It was the first day of training and a big day. Their numbers had already been thinned by three. Two medicals and one reassigned by the Air Boss after her interview. It was a big day for them for another reason. Today they got their call signs. A training call sign wasn't the same as the one your mates chose for you when you joined a group, but a surprising number of pilots kept the one they were given. This was because the call signs usually were tied to some personal trait of the pilot.\n\nThey all waited now while Tucker read out a list of infractions. No one was spared, everyone had done something wrong in the last forty-eight hours. Unlike boot camp there was no harassment for infractions, just a demerit. Enough of them and you washed out, so it was serious business. When he finished he stepped back, saluted Lucky, and marched off.\n\n\"Okay, girls. It's time.\"\n\nShe stepped up to Holly and saluted.\n\n\"Welcome to the one hundred and first training wing, Jugs.\"\n\nThe blonde rolled her eyes and Lucky winked, causing her to blush.\n\nKatie was next in line and waited expectantly.\n\n\"Welcome to the one hundred and first training wing, Lou.\"\n\n\"Why Lou?\" she asked in confusion.\n\n\"You remind me of the girl from the cartoon, watch that first step, it's a lou lou,\" Lucky replied with a smirk.\n\nOn down the line she went, when she stopped in front of Rachel Loudelk she paused.\n\n\"As I understand it, you Indians already have a warrior name. What's yours?\"\n\n\"Little Cloud,\" she replied without hesitation.\n\n\"Cloudy it is then, welcome to the one hundred and first training wing.\"\n\nShe paused in front of Leigh a few moments later.\n\n\"Had one for you, but Tucker insisted, so welcome to the one hundred and first training wing, Rebel,\" Lucky said, with a wink.\n\nWhen she finished with the unofficial ceremony, Lucky walked over to a table that had been set up and grabbed a clipboard.\n\n\"Listen up, girls. The basic unit in the Terran Air Service is the flight. Five fighters make up a flight or four bombers. Flights are arranged into commands, commands into groups, groups into wings and wings into flotillas. There are enough of you for several flights, so we are going to break you up that way to begin training. You'll each be assigned a flight for the duration of training. You'll bunk together, attend classes together, and train together.  \n\nIn your training, the instructor will assume the position of fight leader. For you girls who end up short sheeted, an extra instructor will fly. When I call out your names, get to your quarters, get your gear together and report back. Do it as a group, you'll be reassigned rooms together.\" \n\n\"Cloudy, Jugs, Lou, Rebel, group one.\" \n\nShe waited until they had made it to their rooms and grabbed their gear.\n\n\"Boxer, Red, Wolf, Tease, group two.\"\n\n<center>***</center>\n\n\"I still like vixens,\" Jugs said hopefully.\n\n\"No fucking way, I know it's cute and all, but I'm not calling myself a bitch,\" Cloudy responded.\n\nThey were sitting in their room, discussing what to call their flight. Cloudy sat on her bunk in just a tee and the white cotton panties they were issued. Her long black hair was worn in a pony tail and even after weeks with no sun, her skin had a golden bronze tone to it.\n\nLou sat next to her, wearing the simple bra and boxers she had been issued. She was tapping her foot on the floor and had a thoughtful expression on her face. Her skin was pale. Next to the big Indian, she looked like a ghost. \n\nJugs sat on her bunk across from them, topless and wearing her BDU bottoms. She seemed totally at home with her large breasts bared and no one seemed inclined to ask her to cover them.\n\nRebel lay on her bunk above Holly's head, still fully clothed and staring at the ceiling. \n\n\"I suppose the flying circus is too long?\" Lou said.\n\n\"Yeah, Surfer said one word, at most two,\" Holly replied.\n\n\"Bollocks,\" the country girl exclaimed.\n\n\"We're supposed to learn to work together, but here it is past midnight and we can't even agree on a name. Rebel, you've been pretty quiet, what do you think?\"\n\n\"Black.\"\n\n\"Black what?\" Holly inquired.\n\n\"Just black,\" she said with a shrug.\n\n\"Black flight? That's not half bad,\" Cloudy said.\n\n\"Works for me,\" Lou said, standing and removing her bra before mounting the top bunk.\n\n\"I still like vixens,\" Holly said as she wiggled out of her BDUs and got under her blankets.\n\n\"Off,\" Cloudy commanded and the lights died.\n\nRebel lay quietly with her hands behind her head, staring up into the inky blackness. In time, she was able to make out the soft breathing and sleep induced mumbles of her mates. She was desperately tired, but after last night, she was even more afraid of sleep.\n\nShe wasn't really sure why she was afraid, the dream had been far from scary. It had actually been her first really erotic dream. She had wakened with achingly stiff nipples and the uncomfortable wet feeling in her boxers that she associated with dressing quickly after sex. All in all, it had been very pleasant. The problem was the object of it had been her tall, straight-laced commander and that revelation had been far from pleasant.\n\n<center>***</center>\n\nThe lights came on automatically and reveille was piped into their room. Boot camp had made its impression and they all rolled out, making bunks and quickly dressing. They moved quickly to join the other girls lining up outside the cafeteria. It would take weeks before they were able to untrain themselves from the boot camp habit of doing everything as if the very hounds of hell were following them. Breakfast was hearty, but plain and all were surprised to find coffee and tea. In boot camp they had been forbidden caffeine or nicotine, here they could have both, but it was still a shock.\n\nThey ate quickly and with few words, shoveling the food down and hurrying back to their quarters to make sure their gear was stowed before formation.\n\nTucker was there, looking immaculate and wide awake. He took a head count from Corporal Sands and then ticked off a few things on a clip board.\n\n\"All right, ladies. This is your last formation for the next two weeks. You will spend the next two weeks in small group exercises. Discipline will be maintained, inspections will continue, and demerits will accrue.\"\n\nA hubbub of voices broke out and Tucker cleared his throat.\n\n\"I'll still be watching you, ladies. I expect you to maintain proper discipline. Infractions will get you a lot worse than demerits,\" Tucker growled.\n\n<center>***</center>\n\nFor the last five minutes Rebel hadn't been able to keep her eyes of Holly's boobs. The large, soft orbs bounced under her leotard and, during many of the exercises that left them inverted, obscured her face entirely. Cloudy and Lou were both having trouble as well, and for once, Rebel was happy to have small tits.\n\nThe four of them wore drab green leotards and grey leggings. Surfer wore a tight blue sports bra and shorts.\n\n\"Spin\u2026No, use your legs only, like this,\" she patiently instructed.\n\nZero-g calisthenics. Rebel had never been so completely worn out. Intricate moves, with no resistance at all. Isometrics, yoga, dance, the routine seemed to be designed to kill her.\n\nSurfer proved to be a far tougher taskmaster than even Tucker. She was relentless, forcing Rebel to go on when her body shrieked in pain. Muscles she didn't even know she had ached, throbbed and protested, but still the dark haired girl wasn't satisfied. Holly broke first, doubling over and clutching her breasts. Lou was next, curling into a fetal ball and whimpering as she clutched her sides. When Cloudy finally stopped, panting and sweating, it was just Rebel and Surfer.\n\nOn and on it went, far past the limits she thought she could bear. Yet she refused to quit, refused to give up, and more importantly, refused to fail again. Surfer pushed her, pushed her hard, but eventually the exertion began to show on even her beautiful face.\n\n\"Take the grav back up, Penny,\" she called at last.\n\nThey all descended slowly to the floor, and as the weight of gravity made itself felt, Rebel collapsed on the padded floor along with the others.",
        "\"Not bad for first timers. Jugs, you're coming with me this afternoon, after I clear it with the Boss. Cloudy, Lou, hit the whirlpool. Expect pains in places you didn't even know you had. Rebel, no one has ever stayed with me for a full session the first time out. You just might make it, girl.\"\n\nWith that, the tall girl rose and exited the training room.\n\n\"Ohhh, fuck,\" Lou groaned. \n\n\"What was that shit?\" Cloudy asked in a breathless whisper.\n\nHolly just made a sound like a wounded animal. Rebel stood dazedly and took a faltering step towards the exit and the short hallway to the whirlpool. Unaccountably, she stopped and turned back. Cloudy was trying shakily to get up. Lou hadn't moved and Holly was still curled up in a ball. Rebel felt something strange, a compulsion she was unfamiliar with. Deciding she was too tired to fight it, she trudged back and extended her hand to Cloudy.\n\nThe warrior's eyes were defiant for just a blazing second, and then melted into a grateful smile. Rebel helped her to her feet and together they helped Lou up. It took all three of them to get the nearly unconscious blonde to her feet. In a shaking, quivering group, they slowly aided one another to the whirlpool. \n\nRebel pulled her clothes off with difficulty, finding even the usually automatic ritual to be too much to do without conscious thought. Her arms and hands were shaking so violently by the time she was naked, she was forced to hug herself and breathe deeply, like she had just run from the authorities after a heist.\n\nCloudy ended up helping Lou undress and Rebel aided Holly. The poor girl was in agony and Rebel felt for her. Despite her pain and fatigue, she couldn't help but ogle Holly's big tits and smiled when she saw her soft blonde pubes. She helped her to her feet and together they hobbled into the deep whirlpool to join Lou and Cloudy. \n\n<center>***</center>\n\nHolly was lying on her bunk when Surfer walked in. She looked fresh and fit, totally recovered from the work out.\n\n\"Oh come on, girls, it wasn't that bad,\" the superbly fit pilot chided.\n\nShe wore olive drab coveralls and seemed none the worse for wear from the morning's exercises, unlike the rest of them who were in varying states of immobile pain.\n\n\"Surfer, kiss my ass,\" Lou declared vehemently.\n\n\"Love to, but you have to earn it,\" she replied unflappably.\n\n\"Up and at 'em, Jugs.\" \n\n\"Screw you,\" the blonde blurted out and then moaned and cradled her aching breasts.\n\n\"Damn, I should have brought my strap on with all the invitations I'm getting today.\"\n\nThe dark haired girl grabbed Holly's hand and bodily pulled her to her feet. Every muscle in Holly's body seemed to protest and knot at once and she would have fallen if Surfer hadn't held her up.\n\n\"Come on,\" Surfer said, half leading, half carrying the tall woman with her. \n\nParked outside was a jeep, which Surfer helped Holly into and then got in herself. She drove carefully through the squad bay, but opened it up some once in the long service corridor. When they passed the large yellow line painted on the floor that signaled the boundary of the flight area Holly managed to speak.\n\n\"I can't leave the fight area, Surfer.\"\n\n\"Yes, you can, with the Boss's permission.\"\n\n\"Where are you taking me?\"\n\n\"York, of course.\"\n\nThe town of York was housed within a huge armored cocoon in the center of the ship. Today's ships were basically floating cities in their own right, with recreational facilities and other amenities built right in. When the Yorktown had been laid down, each of the massive ships had been built with a city inside. Crews would often go crazy, back when space flight was young, because of the enforced boredom. \n\nTo forestall this, 'City-ships' had been a stopgap measure. The small cities provided recreation, a place to spend money, women, booze and all the things sailors were missing. The next generation of ships had foregone the city, but had expansive facilities for recreation and were Authority mandated to put in and give shore leave every three months. After that, as Cosmo-psychology began to isolate the exact factors involved and their effects, ship interiors were tailored to incorporate the findings. \n\nThe citizens of York were all descendants of former crew members, with some families tracing their line back to one of the original volunteers. They lived in a bubble, with a strict set of laws dealing with births, deaths, and immigration. Children were forced to leave at age eighteen. Those who wished to could return after they earned their citizenship. \n\nHolly didn't know any of this, nor did she care. Each time the wheels hit a new deck plate the resulting shock seemed to speed directly into her boobs. All her body was one screaming mass of pain and she wished again she had listened to her folks. \n\n\"We're here,\" Surfer announced, as the jeep came to a stop. The building was a carbon copy of the one next to it, thirty stories of reinforced concrete and shatterproof glass. Surfer helped her out of the jeep and guided her into the building. The inside was hollow, with a huge atrium and glass elevator at the center. Shops of all descriptions were stacked, tier up on tier.\n\nOn the twenty-seventh floor they got off, crossed the narrow catwalk and entered the second shop they came to. It was a lingerie shop, filled with every possible type and style of undergarments, from fetish to functional. \n\nA short woman with blue hair walked up and embraced Surfer, then gave Holly the once over.\n\n\"Let me guess dearie,\" she said in a kindly voice, \"thirty-eight double D?\"\n\n\"Thirty-eight E,\" Holly mumbled, feeling like she was about to pass out.\n\nThe woman shook her head and laughed. \n\n\"Zero-g rig?\" she asked, turning back to Surfer.\n\n\"Yeah,\" the dark haired girl said with a smirk.\n\nThe woman took Holly by the hand and led her back to a dressing room. She pulled out some material and began working with it, chatting all the time.\n\n\"Strip to the waist please,\" she called as she took a large pair of shears from a drawer.\n\nHolly tried, but her fingers wouldn't cooperate. Suddenly Surfer was there, casually removing her clothes, but the look in her eyes was anything but casual and despite herself, Holly blushed. Surfer stepped back then, but made no effort to leave the room. Her dark eyes were locked on Holly's big tits and when the blonde caught her eyes, the dark haired girl theatrically licked her lips.\n\n\"I don't understand you girls. I'd just get a reduction myself, but hey, we all have our preferences, right sweetie? Arms up please,\" she said, wrapping a thin green sheet of gauzy material around Holly's chest. \n\nShe took out a small blowtorch and lit it, causing Holly's eyes to get big.\n\n\"Relax. That material is a synthetic, it's totally non-flammable, but heat causes it to stiffen while staying soft,\" she said matter of factly as she applied the flame to the material. Holly felt nothing at first, but soon the material seemed to be shrinking, molding itself to her breasts.\n\nThe woman put out the torch and removed the material, taking it over to a machine which cut the now hardened cups out. An hour of sewing, fitting, sewing, refitting and finally Holly found herself wearing a light, but extremely strong and supportive bra. She could jump up and down and her breasts would barely move, not that she had any intention of jumping, she still felt like death warmed over.\n\nThe woman led her out, Surfer signed a receipt and they were on their way back to the barracks before Holly's dazed mind could really come to grips with anything.\n\n***\n\nOnce the lithe instructor and their blonde flight mate departed, the room returned to silence. The dinner tones came over the speaker, but still no one moved. \n\n\"Rebel?\" Cloudy said quietly.\n\n\"Yeah?\"\n\n\"Thanks.\"\n\n\"No sweat,\" she responded, feeling silly.\n\n\"Thanks both of ya. I was so knackered, I don't think I could have gotten up by myself,\" Lou added.\n\n\"We better try and make it to dinner, or it will be a long night,\" Rebel said, trying to change the subject.\n\n\"True enough,\" Cloudy replied, rising slowly.\n\nLou went on about how much she appreciated their help as they all dressed. She was sweet, Rebel decided. Not the kind of sweet she was used to, wheedling, cold, calculated to get by on charity. Just a simply and genuinely a sweet person. She had no experience with that.\n\nOr with friends. That was something she could never have afforded back home. Everyone had ulterior motives. Everyone was out for number one. Anyone could be the one who would sell you out to save themselves. Even lovers. Friends were a liability. They caused you pain and made you weak.\n\nShe kept reminding herself of that as she dressed, as they all shuffled out to dinner, as they ate. Lou talked about her home, her family, and her life, totally openly and in unguarded terms. Rebel was used to people barely speaking about themselves and volunteering no information without need. Cloudy was less forthcoming, her world being ruled by different values, but she opened up a little, here and there. \n\nRebel said little, but she listened and read between the lines. \n\nFriends are dangerous, she reminded herself as she lay down and the light went off. \n\n\"Bullshit,\" she whispered to the immortal darkness before she plunged into the abyss of dreamless sleep.\n\n***\n\nHolly moaned softly and spread her legs wider. The Jeep was parked in a disused dead end access tunnel. Jugs was leaning back in the seat, with her new bra pushed above her ample breasts; her BDUs were around her ankles and Surfer's insistent fingers driving into her pussy. \n\nWhile three fingers plunged into her, the flight instructor's thumb repeatedly brushed her now engorged clit. Surfer's mouth was busy too, sucking on Holly's nipple while her tongue feathered it. Holly could hear people walking past the entrance and the thrill of possible discovery only added to the rapidly building tension in her stomach.\n\n\"Oh god!\" she gasped, when a particularly strong tremor rocked her.\n\nSurfer ceased tonguing her nipple and stared into her eyes.\n\n\"Come for me. Come for Daddy,\" she demanded.\n\nHer fingers continued to plunge into Holly's tight passage, but she added a twisting motion that made it seem like even more were in her. Surfer's thumb pressed hard on her clit now, pushing down and relaxing in rhythm with her fingers. They were demanding, confident and strong, which was exactly the kind of lover that made Holly's knees go weak.\n\nShe tossed her head back, grimaced as she fought back the elated scream that wanted to burst forth when her pussy spasmed and sent waves of heady pleasure shooting to her brain. \n\n\"Uh...Uh...Uh,\" she cried, fighting to keep the sounds from bursting forth and giving them away. As the orgasm subsided, delicious little ripples and occasional shocks passed through her.  \n\nShe felt Surfer move and opened her eyes in time to see the lithe beauty toss her boxers over the steering wheel. She climbed up on the seat, her legs on the back deck and lowered her slippery cunt onto Holly's lips.\n\nHolly looked up her body, past the shaved mound, small, pert tits capped with dusky nipples, and into those amazingly sure eyes.\n\nThey seemed to sparkle in the dim light, like a cat's. \n\n\"Eat me, you hot bitch.\"\n\nHolly quickly closed her eyes and extended her tongue. She licked gently up the silken lips, enjoying the strong, musky flavor.\n\nSurfer wasn't in the mood for gentle lovemaking, she grabbed two handfuls of blonde hair and pulled Holly nose deep into her wet cunt. Using the handfuls of hair like the handles on a bicycle, she began to grind her pussy onto the blonde's face. \n\nHolly shifted her body slightly, while bringing her hands to Marina's firm ass and holding on. The new position, as well as extra stability, allowed the lithe girl to begin riding Holly's upturned face for all she was worth.\n\n\"That's it. Eat that pussy. Ohhhh, yeah!\" Surfer groaned. \n\nShe came quickly, surprising Holly with the volume of her juices, which quickly coated her face and filled her mouth. She was still licking when Surfer dismounted and dressed, throwing the Jeep into reverse almost before Holly got her bra back on and tunic closed. \n\nThe dark-headed girl tore through the service corridor, leaning on the horn and cursing as people dodged out of her way.\n\n\n\n\"What's the hurry?\" Holly asked, still in a euphoric state.\n\n\"Boss gave me permission to take you into town and get you a zero-g rig, but she didn't give me permission to fuck you. She's a tight ass, but she isn't dumb.\" Surfer said.\n\n\"Well, that's good,\" Holly said smiling.\n\n\"Good?\"\n\n\"I thought you were in a hurry to get away from me,\" she said quietly.\n\nSurfer laughed out loud as they crossed back into the flight area.\n\n\"Baby, that was just an appetizer. Wait'll your first liberty, I'm gonna fuck you raw,\" she promised.\n\n<center>***</center>\n\nThe next morning the four of them made their way towards the cafeteria. They moved slowly, with variations on a shuffling gait that kept their legs from parting. The groin muscles in Rebel's legs felt tighter than a guitar E string. Other things hurt, but the muscles in her groin, abdomen and vaginal area were by far the most sore. From the looks of things, her mates felt the same.\n\nOn a big board hanging over the entrance to the mess hall were two names, Dutch and Wizzo. Next to each the word Goose was neatly stenciled.\n\n\"What's that for?\" Lou asked.\n\n\"It means they washed out,\" Cloudy said solemnly.\n\n\"And the Goose part?\"\n\n\"It means she washed them out,\" Rebel volunteered after a few moments of silence.\n\n\"Know either of them?\" Holly asked.\n\n\"I was in boot camp with Dutch. She was that big Swede. I didn't think she would make it, great reflexes, but she was a little screwy,\" Cloudy volunteered.\n\n\"What happens when you wash out?\" Holly asked.\n\nRebel suddenly realized, she didn't know. For her washing out was unthinkable, but what about for regular recruits? She had no idea.\n\n\"I've heard it's bad,\" Lou said quietly.\n\n\"Not so,\" a strong voice boomed behind them. They all turned to see Corporal Sands standing there smiling.\n\nShe was a rail thin woman with flat features and dark skin. As Tucker's right hand she was mostly feared, but none of them had any reason to dislike her, at least not yet. Today she was in her BDUs and a slouch cap. She was an impressively attractive woman for all that and her smile was contagious.\n\n\"Wash outs go to bomber school. It's easier in a bomber, you have a bear to handle the weapons.\"\n\n\"Bear?\" Rebel asked.\n\n\"Yep, a back seater. Weapons officer. Your bear handles all the defensive weapons, you just point your ship at the targ and let your missiles go, then get the hell out of dodge.\"\n\n\"And if you wash out there?\" Lou asked.\n\n\"Non-combat flight. Shuttles, skiffs, in system or in fleet cargo transfers. And before you ask, if you wash out there they retest you and try you somewhere else. Of course if you are the worst of the worst, you know where you go don't you?\"\n\nAll four girls looked expectantly at her and she smiled broadly.\n\n\"Cooks and bakers school,\" she roared, clapping Lou and Holly on the back as she breezed past them and into the mess hall.\n\nThey looked at each other and, slowly, grins broke out on each of their faces, followed by giggles as they followed the Corporal into the mess hall.\n\n<center>***</center>\n\nErica sat in her office, poring over the reports from her instructors. As usual, the majority of wash out recommendations came from Goose. She looked up as the thin blonde entered her office, saluted, and then sat in the chair across from her. Erica returned her salute.\n\n\"I know you're a professional\u2026\" Erica began.\n\n\"But you want me to pass marginal cases,\" the Goose finished for her.\n\n\"Damnit Mindy, this isn't peace time. You can't wash out half a class just because they aren't crack shots!\"\n\n\"I don't care if they are crack shots when they come to me, but if they aren't when they leave, I'll recommend a forty-four.\"\n\n\"We can't do that.\"\n\n\"So you want me to send out pilots who can't fight?\"\n\n\"No! I want you to teach them to fight. Why do you have to be such a hard ass?\"\n\n\"Because pilots who can't shoot are dead men walking. I won't be a party to murder.\"\n\nErica massaged her eyes and sighed.\n\n\"I know. You're the best gunnery instructor in the fleet, maybe in the Navy. But we have to find some kind of middle ground, Goose. The first two I agreed with, but these next six? You haven't even had them in the simulator yet.\"\n\n\"And I'm not putting them in the simulator. And I'm damn sure not putting them in a fighter!\"\n\nShe was mad, Erica could see that. She didn't really blame her. Of all her instructors, Mindy took her job the most seriously. Privately, Erica agreed with her stance, but the higher ups didn't.\n\n\"How's Leia?\" Erica asked, shocking the instructor and diffusing the hot confrontation she could see coming.\n\n\"I don't know. Haven't seen her in a couple of days. You know how it is first week or two. Why?\"\n\n\"Because you're a lot easier to deal with when you're getting laid on a regular basis,\" Erica said with a ghost of a smile. \n\nMindy's face showed complete shock. She then blushed and grinned. \n\n\"I guess I am.\"\n\n\"Take the evening off. Here's a pass. Go get laid before you drive me back to the bottle.\"\n\n\"I'll take the pass, but I won't get laid. You know the techs are working overtime to have the birds ready when flight training begins.\"\n\n\"Yeah, and I sent Carson a bottle of synthscotch. Leia is off duty tonight.\"\n\nMindy was laughing as she took the pass from Erica's hand.\n\n\"Doesn't this count as bribery?\"\n\n\"I prefer to consider it morale building,\" the tall captain said as she returned to her paper work.\n\n<center>***</center>\n\n\n\nMindy ambled out of the boss's office and towards the service corridor. She wanted to put the conversation with her superior out of her mind, but knew she couldn't. At least not yet.\n\nShe and Erica had gotten off to a rocky start. The Air Boss had been instrumental in blocking several requests for transfer back to a combat unit and Mindy had resented it. Two or three times they had nearly come to blows in the heated arguments that followed each denied request.\n\nThat all changed after Mindy met Leia at Bel's place one evening. Mindy had watched her for hours as she and a group of techs celebrated another graduating class. She was a part of the group, but seemingly separate from it. Quiet and shy, with a captivating smile and dancing green eyes, she had returned Mindy's stares with interest. \n\nIt took three weeks of asking, cajoling, and finally shameless begging to get a date. On that date, Leia had been beautiful, in a green sheath dress and heels. Mindy had worn her dress uni, with her flight jacket.\n\nThe evening had been comfortable, but Leia had remained distant and Mindy had all but given up on an invitation for a nightcap from the shy woman. That changed the instant they were alone in Leia's quarters. From innocent to animal, the redhead had rocked Mindy's world. \n\nShe was deeply in love and it changed everything. Twice now, the Boss had saved her from transfer to a combat unit. Mindy missed the atmosphere and camaraderie of a combat post, but she wouldn't give up her post here for anything now. Not as long as Leia was here.\n\nWith a sigh, she decided to be less critical of her charges. Erica put her neck out all the time for her people and she deserved some loyalty, even if she was a hard-ass. Mindy would still form forty-four the worst of them, but she decided to back off some, too. \n\nThe thin blonde stopped in the middle of the corridor and laughed.\n\nShe marveled at her commander yet again. She hadn't even got a hug yet and she was already coming around to the commander's way of thinking. That was the Boss's greatest gift as a leader in the Goose's opinion. She could read people and worked on their better instincts instead of their worst.  ",
        "When she opened the door to her small apartment in the city she heard the shower going. Knowing only Leia had a key, she quietly disrobed and slipped into the small bathroom. She leaned against the basin and just stared, with a happy grin on her face.\n\nLeia's long red hair was almost black when it was wet and she looked very much like a brunette at that moment. Water sheeted off her head and rolled down her back, splitting into two rivulets at the rise of her ass and rolling off her generous hips. \n\nHer legs were parted and Mindy couldn't help but gaze into the dark cleft between them. \n\n\"Ohmigod!\" Leia exclaimed when she felt eyes upon her and turned suddenly.\n\n\"Sorry baby,\" Mindy said with a grin.\n\n\"No, you aren't. You do this every time I come over,\" she pouted.\n\n\"I'll make it up to you,\" Mindy said, sliding into the shower with her and enjoying the hot spray. \n\nShe slipped her arms around her shorter lover and cupped her breasts. Mindy loved the satiny feel of Leia's skin and the water made it slippery. The tall blonde mashed her generous tits together as she ground her pelvis into Leia's plump ass.\n\nThe redhead giggled and plopped a bar of soap and wash cloth into her hands.\n\n\"If you're going to take liberties, you might as well soap me up,\" she teased.\n\nMindy smiled and went to work, thoroughly soaping up her soft breasts and flat tummy, before delving between her legs. She kept her hands firm as she knelt and did each leg. There was a sensual element to showering together, but Mindy never let it get to her. She washed each millimeter of her lover's skin tenderly but thoroughly, overkilling if she thought she might have missed even a spot.\n\nShe would never forget the first time her little angel came in from work and they showered together, the water had turned an oily scummy black as it ran down her body. Leia worked with the big ships' engines and she picked up all kinds of toxic materials during a twelve hour shift. The soap was special, carrying no scent, but made specifically to neutralize and remove any toxin.\n\nOnce they were done they both rinsed off and climbed out of the shower. Leia wrapped a towel around her head and another around her body before padding into the bedroom. Mindy followed admiring her lover's backside. A day together this early was rare and Mindy wondered if dinner wouldn't be appropriate. She wasn't hungry, well, not for food anyway, but she didn't want to seem like she was only interested in sex.\n\nLeia dropped the towel, climbed onto the bed and pulled a pillow out from under the sheets. She slid it under her ass, lay back and spread her legs. With her fingertips she opened her flower, exposing the soft inner folds.\n\n\"Don't just stand there looking edible, we only have fourteen hours before I have to get back,\" she said with an impish grin.\n\nThis was the very thing about Leia that Mindy was so enchanted with. She was so shy, so very proper and ladylike, but then she would do something like this and just blow the thin instructor's mind. Mindy no longer tried to understand it, she just enjoyed it. Moving to the nightstand she retrieved her harness and buckled it on. She then crawled between her lover's legs and kissed her inner thigh. \n\nLeia moaned softly and tangled her hands in Mindy's short blonde hair. She tried to guide her lips to her clit, but Mindy was having none of it. She kissed and licked the redhead's inner thighs unhurriedly, alternating from one to the other and her hands snaked up the girl's sides and began to knead her breasts. Another soft moan set the blonde's blood on fire, but she wouldn't be hurried.\n\nThe fat nipples hardened and the aureoles puckered, allowing her to capture one between each thumb and forefinger and gently roll them. She kissed around the fleshy mound of her lover's pussy, thrilling when the faint musky odor became stronger and Leia's hips began to jog. The scent of Leia's arousal mixed with her own as the redhead's lips became puffy and slick. Only then did Mindy begin to tongue them, using the tip of her tongue to outline her lover's sex. \n\nLeia gasped and her body arched, trying to force herself up and into more firm contact with Mindy's warm mouth. The blonde took the hint and flattened her tongue, running it up her girl's slit, between the puffy lips and over the hard pebble of her clit. She latched onto the erect pebble and laved it with her tongue as one hand abandoned Leia's breast and slipped to her entrance.\n\nMindy used an aggressive cock, and enjoyed filling her girl completely, but despite this, Leia remained extremely tight. Mindy gingerly worked a finger into her, thrilling to the massage the silken glove was giving her finger. She intensified her lashing of Leia's clit and smiled happily when she shuddered and her internal muscles clamped down on the intruding finger. Her hips jogged and she wailed as her orgasm washed over her.\n\nMindy rode out the thrashing, staying glued to her clit, but as soon as she calmed, the blonde moved up her body and captured her lips. Leia kissed back passionately, her hands moving between them to grasp Mindy's cock and bring it to her entrance. The blonde eased herself down, enjoying the sensation as the fat head met resistance and forced the base back onto her own clitoral hood.\n\nSlowly the big cock sank into Leia's passage, until it was all the way in and Mindy's mound rested on her lover's. She began to work her hips then, slowly and languidly fucking her little lover. As Leia's passion was reignited she began to moan and raise her hips to meet each thrust. Mindy felt herself tensing and felt the knot of desire in her tummy. When Leia wrapped her legs around Mindy's thighs and sank her nails into the sensitive skin of her ass, the blonde bit her lip. When she began to pull Mindy into her with each thrust she groaned and lost it, smashing her hips into her lover's in a paroxysm that soon had them both orgasming hard.\n\nMindy's hit her like a ton of bricks, shooting up from her pussy to her head and exploding in starburst behind her tightly closed eyes. The waves were thick and heady, each one carrying her higher and higher, until at last she felt herself floating down on a cloud of euphoria.\n\nAs the pleasure faded and her sanity returned Mindy rolled off her partner. Leia caught her head and guided it to her breast. Content, sated, and now very sleepy, Mindy suckled as her lover stroked the skin of her face. \n\n<center>***</center>\n\nRebel was staring at Holly's tits again. She couldn't quite explain her fixation, but she had to admit they were nice to watch with no explanation. A week into the zero-g workouts and she was already seeing the results. \n\nThey were all leaner, suppler, and their stamina had increased dramatically. The obvious changes weren't the main thing though. Rebel had gained a remarkable degree of control over her vaginal and abdominal muscles. The muscles in her thighs and ass were more pronounced as well. All of this was seemingly secondary, but their course work had given her insight that this, and not the overall suppleness and tone, was the main objective.\n\nThe fighters pulled tremendous G-forces. All pilots wore a compensator flight suit that was filled with liquid. The suit would automatically fill, compressing her lower extremities and forcing blood to her chest during high G maneuvers, but it wasn't always enough. With some effort she could now tighten her muscles voluntarily and restrict blood flow. The techniques weren't meant to replace the flight suit, but to compliment its abilities and help prevent black outs and red outs.\n\nAlong with course work came unarmed combat training, but the zero-g workout still took up their morning. Class work was being cut to two hours so they could get a full workout in the afternoon as well. \n\nRebecca excelled at the physical, but her course work was borderline at best. After the first couple of days, her frustration with her limited ability to read and write had reached the boiling point. \n\nThe horrors of basic training had been double for her, as a remedial course in Terran standard had been added to her daily load, cutting into her already abbreviated sleep time. The standard course hadn't prepared her at all for this course work, with its jargon and big words. Her mind could grasp the concepts, but repeating them on paper proved difficult at best.\n\nShe had been up against a wall, fearing she would fail, when a strange thing happened. It began with Lou, sitting up all evening and \"studying\" with her. It took her a couple of days to realize the beautiful country girl wasn't really studying, but was teaching. Cloudy joined in and then Holly. Without a word, without a single incentive that she could see, her flight mates took turns giving up their evenings to help her through. \n\nIt was humbling, but at the same time awe inspiring. All she had learned on Taltos was proven to be wrong. Friends weren't a liability, they were the greatest asset you could have. \n\nShe would have felt shamed, but she was able to repay them with help where they were weak. Holly and Lou were both struggling with unarmed combat. Rebel had started taking them to the gym after hours and working with them. They would never be dangerous opponents, but with her help, they were both scoring high enough to pass. \n\nCloudy was the exception, she seemed to have no weaknesses. Her course work was top notch and she was easily as physically gifted as Rebel was. Rebel watched her often, paid attention when she was talking and had slowly developed a great respect for the tall girl's sense of right and wrong.\n\nA lot of things had changed for the ex-thief. An appreciation of feminine beauty was one. She found herself watching her fellows and appreciating their beauty, grace, softness and more. She was growing too, learning a great deal about interpersonal relationships and the value of friends. The real change was in her mindset, though. She didn't realize it, but every day she was less the outsider, less the lone wolf. The process was slow, but every day lessened the anger and rage that she carried inside.\n\nOf course, watching her roommate's tits was embarrassing, especially when Holly caught her at it and winked. Yet the blonde never mentioned it or let on she knew Rebel was checking her out. That was something else she was learning about friends. Letting them know the real you wasn't a bad thing. Secrets were not ammunition to be used against you later. They could be fun, something shared and enjoyed. The revelations just kept coming.\n\n<center>***</center>\n\n\"Welcome, ladies, to Combat Flying 101,\" Lucky said.\n\nThere were sixteen of them there, the first time since they had separated into flights that they had had any contact with the other trainees. Standing in a loose group on the flight deck, next to a sleek fighter, it was the first time any of them really felt like they were doing something real.\n\n\"This is our old friend, the RFD Mk. IV Condor trainer. She's a two seater, with dual controls. The instructor in the back can take over at any time for safety's sake. These fighters are not as powerful or as fast as the Mk III Ghostdogs or Mk VII Swallows that most units are equipped with, but they are plenty to learn on.\"\n\nCloudy examined the machine with interest, but didn't tune the beautiful instructor out.\n\n\"Today we are just going to take each of you up for a little joyride. I'll be taking Black flight and the Bandits. Surfer will take the Rowdies and the Witches.\"\n\nOnce the two groups separated, a tech took each woman to a locker room and helped them into the form fitting flight suit. They had all been measured before flight training began. Cloudy's suit was black, although she had been offered a choice of colors. She was the first one fitted and returned to the flight deck to wait for the others. Lucky was wearing her suit already. It was a deep aquamarine color and seemed painted on, with only the hoses detracting from the image of a mermaid with legs. Cloudy could easily see the outline of Lucky's pussy and was sure her suit made hers look just as prominent. \n\n\"Climb in Cloud Warrior, the tech will help you get settled.\"\n\nThe seat was deep and heavily padded, she had to adjust it to make sure her feet hit the pedals correctly. The tech, a girl named Maria, attached the hoses and powered up the console. Cloudy felt the cool liquid as it filled her suit, making it almost uncomfortably tight in seconds. The tech put her helmet on and attached more cables. When the HUD superimposed itself on her view plate Cloudy started, but relaxed immediately. The tech held up a hand, with one thumb up and Cloudy mimicked her. \n\n\"Ready to go, Cloud Princess?\" Lucky's voice purred in her ear.\n\n\n\n\"Yes.\"\n\n\"Hold on to your ass then,\" Lucky said as she taxied the fighter across the bay and into the catapult chute. Techs quickly attached cables to the launcher and gave them a thumbs up.\n\n\"I want you to relax, this is a little hard on you first time out.\"\n\n\"Okay.\"\n\nLucky depressed the launch button and the hydraulics fired, accelerating the craft to launch speed in microseconds. Cloudy was thrown back into the deeply padded seat and felt her suit squeeze her like a deranged anaconda. In the blink of an eye they were out in space and the ship's engines fired. \n\n\n\n\"You all right?\"\n\n\"I think I know how a bullet feels,\" Cloudy replied.\n\nLucky chuckled as she brought the ship into the first training course. The turns were easy and Lucky expertly maneuvered the ship. Cloudy watched the stars, felt the motion, the forces and found herself mesmerized.\n\n\"Don't usually do this, but you want to try the controls?\"\n\n\"Can I?\"\n\n\"Yeah, let me go off preflight. Don't tell anyone. I normally don't do this, but you seem miles ahead of your classmates, so I'll risk it. Hands on throttle and yoke. She's all yours in three, two, one.\"\n\nCloudy eased the throttle forward, feeling the g forces push her back into the seat as the sleek warbird accelerated. A slight adjustment on the stick and she broke to starboard. \n\n\"What do you think?\"\n\n\"It's not bad. The controls are touchy,\" Cloudy replied as she made an adjustment to get the fighter back on course.\n\n\"This is nothing, girl. On a Ghostdog interceptor that little nudge you gave would have put you into a roll.\" \n\n\n\nLucky let her work the ship through the course for a few minutes.\n\n\"Guess I better take her back and take you in.\"\n\n\"Thanks.\" \n\nLucky reassumed control and turned the ship into the control pattern, lining her up on the ship's outboard landing bay.\n\nCloudy was silent, watching intently and realizing she had found her calling.\n\n\"Landings are the toughest part, you see the blinking lights?\"\n\n\"Yes.\"\n\n\"You just line up on them and bring her in. Put your hands on the controls if you want, they are locked out as long as I am using mine.\"\n\nCloudy did so and felt the throttle easing back and the yoke making constant minute adjustments. The rudder pedal under her feet moved and a red light snapped on as Lucky deployed the flaps.\n\n\"Flaps won't help in space, but the moment you pass the Z barrier and enter the atmosphere in the landing bay, they will slow you.\"\n\nWhen the ship touched down it was smooth as silk and Lucky taxied back to where her classmates were waiting.\n\n<center>***</center>\n\nAlarms screamed, the stars rotated violently, and the g forces pressed Lou back into the padded seat. \n\n\"Bollocks!\" she exclaimed, punching several buttons and jamming her foot down on the tail rudder petal. The ship continued to spin, increasing the Gs, until her hands were forced back to her body and she couldn't move them. The planet was rising to meet her, filling the view port and she felt like she would pass out as her vision began to go red.\n\nThe motions stopped, alarms went silent, the screens went dark and the star field and planets faded, leaving her panting and staring at gray walls.  \n\n\"Fuck me,\" she panted.\n\nLucky stood next to the cockpit, staring at her. Lou was apprehensive, removing her helmet and looking up at the instructor. Lucky's face was grave and Lou started to worry, until she realized the tall woman was fighting back a grin.\n\nThe dark headed trainee smiled tentatively and Lucky chuckled while shaking her head.\n\n\"Bollocks?\"\n\n\"It means bullshit,\" she said, blushing slightly.\n\nThe busty instructor burst out laughing before climbing into the simulator behind the startled trainee. \n\n\"Nina, take it back up,\" she called.\n\nLou felt Lucky's full breasts in her back and shivered when the instructor's fingers closed over her hands on the controls.\n\nThe star field faded back into existence and the lights came back up on the control panel.\n\n\"This isn't hard,\" Lucky whispered in her ear.\n\nLou shivered, feeling an unfamiliar, yet familiar stirring in her tummy.\n\n\"Left hand is thrust. Ease it forward to increase, back to decrease,\" she said, slowly moving the control forward then back. \n\n\"I understand that, it's the other little thingy that's not cooperating.\"\n\n\"The yoke?\"\n\n\"Yes, that's it. Term slipped my mind, the yoke.\"\n\nLucky's next question shocked the country girl.\n\n\"Ever give a guy a hand job?\"\n\n\"Erm, well, once,\" Lou stammered.\n\n\"Same concept. It's sensitive, so be gentle. Which ever way you move it, the ship is going the opposite way. Just like if you pull down on his cock, a fellow will stand on tip toe.\"\n\nAs she spoke, Lucky gently moved the yoke back, causing the nose to rise.\n\n\"No need to be rough with it. In fact the more severe you are, the less likely it is to do what you want, just like with a guy.\"\n\n\"So, um, just move it slowly?\"\n\n\"Not slowly, gently, there is a difference.\"\n\n\"What's that?\"\n\nLucky's hands left the controls and cupped Lou's generous breasts, causing her to gasp. Those hands began to gently, but firmly, knead the sensitive orbs. When her nipples hardened Lucky captured each between thumb and forefinger and began to gently, but quickly, squeeze them.\n\n\"Gentle, but not slow,\" she whispered, nipping the startled girl's ear.\n\n\"Oh my!\"\n\n\"Indeed. If you are having trouble with thrust just let me know, I'll give you a private demonstration in my room,\" Lucky whispered before shouting for the tech to bring the sim down.\n\n<center>***</center>\n\nLou stood outside the door to Lucky's room and chewed on her lower lip. She knew she shouldn't be here, if Tucker caught her he would go ape shit, but the itch between her legs wouldn't be stilled. She had tried masturbating, cold showers, even black coffee, which only made her gag. At the oddest times she would feel Lucky's hands on her breasts again, and she was forever staring at the tall instructor's crotch in her tight flight suit.\n\nTonight had been the last straw, waking up to find Holly gently masturbating, just a few feet from her. She had feigned sleep, but the blonde had been so hot she had found herself wet and wanting. Now she stood here, indecisive. What if the invitation had just been a joke? She would really feel foolish.\n\nScrewing up her courage, she gently rapped on the door. A few moments later it opened and a sleepy Lucky, wearing only a long tunic top, was staring at her.\n\n\"What's up?\" she asked by way of greeting.\n\n\"I\u2026erm\u2026that is\u2026I was wondering if I could get that lesson in thrust!\" she blurted out, blushing furiously.\n\nLucky poked her head out, looked left and right, then grabbed her by the arm and jerked her into the room. Her quarters were larger than the one Lou shared with the rest of her flight. There was a big bed and a private bathroom, as well as a kitchenette and small living room.\n\nLucky turned her back and walked into the kitchen, her bare ass plainly visible beneath the hem of the shirt. She came back and handed Lou a tumbler.\n\n\"Drink it,\" she ordered.",
        "Lou did so, choking on the alcohol as it burned her throat. Lucky laughed and stood back to admire her.\n\n\"You must need it bad, girl, to risk this.\"\n\n\"Well, yes\u2026I suppose I do need a good shagging pretty badly.\"\n\n\"I love that accent. Okay, baby, I'll give you some lessons in thrust, but it's going to have to be quick. Reveille is in two hours and I still have to figure out how to smuggle you back to your room without Tucker nailing both our asses to the wall.\"\n\nThe tall instructor pulled the shirt off and tossed it to the floor. Lou felt her pussy twitch when Lucky was revealed in her naked glory. She moved purposefully to the night stand and pulled out a strange harness which she began to buckle around her waist.\n\n\"Don't just stand there Lou, get naked, times a'wastein\" she called.\n\nThe dark-haired trainee quickly kicked off her boots and started undoing the buttons on her blouse. She was just removing her bra when Lucky turned to her and she froze. The belt around her waist held up a prick! Not a real one of course, but it looked real and was larger than even the recruiter had been.\n\n\"What's the matter? Never seen a cock before?\" Lucky asked with a smile as she stroked the monster dildo.\n\n\"Never on a woman!\" Lou exclaimed.\n\nLucky chuckled and turned back to the nightstand, grabbing a tube of lubricant and slicking up the dildo as Lou finished disrobing. Once she was naked, Lucky approached her and the grabbed her. Spinning her around, the instructor grasped a handfull of hair and jerked Lou's head back hard.\n\n\"Something tells me you're the kind of girl who likes it rough, am I right?\" she purred.\n\nLou felt a shiver run through her and was only able to nod, no words would form in her suddenly dry mouth.\n\nLucky chuckled again, a sound Lou found incredibly sexy and exciting. Without warning she shoved Lou to the table and roughly bent her over it.\n\n\"Spread 'em,\" she grunted, kicking at the inside of Lou's leg. The petite trainee let her legs slide out, exposing her pussy to Lucky's fevered eyes. \n\n\"Fuck,\" she said, grasping the base of the thick dildo and rubbing it up and down Lou's lips.\n\nLou moaned, feeling the big cock at her entrance and tensed when she felt Lucky grasp her hips. The air was forced from her lungs and her eyes teared up when Lucky drove into her with a wicked thrust of her powerful hips.\n\n\"Geezus. I'm sorry, baby,\" Lucky said, pulling all the way out.\n\n\"Are you all right?\" she asked, stroking Lou's back.\n\n\"Yes, I think so,\" she managed.\n\n\"You should have told me you weren't experienced,\" the tall instructor chided as her hand gently massaged Lou's abused pussy.\n\n\"I thought I was,\" she groaned, causing the instructor to laugh out loud.\n\nShe returned the head of her cock to Lou's entrance and pressed forward slowly. Lou groaned as she felt it stretching her open and fought to relax as her muscles clenched. Lucky went easy, feeding her an inch or two at a time, and stopping frequently to let her adjust. \n\nLou felt stuffed. She had never even imagined she could feel this full before. Nothing had prepared her for it and the signals shooting to her brain from her abused tissues were nothing short of mind blowing. Thick, heady pleasure mixed with both sharp and dull pain. Her mind couldn't sort them out, they were too intertwined and she wasn't sure if it was pain or pleasure, but whatever it was she liked it.\n\nEventually Lucky's hips bumped her shapely rump and she knew it was all the way in. Lou surprised herself by letting out a deep breath she hadn't realized she had been holding.\n\n\"All right, pilot, ready for some thrust?\" Lucky purred.\n\nLou nodded and looked back over her shoulder to see Lucky setting her feet and she thrilled when the cute instructor's warm hands clamped down on her hips. Lucky drew back about half way and thrust forward, eliciting a groan from her lovely partner. The dildo dragged a little on the way out so she thrust back in before getting as much out this time. Lou moaned and her hand snaked between her legs to begin wildly massaging her clit.\n\nLucky smiled and began to pound into her, enjoying the squishy sounds the big cock made as it forced tissue aside. \n\nLou was in heaven, Nothing had ever felt this good. Her body shuddered through another mini climax and her inner muscles clamped down on the huge cock. She felt her body tense and bit her lower lip as the first of several powerful orgasms began to tear at her sanity. Wave after wave of outrageous pleasure assaulted her mind and with each one she felt more and more disconnected from her body and reality.\n\n\"No\u2026no\u2026no..please..no more\u2026\"\n\nShe found it odd to hear herself mumbling that, the last thing she wanted was for Lucky to stop. The instructor seemed to know this and picked up her pace, causing Lou to shudder violently. She felt another orgasm coming, this one seemed to be building in her stomach and when it exploded she felt something in her head tear loose. She gave a feral cry and thrust back wildly on the plunging dildo, driving it deeper into her hungry pussy. It hit something deep inside and a lance of pain-pleasure blotted everything from her mind.\n\nShe came back to reality to find Lucky no longer inside her. Her pussy throbbed, but she felt so empty she couldn't believe it. She wanted more. \n\n\"You gonna make it?' Lucky whispered, gently stroking her back.\n\n\"Yes,\" she managed, her tongue seemed cloven to the roof of her mouth and speech was difficult. \n\n\"You've got a fantastic ass,\" Lucky said, pushing a finger into Lou's anus up to the first knuckle.\n\n\"Oh!\" she exclaimed.\n\n\"Ever had anyone in there?\" Lucky asked in a hushed tone.\n\n\"No! Never.\"\n\n\"Want to?\" she asked with a big grin.\n\nThe very thought was so naughty it made her tingle.\n\n\"I don't know, isn't it supposed to hurt?' she asked tentatively, fighting down the urge to just say yes to whatever this magnificent woman wanted to do to her.\n\n\"It can, but not if you do it right. How 'bout it, sugar? Want to feel this big dick in your ass?\"\n\nLou bit her lower lip and nodded slightly. Lucky smiled and placed the head at the entrance to her pussy, shoving it deep into her.\n\n\"Oh! I thought\u2026\"\n\n\"Gotta get it all slick for you,\" Lucky interrupted, pulling out after a few quick thrusts and bringing it to Lou's tight pucker.\n\nLou tensed, waiting for it, but Lucky just held it there and stroked her cheeks gently.\n\n\"Relax. You have to stay relaxed or it will hurt.\"\n\nLou nodded and forced herself to relax. Lucky applied firm pressure and the dark haired girl felt it begin to enter her body. She fought the urge to tense, and groaned as the head opened her sphincter and passed into her anus.\n\nLucky took it slow, but she knew exactly what she was doing. When the head butted up to Lou's internal muscular ring, the one she couldn't control, Lucky slapped the girl's ass with all the power she could muster.\n\nLou squeaked in surprise and before her body could react, Lucky jammed forward, opening the internal sphincter with only a slight stab of pain.\n\n\n\nAfter that, it took only a short while for Lucky to bury the entire dildo in her lover's quivering ass. She just watched for a while, immensely enjoying the way Lou's muscles were working beneath the pale skin of her ass.\n\nLou felt stuffed. If she thought the big toy in her cunt was something, the way it lewdly stretched open her ass was even more powerful. When it began to move inside her bowels she felt a shudder of pleasure. Her hand snaked down to her wet pussy and began to stoke her hyper-sensitive clit.\n\nLucky grabbed two hands full of her hair and pulled hard, making Lou's back arch, allowing the instructor a better angle to really tear her lover up. The huge cock moving in her ass was nothing short of incredible and the orgasms quite simply destroyed any conception she had entertained before of what sex was all about.\n\nIt was almost time for reveille before Lucky arranged a diversion and Lou managed to drag herself back into the room. \n\n<center>***</center>\n\n\"This is a gun,\" Mindy said, holding up the short-barreled shotgun.\n\n\"It's different from a rifle, in that there are no grooves in the barrel. All naval guns are smoothbore, although few fighters or capital ships use slug throwers anymore. In general, you will only see mass drivers on bases, stations and other static defenses. The exceptions to this rule are the Ghostdog interceptors, which use eight, fifty-five millimeter autocannon as their main armament. The other standard fighters use Particle Projection Cannons commonly referred to as PPCs or phased laser arrays, commonly called phasers or pulse cannon.\"\n\n\"In this course you will learn the nomenclature of every weapon in the Terran arsenal. You will learn to fire each of them and you will learn to hit what you are shooting at or you will wash out. There are no half-way measures. Being able to hit what you shoot at is like being pregnant, you either are or you aren't.\"\n\nWithout further ado, she turned on her heel, brought the gun to her shoulder and fired a shot, breaking one of the targets down range. Several girls jumped at the sound, having never heard a gun fired for real.\n\n\"Accuracy is attained through two means, practice and knowing the physics involved. Accuracy in a fighter follows the same principals, so before you learn to shoot a ship's guns, you will all learn to shoot here on this range.\"\n\nGoose nodded slightly and several young men passed out rifles, coated in a thick viscous liquid. The next two hours were spent learning to clean and care for the Mk XI combat rifle.\n\n<center>***</center>\n\nRebel rolled over in her bunk and gasped when the cold metal of her rifle pressed between her breasts. \n\n\"Bitch,\" she mumbled to the weapon she now called Erica. They all slept with their rifles, ate with them, even showered with them, which of course demanded a through cleaning and oiling afterwards. And they all had to give them names. She had named hers after the Boss, provoking a lot of laughs. Only she knew there was more to it than met the eye.\n\nRebel could take hers apart and reassemble it in the dark. She knew every part by name and could identify them all by touch. She could also shoot, scoring perfect at 100 meters. The Goose was dedicated, thorough and tireless, drilling proper gunnery into their heads.\n\nFrom day one they had progressed from shooting at static targets, to a moving platform to shooting at moving targets from a moving platform. Rebel and Cloudy were the best shots in their group. Lou and Holly were barely scoring in the adequate range. Three girls had washed out and two more were on the cusp.\n\nRebel just didn't give a damn. Three sleepless nights in a row had her on edge. She knew what was wrong, she was just plain horny, but she couldn't bring herself to take care of it in the presence of three other people. As stealthy as they tried to be, she had plainly heard Lou and Holly masturbating. The furtive moans and soft sighs had done nothing but inflame her own lust. \n\nTomorrow was the final qualifying day and she just had to get some sleep, but the itch between her legs was incessant and unremitting.\n\nSighing, she rolled onto her back and let her hand glide down her bare tummy and into her boxers. She needed release, need it too badly to keep ignoring it. Her fingers traveled through her sparse pubes and traced the lips of her sex. It took a few minutes of gentle exploration for her to lubricate and for her lips to gape open. \n\nShe found her clit and began to massage it, but as horny as she was, orgasm remained elusive. She knew why, it was holding her breath and trying to be stealthy. \n\n\"Oh, bullshit,\" she hissed.\n\nThe bed moved and she held her breath. Rebel was shocked when Holly carefully climbed over the foot of the bed and placed a knee on either side of her feet. The blonde gingerly knee walked up her body until her rump settled on Rebels thighs. She wore only a tee shirt and panties and rebel couldn't take her eyes of the girl's huge breasts. She was obviously braless as Rebel could make out the coaster sized aureoles as darker patches behind the thin material.\n\n\"What are you doing?\" Rebel hissed, glancing over at the bed across the way.\n\n\"What were you doing?\" Holy replied with a barely suppressed giggle.\n\n\"Nothing,\" Rebel said, feeling the blush rise to her cheeks.\n\n\"Really? Felt like you were rubbing your pussy real hard,\" Holly teased.\n\n\"All right, so I was playing with myself, get down before someone catches us.\"\n\n\"No, not 'til you get off. You haven't slept in three days, you're irritable, on edge and you're risking screwing up. Your scores have fallen today and yesterday. You gotta sleep, baby.\" \n\n\"This isn't helping!\"\n\n\"No? Well, how bout this?\" She said, catching the hem of her shirt and whisking it over her head. Her large breasts literally bounced free and Rebel's mouth went dry. She tried to move, but was paralyzed with indecision. \n\n\"Oh, come on, baby. I've seen you checking them out, it's okay, they don't bite,\" Holly said, taking Rebel's hands and guiding them to the incredibly warm, satiny orbs.\n\nRebel squeezed, finding the texture amazing and the resilience fascinating. Despite herself she was soon kneading them, caressing them, mashing them together and releasing them to watch them bounce.\n\nAfter several minutes of this Holly moaned quietly.\n\n\"Enough play time,\" she whispered.\n\nShe fell gently forward and rolled onto her side. Her breasts were even with Rebel's head. Holly took one, guided the nipple to the young woman's lips and cooed when Rebel almost involuntarily sucked it into her mouth.\n\nShe sucked gently, like a child and Holly cooed in her ear, gently caressing her cheek. \n\nRebel woke with a start and looked about in confusion. It was still a long time to reveille, but far later in the night than it had been when she rolled over. She had no idea when she had fallen asleep or how Holly got back to her bunk without waking her. Her pussy was throbbing with need and she let her hand slide back down her body and began to vigorously stroke herself. \n\nGiving up on keeping her mind blank, she let it roam and of course, she found herself again in a big bed with Erica beneath her. She didn't even understand the how, but she was fucking the beautiful commander and when she moaned, Leigh felt a massive contraction in her pussy followed by pulses of pleasure, radiating out from her center and rocking her world. She woke to reveille with her hand still wedged between her sticky thighs. \n\n<center>***</center>\n\nRebel sat ramrod stiff in the chair across from the Boss. She had been dreading this, but knew it was coming. Everyone went through an interview as flight training came to a close and they prepared to graduate.\n\nThe boss looked over her file and then looked up, staring into her eyes.\n\n\"Life is strange. I've seen a lot happen in my years doing this, but I've never seen a malcontent go to the top of the class. Want to let me in on your secret?\"\n\n\"I wish I knew, Sir.\"\n\n\"I wish I did, too. I'd feel a lot better doing what I am about to do if I knew what had motivated the change of heart.\"\n\n\"What you're about to do, Sir?\"\n\n\"Rarely, a cadet graduating will prove to have the reflexes, speed, and mentality you see only in the best of the best. Such cadets, upon recommendation from their instructors, will receive advanced flight training on the Ghostdog interceptors. Each fighter flotilla has one squadron of ghostdogs. They are the elite. The best of the best. The very epitome of what combat pilots should be. It took me five years and fifty confirmed kills to earn an invitation to join an interceptor squadron. For that reason, I have never made such a recommendation, until now.\"\n\nWith that she stood and handed Leigh a single sheet of paper and saluted.\n\n\"Cadet Collins, you are hereby brevetted Lieutenant, Second Class and will not be moving on with your class to combat, but will head to earth and the two fourteen training wing. Congratulations.\" \n\nLeigh saluted, too stunned to even say thank you.\n\n<center>***</center>\n\nRebel's face hovered above her and her naked body rested upon her own. They were kissing passionately and the girl's small breasts were pressed into Erica's.\n\n\"Now hear this, Now hear this, General Quarters, General Quarters, this is not a drill.\"\n\nErica snapped up out of her bed and was pulling on her BDUs before her fogged mind could even begin to grasp what she was doing. The dream still lingered, herself in her bed, locked in a passionate embrace with her problem child trainee. Shoving it from her mind she pulled on her blouse and charged out the door of her room.\n\n\"Tucker!\" she shouted above the din and chaos of the flight bay.\n\n\"I've got it under control, Boss, you're needed on the bridge!\" he shouted back. She nodded and jumped into the jeep, firing it up as several techs leaped into the seats and back. \n\nErica tore down the corridor, abandoning the jeep at the service lifts, to see the tech who had been riding next to her take the wheel before the vehicle stopped rolling and screech away in a cloud of smoke. \n\n\"Air Boss on the bridge\" the sentry shouted. There was no need to say at ease, if the bridge crew heard they didn't respond. They were all working feverishly at their consoles and twenty different conversations were going on. Erica saw the chief engineer standing at his post and the flight officer at his. \n\n\"What in god's name?\" she blurted.\n\n\"Indeed,\" Captain Quarrels replied. He looked different, sober and his tea was missing. He smiled at her and motioned for her to take the small flag officer's chair that was rigged next to his. Erica couldn't remember the last time an air ops chair had been in place on the Yorktown's bridge.\n\n\"Captain, I\u2026\"\n\n\"Shhh. I wanted you to be here for this, explanations will come later.\"\n\n\"Report!\" the old man bellowed. His voice had changed; it was strong, vibrant and commanding.\n\n\"Environment, point oh nine nine, maximal!\" the sciences officer called.\n\n\"Helm, point oh five five, nominal,\" the helmsman shouted.\n\n\"Flight deck secured, hangers closed.\"\n\n\"All sections reporting ready to get underway.\" \n\n\"Weapons?\" the Captain asked.\n\n\"Main batteries charged, secondaries charging, Deck crew reports twenty percent completion on loading of launchers,\" the harried weapons officer responded.\n\n\"Mack?\" he said quietly.\n\n\"The battle board hasn't been lit in two hundred years, Carl. I just don't know,\" the chief engineer replied.\n\n\"Helm, activate the battle board,\" the captain ordered.\n\nThe lights dimmed, and a huge part of the ship went to emergency lighting as power was drained, rerouted, and ancient circuits came to life.\n\n\"Battle Board activated at 21:04 and thirty-eight seconds,\" a pleasantly modulated feminine voice declared to the bridge. \n\n\"Welcome back, old girl,\" the captain said quietly, in the suddenly hushed bridge.\n\n\n\n\"Thank you, Captain, although I haven't really been gone.\"\n\n\"Everything working?\"\n\n\"I am reporting minimal problems, maintenance has been alerted.\" \n\n\"We're going to war, old girl. Activate defense sequence delta and stand by.\"\n\n\"Affirmed.\" \n\n\"Helm?\"\n\n\"Standing by.\"\n\n\"Ahead two thirds,\" the captain ordered.\n\n\"All ahead two thirds,\" the helmsman mimicked, before sliding the lever on his console forward.\n\nWith painful slowness, the old warhorse defeated the gravity of the gas giant and began to move away from it. Erica was stunned, watching as the star field slowly began to move and smaller vessels scurried out of the giant ship's path. This was beyond belief. Never in her wildest imaginings had she ever considered the possibility that Yorktown might be recalled to wartime service. Something told her it would only be in the blackest of emergencies and a chill went down her spine."
    ],
    "authorname": "Colleen Thomas",
    "tags": [
        "erica back",
        "general quarters",
        "dress blues",
        "quarrels",
        "replied unison",
        "unidentified craft",
        "called lou",
        "confirmed kills",
        "dress jacket",
        "trog"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-furies"
}