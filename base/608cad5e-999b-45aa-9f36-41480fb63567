{
    "title": "Kismet or Happenstance? Ch. 05",
    "pages": [
        "Dear Reader,\n\nSomeone suggested this story would find its proper home with romance readers. I think she's right and I hope you do too. Enjoy!\n\nWith thanks,\n\nAugust\n\n**********************\n\nSaturday, September 9th, 2006. 2:38 pm.\n\nThe glass panels parted with a swish. Then came the blast of frigid air with its clouds of stale, denatured alcohol. The scent assault dragged Ana through time where she was kneeling in fright, reaching for the limp hand clutching twenty dollar bills. She looked at Sean's profile and prayed his world would remain unchanged when he emerged from the other side of these doors. Her fingers entwined with his; the past and present pressed between their palms. She stuffed the memories deep in the closet of her mind and they crossed the threshold together. She was here, now, for Sean. \n\n\"They're running tests...they're doing an ECG, something called a tropnin and a CK...I think that's what the nurse said,\" the harried brunette\u2014Sean's mother\u2014tried to explain. Her nose and eyes were shades of red. The smudged mascara added a look of fatigue to her delicate, pinched features. \n\n\"A troponin test,\" the greyer haired version of the man next to her corrected while he smoothed his wife's back. Even his rich baritone matched Sean's. In fact, the son favored the father in every way but for the elder's green eyes. \"They're checking to see if Grandpa had a heart attack. Grams is with him right now.\" \n\n\"We're waiting to find out more before we call Em.\" The woman's wild, blue eyes landed on Ana. \"Who are you?\"\n\nWell, hello!\n\nIf Ana didn't feel like an interloper at a private family gathering, she did now. Given the situation she didn't bristle at the question's slightly brusque delivery. But Sean's father looked taken aback.\n\nSean placed a hand on the small of Ana's back. Touching her tempered the spark of red hot anger that rose up his chest. \"This is Ana,\" he announced before she spoke. \n\nThe simple words held a dark edge\u2014one she never wanted to be on the receiving end of\u2014as he pulled her closer to him. His hand slid up her back, the tiny gesture felt both protective and defiant and rendered any further explanation unnecessary. That was all it took to for her to feel like she belonged\u2014unquestionably. \n\nSean's father extended a hand, his smile and demeanor apologetic as he spoke. \"I'm Dominic, Sean's dad.\" \n\n\"I'm Clodagh,\" Sean's mother followed automatically and exchanged distracted pleasantries with Ana. \"I should check on Daddy...you stay here,\" she said to no one in particular, \"Duncan should be here soon.\"\n\n\"I'll come with you,\" Dominic offered gently.\n\n\"We'll be right here,\" Sean promised at his mother's uncertain look.\n\nWe.\n\nShe wanted to tell him everything would be alright but she didn't want to offer empty platitudes. She looped an arm around his waist, instead, and rubbed his back, wishing she could do more. She sent out another silent prayer with the others circulating these walls and hoped it would be answered.\n\nHe snaked an arm around her shoulder and gave her a light squeeze. \"You can go. I'll call you later about picking up my car.\" \n\nAna's hand froze. It was a gentle rejection, a reminder that she was privy to just a small part of his life, nothing more. But hearing him put it to words, even indirectly, stung. God, how foolish of her to misinterpret the simple way he'd introduced her to his parents. She reached for her hypocrisy\u2014she would've called off their affair by now if hadn't he taken that phone call\u2014and it dulled the hurt. A little. She wasn't going to hang around where she wasn't wanted. Certain she had her face schooled in a neutral expression, Ana looked at him, ready to acquiesce to his request. But his vivid blue eyes said something entirely different. \n\nHe'd given her an out. Nothing would change if she went home right now. Would something change if she stayed? \n\n\"No.\" Her hand moved over his back again in slow, circles. \"I'll stay...if you want.\" \n\nHe nudged her closer to his side, taking in the comfort of having her near before he'd have to let her go. \"It might be a while,\" he warned. \n\nHe wouldn't ask her to stay lest there be a small chance she would...out of obligation. That and he couldn't let her know how much he needed her right now. She didn't sign up for this. Hell, he frowned, did he? \n\nAna wove her fingers around the ones hanging off her shoulder. This wasn't about walking away from an afternoon in a hospital waiting lounge. He wanted her here. She heard it in his voice, though he was too proud to admit it. \n\n\"Yes,\" she said and gave his hand a reassuring squeeze, not needing to deliberate her decision any further. She looked up at him again, hoping to articulate the message with her eyes, wanting to erase the doubt she saw in his. \"I know. I'm staying.\"\n\n* * * * *\n\nA sonorous, Brennan man's voice called out Sean's name. Ana recognized him from the photos she'd seen in Sean's living room. Duncan Brennan was slightly taller, his frame more athletic, than his younger brother. Dressed in a black shirt, dark jeans and black boots, Duncan was the rugged anti-hero to Sean's charismatic leading man\u2014outfitted in a blue crew neck peeking out from a red / blue striped white shirt, chinos and dark loafers. The two men hugged in the loose way men did, without hesitation. Sean introduced her to his brother before updating him on what little was known of their grandfather's condition.\n\nTime went by in a choreographed waltz of doctor updates and Brennans taking turns to sit with Sean Gallagher. New faces came and went, some stayed long enough to become familiar strangers\u2014like the worried couple sitting a row ahead. They were here for a little girl. There was the small talk people engaged in to pass time, to will everything back into order through a stream of words, to break the silence. Hospital silences were the heaviest, most unbearable sounds in the world. \n\nThe first hour and a half of waiting rewarded them with good news: the results of the blood work were negative. The tentative relief grew more confident as the elder Sean showed no further signs of discomfort. Reports came back he was pleased his attending physician was a woman. The sight of a pretty lass made the indignities of being poked and prodded and the absurd questions about the quality of his recent bowel movements, rather bearable. \n\nAna looked over to Sean, who was talking with Duncan near the water dispenser, and smiled inside; now she knew where he inherited his flirting gene. Both brothers commanded attention in their unique way, which didn't go unnoticed by some visitors or hospital staff\u2014female and male.\n\n\"This is some way to meet Sean's family isn't it, love.\" Emily Gallagher patted Ana's hand in the sweet gesture only loving grandmothers mastered. The lilting dip and roll of \"love\" betrayed her Irish roots.\n\nAna leaned in, not quite sure how best to respond. \"I'm sorry.\" \n\n\"Why be sorry?\" Emily waved her freckled hand around. \"This isn't your doing. I'm glad you're here for my grandson.\" \n\nAna cast a look to Sean, now linked to his niece, Grace, via a shared earphone. Their heads bobbed in time with the music coming out of her Ipod. \n\n\"I know he is too. He's much calmer around you.\" Emily's blue-grey eyes softened as she watched the pair talking animatedly. \"I used to tell Clodagh, God would repay her for all she put me and her father through by giving her a child just like herself.\" She pointed weathered, hot pink manicured finger in Sean's direction. \"She thought I was exaggerating until that one was born.\"\n\n\"I've heard some of the stories but I have a feeling there was some editing involved. I can definitely picture him being a handful as a child\u2014he still is.\"\n\nEmily nodded and studied the swirl of caramel colors in her chamomile tea. She didn't miss the affectionate note in the girl's voice. It wasn't the affected sweetness of a girl trying to impress upon her young man's family the sincerity of her a feelings. She had a quiet strength about her and while she appeared kindhearted, she didn't go out of her way to seek approval. Qualities...what was her name...oh, dear...Ana...would need in spades if what she suspected came to pass. Clodagh would turn into a mama bear to make sure her youngest had chosen well. Luckily the boy had an anarchistic streak, especially when he had to have something, like the day he'd marched his muddied feet into the neighbor's living room and demanded his bike back with a \"thank you\" at the end. Poor Clodagh had been embarrassed and exasperated, but it was the funniest thing to see Karma play itself out. She looked at...Ana...and felt a tinge of regret that she'd wished little Sean his own set of rambunctious offspring. \n\n\"You're not flustered by it though...Nic is like that with Clodagh.\"\n\nAna acknowledged the observation with a nod. If she were a cartoon character her head would've swiveled three-sixty a dozen times already. Was Sean's grandmother was speaking as if their relationship warranted comparison with a married couple's? She couldn't suppress a wry grin as her glance dropped to the octogenarian's pale blonde head. Finding out she was just some girl her grandson picked up at a bookstore would knock the curl out of that elegant coif. The sweet woman assumed she was here by design, not coincidence and leapt to certain conclusions. And who could blame her? The no-strings lover never got introduced to family. She looked over to where he was standing. He'd correct the falsehood at the appropriate time. \n\nHe must've felt her watching him because he looked her way. Their eyes connected for a moment. He wouldn't have called her to be with him had events occurred differently. Her being here didn't impart any significance on their connection. She was here for him the way a friend would be. She'd better remember that. She deflected back to where it was needed. \n\n\"How are you doing? Really.\" She hoped the question didn't come off as lame or intrusive. It's just that Emily Gallagher had remained so serene throughout the afternoon, it seemed eerie and unnatural.\n\nThe lines around Emily's stormy eyes deepened. \"Resisting won't change the situation, love. It's out of my control. I know my Sean's a fighter,\" she paused and her half-smile faded, \"he'll do his best to stay with us.\"\n\nClodagh Brennan rounded the corner just then and dropped into the chair next to her mother. She'd been running on pure adrenaline the entire time. \n\n\"Why don't you and Nic take a walk. You could do with the fresh air.\"\n\n\"Mom. I should\u2014\" \n\n\"Grace and the boys are here and Ana is keeping me company,\" Emily continued on as if her daughter were closer to sixteen than sixty. \"You have your phone with you, yes?\"\n\nClodagh watched them both and something crept into her face before a look of resignation settled in. Was it hurt? Jealousy?\n\n\"Okay,\" she relented. \"I'll be back in a few minutes.\"\n\n\"Thank goodness,\" Emily remarked with uncensored relief after her daughter left. \"She means well but being around all her nervousness and worry is too much.\" \n\n\"She's scared.\"\n\n\"I know. I am too,\" Emily confessed: her fingers shifted the short blonde hair at her nape. \"A timeout from all of this will do her a world of good.\" And Grams would probably find it easier to maintain her composure which was much more fragile than Ana originally guessed. \n\nSean slid into the empty chair, taking his mother's place. \"What are you girls chatting about?\"\n\nEmily's eyes turned conspiratorial. \"Ana was about to tell me how you met.\" Did impishness run in the family, like the blue eyes?\n\nHis gaze went back and forth between the women. She knew his agile mind was spinning a tame version of their meeting, palatable enough for his doting grandmother. \n\n\"Did she tell you she tried to pick me up at Borders?\"\n\nAna was horrified even as Emily grinned. \"I did not!\" \n\n\"Don't think for a second I believe you,\" she said smiling up at her grandson. \n\nSean had the audacity to look wounded.\n\n* * * * *\n\nAna was happy for them, she really was. But other feelings made it impossible to sit by and watch with a cheerleader smile. Feelings she was ashamed to have right now because they were selfish. She passed a wet napkin around her face and neck, hoping the gentle pats would help her tamp down what tried to surface a few minutes ago. \n\nClodagh's demeanor had announced the good news well before she'd said the words: her father was being discharged in the morning. He'd stay overnight for observation but everything looked good. Heartburn\u2014due to a forbidden quarter pounder and shake\u2014and not a heart attack appeared to be the likely culprit behind his lunchtime chest pains. \n\nAna hung around while Duncan left to walk Grace to her car, listened as Clodagh and Emily \"discussed\" how long Clodagh would stay with her parents, while Dominic mediated. Sean had vanished from the corner of her eyes as the frightened couple who sat in front of them got escorted to \"the private room\". The little girl! The moment the man started to shake his head in denial, was the moment Ana had to leave. \n\nAna checked her reflection again before leaving the ladies' room. She armed herself with cherry Chap Stick and rounded the corner with renewed determination. Even from here she could see the tense vigil now lay behind them. They were probably still making plans for tomorrow and the next day. She scanned the waiting room and saw the grieving couple huddled in a corner, clinging to each other. A visit to \"the private room\" only meant one thing.\n\nMiss Williams, I'm sorry. We did everything we could. Please accept my\u2014 \n\nThe sting fanning out from the bridge of her nose had her searching the hallways for an escape. She ran when she spotted Sean walking down the corridor. She couldn't let him see her like this. Not even on a good day...\n\n* * * \n\nSean took a swig of his Pepsi on the way from his Grandpa's room and grimaced. This could never, ever pass for Coke. It wasn't even close. He walked by a sobbing couple talking with a doctor and quickly shifted his gaze out of respect. Being a voyeur into their pain felt like a violation of something sacred. It was a sad reminder how blessed they were that Grandpa was alright. He looked for the person who helped make this day easier to bear. How fitting she'd chosen to wear a top and trousers in that off-white color. She'd been nothing but an angel.\n\n\"Where's, Ana?\"\n\nShe'd never been gone for an extended amount of time. And whether she was close enough to touch or several feet away, even when no words were spoken, her message was soothing as it was constant. I'm here for you.\n\n\"She went to the ladies' room,\" his mother said.\n\n\"She looked unwell, poor girl,\" Grams added with concern. \n\nSean felt the irritation kick up upon seeing the indignant tilt of his mom's head. She might as well have thought balloons floating above her. Why should Ana feel ill? Is her daddy in here too? \n\nHer notorious impatience was no excuse--one of the traits Grams insisted they shared. Her being in a constant state of fright for hours was no excuse. Ana didn't have to be here. She didn't have to spend ten minutes on the phone directing Grace on the fastest way to get here. She didn't have to go across the street to make sure Grams had a real cup of tea to drink instead of that generic cafeteria crap. She didn't have to spend her Saturday afternoon in a hospital. Not when there were a million other things to do than to sit with a bunch of strangers and be reminded of the day she lost her mother. But she did it anyway. For him. \n\nShit. Her mother. \n\n\"Her mother died of a heart attack almost two years ago,\" he accused. He couldn't help it. He found the contrite look on his mother's face, as her hand covered her mouth, just shy of perversely satisfying. While his ears vaguely entertained her shame filled acknowledgment of Ana's compassion and kindness, how Ana never let on how close to home this must hit, his eyes drifted past her head, down the hall.\n\n\"Go look for her,\" his father advised, sensing the direction of his thoughts. \"She's been gone a while.\"\n\n* * * * * \n\nThe muscle in his jaw worked in frustration when he dead ended at the emergency exit. He could've sworn he'd caught a glimpse of a woman wearing an off-white top headed in this direction. He opened the door; it wouldn't hurt to look. \n\nWas he ever wrong.\n\nHysterical wailing he could to deal with because the drama of it all usually overshadowed the actual cause. But he wasn't prepared for this. The loneliness of seeing her sitting on a step, hugging her sides, her silent suffering, gutted him. She was quietly fighting the hollows of despair with every drop of resolve in her. Even in a deserted, half-lit stairwell, Ana tried to be stoic. How often had she been alone when she needed someone? \n\nI often didn't know what to tell them or how to ask for help.\n\n\"Ana?\"\n\nShe went still.\n\nSean sat next to her and she turned to the wall as if he'd disappear, as if he wouldn't realize she was crying. She jumped when he stroked her back.\n\n\"Ana.\" He didn't know what else to say so he edged closer while his hand swept across her shoulders.\n\n\"I'm s-sorry,\" she sputtered. He guessed the words rather than understood them.\n\nHe kept his voice gentle as he spoke. \"Honey, it's okay. You're human. Being here must have brought back a lot of memories.\"\n\nAna started shaking and turned into a tight ball. He gathered her in his arms and she resisted until she must have realized he wasn't letting her go. He rubbed her back and rocked her like a baby when she sagged against him.\n\n\"Let it out, love\" he whispered as she began to sob in earnest. \"It's okay. I'm here. Let it out.\" His words poured out without any thought but to soothe her and continued even after his throat ached. \n\nThe sound of her heart wrenching keen leapt off the concrete walls and went straight to his soul. Part of him wanted her to stop crying because he felt the agony of her heartbreak and sorrow as if they were his own. Part of him knew Ana needed this release. She needed reminding that being strong didn't mean it wasn't okay to say \"ow\" when life hurt. He held her long after her tears faded into intermittent sniffles and then silence. She eased out of his arms but the instant their eyes met, her face crumpled again.\n\n\"Oh, God.\" Her scratchy voice was loaded with remorse. \"I've made you cry.\" \n\nHe could feel his eyes brimming with tears but only a total, unfeeling bastard could've remained indifferent right now. He cradled her again. \n\n\"Ssh,\" he murmured into her hair. \"Technically, I'm not crying.\" He felt some relief when she made a sound somewhere between a hiccup and a laugh.\n\nHe realized how fortunate he was; not only would Grandpa be okay, he had his family\u2014even if they got on each other's nerves. Ana, however, had been in a mall full of strangers when her mother had collapsed at the ATM. She'd waited alone in the ER until her friends rushed from work. He kissed her temple, truly understanding for the first time how scared she must have felt. He wished he'd known her then, wished he could do more for her now.\n\n\"I can't let your family see me like this,\" Ana remarked as if speaking to herself. She fussed at her eyes, her hair and reached for her bag.\n\n\"They know about your mom; they'll understand.\"\n\nAna stopped rummaging. \n\n\"You told them?\" she repeated as if there were some hope he'd deny it. So much for the whole trying-to-ease-her-worries bit. Her eyes flashed from distressed, to mortified, to distressed again. \"They've been through enough today. They need to focus on your granddad and stay positive.\"\n\n\"Sweetheart, it's only natural you'd have some reaction to everything that's happened today. It's nothing to be embarrassed about and we don't hide stuff like this in my family.\" Sean took her hands in his. Damn, they were cold. \"It means a lot that you were with us today.\"",
        "Ana sent him a quick, skeptical glance.\n\n\"And I'm not just saying it to make you feel better. Grams thinks you're a \"fine girl\" and my mom agrees.\"\n\nHer bloodshot eyes still looked skeptical.\n\n\"It's true,\" Sean said and grinned, hoping she'd let go of her unfounded worry that she'd failed somehow. \"My mom can be\u2014\" he searched the lexicon of euphemisms, \"\u2014a handful when she's upset but she's a softie and she knows it couldn't have been easy for you to stay with us the way you did.\"\n\nShe repaid his diplomacy with a nod and a partial smile. She was about to say something then stopped. He was sure she was going to downplay her presence today.\n\n\"I better fix my face,\" Ana said with affected humor, \"or I'll freak everyone out. You go ahead.\" \n\nHe doubted the remedy to her particular concern would be found at the bottom of her bag, not unless she had a magic wand to erase the fact that he'd caught her crying. \n\n\"Hey.\" \n\nSean waited until Ana stopped fidgeting with her bag and took the Kleenex from her hand. He wanted her to know he knew exactly what she was doing\u2014or trying to. He wouldn't let her dismiss what just happened. Her bashful, bloodshot eyes met his but she didn't avert her gaze as he wiped away the wet trails along her nose and cheeks. He slid his forefinger down her blotchy nose when he finished.\n\nAna blinked away a fresh batch of tears at his touch. He should be with his family, not sitting here, wiping away her tears the way Dad did when Jeffrey Diaz had pushed her off the playground slide. \n\n\"Sean?\"\n\nThe lost-girl-note in her voice made him wish magic wands really existed. Suddenly her arms banded around him with surprising strength. \n\n\"Thank you.\" \n\nThe throaty timbre of her voice, the emotion barely contained below her words, made his throat knot up. His arms tightened around her back.\n\n\"Aw, hun. You don't have to thank me.\" He brushed his mouth over hers to silence any objection and tasted saline, cherries and gratitude.\n\nHe'd remember the expression on her face the rest of his life as he stood and offered her his hand. He was sure of it. He'd been watching her the same way most of the afternoon.\n\n\"Don't take too long.\"\n\n* * * * * \n\nExhaustion set in as the numbers lit up, followed by the chime. Were they going to stop on every damn floor? He closed his eyes and Ana's hand moved, redirecting his focus to the sensations along his back. He draped an arm across her shoulder and leaned into her, inhaling her fresh, floral scent and felt the tension ebb. That happened a lot when Ana was near.\n\nSix. \n\nFinally, they could escape this steel cage and put the day behind them. \n\nThe last thing he expected was the moment of stillness he walked into. Right here in a half empty parking lot with orange lighting. A surreal peace and Ana. He wasn't even touching her and yet he felt her. He was lifted, grounded, calm and electrified all at once.\n\nHer hand clasped his and their eyes connected as they had so many times today, but something felt different. He saw more.\n\n\"You've had a long day. Why don't you stay with me tonight and drive back in the morning.\"\n\nA sense of victory edged out his weariness as he nodded his answer. Something changed since they left her apartment. He wasn't up for analyzing it, whatever \"it\" was. This right here, what he was feeling, was good enough for now. \n\n\"Come,\" Ana said as she pulled his hand and tilted her head towards the parking spaces, \"let's go home.\"\n\nThat sounded perfect.\n\n* * * * *\n\nAna caught the last pillow and dropped it in the berg\u00e8re. \"You know, a warm shower would help you unwind.\"\n\nHe unbuttoned his shirt. \"Join me.\" \n\nThat sounded good. \"I'll get you some towels.\" \n\nMinutes later Sean stood behind her. Naked. But she didn't see a mere collection of parts making up his physical form. Their eyes intersected in the mirror and she felt stripped of her emotional armor, just like the moment when he found her in the stairwell. Feeling self-conscious and out of her depth, she dropped her gaze to the sink. When she looked up again, the moment was gone.\n\n\"I use an electric toothbrush.\" Uh, I think he could've figured it out. Remember he graduated the top of his class? \"The brush head with the red rim is yours,\" Ana continued while trying to forget just how she'd learned of Sean's academic prowess. Maybe prowess wasn't an appropriate word right now. She stepped out of his way when he reached for the attachment.\n\n\"Thanks.\"\n\nAna hung a set of towels on the bar and started the shower while he finished up. \"The water's perfect. I'll be in, in a minute,\" she said before he got in, keeping her eyes northbound except for a peek or three. \n\nTeeth brushed, hair pinned, clothes and make-up gone she joined him. \"Hi.\"\n\nSean stood like a rain-soaked statue. Seconds passed before he turned around, his eyes half shut. It was weird seeing him zapped of his larger-than-life energy. The need to soothe and protect hurtled her into the tub-stall. She reached into the shower caddy for her sparingly used, feel-good body wash and covered his skin in creamy foam. The sunshine-and-fresh-cotton scent of Pure Grace was the perfect antidote to a day in hospital air. \n\n\"If had a million dollars right now, I'd give it to you,\" he sighed as her fingers worked away the tightness in his shoulders and back. \n\n\"Just one?\"\n\n\"Took one off because of the girly stuff.\" \n\nShe pushed him into the cascading water in playful retaliation\n\nHe laughed. \"Baby, that's just mean.\" \n\n\"I'm always as nice as you deserve,\" she quipped while reaching for the shampoo. \"See?\" She dared him to disagree as she moved the lather around his scalp in rhythmic circles. His sounds of appreciation bounced off the wet tiles as her fingers melted the stubborn knot above his nape. \n\nHe closed his eyes, once again giving himself over to her care. His head swayed into her palms. The pads of her fingers maneuvered his scalp, waking up sensitive nerve endings with every circle, every press. Threads of tingling bliss spiraled from the roots of his hair, down his back and legs. Goosebumps covered his skin. \n\n\"Are you cold?\" \n\nEven the sound of her voice behind him had a visceral effect.\n\n\"Mmm-mmn. Feels good.\" \n\nIt was an understatement. The sensation bordered on erotic, but he didn't chase after it. Ana deserved more than the perfunctory quickie he was capable of right now. He wanted to take his time when he had her again. He wanted to show her how much he appreciated having her with him today, the way she took care of him. Tonight, she needed to rest and he wanted her to have it as much as he wanted to be inside her again. He could do it. He could lie next to her and hold her and it would be enough. But tomorrow morning...\n\nHe already looked forward to the big decision: Should he start at her feet and work his way up? He closed his eyes, trying to stem the flood of sensory impressions: The contrast of her golden skin against her white sheets. Her firm, soft skin under his hands as he parted her long legs. The tight, breathy sounds she made when he took her in his mouth to smell and taste her. The way her autumn brown eyes darkened as he slid his...\n\nHe guided Ana into switching places with him after he'd been rinsed from head to toe. He'd have a better chance at keeping his thoughts clean if her hands weren't on him.\n\n\"Your turn.\"\n\nShe stood still while Sean alternated between using the shower sponge and his bare hands on her. The feel of airy foam, rough fabric, and slow fingers sliding over her wet skin felt relaxing\u2014at first. But his swirling patterns reminded her it had been a week since they... Ana squashed the next thoughts in line and stepped into the warm drizzle.\n\n\"Not yet,\" he protested as she reached for the dials. His voice was thick with sleep. \n\nHe pulled her to him, molding his front to her back. Warm water poured down her chest while his hands cupped shoulders, her breasts, and absently stroked her stomach. His touch felt reverent; as if he needed convincing she was real. But a dull sting started between her legs, despite knowing it wasn't his intent to arouse her, despite it being selfish to want him now. \n\n\"Sean?\"\n\nThe rough bristle of his day-old stubble made her wriggle and giggle as he nuzzled her neck. His arms crisscrossed her waist, stilling her movements\n\n\"Mmm?\"\n\n\"This is nice\u2014\"\n\n\"Mm-hmm.\"\n\nHe made no attempt to move. Ana cuddled closer.\n\n\"\u2014but we should get out.\"\n\n\"Mm-hmm,\" he agreed and pressed a kiss below her earlobe. She squeezed her thighs together to stop the heat blooming there. She laughed inside at her own horn doggishness. \n\n\"C'mon, sleepy thing.\" A sliver of delight colored her words. \"Let's get out of here before we turn into prunes.\"\n\n\"Okay,\" Sean conceded with a hint of childlike petulance, still in no hurry to move or let her go.\n\n* * * * *\n\nAna tucked the sheet below his ribs and smoothed back his hair. \"Goodnight, Irish,\" she whispered.\n\nHe frowned and caught her wrist, his eyes still closed. \"Where are you going?\" he asked peevishly.\n\n\"Girly stuff. Some of us have to work hard at being beautiful.\"\n\nHis lips curled up and he let go of her hand. \n\n\"This is the part where you say something like 'oh, no, you're already very beautiful'.\" \n\nHis eyes opened and lingered on her face like a caress. Ana went from sassy playfulness to sensual awareness under his slow appraisal. He looked like a fantasy rouge with his lazy smile and dreamy blue eyes. How did this man end up in her life, in her bed? \n\n\"That's amateur stuff\u2014\" he yawned, \"\u2014I can do better than that.\" Even half asleep, Sean still managed to sound self-assured and more than a bit cocky. \n\n\"You already do.\" Ana leaned forward and kissed the dimple in his chin then fussed with the sheet until it folded perfectly below his ribs. It felt really good to look after him, even in this small way. \"I was just kidding,\" she promised and dimmed the light. \"Get some rest.\"\n\nAna tiptoed her way back to the bedroom and eased the dresser drawer open. She slid on the first shirt her fingers landed on. It was strictly for comfort and rest then again, tonight was all about comfort and rest. \n\nSean's voice made her jump and turn around.\n\n\"Does it always take this long?\" he grumped with his eyes closed.\n\n\"I thought you were asleep,\" she whispered as her heart returned to its regular pace.\n\n\"Waiting for you,\" Sean explained as if it were as obvious and expected a thing as one plus one equaling two. He threw back the sheet in invitation, letting it fall midway down the diagonal line of muscle from his hips to... It's like Maxim\u2014 for girls. \n\n\"Come to bed.\"\n\nHe sounded like he owned the joint! \n\nAna grinned at the observation and decided to forgo a raid of her underwear drawer, lest his lordship become even more fussy. Besides, the shirt stopped inches above her knees. Sean's arm lay fixed in front of her pillow, leaving her only one place to rest her head. With a click, the room faded into black and grey. His arms were around her the instant she nestled her head into the slope between his collarbone and the rise of his pec, her cuddle spot. \n\nAna echoed Sean's soft, satisfied sound as she burrowed into the solid warmth of him. She stretched her leg along the length of his, delighting in the tickle of his hair beneath her calf. Her brows furrowed after she stumbled upon an odd realization. Sharing a bed like this for the first time, felt as intimate as all the things they usually did when they were horizontal...maybe more. \n\nThe constant thud of his heartbeat beneath her left ear lulled her into relaxation. Sean spoke a second before her eyes fluttered shut. \n\n\"Thank you.\" His voice sounded so vague, Ana thought she dreamt it. But his hand covered hers on his chest, letting her know he was still awake.\n\n\"Hmm?\" she murmured quietly as his fingers swayed over her knuckles, his other hand stroked her back.\n\n\"Thank you for staying with me today.\" His words reverberated under her ear. \n\nShe pressed her lips to his collarbone and inhaled his clean, male scent. \"You're welcome...I wanted to be there...for you and glad everything's going to be alright.\" She let out a sleepy sigh while his jaw rubbed against the top of her head like an affectionate cat.\n\nSomewhere between awake and asleep she realized how foolish it was to give this up. How close she'd been to missing it all\u2014by the timing of a phone call before her rehearsed speech.\n\n* * * * *\n\nAna snuggled deeper into the delicious cocoon of warmth. Her heart crashed against her chest and she jerked when something scraped her neck. The boom of her heartbeat clamored in her ears, bringing sleep to a violent end. Her awakenings had long been lethargic and solitary\u2014except for that morning in July. The taste of mint lingered on her tongue. It couldn't it be morning already. \n\n\"Good...you're awake,\" said the voice in the darkness. It was rusty and purring with the promise of the forbidden. \n\nThe rough tickle descended to her shoulder followed by something soft. It felt so good, it melted the cold tentacles of fright that had dragged her from sleep. Through the haze of semi-awareness her brain registered a hand smoothing her side. \n\n\"Mmm...no panties.\"\n\nShe wiggled closer and called out his name the instant she realized Sean was near. Her body answered the iron heft resting near the crevice of her backside with its own silky moisture. \n\nSean heard the velvet rasp of his name and suddenly his skin felt two sizes too small. He had her on her back in the next breath; his hands dove under her shirt, pushing it up to get to more of Ana. She writhed beneath his eager fingers. Her thighs felt softer, the swell of her hips felt sleeker than last Saturday. He licked and kissed a slow trail from the crevasse of her navel, up her taut stomach. The sheets rustled in the dark as her feet skated up and down the bed each time his mouth left her skin. He settled between her legs, his arms keeping his full weight off her as the tip of his tongue scaled the side of a puckered nipple.\n\nAna arched her back, intent on giving him better access. Sean didn't disappoint; his lips latched onto the swollen crest. Her breath broke; she crashed back onto the bed as the heat of his mouth, sucked and pulled on her breast. He blew wisps of air onto the wet peak, making her shiver before he moved aside. She held onto his shoulders and twisted and bucked under him as he exacted the same, delicious torment to her right breast. One of his hands slithered down the center of her body, taking its sweet time, teasing her as his fingers inched lower, got closer. Yes!\n\nDesperate for air, Sean released the hard nub from his mouth. The feel of her moist curls and hot, dewy flesh under his fingertips made his breath go from even to choppy within seconds. She took advantage of his loss of balance and rolled atop him and into a cat pose. Her mouth found his; their tongues danced. Back and forth they went, so seamlessly he didn't know where his mouth ended and hers began. He nipped and licked her upper lip; her teeth grazed his lower lip in gentle reprisal before the tip of her tongue followed. \n\nTheir kissing game continued while Sean held the back of her shirt bunched between her shoulder blades like a harness. Ana played the willing captive, rocking over the hand cupping her sex, assisting the glide of his thumb around her clit. He found ways to make her melt for him, to ease the passage of one, two, then three long fingers inside her and swallowed her breathy mewls as her slick walls closed in on his digits. Her arms and legs buckled he didn't wait to ease her beneath him again. He inhaled, pulling in Ana's wet-earth aroma from his soaked fingers. It wasn't enough. He had to experience her through all his senses.\n\nOne heartbeat rushed into another as the hiss of Sean's sharp inhales sliced the silence. Her eyes followed the silhouette of his long fingers sliding in and out of his mouth. Desire dampened the apex of her thighs at the sight of him tasting her. Her eyes searched through the shadows to catch his expressions as he sampled her arousal like a sommelier. She doubted there was a cure for its affect on her\u2014and if there was one, she didn't want it. But she couldn't lay back and just watch any longer.\n\n\"See what you do to me?\"\n\nAna canted her hips, rubbed her sex against his pelvis and lower, where he was hard and jutting out between them. He groaned and ran his cock over her wetness over and over. \n\n\"Kiss me.\"\n\nA current of sensual pride pulsed through her blood the second Sean's body went rigid above her. Watching her taste herself, taking it from him, was one ingredient in his sexual kryptonite. Doing it in the dark heightened its decadent allure.\n\nHe opened his lips on hers. Her tongue swirled along the roof of his mouth and licked the faint saltiness there before retreating. Sean mimicked her; play continued until the taste of her essence dissolved in their mouths. They traveled the corners of the bed in a tangle of arms and legs, kissing and writhing on each other. \n\nAna kept his wrists pinned to his sides while her teeth gently raked his nipple then swept it with quick darts of tongue. He had no intention of going anywhere as she turned her focus to its twin. Her ardent mouth traveled lower, showing him how well she'd paid attention to what he liked and debuted new ways to excite him. She explored him as if she didn't want to miss a thing. And the wisp of her hair below his hips shouted exactly what the next thing was. He twisted under her as the pads of her fingers brailled the textures of angry veins squeezed within hot, hard, erect skin. Her cool breath at the tip of his cock sent his blood pounding in his ears. He was too wound up to withstand her oral attack for much longer. \n\nHe grabbed a fistful of her hair, preempting the next pass of her tongue along that sensitive spot under the swollen crown. There was only once place he wanted to be when he came. \"I need to be inside you.\" \n\nThe smoke in his voice rolled over her skin, reaching her primitive need to fuck, to mate. Ana rolled away and crawled to bedside table. The dim light blazed through the darkness, making her squint and blink as she fished out a condom from the drawer.\n\nSean bit down on the wrapper and tugged. Nothing happened. He tugged again. \n\n\"Let me try,\" \n\nHe grinned and shook his head as Ana's first effort yielded the same result. She tried with her teeth this time.\n\n\"If what's inside is made the same way, it'll redefine the meaning of safe sex.\"\n\nAna chuckled, but remained determined to make this piece of foil submit to her will. \n\n\"See? Third time's a charm,\" she boasted and arrogantly tossed the packet to him. His pursed mouth let her know he wasn't that impressed with her lack of humility\n\nBut the packet vanished the second her proclamation jumped off her tongue, taking her momentary triumph with it. They laughed while they hunted through a maze of sheets and pillows. Everything got tossed to the floor with cartoonish haste and they laughed some more. It was Ana who came up with the lost treasure. \"Got it!\" she said, waving the loot between her thumb and index.\n\n\"Nice save.\"\n\nFor a moment, Sean wished there'd be no barrier between them when he slid into her. He still held onto the memory of the first time, the only time he'd measured the feel of a woman's most feminine secret with his cock. Lightening raced through his veins as he remembered Ana on the kitchen island, her wet satin closing in around him. So hot. So snug. So perfect. The thoughts and images boiled over then evaporated as her fingers rolled the protective sleeve down his pulsating length.\n\nHe willingly fell back onto the bed under her command. She knelt next to him and pulled off the last article of clothing on the bed. What the fuck? A Colts fan? But Ana straddled him before his quip about Peyton what's-his-name ever had a chance to morph into something witty.",
        "\"Do it,\" he urged with a rough moan as she brought the tip of his shaft to her opening. A rush of adrenaline coursed through his blood as he watched Ana press down onto him, felt his blunt tip slowly part her soft, resistant flesh. His hands stilled her hips so he could savor these first moments when two became one. He loved the look on Ana's face when the first inches penetrated her.\n\n\"Ah...yesss,\" he groaned and hissed as her pussy slid over the length of his cock. Their sounds merged as their bodies connected completely. Ana wasted no time. She moved over him, first with sharp, arcing movements then an undulating shimmy. She shifted from bull rider to belly dancer with effortless grace, making him buck and twist beneath her. Her pussy circled and gripped his cock with breathtaking perfection. And she did take his breath when he looked at her. Every move accented the sloping lines of her neck and arms and her womanly curves. The soft light fell over her golden skin, casting her in a dreamlike glow. The blissed out look on her face switched his brain to pure sensory mode. \n\nAmber highlights tumbled down her dark spirals with every sway of her head as she rode him. Her breasts bounced in time with the rhythm their bodies made and begged to be held. His hands tested their weight; his fingers strummed the hardness of her light brown nipples. He marveled at the softness of her skin, how it contrasted with his lighter skin tone. His gaze wandered down to the scattering of curls between her thighs and lower. He lifted his head to see his shaft emerge covered in latex and glossy with Ana's juices. He fisted the sheet at the sight of his cock disappearing within her rosy lips. Seeing and feeling his dick fuck her put him in a trance. He lost all notions of time and space. He plunged upwards\u2014 his hands gripping her hips\u2014one, two, three, four times before he realized Ana had gone still. His eyes moved up while he waited for her. Her smile was nothing short of wicked. \n\n\"Like what you see?\" Her voice sounded like crushed velvet; her autumn brown eyes mesmerized him\n\n\"Take a guess.\" \n\n\"I think you like to watch,\" she said in her sexy-witch voice.\n\nAna leaned back, her arms behind her on the bed and she lifted up. Oh...so... slowly. \n\n\"Look.\"\n\nHe did. The image of his cock sticking out of her branded his eyes.\n\nShe impaled herself. Fast. \n\n\"All gone. Inside me.\" \n\nAnd then she said the three words that turned him into a bull charging a red flag. \n\n\"Where you belong.\"\n\nShe saw the dark look creep over his face. It exhilarated and scared her at once. The muscle in his jaw twitched and he sat up. \n\n\"Where do I belong?\" \n\nAna worried at her lip. She couldn't believe she had said it out loud like that. Sean's hands smoothed down her thighs to the back of her calves. His cock stirred inside her, making her flesh coil around him in response. How did his question touch a much more intimate space inside? How?\n\n\"Tell me.\" \n\nI don't know.\n\nShe distantly registered the unfolding and stretching of her legs behind him. His hands cupped her face: his blue eyes drilled hers. \"Tell me where I belong.\" The quiet power in his voice invaded the dark corners of her mind.\n\nWith me.\n\n\"Inside me,\" Ana breathed. \n\nIt didn't sound as bold and confident as the first time but she must've done okay because he rewarded her with a kiss. She half-expected him to claim her mouth with the same intensity of his words, instead his lips moved gently against hers. The light touches of his tongue intoxicated her, made her hold onto his shoulders. He suckled her lower lip and slowly released it. He planted her hands behind her on the bed and mirrored her pose.\n\n\"Say it again,\" demanded as he surged up into her.\n\nAna met his next thrust midway. \"You...belong.\" The friction killed her voice.\n\nSean bucked and rolled his hips. \"Where?\"\n\n\"Inside,\" she crooned over a delicious stroke. \"Inside me.\" She punctuated her words with a sinuous grind of her body. \"Just the way...you love it.\" \n\n\"You love being...inside me...don't you.\"\n\n\"God, yes!\" he grunted as she pushed back on her heels and palms. Her backwards glide along his length was the sweetest agony.\n\n\"You can't get enough...can you.\" \n\nSean speared into her and made a low sound of affirmation. It wasn't enough. She wanted to hear the words. Her naughty interrogation continued and dragged a litany curses and prayers from behind his gritted teeth. They rocked back and forth like a pendulum over the bed until Ana's triceps burned from exertion. \n\n\"Come here,\" he whispered as the pace slowed way down. \n\nHe crossed his legs under her and wrapped her up in his arms. It was a perfect storm. Ana's hips rolled in tiny, intermittent circles while he pumped into her. She rested the side of face against his and sprinkled kisses past his temple. Every puff of air along his neck, every lacey sigh above his ear, became a sweet affirmation of life. Her limbs folding around him like ribbons were a testament to the beauty of sharing, connecting.\n\nHis arms crossed her back, keeping her anchored while his cock stroked her right where she needed it. An aria of trapped sounds and staccato breaths marked their slow ascent to the peak. The hard lines of his chest and abs rubbed over her, turning her skin into one sweaty, erogenous zone. \n\n\"So good...so good,\" she sobbed into his neck, smelling the tang of perspiration mixed with sweet soap-and-water. Her pussy fluttered, validating her words while Sean's chest hair skimmed her nipples. She held him closer, felt his muscles bunch beneath her fingers as she clutched and squeezed his shoulders and back. Her orgasm was just within her reach now, every moment promised to be the one of release, making her chase the sensation another second and another and another. The room felt hot; her mind felt restless and possessed. This must be the edge where heaven and hell met.\n\n\"Close,\" she whimpered again and again, hoping Sean would help her. \n\nAnd he did. \n\nOnly Sean's help hurt...so very, very good. \n\nHe ducked his head and sucked her right nipple while his rough fingertips rolled its twin. Her fingers sliced through his soft black hair and held on as energy surged between her legs. The bed squeaked under the power of his quick, deep shoves. Ana's eyes snapped shut; her mouth parted on a silent scream. She was there, soaring out of her body and into a kaleidoscope of stinging sensation and light. Sean was with her when she crashed. \n\nHe gave her everything he had as the lightening pressure racing up the pit of his stomach zoomed to the end of his dick. Only sweat kept his skin from being glued to hers while they held each other tight. He lost his rhythm the second Ana came apart. Her pussy pulsed and pulsed around his aching shaft. He watched the expressions flit across her face. She was killing him. \n\n\"Sean.\" \n\nIt was barely a murmur, but the way she called his name, the pure rapture in its sound, set him off. He heard the squish of Ana's wetness against latex below her encouraging words as he pumped harder into her. The paisley pattern behind the headboard swirled in front of his eyes. Pleasure tightened and rose inside his hardening cock. It erupted from him in quick, violent bursts within the protective sheath. The world spun away into a savage release and then sweet peace.\n\nHe surfaced to feel of her hands smoothing his back and arms. Her breath fanned his skin, cooling him and making him shiver at once. Was there anything sweeter than Ana nuzzling his neck? When did sex ever feel this way?\n\nAna rested her cheek on his clammy shoulder, entranced with the sight her fingers walking up and down his arm. A breakup seemed like such a smart, preemptive move twenty-four hours ago. Now Sean was in her arms, spending his first full night in her home. The inclination to find the formula to explain why something so out of her reach fit so perfectly in place with the turn of a day buzzed about. Instead, she flicked it away, relishing the feel of his skin, warm and firm under her cheek, the tingle of his fingers tracing the column of her spine. She breathed in the serenity of the pre-dawn hour and sublime wonder of having this beautiful man in her arms. \n\n\"Sean.\" \n\nHe didn't just hear the note of lazy contentment and pleasure in her voice; he felt it. His hands went to the back of her head, holding her in place while he tasted her soft, full lips. They both jerked when a strong aftershock made Ana's cunt ripple around his narrowing cock. She tore her mouth away, her lips parted in an \"o\" and her brown eyes widened with surprise. The mist of perspiration and play of light on her skin gave her an ethereal glow that seemed to come from within. \n\nHe cupped the sides of her face and winked. \"Beautiful.\" \n\nShe pressed a kiss into his palm, about to echo his sentiment when she caught the twinkle of mischief in his eyes.\n\n\"Smartass.\"\n\nHer dimpled grin told him she'd caught the private joke; her uninterrupted look of drunken joy said she trusted the sincerity of his compliment. His thumb found the tiny dent of a white scar high above her left eyebrow. She rubbed her face against his palm with kittenish abandon. \n\nHe lied. \n\nAna was so exquisite; it almost hurt to look at her. \n\n\"Belle?\"\n\nNo one had ever abbreviated her name that way before. Something about it felt special and intimate because it was just between the two of them.\n\n\"Mmm?\"\n\n\"We need to move.\" \n\nShe smiled inside, remembering she'd used those very words in the shower. Moving was the last thing she wanted because her body felt like it had lived a week in one day.\n\n\"You look worn out,\" he said as their bodies disengaged. \n\nShe nodded and he brushed the back of his fingers down her jaw. \"Bet you thought I'd be easy to handle.\"\n\nHere she was expecting empathy and fell for his teasing. Again. She slapped his hand away. \"Brat!\" \n\n\"You need to work on selling the outrage.\" His index barely touched her dimple. \"This is too cute.\" \n\n* * * * *\n\nSean felt Ana's lips between his shoulder blades before the line of her legs disappeared from the corner of his eye. He splashed his face. What a day. He exhaled the relief that Grandpa was okay and inhaled the mystery that was Ana. \n\nTwo months ago he'd had it all figured out on the drive home from Borders. The next night, he decided his self-imposed sex break ended with Anabelle Williams\u2014the night her name first appeared in his e-mail inbox. He'd weighed his options when they'd overheated like teenagers in the parking lot: have sex or wait. Instinct said she'd sleep with him, despite it not being her m.o. Lord knows she was ready and willing. But talking about her mother had rendered Ana somewhat vulnerable right then. Finding sneaky ways to abuse a woman's trust just to get some sex wasn't his thing. He didn't need to and wouldn't resort to such tactics even it weren't the case. She'd come to him of her own accord. Plus, he had a perverse desire to delay the inevitable conclusion. \n\nHe had listened to her padding around his bedroom in the dark and for the first time in God knows how long, he wondered if he'd rushed things. He shrugged it off and reached for the light. Ana was a grown woman; he hadn't lured her to his front door or into his bed with false promises. If she wanted to go he'd help her dress and send her home with words to make her feel happy she'd shared her body with him\u2014even if it was only one night. He would've been okay with that. But one look at her, he realized he didn't want to part ways so soon. Plus, there wasn't much he could come up with to erase the panicked look on her face. Not at three a.m. when his brain was still shorted out from all that great sex.\n\nOnce he made up his mind, he went with it and usually got his way. He'd expected Ana to be no exception; he'd just coast along with the usual charm, fun and sex then move on when the inevitable plateau hit. CuriousBloom had pegged him easily on that score\u2014though with thinly veiled censure. No doubt she'd be laughing in cyberspace if she knew the way Ana affected him, so fast. He scowled and splashed his face again. The last time his online nemesis crossed his mind was the day he met Ana. He looked in the mirror and had a feeling he was staring at a marked man. One who didn't mind one damned bit that he'd been wrong about a woman. Now that was a first.\n\nHe wasn't sure if this was short-term fling or more. There weren't any signs of boredom in sight but there was still a lot he didn't know about her. He knew the important things instinctively, but he was curious about the details he'd missed because of their no-strings casualness. He had one foot in, one out like he was waiting for a sign. That wasn't his approach. He was usually certain early on what to expect, and if it lined up with what he wanted. He heard a kitchen cabinet shut. He'd save the analysis tomorrow. He'd check on Grandpa in the morning and he'd make up his mind about\u2014\n\n\"I'm going to fix something to eat. Did you want something too?\"\n\nAna had her head and shoulder leaned on the doorframe. Her folded arms and pressed up breasts obscured the blue horseshoe logo. One foot crossed the other. Those black fuzzy slippers were a comedy routine. She was the girl across the street from the girl next door. That's where the girls with the adjective defying appeal resided. She tucked a curl behind her ear. Yes, he wanted something. He told her so. The way she smirked when she said, \"good,\" told him she didn't miss his quick perusal of her. Then again, she was doing the same thing.\n\n\"Stop it. You're making me feel all violated.\"\n\nHer autumn brown eyes rolled and lit up. \"Oh, please. If you didn't want me to look,\" her hand waved like a conductor's, \"you would've covered up most of this nakedness.\" \n\nShe pivoted then looked back at him. \n\n\"Oh, and Sean?\" \n\nShe waited until she had his full attention before giving him a blatant once over. Her eyes groped and fondled him as they paused deliberately in certain places. At least, that's how it felt. Her lush pout turned the idea of a second round of sex into a distinct possibility. She winked when their eyes met again. \"You're beautiful,\" she said with mischievous, \"gotcha\" emphasis.\n\nAna turned to leave, so thoroughly impressed with her own comedic brilliance she felt a fit of laughter coming on.\n\nSean threw his towel onto the vanity and smiled at the eruption of giggles outside the empty doorway. \"Smartass.\"\n\n\"I heard that!\"\n\n* * * * *\n\nAna fluffed her pillow and dropped it onto her side of the newly made bed. The faint scent of what they'd been doing perfumed in the air. \n\nHe tilted his head to her shirt. \"You're a fan?\" \n\nIt wasn't really a question, it wasn't really an accusation. Yet it was both. Only one kind of person would say it that way. It made sense. He'd gone to school in Boston and his parents were from the New England area. \n\nAna shrugged, took a sip of water and set the cup on the night table. She went about fixing the tuck of the sheet at the foot of the bed. Developing an interest in the sport made for easy bonding with her college-football-coach-of-a-dad. A hardcore fan she wasn't, though her early Super Bowl predictions held up for the past five years in a row. \"They're a good team. I think this is their season.\"\n\nHis non-committal nod hid nothing. Maybe because he didn't try very hard.\n\n\"Ooh,\" she said, doing a goblins-and ghosts routine, her fingers wiggling, \"are you violating the Patriots' fan code of conduct going out with a\u2014\" her dramatic pause ended with choking sounds, \"\u2014C-C-Colts fan?\"\n\nHe laughed. \"Honey, check the calendar. Football season only started two days ago. You're getting waaay ahead of yourself\"\n\n\"We'll see come Super Bowl Sunday...after the Patriots' season is over.\" \n\nSean looked at her like she'd forecasted a freezing day in hell. \n\n\"Don't worry. I won't be all in your face, dropping the 'I told you sos' and acting all smug and superior the way some fans of a team we won't mention like to.\"\n\n\"I promise not to be that way when Brady hoists the Lombardi trophy. Again.\"\n\n\"You're already doing it! Doesn't matter because, a: it won't happen.\" He shook his head at her assertion. \"B: it doesn't bother me either way because I love hockey way more.\" \n\nThe realization this was the first time they'd spoken about the future more than a weekend ahead made her pause.\n\n\"Oh, for Christ's sake! Hockey's a niche sport!\"\n\nPause over. She parked a hand on her hip. \"Do you want to sleep on the couch?\"\n\n\"There aren't even any hockey teams around here,\" Sean teased, hoping Ana would take the bait. Served her right for uttering that kind of blasphemy. Her irritated expression was too cute. \n\n\"What about the Anaheim Ducks, the San Jose Sharks?\" She was about to mention the Kings but thought the better of it.\n\n\"Well, well. Don't tell me I'm shagging a puck bunny.\"\n\nShe eyed him with the indignance of a bona fide NHL fan. So what if Theodore and DiPietro were hotties? It didn't make it okay for him to throw around the \"p\" word like that. \"The couch is that way.\"\n\nHe grabbed her arm. \"What are you doing?\"\n\n\"I'm about to violate the second rule in the...what did you call it? Oh, yes...the conduct book,\" he threatened, intent on getting back into the good graces of this Colts-hockey fan. \n\nAna ducked her head and tried to push him away. Her hands wound up trapped between them instead, and his mouth landed on that spot behind her left ear, the one that drove her crazy. She was biting the inside of her lower lip to stifle all sound. That didn't stop her breath from coming in heavier rushes of sound. \n\nHe nipped the tip of her earlobe. \"All forgiven?\" It was a forgone conclusion pretending to be a query. Her ego balked at him viewing her as a walk-in-park. \n\n\"No,\" she pouted and twisted away from him. But Sean was quick to shackle her hands behind her back.\n\nHis blue eyes glittered with predatory heat. They told her only time, not her half-hearted protests, stood between getting what he wanted. \"No?\"\n\nHer arms tensed with resistance. Just because he had every reason to use that cock-sure undertone didn't mean she had to like it. Sean made a nonchalant sound and his mouth went to work near her right ear. He didn't lift his head until she let out her first moan. It must've taken oh, five seconds? \n\n\"Why are you wasting our time fighting like this?\"\n\nAna struggled, only to feel the renewed strength of his hands on her wrists keeping her still. \"If I'm wasting your time then why don't you just let me go?\"\n\nHe shook his head. \"Don't try to twist my words around. I'll let you go if you really want me to.\" \n\nHe cast a deliberate look down to her breasts. His rakish smile left no doubt he'd noticed the jut of her nipples. \n\n\"But we both know that's not the case, sweetheart.\" \n\nHe emphasized his point with the slow rub of his chest against her sensitive peaks. Ana didn't have time to smother her gasp. The pinch of sensation was lightning fast. His mastery of her made her ache to submit. But some part of her brain wanted to test the limit. She'd never seen him lose control sexually. He was like a leashed panther even in those wild moments of climax.\n\nHe tried to take advantage of her open mouth but she shifted away from him. He transferred her wrists into one of his hands while the other grabbed her hair; his lips followed the line of her jaw. A firm tug on her nape aligned her head just where he wanted. The gold in her eyes flashed as his mouth hovered above hers. His lips swept over hers...barely. He was ready for her this time when she gasped, and his tongue slid slowly, slowly into her mouth. Every trick he'd learned in two decades of kissing got edited down to his two months of kissing Anabelle Williams. He tasted the spicy sweetness of the chai tea she drank.",
        "Buttery kisses. That was the only way to describe the way Sean's hot tongue sought out the recesses of her mouth. His fingers raked her hair, making every strand tingle at the root. The sensation tumbled down her back, her legs, her feet. Now she really knew the meaning of a toe curling kiss. Her hands rested on his bare chest, partly for the support, partly for the way his skin felt under her fingers. She rubbed against him and his answering moan made her melt. His mouth left hers as he released her hands.\n\n\"Are you really going to make me sleep on the couch, baby?\" His voice oozed sex. The hot, thorough kind. Her hands drifted down his stomach. The kind only he could deliver. Her hands went lower. Soon.\n\n\"I don't think so,\" she croaked.\n\nHe eased his leg between hers. The wet wisp of Ana's, kinky curls over his thigh made him want to throw her on the bed. That she responded this fast, to a kiss, sent his blood southwards right along with her caresses. Her fingers did a maddening dance along the underside of his cock. Oh, yes. Round two just went from highly probable to sure thing. \"Good. Because I wouldn't be able to sleep a wink knowing you were in here, needing me like this,\" he moved his thigh and eased her hips forward. \n\nThe tiny friction almost made Ana come. \n\n\"You're projecting,\" she tried to accuse, but it came out sounding like a moan.\n\n\"You think?\" \n\nHer breath hitched at the sight of his hand guiding his cock through her wet folds. It was as though she was watching this happen to someone else. And then she felt him there, the blunt head slid up and down her lips kissing her swollen clit with his swollen tip. Heaviness pooled within her core upon seeing his length lacquered with her arousal.\n\n\"I-I,\" she gasped, \"didn't mean it...like that,\" she barely managed to speak as she felt the head nuzzle her opening. Her sex, her entire body throbbed with anticipation. Was he going to fuck her without a condom? Would she be the first?\n\nHe pulled away. \"What did you mean?\" He sounded like he was merely indulging a silly whim of hers. That emboldened her. \n\n\"You wouldn't sleep a wink,\" she reached for his shaft, \"because of this.\" Her hand closed over his increasing hardness. The wet trail made it easy for her fingers to slide up and down his length. He moaned but didn't agree. Yet. That emboldened her.\n\nShe squeezed her hand, making him jerk and moan again. \"Good. I've got your attention.\"\n\n\"You always do.\"\n\nHe was trying to distract her but she wouldn't fall for his sexy charm that easy. It was merely window dressing for his was a take no prisoners approach. Her fingers slid to the ridge below the crown. \"It would be hard\u2014\" \n\n\"In case you haven't noticed, it already is.\"\n\n\"\u2014for you to sleep, thinking about my hands touching you. Fast, slow, soft, hard\u2014all the ways you like, all the places you like.\" Her thumb mimicked her words as it rolled over the sensitive bulb. \"Isn't that the real reason you don't want to sleep on the couch?\"\n\nHis eyes were heavy lidded. His whole body looked rigid but his smile waged the dare. \"No.\"\n\nShe nipped his ear in reprisal. \"Maybe it's my mouth, that'll keep you awake.\" She dropped light kisses along his neck and went south. His breathing changed as her tongue danced around each masculine nipple.\n\n\"That's not it.\" Mischief and desire played in his blue eyes, they masked his steely control. \n\n\"I bet I know what it is,\" she said as she moved down and onto her knees.\n\nSean watched her hold his dick like it were something she was about to worship. Her lips surrounded the tip but instead of sucking, her tongue barely touched the seam. His attention was divided between trying to stand and the feel of Ana's hands and mouth teasing him. His skin felt feverish. He wished she'd suck him already. As if she'd read his mind, her lips retreated very slowly. What a tease. He felt his cock swell to follow and fill her mouth. She looked up at him with those sex-kitten eyes. He smiled down at her. God, she was such an unbelievable tease.\n\nOne hand gently pumped his erection while the other palmed the orbs below. \"Is this why you don't want to sleep on the couch?\" \n\nHow'd he get so lucky?\n\n\"No,\" he said, trying to sound cavalier.\n\n\"I didn't think so. I'll just have to try something different,\" she quipped as her mouth advanced again. \n\nOr was he cursed?\n\nHe held onto one of the posts as her mouth and tongue engulfed him with delicious, swirling pressure. She alternated the rhythm so every sensation built off the previous pass of her mouth. Hers wasn't an aggressive get-you-off-fast technique. Ana took her time, taking turns between titillating him and gently backing off. She handled him with such care. Her moans weren't a dramatic auditory tale. In fact, he had to strain to hear them. It was as if she couldn't help being turned on but didn't want him to know how much. Her eyes would lift halfway and close slowly as she sighed. Her skilled mouth withdrew and she licked her lips with lurid swipes of her tongue. \n\n\"I can taste myself on you.\"\n\nShe saw the fire in his eyes. Ah, yes. Kryptonite. She licked her lips again and watched his eyes follow the movement. She felt sexy, uninhibited and outrageously naughty. \"Would you like to taste?\"\n\nHe hooked his hands under her arms with an almost painful grip and pulled her up. Superman was thisclose to losing his control. She saw it in the hard set of his jaw. That emboldened her.\n\nShe flattened her palms on the wall of his chest, maintaining the small distance between them. \"Do you want a little taste of me?\" she asked most innocently.\n\n\"Yes,\" Sean growled and made a mockery of her efforts to keep him at bay.\n\nHe cupped her face and brushed his open lips over hers. She was ready for a full-on assault but his tender, restrained kisses broke through her defenses. Her mouth parted to welcome him as he traced the contours of her bottom lip with his tongue. She hugged his waist; her fingers lightly raked his back and molded the shape of his ass before settling at his nape. Sean's hands snuck under her shirt, seeking out places to make her burn. Someone moaned; she wasn't sure who. She felt his middle and index fingers bracketing her clit, but not touching it. Back and forth he went, making her arch into his expert touch. The slow, insistent throb between her legs kept building and building. It got harder to breathe easy or remain still. Ana had to break the kiss. Her blood hummed as she climbed and climbed. She buried her face in the side of his neck. Her faint noises rode a whoosh of broken air. His slow, steady massage felt\u2014 \n\n\"That's why.\" His gruff words sounded so hot in her ear. \n\nThe hand between her legs stopped moving, he cupped her chin with the other, forcing her to look at him. He looked wolfish and hungry. The corner of his lip curled up. \"Those noises you make when you're about to come. That's why I won't sleep on the couch tonight and why you won't let me.\"\n\nShe couldn't find it in herself to disagree and leaned in for a kiss. So they were calling it even. Fair enough. But Sean's grip didn't relent. \n\n\"Am I sleeping on the couch tonight?\" he demanded. \n\nSo much for fair play.\n\n\"No,\" she husked. She'd do anything he asked. That's what he wanted all along.\n\n\"Good.\"\n\nAnd just like that Ana lost the dare. \n\n\"What\u2014\" she exclaimed as he pushed her at shoulders and she bounced onto the middle of her fairy tale bed. She didn't need to complete her question.\n\n\"I'm breaking the first rule.\"\n\nHer dirty mind raced with the possibilities his voice and intense eyes promised. \"What's the first rule?\" \n\nHe dropped a knee onto the bed. \"I'll show you. Now take off your shirt.\"\n\n* * * * *\n\nAna pulled in air through her clenched teeth and hugged Sean's back as another thrust pressed her into the mattress. \n\n\"Please.\" Her voice sounded weak and distant even to her own ears.\n\nHer crossed legs bobbed over Sean's back as he moved over her in the slow, sinuous rolls she needed. He rained kisses over her damp neck, her jaw and took her whimpers into his mouth as another orgasm circled and built quickly. Ana didn't know if she wanted this to continue or end. But she wanted them to ride out this storm together. She arched her hips and used her legs to pull him deeper, encouraging the harder, more urgent drives he loved. \n\n\"Yes!\" His voice roared like low thunder. He threw his head back as she squeezed his cock within her fluttering walls. The muscles along his neck and upper arms flexed with the effort to hold back. For her. Her hands bracketed the sides of his face and she made him watch her. \n\n\"Come with me,\" she crooned until his movements became jagged, until he had no choice but to pound into her. Ana enveloped him completely with her arms, her legs, her voice, her clenching sex and her eyes. Her autumn eyes were always his undoing. It was too much and not enough. He laced his fingers with hers on the pillow and gripped her hands with almost bruising force. His full weight bore down on her. Smack. Smack. Smack. That and her sobs mixing with his guttural moans were all he knew as their sexes connected again and again and again. They came in the next breath. Fierce. Hard. Deep. \n\nSean shook in the aftermath, every nerve ending, every cell in his body felt blitzed. He nestled his head in the arc of her neck. The mere thought of moving from the heaven of lying between Ana's thighs exhausted him. This part of using protection was an inconvenience that rarely bothered him this often. Maybe it was because he couldn't seem to get close enough to her, he always wanted more. Her palms moved from under his; he felt her hands absently smooth his back and brush his hair from his forehead, calming him. Her gentleness reminded him how he hadn't been. \n\nBy some miracle, he was able lift his head.\n\n\"Was I too rough?\"\n\nAna shook her head and kissed the valley in his chin. It was thrilling to see and feel him lose control, even just a little, to be wanted that much. The concern in his voice and rueful expression made a place near her chest squeeze. She felt treasured and cared for. \n\n\"I'm so glad you don't play by the rules,\" she said in a voice laced with humor and good, three a.m. sex. \n\nHe dropped his forehead to hers.\n\n\"Me too.\"\n\nAna was on her way to sleep when she felt the bed shift. Sean was back. She felt her lips smile as his warmth surrounded her.\n\n\"Go to sleep, Belle.\" \n\nThe sound drifted over her like an intimate caress. Belle. She wasn't sure whether she told him she liked it or if she dreamt she did. \n\n* * * * *\n\nThe heat along her back and the weight below her breasts pulled Ana to awareness. Light penetrated her closed lids. The distant tick of the bathroom clock and the rhythmic sound of Sean's breathing blended into the Sunday morning quiet. There was only peace, so unlike Saturday morning.\n\nYesterday she'd woken up with a sense of dread while slivers of daylight peeked from behind the drapes. How ironic, since she'd kept a clock vigil all night, willing the hours to rush by. But yesterday she didn't know her presence during a crisis would matter much to Sean. Yesterday she didn't know she'd feel safe enough to cry in front of him or that he'd hold her and wipe away her tears with such tenderness. Yesterday she didn't know how much his worries mattered to her. But today... \n\nToday she'd really start to accept that she couldn't control everything. That things in life didn't fall into neatly labeled boxes or always make perfect sense. She'd needed a second trip to the ER to remind her of that. She opened her eyes enough to see Sean's arm draping her middle. If she continued to insulate herself from disappointment, from the unknown, she'd be alone in this bed with the weight of missing Sean instead of the weight of his arm around her this morning.\n\nThis morning there was a calm peace and Sean. She took his hand in hers, one that had sent her soaring and pulled her up from the floor, all in one day. Things didn't have to be perfect to be enough. She dozed off petting him. No, this was more than enough.\n\nThe slight touch woke him up to a dream. That's how Ana's bedroom looked with its off-white palette imbued with pearly daylight. She was touching him, not in the way lovers did to arouse or parade their skill. This was pure affection. She tucked his arm closer to her body and went still; her fingers loosely circled his wrist. That was the moment he made up his mind. He wasn't backing off. He felt her tiny jolt when his lips touched her shoulder.\n\nAna turned her head to him. \"Sorry.\" Her voice and smile were warm and sleepy, just like she was. \"This is new.\" \n\nHe kissed her shoulder again. She'd better get used to it.\n\n* * * * *\n\nA special thank you to Evanslily and TangledinYou for the encouragement and the roadmap. "
    ],
    "authorname": "August_Bouvier",
    "tags": [
        "romance novella",
        "love story",
        "erotic novella",
        "drama",
        "interracial romance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/kismet-or-happenstance-ch-05"
}