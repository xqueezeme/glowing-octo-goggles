{
    "title": "Three Square Meals Ch. 063",
    "pages": [
        "The first thing Admiral Lynton did when John agreed to destroy the Kintark base was to supply him with the location of his target. As his exceptionally gifted Tactical Officer had already deduced, they were tasked with travelling to the Mar'Katrach Nebula to seek out and eliminate the hidden resupply station. John had bid Admiral Gabrielle Lynton farewell, and with her assurances ringing in his ears that they weren't going to be facing significant defences, they were now on their way. \n\nThe Nymph turned the Invictus towards the Nav Beacon, flying the ship at one-quarter speed to conceal the power of their Trankaran engines. As they approached the Nav Beacon, she carefully plotted a course to their destination, then entered it into the Nav computer to check her calculations. When they cleared the system's local gravity wells she engaged the Tachyon Drive, and the ship was shrouded in a field of blue particles before it surged into hyper-warp a few seconds later.\n\nJohn had remained quiet, staring at the Sector Map while Jade guided the Invictus out of the Iota-Leonis system. Calara and Alyssa stopped what they were doing, and turned their chairs to face him, waiting for him to break the silence that had descended on the Bridge.\n\n\"So, they've finally declared war,\" he finally said, sounding subdued as the enormity of that announcement sank in. \n\nAlyssa had been listening to his thoughts, hearing him relive some of the brutal battles he'd experienced during his time as a marine. The large scale battles had been bloody, and the flashbacks were hard for her to follow, with John recalling chaotic scenes full of frantic combat, explosions, and the loss of his comrades.\n\nStudying his pained expression, she said soothingly, \"The situation's different now. You've retired remember? The Military can't force you into their wars any more. You're a good man, and you fight when it's the right thing to do, like rescuing us damsels in distress.\"\n\nHe was coaxed from his troubled introspection by her well-meaning words, and he smiled at her in gratitude as he asked, \"Still keeping me from dwelling in the past, honey?\"\n\n\"Always,\" she replied, giving him a loving smile.\n\nHe looked down at Calara where she sat at the Tactical Station, and saw that her face was furrowed with worry. When she realised his attention was focused on her, she met his gaze, and said in a sombre voice, \"The situation with the Traitor just got a whole lot worse.\"\n\nWith a firm nod, John replied, \"We've got to take Norwood out before that bastard can do any serious damage. The conflict with the Kintark is going to escalate rapidly now, so the stakes are much higher.\"\n\nCalara's pensive expression told him that she was thinking the exact same thing. Her voice was taut with stress as she said, \"We've got to stop him as soon as we can, John. This invasion could easily turn into a disaster with a traitor in High Command, and my Dad and Mateo are both caught up in it.\" \n\n\"Don't worry,\" John replied, sounding confident. \"We'll be meeting Buckingham in a matter of hours, and I doubt Norwood will have a chance to betray the Terran Federation forces this quickly. Trust me, we're going to bring that traitor to justice before he can cause any more harm.\"\n\nAlyssa also sought to reassure the Latina, and said enthusiastically, \"We've been in far worse situations in the past and pulled a miracle out of the bag. We'll sail in there and really fuck up Norwood's day. Don't worry, it'll be fine!\"\n\nThe brunette's spirits were buoyed up by the absolute conviction in John's voice, and Alyssa's unflagging optimism. She gave them both a lovely smile as she said, \"You're right, we can do this.\" Letting out a small sigh of relief, Calara turned back to her Tactical Console. \n\nAlyssa gave him a grateful smile, then turned her chair to face him fully, and asked, \"What are your thoughts about Admiral Lynton? She seemed to know a lot about you, and the 'broken' video comm seemed a bit suspicious. Could she be working for Norwood? Is she sending us into a trap?\"\n\nHe rubbed his chin thoughtfully, and replied, \"Edraele pointed out that we've not made any real effort to conceal our hyper-warp speed. Anyone looking into our exploits in the Iota-Leonis system could have traced our route back to Olympus, and would realise exactly how fast we can go.\"\n\nCalara spoke up and said, \"I spent a lot of time studying Admiral Lynton, and she's a cautious woman, reluctant to over-commit her forces. She's in charge of defending the Dragon March, so keeping her ships in reserve, and sending us off to assault this base does fit with her strategic thinking.\" She paused, then hit a couple of buttons on her console that recalled the holographic image of the dreadnought. Studying it again, she continued, \"It looks like her ship took a couple of hits from plasma torpedoes, and it has sustained minor damage near the comms relay.\"\n\nJohn frowned as he asked, \"There definitely wasn't anything incriminating on her in all the comms traffic you studied?\"\n\n\"Nothing,\" Calara confirmed for him with a shake of her head. \"She spoke to Norwood and Santini fairly frequently, but you'd expect that, with the three of them running the Dragon March campaign. There was nothing suspicious in any of her communications with either of the Admirals.\"\n\nJohn shrugged, and said, \"I guess we'll have to give her the benefit of the doubt until we see what's waiting in the nebula. If it's a trap we'll know for sure.\" Looking at the Nymph sitting in the Pilot's Chair, he asked, \"Jade, how long until we reach the Kintark base?\"\n\nJade twisted in her chair to look up at the Command Podium and replied earnestly, \"We'll arrive at the Mar'Katrach Nebula in five hours, fourteen minutes.\"\n\nAlyssa plotted the course out in her head, running through dozens of incredibly complex calculations, and applying her warp-tunnelling technique to further increase their hyper-warp velocity. She compared her final journey time with Jade's, and was justifiably proud of her capable student when the figures were nearly identical. Smiling at the green-skinned alien girl, she said, \"Nice one, Jade, I couldn't have done it better myself.\"\n\nJohn was smiling too, but more at the Nymph's raw enthusiasm, and eager professionalism. \"Impressive work,\" he said to her encouragingly. \"It looks like you're both better Navigators than me now.\" \n\nJade looked delighted to receive the warm praise from both of them, and she flashed him a lovely beaming grin, as her emerald eyes glittered in the glow from the Sector Map. He gave her a warm smile in return, then suddenly stifled a yawn, as he felt the persistent pull of psychic energy being drained from him to heal Sakura.\n\nAlyssa looked at him with concern, and asked, \"Why don't you go back to bed?\"\n\nHe frowned as he replied, \"I think I'd struggle to get any sleep. I'm not mentally tired, and I've slept a lot these past twenty four hours.\" Rising to his feet, he added, \"I'll relax in my Ready Room for a while instead. Care to join me?\"\n\nThe blonde girl gave him a sparkling smile that match the gleam in her eyes, and replied, \"I'd love to.\"\n\nTurning to look at Calara, Jade, and Faye, he asked, \"Do any of you want to join us?\"\n\nCalara was flicking through what appeared to be old news archives, and when John saw the title; 'The New Eden Chronicle', he realised what she was searching for. The Latina turned in her chair, and replied, \"If it's okay with you, I'll keep looking for more information on Sakura's family.\"\n\n\"Of course, what you're doing is important,\" he said encouragingly.\n\nJade had waited until he looked her way, and she replied, \"I'll keep Calara company for a while, but I'll join you later. We'll need to top Sakura up again in a few hours.\"\n\nHe winked at her, making her giggle as he said, \"I'll look forward to it, catgirl.\"\n\nFaye was flitting around his shoulders excitedly, and when he looked at her for her answer, she said, \"I'll keep you company!\"\n\n\"Let's go then, ladies,\" John said with a smile, gesturing for them to proceed. \n\nFaye winked out of sight as she changed locations, while Alyssa rose elegantly from her chair, then glided down the illuminated steps from the Command Podium as she made her way to the Ready Room. He spun his chair so he could watch her graceful exit, and knowing exactly what he was doing, she put more sass in her stride, rolling her hips as she glided away. The high heels she was growing fond of did wonders for her alluring gait, and turned her walk into a lethal weapon, absolutely devastating to the male sex.\n\nHer ass looked positively delicious, and he couldn't help but fondly recall taking her roughly in the shower, only the day before. Shaking his head to rouse himself from his lecherous thoughts, John waved Jade and Calara goodbye, then jogged down the steps to catch up to his stunningly beautiful Executive Officer. She gave him a flirtatious glance over her shoulder, the heels clicking in synch with the sway of her hips. Satisfied that she had his unwavering attention, she prowled into the Ready Room, temporarily disappearing from sight.\n\nHe found her standing by the sofas, waiting for him with an alluring smile on her face, while Faye was sitting cross-legged on the coffee table in the centre of the cluster of comfortable chairs. \"What's with the big seduction routine?\" he asked the devastatingly sexy girl with a broad grin on his face. \"Irillith drained me dry less than thirty minutes ago.\"\n\nAlyssa broke character, relaxing from her teasing temptress persona, and laughed with the free spirit of an eighteen year old as she replied, \"A girl likes to know she can still hold her man's attention. Besides, I love hearing all the lewd things you'd like to do to me when you stare at me like that.\"\n\nHe walked past her, giving her bottom an affectionate squeeze as he did so, then flopped down on the sofa. He was still feeling tired, so it was nice to just relax in the comfortable chair.\n\n\"How's it going, Faye?\" he asked the tiny sprite as he stretched out, resting his feet on the coffee table, while carefully avoiding putting them through her holographic figure.\n\nAlyssa raised a hand with one upraised finger, and said, \"Excuse me a moment, Faye, let me just perk up Mr Sleepy here.\" She leant down and gave him a scorching kiss, his lips tingling as she flooded him with more psychic energy, replacing that which he'd used healing Sakura. She pulled back a little when she'd finished, then rubbed noses with him in an adorable gesture.\n\nHe blinked in surprise, suddenly feeling all his weariness melting away, and exclaimed, \"Wow! That was a hell of a kiss!\"\n\nShe sat down beside him, turning as she did so, then leant backwards so she could rest her head in his lap. \"Do I take good care of my Progenitor?\" she asked him with a teasing smile.\n\nHe ran his fingers through her silky golden tresses, and said indulgently, \"The best Matriarch a Progenitor could ever have.\"\n\n*No offence of course, Edraele,* he quickly thought to his second Matriarch. \n\nThere was no reply, and he immediately began to worry that he might have upset her. He felt a strange itching sensation in his mind, and he felt drawn to the mental compartment that held the metaphysical representation of her in his subconscious. He closed his eyes so he could focus on it more easily, and with a start, he realised that he could tell she was still fast asleep. He felt relieved he hadn't accidentally woken her, so he left her to slumber peacefully.\n\nWhen he opened his eyes again, both Alyssa and Faye were watching him curiously, and he looked embarrassed as he said, \"Sorry about that, just checking on Edraele.\"\n\nAlyssa smiled, and said, \"She's quite smitten with you. I don't think you have to worry about her getting in a huff and giving you the silent treatment.\"\n\n\"The way you can talk to each other just using your mind is amazing,\" Faye said, resting her elbows on her knees, and then dropping her chin onto her clasped fingers as she stared at them. Her expression grew wistful, and she added, \"I wish I could know what that was like.\"\n\n\"It's overrated,\" John said with a frown and a dismissive wave of his hand. \"Two bossy Matriarchs in your mind twenty-four-seven... Who'd want that?\"\n\n\"Tell me about it!\" Alyssa agreed, her eyes widening as she nodded for humorous emphasis. \"I've got five horny girls constantly begging me to let them fuck John next, and a lusty Progenitor who fills my head with all the shocking things he wants to do to all of us. What's a shy retiring girl like me supposed to think in the face of such debauchery?\"\n\nFaye giggled, then pouted as she joked, \"It's not very nice making fun of the poor homicidal AI. Just because I dream of fashioning your filthy organic skin into a jaunty hat, doesn't mean I don't have feelings!\" \n\nJohn laughed heartily at the sprite's quick retort, joined by Alyssa's fit of light hearted giggles. He let out a happy sigh, and said, \"I needed a good laugh. We've had to deal with a lot of serious shit recently.\"\n\nAlyssa nodded, then turned on the sofa, still resting her head on John's thigh as she looked at Faye, and said to her, \"Speaking of which, I overheard your conversation with John earlier; about the recurring memory you can't get rid of. I'm sorry that's been troubling you.\" She frowned as she continued, \"I wish I could hear your thoughts as well. It feels strange to have someone on the ship that I care about, but I can't read their mind.\"\n\nFaye looked touched by Alyssa's heartfelt declaration of affection, and she replied in a quiet voice, \"I care about all of you, too.\" There was a sudden flicker of sadness over her pretty little face, but she masked it well, and continued, \"I really love being on the ship with you. Thank you so much for welcoming me into the crew.\"\n\nJohn smiled at her, and said, \"You're very welcome. Thanks for being so patient and giving me a chance to get over my prejudices about AI. I agree with Alyssa by the way. I love how cheerful and upbeat you are, and you've been diligent and hardworking in your role as Watch Commander, as well as supporting the girls in their research. You've become a fantastic part of the team!\" \n\nThe diminutive purple sprite bit her lower lip and blushed at receiving his resounding praise. Her wings fluttered rapidly, lifting her off the ground, and she looked deliriously happy. She grinned at them both, then said, \"As much as I'd love to stay here all day and be flattered by the pair of you, I'll leave you two to each other's company.\"\n\n\"It's okay, you don't have to go,\" Alyssa protested, as she had been enjoying Faye's company.\n\n\"Yeah, It's been nice chatting to you,\" John agreed.\n\nFaye shook her head adamantly, and said, \"You two don't get enough time together, and I'm feeling super happy now anyway. You've perked me right up!\"\n\nShe gave them a cheeky wave before disappearing from sight in a purple flash, leaving John and Alyssa laughing in amusement. Alyssa rolled on to her back again so she could stare up at him, and they gazed into each other's eyes for a moment.\n\nJohn began stroking her golden hair with his left hand, as he said with a smile, \"Faye's isn't just a cute little pixie, she's smart too. She's right, we don't get enough time to chat together.\"\n\nAlyssa gave him a lovely smile as she said, \"I'm listening to your thoughts all day, so it feels like we're chatting constantly.\"\n\nHe caressed her cheek with his right hand, and she nuzzled into it, planting a tender kiss on his palm. Her full lips were wonderfully distracting, but he wanted to take advantage of this quiet moment, and said, \"Unfortunately I only hear whatever you project to me telepathically, so you'll have to indulge me.\"\n\n\"What do you want to ask me?\" she inquired with a playful smile on her full lips.\n\n\"We were just joking around earlier, about you being my Matriarch,\" he began, staring into her enchanting cerulean eyes. \"But we both know things have changed there.\"\n\n\"You're referring to how you turned me into a mighty Progenitor I assume?\" she teased him.\n\nHe arched an eyebrow, and replied, \"You're reading my mind, you know what I'm asking.\"\n\nShe pivoted on the sofa, sitting up and turning towards him in a graceful move. Hitching up her dress a little to reveal her bronzed thighs, she threw her lithe leg over his lap as she straddled him. \n\nAlyssa pushed her breasts against his chest, then stared into his eyes as she linked her long, slender arms behind his neck. \"Nothing's changed between us,\" she said emphatically, her tone serious now, all the playfulness forgotten.\n\n\"But what abo-,\" he tried to say, before she leaned in to kiss him, cutting him off.\n\nHe wrapped his arms around her, and enjoyed the kiss, until she gently pulled away, studying his face with her enigmatic gaze. \"I love you just as much as before,\" she finally whispered to him. \"I'm still your good little girl, and one day, when all this craziness is over with and we can settle down, I want to have your children. Believe me, nothing's changed.\"\n\n\"You're so caring and considerate with the girls, and they all love you so much. I know you're going to make a wonderful mother,\" he said with utmost sincerity, ending his sentence with a tender kiss. \n\nShe kissed him back gently, her soft lips brushing against his, and her eyes were hooded as she gazed at him under her long eyelashes. Normally these intimate moments were a prelude to some intense lovemaking, but after his earlier activities with the Maliri girl, they were both content to just enjoy being with each other. It came as a surprise when Jade appeared behind the sofa, leaning over to give them each a kiss. They had been so engrossed with each other, they'd lost track of time, and hadn't heard the door to the Bridge sliding open, or the Nymph padding through it.\n\nJade had shifted into her natural form, and when she knelt on the sofa beside them, her luxurious soft fur felt amazing against Alyssa's bare thigh and John's arm. Turning to look at Jade properly for the first time in her catgirl form, Alyssa's eyes flashed with excitement, and she said, \"You look like a furry's wet dream! Stand up so I can get a good look at you.\"\n\nThe Nymph did as the animated teenager asked, pirouetting slowly so they could appreciate her exotic form. There were a number of relatively minor changes, and Jade was smaller now than her normal height, standing at just five-feet-tall. She was slim, and her breasts had dropped a cup size, but with the reduction in her frame, they looked much bigger. Her thick mane of long, dark-green hair, flowed over her shoulders, and down to the small of her back. \n\nThe major changes included her ears, which were a lot larger and pointed now, sticking up through her hair on the top of her head. She'd also grown a three-foot-long, fluffy tail, which flicked from side to side playfully as she showed off her new body for them. Finally, she was covered in a short, downy coat of stripy green fur, the colours alternating between dark green and lighter viridian stripes.\n\nAlyssa shifted on John's lap, feeling him grow hard beneath her, and she glanced his way, giving him a mischievous smile. \"She looks gorgeous, doesn't she?\" she asked him lustily.\n\nJohn flushed, but he saw no judgement in her gaze, just wild encouragement. \"She's very beautiful,\" he agreed, staring into Jade's emerald eyes.\n\nThose cat-like vertical pupils widened as she stared back at him, and she began to emit a throaty purr. Alyssa climbed off his lap with the limber grace of an exotic dancer, and she moved to stand beside the Nymph. \"Her fur's so soft,\" she gasped as she ran her hands over Jade's body.\n\nFollowing her lead, he stood as well, flanking Jade as he ran his fingers over her petite frame. Alyssa was right, the green fur was delightfully warm and downy, and he enjoyed brushing through it with his fingertips as he followed the contours of her toned and wiry body. Jade's purring intensified at their touch, and Alyssa leaned in to kiss her, her tongue darting playfully over those pointed canines. ",
        "When Alyssa pulled back, Jade turned towards John next, then stood on tiptoe for a kiss. He wrapped her in his arms reflexively, and she felt very cuddly in his embrace as he stared down at her. Seeing her up close, he noticed that her features had changed slightly, her face looking a little more feline than its familiar Nymph-shape. Jade watched him studying her, and asked self-consciously, \"What are you thinking?\"\n\n\"Don't worry, he wants to fuck your brains out,\" Alyssa interjected, flashing him an impish grin. \"He's just worried we'll think he's some kind of sexual deviant for wanting to screw a catgirl.\" \n\n\"It'll be our little secret,\" Jade purred at him conspiratorially. Her tone turned serious as she added, \"One thing you need to know about cats though, is that a male cat has barbs on his cock that helps trigger ovulation in his mate. Your big shaft is nice and smooth, so if you want to get me really turned on, you'll need to be rough with me instead.\"\n\n\"Is that right?\" he asked her, his hand sliding up her back until his fingers suddenly grasped her by the scruff of her neck, causing her to snarl in surprise. \n\nHe used his other hand to massage her pert breasts, teasing her nipples with his fingers, and Jade bit her lip and began to mewl as she writhed to his touch. While he maintained a restraining hold on the Nymph, Alyssa stood by his side, and helped him take off his clothes. As soon as she'd stripped him bare, he pushed Jade face down onto the sofa, so that her rounded buttocks were presented to him as he knelt down behind her. \n\nHer hips began to sway, while she meowed and purred with excitement, her head twisting to one side so she could look at John over her shoulder. Alyssa joined her on the floor, kneeling beside her, and Jade gasped when the teen slipped her first two fingers between the catgirl's legs. \n\n\"She must be on heat, she's wet for you already!\" she exclaimed, her fingers slipping deep inside Jade's steaming pussy.\n\nJohn swung his hand down to swat Jade's furry rump, and asked her, \"Are you ready to be mounted, sexy little catgirl?\"\n\n\"Please, Master!\" she begged him, forgetting herself and using the honorific in her lust.\n\nAlyssa could feel Jade's internal muscles tightly gripping her two fingers, and she glanced at John as she said, \"She's much smaller in this form, you might need to take it slow and careful.\"\n\n\"No!\" Jade protested immediately. \"I need it hard and fast!\"\n\nJohn met Alyssa's gaze and she shrugged as she withdrew her fingers, saying, \"She asked for it, better give her what she wants.\"\n\nJade pulled back her tail, exposing herself to his hungry eyes. Her pussy was covered in a fine layer of soft fur, obscuring her folds from sight, so he let Alyssa take him in a firm grip and position his cock at her entrance. John tightened his grip around the back of the Nymph's neck, holding her securely in place, while his other hand gripped her waist to keep her from moving. He met Jade's smouldering gaze and she nodded, breathless with excitement.\n\nFiguring she was a shapeshifter and not in any danger from being injured, John thrust hard into her from behind. He'd never felt anything so tight around his cock before, and she yowled as he drove into her, sheathing himself right up to the balls. \n\n\"Fuck me, Master!\" Jade screeched as he fully impaled her.\n\nShe was panting and moaning in equal measure now, her petite body forced wide to accommodate the huge invader inside her. Keeping her pinned down, John pulled all the way back, then shoved his entire length into her right up to the quad, drawing out another scream of ecstasy from the tightly stretched girl. Jade was much more responsive in this form, and he found himself getting very turned on as he listen to her sexy moans, and watched her tremble with every bone-jarring thrust. He began to give her a real pounding, pummelling her toned buttocks as he fucked her hard and fast, just as she'd demanded. \n\nAlyssa was frantically rubbing her own clit in time to his thrusts, her bright blue eyes wild with lust. John looked huge towering over the prostrate Nymph, and he looked so primal as he skewered the submissive girl. When John forced Jade's thighs further apart so he could take her even deeper, the blonde girl came hard at the sound of the Nymph's climactic cries. \n\nJohn's quad was smashing into Jade's clit every time he reamed her out, and she'd been experiencing a chain of orgasms as he rocked her world. She'd never come this hard before, and the combination of being pinned down, taken forcefully by her powerful master, and feeling so delightfully stretched was completely intoxicating. She whimpered and mewled as she came yet again, her strong internal muscles gripping him, and massaging every inch of his shaft.\n\nTaking Jade so roughly was proving to be a powerful turn-on for John, and knowing how incredibly resilient she was, he wasn't worried about hurting her. He was stroking his entire length in and out of her with abandon, and when she curled her tail around him to lovingly caress his four balls, he felt his quad begin to rise.\n\n\"Gonna cum,\" he groaned, tightening his grip on the submissive Nymph.\n\nAlyssa leaned in close, her soft fingers moving to join Jade's tail in caressing his balls, and she hissed, \"Breed that sexy little girl! Give her a huge belly!\"\n\nJohn rammed himself into Jade one last time, then roared out his climax as he began to pump his load into her womb. He changed grip, so he was holding her by the waist with both hands, and his hips jerked spasmodically as he drove his spunk as far inside her as it would go. Finally freed, Jade leaned back, resting her head against his chest. She nuzzled against him, mewling with delight as he shot long blasts of cum into her.\n\n\"So powerful,\" she murmured ecstatically, her emerald eyes filled with wonder as her belly expanded.\n\nGently stroking Jade's growing tummy, Alyssa moved in for a kiss, and when her tongue slipped into the alien girl's mouth, she was surprised to find that those pointy canines had shrunk in size. She pulled back and stared at the Nymph, who was happily groaning with lust. Sure enough, she could see that her long sharp fangs had retracted, giving her a much less intimidating set of teeth.\n\nFinally John was spent, and he encircled Jade in his arms, caressing her huge abdomen with a gratified smile on his face. She tilted her head so she could gaze at him, and planted a tender kiss on his throat.\n\n\"You were absolutely magnificent, Master,\" she purred with a deep sense of satisfaction. \"It felt so right, being taken by you like that.\"\n\n\"You were so sexy,\" he agreed, running his hands over her belly possessively. \"I wasn't too rough was I?\"\n\nJade let out a contented sigh, and whispered, \"Everything was just perfect.\"\n\nAlyssa's eyes were shining as she said, \"You two looked so hot like that! I came so hard just watching you!\"\n\n\"You naughty voyeur,\" John teased her, and she giggled as she blushed.\n\nJade ran her hands over John's as he cradled her rounded stomach, and said ruefully, \"I better go fill up another tummy.\"\n\nHe tilted his head down to kiss her, and then gently eased himself out of her gloriously snug body. She shimmered when he pulled out of her, changing shape into her Nymph form, and giving him a loving smile. \n\n\"Thanks Jade, you were incredible,\" he told her, as she rose to her feet.\n\nShe carefully bent at the waist, leaning down to press her full lips against his ear, and said, \"You can take me as a catgirl whenever you like. Your secret's safe with me.\"\n\nHe laughed and gave her one final kiss before she waved him goodbye with a playful wiggling of her fingertips. Alyssa and John watched her sashay out of the room, her inflated breasts leading the way.\n\n***\n\nEdraele strolled along the corridor with her three bodyguards keeping pace alongside her. The engine refit for her fleet had been making excellent progress, and she'd been looking forward to this moment for a while now. \n\n\"How are our guests doing?\" she asked Luna, glancing at the assassin out of the corner of her eye.\n\nThe lithe young Maliri woman answered in her rich, vibrant voice, \"They seem quite comfortable in the guest suites, Edraele.\"\n\n\"Excellent,\" the Maliri Matriarch said with satisfaction. \"John should be back in under two weeks time, so we can move on with phase two of the plan then.\"\n\nAlmari's breathing quickened a fraction, and Edraele caught the shift in rhythm with her sharp hearing. Darting her a knowing look, she said with a furtive smile, \"I know, I can't wait to see him too.\"\n\nThe Maliri assassin blushed a fraction, but she saw equally excited looks on the faces of the other three women, and brushed off her embarrassment.\n\nLuna was also feeling pensive though, and after taking a deep breath, she said to Edraele in a hushed whisper, \"I'm worried about House Perfaren. Bringing the other noble Houses into your alliance was a masterstroke, but while Matriarch Tsarra Perfaren is relatively young, she still wields a lot of power. I believe she's still a threat. Are you going to deal with her as well?\"\n\nEdraele nodded, and she sounded confident as she replied, \"Don't worry Luna, I'm taking steps to deal with House Perfaren. By the time John returns home, I hope to have everything in place for him.\"\n\nIlyana gave her a sidelong glance, and said tentatively, \"Forgive me, Matriarch, I'm sure you know John far better than I do, but my impression of him has been that he wouldn't approve of these assassinations.\"\n\nLuna and Almari nodded their agreement, then looked at Edraele, curious as to her reasoning.\n\nThe leader of House Valaden rolled her eyes affectionately, and said, \"Ilyana, you naughty girl, you know I've told you to call me Edraele.\"\n\nIlyana blushed, and said, \"Sorry, Edraele, it's difficult to overcome a habit I've built over twenty-seven years.\"\n\nEdraele smiled at her indulgently, and said, \"Forgive me, Ilyana, I'm only teasing. I'm delighted you're all feeling more relaxed about speaking your mind. You're all bright girls, and I greatly appreciate your counsel.\"\n\nShe was about to continue, but they had arrived at their destination, stopping in front of the huge reinforced doors that led into Docking Bay Thirty-Two. The soldiers by the door shouldered their laser rifles, then bowed to Edraele respectfully. Moving as if by their own volition, the sturdy airlock doors parted down the middle, slowly separating and granting access to the huge hangar within. When there was enough room for them to enter, Luna slipped through first to check for threats, followed by Edraele and her other two attentive bodyguards.\n\nDocked within the bay was a huge sleek vessel that was bristling with a prodigious amounts of firepower. The gold coloured, crystal-plated Shandrass class battleship, called 'The Galaena Serine', was waiting there patiently, just as Edraele had commanded. The hangar was a hive of activity, and a bustling crowd of white-haired Maliri women were gathered around the loading ramps into the battleship, making sure their luggage was safely loaded. \n\nEdraele sent them a telepathic command, and as one, the eighty Maliri engineers looked her way, smiles lighting up their faces. They ran over to join their Matriarch and her three bodyguards, who were still wary, despite knowing that Edraele was absolutely safe in the company of these women. There was a gaggle of voices as they all spoke at once, all the women eager to ask Edraele what was happening. \n\n\"Ladies, it's so wonderful to see you all again,\" she said to the crowd, her voice ringing with sincerity. \"I know you must have many questions, but please give me a moment, and hopefully I can answer them for you.\"\n\nThe eighty women stopped to listen to her attentively, excitement and curiosity warring for dominance in their expressions.\n\n\"In gratitude for the incredible work you've put in on the recent refits of the fleet and the Invictus, I've arranged a visit to the border stations for all of you,\" she said, with a broad smile on her face.\n\nHer announcement was met with a flurry of gasps and looks of shocked disbelief. All at once the Maliri began to chatter excitedly, barely able to trust their pointed ears that they'd heard correctly. Edraele let them savour the news for a long moment, before sending a telepathic request for quiet.\n\nNow that she had their attention once more, she continued, \"When you arrive at Geniya, our primary contact, Ceraden, will assist with arranging for suitable suitors. You'll be in high demand, and you'll have your pick of the most handsome men, I'm sure.\"\n\nThe excited chattering started up once again, and she shared a smile with Luna. One of the engineers raised a hand cautiously, and said, \"May I ask a question, Matriarch?\"\n\nEdraele nodded to her, and said with an encouraging smile, \"Of course, Myriana, feel free to ask me anything you like.\"\n\nMyriana looked shocked that Edraele knew her name, but she shrugged it off, and asked, \"Why are we travelling to Geniya in a battleship? Will the journey to the border be dangerous?\" \n\nThe leader of House Valaden walked a half-dozen paces over to the bewildered engineer, and gently clasped her hands in her own as she said, \"Because you wonderful women are very precious to John, and to me as well. I'm not expecting any danger, but I want to keep you all as safe as possible, and I'm not willing to take any risks. Therefore, I've ordered the battleship and a fleet of escort vessels, to carry you safely to and from the station.\"\n\nAll the other engineers had heard this too, and they were equally as stunned as Myriana. When the shock began to wear off, they gathered around Edraele, thanking her profusely. She nodded and smiled at them, delighted to see the overjoyed reactions from the Maliri women. There was a small group of exceptions though, and she could feel their conflicted feelings over her empathic bond with them.\n\nFilaurel approached her after the other Maliri had finished thanking the Matriarch, acting as spokeswoman for her little group of like-minded women. Edraele only needed to take one look at the woman's face to see the wistful expressions of longing, and she smiled at her indulgently, raising a hand to head off her cautious objections. \n\n\"It's quite alright, Filaurel, I know what you're about to ask me,\" she said in a gentle tone of voice. \"I can't promise anything, but I'll do my best.\"\n\nThree other girls from John's weapon team gathered around Filaurel, and they began to chatter together excitedly. Ioelena was standing off to one side, and was watching them with interest, when Thessalia beckoned her over to join them with a wide grin. The young woman eagerly joined their huddle as they all shared the thrilling news.\n\nFeeling a sense of deep satisfaction, Edraele turned and left her wards to enjoy their moment, and she walked back towards the double doors that led out of the hangar. Her bodyguard fell into step around her, and she noticed Ilyana studying her out of the corner of her eye. \n\nShe turned her way, and said apologetically, \"Sorry, Ilyana, I didn't answer your question earlier.\" Her angular purple eyes gleamed with a fanatical fervour as she continued, \"Yes, I'm quite sure John will approve of everything I've done. I am following his orders after all...\"\n\n***\n\nJohn had enjoyed a long shower with Alyssa after the energetic fun with Jade, and now that he was clean and freshened up once more, he'd rejoined Calara and Faye on the Bridge.\n\nThe Latina turned her chair to face them, and asked with an arched eyebrow, \"What was all that yowling and screeching earlier? It sounded like someone was strangling a cat!\"\n\nAlyssa spun her chair to look at him, and asked innocently, \"I can't imagine what she could be referring to. Do you have any idea, John?\"\n\n\"You're getting as bad as my XO, Commander,\" John said to Calara with a frown, as he flushed with embarrassment. She gave him a playful wink before returning to look at her console. Clearing his throat with a cough, he changed subject adeptly by asking Alyssa, \"How far to the Mar'Katrach Nebula, XO?\"\n\n\"Thirty-three minutes,\" she replied without a moment's hesitation. Tilting her head to one side, she asked in return, \"How's Sakura's surgery coming along?\"\n\nClosing his eyes to avoid the distraction of her beautiful face, he started to focus on the temporary new compartment in his mind that housed the cyborg assassin. As he did so, he was surprised to see that the connecting power lines for all of Edraele's Maliri engineers and assassins seemed to have grown perceptibly brighter. He returned his focus to Sakura, and saw that Rachel had thoroughly stripped the girl of cybernetics from her torso, head and arms, leaving only those implants in her legs to go. Her healing had continued apace, and the girl was no longer showing surgical wounds of any kind on her head or torso.\n\nOpening his eyes again, he said to Alyssa, \"Rachel's done an amazing job. Just Sakura's legs to go, and then she'll be done.\"\n\nAlyssa nodded distractedly, and said, \"Yes, Rachel tells me she thinks she'll be finished in about an hour-and-a-half.\" Fixing him with her perceptive gaze, she added telepathically, *What are your plans for Sakura exactly? We're getting all that cybernetic shit out of her body, and you're healing her up, so what next?*\n\nJohn met her gaze, and replied, *That poor girl's spent seventy years locked away in cryo-stasis. I'm not holding out much hope for her parents still being alive.*\n\nThe blonde girl nodded, as she said, *You're right, that does seem unlikely. In which case, she's an orphan, just like me, you, and Dana...*\n\nHe slowly shook his head, and replied, *I know what you're implying, but surely that poor girl has been through enough already? You mentioned that she was studying law at Devonshire University? I could set her up with a scholarship, and maybe wipe out her painful memories so that she could start over and live a normal life.*\n\nAlyssa looked extremely dubious, but she replied, *I guess so. We should ask her, and find what she wants to do.*\n\nHe nodded, and said, *I think it's for the best.*\n\nFootsteps over by the grav-tube alerted them to a new addition on the Bridge, and John turned his chair to see Irillith walking over to the Command Podium. She looked fully refreshed after her nap and the huge meal he'd fed her, and the sparkle in her eyes matched her gleaming smile as she glided elegantly up the stairs to join him.\n\nShe leaned over to kiss him, giving him a breathtaking view of her azure-hued cleavage, and when she straightened again, she said apologetically, \"I fell asleep again after you left. I hope you didn't need me for the meeting with Admiral Lynton.\" \n\nHe pulled her into his lap, and she fell into his arms without resistance. \"Edraele was there with plenty of good advice, so I was in good hands,\" he explained with a reassuring smile. He ran his hand over her toned stomach, which was now back to its normal shape once again, and added, \"You look gorgeous after your nap, do you feel better too?\"\n\nShe smiled at him as she placed her hand on his, holding it still over her slim tummy, and replied gratefully, \"I feel so much better now, thank you.\"\n\nAlyssa had been watching the two of them, and she frowned at the Maliri girl as she said, \"You really wore yourself out in that fight. You shouldn't feel like you're on your own in Cyberspace, I'm always there to help you if you need it.\"\n\nIrillith gave her a grateful smile, and said, \"I remembered what happened last time you flooded me with energy in an emergency, so I was worried what might happen if I accidentally flattened the data-fortress the CPU was stored in.\"\n\nThe psychic blonde nodded, and looking thoughtful she said, \"We probably need to practice then. With you going off on these cyber-realm missions alone, I hate feeling like I can't help when you get in trouble.\"",
        "\"Sounds like a good idea,\" John agreed. \"We don't want you putting yourself at risk if we can help tip the odds in your favour.\"\n\nGlancing at Alyssa, Irillith said agreeably, \"We can start practicing when things quieten down.\" She turned to look at the Sector Map, and asked, \"Did you have any problems breaching the border into Kintark Space?\"\n\nTurning away from her search through the New Eden criminal database, Calara replied, \"The Kintark have substantial forces patrolling the border surrounding the invasion route. I suspect they're trying to prevent the Terran Federation from punching through and opening up another incursion into their Empire.\" She smiled as she continued, \"However, with our speed, and the huge range of our sensors, Jade was able to weave a safe path between the detection radii of their patrol fleets.\"\n\nJohn shared her confident grin as he said, \"There aren't many asteroid belts along the border, so they don't have a comprehensive sensor net like the Ashanath. Now that we've successfully slipped past the patrols, as long as we steer clear of any systems, we should be able to stay undetected.\"\n\nAlyssa's hands swept over her console, and the Mar'Katrach Nebula appeared as a holographic image, floating before them in the centre of the Bridge. The Nebula was absolutely breathtaking, displaying a riot of brilliant colours that had them all gazing at it in amazement. The centre of the nebula was a rich aquamarine colour, with long snaking tendrils in orange leading out from the centre to bleed off around the edges.\n\n\"There's a neutron star in the middle, called the Mar'Katrach Pulsar. It's the remnants of a supernova, and there's a pulsar wind nebula in its shell which generates all these amazing colours,\" she explained to her captivated audience.\n\n\"It looks so beautiful!\" Faye said, looking at it in wide-eyed astonishment. \"What's it made out of?\"\n\n\"Gas plasma mostly,\" Alyssa replied with a shrug. \"It's radioactive, but not to a level that would make it dangerous for us. The main problem is the effect it has on sensors; the interference it generates would completely block Terran and Kintark long range sensors. According to Dana, our enhanced Maliri-based sensor array should only lose about half its effective range.\"\n\nJohn was pleased at the excellent tactical advantage this gave them, but after thinking about it, he asked in confusion, \"How can the Kintark navigate in there if they're flying blind?\"\n\nAlyssa eyes were unfocused for a second as she discussed it with Dana, and she said a moment later, \"Sparks reckons they're probably using a pathway of beacons. If the signal they pump out is strong enough, then ships would still be able to pick them up against the background interference using their short-range sensors.\"\n\nCalara nodded, and said brightly, \"That's kind of like using a safety line in a blizzard!\"\n\nHer blonde lover looked confused, not understanding the reference, but John nodded, saying, \"Yeah, that's a good analogy.\" Turning to Alyssa he said, \"You make a safety line by driving poles into the ground, and linking them with some rope, making a trail between buildings. If a blizzard hits, which is like a heavy rainstorm but with loads of snow instead, then you wouldn't be able to see more than a few paces in front of you. Instead of getting lost in the storm, you can follow the rope trail between the poles to travel between buildings.\"\n\nFinally understanding, Alyssa nodded her agreement, and said, \"Sounds like a similar idea. Anyway, Dana thinks that's the most likely explanation.\"\n\nJohn heard Jade humming a happy tune to herself as she left the Medical Bay on Deck Seven, and began to make her way to the Bridge. He turned to watch her arrive as the melody echoed up in the grav-tube, and she stepped out onto the Command Deck a few seconds later. She was still naked, but her titanic breasts had returned to their normal size, and she strolled out brazenly before heading down the ramps to the Pilot station. The uninhibited girl gave him a cheeky wave as she passed the Command Podium, and then started to put on the clothes she'd left in a haphazard pile when she'd stripped off earlier. \n\n\"I better go back to my station, unless you've got other ideas,\" Irillith murmured, looking pointedly at his hand resting on her toned abdomen.\n\nJohn pulled her in for a kiss, then said, \"Afraid not, we'll have to be on alert now. We should be arriving at the nebula soon.\"\n\n\"We'll be there in ten minutes,\" Alyssa agreed.\n\nCalara suddenly sprang into a flurry of activity, her hands flying over her Tactical Console, as she said, \"John, I think we might have a problem...\"\n\nIrillith hopped off his lap, and quickly descended the steps, freeing up John to lean forward and ask the Latina, \"What's wrong?\"\n\n\"A Kintark fleet, a big one!\" Calara replied as she hit a button, then gazed at the Sector Map as it sprang to life in the middle of the Bridge.\n\nHe could clearly see the Mar'Katrach Nebula on the huge holograph, the blue and orange swirls dominating the area of space ahead of them. There were dozens of systems scattered around this sector of space, the stars twinkling against the black backdrop of the Sector Map. However there was something far more pressing that had drawn Calara's attention, and she quickly highlighted dozens of ships on the extreme edges of their sensors. The huge armada appeared to be pulling back from some distant border location, and was now vectoring in towards the nebula.\n\n\"We're much faster than they are,\" Alyssa informed them, noting the hyper-warp speed of the Kintark vessels. \"We'll arrive at the nebula about twenty minutes before they do.\"\n\n\"Can we just wait them out, then pounce on the base when they've left?\" Jade suggested.\n\nJohn shook his head, and replied, \"A fleet that size could be refuelling and rearming for days. We can't afford to lose that much time.\" He looked at Calara and asked, \"Can you tell what type of ships they are?\"\n\n\"Definitely military,\" she replied without taking her eyes from the map. \"There's no way civilians would be using a military resupply station. I can't tell you specifics until we get a lot closer, but if they're coming from the border, they'll probably be ships-of-the-line. I'd guess cruisers, carriers, perhaps even some battleships, and supported by a host of destroyers.\"\n\nNarrowing his eyes as he gazed at the map, John said, \"We'll hit the base hard before they arrive. If we can devastate the refuelling and rearming capabilities, it'll put that big fleet out of action for longer.\" \n\nCalara nodded eagerly, her dark-brown eyes flashing with excitement as she said, \"I can cause an awful lot of damage in twenty minutes.\" \n\nHe stared at the nebula, but he couldn't see any facilities or ships in that swirling mass of colour. He looked at Alyssa, and asked, \"Are we still too far out from the nebula? Is that why we can't see anything?\"\n\n\"We should start picking up the base when we're a couple of minutes from the edge of the nebula,\" she confirmed for him. \"The interference to the sensors is too great at this range.\"\n\nIt was a tense few minutes as they watched the Sector Map like hawks, waiting for any sign of what awaited them inside the turbulent clouds of plasma. When the glossy white representation of the Invictus was nearly upon the Nebula, Jade suddenly sat upright and pointed to the map.\n\n\"There, I can make out sensor contacts!\" Sure enough, dozens of contacts began to appear, although they seemed much more indistinct than normal.\n\n\"There's dozens of them!\" Alyssa remarked in surprise. \"And we're only seeing the outer edge of the base.\"\n\nJohn leaned in nervously, and asked Calara, \"Those can't all be ships can they, Commander?\"\n\nThe Latina was looking worried, as the huge sweep of sensor contacts started to fill the Mar'Katrach Nebula as the sensor array began picking up even more targets. She was checking the signal details in a hurry, and after a long and tense pause she said, \"It's a mix, some ships, some structures, but we're too far out for me to tell you any more than that.\"\n\n\"Alright, let's scout it out, and find out what's waiting for us,\" John said decisively. \"The Kintark forces will be totally blind in there, so we should be able to gather more intel without being spotted.\"\n\nCalara nodded respectfully, and said, \"Good plan, Admiral.\"\n\nHe gave her a brief smile to acknowledge the compliment, then replied, \"Shields up, and arm weapons, Commander.\"\n\nThe Latina sprung into action, activating the Invictus' weapons, and powering up the shields. The sparkling white armour plating peeled back to reveal the assault cruiser's formidable arsenal, and the dozens of Beam Lasers and Pulse Cannons smoothly rotated into ready positions.\n\n\"Jade, take us in,\" John said to the Nymph.\n\nThe green-skinned girl grasped the controls eagerly, getting ready to take over as soon as they dropped out of hyper-warp. \"Will do,\" she replied, acknowledging his order.\n\nThe gravity well from the neutron star centred in the nebula was huge, and the safety protocols kicked in, dropping them from hyper-warp at the edge of the nebula. The field of sensor contacts was vast, and when Alyssa switched the Sector Map to the System Map, John felt a growing sense of alarm as he counted well over one-hundred contacts in range.\n\nNow that they'd drawn closer, Calara was able to start identifying the vessels behind the sensor contacts. She began matching ship classifications from the Ship Almanac, when she suddenly gasped in shock, and blurted out, \"Planetary Invasion craft! There's dozens of them!\"\n\nSure enough, the System Map now began to display a huge formation of the enormous troop transports, each of which carried two thousand soldiers. The invasion force was arrayed off to one side, leaving a wide field of refuelling stations and munitions dumps clear for the incoming fleet. \n\n\"Fuck me...\" he whispered under his breath. Sharing a look with his Tactical Officer, he said, \"The Kintark must have something big planned! There's at least one-hundred-thousand troops out there!\"\n\nShe frowned, and exclaimed, \"They can't have just left all these ships undefended! Those are significant military assets.\"\n\n\"They didn't,\" Jade said, pointing to the map again. \"There's some big ships over there...\"\n\nAll eyes on the Bridge swung to that location on the System Map, and they spotted a fleet of ships heading towards a brightly glowing line of navigation buoys, which highlighted the path out of the nebula. There was a huge Kintark battleship in the centre, flanked by four cruisers, and followed by two bulky carriers. Surrounding them in a picket formation were at least a dozen destroyers, and the entire fleet was creeping carefully through the ephemeral nebula, feeling its way toward the nav-buoys.\n\nCalara highlighted the battleship in the targeting view, and a magnified image of the ferocious looking craft appeared to the side of the System Map. The kilometre-long vessel was covered in shimmering green plating, which looked like scales as they interlocked over the curved hull. Interspersed amongst all that armour, the surface bristled with dozens of Plasma Cannon gunports, along with the telltale launching racks for Plasma Missiles.\n\n\"I don't believe it!\" Calara gasped as she stared at the ship. \"That's the Merlan'tok!\"\n\n\"What's special about it?\" Faye asked her curiously, surprised at her outburst.\n\nShe stabbed a finger at the huge Kintark battleship, and said, \"Those bastards killed Commodore Walker and wiped out his fleet! We have to get some payback!\"\n\n\"How long until they jump out?\" John asked Alyssa, throwing her a quick glance.\n\nShe gazed at the map, calculating the travel time based on their sublight engine speed, and answered, \"Six minutes.\"\n\nTurning to Calara next, he said sternly, \"Commander, I need an objective analysis. Which of these assets has the highest strategic value?\"\n\nHis firm tone had the same effect as if he'd dumped a bucket of cold water on her head, and she immediately reined in her emotions. With a quick glance at the map, she replied in a clinical, dispassionate voice, \"The troops. Wiping them out will have a significant impact on the Kintark Empire's invasion plans. The battleship and carriers can project substantial firepower, and the time and resources invested in constructing fleet assets of that size are considerable. However, destroying all these refuelling stations and munitions dumps will have an immediate and dramatic strategic effect on the Kintark's ability to resupply vessels near the border.\"\n\nJohn froze as he listened to her, vivid memories of the siege at Galon Prime flashed through his mind. He remembered being packed into a planetary invasion ship with hundreds of his fellow marines, his heart gripped with fear at the thought that the vulnerable craft could be ripped apart in an instant. What made it worse was the knowledge that he was totally powerless inside the transport, his life completely at the mercy of the fates.\n\n\"We can't just kill them all...\" he faltered. \"I've been in their place, I know what it's like.\"\n\n\"We haven't got time to destroy everything,\" Calara replied, looking at him in confusion.\n\nAlyssa shot her a pointed glance, and said quietly, \"He means the soldiers in the invasion craft...\"\n\n\"We could let the battleship leave, then cripple the invasion craft,\" Irillith suggested. \"It would be slower than just destroying them though, so we won't have time to take out the supply facilities.\"\n\n\"Let me hit those in the Raptor!\" Jade exclaimed, spinning her chair to gaze up at John. \"They aren't shielded, so I'll be able to rip right through them!\"\n\nCalara nodded eagerly, letting herself get caught up with the Nymph's wild enthusiasm, and said, \"The Merlan'tok has its shields down. We could ambush that fleet as they fly out blind and cut them to pieces! That would give Jade another six minutes to clear out more of the base.\"\n\nIrillith looked thoughtful as she pondered Calara's suggestion, then she smiled as she said, \"We could still hit the invasion craft once we take out that fleet. We should have enough time left to wreck most of them as long as we don't get tied down into a lengthy engagement with the battleship's fleet.\"\n\n\"It sounds like a good plan, John,\" Alyssa said, turning to face him. \"What do you think?\"\n\nJohn weighed up the value of the assets they were poised to attack, against the threat posed by the nearby Kintark fleet. He looked around the Bridge at the girls' eager faces, and although he was worried for their safety, he couldn't disagree with Alyssa's assessment. \"Alright, let's do this,\" he said decisively. \n\nHis gaze settled on Alyssa, and she nodded before he voiced his thoughts, saying, \"Sure, I'll fly the Invictus.\"\n\nJade sprang to her feet, and started running up the slope to the grav-tube. John moved faster, intercepting her at the back of the Bridge, and pulled her into his arms for a fleeting kiss. \"Stay safe, no taking risks,\" he told her, his tone deadly serious.\n\nShe traced her finger along his jawline, then said earnestly, \"I'll be careful, I promise!\" With an eager grin, she bounded away, and dived into the grav-tube.\n\nHe turned back towards the Command Podium, and called out to Alyssa as she jogged down the steps, heading to the now-vacant Pilot Station, \"Engage the Merlan'tok immediately, XO! We need as much time as possible on those invasion ships afterwards.\"\n\n\"You got it, handsome,\" she replied with a big grin.\n\nHe paused half way up the steps, then walked over to the IntOps station, and asked Irillith, \"Can you cyberjack Kintark vessels?\"\n\nHer expression turned sombre, and she hissed, \"Sssalar merta ith nosssharlisss!\"\n\nHe frowned in confusion, and said, \"Sorry, my Kintark's a bit rusty.\"\n\n\"Mine isn't,\" she said with a sparkling smile. \"I said: 'Their deaths will be glorious!'\"\n\nChuckling he gave her an appreciative grin, and then turned back to the Command Podium, darting up the steps so he could take his seat. *Can you get Dana up here, or is she in the middle of something important?* he thought to Alyssa.\n\nThe blonde was sitting in the Pilot's seat now, her hands on the flight controls as she powered up the Invictus' four massive engines. *She's assisting with the surgery, but Rachel says she can manage the last stages without her,* she replied, without turning around.\n\n*Better have all hands on deck,* he said with a note of caution in his voice. *This is going to be close, and I don't want things getting ugly.*\n\n*Whatever you say, John,* Alyssa replied, her tone respectful, and with no hint of her normal teasing playfulness. A moment later, she added, *She's on her way.*\n\nThe only person on the Bridge who wasn't keyed up for the fight was Faye, who was looking a little forlorn as she sat on the console in front of him. \"What's the matter?\" he asked her in surprise when he saw her downcast expression.\n\n\"I wanted to help out,\" she replied quietly, her tiny face looking sad. \"If I'd had some time to practice flying the Raptor, I could have flown that for Jade while she concentrated on her shooting.\"\n\n\"But we need you here,\" he said with a frown. \"I gave you fire permissions on the Invictus' internal and external anti-personnel batteries, and we upgraded all the external Gatling Lasers to Pulse Cannons, remember? This is going to be a bloody, point-blank battle, and Calara's going to have her hands full aiming the Beam Lasers and Mass Drivers. She won't have time to accurately fire the Pulse Cannons as well.\"\n\nFaye's eyes went wide with wonder, and she gasped, \"You're letting me fire the Pulse Cannons?!\"\n\n\"That's right, and I expect you to follow Calara's orders to the letter,\" he said firmly, gazing at her awestruck face.\n\n\"I won't let you down, John!\" Faye declared as she leapt to her feet.\n\n\"I have every confidence in you,\" he said encouragingly, and she grinned at him, before flying over to join Calara.\n\nThe brunette flashed John a smile, then turned to look at the purple sprite who was alighting on her Tactical Console. \"I'm going to give you a very important job, Faye,\" she said, her voice deadly serious. \"I need you to take out any strike craft that launch from the carriers, we can't let any escape to harass Jade in the Raptor. If she has to stop and fight them off, in puts her in grave danger, and she won't be able to destroy as much of the supply base.\"\n\nFaye's luminous eyes looked huge as she gazed at Calara, and said, \"You can count on me!\"\n\nThe Latina nodded, then said, \"Until any strike craft appear, I want you to focus fire on whatever I'm shooting at, unless you think my target is already incapacitated. The faster we can take these ships out the better, and we need to exploit them being shieldless as much as possible.\"\n\n\"Got it!\" the AI creature replied, although she was starting to look nervous at the level of trust that was being placed in her.\n\nCalara went to give her a reassuring pat on the arm, but paused with her hand halfway, and smiled instead. \"You'll do just fine,\" she said encouragingly, then took a firm grip on the weapon controls.\n\n***\n\nThe big Lizardman officer stood by his Command Table, on the platform that arced out above the darkened Bridge-Pit. In a circle below him, his officers laboured frantically at their stations, running through a simulated drill. Prelate Khardas was freshly promoted to commander of this state-of-the-art cruiser, having previously been part of the Kinta homeworld fleet, working as subordinate to Grand Prelate Melkadian.\n\nKhardas had been overcome with gratitude when he'd received this promotion from his Commanding Officer, a Kintark he felt nothing but the utmost respect for. He'd clicked his long teeth together with pride when he'd been informed that his cruiser, the Jernak'tor, was being assigned to High Prelate Vraktrin's fleet. Vraktrin was a hero amongst the Kintark, who had built a remarkable reputation for resounding victories aboard his flagship, the mighty battleship Merlan'tok. The Empire's Information Bureau broadcasts had sung his praises for weeks, after his glorious victory against the despicable Terran Federation war criminal, Commodore Walker.",
        "The senior officers on the Jernak'tor had hissed with frustration when he summoned them to the Bridge-Pit for this training drill. He didn't care about their complaints however, as he knew that non-stop drilling was the fastest way to build unity amongst a crew, especially when getting to know the quirks of a new commanding officer. High Prelate Vraktrin had contacted him only a few hours earlier, announcing that he had received special orders, and it was time to go hunting for Terran villains once more.\n\nWith a toothy grin on his face, Khardas looked down at his staff as they scurried about their tasks, responding to a simulated interdiction by Terran Forces. They had started the simulation with only a skeleton Nightwatch crew on duty, with the other officers responding as fast as they could to the simulated red alert, and rushing to their stations as soon as they reached the Bridge-Pit. He had to confess that he'd been impressed, and the Nightwatch had brought the shields up within twelve seconds of the simulated interdiction, while the entire Bridge staff had assembled in one-minute- seventeen-seconds.\n\nHe leant over the balustrade surrounding the Command platform, nodding his approval as his Engineering Officer diverted power to weapons, bringing them online. He was about to commend his crew for their excellent performance when a blinding flash snapped his attention to the System Map. \n\n\"By Tiemeth the Dessstroyer!\" he cursed vehemently. \"What wasss that?!\" \n\nHe covered his sensitive eyes with a scaled hand as he flinched away from the dazzling blue light. Blinking rapidly, he desperately tried to recover his eyesight, but the glaring azure lance felt like it had been seared across his retinas. The Kintark Bridge staff were as stunned as he was, and it took them several seconds to react. The blazing flashes arced out again, painfully bright in the dimly lit Command Deck, and they winced against the harsh flare of light.\n\nMalgil his Engineer Sub-Prelate rapidly tapped on her console, before replying in a loud hiss, \"Beam Lasersss, Prelate! But with power ssso great, I've never ssseen anything like it!\"\n\nShe switched to the Tactical Map and increased the light dampening filter, so that the computer muted the brilliant glare from the blue beams. Prelate Khardas lowered his hand warily, then stared in shock at the Terran cruiser that had appeared out of nowhere, its sparkling white hull clearly highlighting it against the turquoise and orange swirls of the nebula. While their long range sensors were disabled by the nebula, the short range sensors could still pick up faint signals, and populated the Tactical Map accordingly.\n\nAs he gaped at the screen, the powerful beams lashed out again, burning into the battleship Merlan'tok for the third time in twenty seconds. He saw the blazing azure beams blast straight through the glistening green battleship, spearing through the once proud and mighty vessel in over a dozen places. He could only groan in horror as he saw the huge warship tear apart into four seperate chunks. The section housing the power core detonated in a colossal explosion, which sent the rest of the tattered hull remnants tumbling away on a blastwave.\n\n\"No! Not Vraktrin!\" he cried out in grief, his heart threatening to rip apart like the obliterated battleship. Fighting down the desolate sense of loss, he snarled, \"Fire back! Hit thossse bassstards with everything we've got!\"\n\nThe Invictus turned its baleful attention to the cruisers next, and as it charged closer at an impossible speed, it opened fire with four of the feared Mass Drivers against the cruiser Lissen'tor. Its crew had been slow to react, having still not got their shields up, and the despicable Terrans punished them for it. The shells smashed into the cruiser's topdeck, and the ship seemed to tremble in terror from those mighty impacts. They were followed a second later by huge explosions, which tore asunder large sections of upper armour plating, further exposing the superstructure beneath.\n\nWhat seemed like a solid sheet of blue laser blasts tore into the Lissen'tor, the cascade of laser bolts ripping through the gaping rents in the shimmering green armour. The ship convulsed with dozens of minor explosions, the luminescent lighting guttering out as the vessel was blasted into a desolate hulk.\n\nHis ship began to open fire on the glossy-white Terran cruiser, launching a formidable barrage of ghastly green plasma at the mystery ship. It was moving with an unnatural speed and freakish agility, which Prelate Khardas had thought only achievable with a corvette or strike craft. The Invictus jinked and rolled, moving in wild, unpredictable manoeuvres that made it practically impossible to lead. Hasira, his Tactical Sub-Prelate was an excellent shot, but she struggled to land more than half a dozen hits from the Jernak'tor's rapid firing Plasma Cannons on her target. The shots hit the cruiser's shields, but the energy was harmlessly dissipated.\n\nHe felt a surge of relief when he saw that his ship wasn't the only one to react, and the cruiser Zarkin'tor began to open fire with its plasma cannons as well. The glowing green shots arced across the Tactical Map, but he was baffled when the barrage went nowhere near the terrifyingly potent Terran ship.\n\n\"By Malganth the Betrayer!\" he swore in horrified disbelief, as those shots burned into the last of the four Kintark cruisers, the Jerman'tor. \n\nPlasma scorched through the Jerman'tor's armour, leaving charred gouges that burned with fel-green flames. The treacherous cruiser Zarkin'tor pounded away at the stricken cruiser, aided by an unending stream of laser bolts from the Invictus. Blue and green bolts seemed to merge together in a frenzied orgy of destruction, the Kintark plasma fire burning holes in the Jerman'tor's armour, which the evil Terrans ruthlessly exploited with their lasers. \n\nThe Kintark cruiser was tough and built to withstand heavy battle damage, but the reinforced substructure beneath the armour melted under that onslaught. With green and red fires raging out of control, the Jerman'tor drifted away, nothing more than a lifeless burning wreck. The Jerman'tor turned towards Prelate Khardas' own ship next, and began to open fire on them. \n\n\"We're being hailed, Prelate!\" his vexed comms officer cried out to him. \"It's that backssstabbing viper, Prelate Padaar!\"\n\nKhardas gave a sharp nod, and the viewscreen came to life. He pointed a clawed, scaly hand at Prelate Padaar, and roared, \"You thrice damned ssscum! You dare ssshow your face?!\" \n\n\"Forgive us!\" the terrified Prelate begged him. \"Thossse fucking Terransss have hacked our ssship! We have no control over anything!\"\n\n\"Ssshut your fucking power down! You're dessstroying my ssshields!\" Khardas bellowed furiously.\n\nHe glanced up at the Tactical Map, and the other cruiser was sending volleys of plasma cannon fire into his shields. Prelate Khardas knew full well that they wouldn't be able to withstand this battering for much longer. He looked for the Terran ship, his heart in his mouth as he waited for the cascade of laser bolts to start striking him too. The Invictus had sailed away though, leaving him to deal with the other cruiser, and he slammed his scaly fist on his Command Table with frustration, as he saw it eviscerate the escorting destroyers with those devastating blue laser bolts. \n\nA second later, sixteen Beam Lasers opened fire from the Invictus' topdeck, slamming into the carrier Tivash'toh. The carrier had managed to raise its shields in time, but they seemed to do little good. The incandescent blue beams throbbed as they punched into the carrier's shields, and he groaned in disbelief when they flickered out, dying under a single withering salvo. The beams dissipated a second later, before they could do anything more than slash harmlessly across the carrier's outer plating.\n\nAny sense of relief was instantly dispelled, when the sparkling white ship simply rolled over effortlessly, then opened fire with the eight Beam Lasers on its underbelly. Those virulent columns of energy scythed lengthways down the Tivash'toh's hull, gouging a huge furrow along the starboard flank from aft to stern. The carrier had started launching fighter and bomber wings from the launching runways, and the pulsating blue beams instantly obliterated every strike craft they touched. Now that the destroyers had been vaporised, the Invictus began to ruthlessly exterminate any remaining strike craft that attempted to flee, blowing them to pieces in a hail of blue laser bolts.\n\nThe carrier's Plasma Cannon batteries were fully charged and online now, and the Tivash'toh's gunners finally began to retaliate. Streams of volatile plasma bolts arced across the gap between the two duelling vessels, and despite the incredible manoeuvrability of the Invictus, some of the barrage struck home. Khardas could see the shields start to weaken as green circles rippled outwards with every impact.\n\nTurning to his pilot, Sub-Prelate Gorchir, he yelled, \"Get after them! We have to sssupport those carriersss!\"\n\n\"Do not engage that Terran ssship!\" a deep voice roared from behind him.\n\nPrelate Khardas whirled in place, and snarled, \"How dare you countermand my ordersss, Vorgrax?! I'm in command here!\"\n\nThe hulking lizard surged forward, moving with a frightening speed as it towered over the Lizardman. \"You dare addresss one of the Royal Guard like thisss?\" Vorgrax hissed at him ominously. \"If I believe you have taken leave of your sensesss, I can gut you and sssieze control!\"\n\n\"My apologiesss, Vorgrax,\" the Prelate muttered, with a respectful nod of his head.\n\nIgnoring him now, Vorgrax was staring at the Tactical Map, his big reptilian eyes widening in disbelief as he watched the Invictus tearing the carrier Tivash'toh apart. \"Get usss out of here! We can't face that kind of firepower!\" he rumbled in his deep sibilant voice.\n\n\"What about the invasssion craft!\" Khardas protested. \"If we flee, they're doomed!\"\n\nThe huge lizard turned to stare at him, and it snapped, \"They're already dead! Nothing that facesss that terror ssship can sssurvive! We mussst warn the Emperor about this deadly new threat, our duty to the Empire isss clear!\"\n\nPrelate Khardas met the massive scaly monster's gaze for a moment, then leaned over the balustrade, clutching at it with a deathgrip as he snarled at his pilot, \"Full retreat! Get usss out of here, now!\"\n\nHe turned back to look at the viewscreen, but Prelate Padaar had disappeared from view, leaving only the Imperial crest. Khardas glanced fearfully at the Tactical Map, and saw that the sabotaged cruiser was now adrift, all power shut down. A few seconds later, the rear of the ship seemed to balloon outwards, spears of sickly orange light punching out of the hull, and then it erupted in a vast explosion as it was consumed by a powercore meltdown. \n\nWith his shields only hanging on by a thread, the cruiser Jernak'tor powered up its engines to maximum, and ran for the Navigation Buoys in a desperate attempt to escape.\n\n***\n\n\"Nice shooting, ladies,\" John said to Calara and Faye, surveying the rampant destruction they had just unleashed on the Kintark fleet. \"It looks like the last cruiser is running, so let's finish off the remaining carrier.\"\n\n\"Affirmative, Admiral,\" Calara replied calmly.\n\nAlyssa brought the Invictus about, ignoring the cruiser, and focusing on the last of the carriers. The huge vessels had split up, fleeing haphazardly in opposite directions until they had caught up with the carrier Tivash'toh. Calara had hit it with one volley after another, working in perfect harmony with Alyssa as the two girls communicated almost instantly via telepathy. Jade had faster reflexes than the blonde Terran girl, but the psychic bond shared between the Pilot and Gunner made them a formidable team.\n\nWings of strike craft were pouring from the remaining carrier, which closely resembled a stirred up nest of furious hornets. While the Kintark heavy bombers were forming attack wings, then turning to face the Invictus, the waves of fighters had another target in mind. Jade had launched in the Raptor before the Invictus had begun its devastating ambush on the battleship Merlan'tok, and she was now running amok through the fuelling stations and the munitions dumps.\n\nThe support structures were unshielded, leaving them horribly exposed to the gunship. Between the sizzling beams from the two Beam Lasers, and the savage storm of blue laser bolts from the six Pulse Cannons, Jade was tearing a wide path of destruction through the base. Both types of facilities were hugely vulnerable to attack, and a loving caress from a Beam Laser, or a few volleys from a Pulse Cannon was enough to cause hydrogen fuel to ignite, or plasma missiles to detonate. \n\n\"Forget the carrier for the moment,\" John ordered sternly. \"Head off those fighters before they can double-back to intercept Jade.\"\n\n*On it,* Alyssa replied to him, banking the Invictus hard to starboard and cranking up the engine power to maximum. \n\nTurning to look at Dana, he asked, \"How are the shields doing?\"\n\nThe redhead glanced at the damage control holograph that floated above her Engineering station, and with a worried frown she replied, \"Our shields are pretty fucked up. We took a few plasma hits from that cruiser, and a lot from that carrier. We're at twenty-two percent shields and climbing.\"\n\nJohn nodded to her in reply, then turned to look at the Maliri to his right, and asked, \"Are you okay, Irillith?\"\n\nShe nodded enthusiastically, and said, \"I turned off all the safety failsafes on that cruiser's powercore, then performed an emergency coolant vent. I got out of there when I knew they couldn't do anything to stop the powercore meltdown.\" She grinned as she added, \"Kintark cybersecurity isn't any more robust than the Terran Federation's.\"\n\nRelieved to hear she was alright, he turned back to the Tactical Map, and watched the Invictus cut off the route to the Raptor. The second carrier had peeled away, fleeing directly away from the base, so the fighter wings had needed to sweep around to intercept the gunship. Alyssa had carefully positioned the Invictus right in the centre of that flightpath, so that they'd be able to protect Jade.\n\nCalara glanced at Faye, and said, \"You did some nice shooting there, but would you mind if I take over for this?\"\n\n\"No, of course not!\" the purple sprite said, holding her hands up as though taking her hands off the controls. \"You're a much better shot than me!\"\n\nThe Latina gave her a wink, then took direct control of the Pulse Cannons again. The Kintark fighter wings raced towards them, the skilled crews neatly peeling their fighters away, and giving the Invictus a wide berth, staying well clear of Gatling Laser range. Unfortunately for them, the Pulse Cannons had the same range as the old Laser Cannons, which meant they were still in terrible danger.\n\nCalara didn't flinch for a moment when she opened fire with the Beam Lasers, sending a dozen incandescent blue-beams slashing through the first waves of ships. Fifteen of the thirty fighters were vaporised in an instant, and the horrified pilots were killed before they even had a chance to wonder how she was able to track them with Beam Lasers. She unleashed the full firepower of the Pulse Cannons before the beams had even faded away.\n\nThe Pulse Cannons fired in three-shot bursts, but the cooling was such that they were almost able to fire without pause. The nimble two-metre-long weapons could track the fighters like a Gatling Laser, but the shots were nearly five times as powerful. The glistening-green fighters flew headlong into that deadly blue laserstorm, and were cut to pieces by her uncannily accurate shooting. \n\n\"That was amazing...\" Faye marvelled as she watched the Latina obliterate the Kintark strike craft. \"I don't think I saw you miss!\"\n\nCalara smiled at her, relaxing now that the threat to Jade in the Raptor had been eliminated, and said, \"I'll give you a few pointers sometime.\" Faye nodded eagerly, her big luminescent eyes wide with excitement.\n\n\"Time to eliminate that carrier,\" John said, nodding towards the big green vessel that was flying away from them. \"We better move fast before they can prep the second wave of strike craft for launch.\"\n\n\"Shields are only at twenty-eight percent!\" Dana warned him.\n\nHe looked grim as he said, \"We'll have to chance it. We can't risk that carrier sending strike craft after Jade.\"\n\nAlyssa had already powered up the engines, and the Invictus was now bearing down on the routed carrier. The big lumbering vessel was slow and ponderous, so John had no worries that they would catch it before it could escape. He checked the Tactical Map again, and the cruiser was flying away on a perpendicular course to the carrier. Unfortunately that meant he'd have to let that go, as it was escaping in the opposite direction to the invasion craft.\n\nThose big, cumbersome ships seemed to have realised the terrible danger they were in, and were now trying to escape. He could see them using their limited retrothrusters to slowly turn their vast bulk towards the direction of the incoming Kintark Armada. Checking on Jade next, he watched the Raptor unloading on two refuelling stations, which exploded only moments later. She was leaving a burning swathe of carnage in her wake, and had already destroyed a third of the refuelling and rearming stations.\n\nThe Invictus met the Heavy bombers next, and the brave Kintark crews carried on regardless, even after they'd seen what had just happened to the fighters. They started launching torpedoes as soon as they got in range, but a moment later, Calara opened fire with the Beam Lasers. She obliterated the ungainly bombers with ease, the azure beams sweeping through one wing of strike craft after another. She left any torpedoes for the Pulse Cannons, and as those fast moving missiles drew closer, she blew them to pieces with streams of laser fire.\n\n\"That carrier is launching another wave!\" Alyssa called out in warning.\n\nJohn stared at the Tactical Map, looking for the tiny green ships against the swirling aquamarine and orange background of the nebula. He spotted three wings of fighters race out of the carrier, catapulted clear by the launch runways built into the flanks of the carrier. As soon as they were clear of the hull, they split up, racing away in different directions, obviously trying to make it harder to intercept them.\n\n\"How long till we hit the carrier?\" he asked, worried about the fighters chasing after Jade.\n\nAlyssa frowned as she replied, \"Twenty-four seconds until we're in Beam Laser range.\"\n\nHe stared at the huge, kilometre-long vessel anxiously, watching as the Invictus rapidly ate up the distance between them. His eyes had flicked back to the carrier again, looking out for any more strike craft being launched, when a sudden series of explosions rocked the massive ship. All along the flank of the vessel a shower of armour plating and debris were blown clear of the carrier, after what seemed to be detonations in the launch runways.\n\n\"What the fuck just happened to that carrier?\" he asked in shock.\n\nHe watched in amazement as the carrier began to keel over, quaking violently as more internal explosions ripped through the mortally wounded ship. Calara, Dana, and Faye all shrugged helplessly, all looking equally as baffled as he was. \n\nAlyssa pulled the Invictus around, heading towards the herd of lumbering Invasion craft, then glanced back at him with a sly smile on her face as she replied, \"Irillith's been busy.\"\n\nJohn spun his Command Chair, and saw the Maliri girl sitting perfectly still in her seat, her expression calm and her eyes closed. She suddenly drew in a big lungful of air, and her angular eyes flickered open, staring into the distance for a moment before she re-orientated herself. She realised he was staring at her in surprise, and she gave him a satisfied smile in return.",
        "\"Was that your handiwork?\" he asked her, visibly impressed.\n\nShe nodded, and replied, \"I closed the runway blast doors a second after they launched the bomber wings. The explosions were the torpedoes detonating with the impact.\"\n\nHe shook his head, chuckling as he said, \"Thank God you're on my side!\"\n\nIrillith was delighted by his enthusiastic response to her efforts, and she gave him a dazzling smile that lit up her face. He smiled at her, then turned back to the Tactical Map, to watch the Invictus bear down on the sluggish invasion craft. There was no sign of the Kintark armada yet, and he had a grim smile on his face by the time they caught up to the huge troop transports.\n\nHe glanced at Calara, and said, \"Go ahead, Commander, cripple those ships. Be careful not to destroy them, though.\"\n\nShe turned to meet his worried gaze, and said confidently, \"They won't lose a man.\"\n\nAlyssa sailed the Invictus above the pack of slow moving ships, while rolling the assault cruiser so that the topdeck was facing towards them. Calara opened fire with the Beam Lasers, her shots precisely placed as they burnt through the shields, going on to slash into the rear of the enemy ship.\n\nThe pulsating blue beams reminded John of Rachel's laser scalpel as the Latina surgically removed the rearmost section of the closest invasion craft. She neatly sliced away the twin engines, leaving nothing but brightly glowing scars in their place. With all thrust gone, the invasion ship was left marooned, drifting helplessly in space. With that vessel disabled, Alyssa guided the Invictus towards the next transport. \n\n***\n\nPrelate Khardas stared aghast at the Tactical Map, watching in horror as the white Terran ships annihilated the supply base and incapacitated the fleet of invasion ships. The comm channels were alive with Kintark ships and structures desperately crying out for assistance, and his crew were plotting the approximate positions of the enemy ships based on those calls for help.\n\nHis one hope had rested on the wings of fighters that had barrelled in to attack the gunship, which was wreaking such horrendous devastation throughout the base. However, one after the other the pilots' voices went silent as they were gunned down without mercy.\n\n\"By Valssstraz the Vengeful, Damn you to hell!\" he snarled, quaking with rage as the evil Terrans ran unchecked through the nebula.\n\nVorgrax was standing beside him, and he growled, \"We ssshall have our revenge for thisss atrocity, Prelate.\"\n\nKhardas' clawed hands clenched into fists while he watched impotently, as the Terrans finished their terrible work.\n\nThe pilot, Sub-Prelate Gorchir, sounded shocked to the core as he called up to Khardas in a numbed voice, \"We're clear of the Nebula, Prelate. What are your ordersss?\"\n\nAfter a quick glance at the huge lizard beside him, Prelate Khardas replied, \"Head with all ssspeed to Kinta! We mussst warn the Emperor!\"\n\n***\n\nJohn slumped back in his Command Chair, sighing with relief when Alyssa engaged the Tachyon drive, and they leapt safely into hyper warp. They'd swept through the invasion craft, immobilising the last with minutes to spare, and then took full advantage of that precious extra time to assist Jade in blasting the last of the Kintark base. As soon as the Raptor had docked, Alyssa plotted a new course, and they raced away from the scene of utter ruin that was all that remained of the Mar'Katrach nebula supply complex.\n\n\"Bravo, ladies, that was outstanding.\" he said proudly, gazing out at the equally relieved faces around him.\n\nAlyssa stood up from the Pilot's Chair, then stretched like a cat, and grinned as she said, \"Not too shabby yourself, Admiral.\"\n\nThere were approving nods from the rest of the girls, agreeing with both sentiments, although everyone was feeling numb as the adrenaline wore off. \n\nJohn closed his eyes, focusing on the temporary mental compartment that housed Sakura, checking to see how the surgery was progressing. The girl's arms were healed now too, and the surgical wounds on her thighs were starting to regenerate next. It appeared that the surgery was complete, with all the implants removed from her body.\n\n\"Yeah, Rachel says she's done,\" Alyssa confirmed with a tired smile, as she walked up the ramp to rejoin him on the Command Podium.\n\n\"Time to call Admiral Lynton. Let's find out where the Fleet Admiral is,\" John said, with a look of satisfaction on his face. Turning to look at Dana, he asked, \"Are we close enough to the T-Fed temporary comm beacons to patch the comm channel through?\"\n\nThe redhead nodded to him, replying, \"We should be, those things have a pretty broad range. We better use a burst transmission though, it'll make us harder for the Kintark to detect.\"\n\nAlyssa was back at his right-hand side, sitting at the Executive Officer's station once again. She pressed a number of buttons on her console, and opened the call to the Terran Federation dreadnought, the Thor's Hammer. It didn't take long for the signal to get through, and they were confronted with the Terran Federation logo with the flashing red warning beneath that announced they were connected on a secure channel.\n\n\"Are you there, Admiral?\" John asked, clenching his teeth in irritation that the video feed was still out.\n\n\"I've got terrible news, John!\" Gabrielle Lynton's clear voice said a moment later. She sounded shocked to the core as she blurted out, \"Admiral Norwood has defected!\"\n\n\"That fucker! It's not going to save him!\" John snarled in fury, thumping his fist down on the arm of his Command Chair, causing it to creak ominously with the impact. Getting his temper under control, he growled, \"Give me the Fleet Admiral's coordinates anyway, Gabrielle, I still need to speak with him.\"\n\n\"Wait... you knew he was a traitor?!\" she gasped, her voice betraying her stunned amazement.\n\nJohn glanced up at the Terran Federation logo, and grimaced as he replied, \"We figured it out. That's why I was trying to find the Fleet Admiral.\" He sighed as he continued, \"We wiped out the Mar'Katrach nebula base for you, so I need Buckingham's location.\"\n\n\"I wish you'd trusted me with this. I could have informed Buckingham immediately, and had Norwood executed for his treason,\" Lynton said, sounding subdued. \"Sending you the coordinates.\"\n\n\"I'm sorry, Gabrielle. We weren't sure who we could trust,\" John said, glancing at Alyssa who confirmed that she'd received the transmission a moment later. Turning back to the screen, he asked, \"Do you know what happened?\"\n\nAdmiral Lynton was quiet as she replied, \"I spoke to the Fleet Admiral himself only ten minutes ago, and he told me what he could. I'm sure you appreciate that details are sketchy at this time. All I know, is that Norwood was leading a battlegroup in his dreadnought, the Vengeance of Hera. He must have gathered the rest of his allies with him, because there are reports that a large number of ships assisted him when he turned on the loyal vessels. Once the loyal ships were destroyed, the traitors fled.\"\n\nCalara had a panicked look on her face as she gasped, \"The Damocles? The Hydra?\"\n\n\"I don't have a list of the ships involved, I'm afraid,\" Admiral Lynton said apologetically.\n\nBlowing out his breath, John said, \"Alright, thanks for the news, Gabrielle.\" Before he signed off, he added, \"There's something else you should know. The Kintark were planning something big, some kind of invasion. We disabled a transport fleet carrying upward of a-hundred-thousand soldiers, and we saw a big armada of what must have been their escort ships heading their way.\"\n\n\"You disabled them? Why not just destroy those forces?! They'll still be a threat!\" she exclaimed incredulously.\n\nJohn's eyes narrowed as he replied, \"You wanted the supply base destroyed, and we left it a charred ruin. I wasn't going to just butcher thousands of helpless soldiers.\"\n\n\"I'm sorry, John, It just came as a surprise,\" she apologised. \"You've really made a big difference here, thank you.\"\n\n\"That's alright, and you're welcome,\" he said magnanimously. He paused for a moment, before he continued, \"You might want to deploy Maddox's picket fleet closer to the border, just in case the Kintark armada still attempts an assault.\" \n\n\"I'll take steps to bolster our defences,\" Admiral Lynton replied sounding resolute. \"Don't worry, I'll keep the Dragon March secure.\"\n\nHe nodded, and said, \"Good luck Gabrielle, but I hope you don't need it.\"\n\n\"Same to you, John,\" she replied soberly. \"I informed the Fleet Admiral that you wanted to speak with him. He's expecting you.\"\n\n\"I appreciate it, thank you,\" he said in return.\n\nThe Admiral closed the comm channel, and the Terran Federation logo disappeared, to be replaced by static.\n\n\"So what now?\" Alyssa asked him, glancing his way while her fingers danced over her console. \"I've laid in a course to reach the Fleet Admiral. He's just under seven hours away, in the Delta-Draconis system.\"\n\nJohn turned his chair her way, and replied, \"We need to find out what happened with Norwood. The Fleet Admiral is our best bet there.\"\n\nShe nodded slowly, her eyes darting to Calara, who was staring off into the distance, her face a mask of worry for her father and brother. \"Sounds like a good plan to me,\" she agreed.\n\n\"Let's head down to Medical,\" John said, as he rose from his Command Chair. Looking at the brunette he added, \"I want you to come too, Calara. Staying here and worrying isn't going to accomplish anything.\"\n\nThe Latina let out a heavy sigh, then got up from her chair, and walked up the ramp towards the grav-tube. Alyssa skipped down the steps to meet with her, wrapping her up in a comforting hug.\n\nFaye fluttered up to his Command Console from the Tactical Station, and said to John, \"Don't worry, I'll let you know if there's any trouble!\"\n\nHe nodded to her appreciatively, and said, \"You did well, Faye, you should be proud of yourself.\"\n\nShe grinned at him in delight, then watched as he stretched briefly before walking down the illuminated steps from the Command Podium. He joined the girls at the grav-tube, and they stepped inside as they headed down to Deck Seven.\n\nRachel was waiting for them in the Medical Bay when they entered, and she looked worn out after completing nine hours of surgery. She had removed her surgeons' gown, and was sitting in one of the comfortable chairs drinking a cup of coffee. \n\n\"Hey everyone,\" she said, greeting them with a weary smile.\n\nJohn strolled over to join her, leaning down to give her a quick kiss before he crouched down beside her. \"You look exhausted,\" he said, reaching out to brush an errant lock of hair from her face. \"Why don't you go to bed and get some rest?\"\n\nRachel nodded, and said, \"I will in a moment.\" \n\nStanding up, she handed over her mug to Dana, who accepted it gratefully, taking a big gulp of the hot drink. She beckoned him to follow, then led them over to the operating area where Sakura was lying under a sheet.\n\nAlyssa shook her head in amazement and said, \"She looks incredible!\" Throwing a glance at John, she added appreciatively, \"Spectacular work, handsome. You're a miracle worker.\"\n\nSakura's short black hair had now fully regrown into a luxurious silky-black mane that framed a beautiful face. Her skin-tone was a lovely golden brown, and her complexion was wonderfully smooth and fresh. John was shocked himself, recalling the girl's broken ruin of a face, and her deathly pale, sallow skin; the transformation really was quite breathtaking. The sheet rose up around her waist, her stomach still hugely rounded, packed full with the heavy load that Jade had pumped into her just over an hour ago.\n\nRachel gently lifted Sakura's arm, showing them the slender limb, and her flawless, unblemished flesh. Her arms, just like the rest of her body, had previously been hideously misshapen by the subdermal armour plating. He remembered the crisscrossing of surgical scars, but they had been fully healed too, not leaving behind even the barest hint that they'd ever existed. \n\nRachel smiled at him, and said, \"It's also my professional opinion that you are indeed, a miracle worker.\" She turned to look at the sleeping girl, and he could hear the wonder in her voice as she continued, \"As fast as I was removing the implants, her body was healing the incisions behind me. It was almost like the flesh was repairing itself as I watched, I've never seen anything like it.\"\n\nJade looked saddened as she said, \"I can see why they picked her to be abducted. She's a very beautiful girl.\"\n\n\"Hopefully she can put all that behind her now,\" John said optimistically. He turned to Rachel and added, \"How long until you think she'll wake up?\"\n\nRachel tapped her finger on her chin, and said, \"I've been assuming that she'll be out for fourteen hours after we fed her the first time. If that's true, she has another three hours to go.\"\n\nIrillith had turned to look at the big pile of metal, ceramic, and plastic devices that were piled up high on a trolley. \"She had all this inside her? I'm amazed it all fit!\" she marvelled. Looking around for a specific implant, she added, \"What happened to the CPU? I don't see the cybernetic brain here.\"\n\n\"It's held in a containment field up in my workshop,\" Dana explained. \"The bomb in her head was really nasty. A high yield charge to destroy her body, coupled with a nanotoxin dispersal system that would melt anything organic in a ten metre radius.\"\n\nJohn's eyebrows raised in alarm, and he immediately asked, \"Can you separate the bomb from the brain? The Maliri tech in the implant might be useful for tracking down the Master Assassin, but I don't want a live bomb aboard, even if it is safely contained at the moment.\"\n\n\"Don't worry,\" Dana replied with a confident smile. \"I'll split the two then flush the bomb. It should be relatively straight forward, and I can ask Faye to assist with one of the maintenance bots, so I won't be in any danger.\"\n\nCalara picked up the adrenal booster device, her mouth twisting in distaste at the long, spidery tubes that snaked out of the cold, black implant. She shook her head slowly, and her voice was full of compassion as she said, \"That poor girl, having all these hideous implants shoved inside her. How could someone be so cruel?\"\n\nRachel walked over to her, and picked up a fractured ceramic plate, and she said, \"I agree, the man behind what happened to her is a monster. Ironically though, the subdermal plating did save her life.\"\n\n\"What do you mean?\" John asked her, leaning in to take a closer look at the smashed piece of plating.\n\nGlancing at Alyssa, Rachel explained, \"Sakura had these plates implanted around her skull. Without them, Alyssa would have crushed her head like an eggshell with the force of the blows she was delivering.\"\n\nLooking chagrined, Alyssa protested, \"I didn't know it wasn't her fault! After what Shinatobe did to all of you, I was really fucking pissed at the time!\"\n\nRachel dropped the shattered plating with a loud clatter, and rushed over to the blonde, giving her a hug. \"I'm really sorry! I didn't mean it to come out like that,\" she said earnestly. \"I wasn't blaming you for anything, it was just an observation.\"\n\nJohn rubbed Alyssa's back, and said soothingly, \"She was just saying that you're a very powerful girl. Shinatobe was a lethal killing machine, and if you hadn't knocked her out, we'd have had to kill her. Thanks to you, Sakura has a chance at a new life now.\"\n\nAlyssa hugged Rachel back, and said, \"Sorry I got a bit defensive there. I do feel guilty about smacking the crap out of Sakura, she'd been through so much already.\"\n\nJohn glanced at the beautiful Asian girl who was sleeping peacefully before them, and said, \"There's no harm done, she'll be fine.\"\n\n\"Thanks to you,\" Alyssa said, as she stepped away from Rachel and looked down at the slumbering girl. She slipped her hand into John's and said, \"You did a good thing healing her.\"\n\nDeciding to change the subject, Dana piped up, \"While Rachel was doing all that gross operation stuff, I took a look at some of the tech behind Sakura's gear and implants. Some of this equipment is pretty cool!\"\n\nJohn chuckled and said, \"I thought you were supposed to be helping with the surgery?\"\n\nRachel gave Dana a fond smile, and said, \"She might be exceptionally gifted with machines, but the internals of the human body were a bit much for her. Weren't they, my love?\"\n\nDana shuddered with revulsion, and then smiled as she said, \"It was meant to be a sterile environment. It wouldn't have been if I hurled everywhere!\" \n\nThe girls laughed at that, and she gave them a cheeky grin as she bounded over to a nearby table. On it they could see the assassin's black sword, some crumpled black fabric, and a small metal object.\n\n\"Is that everything she had on her?\" John asked, as he walked over to take a closer look.\n\nShe nodded, then gestured to the sword, and said, \"That sword's very strong and sharp, but aside from that, it's not particularly exceptional. Your Crystal Alyssium blade is superior in every way.\"\n\nJohn had a wry smile on his face, as he noted, \"Unfortunately, I was stuck fighting her with a holo-simulator training blade.\"\n\nThey laughed at that, but Alyssa looked at him curiously, and asked, \"Is that why she beat you?\"\n\nAfter thinking back through the fight, he replied, \"If I was fully geared, then it would have been a completely different story. Trying to fight with a woefully inadequate blade was a huge handicap,\" He paused, then admitted, \"In all honesty, she was better than me though. I've specialised in Kenjutsu, but she was very skilled at that, as well as several other sword styles I've never even seen before.\"\n\nShe nodded thoughtfully, then glanced at Dana to continue. \n\nThe redhead cleared her throat, then said, \"Her outfit is some kind of nanoweave mesh. It bends light around her body, and doesn't require huge amounts of power to do so. It's pretty fucking cool tech actually, and we might be able to make some good use out of it.\"\n\n\"I've heard rumours of that kind of material before,\" John said with a start. \"I've never actually seen it in action, but I remember talk about some black ops unit that could turn invisible. Soldiers love to tease each other with all sorts of bullshit, so I assumed it was the usual made up rumours.\"\n\n\"Not this time,\" Dana said with a grin. Turning to the next object on the table, she lifted up what looked like a semi-transparent glove, which John hadn't spotted with his initial glance. Being very careful, she lifted it in the air, and said, \"I found this tucked into a pocket on her bodysuit. It's a synthi-print glove, and I think she used this to break into the ship.\"\n\n\"Synthi-print...\" John mused. \"Does it copy someone's fingerprints?\"\n\n\"Yep!\" Dana said nodding enthusiastically. She gave him a pointed look, and added, \"I checked the prints, and they're an exact match of yours. It actually contains traces of your DNA too, which is how it fooled the DNA reader.\"\n\nHe stared at her in surprise, and asked, \"How on Terra did they get hold of my DNA?\"\n\nShe shrugged, and replied, \"Sorry, I've got no idea, but it's on the glove alright.\"\n\nHe exhaled heavily, then nodded towards the metal cube, and asked, \"What's that box do?\"\n\n\"It's a signal jammer,\" she replied, putting down the glove, and picking up the cube. \"It's a pretty cool device actually. You can use it to block all electronic signals in a tight radius. She must have stuck it on the airlock door before she opened it, to avoid triggering any of the alerts to the Bridge.\"\n\nIrillith looked at it askance, and said, \"We'll have to come up with creative ways to counter all these kind of things.\"\n\nJohn nodded his agreement, then turned to Dana, and asked, \"I take it that's it for her gear? What can you tell us about the cybernetic implants?\"",
        "Walking over to the trolley stacked with the cyborg's implants, Dana replied, \"Rachel already listed the devices they'd stuck into Sakura. I had a look at them in more detail, and they made her very tough and adaptable.\" \n\nJohn looked at the dozens of different objects on the trolley, and asked \"So what did they all do exactly?\"\n\nDana pointed out each of the different implants in turn as she explained their function, saying, \"Those two over there are synthetic kidneys, to purify toxins and poisons. The subdermal ceramic plating looked fucking ugly under her skin, but it would have let her shrug off ten millimetre hollow point rounds. She had filters in her nose that could seal off to protect her from a gas attack, but there were also odour samplers there, which would let her analyse and track scents. The nose filters were linked to the artificial lung, which would let her survive without oxygen for about fifteen minutes.\n\nThe creepy thing with all the tubes is the adrenal booster, which could pump adrenaline to her major muscle groups. That's what made her move so fast when it kicked in, and it was linked to a reflex booster that massively speeded up her reflexes. When that was activated, she would have been able to move faster than any normal Terran could dream of. She had deactivatable pain receptors, and when those were engaged, she would literally feel no pain.\n\nThose data jacks in her wrists were hooked up to the CPU in her artificial brain, and would have allowed her to connect to consoles, for data uploads or downloads. The brain itself was incredibly advanced tech. It's Maliri in origin, and from what I can gather, it locks out a person's higher brain functions, and turns them into a fully controllable cyborg.\"\n\nThey had been listening quietly while Dana described each of the implants, but Alyssa suddenly spoke up, \"That's what I saw in her memories! The girl, Sakura, had no control over her body, and could only watch as Shinatobe, the programmable cyborg, did whatever the Master Assassin told it to.\"\n\nEveryone looked sickened at the thought of being locked out of their body like that, and John said, \"That bastard has a lot to answer for. It must have been a living nightmare.\"\n\nAlyssa nodded, saying, \"There are hundreds of grisly murders perfectly recorded in Sakura's mind, and she would have witnessed all of them.\"\n\n\"Why would all the murders be recorded?\" Jade asked in confusion. \"Isn't that evidence which could be used against the Master Assassin?\"\n\nDana glanced at Sakura's head, and replied, \"He probably figured the bomb would take care of any evidence. It's got a remote trigger so it can be detonated at range.\" When she noticed John's look of concern, she smiled at him reassuringly, and said, \"I shut that down, don't worry.\"\n\n\"But why record it all?\" Jade persisted, her face full of empathy for the girl. \"She'd still have all those horrible memories of everything she was forced to do.\"\n\nJohn glanced at the troubled Nymph, sensing by her tone and words that there was more to Jade's sympathy for Sakura. Remembering what Irillith had told them while they were mourning the Nymph, he looked over at the Maliri girl, and was surprised to see her staring at him intently. When she caught his gaze, her eyes flicked to Jade, and she nodded as an unspoken conversation passed between them. He resolved to have a good talk with Jade as soon as he had the opportunity.\n\n*See! That's just what I was talking about!* Alyssa exclaimed telepathically, sounding surprised. *You're getting so much more perceptive at picking up these kind of things.*\n\n*Well, I can only apologise for being so obtuse before,* he replied to her with a smile.\n\nShe shook her head slowly, and said, *That's not what I meant, but you're right about Jade. I was just about to tell you, but you figured it out anyway. Jade seems to be remembering much more about what happened to her over the last few centuries.*\n\n*I'll speak to her about it later,* he said, with a quick glance at the downcast Nymph.\n\nSuch was the speed of telepathy, the whole conversation only took a few seconds to complete, slowed only by the physical gestures that accompanied their words. Irillith was the one who actually answered Jade's question, and she replied, \"It actually makes sense that he recorded all her kills.\"\n\n\"Why's that?\" John asked with a frown.\n\n\"Assassins tend to work by contract, so by recording each successful assassination, he could present that to a client as proof that the job is complete. Then there's no excuse not to pay,\" she explained carefully, sounding distinctly like she was quite familiar with the process, and speaking from experience.\n\nDana nodded, saying, \"That's probably what the data jacks were for. With them there, he could directly download the data files from each assassination that Sakura, or Shinatobe, or whatever did.\"\n\nAfter thinking about that for a moment, John asked her, \"I thought there was more to her cybernetic brain? Something about data chips?\"\n\n\"I hadn't finished the list, we got a bit sidetracked,\" Dana replied with a smile. \"Yeah, you're right. There was a hidden data port on the back of her head, and this Master Assassin could insert different data chips there.\"\n\n\"What did she have installed?\" John asked, glancing at the sleeping girl.\n\n\"She had several slots for memory chips actually. One provided extensive information on infiltration techniques, the second was full of sword-based martial arts, and another was focused on more exotic subjects, like explosives, poisons, torture, all that kind of nasty stuff. The last held all the different mission types that had been programmed into her,\" Dana replied, recalling the contents of each of the chips.\n\n\"Well at least it's all out of her now,\" he said with satisfaction. He smiled at Dana and added, \"Was that everything?\"\n\nDana shook her head and replied, \"She had ceramic nails that could be elongated into razor sharp claws. They would have been pretty -handy- if she ever got disarmed.\" Her eyes twinkled as she wiggled her fingers at him, and they groaned at her pun.\n\nRachel spoke up next, saying, \"Her muscles had been augmented as well. Some kind of chemical protein was injected into the major muscle groups making them denser, and giving her enhanced strength. If she was conscious through that, it would have hurt like hell.\"\n\nJade nodded slowly as she said, \"The last thing I saw before I... died, was her dragging John away with just one arm. She was definitely stronger than a girl of her size should be.\"\n\nJohn put his arm around her shoulder, giving it a comforting squeeze, and said, \"Fortunately, you're still with us.\" She turned to him for a hug, and he wrapped her in his arms. \n\nRachel smiled at him, and said quietly, \"You've undone all that augmentation now as well. Sakura's body is just as it would have been before she was abducted.\"\n\nHe smiled with satisfaction, then looked around at the group, and said emphatically, \"-We've- undone all that; it was a team effort, it wasn't just me. Irillith shut down the Shinatobe CPU, Rachel and Dana dealt with the implants, Jade fed her, and Alyssa found out she needed saving, then got her permission.\" He glanced at Calara, and continued, \"On top of all that, you've all provided me the psychic energy to heal her so rapidly. So I'm not exaggerating when I say I couldn't have done it without all of you.\"\n\nThey gazed down at Sakura, then smiled at each other, sharing his sense of satisfaction. Alyssa walked over to him, and leaned against his right arm, which was still wrapped around Jade. She stood on tiptoe and planted a tender kiss on his cheek. \n\n\"I love all the warm, fuzzy feelings after your pep talks,\" she said with a bright smile. \n\nCalara smiled at him affectionately across the table and said, \"You're getting very good at giving us a morale boost.\"\n\nDana grinned and said, \"Getting fucked senseless and stuffed full of cum does wonders for my morale.\"\n\n\"You're incorrigible!\" Rachel exclaimed with a light-hearted laugh. \n\nThe redhead gave her a sly look, and said, \"Don't play coy with me, babes, you love getting rammed as much as I do.\"\n\nThe brunette blushed, but she made no effort to deny it. Instead she flashed John a coy smile, and said, \"I think it's time for bed, I do need some rest after all.\"\n\nJohn laughed, and said, \"On that delightful note, I take it that's the end of this show-and-tell?\" The girls all smiled at him and nodded, so he said, \"I don't know about any of you, but I'm starving. I need some dinner before I can even think about anything else. Anyone else want to join me?\"\n\nCalara shook her head, and replied, \"I'm actually not that hungry, you kept me stuffed full while my hand was healing.\" She gave him a grateful smile before she continued, \"I'd like to find out more about Sakura's background. I haven't got much time left, she'll be awake in a few hours.\"\n\n\"Thanks for looking into that, it's important we know as much as possible about her,\" John replied agreeably.\n\n\"I'm alright too, you loaded me up only a few hours ago,\" Irillith said with a flirtatious grin, stroking her trim azure stomach reflexively. She glanced at Calara, knowing the brunette would start worrying about her father and brother if she was left on her own. She smiled at her, and continued, \"I want to go through those files we got from Nexus, so I'll keep you company up on the Bridge. As long as you don't mind, that is?\"\n\n\"The more the merrier,\" The Latina agreed with a friendly smile, linking arms with the Maliri girl, and then waving everyone goodbye as they headed out of the Medical Bay. \n\nAlyssa met Irillith's gaze as she walked past her, and said telepathically, *Thank you. I really appreciate you looking out for her.*\n\n*It's no problem at all. She's a lovely girl, and really, I enjoy her company,* Irillith replied.\n\n*Should I be getting jealous?* Alyssa teased the blue-skinned beauty.\n\nIrillith smiled to herself and asked, *I don't know? Can you be?*\n\n*Only if you two get up to anything without me there to watch,* the blonde girl replied with a hungry gleam in her eyes.\n\nJohn meanwhile had turned to Dana and Rachel, and Dana said suggestively, \"We're off to bed. I'll get her warmed up for you.\"\n\n\"Neither of you want to join me for dinner first?\" he asked politely.\n\nRachel glanced at Dana, then they both grinned at him as the brunette said, \"We're planning on sharing a big meal later.\"\n\nAlyssa spoke up next, and said, \"I'll stay here and keep an eye on Sakura. I'm sure Jade would be delighted to keep you company in the Galley?\"\n\nHe looked down at the Nymph who was still encircled in his arms, and asked, \"Happy to come along and stop me getting lonely?\"\n\n\"I'd love to!\" she agreed immediately, hugging him tightly.\n\nThey all went their separate ways, with John and Jade stepping out of the grav-tube on Deck Four to the sound of Dana and Rachel giggling together as they headed up to the bedroom. Walking arm-in-arm, John led the Nymph into the Galley at the end of the corridor, and they strolled past the long tables then entered the kitchen.\n\n\"What are we cooking?\" Jade asked him curiously.\n\nHe thought about it for a moment, and finally replied, \"I might make a big Moussaka, then everyone can help themselves when they get a bit peckish.\" He glanced back at the rather spartan tables and benches in the Galley, and added, \"I love us all eating together, but this place isn't particularly welcoming.\"\n\n\"Alyssa's very creative, I'm sure between her and Rachel, they'll make the Officers' Lounge look great!\" Jade said enthusiastically. \n\n\"I'm sure they will,\" John agreed, as he stepped into the pantry and started collecting ingredients. He returned through the door with several black-skinned vegetables in his hands, and asked cheerfully, \"Ever cooked Moussaka before?\"\n\nThe Nymph shook her head, and replied, \"No, I'm not even sure what those things are!\"\n\n\"Aubergines, or sometimes called eggplants for some reason,\" he shook his head, then shrugged. Placing the large vegetables on a chopping board, he asked, \"Can you chop those into one centimetre slices for me, please?\"\n\n\"Of course!\" she agreed with an accommodating smile.\n\n\"Thanks, beautiful,\" he said to her, giving her a quick kiss before he disappeared into the pantry. He called out behind him, \"While you're doing that, you can tell me about your memory coming back, and why you didn't want to let me or Alyssa know about it.\"\n\nJade had started washing the aubergines, and she froze in surprise, then looked guiltily at the pantry door. Water sprayed everywhere as her hand strayed a little too close to the tap, and she grabbed a teatowel to start mopping up the mess. John reappeared a minute later, placing a variety of spices on the worktop beside her, then strolled over to the fridge to collect some lamb mince. When he didn't push her for an answer, Jade let out a heavy sigh. \n\n\"How did you find out?\" she asked him quietly.\n\nHe had started chopping up some onions, and as the knife moved in a blur, he casually replied, \"Irillith told us.\"\n\nJade frowned, a flicker of annoyance crossing her face, as she said, \"I told her that in confidence to try and build some trust with her. I hoped she'd keep it a secret.\"\n\nHe'd finished with the onions, so he put down the knife, then turned to face Jade as he said, \"When you died, we gathered in the Medical Bay for an impromptu wake. Irillith was grieving for you, and she blurted it out. She kept it a secret until your death, so please don't think badly of her for letting it slip.\"\n\nThe Nymph's expression immediately softened, and she had a little smile on her face as she nodded. She didn't say anything, but just stared off into the distance for a long moment.\n\nJohn saw that she hadn't started slicing the aubergines yet, so he stepped behind her, rested his chin on her shoulder, and carefully took the knife from her hand. He began to deftly slice the aubergines into thin slices, and said in a playful voice, \"Like that, okay?\"\n\nJade leaned back against him, then tilted her head up to kiss him softly on the cheek. \"I didn't want you to worry about me,\" she said in a small voice. \"You have enough to deal with already.\"\n\nHe put the knife down, then turned her around so that she was facing him, and said sincerely, \"You girls are more important to me than anything else. You know I'd do whatever it took to help you, right?\"\n\n\"You're a wonderful Master,\" she agreed, but she sounded reluctant to open up further.\n\nHe smiled at her, and said reassuringly, \"I'm not going to force you to tell me anything you don't want to, but if those memories start upsetting you, please come to me, or any of the girls. They all love you as much as I do, and any of us would be happy to offer you a friendly ear or a shoulder to cry on, okay?\"\n\nShe looked much happier, and nodded as she replied, \"I promise, I'll talk to one of you if anything starts upsetting me.\"\n\n\"Good girl,\" he said approvingly. He ran his hand over her tummy, and said, \"If you're stressed you'll find it harder to conceive, and we're going to be doing a lot of that, remember?\"\n\nShe bit her lip and looked down at his hand, then nodded eagerly, a bright smile on her face. She started to speak, and faltered briefly, before she finally looked him straight in the eye, and said, \"In all honesty, those memories coming back haven't upset me. I just feel pity for the pathetic men who abused me and all their other slaves.\" After a moment's hesitation, she added, \"I haven't gone into detail because some of the things they did were really horrible, and I knew it would upset you to hear about them.\"\n\nJohn was shocked when he finally heard the truth from the stoic Nymph. Cupping her lovely face in his hands, he said, \"I'm truly sorry for the way you've suffered in the past. I promise I'll do my best to make sure you get the future you deserve.\" \n\nShe stared into his eyes, and replied, \"You gave me a new life when you rescued me from the pirates, and I'm living a new one now, after you brought me back. I love being here with you.\"\n\nHe gave her a fierce hug, and laughed as he said, \"I know cats are supposed to have nine lives, but just stick to this one now, alright? I don't think I could handle going through all that again.\"\n\nJade laughed too, and he could see the tension melt away from her. He knew she'd been worried about how he'd react, and he was touched at her concern for him. His stomach rumbled loudly, interrupting the tender moment, and he flushed with embarrassment.\n\n\"I better make a start on those aubergines,\" she said with an affectionate smile.\n\n\"Definitely,\" he agreed, and he let her go, then stood beside her at the worktop as he began to prepare the mince.\n\nThey spent the rest of the time in the kitchen in companionable silence, working well as a team, and sharing knowing little smiles when they glanced at each other at the same time. It was a novel experience for John, and he was surprised at how happy it made him feel. When he put the finished dish in the oven to cook, he sat on one of the benches in the Galley, then patted his thigh for Jade to come and join him. She prowled over like the good, obedient girl that she was, and straddled his lap with an eager sparkle in her emerald eyes.\n\nIt only took twenty minutes to cook dinner, because they were using one of the old-fashioned style of ovens. They could have used one of the standard molecule agitating ovens and it would have been ready in less than a minute, but he was convinced that it tasted better being cooked the other way. His grandmother had always insisted on cooking all her dishes in an old oven, and he liked to think of it as a tribute to her. Besides, he wasn't in any particular hurry, and spending time kissing Jade was a splendid pastime. \n\nAll too soon the timer on the oven chimed, and dinner was ready. He squeezed Jade's luscious rump through her dress, and she lithely dismounted him, so they could return to the kitchen. Once he'd served up for both of them, they both tucked in, with Jade eager to taste it, as this was the first time she'd tried the dish. The Moussaka was delicious, and Jade thoroughly enjoyed it, humming appreciatively as she savoured every bite. When they were done, John stretched, and had a lazy smile on his face, feeling contentedly full. \n\n\"You better head up to the bedroom,\" Jade said, glancing upwards. \"Dana and Rachel will be wondering what happened to you. I'll stay and clean up, you go and have fun.\"\n\n\"Absolutely not,\" John said sternly. \"You're coming with me, I'll clean up later. I know you saved room for dessert.\"\n\nShe let out a happy sigh, and said, \"What kind of a Nymph would I be if I disobeyed my Master?\"\n\n***\n\nAlyssa let out a happy sigh at the same time as the Nymph, listening in to every word of their intimate conversation. She had to hand it to John, he seemed to know just what to say to all of them, to lift a troubled frown into a bright sunny smile. A terrible thought flashed through her mind, as she suddenly realised just how easy he'd find it to manipulate them all for his own personal agenda. She immediately felt awful for even thinking that about him, especially as his mind was like an open book to her now, and in all honesty, she knew him better than he knew himself.\n\nShe glanced over at Sakura to check she was alright, but the girl was still sleeping serenely, her body slowly absorbing her stomach full of cum. If they'd just given her the one dose, Alyssa would have been confident that Sakura would be out for fourteen hours, but Jade had loaded her up a second time to ensure John could keep the healing going. Deviating from the normal process might mean anything could happen, and Alyssa didn't want the girl waking up scared and alone.\n\nReassured that their guest was still fast asleep, she returned to her earlier musings. Although she didn't doubt John's motives, she wondered if his recent increased perceptiveness was another Progenitor ability manifesting itself as he grew in power. It seemed like overkill to her, when his species could already enforce blind obedience from the women they enslaved. Then again, John had relinquished that level of control over them, so he wasn't exactly operating under normal conditions. ",
        "At the end of the day, she enjoyed how much he nurtured her emotionally as much as the rest of the girls did, so she shrugged her shoulders, and settled back in the chair. She closed her eyes to check on her beautiful wards, and smiled when she looked in on Calara and Irillith. It turned out that the Maliri girl had another reason for wanting some time alone with the sultry Latina, and she was asking for some rather intimate advice about a subject to which Calara had become something of an expert. \n\nSmiling as she eavesdropped their conversation, she looked at the metaphysical representations of the girls in her mind. She could feel Calara's worry for her father and brother radiating from her crystal image, but they couldn't do much to stem her fears until they met this Fleet Admiral. Other than that, the lovely brunette was happy and content, her heart filled with love for John, Alyssa, and all her adopted sisters.\n\nIrillith was similarly happy, delighting in the unquestioning acceptance she felt from the other members of their little group. Alyssa sometimes forgot that Irillith was older than all of them, except for Jade, but the Nymph's buoyant spirit just made her seem like a teenager. The Maliri's youthful appearance made her seem like she was only in her early twenties, but there were occasions when those decades of extra experience shone through, reminding Alyssa of her true age. \n\nTalking of older women reminded her of Edraele, and she still struggled with the thought that the Matriarch had lived for over a century and a half. She knew that John and Edraele were getting closer, with their long-distance courtship over the past few weeks. Part of her wished he'd just banged her before he left, but she knew that was unfair, and John seemed to really enjoy his second Matriarch's company. Alyssa found his half of their telepathic conversations absolutely fascinating, and she hated not knowing what Edraele was thinking too. Although the Maliri woman was a century older than John, they sometimes seemed the same age, what with their confident self-assured personalities. \n\nShe turned her attention to Dana next, eager to check on her old friend. A big grin formed on her face when she realised just what she was up to at this moment, and she gave up on checking the rest of the girls as she relaxed and enjoyed Dana's aroused subconscious thoughts.\n\n***\n\n\"Well I wasn't expecting that,\" Rachel said to John appreciatively, as she snuggled into him, her tousled tawny-brown hair draped over his shoulder.\n\nHe chuckled, which was made a little difficult with Jade lying on top of his chest, gazing at him with a look of wondrous adoration. Glancing down at Dana on his left, and Rachel on his right, he pulled them in closer, and asked, \"What did you think we'd be doing, then?\"\n\nDana tilted her head so she could make eye contact with him. Her sky-blue eyes were still heavily dilated with arousal, the golden corona clearly visible, and she said, \"We thought we'd both be in for one hell of an ass-fucking after your recent promotion, -Rear Admiral-!\"\n\nHe laughed, and said, \"I'm saving that for later.\" He smiled at Jade and said, \"I'd just had a romantic evening with a beautiful girl, and was just feeling in a loving mood.\"\n\nRachel turned slightly and tenderly kissed his chest as she said softly, \"It was just what I needed, thank you.\"\n\n\"You're very welcome,\" he replied with a smile, leaning down to kiss the top of her head.\n\nDana rolled over onto her slightly rounded belly, smiling a moment as she felt the extra weight around her midriff, then stared straight into his eyes. \"John... Would you mind if I asked you something?\" she asked him, with her most beguiling smile.\n\nHe grinned at the exuberant young woman, and replied, \"Go ahead, you can ask me anything.\"\n\nHer eyes flashed with lust as she blurted out, \"Did you really fuck Jade as a catgirl?!\"\n\nJohn could feel his face heating up, and he quickly glanced at the Nymph lying atop him. She sat up a little and met his gaze, saying honestly, \"I didn't say a word, I promise!\"\n\n\"Alyssa tells us everything,\" Rachel murmured, sounding a little drowsy. \"Don't worry, we think it's hot.\"\n\n\"Oh my God!\" Dana gasped, giddy with excitement. \"Please let me be there next time! That must have looked so fucking awesome!\"\n\nJade relaxed against him again, and said, \"You would have loved it, he was spectacular.\"\n\n\"Please John! I'll do anything!\" Dana pleaded with him.\n\nHe shook his head with amusement, and said, \"Alright, but you're giving me carte blanche to do whatever I like to your sexy little body.\"\n\n\"That sounds nearly as exciting!\" she replied with a wild grin on her face.\n\n\"Shh! Tryin' to sleep,\" Rachel mumbled, cuddling closer to John.\n\nDana bit her lip to stifle a giggle, then settled down again, using his shoulder as a comfy pillow. Surrounded by sleepy girls, and having emptied his quad, John felt relaxed and at peace. He watched the soothing, ethereal green lights trailing slowly across the ceiling, the lines matching the pulses of light from Jade's body. The Nymph's breathing slowed, and soon she drifted off to sleep, shortly followed by the feisty redhead.\n\n*You and I need to have words, young lady,* John said to Alyssa disapprovingly.\n\nShe sent him a telepathic grin, and replied, *Just relax and enjoy the light show. Remember, I know these girls inside out, and they're as naughty as you are.*\n\nHe wasn't sure how to respond to that, so he sent her a telepathic \"harrumph\", then just enjoyed feeling the girls around him. He started getting drowsy himself, and before he finally fell asleep, he said, *Wake me in a few hours' time please, beautiful. I'd like to be there when Sakura comes round.*\n\n*Of course, don't worry,* she thought to him soothingly. \n\nIt didn't take long for him to drop off, and soon all four of them were fast asleep.\n\n***\n\nThe foursome only slept for two hours before Alyssa roused them, but that was all they really needed to feel refreshed. John had already napped a lot that day, and the sweet tasting pick-me-up had done wonders for the girls' energy levels. They enjoyed a quick shower together before heading down to the Medical Bay, where Alyssa, Calara, and Irillith were already waiting. \n\nAlyssa handed John a cup of coffee, while the other girls did the same for the other new arrivals, and they sat around in the waiting area as they sipped the hot drinks. Calara gave John a brief overview of her search into Sakura's background, and he listened attentively to her summary.\n\nChecking the ship's chronometer, John said, \"Five minutes to go, assuming she's out for fourteen hours.\" \n\nGlancing over at Sakura who was still fast asleep, Rachel said, \"Are you sure we should all be here for this? She's already going to be in for a shock, we don't want to overwhelm her.\"\n\nJohn looked around at the girls, and said, \"Perhaps if just me, Alyssa, and Rachel speak to her at first? When we've explained the basics, we can introduce her to all of you.\"\n\nCalara nodded, and said, \"I've gathered as much information as I can about her parents, and a number of other things she might want to know. If you bring her to the Briefing Room, I can answer any questions she might have about her old life.\"\n\nSakura let out a soft moan as she began to stir, and John quickly rose to his feet, then strolled over to meet her with Alyssa at his side. She was carrying a big glass of water, already anticipating the girl's first request. As the others slipped quietly out of the Medical Bay, the girl groaned, then said in a hoarse voice, \"Thirsty...\"\n\nJohn helped her to sit up, while Alyssa steadied the glass in Sakura's hand, helping her to drink. The raven haired girl gulped down the entire contents of the glass, and sighed with relief as she handed it back to Alyssa. Her eyelids had fluttered open, and she suddenly gasped when she got a look at the blonde.\n\n\"You attacked me!\" she blurted out, shrinking back in fear.\n\nAlyssa nodded, and replied, \"You were trying to kill us at the time, Sakura. Do you remember any of what happened to you?\"\n\nThe girl's head whirled about as she darted furtive looks around the big room, shrinking back from John when she saw him on the other side of the bed. There was a flicker of recognition in her eyes when she stared up at his face, and she blurted out, \"You were my... I mean Shinatobe's target!\"\n\nHe nodded, and replied, \"My name's John, and this is Alyssa, my second-in-command, and Rachel, the ship's doctor.\" He glanced at each of the other girls as he mentioned their names, then squatted down beside the bed so that he was looking up at Sakura, and would seem less threatening. In a soothing voice, he continued, \"We're not going to hurt you. We've been working to free you from the man who enslaved you.\"\n\n\"Amatsu Mikaboshi!\" she gasped, looking around fearfully once more.\n\n\"It's okay,\" John said, keeping his voice gentle and reassuring. \"I fought him, and he ran away when I hurt him. He won't be troubling you again.\"\n\n\"Shinatobe fought you,\" Sakura said, her eyes wide. \"Why would you help me?\"\n\nAlyssa sat on the other side of the bed, and said in a firm voice, \"Sakura, look at me please.\"\n\nThe frightened young woman did as she asked, staring at Alyssa with her big brown eyes. There was another flicker of recognition there, but she frowned with confusion a moment afterwards.\n\n\"I've spoken to you before,\" Alyssa said, her voice softer now. \"Not to Shinatobe, to you, Sakura. I reached out to your mind, and explained what we were about to do, to save you from Mikaboshi. Do you remember?\"\n\n\"You seem so familiar,\" Sakura murmured, her fear slowly melting away. She looked puzzled as she said, \"I remember you speaking to me, and I knew I could trust you...\"\n\nRachel smiled at the bewildered young woman, and said, \"Don't worry, we'll explain everything that's happened. Just take your time, there's no need to rush anything.\"\n\nThe Asian girl gave her a tentative smile in return, then looked down at her lap. She gasped in shock again when she saw her heavily rounded belly. Placing both hands on it she felt the taut skin, and her eyes went even wider as she suddenly remembered why she was in that condition.\n\nHer head snapped to one side, and she stared at John in stunned disbelief as she blurted out, \"This is your...\" She didn't finish the sentence, and just stared at him in shock.\n\nAlyssa leaned in a little, and said quietly, \"Yes, that's right. Your stomach is full of John's cum. I spoke to your subconscious to ask your permission to do this; it was the only way we could heal your wounds.\"\n\nSakura held out her arms in front of her, staring with disbelieving eyes at the lovely slender limbs, all traces of the scarring and subdermal plating completely removed. She threw another glance at Alyssa, further recognition in her eyes, before she swung back to stare at John again. There was a subtle change in her shocked expression now though, one more of wonder, rather that fear.\n\n\"You're a Progenitor,\" Sakura whispered in awe, the cadence of her words making John realise she was repeating something she'd been told. \"You roam the galaxy helping good people, and bringing evil people to justice. You have superhuman abilities, and you wanted to use them to help me. When a girl swallows your... cum... it lets you heal her.\"\n\nJohn raised an eyebrow as he glanced at Alyssa, then replied to the stunned girl, \"Essentially yes, that's right. Mikaboshi did some terrible things to you, and I wanted to help undo them. You were a good person, and you never deserved any of what happened to you.\"\n\nShe looked away a moment, then winced as she said, \"I was abducted. They attacked me...\"\n\nAlyssa reached out to gently stroke the girl's shoulder, and said, \"It's alright, I know what happened to you. You showed me the memories.\"\n\n\"How?\" Sakura replied, turning to stare at Alyssa now. \"I feel like we've spoken before, but this doesn't make any sense!\"\n\nLooking at the glass she still held in her hand, Alyssa concentrated on it, then slowly levitated it into the air. \"I have abilities too,\" she said quietly. \"It might be hard for you to understand at first, but I think you know we don't mean you any harm.\"\n\nSakura gaped at the glass in utter astonishment, watching spellbound as Alyssa floated it over to a table. \n\nJohn cleared his throat, drawing her attention, and asked her, \"Do you remember what happened after you were handed over to Mikaboshi?\"\n\nShe did well to shake off her shock at seeing telekinesis for the first time, but she grimaced, and said in a tremulous voice, \"They operated on me, turned me into a monster...\" She covered her face with her hands, overcome by the horrendous memories, and began to weep.\n\n\"You poor girl, you've been through so much,\" John said as he gently rubbed her back. \"All that's over with now though, and you're back to your old self again.\"\n\nWhen he nodded to Rachel, she stepped around to the side of the bed, and said, \"Here's a mirror, take a look for yourself.\"\n\nSakura brushed her arm across her eyes, wiping away her tears, then reached for the mirror with a shaking hand. Rachel helped her hold it, and the girl gasped in amazement as she stared at her reflection. \n\n\"It's me, but I never looked that pretty before!\" she gasped, then rubbed at her eyes, and stared at her reflection once again.\n\nShe peeked underneath the sheet to look at the rest of her body, but she was fully dressed in some clothes she didn't recognise. \n\nAlyssa saw her confusion, and said, \"The jumpsuit Shinatobe was wearing was shredded, so I dressed you in some of my girlfriend's old clothes. She was about your build.\"\n\nSakura took a shuddering breath, then nodded at Alyssa in gratitude.\n\nRachel had been carefully watching Sakura's actions, and she said, \"I know you're curious about the rest of your body. It might be easier to show you what you looked like before, and how you look now. Do you want to see?\"\n\n\"Alright...\" Sakura mumbled, then shook herself, and said in a stronger voice, \"Yes, please.\"\n\nRachel turned to her Medical Console and pressed several buttons. After only a short pause, two images appeared. The first was grotesque, showing Sakura as she'd looked with all the plating crammed under her skin, her cryo-frostbitten flesh, and the latticework of surgical scars. The second showed her as she was now: slim, beautiful, and not a scar on her body.\n\nSakura gaped at the two images in utter amazement, and waving faintly at the first image, she asked, \"How could you possibly undo all that?!\"\n\n\"You said it yourself,\" John said, nodding towards her swollen belly. \"When a girl swallows my cum, I'm able to heal her of all sorts of things. Your tummy will shrink back to normal size in a few hours' time.\"\n\nThe black-haired girl met his gaze once more, and her eyes were filled with gratitude as she said, \"Thank you so much for saving me. I thought I was lost in that hell forever.\"\n\nJohn reached out to hold her hand, then squeezed it gently as he said, \"You're quite welcome.\" He studied her face for a moment, then added, \"Do you remember what happened after the surgery?\" \n\nShe nodded, looking haunted as she replied, \"I couldn't control my body any more. Mikaboshi made me attack people... murder them.\" She shivered with revulsion, before she continued, \"Shinatobe killed hundreds; one a day for at least a couple of years.\"\n\n*She doesn't realise how long she's been like this,* Alyssa said sadly. *She can't have any idea it's been over seventy years.*\n\nJohn squared his shoulders, then said to the subdued girl, \"We looked into your background, Sakura. Your full name is Sakura Honami, and you were born on New Eden on the 12th of February 2684. Is that right?\"\n\nShe met his gaze, and nodded, replying, \"Yes, that's right.\" \n\n\"Do you know what date it is now?\" he asked her gently.\n\nWith a confused frown on her face, she admitted, \"Sorry, I don't know. If I've been held captive for a couple of years, it must be late 2704?\"\n\nHe slowly shook his head, and said, \"Do you remember the picture Rachel showed you? How damaged your skin was?\"\n\nShe nodded, looking worried now, and said, \"Yes, it looked absolutely horrible. What happened to me? What are you saying?!\"\n\nRachel's voice was full of sympathy as she explained, \"The skin damage was cryo-frostbite from being put into cryostasis hundreds of times.\"\n\n\"Hundreds of times!\" Sakura exclaimed in alarm. Her eyes flicked to John, and she gasped, \"What year is it? How long was I in stasis for?!\"\n\nJohn spoke to her quietly as he replied, \"We think you've been in stasis for at least seventy-five years, being brought out a day at a time for each assassination. The year is 2779.\"\n\n\"Seventy-five years... 2779...\" Sakura whispered, her brain too numbed with the shock to react. Her eyes suddenly widened, and she cried out, \"My parents?!\"\n\nJohn could feel her trembling with fear as he held her hand, but he couldn't give her the answer she so desperately craved. \"I'm so sorry, Sakura,\" he replied, his voice full of sympathy for the tragic young woman.\n\nHeartbroken, she curled up on the bed, her body wracked with sobs as she whimpered, \"Mom... Dad...\"\n\nJohn glanced at Rachel and Alyssa, and they got up and left her to her grief, giving her some privacy as she struggled to cope with the dreadful shock and feelings of loss. When Sakura had finally cried herself out, John approached her again, sympathy etched on his face when he saw her mournful expression.\n\nShe looked his way when she heard him approach, and she whispered, \"What happened to them? I have to know.\"\n\nHis voice was kind as he replied, \"One of my crew did a background search. If you come with me, she'll be able to tell you what you want to know.\"\n\nSakura nodded, but didn't say any more, simply climbing off the bed, and walking over to join him. He led her over to the door, with Alyssa and Rachel falling into step behind them. The grav-tube drew a look of confusion from the grieving girl, so he briefly explained how it worked before stepping into the blue anti-gravity field at her side. She gave him a wan smile despite herself as they began to float upwards, and when they arrived at the Command Deck, he offered her his hand to help her step out of the tube. \n\nThe rest of the crew were waiting up here, and they gave her tentative, sympathetic smiles as she walked past them. Sakura was too absorbed in her grief to acknowledge them though, and she drifted along at John's side, her hand still clutching his for support. Calara rose from her chair and opened the door to the Briefing Room, then walked inside to wait for them there. Rachel walked over to join Dana, leaving just John and Alyssa to accompany the girl into the room.\n\nJohn pulled a chair out for Sakura to sit down, and she finally released his hand as she sat, before crossing hers in her lap. She looked small, vulnerable, and alone like that, her face drawn from crying. His heart went out to her, and he glanced across the room at Calara, who was wearing a similar look of empathy for the grieving young woman.\n\nThe brunette sat down next to Sakura, and said gently, \"Hello, my name's Calara. I'm very sorry for your loss.\"\n\nSakura met the other girl's gaze, and even though she was wracked with grief, she managed to smile bravely in thanks. \"John said you can tell me what happened to my parents?\" she asked, her voice catching at the end.\n\nAfter taking a deep breath, Calara replied, \"Your father passed away ten years ago, and your mother six. It was peaceful for both of them. They never had any other children, and I couldn't find any record of other surviving relatives.\"\n\nSakura's shoulders trembled, but she bit back her tears, and asked in a choked voice, \"Did you find any pictures of them? I can't believe they're gone. I need to see them again.\"",
        "Calara hesitated, and said, \"I couldn't find any pictures, but I discovered a couple of videos. Would you like to see them instead?\"\n\n\"Oh, yes! Please...\" the other girl replied, reaching out to grasp Calara's hand.\n\nThe Latina stroked that shaking hand, and said quietly, \"Of course, but you might find them difficult to watch. The first was their appeal for your return.\"\n\nWhen Sakura gave a slight nod of her head, Calara picked up the remote from the table, and pressed play on the view screen. A middle aged Asian couple appeared on the screen, both looking haggard and tense with worry. The video had been paused just after the police officer beside them had finished talking to the press, and he turned to Sakura's father and nodded his head respectfully. Across the bottom of the screen, the banner read \"Shiro and Emiko Honami make a statement regarding their missing daughter, Sakura.\"\n\nShiro began to speak, and the camera zoomed in on his wan face as he said, \"We are making this statement to plead with our daughter's kidnappers to contact us with their demands. I am willing to meet whatever the price, but please don't hurt Sakura. We just-...\" He broke off, choked up with emotion and unable to continue. \n\nFresh tears had started rolling down Sakura's cheeks as she watched her father, and she let out a quiet sob to see her father so overcome. \n\nHer mother, Emiko continued where her husband had left off, \"We just want our daughter returned safe and well. She's the most precious thing we have, and we're begging you to bring her back to us.\" She took a shaky breath, then said, \"We love you Sakura, we're praying for your safe return.\"\n\nThe video changed to the news studio, and Calara paused it, then turned to look at the weeping girl, and said, \"I'm so sorry. They loved you very much.\"\n\nSakura brushed away her tears, desperately fighting back the urge to cry, as she said, \"You said you had two videos?\"\n\nCalara nodded, then turned to face the viewscreen again and pressed a couple more buttons. The news studio disappeared, and this time the image was frozen on Shiro Honami, with his wife, Emiko, at his side. They looked much older now, both having gone grey, and were standing beside a simple but beautiful shrine. The couple were addressing a crowd of reporters, who were gathered around, listening attentively.\n\n\"This video was taken in 2742, forty years after you were abducted,\" Calara said, her voice sombre, and she pressed a button on the remote, playing the video.\n\nShiro stared into the camera, and his voice was tightly controlled as he said, \"Thank you for attending this press conference. Forty years to the day after our beloved daughter was taken from us, I would like to announce that we are setting up the Sakura Honami trust. We hope that her memory can live on, by providing grants for students, so that they can study the law that she loved so much.\" He turned to his wife, and nodded for her to continue. \n\nEmiko's face was shadowed with grief and loss, but her voice was strong as she said, \"Sakura believed in justice. She once told me that was the reason she chose to study law, so that she could help people get the justice that only the law could provide. While she never received that which she believed in the most, it is our dearest wish that the trust will help others to pursue her dream.\"\n\nThe video ended, frozen on the image of her parents, and the room went quiet apart from the heart-rending sobs coming from the grief stricken girl. John walked around the table to her side, then squatted down beside her. She was hugging herself, arms tight across her chest as she leaned forward and wept for her parents. He stroked her shoulder comfortingly, wishing he could do more for the mourning girl.\n\n\"I'm sorry Sakura,\" he said quietly. \"Would you like us to give you some time alone?\"\n\nShe managed to get her crying under control, and after a long moment, she looked his way from under her veil of jet-black hair. Her voice sounded hollow as she said, \"I know they never caught Mikaboshi. What about the three men who kidnapped and raped me?\" \n\nJohn turned to Calara, and asked, \"Did you manage to find anything?\"\n\nCalara shook her head slowly, her face filled with remorse as she said, \"I'm sorry, Sakura, they never found them. I searched through the New Eden criminal databases, looking through old case files, and no one was ever charged with your abduction. Alyssa gave me detailed descriptions of the men, but it doesn't look like they were ever charged for any other crimes either.\"\n\nSakura nodded slowly, looking tired and defeated. Her eyes flicked to the frozen image of her mourning parents, and she whispered, \"I've lost everything.\"\n\nJohn rubbed her shoulder gently, and said, \"What's happened to you and your parents was horrendous, but you don't have to let those evil bastards rob you of a normal life.\" He glanced at the viewscreen, and continued tentatively, \"Your mother said you loved the law, and were studying to become a lawyer. I have money, and I could help you continue at university if you want?\"\n\nHer eyes narrowed with barely controlled fury as she snapped, \"Fuck the law! It failed me, and my parents. What justice did any of us ever get?\"\n\nHe rocked back, startled at her vehement tone, and replied, \"You could become a lawyer, help people get the justice that you never received.\"\n\nShe laughed hysterically, holding up her hands, and looking at them as though they were dripping in blood. Her tone was incredulous as she replied, \"Shinatobe murdered hundreds of people, and I can remember all of it! How could I go back to a normal life after all this?!\"\n\nJohn was quiet as he replied, \"I'm sorry I brought this up. You have too much to deal with already, and I shouldn't have burdened you with anything else.\" He sighed before he continued, \"The reason I did, was because it's not too late for me to help you forget everything that happened. If you want, I could wipe your memory of the kidnapping, and everything that Shinatobe did.\"\n\nHe placed his hand lightly on her stomach for a brief moment, before pulling it away. Sakura looked down at her rounded tummy as she suddenly understood what he was referring to. \n\nShe stared into his eyes, and replied fiercely, \"No! I need to remember everything that Mikaboshi did to me. I don't want you to wipe my memory.\"\n\n\"What do you want then?\" John asked her simply.\n\nHer voice was chilling as she replied, \"Revenge.\"\n\nHe met her burning gaze, and said, \"I have every intention of hunting that bastard down. There's no need for you to throw your life away on a quest for vengeance.\"\n\nShe shook her head, and pleaded, \"Let me join you! I know I could help you catch him!\"\n\nJohn slowly stood up, and his voice was sympathetic but firm, when he said, \"I'm sorry, I shouldn't have raised this now. You're not in any state to make such a life-changing decision.\"\n\nThe door opened behind him, and Rachel walked into the room. She had an apologetic smile on her face as she said, \"I'm sorry to interrupt, but we're about to jump into the Delta-Draconis system. There's a massive Terran Federation fleet there, and we've picked up Fleet Admiral Buckingham's flagship.\"\n\n\"Thanks, Rachel,\" John said, giving her an appreciative nod. \n\n\"You're welcome,\" she replied, before leaving the room.\n\nHe turned back to Sakura, and said, \"I'm afraid I have an important meeting I can't delay. We can discuss this again, when I return.\" Glancing at Alyssa, he said, \"I'll need you with me, XO.\"\n\nShe met his gaze, then slowly shook her head, and replied, \"You have Edraele to help with the politics, and Calara will be more useful on the Terran Federation Navy side. I think I'll stay here. I want to have a chat with Sakura.\"\n\nJohn was shocked at her declining his request to join him, and he blinked in surprise. He quickly shook it off, then looked at Calara, and said, \"Are you ready, Commander?\"\n\nShe snapped him a sharp salute, and replied, \"Of course, Admiral.\"\n\nHe smiled at her, then looked down at the forlorn young girl sitting besides the long desk, her face a mask of sorrow. Sakura's anger had burned itself out as fast as it had arrived, and she looked lost and alone once more. \"Everything will be alright, Sakura,\" he said kindly. \"We'll take care of you, I promise.\"\n\nShe nodded distractedly, and with a final curious look at Alyssa, he turned and left the room.\n\n***\n\n\"No life signs! We're gonna make a tidy packet from this one, just you wait!\" the heavyset man exclaimed jubilantly, his moustache twitching as his face lit up in a grin.\n\n\"I don't recognise the configuration,\" the skinny man in overalls replied, looking at the small ship that was highlighted in the holographic System Map. He bit his thumbnail nervously as he added, \"I bet the sensors are malfunctioning, and there's probably a ravenous Drakkar hiding in it. We'll be killed and eaten for sure.\"\n\nThe big man chuckled with a jolly laugh, and said, \"Ever the pessimist, Cliff. Been watching too many holo-movies?\"\n\n\"It's called being a realist, Barry,\" Cliff replied with a worried frown. \"If there's no one aboard, who set off the emergency distress beacon?\"\n\nBarry grinned at him, then gave him a wink as he replied, \"Maybe they went for a spacewalk without a tether? Anyway, I'm happy to take your share if you don't want to help...\" He rose from his chair, then grabbed his grey leather jacket, and pulled it over his Pilot's jumpsuit. Clapping the smaller man on the shoulder, he said, \"Activate the tractor beam, there's a good lad.\"\n\nCliff was torn with indecision, but the shuttle did look expensive with its sleek lines and jet-black hull. He finally nodded, and said, \"Alright, I'll pull it towards the Scamander, then you engage the docking clamps.\"\n\n\"Marvellous!\" Barry exclaimed cheerfully, then turned to take a look at a wall-mounted monitor in the confined cockpit.\n\nHe cycled through the cargo manifest, nodding with satisfaction as he perused the list. If they dumped twenty tonnes of New Caladon grain, they'd have plenty of space for the shuttle in the Scamander's Cargo Bay.\n\n\"It's in position,\" Cliff said, glancing at the big man who was lost in thought as he stared at the monitor. Rolling his eyes, he got up from his chair, then flipped the overhead switch that engaged the docking clamps. He had to admit the excitement of a big salvage score was starting to overcome his worries. He walked past Barry, and said over his shoulder, \"We're all set.\"\n\nBarry grinned at him, then started to whistle an out-of-tune rendition of an old sea shanty. Cliff grimaced, but knew better to ask the Scamander's Captain to stop. Last time he'd done so, Barry had hummed the Terran Federation anthem for the rest of the day. They stepped into the elevator, then rode down the three levels to the Airlock and Cargo Bay. \n\nBarry drew his heavy pistol from the holster at his waist, brandishing it with a flourish as he said, \"Just in case there's a sneaky Drakkar ready to pounce on us!\"\n\n\"Yeah, yeah, alright,\" Cliff grumbled, as he strolled over to the airlock door. He clenched his fist, then gently tapped it on the button to open the airlock.\n\nThe heavy doors clanked open, with the grinding squeal of hydraulics that were badly in need of some maintenance. Barry frowned at him, and wagged a finger as he said, \"That doesn't sound too healthy. I thought I was paying you to look after my ship?\"\n\n\"I'll take a look at it later,\" Cliff promised through gritted teeth.\n\nBarry waited until the doors had fully opened, then sprang into the shuttle, waving his pistol around dramatically. The big man looked so ridiculous that Cliff couldn't help but laugh.\n\n\"I can't see a bloody thing in here,\" Barry grumbled. \"Can you see a lightswitch, lad?\"\n\nCliff scratched his ear, and said, \"I think I've got a flashlight up in the maintenance room. Want me to go and get it?\"\n\nThere was a strange wet sound like a carving knife being used to slice an over-ripe melon, followed by a quiet gurgle. \n\n\"Barry? Everything alright in there?\" Cliff called out to his shipmate.\n\nThere was furtive movement in the darkness, and a chilling voice replied, \"I'm afraid Barry had an unfortunate case of death.\" \n\nA moment later, a horrifying figure emerged from the gloom. He was missing his left arm, and his face was a shattered ruin of fragmented ceramic and metal. In his right hand, he held a black sword that glistened wetly, leaving a trail of red drops on the floor.\n\nCliff backed away, his eyes going wide at the sight of the horrifying cyborg. \"What do you w-w-want?\" he stammered, his throat constricting with terror.\n\n\"To choke the life out of John Blake,\" Mikaboshi replied, the words coming out slightly distorted from his twisted lips. \"But first I need to kill you, then steal your ship.\"\n\nMikaboshi slowly advanced towards the tech, and relished the stink of fear radiating from the man as he backed him into a corner. The terrified technician huddled on the floor, staring up at the blood-drenched sword as the cyborg raised it above his head for the killing strike. Mikaboshi changed his mind at the last moment though, and the Cargo Bay echoed with the hideous sounds of the man's prolonged and agonised death.\n\n\"Yes, doing that to John Blake would be far more satisfying,\" Mikaboshi said, as he wiped his blood-spattered hand on the relatively clean part of the tech's overalls.\n\nHe straightened, then strode out of the Cargo Bay to look for the cockpit. Now he had a hyper-warp capable ship, he needed to plot a course to Yomi-no-kuni, his fortress and base of operations. He had a great deal of preparations to make before he risked facing John Blake once again."
    ],
    "authorname": "Tefler",
    "tags": [
        "teenager",
        "18 year old",
        "swallow",
        "cum inflation",
        "catgirl",
        "alien11111",
        "shapeshifter",
        "psychic",
        "foursome"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-63"
}