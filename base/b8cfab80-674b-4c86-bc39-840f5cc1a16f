{
    "title": "Jupiter Rising Ch. 01",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racism, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n***\n\nThis story is dedicated to Dr. Albert Einstein and Professor Stephen Hawking, CH CBE FRS FRSA.\n\nPart 1 - Prologue\n\n10:00pm, Sunday, February 2nd. The weather was clear and cold at the University Observatory on the far (east) side of the mountain finger which dominated the eastern side of our County. On the Observation Deck, with the large telescope towering over us, were six smaller telescopes for observing the planets in the night-time sky.\n\nProfessor Stephanie Steele and a number of her graduate students were here. And despite it being a school night, Laura and I had allowed Carole, Jim, Ross, and Ian to be there with us, since Marie was there. Edward Steele and his daughter Selena were also there.\n\nThe grad students had made a point to talk to me, mostly to thank me for bringing Peter Blassingame to Justice and getting him convicted for the murder of their fellow Astronomy major, Steven Walter Henry. (Author's note: 'Unresolved', 'Vox Populi Vox Dei'.) I told them that getting Justice for good people like Steven is what made my job worth doing.\n\n\"Daddy!\" exclaimed Carole as she looked into one of the telescopes, standing on a crate. \"I can see Saturn's rings!\"\n\n\"Let's take a look.\" I said. Carole hopped off the crate, keeping her feet and knees together like a good Paratrooper to make a good landing. I sat on the crate and looked into the eyepiece. Sure enough, Saturn was right in the middle of the view, and the rings were very visible.\n\n\"Let's get a couple of photos.\" said Stephanie Steele. The eyepiece had a viewer for the eye, and also one for a camera hookup. Stephanie aligned the telescope and took digital photos, which came out very well.\n\n\"Carole!\" I heard Marie squeal from the next telescope over. \"I can see Jupiter!\" She and Carole took turns looking at Jupiter while Laura looked at Saturn. Then we parents went over and saw Jupiter, whose colorful bands were very visible, along with three of its moons.\n\n\"That's very nice.\" Laura said as she took photos with the digital camera. My wife had a strong interest in science and technology, dontcha know, so she was enjoying the evening as much as the rest of us.\n\n\"Daddy,\" asked Carole, \"did you earn the Astronomy Merit Badge in the Boy Scouts?\"\n\n\"Yes, I did.\" I said, knowing Carole had found my old Merit Badge sash in a box, and knew which Merit Badges I'd earned. And it is possible that Carole had help from her grandmother in finding that box and its contents. But I digress.\n\nAs everyone continued to look at things in the telescopes, Selena Steele said \"I need to go. I have to go to the City to catch a flight to Charlotte, North Carolina tomorrow. J.P. (Goldman) normally attends this conference, but he's sending me in his stead, to meet all the so-called 'Big Boys'.\" With that, she hugged Carole, Marie, Stephanie, Edward, me, and Laura. Then she left.\n\nStephanie Steele and I had a quiet few minutes of conversation. \"Did you ever hear any more about that serial bomber that was using my formulae as his pattern?\" she asked me.\n\n\"No, I never did.\" I said. \"Detective Beale in Atlanta said the bombings in Druid Hills just stopped right after Cindy and I visited there.\" (Author's note: 'Four Square', Ch. 03.) \"And the L.A.P.D. is watching, but nothing new there. I'm thinking the bomber either stopped and lay low, or went to another city and just hasn't been caught yet.\"\n\nLaura finally announced that it was past certain kids's bedtime. They very politely thanked Professor Steele for hosting them to see the planets, which made me proud as a parent. Then we headed home...\n\n* * * * * * * * * * * * * *\n\nDawn, Monday, February 3rd. The Astronomy students thanking me for bringing Peter Blassingame to Justice was one of the many things on my mind as I stood in front of the gravestone of TCPD Corporal Peter M. Feeley on the anniversary of his death at the hands of Detective Angela Harlan, the Black Widow. (Author's note: 'Case of the Black Widow', Ch. 05.) \n\nIt had been a hard year. Two more Officers had died, and while I took those deaths personally, they had not been the result of the utter failure on my part that had led to Pete Feeley's death. I resolved once again to Corporal Feeley's Spirit to not fail that way again.\n\nI heard a noise behind me, and turned my head to look, halfway expecting to see Teresa Croyle there, ready to admonish me. And Teresa was there... as was Carole Troy, and Pete's son, Peter D. Feeley. Little Pete and Carole came up to me.\n\n\"Please excuse us for disturbing you, sir.\" said Carole with great formality.\n\n\"Please excuse us, sir.\" said Pete.\n\n\"You are not disturbing me.\" I said. \"I am glad you are here.\"\n\n\"What was my daddy like, Mr. Crowbar?\" asked little Pete, who was now becoming old enough to understand his father's sacrifice.\n\n\"Your daddy was a very good Police Officer.\" I said. \"He was a very positive person, too, which is why your mom loved him.\"\n\n\"Carole says I'm going to be a Police Officer like my dad.\" said Pete. \"Will you help me grow up to be a good Police Officer, so my daddy in Heaven will be proud of me?\"\n\nWow, that one hit me right between the eyes, and I felt the emotion welling up inside me. \"Of course I will.\" I said. \"And so will your mom, and our many friends on the Police Force. But you can be anything you want... Police Officer, FBI Agent, something else. Don't grow up too fast, okay?\"\n\n\"Yes sir.\" said Pete as he looked at his father's gravestone. After a few moments, we bowed formally, then respectfully retreated to our vehicles, where Teresa was waiting for us.\n\n\"Carole asked me to bring her and Pete.\" said Teresa. \"Tanya will come by later today.\"\n\nI nodded. Teresa said she'd take Pete home, and Carole got into my Police SUV with me. \"So, Carole,\" I said, meaning it whimsically, \"is Pete going to be a Police Officer?\"\n\n\"It's a done deal, Daddy.\" Carole said. \"A done deal...\"\n\n* * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded MILF reporterette at 7:00am, Monday, February 3rd, from atop the building at the corner of Riverside and College, with the State Office Building in the distance behind her. \"The Impeachment trial of deeply unpopular Governor Val Jared gets underway today!\"\n\nBettina began: \"The State House Managers will begin laying out their devastating case in the State Senate Chamber today, showing why Val Jared's crimes of abuse of power, racism, and obstruction of the Legislature are more than enough to warrant his conviction and removal from office!\"\n\nBettina: \"It is expected that the Managers will begin by showing how the Governor conspired with Police Commander Donald Troy... who took the Fifth rather than cooperate with an FBI investigation, and accepted a pardon from the Governor... to harass two women who brought credible claims that the Governor sexually harassed them. They will then show that the Governor pardoned Commander Troy in a quid pro quo arrangement.\"\n\n(Author's note: For the complete story of the Rodman/Braselton case and subsequent issues, newer readers (and older ones, too) should read 'The Saga Continues', Ch. 02, 03; 'Swamp Frogs'; 'One Night In Bangkok', Ch. 04; 'Shipping & Handling', Ch.01; and of course 'No Way Out', Ch. 03-05.) \n\nBettina: \"Managers wanted to compel Commander Troy to testify against the Governor in the Impeachment trial, but Troy's lawyer said that Commander Troy had already testified truthfully under an immunity agreement, and that agreement was still binding upon the Legislature. It is not clear whether or not Donald Troy can be compelled to testify again, and whether or not the previous Immunity Agreement holds, and it would take months to work it out in the Courts.\"\n\nBettina: \"And in national news, the FBI confirmed that they have reached a settlement with Donald Troy after they damaged his home during a raid to arrest him weeks ago. Donald Troy has not responded to KXTC's repeated requests for comment on the matter. And now let's go to trusted reporter Lester Holder for more on that case. Lester!\"\n\n\"That's right, Bettina!\" said Lester Holder, from an 'undisclosed location' that appeared to be the backyard of KXTC studios. \"While Governor Jared's pardon means Donald Troy's legal woes in the Betty Morelli case are over, experts are questioning if there was not evidence that would've proved Troy's guilt, and that that 'smoking gun' is the real reason Jared pardoned Troy. Experts also agree that Commander Troy's credibility with blacks, already at a low point, is now utterly destroyed, and it would be hypocritical of white Police Officer Donald Troy to arrest and charge blacks with crimes after he was pardoned himself...\"\n\n* * * * * * * * * * * * * *\n\n\"And there it is.\" I said as we drank coffee in the Chief's Conference Room \"I can't make arrests, now. And that Media mantra will soon be the whole TCPD being unable to arrest blacks as long as I'm Police Commander. And if we do make arrests, blacks will claim discrimination and abuse by the Police, and they'll start having protests, and so on and so forth.\"\n\n\"Yep.\" agreed Sheriff Griswold. \"That's how I see it, too.\"\n\n\"That's why it won't be you out there arresting them, Don.\" said Lt. Commander Teresa Croyle. \"It'll be me and our Officers making 'fair and balanced' arrests of all lawbreakers, regardless of color, creed, orientation, or national origin... or however that boilerplate goes.\" Captain Tanya Perlman smiled brightly at that.\n\n\"It's an optics game, Commander Croyle.\" said Chief Moynahan. \"Perception is the reality, and the Media knows it. We have to be very careful; remember that the Feds are trying to hammer us and force us into a Consent Decreeee...\"\n\nIt was then that everyone noticed that Commander Cindy Ross was not participating in the conversation. We looked over at her to see that she was looking at the television monitor, but was not seeing it.\n\n\"You okay?\" Teresa asked quietly, right into Cindy's ear.\n\n\"Uhhh...\" Cindy said, coming out of it. \"Yes... yes, I'm okay.\"\n\n\"Thinking about what Penis Holder said about the 'smoking gun'?\" I asked.\n\n\"I think I'll exercise my right to silence on the matter.\" Cindy said.\n\n*KNOCK!* *KNOCK!* *KNOCK!* *KNOCK!*\n\nThe door opened to reveal Lt. Jerome Davis. \"Ladies, gentlemen,\" he said, \"our guests are here.\"\n\n\"Ah yes.\" I said with a smile as I got up \"One of our honorees today at Promotions and Medals Day has to attend elementary school, so we're giving her her awards early. If you'll follow me, please...\"\n\nPart 2 - Ceremonies\n\nWe were wearing our formal uniforms with medals today. We went into MCD, where the Detectives, also attired in formal uniforms, were gathered in a circle around their guest, who was wearing her 'Sunday best' and fearlessly holding court.\n\nCarole Diana Troy had been talking about Saturn's rings and Jupiter's bands, and then Lieutenant Rudistan began engaging her in conversation. Rudistan had formidable repart\u00e9e skills, but my favorite six-year-old was holding her own.\n\n\"So you're going to win the Police Boxing Matches, Carole?\" Rudistan asked mischievously.\n\n\"One day I will.\" Carole said. \"But it's going to be hard to beat Daddy and Aunt Cindy.\"\n\n\"But they're not competing.\" said Joanne Warner, who was officially returning from maternity leave. \"The Chief won't let them.\"\n\n\"Nor me.\" said Jerome Davis, somewhat forlornly.\n\n\"That won't last forever.\" Carole said confidently. \"One day my daddy will be Police Chief, and then it will be Kay-tee-bar-the-dorrrrr.\" Detectives broke out laughing at that.\n\n\"Ah,\" I said, coming up to Carole in the middle of the room, \"I see that you are revealing my secret plans to catch up to Commander Ross in Police Boxing Matches trophies.\" A green crowbar was waved in my general direction. However, Carole's face fell a bit; she was taking me more seriously than she should have.\n\n\"Uh oh, I've said too much again.\" Carole said. \"Daddy says I talk too much, sometimes.\"\n\n\"Your daddy is right about that.\" said Carole's mother, who'd been watching and drinking coffee while sitting at one of the empty desks. Some Detectives chuckled uncertainly.\n\n\"That's okay, Carole.\" said Rudistan with great joviality. \"Commander Ross says that about me.\"\n\n\"And I'm right about that, too.\" admonished the Green Crowbar.\n\n\"Yes, it's okay, Carole.\" I said, patting her on the shoulder. \"These Detectives need to feel the fear that I might indeed find my way back into the Police Boxing Matches ring.\"\n\n\"Whoaaaaa...\" said a chorus of Detectives, and one Green Crowbar.\n\n\"You're not Police Chief yet, Mr. Crowbarrrr.\" admonished Chief Moynahan.\n\n\"No sir, and I hope it stays that way for a long, long time.\" I replied. \"Okay, let's get started. One of our Detectives already has a mission today... second grade. So we'll have her awards early. Sheriff, will you do the honors?\"\n\n\"I sure will.\" said Sheriff Griswold, beaming as he came up. He read the Certificate of Appreciation, which praised Carole for protecting a K-9 Corps Police Dog at great risk to her own life. Everyone applauded as Carole accepted the framed Citation and shook the Sheriff's hand.\n\nChief Moynahan stepped up, and announced a Certificate of Achievement for Carole's observations that helped lead to the successful cracking of the 'Time Flies' case. Carole politely shook the Chief's hand as she accepted the award and the Detectives applauded.\n\n\"And there's one more thing.\" I said, stepping up. \"As you know, it is my job to make sure that this is the very best Police Force in the world. Fortunately, with great Officers, Detectives, and Leaders like all of you, that is not a hard job. But we can be just a little bit better.\"\n\nI then grinned as I said \"And just as we couldn't wait for Lieutenant Rudistan to grow up...\" Laughter broke out and Rudistan grinned jovially at that, then I said \"... we can't wait until this Detective graduates second grade, much less the Police Academy.\"\n\nI took out a silver TCPD Auxiliary Detective Badge, No. 1642, pinned to a leather holder affixed to a chain necklace. \"Carole Troy, please raise your right hand and repeat after me.\" I said. I then administered to Carole the TCPD Police Officer's Oath.\n\n\"Congratulations, Auxiliary Detective Troy.\" I said as I put the Badge on Carole's neck as if it were an MOV. \"And there's no 'honorary' about it.\"\n\n\"Thank you, sir.\" Carole said happily. Then she crisply saluted me. I came to attention and saluted her back, knowing what salutes meant. This was the first salute exchanged between me and Carole as Police Officers.\n\nIt would not be the last.\n\n* * * * * * * * * * * * * *\n\nAfter Laura took Carole to school, the rest of us got ready for the Promotions and Medals Ceremonies. We were inducting six new Rookies to the Police Force, and there were a number of pay grade promotions among the Uniformed Ranks. \n\nRoy McGhillie was getting a new badge that said 'Senior Sergeant', as he was moving to 1st Precinct and out of the Detective Corps. And Joanne Laurer was being promoted to Detective-1 from Senior Patrolman.\n\nThere were a number of Certificates of Achievement and a few Achievement Medals for Police actions during the 'Homewrecker' and 'Time Flies' cases, with all of the Intelligence Branch personnel getting something for their outstanding work on their inaugural cases.\n\nAnd Sheriff Griswold ambushed me with a Certificate of Appreciation for organizing and conducting the Christmas Eve 'First Amendment Rally'. The applause from the Police Force was very strong, and I suspected that it was for more than just saving Christmas for the Cancer Kids. It was a show of support for their Police Commander, despite my having taken the Fifth and accepted the Governor's pardon in the Betty Morelli case...\n\nPart 3 - Traffic Stop\n\n10:30am, Monday, February 3rd. Amber Harris was driving in her KXTC sedan towards the KXTC studios when she saw a Police cruiser fall in behind her. She was already going below the speed limit, but slowed down more. That was to no avail; the Police cruiser's blue lightbar came on.\n\nShe pulled over to the side of the road, and speed-dialed a KXTC number that would record the traffic stop with her leaving the connection open. A moment later, Corporal Hicks exited his vehicle and came up to her window cautiously, and Amber lowered her window halfway, just enough to speak through.\n\n\"May I see your license and registration, please.\" Hicks courteously asked.\n\n\"Why did you stop me?\" Amber angrily demanded to know.\n\n\"You were driving over the speed limit, ma'am.\" said Hicks.\n\n\"I was not!\" Amber spat angrily. \"I was under the speed limit the entire time!\"\n\n\"May I see your license and registration, please.\" said Hicks again.\n\n\"No you may not!\" Amber yelled. \"I'm calling a lawyer right now.\"\n\n\"Ma'am, step out of the car, please.\" said Hicks, his hand over his holstered weapon.\n\n\"I demand a female Officer be present before I unlock the vehicle.\" Amber said.\n\n\"You got it.\" said another voice, coming up to the car. It was TCPD Deputy Chief Cindy Ross, carrying her green crowbar. \"Get out of the car, Harris.\"\n\nAmber stared hatefully at Cindy, but only when Cindy intimated swinging her crowbar to break Amber's car window did Amber finally respond. She undid her seatbelt and opened the door, and slowly swung her legs to get out. That was not fast enough for the Green Crowbar.\n\n\"I said get out of the goddamned car!\" Cindy yelled, grabbing Amber's arm and violently pulling her out of the car. Amber stumbled to her knees, and Cindy forcibly pulled her up and slammed her against the rear door.\n\nAmber was wearing a clingy blue blouse that showed off her big, milk-filled breasts, blue jeans that looked painted on, so tight were they, and brown high-heel sandals. Cindy began frisking Amber, getting good feels around her breasts and crotch, and letting her hand roam down the curves of Amber's shapely legs. It wasn't so much to get a good feel of Amber, but to humiliate her. After all, Cindy was the daughter of a master psychologist.\n\n\"Hey!\" Amber protested as she was felt up.\n\n\"Shut up, bitch.\" Cindy said, her voice relatively low.\n\n\"Why was I pulled over?\" Amber demanded to know.\n\nCorporal Hicks said \"You were going 36 miles per hour in a 35 MPH zone.\"\n\n\"And she failed to follow your lawful instructions to show her ID.\" Cindy said. \"She also resisted arrest in not getting out of the car when I told her to.\" She was pushing Amber's neck, forcing the blonde reporterette's head to be pressed against the glass of the rear door's window. \"Those are parole violations, Amber. Parole. Violations. Back to prison for three years.\"\n\n\"You're full of shit!\" Amber said. \"This is a unlawful stop, and Police harassment and brutality!\" She barely noticed that Hicks had backed off and gone back to his vehicle, leaving Amber alone with Cindy.\n\n\"Let me tell you something, bitch.\" Cindy whispered into Amber's ear from close behind. \"I'm sick and tired of your bullshit games about Betty Morelli's baby. I will not tolerate it---\"",
        "\"What the fuck are you talking about, you fucking dyke?\" Amber yelled, trying to goad Cindy into physical violence. Cindy did not take the bait... yet.\n\n\"Stop your shit. You know what I'm talking about.\" said Cindy. \"And I don't care if it's you or your racist proxy Penis Holder talking about it on the air. If anyone at KXTC says another word about that baby on the air, I'm going to kill you.\"\n\n\"Making threats?\" Amber goaded. \"Some cop you are!\"\n\n\"You should think about it, Amber.\" Cindy said quietly. \"That's right: I'm a cop, authorized to carry and use a gun. And I'm a cop that can pull you over any time, or go into your home without a warrant because you're on probation, and send you back to prison and put your kids into DFACS... or I can just stop the shit permanently and just blow your fucking head off. This is your last warning, bitch. And if you don't think I'll do it, you just try me.\"\n\nWith that, Cindy shoved Amber into the car door one last time, then called Hicks over. \"Write her a warning for the speeding and FFI, then she can go.\" Hicks wrote out the warning, which Amber took, crumpled into a ball, and threw it onto the car floor in front of the shotgun seat, then scratched off as she got back on the road.\n\n\"Some people just don't learn, ma'am.\" Hicks said to Cindy as they watched Amber leave.\n\n\"You got that right.\" Cindy replied. \"Thanks for your help on that.\"\n\n\"No problem, ma'am.\" said Hicks. \"And if you need more 'help' with that bitch, just let me know...\"\n\n* * * * * * * * * * * * * *\n\nAmber Harris rushed into the KXTC offices. She went to her desk and checked the tape recorders that had been in her purse and on her person. Both recorded through Hicks's correct stop, but became staticky with a droning hum when Cindy had come up.\n\nShe went to the office of Burt West. He was in there with Bettina Wurtzburg and Lester Holt. \"Ah, come in Amber.\" he said.\n\n\"Did you get the recording from my phone?\" Amber asked as she came in, shut the door, and sat down at the table with the others.\n\n\"Yes.\" said Burt West. \"At least through the first part of the stop. Then it became all static, with an intermittent hum, as if the Slender Man had walked up to you.\"\n\n\"We have got to find a way to get around their jamming devices.\" said Bettina.\n\n\"Ross threatened to break out my car windows, then when I opened the door she pulled me out of the car, then slammed me against it.\" Amber said bitterly. \"We should subpoena Hicks's dashcam----\"\n\n\"It wasn't on, or at least that's what they're saying.\" said Lester Holder. \"We've already sent an Open Records Act request for it. Commander Ross personally responded to it, saying Hicks's dashcam wasn't on, nor was the Officer-cam on his body, and she wasn't wearing one.\"\n\n\"That's bullshit!\" Amber said hotly. \"We need to----\"\n\n\"Amber... Amber!\" said Burt West, finally getting her to stop talking and to pay attention. \"Look, you're right, that was pure abuse, and a demonstration of the sheer Power of Police that Jasmine Nix warned us about in her album. But Ross is going to get away with it. You start up any crap with them, and they'll use that stop, or gin up another one, to go to Court and revoke your parole. You'll be in prison for three years, and you know Donald Troy is dirty enough to get your kids put in DFACS.\" \n\nAmber's face fell at West's words. Then Bettina said \"Why did they stop you, Amber? By that I mean, what really happened?\"\n\n\"Ross threatened me.\" Amber said. \"She said she would kill me if anyone at KXTC brought up Betty Morelli's baby on the air again. She called you 'Penis Holder', Lester, and said that if you or anyone else brought up Betty's baby again, she would come kill me.\" Everyone looked around the room at each other for a second.\n\n\"Just shows we're getting to her.\" said Holder. \"We need to ramp it up even more.\"\n\n\"No!\" Amber spat. \"Are you kidding? That bitch wasn't playing games! She meant it; I could tell. She will come after me if any of you keep it up!\"\n\n\"But we've got to keep up the rhetoric against Donald Troy!\" exclaimed Lester Holder. \"And the way to do that is to attack his children on the air!\"\n\n\"That almost got you killed, Lester!\" Amber yelled back. \"And what, are you trying to get me killed now?\"\n\n\"I'm sure it's not that bad---\" tried Burt West.\n\n\"You weren't there, Burt!\" Amber yelled at her boss. \"You didn't see the look in that bitch's eyes. She meant it! And if it's true that her adopted daughter is Betty's baby, she would kill me to protect her daughter. That's what those bastard Troys DO! Look at what happened to John Hardwood, and to that ATF Agent Halsey!\"\n\n\"We have got to get Donald Troy!\" countered Lester Holder, emotion in his voice. \"We've got the bastard on the ropes; we have to finish him off!\"\n\n\"By getting me killed?\" Amber fired back. \"Really?\"\n\n\"Burt,\" said Bettina diplomatically, \"we do need to consider the threats to us in all this. Why don't we discuss our plan of action going forward later?\"\n\n\"All right, all right.\" said West, pretending to concede. \"Amber, go get started on our six o'clock story about Jared's impeachment trial. Lester, check with our Fed contacts and see if we can gin up anything on that civil rights lawsuit against the TCPD. Y'all go ahead.\" Amber and Penis Holder acted upon their dismissal and left the room, a decided chill between them... at least by Amber towards Holder. \n\nAfter the door closed, Bettina said \"Amber really is scared. I could see it in her eyes. Maybe we should scale back, at least about Morelli's child.\"\n\n\"Lester was right about one thing, though.\" said West. \"They are counting on us, KXTC, to do our part to destroy Donald Troy, and quickly. The Feds did their part; they almost got Troy charged with sex crimes. And damn the idiot that made such a bad forgery!\"\n\n\"Yeah, that was a 'bad Buddha' on that.\" Bettina said forlornly. \"But Troy is damaged goods.\"\n\n\"Not badly enough, though.\" said Burt West. \"Bettina, you and I know that this is not about getting Jared. The primaries are in May, and the General Election in November will be here before you know it. And for our plans to ensure that Democrats win, no matter what, to succeed... we can't have that asshole Troy around. Look what he did when they tried to turn the Mayoral election for Weaver. He actually went and put someone in jail for it, rather than just letting it go. For what we have planned, especially in November, we have got to destroy Donald Troy.\"\n\n\"I hear you.\" said Bettina. \"But is it worth getting Amber killed? I tend to agree with her that that dyke Ross isn't playing around. And Ross's fianc\u00e9e is a CIA operative with that bitch Fredricson. Either one would kill Amber with nary a blink of the eye.\"\n\nBurt West said \"In the battle for power, real political power, there will be casualties. Winning that battle means more than Amber Harris's life. Destroying Donald Troy is more important than Amber and her children, or Penis Holder's life.\"\n\n\"Burt!\" chided Bettina. \"You're calling him 'Penis Holder', too?\" Apparently what West had said about the (lack of) value of Amber's life didn't bother Bettina, but the offensive nickname did.\n\n\"That's all that faggot is, a penis holder.\" replied West. \"The only reason I have that racist son of a bitch working for us is because he agitates Troy and the TCPD so much.\"\n\n\"As the TV show says, 'Point Taken'.\" Bettina said.\n\n* * * * * * * * * * * * * *\n\nI was meeting with Captain Tanya Perlman, Lieutenant Jerome Davis, and Lieutenant Micah Rudistan in my office at 2:00pm, Monday, February 3rd.\n\n\"Okay,\" I said, \"who are the partners in MCD?\" Tanya indicated to Jerome to answer.\n\n\"Now that Warner is back,\" said Lt. Davis, \"she's with Washington again. Coleman and Newman were partners in Vice, and are doing well together in MCD, so I'm keeping them as a team, and that leaves Rodriguez with Parker, which seems to be working well.\"\n\n\"I agree.\" I said. Tanya nodded vigorously in agreement.\n\n\"And I didn't suggest these partnerships due to this,\" said Davis, \"but it pairs two white persons with two black persons, and one white person with a Hispanic person, and men and women as partners.\"\n\nTanya added \"And the DOJ can't say we made these pairings just for Affirmative Action reasons. Coleman and Newman were already partners in Vice, so having them as partners in MCD is only natural. And Joanne and Theo were partners before she took maternity leave, so it makes sense they remain that way.\"\n\n\"True,\" I said, \"but I'm not worrying about that. I am wondering why we haven't heard anything from the US DOJ. Neither has Mayor Allgood.\"\n\n\"That's easy, sir.\" said Rudistan jovially. \"It's not time yet. The Primaries are in May, and the General Election is in November. We'll be hearing from the DOJ in April or so.\"\n\nI did a double take and stared at Rudistan. \"That is damn good thinking, Rudistan. Here, hold this.\" I handed him the red crowbar across the desk.\n\n\"Oh my God.\" Tanya said with a huge grin. \"Rudistan with all that power? That's scary.\"\n\n\"No ma'am.\" said Rudistan jovially as he tapped the crowbar in the palm of his hand. \"Our newest Auxiliary Detective will whip my butt if I try anything.\"\n\n\"Yes, yes she will.\" I said. \"But that was good thinking on your part about the timing, Rudistan. So... tell me about Vice and your partnering ideas there.\"\n\n\"Yes sir.\" said Rudistan. \"Statler and Waldorf are a good team, so I want to keep them together. Hardy and Drew came into Vice together, so I'm giving them the chance to keep working together. So we've got 'Ice Cube' Perry, Grubby Paul, and Joan Laurer. Perry stays undercover, so Paul and Laurer as a team is what's left.\"\n\n\"You good with that, Captain?\" I asked, seeing in Tanya's face that she wasn't so good with it.\n\n\"Ewwwww, I'm... 'okay' with that.\" said Tanya. \"Grubby Paul was a great undercover guy, until he got 'outed'. And I'm concerned that 'Ice Cube' is getting to that point where he'll become known. They would be a good partnership. Joan Laurer is a great prospect; she reminds me of Teresa Croyle when Teresa was in Vice, but without the bad attitude. Joan is going to be truly great, if she's developed properly. But putting her with Grubby Paul, who just doesn't get his paperwork done, and isn't all that orthodox nor out front... that could set her back.\"\n\nI replied \"Grubby has some good qualities, though. He's really good at stakeouts, at finding the right place to be, what to watch out for, what dangers are possible. He's good at getting potential sting deals started, and negotiating them. No, he's not Croyle nor Laurer when it comes to leading an armed raid, but that's not what I want him doing. And Grubby Paul is pretty good with motivating his fellow Officers; it was he that started the 'team effort' reply to a compliment, and instilling team values in the unit.\"\n\nI continued: \"So I'm good with letting Laurer work with Grubby Paul, and learning from him. But you're right: it won't last forever, and Laurer is too good a Detective and a leader to be held back for very long at all.\" Everyone nodded in agreement.\n\nEveryone nodded, then Rudistan said \"Uh oh, I better be careful! She could end up being my replacement!\"\n\nI said \"I'm thinking more in terms of your successor Mr. Rudistan. Perhaps when you become Operations Commander, one day. And Laurer could compete with you, Mr. Davis, for Captain of Detectives.\" My Detectives looked shocked.\n\n\"And where am I going, sir?\" Tanya asked, grinning but with an underlying seriousness to her voice.\n\n\"Deputy Chief.\" I said. \"And Commander Croyle will be the Police Commander.\"\n\n\"And Deputy Chief Ross?\" asked Tanya.\n\n\"She'll either be the Chief of Staff for the Sheriff,\" I replied, \"or she'll retire and run her father's self-help empire after he retires or, perish forbid, passes away\"\n\n\"And where will you be, sir?\" asked a shocked Jerome Davis.\n\n\"I'll have to take one for the team and become Police Chief when Chief Moynahan retires or, perish forbid, passes away.\" I said. \"I will be forced to sit behind a desk and be miserable while you guys have all the fun.\"\n\n\"Sir,\" said Tanya, \"by that time, you'll be enjoying sitting back like Sheriff Griswold, twiddling your thumbs, and watching these young Detectives at work... especially the new one you just swore in this morning.\"\n\n\"Touch\u00e9.\" I said with a grin. Rudistan handed Tanya the red crowbar, and my current Captain of Detectives cackled with glee.\n\n\"So the bottom line, here,\" I said, \"is that we need to find Laurer a partner, and a good one.\"\n\n\"Yes sir.\" said Tanya... \n\n* * * * * * * * * * * * * *\n\n\"We have a cranky six-year-old on our hands.\" I said to Laura after making some observations.\n\n\"We have a sleepy six-year-old on our hands.\" Laura replied. \"She stayed up late last night, got up before dawn to escort little Pete to his father's graveside, then the awards ceremonies, then a full day at school that included races around the gym at recess. I'm surprised she's made it to this point.\"\n\nOur guests this evening were Cindy, Callie, and Betsy, who had spent her time in a lovefest with Buddy and Bowser. That had irritated Carole, who said \"Bowser is my dog!\" until Daddy intervened and strongly advised sharing the canine love.\n\nCarole had fought to stay awake through dinner, and did not respond well to Jim's taunts about several things, culminating when she overturned her glass of water and Jim teased her hard about it. She turned to me and said \"Can I start making arrests now that I'm a Police Officer?\"\n\n\"On what charge?\" I replied.\n\n\"Disturbing the Peace.\" Carole replied. \"And being an irritating younger brother.\"\n\n\"I don't think that last one is a crime.\" I said. \"And thank goodness it's not, or my big sister Elizabeth would've put me in jail and thrown away the key.\" Jim laughed uproariously at that, then turned to begin flirting with Callie, which he'd been doing all evening. He was his father's son about things like that, for sure.\n\n\"So when are y'all going to set a date?\" I asked Cindy and Callie. \"Before Jim gets to legal age?\" Jim laughed at that, though I don't think he understood the full import of the joke.\n\n\"We've been talking about that.\" said Cindy. \"My father is in Malaysia, and is due back in April or May, when the weather here gets better. And we're staying out of the way of Tanya and Jack's wedding. That's gonna be huge.\"\n\n\"Wedding of the Century, part deux.\" I said.\n\n\"I heard Tanya asked Teresa to sing at the wedding.\" said Callie. \"I hope Teresa will. She has an incredible voice.\"\n\n\"And she showed it, and shocked the world at the Christmas Eve rally.\" I said. Everyone nodded vigorously in agreement. Carole nodded off, then jerked back awake.\n\nAfter supper, Laura would normally have the kids bring plates to the sink for washing, but I intervened to help Carole, who had lost the strength to carry plates. We then went to the greatroom, where Jim was telling Callie about building Lincoln Log structures as he worked with said Lincoln Logs on the floor. Betsy was continuing to administer pettings to two most very tolerant dogs, and Carole was reading a book.\n\nSome moments later, Betsy waddled over to Cindy and pointed back at Carole, who was lying prone on the floor. I checked to see, and found that Carole had fallen sound asleep.\n\n\"I'm awake!\" Carole yelled as I turned her over to pick her up.\n\n\"Not for long, Fussbudget.\" I said as I picked her up and rose to a standing position. \"Time for you to go to bed. It's been a long day for us Police Officers.\"\n\nI carried Carole upstairs, and Laura got her ready for bed. When Laura came downstairs, she said \"She didn't get her pajamas all the way on when she fell asleep on the bed. I think we may have overdone it this time.\"\n\n\"True.\" I said. \"But sometimes it's worth it. She'll remember seeing Saturn and Jupiter forever. And the ceremonies, too.\"\n\n\"She was so cute this morning at the ceremonies.\" Cindy said. \"I don't think I've ever seen her happier than when you put that Badge around her neck, Don. But why did she want to go to Pete Feeley's grave site?\"\n\n\"I didn't understand that, either.\" said Laura. \"And Carole snuck around me by asking Teresa to take her, and Carole was awake and dressed when Teresa arrived. Don, any ideas on that?\"\n\n\"Uh... I got the feeling she was the one that got Pete to go, and was accompanying him.\" I replied. \"Now why...\" \n\nI didn't finish the sentence. I went into a reverie.\n\n* * * * * * * * * * * * * *\n\nAfter taking the dogs out, I went upstairs to let Bowser into Carole's room, whereupon he got into his basket and settled down. Carole was sleeping very soundly and did not stir as I adjusted the covers over her. Yes, she'd overdone it today... we'd overdone it for her, too. But the experiences were worth it, I knew.\n\nAs I looked at my firstborn child, sleeping peacefully, I remembered the moments at Pete's father's graveside. I knew that teaching little Pete to become a good Police Officer was not my only task in life. I had the duty, and the privilege, of teaching my daughter to be a great Police Officer... and the next Iron Crowbar...\n\nPart 4 - No Crimes Committed\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded MILF reporterette at 7:00am, Wednesday, February 5th. \"In the face of devastating evidence of deeply unpopular Governor Val Jared's guilt, his supporters use hysterics, lies, and threats of violence to try to save him!\"\n\nBettina began: \"As State House Managers lay out their overwhelming case for convicting Jared in the State Senate, his supporters are becoming increasingly hysterical and militant in their dishonest defenses of him. Roll tape.\"\n\nTape rolled, showing Republican William C. 'Billy' Williams (R - Town & County), one of the Defense Managers, saying \"Governor Jared has committed no crime! He has done nothing wrong! All he has done is disagree with the Socialist, crime-coddling agenda of the Democrats!\"\n\nThen State Rep. Johnny Perdue was shown, saying \"No, Governor Jared will not resign. We are not capitulating to these false charges, we are fighting them all the way.\" That was apparently what Bettina thought was 'threats of violence'...\n\nBack to Bettina live: \"State Rep. Tasheeka Harris of Midtown, who is leading the State House Managers's prosecution of Governor Jared, has built an ironclad, devastating case that proves Governor Jared is a racist, a misogynist, and has abused the power of the Office of the Governor. Experts say that only Republicans voting along Party lines can save the corrupt Republican Governor.\"\n\nBettina: \"The State House also is preparing a subpoena for Town & County Police Commander Donald Troy, to compel him to testify in the Impeachment trial about Jared allegedly asking Troy to use the Power of Police to harass two women that made credible claims of sexual harassment by Jared, and also about Jared's pardon of Donald Troy. The Managers also want to know who adopted Betty Morelli's baby, so that they can have DNA tests run to determine if Donald Troy is the father of Morelli's baby.\"\n\nBettina: \"State Attorney General Karl Handel, who is running for Governor against Lieutenant Governor and Jared crony Sharon Marshall, said he believes that Donald Troy can be subpoenaed again and compelled to testify, and that the previous Immunity agreement will not cover the new testimony.\"\n\nBettina: \"And in State news that affects our County, Judge Harry R. Nance has agreed to hear an appeal by Gwen Munson, attorney for convicted murderer Peter Blassingame. What is unusual is that Munson has demanded her client be present at the hearing, so that he can testify. Arrangements are being made by Federal Marshals to transport Peter Blassingame to our Town & County for the hearing...\"",
        "* * * * * * * * * * * * * *\n\n\"Good Lord!\" gasped Police Chief Sean Moynahan as we drank coffee in the Chief's Conference Room. \"They just won't stop! Rodman and Braselton pled guilty to trying to frame the Governor, and you were correct to bust them, Commander!\"\n\n\"Worse than that, Chief.\" I replied. \"The Democrats's whole case is based entirely on that lie! The Media keeps chanting the lie, and the Democrats are attacking the Governor, and me as well, claiming the accusers were credible even after they recanted and took plea deals.\"\n\nTeresa said: \"And they keep insisting that Don acted upon the Governor's request or orders, when both he and Norm Chow testified under oath that Don acted on his own and informed the Governor later, and they can't prove otherwise. But they were going to try to charge Don with perjury for telling the truth!\"\n\n\"Which brings up a point.\" said the Chief. \"Can they compel you to testify again, Mr. Crowbarrrr?\"\n\n\"I don't know.\" I said. \"That's why Mike G. Todd is on retainer for me.\"\n\n\"I'll tell you what they just won't stop.\" Cindy said, staring at the television monitor, her voice eerie and seemingly far away. \"They won't stop talking about violating adoption laws to find Betty Morelli's baby and force it to undergo a DNA test. They just won't stop...\"\n\n\"And that is all overwith, tooooo.\" said Chief Moynahan. \"So why are they pushing it?\"\n\n\"For two reasons.\" I replied. \"One, they think it will solidify their case against the Governor for his pardoning me. And two, so that their Media allies can claim a 'win'. They, the Media, can't stand losing; they'll do whatever it takes to win, to be able to say they were right all along.\"\n\n\"So they're not going to stop?\" Cindy queried.\n\n\"The Media won't. Not as long as Amber Harris can speak into a microphone.\" I replied. \"But the Legislature is on a timetable, and can't afford the time to work through the Courts. And Jared is a lame duck; this is his last year, and he won't be Governor when the Legislature convenes next year.\"\n\n\"Where is the Sheriff?\" asked Captain Tanya Perlman.\n\n\"It's 'Fire Department Day' for him.\" said Chief Moynahan. \"And to that point, all the Chiefs have a meet-ing with him this morning. So if you'll excuse me, I'll be on my way.\" \n\nThat was our cue. After respectfully standing up when the Chief did, we followed him out the door and to our respective offices...\n\n* * * * * * * * * * * * * *\n\nThe women of 'Point Taken' filed into their studio to the raucous applause of their carefully chosen all-female audience, and took their seats.\n\n\"And we are liiiiive!\" said hostess Connie Chen. \"And let's welcome our newest member of 'Point Taken', Dana McMahon!\" \n\nDana McMahon was in her mid-40s, and was a very attractive blonde, though not to the level of the glamorously gorgeous Zara Zeigler. Dana had worked in Journalism as well as Communications Departments of several politicians. She was very centrist, which was 'right wing' compared to the other ladies on the panel.\n\n\"We have a lot to talk about today.\" said Connie Chen. \"The Impeachment trial of the Governor is underway.\" The audience booed at the mention of the Governor. Chen went on: \"There are a number of key issues that have come up, and we're going to have some guests help us through it. First of all, we have State civil rights attorney Jenna Stiles.\" The audience applauded politely.\n\nConnie Chen: \"And we also have the Executive Publisher of the Town & County Examiner and hostess of the nationally renowned podcast 'Unresolved' with us. Please welcome Alison McFarland.\" The applause for Alison was good, since a lot of the audience knew of her from her podcasts.\n\n\"Okay, ladies.\" said Rosie Berkmar. \"The headlines today are that Police Commander Donald Troy could be subpoenaed to testify again, and that some Legislators want to obtain adoption records of the late Betty Morelli's baby, which we understand was a girl, and do a DNA test to see if Donald Troy is the father. Jenna, Alison, can and will Commander Troy be subpoenaed?\"\n\nJenna Stiles said \"Let me break it down further. The question is whether or not Commander Troy would be covered by the Immunity Agreement he was given when he testified under oath on this same matter before the Legislature previously. His attorney contends that he would be covered, but State A.G. Handel says he wouldn't be. And it's likely that will have to be sorted out before you'll see Commander Troy testify again.\"\n\nAlison McFarland said \"More as a practical matter, I don't understand why they want to subpoena him again at all. Immunity Agreement or not, I don't think he'll change the testimony he gave earlier, which was that he acted on his own, and not at the Governor's request. His testimony is out there, and he'll just say 'I refer you to the testimony I gave earlier.\"\n\n\"That's true,\" said Connie Chen, \"but they could ask him different questions. And we all want to know more about his alleged sexual liaison with Betty Morelli, and if she had his child. What are the legalities of that, Jenna?\"\n\nJenna: \"The issue that is being debated is whether or not the pardon Governor Jared gave Commander Troy...\" The audience booed, then Jenna continued: \"The question is if that pardon gives Commander Troy an immunity such that he can be compelled to testify about it, or if he still has the right to take the Fifth---\"\n\n\"Yet again.\" interrupted Rosie Berkmar. The audience chuckled.\n\n\"The Fifth Amendment is a cornerstone of the Constitution and our law,\" said Alison McFarland, \"and should be respected by everyone. Imagine if it were any of you that Federal Agents were trying to beat a confession out of.\" The audience got very quiet at that.\n\nJenna continued: \"That's right, but the legal questions about it are pretty fascinating to a civil rights lawyer like myself. As to the adoption papers, State Law is pretty clear about the privacy of them. Sometimes Law Enforcement can get a warrant or subpoena for the records, but there has to be strong probable cause and a stringent process to get those records. Because Commander Troy was pardoned, he can't be charged with a crime regarding the case, and it is really not clear if the Legislature can otherwise muster that high standard to get the records.\"\n\nRosie Berkmar said \"But it would prove Don Troy is the father of Betty Morelli's baby, and therefore they did have sex during that time. And that would show that the Governor pardoned Troy as a quid pro quo for Troy's retaliation against those two women for their credible claims of sexual harassment by the Governor.\"\n\nZara Zeigler finally spoke: \"For the sake of accuracy, those women recanted and also took plea deals after it was shown the Governor's autograph they submitted was a forgery. I'm not saying there was no quid pro quo, there... indeed, it looks as if there was... but the Media needs to start getting the story right.\"\n\nAlison McFarland said \"That's right. It's not helping the State House Managers's case to try the Governor for what is a provable lie, and the People of the State know that. If they want to prove Abuse of Power, they need to show that abuse with a case based on true facts. I will add that the charge of 'Obstructing the State Legislature' doesn't exist at all, and I never understood why they even made that charge.\"\n\n\"Because Jared tried to stop his aides from testifying before the Legislature, even when they said they wanted to!\" said Rosie Berkmar, getting a little bit 'exercised'. \"And when he improperly spent that money ahead of time, he suppressed the investigation of it!\"\n\n\"But he had the right to.\" said Jenna Stiles. \"The Legislature makes the laws, they don't enforce them. They should've created another Independent State Counsel to investigate it, if there were indeed crimes. My point here is that they didn't handle it correctly, so they can't come back and say he obstructed them.\"\n\n\"I'm not sure I agree with that.\" said Zara Zeigler. \"But you're right, it may be one for the Courts. But all that notwithstanding, if Governor Jared is found guilty, he'll be removed from Office.\" The audience burst out in strong applause at those words.\n\n\"True enough,\" said Alison McFarland, \"but let's get real here. This is not so much a legal process as a political process. The current optics aren't good for the Democrats, and if they don't shore up their cases, the People of this State are not going to say justice was served. They'll say the Governor was railroaded.\"\n\n\"I don't care if he's railroaded!\" said Rosie Berkmar. \"I just want him out!\" The audience applauded strongly.\n\n\"Before we go to break,\" said Connie Chen, \"I want to ask both you ladies this: will Jared be convicted?\"\n\nJenna Stiles: \"It's going to be close. A number of Republicans are already coming out saying they'll vote to convict, and of course all the Democrats will.\"\n\nAlison McFarland: \"This will not be popular with your audience today, but I don't think he'll be convicted. Especially based on the weak cases we've seen so far.\" The audience didn't boo TOO much...\n\n* * * * * * * * * * * * * *\n\n\"And welcome to Conservative Excellence in Radio. I am your host, Reed Hudson, and we have a packed program today. And there is just so much material here, I'm going to do something I rarely do, and have a guest on the program. We have with us today Lisa Fillmore, reporter for the Town & County Examiner. Hello, Lisa, and welcome.\"\n\n\"Hello, Reed.\" said Lisa Fillmore. \"I'm glad to be here.\"\n\n\"So let's get right into this sham Impeachment trial.\" said Hudson. \"As you know, we don't play the racist hate speech of State Rep. Tasheeka Harris on this program, but here's what the other Legislators are saying.\" He played a montage of Legislators from both sides of the aisle.\n\n\"So Lisa, what's your take on this?\" asked Reed Hudson. \n\nLisa Fillmore: \"The first thing that always comes to my mind is 'Just what crime has the Governor committed?'. Governor Jared has done nothing illegal, and nothing unethical. All he's done is keep the campaign promises he made. All he's done is enforce the laws of our State and Nation. And for that, they've relentlessly gone after him.\"\n\n\"That's very true.\" said Reed Hudson. \"Break down their allegations of Abuse of Power for us, Lisa.\"\n\nLisa replied: \"First, dishonest reporters like Bettina Wurtzburg, Tim Sioban, and Donna Roselle on 'Point Taken' constantly repeat the lie that the claims of the two women that accused Governor Jared of sexual harassment were, quote 'credible' unquote. Their allegations were not credible. They not only recanted their allegations, they were criminally charged for making them, and had to accept plea deals to avoid prison time.\"\n\nReed Hudson: \"That's exactly right. As Hitler's Propaganda Minister Joseph Goebbels said, 'If you tell a lie big enough and keep repeating it, people will eventually come to believe it.'. And that's what KXTC and KSB have been doing since Governor Jared was re-elected: they've told that lie about him again and again and again, desperately hoping to make people believe it.\"\n\nLisa Fillmore: \"And someone forged a document to try to bolster the women's claims, and the document was found to be a falsehood. And history repeated itself when the FBI forged a document in an attempt to frame Commander Donald Troy, and used that false document to get an illegal warrant to invade his home and destroy it, and to almost murder his daughter.\"\n\nLisa continued: \"And that's important, because the Media and the State Democrats have continued the lie by saying that Commander Donald Troy investigated those women on the Governor's orders, or at his request. Commander Troy testified under oath that he acted independently, and his enemies have never, ever, shown one shred of proof to the contrary. Yet they continue to tell the lie.\"\n\nReed Hudson: \"That is the dishonest, corrupt Media for you. I can understand the politicians doing it. Both Parties lie about the other side to gain an advantage for themselves. But the corruption of the Media, which should be impartial and especially should be honest, is a danger to the very fabric of the Nation. But you brought up Commander Troy, so let's smoothly segue into that situation. Can he be compelled to testify again, and if he does, would the previous Immunity Agreement be in force?\"\n\nLisa Fillmore: \"I'm not a lawyer and I don't play one on TV, so I have no idea. And from what I'm gathering, neither does anyone else. I do know from sources close to this issue that Commander Troy will not testify without that Immunity Agreement still in place, so if they do subpoena him, it'll go to Court. And that could take months to get to the State Supreme Court. So they're going to have to decide if they want to even bother with it if they want to convict Jared.\"\n\nReed Hudson: \"And what about the other issue? Let me spell out the background first. The State House Democrats are alleging that Governor Jared pardoned Donald Troy for allegedly having sex with a woman in his custody, Betty Morelli, and that it was a quid pro quo for Commander Troy bringing the Crowbar down on those two women that made their false allegations against the Governor. Now I don't know if Commander Troy had sex with Betty Morelli or not, I truly don't know. But the Democrats still want to prove the charge by accessing sealed adoption papers to find Betty Morelli's baby, and getting a DNA test. What about this, Lisa?\"\n\nLisa: \"First of all, I don't think it's relevant to the Impeachment charges. It's not abuse of power for the Governor to exercise his legitimate power to pardon, no matter what his reasons are. It's right there in the State Constitution, and that is that. And perish forbid a Democrat Governor ever pardon a crony of his or hers!\"\n\nReed: \"True. And there are two legal questions about it. State adoption records are sealed by State Law, and it's high standard of 'probable cause' for Law Enforcement to get that data, much less State Legislators. Can they get around that? And also, the pardon that Donald Troy accepted gives him immunity from prosecution for any crime he committed vis-a-vis Betty Morelli. The Democrats want to compel Troy to testify about that, and say he would be obligated to admit if he had sex with Morelli. Others say he still has the Right against self-incrimination. What do you say?\"\n\nLisa: \"He's never admitted nor discussed that in the past, and he did plead the Fifth on it when the Feds were questioning him. My belief is that he retains his Fifth Amendment rights, because of the potential Federal charges, for which he has not been pardoned. And I'll add that if the Legislators push it, this one won't stop at the State Supreme Court, because of those Federal implications...\"\n\nPart 5 - Crimes Committed\n\n4:30pm, Wednesday, February 5th. Marie Steele and Carole Troy had been doing their homework in the corner of the classroom in the Physics & Astronomy Building on the University Campus. Professor Stephanie Steele was at the main table in the room with her six graduate students, having a group discussion about string theory and the possibility of multiverses.\n\nMarie had not looked up from her second grade math problems. Carole, having finished her second grade math problems as well as her reading assignment, was listening to Dr. Steele and the students, and observing all of them. She did not understand too much about what 'Einstein's theory of relativity' was, nor that Albert Einstein's fields of study were Physics and Philosophy (the same as John Galt, Francisco D'Anconia, and Ragnar Danneskj\u00f6ld, but I digress), but their talk sounded fascinating to her.\n\n\"Okay, we're over time, it's four thirty. We'll pick this up Friday.\" Stephanie Steele said a moment later. All the students collected their assortment of books and notebooks and trickled out of the room, some still discussing theories of the origins of the universe where things moved faster than the speed of light.\n\n\"Are you girls ready to go?\" Stephanie asked.\n\n\"Yes ma'am.\" Carole said politely as she and Marie put their homework into their book bags. \"Dr. Steele, what is the Speed of Light?\"\n\n\"That's something I don't get asked about by six-year-olds very often.\" Stephanie said. \"You know how you can see things with your eyes? Light is a form of energy that your eyes can detect. Heat, like from a fire or hot water, is also energy, that nerves in your body can detect. And that energy moves very very fast, and that's called the Speed of Light.\"\n\n\"Oh.\" said Carole. \"So will the Light Police or The Flash give you a ticket if you exceed the Speed of Light?\"\n\nStephanie Steele laughed heartily at that. \"Some say the Speed of Light can't be broken. My research is based on the possibility that it can be. But please don't make any arrests while we're studying it.\"\n\n\"Okay.\" Carole said agreeably. \"I'll stick to de-tec-ting crimes, like Daddy does.\"\n\n\"Sounds good.\" said Stephanie. \"Okay, lets go to my office and get my purse, and I'll take you home.\"\n\nThey walked down the hall to Dr. Steele's office. When they got there, the door was cracked open.\n\n\"Wait.\" said Carole, getting a vibe. \"Who opened the door? I saw you shut the door when we went to your classroom.\"\n\n\"You're right, Carole.\" said Stephanie. \"Let me go in ahead of you, and see if anyone is in there.\" She pushed the door halfway open, and peered inside.\n\n\"AAAUUUGGH!\" she screamed.\n\n* * * * * * * * * * * * * *\n\n4:33pm. I was sitting at my desk, wrapping up paperwork for the day when my Police iPhone rang. \"Troy.\" I said as I answered it.\n\n\"Daddy!\" came the voice of my eldest child through the phone. \"This is Carole. There's a dead body in Dr. Steele's office! Come quick!\"\n\n\"I'll be right there.\" I said. Hanging up, I went to MCD. Detectives Julia Rodriguez and Teddy Parker were at their desks.\n\n\"You two, you're with me.\" I said. \"I just got a call that a dead body was found at the Physics Building on Campus...\"\n\n* * * * * * * * * * * * * *\n\n4:38pm. When we arrived at Dr. Stephanie Steele's office, we found TCPD and State Crime Lab personnel already there, processing the crime scene. Several Campus Police Officers were present, as were TCPD Officers Johnson and Burrell... and Auxiliary Officer Carole Troy, sitting in a chair in front of Dr. Steele's desk. Also present were SBI Agents Terence Johnson and James Tarleton, who had offices in the nearby State Crime Lab building.\n\n\"Hello, Commander.\" Johnson said, coming up quickly to shake my hand. \"Glad you got here so quickly. We just arrived.\"\n\nI shook hands with him and Tarleton as I asked \"So what's going on?\" I was looking at the body of a middle-aged man on the floor. He was wearing a relatively cheap blue sportscoat with brown threads running through it, dark brown pants, and brown socks and shoes. He was lying prone and face-down, a pool of blood coming out from underneath him.\n\n\"Dr. Robert Stoddard, Head of the Departments of Physics and Astronomy.\" said Johnson. \"Shot twice in the chest with a .38 snub-nosed revolver.\"\n\n\"Daddy!\" Carole called out.\n\n\"We have a suspect in custody---\" said Johnson, but he was interrupted again.\n\n\"Daddy! I have to tell you something.\" Carole persisted, looking anxious. I was getting a strong vibe from her.\n\n\"Hold on one second.\" I said to Johnson. I went over to Carole and said \"It better be good.\"\n\n\"Daddy, it's all wrong!\" Carole said. \"They're making a mistake!\"\n\n\"What mistake is that?\" I asked as I pulled the other chair up to sit down next to my daughter.\n\n\"The purse on the desk they found the gun in was blue.\" Carole said. \"But Dr. Steele had a black purse today.\"\n\n\"Sir, if I may,\" said Agent Johnson. I looked up, and he said \"We found a blue purse, medium blue, on the desk. Dr. Stephanie Steele's wallet with her drivers license was in it, as well as her makeup items. And a snub-nose .38 revolver.\"",
        "\"Which you are assuming is the murder weapon?\" I asked. Agent Johnson shrugged.\n\n\"Sir,\" said one of the State Crime Lab techs, \"there were three unfired cartridges in the revolver, and two fired cartridges, very recently fired. It was literally a smoking gun, sir.\"\n\n\"Okay.\" I said. \"So, Carole, tell me what's wrong with that.\" Carole started talking, and after I heard her story, I admonished her to stop. \"Let me do this. Rodriguez! Get your Police iPhone out. Let's record this.\" \n\nJulia Rodriguez came over with her Police iPhone. \"You are 'go', sir.\" she said, to indicate she was recording.\n\n\"This is Commander Donald Troy,\" I said, noting the date, time, and location. \"I am here with Carole Troy, who is a witness to the crime scene very shortly after the crime, and also was in the room before the crime. Carole, you saw the purse on the desk earlier in the day?\"\n\n\"Yes sir.\" said Carole. \"And it was a black purse. Dr. Steele is wearing a white dress with a black belt and black shoes, and the purse matched them. Mommy says that matching belts and shoes are a fashion must, and that matching purses are best, too.\"\n\n\"Carole's mother is Dr. Laura Fredricson.\" I said to the camera. \"So, Carole, the purse was black? Where did Dr. Steele leave the purse?\"\n\n\"She put it in the top right drawer of her desk, like she always does.\" said Carole.\n\n\"So what happened next?\" I asked.\n\n\"Doc-tor Steele was going to take Marie and me home,\" said Carole, \"so we came to her office for her to get her purse. She had closed and locked the door when we went to her class---\"\n\n\"Okay, let me a question.\" I said. \"Dr. Steele picked you and Marie up from school?\"\n\n\"Yes sir.\" said Carole.\n\n\"And you came here to her office?\"\n\n\"Yes sir.\" said Carole.\n\n\"And then she took you to her classroom, so you were with her during her class?\"\n\n\"Yes sir.\" Carole said. \"She always does that. She says she has to keep an eye on us, even though we behave.\"\n\n\"I'm sure you behaved, and she's just making sure you're safe by having you stay with her.\" I said. \"So Dr. Steele closed and locked the door when you went to her class?\"\n\n\"The door locks automatically.\" said Carole. \"She has to use her card to get back into her office.\"\n\n\"Was the door locked when you came back to the office after the class was over?\" I asked.\n\n\"No sir.\" Carole said. \"The door was cracked open. I told Dr. Steele it was open, and she told us to stay back while she looked inside.\"\n\n\"And then what happened?\" I asked.\n\n\"She looked inside, and then she screamed.\" said Carole. \"I ran under her before she could stop me, and I saw the body on the floor. I said to not touch anything, and I got my iPhone out and called you.\"\n\n\"And that was exactly the right thing to do.\" I said. \"So you didn't touch anything?\"\n\n\"Just my phone, to call you.\" Carole said. \"And nobody else touched anything until the Po-leece got here.\" Thorough, my six-year-old witness was.\n\n\"How fast did the Police get here?\" I asked.\n\n\"Pretty fast.\" said Carole. \"I was putting my iPhone back in my bag when a bunch of them came in.\"\n\n\"Did you see anything else?\" I asked. \"Anything not ordinary?\"\n\n\"There was a blue purse on the desk. Medium blue, not dark blue.\" Carole said. \"I knew it wasn't Dr. Steele's, so I thought it must be someone else's. But these Po-leece Off-i-srrrr said it was hers, because her pocketbook and her drivers license was in it. And a gun was in it, too.\"\n\nI looked up. \"Was there a black purse anywhere? In the drawer? In a trash can, maybe?\"\n\n\"No sir.\" said Tarleton. \"Nothing in the drawer. And the trash cans on this floor were examined immediately for a murder weapon or other evidence. That started before we found the gun in the purse.\"\n\n\"Okay, then.\" I said. \"This is Commander Troy, ending my interview of eyewitness Carole Troy.\" After Julia nodded that she'd stopped recording, I said: \"Detective Rodriguez, put that interview into the evidence servers. I'll write up the transcript and have Carole sign it.\"\n\n\"I'll write it up, sir.\" said Julia. \"And have both of you sign it.\" I nodded in agreement.\n\n\"Where is Marie, by the way?\" I asked Carole.\n\n\"With her mom.\" said Carole. \"These Po-leece Officers took them to the other room.\"\u2028\n\n\"We were going to take this girl, too.\" said SBI Agent Johnson, \"but she refused to go. She also said she's a Police Officer, and then one of these CSIs said we'd better let her stay.\"\n\n\"Probably a good idea.\" I said. \"And she is an Auxiliary Police Officer... and she's my daughter, too. Okay, Carole, let's go find Marie.\"\n\nWe went down the hall. In the classroom next door, Stephanie Steele was in a seat at the table where she'd just taught her class. She was wearing a white dress with black belt and black medium-heel shoes. She looked both worried and frustrated, and it was easy to see why: Campus Police Officers were questioning her.\n\n\"Don!\" she said when I poked my head inside. \"I need your help!\"\n\n\"Granted.\" I said. \"First things first. Where's Marie?\"\n\n\"They wouldn't let her come in.\" said Stephanie, looking more worried. \"I don't know where they took her.\"\n\nThe room got quiet as everyone observed the look of anger on my face and my face reddening. \"Okay, where is Dr. Steele's daughter?\"\n\n\"She's safe, sir.\" said one of the Campus Police Officers. It was a poor try.\n\n\"ONE MORE TIME!\" I thundered. \"WHERE IS THE CHILD?\" Shocked Officers stared silently at me.\n\n\"Next door, sir.\" said Tarleton, coming up the hallway. I stalked off down the hallway, Carole rushing to keep up.\n\nIn the next classroom, a room nearly identical to the one we'd just left, Marie was sitting at the table, looking sad and scared. A male Campus Police Officer was sitting in a chair by the wall.\n\n\"Mis-ter Crowbar!\" Marie exclaimed when she saw me. She got up and ran to me, and hugged my leg.\n\n\"Are you okay, Marie?\" I asked. \"Did anyone hurt you, or touch you the wrong way?\"\n\n\"No sir.\" said Marie. \"They were pretty nice. But this Officer said I had to stay in my seat, and wouldn't let me go see Mommy.\"\n\n\"She's okay, Daddy.\" said Carole, putting her arm around Marie. \"She's just worried about her mom.\"\n\n\"Okay.\" I said. \"Come with me, girls.\" Turning to Tarleton, I said \"I believe Marie when she tells me she's okay. But I want to know why an underage female child was left alone with an adult male in a room for even one minute. I can assure you all that the Campus Police Commissioner will be hearing from me about this.\"\n\n\"Sir, I did nothing wrong.\" said the Campus Police Cadet Officer that had been watching Marie.\n\n\"I'm sure you didn't.\" I said. \"And my report will reflect that. But let this be a 'teachable moment' for all of you: never, ever, put yourself in a situation where there is just one adult with one child, unless that child is your own. And especially you adult men with regard to underage girls. There are too many people in this world who would just love to accuse you of committing a sex crime, just because you're wearing a Police uniform. So always be cognizant of the tactical situation. Got it?\" There were murmurs of agreement.\n\nI took the girls back to the first classroom. Marie ran into the room when I opened the door. \"Mommy, Mommy!\" she cried out as she ran up to Stephanie, who hugged her.\n\n\"Are you okay, Marie?\" Stephanie asked, her eyes 'wandering' up to me. I just nodded that everything was okay.\n\n\"Who let her in here?\" the lead Detective with the Campus Police asked. She was a woman in her 20s with blondish hair, who reminded me a lot of ATF Agent Lindsey Black.\n\n\"I did.\" I said. \"And you are?\"\n\n\"Campus Detective Tracy Stone.\" said Campus Detective Tracy Stone, who was sitting opposite Stephanie Steele. \"And the TCPD does not have jurisdiction on Campus. So who are you?\"\n\n\"You must be new to these parts.\" I said, sitting down next to her. \"I'm TCPD Commander Don Troy. If you have jurisdictional problems, I can be SBI Reserve Inspector Don Troy, if you like.\"\n\n\"Yes, he is.\" said SBI Agent Johnson. \"And we welcome the TCPD's help with this case.\"\n\n\"This is not their jurisdiction.\" retorted Detective Tracy Stone.\n\n\"Detective Rodriguez,\" I said to Julia, \"would you select one of these female Campus Police Officers, and the two of you take Carole and Marie to the other classroom, and get their full statements, please?\"\n\n\"Yes sir.\" said Julia Rodriguez, realizing that she was getting time to write that transcript from the video testimony Carole gave. She took one of the Cadet Police Officers with her.\n\nI told Carole and Marie to go with them. \"Here, hold this.\" I said, handing Carole my red crowbar. Detective Stone's eyes widened in the shock of recognition as I told Carole: \"If anyone messes with you, whack 'em and come running to me yelling as loud as you can.\"\n\n\"Yes sir.\" said Carole, taking the crowbar. \"Can I hit 'em between the legs?\" A mixture of shock and laughter (by gender, wouldn't you know) erupted in the room.\n\n\"Uh, try whacking 'em on the knees first.\" I said. Carole stalked off, followed by Marie and the female Detectives.\n\n\"O-kayyy, Detective Stone.\" I said. \"What's going on?\"\n\n\"Maybe one of these SBI Agents can brief you outside, while I'm interrogating the suspect?\" Stone said.\n\n\"Suspect?\" I said. \"Why is she a suspect?\"\n\n\"Sir...\" started Stone.\n\n\"Detective Stone,\" said SBI Agent Tarleton, \"when the Iron Crowbar asks you a question, answer it without giving him any lip.\"\n\n\"Then you brief him.\" said Stone. \"I'm trying to interrogate a suspect, here.\"\n\n\"Was Dr. Steele mirandized?\" I asked.\n\n\"No.\" said Stone. \"We haven't arrested her yet.\"\n\n\"But you called her a 'suspect', not a 'person of interest'.\" I said. \"So in this 'teachable moment', I'll give you the career-saving advice to mirandize her now. And Dr. Steele, you don't need to be mirandized to insist upon legal representation when being questioned by law enforcement authorities.\"\n\n\"I want a lawyer.\" Stephanie immediately said. Campus Detective Stone looked exasperated.\n\n\"Fine.\" she said. \"Place her under arrest, read her her rights, and take her to the Campus Police Station.\" She turned to me and said \"Satisfied?\"\n\n\"Go with them.\" I said to Stephanie. \"I'll take care of Marie, and I'll check on you in a few minutes, to make sure they're treating you... well.\"\n\nTracy Stone glared at me, then read Stephanie her rights. I insisted the two Campus Police Cadet Officers, one female and one male, to cuff her with her hands in front of her, not behind her. They did so, and escorted her out of the room.\n\n\"What the hell was that?\" Stone all but yelled at me.\n\n\"Detective!\" yelled SBI Agent Tarleton. \"That is a Police Commander. He is the second-in-command of the Town & County Police Force, and he's the SBI Reserve Inspector. He outranks you every way you can think of, and you better show him some respect!\"\n\n\"And if you shut your mouth and listen to him,\" said Agent Terence Johnson, \"you just might learn a thing or two. Trust me, I learned that from experience.\"\n\nThey'd saved her. I was staring her down, and she relented. \"My apologies, Commander. But why did you all but tell her to lawyer up?\"\n\n\"To protect her Constitutional rights... and also yours.\" I replied. \"The Miranda warning is as much for our protection as the suspect's, to ensure we don't damage a case by not affording the suspects their considerable rights. So... you were telling me why she's a suspect?\"\n\n\"A .38 caliber snub-nose revolver with two rounds recently fired was found in her purse, on her desk, in her office, with two rounds fired.\" said Detective Stone. \"And a dead man, Dr. Stoddard, was lying on the floor in the same room.\"\n\n\"Were you recording your interview with Dr. Steele?\" I asked.\n\n\"No.\" said Detective Stone. \"But I had several witnesses in the room. Now they're all gone, since you just dispersed them all.\"\n\n\"Okay.\" I said. \"Is that your Campus Police tablet?\"\n\n\"Yes.\" said Stone.\n\n\"May I use it to bring up some video for you?\" I asked. Stone handed me the tablet, and I brought up the video of my interview with Carole, which Julia had uploaded to the evidence servers already. I had Detective Stone watch it.\n\n\"As you can see,\" I said when the video ended, \"we have contradictions between Carole's testimony and the evidence, particularly with regard to the color of Dr. Steele's purse.\"\n\n\"Dr. Steele's ID was in the purse we found!\" said Detective Stone. \"It was in her locked office!\"\n\n\"Let me play Devil's Advocate with you for a moment.\" I said patiently. \"Why would Dr. Steele put her wallet with her ID into the blue purse and leave it on the desk with the alleged murder weapon also in the purse? And to that point, just when was Dr. Steele alone and able to accomplish the murder? She was with two little girls, then her class of students and those girls, then those girls again when the body was found.\"\n\n\"How do you know Dr. Steele didn't bring that purse with her in the first place?\" said Stone.\n\n\"Because that witness told me, and told you through that video, that she saw Dr. Steele put her black purse in a desk drawer.\" I replied.\n\n\"Your witness is what, six, seven years old?\" replied Stone. \"And you're going to take a little kid's word for that?\" I saw Tarleton and Stone look wide-eyed at that.\n\n\"I take her word for it,\" I said, \"because when she was four years old, she made an observation at a crime scene that helped solve the case. The Apple Grove Police Department gave her a citation for it.\" (Author's note: 'Return To Apple Grove'.)\n\n\"And that girl is the girl that made the observations that directly led to the largest drug bust in this State's history, to the tune of four hundred million dollars.\" I continued. (Author's note: 'Schoolhouse Rock'.) \"That girl took down Marcie Harper and her operation. She was given a Citation by the State Legislature as well as the TCPD for that. So yes, I tend to trust what she tells me.\"\n\nJust then, Carole appeared in the room. \"Here Daddy.\" she said, handing me my red crowbar. \"You're about to need this.\"\n\n\"Okay, but why?\" I asked.\n\nI quickly found out. Dr. Lionel Carmela burst into the room.\n\n\"WHY IS THE TCPD HERE?\" Carmela yelled, his face beet-red with furious anger. \"AND ESPECIALLY YOU, YOU FUCKING BASTARD!\" he yelled, jabbing his finger at me. \"WHAT THE FUCK ARE YOU DOING HERE, YOU GOD-DAMNED SON OF A BITCH?!\"\n\nCarole had moved behind me as I slowly rose to my feet to meet the threat of Carmela's violently angry entry to the room.\n\n\"I'm investigating a murder.\" I said quietly. \"What are you doing here?\"\n\n\"You are out of jurisdiction!\" Carmela yelled. \"You have no place here! I demand you leave, NOW!\"\n\n\"He has jurisdiction.\" said SBI Agent Terence Johnson. \"And the SBI welcomes the assistance of the TCPD in this murder investigation.\"\n\n\"THE HELL HE DOES!\" yelled Carmela. \"I demand you leave, Troy! IMMEDIATELY!\"\n\n\"And how are you going to make me do that, Carmela?\" I asked, tapping my crowbar in the palm of my hand.\n\n\"You need to leave, sir.\" said Tarleton to Carmela, but Carmela pushed him back.\n\n\"And what is that fucking child doing here?\" snarled Carmela. \"Get out, you little piece of shit!\" He made a move towards Carole, as if to physically grab her...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "crime drama",
        "drama",
        "iron crowbar",
        "mystery",
        "police drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/jupiter-rising-ch-01"
}