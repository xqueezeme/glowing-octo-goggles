{
    "title": "The Farmer and the Actress",
    "pages": [
        "Chester McAdams was casually driving down the highway towards home with a content attitude. He wasn't in a hurry because he had finished his work for the day. His work was basically just helping people who he liked or who had a need. Recently, life had been good to Chester or Chet as he was known. No one really knew what he did or how he earned his money but he never seemed to have any financial problems. Most people assumed that he inherited his money or won the lottery or something; but in this part of Texas, how you got your money was not a topic for public discussion. People did what they did and as long as they didn't bother people, they were slowly accepted into the community. And although he had only been in the community for ten years, Chet was accepted.\n\nToday, Chet had helped a friend put in thirty fence posts. His price for helping was that his friend's wife made him lunch because she made one of the best homemade chicken pot pies in the area. His friend and his wife were more than grateful for his help. Their fence was old and their cattle were always getting through. Things were tight and they couldn't afford to lose any cattle and the cost of paying someone to replace the fence was beyond their budget. Now that the posts were up, his friend could put up the new fence without help. He felt that he now owed Chet one more favor that Chet never seemed to need. \n\nOccasionally, Chet did call in favors but never for his personal benefit. He would ask a number of people to show up on a Saturday morning with their tool boxes and help put a new roof an old woman's house or clear out a garden plot for a new couple who just moved into the area. These were the paybacks that he asked for. People seldom refused and then only because they had a good reason.\n\nSo on this Friday afternoon, Chet was driving home and his only deadline was to get home in time to feed his dog. Life was simple for Chet McAdams. Or at least it had been simple until he saw the big SUV parked on the side of the road, its hood up, and steam pouring out from the engine compartment. He stopped behind the steaming car and got out. Standing in front of the car was a frantic woman trying to get someone on her cell phone. Unfortunately, they were in an area where cell phone service was marginal on a good day and non-existent on a bad one.\n\n\"I see you have a little problem here.\" Chet said as the woman spun around at the sound of his voice.\n\n\"Oh, thank God. You are a lifesaver. This is a rental and it just started overheating and then stopped. Can you help me?\" She sounded on the verge of panic.\n\n\"OK, the first thing to do is take a deep breath and let it out slowly. Getting in a panic isn't going to solve anything. Breathe deeply and let it out slowly.\" She finally did as he said and took a moment to breathe deeply.\n\n\"Good now come back to my truck. That handheld phone won't work worth a crap out here. Use the one in the truck; it has better reception and range out here.\"\n\nHe led her back to his truck and opened the door for her. He showed her how to make and complete a call. Then he left her to go check on her car. It only took him a minute to diagnose that the car wasn't going anywhere soon. A blown out radiator line and possibly a water pump weren't hard to diagnose. He went back to the truck and waited until she finished her call.\n\n\"Well what do you think?\" she asked tentatively as she got out of the truck.\n\n\"I think you better get your stuff out of the car and let me take you to town. That car isn't going anywhere except on the back of a wrecker.\"\n\nShe frowned, \"How far is to .... ahhh to Lakeside?\"\n\n\"Oh about five miles; but you might be better off in Ballard.\"\n\n\"Why is that?\n\n\"In Lakeside there is one caf\u00e9 and one place to stay but I doubt that you want to stay there.\"\n\n\"It has only one place to stay? What's wrong with it?\"\n\n\"Besides the fact that it is primarily a place for fishermen to stay, there isn't anything wrong with it. They come in on Thursday night and fish all day Friday and Saturday. Sometimes they take a shower before they leave on Sunday.\"\n\n\"Sounds like a charming place.\"\n\n\"Oh, the diner there has the best fried catfish you have ever eaten.\"\n\n\"The next time I have fried catfish will be the first time.\" She said with a groan.\n\n\"Let's get your things and we'll go into Lakeside and get someone to come and tow your car. Then we can figure out what else to do.\"\n\nShe agreed and they got her suitcase, purse, and briefcase from the SUV and left it locked. He drove the five miles to Lakeside while she nervously contemplated her present state. Chet pulled in to a service station where a big burly man in a sleeveless shirt came out and greeted Chet as he stepped down from the truck.\n\n\"Hey Chet; how are things down on the farm?\"\n\n\"About the same as they are always on the farm, Jethro; you just wait for the crops to ripen and try to keep the weeds at bay.\"\n\n\"That's why I gave up farming. I don't have the patience. What's up?\"\n\n\"I found this young lady on the highway with steam boiling out of her engine. It looks like a radiator hose and then maybe a water pump. She says it is a rental. Can your guys go get it and call the rental company?\"\n\n\"It will be an hour or so but we can get it. Did you leave the keys in the car?\"\n\nShe replied, \"No, I have them here. And here is the rental contract.\"\n\n\"Thanks, Ms. Arrington. We've worked with this rental company before; so there shouldn't be a problem.\"\n\n\"While I have you two together, do either of you know someone named Oliver Franklin? I understand that he lives around here.\"\n\n\"You mean the writer guy?\" Jethro asked.\n\n\"Yes, that's him.\" She replied.\n\n\"I get that question a lot but to be honest if he lives around here, he doesn't go by that name. I've never known anyone who knows he is here. What about you, Chet?\"\n\n\"No, doesn't ring a bell but there are a lot of people who live here that aren't involved locally. He might be one of them.\" Chet replied with a slightly wary look in his eye. Jethro nodded.\n\n\"Damn, I thought he might be easy to find.\"\n\n\"Why are you looking for him?\" Chet asked.\n\n\"Oh, I'm trying to do a business deal with him.\"\n\nJethro stated, \"Say aren't you.....\"\n\n\"No, everyone says that I look like her but I'm not. I'm Rachel Arrington from California but I am definitely not her.\"\n\n\"Ooops, sorry ma'am. I didn't mean to get pushy. Where are you going to be staying so I can call you?\"\n\n\"I'm not sure. Chet says that the motel here isn't the best; so I don't know for sure.\"\n\n\"Chet is probably right about that. My dog likes to hang around the motel because of all of the unique smells but you don't look like someone who that would appeal to.\"\n\n\"Thank you for that. Is there any place else close that might have a motel?\"\n\n\"Well yes but the bad news is that it is totally booked through the weekend. There is a festival going on this weekend until Sunday. The closest that I can think of is about 50 miles.\"\n\n\"Crap! That is just great.\"\n\nChet spoke up quietly, \"Well I can offer you my spare bedroom. It's clean and hasn't been slept in by anyone for a long time. And it has a lock on the door. I'll give you a gun if that would make you feel safer.\"\n\nShe looked at him like he was suggesting that she eat fried catfish.\n\nJethro interrupted her before she could say anything, \"Actually, that might be your best deal ma'am. And I personally can vouch for Chet. I think that the last person who stayed in that bedroom was my wife when I was out of town a couple of years ago. She said that he was a perfect gentleman and was a decent cook too.\"\n\n\"Thank you, Jethro. I guess I'm not used to someone who doesn't know me and who I don't know offering me a place to stay. In California, that would get a girl in deep trouble.\"\n\n\"Well around here, you have to take what is offered to you because there aren't that many options.\"\n\nShe turned and looked at Chet and after spending several minutes pondering the idea, finally said, \"Ok Mr. Chet, you've got a boarder for a couple of days.\"\n\n\"Call me when you get the car thing straightened out, Jethro.\"\n\n\"Will do, Chet. Take care, Ms. Arrington.\"\n\nThey got back in Chet's truck and drove through the center of the small town before turning down a dirt road. After four miles, he turned into a gate and got out to open it. She looked at the property behind the gate and saw some open land with wild flowers everywhere and then a line of mostly oak trees with a few cedars mixed in. It appeared to be very well maintained and mowed. After driving through, Chet got out again and closed the gate again.\n\n\"I thought that a lot of people just left their gates open out in the country.\"\n\n\"Most people do when they are home. I keep it closed for two reasons; one to keep my dog in and the other is to keep other animals out, mainly feral pigs. They tear things up and can be mean. My dog is just too friendly and would be happy to visit all of the neighbors. I'd prefer that she stays close and I don't particularly want a litter of mixed breed puppies to tend to.\"\n\n\"Feral pigs? What are they and why are they a problem? I've never heard of them before.\"\n\n\"It has gotten a lot of press in the agriculture news but not a lot in the mainstream press. They are a mixed breed of domestic and wild pigs. They are smart and can get very big. They can also tear up a garden or a field over night and then disappear. There are guys who make a living hunting them because they are so destructive and prolific.\n\nShe looked unsure about what that really meant as they drove up the road where they were met by a beautiful Golden Retriever standing in the middle of the road. She proudly turned and slowly walked toward the house at a very slow speed.\n\nChet said, \"I don't know where she learned to do that; even if I am in a hurry, she isn't. She meets me right there and leads me to the house at the speed of a slow tractor.\"\n\nRachel was smiling as she watched the dog lead the truck right up to the front door. Then she came and sat by the door waiting for the occupants to get out. Rachel got out and was met by a smiling face and a nose that immediately sought out the unique smells from her shoes and feet. She bent over to stroke the dog's head. \"What is her name?\"\n\n\"Well I thought I would get creative, so I named her Goldie. I've got to warn you, the only things she doesn't like are squirrels and gophers. If you pay her much more attention, you will have a friend who might be more than you want.\"\n\n\"She's precious and I don't mind. I have a dog but it is a little one. I travel so much, I usually leave it with friends when I travel though.\"\n\n\"I understand that. I have to travel a little and I usually have a high school girl who lives next door either come take care of her or stay here if I'm going to be gone for more than a couple of nights.\"\n\n\"Ok, Mr. Chet, let's see what kind of place you have here.\"\n\nChet unlocked the door and Goldie quickly entered and sat like a hostess in the door way. Rachel walked in and went \"Wow!\" The basic design was very simple as it was a standard log cabin from the outside. However, the interior was warm polished wood and showed a very creative use of space in its layout. Essentially the front room was one large room including a kitchen, eating area, and living room. Chet carried Rachel's bag into the bedroom on the left.\n\n\"I decided to put you in here because it has its own bathroom and the bed is more comfortable.\"\n\n\"This is your bedroom, isn't it?\"\n\n\"Well yes, but I think you would rather have a little more privacy and I won't bother you in the morning when I get up. I get up early, make coffee, and then usually go out and work for awhile. Then I come in and fix breakfast. So why don't you make yourself comfortable and I'll go start dinner. Is there anything you don't like or want? Oh, I see you have a laptop. The house has a wireless router, if you need to access it.\"\n\n\"Thanks. I do need to check my e-mail. And don't go out of your way for me. I will eat anything you fix.\"\n\n\"Ok, I was going to do fish and vegetables and some bread sticks. Is that all right with you?\"\n\n\"That would be great. Wait, are you talking about fried catfish?\"\n\n\"No ma'am. I don't eat that crap unless I'm having dinner somewhere else and that is what they fix for me. Is white wine good? I've got others if you prefer something else.\"\n\n\"White wine will be good.\"\n\n\"Get yourself settled and take a nap if you want. Dinner will be ready in about an hour and a half.\"\n\n\"Thank you, Chet. I might do that. My flight arrived early this morning and I didn't get much sleep last night.\"\n\n\"I'll leave you alone. If you need something, just holler.\"\n\n\"Thanks, I will.\"\n\nChet closed the door and went to the kitchen and started two pots of water to boil. Rachel looked around the bedroom and found it to be comfortably masculine. The warm wood of the front room carried over to his room at least. She unpacked her bag and hung her travel garments in the closet. Instead of the expected work clothes, she found that his closet contained several sport coats and slacks. Chet appeared to have a more formal side besides jeans and work shirts. She wondered who or what he was or is. She lay down on the bed for a minute and promptly fell asleep.\n\nChet prepared the vegetables and set the table after getting the outdoor grill burning. The marinade he chose was citrus based with a selection of fresh herbs from his garden. He also whipped up some dough and made some whole wheat bread sticks but waited to put them in the oven until he put the halibut on the grill. \n\nAs all of these preparations began to come together, the bedroom door opened and Rachel emerged with slightly tousled hair and a relaxed look in her eyes. \"So Mister Chet, I see no sign of a woman's touch. Has there ever been a Mrs. Chet?\"\n\nHis reply was simple but there was a wince in his eye as she asked her question. \"There used to be about fifteen years ago; but not anymore.\"\n\n\"Oh.\" She paused before she continued carefully. \"Is that an off-limits subject?\"\n\n\"Not really. It is just one of those scars that you pick up on the road of life. We married in college and then I went to work for a big company. Five years later, she decided that my boss was better looking and better everything than I was and decided to make a change.\"\n\n\"That seems kind of stupid in hind sight.\"\n\n\"I guess. It lasted two years until she figured out that he was a serial womanizer. Last I heard, she found another guy and I guess they are happy. She has had three kids with him.\"\n\n\"Did.....Did you think about trying again with her?\"\n\n\"She tried..... But I have always been one of those who just keeps moving forward; I don't like to go backwards and try to redo things. If I screw it up the first time, then I learned a lesson and go on. I guess I got that from my father. He was like that too.\" He picked up the platter of fish and asked, \"I'm going to put this on the grill. Will you be so kind as to put these bread sticks in the oven in about five minutes?\"\n\n\"Sure.\" She watched as a he went out the front door. Then she wandered over to the kitchen and looked at the clock and then the bread sticks. She wasn't certain but they almost looked homemade. She also lifted the lid on each of the two pots simmering on the stovetop and discovered steaming summer squash and green beans. Both smelled fresh and savory. She also had a nagging feeling that there was more to be said but that he was reluctant to open that door.\n\nA few minutes later, she stuck her head out the door and asked, \"The bread sticks have been on for eight minutes. How much longer do they need to bake?\"\n\nHe turned back to her after looking closely at the fish, \"Open the door and if they are nicely browned, take them out. If not, give them two more minutes. The fish will be done then and we can eat everything hot.\"\n\nShe returned to the kitchen and opened the oven door. She decided to give them the two minutes. She went to the refrigerator and found the bottle of now chilled wine and opened it. The wine glasses were already set on the table. She noticed that the table was perfectly set and that everything was in its proper place. She also noticed that they would be sitting across from each other. She idly wondered if he wanted eye contact throughout the meal or if he was reluctant to share his space with a woman.\n\nHer thoughts were interrupted when he entered with the platter of fish in hand. She went to the oven and found the bread sticks perfect in her eyes and with the help of a heavy glove removed them from the oven. He handed her a plate and she moved hot bread one-by-one onto it while he halved the grilled fish and put each half on a separate plate.\n\n\"I suggest that we don't dirty another bowl and just dish out our vegetables from the pot. Is that all right with you?\"\n\n\"Of course, I eat half of my dinners at home over the sink so I don't have to wash more dishes.\"\n\n\"Naughty girl; you should cook fresh and eat leisurely and enjoy it.\"\n\n\"Who says that I don't enjoy eating over the sink?\" She grinned at him. \"Besides, sometimes that is all of the time I have to eat before I have to leave for someplace else.\"\n\n\"I couldn't live like that. Bending over the sink hurts my back and I make sure that I schedule nothing to interfere with meal time.\"\n\n\"Lucky you.\"\n\n\"You could do it too; if you tried.\"\n\nShe stuck her tongue out at him but then said, \"Oh, this fish is marvelous. What is it?\"\n\n\"It is halibut marinated in a citrus and herb sauce. I only have it occasionally because not many places around here carry halibut. I got this in Dallas last week when I was there. Do you like the bread sticks?\"\n\n\"Yes, very much. They almost taste like they were made from scratch.\" She saw the frown on his face. \"You made these from scratch, didn't you? Sorry. They are wonderful.\"\n\nThe rest of the meal was finished in a leisurely manner with light talk about non-controversial subjects. Chet finished and pushed back from the table and began taking the dishes to the sink to soak.\n\n\"Do you like coffee after your evening meal?\"\n\n\"Yes, thanks. That would be nice.\"\n\n\"Do you want regular or decaf and do you want it simple or would you like a little liqueur in it?\"\n\nShe thought a moment and then replied, \"Surprise me.\"\n\n\"Great. Go on over to the sitting area and turn on the TV or whatever you would like to do. It will take just a few minutes to make.\"\n\nShe sat down while turning on the television. Almost immediately, she changed channels because the show that came up had a very familiar photo posted along with a story about rumors of a possible breakup of a famous actress and her fianc\u00e9. She also turned on her laptop to check her e-mail. She had a dozen waiting for her and all but one was business. The one was from her best and closest friend confirming her arrival in Dallas on the late afternoon flight on Monday. She replied and asked her friend to go to her house and bring a hanging bag that she had neglected to bring and that she would meet her at the airport. Then she began plowing through the others. Most she could reply with a \"yes,\" \"no\" or a blunt \"not no, but hell no.\" Sometimes she wondered if people had the common sense that God gave to a brick. \n\nAs she finished a particularly blunt \"not no, but hell no\" reply, she became aware that Chet was placing a large cup of coffee next to her but it had a mound of what appeared to be whipped cream on top. \"What is this? Whipped cream?\"\n\n\"Yes, I decided that I would treat you to something a little special for dessert. If you don't like it, I'll make you a regular coffee.\"\n\nShe lifted the cup and immediately smelled a unique aroma that was both sweet and pungent. One sip and she knew that there were probably two liqueurs and other spices mixed in. She also ended up with a whipped cream upper lip which she promptly licked off.",
        "\"That is marvelous. What is it called?\"\n\n\"I'm not sure. It started out as a Nutty Irishman and I added some things so it is kind of my own concoction.\"\n\n\"Then I'll call it the Nutty Chester.\" She noticed that he turned slightly pink around the edges and took his seat in a masculine recliner. She finished her e-mails and closed down her computer before she turned to him again. \"Um, Chet, can I ask you a question? It's kind of personal, I guess.\"\n\n\"Go ahead and ask. If it is too personal, I'll either tell you so or throw you out in the front yard and tell Goldie to run you off.\" Since Goldie was sitting next to Rachel on the sofa with her head in her lap, Rachel doubted that the second alternate was likely.\n\n\"You said that your ex took up with your former boss. Did you stick around or leave? I mean how did you end up out here being a farmer?\"\n\nChet thought for a moment before he replied, \"I quit the day after I found out. The company tried to talk me out of it but there was no way I could continue there because I knew that it wouldn't be long before I would be the center of every gossip group in the company. I set up a consulting service and they sent me some work probably out of guilt. I took the work but told them that I would only e-mail them the results; I couldn't see going into the office. Between that and several other projects I got, I made a decent living for the next five years. I saved most of what I made and when the economy went south, I thought things over and closed the business and bought this place. I call it a farm but it is really only eight acres and half of that are the woods. I didn't really know anything about gardening or farming but I started reading and trying what I read. It took three years to get my first decent crop in. The next year I started selling what I didn't eat at the farmers market. So that is how I got from there to here.\"\n\n\"Interesting.\" Rachel realized that there were several important points missing but decided that he wasn't ready or willing to share it all. \"I admire that you have come through something like that and rebuilt your life.\"\n\n\"Thanks. There were plenty of rocky spots involved but time actually does heal all wounds. I guess I am to the point now where I can say I forgive but I can't forget. Holding a grudge or trying to get revenge is too expensive emotionally to carry around. So I go on.\"\n\nRachel thought for a moment and then just nodded without adding her own perspective.\n\nChet continued, \"By the way, I need to tell you about tomorrow. I will be getting up around 4:00 in the morning and going out to the garden to harvest what is ripe. Then about 7:00, I need to leave for the Farmer's Market. It runs tomorrow from 9:00 until 1:00. You are welcome to just stay here and relax and do what you want or we can drive to the market and you can take the truck and go where you want.\"\n\n\"I think I will drive into the market with you and look around. It has been a long time since I have been to a small town market. It might be fun. The only thing is that I only brought some business clothes with me. Is that all right?\"\n\n\"Sure, they would be fine but depending on what you end up doing, they might get dirty or messy. Wait here a minute, I might have a solution for you.\" He rose and went into the second bedroom and she could hear him rummaging around a little. When he came back, he carried two pairs of jeans and three simple blouses. \"Try these on and see if they fit. They should be about your size.\"\n\nRachel looked up with a grin. \"Girl friend?\"\n\nHe blushed but grinned back. \"Hardly. I told you that a neighbor girl stays here when I have to travel. She leaves some things here and I guess she is about your size.\"\n\n\"Thanks; I'll try them on and see. I would feel more comfortable fitting in with the crowd than standing out.\"\n\nThey talked about a variety of safe topics for another hour and a second cup of Nutty Chester before they decided to turn in for the night. Chet went to the second bedroom while Rachel went to the master with Goldie at her feet. She tried on the jeans and blouses and decided that they fit well enough to wear and not be embarrassed. By the time she crawled under the covers, Goldie was nestled snuggly at her feet. She just smiled. \n\nThere was a knock at the door and she said \"Come in.\" \n\nInstead, he just spoke through the door. \"I forgot to tell you that Goldie likes to sleep on the foot of the bed. If you want, I'll come get her or you can just push her out.\"\n\n\"She's fine. My little guy sleeps with me too; so I don't have a problem with her being here.\"\n\n\"Suit yourself. She'll probably get up when I do and go out to the garden with me. I'll let her out if you don't mind.\"\n\n\"Do what you need to do and don't worry about me.\" She smiled at his innocent thoughtfulness. She laid her head on the pillow and was soon asleep.\n\nShe partially woke up at one point and was aware of a voice whispering \"Goldie\" but total awareness eluded her and she went back to sleep. She was aware that the warm body at her feet rolled over and remained still. She heard the door click shut and then awareness left her again. Sometime later, she woke again when a warm and wet tongue rolled across her cheek. She was instantly awake and her eyes focused on the source of the tongue. A smile crossed her face as she was aware that the tongue was attached to a pretty golden face with a smile greeting her.\n\nShe stretched and looked at the clock on the bedside table. It read 4:45 and she remembered Chet's schedule from the night before. She rose and slipped into the bathroom to dress in a pair of the jeans and a blouse. Then she led a happy Goldie out the front door where the dog immediately found a suitable plot of ground to take care of her morning needs and then began walking away. She stopped and looked back at Rachel to see if she was coming too. Rachel took the hint and followed as Goldie expected she would.\n\nThey were walking down a path through a stand of trees when Rachel saw a ray of artificial light shining in front of them. A few more steps and they left the trees and she stood at the rustic fence of a beautifully laid out garden. Rachel couldn't see Chet but Goldie had no problem determining his location because of her much more sensitive nose. She disappeared down a row and suddenly Chet stood up about thirty feet in front of her.\n\n\"Good morning. I hope you slept well. There is a pot of coffee and a cup over on the table to your right.\"\n\n\"Thanks; I slept marvelously.\" She walked over to the table and found a regular coffee pot sitting there with a red light shining but the power cord only went a few feet to an odd looking box. There was also a radio playing classical music sitting on the table. On a cart nearby, four boxes containing lettuce, tomatoes, peppers, and other vegetables stood ready to be pulled back to the house. \n\nShe took her cup and walked to where he was again stooped over. \"What are you digging?\"\n\n\"Carrots, radishes, and then I am going to get some onions and garlic from the shed and that will be it for today.\"\n\n\"That sounds like a nice harvest for the day.\"\n\n\"You never know how many people will come to market so sometimes you sell out and sometimes you bring some of it home again. I take a mixed load of fresh stuff and try to sell it all. A number of people come to me first and then go other places if I don't have what they want. You spoiled Goldie, by the way. Normally she wakes me up on market days. Today, she wanted to be lazy; that or your feet smell better than mine do.\" He grinned at her.\n\nShe blushed, \"Well she woke me up with a wet tongue and then led me out here like she knew what she was doing.\"\n\n\"That's Goldie; always the perfect hostess. Here, carry these over and put them in the empty box while I go get the onions and garlic.\"\n\nRachel carried the basket of produce to the table and watched as he carried an empty basket to a garden shed in one corner. Several minutes later he came back to the table with an almost full basket of onions and garlic. He was smiling as he returned to the table and set the basket on the cart.\n\n\"That ought to be enough for today. Are you ready?\"\n\n\"Yes.\" They started walking back down the path with Goldie in the lead at her usual pace.\n\nRachel asked, \"You didn't dig the onions or garlic. Why not?\"\n\n\"I dug the onions three days ago and left them in the sun to cure which basically means to let the outer skin dry. With garlic, you need to let them cure about three weeks but out of the sun. So I use my covered shed to cure them in the rafters.\"\n\nWhen they reached the house, Chet took the boxes and baskets and set them near an outdoor sink. \"After breakfast, I'll come out and wash and clean them up before I put them in the truck.\" He took one tomato inside and washed it before he sliced it into quarters. He handed her a slice along with a napkin. \"Try this and see how you like it. This is the first year I have grown this variety and most people seem to like it.\"\n\nRachel took the slice and licked the moist surface first and then bit half of it and began to chew it. \"Oh wow, this is so full of flavor; I've never tasted one like this before.\"\n\n\"That is the real beauty of growing your own vegetables. For example, if you look in the seed catalogs there are over one hundred different varieties of tomatoes out there. Some are yellow, pink, round, thin, purple and everything else. And most of them have a unique and fresh flavor. The ones you get in the grocery store are usually one or two varieties that were bred to be round, red, and ship and store well. Flavor is not one of the primary breeding traits. Some people at the farmer's market grow specialized fruit like this and they can make your salad or sandwich really special. You can try about a dozen different ones at the market later if you want. Now, are you up for a bacon, eggs, biscuit and gravy breakfast or do you want something simpler?\"\n\nShe grinned, \"I might hate myself later but you are the cook; do the full spread.\"\n\n\"You asked for it. Why don't you refill our coffee cups while I get started.\" She refilled the coffee cups and sat and watched as he carefully but confidently followed through a routine that would allow all of the pieces to be ready at the same time. She was surprised that he baked the bacon in the oven rather than frying it in a skillet.\n\nWhen everything was ready, Chet put them on the stove and handed her a plate. \"Ladies first.\"\n\nRachel put several slices of bacon on her plate but wondered what the rest of it was for. He had baked almost the whole pound of bacon. Likewise, after she took her eggs, there appeared to be more than they would eat. She took two biscuits but wasn't sure of what to do with the gravy.\n\n\"You've never had biscuits and gravy, have you?\" He asked pleasantly.\n\n\"No, I guess not. I have had biscuits and I have had gravy but...\"\n\n\"Let me show you.\" He took two biscuits and opened them and then put a pat of butter on them. Finally he covered them with the thick gravy. \"They are a hangover from the depression. People didn't have much but they had flour to make biscuits and a little salt pork or sausage. So they made gravy to spread the fat and protein around. People still make it and it is frequently served at every breakfast in homes around here. Sort of a tradition.\"\n\nRachel followed his lead and soon had her plate complete. He continued, \"Today, people put this breakfast down as too much fat, too many carbs, and too much of everything else. But the truth is that working the land is not easy and you burn up a lot of calories. If this is the biggest meal for the day, it has all of what you need to get through the day. Soup for lunch and some vegetables for dinner was often the only other things you had during the day. But breakfast got you off with plenty of energy and stamina for the work you had to do.\"\n\n\"That makes sense. I just never knew about this tradition.\" She replied.\n\n\"Most people don't have a clue what the background of any of the food they eat is all about. Basically all cuisines were based on simple and available ingredients and were easy to prepare. The more sophisticated dishes were developed later when there were more choices and more time to fix a meal.\"\n\n\"Oh, this is really tasty. Do you have this every day?\"\n\n\"No. I only do a big breakfast like this about once a week, usually before the Saturday market. I won't have lunch until mid-afternoon and it will probably be light. Tonight will be simple too. But this will be enough to get me through the day.\"\n\n\"You made a lot more than we will eat. Do you save it?\"\n\n\"Not hardly. If you look over your shoulder, you will notice that Goldie is watching you very closely. She gets most of the leftovers and gets to clean the plates. She hopes that you won't like it and leave most of it on your plate.\"\n\nRachel turned to Goldie, \"Don't hold your breath, baby; this is too good to waste.\" Goldie looked back at her but her expression didn't change. She would be happy with whatever came her way.\n\nWhen breakfast was over, Chet put the extra eggs and some of the gravy on his plate and set it on the floor. Goldie was all over it in a moment. He also put Rachel's plate next to his. \"I don't give her all of the gravy; it kind of upsets her stomach and the rest of the bacon I will crumble and put in the refrigerator for baked potatoes and salads.\"\n\n\"You sound like a prudent man.\"\n\n\"You have to do what you have to do.\" He shrugged. \"I'm going to go wash the produce. It will take about an hour and then it will be time to leave.\"\n\n\"And if I help you, it will take half the time and we don't have to rush.\"\n\nChet smiled, \"You are welcome to help if you want but there won't be a rush either way.\"\n\n\"Good; then I'll help.\" They went outside to the sink and table while Goldie remained inside enjoying her morning meal.\n\nChet took a case of small baskets from underneath the table and pulled out about 50. \"I'll wash the tomatoes. If you will dry them, put them in these boxes; three big ones or four medium sized ones. That will be about a pound and a half to two pounds.\" She nodded and picked up a clean towel.\n\nForty five minutes later, all of the produce had been cleaned, put in individual baskets, and put back into crates but no more than two layers deep. Chet then loaded all of the crates into the bed of his truck along with a canopy tent and two tables. When he finished, Chet went in and took a shower while Rachel washed her hands in the kitchen sink.\n\nThe drive to the town where the market was located was thirty minutes away and they each took a cup of coffee for the road as they drove. Rachel asked a myriad of questions about the market and what to expect. He explained that there were three lots involved; one had produce and plants, the second was for handicrafts while the third was more or less a flea market. She decided to look over all three and then help Chet for the rest of the day.\n\nThe canopy tent went up quickly and Chet effortlessly laid out the tables and displayed his offering along with several signs about his produce. Rachel was impressed with the fluid efficiency and confidence he demonstrated as he worked. She wondered how he would act outside of his comfort zone in the country.\n\nSeveral of the regular vendors came by to greet Chet and he graciously introduced all of them to Rachel. The smiles and glints in their eyes made it clear that she was a welcome addition to the market family. Shortly after that, the early arrivals for market began wandering around and everyone dispersed to their booths. Rachel stayed with him for awhile and watched as several regulars came up and asked about his offerings today. He explained things and they bought several of the small baskets as she listened to the process. When it slowed for a minute, Chet suggested that she wander and take a look around and then if she wanted to take the truck, she could explore farther away. She smiled and said that she would be back soon. He lost sight of her as another group stopped by. \n\nWith the weather cooperating by staying cool but clear, the market had a good turn out that morning. By eleven, he was beginning to wish that he had brought another box or two of the tomatoes and peppers. But things slowed down as people started wandering off for lunch. During this lull, Rachel came back with a full load of things in her arms. She obviously had been to the flea market and handicraft areas. Chet grinned at her and she grinned back as he opened the back seat to the truck and helped her stow her new found treasures there.\n\n\"I take it that you had fun.\" He asked.\n\n\"Oh yes. I met this wonderful woman who hand weaves the most beautiful fabric. I bought three of her scarves. Then I found a guy who makes jewelry out of junk. I now have a necklace made out of polished antique nails. I will be the first girl in town walking around town with antique spikes around her neck.\"\n\n\"I thought that a lot of people, girls and guys, walked around LaLa land with spikes around their necks.\" He replied sarcastically. That earned him a jab in the arm.\n\n\"Turd. Those are the folks into BDSM. This is totally different.\"\n\n\"BDSM? Isn't that the delicate art of beating the crap out of someone and pretending that it feels good?\"\n\nShe grinned. \"Something like that. Now what do you want me to do?\"\n\n\"I want you to do anything you want to do except get the crap beat out of yourself and thinking that it feels good. I'm not into patching up beaten bodies and you definitely don't want to go to the emergency room here. You will come out of there looking and feeling worse than you entered.\" That got him a firmer jab in the arm. \"I guess you are one of the hitters rather than one of the hittees, huh?\"\n\n\"Oh hush. In spite of your wonderful breakfast, I'm getting a little hungry. Any suggestions?\"\n\n\"Of course, I am full of suggestions. Go down to the end of that aisle over there and tell Juanita in the last booth that you want two chicken kebobs. Gnaw on one of those and bring me the other one. I should be sold out by about one and we will go to lunch then.\" He handed her a ten dollar bill. She stared at it like she had never seen a wadded up bill before. Then she took it before she wandered across the lot to the far aisle as another customer arrived and bought tomatoes, peppers, carrots, and some onions.\n\nRachel returned five minutes later chewing on a piece of chicken and carrying another charred stick for Chet. As she walked up she said, \"That is the best damn chicken I have ever tasted. Do you know what her recipe is?\"\n\n\"No; no one does. She just smiles at you and pretends that she doesn't speak English if you ask. I think that she marinates the chicken in tequila with some Mexican spices over night and then grills them for a long time. They look like they are charred but as you have discovered, the inside is very tender and wonderful.\"\n\nRachel sat on Chet's stool eating her kebob while he turned to help several more customers. Thirty minutes later, he was sold out and had to tell several people sorry. Then he began putting things back in the truck. She asked, \"Are we leaving now?\"\n\nHe looked around and found what he was waiting for. \"We will go in about ten minutes after that older couple leaves.\" She looked around and saw several older couples. \n\nHe continued loading things until he heard the woman say, \"Good Morning, Mr. McAdams. How are you today?\"\n\n\"Hi Millie and John.\" The older man just nodded.\n\n\"It looks like we are too late to get some of your tomatoes today.\"\n\n\"Yes, I sold out today but I didn't forget you. I brought you these. They are left over from the last market but they still look good to me. So, take them and enjoy.\"\n\n\"How much do we owe you?\"\n\n\"Millie, these are a couple of days old and I was just going to throw them out tomorrow. I can't take your money for that. Please take them.\"",
        "\"All right if you insist. Thank you.\"\n\n\"And Millie, Theresa over there said that she had some really good cucumbers and squash. Rachel why don't you walk Millie over there and help her pick some out.\" Rachel stood and walked over to him and quietly asked, \"Which one is Theresa's booth?\" \n\n\"Millie knows and give this to Theresa and say this should cover what they get.\" She looked at him with an odd look. \"Just do it, please.\"\n\nChet took the canopy down and loaded it in the truck so they would be ready when Rachel got back. She wasn't smiling when she returned along with a handful of cucumbers and squash.\n\n\"Are you ready to go to lunch? What's wrong?\"\n\n\"I'm not going to lunch until you tell me what I just went through. I am confused.\"\n\nHe sighed. \"Millie and John only have each other, a small house, and a small Social Security check. They won't accept charity and are very proud people. Some of us who can, see that they get what they want but usually only charge them a dollar or something like that. Today, I just lied through my teeth to give them some stuff because it is the end of the month and they probably don't have a dollar. So, that is that.\"\n\n\"I guessed that but what about Theresa. I gave her the money and she gave me an odd look. When Millie and John left she asked me if I was the woman with you this weekend. When I said yes, she said to tell you thank you and to give you these. What is that about?\"\n\n\"Theresa's husband got sent to prison a couple of months ago. She has a decent job but she also has two small kids. She supplements her job by growing some vegetables. If I went over there, I'd have to argue with her to get her to take the money for Millie and John. I thought that if you did it, she wouldn't argue with you. That's all.\"\n\n\"So you are just a big softie at heart.\"\n\n\"Crap, don't say that out loud. I'm just a member of the community and try to do my part. That's all.\"\n\n\"Uh huh. I think that there is more to you than you let on, Mr. Chester McAdams.\"\n\n\"Don't go digging; you will be terribly disappointed. Now get into the truck or you can walk back to the house.\" He opened the door and held it for her. She stood and looked at him for a moment and then walked to the door but before she got in, she surprised him by kissing him lightly on the lips.\n\n\"All right, prick; feed me but I am picking up the check for lunch.\"\n\n\"Like hell you are.\" And he shut the door before she could respond.\n\nWhen he got in the driver's side, she looked at him with a gleam in her eyes. \"Are you always an asshole like this?\"\n\n\"I told you not to dig into me; you probably won't like what you find.\"\n\n\"Like hell I won't. Drive.\"\n\nHe drove her out to the lake and parked in the lot of a rustic looking place and said, \"Dinner time.\"\n\n\"What do they serve here?\"\n\n\"It is easier to ask what they don't serve here.\" He got out and opened the door for her. She held his eyes with hers while she climbed out and then took his hand.\n\nThey walked in and were immediately shown to a table along with a single sheet of paper along with a glass of water and cup of lemon slices. Chet looked at Rachel and said, \"On the left is the list of meats available today. You can have them fried, roasted, grilled, or raw; your choice. The list on the right is the vegetables available and basically the same cooking options are available. At the bottom are the bread choices. The only thing you can't order is beer or wine because this is a dry county.\"\n\nAs soon as he said that, a waiter brought a chilled bottle of Riesling, opened it, and poured two glasses before he left the bottle on the table for them.\n\n\"Uh, I guess I didn't quite understand what you just said. That is wine isn't it; real wine?\"\n\n\"Yes, but we didn't order it. I am a member of their club and they have a locker back there with my name on it and I tell them what wine to keep in stock for me. If you aren't a member, you can bring your own.\"\n\n\"Oh! That's kind of stupid.\"\n\n\"You are in Texas. There is a lot of stupid going on around here. Do you know what you want?\"\n\n\"Do they really have venison?\"\n\n\"Sure do. It is fresh during hunting season but by now it has probably been frozen; you probably won't be able to tell the difference.\"\n\nThe waiter magically appeared and Chet looked at Rachel to see if she was ready. \"I think I would like the grilled venison with the potatoes, onions, and bell peppers also grilled. A small dinner salad would be nice and some sesame rolls.\"\n\n\"Excellent choices, ma'am. Chet, the usual?\"\n\n\"Of course.\"\n\n\"It will be out shortly. Thank you for coming.\"\n\nRachel said, \"I take it that you come here often?\"\n\n\"There are only three places in town I will eat at; here, the Mexican food place, and there is a sandwich place that I like. Everything else is basically mall food. Mostly, I cook for myself.\"\n\n\"I liked the waiter. He is personable but also polite.\"\n\n\"That is the way they are raised around here. He is a high school senior who is saving his money to go to college next year. Good kid; he will probably be number 1 or 2 in his class. I think that he wants to be a writer although I don't have a clue why.\"\n\n\"Because he has a creative mind and needs to express himself.\" She replied.\n\n\"Maybe; but I think the real reason is that his girl friend wants to be a movie or television actress and he wants to tag along on her coattails.\"\n\nRachel almost choked on the water she was sipping. \"That's not very nice.\"\n\n\"Maybe not but more than one boy ended up in a career because the woman he was hot for led him along a garden path.\"\n\n\"My, my. The cynical Chet emerges.\"\n\n\"Cynical? Probably; but also realistic.\"\n\nThe young waiter came back with their salads. \n\nRachel asked, \"Chet says that you are an aspiring writer. How are preparing yourself for that?\"\n\nThe waiter blushed. \"Well, actually I want to be a journalist but my girl friend wants to be a movie star. So if we go to Hollywood, I think it would be easier to find work as a television writer than as a journalist.\"\n\nChet grinned; Rachel refused to look him in the eye. \"They need journalists in Los Angeles too and many of them make more money and have a more stable life than film or television writers. I'm from LA and I would suggest that you pursue what you really want to do rather than chase a fantasy dream. It can be a cruel business out there.\"\n\n\"Thanks for the advice. I'm still thinking about it for sure. Oh Chet, Mr. Jenkins over there wants to know if you are still on to help paint the Widow Smith's house on Wednesday. He says that they have five others lined up.\"\n\n\"Tell him I will be there. They want me because it is my time to bring the beer. I can work any day but Monday. I have to go to Dallas early to do a couple of things and won't want to come back and work.\"\n\n\"I'll tell him. I'll be back with your meals when you are through with your salads.\" He went across the room to a table with three men sitting there.\n\nRachel finally turned to Chet and grinned, \"You knew that and set me up, didn't you?\"\n\n\"Would I do something like that to you?\" He asked with pure innocence.\n\n\"Asshole. How did I get hooked up with you?\"\n\n\"Because you got lucky; that's why.\"\n\n\"Prick.\" She whispered and then said, \"Eat your salad while I sharpen up my claws. Two can play this game you know.\"\n\n\"Are we playing a game?\"\n\nShe looked him square in the eye and they held each other's gaze for quite awhile. Finally, she just said a simple, \"No, we aren't.\" Then they both worked on their salads. When their meal was served, they ate heartily with Rachel exclaiming about the venison. Chet was demolishing a rib eye steak.\n\nWhen they finished and sat back to finish their wine, Jenkins and his party walked by and Jenkins said, \"Chet, remember it is your time to bring the beer Wednesday.\"\n\n\"I haven't forgotten. Do you want it cold or warm like usual?\"\n\n\"Funny man. Now listen, rumor has it that you were seen necking with a beautiful woman as you left the market. Is this beautiful woman your new girl friend?\"\n\nChet could feel himself turning red and was debating throwing a punch at him or thanking him for the compliment when Rachel spoke up, \"It was me that kissed him and I think I embarrassed him by it. As for being his girl friend, he hasn't asked me yet but I will probably have to think about it for while first. He is both a gentleman and an asshole. I don't which part of him I like best.\"\n\nJenkins and his friends broke out in laughter. Jenkins replied, \"You have certainly got our Chet pegged right. I hope you hang around and we get to know you better. You will fit right in with this community. We are all gentlemen and assholes.\" He patted Chet on the shoulder as Rachel sat there grinning and looked straight at hm. They left Chet alone with at least a little of dignity left.\n\nWhen they were gone, she said, \"Sorry about that. I just couldn't resist.\"\n\n\"Then I expect you to forgive me when I get through paddling your ass for that.\" He grinned at her.\n\n\"Chester McAdams, I have learned a lot about you in less than a day and I feel safe in saying that the last thing I would ever expect you to do is paddle a girl's ass.\"\n\n\"You are correct but that doesn't mean that I don't think about doing it once in awhile.\"\n\n\"I can live with that. Now, what do you have planned for the rest of the day?\"\n\n\"The rest of the day is totally unplanned. Normally I would go home and take a nap. If there is something you would like to do, please tell me and we will do that.\"\n\n\"The thought of a nap sounds very good to me. This was a wonderful meal and nap seems perfectly in order. Lead the way, sir.\"\n\nHe left a twenty dollar tip for the waiter and led Rachel back to the truck. The meal would be on his bill at the end of the month although Rachel nagged him about paying for it all the way home. He told her that he would send her a bill. She called him an asshole again. Goldie was waiting eagerly for them when they pulled into the driveway and just as eagerly followed Rachel into the bedroom. Chet realized that he would be napping alone today and just smiled to himself and thanked the Lord for this unexpected intrusion in his basically dull life.\n\nHe only slept for an hour and it appeared that Rachel wasn't ready to get up yet, so he sat down with his laptop and worked on his latest project. When he heard her rustling around in the bathroom, he saved his work and closed it down. He felt that it would be better if it wasn't open with her around.\n\nHe was aware that she was in the room because he felt rather than saw her behind him but Goldie's happy presence announced that they were up and ready to go. Rachel said, \"Stand up, sir.\" He did. \"Goldie and I want to go for a walk. You haven't shown me your estate yet.\"\n\n\"Do you want the ten minute tour or the full twenty minutes special tour that includes all of nooks and crannies that Goldie finds fascinating?\"\n\n\"Let's go for the twenty minute special.\"\n\nChet led Rachel and Goldie out of the door where Rachel promptly took possession of his hand. Of course, Goldie was the tour guide and slowly led them around the perimeter of the property and then through the woods and gardens back to the house. They were gone almost 45 minutes and Rachel seemed to really enjoy the property and asked lots of questions. When they got back, he dug out a bone for Goldie which she happily took and trotted out to the front porch and began to gnaw on.\n\n\"So Chet, what do you do for excitement on a Saturday night around here?\"\n\n\"What I do is usually drink a couple of beers, turn on the television, and fall asleep. But I doubt that this would be appropriate tonight for that. As an alternate, there is a place that a lot of people go to on Saturday's that you might enjoy.\"\n\n\"What is it? A club?\"\n\n\"I guess you could call it that. It is a hall; sort of a dance hall and club and gathering place. I don't know if you have places like this in California.\"\n\n\"If we go, will you dance with me?\" She had that look in her eye.\n\n\"If I have a beer or two first, I will dance with you. I need a little lubrication first.\"\n\n\"I expect that it is courage you need, not lubrication.\"\n\n\"Whatever.\"\n\n\"So what is the dress at this place?\"\n\n\"Mostly a clean pair of jeans and a clean shirt. And your cleanest pair of boots.\"\n\n\"I was hoping you would say that. When I was at the market today, I saw a store across the street and bought a pair of jeans and blouse that I am dying to wear somewhere. When do you want to leave?\"\n\n\"It's open now and will be until two in the morning. Whenever you are ready is when I am ready.\"\n\nShe ran out to the truck and returned with a large bag and a box. \"I am going to take a bath and dress. It will be about an hour.\"\n\n\"Do you want something to eat here or wait? They have things there but it is mostly fried things.\"\n\n\"Let's eat there.\"\n\n\"I guess that I should also warn you that we will probably get more of what Jenkins gave us at lunch.\"\n\n\"I'm a big girl; I can handle it. Are you man enough to face the music?\"\n\n\"Oh I can face the music all right; I'm just not sure if I can face it from now on when the word spreads that I have been out in public with a beautiful woman.\"\n\nShe had a coy look on her face. \"Do you think I am beautiful, Chet?\"\n\n\"Let's put it this way; if I were a teenager, you are the stuff that makes wet dreams. Now go get dressed and quit trying to get me to confess all of my inner most thoughts.\"\n\nShe giggled and went into the bedroom. From behind the door, she called, \"How old do you have to be to stop having wet dreams?\"\n\n\"Sorry, I can't hear you. Take your damn bath.\" The only response was more giggling.\n\nAn hour later, he was sitting in his recliner focusing on his project when he heard her come into the room. He quickly minimized my work and looked up. \"Holy Mother......You are going to make lot women jealous tonight. You look terrific.\"\n\nShe blushed, \"Is it too much? I can put something else on. Maybe this was a bad idea.\"\n\n\"No, this was a very good idea. This is perfect on you. It is just that you will draw a lot of attention tonight.\"\n\n\"You probably don't want that. I'll go change.\" She started to walk back to the bedroom. \n\nHe stood up and took hold of her wrist. \"Rachel, there is nothing at all wrong with this. You will fit in perfectly and I will be proud to be seen with you. They won't be looking at me anyway. Please don't change and quit worrying about me. To paraphrase a very intelligent person I know, I am a big boy; I can handle it.\"\n\nShe turned to face him. \"Are you sure? You have treated me so well; I don't want to screw up your life in any way.\"\n\nThe only way Chet knew to respond to that was to pull her to put his arms around her and hold her close. He couldn't be sure but it felt like she began to relax with that gesture. She made no effort to pull away or resist; she just seemed to nestle herself into his chest. He wouldn't allow himself to admit it but she felt wonderful in his embrace. It had been a long time and would probably still be awhile before he held another woman like this.\n\nAfter several minutes, she spoke without moving away. \"If we are going, we probably ought to go. Otherwise I might chicken out.\"\n\n\"Rachel, we haven't talked a lot about you and your background and stuff but the one thing I feel about you is that you are definitely not a chicken. I sense some sensitivity about some things but you have absolutely nothing to make excuses about. Now let's get going; I think I will forgo the beer before I dance with you.\"\n\n\"I would like that a lot.\"\n\nReluctantly, he loosened his hold on her and stepped back. On an impulse, he leaned forward and gave her a gentle kiss on her lips. She raised her eyes to meet his and smiled. \"Thank you. That was very special.\"\n\n\"Thank you; you are very special.\" He took her hand and led her to the door. Goldie was ready to come in and she went to her pad and lay down fully satisfied. They went to the truck and he opened the door for her again as he held her hand to get in. Then he drove out of the gate and headed north for the twenty minutes drive to the Hall. They didn't talk much during the drive. He listened to the music but wasn't sure what she was doing. Whatever it was, she brightened up when they arrived at the Hall. \n\nAs the name said, that is what it was. It was a simple building about 150 feet long and 75 feet wide. About half of the inside space was the dance floor and the other half were picnic tables where families, groups of friends, and groups of children sat and ate, drank sodas and beer, and listened to the music. There was a live band playing danceable country music at a sound level that was not oppressive. Chet looked around to see if he recognized anyone. One of his neighbors stood up and waved them over where they found about four tablefuls of neighbors and local people from his area.\n\nHe introduced Rachel to everyone and doubted that she would remember more than one or two names. After that, they gave him about five minutes of peace before they started in about why he never came out very often and all of that stuff. Rachel grinned and finally replied to one woman that she hadn't been around to drag him out. That set off another round about sit-at-home bachelors and all of the rest of the good natured teasing. One of the neighbors brought Rachel and Chet each a beer. For a moment, he was worried that she didn't drink beer but she tipped it up like she had been doing it for years and he quit worrying.\n\nAfter fifteen minutes of abuse, he got tired of listening to it and asked Rachel to dance.\n\nShe replied, \"I would love to. I was going to give you three more minutes and then I was going to just drag you out there. Had enough lubrication yet?\"\n\n\"No, but listening to all of jabs at my lack of social skills was getting old.\"\n\n\"So I am just your escape mechanism huh?\" She was grinning as she said it so he went ahead and put his foot all of the way in it.\n\n\"Nope, you are the place where I want to escape to.\"\n\n\"If you keep talking like that, you might just get in trouble sir.\"\n\n\"Dammit, why can't I learn to just keep my damn mouth shut? I didn't mean to offend you, Rachel. I really didn't.\"\n\n\"And what makes you think that I was offended by what you said?\"\n\n\"Aw crap, here goes. Rachel, I have never met anyone quite like you and...and...dammit I like it...I like it a lot.\"\n\n\"Why Mr. McAdams, I think that you just told me that like being with me.\"\n\n\"Isn't that what I just said?\"\n\n\"Close enough. Now shut up. I am here with you tonight because I want to be here with you and I want us to have a great time together. Now did I make myself clear including the points of emphasis?\"\n\n\"Yes.....I think.\"\n\n\"Good. Now what kind of songs don't you want to dance to so I don't try to force you to do something that you don't want to do?\"\n\n\"I prefer slower songs like this...\"\n\n\"So you can hold me close, like this?\" Chet could feel the blood rushing to his head. \"You don't have to respond to that. What else?\"\n\n\"I guess I'll try most anything except a polka.\"\n\n\"Is it too fast for you?\"\n\n\"No, I'm too clumsy for it.\"\n\n\"Ah. All right, they have just started playing a nice slow ballad. It is appropriate that you hold me like you did earlier at home, close your eyes, and feel like we are dancing on air. Got it?\"\n\nInstead of responding, he just held her as gently as he could, closed his eyes, and did feel like he was dancing on air. She put her head on his shoulder and he felt like a warm, wonderful dream was in his arms. Unfortunately, the dream ended all too soon and the first strains of a polka started.\n\nBefore he could react, she said \"Sounds like it is time for us to go visit our beer; but we will be doing this again frequently tonight. Got it?'\n\n\"Yes ma'am.\"\n\nThey danced frequently for over an hour and then Chet went and brought back a fried chicken basket to share along with another beer. After they finished, he felt someone standing in front of him and looked down.",
        "\"Hello Chet; may I have your permission to ask Miss Arrington to dance a polka with me?\"\n\n\"John, you have my permission to ask but the decision about the dance is hers to make.\"\n\nSo eleven year old John Applewhite stepped two feet to his left and addressed Rachel, \"Um Miss Arrington, I am John Applewhite and may I dance this polka with you?\"\n\nRachel looked at Chet with a big grin and then back at John. \"Well Mister John Applewhite, thank you for asking. I have watched you dance several times and you are very good. It has been a long time since I danced a polka and I might be rusty but I would be pleased to dance a polka with you.\" She stood up and although she was a four inches taller than he was he took her elbow and led her to the dance floor. It took a few minutes for Rachel to adjust her step to fit his but then they were boot scooting around the floor matching any of the other dancers both young and old.\n\nWhen the song ended, John escorted Rachel back to her seat and bowed at the waist. \"Thank you Miss Arrington, I enjoyed the dance very much.\"\n\n\"Thank you John, I enjoyed it too.\" He turned and went back to a table near theirs and sat down next to his mother before he let the excitement inside him break loose. She seemed to share the excitement with him. All of the ladies at our table congratulated Rachel on how well she danced but no one teased her about dancing with young John.\n\nLater, Rachel went to the ladies room and came back with huge smile on her face. \"You have some competition buddy.\"\n\n\"Oh yeah, who?\"\n\n\"I met John's mother in the ladies room and she told me that he wanted to dance with me because I was the most beautiful girl here tonight. She had to encourage him for twenty minutes before he would come over and ask me. So there.\"\n\n\"An old man can never compete with the young turks, I guess.\"\n\n\"Oh yeah; well old man take me to the dance floor; this slow song is one of my favorites.\"\n\nHe did as asked and she melted into his arms like they had been doing this for a long time. As they moved, she whispered in his ear, \"Are we going to the barbeque tomorrow? I was told to tell you to bring me or you wouldn't be welcome.\"\n\n\"That means I have to get up at dawn to marinate the ribs and then cook them almost done. Then we have to take them over there and finish them on their grill. It is so much work for an old man. It would be easier if a young and beautiful woman would help me.\"\n\n\"Asshole. The next time you call yourself an old man, I am going to pop you on the ass; maybe more than once. I told her we would be there when you had the ribs ready.\"\n\n\"Things are going to start breaking up soon. Most of the families will be leaving so they can get the kids to bed. They will have to get up for church in the morning. Do you want to stay longer or are you danced out?\"\n\n\"Chet, I am getting a little tired but I don't think I would get tired of dancing with you at all.\"\n\n\"Then let's call it an evening. I'll put the ribs in the marinade tonight and we won't have to worry about them until late morning.\"\n\n\"I like that idea.\" She kissed his cheek and laid her head back on his shoulder until the end of the song. Then they held hands and went to say their good nights to the neighbors. \n\nAs they drove home, she laid her head back in the seat and closed her eyes. Chet reached over and pulled her down so that she could lie down and put her head on his lap. She offered no resistance. When he pulled into the driveway, she was sound asleep. He carefully lifted her out of the truck and carried her into the bedroom and laid her on the bed. He bent and took her new boots off but was afraid to try to remove any more. Then he took Goldie out but she ran in and joined Rachel on the bed. \n\nChet went into the kitchen put the ribs in a big pan and poured his homemade marinade over them before putting the pan in the refrigerator. He felt tired but also a little restless and wasn't ready to go to sleep, so he opened his computer and worked on his project. Somewhere along the line, he laid back and fell asleep. Fortunately, the screen saver kicked in because that was how Rachel found him in the morning with the screen blank and showing nothing that she could see.\n\nWaking up was kind of like a dream. Chet felt that he was dancing on air with Rachel when she kissed him. But the kiss was real. He opened his eyes and she was gently kissing his lips with a hand on his shoulder.\n\n\"Good morning sleepy head. Why didn't you go to bed?\"\n\n\"I decided to sit for awhile and I guess I fell asleep.\"\n\n\"I take it that you carried me to bed and took off my boots. You could have undressed me further if you wanted to.\"\n\n\"I thought that it would be inappropriate. I hope you weren't too uncomfortable.\"\n\n\"I woke up sometime and undressed. I slept fine. Do we need to marinate the ribs?\"\n\n\"No, I put them in last night. I'll get moving and start breakfast for us.\"\n\n\"No. You relax or take a shower. I'll do breakfast. So far, you have done all the work and I feel kind of useless.\"\n\n\"You are many things but useless isn't one of them. I'll go take a shower and clean up.\" An hour later he emerged shaven and clean. Rachel was putting their breakfasts on the plates and it smelled wonderful. \n\n\"Do you hire out? I could use a good cook. This smells wonderful.\"\n\n\"Don't hold your breath about hiring me. This is the only thing I cook that I will eat. You would get bored fast.\"\n\n\"Either you are too hard on yourself or you have no faith in me.\" He replied\n\n\"Ha! Wait until you have had omelets for five meals in a row. You will kill for a plate of pancakes.\"\n\n\"No I wouldn't, I'd make them for you or we would go eat out. Faith, dear, faith.\"\n\n\"I have faith that you would get tired of cooking for me. Now, sit, eat, and don't offer any comments.\"\n\nChet did as he was told and discovered that she made a great omelet. The truth was that if this was the only thing she cooked, he would be happy because that was not what he was most intrigued about.\n\nThey took a cup of coffee to the living room when they finished eating. As they sat down, Rachel's cell phone rang.\n\n\"Hello.\" She listened. \"Yes? Hold on, let me check.\" She turned to Chet and said, \"It is the car rental company and they have a replacement for me but they can't deliver it until tomorrow unless I can come get it today. What do you think?\"\n\n\"Unless you are desperate to get away from here, I'll take you up tomorrow morning since I have to go anyway. I need to be at my thing by nine.\"\n\n\"I'll pick it up tomorrow morning. What location?\" \"He says Love Field.\" \n\n\"Tell him that you will be there at eight thirty.\"\n\n\"I'll be there at eight thirty. Thanks.\" She hung up. \"Now you, does it look like I want to run away and leave today?\"\n\n\"I don't know; you have that shifty look about you like you are ready to spring.\"\n\n\"Shifty Look? Since when have I ever looked shifty to you?\"\n\n\"Last night when we were dancing, I looked down and thought you were looking for an escape route.\"\n\n\"Put your damn coffee cup down, Mister. I'll show you about escape routes.\" She stood and walked over and sat in his lap. \"Now, see if you can escape?\"\n\n\"I don't want to escape but in about two minutes you are probably going to want to.\"\n\n\"Why is that?\" She settled down. \"Put your arm around me.\" He did.\n\n\"Wait two minutes and you will see or rather feel.\"\n\n\"Mr. McAdams, are you suggesting something irregular?\"\n\n\"I don't know what you call it in California but here we call it a normal reaction to a beautiful woman.\"\n\n\"But I am here in a robe, my hair is a mess, my makeup is non-existent, and I spilled some of my omelet on my front and you want to call that beautiful?\"\n\n\"You must be hanging around some weird people; a woman is beautiful because of what is on the inside not the outside. The outside is just bait.\"\n\n\"Bait?\"\n\n'Yes, throw a fish hook in the water and nothing happens; put a worm or some peanut butter on it and you too can have fried catfish for dinner. Bait.\"\n\n\"So a woman who wears makeup and nice clothes and has her hair done is just trolling for catfish?\"\n\n\"No silly, she is just hiding behind a mask so that the man can't see her inner beauty.\"\n\nRachel just sat there stunned for a moment. \"Do you really believe what you just said?\"\n\n\"No, but I got your juices flowing didn't I. You damn sure got mine going.\"\n\nShe turned towards him with her nostrils flaring and fire in her eyes. \"You are either the biggest bullshit artist I have ever met or the best man on the planet. Which one are you?\"\n\nHe leaned forward and kissed her lips and replied, \"That is for me to know and you to find out.\" That was the first time she tried to strangle him but not the last. Of course her idea of strangling lasted less than a minute and that was followed by laughter and a big hug. At least she didn't try to escape because she now had every reason to.\n\n\"What time do we need to go over there?\"\n\n\"Well the hosts are Methodists, I think.\"\n\n\"What does that mean?\"\n\n\"Oh, around here you can assume that if they are Catholic, they go to early Mass; the Methodists go later, but are out by noon. The Baptists however, have a preacher who can't seem to give a sermon that lasts less than two hours; God bless his soul. So if you are going to a Baptist family, you better wait until two or three. So today, we can go anytime after noon and the Catholics and Methodists will be there, but the Baptists will straggle in sometime later.\"\n\n\"Are you pulling my leg?\"\n\n\"No.....but I will if you want me to.\"\n\n\"And I thought people in California were weird. Here the most normal person I have met grows tomatoes and gives them away, plans his day based on which church service people go to, and tries to intimidate poor innocent girls with his good old boy nature.\"\n\n\"Ok and the problem is?\"\n\n\"You are a goofball.\" She leaned forward and gave him a kiss that was more than a friendly kiss and less than a passionate one. At that moment, it was good that she couldn't read his mind. \"And, if these people are Methodists, I better go clean up and dress so we can go put your ribs on the grill.\"\n\n\"See; I knew that you were going to try to escape.\"\n\n\"See; that was my plan the whole time.\" She stuck her tongue out at him and he swatted her butt as she stood up so he felt like he gave as good as he got.\n\nAn hour and a half later, Chet was putting the ribs on one of the three grills at his neighbor's house. A beer magically appeared at his side and Rachel was invited to sit with a group of the women who began the subtle grilling that is usual when a new woman dares to enter into the other women's home turf. For a moment, Chet was worried for Rachel's sake but after her first comment, the other women broke out in gales of laughter. He suspected that he was the subject of the comment and that he probably didn't want to know what it was. He also decided that Rachel could take care of herself and turned his attention to the guys who also began their not so subtle grilling about this new woman in his life. His truthful answers were met with audible acknowledgement and visual disbelief. \"So much for telling the truth,\" he said to himself. He also knew that by the time they went home, at least three of the guys would be wishing that they could be sleeping in his bed that night and at least three of the women would be planning their wedding.\n\nAs he had told Rachel, the Baptists began arriving around 2:00 bemoaning the fact that the sermon went overtime. Thankfully, the hot dogs and burgers were ready so that the kids would stop whining about being hungry and could then play and leave the adults in peace.\n\nJeff, the young waiter from the restaurant, arrived with his girl friend who immediately attached herself to Rachel as her new best friend and began pumping her for information on how to make a name for herself in Hollywood. Chet could see the look of distress on Rachel's face and was about to try to throw her a lifeline when he saw that something that she said registered with the young woman and the level of the discussion softened to a level where Rachel relaxed more and more. He was also needed to administer the final look at the ribs and declare them either done, about done, or inedible. He finally suggested about fifteen more minutes with a little more smoke. More damp chips were added to the fire and various people began salivating at the prospect of the ribs being done.\n\nAt four, the women paid Rachel the ultimate sign of acceptance by inviting her to help them bring out the rest of the food and set the table. With a smile on her face, Rachel gladly joined in the sacred rite of community togetherness, the filling of every square inch of the table with green salads, various forms of potatoes, vegetables, drinks, bread and rolls along with condiments. The meat, of course, needed no space at the table as it was only available directly from the grills to keep it somewhere between warm and hot. This day, they had the ribs, chicken, burgers and hot dogs, several varieties of kebobs, sausages, and a large skillet of fajita meat. Even if a homeless family had wandered in, they would not leave hungry and would leave with a bag of leftovers for the next day. The meal officially ended around six thirty when the cobbler was served with coffee.\n\nThe evening ended as it should everywhere; if you came as a stranger or someone with a problem with a neighbor, you left as a friend with no problems with anyone. Rachel left after endless hugs and a dozen suggestions on how to keep Chet in line. He left with a dozen reminders about getting older and needing to watch his blood pressure plus three offers of little blue pills if he needed some help. Rachel thanked all her new found friends and he told all of his old friends to go take a cold shower. They loaded their fair share of the left over spoils of the day which included no ribs or fajita meat and only one chicken breast and a small container of sausage into the truck. If nothing else, country folk do know how to eat. They raise or grow it; they learn how to prepare it; and consuming it comes as no problem at all.\n\nRachel had a smile on her face the entire way home. As he parked in front of the house, she finally said something. \"You know, Chet, you now have exactly no secrets from me and I know a dozen ways to keep you under control.\"\n\n\"If you believe that, I have a bridge in Brooklyn that I would like to sell. I was also told of no less than five ways to keep you from straying and hanging out in the local bars.\"\n\n\"Ha! Name one.\"\n\n\"It involved impregnating you soon and them keeping you pregnant for about five consecutive years.\"\n\n\"That figures. So is that what you want to do?\"\n\n\"No; that isn't my style.\"\n\n\"Just what is your style, Chet McAdams?\"\n\nHe knew that this was coming and he felt a rock developing in my stomach. Rachel could see his discomfort and softly added, \"Forget I asked that; it wasn't fair. Let's go inside.\" She got out of the truck and carried the leftovers. He got out but the rock in his gut didn't go away because he really didn't have an answer to her question. The underlying feeling had been growing inside of him for two days and he still had no clear answer.\n\nGoldie eagerly took off to find one or more of her secret places and Rachel put the bag on the table and began putting things in the refrigerator. Suddenly she turned around and looked at him and said, \"Chet, please forgive me. I had no right to ask you that. We met two days ago and I owe you a lot for everything. You have shared your life and home with me. You owe me nothing. I was selfish for prying into your privacy.\"\n\n\"Rachel, you have done much more than you know or expect. For ten years, what you have seen has been my life. I haven't dated anyone; I keep to myself; I reach out to the community just so that I don't go crazy. In two days you have brought brightness into this dull life. I have joked and teased more in two days than I have done in ten years. I feel relaxed with you here. Tomorrow you are leaving and I assume going back to your life in California and I will come back here to an empty house and a loyal dog. I would be lying to you if I said I won't miss you. But your life is there and my life is here. Next week at market, twenty people are going to ask me when you are coming back. I will make up some answer but probably won't have the guts to tell them the truth that I doubt seriously if you will ever come back. You have no reason to come back. In a month or so, they will stop asking but not stop wondering and I will still not have an answer to your question. I will just plant some more onions and tomatoes and watch them grow. Then I will come in and feed Goldie and sit down and do what I do to hide the fact from myself that I am a lonely man; a very lonely man. Excuse me for a minute; I need to go for a walk. Make yourself at home.\"\n\nChet turned and walked out the front door and headed for his refuge, the garden. Goldie found him with her always ready smile, wagging tail, and an eagerness to go exploring. By the time he returned to the house, he had no more answers than he left with but was calmer and had once again accepted his status in life; she was leaving and he was staying and that was that. He didn't know what Rachel was thinking or doing while he was gone but then he had learned that she was every bit as capable as he had hoped that she would be. That thought gave him enough confidence that he knew that his previous decision was the right one. He sighed and went back inside.\n\nRachel was sitting on the sofa writing on her computer. She had a cup of coffee on the end table and there was one sitting next to the recliner. She looked up and pointed at the recliner and said \"Sit.\" Then she went back to whatever she was writing. He sat in the chair while Goldie lay down in the space between the recliner and the sofa. \n\nWhen she finished her writing, she either hit \"send\" or \"save,\" he wasn't sure which. Then she closed her computer and set it aside. \"Chet, thank you for opening up to me; I wasn't expecting that and I still don't know how to respond to what you said but rest assured, I remember every single word and I will respond to you soon. I have a meeting to go to tomorrow which may last all day. Tomorrow night, I have a reception to go to that may be good or intolerable depending on how the meetings go tomorrow. A friend of mine is coming in tomorrow afternoon for the reception and she and I are leaving on Tuesday on a two o'clock flight. If you are still in Dallas, Tuesday morning, I would like for you to meet her and spend the morning with us.\"\n\nHe sighed and then lied through his teeth, \"I would love to but I need to be back here tomorrow night and I have something to do here Tuesday morning.\" He didn't tell her that he needed to start getting over her.\n\n\"Fine. I can't tell you when but I will be back here soon and we will talk more then. Is that all right with you?\"\n\nHe caved in a little and replied, \"Rachel, you are always welcome here. I don't lock the door so come on in even if I am not here. Goldie will be glad to see you again.\"\n\n\"Chet, will you be glad to see me again?\"\n\nHe paused and then barely whispered, \"Yes.\"\n\n\"That is all I need to know. Now I think we need to get some sleep if we need to leave by six.\"\n\n\"That is a good idea.\" Actually, he thought it was a terrible idea but it was the safest one he could think of. He doubted that he would sleep but he would take the computer with him and write to escape from his fears and dreams.\n\nShe stood up as he did and then walked to him and put her arms around his neck. \"Chet McAdams, the demons that are following you do not exist. Let them go. I heard nothing but wonderful things about you today and they do not conflict with anything I have experienced. You are wonderful; start thinking about that side of you.\" Then she kissed him on his lips and went into the bedroom with Goldie at her heels. He stood still for several minutes before picking up the computer and going into the other bedroom.",
        "He woke at five after getting only two hours of sleep; he had managed to write 30 pages, some of which might be usable. He went out, made coffee, and opened her bedroom door to let Goldie out. Then he took a cup of coffee and sat on the porch while she went about her morning business. The morning hadn't cleared his mind at all but he did feel like he had made the right decisions and in a little over three hours, this chapter of his life would be over and he could go on with a blank calendar in front of him. \n\nWhen they went back inside, he could hear that she was up and moving around so he went into the other bathroom and cleaned up. For his meeting, jeans and a clean shirt would suffice. He also made a list of things he needed to pick up in town. When he came back to Goldie later, this would be over and he could pick up where he left off on Friday; maybe.\n\nHe was waiting for her when she came out carrying her briefcase and suitcase. \"Chet, I have one more bag on the bed, would you get it for me please?\"\n\nHe retrieved it and saw that she had changed the sheets and he wondered if he really wanted to wash them. When he returned to the front room, he asked, \"Would you like a cup of coffee for the road?\"\n\n\"Yes, that would be nice.\" She was silent for a minute and then said, \"Chet, this has been a special weekend for me. I will miss you and I promise that I will be back.\"\n\n\"I would like that but I also know that you are busy. When you can come back, I will be happy to see you.\"\n\nThe whole conversation was formal and lifeless and he had no doubt that they both realized that. He put her things in the truck, filled Goldie's bowls full of water and food, and then they left. They didn't talk about anything serious on the drive as they both seemed to have reverted to their previous selves. At the car rental place, she leaned over and kissed him and then got out. He drove off before the lump in his throat could explode.\n\nThe drive to the radio station took fifteen minutes and it took several minutes for him to review why he was there and what he needed to do. Part of the arrangements was that he would be alone in a studio for the interview and that only one engineer would be there to run the equipment. He didn't want a bunch of people around gawking. Finally, he got out with his coffee in hand and entered the building and asked for the engineer. Quickly, he was in the studio and they did the sound checks before he put on the headphones so he could hear the interviewer who was 1500 miles away.\n\nAn hour later he left after the engineer assured him that everything was great. They would merge the two tapes, edit them together, and the interview would be aired later that afternoon. Chet thanked him for his support and left knowing that he would be in the garden when the interview would be aired. He ran his errands and picked up the things he needed and was back letting Goldie out before noon. Once again, he went into his bedroom and noticed the sheets. He sighed before he picked them up and put them in the washing machine. He didn't need that memory to constantly remind him of what his mind was already telling him.\n\nThe lunch options were boring; he didn't want to work in the garden; looking at the computer didn't inspire him; taking Goldie for a walk seemed to be too strenuous. He ended up taking a nap. When he woke, he didn't feel refreshed at all and now he had to decide on what to eat for dinner. He opted for a bowl of soup and a six pack of beer and resolved to himself that tomorrow he had to put this behind him and get back into his routine. \n\nHe knew what the outcome of her meeting would be and knew that she would be happy. She would go back to her world and achieve her dreams. When he allowed himself to accept that, he calmed down and added a grilled cheese sandwich to his menu for the evening.\n\nWhat he heard later was that the meeting went as anticipated. Six lawyer/agent types sat around the conference table bullshitting each other with Rachel sitting at the table alone and quiet. His lawyer and agent laid out the terms and conditions and then let the people submit their offers. As they filed out of the room shortly before one, his lawyer and friend asked Rachel to stay back for a moment. When she left two hours later, she had the contract in her hand even though all of the offers were still sitting on the table unopened. The smile on her face was matched by the confusion in her head. She was certain that her offer did not equal the others. She had been in the business too long and knew how the big guys threw money around. But she had the contract and couldn't wait to get started. She had already done a lot of the homework on the project in hopes of getting the deal but the trip to Dallas had been her effort to try and show that she could do a better job than anyone else. But she hadn't been successful in finding Oliver Franklin; in fact, she hadn't made much of an effort to find him. She had been distracted by Chet and she couldn't tell herself why. She had enjoyed herself but it was way outside of her normal routine. But she had the contract and that was what she came for.\n\nAn hour later, she was picking up her friend, maybe her only real friend, at the airport. Rachel was on cloud nine and couldn't stop talking. Megan Mallory was just as excited as her friend because she knew just how important this deal was to her. But she was also aware of the radio and the interview that was about to be broadcast.\n\n\"Hey, girlfriend; slow down a little. They are about to broadcast an interview with Oliver Franklin.\"\n\n\"What? What did you say?\"\n\n\"Just shut up for a moment and listen.\"\n\nThey listened for five minutes as the interviewer talked to Oliver Franklin about his rise as one of the most important novelist of this decade. Then they talked about his latest novel which was currently considered one of the most desirable properties by most of the big studios. During this discussion, Franklin had said that he had decided who would get the contract several weeks ago but that they had to go through the process to keep people happy. He also felt that the people who he had chosen would do the best job and produce the most faithful version of his novel. During the last part of the interview, Franklin was asked about his reluctance to become a public figure. His response was \"Scott, I live in a small town and don't want to be the center of attention. I'm just a member of the community and try to do my part. That's all.\" Then the interview was over. \n\nMegan looked at her friend and asked, \"So; what do you think?\"\n\n\"I think that tomorrow morning, we are going to take a road trip and I am going to kill Oliver Franklin.\"\n\nThe next morning, Chet woke up with a fuzzy head and a fuzzier mouth. For the umpteenth time, he swore off of beer as a sleep inducer. He knew that he was lying to himself but it was the only thing he felt safe in promising himself. It was late and rather than eat breakfast, he just pulled on his worn coveralls and went to the garden. An hour later, he heard a car pull into the driveway and stop. Then he heard a familiar voice yell, \"Chester McAdams, where the hell are you?\"\n\nHe responded with the same degree of irritation that he heard. \"I thought that I got rid of you yesterday.\"\n\nA few moments later, Rachel came storming into the garden followed by Goldie and then Megan Mallory. Rachel walked right up and glared at him. \"You lied to me Chester McAdams or should I say Oliver Franklin!\"\n\n\"I didn't lie to you at all, Rachel, or should I say Jillian Bannister, Arrinton. Let's see, it went 'No, I am not her; I just look a lot like her.' Now that was bald faced bullshit.\"\n\n\"That was covering my ass. I asked if you knew Oliver Franklin. You said 'NO!' Asshole.\"\n\n\"I didn't lie to you. Oliver Franklin is a one dimensional figment of my imagination and I'm not sure that I would like him if he really did exist. He exists for the sole purpose of letting me live here and do the things I do and that I am. You came down here to try to persuade me to give you a shot at getting the rights to the book. You got what you came for. What else do you want?\"\n\nShe stared at him for a long time, then she said \"Goldie, let's go take a walk.\" She walked off with Goldie. Chet looked at Megan.\n\nShe stepped forward with her hand out and said, \"Hi, I am......\"\n\n\"I know; you are Megan Mallory, Rachel's best friend. I have something for youtoo but it is in the house.\"\n\n\"Chet, can I ask you a question?\n\n\"Sure.\"\n\n\"Actually it is two questions. How do you feel about Rachel and what are you going to do about it?\"\n\nThere it was again; the questions he would not answer openly or to himself. \"Megan, I know that the two of you are close; very close. I'll make a deal with you; on the night that this movie premiers if she can look me in the eye and tell me that it was the very best that she can do, you ask me those same questions again and I will answer them.\"\n\n\"Chet, you have a deal and I will expect full honest answers.\"\n\n\"That is what I will give you.\"\n\n\"Good, we have a deal. Let's get what you want to give me and I better get her out of here or we will miss our flight.\"\n\nThey walked back to the house and he went inside to get the envelope. Rachel was scratching Goldie's stomach on the lawn. When he came out, both Megan and Rachel got in the car and Goldie was trying to find a way to get in with them. He handed the envelope to Megan and whispered, \"Wait to open it until you are gone.\"\n\nA moment later, the car was going quickly down the driveway and he and Goldie stood and watched them go. He suspected that Goldie had a tear in her eye too.\n\nAs they neared the airport, Rachel turned to Megan and said, \"What did he give you?\"\n\n\"An envelope; I haven't opened it.\"\n\n\"Open it and tell me what it says.\"\n\nMegan carefully opened the envelope and took out one sheet of paper with careful writing. There was a small note also but she ignored it for now.\n\n\"What does it say?\"\n\n\"Megan, make sure that you tell Rachel to cast you as Maggie. If she wants to be on screen, she needs to be Katie. Chet\"\n\n\"That son of a bitch! I should have killed him a while ago.\" Suddenly she pulled off the highway into a parking lot and took out her phone. A moment later, she said, \"You bastard! You know good and well I want to play Maggie. Why should I cast Megan in that role, asshole?\"\n\n\"Rachel, when you calm down and think about it, you will see that I am right. I wrote the story with her in mind. You need to spend your time behind the camera, not in front of it.\"\n\nWith full sarcasm in her voice, she asked, \"And just why is that?\"\n\n\"Because you need to be Katie in the sequel and it will win you the Academy Award you are desperate for.\" He hung up before she replied and also turned off his phone. He should have congratulated himself on doing what he knew was best but he really felt like he had just betrayed his best friend. At that moment, Chet didn't like himself very much. A few moments later, he threw a couple of things in a suitcase and he and Goldie drove off in his truck. He didn't return for two weeks.\n\nWhat he didn't hear was Megan telling Rachel, \"Rachel, we have been friends for long time, haven't we?'\n\n\"Yes.\" She was still staring at the dead phone.\n\n\"And we agreed that we were always going to be honest with each other, regardless of anything else. Right?\"\n\n\"Of course; I remember.\"\n\n\"Then listen. Earth to Rachel. You stupid bitch, you don't want to kill Chet; you want to marry him. It is written all over your face and he probably just died when you drove off. Now cut out the Prima Donna Hollywood bull shit and read over your script again and decide what you want to do with it. He handed it to you because he trusted you. He wants you to deliver your absolute best work. If you do that, you will be surprised at what waits at the end.\"\n\nRachel just stared at her for a moment and then began driving the rest of the way to the airport without saying a word.\n\nFor his part, he had no place in mind to go; so he just drove hoping that distance and time would dampen the feeling gnawing inside him. Goldie was happy; she looked out the window for about five minutes and then curled up in the back seat and went to sleep. He wished he led her simple life. \n\nHe drove south but wanted to avoid the Houston area, so he veered westward and found himself on the highway to Corpus Christi and that became his ultimate destination. Goldie had never been to the ocean and if he couldn't relax on a beach, he couldn't relax. They spent the night in a small motel and drove into Corpus during the early afternoon. He quickly discovered that the place was packed full with vacationers and that there wasn't a hotel or motel room to be had at any price. As he drove around trying to decide where to go next, he passed a travel trailer lot and almost caused a wreck as he quickly turned into their driveway. An hour and a half later, Goldie and he were towing their hotel room with them and headed for a campground near the beach that the salesman had told him about. He stopped at a store and bought food for both of them and found a space to hook up to. Then he took Goldie to the beach for her first romp in the sand and surf. Her activity on the beach gave his aching soul some respite. She was behaving like he had felt for three days, alive and glad of it. The feeling was short lived, but for a while, he was able to escape from himself.\n\nOver the next week, he bought several sets of beach wear because he had only brought a minimal amount of clothing. He was also able to lose himself in the sequel. If anything, he wrote faster and more passionately than he had before and was aware that he would probably have to edit that portion very carefully to maintain the storyline.\n\nThey stayed for ten days at the beach before they began the trek home. With each mile, he felt dread building as he knew that when he arrived home, all of the feelings and emotions would come back to the surface. He guessed that his dread was justified because as soon as he walked in the front door, he knew that she had been there. Nothing was out of place or missing but he could smell her perfume on the sofa, his recliner, and in his bed. There was no message or note; but she had been there.\n\nGoldie went exploring to check out her territory while he unloaded the travel trailer and parked it next to the barn. Now it was time to fix some dinner and settle back down and try to clear his head. That was beginning to take place when his phone rang at nine o'clock but he did not recognize the number.\n\n\"Hello.\" He said cautiously.\n\n\"Thank God! Chet are you all right? This is Megan.\"\n\n\"Yes, Megan; I am all right or mostly so. Goldie and I took a vacation to the beach.\" There was a long pause. \"Megan, is she there with you?\"\n\n\"No; I am alone and am trying to think about what to say and tell you.\"\n\n\"Well then, just tell me what you want me to know; I 'm not going to publish it anywhere.\"\n\n\"Ok, but don't tell her that I told you this.\"\n\n\"That's not likely to happen; I doubt that she will ever speak to me again.\"\n\n\"You are just as stupid as she is. Both of you are so terrified of getting hurt again that you can't see what is right in front of your face. She cried for three days after we left. We went to New York for her appearance and she did that in her usual professional way but once we got back to the hotel, she cried and I had to force her to eat.\"\n\n\"Shit. I guess I messed things up pretty good.\"\n\n\"No dammit; that is what I am trying to tell you. You didn't do anything wrong and neither did she. Both of you just denied that what you were experiencing was real. After three days, she finally decided that she needed to clear the air with you. She went down to your place and stayed for five days, hoping that you would come back. You didn't. She went to the market and talked to the people that know you and none of them had any idea that you were even gone. So she spent five days alone in your house and worked on the script and I mean she really worked her ass off. She finally had to leave because she had to be at the first preproduction meeting and I will tell you right now, she is putting everything she has into this film. You asked for her best and you will get it. I was shocked at her attitude at the meeting and the people responded to her like they never have before.\"\n\n\"I am glad to hear that but I am also concerned that she will try to push things too far.\"\n\n\"I'm going to keep a close eye on her for that too. So don't be surprised if I call you occasionally with an update. When she got back, she said that she wasn't going to try to see or talk to you until this was done and could look you in the eye and tell you that this was the best she could do. And she wants to do that face to face; so you better plan on being at the premier.\"\n\n\"I already told you that I would. \"\n\n\"All right. Now........\" I could hear her take a deep breath. \"I am going to tell you some things about her that no friend should ever tell anyone; but you need to know this. She...\"\n\n\"Wait, I don't want you to risk your friendship with her by telling me her private things.\"\n\n\"Hush and listen. You need to understand some things about her and there is no way for you to find them out without me telling you. This is a really nasty business and a horrible town to live in. 90% of what you read and hear is pure bullshit. Hollywood could care less about Rachel Arrington but they are in love with Jillian Bannister. They can't get enough pictures, stories, or rumors about her loves, likes, and activities. Rachel Arrington is a simple girl with small town values; Jillian Bannister is the epitome of the movie star. She dates only the most handsome leading men and dines in the finest restaurants. But that is all show. Every one of her romances except one was fabricated in the PR office of a studio because that draws attention to her latest film project and sells tickets. Her current 'flame' is just that. She invests her money in projects she likes and if it takes a romance to get the people out there to come see it and make it successful, she will have a paper romance with the star. The fact is that her divorce six years ago almost destroyed her. Since then she has not even gone on a real date with any man. They are all fiction. She threw herself into her work and did what she needed to do to be successful but she is terribly lonely and desperately wants a family and children and all of the rest that goes with it. No one has come close to catching her attention until she met you. You treated her like Rachel; not Jillian. You broke through her protective barriers and showed her what she wanted most. When she found out that you knew who she was all along, she felt that you were using her and she felt betrayed. It wasn't until her stay at your place that she began to realize that you were treating her like Rachel because that is the kind of guy you are. It finally snuck in. So I don't know what the future holds for either one of you but whatever it is, you need to know just how fragile this strong and successful woman really is. So that is what I wanted to tell you. If I hear that on the street, I will probably never speak to you again, ever.\"\n\nChet thought for a minute and replied, \"If you hear it on the street, rest assured that it didn't come from me.\"\n\n\"I believe you. Now, I need to go and have dinner with her. This call didn't take place, but watch E-Tonight after the news and maybe you will see what I mean.\"\n\n\"Thanks Megan; I can't tell you how much this means to me. I think I have some of my own healing to do between now and the premier.\"\n\n\"Chet, I am glad to hear you say that. Take care and I'll be in touch.\" She hung up and he sat there staring at the phone. \n",
        "The news was already half over but he switched it over and sat back to watch. The second story was titled \"What's going on with Jillian Bannister?\" The smooth talking co-host then began \"Hollywood has been buzzing about favorite Jillian Bannister. In the past two weeks, she has broken her engagement to her latest heart throb. Somehow, she beat out the major studios for the rights to film Oliver Franklin's last novel. It is expected to be a surefire Academy Award nominee but no one is certain if Jillian can handle such a major piece of work. On that count, she announced today that her best friend, Megan Mallory, has been cast in the lead role of Maggie. Everyone knew that Jillian desperately wanted that role for herself and has been after all of the studios about it in case they got the rights. Something has changed in Jillian Bannister, America's Sweet Heartthrob but no one is talking. Back to you, Wanda.\"\n\nChet turned the set off and smiled. Megan had been right; she understood the novel. He went to bed right after that and surprisingly, slept soundly and peacefully with Goldie at his feet. He knew that his healing had to begin tomorrow.\n\nIn the morning, he went into the bathroom and looked at himself in the mirror. Rachel had also been right; he just looked and said, \"Asshole.\" Then he dressed and began his healing process which basically included going for a walk and talking things out with Goldie. Fortunately, she was not a judgmental listener and after every walk, she rewarded him by licking his hand or cheek before she went to get a drink of water. They kept this up every day including those when it rained. By the end of the month, he had no more tears to shed and no more desire to beat himself up for real or imagined sins. Then he began to talk about what he wanted to do with his life. He talked about the places he wanted to see and the things he wanted to try. He also told Goldie about the children he hoped to father and mentor into adulthood. The only thing he didn't discuss with her was who he was going to share these dreams with. He knew the answer but was still hesitant to admit it out loud.\n\nMegan called a couple of times during the next couple of months. They were short calls and she told him that Rachel was really investing herself in making this film good. That news made him feel good even though it also brought a bout of loneliness with it. It also reminded him that the time was getting nearer when the premier would take place. Megan had called two days before with her first concern. She said that Rachel had started worrying about something but wouldn't talk about it. They were in the last week of shooting and Megan was getting worried if Rachel was getting scared or going overboard. She said that she would let him know if something developed. Chet had no idea what might be going on so he decided to just trust Rachel to resolve whatever the issue was. Then he went to the garden to harvest what would be his last trip to the market for the year. His fall garden was doing well but it was smaller and would be mostly for him and a few neighbors.\n\nHe went to the market Saturday morning and sold out before noon. He began loading his things in the truck but when he turned around, he found Rachel standing there. She looked even better than his memory told him as she wore her jeans, a blouse with a leather vest, and her boots. He wanted to go to her and take her in his arms but sensed that she wasn't here for that.\n\nShe said, \"Hi; you look really good.\"\n\n\"You do too. It is good to see you again.\"\n\n\"Will you buy me lunch; I need to talk to you about something.\"\n\n\"Sure. Let me finish loading this stuff and we can go. Did you drive or....\"\n\n\"I rented a car but I will ride with you, if you don't mind. We can come back and get it later.\"\n\nHe finished loading the truck and held the door open for her. She brushed his arm as she got in. He took a deep breath to try to calm himself down. \"So where too?\"\n\n\"The rustic place on the lake, if that is ok?\"\n\n\"That is always ok.\" They drove and all she asked was how Goldie was. All he could answer that she was still Goldie. Rachel smiled.\n\nAs he parked and prepared to get out, she reached over and took his arm. \"Chet, I want to apologize to you for my behavior. I was mad, shocked, and I behaved very badly. Please forgive me?\"\n\n\"Rachel, I have nothing to forgive you for. I am the one who acted poorly and should have treated you with more respect and trust. That was my fault. I should ask you for forgiveness.\"\n\n\"Chet, you helped me open my eyes. You gave me the thing I wanted most in the world at that moment and you challenged me to do my best work. That scared me when I realized that I had basically been making easy choices and taking the easiest road. I have never worked as hard as I have on this project. Initially I did this to make you proud but now I am doing this to make me proud.\"\n\n\"Then I made the right choice in trusting you with this story. The sequel will probably be my last novel at least for awhile. In the past ten years I have written continuously and have probably written over 10,000 pages and several million words. I feel a little stale and will probably take a break after it is published.\"\n\n\"Have.....\" She paused. \"Have you decided what you are going to do?\"\n\n\"Sort of. I have two thoughts in mind; one is pretty clear but depends on several things happening. The other is still pretty vague\"\n\n\"I'm sure that you will work it out. Now let's go in and eat while I talk about what I need to do.\" \n\nBy mutual agreement, they both got out of the truck together and walked inside. Rachel asked for a table away from most of the lunch crowd and they were seated with some space around them. They ordered before Rachel began.\n\n\"Chet, we finished the principle shooting and just have some odds and ends to finish. But we have also been doing rough editing as we go. On the whole, I am satisfied except for two scenes and I have come to realize that they are the two most critical scenes in the film especially if the sequel is as you have suggested it would be. They are the Maggie/Katie scenes in the restaurant and at the dance club.\"\n\n\"All right, so far I agree with the importance of those two scenes. What is the problem and what do you want to do about it?\"\n\nShe took a deep breath and went on. \"Technically, the scenes are fine. I am happy with what Megan and I did. But when I put it together with the before and after scenes, they just don't feel right to me. I fretted over it for a long time and then decided what was wrong. The set up seems artificial. What I would like to do is bring the camera and Megan down here and re-shoot the lunch scene in here with the usual lunch crowd and then shoot the club scene out at the Hall with nothing but the regulars doing what they normally do.\"\n\n\"So why are you asking me? You are the director and you should make that decision.\"\n\n\"Chet, I would not do something like this in your home territory without your permission or at least your acceptance. I won't invade your privacy like that again.\"\n\nHe thought for a moment. \"When do you want to shoot this and how are you going to set it up?\"\n\n\"I need to shoot it next weekend. Megan is scheduled to be busy after that. What I propose to do is ask permission to shoot here but without any publicity. I just want regular people eating as they normally would. In return I will buy lunch for everyone who is here during the time we shoot. It shouldn't take more than an hour. The same basic setup would apply at the Hall. It might take a little longer to make the shot there but otherwise, I will pay for the evening.\"\n\n\"All right, do what you want. This is your picture; I won't get in the way.\"\n\n\"There is one more thing. I want you there.\"\n\n\"Rachel, I don't want to be on camera. That....\"\n\n\"I know that and I don't want you on camera; I want you off camera. I talked to Megan about it and we both agree that just feeling your energy nearby will help us both.\" \n\nHe stared at her and she looked deep into his eyes.\n\n\"All right, just tell where and when.\"\n\nShe let out a huge sigh of relief and took his hand. \"Thank you Chet; I can't tell you how terrified I was about asking you this. Um, the cameraman we will use lives up in Dallas and will drive home after the shoot. Um...can you make room for Megan and I for one night?\"\n\n\"You can come early and stay longer if you want. You ought to know that you are both welcome.\"\n\nShe truly smiled for the first time. \"I guess I knew that but was afraid that you might have changed your mind.\"\n\n\"I have not changed my mind about you or anything about you one bit. The changes have been about me.\"\n\nAt her prompting, Chet asked for the manager to join them. Rachel explained what she wanted to do and after a couple of questions, he agreed. Then they drove to the Hall and she repeated her request there. He had more questions about the arrangement but finally agreed when he realized that the regulars would love a free evening with a little intermission. \n\nAs they drove back to town, he asked, \"Are you staying tonight?\"\n\n\"I thought about it but decided that now isn't the best time for me to do that. Megan and I will come in Friday and stay until Sunday. Is that all right?\"\n\n\"Yes, of course.\" Chet drove her to her car and they talked idly for several minutes until she gave him a quick hug and got in. He knew for a fact that he was reluctant to see her drive away for the second time. \n\nThe next six days dragged by very slowly. The garden didn't need much work, he uploaded his final revisions to the sequel to his publisher, and then he racked his brain for things to do. In the end, he cleaned the house from corner to corner and floor to ceiling. He also baked four loaves of bread and planned a menu for the weekend. His only real excitement was going to the grocery store on Thursday.\n\nHe didn't know when to expect them on Friday so he was on pins and needles all day long. When Goldie's ears perked up, he knew that they had just entered the gate and he and Goldie were waiting on the porch when the car pulled up and stopped. As soon as the engine was shut off, Goldie was at the driver's door waiting for Rachel to step out.\n\nMegan stepped out first with a big grin on her face. Chet and her eyes met and she just nodded to him in a telling manner. A moment later, Rachel emerged and Goldie proudly led her around the car and sat down next to Megan and Chet. When Rachel slowly came towards them, Chet and her eyes locked on each other. When she stopped, Megan said in a warning tone, \"Rachel Arrington; you know what you have to do. Quit stalling.\"\n\nStill locked on her eyes, Chet saw her face break into a nervous smile. \"Um Chet, I want to thank you for the opportunity to do this project. I feel like I have grown a lot during this process.\"\n\nMegan said impatiently, \"And?\"\n\nRachel stepped forward and put her arms around him and gave him a hug that lingered. He wrapped his arms around her and felt her head rest on his chest. For the first time in several months, he felt totally at peace. It seemed like neither of them wanted this moment to end. He roused himself from his stupor when he heard Megan say, \"Come on Goldie; show me around.\"\n\nBoth Rachel and Chet giggled and looked at each other. He couldn't help himself and leaned down and gave her a chaste kiss and whispered, \"Thank you for being you.\" Then he took her hand and led her inside. \n\nNow the lightness began again along with the expected teasing and playing with Goldie. Chet sliced some of his bread and offered them each a glass of wine which they accepted to go with it along with several kinds of cheese and other tidbits. He also started the grill while the nice salmon was marinating. As they exclaimed about the bread, Rachel asked if he had made it himself. When he acknowledged that, Megan gasped and Rachel smiled.\n\nDinner was a success with the salmon and grilled vegetables. While they had coffee, he asked about the schedule for the next day, Rachel answered that she needed to go in early to meet the camera man and get things set up. If Chet could bring Megan to the restaurant around eleven, they could shoot the scene as soon as there were enough people to fill the background and then have a real lunch there. They wanted to get to the Hall early and set up but with any luck, they would be finished by nine.\n\nAs bedtime approached, he noticed a succession of glances back and forth between Megan and Rachel. Finally Rachel said, \"Is it all right if Megan and I sleep in your bed tonight? You can use the smaller bed in the other room.\"\n\n\"That is fine with me but if you each want to sleep alone, I can sleep out here or in the travel trailer.\"\n\n\"When did you get a travel trailer?\" Rachel asked in surprise.\n\n\"I got it when Goldie and I took our vacation. There were no rooms available at the beach so I bought a travel trailer to use. It's parked down by the barn.\"\n\nMegan responded, \"I for one am not going to kick you out of your own house or out of your bed. I'll sleep with Rachel but if she snores again, I might strangle her.\"\n\nRachel turned red and the battle was on. \"Who snores? The last time we slept in the same room, I could barely get any rest with you whistling and humming in your sleep.\"\n\nThis went on for several minutes when he decided to use the power of the host and called for a halt. He pointed Rachel to his bedroom and Megan to the other bedroom. After they got through calling him a bossy, typical man and a few other unpleasant adjectives, he stopped it by going to the car and taking their luggage into the two rooms. They grinned but he suspected that he hadn't heard the last of it. He hadn't.\n\nAs they went to their respective rooms, Megan asked Rachel in a voice loud enough so that he could hear, \"Is there something wrong with him? He has two of the most beautiful movie stars in Hollywood in his house and he hasn't tried to hit on either one of us.\"\n\nRachel and Chet both turned red as beets as Rachel muttered a distinct \"Megan, I am going to...\"\n\n\"Yeah, yeah; I'm still waiting for you to fulfill your last threat. Good night, bestie.\"\n\n\"Same to you. Oh...\" Rachel turned back and came to Chet and gave him a simple kiss on his lips and said \"Good night.\"\n\nAs she went toward the bedroom, Megan almost got in the last word, \"Honey, when we get home, I am giving you kissing lessons.\" Rachel went to bed with a red face. Goldie went to the doors and looked both ways and then pushed Rachel's door open and disappeared inside.\n\nThen both Megan and Chet heard Rachel yell, \"Megan, at least I am not sleeping alone tonight.\"\n\nMegan's head came out of the door in a flash. When she saw him standing there by the recliner, she figured it out and yelled back, \"I hope she has fleas.\"\n\nThat brought the evening to an anticlimactic end. All Chet could do was grin and settle into his recliner. His normal reaction would have been to reach for his laptop but since he had already sent his revisions to the publisher, he had nothing to work on. He reached for it anyway and began looking up places of interest in Montana and Idaho. He had never been there and thought that he might want to see what was there. He also fell asleep soon after he opened the computer.\n\nAs usual Chet woke early and encouraged Goldie to come take a walk with him. She rolled over and went back to sleep. He just shook his head, put on the coffee pot, and went out into the cool morning air. There was no place particular to go or anything that needed to be done, so he simply walked down the drive and walked along the road for awhile. When he returned home, Goldie was in the front yard and Rachel was sitting at the table with a cup of coffee.\n\n\"Good morning.\"\n\n\"Good morning to you.\" he replied.\n\n\"I was going to wait until tonight or tomorrow to give you an update but I think I will take care of that now, if you don't mind.\"\n\n\"Ok, what's up?\"\n\n\"I have made a deal with a distribution company to release the movie. They are eager and ready to go. We will be finished with the first rough edit in two weeks and depending on how it looks, we will go right on to a polish edit. The distribution company wants to hold the premier in time for it to be eligible for next year's awards. That means that the premier will be in about two months. We can still tweak it after that but the official premier needs to be then. Is that all right with you?\"\n\n\"I am fine with that but I am concerned if that is all right with you.\"\n\nShe held her breath and let it out slowly. \"Basically yes; I am totally comfortable with what we have done but when you start cutting and putting pieces together, little things can crop up. Many of those are easily resolved but sometimes, there are important things that show up. Those are the ones I am worried about.\"\n\n\"Then stop worrying. You do what you have to do to make the premier. You can add and refine it afterwards if needed. Hon....Rachel, you have done what I wanted and I am already proud of you.\" He took her hand and held it.\n\n\"Thanks Chet but honestly, I can't accept that compliment yet. After you have seen the product, then I can relax.\"\n\n\"She's told what is going on, didn't she?\" Megan asked from the doorway. Chet got up and poured her a coffee too.\n\nRachel replied, \"I didn't want to wait until tomorrow to tell him.\"\n\nMegan continued, \"Did you tell him that you are going to be working sixteen hours a day until this gets done?\"\n\n\"No.\"\n\n\"Did you tell him that the distributor wants perfection?'\n\n\"No.\"\n\n\"Dammit, Rachel, you have lost ten pounds during the shooting and will lose that much more during this part. I promise you, that if you start losing it, I am going to call Chet and tell him to get his ass out there and support you.\"\n\nRachel flared, \"No Megan, no. I have to do this myself. If you call him, that means I can't do it. Please?\"\n\nChet motioned to Megan to come to the table and he sat down next to Rachel and took her hand again.\n\n\"Rachel, I didn't think I was putting this kind of pressure on you. Forgive me. I just wanted for you to fulfill your dream. If you succeed, I succeed in my dream. It isn't worth your health, your sanity, or anything else that is important to you. You can't imagine how proud I feel right now. My dream was to get this book faithfully to the screen. The last two made a lot of money but honestly, I wouldn't pay to go see them. I wanted better for this one and now the sequel. You have already given me that. Now, I want you to finish the project but I want you to come out of it whole. Please, don't burn yourself out.\"\n\nRachel turned her tear stained eyes at him and said, \"Two months ago I would have taken your words to heart and done just that. But something happened, Chet. As I worked on this, the story became more and more real to me. I saw things in there that perhaps you didn't realize yourself. What I see is too important to just blow off. Now, I need to do this because I believe in this project and want it to be even better than your dream because it is now my dream.\"\n\n\"That I can understand. Rachel, do what you feel that you have to do. I will support you as long as you tell me that you will eat and take care of yourself.\"\n\nShe turned to Chet and buried her head in his shoulder and sobbed, \"I promise.\" \n\nHe looked at Megan who had a concerned look on her face. He mouthed to her \"we'll talk.\" She nodded.\n\nTen minutes later, Rachel rose and went to get dressed to meet the cameraman. Megan and Chet talked quietly until she left. Then they talked openly and he told Megan what he wanted to do. The look on her face was one of shock but she agreed to take care of the details. They both left to dress and prepare for the day. Goldie had found her bed and was down for her morning nap although she was alert and sensed that something important was going on with her people. At ten thirty, they got in the truck and drove to town.",
        "Rachel took charge and told Megan what they were going to do. Shortly before eleven, the lunch crowd began to filter in. When they had been seated and ordered, Rachel took the floor and explained what was going to happen and that their lunch was on her. Many people looked surprised but pleased at the prospect of a free lunch. She assured and reassured them that all they had to do was eat normally and not look toward her table and the camera. Then she came over and sat down with Megan. Surprisingly, she had requested Jeff's girl friend to be their waitress for the scene. In fact, it only took ten minutes to film it the first time and fifteen more the second and from the looks on both Megan and Rachel's faces, Chet knew that they were satisfied. When they finished, Rachel stood up and thanked everyone for their cooperation and handed out a brief flier on what they had just participated in. Then the four of them sat down and Jeff's girl friend took their orders for real. While they waited, several people came by and said hello to Rachel and several others came over to ask for Megan's autograph as she was the first movie star they had ever seen. Both women were gracious and talked easily with the local people. The locals left them alone when their meal was served.\n\nAfter lunch, they all drove to Chet's house to rest for awhile before they went to the Hall. Goldie was thrilled that there was yet another new person for her to take care of. She led the cameraman to the garden and showed him around. Being astute, he took his camera and filmed the walk as well as Goldie and the garden area. As it turned out, some of those shots made their way into the final movie as transition pieces in a couple of places. After that, Chet made a gold star and hung it over her bed because she was a movie star now; not that this made an ounce of difference to her lifestyle.\n\nThe scene at the Hall went fairly smoothly. They had to re-shoot it four times because something unexpected seemed to happen during the first three takes. When they finished, the cameraman packed his equipment and left to get home in time to sleep in his own bed. They stayed for another hour as various people stopped and introduced themselves to the Hollywood duo. Chet just sat and sipped a beer.\n\nWhen they left, the three sat in the front seat of the truck. Sitting in the middle, Rachel seemed satisfied while Megan was her usual chipper self and chattered all of the way home. Somehow, Rachel's head found its way to Chet's shoulder and he felt that she might have fallen asleep. That proved correct when they parked in front of the house. Megan said quietly, \"Will you carry her into the house? With these shots done, she has sort of melted down. She does that.\"\n\nChet nodded and gently lifted Rachel into his arms. She put her arms around his neck as he carried her to the door. Megan opened it and they both had to step aside as Goldie made a mad dash for the front yard. Then he carried her into the bedroom and laid her on the bed. Megan stood at the door watching and then asked, \"Are you going to undress her or leave her like that?\"\n\n\"I think that it would be better if you took care of the undressing. I'll wait in the living room.\"\n\n\"Coward.\" Chet blushed and kept on going.\n\nShe came back out to the living room several minutes later and asked, \"Chet, how long has it been since you have been with a woman?\"\n\nThe blush that had been receding turned back on with full power. \"A long time.\"\n\n\"Rachel has done without for six years. The two of you need to take a long vacation together after the premier.\"\n\n\"Megan, I'm not sure that she...\"\n\n\"Shut the fuck up. For a smart man, sometimes you are dumber than a stump. I'm going to bed and if you are smart, you will think up a romantic place to take her when this is done. Both of you need it more than you will admit.\"\n\nShe went into the second bedroom and he stood there with his mouth open and his eyes bugging out. Goldie reminded him that there was a third woman in the house by scratching at the door. When she came in, she took a look at Chet and then went and pushed the bedroom door open and went in to sleep at Rachel's feet. His first thought was, \"Damn, what a lucky dog!\" Then he settled into his recliner but try as he might, he couldn't shake the image of Rachel and himself somewhere alone and quiet making love.\n\nHe was roused awake in the morning by a kiss. The kiss was a long wet tongue hanging out of the mouth of a four legged blonde but it was still a kiss. When he opened his eyes, he saw Goldie's smiling face but behind her was Rachel's smiling face. He thought to himself, \"Damn she is beautiful in the morning with no makeup on and just a perfect smile directed at me.\"\n\n\"I assume that you carried me in last night. Sorry, I crashed.\"\n\n\"No problem; you were as light as a feather. And no, I wasn't the one who undressed you.\"\n\nRachel grinned and then ruffled Goldie's head. \"Thank you Goldie; your boyfriend here is a gentleman but also a coward.\" Goldie panted happily and then turned toward the door to be let out. A dog's life is so simple; they don't worry about relationships or propriety or things like that. If they like someone, they just like someone. What could be simpler? When Chet turned back to Rachel, she was still smiling at him.\n\n\"What?\" He asked in his least stupid tone of voice.\n\n\"You are so funny; not in a haw-haw way but in a cute and lovable way.\"\n\n\"Maybe I ought to come over there and...\"\n\n\"What's stopping you?\" He crossed to her and took her in his arms. His intention had been to kiss her with full blown passion but the moment his arms went around her, he just gently pulled her to him and held her like she belonged in his arms and against his chest. \n\nHe was just lovingly holding Rachel when Megan's voice interrupted them. \"Coward. What does a girl have to do to get a cup of coffee around this place?\"\n\nHe started to pull away to get her coffee but Rachel held on and said, \"Pour one yourself, bitch. He isn't your servant.\"\n\n\"Well, if you won't take care of him, I might just make him my own personal servant.\"\n\n\"Not a chance, girly.\" He felt like Rachel was going to add something else but she didn't. He wanted to believe that there was something else but was afraid to let himself acknowledge it. So he simply went and poured Megan a cup of coffee and refilled Rachel's and his cups. Megan never looked at him but her eyes were fixed on Rachel. Rachel was already deep in her second cup of coffee.\n\n\"Ok, ladies, what is the plan for today?\" The change of subject was a good move although it left a large unresolved boulder sitting in the middle of the living room and kitchen.\n\nRachel finally spoke, \"We have a flight at two this afternoon.\"\n\n\"So you need to leave before noon.\" Chet said factually rather than as a question.\n\nRachel relied in a glum tone, \"Yes.\"\n\nMegan finally looked away from Rachel and focused on him. \"Chet, the premier will be in two months in Los Angeles. You are going to be there, aren't you?\"\n\n\"Yes, I have promised both of you that I would be there and I will. I would prefer to be there as Chet McAdams but if you need me to be someone else, let me know.\"\n\nMegan continued, \"I suspect that Chet McAdams is who needs to be there but understand that you will be with Megan Mallory and Jillian Bannister. Rachel Arrington doesn't do red carpets and interviews.\" Rachel just sat and inspected the surface of her coffee but said nothing.\n\n\"Fine, I'll buy a new pair of jeans and boots for the occasion.\"\n\nMegan snorted with laughter. \"I'm going to get Goldie to show me around again. Rachel! Get your nose out of your coffee cup. You have things to ask Chet and you have less than two hours to do it.\" She went out the front door and he heard Goldie run up to her.\n\nChet stood there feeling stupid and finally held out his hand and said, \"Let's go take a walk.\" \n\nFinally she looked up at him and smiled, \"I would like that.\" She took his hand and stood up. They went outside and up the drive toward the road.\n\n\"Rachel, tell me about why this movie is so important to you. I have an idea but I want to hear it from you.\"\n\n\"When I was young, I wanted to be an actress. I was very lucky. I got a couple of small parts very quickly after I started trying and then I got cast in that television series. It was both a good thing and a bad thing. I got to work a lot with a great group of people like Megan and we really learned how to interact with others on camera. But the fame thing started getting old real quick. Every time I went outside there was a cameraman trying to take my picture or interviewers trying to talk to me. I didn't have a place to be me. That is when I started being two people. I bought a small house away where I could be Rachel and a big show place where I could be Jillian. That gave me balance. The other bad thing was that I got labeled as a sexy, romantic comedienne. I got offered a lot of parts in light comedies and made a good deal of money. But I also didn't really get any respect for my work.\" She fell silent.\n\n\"I know most of that. Then this novel came along and you saw it as a vehicle to do something serious and get some respect.\" She nodded. Chet squeezed her hand. \"What if it doesn't do what you want?\"\n\nShe spun and looked up at him. \"It will; trust me. Megan will be nominated for a lot of awards and has a good chance of winning.\"\n\n\"You knew that and it pissed you off when I suggested that she was right for the roll.\" \n\nShe nodded. \"I wanted that role so bad that I could taste it. I was hurt when you said to cast her in the role. But when I sat down and read the script again with the eye of a producer and director and I saw that you were right. Megan is perfect for Maggie. So this will be my shot for respect as a producer and director.\"\n\n\"I hope you like the sequel as well. You should get the respect you want for Katie.\"\n\n\"You said that before but I don't know anything about the sequel. When will it be out?\"\n\n\"It will be on the bookshelves about the same time as the premier; but I have a copy of the final draft for both you and Megan.\"\n\n\"I don't know if I will read it until after I finish the edit for this one.\"\n\n\"I understand.\"\n\n\"Do I have a shot to produce and direct it too?\"\n\n\"No, I want you to spend all of your time focusing on Katie.\"\n\n\"Do you know yet who is going to produce and direct it?\"\n\n\"Yes; I think you will be pleased.\"\n\n\"Will you tell me who?\"\n\n\"Not now but you will know at the premier.\"\n\nShe looked down at the ground, \"You said that this might be your last work for awhile. Why?\"\n\n\"I kind of feel the need for a break. I have been writing continuously for ten years and I feel the need to do something different or to try writing something else; something new.\"\n\n\"Oh; I sort of feel the same way. I just don't know what I want to do yet.\"\n\nThey continued walking and talking. They got close to talking personally but never quite crossed the line between friendly talk and personal desire. Chet's heart was surprisingly calm. He was talking about baking bread and going on a road trip with one of the most beautiful and sexy stars in Hollywood. But she wasn't a Hollywood star to him; she was Rachel, the woman who loved going to the neighbors for a cookout and going to the market on Saturday. His heart was at peace but his mind was in conflict. \n\nThey were saved by Megan and Goldie as they came up behind and reminded them of the reality of the clock. They both sighed and the four of them turned back and walked toward the house with Goldie leading the way. When they got back to the house, Rachel went to the bedroom and began packing. Chet followed her in and handed her a large envelope. \"For when you have some down time.\" She smiled at him and then kissed him like they had kissed before the movie deal happened. He was floating as he went back out to give Megan her envelope.\n\n\"What's this?\" She asked.\n\n\"It is the final draft of the sequel. Look at it and see if you could direct it.\"\n\nShe looked at him with hard eyes. To the best of his knowledge, she had never directed anything but one episode of their television series. \"Are you serious?\"\n\n\"Just look at it and think about it. We'll talk.\"\n\n\"You're damn right we will talk. Does Rachel know?\"\n\n\"Not now; if you say yes, I will tell her then.\"\n\n\"If I say yes, I want to be the one to tell her.\"\n\n\"Fine.\"\n\n\"Do you still want to do what we talked about yesterday for the next month or so?\"\n\n\"Yes.\"\n\n\"I'll call you this week when I get the details worked out.\"\n\n\"Thanks, Megan. I would really appreciate that.\"\n\nRachel came out with her bag and set it next to Megan's. None of them were eager to say goodbye and end the weekend but it was necessary. Finally, he loaded their bags and Megan got in the driver's seat after Chet gave her a hug and kiss. Then he went to Rachel who was still standing next to the passenger door. For some reason, it just felt right to take her totally in his arms and press his lips firmly on her lips. This kiss was unique and special; it was the first time he just let himself go and kissed her from his heart. It didn't last a long time but it was long enough for him to get a little scared. He told himself, \"You just don't take a Hollywood star in your arms and kiss her with passion. That is a fantasy; not a reality.\" But that is what he was doing with Rachel McAdams/Jillian Bannister. He was kissing the object of every man's dreams. He finally broke the kiss and just stared into her eyes which were staring back into his. But these weren't Jillian Bannister's eyes he was looking at; they were Rachel Arrington's eyes and that made him relax.\n\nFinally, she leaned forward again and kissed him tenderly and said, \"I liked that. Maybe you can give me another one after the premier.\"\n\n\"I'd like that too.\" Then she broke eye contact with him and got in the passenger seat. After a few words with Megan, they slowly drove down the driveway and once again Chet felt very alone as they left. The difference was that this time, he knew what he was going to do and Goldie and he needed to get started closing things down.\n\nThey spent a week taking care of business and making arrangements with neighbors to take care of things. On the following Wednesday, Megan e-mailed him the details and Goldie and he loaded the travel trailer with clothes and other things and the bed of the truck with several boxes that he felt he would need. Then they hit the road. Saturday morning they met Megan at the house she had arranged for him to use. Before dark, he had his things inside and Goldie had explored the back yard and found it satisfactory. Sunday, he went to the farmers market and bought a load of things to work with for the week.\n\nMonday morning, he started early and had a pan of lasagna ready along with a large salad by noon. Fifteen minutes later, he delivered it to the small studio a couple of miles away. His plan with Megan's help was to make sure that Rachel had at least one or two decent meals each day while working on the edit. Megan had arranged with the studio to just accept Chet's deliveries and put them in the small kitchen for everyone working to have access to. At most, there would be ten people in the building but mostly there would only be five or six. The receptionist called him every morning and told him how many people were expected for the day and he made the meal for that many plus two.\n\nThe first week went quickly and Chet enjoyed preparing the meals. The first weekend, only Rachel and two technicians were at work and he made better meals including ribs one day and grilled fish the next. The second weekend was a holiday and Megan and Rachel went to a beach in Mexico where Megan had a condo. Goldie and Chet took a road trip up the coast to San Francisco and spent the nights on several beaches. \n\nThe next several weeks passed by quickly. Chet was actually enjoying what he was doing and exploring some of the unique areas of Los Angeles. He wouldn't want to live in the city but there were some fun places for a small town boy like him. He heard from Megan a couple of times a week with updates but hadn't heard from Rachel. He knew that she was busy and was satisfied with his anonymous connection with her.\n\nThe last week before the premier, things slowed down tremendously. They released the film to make a print for the premier and Rachel relaxed. She finally called him on Monday before the scheduled screening on Friday.\n\n\"Hi.\"\n\n\"Hi to you. How is it going?\"\n\n\"I am done. The film is in the can and they are getting it ready for the screening. I expect that they will cut it some before the final release but I am satisfied with what we have. I hope that you will be pleased.\"\n\n\"I am looking forward to it. What is the plan for Friday?\"\n\n\"Chet, I don't want to see you until after the screening. I am afraid to talk to you until you have seen it. Is that all right?\"\n\n\"Of course. I'll just watch it and then meet up with you wherever you want to meet.\"\n\n\"Before and right after I am going to be Jillian and I will want to see you as Rachel; so maybe at a restaurant after I change clothes?\"\n\n\"Hey, this is your night; we do it by your rules.\"\n\n\"Thank you.\" She paused and then said in a very soft voice, \"Chet, I have missed seeing and talking to you. The only things that have kept me going have been wanting to do this right and Megan's support. She even found this caterer to fix lunches for us at the studio. They reminded me of your cooking.\" She took a deep breath and continued. \"When this is over, would you...I mean would you consider going away with me for awhile so I can unwind?\"\n\n\"I would love to.\"\n\n\"Really!\" He could hear the excitement in her voice. She had been afraid that he would say no. \"Where would you like to go? I'll make the arrangements.\"\n\n\"Why don't you do what you need to do and we will talk about it after the screening? I have a couple of places in mind that I think you might like.\"\n\nThere was silence on the other end of the line for a moment. \"Ok but can we go somewhere where I can be Rachel?\"\n\n\"I only want to go with Rachel; leave Jillian in the closet.\"\n\n\"Oh thank you. I hoped that is what you were thinking. I've got to go now. Megan is going to call you with the details about Friday.\"\n\n\"All right; I'll be waiting for her call. Rachel...\" Now it was his turn to pause. \"Rachel, I have missed you more than I can say. There are things I want... no; I need to say to you but they need to wait until we are alone.\"\n\n\"Chet, once Friday night is over, you can have all of the alone time you want with me.\" Neither of them responded to what had been said but they both knew that there was a lot more to say when the time came. They hung up and now he just had to survive five more days.\n\nMegan called the next morning and laid out the plan for Friday. There were a few unusual things but he accepted them. The main thing was that a young woman would pick him up and take him to the showing. She knew her way around and would stay with him until after the showing. Chet rented a tux for the night. Dressing up wasn't his favorite thing to do but people told him that he looked good when he dressed formally. So at Megan's request, he would wear a monkey suit.\n\nFriday arrived and he got more and more nervous as he dressed for the evening. His escort was to pick him up at six thirty to arrive at the theater at seven. They would enter by a side door and wait in one of the side rooms until the screening was about to start. The good news was that there would be hors de oeuvres and wine. The bad news was that the snacks were at best mediocre. His escort said that they were typical of most of these affairs.\n\nShe escorted him into the theater shortly before the big name stars made their entrance and found their seats at a table on the left side but with a clear view of the screen. Shortly before seven, the red carpet crowd began making their way in and settling into their seats. He recognized a few of the people but would be hard pressed to put names on them. Finally, the cast and crew of the movie made their appearance with Rachel and Megan the last two to enter. From that moment on, he totally understood the love affair people had with Jillian Bannister. She was absolutely radiant and glowing in her sequined gown. Megan was only a slight step behind in the glamour category and that probably had more to do with her darker hair versus the dark blonde tresses that Jillian wore. They took their seats at the center table and took a glass of wine as the room darkened and the music began.",
        "Almost two hours later, Chet stood with the escort and wiped his eyes with the napkin that he had been squeezing. He don't know or care what anyone else in the room thought about the film, Rachel had nailed his vision as if she had read his mind while he was writing it. As his escort lead him to a room on the far side of the main room, the audience stood and began a long and loud ovation that rung in everyone's ears. The escort took him to a table in the back of the new room and sat him down and told him that Megan would come to get him when she was ready for him. He nodded and thanked her. She smiled and disappeared with the grace of a ballerina.\n\nChet didn't have to wait long as others began filing into the room where a staff of waiters was waiting with trays of champagne and other drinks. Somewhere in the throng, he saw Megan and then Rachel enter. Rachel was more or less forced to the center of the room where she was surrounded while Megan was able to work the room until she was standing next to him. Her face was beaming.\n\n\"She did good, didn't she?\"\n\n\"Both of you were marvelous; I am speechless.\"\n\n\"Well find your voice because you have some questions to answer, asshole.\"\n\n\"Asshole! I'll have you know that I am personal friends with both the director and the star of this thing.\"\n\n\"The star of this thing won't be your friend until you answer her questions. Now come with me and pretend that you are having fun.\" He stood and took her arm as she led him on a circuitous journey to the center of the room. When they stopped, Megan was standing next to Rachel/Jillian and slipped her arm around her waist.\n\n\"Oh here she is; where did you go...\" Rachel's eyes met Chet's and she stopped. Megan slipped his hand into Rachel's and then moved forward and began talking to the crowd of reporters and others. She worked the room like a professional while Rachel and Chet looked at each other as if they were the only people on the planet. Slowly, he pulled her gently toward him until his arm was around her waist and her body was touching his. A few of the gathered throng noticed a tall guy in a tuxedo standing close to Jillian but otherwise basically ignored them.\n\nSlowly, she pulled him down until her mouth was near his ear. \"Chet, I have done the best that I can possibly do. Do you approve?\" These last words were filled with both tension and a touch of fear.\n\nHe smiled at her and then whispered in her ear, \"You could have not done a better job in any way. I had tears in my eyes; it was like you had read my mind. You did everything I wanted and more.\" Then he kissed her cheek. When he pulled back, her face was beaming and there were a couple of tears in her eyes.\n\nSomehow, Megan got the throng to focus on another part of the room and the three of them were left standing in the middle but alone. Megan grabbed three glasses of champagne and then turned to the two and said, \"Rachel, have you told him?\"\n\n\"Yes, I did.\"\n\n\"Is he pleased with your work?\"\n\n\"Yes, I think that he is satisfied.\"\n\n\"Chet, are you ready to answer my questions?\"\n\nHe took a deep breath and said, \"Yes, Megan, I am scared but I promised.\"\n\n\"Good. Now what do you think of Rachel?\" Rachel looked startled at the question.\n\nChet wasn't sure of who to look at but he chose to look at Rachel. \"I love her.\" Rachel looked even more startled as her mouth hung open.\n\nMegan continued, \"Now for the hard one; what are you going to do about it?\" Rachel gasped and tried to turn to Megan. Megan turned her back towards Chet.\n\nThis time, Chet looked at Megan and said, \"I want to ask her to marry me.\"\n\n\"So why the hell are you looking at me; look at her and ask her, dumbass.\"\n\nHe turned to Rachel and she already had tears in her eyes. \"Rachel, um...crap...Rachel, I fell in love with you that first weekend and you have been constantly in my mind ever since. I...I can't imagine going on without you in my life. Will you marry me?\"\n\nThe tears continued to run down her face as all she could do was nod. Then she buried her face in his chest. All he could think of was how much the rental company was going to charge him to clean the shirt and jacket. But then, he really didn't care. Rachel was in his arms and she was nodding that she accepted his proposal.\n\nFinally, Megan said, \"The vultures are returning. Rachel, say yes and then we have to make our exit.\"\n\nRachel understood that and looked up at him and said, \"Absolutely yes. Now, you made me look like a wreck so you are going to have to walk out with me on your arm and Megan on the other one, asshole.\"\n\n\"Asshole, I'll have you know that only my wife has the right to call me an asshole.\"\n\n\"Fine, when can we get married?\"\n\nMegan replied, \"The wedding is set for Tuesday at your parent's lake house. Now put on your plastic smile and let's make America happy.\"\n\nAs they started moving towards the door, the reporters and photographers started crowding closer and closer. Rachel on one arm and Megan on the other led Chet out onto the red carpet and he got his first close up look at what mayhem looks like in person. He just walked along escorting the two stars as if he knew what he was doing. People were throwing questions at them from left and right. Someone threw out the question, \"Who is that guy?\"\n\nMegan replied, \"Wouldn't you like to know?\" and kept on walking toward the limo waiting at the curb. It was probably only one hundred feet from the theater door to the car but it felt like it was over a hundred yards. The driver opened the door and Rachel slipped inside followed by Megan. Finally, Chet stepped inside and found himself being wrapped in Rachel's arms before the door was even closed. There was only one thing to do and that was to kiss her. \n\nHe didn't know how long the kiss lasted but he never wanted it to end. Unfortunately, it did and Rachel looked at Megan and asked in a firm voice, \"What do you mean Tuesday? We don't have a license and he has to live here for six weeks and he doesn't have a ring and we haven't planned a honeymoon...\"\n\n\"Shut up, slut. The wedding is Tuesday at your parent's lake house. Here is the marriage license application; both of you sign it. My dear lawyer husband will file it tomorrow morning and the license will be issued Tuesday morning. He has lived here for two months. If your asshole boyfriend doesn't have a ring yet, the two of you can get one Monday morning. As for a honeymoon, that is up to you but you have to be back here and ready to work in two months.\"\n\n\"Wait just a damn minute. What do you mean he has been living here for two months? Why didn't you tell me?\" Then she turned to Chet. \"Why didn't you tell me, asshole?\"\n\n\"You can't call me that until after Tuesday.\"\n\n\"Hey slut, who do you think has been cooking your lunch every day for the past two months? I told him that you wouldn't eat while you were editing this and he insisted on hiding a way and preparing your lunch every day. He wants you healthy for the honeymoon. I am pretty sure that he has plans for you and you need your energy.\"\n\nThen Rachel asked, \"And why do I have to be back in two months? I want to get away for a long time.\"\n\nMegan grinned and said, \"Because in two months, we start shooting the sequel and I am going to work your ass off just like you did me.\"\n\nAll Rachel could do was sputter and mutter unintelligible sounds. Finally, she stopped and turned to Chet and looked him square in the eye. \"All right, smart ass, what about a ring and this honeymoon thing. You said that we could go away for awhile; so what is your plan? I've got two months.\"\n\n\"As for the ring, I have one I'd like you to wear but it isn't huge or spectacular or anything like that. It is just important to me.\"\n\nShe stuck out her hand, \"Put it on me. I don't care if it is a cigar band.\" I took the ring from my pocket and slipped it on her finger. It fit like it was made for her. She looked at it and smiled, \"It is beautiful and I don't like big flash jewelry. Why is it special to you?\"\n\n\"It was my mother's engagement ring and the wedding band that goes with it slips under this arch.\"\n\nShe started crying, \"Oh it is wonderful. I will wear it proudly and forever.\" She kissed him tenderly.\n\nThe limo pulled up to the house where Chet had been staying. Megan said, \"Ok you two; out. I'm going to the release party and make up stories about why you aren't there.\"\n\n\"Where are we?\" Rachel asked.\n\nMegan replied, \"You know damn well where this is and you better get inside because it has been almost four hours since Goldie has been outside. Unless you want to spend your first night together cleaning up dog pee, I'd go take care of that first.\"\n\nThe driver opened the door and Chet stepped out and held his hand out for Rachel's. She stepped out and broke into a smile. Then the limo was gone and they were left holding hands in the driveway.\n\nRachel asked, \"Do you know what this house is?\"\n\n\"No; Megan just said that she borrowed this from a friend for a couple of months and to not make too much of a mess.\"\n\n\"Honey, this is my Rachel house. This is where I come to get away from all of the Hollywood crap. Let's go let Goldie out.\"\n\nGoldie was beside herself. She ran outside and then came back to get Rachel to scratch her. Then she ran out and took care of her business before she came back for a good Rachel scratch. It was while she was out that Rachel noticed the travel trailer in the driveway.\n\nShe grinned and asked, \"Is that for our honey moon?\"\n\n\"My intention was for us to take a week or two and go on the road to see those places that you have always wanted to see. If that is a good honeymoon for you, then that will be our honeymoon.\"\n\n\"That would be a perfect honeymoon for me. Are...are you sure that you are ready to get married to me this soon?\"\n\n\"The last three times you have left, I felt hollowness inside and I cried each time. I am more than ready for you to be in the middle of my life. I know that we both will have to make adjustments but I am ready to start all over again with you as the centerpiece of my life. So yes, as long as you are ready; I am ready.\"\n\n\"I always felt funny letting myself thinking about a life with you. I am a big star and all that crap but all I want is to be a wife and lover to my man at our home in Texas.\"\n\n\"But you have this life here and...\"\n\n\"That is why God invented airplanes. I want to live with you at the farm. When I want to work, I or we can stay here at Rachel's house. If we need to do a big production, we can use Jillian's house or we can get rid of it. All I want is to be happy with you.\" They kissed again and for the umpteenth time, he told himself that this was the perfect woman for him. Now he just hoped that he was the perfect man for her.\n\nGoldie finished her outdoor explorations and came to lead them into the house together for the first time as a couple. He had been staying in the guest bedroom since the master bedroom was obviously a woman's room. Rachel led him to the master bedroom and smiled nervously as she said, \"My love, will you take this dress off of me please?\"\n\nHe smiled at her and just as nervously unclipped and unzipped the dress until it slipped to the floor. She actually acted very nervous as she covered her breasts with her arms since she was naked except for her panties and hose.\n\n\"Chet, I want you to know that you are the first man to see or be with me like this in over six years. I'm nervous and more than a little scared. I want to be a perfect lover for you, but I am really out of practice. Can you be patient with me?\"\n\n\"Rachel, I have shut myself off from everyone for ten years until I met you. I think that we both need to re-learn togetherness. So I need you to be patient with me too.\"\n\n\"Then the first thing you need to learn is that everything you have read or know about me is probably false. Most of the nude scenes and pictures that are around are of a body double, not the real me. It is part of my contracts that I don't do nude scenes. What you see now is the real me and not many people have ever seen the real thing.\" She dropped her arms and slowly peeled off her panties and turned slowly. \"This is what you are getting.\"\n\nChet pulled off the tux jacket and shirt and dropped his pants to the floor along with his underpants. \"This is what you are getting Rachel; scars, flaws, and everything else good or bad.\"\n\nShe smiled shyly, \"I don't see anything but good things. \" They looked at each other and then she was in his arms and they were kissing like they were high school kids. One thing led to another and they ended up on her king sized bed and slowly found their way into the most natural position for a man and woman to share their love with each other. In spite of their mutual lack of practice, both of them responded to their actions as long lost memories came flooding back. It would be unfair to try to recount the details of their first sexual encounter but suffice it to say that by the time they fell asleep at four in the morning, neither of them felt neglected at all. They slept in each other's arms like they were made for each other. Actually, everything became natural sometime early in the morning when Goldie found her way onto the bed and lay across both of their feet.\n\nOn Saturday, they never left the house. They made love three more times; the first time in bed and the others were where the mood struck them. Megan called and she and her husband came over for dinner and to go over the plans for the wedding. She also brought over the news that the reviews from the movie were generally positive and that the distribution company was very happy. Her husband was the attorney for the distributor and said that they planned on a big campaign to get the film on the awards list. It reminded Chet that quality wasn't what earned awards; it was politics and image. So he quit worrying about the future of the film. \n\nThe wedding was going to be small and intimate which pleased both of them. On Sunday, Megan stole Rachel away to buy a wedding dress. Rachel told Chet that under threat of death, he could only wear a pair of his new jeans and a sport shirt. That made him wonder what she was going to be wearing for the wedding but as a dutiful husband to be, he wasn't going to start an argument with his wife-to-be over what he was going to wear.\n\nOn Monday, they loaded the trailer with their things and locked up the house as Rachel led them out of town towards the north and the mountains. Four hours later after a long pit stop for Goldie to relieve herself and Rachel and Chet to express their love for each other again, they pulled up to a log cabin on the shore of a mountain lake and Chet met Rachel's parents for the first time.\n\nRachel's mother was very warm and friendly but he felt a certain reserve on the part of her father. He began to loosen up as they sat on the back deck and had a margarita while the sun was setting. Finally, he asked, \"What do you do, Chet?\"\n\n\"I have a small farm where I grow things for market and do other projects.\" That was his standard answer to the standard question. Chet wasn't sure what he was fishing for.\n\nThen Rachel said, \"Daddy, stop the protective father thing. Chet is also known as Oliver Franklin but he doesn't tell people that very often. He isn't after my money or career opportunities.\" That pretty well nailed his concern as he looked at Chet and smiled and the tension was gone.\n\n\"Sorry Chet; I have become very protective of Rachel because...well there are a lot of gold diggers in her business.\" Then he and Chet quickly found a positive relationship. Rachel beamed as the they continued to hold hands. By the time Rachel and Chet along with Goldie retired, he was sure that his new in-laws were very supportive of him and their wedding. Actually, Goldie had mixed feelings about coming to bed with them. Rachel's mother proved to be a dog's best friend as she always found a tasty tidbit in the refrigerator for a starving dog.\n\nMegan and her husband as well as four other of Rachel's close friends appeared Tuesday morning by helicopter. The minister arrived at noon and they were man and wife when everyone sat down to a marvelous lunch prepared by Rachael's mother. The wedding cake was made at a local bakery and featured the bride and groom in jeans and western shirts. The reality was that Chet was in Jeans and shirt but Rachael was in a western skirt and filly silk blouse. They looked very much like a couple that was going dancing at the Hall on any Saturday night. The pictures from that day show two people deliriously happy in their new state of existence and their attire was seldom noticed.\n\nThat night in their room, Chet smiled at his new wife and said, \"I didn't get anything exotic for you as a wedding present but I prepared this for you.\" He handed her a notebook with maps, photos, and notes of places all across the western half of the United States. \"We have two months for a honeymoon. Pick the places that you want to go to most.\"\n\nShe thumbed through the notebook and pointed to four places and then smiled at him. \"Chet, I have been looking for you all of my life. My honeymoon will be in making a home and life with you. Let's stop at these four places on the way home. I want to be there and have the neighbors over for a cookout.\"\n\nChet smiled and said, \"Spoken like the woman I have been looking for all of my life. We can leave in the morning.\"\n\n\"Yes we can. We will go to all of the other places later. Now come here; I haven't had a kiss since the ceremony.\"\n\nFor two people who once had everything, they now had it all and they lived the rest of their lives cherishing every moment and event even the ones on the red carpet."
    ],
    "authorname": "TexasFarmBoy",
    "tags": [
        "romance"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-farmer-and-the-actress"
}