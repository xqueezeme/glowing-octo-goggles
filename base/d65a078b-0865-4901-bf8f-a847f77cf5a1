{
    "title": "The Society of Guardians Ch. 02",
    "pages": [
        "Holy shit! It had been a day. Yesterday had started out as a normal day. So, I'd had a nightmare. It certainly wouldn't have been his first. Even one as freaky as that! Dreaming of being in a tomb with some sort of spirit being pissed off about some grave robbers wouldn't be completely bizarre for my level of geek-dom. I had dreamed of numerous crazy things in the past... maybe not quite to this level, but close. The strange gale of wind on the bus continued the weirdness, but the sudden discovery of Arman Sayyad, the long dead spirit, that was living in my head was a little disturbing. His insistence that I fight to contain some big, bad nastiness was even worse.\n\nBut the powers I'd been given certainly had their perks!\n\nI glanced over at the gorgeous blonde sprawled out on my bed. Her naked body drenched with sweat and cum, but her face still smiling in contentment.\n\nI just shook my head in amazement. I might have given her the best night of her life, but it was definitely mine too. Incredible sex on top of cucking her lame, now ex-, boyfriend. I was really going to have a tough time topping that night...\n\n* * * * *\n\n\"My pleasure, Master!\" She grinned at me after I came in her mouth and on her face from her spectacular blow job. Globs of my cum dripped from her nose and cheek as she stroked my hard cock. \"What do you want next? My pussy or my ass?\"\n\nShe was kneeling on the floor in front of me with her tube dress pulled up around her hips leaving her thong covered hips on display.\n\nHer boyfriend, Derek, was sitting on the couch staring wide-eyed at the girl he'd been with for the past few years. His eyes were filled with tears as he watched us consummate our relationship... if it could be called that at this point. We were just enjoying the hell out of each other right now!\n\n\"So, Derek, bet you wish you hadn't cheated on her, do you?\"\n\n\"Yeah,\" he answered glumly.\n\nOne of the powers Arman had given me made people respond truthfully to my questions. It made conversations with habitual liars a little interesting.\n\n\"So how long have you been cheating on her?\"\n\n\"About two years.\" He answered quickly, then stared at me in horror. He then looked over at Tracy as her head whipped around.\n\n\"YOU FUCKER!\" She screamed. \"I did feel bad about this for a moment, but now...\" She stood up, whipped off her dress, dropped her thong, then looked at me lustily, \"Take me!\" She got up, laid down on the coffee table and spread her legs wide. \"Pick a hole, I don't care which one.\"\n\nI certainly wasn't going to be turning down an offer like that!\n\nI knelt between her legs, lined my huge cock up with her pussy and slowly pushed in. After I slipped in a few inches she leaned forward, reached her hands around to grab my ass as her long legs wrapped around my waist, her heels pressed into my back. She leveled a lust filled glare at me, \"FUCK ME!\" She dug her nails into my ass while clenching her legs about me driving my cock deep into her drenched quim. \"If I wanted soft and slow, I'd fuck useless over there.\" She stared me in the eye, \"I want my Master to claim my pussy as his own!\" Her lips curled into a sneer, \"FUCKING PUMMLE ME!\"\n\nI do aim to please.\n\nHowever, I wasn't quite used to the new powers Arman had given me. My first few powerful thrusts made her eyes bulge and her face pale. The agony evident on her face, but she didn't even move to stop me.\n\nI toned it down a little the next few thrusts and the color returned to her face along with a blissful grin.\n\nMy grin was a little more devilish!\n\nNow that I had the level of strength down. I ramped up the speed... a lot!\n\n\"YES! YES! FUCK MEEEE!\" She screamed. \"MAAASTEEEERR!\"\n\nI hammered away at her for what seemed like ages. She clung to me for a little while, but soon her arms got weak, and she fell back on the table. Her legs that had been trying to egg me on were flailing around on either side of me as my hips powered into her.\n\n\"OH... MY... GAWD!! I'm CUUMM-...\" Her voice failed her as her legs spasmed to either side and her hands mauled her breasts. Her pussy clenched and a spray of her nectar went up my chest. A few more spurts covered our joining making squishy sounds as I continued pounding away.\n\nI grabbed her legs and pushed them to her shoulders as I stood over her, changing the angle of our coupling.\n\nHer eyes grew even more heated as her hands reach up around my neck.\n\n\"YES! YES! GIVE IT TO ME!!\" She yelled, her eyes rolling back in her head in ecstasy.\n\nI leaned down and did just that, pummeling her harder than even. Her screams grew in volume until they reached a crescendo and she came yet again.\n\n\"THANK YOU, MASTER! THANK YOU!\"\n\nHer eyes focused on me again. Her arms pulled herself up so she could lock her lips to mine. Our tongues dueled with each other as her hands clutched my head.\n\n\"Thank you for claiming me, Master! I'm yours!\"\n\nI never even dreamed that I'd ever be with a woman as gorgeous as Tracy. Much less have her declare herself to be 'mine'. Seeing her laid out under me almost made me explode into her... but I had something else in mind.\n\nI gave her another passionate kiss before pulling away from her and sliding my cock out of her swollen cunt. I slowly made my way down her body. Still panting heavily from her last orgasm, she glanced up at her suddenly empty pussy. Her eyes widened realizing my intentions.\n\n\"OH, Master! Thank You!\"\n\nShe moaned as my lips found her breasts. I licked, sucked, nibbled and bit all around her breasts before making my way to her engorged nipples. Her large brown nipples stood in stark contrast to her pale white skin. They seemed large, sticking out nearly an inch from her breasts and judging by her responses, they were extremely sensitive too.\n\nI kept my eyes on her face as I feasted on her. I loved seeing her different reactions. A lick gets a coo. A suck gets a moan. A nibble? A hearty groan. A pinch? An eye-popping gasp. A bite? A head-thrown-back, \"YES!\". It was like I was playing a crazy synthesizer with her sounds keyed into different notes. I had her screaming, \"YES! YES! YES!\" and I could feel she was getting close to an orgasm.\n\nTime to switch it up!\n\nI forced myself from her glorious breasts and made my way south. She reached her hands up to her nipples trying to push herself over the edge.\n\n\"At-ah!\" I said, slapping her hands away, \"Those are mine! You're not allowed to touch unless I give you permission.\"\n\nShe pulled her hands away with a frustrated groan.\n\n\"Don't worry. Soon enough!\" I was dying to get a taste of her, so I wasn't going to be teasing her. I made my way between her legs. My mouth immediately got busy feasting on her dripping vaginal lips. I lapped up all the wetness I could, savoring every drop. Her moans escalated at my ministrations. I could tell she was close, yet again.\n\nRather than edging her some more, I reached underneath her, gave the plug lodged in her ass a hard pull, stretching her sphincter while my teeth found her clit, nibbling it feverishly.\n\n\"OH, FUCK! YEEESSS!!\" She exploded in another earth-shattering orgasm.\n\nI continued nibbling as she sprayed her cream on my chin, extending her orgasm, drawing it out for a few minutes. Her juices squirted onto my chin a few more times as the aftershocks worked through her. I glanced up to see her pinch and pull on her nipples as she came down from her orgasm.\n\nI smirked. I might have to punish her for playing with those!\n\nJust over her, I could see Derek sitting on the couch, his dick in his hand, stroking it, watching his ex-girlfriend be taken right in front of him. I smirked into Tracy's pussy watching his eyes take it all in.\n\nPoor, fucking idiot. To think this woman was willing to support him and take care of him. All he had to do was sit at home and take care of the house, but he was too dense to realize he had such an awesome woman and he just had to go fuck someone else.\n\nBastard didn't even deserve to get off watching us!\n\n\"HEY! Did I say you could jack off over there!\" I stood up and glared at him. I heard a grumble behind me, but I ignored it.\n\nHis eyes got huge as his face paled. He yanked his hand away from his cock fearfully.\n\n\"Damn right, you little weasel. Leave your tiny little pecker alone. You don't deserve to jerk off to this.\" I was working the plug in Tracy's ass the whole time I was berating her boyfriend. My other hand was lightly stroking her sensitive little nub. She was panting and groaning about to explode again. My embarrassing of her ex-boyfriend was just pushing her further along. \"Watch your girlfriend cum as she gets her virgin ass ready for my big cock.\"\n\nI dove down and licked her from taint to clit. Dragging my tongue slowly through her torrid trench, I savored every nook and cranny of her puffy pussy lips. I went back and forth a few times thoroughly licking her, cleaning those tasty juices off her folds, before delving deep into her vagina to find more. All the while I was pumping that plug in and out of her ass, being sure to fully pop it out before pushing it back in. Stretching her ass as much as it could.\n\n\"FUCK! YES!!!\" Tracy screamed in ecstasy as she came again, her walls clenching onto my tongue as I worked to plunder her depths. Her pussy sprayed its nectar right down my throat causing me to choke a little before I guzzled it down. I kept working on her as her spasms slowly subsided.\n\nOnce she was able to breath normally, I raised myself over her, grinning down at her as I continued to work the plug in her ass.\n\nI smirked. \"Tracy, what do you want right now?\"\n\n\"I want you to fuck my ass! Fuck it hard in front of my useless ex-boyfriend... Master!\" Her eyes burned with lust as she stared at me.\n\nI stepped back and sat in the loveseat facing the couch. I leered at her and motioned for her to come to me.\n\nShe smiled lecherously at me as she dropped to her knees and crawled towards me. Never even looking back at Derek. His eyes were riveted to her swaying ass... or maybe it was the gemmed plug still buried between her cheeks.\n\nI chuckled. It was probably a great view, but it was nothing like the 'Fuck me' eyes she was giving me as she crawled across the floor. As she reached me, she took my rigid cock in her hands to stroke it a few times. She grinned lustfully at me for a moment before dropping her mouth over my cock, tasting herself on it.\n\n\"God! I taste good! I wonder if all women taste that good?\" Her eyes sparkled at the thought, \"We'll have to find out someday.\" She dropped her mouth over my cock again, giving it a sloppy blow job. She drove it into her throat a few times hard, choking on it to get her saliva going and spat it all over my drooling dick. \"Gotta get it nice and wet, since we forgot to bring in the lube.\"\n\nI smirked at her and reached for my discarded pants. I reached into one of the pockets and pulled out the bottle of lube. I'd stashed it when she'd exited the car as we arrived.\n\n\"Aww, Master! You're so thoughtful for your slave!\"\n\nHearing her say that just made my cock twitch a bit. My own happy, little sex-slave... a fucking hot one, too!\n\nShe took the bottle of lube and dumped a massive glop on my cock, rubbing it up all around. Once she had my dick covered, she stood up over me. Her heels forced her ample chest and firm ass out. She arched her back to magnify both even more, grinning at me.\n\nShe slowly turned around and pushed her ass towards my face. She spread her legs and bent over, resting her head next to her knee. Reaching her hand back she removed the plug and stuck the tube of lube into her dilated anus and squeezed hard, spraying a generous amount of lube into her anal cavity.\n\nShe dropped the plug and the lube and used one hand to pull her cheeks apart and the other to shove two, then three fingers into her ass, swirling her hand and fingers around to lubricate her anal walls.\n\nI sat and watched the process enthralled. I caught her devious grin and I decided she'd played with me long enough.\n\nI pushed her hands off her ass and brought my hand down on her ass... hard!\n\nSMACK!\n\n\"You were a bad girl!... Didn't I tell you not to play with your nipples?\"\n\n\"Yes, Master.\" She answered, but her face was shocked at my sudden punishment.\n\nSMACK!\n\nThe other cheek now had a matching handprint.\n\n\"I'll be lenient this time.\"\n\nSMACK! SMACK!\n\nOne more hard shot to each cheek.\n\n\"Uhhhnn!\" She moaned. I swear her legs quivered in response.\n\n\"Thank you, Master!\"\n\n\"Now, continue. What were you about to do?\" I asked her glancing up at that glorious ass.\n\nShe did moan this time.\n\n\"I was about to pop my anal cherry on that huge cock of yours!\" She stared at me, \"Master!\"\n\nShe turned and straddled me in the chair: one knee down, her other knee up. She grabbed my cock with one hand and pulled her cheeks apart with the other as she brought her hips over mine. Once she had the head of my cock nestled in her wrinkled hole, she reached both hands back to spread her cheeks apart making her sphincter gape. As it opened, she pressed herself down. Hard!\n\nThe head of my cock and the first few inches slipped right into her tightest little hole.\n\n\"OH! FUCK!\" She lifted her head and screamed out.\n\nI took a hold of her hips and held her steady for a moment. Her head fell forward onto my shoulder.\n\n\"Oh, my god, it hurts so good,\" she whispered quietly in my ear. She tried to push down more, but I could see her wince as the pain was too much.\n\n\"Relax. There's no hurry.\" I held her hips in place. After a few moments, her breathing became heavier and she tried pressing down again. Instead, I grabbed her hips and lifted her up, sliding the head of my cock to the puckered ring of her anus, before sliding her back down.\n\n\"OH, YES! That's what I want!\" She moaned loudly. \"Fuck my ass.\"\n\nIt wasn't the deep strokes I'd given her pussy, but the shallow strokes a few inches into her ass were doing the trick for her nearly as well.\n\nWe continued like that for a few minutes while she became more and more excited. I lowered my lips to her nipples to give her a little more stimulation, but she pulled my head up and kissed me.\n\n\"No extra stimulation. I want my next orgasm to be just from your dick in my ass.\" She leered at me, \"I want you to see just how much I'm enjoying this.\" She kissed me again, \"So hopefully you'll do it every day!\"\n\nShe was becoming more active in the short strokes I was giving her. Her legs flexing to put more pressure against her sphincter each time I pulled out, until the bulbous head of my cock popped out of her crinkled ring and she immediately pressed it back in with a gasp.\n\n\"OH, YEAH! Just like that!\" She moaned.\n\n\"You like my cock stretching your ass, like that?\" I goaded her.\n\n\"OH, YEAAAH! It's making me so wet.\" She leaned away from me and slid her hand down between us. I could feel her knuckles as she fingered her pussy. The wet squishing sounds indicated she really was getting off on this.\n\nHer eyes lit up a moment and she reached her drenched hand down lower to wrap around my cock, stroking it, covering it with her pussy's cream. The added lubrication allowed it to slip a little deeper into her ass as we continued sliding in and out.\n\n\"FUCK! That hurts so good!\" She groaned, \"I want to.... MMmm!... get you all the way in my ass!.. Shit!... Every new inch you add... Aaah!... makes it feel even... Better!\" Her hand went back to her pussy rubbing her juices on her hand for a moment before transferring the lubrication to my cock. \"FUUUUCKK!\" The combined pleasure and pain feeling drove her to yet another mind-blowing orgasm. Her sphincter clamped down so hard on my cock, I was sure she was going to rip it off. Her orgasmic juices sprayed out all over my chest as I held her in place on my cock. Her head fell onto my shoulder\n\nI had just a few inches left until I bottomed out in her tight little ass. In her post-orgasmic bliss, as her muscles relaxed, I took advantage.\n\n\"Time to claim this ass,\" I whispered in her ear as I grabbed her hips and drove the last few inches into her, until her pelvis was flush to my groin.\n\nTracy screamed in pain/pleasure and was soon orgasming yet again as my dick was fully buried in her rear. I held her there, as her ass muscles clenched my cock and let her get accustomed to the girth of my member. Her head was laying on my shoulder as she clutched onto my arms.\n\n\"Aaah, Master! Thank you!\" She moaned into my ear. \"I love it!\"\n\n\"My pleasure!\" I held her against me for a moment, enjoying the sensations of her ass gripping my cock, her tits pressed against my chest while she moaned in my ear. My comment cause her to stir and slowly pull away from me.\n\n\"You still haven't had yours.\" She smiled at me. \"I want to feel you cum in my ass.\" She ground her hips down on my groin wiggling my dick in her rear. She bit her lip relishing the sensations she was feeling. Ever so slowly, she began to lift herself off of me. Sliding my cock out of her. As it popped out of her tight ring, she gasped.\n\nShe pushed away from me, stood up and turned around, still looking at me. She bent over and spread her cheeks showing me the gape of her ass and the wetness covering her thighs. She stepped forward and kneeled up on the coffee table between the couch and loveseat. She lowered her chest down to the table, still spreading her cheeks.\n\n\"I want you to fuck my ass now. Fuck it Hard!... Fuck it until you explode deep in me!\" Her breath was coming faster as her excitement grew. She gave her ass a little wiggle in anticipation. \"C'mon, Master. Fuck me!\"\n\nI got up and lined myself up with her gaping hole. With a strong thrust I buried myself halfway up her ass.\n\n\"OH, YES!\" she screamed. \"Give it to me! Give me all of it!\" She pushed herself back, forcing a few more inches into her.\n\nI reached out and grabbed her hair, yanking her head back forcing the rest of my cock into her.\n\n\"Yeeess-...\" she cut off as another orgasm rocked her body. Her ass clenched about my rigid member, freezing my hips as our pelvises ground against each other. I reached around her, grabbed one of her breasts and used it along with her hair to pull her back against me.\n\n\"Come for me again, my little slut!\" With my one hand pinching a nipple, I let go of her hair and dropped my hand between her legs to diddle her little clit. A couple tugs of her little button set her off on another orgasm. I held myself buried in her rear as I continued to whipping my fingers across her nub and squeezing her nipple. She must have gone through two or three more powerful tremors before she was finally able to respond.\n\n\"OH, FUCK! I love your dick in my ass!\" Her breathing was ragged as she came down to earth. \"Oh... I forgot you were there.\"\n\nShe must have opened her eyes and seen Derek sitting in front of her. His hands were white, gripping the couch. At some point, he'd lost control of himself and ejaculated on his shirt. A few streams of jism could be seen along his belly, but his smallish dick was still hard watching Tracy getting fucked. The tears had stopped, but the misery was still evident on his face.\n\n\"What did he do to you? You were never like this.\" He said quietly.\n\nTracy chuckled, \"If you had actually paid more attention to me instead of just getting yourself off, maybe you'd be the one pounding my ass right now.\" She groaned as I again started sliding in and out of her ass. \"Probably not, though. You're too selfish a lover... too selfish a man to open me up like this.\" She groaned heavier as I picked up my pace. \"FUCK, Yes!... Master has already made me cum more in a few hours than you did in the past few years!\"\n\nI grinned and spanked her ass hard.\n\n\"Yes! Take it! Use me! Fuck me until you cum, Master!\" she panted out as she lowered her head in pleasure. \"FUCK!\" She brought her head back up to look at Derek again. \"I thought it would be great to cuckold you... YES! Harder!... But I've realized, I just don't care about you enough anymore.\" She arched her back and threw her head back to try to look at me as I pounded into her. \"I'm yours! Use my ass until you cum! Fuck me as hard as you want!\"",
        "* * * * *\n\nThat was the point where I forgot about these new abilities of mine. If I just said I fucked her unconscious, it would be one hundred percent accurate, but it really wouldn't give the fucking I gave her quite enough credit. I'm not sure if Arman quietly nudged me along the way, but I had been able to keep her edging an incredibly long time. Something I would think my inexperience wouldn't have allowed me to do so easily.\n\nWhen I finally brought myself off, I did the same for her... and it was spectacular! Her joyous scream cut off as she lost her voice while spraying her orgasm all over the table. Her rigid body riding the waves of her climax until she couldn't take it anymore and crashed down, completely unconscious. Her body splashing into the wetness covering the table, a huge grin plastered on her face.\n\nIt had taken a little while to wake her up and coax her into the bathroom to clean up. Derek was staring straight ahead in a daze. Probably with images of her getting completely and totally ravished playing over and over in his head.\n\nOnce I got her into the shower, she woke up a bit. Awake enough to be able to give me another spectacular blowjob as thanks for her orgasms. I'd cleaned my cock before I let her go that far, but she said she could still taste her ass on it... That seemed to excite her more than disgust her.\n\nOnce out of the shower, she packed up a few bags, loaded a box full of her personal items and gave Derek a very unemotional goodbye.\n\nThe drive to my place had been interesting though...\n\n* * * * *\n\n\"Are you sure you're okay?\" I thought the answer was going to be negative, because I knew she was in   and I had just wanted her to hear it... Little did I know.\n\nShe was sitting in her seat, very gingerly. Doing her best not to put too much pressure on her ass that I had just brutalized, but she was still grinning ear-to-ear.\n\n\"I'm ecstatic!\" She beamed at me.\n\n\"All those orgasms you gave me, I'll be perfectly happy if you want to do that to me every night!\" She smiled at me and reached out to rub the bulge in my pants, \"Hell! We can do it again when we get home.\"\n\nIt seemed a little strange that she referred to a place she'd never been to as her home. My look must have told her that without words.\n\n\"My home is wherever you are, Master.\"\n\n\"Look, Tracy. I know I saved you from a bad situation...\"\n\n\"Understatement!\" she interjected.\n\n\"... but I feel like you're going a little overboard with this whole Master thing... don't you?\"\n\n\"Nope.\" She was still smiling beatifically. \"I'd call you something else, but I still don't know your name.\"\n\nI stared at her stunned. I thought for sure that I'd at least introduced myself... hadn't I?\n\n\"It's Jacob... but that's even more concerning. You're set on-...\" I started.\n\n\"Look, Master... uh, Jacob... I learned something about myself today. I never considered myself to be... submissive, but it scares me how much I enjoy it. I'm afraid of what I'll... allow someone to do... to me or otherwise!\" She leaned over and tucked her head under my arm while worming her arms around my waist, \"Even today, when I told you to take me as hard as you could... It... it was too much to start with...\" She buried her face in my chest embarrassed, \"... but I'd have let you continue if you wanted to.\" She lifted her head to gaze at me, \"... but you relented. You didn't want to hurt me, so you took it easy... and gave me the most incredible, perfect sex I have ever had.\" She clung tightly to me, \"You took me from the depths of hell and delivered me straight into heaven... If you think for a moment that I don't want to spend the rest of my life there, you must be crazy!\" She relaxed for a moment before adding, \"Besides, I know you said that creep won't come back, but just the idea that he's out there... I feel safer with you being my Master than... anything else right now! I don't even want to go to work tomorrow!\"\n\nI really couldn't argue with her reasoning.\n\n* * * * *\n\n\"Well, I'm glad you came about.\" Arman was saying. \"I was more than a little concerned you might decide to decline the responsibility.\"\n\nTracy and I had continued our glorious evening back at my place... all over my place! Over the kitchen counter. On the table. The couch. The bathroom. Against the wall in the hallway. And the bedroom... All over the bedroom! And she left puddles nearly everywhere!\n\nThis new stamina of mine was something else, but Tracy was insatiable. I was almost relieved when she finally passed out for the night.\n\nI was able to finally go back into a trance to chat with Arman about the events of the day.\n\n\"Will that guy ever recover his voice?\"\n\n\"Not unless you give it back to him.\" Arman shook his head.\n\n\"And if I did, he still has that power, right?\"\n\nArman sadly nodded his head, \"Yes. He'll always have that power.\" He gave me a serious look, \"He may not have his voice, but you should be a little more careful about just letting them go like that. He can still be a threat to you. There are a lot of problems he can cause that wouldn't qualify as a 'sin', you know.\"\n\nThat piqued my interest, \"Yeah, about that... What exactly does that do to someone? How are those 'sins' defined.\"\n\nHe chuckled, \"You're familiar with the 7-deadly sins of the bible, right?\"\n\nI nodded.\n\n\"Where do you think those came from?\" He added giving me a knowing glance.\n\nMy eyes widened, \"No SHIT!? Those are... like... real?!\" That answer really surprised me. \"Wait... so am I like a Religious warrior now or something?\" Tracy and I had certainly gone overboard on the Lust, that was for certain. I couldn't remember the rest of the Sins off the top of my head, but there were probably a few others we broke.\n\nArman laughed, \"Not in the strictest sense, no. But we share many of the same principles.\"\n\n\"So, I'm somehow forcing religious beliefs on people?\"\n\nArman shrugged, \"Not really. You're just encouraging people to not shit on each other... which is similar to nearly every religion out there. They all teach people a set a morals on how to treat each other. Our society predates most current religions. The 7 Deadly Sins in the bible were derived from our basic tenets. Don't be Greedy. Don't be Hateful. Don't be Lazy. Don't be Lusty. Don't be Vengeful... et cetera.\"\n\n\"So... uh...\" I'd already broken a few of those. \"Umm.\"\n\nArman smirked at him, nodding.\n\n\"Okay, I can understand having all these... changes have been quite a bit to take in. I can accept everything with Tracy,\" he frowned, \"but the way you treated Derek... wasn't right.\"\n\nI couldn't disagree. I had let it get out of hand. The more I heard about how he treated Tracy, the more it angered me... and I took it out on him.\n\n\"Yeah,\" I nodded.\n\n\"Vengeance.\" Arman nodded sadly, \"It's a difficult one to fight. I can understand.\" He gave me a level look, \"You need to rise above that. That's the kind of thing we're trying to fight against.\" He thought for a moment, \"Let's just say there are opposing... forces... in the universe. One that wants people to be... helpful and... well, nice to each other... and another that wants to subjugate and enslave everyone.\"\n\nI could tell he was having troubles explaining this, but I wasn't sure why.\n\n\"You can think of it more as Positive and Negative. The 'Positive' is all about growing, experiencing and allowing everyone the freedom to choose their lives, while the 'Negative' is about restraining, containing and enslaving people to serve the purpose it wants.\"\n\nI blanched, \"Whoa! I didn't try to make Tracy my slave! Honest! I tried to talk her out of it... I-...\"\n\nArman laughed again, \"Relax!... Blood and Ashes!... She's the one that made that choice... She was giving an option and that was what she wanted.\"\n\nI let out a breath of relief. Now that'd I'd experienced such phenomenal sex, I wasn't sure I wanted to go without.\n\n\"No, you're free to enjoy the... uh... fruits of your labor!\" He grinned, \"... and if I may say, that was quite the enjoyment!\"\n\nI blushed, \"I... uh... Well... I guess that would be considered Lust, but-...\"\n\nHe gave me a funny look, \"Maybe things have changed, but Lust is more uncontrolled passion. If you start forcing your desires on someone that doesn't want it... then we'll have to talk.\" He gave me a knowing look, \"Tracy wanted everything she got and more!\" He chuckled, \"Don't worry! It was incredible. I was glad for the both of you.\"\n\nThe pristine white of the area we were in was suddenly broken as videos of Tracy appeared around me like I was watching my memories of the night before on multiple TV screens. The first scene of her strutting through the mall. The look of terror on her face when I was ordered to jump over the rail. The joy on her face when she realized it was over... and all the amazing shots of her face in the throes of orgasms.\n\nIn one of the memories, I caught a glimpse of the distraught face of Derek in the background and something Arman had said made me wince.\n\nHe frowned lightly, \"Yeah, that wasn't the best. He kinda deserved something for sponging off Tracy for so long... but it was a little excessive... But these are your powers now. They are yours to use how you see fit.\" He glanced around at the clips of Tracy.\n\n\"She is gorgeous.\" Even Arman's voice was awed. \"Do take care of her,\" He cautioned.\n\nI tore my eyes away from seeing my memories of the evening played back before me.\n\n\"Wait... Is she in danger?\"\n\nThe pictures all stopped and disappeared, leaving us back in the blank white space.\n\n\"Absolutely.\" He nodded gravely. \"You are now in a war. War has casualties. The other side is...the grossest parts of human behavior... If they find her, they will... use her to get to you. If they get you, you'll be lucky if they just kill her.\" There was a deep pain in his eyes, \"I don't want to scare you, but you need to be prepared. Someday you might need to be able to kill her to prevent them taking her.\" His eyes became glassy, \"It would be an incredible mercy on your part.\"\n\nI knew there was something more there, but I couldn't bring myself to ask.\n\nI nodded, \"Ok. So, what's next?\" I needed to change the subject. The thought of killing Tracy twisted my stomach in knots. And it appeared the subject did the same to Arman.\n\nHe smiled, his eyes clearing up, \"Now. We wait.\" He gave me a thoughtful stare, \"and prepare. It won't be long.\"\n\n* * * * *\n\nAuthor's note: Thanks for reading my story. I'm new to writing, but I've been enjoying it thus far. I have this story planned out, but I haven't gotten it all down yet... Feedback is appreciated.\n\nI have a few other stories I've been playing around with so I'm going to bounce around a bit. I will do my best to keep this one going though.\n\nThanks again."
    ],
    "authorname": "WardedMink",
    "tags": [
        "anal sex",
        "submission",
        "cuckold",
        "fantasy",
        "cheating",
        "powers"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-society-of-guardians-ch-02"
}