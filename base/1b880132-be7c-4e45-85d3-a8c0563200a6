{
    "title": "The Fool Ch. 10",
    "pages": [
        "Authors Note: Thank you once again to everyone who leaves comments and feedback on my writing, it is much appreciated. Thank you very much to Paul who continues to be my second set of eyes, he is a great friend to help me out so much. I hope you enjoy it. ~ellie\n\n*****\n\nThe Fool Ch. 10\n\nIf she had wings.\n\nAlthough she had seen him several times with the intention of talking to him directly about the things Edith had said, Carrie had been unable to find a time when she and William were alone together. She'd been honest but frugal with the information she'd given Sinclair about her time with her grandmother. He'd been unsurprised that Grant had been Jordan's contact with Edith and the family, reminding her that they had guessed that was the case a while ago. He'd pressed her about why her father was staying in London, and, honestly, she didn't know and couldn't tell him that. She'd also lamented that he seemed to be avoiding spending any time alone with her and she wanted to ask him herself why he was staying in London rather than returning home.\n\n\"Don't forget, you promised me today, all day.\" Sinclair reminded her again when her phone buzzed to life as they drove in early morning darkness.\n\n\"How could I possibly forget with all your reminders,\" she groaned, reaching for the phone.\n\n\"Hello,\" Carrie laughed lightly into the phone as Sinclair gave her a long-suffering look and turned back to the road.\n\n\"Good morning, Carrington,\" William's deep voice sounded in her ear.\n\n\"William!\" Carrie exclaimed. \"Good morning.\"\n\n\"I apologise for calling so early, but my breakfast meeting cancelled, and I wondered if you would like to meet with me at my hotel this morning, perhaps spend time together today.\" William invited.\n\n\"Oh, I would have liked that. I have wanted to have some father and daughter time with you. You know, just the two of us, but I am about thirty minutes outside London at the moment, and even if I hadn't promised to spend the day with Sinclair, I doubt I could make it back in time,\" she apologised for over-explaining her reasons why she couldn't have breakfast with him.\n\n\"That is unfortunate. I hadn't thought you'd be having a day away from the museum with the exhibition not far away now,\" he mused.\n\n\"Sinclair feels very strongly about celebrating our first Valentine's Day together, so he's dragging me away from all distractions, and by the look on his face I am about to lose my phone as well,\" she laughed lightly again.\n\n\"Well, I won't keep you then. Perhaps if you are amenable to having a day away from the museum you could accompany me to meet a family friend on Friday,\" he suggested. \"The trip would give us some time together to talk, and it wouldn't hurt for you to meet a member from my side of your family.\"\n\n\"I would love that!\" Carrie gushed. \"Send me the details and I will make sure I can get the time from work. My team is amazing; they could probably do the exhibition without me. Not that I want them to know that.\"\n\n\"I will do that. Enjoy your day,\" William said, and hung up before she had even begun to say goodbye.\n\n\"So, you just made a date with another man while I am sitting right here?\" Sinclair teased.\n\n\"On Valentine's Day too,\" she laughed.\n\nThey turned off the highway and drove further into the countryside, and, as the first rays of the sun peaked over the horizon, Sinclair helped Carrie from the car and into the basket of a hot air balloon. They had a champagne breakfast and took in the views of the patchwork countryside dotted by small villages.\n\n\"It's beautiful, seeing the world like this,\" Carrie said softly.\n\n\"You're beautiful,\" Sinclair murmured, bending to kiss her.\n\nCarrie returned the kiss, and although she had become easier with Sinclair's compliments and affection, romantic moments like this still made her uncomfortable, and she extended the kiss rather than having to acknowledge his compliment.\n\n\"Where are we going?\" she asked once the kiss had ended and she looked out at the countryside again.\n\n\"Oh, the places we will go!\" he said, quoting Dr Seuss with a smile and regretting it, seeing her confused frown as she looked at him. \"I guess your mother never let you read Dr Seuss books when you were little?\"\n\n\"I know who cat in the hat is,\" she said in frustration and rolled her eyes at him. \"I didn't have a totally deprived childhood.\"\n\n\"The places we will go is just another of his books, one of my childhood favourites. I always wanted to see the world,\" he explained.\n\n\"I guess you made that dream come true,\" she laughed.\n\n\"There are still a few places on my list of things to see. What about you? Any unfulfilled childhood dreams?\" He asked, genuinely interested.\n\n\"I wanted to be a warrior princess,\" she laughed.\n\n\"I'd say you've got that down,\" he chuckled with her.\n\nCarrie was about to argue the fact that she was not a princess, and nor was he a prince that could change that fact, but decided to let it go. She had promised him an argument free day of her time and attention, and she didn't want to ruin it by fighting so early in the morning.\n\n\"You didn't answer my question,\" she accused.\n\n\"You're right, I didn't,\" he grinned and kissed her again.\n\nSome time later the balloon landed briefly in a field and Sinclair helped Carrie from the basket. As the balloon soared skyward again, Carrie looked around seeing no sign of life anywhere. Rather than voicing her concerns, she looked to Sinclair and raised one eyebrow.\n\n\"Trust me,\" he grinned and took her hand. As they walked, Sinclair picked wildflowers, threading them together by the stems into a garland which he eventually placed on her head. \"Even Warrior Princesses need a crown,\" He smiled softly and kissed her lightly.\n\nThey had walked quite a distance from the landing site before she saw the small stand of trees as they crested a small hill. Two men on horseback looked up and waved in their direction before turning and riding off after Sinclair returned their wave.\n\nCuriously, Carrie let him lead her down to the small stand of trees and gasped in surprise as she took in the blankets and pillows that decorated the small sheltered alcove made by the trees. Sun dappled down through the leaves creating spots of dancing light on the soft furnishings. She was enchanted and happily let Sinclair lead her to a place amongst the cushions and folded her legs to sit.\n\n\"Coffee, tea, or me?\" Sinclair grinned, indicating a basket holding several thermoses and freshly baked treats. \"We won't be disturbed here,\" he answered her silent question as she looked around.\n\n\"Then I'll take option three,\" she laughed, and for the first time that day took the lead, almost pouncing on him and knocking him back to the cushion floor of the clearing.\n\n\"I was hoping you'd say that,\" he smirked and smacked her ass. He began to unbutton her blouse as he kissed her again. Pushing down the cup of her bra to reveal her breast while keeping it lifted within the structure of the garment, he lowered his head to tease her nipple and helped her to remove his jeans as she fumbled with the belt and buttons.\n\nCarrie gasped as she felt his hand slide up her thigh and under her heavy skirt, and she wrapped her hand around his cock and stroked it. Her breath quickly became ragged as he rolled her to her back, pressing up against her side as he gave both nipples equally aggressive attention. His fingers worked their way into her as his thumb settled over her clit, and she arched her back, climbing to a high that broke over her, making her cry out into the empty countryside.\n\nHer hand gripped his cock tightly, making him grimace as she came. Rolling her still shaking body to her tummy, he pulled her hips up and pushed her legs beneath her. Giving her no time to reorientate herself, he smacked her ass and thrust into her. He fucked her brutally, leaning over her body to grab her hanging breasts and crush them in his large hands. Her cries of pain and pleasure sung out, and he groaned loudly, feeling his cum pump into her, leaving him feeling exhilarated. He collapsed back onto the blanket and guided the still quivering Carrie down his body to use her wonderful mouth on his cock so they could relive this moment at a slower pace.\n\nIn the last months, their lovemaking had become softer, less aggressive, and more about mutual pleasure than the fight for domination. He knew, though, that she needed that fight for dominance, and to make any man who thought to tame her work for everything she gave. He knew that deep within she enjoyed the pain that came with the fight and the eroticism of the forced submission of the conquered.\n\nShe was adventurous and open-minded about every kink he had used with her, and, although he hadn't gone to extremes with any of it, he was yet to find the limits of her willingness to endure and enjoy erotic pain for him at the end of those battles of will. Today he intended to push those limits without the initial battle of wills. To give her that erotic pain, just because they both wanted it, not because she needed to be punished. He knew now that her need for punishment somehow stemmed back to Robin's assertion that she had never been strong enough, smart enough, or beautiful enough to fit her mother's criteria for her role as the fool.\n\nHe moaned, closing his eyes, feeling her talented mouth work on him, and his semi erect cock begin to stiffen again. She wasn't masochistic, like some of the pain sluts he had known, but she was strong enough to take what he gave her and ask for more. To the outside world she was a confident, talented and strikingly beautiful woman. He now knew this was a fa\u00e7ade and had fallen madly, deeply and passionately in love with the shy and insecure woman who craved control in her world and fell apart when surprised by unforeseen events, though she rarely let that side show.\n\nShe was more than beautiful to him, intelligent and strong-minded. She was loyal, good and kind. She submitted after a battle of wills, not because she was the weaker one, but because she was strong enough to know the bliss that came with that exchange of power. He had been overjoyed when he had seen her first real display of submission after the battle at Diablo's club. He hadn't been sure until that moment that her appearance at Diablo's side had extended to sexual submission. He had pictured her as being the high maintenance type of girlfriend, full of demands and retribution if those demands were not met.\n\nHe ran his fingers through Carrie's hair as she sucked his cock so beautifully. He'd slept with many beautiful submissive women, but they paled in comparison to being with the woman he loved in the way he needed to love her. He leant up on an elbow, watching her for a few minutes longer, then pulled her head off his cock by the hair. Her open mouth left strands of saliva hanging in the air between her lips and his raging cock.\n\n\"The basket, drag it closer!\" he commanded, not releasing his grip on her hair and enjoying the indecision on her face as she battled her need to fight him for the dominance his commanding tone implied. He had made her make several promises about today, and he smirked as she argued with herself about having agreed to accept whatever he asked of her as her Valentine's Day present to him. His excitement and enthusiasm for being her first Valentine and the planning she knew he had put into this day had made her willingly agree to his terms and promise not to argue or battle him for the complete twenty-four hours that was the fourteenth of February.\n\nCarrie winced as her hair pulled tighter when she moved to comply with his command. She dragged it forward and to his side where he could easily reach it.\n\n\"Perfect,\" he gave her a toothy smile. He sat up, wedging a cushion behind his back to lean against a tree, then he pulled her forward slightly to kiss her before guiding her head back down to his cock.\n\nCarrie shivered in the cool air as he removed her shirt and bra, but, aside of lifting her arms when necessary, did not move from her place between his legs to grab a blanket to ease the winter chill. She felt, rather than saw him pull her arms behind her, and the tight leather cuffs that wrapped around her arms just above her elbows, pushing her chest out as her shoulders were drawn back. She kept her eyes down, only looking up occasionally through her dark lashes as he moved above her to undo her skirt and pull it off to toss it with the rest of her clothes beside the damp panties that had been discarded long ago.\n\nSinclair rearranged the pillows behind him and reclined back again, making her gurgle loudly as he bucked his hips up into her mouth and gripped her hair, holding her down. After long moment's he pulled her off his cock and dragged her forward, helping her to settle over his cock. He moaned as he felt the slick velvet walls of her pussy slowly envelop him.\n\n\"Oh, yeah, just like our first night together,\" he murmured, picking up a crop from where it lay beside him. He flicked the flat leather end at her nipple and she squealed, tensing and bucking slightly. Sinclair felt all of it and groaned. \"Now for the riding lesson I hinted might be part of today's activities,\" he said, his voice thick with arousal. He flicked the end of the crop at her nipples several more times before landing it hard across both breasts leaving a long red welt.\n\n\"You never hinted at anything to do with today!\" Carrie cried out, her eyes misting with the tears she knew would come, as the so-called riding lesson continued. A small part of her mind registered that he had asked her casually if she could ride about a week ago, but she hadn't registered the importance of the question at the time. Pain lanced into her thoughts as the crop landed on her breasts, and she blinked as her body responded to the punishment he dished out.\n\n\"Giddyap!\" Sinclair commanded, and landed the crop again, making her shudder and cry out as she began to lift and lower herself slowly on and off his cock. He went back to flicking at her hard nipples, mesmerised by the bounce of her breasts and how beautiful they looked dancing unfettered before his eyes. The crop landed again, and errant tears fell to her cheeks as she dropped onto him hard and ground into him, crying out.\n\nHe dropped the crop then and reached up, grabbing both of her breasts and forcing her to lean forward as he moved to catch a nipple between his teeth. \"Ride!\" he growled as he bit into her and slapped her ass with the now free hand.\n\nWithout her arms to balance her, Carrie felt it was almost impossible to fuck him in this position. Then she felt his hand steady her hip, and he began to move from below her, bucking up into her and fucking her as his teeth tortured her nipples. Eventually, he pushed her back up to a sitting position and settled both his hands on her hips. The orgasm she felt building, she knew would be earth shattering, and, as he growled at her to ride again, she began moving up and down as hard and fast as she could.\n\nSatisfied that she was riding as best she could without his help, he moved his hands back to her breasts, lashing out and slapping them as they bounced with her movements. \"Fuck!\" he roared, feeling her orgasm milk at his cock. She collapsed on top of him, and he wrapped his arms around her. Sinclair held her like that for a long time, his cock softening and sliding from her long before he was ready to release her from his arms and the restraints.\n\n\"I could stay here with you like this forever,\" he said quietly, looking into her tear stained face. He heard her sigh contentedly and kissed any words she might have said in response away. When he let her catch her breath again, she looked at him with a soft smile.\n\n\"If only we could, but we have to go back to reality eventually. Probably before we both freeze to death out here,\" she nuzzled into his neck and kissed him. With an unhappy groan, he released her arms from the restraints and pulled a blanket tightly around her, then he sat up and pulled a thermos from the basket.\n\n\"So, what now?\" Carrie asked, running her fingers through her tousled hair and accepting a hot mug of tea from Sinclair. \"Now that we've established that it's a bit too chilly to spend the day naked and at one with nature,\" she sipped the hot brew, feeling it warm her from the inside.\n\n\"What? That was plan A, so I suppose we should go with plan B, then, if you're sure you don't want to brave the elements with me, I can think of several ways to keep you warm out here,\" he smirked at her.\n\n\"Plan B sounds far more preferable to freezing to death between bouts of hot sex,\" she laughed.\n\n\"In that case, you'll need these,\" he said, digging to the bottom of the basket and bringing out a pair of her old comfortable jeans that she hadn't noticed were missing, as well as a fresh blouse and jacket.\n\n\"What? No underwear?\" she laughed, overcoming her shock that he had packed fresh clothes for her.\n\n\"Give me a minute,\" he grumbled, rooting around in the bottom of the basket again and came up with a Victoria's Secret bag which held a scarlet red matching set of underwear decorated with a Valentines motif.\n\n\"I thought we said no gifts?\" Carrie queried.\n\n\"No, what I said was that I didn't want you to buy a gift for me because I wanted your obedience and compliance as my gift today,\" Sinclair corrected. \"That's more of a gift for me anyway,\" he chuckled, indicating the lingerie.\n\n\"Well, it will match the marks you left on my body,\" she teased.\n\n\"That was a gift for me as well,\" he smirked in the way he knew got under her skin, as if daring her to break her promise and argue with him.\n\n\"So this is how it's going to be? On my birthday, will you buy me gifts that are really for your enjoyment?\" she teased again.\n\n\"I hadn't planned it, but now that you mention it, what a great idea!\" he said with a perfectly straight face.\n\nAs if on cue, the men on horseback returned just as she had redressed and accepted another steaming mug of tea. This time they were leading two other horses. With a groan about more riding lessons, Carrie mounted a placid grey mare and thanked the two gentlemen for their assistance before turning and galloping away. She had no idea if she was going in the right direction, but she was sure that as soon as Sinclair caught up to her, he would let her know.\n\n\"We're heading to that forest over there,\" Sinclair pointed as he caught up with her and galloped ahead as if it was a race now.\n\nCarrie kicked her horse on and followed him blindly, keeping her eyes on his back as she followed him toward the edge of the forest. He slowed near the forest edge and turned, realising she had caught up, and began to pick his way carefully through the marked trail.\n\n\"This is Sherwood Forest,\" Sinclair said over his shoulder to her. \"Like you, Robin Hood and his merry men liked to rob the rich and give to the poor.\"\n\n\"No, I like to return missing items to their rightful owners,\" she qualified her business plan for the legitimate business she ran with Jordan.\n\n\"So did Robin Hood, it was just that it took the form of the taxes he liberated,\" he argued the semantics. \"It's all a matter of perspective,\" he added as they rode through the quiet forest path. \"The forest used to be much bigger, stretching almost all the way to Nottingham; now it's an hour's drive between the two places.\"\n\n\"Are we going to Nottingham?\" Carrie asked curiously.\n\n\"Eventually, but first we are going to the market town of Mansfield,\" he smiled, enjoying the luxury of having her to himself and being in control of their actions and movements.\n\n\"Mansfield? Are there dubious links to your family that I should know about?\" she asked.\n\n\"Happy coincidence, but the town lies pretty much at the heart of what used to be the much larger Sherwood Forest. It's more like a city these days, but it's on the route, so we'll be stopping here for a little bit of sightseeing and change of transportation,\" he said enigmatically, not telling her the full outline of his plans for this part of the world.",
        "They rode into Mansfield Woodhouse and met with two men who took their horses and gave them motorcycle helmets and leather jackets before disappearing. Sinclair led her to a nearby service station where a touring road bike waited for them.\n\n\"I take it we aren't visiting the markets then?\" she tilted her head.\n\n\"Not this time, but we can come back another day if you like,\" he offered, helping her into the jacket and helmet, making any further conversation impossible. They mounted the motorcycle and took off at speed, making Carrie cling to him even more tightly.\n\nThey rode out of town and through the countryside, taking the back roads and lanes rather than the direct motorways towards Nottingham. Leaving the bike and walking hand in hand for a short time, they reached a small building that seemed carved from the sandstone face of the rocky outcropping.\n\n\"This is the entrance to Mortimer's Hole. One of a series of secrets tunnels and caves that run beneath Nottingham Castle,\" Sinclair explained.\n\n\"Jordan and I did the tour when we first arrived in England,\" Carrie said. \"It is eerie in there, but I doubt that it's truly haunted.\"\n\n\"Well, that gives us more time for other things then,\" Sinclair said, as if making up his mind not to do the tour he had planned for her, believing her love of history would be enthralled by the story of the doomed Mortimer and his lover Queen Isabella.\n\nAfter making another quick phone call, they climbed back on the bike and headed off again with Carrie clinging tightly to Sinclair, wishing he would let her drive but not arguing with him just this one day. They were on the bike for less than half an hour before stopping again at a large country house. If Carrie was honest, it was more of a castle than a country house, and she looked up at the large stone walls as she took off the helmet and riding leathers.\n\n\"The old lady who lives here is a bit of a recluse,\" Sinclair explained. \"I don't think she's left the property in over a decade.\" He placed his hand on the small of her back and propelled her gently toward the door. \"She's a bit brusque, but don't take it to heart, it's just her way.\" The door opened as they approached and a liveried butler stood in the doorway with a serious look.\n\n\"Master Sinclair,\" the butler nodded his formal greeting.\n\n\"It's good to see you, Giles,\" Sinclair said quietly. \"How is she today?\"\n\n\"Sweetness and light itself. She has been looking forward to your visit and meeting your lady love,\" Giles seemed to relax his stiff demeanour slightly as they spoke in hushed tones.\n\n\"I bet she is,\" Sinclair chuckled. \"May I introduce Carrington Wordsworth-Ward.\"\n\n\"It is a pleasure, Miss Ward,\" Giles bowed stiffly and turned, leading the way deeper into the huge house. He stopped before twin doors and seemed to take a breath before opening them both and entering, clearing his throat and announcing, \"Master Sinclair and his betrothed have arrived, your Ladyship. May I introduce Carrington Wordsworth-Ward.\"\n\n\"You may not,\" the old woman snapped from her seat on a red velvet high backed armchair. \"Sinclair can do that,\" she informed him imperiously. \"We will have lunch in the rose garden in half an hour,\" she instructed and dismissed the man with a shooing motion.\n\nSinclair chuckled and stepped forward to kiss the old woman's cheek before speaking to introduce Carrie. He had barely gotten a syllable out when she held up her hand to stop him from talking.\n\n\"I heard her name, there is no need to repeat it, I am hardly going senile, despite the rumours,\" she admonished him. \"Well, come over here, girl, and let me see you,\" she commanded.\n\n\"Carrington, this is my great Aunt Ophelia,\" Sinclair introduced her as she moved closer, putting an arm protectively around her waist.\n\n\"It's lovely to meet you, Lady Ophelia,\" she said, feeling like she should curtsy, but merely lowering her head slightly in a sign of respect. She and her late husband had been well-known philanthropists who had set up scholarships and bursaries for underprivileged young students who showed promise in the arts, some areas of mechanical engineering, and, more recently, medical research.\n\n\"You're a Wordsworth and a Ward, that is some interesting genetics, luckily they work for you,\" she said, giving Carrie an appraising look from head to toe. \"What is it you do?\"\n\n\"I'm and exhibition curator at a museum,\" Carrie gave a vague response to the question. \"I have a degree in Art History, specialising in antiquities from the mid to late nineteenth century,\" she added as the woman looked at her expectantly.\n\n\"Ah, a woman after my own heart. I have a small collection of my own from that period you may be interested in viewing after lunch,\" she offered. \"Sinclair can give you the grand tour, but one or two rooms I would enjoy showing you myself.\"\n\n\"I would appreciate your insight into the collection. I have always found that the owners of such antiquities hold the history more vividly than those who have an admiration for it rather than a connection,\" Carrie said enthusiastically.\n\n\"That's very true, my dear,\" Ophelia gave a small smile and winced as she began to move as if to get up, causing Sinclair to let go of Carrie and step forward again to help her.\n\nThey walked slowly out to a small rotunda which sat in the middle of a traditional garden dominated by roses in a myriad of colours. Carrie could see the old woman struggle and her energy wane as the lunch progressed through three courses, until Sinclair promised that, if she went to rest, they would come and wake her before they left. After a short and heated negotiation, wherein Sinclair had vowed to return within a month with his father, she went, albeit reluctantly, with Giles helping her to walk the short distance back into the house and up to her room.\n\nThe grand tour was indeed grand, Carrie had to admit, and ended at a small cottage that butted up to the rear of the house but was quite separate. The cottage seemed unremarkable in comparison to the rest of the house and estate, though it had been kept in the Victorian period style.\n\n\"This was originally a guard house,\" Sinclair informed her. \"When the original castle was destroyed, and the stately home you see now was erected, the lord of the land divided the lower levels between storage and servant quarters beneath the house and small guard house over what remained of the original dungeon.\"\n\n\"There's a dungeon under this cottage?\" she asked, looking around at the small building.\n\n\"There was a dungeon, but it had evolved over time to become slave quarters, and eventually this cottage was used for the mistresses of the Lords who resided here,\" he smirked. \"It seems that the Lords of the land kept this little cottage and what lay below it a secret because of the ungentlemanly behaviour that often occurred here. Including my late great uncle, who died while enjoying the delights of a young woman held in slavery here.\"\n\n\"He, what?\" Carrie was aghast. \"He was such a good man, the media reported on him as a saint. I don't understand.\"\n\n\"Even good people have their faults. Some women, like the young woman found here after his death, seek out sexual slavery. She wasn't a prisoner here, she had a home and everything she desired, and, in return, she served my Uncle in any way he wished.\"\n\n\"I'm not na\u00efve, Sinclair; I'm just surprised. I thought you, of all people, would have condemned him for it,\" she shook her head.\n\n\"He didn't drug her or force her against her will, there is a difference. His wife was a reluctant lady and wouldn't indulge his needs, but he loved her and found a way to be happy in his marriage while meeting his baser needs,\" Sinclair said reasonably. \"True, I never wanted to live a life divided like that and was prepared to wait for the one who could fulfil all of my wants and needs. I want the lady and the tramp, the wildcat and the mouse, a woman who can be all of those things, and more. I found all of that and so much more in you.\"\n\n\"Are you saying you want me to be like the woman who lived here?\" Carrie stared at him, trying to understand the parallels he was making, but her mind was stuck on the idea of sexual slavery and what it must have meant to the woman who lived in this cottage.\n\n\"No, just the opposite,\" he stepped forward and took her in his arms. \"You are everything I have ever wanted in a woman. You are the lady of the Manor. You're the sexy wildcat who challenges me to earn the domination and control I crave. You're the sometimes vulnerable and insecure girl I want to love and protect. You're strong and loyal enough to stand beside me against any adversaries and accept that as part of our lives. I love every facet of you, and every time I learn something new I just love you all the more.\"\n\nCarrie was taken aback and had no words to respond to such a heartfelt declaration of love, so she kissed him, deeply and passionately. \"So, about this dungeon?\" she asked in a throaty murmur, which made him pull back and raise an eyebrow.\n\n\"The wildcat lives,\" he chuckled. \"But if you have ideas about putting me on the rack you can forget it.\"\n\n\"Fairs fair, you already had your fun this morning,\" she smiled slyly, only half joking.\n\n\"You promised me to be compliant today, a sweet-natured, loving fianc\u00e9, no arguing or negotiating terms,\" he reminded her. \"I don't believe wanting to tie me up and torture me in a dungeon fits that description,\" he teased. \"I guess,\" he stepped forward, taking her hands in his and pulling them around to her rear as he pressed against her and leant to kiss her lightly. \"I guess we could arm wrestle for it, but it seems I have already won that little bout,\" his grip tightened on her wrists.\n\n\"That was hardly fair,\" she growled.\n\n\"Are you arguing with me?\" he gasped in mock horror.\n\n\"No, merely stating a fact,\" she grumbled and looked up into his eyes.\n\n\"Wonderful, then let me lead the way,\" he chuckled.\n\nShe had thought the door he opened had been a linen cupboard when she had first glanced at it on her inspection of the cottage, but it opened onto a small landing that led down a dark and narrow stairwell. The walls turned quickly from the wall sheets that matched the cottage above to rock and hardened clay as she descended lower.\n\n\"Had we done the tour to King David Dungeon we could have made some comparisons about why this one was more suited to a princess or a queen rather than a king, but I guess it can speak for itself,\" he said in a strangely hushed voice. He flicked on a series of guttering gas lamps and watched her as her eyes adjusted to the light and she took in her surroundings.\n\nIt was a step back in time as Carrie entered a bedroom setting straight out of a medieval castle. The room was half filled with an imposing four post bed, the large posts of old stained oak were swathed with rich fabric, and, unless inspected closely, a casual observer may have missed the hooks and eyelets positions at strategic levels up and down the solid pieces of wood.\n\nThe rest of the room was filled with decorative but unassuming furniture; a small chaise and two armchairs sat in one corner of the room to the left of a fireplace and a large armoire and dressing area filled the other corner next to the fire. A large steamer trunk and several straight-backed chairs filled the space around the bed itself which dominated the space.\n\n\"I assume you'd like me to submit, no arguments?\" she asked, giving him a sly look that he couldn't quite decipher.\n\n\"That was the deal today, was it not?\" he asked speculatively as she continued to take in the room.\n\n\"True, but it seems this has become less about showing me how to celebrate Valentine's Day and more about you living out your fantasies,\" she challenged. \"I assumed chocolate and flowers, not whips and chains.\" Carrie raised an eyebrow at him.\n\n\"The day is far from over; there may still be chocolate and flowers for you if you continue to play the game,\" he chuckled, teasing her and closed the distance between them.\n\n\"Oh well, in that case,\" she rolled her eyes dramatically at him.\n\n\"We can fight, if that's what you want,\" his voice lowered dangerously. \"We both know how that will end. I have to admit it's been some time since I forced the victor's rules on you completely, and I would be more than happy to revisit our first few days together.\"\n\nCarrie inwardly cringed at his use of her that first weekend. The galling display of her body and his power over her in front of the staff at the hotel he had been staying at had almost made her break her agreement after the fight. If she was honest, she enjoyed his need to dominate her completely on occasion, reminding her that he was strong enough to not only match her but force his will. She couldn't have willingly given herself to anyone with less ability. Her thoughts turned briefly to Jordan, and she shuddered involuntarily.\n\nMistaking her shudder for excitement, Sinclair took her in his arms and kissed her deeply, his hands wandering over her body to slowly undress her. He knew, as she let her shirt fall away without argument, that she was still deciding whether to fight her need for submission. As if feeling the moment, she wavered, he leant down and kissed the sensitive skin of her neck below her ear and murmured, \"You're mine, there is no need to fight what we both want anymore.\"\n\nCarrie stiffened, despite the truth of his words. She fought with herself now, wondering how this man had worked his way through all of the barriers she had around her inner heart and mind. His breath was warm against her ear as he spoke softly between teasing licks and kisses. Her bra fell away as he deftly unhooked it with one hand and began kissing down her throat to the soft mounds of flesh with their nipples that betrayed her arousal. His lips were on the pink nubs then, making her sigh in pleasure, his hands snaked down to her waist to begin easing her jeans from her body.\n\nShe didn't fight his actions or feelings, admitting that she wanted him as much as he wanted her. Her eyes remained open, scanning the room's furnishings and what it meant for both of them if she gave in to everything his room stood for: submission, obedience, power and control. She would never be able to live that life completely. She knew that she needed to make him work for the dominance and power he craved over her, giving in without any resistance just seemed so wrong to her, despite the love and respect he showed to her in all other areas of their life.\n\nSinclair could feel the tension in her body and knew giving in to his desires without argument was difficult for her. He smirked up at her as she stepped slowly out of the jeans and seemed to be considering him carefully. He kissed his way up her legs to her pussy, placing a soft kiss there before pulling his shirt over his head without undoing the buttons. He leant in once again, teasing her with his lips and tongue as he rid himself of his jeans and underwear awkwardly and then added his hands to the teasing of her.\n\nCarrie's legs trembled, and she teetered on the edge of her orgasm when he stopped and stood to take her in his arms and kiss her deeply, swallowing the whimpering whine of frustration she let out at the denial of her orgasm.\n\n\"Submit or take the lead,\" Sinclair murmured the challenge in her ear. \"I can rock your world and finish what I have begun, or you can choose the top and ensure my world is rocked.\" He kissed and nibbled at her neck as he spoke and smirked at her sharp intake of breath.\n\n\"You'd submit to me?\" she asked breathlessly.\n\n\"I have my limits, but I will safe word if you hit any of them,\" he smirked. \"I know you and trust you to ensure my safety.\" The teasing smile played over his lips as he spoke in a low voice. \"Consider my bending to your will a Valentine's Day gift.\"\n\nCarrie noted that he refrained from saying submission. but decided to let it drop without a comment. Her mind raced. She purposely sought out and challenged strong men who could match her physically and mentally, and, invariably, she admitted, overpower her eventually. Being offered the opportunity to top left her stunned momentarily but she couldn't back down from the challenge he presented as a gift, and after several silent minutes she gave a sly smile and stepped out of the circle of his arms.\n\n\"Restraints and toys?\" she cocked an eyebrow, looking at him with a smirk that matched his own. She saw a brief mixture of emotion on his face and wondered if he had been betting on her backing down from the challenge.\n\n\"In the armoire,\" he nodded his head toward the large piece if furniture, mildly surprised that she seemed so eager to take up his challenge. \"You haven't tested my limits, so I hold the power of veto on your choice of toys,\" he said carefully.\n\n\"You trust me, don't you?\" she asked sweetly, making him chuckle as he followed her. In a short amount of time she had him naked and cuffed at the wrists and ankles. She had led him to stand at the foot of the bed then, taking her time, being unused to the types of knots needed, she secured him to the posts, his arms outstretched and his feet wide as he remained in a standing position.\n\nHe checked her work, pulling against the solid bedposts once his limbs were secured and found he had little movement or play in the restraints He was uncomfortable, but he needed to show her that his trust in her was as absolute as he wanted her trust in him to be. Submitting, he knew, took far more strength than dominating, and he struggled, taking a deep breath and trying to concentrate on the woman he loved rather than the restraints holding him immobile.\n\nCarrie ran her hands over his broad chest and leant in to kiss him deeply. She was going to enjoy teasing him and denying his needs, as he did to her so often. She just needed to watch carefully for any telltale signs that he was close to coming and back off before he hit the point of no return. Her hands continued to roam over his body, teasing him before she began to kiss her way down his body, teasing with licks and small nips of her teeth.\n\nSinclair groaned as he felt her breath trail over his groin as she bypassed it completely with her mouth, moving from his hips to his thighs, leaving only the delicate feel of her warm breath and her hair in her wake.\n\nCarrie smiled at the first sound of arousal he made for her and continued on the path she had started, kissing down and up his legs before biting softly at his thighs close enough to his balls for him to contemplate the feel of her mouth there without actually feeling it. She heard the D-rings on the restraints rattle and smiled knowing that he would want to wrap his hands in her hair and guide her to his cock. She took her time before finally flicking her tongue lightly over his balls and being rewarded with a deep rumbling growl. She wrapped her hand around his throbbing cock and stroked it slowly as she sucked and licked his balls until they were completely wet and glistening.\n\nSinclair arched his back, pushing his hips toward her and found she backed off, making him groan and drop his head to look at her. She looked up at him through her eyelashes, a small playful smile dancing on her face.\n\n\"Don't get too excited, I don't want you coming until I give you permission,\" she warned before pulling his cock toward her mouth and placing a soft kiss on its tip, making him growl at her. She might not know his limits where the pain was involved, but there was more than one way to torture him, she smiled and continued to look up at him as her tongue snaked out and around the mushroomed head of his cock. She was enjoying the sounds of pleasure and frustration he made as the restraints creaked and jangled under the movements of his arms and legs.\n\nSinclair watched as she teased him, fluttering her tongue around his cock before slipping it into her mouth so that just the head rested on her warm wet tongue. He groaned in pleasure and sheer frustration. He loathed being a passive participant and wanted nothing more than to thread his hands into her hair and force his cock deeper. He tried to buck his hips, but she pulled back, totally in control of what was happening to him, and he cursed himself for offering this scenario, thinking that when challenged she would demure and take the bottom, as she always did, even when she fought his dominance and eventually gave in to his wants and needs.",
        "Carrie sucked him deeply now, her head moving slowly up and down his cock, and the groans she had enjoyed became snarls as he ground his teeth together in an effort to hold back the orgasm she knew must he close. She knew that once she undid his bonds her time in control would be over, but she planned to exhaust his reserves before that happened. Her hands smoothed over his ass and she began to tease the sensitive skin behind his balls, moving her fingers up between his cheeks. In the position, he stood, with his legs widely parted, the ease with which she found the dark star there made her smile as she lifted her head from his cock to wet her finger, making her intentions clear to him.\n\nSinclair was breathing raggedly, his head lowered, watching her carefully, deciding if the uncomfortable pressure in his ass and against his prostrate that he knew was coming was a limit for him and if he would speak and break the scene. Despite himself, he adored seeing her on her knees and worshipping his cock, he would prefer not being bound and passive, but he couldn't deny the tortuous pleasure she gave him. He grunted and felt a shiver go through him as her finger pushed past the tight ring of his anus and, as he pushed his hips forward slightly, her mouth was there to capture his cock and begin sucking slowly again. He knew he wouldn't be able to hold out much longer, but he drew the line at begging her for his climax.\n\nCarrie pushed her finger deeper as she swallowed his cock, seeking out that secret sensitive gland. She was in a slow rhythm made difficult by his jerky movements, but once she grew accustomed to the unique position, she dropped her free hand to her pussy, which throbbed with need having come so close to climax before he changed the rules. She was so hot her body tingled and came alive at the first stroke of her fingers over her clit, and she doubled her efforts on Sinclair, wanting them to come together. \n\nWhen they came, the room filled with a noisy cacophony of both their voices, as well as the creaking and rattling of the restraints that held his stretched and straining body. Carrie took her time to drain him, prodding at his prostrate to ensure he was totally spent. Her orgasm had left her warm and sated so that when she finally got to her feet to release his restraints her legs were steady and she was able to help him to sit and then lie back on the bed. Once his legs were freed, she curled up alongside him as his breathing slowly returned to normal, neither of them saying anything.\n\n\"We should probably do that more often,\" she murmured into his ear softly before kissing his neck and tightening her arms around him.\n\n\"I'm not so sure about that,\" Sinclair groaned and moved to roll her to her back, pinning her to the bed and kissing her deeply. \"When you start submitting completely I'll consider your request,\" he chuckled and kissed her again.\n\n\"But I...\" Carrie paused. She realised that it was rare that she gave in without any argument or making him work for his dominance over her, whereas he had just given himself over to her without reservation. \"Ah, I see,\" she said quietly. He'd been showing her that even he could submit without argument, if he chose, and not feel less equal after the scene. \"Point taken.\"\n\n*****\n\nThey had spent the early afternoon at the mansion with Lady Ophelia, and, as the air began to cool, Sinclair produced an evening gown for her to change into as a helicopter appeared to take them back to London. The view was spectacular as the sky began to change colour with the setting sun. They'd landed and made their way to a train station and, after being rushed through the premiere class lounge, boarded the Eurostar to Paris.\n\nCarrie had dozed, lightly propped against Sinclair's shoulder, waking for a late version of afternoon tea and coffee briefly before closing her eyes again. They'd risen at four that morning to start the drive to the balloon launch site. She smiled as she rested her eyes, wondering at all of the different modes of transport they'd used and the places he had taken her. It was as if he had taken every clich\u00e9 about Valentine's Day and found a way to squeeze them all into one day, ending with a trip to Paris, the city of love.\n\nA limousine waited for them as they left the train station in Paris, and she shook her head with a light laugh. They were delivered to a small bistro, where Sinclair obviously knew the owners, and had a dinner based on every food ever considered an aphrodisiac, starting with Oysters natural.\n\n\"I thought we might take a walk,\" Sinclair suggested as the finished the meal and sat sipping the last of their wine.\n\n\"That sounds wonderful, I have eaten way too much today,\" Carrie grinned lopsidedly.\n\n\"Next year we can spend the day here and I can show you more reasons why Paris is considered the city of love, but we arrived too late for even a short visit to the Temple of Love in Boise de Vincennes,\" he said, taking her hand and leading her along the laneway.\n\nCarrie had heard the accordion player before she reached the spot where couples danced the tango around a mini amphitheatre on the bank of the Seine River. Sinclair pulled her into his arms and they danced into the small gathering.\n\n\"They say the song and the modern version of the tango dance are about a man who was betrayed and abandoned by the love of his life and he pined away for her long afterwards,\" Sinclair murmured in her ear. \"It's a song of tragic love, but originally it is said to have the feel of intense and abiding love without the heartache.\"\n\n\"Perhaps it was always tragic and intense,\" Carrie said a moment before he spun her from his body and snapped her back into his arms, years of formal dance training making him confident and light on his feet.\n\n\"Perhaps,\" he smirked. \"Though I would like to believe every love story has its moments of intensity without the tragic end.\"\n\n\"In the end, only time can tell,\" she teased. \"Even couples that have been married for fifty years or more must eventually lose each other to time. Nobody lives forever.\"\n\n\"Some great loves live on, however. Romeo and Juliette, Tristan and Isolde.\" Sinclair countered.\n\n\"Bonnie and Clyde,\" she laughed. They were both thieves who blurred the line between black and white often enough to make the comparison.\n\n\"True,\" he laughed with her. \"As neither of us enjoys the spotlight, perhaps we could leave clues to our infamous acts and great love; once the fool is gone we could replace her as a duo.\" He continued trying to make romantic gestures in the face of her flippancy, knowing that she still struggled with the fact that she loved him and that the love she felt was real and not part of the plan for the Fool's next heist.\n\n\"Clues?\" she asked curiously.\n\n\"Small ones that could be easily overlooked by anyone except those that followed our exact path,\" he nodded knowing he was cryptic. \"Come, let me show you.\"\n\nThey walked away from the dancers into the night. Carrie could see that they were heading toward Notre Dame Cathedral, and wondered what he had in mind. She was so focused on the large building, which looked imposing even from a distance with its exterior lighting, that she hadn't noticed the small bridge Sinclair had steered her onto.\n\nSinclair stopped in the middle of the bridge and pulled her into his arms to kiss her. Searching in his coat pocket, he pulled out a small gift and presented it to her with a look that Carrie couldn't decipher.\n\n\"Another gift?\" she asked raising an eyebrow.\n\n\"It's not like it would be a surprise, given our location,\" he smirked as she frowned at him and opened the gift. She held the sturdy looking lock in her hand and looked up at him.\n\n\"I don't understand,\" she admitted.\n\nTurning the lock over her hands to show the details engraving of their names, he chuckled, realising she didn't know that they stood on the love-lock bridge, and turned her to look at the side of the bridge which was crowded with locks left by other couples.\n\n\"Oh, my!\" Carrie exclaimed, \"I was busy looking at Notre Dame, but, still, how did I not see that?\" She stepped forward to study the locks that had been fixed to the bridge and turned over the lock in her hand again, seeing the names surrounded by a heart. She smiled, \"I didn't know this was a thing. I've never been in Paris as a tourist before, at least, not enough to know anything but the main monuments.\"\n\n\"There are spots like this all over the world, we can visit them all if you like, make it a valentine's tradition,\" Sinclair offered, enchanted by the look on her face as she surveyed the mass of locks placed there by couples as a show of their love. He waited patiently as she took her time finding the perfect spot for their lock and gathered her back into his arms once she was done.\n\n\"That was a lovely gift, thank you,\" she tilted her face up to kiss him.\n\nThey walked further then, crossing the bridge and walking along the back of the Seine to a small pier. A small flat boat waited for them and Sinclair led her to a comfortable loveseat and nodded to the two crewmen before sitting himself for the voyage up the river.\n\n\"You can't come to Paris and not visit the Eiffel Tower,\" Sinclair chuckled, as he could see the question forming on her lips.\n\n\"Then what?\" she asked.\n\n\"Then you trust me,\" he chuckled.\n\n\"I do trust you,\" she complained. \"I also like to know what's happening next.\"\n\n\"Just relax and enjoy the night,\" he lifted her chin, turning her face to his and kissed her.\n\nThey toured Paris a little longer, making sure to kiss under the Eiffel Tower before he helped her onto an empty bus, encouraging her to sit on the long benchlike back seat with him.\n\n\"A bus? Seriously?\" she laughed. \"What's left?\"\n\n\"Hang gliders, parachutes, submarines, tractors,\" he joked.\n\n\"It's late, maybe we could save some of the more adventurous options for next year,\" she urged, regretting having asked him.\n\n\"Okay,\" he chuckled, kissing her again. The day had gone better than he had hoped, and he hadn't felt rushed and only had to change plans once because of her well-travelled history. He felt relaxed and happy as they travelled to the small private airfield just outside the city limits where his jet was waiting for them. With the night almost over, the biggest decision he had to make now was whether to make love to her on the flight home or let her rest until they reached their final destination.\n\n\"Are you tired?\" he asked as she snuggled close to him.\n\n\"Yeah, a little. We started this adventure pretty early this morning, and we've been pretty active so far today,\" she grinned, making her meaning clear.\n\n\"We can rest a little on the flight back if you like,\" he offered.\n\n\"And deprive you of another notch on your mile-high post?\" she asked in mock horror, making him laugh loudly.\n\n\"I still have plans for when we arrive back in England, so if you need to rest I will try and restrain myself for an hour or two,\" he continued to laugh, albeit at a lower volume.\n\n\"I could help you with those restraints,\" Carrie offered with a perfectly straight face, making him laugh loudly again and pull her into a tight embrace.\n\n\"That won't be necessary. I think your enthusiasm for restraining me is a little frightening, if I am honest,\" he chuckled.\n\n\"You didn't enjoy being tortured?\" she asked sweetly.\n\nSinclair didn't answer, knowing it was a trap. If he said he did, she would want to take that role more often, if he said he didn't, she would know it was a lie on some level. Instead, he kissed her deeply and felt the bus come to a complete stop close to his jet.\n\nThe flight back was uneventful, as he let her rest and dozed himself, imagining their final destination. At a signal from the co-pilot, Sinclair woke Carrie gently and carried her out to her seat for the landing, offering her water just before their final descent.\n\nCarrie struggled to wake up properly. It was late, and she felt like she had been awake for days with all of the travelling they had done today. She barely felt the landing and let Sinclair help her from the plane into a waiting car that she acknowledged vaguely as being huge and unwieldy for the London roads.\n\n\"It's a Hummer!\" she stated, as if it was astonishing when he helped her from the car at the hotel when they arrived.\n\n\"It is,\" he confirmed. \"How are you feeling now?\" he asked, wondering if he had overdone it, trying to pack so much into one day.\n\n\"I'm starting to wake up properly now. I needed that nap, thank you,\" she gave him a soft smile as he took her hand and led her toward the elevators in the underground carpark.\n\n\"I checked us in yesterday, so we wouldn't have to deal with a night manager,\" he explained, pushing a button on an upper floor after they stepped into the elevator.\n\n\"That was good thinking,\" she congratulated him, letting him pull her closer. \"It would seem a bit odd checking in without any baggage. At least odder than knowing we own a house close by but we're staying at a hotel. Tell me this is the last stop on our whirlwind tour,\" she sighed with exhaustion.\n\n\"It is the last stop on our whirlwind tour,\" he repeated for her.\n\nThey exited the elevator and he made a show of finding the right door and opening it with a flourish. She had jokingly asked about flowers and chocolate earlier in the day, but she hadn't been prepared for this. She gasped as she stepped into the sweet-smelling room.\n\nFlowers filled the room, roses sat alongside lilies and daisies, as well as more exotic varieties, and in amongst it all were chocolate fountains in a myriad of colours and flavours. It took her some time to realise that the room had been set up as if being renovated, with dust covers shrouding most of the furniture and floor, which made the flowers and chocolate even more vibrant against the stark backdrop.\n\n\"All of this for the two of us?\" she asked in bewilderment, turning to face him seeing him beginning to undress.\n\n\"It's not just for eating,\" he grinned at her and continued to remove his clothes before walking any further into the room. \"You're a little overdressed for what I have in mind for that chocolate.\"\n\nCarrie turned to survey the scene again, trying to decipher his words. She walked toward a fountain of white chocolate and picked up a strawberry, dipping it into the smooth liquid before biting into it. She blinked as the reality of what she saw just hit her, and she picked up a soft paintbrush and turned back to Sinclair, raising an eyebrow.\n\n\"You're still overdressed,\" he lectured and advanced on her with a look of determination.\n\nCarrie marvelled once again at his perfectly proportioned physique. Her eyes skimmed over his broad shoulders and chest down over his belly and the perfect vee made by the muscle and bone of his hips as they dipped down to the softly curling pubic hair that topped his groin.\n\nSinclair grinned under her inspection and was eager to do some inspecting of his own. He slipped his hand down her sides and legs to the hem of the dress she wore and slowly pushed it up, revealing the sexy body beneath. Obediently she raised her hand above her head so he could remove the dress, and she stood passively as he made short work of her underwear. He took her in his arms then, enjoying the feel of skin on skin, and kissed her deeply.\n\n\"Would you like wine?\" he asked, kissing down her neck to her shoulder and scraping his teeth over the exposed skin.\n\nCarrie could feel her arousal heightening already. Sinclair was being gentle, but she felt him asserting his control, which made her want him all the more. She moved her hands to run them over his chest, but he gently took her wrists and pulled them away from his body, placing them behind her back, moving his lips to hers and kissing her before stepping away to open a bottle of red wine and filling a glass. She stood watching him as if rooted to the spot by his gentle but firm removing of her hands and the controlled dominance radiating from him.\n\nSinclair was pleased that she didn't move, and returned to her, offering the glass to her lips and tilting it slightly so she could sip. Tilting it a little further, he let several drops spill from her chin to her breasts and lowered his head to scoop them up with his tongue. He trailed his tongue up the trail left by the wine on her skin, his breath blowing warmly over her nipples making them tighten all the more. Standing again, he took another sip of the wine before holding it out to her.\n\n\"Hold this,\" he commanded, and she automatically reached for the glass he offered, taking a sip as he moved away from her again. She watched as he ran two fingers into the chocolate fountain and offered them to her.\n\nCarrie looked into his eyes as she parted her lips and accepted the chocolate coated fingers, sucking the sweetness from them and rolling her tongue around each digit as he moved them gently in and out of her mouth.\n\n\"More?\" he asked teasingly.\n\n\"Yes, please,\" she whispered, feeling the eroticism of what he had prepared for them. He smiled at her then and picked up a pastry brush, handing it to her before picking up one for himself.\n\n\"Choose your favourite,\" he indicated the fountains and took the wine glass from her, remaining in the centre of the space as she moved to the chocolate. He watched her carefully as she dipped the soft brush into the thick brown liquid and turned to face him. He took a sip of the wine as she painted a thick band of chocolate over his hip and along the ridge of muscle leading down to his semi-hard cock before following with her mouth. His cock hardened as he felt her teeth graze over his skin.\n\nDropping his brush, he wound his fingers into her hair and pulled her up and pressed his lips against her in a hard kiss.\n\n\"Are you planning to drive me insane by tormenting me yet again?\" he growled as the kiss broke.\n\n\"Perhaps,\" she said huskily, her lip curling into a smile.\n\n\"Two can play that game, and it would seem you have no restraints at hand this time,\" his eyes narrowed as he spoke. \"Think carefully before you proceed,\" he warned and took another sip of the wine.\n\nSinclair allowed her some latitude while using his brush in the chocolate to torment her equally with brush strokes to sensitive areas without giving her any relief. He could see her arousal hitting fever pitch as they continued, and when he knew she couldn't take much more, he lowered his hand to cup her pussy, his fingers exploring the wet folds and seeking out her swollen clit.\n\n\"Oh yes,\" Carrie breathed softly, believing he had given in to the desire he had felt before she had. She closed her eyes, savouring the feelings and the tingles his fingers sent through her body. Her eyes flared opened as his hand withdrew and reconnected with her pussy in a hard, wet slap, making her squeal and jump. He moved with lightning speed to capture her hands, tying them behind her back with a strip of the white cloth that covered the furniture. She looked up into his face and could see the smirk there made almost sinister by the desire and need behind it.\n\n\"You had your turn, now it's mine,\" he growled softly and led her to a short low bench covered with a cloth. She considered that it was possibly a coffee table, and, as he lay her back over its surface, he deftly pulled her hands apart and retied them to the legs of the low bench. It was barely long enough to support her torso and left her legs dangling to the floor. Sinclair widened her thighs and bent her legs so they moved back toward her bound arms, essentially doubling her over and binding her ankles to her wrists with long lengths of cloth she hadn't noticed in the room before.\n\nCarrie hadn't struggled. She understood what he had done earlier in submitting to her, which she knew had been difficult for him. She had passively allowed him to bind her, looking at him with trust and desire written clearly on her face. When he leant down to kiss her, she ached to wrap her arms and legs around him and whimpered softly in frustration as her arms flexed in their bonds. He kissed down her chocolate flavoured body, spending time on her breasts using both his hands and his mouth as she lay spread out before him.",
        "\"I've waited a long time for this,\" he murmured. Not elaborating that it was her complete submission and lack or argument when he had bound her that he had been waiting for. He savoured each sound, each ragged breath and each trembling movement that told of her arousal rather than her exertions from fighting him. He became more aggressive, biting at her soft flesh as his fingers pinched, pulled and twisted the pale pink hard nubs of her nipples. Her whimpers and cries were like the sweetest melody in his ears and, not wanting to wait a moment longer, he knelt between her thighs and thrust into her hard rather than taking the care he would have in a different setting.\n\nThe cry that issued from Carrie's lips was somewhere between pleasure and pain as he filled her. Mother nature had eased the passage of him with her excessive heat and wetness through all of the foreplay in this room. Who knew wine, chocolate and flowers, the staples of any romantic occasion, could be used in such a hedonistic way, and she cried out again as he began to fuck her brutally, making the small bench like table rock beneath them. His hand continued to torture her breasts, making the sensations she felt all the more powerful, and she came quickly, feeling her body shudder and pulse in sensory overload.\n\nSensations overloaded Sinclair in the same way as he heard and saw and felt the woman below him explode in ecstasy, knowing he had given her that, and he joined her offering little resistance as he felt his climax rushing up through his body and he cried out with her. The moment seemed to last for much longer than he knew the reality to be and, when he collapsed over her panting, he undid her hands, wanting to feel her wrapped around him as she normally was at the end of their trysts.\n\nOn a sugar high, Carrie recovered quickly and attempted to turn the tables on Sinclair, but he caught her arms, pulling them above her head as they rolled to the floor, and yet another round of teasing, taunting and eventual fucking began again.\n\nThe sun had risen when they finally went to shower and leave the hotel room after a night of sleepless passion. Carrie knew she would struggle at work, but had been determined to go in for at least half a day, despite Sinclair's protests. When he dropped her at the museum, she had kissed him and thanked him for an amazing first Valentine's Day.\n\n*****\n\nThe Friday following Valentine's day, Carrie left London with her father to meet another member of the family she didn't know she had. Still coming to terms with the fact that she was a Windsor, and what that meant, she had been formulating all the questions she wanted to ask in her mind for days. Once in the quiet confines of the car, however, she found it difficult to voice those questions. Gone was the aloof intellectual University professor and in his place was an imposing aristocrat that seemed to want to claim her as his daughter after a lifetime of barely acknowledging her existence.\n\n\"I imagine you have questions, Carrington,\" he said in a friendly voice, as if wanting to draw her out. \"You did say you wanted to spend time with me since my arrival at your engagement party.\n\n\"I do,\" she admitted. \"Suddenly I'm not sure where to start though.\"\n\n\"I find it's always helpful to start at the beginning. Tell me about growing up with Robyn, and I will fill in any blanks and answer any questions that come up along the way,\" he suggested, still using the same friendly amicable tone.\n\n\"Surely you know about my childhood; I saw you when I was younger at least once a year,\" she said, her brow furrowing as she turned to look at him.\n\n\"Robyn was a remarkable woman. She was talented and intelligent and had an understated beauty that I found captivating. She and I had a brief relationship, during which she fell pregnant. I offered to marry her to give you a name. I loved her then, I didn't know, or, at least, understand her obsession to see the dangers to you until much later,\" he admitted.\n\n\"I don't understand,\" Carrie continued to frown.\n\n\"Robyn hid the fact that she was driven by a skewed view of the world and loyalty to her family that bordered on obsessive. She knew I was a Windsor and had banked on the fact that I would protect you if her plans to redeem her family's name and place in the Association of Hats went awry,\" he expanded his explanation. \"The marriage was only a piece of paper to her, another step in her and Edith's plan. You see, there is an old addendum to the original agreement of the association members. If a family became estranged from the Hats, they could buy their way back in by procuring a particular item from each of the remaining families.\"\n\n\"Robyn's plan really was her plan,\" Carrie whispered almost to herself as realisation dawned as she listened. \"Edith said it was your plan, or at least the Windsor's plan to restructure the association, which was why we needed the artefacts.\"\n\n\"That had become true of late, though, when my relationship with your mother began we were unaware of the deep rifts and hidden agenda's within the association. That is why I have been summoned to London. Edith has been making demands and threats about the exposure of some of the less altruistic activities of the Hats if we do not hold to our end of the addendum. Once you steal the last piece needed for Jordan to buy his way back into the table, we assume her demands will change again with her ideas on restructuring the association.\" William was open and honest with Carrie, knowing her to be a shrewd judge of character and speech patterns. \"It is in our best interests to go along with Edith's plan for now and then restructure as we see fit once she is dealt with.\"\n\n\"You'd sell your daughter into marriage to a practically incestuous relationship just to appease a little old lady like Edith?\" Carrie asked, horrified her fears about Jordan becoming stronger ever since the revelations and breaking down of the last barriers between her and Sinclair that Valentine's Day had wrought.\n\n\"I'd what?\" William spluttered. \"Sinclair is no direct relation, at least not enough to make your relationship incestuous.\"\n\n\"Jordan, Edith says I must marry Jordan to make the family line complete so he can take his chair at the table,\" she said angrily. \"They have threatened Sinclair's life. They ran him over with a motorcycle because I wasn't toeing the line.\" Tears glistened in Carrie's eyes with the weight of emotion she felt about the accident and Jordan's continued threats against Sinclair.\n\n\"That has nothing to do with the plans of my family. As far as I am concerned you are free to marry whomever you like. The Bonnet's, though, have always had their own agenda, and you being part of my family is no doubt part of that agenda,\" he said, considering the information.\n\nCarrie sat in silence. The man beside her sounded so rational and reasonable, and she found herself getting angry that he had left her in the hands of a woman whose love was conditional on Carrie's obedience and performance in this plan.\n\n\"You must have known that Robyn kept me isolated and was training me to be the master thief who would take those objects from the association,\" she accused. \"Yet you let her use me like that.\"\n\n\"Do you honestly think, knowing your mother's opinion of me, that she would have shared any of her plans with me?\" he asked, his voice colouring with some emotion for the first time. \"She covered her tracks well. She sent me pictures and report cards of you every year when you were younger, these became less as you got older. She also made it harder and harder for me to see you. I guess I believed it was for the best, because, each time I saw you, you seemed happy and well adjusted. I never questioned that you were well cared for, I had no reason to at the time. She even hid her illness, and when the thefts began to create a pattern I assumed it was her, you were so young. When she died, you refused to see me, even at her funeral. At least, that is what Edith had told me, and I didn't want to upset you any further at the time.\"\n\n\"So why now? Why seek me out now?\" Carrie wasn't convinced by his words.\n\n\"The theft from Rackham after your mother's death made me realise just how wrong I have been and I have been playing a catch me if you can game with Edith and her cronies. Now that I know the truth and have had the opportunity to see just what a strong and intelligent woman you have grown up to be, I think Edith may just have outlived her usefulness as a go-between. Any further threats she makes will be dealt with differently,\" William seemed to consider the stories his daughter had been told, not only about the association, but himself.\n\nThey continued to talk as they drove. Carrie desperately wanted to believe what William was saying to her, but a lifetime of believing him to be nothing more than an uncaring sperm donor kept her from embracing it as the truth. When they pulled up at a country house, she was still deep in thought and took a moment to take in the quaint surroundings. This was far removed from the affluent lifestyle of Sinclair and the other association members she had been associating with lately, and it took her by surprise.\n\nCarrie sat immobile and was startled when William opened her door for her. Taking his hand, she got out of the car. Feeling as if she had been in a dream, nothing about what he said made sense or rang true for her, and she wondered where they were and why. She became suddenly worried that she had so willingly left the city with a man she barely knew, let alone called father.\n\nWilliam entered the house without knocking and looked into the front room, finding no one. Raising his voice, he called out into the dimness, \"Mother?\"\n\n\"No need to shout, I'm old, not deaf,\" a tall, regal looking woman appeared in the hallway leaning on a cane. \"I see you brought her, good boy, now run along and let us girls get acquainted.\"\n\n\"Maybe I should make introductions first?\" he suggested, stepping between his mother and the confused looking young woman who was his daughter.\n\n\"We are more than capable of having a conversation without your interfering,\" she chided him. \"Come forward so I can see you, Carrington.\"\n\nCarrie took a deep breath and straightened her shoulders. She was a strong, capable, independent woman, and she was certainly not intimidated by the likes of the old woman standing before them.\n\n\"It's fine, William. I am delighted to find out I have another grandmother. I'm sure I can manage a simple conversation without a chaperone,\" she laughed lightly and touched his arm. Her easy manner belied the anxiousness tinged with anger that twisted her stomach at finding out she had an extended family who had never bothered to find or interact with her before now.\n\nHe looked between the two women and reluctantly walked from the house. Carrie watched him go, hoping that he wouldn't leave her stranded here, and felt for her phone in her coat pocket. Sinclair would drop everything to come and get her if she needed, she was sure of that. It was nice to feel so sure about at least one person in her life. Since her mother's death, she had been cast adrift time after time by the machinations of those she would have been able to trust and rely on. How much worse could anything this old woman had to say be than everything else she had endured in the last year.\n\n\"You have your phone and escape route planned, I trust,\" the old woman cackled and indicated that Carrie should follow her.\n\n\"It's always good to have an alternate exit strategy, and if I negate the use of your cane I think I could take you,\" Carrie said casually to see what reaction she would get.\n\n\"You show promise, but it's always best not to give your plans away so early when meeting a potential new friend,\" she paused and looked up at Carrie, her eyes as cold as ice. \"Or an enemy.\"\n\n\"Maybe I prefer to believe that, as my grandmother, you would at least be a frenemy,\" Carrie took the indicated seat across the small kitchen table from her grandmother. She noted that a perfect English tea had been laid on the table, complete with a three-tiered serving plate holding delectable morsels of food.\n\n\"Tea?\" the woman offered, \"Or do you prefer coffee?\" she indicated an old fashioned percolator sitting on the bench warming freshly brewed rich smelling, dark coffee.\n\n\"Tea would be lovely, thank you,\" Carrie said, letting her lips curl into a polite smile. \"Would you like me to call you Grandmother, or do you have another name? When I looked into my father's family history, his parents were listed as deceased, so I am assuming you are not Alice Wordsworth.\"\n\n\"No, I am not, but it is a shame you didn't get to meet her, she was a lovely woman. You may call me grandmother, or CC, as it may become confusing if you call me by my given name, Carrington.\"\n\n\"How would that be confusing?\" Carrie asked, not understanding what the woman had said.\n\n\"I think you misunderstood me. You were named after me, and I have found when discussing you that it can be unsettling, if not confusing, to have two Carrington's in the conversation, let alone the room.\" The woman gave her first small smile.\n\n\"Oh, I see,\" Carrie said with a frown. \"Most people call me Carrie, if that helps at all.\"\n\n\"I would rather not. Carrington is a family name, and I would rather leave it unsullied by such shortenings of it,\" she said sternly. \"It has been difficult for me to stay silent through your life and allow such a travesty to occur, but, thankfully, as insane as your mother became with her plans against the association fed by the lies of your grandmother and her cronies, she attempted to keep the name in its original form.\"\n\n\"Wait! What?\" Carrie spluttered, as once again she found that people knew about her upbringing and did nothing to help her celebrate a single Christmas or birthday. She felt her anger rise again.\n\n\"You don't think I would have left a grandchild of mine unattended, do you?\" the older woman questioned.\n\n\"Unattended?\" Carrie was speechless.\n\n\"You grew up in an atmosphere that may not have conformed to the societal norms, but you were happy. You loved your mother and your tutors. You became an intelligent, highly accomplished young woman in a way that could never have happened without your mother's drive and commitment to her foolhardy plan. Had I been concerned for your health or overall well-being I would have stepped in, but, despite everything, you matured into a lovely young woman who would never be taken advantage of by the unscrupulous.\" She paused and took a sip of her tea, allowing Carrie to speak, if she wished.\n\n\"You knew about Robyn's plans?\" Carrie asked in astonishment. \"William said he didn't know about my education or upbringing.\"\n\n\"There was no need to have your father charging in there and demanding custody. Men can be so stupidly protective at times. Trust me when I say that there is little we, my sisters and I, don't know, and, to tell you the truth, I wasn't sure if Robyn could do it, but you are quite an amazing young woman,\" the old woman acknowledged. \"You've made me proud with the way you have handled yourself over the years and how you are trying to deal with the truths you have discovered since your mother's death.\"\n\n\"It's been a hell of a year,\" Carrie admitted. \"It seems that every time I turn around someone is telling me what I have to do to ensure I have a future where someone I love doesn't die because of my actions,\" her voice held the anger she had been suppressing in the car with William.\n\n\"Yes, after seeing the reports on your activities in the Caribbean I knew it was time to act. Let me tell you the story of the Bonnet family, as I know it, and you can judge if I speak the truth for yourself,\" the old woman offered and waited for Carrie's assent before beginning her tale.\n\n\"Okay,\" Carrie hesitated. \"As long as you tell me the story of the Wordsworth's as well and how they are intertwined in me.\"\n\n\"Of course, Carrington, for the stories are all intertwined now,\" she smiled benignly and took a small cake from the tea tray. \"It was your many times removed Windsor grandfather who started the association, when Lord Windsor, was appointed to become governor of Jamaica just before the Golden Age of Piracy,\" she began the tale from the beginning of how these families all became intertwined and reliant on each other.\n\nCarrie knew how the association was formed, but it was interesting to hear it from the view of the Windsor side of the story and the people who ultimately gave the orders and pulled the strings of the lesser members. She had known that slave trading had occurred during this time, but from Sinclair's point of view they had not endorsed nor aided in the sale of human beings. To hear her grandmother, tell the tale, half of the table made great fortunes from the practice while the other half opposed the practice, with only a few staying neutral.\n\n\"As time went on and the trade became less prolific, some families sought out other buyers while others disbanded the practice completely. This led to a rift in the association fuelled by long-held family feuds. Most of the descendants of those original men of the association remained unknown and shrouded in anonymity, with only one direct male heir linking them to the other families at an annual gathering hosted by the descendants of Lord Windsor.\n\n\"Each family sought to throw off the yoke of the Windsors by linking themselves to world powers and organisations who influenced those world powers so that the Windsors had little more than a traditional power amongst the group, or so it seemed. In truth, they always held power with the world leaders and, while the name may give the impression of links to royalty, it is merely a happy circumstance that they don't disabuse amongst the members of the association.\"\n\nShe went on to explain that the tentacles of the organisation known as the Windsors by the association were known by many names worldwide. They were, for want of a better analogy, the shadows behind the playmakers and the seats of power in countries labelled western, eastern and even middle eastern civilisations.\n\n\"As the saying goes, behind every great man stands a great woman,\" she paused, letting that statement sink in. \"You can be one of those great women, Carrington. Despite your mother's strange maternal practices and unwavering belief in Florence and Edith's dream of re-establishing their family and name amongst the rich and power men of the association, she brought you up strong, independent and clever like a fox.\"\n\n\"That doesn't make sense,\" Carrie shook her head. \"The first Earl and the resolute rule that only male heirs can sit at the table of the Hats.\"\n\n\"Men,\" she rolled her eyes. \"So easily corrupted and manipulated. So many men more than willing to make a grab at power, but those who wield true power, those who would make the world a better place, are not the ones in the news singing their praises, they are the ones who know where the power lies and respect it.\"\n\n\"I'm not sure I understand what you're saying and how it affects me,\" Carrie said.\n\n\"Don't start playing the fool now, Carrington,\" the old woman admonished.\n\n\"Fine, but if you have been watching the last year of my life as closely as you say, then you should understand why I would be sceptical of your assertion that I could be a great woman on the world stage. What do I have to do? Steal something? Smuggle information? Assassinate someone? There's always something.\" Carrie said flippantly. \"My life is one long absurd blackmail list. What is it you want from me?\" Carrie let the derision drip from her words.\n\n\"It's what I can do for you, my dear,\" the old woman cackled, \"Though I fully understand your scepticism.\"\n\n\"Oh, and what can you possibly do for me, aside of what everyone in my life attempts to do?\" anger tainted the question making it sound venomous.",
        "\"You have a backbone. Good, I like that,\" the old woman was not put off by the venomous retort. In fact, she had expected it much earlier in their conversation. \"Hold onto that anger, because I am about to give you the tools you need to harness that anger and gain your independence so that you can enjoy the love and loyalty of the one man who is possibly as close to your equal as we could hope for.\"\n\n\"Sinclair?\" Carrie asked in astonishment.\n\nThe old woman cackled and helped herself to another delicate morsel from the tray.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "valentine's day",
        "dungeon",
        "family",
        "submission"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-fool-ch-10"
}