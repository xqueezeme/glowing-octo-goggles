{
    "title": "Secret Smiles and Three Little Words Pt. 44",
    "pages": [
        "Chapter 61 \n\nOpening the door brought a smile to Alex's face. \n\n\"Good morning!\" Madelyn smiled. \n\n\"Good morning!\" Alex returned as Madelyn hugged her. Alex then moved to the side and let the woman in and watched her look around. \n\n\"I thought it was about time to come and take a look at your new home!\" Madelyn smiled as she looked upon the auburn haired beauty. \n\n\"Thank you, Mistress,\" Alex bowed her head. \n\n\"How are you guys getting along out here in the burbs?\" Madelyn smiled hooking her arm into Alex's. \n\n\"Good,\" Alex sighed and guided Madelyn to the living room. \"Nora is happier now, has a friend right next door who plays with her daily. They are almost inseparable now!\" \n\n\"That's fantastic!\" Madelyn beamed as she sat on the sofa and Alex joined her. \"I was worried about her after Gavin told me about no other kids there in the condo!\" \n\n\"Yeah,\" Alex nodded. \"I don't know if Gavin was ready to move out here, but he initiated everything. I hope he was ready.\" She smiled weakly. \n\n\"One thing I know about Gavin,\" Madelyn patted her hand. \"If he wasn't ready, he wouldn't have moved!\" \n\n\"I hope so,\" Alex shrugged. \n\n\"What's wrong?\" Madelyn asked her. \n\nAlex shook her head, she forgot that Madelyn was as adept at reading people as Gavin was, so hiding anything from her would be impossible. How does she tell this woman who is as close to Gavin as she was? Perhaps even more, Madelyn, without a doubt, had taken the position of mother to Gavin. Madelyn was also protective of him as well. \n\n\"Gavin has had his life flipped upside down now,\" Alex admitted wringing her hands a bit. Something Madelyn didn't miss as she put her hands on Alex's to keep her from doing it. \n\n\"I'm afraid, my coming into his life isn't what he expected, or wanted,\" Alex continued. \"I mean, going from bachelor and Dom, a life that was perfectly orderly, to a life with a demanding sub whose family rears its ugly head to show just how horrible they can be.\" \n\nAlex got up and went to the bay window and looked out towards the neighborhood. \n\n\"I mean, what kind of family attacks its own to the point of suicide?\" Alex asked. Her voice shaking a bit as she thought of Livy. \"Then to have his life destroyed by having a child brought into his orderly world. Going from happy bachelor to father figure overnight.\" \n\n\"Moving way out here, amongst the 'Joneses' with their mini vans and soccer practice,\" Alex continued. \"How much upheaval can he take? I know my Sir likes order, but ever since I came into his life...I have brought nothing but chaos!\" \n\nAlex stood there, the silence filling the large living room as she waited for Madelyn to respond. The warm sun filing in through the bay window couldn't stop the cold shiver that ran through her when she heard Madelyn take in a deep breath and sigh noisily. \n\n\"Are you through feeling sorry for yourself?\" Madelyn asked her. This caused Alex to look over her shoulder at the elderly woman. \n\n\"Let's clear up a few things, shall we?\" Madelyn asked her patting the seat next to her in a not so subtle command for Alex to return. \n\n\"First,\" Madelyn smiled after Alex returned as order. \"You aren't giving him what he wants.\" Madelyn let that hang in the air for what seemed like an eternity and Alex's heart flopped and she nearly vomited on the new couch. \n\n\"You are giving him what he needs,\" Madelyn finally told her. \"In life, we don't have to get what we want...but we have to get what we need.\" Alex tilted her head and looked at Madelyn. \n\n\"Make no mistake, my beautiful Alexandria,\" Madelyn smiled. \"I know him better than anyone, and that includes you. You are exactly what he needs.\" \n\n\"You are pushing him into waters he never dreamed of,\" Madelyn smiled. \"Marriage? Kids? No, I'm telling you not since Carla has he thought of those things. I wondered if there was anyone who could push her from his mind.\" \n\nAlex sat there thinking of that, surely Madelyn was speaking the truth. She had no problem speaking it, no matter the repercussion. She also wasn't one to withhold her opinion to save feelings either. \n\n\"I knew that first night,\" Madelyn smiled. \"You were going to destroy his empty, unfulfilling, albeit orderly life.\" \n\n\"And in the most fantastic, loving way,\" Madelyn smiled. \"No, my dear Alexandria, you have turned his world into chaos...but that is what love is. Chaos, it swirls around us, tips us off balance and makes us reevaluate everything we thought we wanted.\" \n\nAlex took Madelyn into her arms and hugged her. \n\n\"Thank you,\" she whispered as the single tear rolled down her nose. \n\n\"Oh, sweetie, no need to thank me,\" Madelyn assured her. \"It is I who should be thanking you, for saving my Gavin!\" \n\n\"I don't feel like I've saved him as much as he rescued me!\" Alex smiled pulling back. \n\n\"Then you both have the right frame of mind,\" Madelyn nodded. \"If you both think you aren't good enough for the other, then you will continue to strive to please one another, to prove your worthiness.\" Alex nodded that she agreed as she wiped the tear free from her eye. \n\n\"Now,\" Madelyn exhaled. \"I talked to your father last night, he sounded stronger.\" \n\n\"Yeah,\" Alex nodded. \"He is feeling...wait...you talked to my father?\" \n\n\"Yes,\" Madelyn said in a tone of 'duh, of course I have'. \n\n\"Why would you be speaking to my father?\" Alex asked her. \n\n\"I believe we are waiting on him to recover to walk you down the aisle!\" Madelyn told her. \"We have a wedding to get to.\" Alex laughed. \n\n\"With all that we have been going through,\" Alex shrugged. \"I guess the wedding became secondary. I don't need the man to marry me, I'm happy enough just being in his life!\" \n\n\"No, no, no,\" Madelyn shook her head. \"Neither of you need to be married to each other...I need you to be married. Call me selfish, but I want to see my son married before I'm dead. I was beginning to wonder...now I know it's going to happen.\" \n\n\"Want or need?\" Alex teased. \n\n\"Need,\" Madelyn said firmly. \"I need to make sure Gavin has the right woman in his life to make him truly happy. You do that.\" Alex beamed. \n\n\"Now,\" Madelyn continued. \"Al seems to think he is ready now, Gavin says it could be a few months. What do you think?\" \n\n\"I know my dad,\" Alex frowned. \"He would put himself in jeopardy for me...so when Gavin says he is ready, I will believe he is ready.\" \n\n\"Ok,\" Madelyn frowned. \"So, we wait until next spring?\" \n\n\"Spring?\" \n\n\"Dearie,\" Madelyn laughed. \"Spring is the best time to marry, the blooms will be stunning at my house then!\" \n\n\"Yes ma'am,\" Alex laughed with her. \"It seems so long!\" \n\n\"It is,\" Madelyn agreed. \"But according to Gavin, Al won't be fully ready until the end of the summer. That leaves the fall, but an outdoor wedding in the fall? In northern Illinois? Not in your dress!\" \n\n\"My dress?\" Alex asked. Madelyn nodded. \"You've seen my dress?\" Madelyn nodded again. \n\n\"What does it look like?\" Alex blurted excitedly. \n\n\"Stunningly elegant,\" Madelyn said with a dreamy sigh. \"But sexy.\" \n\n\"When can I see it?\" Alex asked her. \n\n\"As soon as you fly to New York,\" Madelyn shrugged. \"That's where I saw it. It is sitting in Carolina's office.\" \n\n\"She has it in her office?\" Alex repeated. Madelyn nodded. \n\n\"I think she is still tinkering with it,\" Madelyn shrugged. \n\n\"Is it going to be super expensive?\" Alex carefully asked. \n\n\"Define expensive?\" Madelyn asked. \n\n\"Like more than a couple thousand?\" Alex asked. \n\n\"We obviously have different ideas of what 'expensive' means,\" laughed Madelyn. \n\n\"You are not going to tell me, are you?\" Alex asked her when Madelyn sat staring at her with a smug grin. \n\n\"No,\" Madelyn said bluntly. \"It's not any of your business since it's my gift to you. And it's rude to ask the price of a gift. I won't discuss it!\" \n\n\"It's my wedding,\" Alex pointed out. \n\n\"Which I'm paying for,\" Madelyn countered. \"Therefore, costs are my concern, not yours.\" \n\n\"But,\" \n\n\"I'm not quarreling with you again over this,\" Madelyn cut her off sharply. \"That is done!\" \n\n\"Yes Mistress,\" Alex said shaking her head. \n\n\"Now,\" Madelyn smiled picking up her hand. \"How about a tour of your new home?\" \n\n\"Of course,\" Alex agreed with a forced smile. \n\n*** \n\n\"Good afternoon Maole!\" Alex called out as she entered the back room where he was directing a hanging of one of Alex's paintings. \n\n\"Oh, thank God!\" Maole called out as he saw her. \"I have been trying to get a hold of you all day!\" \n\n\"Sorry,\" Alex smiled as he hugged her. \"I was with Madelyn all afternoon.\" \n\n\"Madelyn,\" Maole shook his head. \"And this must be the beautiful Princess Nora!\" Maole smiled looking down at her. Nora stuck out her hand and nodded. Maole laughed as he enclosed his long black fingers around her tiny hand. \n\n\"What do you ladies think?\" Maole asked them sweeping his arm around the room. \n\n\"I can't believe you are giving me a whole room!\" Alex gasped again in disbelief. \n\n\"Oh, sweetheart,\" Maole said shaking his head. \"You should see the responses I have received since I sent out the invitations!\" \n\n\"Anybody and everybody is coming! I have professional athletes, Congressmen, actors, directors...owners of multi-billion dollar companies and heads of state coming! Including the ambassador of Japan!\" \n\n\"Jesus!\" Alex gasped. \n\n\"I know!\" Maole agreed. \"This place is going to be packed!\" \n\n\"That is just incredible!\" Alex told him in a near whisper. \n\n\"I hope you have been working?\" Maole asked her carefully. \"I know you have been going through a lot, but I don't think I have enough art!\" \n\n\"I haven't been,\" Alex admitted. \"There has been so much going on!\" Maole frowned. \"How much more do you need?\" \n\n\"As much as you can paint!\" Maole gasped. \"I'm thinking there will be just over four hundred people here...they will be tripping over themselves to buy!\" \n\nAlex rubbed her forehead, she hadn't painted since Livy's death. She hadn't even picked up a brush! \n\n\"I'm sorry,\" Alex finally shrugged. \"I haven't any desire to paint.\" \n\n\"I understand,\" Maole said with a gentle hand to her shoulder. \"What we have will be fine, but it just means I might have to auction them off instead of just selling them outright. It will mean more money for you!\" \n\n\"No, no auctions,\" Alex told him. \"Just take names of those who don't get something, I will get back to work and they can have first dibs.\" \n\n\"Ok,\" Maole shrugged. \n\nWalking out of the art gallery Alex stopped and looked around at the city. \n\n\"Aunt Alex?\" Nora called from below. \n\n\"Yes baby?\" Alex said still deep in thought. \n\n\"Why haven't you been painting?\" \n\n\"No time,\" Alex smiled. \n\n\"Am I taking up all your time?\" Nora asked her. Alex squatted down to her. \n\n\"No,\" Alex shook her head. \"We have been busy, with the move, the packing, the new school...everything!\" \n\nAlex watched the little girl drop her head and Alex tilted it up with a finger. \n\n\"What's wrong?\" Alex asked her. \n\n\"I don't want to be a problem,\" Nora told her. \n\n\"You,\" Alex said holding her face. \"Are not a problem! You have made Gavin and I so happy! We love you, we love that you are with us...you are never a problem! You are a blessing!\" Nora nodded and Alex pulled the girl into her arms. \n\n*** \n\nThe next day, Nora was playing on the swings with some classmates when a group of children walked over. \n\n\"Hey new girl!\" one of the boys called out. Nora turned and recognized him as one of the boys who had been calling her names in the hallway. \n\n\"What?\" Nora said to him scanning the others that had come along. \n\n\"I heard you were adopted?\" the boy laughed. Nora's face burned with embarrassment as the other kids laughed. \"I bet you were, you are ugly enough!\" \n\n\"Leave me alone,\" Nora demanded. \n\n\"Or what?\" the boy asked her as he took a step closer to her. \n\n\"Leave me alone!\" Nora demanded again. \n\nThe boy gave her a little push and she glared at him. \n\n\"Yeah,\" the boy laughed. \"I'm guessing that a girl as ugly and stupid as you would have to be put up for adoption. No mother or father would want a piece of shit like you!\" \n\n\"Don't say that,\" said a girl coming to Nora's defense. \n\n\"Shut up,\" the boy barked at her. \"Your parents are hired help here, that's the only reason you can afford to go to this school!\" The girl dropped her head. \n\n\"So, did your mom and dad just dump you on the doorstep of an orphanage or what?\" the boy continued to taunt. Nora turned away and tried to escape the laughter. \n\n\"I heard her mother is dead,\" came a voice from behind the boy. Nora stopped. \n\n\"Is that it?\" the boy asked. \"Did Mommy die? After seeing you, I bet she killed herself because she felt guilty that she brought a piece of shit like you into the world!\" This got the group laughing. \n\nThe boy turned his head to look to his compatriots as they laughed with him. When he turned Nora was already in mid-swing as she punched the boy squarely in the nose, causing it to explode with blood. \n\nThis got the group to gasp in disbelief, but Nora didn't stop there. She straddled the fallen boy as he held is nose and she began to pummel his face, screaming in anger the entire time as tears raced down her face. \n\n\"Hey stop it!\" one of the boy's friends called out to her. \"You're hurting him!\" \n\nNora didn't stop, instead she let out a string of obscenities as she pounded on the cowering boy with her tiny balled up fists. The boy was doing his best to defend himself but the hands were coming too fast. \n\n*** \n\n\"Hello, this is Dr. Steward,\" Gavin said into his phone as he didn't recognize the number that showed up on his ID screen. \n\n\"Dr. Steward,\" the voice greeted. \"This is Father Andor at St. Timothy.\" \n\n\"Father,\" Gavin said turning from his patient. \"Is Nora ok?\" \n\n\"Um, yes, sort of,\" Andor told him. \"She is not harmed, but there was an incident...we have been trying to get in touch with Miss Lasko, but have so far been unable.\" \n\n\"What happened?\" Gavin asked. \n\n\"It seems Nora got into a fight, on the playground,\" Andor told him. \n\n\"Is she alright?\" Gavin gasped. \n\n\"Yes, she is fine,\" Andor assured him. \"A little shaken up, quite angry, it's the boy who was injured a great deal.\" \n\n\"I'm on my way,\" Gavin told him. \"Keep trying to get a hold of Alex!\" \n\nGavin made his apologies to his patient who waved him off and sent him on his way. Gavin raced through town getting to St. Timothy in record time. His tires squealed to a stop in the parking lot. Barely waiting for the car to come to a complete halt he jumped out and ran into the school. \n\nTurning into the office he saw Nora sitting just outside of the Dean's office, her head down as she picked at her uniform. \n\n\"Hey baby,\" Gavin called out to her. Nora instantly began to bawl and wrapped her tiny arms around Gavin's neck and clutched tightly. \n\n\"That's ok baby,\" Gavin cooed. \"It's ok, you're fine.\" \n\nNora couldn't talk, instead she just held him and cried, flooding his collar with tears. Gavin held her tightly knowing she needed only to be held right now. The trembling in his arms told him she was scared of what was going to happen to her. Probably scared because she had hurt someone. Scared of what her new parents were going to say to her. \n\nGavin finally pulled away from her when she let loose her arms around his neck. He pulled the handkerchief from his suit jacket and wiped her face. \n\n\"Are you ok?\" he asked her as he did a cursory search of her, looking for injuries from the fight. He found only her hands swollen and red from where she hit the boy. There was some blood on her shirt, but he didn't know if that was from Nora or the boy. \n\n\"I'm sorry Uncle Gavin!\" Nora finally gasped. \n\nThe school secretary brought Nora a cup of water. Her hands shook as she took it from the woman and Gavin held his around hers to steady them. \n\n\"It's ok, do you want to tell me what happened?\" Gavin asked her. Nora dropped her head again after taking a drink. \"Go slow.\" \n\nNora told Gavin what had happened. What the awful boy had said to her. What she had done. \n\n\"I couldn't stop!\" Nora whispered at the end. \"I just couldn't stop!\" She began to cry again and Gavin pulled her into his lap and held her. \n\nThe secretaries in the office smile comfortingly at him as he kissed her head. Father Andor came into the office and looked at them. \n\n\"Dr. Steward,\" Andor said quietly. \"How is she?\" \n\n\"Shaken up,\" Gavin told him. \"How is the boy?\" \n\n\"A lot worse off!\" Andor grimaced. \n\n\"Do you want me to take a look?\" Gavin offered. \n\n\"No, the school nurse is capable of taking care of him,\" Andor shrugged. \"Why don't we step into my office?\" Andor suggested and led the way. Gavin set her down and held her hand as they followed. \n\n\"We are waiting for Mr. and Mrs. Papin,\" Andor told him. \"They are the boy's parents.\" Gavin nodded as he stroked Nora's hair. \n\n*** \n\nAlex's Mercedes came to stop and she jumped out and ran into the building in a full sprint. She had been out in her new studio working, she was so wrapped up in it she hadn't heard the phone. When she saw her light flashing on her cell phone she realized she hadn't taken it off the sleep mode from the overnight. \n\nShe only heard a little about a fight at school with Nora involved. After that she was running to her car and speeding through the neighborhood to get to St. Timothy. She saw Gavin's car and that made her feel a little better. Gavin was here at least. \n\nRunning into the office the look of panic caused the secretary to hold up her hands. \n\n\"She's fine!\" the woman told her immediately. \"She is with Dr. Steward and Dean Andor in his office.\" The woman waved her back and Alex took a deep breath before knocking and then entering the Dean's office. \n\n\"I'm sorry Aunt Alex,\" Nora blurted out as she began crying again. Alex scooped the small girl from her seat and held her in her arms as she sat next to Gavin. Gavin was holding Nora's hand. \n\n\"It's ok baby,\" Alex assured her. \"Whatever it is, we will work through it.\" Nora nodded into Alex's coveralls. \n\n\"Please tell me that isn't wet paint?\" Andor teased as Alex looked to him, then her paint covered overalls. \n\n\"No!\" she laughed. \"I mean, it should be dry by now!\" Alex laughed uncomfortably but the look on Andor's face told her he was joking. \n\n\"We are waiting for the boy's parents,\" Gavin told her. \n\n\"What happened?\" she asked him. \n\n\"Nora and the boy got into a fight,\" Gavin explained softly as he stroked the small girl's hair. \"Guess she beat him up pretty good.\" \n\n\"Oh my God!!\" Alex gasped. She looked to Nora who couldn't look her in the eyes. \n\nThe door opened up and the boy's parents walked in. \n\n\"There is the little brat!\" Mr. Papin barked upon letting his eyes fire up seeing Nora. Alex was about to say something when Gavin stood up quickly. \n\n\"Brat? If your boy hadn't been an asshole, my little Nora wouldn't have had to kick his ass!\" Gavin barked suddenly causing the man to take a step backward. \"How dare you! Come in here with your attitude and insult my little girl? You had better watch your step and your mouth or your boy won't be the only one getting an ass kicking!\" \n\n\"Enough!\" Andor barked causing both men to quiet. \"This is not good for Nora.\" \n\nAlex sat there stunned that the normally calm and reserved Gavin appeared on the verge of getting into a fist fight. Flashes of Royce and Gavin's brief fight at Madelyn's that first night came to her. It also appeared that Mr. Papin wasn't expecting it either as he had moved away and sat at the far seat away from them. \n\n\"Dr. Steward?\" Andor said to Gavin who was still staring down the boy's father. \"Doctor?\" Gavin shifted his eyes to the Dean. \"Please?\" Andor asked pointing to Gavin's chair. Gavin sat down and let out a deep exhale. \n\n\"Miss Nora,\" Andor shifted his tone to one of soft and comforting. \"I need to talk to your parents and the Papin's.\" Nora nodded. \"Do you feel up to sitting outside by yourself? If not, I can have Ms. Davies come down and sit with you.\" ",
        "\"No,\" Nora said softly. \"I'll be fine.\" \n\n\"That's my girl,\" Andor smiled. \"It will be just a few minutes. If you need her, have the secretary call Ms. Davies.\" \n\nNora nodded and slid from Alex's lap who reluctantly let her go. Nora stood on her tiptoes and kissed Gavin on the cheek and then kissed Alex in way of an apology. Gavin kissed her back. \n\n\"Don't worry baby doll,\" Gavin whispered. \"We are not mad at you.\" \n\nNora nodded but she didn't believe that. She had heard her father tell her that many times only to see him yell at her later when he had the time. Nora closed the door behind her and took her spot back in the chair outside. The secretary gave her a reassuring smile while she picked up the phone. Within minutes, Ms. Davies walked into the office and took a seat next to Nora and held her hand. \n\n\"It will be ok,\" Ms. Davies assured her. \"We all make mistakes.\" Nora nodded. \n\nAndor let out a deep sigh and leaned onto his desk. \n\n\"That girl had better be expelled!\" Mrs. Papin demanded causing Alex and Gavin to look to her. \"Children should not have to be exposed to that type of violence! My son is scared to death now!\" \n\n\"If I'm going to expel anyone,\" Andor began. \"It will be Lance.\" This caused all four adults to snap their head to them. \n\n\"What?\" Mr. Papin barked. \n\n\"We have a zero tolerance policy on bullying here at St. Timothy,\" Andor told them. \"Punishable by suspension all the way up to expulsion!\" \n\n\"My son doesn't bully!\" Mrs. Papin gasped. \"He's an angel!\" \n\nAndor dropped his head. \n\n\"Mrs. Papin,\" Andor began slowly. \"Your son has spent more time in my office for picking on the other students than the rest of the students combined!\" \n\n\"What?\" \n\n\"You haven't seen the disciplinary notices we send home?\" Andor asked surprised. \"Why do you think he has been staying late a lot of nights?\" \n\n\"He says he's on the basketball team!\" Mrs. Papin told him. \n\n\"He was kicked off the team,\" Andor said shaking his head at her na\u00efvet\u00e9. \"And it's not even basketball season anymore, we are in track season.\" \n\nMrs. Papin looked to her husband. \n\n\"He's a typical boy, causing some mischief!\" Mr. Papin told her. \"There was nothing to tell you.\" \n\n\"You've known?\" Mrs. Papin asked him. \"And you didn't tell me?\" \n\n\"Tell her that all boys act up,\" Mr. Papin asked Andor. \n\n\"To a degree, but your son has taken it too far,\" Andor told him. \n\n\"Here is what we know,\" Andor said holding his hands up to stop the marital argument before it could continue. \"I have talked to several of the students, including Nora and Lance. It seems Lance has been bullying Nora since her first day. Calling her names, messing with her books...,\" \n\n\"Hardly something that should require her breaking his nose!\" Mr. Papin barked. \n\n\"Nora broke his nose?\" Alex gasped, a small smile of pride creeping up. Andor frowned at her small smile but she could see behind his eyes he was smiling. \n\n\"Yes,\" Andor told her. \"The nurse believes so.\" \n\n\"And you're right, none of that would warrant a broken nose,\" Andor continued. \"And none of that caused the broken nose. It seems the kids have found out that Nora's mother has passed. He told Nora that her mother must have...\" Andor looked to Alex and paused. \"Brace yourself,\" he warned her. \n\n\"He said Nora's mother must have committed suicide because, and I quote 'Nora was so ugly',\" Andor said looking at his notes before looking to Alex. \n\n\"Doesn't sound so horrible to me!\" Mr. Papin said angrily. \"Sounds like normal kid's insults.\" \n\n\"Nora's mother did commit suicide,\" Alex snapped. \n\n\"Oh my God,\" Mrs. Papin gasped. \n\n\"So that gives her permission to hit my son?\" Mr. Papin growled. Andor held up his hand as soon as Gavin took in a deep breath to begin his verbal assault. \n\n\"The girl hasn't dealt with her mother's death completely,\" Andor told Papin. \"Until she confronts it...it will always be a sensitive issue!\" He defended. \"Now normally comments like that don't hit a mark, because most of the time it's just nothing. But for Nora...well it's not nothing.\" Papin sat back angrily. \n\n\"So what are you going to do?\" Mrs. Papin asked him. \n\n\"I'm giving them both in school suspension,\" Andor told them. \"They will be sent to the detention hall with their work and will work away from the other students. They will receive no recess, and they will serve after school late stay.\" \n\n\"But you aren't kicking them out?\" Mrs. Papin asked. \n\n\"No,\" Andor told her. \n\n\"I think the police should get involved,\" Mr. Papin demanded. \"That little girl should be charged!\" \n\nAndor reached for his phone and Alex gasped thinking he was actually doing it. \n\n\"Would you have the school resource officer come in here, please,\" Andor sighed. Within a few minutes a man walked in. \n\n\"Mr. and Mrs. Papin, Dr. Steward and Miss Lasko,\" Andor said beginning introductions. \"This is Officer Amond Code, he is with the Chicago Police Department, he is also what we call our resource officer, DARE officer and school security.\" \n\nThe tall man nodded at the four parents and sat in a chair to the right of Andor. \n\n\"The Papin's believe Nora should be charged,\" Andor told him. Code shook his head. \n\n\"First off, we don't charge children with battery in cases like this,\" Code told them. \"This was a school fight, it wasn't anything...for lack of a better term...malicious.\" \n\n\"Have you seen my son?\" Mr. Papin barked. \n\n\"I have,\" Code nodded. \"But it was a fight he started.\" \n\n\"My son never laid a hand on her!\" Papin railed. \n\n\"No, Nora got the upper hand and didn't hold back,\" Code said with a shrug. \"Now of course you can go down the precinct and file charges, but I can pretty much guarantee that as soon as a judge sees it, they will bounce it out as a school fight, not worthy of criminal charges. Especially seeing how it's a first offence for Nora.\" \n\n\"Well perhaps we should just sue?\" Papin said looking to Gavin who smiled. \n\n\"Again,\" Code continued. \"I don't think you will get much more than medical costs, if that, seeing how Nora has a right to defend herself.\" \n\n\"Defend herself? She attacked my son!\" Papin nearly yelled. \n\n\"Your son approached her,\" Code said firmly. \"He did so in a menacing manner with a group of his friends. Nora said she was not only angered, but afraid. She tried to walk away, something even your son admits to her doing. Your son continued with his bullying, resulting in Nora defending herself.\" \n\n\"Defending herself?\" Papin gasped as his face reddened with his anger. \"She physically attacked my son, something my son didn't do to her!\" \n\n\"But she still felt threatened,\" Code reiterated. \"He surrounded her with his friends. HE taunted her, HE was taller, bigger, and stronger...not only the fact he was a boy. HE had his friends around him, Nora was alone.\" \n\n\"No, Mr. Papin,\" Code finished as he sat back. \"If you do pursue this, my report will go into record as saying Nora defended herself against bullying she has been enduring for months. Something I recommended he be suspended for at least six weeks ago when he was picking on another student. See it's not just Nora he is bullying, there are several students he has been working over.\" \n\n\"Sounds like he got what was coming to him,\" Gavin shrugged. \n\n\"We do not condone violence here, Dr. Steward,\" Andor warned him. \n\n\"I do not condone my child having to endure the bullying from another child,\" Gavin retorted. \"It sounds like you have had plenty of reason to expel him but didn't. So my lawyer may just decide this school has not properly protected its students and he may want to countersue to make up for the lack of administrative control. I mean, if we are lawyering up and all.\" This caused Alex to glance at him. \n\n\"I have to protect my Nora,\" Gavin finished sitting back. \"I mean, if this school won't protect her...I will.\" Andor shook his head. \n\n\"As a matter of fact,\" Gavin said standing up. \"Based on what I heard? I suggest you rethink your decision to punish her. It sounds like she had to take matters in her own hands because you wouldn't protect her.\" \n\n\"Mr. Papin,\" Gavin said turning to him. \"If your son so much as looks at my little girl again, I swear to God, I will teach her to put him in the hospital.\" \n\nAlex sat there slack jawed. She was stunned. Gavin making threats? Holy shit! Gavin walked out and took Nora's hand and led her from the office. Alex sat in her chair watching them leave, her heart swelling with love and pride for both parties. \n\nAlex looked to Andor who had his little smirk going, she could tell he didn't take what Gavin said personally. She gave him a shrug. \n\n\"As you can see,\" Alex said picking up her purse. \"He is very protective of her. She will be spoked to at home, but I can assure you, we will tell her to defend herself if a similar situation occurs again.\" With that Alex made her way out. \n\n*** \n\n\"Am I in trouble?\" Nora asked as they sat around the table. \n\n\"Yes,\" Gavin said firmly. \"We do not believe in violence.\" \n\nAlex cast a quick glance at him before looking back to Nora. \n\n\"It doesn't solve anything,\" Gavin explained. \"Hurting people isn't the way to fix problems.\" \n\n\"He was picking on me,\" Nora explained. \n\n\"I don't care,\" Gavin said bluntly. \"Words do not mean you can hit him. We don't do that in our family.\" \n\nNora stared at the table. Alex watched her carefully. \n\n\"Nora,\" Alex said causing the girl to look to her with teary eyes. \"You can't hit people, I don't care how angry they make you.\" \n\n\"I'm sorry,\" Nora cried. \"He made me so mad!\" \n\n\"Doesn't give you the right to hit him,\" Gavin told her. \n\n\"What if he would have hit me?\" Nora asked him angrily. \n\n\"But he didn't,\" Gavin said back calmly. \"He was doing what cowards do, he bullied. He was saying something that would get you to respond, and you did. With your fists, another cowardly act.\" \n\n\"Have I been kicked out of school?\" Nora asked him. \"Sandy said they would kick me out of school.\" \n\n\"No,\" Alex said after looking to Gavin. \"They haven't kicked you out, they are still thinking about what to do with you. It sounds like you are going to be given what they call in school suspension. Maybe.\" \n\n\"Maybe,\" Gavin sighed. Alex could see his jaw muscles tighten and knew if they continued with their plan he was prepared to do something. \n\n\"What are you going to do with me? Send me back to my dad?\" Nora asked. This caused Alex to sit back like she had been slapped. \n\n\"Let's get one thing perfectly clear,\" Gavin said his voice hardening to where Nora sunk lower in her chair. \n\n\"You are not going anywhere,\" Gavin said, struggling to keep his voice from being too harsh. \"Your mother wanted you with your Aunt Alex, it was important to her for you to be with us.\" Nora nodded. \n\n\"You are our daughter, our responsibility,\" Gavin continued. \"We love you, we will take care of you like our daughter, which is exactly what your mother would have wanted...make no mistake young lady, you belong here with us. There will be no going back to your father except for visits from time to time.\" \n\n\"Are we clear?\" Gavin asked dropping his head to cause her to look him in the eyes. \n\n\"Yes Sir,\" Nora nodded. \n\n\"Baby, we love you, we want you here with us,\" Gavin said softer. \"At first I didn't know if I could have a child in my life, but now I can't imagine my life without you. You have made your Aunt Alex and I so happy. You have made us a real family, but as with any parent and children, you have to respect us and do what we say...or there will be punishments.\" Nora nodded again. \n\n\"So,\" Gavin looked to Alex. \"We want you to go up to your room, we have to decide what punishment to give you.\" \n\n\"Spanking?\" Nora asked as she slid from her chair. \n\n\"We don't spank our children,\" Gavin told her. \"Ever.\" Nora nodded and smiled a relieved smiled. \n\n\"You spank me,\" Alex teased once she was out of earshot. \n\n\"You are not a child,\" Gavin grinned. \"And you enjoy them.\" Alex raised her eyebrows and smiled. \n\n\"Was I too rough on her?\" Gavin asked her. Alex shook her head. \"I have no idea what I'm doing here...I'm just kind of repeating things my father used to say...Jesus, I've become my father!\" Gavin blurted out in laughter. \"Bet he is laughing his ass off right now!\" \n\n\"Then he must have been a fantastic dad, because I thought you were amazing, firm but loving,\" Alex assured him. \"As always.\" \n\n\"This is not Dom stuff,\" Gavin told her. \n\n\"It is, without the sex,\" Alex disagreed. \"You have to maintain discipline while continuing to show love...you are an expert at it.\" \n\n\"What do we do?\" Gavin asked her. \n\n\"You are the Dom,\" Alex said looking to him. \"I'm not sure...,\" \n\n\"No we can't do that when it concerns Nora,\" Gavin said shaking his head. \"With her we cannot be Dom/sub we have to be mother/father, therefore our lifestyle will not be involved and any decisions will be made by us as a parental unit.\" \n\n\"What do you suggest?\" Alex asked him. \"Grounding?\" \n\n\"At least,\" Gavin nodded. \"She needs to understand the severity of what happened.\" \n\n\"I think she already does,\" Alex told him. \n\n\"She hit that boy,\" Gavin reminded her. \"She has to be punished for it.\" \n\n\"What about your stance at school?\" Alex asked him. \n\n\"They cannot punish her, I meant that,\" Gavin said firmly. \"It sounded like the kid needed his ass kicked and the school should have intervened long before Nora, but that still doesn't excuse her behavior. We will punish her in our home, but I will not allow her to be punished there.\" \n\n\"No,\" Alex agreed. \n\nOpening the door Alex found Nora laying on her bed looking at the wall. She looked over to Alex when she walked in. \n\n\"Is Uncle Gavin mad at me still?\" Nora asked her. \n\n\"Gavin isn't mad at you,\" Alex assured her pulling the girl into her side. \"He loves you, he wants to protect you, but you have broken rules.\" \n\n\"And Lance's nose,\" Nora admitted. Alex barked out a laugh which she quickly stifled. \n\n\"And Lance's nose,\" Alex repeated. \"Why?\" \n\n\"Huh?\" \n\n\"Why did you hit him?\" Alex asked her. \"That doesn't sound like my Nora.\" \n\n\"He said my mother killed herself because of me,\" Nora whispered. Alex sat there numbly. Her mind scrambled with what to do. How does she handle this? She knew the issue of her mother's suicide would come up sooner or later. Gavin agreed, he even wanted her to start seeing a child psychologist but she wanted to wait. Perhaps that wasn't the best choice now. Now she didn't have the skill she was afraid. \n\n\"Did my mom kill herself because of me?\" Nora asked when Alex hesitated. \n\n\"Absolutely not!\" Alex gasped. \"Baby, your mommy was so confused...she was so scared and confused!\" \n\n\"She left me here all alone!\" Nora cried out. \"It was supposed to be me and her! She promised!\" \n\nNora tore herself from Alex's grip and flopped face down on the bed and sobbed. Alex could do nothing but pull up alongside of her and hold her while she wept. Alex's eyes streaming tears as she cried with the fragile child. Nora cried so hard for so long that she fell asleep. It was only then that Alex got up and left her. \n\n\"Fuck!\" Alex barked in a hiss after she closed the door. \"Fuck, fuck fuck! God Dammit Livy!\" \n\n*** \n\nNora was washing dishes by hand even though they had a dishwasher. Extra chores were part of the punishment that Alex and Gavin came up with. She also had to write letters of apology to Dean Andor, Ms. Davies and to Lance Papin. At first Nora refused to write the letter to Lance, refusing to apologize. There was a small standoff between Nora and Gavin. She finally broke when Gavin threatened to send her to bed early every night until she wrote the letter. \n\nNow she stood on a step stool to wash the dishes from dinner. Gavin stood next to her drying the dishes off after she washed them. Alex watched her, she wasn't happy about the punishment, but then again, she shouldn't be. If she enjoyed it, then it wasn't a punishment. Something Gavin teased Alex about later that night when they had their first dishwashing. Alex enjoyed her spankings so they weren't really a punishment. The idea of it caused her to blush at the table as she thought about it while flipping through a magazine. \n\n\"Uncle Gavin?\" Nora started as she handed him a plate to dry. \n\n\"Yes?\" \n\n\"Do you believe in God?\" the little girl asked him. \n\n\"Yes,\" he said with a nod as he watched her begin with the next plate. \n\n\"Why don't you go to church?\" was the next question. \n\n\"Part of it is time, I really don't have any to go to church,\" Gavin shrugged as he took the plate from her. \"Part of it is I don't believe in organized religion.\" The look on her face told him she didn't understand, which he knew she wouldn't. \n\n\"It's complicated,\" he explained. \"I pray, I believe in Him, but I don't go to church because I don't want someone to tell me how to believe in Him. I don't want someone to tell me that to be a good Christian, I have to pray a certain way, or go to a certain church, or give a certain amount of money to be a good Christian.\" \n\n\"Then how do you know you are doing it right?\" she asked starting with her last plate. \n\n\"My heart tells me I'm doing it right,\" Gavin shrugged. \"See that is how God talks to you, He doesn't come down and talk like we are now...He speaks to your heart.\" \n\n\"Do you think my Mommy is with Him?\" Nora asked softly. \n\nHe knew it was coming, long before it left her lips. It still hit him like a punch. Gavin rested his hands on the sink as he thought about how to explain it to her. Explain the unexplainable? How many centuries has man tried to make sense of the things they didn't understand? Nora finally turned to him and he looked to her. \n\n\"Yes,\" he said with a nod. \"I know she is.\" \n\n\"How do you know?\" \n\n\"Because I asked Him,\" Gavin shrugged. \"And He told my heart she was safe.\" \n\n\"So I can ask Him questions?\" Nora asked him. \n\n\"Of course!\" Gavin nodded with a smile. \n\n\"And He will answer?\" \n\n\"If you are listening,\" Gavin nodded. \n\n\"How does my heart listen?\" Nora furrowed her brow. \"Does it have little ears?\" \n\n\"No,\" Gavin laughed, ignoring Alex's blurt laugh. \"When you quiet yourself in prayer, when you are on your knees...if you open your heart and ask Him, He will answer. You will know when He answers...I can't explain it other than to say, you will just know.\" \n\nNora was quiet again as she watched the water drain from the sink. Again, Gavin knew another question was coming, he just hoped it wasn't the one question he couldn't answer. The one question that even had him up at nights sometimes...why? Why, did Livy do this? \n\n\"Uncle Gavin?\" \n\nPlease God, not that question, Gavin begged. \n\n\"Yes?\" \n\n\"Do you believe in ghosts?\" Nora asked him hopping off the stool. Gavin laid the towel he was using on the counter and leaned against it. \n\n\"I don't know,\" Gavin shrugged. \"I've never seen one, so...I don't know.\" Gavin watched her nod. \"How about you, do you believe in ghosts?\" \n\nNora nodded and went to Alex and kissed her cheek. \n\n\"Can I watch TV now?\" Nora asked her. Alex nodded and they both watched her run from the kitchen. \n\n\"Odd,\" Gavin commented watching the doorway Nora just ran through. \n\n\"Very,\" Alex agreed. \n\n*** \n\nAlex knelt on the floor, the submissive position. After finishing the dishes, Gavin received a call and had to leave. Nora and Alex took turns reading out of a book until she was ready to go to bed. Now she was kneeling on the floor of their new bedroom, she had heard the garage door open and knew Gavin was back from his call. Now she just waited. \n\n\"Damn,\" Gavin said softly as he closed the door behind him. \"I thought you would be asleep by now.\" \n\n\"No, Sir,\" Alex smiled, happy to surprise him. \"I need my Sir.\" \n\n\"Do you now?\" Gavin grinned as he came to her and ran his fingers gently over her bare shoulders. Her eyes fluttered closed at his gentle touch. ",
        "His fingers gently moved lower on her body, down her back causing her to shiver involuntarily. This brought a smile to his face. Two years in and she was still excited by his touch alone. \n\n\"Stand,\" Gavin commanded softly. Alex rose with her head down, her chest beginning to rise and fall with a quicker pace as her excitement began to simmer. Gavin began a slow walk around her, his fingers brushing her hot skin as he went. \n\nAcross her stomach that she kept tight with her workouts, his finger gently brushing across her navel. A smile inched at the edges of her lips. He continued around her to where he was standing behind her. His fingers running down her hips and under the soft curve of the cheek of her ass. \n\n\"God, I love touching you,\" he whispered huskily in her ear. \"There are times that I can't believe I get to touch you anytime I want.\" She smiled as he kissed her shoulder. \"You are a gift from God, that I know. A gift to make me believe.\" \n\n\"Thank you Sir,\" Alex whispered back. \"I still don't think I am worthy of you.\" \n\n\"It is I who lack the worth,\" Gavin said into her ear as he kissed it. \"In my life and dreams, never has someone so spectacular graced it as you do regularly.\" \n\n\"The things you say...Sir,\" Alex gasped as he began to nibble on her hot skin. \n\n\"Come with me,\" he said taking her gently by the hand. \"I want to play with you.\" \n\n\"As you wish,\" Alex said with a smile. \n\n\"Sit,\" he told her gently. \"Here on the edge.\" He said patting the bed. She sat formally on the edge. Her hands gently on her thighs, her back straight, her chin down. \n\nHe went to the other side and guided her back gently, she watched through the tops of her eyes as he gently laid her on her back. He went to the dresser and pulled rope out, Alex let her eyes flutter closed in excitement. \n\nGently he pulled her arms above her head to the edge of the bed. He started the slow process of one of his intricate knots. First one arm, which he pulled tight and secured to the footboard of the bed. Then he worked the other arm in a similar fashion and pulled it taut to the headboard. \n\nAlex sat there luxuriating in the feel of his touch, his skill, his love. Everything he did, he did with a tenderness that made her weak in the knees. Even his spankings, which she enjoyed beyond what she would admit to, was done with love. \n\nGavin walked around to the other side of the bed, where her feet were. She felt him lift one leg, she watched him pull a strap out and wrap it around her mid-thigh then around her shin after bending her leg in half. Pulling the strap tight, the heel of her foot nestled tightly against the back of her thigh. \n\nHe let his finger probe in between the leather of the strap and her skin. Making sure it was tight, but not hurting her. For her part, Alex did nothing. She laid there looking at the ceiling at times enjoying the feel of his hands on her body, the tightness of her binds. It made her feel safe, she knew that was weird. Especially if she had to explain it to anyone. Here she was, bound to the bed, in an extremely vulnerable position. A position that could result in harm, but she had no fear. Not with Gavin. \n\nNo, instead she felt safe, like in a cocoon of safety. Completely at ease with the exception she knew she was about to be pleased to the point of orgasm. Probably powerful orgasms. It began to make her wet. Before she could even wonder if Gavin noticed he had his hand on her, running a finger across her sex causing her to convulse at the sensitivity she had there now. \n\nHe said nothing after gently running his finger over her slit, hitting her clit at the top and running his thumb across it. He continued his task, pulling another strap out to bind her other leg as he had done the first. Once both legs were bent and strapped he tied the strap with rope and pulled it tight to the footboard, causing her leg to open wide. He repeated the process with the other leg, tying it to the headboard. Pulling the rope tight enough to force her open to her maximum width. \n\nGavin ran his hands down her knee, across the inside of her thigh, to her sex. Running his fingers slowly over her ever dampening Venus, anxiously awaiting him in whatever fashion he would use her. \n\n\"I love the fact you are so wet already,\" Gavin said as he ran his fingers up the opposite leg, the one attached to the foot board. He carefully checked her binds, her hands, her feet and where the bindings touched her skin. Making sure she was not being harmed. Once he was satisfied he left her there, going back to the dresser for more toys. \n\nReturning, she lifted her head slightly to see the wand vibrator in his hands. He plugged it into the wall and let the soft hum of the toy fill the room and reach her ears. She dropped her head back and let it arch her neck as soon as he gently placed the toy against her. Her moan was almost immediate. \n\nGavin moved the toy to the top of her sex and let it vibrate atop her clit. She could hear him wet his fingers with his mouth before he carefully placed a finger inside of her. Penetrating her depths. He enjoyed the heat her sex was producing as soon as he had his finger planted to the knuckles. She began to grind her hips against him and this caused him to smile. Always so eager! \n\nHe began to thrust his finger in and out of her, holding the wand in place with the other hand causing a double dose of sensations for her. \n\n\"Such a good girl,\" Gavin whispered as she let out a soft moan. \n\nShe loved to hear that. She longed to hear it, nothing, not even 'I love you' matched that phrase. A good girl. Magic words that always caused her to become aroused to the next level. A goal she made sure she strode for during their sessions, to please him to the point he called her a 'good girl'. \n\nHer hips began to rock harder against his hand as her body began to show its appreciation for what he was doing. Her nipples hardening, her sex beginning to slosh with her excitement. \n\nAs soon as she was ready, Gavin inserted a second finger into her. He began to thrust harder, faster. She began to yip, a sound that was music to him. Her little 'hurumpf' as she thrust against his hand. \n\nHis secret smile on display as he watched her work herself against his hand as best she could being bound. Her body began to rock erratically as her body began to lock up with her impending orgasm. He watched her carefully, this pleased him most of all. If there was a more beautiful sight than Alexandria's orgasm, he had yet to see it. To him, this was the gates to Heaven, the glorious sight of a woman never to be seen by most. He was the fortunate one to see it. \n\nHer body locked up as her mouth hung open slightly, her face reddening with her held breath as she was caught in the tight grip of her orgasm. It held her tightly in its grip for an extended period of time, like her body itself was edging her. She came with a soft gush, that made him smile. The feel of her cum running down his fingers to his palm as he slowed his pace to let her drift gently down from Nirvana. \n\nWhen she could, she let her eyes flutter open and he saw her smile with those baby blue eyes and he was mesmerized all over again. He looked to her shaved sex. Her lips reddened by his fingers. Her sex wet in the light as he watched a small drip of cum slide down from her sex, to the tender space between her sex and her ass. \n\nGavin watched it disappear, then looked back at his impaled fingers. He pulled out slowly causing her to whimper. Dropping his index finger to the side of his middle finger he slowly worked three fingers into her causing her body to tighten at the wide intrusion. Now with three fingers, his index, middle and ring finger opening her up, she began to bite her lip. \n\nHe watched her carefully as she tried to relax her body to accept them. Once she had convinced her body to allow the widening, he began a slow pull and push causing her to whimper with the feel. Slowly at first, then picking up speed causing her to grunt at the immense pressure his hand was causing. \n\nWithin minutes her second orgasm pulsed from her body, but now with her sex opened she squirted out in a small stream. \n\n\"That's my good girl,\" Gavin whispered as he watched it happen. \"Get ready, we are taking this to another level.\" \n\nGavin retracted his index finger returning to just two fingers but he began to thrust harder into her, so hard in fact that a slapping noise could be heard as his hand slapped against her. She began to call out with each deep thrust, but with the speed he was using it sounded more like one long call. \n\nHer body went stiff as a board, her legs stretching against the leather that bound them. Her hands turning purple as she pulled against the binds there as well. The ropes digging into her wrists slightly as she pulled on them, her face a bright crimson as her body began to shake. All were telltale signs of how strong this next orgasm was going to be. \n\nAt the last second, he pulled his fingers out of her and rubbed her clit furiously with his fingers. Her cum shot from her body like a fountain, a steady stream that seemed to come from a squirt bottle rather than a result of her body. It was rare that she came this hard, though she squirted regularly. Coated his hand always, but these powerful orgasms that came from her like this weren't the norm. \n\nHe watched in happen in fascination, taking all of her beauty in. \n\n\"Holy fuck!\" she called out as her last statement as she was rendered mute and could only gurgle or grunt as the fluid shot from her. Once her body stopped she collapsed to the bed and gasped for breath. \n\nAlex sucked in air as best she could as her head spun wildly, her eyes snapped shut and she felt as if she was on a merry go round with her head spinning. She jogged regularly, and no matter how hard she pushed herself, nothing matched her shortness of breath than that of one of these 'super' orgasms she called them. \n\nNothing felt like it, she couldn't describe it. All she knew was that afterward, she wouldn't be able to move for a while, which didn't matter in most cases as Gavin would pamper her. Now with her tied up, she didn't know how long he would continue to play with her. \n\nHe slid his fingers back in her and began his hammering causing her to scream out in pleasure as his fingers seemed to ignite each nerve ending. He went back with the ferocity he was going at her before her powerful squirt. But now all her nerves down there seemed alive, like everything there was alive. It was part ticklish, part pleasure and part pain. Mixed together caused a sensation that went beyond words. \n\nSoon her body was pulling at the restraints again, her back arched as she tilted her hips to allow him deeper access which boggled her mind. She could hear the ropes stretch as she pulled at them with her muscle contractions. Again at the last minute he pulled his fingers from her and rubbed her clit with fury seeming angry. \n\nHer body again produced her cum in such a force that had her dizzy from it. She collapsed to the bed, her breath coming in short, choppy, ragged drags. Her chest heaved in short intervals as she tried to reel herself in as best she could, trying to regroup to get ready for Gavin again, just in case he wanted more. \n\nShe kind of hoped he did, and kind of hoped he didn't. She was already exhausted, she hoped this wasn't one of the long session they enjoyed where it went hours. The idea of Nora getting up in a few hours clicked in her mind. She dismissed it as quickly as it came, it wouldn't be the first time she was tired all day. She also couldn't think of a better reason to being exhausted. \n\nGavin disappeared momentarily and she heard the tub in the master bath come on. Part of her was relieved, and part disappointed. The hot feel of a wet cloth on her sex had her jumping in the bed. He gently cleaned her up a bit before burying his face into her sex causing her body to twist at the sudden attack from his talented tongue and mouth. \n\nIt was almost immediate, it seemed, that she came again, not that it was unusual. Once she was started, her orgasms were easy to evoke. Especially for Gavin who knew her body better than she did. He knew exactly where to dart his tongue into her. Where to suckle with his lips. The right pressure, the right speed as his tongue flicked against her clit driving her hips to try and catch his tongue as he maddeningly drove her repeatedly over the edge. \n\nFour more orgasms and she could do nothing but gasp as her body shook. He began to slow his oral assault on her as her body twitched with every lick now. Something she knew he enjoyed seeing as from time to time she could hear him laugh softly as her body moved like a puppet under his mouth. \n\nSoon he was just gently kissing her sex, like he was kissing a lover, his tongue gently probing but not trying to make her cum. More easing her down from where she had been floating. Her breathing came back, no longer in short gasps but in deep breaths. She could hear her heartbeat in her ears as she floated back to earth. \n\nShe closed her eyes as they were still spinning, and spinning in opposite directions she was almost certain! She felt the straps pull at her leg as he released her. Once her leg was free he carefully stretched it out to straight. Gently cupping the heel on her foot as he massaged her calf and thigh with his free hand. Once he was satisfied it wouldn't lock up on her, he repeated the process with the other leg. \n\nHe gently let her legs hang off the bed. The tingling of her legs let her know the blood flow was returning, it made her giggle slightly. He moved to the other side and undid her arms, continuing his massage of her tired, tight muscles as he released her. Soon she was free from her binds and she turned over to her side to look at him as he began to remove the ropes from the bed. Gently tying them to be used later. \n\nHe put them back in the dresser and then carefully lifted her from the bed and carried her into the bathroom. He gently lowered her into the steaming water and the water made her shiver with pleasure. \n\nGavin spent the next half hour washing her. Her hair first, his strong hands massaging her scalp which brought goosebumps to her skin. Then her body, carefully washing her completely. Taking extra care on her now raw sex. When he was done he laid her back in the tub, a soft towel behind her head. \n\nShe watched him change the sheets on the bed, she blushed with the knowledge that she was reason they had to be changed. She had wondered in the beginning of their relationship what the purpose of the vinyl covering on the mattress was. It was like a hotel mattress; she had never seen it in an actual home. Now she knew, she couldn't imagine what the mattress would look like after one of her super orgasms if the covering wasn't on. She was glad she didn't have to worry about it. \n\nGavin returned after putting the bed clothes in the washer, he remade the bed before coming back for her. He helped her up and dried her off with a warm towel. Carrying her to bed he laid her in and covered her up. After a quick shower himself he returned to bed and moved against her and wrapped his arms around her, enclosing her in his embrace. \n\n\"I didn't get to service you,\" she whispered tiredly. \n\n\"Yes you did,\" he smiled as he inhaled her scent from her freshly washed hair. \"I am completely satisfied.\" \n\nShe was asleep before she could respond, a smile on her face. Contently in love. \n\n***"
    ],
    "authorname": "CJT",
    "tags": [
        "bondage",
        "fingering",
        "squirting",
        "bathing",
        "oral",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-44"
}