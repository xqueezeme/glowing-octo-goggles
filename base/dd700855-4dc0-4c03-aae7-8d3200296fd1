{
    "title": "Any Chance We Could Ch. 43",
    "pages": [
        "This chapter is not meant to stand alone. Please begin at the first chapter to fully appreciate this tale. \n\nMonday, November 5th\n\nVeronica awoke with Mary Claire's hair against her face and arm across her chest. As she began to move Mary Claire opened her eyes and murmured, \"I love you, Mom. I really do.\"\n\n\"Thank you sweetheart, I love you too,\" softly replied Veronica brushing Mary Claire's hair aside a bit. \"Let's go shower.\"\n\nAs Mary Claire started to get up, Veronica playfully pulled her back down on the bed. \"But first,\" she grinned as she lowered her head to the nearest breast. The moment she latched onto the dark nipple her young lover cooed. Veronica licked and sucked it for a short while before leaning over to enjoy the second.\n\n\"Ohh, you do that so well,\" sighed Mary Claire. A moment later as her lover continued lovingly attacking her tit she added jokingly, \"I think you're a boob woman.\"\n\nBreaking from the breast Veronica kissed her. Before getting off her young friend she replied, \"I'm a boob woman as you put it. I'm also a pussy woman, and I'm definitely a cock woman.\"\n\n\"You're just a woman who enjoys sex and making love, Mom. I'm glad you do and helping me to become a woman who's also becoming addicted to sex.\" \n\nThey both slipped on short robes and wandered up to the master bath. The air was still warm from the previous occupants, more than likely Scott and Amy Anne she thought to herself. Since her lover's long hair reached the middle of her back, Veronica immediately helped Mary Claire wash her hair. As they were soaping each other, Mary Claire asked, \"You mentioned 'special women' last night. Who else is special to you? Mind you I'm curious, not jealous.\"\n\n\"Maybe a little bit, huh. Don't worry about being pushed aside, each of you are unique and have a special place in my life. They're Katrina and Ashley of course. Then there's Carol and Cindy. Carol has been a special friend and lover since we became roommates in college. Cindy, she is so easy to love and has had a difficult life. There's something erotic and playful about her.\"\n\n\"We all know you and Carol are totally in love with each other. It shows in how you interact and look at each other,\" Mary Claire said as she helped Veronica wash her back. \"I know what you mean about Cindy. My family may be dysfunctional but hers is super dysfunctional plus. Before she and I became intimate I loved her and wished I could whisk her away from her family. Mom and I talked about inviting her to move in with us but my father said absolutely no way.\" \n\n\"His position was unfortunate,\" Veronica said after a short pause. From what she knew of the father, she was not impressed. He projected an image of being a god-fearing and loving husband but in private he was anything but that. She was tempted to say he was a cold foolish asshole but she elected to give a neutral response. \n\nVigorously rinsing her hair again to make sure all the shampoo and conditioner was gone Mary Claire mentioned, \"Sometimes I've thought about cutting my hair.\" Throwing her head back and squeezing out as much water as possible she asked, \"I there anyone else?\"\n\n\"I hope sometime in the near future I can count Evie Graham as well,\" Veronica concluded as they stepped out the shower quickly since the water had just started to cool.\n\n\"Ooh, Evie. The little I know about her I'm really impressed not only with her intellect but her mature sensuality and beauty. I wouldn't mind being around her more.\"\n\n\"Maybe, someday we'll both get our wish,\" smiled Veronica toweling off Mary Claire's ass before kneeling on one knee to towel her legs while Mary Claire started to towel dry her hair.\n\n##\n\nShortly after arriving to work Cheryl remarked, \"Scott, I don't know what you guys did with Max Saturday night and Sunday morning, but he certainly has been grinning ever since. He's normally glued to the television watching one NFL game after another but he slept for three and a half hours yesterday afternoon. I doubt that Rams not playing had anything to do with it,\" she shook her head. She laughed as she continued, \"When he got up he asked if Beth and I could wear skirts, heels and stockings during dinner. After eating he had us kneel side by side on the couch with our asses up in the air, removed our panties and proceeded to fuck each of us with ten strokes and then moved to the other. I suspect he learned to do that from you guys, not that I'm complaining. He came in me after being in both of us about fifteen times. Then we cuddled until he said he was ready for another go. Beth and I were ready as well. He got the butt plugs and put one in each of us. After another fifteen minutes of eating us he had us resume the 'ass in the air' position and he fucked us both in the ass! That time he came in Beth and all three of us retreated to my bed where we promptly fell asleep. So thank you for whatever creative fucking skills you taught my son. I hope all three of the ladies enjoyed him.\"\n\n\"Oh, they did and hope he stays interested in trying them again,\" I smiled.\n\nMary Claire overheard the tale and said, \"In the ass huh, well where do I sign up? I've not done that yet. You'd like to do my ass wouldn't you Dad?\"\n\n\"Of course, you know I would, just ask.\" I grinned.\n\nKatrina was the only one with class this morning so she left after coffee and scrambled eggs but didn't fail to mention how much she'd enjoyed Cathleen last night. Veronica, Carol, Ashley, Mary Claire and I were eating when Lauren arrived in a short skirt, an untucked loose blouse, heels and bare legs. \n\n\"I have to change before we leave,\" she said. \"Should I do it now?\"\n\n\"Plenty of time. Eat first,\" replied Veronica. \"Where are you off to and with whom?\"\n\n\"Scott and I are going to the bank to get checks for tomorrow's closing and the cars, then he's got a lunch 'date' with Dave,\" she told Veronica. \"He'll bring me back here before lunch.\"\n\n\"As soon as I get a text from my sister I'm going to meet her and we're going to get a couple of persistent boys out of her life,\" said Ashley.\n\n\"I hadn't heard about that,\" said Veronica. \"Tell us.\"\n\nAshley told them of the plan they'd hatched to dissuade the two guys who had been following her around seeking dates. I told them I hoped it worked. It could backfire because they may like to watch two girls in action, so to speak.\n\n\"I know, Dad, but it's worth a try,\" responded Ashley. \"My fallback is to say that I might consider them watching us only after watching them together.\"\n\n\"That's nasty,\" I laughed, \"but it would likely work.\"\n\nAmy Anne and Cathleen came down the stairs together looking a bit disheveled, came to the kitchen to say goodbye and departed. We all grinned at each other as they walked out the door. I guessed they were going straight home. But whose home was in question because when they left they were still touching and teasing each other.\n\nVeronica and I went upstairs to change. As we walked into our bedroom I said \"We need to talk.\"\n\n\"You're upset about Max aren't you?\" she asked with an anguished look on her face.\n\n\"Veronica, for the last time, an emphatic no,\" I said curtly, I was feeling a little bothered that she kept asking. I paused to continue more calmly and lowering my voice a level, said, \"I enjoyed watching you getting fucked by him and you enjoyed him fucking you. As I've said many times before, indulge yourself. I want to tell you my thoughts about Carol.\"\n\n\"You don't like him fucking Carol?\" again with an anguished expression.\n\n\"No, yes. Let me state it clearly, I don't mind Carol being with Max either. Now can I say something without interruption,\" I said as I pulled her close to me and kissed her. \"If you agree, I'd like you to go to Dupree's and get rings for Carol. I'll have Cheryl make a plane reservation for Carol to join us in Key West on Tuesday of the honeymoon and we'll propose to her then. I'm sure Cheryl can figure out some way to make it a surprise when she takes her to airport that morning. I assume since we haven't heard otherwise she's been counseled by Evie and we have a green light from her viewpoint.\"\n\n\"Wow, I like that idea, a lot. Why not have her fly with us on Sunday?\"\n\n\"Remember she has that major meeting on Monday afternoon involving a dozen people,\" I reminded her.\n\n\"I forgot about that. She's presenting a report and recommendations to her boss, various University department chairs, possibly to the President too. Since I'm meeting Evie for lunch today I'll make sure she hasn't any problems with the idea. I'll go to Dupree's after lunch and order rings, similar to mine I guess. But a smaller stone if that's okay with you. Speaking of Dupree I haven't seen the delivery from last week, can we look at it?\" \n\n\"What've you got in mind for Carol?\" I asked.\n\n\"My design only with emerald side stones, a four caret center stone and a band that'll match ours. Sound okay?' she quietly asked.\n\n\"Whatever you want sweetheart, you know I'll love it,\" I smiled and kissed her gently.\n\nI dug around in the back of the shelf of the closet and brought out the still sealed package. We opened it and admired the wonderful job he'd done with the celebratory rings and the intricate pattern on the girls' wedding bands. Veronica was quite taken with her wedding band with the four violet diamonds. \"You did good, stud.\"\n\nWe had just undressed when Mary Claire and Cheryl knocked and walked in the open door. \"Ooh, gonna play? Can we too?\" asked Cheryl looking at my hard cock.\n\n\"Maybe later,\" I said. \"What can we do for the two of you besides love you?\"\n\n\"Mary Claire and I were discussing meals for this week and noticed that neither of you have anything scheduled for any night this week and we just wanted to make sure before restocking the pantry.\"\n\n\"Speaking of the pantry, which is being designed to support a family of six or seven. I think we may need to almost double that along with larger refrigerator and freezer capacity,\" observed Mary Claire. \n\n\"Scott's seeing Dave for lunch and will it mention to him,\" Veronica responded. \n\nI sat on the bed in my briefs leaning against the headboard with my arm around an equally scantily clad Veronica who was leaning back against my side. \"I suppose we'll go to the club on Friday, but I'm not yet clear-headed enough to remember any other evenings. We'll let you know when we come downstairs,\" I smiled.\n\n\"I'd like Lauren to stay for dinner tonight,\" replied Veronica.\n\nAt the door, Cheryl turned and said \"Keith and two other guys are here installing two larger hot water heaters and the wine cellar, so I'd suggest being fully dressed when you come down.\"\n\nAs they walked out I said, \"Stay a minute Cheryl.\" She turned, came back in and I continued, \"Make some notes please. This is a surprise for both Katrina and Ashley as well as for Carol. Charter a plane to bring her to Key West on the Tuesday of our honeymoon. Call the same firm we used at the office. I'll get you directions to the house where we're staying. Arrange for a limo to bring her to us from the airport. I've already talked to her supervisor and he says she still has thirteen days to take by year end and approved four days off. I want this to be a surprise. You'll have to pack some clothes for her, maybe with Lauren's help and have a suitcase hidden in the trunk. Try to see if you can get her to take part of the day off that Tuesday, or possibly with the help of her supervisor see if you can get access to her calendar to arrange for a meeting at a conference hotel by the airport. When she arrives, let her know about the charter flight. Work up a plan and implement it. Also check with the charter company that the return flight will have room for five,\" I concluded. \n\n\"Her events need to be on our household calendar as well,\" interrupted Veronica. \n\nAs we left the master bedroom Lauren was coming out of the spare bedroom dressed in a grey skirt suit, a silver grey blouse under the jacket, grey hose, and black patent pumps. \"Oh, very nice Lauren,\" remarked Veronica.\n\nI watched two delightful asses swing as they descended the stairs in front of me.\n\nAs we reached the first floor Mary Claire was talking on her cell. \"Yes, that sounds great ... Tuesday and Thursday at three ... Your apartment, sure ... Saturday night? ... Yes, I'm free ... Six? ... I guess we're going to eat somewhere? ... Okay, I've been wanting to try that. ... Sounds exciting. ... Thanks, see you this afternoon. ... Bye.\"\n\n\"Gloria is going to the help me prepare for the ACT test next month. She's helping her step-sisters as well. We'll meet at her apartment this Tuesday and Thursday. We're also going out Saturday night. She wants to take me to a lifestyle gathering, Carol's group. Is that okay?\" she asked hopefully.\n\n\"Of course, to both the tutoring and the party. Please ask Carol about the party before you go,\" Veronica replied. \"You'll want to know what to expect before you commit.\" Mary Claire nodded.\n\nIt was very pleasant riding to the bank with Lauren. She had turned a bit in the seat and hiked her skirt up enough for me to enjoy her long legs and her stocking welts. While we talked about some of her expectations she leaned over to put her lips close to my ear at a stop light and said, \"I've never felt so loved as I did Friday night when you were fucking, er, loving me. It was more than just the best sex I've ever had with a man, even Dad,\" she said lightly kissing my ear lobe.\n\n\"I'm glad you feel that way, but I feel I could've focused more on your pleasure. I'll make it up to you,\" I smiled as I turned to look into her eyes.\n\n\"You never need to make anything up to me. Just please yourself as well as me, and leave me feeling well loved and I'll be satisfied, okay?\" she replied.\n\n\"Yes,\" I replied as I ran my hand all the way up under her skirt to lightly squeeze her bare thigh above her stocking top and graze her g-string with the tip of a finger.\n\nWe handled our business at the bank expeditiously because she'd alerted them on Friday. We arranged some security words so she could have access to our operating account via the phone if necessary. We also got a handful of additional debit cards, seven to be exact. I gave them to Lauren and made her responsible for keeping one herself and giving them to Cheryl, Katrina, Ashley, Mary Claire and Cindy. For future use if needed the seventh would be kept in the vault being installed in her new office.\n\nI asked her to accompany me to the closing tomorrow. She immediately called Cheryl to put it on the calendar. When we got home Cheryl had a message from Dave saying that his daughter had taken his truck to pick up a chair that wouldn't fit in her car and she'd gotten delayed at the warehouse. He asked if I would I pick him up at his office at eleven-thirty. \"He said you needn't call him back, he'd see you at eleven-thirty.\"\n\nVeronica, Ashley and I gathered our coats at the same time. After we all kissed Cheryl and Lauren, Veronica asked, \"Lauren can you and Cheryl stay for dinner? \"\n\n\"I can,\" replied Lauren.\n\n\"I can't,\" replied Cheryl, \"I'm meeting my attorney at four.\"\n\nCheryl had given me Dave's address, an office building in a small strip mall of mixed office and retail on Clayton Road west of I-270. When I walked up to the building I saw the name of some national sales company on the outside wall and when I walked in the front door I found Dave's name and office number on the reader board. I also saw Keith's name with an adjacent office number. The leasing company had a notice that a suite of available offices was posted below the directory.\n\nIn the central entry foyer was a gray-haired receptionist typing at a computer and all three names were listed on the front of her workstation. She buzzed Dave and then directed me down the hall to his office. \n\nDave's office contained an architect's drawing board covered with rolled and unrolled plans and an attractive, young, well proportioned brunette sitting at the desk on the phone. After Dave and I exchanged greetings and made small talk for a moment, the young woman hung up, stood, extended her hand and introduced herself as Joy Mays. \n\n\"You're Keith's wife?\" I asked trying to keep from looking down her half-open blouse without first looking her in the eyes.\n\n\"Yes. I usually work in Keith's office next door as his office manager but Dad's gotten himself overloaded and I'm helping with the scheduling and ordering for your job,\" she smiled. \"We usually use the woman in front for routine correspondence but Dad wanted my technical experience for your job.\" She paused, leaned forward just enough to tease and invite my eyes to look down her cleavage. \"Dad has told me all about your family. It sounds like you have your hands full. ... Would you like me just to take my blouse and bra off? You wouldn't have to twist your neck so much,\" she laughed\n\n\"Now, or next time I visit?\" I wisecracked.\n\n\"When Dad brings you back after lunch come in and see me,\" said Joy with a coquettish smile.\n\nDave did not visibly react to our give and take. He went on to explain that he had access to a conference room, fax and copy machines and high speed internet plus answering services from the front desk.\n\n\"Excuse me a minute, before we leave I need to cover something with Joy,\" said Dave.\n\nAs they conversed I stepped out to the reception area and called Lauren. I told her where I was and gave her the name and number of the leasing agent and suggested she call to see if any more space was available.\n\nDave stepped behind me as I hung up with Lauren and said, \"I'm sorry, things are starting to move pretty fast on your house and I needed to have Joy push one of the plumbing suppliers with a message that if he doesn't have confirmation of delivery for the requested date by the end of business today that we'll be going with another manufacturer and supplier.\"\n\n\"No apology's necessary. Ready?\" As we started to leave, I remembered Mary Claire's request. We returned to the blueprints. He noted Alyssa had already planned to double our refrigeration space in the kitchen and with the pantry being extended six feet she'd included an upright freezer. The pantry was being widened by just twenty eight inches and the existing fourteen inch deep shelves were being replaced with a more efficient arrangement of wall mounted and free standing shelves that were twenty-eight inches deep. The storage capacity would be almost three times our current space and more than what Mary Claire wanted and access would be better. Again I was impressed that he'd anticipated the need and addressed it. Satisfied we said goodbye to Joy. \n\nOn the short drive to the country club I asked Dave if it were possible for him to pour a concrete pad adjacent to the garage to park my sudden fleet of cars. He made a note on a piece of paper after asking the priority. \"Any time, I'm closing on the house across the street and we can use that driveway and garage temporarily,\" I further explained.\n\n\"Number nineteen?\"\n\n\"Yes, the one you built.\"\n\n\"It should still be in good shape, is it?\" Dave asked.\n\n\"Keith thought so, no predications from his inspection and none from the city.\"\n\n\"I bought the lot, built the shell of that house on spec then finished the interior for the buyer. I think it went for close to one point two mil. If you don't mind my asking what'd you pay for it?\" Dave asked.\n\n\"I don't mind, eight hundred K. We close tomorrow,\" I said.\n\n\"What're you going to do with it?\"\n\n\"Probably keep it in the family. The kids are getting close to the age where they might want a house, or maybe lease it for a few years.\" I replied as we pulled under the portico at the club. \n\nAs the valet drove the car away I said, \"I noticed that besides the master suite over the garage there's a smaller master suite at the other end of the hallway. Do you know what that 's that all about?\"",
        "\"The architect called it the 'nanny suite'. They're also commonly called the 'grandmother suite'. There was some dead space over the enlarged den that he decided could be used for another bedroom. It's all in the original quote,\" Dave explained. \n\nWe settled in at a table in the grill and after ordering I asked Dave, \"You're involved with a lifestyle group aren't you? Or at least your wife lets you have sex with other women, doesn't she?\"\n\n\"Blunt aren't you? Why the question? Why the conclusion?\"\n\n\"Veronica mentioned that you implied that you've shared your bed with Alyssa and Saturday at the great tit show in my front yard you said that your wife knew about Alyssa. I'm asking because I need some advice from a friend,\" I said.\n\n\"Whew, I thought you were going to hold it against me,\" he replied.\n\n\"Oh, God no. You do then share your marital bed with other women?\" I asked.\n\n\"And men,\" he replied grinning. \"What's your question?\"\n\n\"I have two, the first is kinda complicated and the second is personal. Friday night Veronica and I had a young stud join us in bed and she fucked him. I was fucking, for the first time, a particular woman and I became so engrossed in watching Veronica get pleasured I think I neglected my new partner. She didn't say anything but I felt I wasn't as focused on her as I should have been. This morning she said she'd never felt so loved as she had Friday night, yet I didn't give her my best or the attention and loving I felt she deserved. How do you handle a situation like that, your wife fucking someone else while you're in the same bed that is?\"\n\n\"Well, first let me say that I love my wife very dearly. She is my life. My desire is nothing less than for her to be fulfilled completely and deeply loved. She uplifts me and is my best friend. I haven't always done everything right or said the right things as often as I wish. I'm a guy who's learning and strives to do his best and to be a little better every day. Yes, my wife and I are involved with a lifestyle group that's somewhat closed.\" \n\n\"What do you mean somewhat closed?\" I couldn't help but ask. It was new to me and I was curious.\n\n\"Only members receive party information, nothing is distributed or posted publically. Every group of this type sets its own rules. Our group allows guests if they're with a member and the member had received prior approval from both the host and hostess. Guests can only attend twice without becoming a member and membership requires approval from two thirds of the active membership. There is a fee too, $300 per couple every six months to cover various expenses incurred by the couples who host the parties. As to the heart of your question, watching my wife get fucked happens all the time,\" he grinned as he picked up his diet Pepsi. \n\n\"The first time I went to a lifestyle gathering with my new wife I was held and cuddled by a very sexy and very understanding gorgeous redhead who's a close friend of my wife. Rather than expecting me to fuck her as my wife was getting fucked she teased me, gently touched me from my shoulders and arms to my chest to my thighs as well as my aroused manhood. Allowing me to fondle her she quietly commented about what was happening and how much my wife and the guy were enjoying themselves. When it was over the redhead invited me to fuck her. Boy was I eager to fuck her. My heart was racing so much that I fumbled around at first like a nervous inexperienced teen. In a way I was. I'd never fucked anyone who was not my girlfriend or wife. Besides my first wife, Evie and a girlfriend from college, she was only the fourth woman I'd been with. And I certainly hadn't done it with someone watching. She was patient and encouraging and soon my nervousness vanished. She talked dirty to me. She also stoked my fire by reminding me what I'd just seen my wife do. She guided my attention and energy into a strong, energetic fuck that I still fondly remember. \n\n\"After that it never was an issue. My wife and I both enjoy watching the other fuck. I have never viewed my wife as an extension of my personhood or as my possession. I don't believe in controlling her. She's a person in her own right, and my equal, my helpmate and I'm hers. As I said a moment ago I want her to flourish and be fulfilled completely. Also, I get turned on watching her get fucked and watching her facial expressions as she approaches and pushes through a climax,\" smiled Dave.\n\n\"Hmm, I guess I should have just watched and not tried to match him stroke for stroke. The second and third time she fucked him, I enjoyed the show, but she's still having some lingering doubts. I guess time'll take care of that,\" I mused.\n\n\"Being distracted isn't uncommon,\" Dave assured me. \"Don't try to match what's happening to your wife I've tried to do that as well. As you discovered you'll be distracted from whomever you're trying to fuck and if you're the person I think you are Scott you'll regret not giving your attention and best effort to the woman who you are fucking. Friday night for you was a good example.\"\n\n\"To say I was disappointed in myself is an understatement,\" I confessed. I felt like I could confide in him. I not only liked his outlook on life and his attitude towards his wife, but I felt that we were quickly becoming friends.\n\n\"Scott, resist the urge to turn it into a competition. Sex and making love should never be a competition or an exercise to prove your manhood. You have nothing to prove to your wife or the woman you are enjoying. Be comfortable with yourself and take pleasure in the moment. If you're feeling anything more than mild jealousy,... let me be frank about this, you,... neither of you, should be there. From what you just said the young lady was more than satisfied, so it sounds like your feeling about her being disappointed is unfounded. As for disappointment in yourself for not giving her your attention, learn from it. I know you'll do much better the next time,\" he paused. \n\nHe was right it shouldn't be a competition and if I watch her I should draw enjoyment from watching her being pleasured. Also I shouldn't dump on myself too much. I should learn from it.\n\n\"The next time you fuck the young lady focus only on her. There's also a common dynamic that women, ... wives, who are with another man for the first time look for signs that their husband is either okay or not okay with what's happening. Little insecurities and fears that we may have damaged our primary relationship are real. If there were any chance that your reaction could have been interpreted as a negative, going through her insecurity filter, your wife will interpret it that way,\" Dave continued smiling.\n\n\"What can I do to prevent or limit it from happening?\" I asked \n\nHe nodded that he understood my concern. \"Such minor insecurities diminish with time. Be patient and keep assuring her. Develop your own rituals and processes for reconnecting and reassuring each other that all is well. One woman I know has her husband ejaculate over her breasts and vagina either for they leave or when they get home. She calls it 'being marked'. It's their way but not one for me. It's too much like viewing my wife as my possession. My wife and I enjoy cuddling and gently making love as soon as possible following a party. After we make love we cuddle some more and talk about what we did and what we enjoyed with our sex partners. It's our way to affirm each other and that our love remains firm. I think the key is to naturally tell her often how much you love her and reassure her often that you value her and are pleased with her. Treat her as someone special, which she is, naturally giving her occasional special gifts such as dinners out, clothing, and of course diamonds never fail,\" grinned Dave. \n\n\"I do need to be more intentional in giving the ladies little gifts as an expression of my love,\" I ventured.\n\nDave grinned, \"Let me be clear about this Scott, if you and Veronica are going in the direction of having an open relationship of some sort, it's paramount that you intentionally invest in your primary relationship. It takes work, thought and an investment in time to be alone, to just be together to talk. You may consider this to be kinky, but from time to time I take my wife out shopping for an item or two for her to wear for a special event or a special person. Sometimes I'll help her decide what to wear to a gathering or for a sexual encounter. She does similar things for me too. Give some thought to doing something like that from time to time, something that's meaningful for both of you. Remember, women love shopping. Helping buy an outfit or select an item for her to wear for a lover sends a powerful message of assurance and that you really do love her.\"\n\n\"Thanks. I like the idea of doing both. Your redhead was Carol McDonough, wasn't it?\" I asked.\n\n\"Yes, she's in our social circle. Does that bother you?\" he replied.\n\n\"No. She says that when we get married she'll quit, but neither Veronica nor I have asked her to.\" I replied.\n\n\"Wait. Aren't you engaged to Veronica?\" Dave asked.\n\n\"Yes, but Carol and Veronica go way back to college and she's asked us both to marry her and take her into our marriage. We've agreed to do that after having extensive conversations with a family counselor based at Wash U.\" I replied.\n\n\"Dr Evelyn Graham?\"\n\n\"Yes, how do you know her?\" I asked in surprise.\n\n\"I sleep with her every night, she's my wife and the mother of our four daughters,\" he smiled.\n\n\"Really, no shit. Why didn't you mention this before?\" I asked incredulously.\n\n\"She keeps her professional life and counseling sessions between her and her clients. She never shares with me the names of who she's counseling in a therapeutic framework or what they've discussed, and I'd have it no other way. She rarely talks about her work at home, and when she does it's in more of a general nature to gain a male perspective on an issue. I knew she was marrying you and from a few none-private things she's said I thought maybe you knew but didn't want to interject it into our business relationship,\" he explained.\n\n\"I've no objection to her privacy, and I've no objection to you being a swinger, nor having fucked Carol, ... probably multiple times. But I do have a favor to ask now knowing those things. Veronica, in case you haven't noticed is quite taken with you and would like to have you fuck her. Would you be interested in being her birthday present, so to speak?\" I asked.\n\n\"When's her birthday, before or after your wedding?\" he asked.\n\n\"After, it's December first. Does it make a difference?\"\n\n\"Yes, I'd be pleased to be her present since I'll have completed your job. I don't ever mix business and pleasure. Is this going to be a surprise?\" he smiled.\n\n\"Yes, we can work out some details later, and thanks. Would your fucking her preclude us having subsequent business arrangements?\" I asked.\n\n\"Not at all. What I should have said is that I'll not enter into a sexual relationship with someone with whom I have an existing business relationship. If I'm already in such a relationship then it's another matter and I'll do business with them,\" he explained. \"Yes, I've noticed that Veronica openly flirts with me.\"\n\n\"Good,\" I smiled. \n\n\"Would you like to 'enjoy' my wife while I'm 'enjoying' yours? It's entirely optional, not a quid pro quo by any means. If she's amenable, which I believe she would be.\" Dave asked.\n\n\"Sure I would. She's a wonderful, pretty, sexy woman. I'd be nuts to pass an opportunity like that. So it's our secret for now, thanks.\" I said.\n\n\"To keep it a surprise, we may have to talk about ideas via text or email lest we be overheard. Let me give you a non-business email address you can use,\" he said as he started to write on the back of one of his business cards. \n\nOn the ride back to his office Dave reminded me to allow my romantic heart to be expressed freely in how I talk to my wives, touch them, and giving them random little surprises ranging from flowers to taking them shopping for something special like jewelry and dresses, to taking them out for a romantic dinner. He also reminded me that I need to spend some time alone with each of my wives regularly as well as with them together. He explained that the primary relationships need not to be neglected. \n\nI agreed that there should be nights where we have no visitors in our bedroom and that we needed to have some nights out alone.\n\nI dropped Dave off. As he exited the car I thought about how Dave felt about this wife. My feelings were similar. Veronica was the love of my life. Now that I'd found her I couldn't imagine living without her.\n\nI recognized Lauren's Corvette in the lot as I wiped a tear from my eye, and as I was backing out of my parking spot. I saw her holding one of her signature red wallets as she came out of the building with an older gentleman. I stopped and waited for her to finish her conversation and as she was about to pass, I opened the door and stood. \"Hi, Lauren, what's up?\" I smiled. \n\n\"Oh, Hi, Scott. I called the leasing agent right after talking to you and was told that he'd be on the premises at noon. So, I ran over here to scope it out. There're two offices that'd serve us well as a foundation site. The larger one could be an administrator's office and the other the secretary's. We could use the common conference room as needed. Or the larger office could be a 'conference room', with the other an administrator's office. The receptionist at the desk would field all calls and put our mail in the office for us. We could also share the common copier being billed for copies recorded against our access codes. I explained that there wouldn't necessarily be someone here every day, at least not for the next several months. He explained the common receptionist concept is designed to support our business model and ensure all calls are answered. I have a leasing agreement and the gentleman's card,\" she smiled. \"The rates are reasonable for what we're getting. We'll need to fund a checking account for the foundation,\" she added. \"Oh, and I called the lawyer you recommended to do the government paperwork to register the foundation and get the status determination. He'll have everything completed and to you for review and signatures within the week.\"\n\n\"You never cease to amaze me, young lady. We'll talk about it later today or in the morning. Right now I need to drop by Emerson's house and pick up some RV brochures he said he had for me.\" I replied.\n\n\"Oh, I already picked those up on the way over here. Emerson's message was passed on to me to tell you later today. I hope that's alright?\" she asked. \"Sorry I should have texted you on your cell.\"\n\n\"Again, you're an amazing woman, Lauren. Call Cheryl to call Emerson and see if she can set up breakfast at our house with him and Hazel, Veronica, you, and me either tomorrow or Wednesday.\"\n\nAs I was about to re-enter my car I remembered the invitation from Joy. I grabbed my keys, closed the door and strode back into the building. As I entered Dave's office I didn't see him, but Joy stood from her desk and with an impish smile on her face walked to the drawing board. As she reached the edge she placed her hands flat on the surface and with a slight twist of her torso bent across the board. Her blouse was almost fully unbuttoned to the top of her tight jeans and her bra was missing. Her twisting opened the front of her blouse enough for me to see a nicely formed breast and nipple. When she didn't immediately stand back up, I said, \"Goodness, is the other one as beautiful as the one I see?\"\n\n\"Yep. They're even better as a pair. But you'll have to wait for your next visit,\" she smiled as she straightened back up, pulling the curtain on her tease.\n\n\"I think I'll just run back to the car and then come right back in. Will that count as a second visit?\" I asked.\n\n\"Don't be so eager. Our paths'll cross frequently in the next couple of weeks. So enjoy what you just saw and use your imagination. Have a good day Scott,\" she broadly grinned and turned to walk back to her desk. I could tell she was buttoning her blouse as she walked back.\n\nI later learned that she'd remarked to her Dad as soon as he came in after our lunch how attracted she was to me and he told her that Veronica and I were getting interested in the lifestyle and were both sharing our bed. \"Ooh. If that's the case then I'll have to encourage him. I'll bet my sister'd enjoy him as well,\" she'd said to Dave who'd purposefully waited a few minutes in Keith's office while she'd 'entertained' me.\n\n##\n\nAshley, loose wearing jeans, a baggy sweatshirt and a pair of scruffy work boots was leaning against Katrina's car with her thumbs hooked in her front pockets as she saw her sister approach being trailed by the two obnoxious young men who were running off at the mouth. Katrina looked up and saw Ashley, smiled and continued to walk toward her. Ashley closed the distance, wrapped her arms around Katrina, and made a show of kissing her and rubbing her hands up and down Katrina's back. The stunned boys paused but continued to come a bit closer. Katrina turned and said, \"This is Olivia, my partner and lover. She's a black belt and doesn't like it when someone harasses me. I've told you I've no interest in either one of you, so back off now or I turn her loose.\"\n\nAshley clearly had a couple of inches on both boys and frowning took a menacing step toward them. They put their hands in front of them saying, \"No trouble, we misunderstood. Sorry. Sorry. We'll leave her alone,\" and they turned and quickly walked away.\" Both girls smiled, embraced, and Ashley softly asked, \"What black belt.\"\n\n\"The one holding up your jeans,\" laughed Katrina. \"Thanks lover, that seems to have done the trick. See you at home shortly.\"\n\n##\n\nVeronica arrived at Evie's office about the time Dave and I got to the country club. \"What's on your mind Veronica, you sounded a bit stressed on the phone?\"\n\nWithout any preamble, she began, \"We took a young man to our bed Friday night and I fucked him. I fucked him again on Saturday night and again on Sunday morning. Scott was in bed with me, us, all three times. I kinda got the feeling that he might have harbored some misgivings. He's assured me that he has no misgivings except that on Friday night he wasn't fully focused on the young lady he was fucking while I fucked the young man. I guess that that's all there is to it, or I hope that it is. Is this a normal reaction to fucking someone else while your husband watches?\" asked Veronica.\n\n\"Yes, it's rather typical. Don't confuse interest and fascination with negative feelings like anger, a change of mind or jealousy. Were you feeling any jealousy? Was he?\" asked Evie.\n\n\"I wasn't. If anything watching him stroke in and out of another woman while being fucked was a huge turn-on, much more than I would have imagined. And he says the same about me getting fucked,\" Veronica explained.\n\n\"Well believe him and you'll enjoy swinging a lot more. There are some men who continually fantasize about the wife getting fucked and like the idea of her having dozens of lovers. Others draw pleasure in watching the wife being pleasured. My husband is in the former group and I suspect Scott is too. Veronica, open honest communication involves not just expressing your feelings honestly but also accepting what you are hearing expressed by your husband as true.\"\n\n\"You're right, you're right, you're right. I need to accept what he's saying as being true and not doubt it,\" replied Veronica nodding her head.\n\n\"Keep affirming to Scott that you love him and allow him to do the same without thinking that he's doing it to cover any doubt or jealousy. This is particularly important shortly after you've been with various lovers. If you love him more today than yesterday, tell him that your love for him grows every day. After swinging my husband and I make slow gentle love and talk about what we liked or didn't like about the couplings we'd had that evening.\"",
        "Veronica smiled, \"I do love him more each day. Scott is encouraging and allowing me to be with the young man deepened my appreciation and feelings for him further,\" added Veronica.\n\n\"Then tell him that. Veronica, there are couples where one or both are unable to watch each other have sex. They swing but will only have sex in different rooms. I'm glad you guys aren't like that. Frankly, I'm of the opinion that if you cannot see your spouse fuck someone else without negative feelings arising frequently, then don't swing. It'll surely poison your daily relationship,\" advised Evie.\n\n\"Also, physically show Scott how much you love him with touches, kisses, put an arm around him for no particular reason other than just standing or sitting next to him. Cuddle and play with him and sincerely and eagerly respond to his shows of affection to you. In other words through everyday things and conversation affirm that you are now and always will be, his wife. Also, develop your own ways to tease and toy with him before or afterwards.\" \n\nVeronica took careful mental notes as she went on to explain some of the things she does to tease her husband. The rest of the time was spent talking about the wedding and the dynamics to keep in mind when two women are married to or are living with the same man. Once again Veronica left with much to think about and ideas to apply to her life. The bottom line was that Evie expected that the three of us would have a long, successful, loving relationship. \n\n##\n\nAfter ordering the rings at Dupree's Veronica picked up the altered wedding dresses for all four girls as well as her own and Carol's. Cheryl was just leaving as she arrived home. Before leaving she helped Veronica carry the dresses into the house and hang them in the spare bedroom. \"See you in the morning,\" cheerily said Cheryl as they lightly kissed and left for her attorney appointment.\n\nSeeing Cheryl driving down the road I waved as we passed just north of the driveway. There were four pickups parked off the edge of the drive. Two men were working on a forming. I guessed that some of them belonged to Keith and his helpers. The somewhat ratty looking mid-nineties Chevy Cavalier probably belonged to Max.\n\nVeronica and I sat cuddled on the couch, flanked by Katrina and Ashley who related the tale of the two annoying boys with much laughter. Lauren stayed seated at my desk and would make an occasional comment. Carol joined us and then excused herself to check in with Mary Claire to offer help with dinner. \n\nMary Claire brought us a tray of wine glasses and a bottle of Chardonnay. She announced dinner would be ready in half an hour and reminded everyone that Lauren was staying. \n\nAfter dinner while we were drinking coffee in the living room, Carol asked Lauren to talk about herself.\n\n\"Well, I'll be thirty-one on December third. I'm an only child, and my parents are still married to each other. They live in a small house on a large lot in Grover. Dad has four younger siblings, two of each. Mom who's a third grade teacher has a brother and a sister, she's the middle child. Like my father I'm a licensed CPA. I'm also a certified athletic trainer. I'm also certified to officiate softball, basketball, lacrosse, and soccer at the college level. I got both my bachelors and masters degrees at Truman State where I was a walk-on for the Varsity basketball team. I've never married and rarely date. I've had several bad dating experiences. I've modeled in fashion shows in Japan and Australia. I've sung with a few bands and play the piano. My voice is classically trained and I have an electronic piano in my apartment. I've done some modeling for internet sites, never fully nude, but revealing enough and I'm in the process of taking all those down. They're probably some nudes of me out there taken on the sly I'm sure, but I'll not be adding to them.\n\n\"I began sharing my parent's bed when I was a little over fourteen, maybe that's also why I don't date. When you've been loved by and had sex with two very caring people, it's hard for anyone else to begin to measure up. I still visit Mom and Dad regularly and that's probably another reason I don't date. I'm really looking forward to this job and getting to know each member of this family.\" \"I've never seen you or your parents at the company picnic,\" I mused.\n\n\"No, it seems that every year the picnic is scheduled for a day when we're in Michigan at my grandparent's house on the family farm for our annual two week family riot. My grandfather calls it that because of all the kids and grandkids. It's usually at least sixteen adults and twenty-five grandkids, although that number is probably bigger now counting great-grand kids. It could be more when mom's parents come, but they don't come every year. We stay in three great barns of houses and I don't think that there's ever a quiet moment. We kayak, ride horseback, sail, ski, hike, golf, play all sorts of games, shop and get reacquainted with each other,\" grinned Lauren just thinking about the summers. \n\n\"When I was thirteen I noticed Mom, her sister Liz and Dad disappear for several hours a time several times during the 'riot', and when they reappeared both women had that 'just fucked' look. Mom had already given me the birds and bees conversation and the details were filled in when I discovered the home-made adult videos of Mom, Dad and Liz my parents had hidden under their bed. So when the two women had that look I thought, Good for both of them. The following Black Friday Dad was at the office putting the finishing touches on some work and thinking that Mom was out for the day shopping, I got out one of the videos. Not more than a half-hour later Mom walked in. As you can imagine I was deeply embarrassed but Mom put me at ease, told me that my curiosity was natural and asked if I would mind her watching with me. She and I talked about what I was seeing.\n\n\"That summer and fall I had really started to fill out and there were two sixteen year olds who were trying to get me to go out with them. When I told Mom that I was interested and that I was tempted to do something with them she didn't scold me. She asked why I was interested in these two boys and my only explanation was that they were interested in me and I wanted to do know what it was like to fuck. Mom explained that a woman's first time should be special. We continued to talk and the next thing I knew we were planning on me being my Mom's Christmas present to my Dad on Christmas Eve. He certainly seemed to enjoy me and I certainly enjoyed him.\n\n\"My Mom, Alexandrea, was a fashion model in her younger days, and recently has been appearing on some of the mature women web sites. She still has a fantastic body. I don't know who's doing her photography but both Mom and Dad have remarked that if she had a better photographer, she'd probably be in more demand.\"\n\n\"You do know that Scott is an accomplished photographer, don't you?\" asked Veronica.\n\n\"Oh, my gosh are you the Scott Appleton who won big time at the recent juried show? I'm sorry I never made the connection. Would you be interested in photographing Mom, 'Elsa' as she's known on the sites?\"\n\n\"Absolutely,\" I beamed. \"As soon as the studio's ready, I'd love to.\"\n\n\"I'm really running off at the mouth about some family things that probably shouldn't have been said,\" frowned Lauren.\n\n\"I knew you were a sexy lady the minute you showed me your nipple,\" laughed Mary Claire.\n\n\"I think you have a great and long future with this family,\" said Ashley as she was leaning back against me guiding my hand inside her blouse.\n\n\"We trust you and I'm glad you feel you can trust us. That's the crux of this family, ... trust,\" smiled Carol. \"Trust and love. Boundless love.\"\n\n\"Brad doesn't mind Alexandrea doing this?\" asked Veronica.\n\n\"Apparently not. When she comes home from a session I'm usually invited over and we have incredible sex. Oops, maybe I shouldn't have said that either,\" Lauren laughed. \"In fact Dad's appeared with her in a couple hard core shoots, his face is never shown, but his wonderful cock is. At least the part that isn't in Mom's mouth, pussy or ass.\"\n\n\"Do your parents swing? Or maybe you don't want to answer that,\" asked Carol.\n\n\"Yeah, probably. Share or swap is probably a better term. There's another model that Mom works with. Hey, maybe there's some more business there too. Anyway, she's a widow, same age as Mom and I've picked up that she and her son get together with my parents every other week or so. I think the son's wife is involved too. I've never been invited so I don't know for sure. If they are, good for them,\" smiled Lauren. \"Other than the other model and her son and his wife, and Aunt Liz, I don't think they've been involved with anyone else. I don't know if it's a lack of interest or opportunity but knowing Mom it's the latter. Before Friday night I'd never shared a bed except with Mom and Dad,\" she added.\n\nAt about eight Max came up from the basement looking for his mother. \"She left about four,\" I said. \"Can you stay a few minutes, we'd like to talk to you.\"\n\n\"Sure, did I do something wrong?\" he asked frowning.\n\n\"To the contrary,\" smiled Veronica. \"As I told you over the weekend you're welcome in any bed in this house except for Ashley and Katrina's. But, and this is a big 'but', you are not to show any outward signs of affection toward any of us when someone other than family is here or outside.\"\n\n\"Is it okay if I get a hard on,\" Max asked.\n\n\"Sure, that's unavoidable around these women. God knows I do that,\" I laughed.\n\n\"I won't mind you being aggressive, kissing, hugging, caressing a breast or an ass, but if it's after working for Keith and Dave I want you to take a shower and clean up first. You may feel free to fuck your Mom or Beth here. I suspect it's probably difficult to do at home when your Dad's in town. Lauren, Carol, anyone else have anything to add?\" asked Veronica looking around the room.\n\nKatrina spoke up, \"Ashley and I are off limits for intercourse for the time being. We can and will blow you and you may eat us, so don't be shy about asking us,\" she grinned.\n\n\"Wow,\" replied Max. \"After I shower can I eat you Veronica? I'd like to save myself for Beth. I kinda promised I'd fuck her tonight.\"\n\n\"Yes you can, you sweet boy. Come back in here after you've showered. Use the shower in the spare bedroom upstairs,\" broadly smiled Veronica.\n\n\"Although I love to stay and watch, I've got a couple of errands to get done tonight, so I need to leave now.\" After kissing all of us good bye and having several hands up under her skirt, a smiling Lauren put on her coat and escaped the Appleton octopus.\n\n##\n\nAfter connecting the stockings to her black leather strapless bustier and pulling on her stiletto heeled black boots Evie turned to Alyssa, appraised how enticing and erotic she appeared in the red fly-away baby-doll. \"Dave's going to have a heart attack when he sees you,\" Evie smiled. \"I'm glad you found those red strappy high heeled sandals, they really make your legs and ass tight.\"\n\nAlyssa blushed. As they waited Dave's arrival she couldn't help think, This is so hot, wild and kinky. I wonder what she'd think if she knew I've fallen in love with her husband. For me it's not just sex any more. I want to be as closely connected to him as possible in a loving and beautiful way. I'm amazed it happened so quickly. She reminded herself to keep her secret internalized so she wouldn't be the object of Evie's scorn. \n\nStaring at nothing in particular as her mind wondered she remembered Evie calling last night and inviting her to spend tonight with them. She'd tried not to sound too eager as she'd said yes but Alyssa's heart was filled with anticipation and joy. Though she'd enjoyed sex with them before tonight it would be the first time to stay the night and sleep with them in their bed. She couldn't have been happier to receive the invitation. Since she'd met him, Dave had filled her dreams and thoughts. \n\nSeveral times her mother, Jenna, had described that she'd fallen in love with her biological father when they were students in college. What her mother described wasn't like this at all. Her mother and father were good friends long before she realized that she loved him. By then it was too late, he was engaged and madly in love with another woman.\n\nJenna claimed that for the most part true love is a gradual dawning that takes place over many months, even taking as much as a year or more of getting to know each other. When her mother had fallen in love with her step-father, she said it was a process that had taken nearly a year. Jenna claimed that normally anything that happens quickly was more infatuation or just plain lust. Alyssa argued that the contrary was possible. By recalling how quickly her father had fallen in love with the woman he married, Jenna did concede it was possible, but still maintained it was rare. Apparently from what her mother said her father was engaged within eight weeks after his first date with the woman he married. \n\nAlyssa and her twin brother didn't know their father's name or whereabouts because Jenna refused to identify him saying that nothing would be gained other than satisfying her curiosity. She'd never seen a picture of him and knew little other than her mother once saying she had her father's eyes, nose and chin as well as his light scattered freckles across the bridge of her nose and upper cheeks, and that her brother had their father's build and smile. Jenna remained silent trying to picture how he could look today, graying with a pronounced belly. \n\nShe was satisfied with her mother's position on her father at least she was until she'd moved to St. Louis. Years ago Albert, 'Bert' her twin brother, managed to learn from an aunt that their father had grown up in central Illinois and that in 1987 he was hired as a project manager in the Peoria office of a national construction firm. In the first two months after she arrived in St. Louis she drove three times to Peoria on a Friday morning. Each time she sat outside some large construction firms looking for men who were of the right age and had features similar to her and her brother. Using her 100-300 zoom lens she took hundreds of pictures of possible men. \n\nShe couldn't explain it but her intuition told her she was going to meet her father. Carefully she looked through the pictures. She identified four possible men and then sought to learn their names and what colleges they attended. She had learned two names but neither attended the college her mother attended. Though disappointed she was hopeful that one of the other two would be a good lead. In the last two months she had done nothing more on her little project, and now it didn't seem to matter because she was a woman in love.\n\nYes, she was in love and she knew it was definitely love, but she had two problems. First she was in love with a man who was happily married. Second, she was beginning to realize that she loved Dave's wife too because Evie had also been creeping into her dreams and fantasies. There was something about this couple that drew her like a moth to a flame. Alyssa knew she was probably headed for heartache and disappointment. Yet she rationalized that the journey would outweigh the pain and loss she could eventually face, at least that's what she dearly hoped and told herself.\n\n\n\n\"Alyssa, are you alright? You look like you're miles away,\" Evie gently enquired lightly touching her shoulder and placing a light kiss on the back of her neck.\n\n\"I'm fine. I was wondering if I'd ever meet my father. I wonder what he looks like.\" Though Evie knew some of her story, she retold it and explained more of her background and that she knew he worked in construction. As she talked, Evie who was three inches taller than her, held her from behind in a manner that comforted and assured her she was loved and appreciated by both her and her husband. Evie even sincerely said that she was welcome to consider herself as part of their family. Alyssa smiled as she turned in Evie's arms.\n\nBefore she could finish and tell Evie what college her parents attended, they heard the garage door open. Evie smiled, hugged, kissed her young friend and quickly pinched her nipples, \"Well, let's say you're more than just family.\" Helping to smooth out Alyssa's red baby-doll they heard Dave call out. Giving Alyssa a playful smile she called loudly, \"Honey, I'm upstairs.\" As they heard him move up the stairs, Evie moved beside Alyssa and quietly said, \"Well, girl, it's time to have some fun.\" \n\nWith surprise etched across his face, Dave stood in the double doorway smiling appreciatively at his wife and Alyssa. Though he pushed the doors closed as he walked further into the room they both rebounded and didn't latch fully closed. He glanced back but didn't care to return three steps to complete their closing as the girls were out for the evening at their eldest sister's condo. His eyes moved from one face to the other. Evie winked as their eyes connected. Then his eyes moved slowly down Alyssa's body, from her head to her lovely feet in the red sandals. Her ample bosom was seen teasingly under the semi transparent fabric. There was no dark spot in the crotch of her panties, so she's shaved since last week he thought. \n\nHe gazed lovingly and lustfully at his wife attired in one of their favorite bustiers. Wearing that bustier signaled him that this was her night and she was in charge. She hadn't put on her long black silk gloves which also signaled that she was in dominatrix mode. Her control was going be more subtle tonight. Her being in control was fine by him, he was going to be enjoying the delights of two women this evening.\n\nEvie moved behind Alyssa. From behind Evie hugged her around her waist as her face lowered, pushed through Alyssa's bleached blond hair and lightly kissed her neck. As she continued to kiss her young friend's neck Alyssa sighed. She sighed again as Evie's hands moved slowly upward to grasp her breasts. Evie lightly squeezed her lover's full ripe tits through the semi-transparent material. \n\nAs husband's and wife's eyes focused on the other's Alyssa's head was resting against Evie's shoulder and turned seeking a kiss. Evie's eyes sparkled at her husband before she granted the young woman her desire. Alyssa moaned into the older woman's mouth as her breasts were fondled with increasingly eager fingers.\n\nAs he watched the two women kissing he unbuttoned his shirt and slid it off his shoulders. With a final admiring stare, Dave stepped towards the two gorgeous barely clothed females, being careful not to intrude, not wanting to interrupt the kisses. He could wait. When the two women broke their kiss, they giggled as they looked at him. Again they giggled with delight as both their eyes took in his firm package that wanted to break free from its denim prison. \n\nDave stepped forward three more steps. While embracing Alyssa, her full chest flattened against his broad firm chest as he leaned over her right shoulder to kiss his wife. He felt her hands move from Alyssa's breasts. \n\nEvie smiled and took a step back as she watched her husband kiss the young woman tenderly at first and then with a growing passion. Soon his hands wandered over the young woman's ass, her sides and then over her delectable breasts. \n\nThe older woman laughed quietly as the younger's hips danced against her husband. Alyssa was so excited and eager that Evie wondered if Alyssa was trying to rub her way through to that hard cock underneath the denim. \n\nSurprised gasps came from Dave and Evie when Alyssa suddenly dropped to her knees, quickly unfastened his belt, unsnapped his blue jeans, unzipped and dragged them hungrily to his ankles. She was delighted that he stepped out of them in his own accord. Then she was momentarily caught off guard when she raised her eyes. She laughed at what she saw in front of her. The tip of his cock along with an inch and half of his shaft appeared from above the waistband, the waistband of red panties was embroidered with \"All for you\" in black thread.",
        "Dave was a little embarrassed. The panties were purchased the prior afternoon by his wife. He put them on that morning thinking he and his wife would be spending a quiet romantic night alone. Other than Gloria and Joy, there was only one other woman who knew his wife occasionally dressed him in panties. His embarrassment quickly subsided when he guessed that Evie was signaling a willingness to have Alyssa as more than an intermittent lover. \n\nAs Evie knelt and joined Alyssa she quietly reminded her, \"I told you I had a surprise for you. I had him wear them this morning. Sometimes I have my husband wear something like this for a special occasion.\"\n\nAs her finger tips moved over the silky panties and the bulge, without looking at Evie but addressing her Alyssa grinned, \"I love it. It's, it's...so delightfully erotic.\" \n\n\"It's that,\" she replied. \"I bought them yesterday just for tonight.\" Rubbing her hand along the younger's back she added, \"The message was picked just for you.\" \n\nAlyssa turned her head smiled and leaned forward to kiss her lover. \"Thank you,\" she said with a glow.\n\n\"You can keep them as a memento. Go ahead and reveal your prize.... Now, isn't that lovely?\" Evie cooed as Alyssa pulled down the panties and her husband's erection sprang upward. Both women gazed with desire at his quivering package moving by his rapidly increasing pulse. \n\nWith the two kneeling women appreciating his handsome manhood, the sexual energy in the room stepped up a level. Alyssa's right hand reached out to grasp his shaft. Slowly she stroked it which brought a soft groan of pleasure from him. As he looked down, two smiling faces looked up almost at the same moment. He noticed though his wife's nipples were not as prominent as Alyssa's, nonetheless hers too stood out declaring the state of her arousal. \n\nWhen Evie's hand moved towards the hard cock in front of her, Alyssa moved hers away. His wife stroked him lightly for a few seconds before she licked his tip, then swirled his crown several times with her tongue. Her mouth engulfed his head and then slid along the shaft four times before withdrawing. Pointing it towards Alyssa with one hand, her other moved behind the blonde's head to guide her forward. \n\nAfter several minutes of being pleasured by Alyssa, at a signal from his wife Dave picked their lover up and carried her to their king sized bed. The light green comforter and green sheets had already been pulled down. Alyssa's hands explored his well defined shoulders, chest and upper arms before he gently placed her in the center of the bed. He lay beside her and began to kiss her.\n\nAs she watched the heated kisses Evie moved to the other side of the bed where she knelt watching the kisses and the mutual moaning. Since he'd never kissed any woman other than her and their four daughters with anything approaching such passion, the intensity of her husband's kisses confirmed for Evie that she was correct in her assessment. Her husband did have unspoken feelings for the sexy interior decorator. He may not recognize consciously how he felt about Alyssa but nonetheless it was there. Evie wasn't complaining, nor did she feel jealous. She'd admitted on Saturday that she had feelings for the young woman, feelings that were deepening each time they were together. \n\nEvie came to this realization as she had tweaked a well known statement from one of the permanent pastor's published sermons that she was using the next day in her own sermon. The statement challenged the congregants to think about who besides their family they loved and would sacrifice their time and wealth to assist. Alyssa's name and face immediately came to her mind. That was the moment she admitted that she loved this young woman and wanted to love her even more than she already did. \n\nShe smiled as she recalled her awareness and acceptance that her husband's loving Alyssa did not diminish his love for her. If anything, his love for the young woman may have expanded his love for her. Besides she rationalized, they look good together. Other than a youthful touch of insecurity, her personality is much like his. They make a cute couple. I can see the overreaction and the screaming of the twins now when we tell them, 'guess what girls? Your mom and dad not only love each other but we also love another woman who'll be staying the night several nights each week. Well, what will be, will be, and we'll just have to handle it all then. As I said in the sermon, we must be more open to following our hearts.\" \n\nHis mouth kissed a trail towards her thinly covered breasts. He kissed her breasts through the red nylon covering them. Using only his teeth he pulled the fabric to the side and below one breast and then the other. He laved the furthest breast with kisses and licks for over a minute before raising his head, looked at his wife, smiled his message and then moved to the nearest breast.\n\nWith his invitation, his wife lay beside the young woman, leaned over and kissed her. Before she kissed her again, Evie pushed the hair from Alyssa's face, \"We love you my dear.\"\n\nAlyssa's face glowed but she looked up into Dave's face seeking confirmation. \"Yes, we both do,\" he nodded with an emphasis upon both. With that said Alyssa's hand drew Evie's face towards her. \n\nAs the two ladies kissed with loving fervor Evie's heart leapt. She did love this young woman. Her heart felt alive and excited. Yes indeed, love was definitively what she felt and she was not troubled in the slightest. She often spoke of romantic intimate love being expansive, much like a balloon, able to expand to include another without diminishing the love one has for another. She had somewhat experienced this dynamic in the past with Carol but it never fully developed for various reasons, including fear on her part as well as Carol's stated love for Veronica. Now her heart shouted for joy. What she taught was no longer theory but a personal experience, and not only that but her feelings for Veronica were also moving in the same direction which if returned would make all their lives most interesting indeed. Her mind was now awash with a series of such thoughts.\n\nThe intensity of the kiss left both women breathless. To cover her momentary awkwardness Evie moved her head besides her husband where she attacked with zeal the vacant breast. Alyssa's body and heart were overwhelming her brain with synapses. Two lovers were making love to her, filling her body with satisfaction, mouths exploring her breasts, one set of fingers pleasuring her along the outside and then inside of her pussy while another set moved between lightly dancing along her lower stomach and flicking and rubbing her clit. Not only has she lost track of whose fingers were whose but she didn't care. Alyssa was not only being well pleasured by a man, but she was being well pleasured by a man and woman who she'd come to adore and love. \n\nAlyssa's moans and repeated cries of \"yes\" and \"oohh\" filled the room. Moments later her hips started to rotate and verbalizations grew more intense. Encouraged, her lovers pressed forward with greater intensity to play with her clit, pussy and breasts. Suddenly she screamed out in ecstasy. \n\nNone of the three were concerned that her scream was more than loud enough to carry well beyond the master bedroom to where two young ladies were sitting across the hallway by their bedroom door. Abigail and Samantha had returned much earlier than expected from visiting their eldest sister who they'd approached to help coach a select softball team they wanted to form next March for an elite league. Joy was open to the idea only if they would find one or two other coaches. At first they were disappointed, but then realized that Joy had said yes with a condition and all they needed to do was find at least one other coach.\n\nWhen Joy and Keith said they had to run to a party the girls were disappointed to have to leave so early but arriving home to the sounds emanating from the master bedroom as they climbed the stairs had vanquished their disappointment. Their parents didn't hide the fact that they enjoyed a vigorous sex life so the twins often heard their parents make love. Occasionally, when their parent's weren't sharing their bed with Gloria or Carol, or Joy and Keith, they'd slept cuddled with them, intimately touching and being touched. As they climbed the stairs the squealing was higher pitched than their mother's which meant their parents had a guest. They knew about their parent's being in the lifestyle, but other than their sisters and Keith, and Carol's visit for a night or two every month or so, no activity took place in their home. Even before they noticed the double doors were partly open, from the pitch of the voice they knew the woman was not Carol or Gloria, and it was certainly not Joy who they'd just left ten minutes before. \n\nReaching the top of the stairs the twins looked at each other and softly giggled. Whoever she was, she was very vocal, sounded like a fun lover and she had to be special for her to with them in their home. Their eyes widened as they noticed the partly opened doors. At first they stood by their room watching and then they sat on the floor. What they were hearing and seeing only made them long even more for December 31st to arrive. What they saw between their father's legs both excited them and brought a little fear wondering how they could ever fit such a male thing in them.\n\nAlyssa's climax had barely washed over her when she aggressively pushed Dave onto his back. She pushed the red see-thru panties down and he kicked them off his legs. Looking from him to Evie with a playful look she straddled him. With lust in her eyes she said to his wife, \"You said, it's all for me.\"\n\n\"Both he and his cock are yours tonight my love,\" Evie smiled as she shifted her position.\n\nReaching between Alyssa's legs, Evie took her husband's cock in a gentle grasp, and lowered her head to the side of his stomach where she could watch the union occur. Evie drew his cock upward. Alyssa's hips lowered a little until the lips of her vagina met the tip of his cock. As Evie moved the cockhead along the length of Alyssa's swollen lips she noticed that the young woman was not just wet, but she was oozing.\n\nWith her being more than ready Evie positioned him at the center of her opening. She stared with rapt attention as the young woman's lips slowly parted and her husband's cockhead was engulfed and then disappeared within the folds. As Alyssa slowly descended more and more of her husband's shaft was devoured. She had seen her husband enter other women many times, but rarely was she this close and never was she as caught up in the sight as she was at this moment. She wondered if her rapt attention and excitement at watching their joining was a result of love rather than lustful passion. \n\n\nWhen Alyssa groaned with him lodged against the lips of her cervix, Evie quietly groaned with her. The young woman was fully impaled on him and the elder woman grinned knowing the wonderful experience and feeling her lover was enjoying.\n\nBefore her eager eyes, for a good five minutes Evie watched the decorator making love to her husband. Alyssa's pace repeatedly quickened and then slowed. Her love filled eyes kept watching his and then looking down into Evie's. Her flyway baby-doll that was hooked below her breasts danced here and there as she fucked him. Her movements varied; sometimes straight up and down, then she would pause with him deep her and start to rotate her hips, sometimes she wiggled around as she moved up and down. All the while the man who was being thoroughly pleasured and she kept from climaxing by her judicious pauses had one hand, sometimes two, playing with his lover's large dancing breasts. Clearly she enjoyed the ride and Evie enjoyed being a close observer. \n\nAfter watching from her close vantage point, Evie slid off her sheer panties, flung them to the left and straddled her husband's face. She too was wet and moaned with relief as Dave's tongue slid along her pussy. She pulled down on the leather that partly covered her breasts and pulled them free. As her husband pleasured her by sucking her lips and clit, Evie leaned forward.\n\nThrough hooded eyes Alyssa watched Evie face her, straddle her husband, pull her tits free and pinch her nipples several times. She smiled as her lover leaned into her for a kiss. She leaned forward herself. As they kissed and kissed, feeling the eroticism and the excitement of fucking the husband while kissing the straddled wife Alyssa's hips undulated up and down, back and forth with a greater urgency. Evie's hands caressed her large pliable breasts. Alyssa was already close to coming for a third time in the evening. She moved frantically to come again. Less than a minute later she groaned and screamed into Evie's mouth and gasped for air, a good portion of it coming from Evie's mouth, as a breathtaking orgasm washed through her body.\n\nFor two nights Dave's wife hadn't allowed him to shoot off. She teased him and last night brought him close twice. Now he knew why. Evie wanted him to be more enthusiastic and go off quicker than normal, and then recharge for another round or two. His heart was racing. Dave was keen to come as the two women kept riding him. He was ready to come but he had to do something first, make his wife come.\n\nTo Evie's delight with renewed vigor he repeatedly alternated between sucking her pussy lips and clit. He'd already done a fine job with his tongue when they first met, but now under her tutelage he was much more highly skilled. Though already well along the path to her climax, his increased intensity drove her closer. Then he inserted two fingers inside her and wiggled them driving her even higher. She moaned and her breathing became shallow. She needed to come. \n\nAlyssa sensing what was happening slowed her attack upon her lover's manhood. She dropped her head to Evie's breasts. With one hand she tugged and pinched the nipple on the breast that had a nipple ring while she aggressively used her mouth to pleasure the other that had no ring. \n\nIn a gentle rhythm Alyssa kept her hips moving not only to allow him to focus upon pleasuring his wife but also to allow her to be able latch on her lover's smaller tits. Still her head bobbed slightly as her lover wiggled her hips over Dave's face. When she moved her mouth from Evie's right nipple to the left she carefully avoided catching Evie's nipple ring in her mouth. That didn't keep her from flicking the nipple and the ring repeatedly with her tongue which brought a shudder of pleasure from Evie.\n\nNot long after Evie's breathing grew even shallower. Then she bellowed out at the top her lungs, \"Ohhh my, oohhh yesss!\" Her hips pushed her crotch down forcibly on his face. As he sucked hard on her clit, the force of her rocking pushed the tip of his nose into the one end of wetted crevice. Warm air heavily scented with her aroma filled his nostrils. Starting at her asshole, the gentle climax flowed through her nipples and out through her legs and chest. \n\nWell sated the sensuous woman collapsed to the side. Pushing hair off her sweat filled brow and face Evie smiled at Dave, \"It's your turn my love.\" She rolled onto her side, propped herself up on her left arm and kissed her husband tenderly, lovingly.\n\nAlready Alyssa had been moving with increased energy atop him but with Evie's statement she took her movements up a notch and seconds later again still higher. Now she rode his hard shaft like a woman possessed, wild and unleashed, pulling almost all the way off him before driving forcefully downward. She cried out again and again for him to fuck her silly. In response, Dave thrust upward each time she drove downward. Each let out bursts of air as she took his full length deep within her. Both their breathing became more labored and irregular as they drove each other towards what they eagerly sought, a mutual release.\n\nDave was not quite there yet when Alyssa started to scream loudly. Her body started to shake. He noticed her lower stomach muscles were quivering, a sign that suggested she was having a powerful climax. Her chest and face glistened with sweat. Her climax did not just hit and dissipate; it seemed to keep going on and on, either as one long intense climax or a series of orgasms occurring in quick succession. Later Alyssa would laugh that she didn't know at the time what it was but it had been a glorious experience she wanted to repeat again and again.\n\nAs she was coming, her vaginal muscles gripped him. She clearly was not as skilled or as strong in gripping him as his wife but it was still very pleasurable. Her youthful tightness was enthralling and he was not about to complain. He was about to come along with her. \n\nShe had drawn him lovingly to this point. He saw it in her face. For the last several minutes, whether looking at her large swaying tits, or at their joining or even to his side where his wife lay forgotten, his eyes remained unfocused. Now his eyes focused upon Alyssa's sweet face. Her hair was tousled and a mess, her face was dripping sweat, but she looked so ravishingly beautiful as she climaxed. Her blue eyes sparkled at him, her lovely thin lips smiled when she wasn't gasping for breath or screaming out \"ohhh fuck,\" or \"ohhh gawd\" or \"ohhhh myyyy.\" The sweat seemed to make her face and breasts shine even more brightly.\n\nWhat is it with some women that makes them look so beautiful when they're in the throes of a powerful climax, Dave wondered. Evie looked so beautiful and feminine when she came. He'd seen it with Debra, his first wife. Debra not only looked gorgeous when she came, she also looked so beautiful in the midst of giving birth to Abigail and Samantha. He was seeing the same with Alyssa. While Dave was fascinated to the why, the question was pushed aside for another day as he felt the unmistakable stirring in his groin. \n\n\"I'm coming,\" he growled loudly. He thrust up more quickly now.\n\nWith equal volume Alyssa urged him, \"Fill me. I want it all.\" \n\nFrom the side, watching the erotic dance come to its climax Evie felt compelled to touch Alyssa's belly and slide her hand down to play with the woman's clit. Evie noticed how the two had been looking at each other, not only with longing but also with love. Yesterday afternoon when she stopped at the boutique she was mainly following her intuition as she bought Alyssa's baby-doll and his panties. She could not fully articulate why she felt so calm, but she felt comfortable with the young woman having a special place in their lives and to have her become part of their family in some fashion. Seeing the look in their blue eyes, and honestly knowing her own heart and feelings, Evie knew her intuition was right. They both loved Alyssa and she them.\n\nSeconds after Evie started to move two fingers back and forth across the young woman's clit, Dave came and kept coming. With her hands resting against his chest, Alyssa thrust down, held him fully in her depths as he shot his sperm into her cervix and the inner most reaches of her womanhood.\n\nAs Dave came he cried, \"I love you.\" The moment he said it he chastised himself under his breath for saying it. He didn't want Evie to be jealous of Alyssa. Both women knew the comment was directed towards Alyssa. Alyssa knew she shouldn't respond even though her heart wanted to reply in kind.\n\nA half minute later, when they both finished coming, being mindful of Evie's feelings and that she was with Evie's husband, Alyssa started to move. Before she raised her hips much more than an inch Evie put her hand on her back and smiled, \"Keep him in you. Let him soften and come out on his own.\" She then guided the young woman to rest on Dave's chest and allow him to embrace her.\n\nAs Dave embraced Alyssa in his muscled arms and against his firm chest, Alyssa cooed her satisfaction.",
        "Evie sensed the awkwardness created by Dave's statement. While it was uttered in the heat of passion and he could later explain what he meant her when they'd talk about the night, she knew it was uttered from his heart and directed to the young designer. Depending on how it was viewed, one of her husband's character flaws was that in the heat of passion he was less guarded about his feelings. When they dated, she had fallen for him quickly and he her. Yet he was slow to say that he loved her fearing she'd take it as a ploy to get into her panties. The first time he cried that he loved her was in the midst of a passionate moment. From the tears in the corner of his eyes she knew that not only did he mean it and not part of an expression of euphoria, but he did love her from the depths of his being. Now he had done the same thing with Alyssa. He had never expressed the same with any other woman. \n\nWith an unspoken elephant in the room, Evie believed it was good to have it out in the open. It was her marriage and her bedroom. She needed to take charge quickly in order to keep the elephant from charging. She started the process when Alyssa started to pull off. Normally in the lifestyle, rarely did a woman and man remain coupled. While they may lie with and play with each other, remaining intimately connected rarely occurred for not much more than a half minute or so after they finished. Though Alyssa would not understand what she did, her husband understood.\n\nCuddling against the two united lovers was another signal of her acceptance of her husband's feelings for Alyssa. It was more than just a signal to them but it was also something she desired to do for herself. Evie loved them and needed to embrace them and by doing so, express her love to them. \n\nHer hand lightly moved back and forth across the younger woman's back before settling on her nearest upper thigh. The wife raised her head, lowered her lips to her husband's. Using her lover's pet name for him she grinned after the short kiss, \"I love you Blue Eyes.\"\n\n\"I love you too my horny sexy prof,\" he smiled back.\n\n\"Oh today it's 'my horny sexy prof,'\" she kidded him. Looking at Alyssa she explained, \"He rarely says that. It's normally, 'my horny sexy reverend.'\"\n\nShe shifted slightly and turned Alyssa's head upwards and towards her more. She moved her head forward as Alyssa's moved slightly towards hers for a short kiss. \"I love you Alyssa, my blue eyed pet.\" \n\n\"I love you too my sexy horny reverend,\" Alyssa giggled. \"And I mean it. I can't believe how it happened, or how it happened so quickly. I love you both.\" \n\n\"Love is like that,\" Evie replied looking first at Alyssa than to Dave. \"Often love comes gradually, but as Dave and I know, it can come swiftly and powerfully to those who are open to it and who are naturally generous, caring people.\"\n\nDave was still partly hard and resting inside Alyssa when she wiggled her hips. \"Just trying to keep you inside me,\" she giggled as her blue eyes looked into his. \n\nLeaning up, reaching over the woman's ass, then between her legs. \"It feels like he belongs there doesn't it,\" Evie smiled as she rubbed lightly along where they were joined. Alyssa nodded. \"While we'll talk about it more later, I...\" she paused to look at her husband, \"...we hope you'll become part of our family in some way.\" Dave nodded. \n\n\"I like that idea,\" the blond replied just as Dave's cock was withdrawing on its own.\n\n\"Thursday Dave leaves for his association's annual meeting and banquet. He won't be home until early Saturday afternoon. Are you interested in having two ladies' only nights?\"\n\nMoving off Dave, and discarding the top of her baby-doll she answered, \"That would be lovely my sexy reverend.\" She turned to Dave, grinned and teased him, \"So we'll play while our baby is all alone in a hotel room.\"\n\n\"He'll not be alone,\" Evie smiled as her hand lightly touched his softened and still wetted cock.\n\n\"Oh?\"\n\n\"He's taking Corrine Peters with him. Though we talked on the phone twice, I've yet to meet her,\" she explained removing her hand. \"Dave's allowed to play with my permission.\"\n\n\"And who is Corrine Peters? Should I be jealous?\" she teased as her hands lightly moved across his deflated cock. \n\nAfter explaining that Corrine was Mary Claire's mother, Dave laughed, \"Maybe you'll have so much fun you'll persuade Evie to tell you my favorite boudoir name for her.\"\n\n\"It's not 'my sexy reverend?'\"\n\n\"No, but I'll give you a clue.\" He looked at his wife who nodded, \"Evie and I are James Bond fans and it is the name of a Bond character.\"\n\n\"I'm intrigued. My brother Bert is a Bond fan too and has every movie. I think I've seen every one a dozen times or more,\" she laughed. \"Let's see, there's ... .\"\n\n\"We'll talk while he's away,\" she said cutting her young lover off. As she kissed Alyssa on her forehead Evie grinned, \"We will need to find a pet name as well as a boudoir pet name for you too.\" Her hand moved across the well juiced cock and lowered her head. Before taking the partly erect cock in her mouth she added, \"But right now I want to suck this cock back to life so my husband can make love to you again.\"\n\nLicking the side of her husband's shaft, within seconds Evie knew she loved what she tasted. What a delectable combination. I love how she tastes, a little tangy but delightfully so. Before filling her mouth with his shaft, her tongue reached forth to lick up a dollop of their combined juices that had emerged from the young woman who lay on the other side watching her grooming and restorative work. After taking a lick of the come Evie's fingers scooped up most of the remainder. As she raised her head, she looked at the younger woman and as two sets of eyes watched her, she slowly spread what was on her fingers over her lips. When well coated Evie leaned over to allow Alyssa to taste the come as the two women kissed. Alyssa's soft moan brought a similar response from Evie.\n\nAfter sucking her husband's shaft for about ten minutes Dave was fully revived. Being taken twice into her throat and held there for several seconds put the finishing touches in preparing him to make love once more to the young woman. When Dave offered to crawl between his wife's legs she shook her head and told him to make love to their newest lover. Not only did she encourage him verbally but she also guided his hard cock into Alyssa's well prepared and ready pussy.\n\nWhile she watched Dave and Alyssa make love again Evie lightly caressed both her lovers. At times she kissed him. At other moments she kissed her. Sometimes when he raised up on his arms over his lover, the mature woman would suckle the young woman's luscious breasts. Their pace kept changing with neither in a hurry to complete their coupling. \n\nEventually Evie pushed her husband off the young woman. She was not jealous, nor did she want to rush them to their conclusion. Rather, she needed to have her husband inside her for a few minutes. Dave moved between Evie's spread thighs. She moaned as she welcomed him home. Entering her he dropped his head to lick and nip her exposed breasts, first the left tit and then her right. He slowly sawed back and forth within her as he enjoyed her breasts. He raised his head and fucked her with greater urgency as he looked into her eyes. Then he slowed, leaned down and kissed her.\n\nAs they made love Alyssa's mouth, hands and fingers played with their bodies. Her hand moved over the leather of her black bustier and her breasts as Evie came gently. Though Evie climaxed, they kept going, kissing as much as their movements permitted. Alyssa was enjoying watching them make love and gently touching and playing with their bodies as they did. \n\nEvie's breathing was already becoming even more labored when Dave raised up and lifted his wife's legs to his shoulders. Alyssa once again latched on to her breasts while her fingers energetically rubbed her lover's clit. The renewed oral ministration on her breasts and the fingers moving rapidly across her clit was all the extra stimulation Evie needed to drive her towards a second more powerful orgasm. \n\nThough she was a quieter screamer, given Alyssa's earlier boisterous screaming, as well as the energy and passion of the evening, Evie screamed far louder than was her habit. \"Ohhh yeesss. Keep fucking me you horny stud. Suck harder Honey Rider, yes that's it dear.\" A couple thrusts later brought a new string, \"Ooohh fuck me. That's it fuck your slut shitless you fucking animal.\" She gasped for air and gasped again as she came with her arms and legs holding him tight between her thighs.\n\nAcross the hallway shrouded in darkness the twins were still seated by their door. They glanced at each other when their stepmother screamed. Evie's coarse language somewhat shocked them but they weren't offended. Rather they liked the idea of their mother's colorful language as she was fucked hard by their father. The twins smiled but their eyes quickly turned back as they quickly returned to watching the action through the six inch gap.\n\nDave had been close until his wife held him so tightly with her arms and legs that he couldn't move. He would have loved to finish off in her but his wife thought otherwise. When her breathing returned she tapped her husband on the back. He pulled out of her as she slid up to rest her back against the backboard. Then she directed Alyssa to get onto her hands and knees between her legs.\n\nAlyssa knew what her lover wanted and needing no further encouragement pushed her hips into the air as her head lowered towards Evie's pussy. Less than two weeks ago she'd had her first experience with a woman. She was curious and tentative then. She was no longer tentative. She wanted to pleasure one lover as she got fucked by the other. She wanted nothing less than to show in an intimate manner that she loved them and had surrendered her heart and body to them. Her tongue was still not very talented but Evie was pleased with what she was doing in love as well as with her eagerness to learn.\n\nAs she laved her lover's pussy, her male lover was pounding into her from behind. At first his thrusting was gentle and she was able to give attention to the luscious pussy before her, but then as his pace quickened, his pounding became more forceful. She found it more difficult to give her attention to what Evie desired. In less than a minute she had given up trying to lick and suck her lover's sumptuous pussy and rested her head against Evie's thigh and pussy. \n\nKnowing what Alyssa was experiencing, she looked from the young woman to her husband, \"Fuck her hard. Pound her hard my husband and make our lover come.\"\n\nDave did just that to the delight of both women, Alyssa because of what his fucking was doing to her, and Evie because she was enjoying how he was pleasing the woman whose head was now resting against her lower belly and thighs. He was driving into her vigorously. Alyssa came. Yet he still kept pounding. She didn't know if she could take much more but was determined she'd keep going until her muscles gave out or she fell unconscious. \n\nHer head was dizzy and her body was wracked with pleasure as Evie slid down a foot and drew her further forward. It took some effort but Alyssa moved her arms and legs to allow her to position herself directly over her lover's body. As Dave adjusted, her chest collapsed on her lover's chest, pressing their breasts together. Evie's hands went around Alyssa's head. Between her gasps their lips locked. \n\nAs they lovingly kissed Dave continued to thrust into Alyssa. He had never seen his wife be so loving and passionate with anyone, let alone another woman. It was highly arousing to think that his wife was in love with the same woman he loved. While his head couldn't comprehend where their love and passion would take them, his sperm stirred and shot forth into their new lover. \n\nAs his hot sperm once again filled Alyssa, her body responded with another orgasm shooting from her pussy out, wracking her body and absorbing what little energy remained. Seconds later while still being embraced and with Dave still in her, she dropped exhausted on Evie and nestled her head on the same pillow as Evie. Though Alyssa was overwhelmed with a flood of sensations and thoughts, the dominant one was how at peace and as one she felt with this couple. \n\nNot more than two minutes later, Evie kissed the side of a sleeping Alyssa's face and chin. Dave had dropped to the side moments ago. She grinned about what she'd called her lover earlier. In the heat of the moment she discovered the boudoir name for her sweet highly energetic lover. \n\nAs she looked at the sleeping Alyssa, Evie noticed her husband too was sound asleep. The two bedside lights were still on but she wasn't going to move Alyssa from resting on her. She was able to pull a sheet over them but was unable to reach the comforter. Thank goodness I remembered to turn up the heat, she told herself. As she too closed her eyes, she felt a dollop of come land on the top of her pussy that started to run down through and around her swollen lips. So fitting she smiled inwardly as she too drifted towards sleep.\n\nAcross the hallway, behind a closed door two young women held each other. They weren't ignorant about sex. They'd been through the sex education classes, talked with their mother, read stories and watched the standard videos their mother provided for their viewing. Though they knew the mechanics, various positions and techniques, they still had much to learn. They knew sex was exciting and were aroused by the idea of becoming sexually active but they'd remained true to their dying mother who they promised that they'd wait until they were eighteen and even then that they'd give their virginity only to a special man who was worthy of their love. \n\nWhen Sam had had weak moments and wanted to chuck the whole vow thing, Abi was there to keep her faithful and Sam had been there in the same way for Abi. Their stepmother, who they called lovingly called Mom supported them in their vow and goal. She listened to them without judgment when they were tempted to or came close to breaking their vows to their deceased mother and with her support they'd maintained the vow. They greatly appreciated Evie for dearly accepting and loving them as much as any biological mother. She helped them to set parameters to help limit the chance of temptation, and promised that when they were ready to have full penetration sex she'd help them plan out their first encounters. Under Evie's tutelage they'd both learned to pleasure themselves as well as each other, so the pleasure of an orgasm was not unknown to them. \n\nTheir parents frequently told them there was a great difference between making love and having sex. Evie recently granted them open access to her and her husband's adult DVD collection. She also gave them the names of some of the better erotic story sites on the web. They had watched a good number of DVDs and read stories frequently. While they had a general sense from some stories about the differences between having sex and making love, it was only after witnessing their parents and Alyssa did they now appreciate what it meant to make love. What they saw from their parents was more than arousing and stood in stark contrast to what they watched on the DVDs. They were now more certain that they wanted to make love the first time they had sex.\n\nAfter twenty minutes of talking about what they'd witnessed, Samantha walked over to her dresser drawers, stripped and put on a pink cami and red boy shorts. She often slept in this attire so Abigail didn't think much of her sister's activity until Sam opened their bedroom door. \"Where are you going?\" asked Abigail.\n\n\"I don't know about you Abi, but I'm crawling into our parents' bed. I feel like holding them and sleeping with them and that woman. Whoever she is, she loves them and they her. So that is that,\" Abigail said to her sister.\n\n\"Wait for me!\" Sam did wait for her sister to put on an identical outfit. They quietly walked into the master bedroom. As they approached the bed Sam bent over and picked up red nylon panties with \"All for you\" embroidered on them. She held the panties up for her sister to see. Abi whispered, \"Hers?\" Sam shook her head pointed to another red pair to the side of the bed next to a black pair. \n\nAbi looked bewildered. Moving towards the bed Sam pointed to their father. Abi's eyes widened and whispered \"Cool,\" as her sister nodded. \n\nThe sisters adjusted the sheet and pulled the comforter up over the three sleeping figures and before turning off the lights, gently kissed their mother and father on their foreheads. With the lights turned off the young women crawled into bed to be on either side of their parents. Abi slid under the covers and cuddled against Evie and Sam cuddled against Dave. \n\nFor all five individuals in the Hawks home November 5th would be remembered as a special and life transforming day.\n\n##\n\nMax had just returned to the den fresh from his shower wearing clean jeans, a tee shirt and barefoot. Veronica had just stood and was leaving the den to get a glass of water. As she passed Max he extended his arm, putting it around her waist pulled her back against him. As she relaxed against him he gently put his hand on her breast, nuzzling her neck, \"You are a very beautiful woman. Can you feel what you do to my cock?\"\n\n\"I can,\" she replied moving her ass against his erection. \"What would you like to do with me?\"\n\n\"I didn't get any dessert this evening. Would you like to be my dessert?\" replied Max softly into her ear.\n\n\"Of course, here or in a bed?\" cooed Veronica.\n\n\"Here is fine,\" replied Max turning her in his arms and kissing her with an open mouth.\n\nAcross the room, my hand involuntarily tightened in Ashley's bra as she pushed against me a bit more. She turned her head and quietly said, \"God he's hot. Smooth too.\" Saying that Ashley's, hand moved to caress my hardening cock through my pants.\n\n\"He is that and getting better. Cathleen wants to take him to Hedonism over New Year's. She'll probably do wonders for his technique and appreciation of what a woman wants,\" I sighed.\n\n\"I guess Amy Anne did that for you,\" said Ashley.\n\n\"Yeah, I guess she did. I really hadn't thought about it until I saw her again Thursday,\" I smiled. \"On the other hand, your mother is teaching me so much more, to refine my techniques, to know when to be more gentle and when to be more eager, and to pay attention to subtle signals a woman is giving.\"\n\nVeronica led Max to the couch and they both sat in the middle. Carol and Katrina moved to the wingbacks and Mary Claire sat in my desk chair. After sitting, Max again took Veronica in his arms and while kissing her slowly moved his hand up the inside of her thigh under her skirt. After a few moments he moved his hand to her chest and put his hand inside her unbuttoned blouse. After gently pushing her bra cup down he leaned down and began to suck and tease her nipple with his teeth. She audibly sighed as he moved his hand back down between her legs. Max then raised his head and resumed kissing her. After a few moments, he said \"You're wet.\"\n\n\"I know,\" she purred. \"I want you.\"\n\nMax released her from his arm and slid off the front edge of the couch to his knees. He reached both hands under her skirt and pulled her forward to the edge of the cushion. Unrushed he pulled her g-string down and off, then kissed the inside of each knee before gently pushing her legs further apart. As his mouth came closer to her weeping pussy he licked the inside of each thigh. By the time he was beginning to lick her slit that he'd spread open with his thumbs Veronica was in the throes of a soft orgasm. She relaxed back against her arms on the couch cushion. \n\nEither by accident or on purpose, Veronica's hand slid under Ashley's skirt and immediately her fingers found Ashley's pussy. With her fingers being wetted by her daughter's juices she lovingly looked up into her husband's eyes and face. The love for her she saw from him warmed her heart. There was not a hint of jealousy or concern. He loves me and really doesn't mind me enjoying other men, she joyfully told herself.",
        "As Max continued to pleasure her, licking her clit and asshole and tongue fucking her, Veronica worked a finger into Ashley and was slowly finger fucking her. She closed her eyes and enjoyed feeling her daughter and the sensations Max was giving her. An image formed in her mind, of kneeling between two men with their hard cocks in her hands, repeatedly moving her mouth from one to another. There was another woman laying there with her pussy lips spread apart. She looked up into her husband's face and then guided him between the other woman's spread legs and seated him before she lay beside the woman. She pictured that Evie was the other woman, holding her hand as the second firm-chested, muscular man entered her. She wondered if the faceless man was Evie's husband or someone else. \n\nMax wet his finger in his mouth then in Veronica's pussy. He then slowly pushed it into her asshole. She grunted a little, her eyes opened, looked down at his youthful face, then she sighed deeply as he put another finger in her pussy. As he sucked on her clit she began bucking against his face and strongly came, whimpering, \"Ooh, fuck, that's so nice, fuck, deeper in my ass you mother fucker, suck harder, ummm, yes.\" As she was coming she rammed her finger more deeply into Ashley causing her to come as I was kissing Ashley.\n\nI held Ashley tightly as she came down while watching Veronica passionately kiss Max whose face was glistening with her own juices. When she broke the kiss, she asked him, \"Max, wanna fuck?\"\n\n\"Yes and no. I promised Beth that I'd fill her up with come tonight so Mom could clean her out. I'll take a rain check if you're willing,\" he replied with a hopeful look on his face.\n\n\"Hmm, I've never been turned down before. But since there's always tomorrow, tell Beth she owes me. Also tell her that I said that you're the best young fucker I've ever had.\"\n\nAfter Veronica licked Max's face for a few minutes he went into the bathroom to finish the job and returned with a handful of dirty clothes and his jacket on. \"Goodbye everyone. I hate to have to run, so many pussies, so little time,\" he chuckled. Carol grabbed him as he walked by, pulled his face down to her and kissed him, \"Don't forget, I like to play too.\"\n\n\"Count on me not to forget that, Carol.\"\n\n\"Well, that was very nice. I'm horny handsome. I need a cock to fill me. Ashley get his cock out and move over a bit, please,\" said Veronica.\n\nBeing the dutiful daughter, Ashley complied, taking me deeply into her mouth after pulling my cock out of my now unzipped pants. After five or six seconds she moved to the side giving her mother room to straddle me. Veronica impaled herself on my rigid member and began bouncing up and down. Veronica was so on edge from Max eating her that she promptly began to orgasm. Her orgasm started slowly, but as it built she began to move her hips from side to side as well as toward and away from me. Her breathing became more ragged and as she peaked cried, \"Ohh fuck, I love you. I love sex, aaah God.\"\n\nKatrina walked toward us and kissed Veronica as she'd turned her head toward Katrina's touch on her cheek. \"I get you next,\" Katrina softly said.\n\nIn bed that night I fucked Mary Claire doggy as she ate Carol. Katrina and Veronica were beside us pleasuring each other in a sixty-nine while Ashley sat in a side chair playing with her breasts and pussy. Later Ashley had me eat and finger fuck her with the plug in her ass. I finished the night by making gentle sweet love to Veronica in the missionary position.\n\n\"Max's finger felt different, nice different in my ass. Tomorrow you're gonna fuck my ass with your lovely cock,\" smiled Veronica as we held each other before falling asleep.\n\nI shook my head, \"I'd rather take your anal virginity on our honeymoon.\"\n\n\"So you want to do some virginal deflowering on our first night as man and wife. Then who am I to disappoint you. Your wish shall be my pleasure,\" she laughed. \n\nAs sleep claimed us all, Veronica turned to me and said, \"I love you. Life is good.\"\n\n\n\nI hope you're continuing to enjoy this tale of a family and their lovers. I've a long way to go before I finish but the chapters may sometimes be published further apart because of my day job. I'd appreciate comments and if you have some ideas you'd like me to incorporate, please tell me and I'll consider them. This chapter mentions Dave has a boudoir pet name for his wife, email me what you think would be a fitting Bond female pet name. Honey Rider is now taken. If Dave were to call Veronica a pet name, what do you think would suit her? Carol? Your continued high votes keep me encouraged that this has been time well spent. I try to respond to all emails unless they're cranky. I'd like especially to hear from any female readers. "
    ],
    "authorname": "Reindeer58",
    "tags": [
        "hose",
        "heels",
        "upskirt",
        "dresses"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/any-chance-we-could-ch-43"
}