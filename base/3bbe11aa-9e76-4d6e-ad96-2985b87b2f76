{
    "title": "Vacation Experimentation",
    "pages": [
        "This is my first attempt at writing erotica. This goes on and on more than I thought it would, but hopefully it holds your interest. This is a true story of some loving exploration between my wife and I, and if there is some positive feedback I will gladly submit some more.\n\nWho am I kidding, I was so aroused writing this, I am definitely gonna submit more. Constructive criticism is certainly welcome.\n\n*\n\nLast spring, my lovely wife Carol and I decided to go on a little weekend romantic getaway. As parents, it is hard to find dome good quality time as husband and wife. We cherish the times we are able to get away together and connect as husband and wife and rekindle the fires as lovers. On this particular vacation, we didn't really have an exciting destination. We knew we were going to be in the hotel room pampering each other except for the occasional foray into town to visit some antique shops, grab some lunch or dinner and flirt shamelessly.\n\nAfter a long drive and some serious teasing along the way, we checked into our hotel and proceeded to get settled in, which of course consisted of a quick shower and some much needed, animalistic fucking to get the weekend kicked off right. After setting our luggage down inside the room, I quickly grabbed that luscious body that had my cock hard and straining within my pants for the last 2 hours.\n\nI pulled her close and ground myself into her as she moaned into my mouth as our lips hungrily devoured each other. Grabbing a generous helping of her ass cheeks, I pulled her up into me and let her feel how hard she made me. She broke the kiss and turned away saying she needed to tidy up in the shower first before spinning on her heels and flashing that seductive smile.\n\nI watched her disappear into the bathroom and couldn't get out of my clothes fast enough. I glanced around the room and the view from the large picture window in front of the bed. I stroked myself in front of the window hoping that someone would be able to see us, but not likely that anyone would be watching this early in the afternoon.\n\nWhen I heard the water in the shower stop, I knew it would be my turn to clean up a bit and then onto the festivities. As Carol passed me on the way out, she sneaked a finger out to my throbbing erection to gather some of the pearly pre-cum that was lewdly hanging from the tip and brought her finger to her mouth with a sensual moan. Damn, this was going to be the quickest shower ever.\n\nUnder the streaming water, I worked quickly to scrub and clean myself. As the water cascaded over me, it was very hard to control myself as I washed my manhood. I was so ready to release the afternoon's tensions but knew it would be so much better releasing them into Carol's lovely mouth.\n\nCarol obviously had different plans because when I came into the room, she was very caught up in the feeling of her fingers sliding through the moist lips of her pussy as her other hand pulled on the turgid nipple of her left breast. I looked on in awe as I watched her start without me. I slowly moved toward the bed and brought the swollen head of my cock to her lips. When the wet, shiny head made contact with her lips, her eyes flew open and she immediately slurped the head into her soft mouth. We both moaned at the incredible sensation.\n\nMy baby groaned when my fingers touched her. Half animal, half contentment. My fingers played through her soft mane of hair and moved slowly against her cheek. For some reason I love to touch her face as my cock slides in between her lips. My fingers slowly made their way down her neck to her chest. I stopped briefly to feel her chest rise and fall with her breath.\n\nNext, I traced the soft curve of her breast. Around the side, underneath and slowly up over the swell and stopped just short of her nipple. Just a soft tentative touch. A caress. A pinch and a squeeze. A moan of appreciation from her. That moan caused a lovely sensation around my cock, but of course it was nothing when compared to the feel of her tongue slithering all over the underside of my cock.\n\nI took a moment to look up and out the window, hoping that by chance there may be someone out there watching. No such luck, but something we can rectify for later. I was brought back to earth when I heard my lovely wife begin to moan over and over in quick succession. Her fingers had never stopped her assault on her hungry pussy and apparently her oncoming orgasm was going to be a big one. Her suction immediately increased as well and I could definitely feel her trying with all her might to suck the life right out of me. I could feel my own impending climax begin to form as hers ended and her intense sucking subsided to a gentle suckle of my manhood.\n\nShe knew I was close and pulled her mouth from me, but grabbed my ass in one hand and my cock in the other as she stroked me firmly and steadily. Her fingers slid between the cheeks of my ass as she pumped me trying to cajole a climax all over her big tits. I don't know if it was on purpose or not, but one of her fingers had rubbed back and forth across my anus. I was a little surprised at the sensation, but quickly realized I liked the added stimulation.\n\nIt soon turned into a gentle rubbing in a circular motion. Not too much pressure or a real effort to penetrate me, but she was definitely rubbing in small quick circles with a purpose. I was so caught up in the new sensation at my backdoor that I had not really paid much attention to the work of her fist pumping up and down on my dick and we were both pleasantly surprised when I unexpectedly shot off all over her lovely tits in a cataclysmic eruption of semen. We were both surprised by the force and amount of my ejaculation. I could only watch in stunned silence as the thin rivulets of cum practically burst out of me and splashed across her mounds.\n\nOver and over with such pleasurable force. When it finally ended, I suddenly realized that I had not taken a breath for several moments and finally sucked in a large breath that caused on last little spurt to land right on her nipple. We both watched it in fascination as gravity pulled it into a strand that eventually connected from her nipple to her thigh.\n\nAfter long seconds, I finally broke the tension by saying, \"That was different.\"\n\nWe both laughed for a bit as a bent down to kiss her and pulled her cum soaked body against mine as we cuddled together on the bed. We soon drifted off into post orgasmic bliss in each other's arms.\n\n\"What time is it?\" I said.\n\n\"Hmmm, looks like 5:30 according to the clock. I'm starving, let's go get some dinner\", Carol said as she stretched and rose from the bed.\n\nI watched her naked butt saunter into the bathroom.\n\n\"I'm hungry too,\" I muttered under my breath watching her jiggle.\n\nAfter a quick shower we both dressed for dinner. I requested that she not wear a bra or panties to dinner. As a compromise, she went without a bra but kept the panties on.\n\n\"I'll go without underwear if you do\" I said.\n\n\"Big deal, you always go commando\" she retorted and with extra emphasis, she squeezed the bulge in the front of my trousers.\n\nAs we stood in line at the hostess station at the restaurant, I held her close to me just feeling the warmth of her body and the scent of her. The wait was starting take its toll on me and I soon began to get antsy. The bar was full and the couch in the waiting area was occupied, so we were kind of pushed into a corner by a large potted plant. I took advantage of the small amount of privacy that we had and allowed my hands to do a little wandering. At first, just playful rubbing of her butt or her thigh. Soon though, I got bolder and started to actually squeeze and massage her butt.\n\nShe leaned into me as I lightly caressed her body getting a little bolder with each passing minute. When my hand moved down the cheeks of her ass and back up her inner thigh making the very slightest contact in the juncture of her crotch, she let out a very soft moan followed by a sudden jerk as it suddenly dawned on her where we were and what we were doing.\n\nShe tried to move my hand away without causing anyone to take notice of us, but I firmly clamped my hand to her groin so she couldn't get away. She shot me a look of concern, maybe even annoyance pleading with her eyes for me to stop. My response was to forcefully grind my thumb against her sex through her clothes. The gulp of surprise in her throat was visible to me as was the sudden intake of breath. I continued to keep the pressure right on her crotch and ground harder and harder. Her breathing was getting more rapid and uncontrolled.\n\nHer knees were buckling, so I pulled her body closer to mine. This caused my hard shaft to press firmly against her ass. She didn't waste time rubbing against the hardness. We were both lost in our own feelings, oblivious to our surroundings. Suddenly I could hear our name being called in the distance. I don't know if they called us more than once, but people around us were scanning faces to see who the name belonged to. We tried to discretely untangle ourselves and act normal, but I'm sure that we were caught out by someone.\n\nCarol tried to act nonchalant as she made her way to the Hostess desk as I followed behind her. I caught the brief stare of one of the women in the waiting area who had a look of shock on her face. I suddenly felt a flush of embarrassment as I noticed her gaze focused on my groin area. I tried to act natural, but was terribly aware of the noticeable bulge and prominent wet spot on the front of my pants. The only thing I could do was smile, hold my head high and walk through the dining room like nothing was wrong.\n\nThankfully we were seated in a semi-private booth. I did the gentlemanly thing and held my wife's hand as she scooted into the booth. When she looked up to thank me, she too noticed my aroused state on display and flashed a wicked smile. She delighted in making excuses for me to stand there on display a little longer before finally allowing me to sit down next to her. I couldn't be sure, but I swear I noticed our hostess smirking at me.\n\nDinner was delicious and filling. It was hard to refrain from filling up too much as I knew there would be much more entertainment in store for us and didn't want to ruin anything by being too full. There were several glasses of wine to loosen us up further and only caused our inhibitions to dwindle away even further. There was plenty of secret groping and touching under the table. At one point, I had my fingers down Carol's paints from the back and managed to slide down between the cheeks of her ass and reach just far enough to tickle her cute little rosebud.\n\nShe also had gotten bold enough to undo my zipper and slide her hand inside to lightly stroke and squeeze me cock under the table. That is until our waitress came around to refill our glasses. Carol was able to quickly extract her hand, but in doing so pulled my cock along with it through the hole of the zipper. I was not able to extract my hand in time so I just continued to tickle her asshole and watch her squirm. I'm not entirely sure if our waitress was wise to our shenanigans, but she did seem to take an awfully long time filling our glasses and being extra chatty while checking up on us.\n\nWe were sufficiently horned up and wasted no time paying the check and getting the hell out of there. Back at the car, it was all we could do to not rape each other there in the parking lot. After a rough and prolonged make out session, we proceeded to make the drive back to the hotel. On our way out of the lot, Carol had said there was a shop that she wanted to check out before we retired to our room. I complained that it was surely something that could wait until tomorrow, but she flashed her pouty eyes and said she would make it worth my while.\n\nI was all for that and had quickly formed 3 or 4 sexy scenarios in my head in a flash so agreed with her wishes. She guided me to the shop using her phone for directions. Her voice was especially breathy and husky but I chalked it up to the extended flirting in the restaurant. Soon, however, we were getting farther and farther away and I kept asking her if she had the right directions. She assured me she did and said the shop is just ahead on the right. Imagine my complete surprise when I looked ahead to see the neon sign that said \"Fantasy Pleasure's Boutique\".\n\n\"You never cease to amaze me woman,\" I stammered.\n\nCarol just blushed and flashed that killer, seductive smile.\n\nI followed her into the store, not sure what we were going to find. Don't get me wrong, we had ventured into some adult stores together when we were younger, so it was not totally new territory to us, but it had been several years and she had never been the instigator. Now, I have found that when you enter stores like this, you can either expect a seedy atmosphere with low light and nervous looking men rummaging around, or you can find a brightly lit, clean and organized establishment that still has a few nervous patrons but also several couples browsing around. Luckily, this proved to be the latter and I was very relieved to see a few other couples milling about.\n\n\"What made you think of this?\" I asked.\n\n\"Oh, I was just in the mood for some sexy clothes, so I Googled lingerie and toys and this is what I found.\"\n\n\"What kind of sexy clothes are you looking for my dear?\"\n\n\"Well, I know how much you LOVE seeing me walk around in public without a bra and I wanted something to allow that to happen.\"\n\n\"Well braless is easy, just don't wear a bra.\" I replied.\n\n\"Well silly, I was thinking it would be nice to have something that would show off my nipples for you to see, but still provide a little support while we are out and about.\"\n\nTo emphasize her point, she guided my hand to her chest and pressed it against her left breast where I could indeed feel her engorged nipple and soft. Unencumbered flesh. She was right, that does always arouse me. This was no exception either, as I could feel my erection returning. I loved when she teases me.\n\n\"Plus, we may find some other \"interesting\" items in here to try out.\"\n\nAs she pulled away to roam the aisles, I was left standing there with an obvious hard-on and still leaking pre-cum all over the front of my pants. It was a good thing I didn't know anyone here, but it still was embarrassing to me to have my arousal so obvious. I am sure Carol was loving it.\n\nWe browsed all of the lingerie racks looking at various items when she spotted the bra she was looking for on a display high up on a shelf, out of reach. My normally shy wife wasted no time by loudly asking the girl at the front counter for some assistance. The girls looked up from her book and walked across the store to see what we needed. When she arrived, my wife pointed out the bra she wanted to see and asked if she could bring one out in her size. She asked Carol what size she wanted, and my wife thrust her chest out to the girl and said something in a c?\n\n\"Looks like it might even be a D\" said the girl as she eyed my wife's braless tits and tried to suppress a smile. I loved the added teasing, but it was not doing my level of embarrassment any good.\n\nAs the girl went to the back to look for the bra, my wife started browsing the toy aisle. She sauntered past all of the dildos and vibrators on display. She looked at each one clinically assessing its merits and features as if she were shopping for office supplies or something. I made teasing comments about how each would feel and she would say \"Hmmm, suppose that would be nice.\"\n\n\"Do you remember that toy with the tail and the vibrator?\" she asked.\n\n\"I am not sure.\"\n\n\"You know, the one that covered my pussy and vibrated but had the little tail that went back...here?\"\n\nFor emphasis, she turned slightly and presented her rump and seductively pointer her finger at her bottom.\n\n\"Ohh, that one. I believe it was called a Scorpion. I wonder if they have one of those\" I said.\n\n\"I REALLY enjoyed that one. I was so said when it died\".\n\n\"I enjoyed watching you with it. I will look to see if they have one\".\n\nJust then the salesgirl returned with a couple of options and her and my wife were busy discussing and holding the options up to her chest. Figuring I didn't need the added stimulation, I went in search of the infamous toy. A few minutes later, my wife caught up to me in the \"Anal\" section and proceeded to browse along with me.\n\n\"What do you think of this?\" she asked.\n\nI turned to see her holding a slim, tapered jelly dildo intended for anal pleasure. I looked it over. Not a lifelike dildo, about medium to large size and very colorful.\n\n\"Could be fun\" I winked.\n\n\"Hmmm, might be a little too much,\" she smirked.\n\n\"This looks a little more manageable, and it vibrates\" as she showed another colorful toy.\n\n\"I bet the vibrations would be wonderful\" I said.\n\n\"I know they would\" she replied with a dreamt look on her face. She stood there and looked at me for a few seconds before going back to browsing.\n\nAll of this kept my cock hard as a steel shaft. Unfortunately, the pants I had chosen that night, while being of smooth high quality material dress pants, they did serve to allow my erection to be on full display. I happened to catch a glimpse of myself in one of the mirrors in the lingerie section and was totally shocked at what I saw. I am not hugely endowed, but I am comfortably above average and at least my wife and a few others have said my cock is \"beautiful\".\n\nShe especially loves the big, thick mushroom head. Says it is her favorite. Anyway, there in the mirror, I spied the perfect outline of my hard cock in perfect detail. Stretching to the side toward my hip, the full erect outline and that big mushroom head on full display. To make matters worse, there was a very large wet spot where I had been leaking pre-cum from the tip. I could even begin to feel it running down my leg.\n\nI turned nervously to see if anyone was noticing. My wife watched me closely, very aware of the situation I was in and seductively licked her lips. I just tried to keep my head down and not make eye contact with anyone in the store.\n\n\"It feels sexy when everyone can see you, doesn't it?\" Carol said in a low voice.\n\nShe loved being able to throw those words back in my face since I had said them to her often enough when I tried to convince her to go without a bra.\n\n\"Hey look at this and tell me what you think\" she asked, ushering me over.\n\n\"It looks like fun. Nice size and shape and I think you will enjoy the vibrations,\" I said as I looked at her latest choice in anal toys.\n\n\"It has an accessory\" she told me.\n\nWith that, she held up a leather harness.\n\n\"It fits through this hole here and then straps around my waist.\"\n\nI looked in awe. I have been no stranger to anal play, and thoroughly enjoyed her sliding a wet finger in my ass when she sucked and stroked my cock. This, however, was not something we ever talked about.\n\n\"I think you would love it, and I KNOW I would love it.\"\n\n\"I suppose.\" Was all I could reply.\n\n\"It is just an idea, we don't have to try it if you're too nervous.\"\n\n\"It's not that, I just haven't considered it seriously.\" I replied.\n\n\"But you HAVE considered it?\"\n\n\"I admit I have thought about it a little in the past and it is intriguing.\"\n\n\"Mmmm, naughty boy. I bet you have thought about it while you play with yourself in private.\"\n\nWith that I just blushed and looked down.\n\n\"I know I would LOVE sliding this deep inside you. Would you let me, please?\"\n\nWith that, she slowly caressed my ass, softly sliding her hand down the crack and coming to rest right on my asshole. I couldn't hold back a little moan of pleasure at her intrusion, and I swear I could feel another large drop of pre-cum leak from the head of my throbbing cock at that exact moment.",
        "\"I will take that as a yes,\" she said as she took her items and walked up to the check-out counter. I followed behind her and admired the extra sway in her hips. She stopped midway, handing the items to me and said, \"would you mind bringing these up and paying for them? I have one more thing to grab.\"\n\n\"Sure,\" I said and went to the front of the store.\n\nI was suddenly, acutely aware of my throbbing erection and noticeable wet spot as I approached the young salesgirl. I don't think my face could possibly get any more red with embarrassment. Strangely, however, I was even more aroused to be standing in front of this young woman with the items before her. She was totally aware that in a short while, I would likely be naked and bent over with this new sex toy buried in my ass. To cap it off, my wife chose that moment to arrive at the counter with the jumbo sized bottle of lube.\n\n\"Can't have too much of this,\" she said enthusiastically.\n\nThe poor salesgirl almost choked when she heard that, and I thought I was going to faint.\n\nFinally, we were out of the store and I could breathe. On the way home, my wife eagerly opened her packages and proceeded to lovingly stroke the toy and make seductive commentary.\n\n\"It is so smooth, and just the right size. It is going to feel amazing sliding into you. And when you feel the vibrations inside you, you are going to love it.\"\n\nI was loving every second of her commentary. So much so that my distraction caused me to take a wrong turn and send us further away from the hotel instead of closer.\n\n\"Damn, I fucked up and turned at the wrong exit, It's going to add another 10 minutes.\"\n\n\"Don't worry, I will find something for us to pass the time.\"\n\nWith that, she placed her hand on my thigh and slowly inched her way up to my cock straining to get out of my pants.\n\n\"Someone is sure excited about his new toy,\" she cooed.\n\nShe traced her finger along the length of my erection, circling the swollen head a few times.\n\n\"Wow, you sure are wet baby.\"\n\nShe deftly opened the zipper and pulled my pants down without making me lose control of the car. She grasped the shaft firmly in her hand and swiped her finger across the head of my shaft, gathering some of the pre-cum and bringing it to her lips.\n\n\"Mmm, that's so delicious.\" she purred.\n\n\"Here try some.\" With that she slid a slippery finger on my lips and into my mouth. I had to admit it tasted good as I sucked on her finger.\n\nShe continued to caress my manhood as I tried to concentrate on the road. After the entire night of teasing, I warned her that I wouldn't be able to take much more of that.\n\n\"I'm counting on it. Just sit back and enjoy.\"\n\nShe slowly slid her slick finger up and down the shaft and paid extra attention to the swollen head. My moaning her spurred her on as she slowly picked up speed and occasionally gripped the shaft more firmly. The sensations were wonderful. I could feel every pleasurable ripple her hand produced. I was so close and I knew there would be no way to stop the impending climax.\n\nShe sensed my dilemma a split second before I warned her I was going to cum all over in the car. She squeezed me hard once then released and repeated as her slick hand pumped up and down on my engorged shaft. I sucked in my breath and held it as she and I both felt my shaft swell before exploding. The groan that escaped my mouth was loud and the cum that escaped my cock was forceful as we both gasped in surprise watching the spectacle of my orgasm.\n\nMy cum burst out of me up into the air and landed all over both of us. The pulses of pleasure overtook me and I pumped myself into her fist as she held on and stroked for all she was worth. One, two, three, four spurts rocketed into the air and drenched me. More and more just kept coming out. She purred like a cat watching the spectacle and finally slowed her stroking as she took in the sight of my climax.\n\n\"Oh wow, that was fun.\" She purred.\n\nI had no words, just looked at her and smiled.\n\nShe lazily kept stroking me, manipulating my wet, sticky shaft in her hand. Even though it was way to sensitive, I loved the feeling of her coaxing a little more pleasure from me. Sad little droplets of cum continued to leak out as she softly finished her caresses. She never stopped until we pulled into the hotel lot. Then she made a lewd show of licking her finger clean, making sure that I watched her catch every pearly drop as she moaned and cooed for my entertainment. After a few moments of watching her display, I finally started to breathe.\n\n\"Do you have anything that I can clean myself with?\" I asked, suddenly back in reality.\n\n\"I don't think so. Just zip yourself up and lets go in. I can't wait to try this out. Besides, no one will notice.\"\n\n\"No one will notice? Hell, I look like a can of whipped cream exploded all over me!\"\n\n\"There won't even be anyone around to see. Besides, you've been showing off quite a bit all night.\"\n\nChrist, I do not know who this woman is. It certainly isn't my proper wife.\n\nWe entered the hotel lobby and I was ready to bolt toward the elevator so we could at least make it to the room unnoticed. The doors opened up and I rushed in followed by my wife and the doors were beginning to close when my heart sank.\n\n\"Do you mind holding the door please?\"\n\n\"Sure, no problem at all\" said Carol as she hit the door open button.\n\nThere I was face to face with a very attractive lady dressed for business strolling into the suddenly claustrophobic elevator car.\n\n\"Thank you.\"\n\n\"Our pleasure!\" I'm sure I detected an extra emphasis on the word pleasure from my devilish wife.\n\n\"Hi, I'm Gloria,\" she said.\n\n\"I'm Carol and this is my husband Mark,\" as she waved her hand in my direction. That hand was waved low enough to be pointing at my crotch and she held it there longer than needed. I swear I saw our new companion's eyes open wider and a quick intake of breath, but it could have been my imagination.\n\n\"We are here on vacation and just returned from some dinner and shopping,\" said Carol.\n\n\"Oh, I am here for a quick business meeting then I will be returning home,\" offered Gloria. I saw her eyes dart down to the bags in my wife's hand with the cupid logo and the name \"Pleasures Boutique\" in large classy letters.\n\nThat time I definitely detected a smirk and a twinkle in her eye.\n\nThankfully, the bell dinged as we arrived at Gloria's floor and the doors opened up into the very bright hallway. She turned and started exiting before turning around and saying, \" well I hope you do enjoy your stay her...but perhaps you already are.\" With that she cast a purposeful nod toward my ruined trousers and left the elevator,\n\nCarol burst out laughing as I rolled my eyes in embarrassment. Luckily, we made it to our room without further incident and once inside, Carol pulled me to her for a passionate kiss.\n\n\"We better get you in the shower, lover. I want to make sure you are squeaky clean for round two.\"\n\nWith that she started to casually remove items of clothing as she made her way to the shower with her bags in tow. She shimmied her cute little ass on the way and beckoned me over her shoulder with her crooked finger. I followed behind her, anxious and excited for what lies ahead.\n\nShe was getting the water warmed up as I arrived in the bathroom. Once she had the water temperature just right, she came to me and molded herself into my arms.\n\n\"I just want you to enjoy yourself, but also want you to be comfortable. If at any you point you want to stop, you have to let me know.\"\n\n\"I am ready for you and I will let you know.\" She smiled and kissed me deeply. My hands found their way down to her ass and pulled her tightly to me. Her body melted into mine as we shared the passion and love of each other.\n\nCarol pulled herself from my lips and took my hand in hers as she led me into the shower with her. The warm water felt soothing on our skin. Our hands continued to explore each other as we soaped each other washing away the night's naughtiness in preparation for a whole new round of naughtiness.\n\nIt is amazing how slick and smooth a soapy breast feels in your hand. The feeling is sublime and utterly arousing. Carol noticed this as her soapy hand found my hard cock, throbbing with renewed energy for her. The feeling of her slick hand sliding up and down my shaft again felt wonderful, but nothing like that combined with the feeling of her stroking me combined with the feel of her hand slide up and down the crack of my ass.\n\nShe massaged my butt crack up and down, stopping occasionally to apply a little pressure on my hole. That sensation brought about a deep moan from me. She intensified her massage and soon got to the point of pressing her fingertip right at my opening. Applying a staccato pressure, but not really penetrating yet. And then it happened. Her fingertip pushed its way inside. I felt it enter me ever so slightly and slide in a little further. Instinctively, my ass clenched around her invading finger and I swear I saw stars and groaned a deep, guttural growl. Carol gripped my shaft tightly as her finger wormed its way inside me.\n\n\"How does that feel Loverboy?\"\n\n\"Fantastic,\" I grunted.\n\n\"Just think how my little surprise is gonna feel thrusting deeply inside you.\"\n\nI reached around her to take her ass in my hands and share what I was feeling with her by sliding my fingers down between her buttcheeks in search of here cute little rosebud. She giggle/grunted as my finger slid inside of her. Her response was to force her finger deep inside of me in a playfully forceful thrust.\n\nAfter several minutes of this treatment, she was convinced I was thoroughly cleaned and pulled her finger from me. I suddenly felt empty and wished it were back inside of me. I continued to work her ass with my own finger however, and slid down to my knees to lavish her pussy with loving licks from my tongue. I had been wanting to taste her all night and I was contemplating whether I wanted to devour her quickly and roughly, or to savor the feel and taste of her delicious pussy.\n\nI love the feel of her slick labia in my mouth, and the flavor of her juices is an addiction for me. I slowly explored every inch of her most precious flower in my mouth and savored the taste of her passion as my tongue searched every nook and cranny of her sex. The sound of her whimpers and moans always brought me great satisfaction as I teased and prodded her towards climax. She must have been enjoying herself all night because she was absolutely drenched with moisture that flowed into my hungry mouth.\n\nI greedily lapped up her wetness and probed for more. I sucked her engorged clit an licked her lips and her opening with greater and greater ferocity. Her hands were entwined in my wet hair and she was pulling my face tighter and tighter to her sex as her hips humped her pussy harder and harder into my face. There was a staccato of whimpers escaping her lips and I knew that any minute she would be shaking and cumming on my tongue.\n\nI don't know what came over me, but I decided to swipe my tongue down further and further until it reached her other hole. Her hands suddenly tightened almost painfully in my hair as my tongue slithered back and forth across her very sensitive asshole. I tickled her private opening before applying long, firm licks back and forth. She immediately started shaking and trembling against me and screaming.\n\n\"Oh my god, you are crazy!\" she screamed, but she continued to pull my face tighter and tighter against her.\n\nI was lost in the lustful taboo of the situation, and greedily licked and sucked her most private opening until she seemed to be coming down from her orgasm. Not one to let a good thing go, I switched gears again and assaulted her pussy with my mouth as my finger entered her asshole. She screamed out loud and immediately started cumming again.\n\nIt was quite a challenge trying to hold onto her bucking body as she lost control of herself and started thrashing wildly. Somehow we ended up both laying on the floor of the shower, panting and looking at each other with amazement. After another quick clean and rinse for her, she turned the water off and we proceeded to dry each other off.\n\nAfter I watched her dry her hair, she picked up the complex contraption that was the harness for her strap-on dildo. It looked like a puzzle we would never figure out, but with determined patience we finally got it in place. She proceeded to fasten the rubber appendage through the hole in the front and tighten various straps to secure it in place. I was standing behind her rubbing my shaft between her butt cheeks as I helped her make the final adjustments for comfort and stability. As I was making the adjustments, I saw her slowly sliding her hand up and down \"her\" shaft. She had a look of wonder on her face.\n\n\"So this is what it feel like, huh. It's kinda cool.\"\n\n\"Well it is kinda, but usually there is a nice pleasurable feeling that goes with that motion you're doing.\"\n\n\"Oh, believe me, there is a nice pleasurable feeling going on down there.\"\n\n\"Watching you do that is strangely erotic. Probably more than it should be.\"\n\n\"Come on Loverboy, let's get you comfortable. I want to fuck you so bad\" she said and we left the bathroom. She grabbed the bottle of lubricant on the way.\n\n\"How do want to do this?\" she asked.\n\n\"I don't know, I've never done this before.\"\n\n\"Do you want to be on your knees? I read somewhere that might be the most comfortable for you.\"\n\n\"Oh, you read about it huh? How long have you been planning this?\"\n\n\"Not too long,\" she giggled.\n\n\"Well I think I would prefer to lay on my back...I would like to watch you as your...doing it.\"\n\n\"Oooh that would be perfect. I'd love to see your face as I slide myself into you. Plus I get to play with this.\"\n\nFor emphasis, she grabbed my cock and playfully tugged it. I looked down and it was pointing straight upwards. I don't think I have ever been this hard before. Strangely, I wasn't nervous at all. I guess the level of trust in our relationship made it easy for us to surrender to each other no matter what.\n\nShe began sliding her hands all over my body. Rubbing my legs up and down, moving across my hips and going up my chest, lightly brushing my nipples. I jumped as they seemed extra sensitive tonight. Then back down until she cradled my cock in both her hands and just caressed lightly and slowly. This angel of mine certainly knew how to use her hands.\n\nShe then squirted a decent amount of the lube into her hands and took hold of my straining cock once again. The added lubricant made it even better as her hands moved up and down, soft and hard, slow then quickly. Her hands travelled lower, spreading a generous amount of slick lube all over my smooth balls. I was loving every second of the treatment. She went lower and lower rubbing and spreading the lube everywhere she went until she zoomed in right on my asshole. She was very gentle, just tickling and rubbing.\n\nShe squirted a generous amount of lube directly below my balls. I could feel it running down the crack of my ass. She scooped some up and rubbed it around the opening, She gathered some more and pushed that finger inside, slowly and smoothly. I let out a moan as I felt her enter me and push inside deeper and deeper. Her finger started to move in and out. It felt incredible and my cock throbbed.\n\nShe was so intent on what she was doing that her hand on my cock just remained there motionless. I tried to encourage her by thrusting up into her fist. I didn't realize it, but this just caused her finger to go in further. A surprise for sure, but a very pleasant one.\n\n\"Are you ready to try more?\"\n\n\"Yes, go ahead,\" I grunted and nodded my head.\n\nI could tell she was getting more lube and rustling around. Then I felt her enter again, this time more pressure. Not uncomfortable, but definitely more. Two fingers were slowly working their way inside me. I felt full. Damn, I swear my wife must have the hands of a lumberjack. Then they pushed further inside and she stayed still, allowing my body to get used to the extra intrusion. Slowly I relaxed and the pressure subsided. I just nodded my head and looked at her.\n\nShe smiled sweetly before pulling her fingers out and sliding them back in, working back into that pleasurable rhythm. In and out I could feel her pushing and stretching me. Her hand on my cock was dead clam, so I took over for her and proceeded to stroke my own cock. It wasn't that I was lacking in pleasurable sensations, it was just that the added stimulation made it easier for me to relax and enjoy her fingers working in and out of me.\n\nShe just smiled and said, \"Sorry.\"\n\n\"It's ok\" I said, \"I can take over on this end, you just concentrate on what you're doing.\"\n\n\"You have no idea how sexy this looks,\" she told me.\n\n\"Actually, I have a pretty good idea Babe.\"\n\nShe giggled, realizing that I had been on the other end of this scenario with her receiving me on many occasions. She was slowly becoming a little more assertive in her actions, but always glancing at my face to make sure I was alright. I just moaned my consent to let her know that whatever she was doing was fine. In fact, it was more than fine. While we may have included the occasional finger in my ass during a sensuous blowjob, this was a little more on the risqu\u00e9 side for us and I found I was absolutely loving it. I had read once that over half of the nerve endings in the pelvis were in or around the anus.\n\nThey weren't fucking kidding. My whole lower region felt on fire with lust. I soon found myself fucking back on her fingers.\n\n\"Oh God that is fucking sexy baby.\" She said.\n\n\"More, I'm ready for more.\" Was all I could say.\n\n\"I am so ready to give this to you baby.\"\n\nShe stopped thrusting and slowly pulled her fingers out. I was able to catch my breath and lazily stroke my shaft in front of her. I heard the cap pop on the bottle of lube and looked down to see her spreading a generous amount all over her rubber shaft. Damn if that didn't look sexy as hell to me. Seeing her lewdly stroke her own member back and forth was mesmerizing.\n\nFor a second, I questioned my manhood, but quickly dismissed it when I saw her tits bouncing seductively with the motion of her hand. Yeah, I may be weird as fuck, but I'm not gay as her swaying breasts caused me to stroke myself harder.\n\nMoment of truth. She lowered her strap-on to my ass and began to line it up for penetration. I held my breath. I felt the tip moving around, searching for the opening and spreading lube as it went. Then she got still and applied the tiniest bit of pressure leaning forward. I could feel it stretching and pushing. I tried my best to relax my body, but the more I thought about it the harder it became. Carol place a hand on my stomach and whispered softly to relax.\n\nA little more pressure. I let out a long breath and then I felt the head slide inside me. Carol stilled herself immediately, allowing me to get used to what felt like a gigantic appendage. I recalled being on the giving end of this scenario with Carol and it calmed me enough to be able to relax and accept it.\n\nCarol was being super patient and allowing me to get used to her fuck toy little by little. Soon she pulled out just a little then gently slid back in. She repeated this several times until I could tell she was sliding in a little deeper each time. There was definitely a lot of pressure every time she went a little further, but I was surprised that there wasn't much pain. This allowed me to relax even more and begin to concentrate on the new sensations. Once I was able to relax and just feel her in me, everything changed.\n\nAs my lovely wife started moving in me with more and more sensuous determination, I started to feel incredible pleasure emanating from...everywhere. I don't know how to describe the sensation. I don't know if it was heightened awareness or the mental picture of what we were doing or if it had something to do with her hitting my prostate, but it felt like my entire lower body was on the verge of cumming. It was the most intense feeling that I ever felt, and the intensity kept rising and rising.",
        "Carol was in her own world watching her dildo go in and out of my ass and randomly saying, \"Fuck\" and \"Damn that's sexy\", and \"So fucking hot\". She was also speeding up her pumping inside my ass. Her strokes were quicker but shorter and it was increasing my level of pleasure by the second. I had a death grip on my cock as I stroked myself harder and faster trying to keep up with the intensity of Carol's fucking.\n\nShe was grunting and moving faster as well. I watched her face and it looked like she was getting tired and sweaty from her efforts. She started her crescendo of whimpers that she does when she is ready to cum. She had been fucking me for a while. I had lost track of time, but I was sure she had been fucking me for at least 15-20 minutes.\n\nI had been on the verge of cumming for several minutes. I mean that feeling you get seconds before you cum had been hanging there for at least 5 minutes. The pleasure was insanely good, but insanely frustrating at the same time. It felt soooo good that I didn't want it to end, but also sooo frustrating. I NEEDED to cum. I was desperate.\n\nI tried stroking my cock faster, or harder or slower, nothing seemed to get me over the edge. It got to the point I actually thought I might die from the pleasure. Then it happened. Carol's eyes rolled into the back of her head, she thrust forward really hard and deep and stayed there but I could feel her trying to wiggle her hips against her side of the toy trying to grind her clit against it hard and fast. I saw her shaking and trembling in her own climax and that finally sent me over the edge.\n\nI have used the euphemism, \"I exploded\" to describe my orgasm before, but I was terribly wrong before. This...this was an explosion. It felt like an orgasm that began deep inside my body and literally and figuratively exploded out of me. I had never felt that intensity before.\n\nAnd the cum...my god it would put any porn star to shame. Carol was too busy with her own explosions to notice, but I watched in awe the sheer power and quantity of cum that left my cock. I watched it pump several long jets of pearly white cream high into the air. Normally I can shoot a foot or more, but this blasted high into the air as I watched it arc and land on my face and my chest, above my head. It was everywhere.\n\nI even managed to get a little in my own mouth. That proved to be too funny for Carol and she started laughing. It was a good end to an incredible new experience.\n\nSlowly, she removed her toy from me. It was incredibly sensitive coming out, but once it was I felt very content and satisfied. Carol thankfully had brought out towels for the lubricant and she threw one at me so I could clean myself up. She offered to help me clean off in the shower, but I was completely exhausted.\n\n\"It's ok baby, you can just lay there and drift off to sleep,\" she told me.\n\nI heard her moving around for a minute or two, then felt her crawl into bed with me and put her arms around me as we cuddled and spooned. I could feel her toy wedged in the crack of my ass as she snuggled close. Hmmm, that's what she feels when I do the same to her every morning. With that, we both drifted off to sleep with smiles on our faces.\n\nThe End"
    ],
    "authorname": "nekkid_handyman",
    "tags": [
        "pegging",
        "strap-on",
        "pegging husband",
        "married pegging",
        "romantic getaway",
        "wife pegs husband",
        "vacation",
        "married kink"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/vacation-experimentation"
}