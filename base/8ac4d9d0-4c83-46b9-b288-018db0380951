{
    "title": "Exploring the Bounds of Normal",
    "pages": [
        "I'm trying something a little different this time around. Of course, it's a love story with a happy ending, but it also contains a little magic and some actual science. Each chapter has its own prologue containing factual science type information that I hope helps give the story a unique flavor while helping move things along.\n\nStandard disclaimers apply, etc., etc., etc.\n\nEnjoy and please leave a comment when you're done.\n\n<p align=\"center\">Part 1.</p>\n\nThere're all kinds of crazy things in this world. Just go to Walmart at 2 AM and you'll see plenty, but that's not what I'm talking about. Did you know there is a slug that has a disposable penis? Yeah, it gets rid of it after it mates. There's even a worm that infects male Mayflies and turns them into girls. Now how weird is that? Things like oysters changing sex as they get older and, in some species, when the leader of the pack dies, another changes sex to take charge. That's some freaky stuff, right? Fish, frogs, snakes, butterflies, birds and lobsters, hell, they all do it; earthworms can even be three sexes, male, female, and hermaphrodite at the same time and there's a snake that can get itself pregnant.\n\n<p align=\"center\">* * *</p>\n\nSo, why am I telling you this? Well, I just want you to understand that there are things in this world that we don't really understand and that defy our sense of what is normal, that's all. It's a strange place we live in and, well, for me, it got even stranger in a very real way.\n\nI'm Chris, Christopher Lee Thomas from a small town you've probably never heard of not too far from Austin, Texas; little place called Buda, that's a long 'U' as in you. If you say it wrong, the locals will let you know.\n\nAnyway, my dad runs a distribution center for a large retail chain that I probably shouldn't mention, and my mom teaches third grade. I'm the oldest of three and my twin little sisters, April and Ashley, are both adorable and spoiled rotten, but they're only four, so they should be, right? I was one reason my parents got married twenty some odd years ago, and the girls were, well, a surprise. My childhood was great. I played sports in high school, but not good enough to get a scholarship. Fortunately, I had grades good enough to go pretty much anywhere I wanted, if we could afford it.\n\nNeither of my parents wanted me working in my dad's warehouse, so they had saved as soon as they could, with a couple of academic scholarships and a small loan from my grandparents, school was taking me to the east coast to study biology and genetics. That is one reason I know the stuff I just shared with you.\n\nI was about halfway between Boston and New York, which meant more history and culture and gorgeous old architecture surrounded me than I could stand. My biggest distraction, though, was Matilda Everson, or Mattie. We met the first day of class, different majors but both taking nothing but freshman classes, discovering our schedules to be almost identical. She was tall and full figured, with long straight black hair that hung down to the middle of her back, her eyes were crystal blue, and the contrast was mesmerizing, that big friendly smile nestled under a cute button nose that seemed to be eternally on the verge of losing the battle to keep her tortoise-shell glasses from sliding off her face.\n\nMy mom would have said she could stand to lose a few pounds, but I thought her soft curves complimented her gentle personality perfectly. Mattie had accused me of following her and I had asked if that was such a bad thing and we had both laughed, it just clicked and from that moment on, she and I were pretty much inseparable.\n\nEven though Mattie was local and her mother on the faculty; her parents had insisted that she spend the first year in the dorm to get the full college experience. The dorm was coed but segregated by wings, Mattie on the second floor, east wing, and me on the third floor, west wing; we were effectively around the corner from each other separated by a single flight of stairs. My roommate had lasted three weeks before he disappeared, returning occasionally due to a fight with his boyfriend or to prove he still lived here, I guess. The night he walked in on Mattie and me in my bed, he just smiled, winked, and closed the door.\n\nMattie had been on top of me grinding her pelvis vigorously into mine, pinning me to the bed by my shoulders as I fondled her breasts, as we tried to time our orgasms, I had blushed and she had just smiled at Tony, dropping her head so her hair covered my face. When the door closed, Mattie arched her back and let out a loud moan, I could feel her thighs quake and her body tremble as I shuddered, spilling myself inside her. She laid on top of me, kissing me gently, \"Maybe we can get him to walk in on us more often, that was incredible.\"\n\nI ran my hands up and down her back from her shoulders to her luscious butt, squeezing the fullness and kissing her hard. \"I'd like to take at least some of the credit,\" I gazed into her blue eyes as she raised up nestling herself on my crotch and squeezing me inside her.\n\n\"I did most of the work,\" she smiled at me as my hand once again found her full round breasts.\n\n\"I could make it up to you, if you want,\" I grinned widely, and Mattie lifted herself above me as I slid underneath her wrapping my arms around her legs and began licking her most private parts. I loved the taste of our mingled juices almost as much as the intensity of the orgasm I knew I could give her; it was something she had taught me the first time we had been together.\n\nA few minutes later I could feel her start to tense. I focused all my attention on her bud, sucking, nibbling, and licking, I thrust my tongue inside her, pulled her tight against my mouth and created a vacuum as she squeezed my head with her thighs and erupted into a series of spasms, culminating with a shudder and a gush of warm liquid coursing down my throat.\n\n\"Holy shit, Chris, what did you do? That was amazing. You made me squirt. I've never done that before,\" she laid down and I pulled myself up next to her, resting my head on her shoulder and running my hand up and down her silky thighs and soft stomach as her fingers ran through my hair.\n\n\"So, is little Chris ready again,\" I could hear the desire in her voice as she opened her legs, \"just go easy this time, I'm getting a little sore.\"\n\nI climbed on top of Mattie and slid inside her, filling her once again before we fell into an exhausted sleep.\n\nMidterms came and went, Mattie and I registered for our spring classes, we would have some time apart in the spring, but I didn't expect that to make any difference in the number of nights she spent in my bed.\n\nHalloween was a big deal for her parents, and they always had a huge costume party. I agreed to let Mattie surprise me with my costume. Halloween was on a Saturday, we got to the house just after lunch, Mattie showed me to her room, there were two Elizabethan peasant dresses laid out on the bed, one a little larger than the other, with a few things I didn't recognize and a long red wig, she smiled at me, \"My mom will do your makeup when she gets home, you're going to look awesome, go in there and shower and shave, do your chest and..., never mind, I'll come help you.\" she pointed to a door I guessed led to a bathroom,\" then I'll help you get into your costume,\" I was sure I looked a little lost as Mattie pulled herself close to me,\" you promised I could pick your costume, come on, it will be fun, I promise,\" she kissed me and I turned toward the bathroom, not believing what I was doing but just as unable to stop.\n\nMattie climbed into the shower with me just as I finished washing my hair, directing me to sit in the small bench on the side of the tub. Working quickly and diligently, she started with my face, giving me the closest shave I had ever had, then proceeding to my chest, arms, legs, and, after some thought, even my crotch. When she was done, my entire body, from the nose down, was devoid of hair. I took the razor from her and, trading places, proceeded to shave her crotch to match mine. When I was done, I buried my face there until she begged me to stop.\n\nWe dried off and Mattie handed me what she called a gaff, a small pair of panties that fit very tight and, with a little adjustment, hid my manhood completely. The corset was next and then the stockings, followed by a very poufy peasant blouse, long skirt and, lastly, she laced and tied the satiny bodice for the dress. I stepped into the shoes she brought me, let her put on my wig, then sat, and watched as she put on the matching dress herself.\n\n\"So, how's it going,\" I heard Dr. Everson behind me? I had completely forgotten my American Mythology professor was Mattie's mom. I stood up and spun around and, unfamiliar with the low heels Mattie had given me, fell flat on my ass.\n\n\"Slow down Chris, or should I say Christy? Even short heels will take a little practice. Now stand up and let me see what Mattie did.\"\n\nI climbed to my feet amid the chortles and giggles Mattie and her mom were sharing, wondering if I was ready for something like this. I did a slow spin and Dr. Everson held out her hand,\" well, come on Christy, let's put on the finishing touches and I think you'll be surprised at the result.\"\n\nI took her hand and followed her out into the hallway and into the master bedroom, where she instructed me to sit at a small dressing table. I could see myself in the mirror, but it wasn't really me, the bustier had done a good job if turning my pecs into cleavage and the wig softened my facial features considerably, I even found that with my stuff tucked away, I could cross my legs comfortably above my knees; I smiled and shook my head.\n\nDr. Everson, or Kate as she now insisted I call her, worked on my makeup with the same quick efficiency her daughter had when Mattie shaved my body. When she spun the chair around to the mirror, I gasped audibly; the eyeshadow brought out the green in my hazel eyes; she had plucked and thinned my eyebrows, making my eyes appear even larger than they were and the rouge lifted my cheekbones giving me a very exotic look, the foundation she used gave me a soft glow, the accent of the bright red lipstick was perfect. I stared at the girl in the mirror, feeling an odd stirring in my groin that the gaff quickly denied, \"Holy shit, um, I'm sorry Dr. Ev..., I mean Kate. This is amazing.\"\n\nShe slid the lipstick down the front of my dress between my meager boobs,\" Keep that handy for when you want to freshen up,\" she beamed at me,\" now you two get out of here so I can get ready, too.\"\n\nMattie took my hand,\" So, you ready to go meet my dad,\" that realization hadn't even occurred to me?\n\nShe knocked on the large oak door, \"Come on in Mattie,\" he eyed me from head to toe as we walked across the room to his desk. Mattie had gotten her raven black hair and crystal blue eyes from him, he filled the high back leather chair completely, his hair pulled into a tight braid which fell well below his shoulders, and his large hands resting on the massive desk in front of him.\n\n\"Chris Thomas, Mr. Everson, nice to meet you,\" I put my hand out.\n\n\"So, you're the young man that has been sleeping with my daughter,\" I about fainted, the corset didn't make it easy to catch my breath and his confrontation took any air I had left,\" and you come in here to meet me for the first time dressed like a fifteenth century trollop?\"\n\n\"Daddy, stop it,\" Mattie was trying not to laugh, \"he thinks you're serious, I can tell. You're going to scare him to death.\"\n\nHe smiled at Mattie and then at me as he stood up and shook my hand, \"Nice to meet you Chris, Please call me Henry and sit down before you pass out,\" he laughed,\" not many men would be willing to stand where you are now, especially dressed like that,\" I took the chair he offered, crossing my legs without thinking about it and relaxed just enough to start breathing again.\n\n\" You should know, we don't have secrets in this house, we tell each other pretty much everything. I'm telling you that so you can feel comfortable here, not to intimidate you, if Mattie likes you enough to get you to dress in drag, then you're welcome in this house anytime, my daughter is a good judge of people and if she trusts you, so do I, and you look very nice, by the way. I think you'll have fun tonight, now I need to go get dressed before Kate kills me,\" he smiled and shook my hand again.\"\n\nMattie kissed me,\" I should have warned you, I'm sorry.\"\n\n\"That's ok, I'll think of a way you can make it up to me,\" I looked around the room, it was full of bookshelves filled with books of all genres. I recognized a set that had been one of my favorite fantasy series, full of orcs and goblins and elves and knights and lady's fair. Reaching up, I pulled my favorite from the shelf, reminiscing about how much I had loved it. Mattie's dad stared at me from the back cover.\n\nI couldn't believe I hadn't recognized him,\" your dad is G.H. Everson, the G.H. Everson,\" I almost dropped the book.\n\n\"And a few others, he writes trashy romance novels for fun and historical fiction, too, just under different names,\" she took the book, put it back on the shelf, and slipped her hand into mine,\" now come on and I'll show you around. We wandered through the house, out through the kitchen into the vast backyard where the party would be held, there was food being set up everywhere. I counted four, no five bars being fully stocked and saw a group of minstrels in period dress tuning up amidst the organized chaos that flowed around us.\n\nThere was a DJ setting up by a dancefloor for more traditional music, the minstrels would wander the crowd, entertaining those not dancing. The people not in costume started to disappear leaving only the servers who were all dressed as house servants from some ancient royal house, I guess when you've written nine best sellers and collected a handful of Nebula and Hugo awards, you can go all out for your Halloween party.\n\nHenry and Kate walked out the back of the house, Kate was dressed the same as Mattie and me, Henry had let his long black hair hang loose and was wearing leather armor with a huge sword across his back and a sigil of two dragons on his chest, I grabbed Mattie's arm,\" Mattie, just how serious do people take this costume thing?\"\n\n\"Why, what do you mean?\"\n\n\"Well, your dad is obviously 'Oric the Slayer' which makes you, your mom and me, the 'Sisters of Oderon', since you have black hair, you are 'Virella,' or strength, your mom is blonde, so she's 'Sapara,' or wisdom, and, me,\" I checked my wig just to be sure, \"I'm the redhead, which means I am 'Luciara,' or lust, basically the biggest slut in all the five kingdoms of Ascalia.\"\n\nMillie started laughing as her parents walked up, \"Dad, he's read all your books, he knows who we are,\" she kissed me on the cheek,\" and he's freaking out a little about his costume. Chris, it's just a costume, really it is.\"\n\n\"But if you do decide to roll play a little, just try to be discreet,\" 'Oric the Slayer,' added with a big laugh.\n\n\"Dad, you are NOT helping.\" Mattie squeezed my hand.\n\n<p align=\"center\">Part 2.</p>\n\nJohn Locke was an English philosopher back in the seventeenth century, he wrote a bunch of stuff about the limited powers of government and separation of church and state, ideas that were used in our constitution, he also had this thing called the 'Causal Theory of Perception' that kind of said that we can never really see things as they truly are because we carry all this baggage that skews our vision; as we grow, we learn things from experience and from the people around us and from our family and parents that teach us to see things in a way that may, or may not be, how they really are; things like a man in a dress is not quite right or my girlfriends' dad knowing I made her cum so hard she squirted in my mouth is just fine and dandy.\n\n<p align=\"center\">* * *</p>\n\nSo how does this relate to me being at my girlfriend's house dressed in drag, as a huge slut from one of my favorite fantasy novels, no less, and what does that have to do with hermaphroditic worms? Kind of weird, I know, but just hang with me and we'll get there.\n\nGuests started to arrive and Kate handed me two bags that fit around my waist on a small rope tie, everyone at the party would have them, one bag was full of tokens identifying the holder and the other empty, the game for the night was to guess as many costumes as you could, if you guessed correctly, the other person gave you a token, whoever had the most tokens at the end of the night, won a prize.\n\nTo be fair, I had to let people know that my costume depended on Mattie and her parents, to be totally unfair, most of the costumes I was seeing were from books I had read, many more than once, or were from games I had or still played; it was going to be like catching fish in a barrel.\n\nAt seven o'clock, 'Oric the Slayer' declared the game officially open. All the obvious costumes were quickly out of tokens, which I had to admit was a pretty good plan if you just wanted to enjoy the party. I managed to balance my time between spending time with Mattie, accepting dance requests from the guys that hadn't figured out I was in drag and probably a few from those who had, and finding tokens I hadn't collected.\n\nI learned that I could not only walk in the heels that went with my costume, but I could also dance in them too, even doing spins and twirls with a few of the taller men at the party. I liked the way the dress flowed around me, there was something nice about the way it made me feel, I couldn't put my finger on it, but I decided I liked it.\n\nI found Mattie at one of the bars, \"Mattie, I think I have a problem,\" I pointed to a tall handsome man dressed as D'Artagnan making his way through the crowd toward her and me,\" Mattie, he's asked me to dance six times, what do I do? I think he wants more than just a dance.\"\n\n\"Chris, you're obviously thinking about it, or you wouldn't be asking me, right? I think you should go for it and see what happens, just as long as you remember you are staying here with me tonight, right up there in my room, got it,\" she kissed me and grabbed her drink, heading off into the crowd?\n\n\"Shit, shit, shit,\" I thought to myself.\n\n\"There you are, can I get another dance?\"\n\n\"Listen, you know I'm a guy in drag, right,\" I smiled hoping he would lose interest.\n\n\"And I'm guessing you never thought D'Artagnan could be gay, right?\"\n\n\"Um, but I'm not,\" I smiled weakly, the minstrels wandered by singing a sappy love ballad\" but, what the hell, it's just a dance, right?\" I took his hand and let him lead me through the crowd.\n\nWe danced until the DJ took a break, he taught me even more elaborate spins and twirls and I found I could do them with ease, as the last song ended, he spun me out and back in, catching me in his arms, for lack of a better term, I swooned, and he kissed me. I caught myself with my eyes closed and my arms wrapped around his neck before I jerked back to consciousness and pushed him away.\n\n\"I'm sorry, I can't, I have a girlfriend.\"\n\nHe took my hand and led me from the dancefloor,\" let's just go talk then, ok?\" We found ourselves in a small garden on a bench, \"so this girlfriend, is she here tonight?\"\n\n\"Yeah, it's her parents' house. I'm living with Mattie.\"\n\n\"And you've never done anything like that before, I'm guessing? That was some kiss, by the way.\"\n\nI didn't know whether to say thank you or to just run away; I just sat there, trying not to look him in the eyes. I didn't even know his name.\" You know, you'd have to duel my father for my honor if this were really D'Artagnan's time.\"\n\n\"And I'd gladly do just that,\" he jumped up and drew his foil, making a huge 'X' in the air, we both laughed. He sheathed his sword and sat down next to me, putting his hand on mine. \"So, be honest, have you ever thought about another guy like that, I mean, like when we kissed?\"",
        "\"Not until then, no, never, but like you said, that was some kiss.\" I looked at the grass by my feet.\n\n\"Would you like to try again?\" He put his hand on my shoulder and moved it slowly behind my neck.\n\nI looked up and he was already leaning in. I met his lips with mine and closed my eyes.\n\nWe kissed softly at first and then more and more passionately, his hand sliding down my side and across my chest, caressing my breasts. Time slowed to a crawl and before I knew it, his hand had found its way under my dress. He had freed me from my gaff and was stroking me slowly.\n\n\"I'd like to make you feel good,\" his lips pulled from mine as he got to his knees, disappearing under my dress; my head swimming in the moment, I couldn't answer. His lips wrapped around my cock. A few moments later, shudders of ecstasy ripped through my body, and we were kissing again.\n\nI was so lost in the moment I wasn't sure where I was and I couldn't tell you why I did what I did next because I didn't know myself, but my hand found its way down his chest to his crotch, his erection was huge and hard.\n\n\"You say you've never,' he paused as I wrapped my fingers around him,\" you don't have to do this,\" he added weakly.\n\nI didn't stop.\n\n\"Are you sure?\" I just nodded, thinking about what Mattie had told me about going for it.\n\nHe undid his pants freeing his member, I licked my lips as I dropped to my knees in front of him, reaching out and gently caressing it with my fingers. I had touched myself so many times, but this was different, I could feel my own urges fighting against the gaff and losing as I leaned down and kissed the tip of his cock, sliding it gently into my mouth trying to emulate what Mattie had done for me so many times since we met.\n\nI couldn't get him all the way in my throat so I concentrated on what I could, using my hands to stroke and fondle the rest, occasionally taking his balls in my hand and squeezing lightly then sliding him out of my mouth and doing the same with my lips, taking each one in my mouth and sucking lightly and then both before I moved back up his shaft and trying once more to get him as deep in my throat as I could.\n\nThe tension started to build, and I could feel him trying to hang on just a bit longer. I moved my lips up and down his shaft faster and faster, it was happening, and I knew it and I didn't care; I wanted it, I wanted to taste him, I wanted him to cum in my mouth.\n\nHe tried to pull away, but I thrust him even deeper into my throat, breaking past my gag reflex and feeling his balls against my chin as he began to tremble and shudder, I held him there for a second before I slid his softening heat from my mouth just in time to capture the last drops of his cum on my tongue. Relishing the bittersweet flavor, I dropped back on my heels and smiled at him,\" I think I need to go freshen my lipstick.\"\n\nHe helped me to my feet and kissed me sweetly one more time,\" thank you, that was, well, I can't believe it was your first time, I'll go this way, so nobody sees us leave the garden together, ok?\"\n\n\"Thank you, it was special for me, too,\" I reached up and put my hand on his cheek, leaving it there as he turned to walk away. I smiled as I found my way into the house and found the bathroom to redo my lipstick, discovering I really needed to pee. Peeing turned out to be the more interesting of the two activities.\n\nI got the gaff back in place with everything else where it needed to be, adjusting my dress, and headed back to the party, trying to figure out how to tell Mattie about what I had done.\n\nI stopped at the back door and looked over the party, looking for Mattie, finding her off to one side, standing next to a tall, very handsome man with a big feather in his cap. She kissed him on the cheek and hugged him before he bowed and swept the ground with his cap; D'Artagnan, the man who had just cum in my mouth, was good friends with Mattie. they had set me up. I took as deep a breath as the corset would allow and opened the door.\n\nThere was an arbor with a swing at the far side of the yard from Mattie, not too far from one of the bars, I decided she could come find me as she obviously already knew what she wanted to know and would be dying for confirmation.\n\nThe red wine was the perfect complement for the faint taste my dance partner had left in my mouth, I sat admiring the bright red lip prints I had left on the glass waiting for Mattie to find me and wondering what I was going to say to her. I thought about the old maps that had flourished lettering along the edges, 'and here there be dragons,' I laughed to myself as Mattie emerged from the crowd and ran to join me.\n\n\"So, can you at least tell me what his name is?\" I asked as she sat down.\n\n\"Michael, Michael Peters, he's a family friend and very taken with you, I might add. He wanted to know how serious we were.\"\n\n\"And?\" I left it hanging.\n\n\"I told him that any man that would dress up as the biggest slut in all the five kingdoms just to make me happy was one I definitely wanted to keep,\" she smiled at me and kissed me on the cheek.\n\n\"Even if he may have gotten too much into character?\"\n\n\"Chris, it's no big deal. I saw him kiss you, and I saw you push him away.\"\n\nHer dad's word echoed in my heart, 'no secrets here,' \"but you didn't see us go to the small garden, you didn't see us kiss there or what happened after.\" I took another sip of my wine.\n\n\"No, but...., Chris what happened?\"\n\n\"Mattie, he came in my mouth,\" I paused, \"and I liked it.\"\n\n\"Oh,\" was all she said. Mattie put her hand on mine, and we sat in silence for a long time. \"I did tell you to see where it went. I just didn't think it would ever go there,\" she finally said.\n\n\"Me either.\" I looked at her feet. \"I don't even know why I did it, Mattie, it just seemed like the right thing to do at the time and once I started, I realized I liked it, the way he tasted, the way he responded to what I did, the way he touched me when it felt good, and even how he reacted when it probably didn't; when he came, it made me happy. I felt like I had done something good, it just felt right, like it felt when I made you squirt. I don't know what else to say.\"\n\nShe squeezed my hand,\" you could promise to make me feel the same way when we get upstairs in a little while.\"\n\n\"Deal.\" I leaned over and kissed her.\n\n\"Now come on, we need to go turn in our tokens so they can count them, I think I got almost everybody this time. My dad almost always wins, so he disqualified himself this year, maybe I have a chance.\"\n\nAs we passed through the crowd, I picked up a few more tokens from people I had not seen before and Mattie, gave me a fake frown,\" OK, so maybe I may not win, I had no idea who those people were.\"\n\nMy prize was an incredibly ornate, hand-carved puzzle box about the size of a pound of butter that Henry had picked up in Boston from a small antique shop in some small neighborhood. There was something inside it, but I had to open the box to find out what it was; Henry didn't know. The owner of the shop hadn't known, and neither had the man that sold it to the shop owner's father some fifty years ago. Nobody had been able to open the puzzle box. I liked the woodworking and figured if I ever got it open, that would be a bonus.\n\nA more immediate bonus waited for me when the party ended and that was the one I wanted to focus on. I did run into Mike one more time as I joined Mattie and her parent's saying goodbye to everyone. With Mattie's permission, I kissed him one more time and gave him my number and suggested we talk, if he was interested. Kate and Henry would have to wait until breakfast to find out the details of what had happened in their small garden.\n\nMattie and I lay together basking in the afterglow of a marathon session filled with passion and tenderness and raw lust; I had gone down on her, and she had sucked me dry. We had screwed and fucked and every other tawdry verb you could call it until we were too exhausted to continue and had done it again. \"I really had a good time tonight, Mattie. Thank you for everything. The corset took some getting used to, but it was nice and fun, and I liked it, all of it. I really think I'd do it all again.\"\n\n\"Even Mike?\"\n\nI thought for a few minutes,\" to be honest, yes, even Mike. \"\n\n\"Just do me a favor and try not to make a habit of it, ok?\" Mattie nestled close to me.\n\n\"Deal.\" I pulled her soft body tight against mine and drifted off to sleep.\n\nI don't know if it was the flash of the lightning or the clap of the thunder that woke me up, but it was the thought of what I had done with Mike that kept me awake, I climbed out of bed and stood by the window watching it storm for a while. Deciding I was hungry, I grabbed Mattie's nightgown from the floor and slipped it on, heading for the kitchen to see if there was anything in the fridge I could snack on.\n\n\"Nice look,\" I heard Kate's voice behind me as I stood in front of the refrigerator trying to find something that spoke to my stomach.\n\n\"It was handy, and It's Mattie's, I kind of like feeling like she's with me,\" I closed the door and turned to face her.\n\n\"Storms wake you up?\" she moved to a cabinet and pulled out the stuff to make some tea.\n\n\"Yeah, but that's not why I can't go back to sleep, I usually sleep really well in weather like this.\"\n\n\"Chamomile, it helps you relax and is good to talk over, you want a cup?\"\n\n\"That would be nice, thanks, I wasn't really hungry anyway.\"\n\n\"Does Mattie know?\" she asked as she poured hot water over the tea bags,\" about the small garden, have you told her?\"\n\n\"Yes, I told her right after it happened, but how did you know?\"\n\n\"Simple, I saw you and Mike heading that way, I know Mike, so I followed you,\" she handed me the cup of tea,\" so what did Mattie say?\"\n\n\"She asked me not to make a habit of it and then did everything to convince me I wanted her more, which I do it's just, I can't stop thinking about it.\"\n\n\"I'm guessing you liked it more than you thought you would, that's why you can't stop thinking about it. Trying to figure it out is keeping you awake, am I close?\"\n\nI nodded, \"It doesn't bother you that you caught your daughter's boyfriend with someone else, a guy no less?\"\n\n\"It would if you were trying to hide it from her and besides, my job isn't to live my daughter's life for her. My job is to help her grow into a woman she will be proud to be. I don't think giving up on someone for discovering a previously unknown sexual orientation sounds like Mattie, do you, and besides, being bisexual is not such a bad thing if you really think about it, now, is it?\"\n\n\"No, I guess not, but I don't want to hurt Mattie.\"\n\n\"Then don't, sexual orientation isn't a choice but how you treat others is,\" Kate finished her tea, rinsed the cup and set it on the counter next to the sink,\" you looked very pretty last night, by the way. I think if that's something else you want to explore, Mattie would probably be open to that, too, just talk to her, Christy, \"she smiled at me as she turned and walked out of the kitchen, leaving me to my thoughts.\n\nMattie ran her hand up my back as I sat on the edge of the bed.\" You ok?\" her voice floated on the air like the soft scent of a newly blossomed flower.\n\n\"Just couldn't sleep, went downstairs to get a snack. I had a nice talk with your mom. She's an amazing lady,\" I laughed to myself, trying to imagine my own mom's reaction to the things I had discussed with Kate.\n\n\"I see you stole my nightgown, comfy?\" I heard her quiet laugh.\n\n\"Actually, it is, kind of relaxing, too. I didn't want to wander around naked, and it was convenient. Besides, I wanted to feel close to you.\" Mattie wrapped her arms around me as she pulled me back into the bed.\n\n\"Then it's fine with me,\" Mattie held me close, running her fingers over the satin and lace of the gown as I drifted off to sleep.\n\nI could hear Mattie rummaging in her closet as the smell of bacon and coffee wafted through the air. Slipping out of bed, I ran my hands across my body, enjoying the feel of the satin against my skin. \"Whacha doin?\" I slipped my arms around her waist and kissed her on the cheek.\n\nShe turned in my arms and slid her hands behind my neck, pulling me close and kissing me deeply, \"Trying to find you something to wear today, if you're interested,\" her smile had always made me catch my breath.\n\n\"What did you have in mind?\" Last night flashed through my mind, how I felt in my costume, the way the dress had flowed around me, the feeling of the long hair of the wig as it caressed my shoulders and got stuck in my lipstick; I knew what I wanted her answer to be. I wasn't disappointed.\n\nWith a little trial and error, we found we were close enough to the same size that some things would work while others, not so much. I could wear one of her lace-trimmed bralettes that had built-in padding that gave me the look of small but noticeable breasts. Her panties were a little tight and while they were more comfortable than the gaff, they served the same purpose and the lace trim felt nice as it tickled my butt. Settling on a simple floral blouse and a full skirt that fell just above my knees, Mattie helped me with my wig, and we went downstairs for breakfast.\n\nKate smiled and winked; Henry did a double take, but neither said anything as we ate. Mattie nudged me with her elbow. \"Um, Kate, could you help me with the makeup thing after breakfast?\" I asked weakly, trying not to let my embarrassment show too much, \"maybe teach me how to do it myself?\"\n\nKate, Mattie, and I spent the entire afternoon playing dress up, by the time Mattie and I headed back to our dorm, I had a small wardrobe all my own, could do my own makeup, including nails, and was more confused about who I was than I could ever remember while being incredibly happy at the same time.\n\nIt took us a few weeks to find a good balance between Chris and Christy, with Mattie teasing me that she sometimes liked Christy better.\n\nI readily admitted that I did, too.\n\nBy the time we went back to Mattie's parents for Thanksgiving, Christy was enough of my life that I felt comfortable spending the entire break as her. The last few weeks of the semester, with Mattie helping me keep my body free from hair, Christy started to venture out. I even took a couple of my finals as her, one was a huge survey Biology class, the other Dr. Everson's American Mythology, I'm not sure but I think I got bonus points.\n\nWith Finals over, Mattie and I moved out of the dorm and found a small one-bedroom apartment about halfway between the University and her parents' house, the selling point had been an oversized tub and shower and a closet large enough for all our clothes, Mattie's, mine, and Christy's. There was also a living room that would be for studying, a nice big kitchen, Mattie had promised me she was a good cook and wanted to prove it, and a large common area for hanging out and entertaining.\n\nOur Christmas gift from Mattie's mom and dad was furnishing our new apartment, we spent the first week of break getting settled and christening every room, finding innovative ways to have sex on as many pieces of our new furniture as we could. The weekend before Christmas, we spent with her parents and exchanged personal gifts, Henry gave me a full set of signed first editions of his 'Oric of Ascalia' saga and Kate gave Christy a gift certificate for a full makeover at her spa, she and Mattie would be joining me. I gave Mattie a small gold necklace with a heart pendant, and she gave me a surprise I will never forget, we were cleaning up from opening our gifts when the doorbell rang, Mattie looked at her mom and smiled, \"Christy, can you get that please?\" Kate asked.\n\nI opened the door and Mike was standing there with a single red rose, \"Merry Christmas Christy,\" he smiled at me. I was speechless.\n\nMattie walked up behind me, slipped her arms around my waist hugging me tightly, \"You two can use the guest room at the end of the hall, Mike knows which one, I talked to my mom and dad, and they say it's ok with them if it's ok with me.\"\n\nI turned in her grasp, still not sure what was going on,\" Mattie, what are you talking about?\"\n\n\"I'm talking about you and Mike finishing what you started in the small garden at the Halloween party, I'm talking about you finding out how far it goes, I'm talking about me trusting you because,\" she paused and smiled at me,\" I love you and I want you to be happy.\"\n\nI was surprised that she had said it, I kissed Mattie and pulled her as close as I could, \"I love you, too,\" gazing deep into the crystal blue eyes,\" but Mattie, this, this is\" she put her finger to my lips.\n\n\"This is something you have wanted since Halloween, we talked about it remember, now go have fun and I'll see you in the morning,\" she turned to walk away,\" who knows, I may even sneak in and watch.\"\n\nToo confused to complain, I just followed like a little lost puppy when Mike took my hand and led me upstairs. I looked back at Mattie, she smiled at me and blew me a kiss. What other surprises did this amazing raven-haired beauty I had fallen for have in store for me?\n\nKissing Mike was as intoxicating as I remembered it to be, he undressed me slowly, softly touching each new part of my body he exposed, using his fingers and then his lips to bring sensations I had never felt before to the surface.\n\nOnly when I was completely naked did he lead me to the bed, laying me on the soft pillows, letting me watch as he slowly undressed himself.\n\nI never thought I could feel the kind of energy, the kind of excitement I felt as he uncovered his magnificent body; toned and fit but not overly muscled, he was also shaved clean. When he laid next to me, my hands started exploring as if they had minds of their own, sliding slowly, gently, cautiously over his chest and stomach ultimately reaching his crotch, my mouth watered as I ran my hand over the soft smooth skin of his erection, remembering how he had felt in my mouth and wanting that same feeling again.\n\n\"I've been thinking about this ever since that night,\" Mike whispered in my ear as he began to nibble his way down my neck,\" When Mattie called me, I couldn't believe what she was saying, it was too good to be true, \"he stopped and looked at me, \"Christy, or Chris, are you sure you want to do this?\"\n\n\"Yes, maybe, hell, Mike I don't know,\" I slid my hand back up his stomach and across his chest,\" I know I love Mattie and I will never leave her,\" I looked into his big brown eyes,\" I also know I'm about to explode just from being here next to you like this.\"\n\nMike smiled at me as he slid down my body,\" that I can help you with,\" he took me in his mouth and began to do things with his lips and tongue that defied explanation, my body shuddered and trembled as I erupted into his mouth.\n\n\"Can you teach me?\" I asked softly as he kissed my manhood and began to slide up my body, smiling as he lowered his lips to mine, kissing me, thrusting his tongue deep into my mouth and sharing his prize with me. I recognized the taste of my own cum and pulled his mouth hard against my own, returning his passionate kisses and moaning loudly as we slowly pulled apart.\n\nMike was patient and gentle as he taught me to please him. I found it even more enjoyable than before. With a little practice, it became easy to slide him deep into my throat.\n\nTaking my time focusing on what he asked me to do, sliding him in and out of my mouth, fondling and then sucking on his balls, enjoying the feeling of his growing tension,\" I haven't been with anyone since that night,\" he moaned, trying not to cum, just yet. I knew what he meant, I slid my lips to the edge of his glans and used my hand to finish the job, catching his delicious gift in my mouth and relishing the taste.\n\nWhen he was spent, and as he had with me, I shared the treasure with him, kissing him passionately before I laid my head on his chest and wrapped my arm around him.",
        "We spent the next few hours kissing and fondling each other, exploring my boundaries, and discovering my willingness to be an eager recipient of Mike's dominance, it had been uncomfortable at first, but he took his time moving slowly until the comfort turned to pleasure.\n\nMoaning loudly, I noticed Mattie hiding in the shadows touching herself, I reached out my hand to her, motioning for her to come closer, she stopped at the edge of the bed, taking my hand, \"Please,\" I moaned again, and she dropped her panties, climbing on top of me, lowering herself over my face, I wrapped my arms around her legs and buried myself in the familiar taste of her sex.\n\nIt didn't take long for Mattie to start to moan, I could feel my own excitement growing as Mike thrust deep inside me and Mattie began to breathe in the short quick breaths I had come to recognize as the harbinger of her pleasure. It was indescribable, Mike thrusting as far inside me as he could go, shuddering violently as he filled me with his seed, Mattie's soft cry as her body shuddered above me, filling my throat once again with her warn juices as I covered my stomach with my own sticky nectar. Luciara would have been proud. We collapsed in an exhausted heap, Mattie kissing me deeply as Mike licked the mess from my stomach.\n\nWe climbed under the covers together in silence, I wrapped Mattie in my arms as Mike pulled himself close behind me resting his hand on my shoulder. I woke up the next morning on my back with Mattie on one shoulder and Mike on the other, Mattie's hand on my chest over my heart and Mike's holding my cock. I laughed to myself at the symbolism as I lay there listening to them sleep.\n\nMattie woke up first, \"Well, this isn't exactly what I had in mind, but I'm glad you had a good time,\" she smiled at me as she moved her hair out of her face.\n\nI kissed her sweetly. \"You are the most amazing woman in the world. What did I ever do to deserve you?\" She just smiled at me.\n\nMike gave me a gentle squeeze, letting me know he was awake. I turned and kissed him, too.\n\n\"Thank you for last night, for being so patient with me.\" It was so easy to fall into those big brown eyes.\n\n\"So, how does this work?\" Mike smiled at Mattie and then at me.\n\n\"I guess for now, we take turns. I'll even let you go first,\" Mattie laughed, and I turned my attention to Mike and his glorious morning wood.\n\nWhen he was spent, I took my time making sure Mattie understood she was the most important person in the equation, as her orgasm faded, I traced a path from her lips to her neck, stopping at her breasts and then down across her stomach; finding her moistness, I began working on her second orgasm. Mike took me from behind and once again, the three of us came together, laughing and collapsing in a sweaty mess.\n\nMike decided not to stay for breakfast. I kissed him, thanking him for taking such good care of me. \"Anytime, he smiled and winked.\"\n\n\"I'd like that,\" I said it before I thought about it.\n\nMattie smiled and slid her hand into mine. \"I think we can arrange something,\" she pulled me toward the kitchen.\n\n\"You're really ok with me and Mike like that?\"\n\n\"As long as I know you still want me, I think I can handle it.\" She got quiet for a minute. \"Did it hurt?\"\n\n\"It was a little uncomfortable at first, but then it felt really good. I mean, he made me cum, twice. Why?\"\n\n\"It's just I can't do what he did for you, and I want you to be happy. So, if I have to share you with him now and then, I guess I can, especially if I get to join in sometimes,\" she smiled a huge smile, \"that was amazing.\"\n\nThe flight to Austin was uneventful, Mattie and I discussed how much of what we were going to share on this trip, wondering just how much of their son's new life my parents were going to be able to handle, there was so much they didn't know.\n\nMy mom and the twins were waiting for us at the baggage claim. April ran up to Mattie before anyone could stop her. \"Are you going to be my aunt? My friend Claire has an aunt, and she buys her ice cream. I like ice cream.\"\n\nMattie laughed and picked April up, giving her a big hug, \"Probably not your aunt but maybe something even better, but I'm not sure just yet, tell you what, you ask your mom if it's ok and you can call me Aunt Mattie and then I can buy you and your sister ice cream, even if it's not official how does that sound?\"\n\n\"Yeah, ice cream, Ashley did you hear, we get ice cream!\" April wiggled out of Mattie's arms and ran to her sister.\n\nMy mom laughed and I introduced her to Mattie,\" High Mattie, please call me Sarah, and you know they'll be pestering you for ice cream all the way to the house, you may be in for more than you bargained for.\"\n\n\"I think I can handle it, so how do you tell them apart, anyway, there has to be a trick?\"\n\n\"Well, April is the shy one that just conned you into ice cream. Ashley is a little more subdued, but to be honest, I get them confused sometimes, too. I usually just go with girls when I need to get their attention.\"\n\nAshley walked up and took Mattie's hand. \"Aunt Mattie, are we really going to get ice cream?\"\n\n\"If it's ok with your mom, I think that would be fun.\"\n\nI grabbed our bags while my mom and Mattie chatted. Mattie had one twin on each side, holding her hands, singing a made-up song about ice cream as they walked out to the pickup area. I just smiled and watched as the raven-haired girl took over another piece of my life.\n\nThe twins got their ice cream and my parents fell in love with Mattie as quickly as I had.\n\nAfter dinner and after Aunt Mattie tucked the girls in, I decided to just go for it, at its worst, Mattie and I could catch a flight back to Connecticut the next morning, at its best, my parents would be fine with what I had to share. We sat at the kitchen table, and I told them about moving out of the dorm and the apartment Mattie and I would be sharing.\n\nWhen I explained that it would be cheaper and less trouble than Mattie sneaking into my dorm room every night, my dad agreed.\n\nNext was the biggie. I pulled out my laptop and brought up a select group of pictures of the Halloween party, showing them our costumes. My dad recognized us immediately. He had been the one to introduce me to the kingdoms of Ascalia. I told him who Mattie's father was, and I thought he was going to have a cow.\n\nIt was my mom who made the connection.\" Chris, you look very pretty in that costume,\" she continued to scroll through the pictures of the party. \"Most guys would look uncomfortable dressed like that, with the makeup and everything. I mean, it looks like you're wearing a corset. Is there something you and Mattie are trying to tell us?\"\n\n\"Um yeah mom, there is, please try to understand,\" I shot nervous glances at both my parents.\n\n\"Maybe if you just showed them the rest of pictures, Chris,\" Mattie put her hand on my arm. I clicked on another folder and started to scroll through the pictures of Christy. My dad looked confused. My mom thought for a minute or two and started commenting on how cute that outfit was and how much she liked that pair of shoes.\n\n\"So, you dress like that all the time now?\" my dad finally asked.\n\n\"Not all the time, but I enjoy it, it just feels right. I don't understand it, but it calms me down when I get stressed, and I enjoy being pretty.\"\n\n\"And Mattie, you're ok with this?\"\n\n\"I kind of talked him into it,\" she smiled sheepishly. \"I saw how much fun he had at the party, and I thought he might like to dress up some more, so, it's sort of my fault.\"\n\n\"Sarah, what do you think,\" my dad let out a heavy sigh,\" the girls are too young to understand.\"\n\n\"Pete, the girls have already seen it, there was a man at the mall last week, in the food court, Ashley told him he looked pretty in his dress. I've never seen someone smile as big as he did. I think it will be ok. But Chris if the girls know, everybody will know, you understand that, right?\"\n\n\"So, you guys are ok with this, Mattie and me living together and me dressing?\" my stomach was in my throat.\n\n\"Chris, your mom and I love you more than anything and we could try to keep you two apart and try to make you stop dressing, but what would that do besides tear us apart. I got your grades the other day and none of this seems to be impacting your school and I look at you two and I see your mom and me, so yes, I'm ok with it. It will take some getting used to, but I'm ok with it.\"\n\nMy parents turned out to be a lot more laid back than I had given them credit for. As we were getting ready for bed, my mom stopped by my room, \"Chris, this is a lot and your dad and I are behind you, but do me a favor, that one picture from the party, the one of you kissing that boy, I'd not show that to your dad just yet,\" she kissed me on the cheek and said goodnight.\n\nMattie and I stayed in that apartment for three years. Christy had slowly taken over about sixty percent of my life with Mattie's approval.\n\nHenry and I had become very close, with his encouragement, I had even switched my major to English with an emphasis on creative writing when a short story assignment had taken on a life of its own and gone from a simple love story to a sweeping 70,000-word romantic adventure novel, his publisher had even picked it up and scheduled it for release just after the first of the year. If it did well, they would want possibly two more for starters.\n\nI got to be with Mike about twice a month, which was perfect. Mattie even joined us from time to time.\n\nHenry sent my dad his own set of signed first editions and mom and Kate became good friends.\n\nAnd so, here I am, a twenty-one-year-old bisexual, cross-dressing college senior with a book deal, a hunky part-time boyfriend a super-hot full-time girlfriend with an amazing sex drive and rich parents, what's left to tell?\n\nWe are just getting started.\n\n<p align=\"center\">Part 3.</p>\n\nDid you know that scientist have found particles that prove the universe exists in as many as thirteen dimensions, maybe more? Think about that for a minute. We know of and can kind of explain three, maybe four dimensions; and there are thirteen of them. Wow, it makes my brain hurt when I think about it.\n\nRobert Heinlein, another Hugo award-winning author, probably more famous than Mattie's dad, even wrote a book called 'The Number of the Beast' about the concept; people slipping between dimensions, some so like others, it was difficult to tell them apart, except for very subtle details. I tried to read it, but when they ended up in Alice's Wonderland, I had to quit. It does possibly give a little credibility to things like, say, magic, that have permeated our history for as long as we've had a history, all kinds of totally inexplicable things that defy what we 'know' about the small number of dimensions we think we understand.\n\n<p align=\"center\">* * *</p>\n\n\"Chris, hurry or we're going to be late, and I don't want to miss the game,\" Mattie was talking about the costume guessing game at her parents' Halloween party. I was feverously putting the finishing touches on a short story that was due the next day before I got into my costume. Mattie had everything laid out. She was going as Mata Hari and I was going as a belly dancer.\n\nSome might have considered it cheating because the assumption would be that our costumes were a set, but Henry had already told me I was not eligible because of my previous victories, so we figured the point was mute; I still needed to do my hair and makeup to match Mattie's, so I had plenty to do.\n\nRetyping the last line for the fifth time, I saved the story and hit print. My creative writing professor was old-school and demanded all submissions be on paper. As the printer went to work, I got up and got ready.\n\nMy hair was now past my shoulders and with the help of a little chemistry and the stylist Mattie and I went to, had subtle reddish highlights, my nails were already done in a lovely shade of almost purplish pink that matched Mattie's, with her help, I was quickly ready to go.\n\nLooking in the mirror, it still surprised me how good Christy looked. Mattie had gotten me some self-adhesive breast forms for my birthday, and they finished out the costume perfectly.\n\nAs we were leaving, I heard the printer start to glitch and went to shut it off, so I didn't have to pick a full ream of paper up off the floor when we got home. I pulled my short story out from the bottom of the pile and set it on my laptop and that's when I saw it, a single piece of paper had hit the puzzle box perfectly and had wedged itself in a small crease in the box, I looked closely and could see the white of the paper through a small pin hole in the side of the box, \"Mattie, do we have a needle?\"\n\n\"Sewing kit in the bathroom, and whatever you're doing please hurry.\"\n\nIt took three tries, but the needle slid into the hole, and I heard a soft click, adjusting one slide this way, another that way, rotating a third and the box popped open. Inside was a simple gold ring, neither feminine nor masculine but very beautiful in its simplicity, with some type of engraving around the inside of the ring.\n\nI looked at it closely and couldn't make out the characters or what it said. Deciding I wanted to show it to Henry and Kate, I slipped it on my finger. It fit perfectly; I felt a strange sense of satisfaction flow through my body as I turned to meet Mattie at the car. It felt like some cosmic force had righted some great injustice. I couldn't tell for sure, but I thought for a second the ring was glowing, and I could have sworn the engraving had been inside the ring.\n\nThe party was epic as always, and at the end of the night, Mattie had finally won. Her prize was a beautiful painting of a scantily clad, very full-figured woman, reclining on a sofa, a flea market find Henry had picked up in upstate New York while doing a book signing for his latest novel. I showed the ring to Kate and Henry. Kate sketched the runes from the ring, telling me she had a friend at the university that specialized in ancient languages and perhaps he could give some insight into what they meant.\n\nMattie and I were both graduating a semester early with me going to New York right after Thanksgiving to review the cover art and make final decisions for my book and Mattie going to San Francisco to interview with the Museum of Modern art for an assistant curator position, it would be the job of a lifetime for her and the first time since we had met that we would be apart.\n\nI could feel the tension growing, but could never put my finger on it. Little things, glances, and benign comments that weren't. By the time Thanksgiving dinner was over, it had reached the tipping point and right there at the table, in front of her parents Mattie exploded, accusing me of not loving her anymore, ranting about how Christy had taken over and that I spent too much time with Mike and that I wanted him more than her.\n\nBeing totally unprepared, I launched into defense mode, reminding her that it had all been her idea, that none of it would have ever happened if not for her putting me up to it. Henry and Kate tried to interject, but neither Mattie nor I would hear them.\n\nIt went on for a good thirty minutes before Mattie stormed out, locking herself in her room and refusing to let me in, \"Just go away,\" I could hear her breaking down behind the door, wanting so badly to wrap her in my arms, \"I hate you, Christy, I hate you,\" was the last thing she said to me. I collapsed at her door, crying at the pain in my heart those words had wrought.\n\n\"Come on Chris, she's just scared,\" Henry helped me to my feet, leading me down the hall to the guest room I had shared with Mike that night so long ago, \"you guys have been together almost 24/7 for a long time and tomorrow, you're going to be 3,000 miles apart, but it's going to be ok,\" he tucked me into the big bed, \"you'll see, everything is going to work out.\"\n\nI knew he was right but cried myself to sleep, anyway.\n\nI dreamed about Mattie and about Mike and about my mom and dad and the twins and about Kate and Henry.\n\nI dreamed that I was Clara, the heroine in my book, facing almost insurmountable odds in a completely unknown future. I could feel myself tossing and turning, what sleep I got was haunted by Mattie's words, fitful and full of those same dreams, always going back to Clara.\n\nI was in a video game, designing a character, she was tall, her hair was brown with red highlights, thin and fit, with long slender arms and delicate hands, long legs crowned by a small tuft of pubic hair, a slight waist and tight stomach with firm breasts slightly larger than my forms but not as impressive as Mattie's, and very beautiful. She had my face. I woke up with a start.\n\nRunning to Mattie's room I found it empty, then frantically downstairs to the kitchen, Kate had been crying, too, she handed me the note Mattie had left for me and offered me a cup of tea. I sat down hard, nodding, and trying to decide if I was ready to read the words my love had left for me.\n\nChris,\n\nI love you so much it hurts.\n\nI am so sorry for what I said to you last night, none of it was true, I was just scared, scared you would hate me for what I was about to do.\n\n- you are so beautiful laying there; I can't bring myself to wake you -\n\nAll I ever wanted was for you to be happy, please remember that and please forgive me for not doing this in person, but I knew if I did, I could never leave. They offered me the job in San Francisco, and I said yes. I am not just going for an interview; I start next week.\n\nChris, you can't come with me, I need to start this part of my life on my own, I need to know I can stand by myself in the real world; perhaps when your book tour comes through, I will get to see you.\n\nI do and will always love you,\n\nMattie\n\nI read the note over and over, Kate set my tea next to me and started running her fingers through my hair, I was numb, I buried my face in Kate's waist and started to cry, she just held me until there were no more tears left. I took a sip of my tea and wiped my eyes, the rich Earl Grey, with just the right amount of sugar and a dash of milk, was still warm and made me feel a little better, \"So, Mattie's gone already?\" I looked up at Kate.\n\n\"And Henry went with her to help her get set up,\" she smiled at me, but the sadness in her eyes told me she was hurting, too.\n\n\"So, I'm going to New York alone,\" it hit me, \"to meet with Elaine?\"\n\n\"Well,\" she paused, \"Mike would probably go with you.\" A sparkle found the corner of her eye.\n\n\"That would be fun, but I'm not sure it would help.\" I couldn't help but smile. \"Kate, what am I going to do without Mattie? Everything I am is because of her, I'm not even sure I know which parts of me are real without her,\" and it dawned on me that maybe she was in the same place, \"That's why she left, isn't it?\"\n\n\"Come on, let's go wash your face and I'll fix your makeup for you, and we can talk about it, you look like a racoon.\"\n\nWe sat in the sunroom drinking tea and talking, watching a light snow softly cover the gardens behind the house, Kate told me what she and Mattie had talked about last night, explaining how difficult it had been for her to leave me, helping me understand that for the very reasons I had guessed, they had agreed it was a good idea. If what Mattie and I had was true, it would be there when we both figured out who we really were.\n\nMy phone rang. I answered it without looking at the number, \"Mattie?\"\n\n\"No Chris, it's Elaine, I need to run something by you before we meet on Monday, The team has been going back and forth on this and we wanted to get your input,\" she paused, \"now don't take this the wrong way, but your book has a strong female lead and is pretty much a romance novel, we think it would hit a larger market if it we published it under a female author, everybody does it, even Henry. The leading contender is Christy Lee, or we could use C. L. Thomas. What do you think?\"",
        "I smiled, \"I like Christy Lee. What about a picture, don't you need one for the back cover or something?\"\n\n\"Not always, especially in cases like this, it could negate the whole idea.\"\n\n\"Maybe not. I mean, you're going to find out Monday anyway, Elaine, I'm trans, I dress as a woman most of the time, I'll send you one and you can decide if you want to use it.\"\n\n\"Now that I did not see coming,\" she laughed, \"I can't wait to meet you, so should I just call you Christy?\"\n\n\"A lot of people do; I'll see you Monday.\"\n\nI told Kate what Elaine wanted to do. We spent the next thirty minutes getting the right picture to send to Elaine.\n\n\"That is not what I expected either,\" she texted back, \"see you Monday, Christy.\"\n\n\"You look like you're feeling a little better,\" Kate smiled at me, patting my arm.\n\n\"It's going to hurt for a while, but I understand. I don't know how you get over someone like Mattie.\" I felt the sadness returning.\n\n\"Maybe you start by telling her just that,\" Kate looked at my phone, \"maybe just text her first, she's hurting too.\"\n\nC: \"I understand. Talk when you're ready. Love you,\" I hit send.\n\nM: \"K,\" the answer was almost immediate.\n\nC: \"Tell your dad Elaine wants to use Christy Lee for the book, I like it.\"\n\nM: \"No fair being nice to me right now. I did a shitty thing to you. I like it, too.\"\n\nC: \"Mattie, I let you pee in my mouth when you cum. This is nothing. \ud83d\ude0a\"\n\nM: \"What, I never.\"\n\nC: \"That's what it is when you squirt, I looked it up.\"\n\nM: \"Hang on..., OMG, that's gross and kinda hot. LOL. Are you really, ok?\"\n\nC: \"No, but I understand. I think we both need this. I miss you so bad already.\"\n\nM: \"Me, too, call?\"\n\nC: \"K.\"\n\nMattie and I talked all afternoon, Kate brought me fresh tea and snacks and gave me hugs when it looked like I needed it, which was a lot. I was sure Henry was taking care of Mattie just the same. Mattie had been right. If she had tried to tell me goodbye in person, she never would have gotten on the plane and it would have been me that kept her from her dream.\n\nAs hard as it was going to be, we were both glad it hadn't happened that way. Kate finally made us get off the phone so I could eat something. I had had nothing but tea and cookies all day.\n\nI slept in Mattie's room that night, wearing the same nightgown I had borrowed the night of the first Halloween party, letting the big bed wrap me in memories of my nights with Mattie as her soft scents filled my soul. Wrapping myself around her pillow, I drifted off into the same troubled sleep I had found the night before.\n\nOnce again, I found myself with Clara. She smiled at me and nodded, turning, and walking down a path into a copse of trees toward a small house I knew from my novel. She was taking me home. She stopped on the porch and opened her arms to me; I ran to her embrace and awoke as her arms closed around me, not unsettled, but with a purpose.\n\nMy computer was in my car, I ran through the snow to get it, trying first in Henry's office and then Kates, I thought of the three bears as I let my heart lead me out onto the sunporch, setting myself up at a small table, I plugged in my computer and started to write.\n\nBy the time the sun came up, I had two detailed outlines for a prequel and a sequel to Clara's story. Kate found me and, recognizing what she had seen so many times before with Henry, set a simple breakfast down next to me.\n\nBy lunch, I was well into the first book and Kate brought me a sandwich. I took a break to call Mattie; I told her about the dreams and what Clara had shown me. She may have been more excited than me. She told me about the cute loft she and her dad had found not too far from the museum, and I promised to come visit. By the time I had to leave to catch my flight, more than half of the story had been told.\n\nThe trip into New York was always awe inspiring, the city has a life force of its own, a soul if you will. Elaine had sent a driver for me, which impressed me immensely, the driver acted like it was no big deal. He dropped me at my hotel and said he would pick me up at ten the next morning. It had been a late flight and I hadn't slept well the past two nights, I called Mattie and we talked for a few minutes before she handed the phone to her dad.\n\n\"Elaine sent me the picture, are you sure you want to do that? Once you put your picture out there, that's who you are.\"\n\nI thought about that, but it's who Christy Lee is, not Chris Thomas, and I think it will give the book more credibility, that's what I inferred from what Elaine said anyway.\" I took a deep breath,\" How's Mattie, really?\"\n\n\"About the same as you, I guess, hurt, sad, trying to take the next step, excited about tomorrow. She said you had a good talk the other day, that helped. Listen, Mattie's about to rip the phone out of my hand, I just wanted to tell you; you're going to be fine tomorrow. Trust Elaine, she's the best. Mattie told me about the new stuff, hold on to that, though it's too soon. I'll talk to you about it when you get back home, here's Mattie.\"\n\nI actually slept that night, I dreamt about Mattie and Clara left me alone, I woke up refreshed but cursing the time difference because I couldn't call Mattie yet, I took my time getting ready, enjoying the process as I shaved everything from my nose to my toes, drying and styling my hair and taking extra care with my makeup, I chose tights with lace up boots and a houndstooth skirt and a nice comfy sweater just tight enough to show off my breast forms, but not too much.\n\nThe meeting with Elaine was more of a reception. I got to meet the team that was working on my book, editors, the cover artist, proofreaders, copywriters, marketing, and promoters. It blew me away how many people were there. Elaine showed us all the finished product, the cover was perfect 'Clara's Response' in large script across a scene showing a beautiful redhead standing tall with a very handsome man in a protective pose behind her, his hand on her waist, all against the backdrop of the Rocky Mountains, where the story took place, 'CHRISTY LEE' was in block letters across the bottom.\n\n\"This is better than sex,\" I thought to myself. Elaine laughed, and I realized I had said it out loud.\n\n\"Do you do this for everybody?\" I asked Elaine when she finished her presentation.\n\n\"Absolutely not. You have something very special here, and for your first book, too, we have already submitted Clara for a few awards. We sent ARCs to all the top reviewers and even the Times. If you can do more at this level, you, my dear Christy, are going to have an impressive career as a writer. I have very high hopes for you.\"\n\nI thought about what Elaine had said about my first book, the dozens upon dozens of short stories, novellas, and never finished novels on my hard drive, all the ones I had shown to Henry that he had ripped apart before Clara found me and he smiled and said, 'good job,' I smiled at Elaine, \"Thanks, I have a good mentor.\" I knew I had been lucky, that it was a one in a million shot, and that without Henry's lobbying, I wouldn't be here, but Clara was a good story, and everyone in the room believed I had told it well.\n\nPaul Ryder was going to be my publicist, we spent the afternoon going over a calendar for the next nine months, book signings, readings, panel appearances for aspiring authors, even a few radio interviews in Chicago and Denver, starting at the first of the year, there would be no time for Chris Thomas, Christy Lee would be full time.\n\nChristmas was tough, the twins were devastated that Mattie hadn't come with me; I called her, and they listened intently as she described all the wonderful things she was doing, we looked her museum up on the internet, Mattie told us what to look for and the beautiful works of art she handled mesmerized the girls. When we hung up, I took them for ice cream; it helped.\n\nPaul was amazing. Not only did he keep me on schedule, but he also helped me get out of a few tough questions we hadn't prepared for during the first few events. My book was flying off the shelves and by the time we got to Chicago, it was on the New York Times Best Sellers list at number seven; it was outperforming even the best estimates, which meant more events and more demands on my time. When Ellen called and asked me to appear on her show, I literally lost it, screaming like a schoolgirl, \"I'll take that as a yes, her scheduler said,\" I handed the phone to Paul, and they set up the date.\n\nAt first, I attributed the changes to just being on the road and wearing my breast forms too much. My clothes fit differently, and my breasts itched and hurt. I only shaved twice a week and noticed that certain areas didn't need to be shaved even that often, and there was something about my face. I couldn't put my finger on it, but I thought it looked softer. I asked Paul, but he said he saw nothing different.\n\nBy the time we got to San Francisco, I had been number one for two weeks, Elaine called letting me know I would need to come back to New York, we had a reason to go to the RITA awards.\n\nI saw Mattie in the line at the book signing and it hit me I had been so busy I had forgotten to call her. I told Paul I needed to take a break, the people at the front of the line grumbled a bit, when they saw the huge hug I gave Mattie, I was certain they forgave me.\n\nApologizing, I let her know I had in fact set aside that night just for her but had been so busy I forgot to call her. She said she was available and understood, we made quick plans, I signed her book, gave her a kiss, the feelings were all still there; I watched for a minute as she smiled and left the bookstore.\n\nMattie showed up at my hotel a little early, I told her how exciting everything had been and about Ellen while I changed, \"Christy, you look different,\" she walked up behind me when I pulled my blouse over my head, her hands ran across my hips, up my waist, across my back to my shoulders,\" more feminine.\"\n\n\"I know what you mean, at first I thought I'd just lost some weight and my boobs hurt from wearing my forms so much but it's more than that. Can you unhook me, by the way?\"\n\nShe unhooked my bra, and I pulled the forms from my breast laying them on the counter.\n\n\"Christy, you have boobs,\" her hands slid around my chest and cupped my small breasts, squeezing gently, my nipples got hard, and I felt a surge of energy race through my body\" and hips and a really nice butt and your shoulders are smaller. Christy, what is going on, are you taking hormones, are you trying to be a woman?\"\n\n\"Mattie, no, I'm not doing anything. It's been happening for the past couple of months since I started the tour. Every day, I wake up and I've changed a little more. I thought about going to see a doctor, but, Mattie, I like what's happening to me.\" I looked at myself in the mirror, noting everything she had described.\n\n\"Take your panties off,\" I slid them down my hips until they fell to the floor.\n\nMy genitals were less than half the size they had been the last time Mattie and I had been together, she slid her hand to my crotch and started to fondle me, I could feel the urges in my heart but there was nothing from my manhood.\n\nMattie continued to touch me, using her other hand, she turned me around. I leaned against the counter as she dropped to her knees and took me in her mouth. The feeling of her soft lips and tongue felt wonderful, even on my flaccid member. I ran my hands up my chest, cupping my breasts, noticing how large my nipples had become.\n\nI let out a soft moan as a gentle spasm of pleasure pulsed through my body. I could feel myself releasing in Mattie's mouth. I had never gotten hard.\n\n\"That was probably a bad idea.\" Mattie looked up at me, smiling sheepishly.\n\n\"I certainly wasn't going to complain,\" I smiled as I helped her to her feet.\"\n\nI tried to pull her close and kiss her; she put her hand on my chest. \"No Chris, please, I shouldn't have done that. I do still love you, I just....,\" she looked away from me.\n\n\"It's ok, Mattie, I still love you, too, but I understand, it's still too soon,\" I picked my panties up and slipped them back on, looking at myself in the mirror, \"How is this happening to me?\"\n\nShe ran her hands over my shoulders and down my arms, sliding them around me as she hugged me from behind,\" I don't know Chris, some of this could be hormones or something, But I don't think they make your shoulders smaller, and your chest, too. Have you been to a doctor?\"\n\n\"I've been making excuses. I really have been so busy, but mostly, when I see how I've been changing, I want this; Mattie, I want to be a girl,\" I pulled her arms tight around me, \"and I still miss you so much.\"\n\n\"Chris, just get dressed and we can talk over dinner,\" she pulled herself free and swatted me on the butt.\n\nI had been in a dress and heels for weeks, so I chose some jeans and my boots, with a camisole and a lace cardigan to dress it up just a bit.\n\nMattie smiled at my choices, \"that's really cute, you're learning. So, I'm guessing Chris didn't make this trip?\"\n\n\"Thanks,\" I smiled at Mattie, \"I had an excellent role model, and Elaine and I talked about Chris, as well as my book is doing and with the appearance on Ellen's show, I just can't risk it right now. Maybe your dad was right about putting my picture on the book, and besides, I'm not sure there's much of Chris left.\" an odd blend of melancholy and happiness ran through me.\n\n\"Well, I like the picture. I keep your book on my desk,\" she blushed as she said it.\n\n\"Mattie, what are we doing? I...,\" she put her fingers on my lips.\n\n\"Chris, or Christy, we are going on a date. We are going to talk to each other and ask questions and try to get to know each other again, and if you're lucky, I may let you kiss me goodnight when I drop you off back here at your hotel,\" she smiled at me.\" We are starting over.\"\n\n\"You would still be with me, even like this?\"\n\nMattie took my hand slipping her fingers into mine, \"Christy, I never loved you for what you looked like. It has always been for who you are. In some ways, I really like Christy more than Chris. Besides, you never made me squirt with your cock,\" she laughed nervously. I wasn't sure she believed what she was telling me.\n\nMattie took me to a wonderful restaurant at a marina right on the water, the food was amazing, we shared a bottle of wine, or two, and talked for hours, Mattie telling me all about the museum and me telling her all about the hectic pace of the book tour, the highlight would be the appearance on Ellen right after the Rita awards.\n\nI had been panicking mildly about what Ellen was going to think of my being a man in a dress, but with the speed the changes had been happening at for the past few months, I wasn't sure it was going to be an issue. I was now thinking it was going to be more of a problem explaining to people that knew me what had happened to Chris.\n\nMattie didn't even pretend when we got back to the hotel. She pulled into the parking lot and grabbed an overnight bag from the back seat. \"Just shut up, ok. Not a word,\" she smiled at me, and we both laughed. I took her hand as we walked to the elevator, completely confused by the mixed messages she had been giving me.\n\nFalling asleep in Mattie's arms was both familiar and new, we had kissed and touched each other, me rediscovering the wonderful softness of Mattie's body while she explored the new and changing landscape of mine, the subtle scent of Mattie filled my head and my soul as dreams of her and me filled my heart; and then there was Clara, smiling, opening her arms to me, like a mother to a small child. I let her wrap me in her embrace as a warmth I did not recognize filled me.\n\nThe pain in my gut was intense, I screamed as I sat up, \"Christy, what's the matter? You're burning up, and your breasts, they're huge and you're leaking.\" The concern in Mattie's voice was both worrisome and comforting. \"Come on,\" she helped me from the bed and into the bathroom. Turning the water on as hot as I could stand it, she helped me into the tub.\n\n\"Mattie, it hurts,\" I grabbed my stomach. No, it was lower.\n\nThe hot water seemed to help as the pain subsided and then returned. There was no way for me to get comfortable.\n\n\"Christy, I think you're having cramps, I think whatever is happening to you is happening right now, I think you're having a period.\"\n\nNo sooner than she said it, the tub filled with blood, I could feel it gushing from between my legs. Mattie reached down and opened the drain, turning the shower on and rinsing my body clean.\n\nI was still in the tub when my wake-up call came in from the hotel. The cramps had mostly subsided, being replaced with a dull ache, a soreness that went deep inside me.\n\nThere were large pieces of tissue in the tub, one that even looked like a small penis. Mattie and I just flushed them down the toilet, as neither of us knew what to do or even to think about what had just happened.\n\nMattie got in the tub with me. With her help, I could stand and shower, cleaning the rest of the residue from my body. By the time I had cleaned myself, Paul was knocking on the door. Mattie grabbed a robe and went to let him know we would be down shortly. He had just smiled at Mattie and said not to take too long.\n\nI tried to touch myself, to see what had happened, but it was too sore. Mattie gave me a quick introduction to tampons and pads and helped me get dressed. I chose something comfortable and loose.\n\nWhile she dressed, I did my makeup. By the time we were both ready, the pain had subsided enough that I thought I could make it through the day. After all, all I had to do was get on a plane to New York and sleep for six hours.\n\nPaul was waiting for us at the restaurant just off the lobby. He smiled at us as we walked up to the table. I found I was famished and ate more than I had in a long time, no one said much of anything until it was time to go, \"So, Mattie, I checked with the hotel, your car will be fine in the parking lot until you get back,\" Paul had said it like it was not a big deal, I spit my coffee across the table,\n\n\"Surprise,\" Mattie smiled at me and winked.\n\n\"What, you're coming to New York with me?\"\n\n\"You didn't think there was any way I was going to NOT be there for you, did you? Your agent called me and let me know. We set all this up weeks ago,\" she winked again.\n\nAll the mixed messages made sense, she had been playing me, setting me up for this, her big reveal. I was too sore and tired to complain.\n\n\"I am so going to kill your dad,\" I laughed and hugged her as hard as I could.\n\nMattie joined me as I stopped in the restroom. There was a little bloody discharge, but not much. It mixed with a light clear mucus that I recognized from being with Mattie. The pain almost gone. I was healing as quickly as I had changed.\n\nChris was gone.\n\nThe flight to New York was uneventful, mostly because I slept through the whole thing.\n\nHenry and Kate both did a double take when Mattie and I walked into the hotel lobby, I told them I would try to explain when we got to our room. Henry had rented a suite for the four of us, as soon as I got to the room, I told them about the changes that had started out subtly so many months ago, how they had accelerated and finally exploded just last night. Mattie described what she had seen, even sharing the few pictures she had taken so she could prove to herself that it had really happened. Even if I had been taking hormones, it could not explain the result, or what had happened last night.\n\n\"How are you not freaking out about this? Your dick just literally fell off,\" Henry, didn't know what to think.",
        "\"Because when it started to happen,\" I caught myself playing with my ring,\" I realized that ever since I dressed as Luciara for Halloween,\" I looked at Mattie for some encouragement, it wasn't there, \"this has been what I wanted. Last night was just the last step on a path I was going to take one way or the other.\"\n\nWe went round and round for a while, trying to come to grips with what had happened, none of us sure this wasn't some strange collective dream, offering strange possible explanations and then discounting them; it defied all sense of reality. It just wasn't possible, but it had happened.\n\n\"Well, at least it solves the problem with Ellen calling you out on her show,\" Henry was half serious and half joking, it had been a major concern that Ellen would try to 'out' me on her show, which would destroy my credibility and my book.\n\nNo one said anything for a few minutes. \"Well, we have a reception to get ready for,\" It was Kate who brought us back,\" we can discuss all this later. It will give it some time to sink in.\"\n\nElaine hosted a reception for all her writers every year the night before the RITA awards, I was one of a few dozen that had been nominated and one of three from her publishing house that had made the finals, Henry was receiving a Centennial Award for his 100<sup>th</sup> romance novel, one of the very few men that would make the stage.\n\nThe reception was amazing, Elaine had gone all out, it was the place to be if you were anyone in the romance novel universe, 'Clara's Response' was a very hot topic, and I was very quickly looking for somewhere to hide and take a break. Henry grabbed my arm and dragged me through an opening in a curtain, past a large man in a tuxedo. \"Writer's lounge,\" he whispered, \"So, how does it feel to be famous?\" He laughed, \"and I'm sorry for not telling you about this, it's a kind of rite of passage to let you suffer for a while before someone rescues you.\"\n\nI kicked my shoes off and plopped down next to Mattie and Kate. \"How long do we have to stay?\" I took a big sip of the wine Mattie handed me. \"I'm already exhausted.\"\n\nHenry laughed at me, \"You have to pace yourself, it will get better, I promise,\" he sat down next to me,\" Christy, do you have any idea how this happened?\" he pointed at me.\n\n\"Promise you won't laugh,\" he nodded, \"I think it was the ring,\" I held out my hand,\" See the runes, they were on the inside of the ring when I opened the box, when I put it on, they were on the outside, and I think they glow at night.\"\n\nKate rummaged through her purse, \"I almost forgot,\" she pulled out a letter and opened it, \"the runes, they mean Need or Desire, Rite of Passage, Dawning or Awakening, Motherhood or Birth, and Harmony or Contentment, they're ancient Celtic, like first century ancient.\"\n\n\"So, I have a magic ring that turns men into women?\"\n\n\"That makes as much sense as any other explanation,\" Mattie looked at me,\" I wonder if it can change you back?\"\n\nI could feel where this was going, \"You know I never even tried to take it off,\" it stuck on my knuckle, but with a little effort, it slid from my finger, the runes disappeared but were also tattooed on my finger where the ring had been,\" that doesn't look promising,\" I smiled nervously at Mattie.\n\n\"I think it's more likely it takes your innermost desire and makes it your reality,\" Henry said softly, \"Desire, Passage, Awakening, Birth, Contentment,\" he looked at me\" you said it yourself, you wanted this to happen.\"\n\n\"Here you are, come on, the photographers are here,\" Elaine pointed at Henry and me, she had more energy that any three people I knew.\n\n\"Yes, mother,\" Henry said sarcastically, I slipped the ring back on my finger and followed Elaine and Henry out of the room.\n\nIt was after two in the morning before we got back to our room, Mattie and I collapsed into bed, \"I still love you Christy, always remember that\" she whispered softly as she wrapped me in her arms, I knew what she meant. I would always love her too, but this is not what she had signed up for. We had talked about having kids and had even made tentative plans to save some of my sperm in case I transitioned but with what happened in our room in San Francisco, everything changed.\n\nIt is easy to tell someone you love them for who they are and not what they look like, but when the reality hits you, especially a reality like this one, it can change things in ways you might never expect.\n\nWe all slept in and ordered room service for lunch, the topic of conversation was a continuation of trying to find logical explanations for what had happened to me. There were none. The ring had glowed, and they all saw the runes move around the small gold circle on my finger. Ultimately, we all agreed that perhaps there was 'real' magic in the world after all. Occam's Razer prevailed. Nothing else made any sense. We all agreed that the ring should remain a secret. In the wrong hands, it could be devastating.\n\nMattie and I spent the rest of the afternoon in our room talking about what was next for her and me and trying to figure out how to make things work. To her credit, the orgasm had been amazing, and I had learned a lot about my new anatomy that I had yet to explore.\n\nHenry picked up his Centennial Award, and I won Best First Novel at the awards ceremony. Mattie and I flew back to California, and she went with me to L.A. for the Ellen Show taping; Ellen was just as nice in person as she appears to be on her show, there was not even an allusion to me being a guy in drag, we talked about my book, my inspirations for Clara, and the importance of strong female role models in society.\n\nEllen gave everyone in the audience a copy of my book and I stayed around after the taping to sign as many as I could. Paul was waiting for Mattie and me back at the hotel in San Francisco.\n\nMattie and I both cried as we said our goodbyes, Paul and I had one more appearance there before we headed back to L.A. and out for Vegas and the southwest, ending up in Texas where we would hit Dallas, Houston, and Austin, and I would also get to explain to my parents what had happened to their son. One more stop in Atlanta and then back home to Connecticut for whatever came next.\n\nThere was no way my parents were going to buy the magic ring thing, so I just told them I had been on hormone therapy and had made Christy permanent. We had talked for a long time, and I did my best to explain, they ultimately accepted my choice, the twins were a little confused that their brother was now their sister, but took it in stride being more upset that I wouldn't be marrying Mattie, but I promised she would still be their aunt and still buy them ice cream no matter what, and that seemed to be enough.\n\n<p align=\"center\">Part 4.</p>\n\nGabriel Garc\u00eda M\u00e1rquez, Walt Disney, and Pablo Escobar, what could a dead Columbian author, a guy that made cartoons and family movies, and a drug kingpin possibly have in common and how the hell do they fit in with this story? Good questions, the answer is something called Magical Realism, an art form that goes back to what Wikipedia calls \"... an eponymous German painting style from the 1920s.\"\n\nNow I could look up eponymous for you, but where's the fun in that. In short, magical realism is a style of literature where magic or exceptional occurrences, like what happened to me, are as common as hotdogs on the Fourth of July. Of course, Disney was famous for sentient Volkswagen Beetles, flying nannies, absent-minded professors that make flying cars, and things like that, and many consider M\u00e1rquez to be the father of the literary art form in Central America. Pablo Escobar, well, his life was so amazingly bizarre that many can't bring themselves to believe he actually did a lot of the things he did, and there is debate if the telling of his story falls into the category. Besides, me mentioning his name got your attention, didn't it? Now the second question, how does it relate to my story? Well, we're not done yet, but I think you'll agree it's been interesting so far.\n\n<p align=\"center\">* * *</p>\n\nOnce my book tour ended, I crashed and hard, Kate and Henry adopted me, helping me move out of the apartment and letting me move into the guestroom I had been using. I spent long hours on the sunporch drinking tea and talking with Kate and even longer hours discussing literary concepts and brainstorming with Henry. None of it helped heal the pain in my heart from what had happened with Mattie and me after San Francisco; we had simply drifted apart.\n\nWhile we still loved each other and while what Mattie had said about loving me as a person regardless of gender was true, what had started in the bathtub in our hotel in San Francisco hadn't stopped there, my attraction to her was changing as was hers to me.\n\nWhen we talked there was usually some crying involved and then we would talk some more, we discussed things like kids, Mattie wanted to get pregnant and I could no longer do that for her, I even found myself smiling at the thought of a new life inside me; when I asked what it felt like to have a man inside her, she laughed and made me promise to let her know every detail of my first time with a guy.\n\nOver time, we came to a mutual realization that being best friends was going to have to be enough.\n\nMike was still there but his interest waned when he found out about my new plumbing, I mean being gay kind of precludes having sex with women, so I understood, we still got together occasionally for lunch our relationship mellowing into a comfortable friend zone.\n\nThe inspiration I had found for Clara's Promise, the prequel to Clara's Response had vanished, Clara no longer came to me in my dreams and even with Henry's help, I just couldn't move forward. I had lost my muse.\n\nClara's Promise sat half written so I took a lesson I had learned from the master and started cranking out cheesy Harlequinesque romance novels that you can find in your grocery store for seven ninety-nine, look for anything by C.L. Thomas, that's me.\n\nElaine was happy to publish them but pressed me for the next Clara book before it became too late, Henry agreed with her.\n\nWhile I did seem to have a knack for some fringe subgenres like transgender romance, go figure, which did sell well and that she seemed to appreciate, it was Clara that she wanted. I understood, I just couldn't find the story again; something was just missing.\n\nMattie, well, we still talked every week or so, but it wasn't the same, even as 'best friends', it had become awkward and a little stilted and even when she came home for the Halloween party, it was difficult to be in the same room together.\n\nBeing that close to something I wanted so badly and couldn't have just hurt too much.\n\nI dressed as Clara and Mike as Hilton, Clara's beau, I was surprised at how many people figured it out, I guess seventeen weeks on the New York Times best seller list, eight of those at number one, can do that.\n\nI sat on the sun porch, having just hung up from another too brief chat with Mattie, it sounded like she was coming down with something so I let her go, I just couldn't fill the hole she had left in my soul, part of me was missing and I think she felt the same way, but every time we tried, it just felt wrong.\n\n\"Desire, Passage, Awakening, Birth, Contentment,\" contentment my ass, I fingered the tattoo on my right ring finger; I was miserable. I was so much happier when Mattie was sneaking down the stairs in the dorm to my room where we fucked like crazy, half hoping my old roommate would walk in on us again. It had been so much simpler then.\n\nAfter a long talk with Kate and Henry, I decided I needed a change. Calling my parents, I made plans to move back home after the new year; maybe a change would help me reconnect with whatever was missing.\n\nThe twins were ecstatic that I was coming home and with my 'work' schedule, I was going to get to spend a lot of time with them, playing nanny as I struggled to find my muse again.\n\nThere were lots of trips to get ice cream after school and since they were a little older, lots of questions about how and why I had become a girl, which led to an interesting development; after consulting a few local gender specialists, I wrote a series of about a dozen children's books on being transgender, what it meant, why it happened, and how to deal with it, covering what to do if you thought you might be transgender or if a friend told you they were.\n\nI sent the entire package to Henry who raved about them, passing them on to Elaine who was even more excited, deciding to release them at six-month intervals over the next few years, it helped, but the undertone was that she still wanted Clara; I did too.\n\nOf course, I should have known it was going to happen, I mean there are just some things a girl can't hide from her mom, and when she found the used tampons and pads in the trash in my bathroom, it was time for a serious discussion with my parents; but how do you explain something that really can't be explained; I mean a magic ring, really?\n\nI looked and looked and couldn't find the ring to show them the runes that matched the tattoos on my finger, so I called Henry and he told me they would look for it, it had to be somewhere.\n\nThere was the obvious, they had both been there the day I was born, knew what equipment I was born with, and knew I was me, but there was also medical proof that surgical transgender women didn't have periods, so again, Occam's Razor came into play, the simplest explanation had to be the one; I had found a magic ring, and it turned me into a girl because it was what I truly wanted, or I was a genetically engineered clone from some super-secret lab run by an undocumented government agency; they went with the magic ring.\n\nAt this point, I hadn't talked to Mattie in months. I had called and left a few messages, but she wasn't returning my calls. Even my personal relationships with Kate and Henry changed; I would call, and the conversations would be short and to the point, quick updates, and nothing more.\n\nHenry was still my mentor and if I wanted to talk writing, he was there, but anything family seemed to be off limits, especially if I had a question about Mattie.\n\nI cranked out another cheesy romance novel and the local community college reached out asking me to teach a seminar course, so that kept me busy, but a major part of me was just gone, even with my mom and dad and Ashley and April, it was like I had a hole in my soul.\n\nWhen the invitation arrived with five first-class tickets to Connecticut, my mom and dad were ecstatic, I was confused, and the girls wanted to know if Aunt Mattie would still take them for ice cream; I assured them she would. Well, I was partly right on that one.\n\nMy mom sent sizes and Kate said she would have costumes for all of us, the girls were going to be Disney Princesses, Ashley would be Cinderella, and April, Elsa; me, my mom, and dad were yet to be disclosed. I sensed a conspiracy of some sort but remembered how much fun I had had at my first party, so decided not to worry about it, especially sense the invitation meant I would finally get to see Mattie again and this time, maybe, just maybe get some closure.\n\nThe timeline was curious, our flights were the day before Halloween and we would spend the first night in a hotel, I knew Kate and Henry had plenty of room but didn't want to press the issue. Henry would pick us up the next day and take us to the house in time to change for the party, after that we would stay at the house for a few days before heading back home.\n\nYeah, I felt it too, something was up.\n\nIt was a tossup as to what Ashley and April were more excited about, their first plane ride, getting to see Mattie again, or the ice cream they got since we were in first class on the flight.\n\nThe hotel was nice and after dinner, I took the girls swimming in the indoor pool, another first, of course they knew how to swim, but a whole pool inside was just too cool to pass up.\n\nHenry showed up just as we were checking out explaining that we were all going to be characters from stories by Alexandre Dumas, more specifically, Henry would be Aramis, my dad, Porthos, my mom and Kate, Athos and D'Artangian respectively.\n\n\"And me?\" I asked.\n\n\"It's a surprise, you and Mike will be together, just trust me, OK?\" Yeah, there was something going on.\n\n\"Just as long as I'm not 'The Man in the Iron Mask',\" I quipped. Henry laughed.\n\nThe Musketeer costumes were over the top perfect, as were the Disney Princess ones. Mine was a simple period dress for a woman from a wealthy family in the mid-nineteenth century. Mike was similarly attired as a wealthy man would be from the same period. I could be anybody, and Mike was under strict orders not to tell me.\n\nThe party started, and the girls were flitting around like butterflies, admiring all the beautiful costumes and reveling in the praises they were receiving, asking everybody they met where their Aunt Mattie was. No one seemed to know.\n\nAramis took the stage to announce the beginning of the game, reminding everyone to let people know if their costume depended on anyone else and encouraging us all to, above all else, have a good time.\n\n\"Fernand Mondego!\" a voice screamed from behind me, \"it is time you paid for what you have wrought.\" I turned to see an impressive man in an elaborate costume rushing toward Mike and me, drawing his sword; long black hair and crystal blue eyes, something so familiar about him.\n\nMike stepped in front of me to meet the challenge.\n\n'Fernand', it clicked, he was the guy from The Count of Monte Cristo, the guy that sent his friend to prison so he could steal his fianc\u00e9; Mike was Fernand, then this man with the black hair and blue eyes was The Count, he was Desmond, and I, I was Mercedes, they were fighting over me, but why, I didn't know this guy, I had never seen him before, but those blue eyes...\n\nIt wasn't true to the book, but the ensuing sword fight was high theater, they had been working on this for weeks of not months, back and forth they dueled, neither seeming to get the advantage, the crowd cheering and applauding as The Count slowly took the upper hand. After pinning Fernand to the ground, his rapier at his throat, the Count decides that mercy is the better play and allows Fernand to scurry off into the crowd to live another day.\n\n\"My Lady,\" he kneeled before me, \"I apologize for my long absence, but I was unforeseeably detained,\" those blue eyes looked up at me and I understood what had happened, I knew why I couldn't find the ring, my eyes filled with tears and my knees gave out as I fell into his arms.\n\n\"Mattie?\" I whimpered. \"what did you do?\"\n\n\"Nothing less than you would have done if things were reversed.\" He kissed me passionately, picking me up and carrying me toward the house. The crowd erupted in applause at the performance, a select few of them understanding what had actually happened.\n\nMattie and I had so much to talk about, but it needed to be just Mattie and me.\n\nKate found us on the sun porch holding hands and staring at each other, setting two cups of chamomile tea and a small tray of cookies between us, she left us to whatever was next.\n\n\"That last Halloween,\" Mattie started,\" when things were so awful, I knew I couldn't do it anymore, I had to find a way to be with you again. I didn't tell anyone; I just stole the ring and trusted that it would do the right thing.\"\n\nI just sat and listened.\n\nMattie's voice was no longer the sweet soft voice I remembered, instead it was a wonderful deep, rich baritone, \"I had these dreams, like going home except the person inviting me was tall and handsome, he reminded me of a younger version of my dad. When I noticed my voice starting to change, I knew I couldn't talk to you any more or you'd know what I was doing. I didn't want you to take the ring away, to try and make me stop, so I hid it, I hid it from everybody; I even quit my job at the museum.\"",
        "\"Mattie, you loved that job,\" I started to object.\n\n\"But I love you more,\" we were both crying now.\n\nShe had stopped calling home as well and Henry finally went to check on her finding a younger version of himself in the apartment, Mattie just showed Henry the ring and wrapped himself in his father's arms.\n\nHenry brought Mattie back home to Connecticut, Kate wasn't as surprised as she might have been, but a mother always knows things about her children nobody else knows, together the three of them hatched the plan for the party and the rest was history.\n\nWe talked for a while longer before deciding to go back to the party. We were quickly out of tokens as the play Mattie and Mike had performed confirmed exactly who the three of us were.\n\nMy parents were a little confused, but Mattie showed them the actual ring and explained what she/he had done and why, and they accepted it as a verification of what I had told them. The girls just went with it, but when you're six, what makes more sense than your brother became your sister, so his girlfriend should naturally become her boyfriend, right? And of course, Uncle Mattie promised to buy them ice cream, too.\n\nWe didn't think anybody else really needed to know the details.\n\n\"This is so weird,\" Mattie giggled as I explored his new body for the first time.\n\n\"Just relax, it gets better, I promise,\" I flicked his nipple with my tongue. Mike had a nice body, but what the ring had done for Mattie was incredible, nice broad shoulders, muscular arms, full pecs, flat stomach with a raging six pack and the most muscular legs I had ever seen; what was between those legs was epic.\n\nI took my time leaving trails of kisses in my wake as I explored every inch, sucking on his fingers and even his toes before I made my way up his legs, around the back of his knees, kissing and teasing him just enough to get a soft moan, before making my way up his thigh to his crotch. When I got there, I used every trick Mike had taught me in our times together, taking Mattie to the edge and keeping him there, letting him get oh so close only to pull him back until finally he couldn't take it any longer, begging me to let him finish.\n\nI relished the taste of his seed in my mouth, enjoying the pulsing of his cock as he fed me spurt after spurt, draining him completely before I swallowed it all.\n\n\"Oh my god, I had no idea it would feel like that,\" Mattie let out a long sigh as I slowly slid up next to him and kissed him passionately.\n\n\"I'm glad you enjoyed it. You can thank Mike the next time you see him,\" I laughed.\n\n\"I'll do that, but this, I learned all on my own.\" he pushed me onto my back and kissed his way down my shoulder to my breasts. I was on fire; it had been San Francisco the last time anyone had touched me like this and what was just budding then was now in full bloom; my entire body was an erogenous zone.\n\nI thought I had been thorough with Mattie. What he did to me was almost indescribable. He tweaked my nipples, teased, and tickled me, making me squirm while his lips and tongue painted an elaborate mural across my body.\n\nThe way he kissed and licked his way up my thigh sent shivers through my soul, when he licked and then kissed my taint, those shivers turned into shudders and when his tongue slipped between my nether lips, those shudders erupted into an orgasm the likes of which I had never experienced, my body trembling as wave after wave of delicious pleasure ripped through me.\n\nI couldn't catch my breath and he didn't stop, sucking my throbbing clit into his mouth, flicking it with his tongue as his hands continued to touch and tease me, Mattie drove me from one crest to the next, each one more intense than the one before.\n\n\"Mattie, please, no more, please Mattie\" I couldn't believe I was begging him to stop.\n\nOne last flick of his tongue and he started kissing his way up my stomach, across my chest to my breasts, spending several long minutes sucking and licking, gently biting my nipples as his hands moved up my sweat covered chest, his fingers taking over where his lips had been as he kissed me passionately.\n\n\"Christy?\" He let out a soft moan, his erection pressing into my crotch. I knew what he was asking; I nodded and bit my lower lip.\n\n\"You're sure?\"\n\n\"Please,\" I whispered, surrendering my virginity, and taking his as he pressed inside me.\n\nThere aren't words to describe a moment like this, beyond the physical experience, giving yourself to someone you love for the first time is spiritual, it is the ultimate expression of surrender, the ultimate expression of trust, it embodies everything that makes a relationship special; or it should, and in this case it did.\n\nFeeling Mattie move inside me, feeling him fill and stretch me, hearing his moans of pleasure and knowing that I was the first and hopefully the only one that would hear those sounds was magic. I wrapped my arms around him and buried my face in his chest as he moved faster and deeper.\n\nThe feelings that were growing deep inside me were now familiar, I writhed and moved with him as he drove me closer and closer to another orgasm, listening to his moans, gauging his motions by what I remembered doing, trying to time my climax with his.\n\nDigging my fingers into his back, biting gently into his shoulder, wrapping my legs around him, pushing him deeper inside me, I finally gave into the inevitable, my body shaking as he clenched, pulsing inside me; we collapsed together in a heap of sweat covered flesh, both completely sated.\n\n\"Mattie, I love you so much, that was beautiful,\" I was crying, it had been too long, everything I had buried, every hurt, every longing, every sadness poured out of me, the emptiness they left behind filled with the euphoria of that moment and the love it represented.\n\n\"I love you, too,\" he fell next to me, pulling me into his arms, holding me close as we fell asleep in each other's embrace.\n\n<p align=\"center\">***</p>\n\n<p align=\"center\">Epilogue</p>\n\nI could see the Rockies in the distance, knowing my future lay there, I climbed back on the gray mare I had bought at the trading post and urged her forward into the unknown, trusting that whatever lay ahead of me was better than what I had left behind, understanding that my life was mine to make and that I had everything I needed to make it something truly special.\n\nThe vision fresh in my head, I sat up, Mattie still lying next to me, a sense of renewed purpose filling my core, I hadn't lost Clara, how could I, she and I were one, I had simply shut her away behind my grief and my pain. With that out of the way, her story, our story, was right where I had left it.\n\nKissing Mattie gently on the forehead, I grabbed a robe, found my laptop, and made my way to the sunporch, stopping briefly in the kitchen to brew a cup of chamomile tea, and let the words pour forth. Kate found me and refreshed my tea with a nice Earl Grey, leaving me to my task; she knew the situation all too well.\n\nMattie brought me breakfast, kissing my temple, and stroking my hair, I grabbed his hand and kissed it sweetly, \"I'll take a break in a little bit,\" he knew I was lying and so did I, I belonged to Clara until she let me go, I was sure it had been the same with his dad and Oric the Slayer.\n\nApril and Ashley were the ones that finally broke the spell, demanding I go with them and Mattie to get ice cream; how could I refuse such an offer?\n\n\"It's ok that you're not our aunt anymore, Mattie,\" April took a big bite of her ice cream, \"uncles are fun, too.\"\n\n\"Well, you know, one day you and Ashley might be aunts. How would that be?\" Mattie glanced at me, and I just smiled.\n\n\"Really?\" the girls said it in unison. When we got back to the house, it was all they could talk about. I did the math in my head and realized that it could quite possibly be a lot sooner than any of us could have imagined. Oops.\n\nJuly twenty seventh, Carla Kate Everson introduced herself to the world, Mattie and I had a small family only ceremony in the spring to make it all official and of course, Ashley and April were beside themselves with the fact that they were now aunts.\n\n'Clara's Promise' was released in August to rave reviews, 'Clara's Repose' would follow eighteen months later coincidentally on the same day that Christopher Henry Everson joined his big sister.\n\nMattie and I moved to Boston where he had taken a job helping run the historical monuments while I chased Clara and Chris around the yard, churning out a few romance novels every now and then to keep Elaine happy. Kate was still teaching American Mythology, and Henry was busy working with Peter Jackson on the screen plays for his 'Oric of Ascalia' trilogy.\n\nLife just has a funny way of working out, doesn't it?\n\n<p align=\"center\">***</p>\n\nSo, from nematode worms to Lockian philosophy, theoretical physics, and magical realism, I guess some things just can't be explained and some things probably shouldn't. In the long run, it's all a game, just try and collect as many tokens as you can and, no matter what happens, remember to have a good time.\n\n<p align=\"center\">======================</p>\n\nWell, I hope you enjoyed my little tale. Whether you did or didn't, please leave a comment to let me know what you think I did well and what I could improve on. As always, your comments are what keep me writing."
    ],
    "authorname": "ShelbyDawn57",
    "tags": [
        "love story",
        "romance",
        "crossdressing",
        "magic ring",
        "science",
        "oral sex",
        "blowjob",
        "deep throat"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/exploring-the-bounds-of-normal"
}