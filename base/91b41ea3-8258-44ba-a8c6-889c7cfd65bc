{
    "title": "My Little Ventrue Pt. 07 Ch. 15",
    "pages": [
        "~~Author's Note~~\n\nSorry this action scene is taking so long. It's really been dragging! But it's building up to something pretty big, and a lot of details needed to be explored; they'll be relevant later. Give it a couple more chapters and we'll be back to the world of Dolareido.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Damien~~\n\nHe didn't have to say anything. The moment he curled his finger against the small hole in the soot, and opened the barrier, the crows above began to squawk, caw, and attack. Damien worked quickly, spreading the soot apart until one, two, three feet of open earth awaited him. Thankfully, the amber circle was rendered completely useless by being broken, but the soot apparently still worked as a barrier from either direction, as his fingers attested; it blocked all matter from both sides, but when his fingers touched the powder itself from the inside of the invisible wall, it gave way. He had to make sure the break was wide.\n\nThe crows, who had hidden in the forest, hiding their numbers in the shadow and sinister wood, unleashed the swarm. The legion descended upon Damien, and flew through the break in the barrier over his head. Made sense; they wouldn't be able to see the black powder way high up in the sky, with branches and darkness hiding it. But it did mean he had to plant himself flat to the ground and ledge of the ditch, covering his head with his hands, as the birds flew through the hole, shrieking and squawking.\n\nThe four hunters lifted their heads, eyes wide, surprised, and maybe a little afraid. But the fear disappeared under reflexes, training, and Lord only knew how many years of hate and loathing. The one with the flamethrower unleashed Hell, and Damien had to throw himself back and away into the forest again, disappearing behind trees as fire lit up the hole in the barrier he'd made. Feathers went up in flames, and the smell of burned flesh filled Damien's nostrils. Bullets ripped up the ground, shredding the hole Damien had made, and again the Mekhet found himself hiding as the hail of gunfire continued until dozens, hundreds of bullets were crashing against the bark around him.\n\nHe peeked his head out, and watched. Wrapped in his Cloak of Night, the hunters wouldn't be able to see him. Except, Jeremiah, Angela, and Elen had proven they were quite capable of handling paranormal threats. Perhaps they could see him, if he got too close, thanks to their tattoo symbols, or maybe the necklaces and bracelets they wore. The four hunters were as likely a threat, but they were distracted, all four sets of eyes locked onto the ditch Clara had dug, and burying it in metal and fire.\n\nAngela, Elen, and Jeremiah, on the other hand, did not break from their task. Now they stood within a new circle, one Angela was finishing drawing with what looked like chalk. Amber. That blasted amber line again. But it seemed like they didn't have anymore of the black soot anymore; powerful stuff, absurdly powerful, and thank the Lord he didn't have to deal with anymore of it. The amber line wouldn't block a bullet.\n\nHe looked to Jack, and shivered at the sight of the kid. Auspex showed the same thing as before, that the boy's aura had exploded into something massive, angry, violent, and bloodthirsty. It was a rage Damien could not begin to understand, could not put into context, and could not appreciate. It was the rage of a psychopath, of a broken mind that didn't think like a normal person. \n\nNo, it was the rage of the Beast, the sheer animal aggression and desire for violence that existed within him, and all Kindred. Except, only a draugr was so consumed with a need to destroy, and even then, draugr were mindless, stupid animals. Jack was unleashing the worst his Beast had to offer, and one of the most powerful creatures Damien had ever seen, the gargoyle Horror, was getting destroyed by it.\n\nIt was a strange sight, to see the small boy physically punch something with enough force to break steel. He didn't have the mass to anchor the force into the ground, and it launched him back, or in this case, down. Down gave the kid a better anchor, and the driving upward force the blood-coated man sank into the gargoyle's chest was so strong, it fell backward again, landing with a resounding crash. There was a dent in its chest.\n\nAnd Jack, wearing his crimson armor, laughed the entire time.\n\nDamien forced his eyes back to the hunters. Jack was busy with the gargoyle, Triss was wrecked, Clara was beyond wrecked, and Othello was out of commission. If the branch that skewered him had been any bigger, Damien would have feared for his second life. A small stroke of luck that it wasn't. A huge stroke of misfortune, that Damien was now on his own, and without his sword.\n\nElen drew symbols in the air with her knife, and the symbols stuck. As if she was cutting into the fabric of reality itself and making it bleed, her glowing red knife left burning blood-red lines in the night air. They burned, but not with fire. They burned the way flesh did, when it was sick and inflamed, when it was infected, or when it'd had time to fight against the damage of a wound. A dull, pulsing red that had no business glowing in the dark, but it did.\n\nAngela came in close to Jeremiah, and hugged an arm around the man's waist. She kissed the man's cheek, like a daughter might a father, and looked down at the book in the old man's hands as he opened it once again. Pain. Sadness. Worry. The host of emotions the old man carried, and shared with the woman next to him, were immense and uncountable. The trials those two must have faced to look at each other that way, was almost enough for Damien to sympathize for them. They were friends, together until the end.\n\nDamien did not like humanizing them, but there it was. Next to Jack, or the thing currently controlling Jack, Jeremiah and Angela looked like reasonable people, driven and determined. Only Elen continued to seem the monster.\n\nThe crows died by the hundreds. When one hunter stopped to reload, another started shooting, a seamless and unending stream of destruction. They had the magazines of their fallen hunters, and a small hole to cover. There was no getting in there.\n\nThe black powder seemed to block incoming matter high and low, which meant that now that the line was broken, he could get in from above where he'd broken it, from high above if necessary. The crows were figuring that out as well, and slowly expanding the height of their incoming swarm as they learned where the hole was. Some still hit the invisible barrier, and when a bird flies into essentially unbreakable glass at high speeds, it's a death sentence. But the crows couldn't be slow either, not with the four hunters unloading bullet after bullet, and waves of flame.\n\nDamien looked up and down the invisible hole through the barrier, and anchored his weight onto the balls of his feet and his fingertips. The crows were showing him the path, all he had to do was jump with them, or over them. He could jump pretty damn high, ten, twenty, maybe thirty feet high if he had the time to prepare his vitae. And he did have that time, the crows were providing it, them and the demon curse who was simultaneously controlling them, while fighting a titan.\n\nA quick glance down, a check of his pistol, the magazine, the safety, and he was off. He put every bit of strength into the jump, poured vitae into his legs until he felt his hunger rise, and he did the same for his Cloak, masking himself as best he could. This was what Daniel had been trying to teach him, multitasking, how to use Obfuscate while going on the offensive in combination with Celerity. A juggling act, and a demanding one, like juggling cement blocks.\n\nHe flew through the air, pulled his legs and arms in, and sailed between the walls of the invisible barrier. Impressively, he'd managed to get above the crows, too. Not so impressively, was how his high jump meant he had a hell of a drop to make. And, most unfortunately, it became obvious as he went through the barrier and into clearing, that the hunters had set up a trap.\n\nHe fell not too far from where the four hunters stood within the newer, smaller amber circle. It was wide enough for the seven of them to stand and move comfortably around some big stones, each a couple feet high, but not so large that it included the sacrificial trees of the clearing, or the stone altar that stood halfway between the trees and the clearing's center. Elen continued to write strange symbols into the air, and Jeremiah continued to read from his book. Engrossed as they were, Damien could have probably run up to them and started shooting, and they wouldn't have stopped what they were doing. Angela, on the other hand, lifted her head, and looked toward him. Not directly at him, but toward him and where he landed. It seemed his Cloak had not been perfect.\n\nStrange movement drew his eyes, and Damien, crouched low in the shallow grass, looked to the nearest tree, one of the trees with a sacrifice crucified upon its thick, twisted trunk of black bark. The body, naked and eviscerated, with three nails jammed through its limbs, looked at him. Cold, empty eyes looked at him, directly at him, and with slow, twitching movements, the corpse opened its mouth.\n\n\"There,\" one of the corpses said.\n\nAnother raised its head, her head, and looked at him. \"There.\"\n\n\"There.\"\n\n\"There.\"\n\n\"There!\"\n\nThe voices of the dead. The voices of cracked, dry throats, and withered tongues. The voices of bags of skin, with nothing inside them but drying organs. Raspy, harsh, and louder than they should have been. Like, screaming banshees.\n\nAngela wasn't looking at him, but near him, and through him. She was looking at where the faces were looking, and doing some quick and poor triangulation. Poor triangulation was enough, when she pulled out a shotgun, a sawed-off shotgun, and started firing in his general direction.\n\nHe dove to the side and around one of the trees, but not before one of the hunters near Angela unloaded a couple dozen bullets in his direction as well. While Angela missed, the other hunter managed to clip his leg, and he spun as he fell down. Pain, a mountain of screaming pain brought his Cloak to a quick end, and Damien yelled between clenched teeth as he slid behind the tree. Two bullets had caught his shin and calf, and he could see bits of bone through his pant leg.\n\nConcentrate. Fucking concentrate! You need to move. Be faster. Ignore the wound. Think!\n\nHe scanned the area around him, and ducked close to the tree as a swarm of bullets started to rip into it. Worse was the shotgun. Click, click, boom. It didn't damage the tree as much as a penetrating bullet, but it damaged a square foot of area, instead of a single spot. If Damien made one misstep, he'd take dozens of pellets to the body, and that was infinitely worse than a few bullets from a rifle cutting clean through him. He edged his head out from behind cover, only to have bullets tear through wood and bark near his eye. Three hunters remained to cover the hole in the barrier, and they tore through the hundreds of crows, until the birds' corpses decorated the black and bloodied earth like a garden of death. One hunter plus one Angela kept their guns pointed at him, and they were more than enough to keep him stuck behind the tree. \n\nExcept, if he was behind the tree, and the group of hunters were inside their small circle in the center of the clearing, that meant he could approach the outer line of black soot without exposing himself too much. It was a fat tree, the one he was hiding behind, big enough for a corpse to be crucified to it; damn corpse wouldn't shut up, yelling 'here here' over and over. But, if he backed away from it, and kept its thick trunk between him and the hunters, he could break the magic black line yet again. To what purpose, though. To get back outside the circle and render his efforts pointless? \n\nMovement rustled some bushes, and he snapped his head back to look into the darkness, beyond the black line, and out into the forest. Jack? No, Jack was still creating a ruckus, butting heads with the juggernaut. Clara, Triss, Othello? He doubted one minute was enough for any of them to recover. Aaron or Jennifer? Jennifer was guarding her hunter prisoners, and wouldn't disobey the cursed Jack. Maybe Aaron, but Damien doubted it. The man was logical, and didn't let whims of emotion dictate actions. Aaron had made a tactical decision and would stick to it. Fiona? Athalia? They were supposed to help, and he desperately needed it, but\u2014\n\nHarcourt stuck his head out from behind a tree. He must have snuck away from the destruction, and now stood behind and between the many standing trees near the invisible barrier. Maybe ninety degrees of the huge barrier was now between Harcourt and Jack. He must have been sneaking along through the dark and chaos for some time, and he was better at it than Damien would have assumed, for him to not notice the hunter.\n\nThe hunter met Damien's eyes, and showed his pistol. The pistol drew Damien's attention for only a moment. It was the hunter's eyes that struck Damien still with surprise. He recognized those eyes, he'd seen them in others, others who'd been wronged, who knew people who'd been wronged, and wanted a chance at revenge.\n\nElen had killed his friends. The people he'd trusted had killed his friends. Fellow humans, who'd fought beside him to kill the monsters of the night, had killed his friends, and left him alone in a den of monsters. The man was probably angry now, angry down to his soul, and hurting for a chance at payback.\n\nDamien dragged himself toward the man, doing his best to keep the tree between him and the hunters in their circle. They could step out of it anytime they wanted, and pour bullets into him, if they realized what he was doing. Considering things could leave the circle without issue, a spray of bullets could get Harcourt killed as well if he came into the clearing through the original break Damien had made. Right now, Damien needed an ally, and that meant he needed to make a new hole in the wall.\n\nHe cloaked himself as best he could, ignored the pain in his leg, and approached Harcourt. Once he was close, Harcourt could see him; a downward flick of the hunter's eyes, spotting Damien along the grass well before he should have proved that. Whether the man was trained to notice disturbances in the ground, or his tattoos and bracelets and whatnot allowed him to see Damien earlier than he should have been able to, Damien didn't know. Maybe he could ask him when this was all over, assuming they lived.\n\nDamien kicked out the black soot, and Harcourt came into the circle, quiet and slow. Where Damien had seen a goofy expression before, now he found only hardness. He'd be able to use this man, rely on him, and make an attempt for Jeremiah. Or Elen. Or Angela. Any of them. Better to not be picky at this rate. They were on their last legs.\n\n\"This is for Carver, you fucking assholes!\" Angry as the man was, and skilled as he was, he was not professional; professionally trained, but not professionally behaved. He stuck his head out from behind the tree Damien had been using, and began to unleash rage as bullets aimed for his fellow hunters.\n\nA gunfight in the darkness was difficult. No one had night vision, save for what the paranormals managed naturally, but the hunters had flashlights. All Damien had was a phone he could use for light, and he'd turned that off not long after entering the nightmare. Harcourt had a light under his pistol though, and he used it, getting down onto a knee and aiming it at the hunters as he fired at them. He had better form than Damien did.\n\nBut he didn't have a vampire's reflexes. Damien grabbed his shoulder, and yanked him back behind the tree after he shot thrice. Bullets shredded the side of the tree Harcout was behind, and the man cursed as he pressed his back to the wood. Lights shined along the grass on either side of them, like prison spotlights.\n\n\"Thanks. Fuck me, can't line up a shot in the dark. When I try and aim at them, I get light in the eyes.\"\n\nDamien nodded. \"Yes, but the hunters are exposed, and occupied with the crows.\"\n\n\"Not completely exposed. They've got a couple rocks to duck behind.\"\n\nTrue, they did, but not the rock with the slab of skin on it, the largest in the clearing.\n\nThe altar. If assaulting the hunters would be too difficult now that Damien was injured, without his sword, and running low on bullets, then maybe he should change his target. Adjust tactics, change the goal, adapt to the situation.\n\n\"Brace, what do you know about that slab of skin on the altar.\"\n\n\"Fuck me, I don't know shit.\"\n\n\"It has to do with S\u00e1ndor.\"\n\n\"The monster? Then I guess it's probably how Elen's got him under her spell. She had to carve symbols into his back regularly, you know? Like every few months.\"\n\n\"Any idea where the skin came from? Whose it is?\"\n\nThe man shrugged. The motion must have brushed outside the cover of the tree, as a few bullets shredded past the bark and skimmed along the skin of his arm. \"Fuck. Uh, if I had to guess, it's probably... his?\"\n\nS\u00e1ndor's skin. The Begotten merged with their Horrors in the nightmare, so how would one get his skin into the nightmare? Considering Elen seemed to be a master of flesh, she likely removed it from S\u00e1ndor outside the nightmare, in her flesh chamber, and brought it into the nightmare, all as part of her ritual to control the man and his connection to the Horror. Twisted and sick. And impressive. Damien doubted there were many witches or shamans in the world who knew such a spell, let alone had managed to perform it.\n\n\"If I were in good condition, I'd assault the hunters directly,\" Damien said. \"But\u2014\"\n\n\"They're not hunters.\"\n\n\"I\u2014alright, the... the...\"\n\n\"Traitors.\"\n\nDamien smiled. \"Alright. The traitors have those... corpses, on the trees, to guide their fire to me. I need a distraction, and a powerful one, if I'm to reach the altar.\" He gestured down to his damaged leg. \"And I'm afraid I won't be as fast as I'd like to be.\" The blasted leg was refusing to heal, and he knew why. Such constant use of his Obfuscate and Celerity left him drained, and running on fumes. He didn't have time for this.\n\nPart of him was tempted to drain the hunter in front of him. He didn't need to kill Harcourt, but a stomach full of the man's blood would go a long way to helping Damien out. But, no, the Kiss took a few moments, and it didn't heal instantly. The man was more useful to him conscious and armed.\n\n\"So, I need to keep them occupied.\"\n\n\"Yes, and\u2014\" A noise had Damien turning around, ready to shoot or tear open whatever was trying to sneak up behind him. Relief washed over him, as he looked down, and smiled at the two crows hopping along the grass. \"Mulder. Scully. You two are far too smart for your own good.\"\n\n\"The fuck?\"\n\n\"Jack's pet crows.\"\n\n\"He's got a million pet crows!\"\n\n\"These two are special.\" Damien nodded toward the hole in the barrier they came through, the second hole Damien had made, and gestured to it with his free hand. \"If you can summon what remains of your army to distract the hunters, I'd\u2014\"\n\nAnd they left. They didn't fly, probably putting two and two together that flying in this environment was a great way to invite a hailstorm of bullets. They hopped out of the break in the line Damien had made, cawed a few times, and... and came back. They stayed low to the ground until their breast feathers pressed to the grass, and lower, like nesting chickens. And they started to walk outward, each bird taking one half of the line, and dusting it apart as the waddled.\n\nIn the darkness, clouds above combined by a canopy of horrible branches, the birds were surrounded in nigh perfect shadow. And they were crows. They were black from beak to tail feathers, and from eye to claw. They were twenty feet away and Damien struggled to see them.",
        "\"Smart birds,\" Harcourt whispered.\n\n\"Indeed.\" They didn't have long to wait, but it didn't take long. The two crows went slowly, but slowly was quick enough to open the hole from two feet, to four, to six, to eight, to ten feet wide in short order. And once the hole in the barrier was spread wide, movement in the branches above signaled the invasion.\n\nHe'd underestimated Jack. As if the scene in the hospital, a display straight out of Hell, hadn't been enough to convince Damien that the curse possessing the boy was something absurd. As if seeing it summon a legion to lead their assault on the hunters' strange room of flesh hadn't been enough. As if watching the boy fight the gargoyle, a monster proving to be a titan of durability and strength, straight on hadn't been enough. As if learning that the boy was simultaneously guiding his swarm of crows, while fighting the giant monster hadn't been enough, now he could see that Jack had continued to summon yet even more crows than Damien had known about.\n\nIt'd gone past absurd, and into the surreal, that the curse could do this much. These hunters, or at least Jeremiah and his two female companions, had enough tools and skills at their disposal, that they could have defeated any nest of vampires in a city with enough time and patience. Elders would have perished to this ridiculous assortment of enchantments, rituals, and strange magics they had acquired and mastered. The professional military training of the hunters, the weapons, and the sheer drive of Jeremiah, would have bested all but perhaps the Prince or Jacob. The hunters deserved to win this fight, and to succeed on this hunt for Azamel. The only reason they wouldn't, was Jack, and the curse.\n\nJack had said there'd been a memory, something carried over from his curse, that showed a man of the cloth, a Kindred of the Lancea et Sanctum, sealing the curse inside the original carrier Susanna. That was something he'd have to look into harder, because the cruel reality that the curse was strong enough to do whatever the fuck it wanted to anyone, including the Prince, or the sheriff, or Jacob, was quickly sinking in. For now, it was helping them. Who knew what it'd want to do tomorrow night.\n\nDamien checked the slide on his pistol, and nodded to Harcourt. \"More crows will be joining us.\"\n\n\"More!?\" the man said.\n\nDamien nodded again, and ran.\n\n\"Fuuuuuuuck!\" Harcourt stuck out from behind the tree, this time from the other side, and started shooting. When he did, he unleashed the swarm.\n\nDamien didn't look back. He couldn't. Every ounce of effort, energy, vitae, and concentration was in this sprint. He could feel his punctured leg damage itself further with the harsh impact of his shoes against the dirt. He could feel his Cloak of Night envelop him. He could hear the voices of the corpses as they shouted in his direction, despite the Cloak. He could hear the crows erupt, a cawing horde that launched from their branches in such numbers, it drowned out the sound of Jack and his brawl with the gargoyle. \n\nHe felt vitae course through his limbs as his Kindred half used Celerity, breaching through normal physics and using the almost magical properties of Kindred blood to push him past speeds he shouldn't have been able to hit. But even so, the hunters began to shoot at him, two of them. The one with the flamethrower turned their attention, but not to him, thank Longinus. Fire poured toward Harcourt, and higher, up into the sky to rain down the liquid flame upon the black, feathered locusts that entered the clearing.\n\nScully and Mulder must have continued clearing away the magical black powder, because the width of the swarm grew, until Damien could not resist peeking over his shoulder. It was a black cloud, blurring with the darkness of the night. \n\nDamien forced his eyes back onto the ground ahead of him. Without his own light source, the darkness was enough for Kindred eyes to struggle to find footing, and he could not stop. Only the wild lights of the hunters scanning for him, and the wilder flames filling the air, provided light for him to use, and they tricked his eyes with fast shadows, as much as illuminated his path. As hunters unleashed bullets toward Harcourt, and bullets toward the two streams of crows flowing into their clearing, two continued to shoot at Damien. Celerity would not have been enough to avoid their gunfire, slowed as he was by his injury. And, the hunters, at least these four and Angela, were good shots. They kept their lights toward him, and every time one foot landed on the grass, they unleashed a spray of bullets. Only the chaos of the crows made his plan work.\n\nIf he ran at them, he'd be riddled with bullets. If he paused to try and shoot back at them, he'd likely be shot as well. All these actions that required him to ground his weight and change momentum weren't viable, with his leg threatening to cease functioning. But they weren't his goal. As long as he ran the perimeter of the clearing, staying far away from the hunters within its center, they wouldn't be able to get a good shot at him, and he'd be able to approach his true target.\n\nThe largest rock in the clearing was the fat one, easily five feet wide, and slanted, providing an inward-facing slope where Elen had placed the large flap of skin. The new circle they'd drawn in amber, to protect themselves from supernatural forces and bodies, hadn't been large enough to include it. While the hunters had a decent enough circle to move around in, maybe twenty feet across, with several large rocks within to use as cover, the enormous one that had to be an altar, was left beyond its embrace. Perhaps it was because it didn't sit directly between all the trees with corpses attached to them. It became obvious now, as he circled them as fast as he could, that the seven remaining hunters had drawn their circle where they did, because it was directly between all the trees used as crucifixes. Whatever they were doing, they were going to be in the center of it.\n\nIt was beyond frustrating. The hunters were mostly out in the open, and if given a moment, Damien would have been able to find a vantage point, and simply shoot them from a distance. But the barrier, the gargoyle, the rushed circumstance, the corpses announcing his position, it made everything a panicked mess of unknowns. All he could do with what he had left, was this.\n\nHe ran the perimeter harder, hard enough he felt the torn flesh of his leg rip under the flexing muscles. For all their tools, for all their skill, the humans were human. His body was damaged, his vitae was running out, but he was still faster than they were, and he still managed to pull up at least some degree of a Cloak. He was a blur for them, nothing more than a flickering shadow in the darkness that they were trying to catch with their flashlights. Trying, and failing.\n\nHe slid hard, good leg out in front of him, body twisted to face the hunters, and left hand down to catch his weight as he came to a hard stop. It gave his position away, and invited a hail of bullets, but they turned into sparks of collision as he put the grand altar rock between him and them.\n\nHe didn't stop for long. The crows above had managed to fully enter the clearing, so a tornado of feathers circled everything within, but they did not cross the amber line. Could they not? They were influenced by supernatural means, so, maybe they couldn't, or maybe they couldn't easily. They were trying, but as they swam down upon the hunters, they were forced to pull away, or pushed away, by invisible waves.\n\nThe fire raged. The hunter with the flamethrower didn't care that wood and grass burned, and they unleashed the stream into the air without limit. Birds caught on fire, and soon their swirling mass became a mix of black feathers and red flames. The smell of burning flesh and cooking meat filled the air, and Damien grimaced as he ducked down, avoiding bullets that skimmed along his protecting rock altar, while burning wings flew overhead. The grass, the forest, it resisted the flame, as if it didn't belong. It didn't. Would the nightmare chamber heal, once the chaos was done? Maybe it would, but for the moment, the fire was winning that battle, and the birds were only making it worse.\n\nA loud crash summoned his gaze. Behind him, Jack continued his fight with the nightmare's owner. It looked silly when only glanced at for a second, a tiny boy fighting a colossus, but Damien spared an extra second to watch longer, and the cruel, absurd, and visceral reality sank it, of Jack's disturbing display of power. The gargoyle had slammed Jack into the invisible barrier again, and was punching him over and over, one hand braced against the barrier, another against the ground, while it used two of its enormous fists to punch the boy like a furious bread maker.\n\nJack shrugged the blows off after taking five of them, and met one of the punches with his own. Small as he was, his punches were to the gargoyle as a framing hammer would be to human flesh, and again Damien could hear an audible snap as something inside the titan cracked. The following roar was deafening, but quieter than Damien had predicted. His hearing was starting to suffer.\n\nThe cursed boy looked over his shoulder to the clearing, and noticed Damien's position. \"Damien! Do it!\"\n\n\"Fucking touch that,\" one of the hunters said as they reloaded their magazine, \"and I'll fill you with so much lead, you'll\u2014\" And down they went, the woman letting out a screech as she fell onto her stomach.\n\n\"Fuck you, bitch!\" Harcourt's voice, followed by more gunfire, his own, and the return fire of the hunters.\n\nDamien crouched low, and peeked around the altar. The woman was getting back up, but she was groaning and fighting against pain. No doubt she had a bulletproof vest under her clothes, otherwise she'd be screaming in pain, or dead. But she struggled to her hands and knees, still alive, and still with one hand on her rifle.\n\nBut it was a few seconds of less bullets firing at Damien, and that was enough for him to jump up onto the altar. It was a large stone, very large, and the slope the skin tapestry was laid upon was on the other side, pointed toward the center of the clearing. It was too wide, too tall, too fat for him to simply reach around and grab the ritual item. Perhaps, if he hadn't been injured, he could dash around it, or if he had the vitae, or if the hunters didn't have their strange tools, or if the corpses upon the trees weren't twisting their heads to stare directly at him, he could have snuck around it. Unfortunately, all those things were happening, and screwing this up wasn't an option.\n\nThe skin flap was large, and this close, it was much easier to tell what skin it was. It was the skin of someone's back, a person's back. From the neck to the tail bone, with some of the waist, and a bit of where the arm and shoulder met, all of the skin had been surgically removed from someone, and tied down. Human skin was far easier to tear than most animal skin, and yet Elen had managed to remove it all from S\u00e1ndor, he presumed, and spread it with tiny pegs, like she was tanning leather or making a drum. It was tight to the rock, to the point Damien could see the bumps and grooves of the mineral underneath the skin.\n\nThe symbols carved into the skin had a subtle glow to them, the color of blood, same as Elen's knife. He recognized them, or at least the style they were written in, the blatant occult symbols that he'd seen used by Elen at the sacrifice sites. Why she didn't do those sacrifices here, or in her flesh chamber, he didn't know. Perhaps the haruspex had to be done in the location where the information needed to be divined. Or maybe\u2014maybe he didn't have time to be wondering.\n\nUpon the altar, he reached down, set his fingers into the spread skin, and ripped it apart. \n\nThe sensation of his fingers digging into the skin was met with the sensation of bullets hitting his chest. Whichever hunter it was, he didn't know. The one on the ground was still getting up, and the one with the flamethrower was doing their best to kill the crows; more than that, he now realized as metal tore through his chest. They were spreading the fire preemptively, creating walls of it in an attempt to stop Damien from getting in close, and any future Kindred attempts.\n\nIt was also sealing them in a ring of flame. Humans could run through fire, far more easily than a vampire, but it wouldn't be easy. They'd get burned. Unless, they were bunkering down even harder?\n\nHe couldn't finish the thought. The thunk and thud of bullets hitting things inside him announced he'd been caught, and as he fell back, he stared up at the swarming birds, many burning and dropping black, flaming feathers around him. There was a peaceful moment, a single second as he fell through the few feet of air before hitting the grass waiting for him, where he glimpsed the night sky above. There was no canopy in the clearing, and through the swirling mass of black feathers and red flame, through the clouds above, he could see the stars.\n\nThe silence that followed, as he landed in the grass, was beautiful. The gargoyle stopped roaring and shrieking its alien sounds. Jack stopped his battle cries and taunts. The hunters stopped firing their weapons, Harcourt included. Even the crows, many dying horrible deaths, were shocked to silence, as a great, invisible wave of release poured out through them all.\n\nDamien had broken something. Tearing the skin apart had broken something, or undone something, or ended, or freed something. They couldn't see it, or hear it, but they all felt it, like a vibration in the universe that had exploded outward, without making any vibrations at all. Whatever ritual had been done upon the disgusting object, had been undone.\n\nDamien tilted his head back, and looked out toward the invisible barrier. On his back with his head tilted, everything was upside down, but it was clear to see that Jack was standing by the invisible barrier, looking his way. So too was the enormous monster, the titan, the Horror. There were obvious dents in the gargoyle's body, places where Jack had broken bones; not that that seemed to matter to the creature. Wherever Jack had damaged it, its body had put itself back together well enough to keep fighting. Except, now it no longer fought. It simply stood there, staring at Damien, and the altar he lay by, its great width between him and the hunters.\n\nThe creature was the first to break the silence. It started, by slamming the whole of its weight into the invisible barrier, shoulder first. Again, and again, and again, until the entirety of the nightmare was trembling under the power of its unknowable rage.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Antoinette~~\n\n\"You've... taken care of him, at least,\" Azamel said, frowning as Mark pushed her near the open doorway of the cell, but no further.\n\nS\u00e1ndor knelt as he had for some time now, arms held out to the sides by chains. His head dangled, but his naked body showed no signs of deterioration; she had made sure the thralls who cleaned him checked to see if he started to suffer biologically. He did not. Begotten, or at least this particular Begotten, were a resilient breed, compared to most living creatures.\n\nThe IV in his arm had been changed recently, as had the bucket kept between his legs. The air vents in this particular part of the tower were extremely limited in size, but well powered, enough to keep the air from growing stale or grotesque with the smell of bodily waste. The man's dark hair had begun to grow, as did his beard, hiding what had once been the pleasing face of an attractive man in his twenties or thirties, fit and lean, and perhaps Russian, or Eastern European.\n\n\"You may examine him, if you wish,\" she said.\n\nThe two monsters looked to each other, to her, and then the many symbols that had been etched into the floor of her prison.\n\n\"I can feel from here,\" the old woman said, \"that this room is... cut off. How did you manage that?\"\n\n\"You know very well I will divulge no such information, Azamel.\" Antoinette almost rolled her eyes, but did not. It would not serve her to make an enemy of the frustrating woman, though she would not part with her secrets. Her experiments into penetrating the Gauntlet had taught her methods of countering her own efforts; lessons learned from failures. It had taken many decades to learn that she could seal a room so that those within would not be able to reach out from the physical realm, and into whatever realms awaited beyond. Or rather, she had concluded that she could seal a room off from the Shadow realm, and the Begotten had been a test to see if it would also seal creatures off from other realms.\n\nS\u00e1ndor was the second creature she had placed into the room's confines, to learn if its walls and symbols could prevent a prisoner from 'reaching' out from the physical world. The first had been a necklace, obsessively haunted by a spirit. The experiment had worked, cutting the spirit off from the Shadow realm, leaving them without a way home. In the end, she had let the spirit go free.\n\n\"Well, either way, I am not stepping foot into that room.\" She shook her head slowly, frowning as she glared at the chains holding the man. \"Were the chains necessary?\"\n\n\"I do not take unnecessary risks.\"\n\n\"Uh huh.\" The old monster rolled her eyes, and motioned toward the prisoner. \"He's separated from his Horror.\"\n\n\"Separated?\"\n\n\"The other half of ourselves exists within the dream, vampire. And it's still there.\"\n\n\"It's not with you?\"\n\n\"My other half is with me, and within the dream.\"\n\nUnderstanding such a paradoxical statement was difficult. If Azamel's Horror, the monster of the nightmare, was in the dream realm, and yet with her at the same time, how did they interact? Did they overlap each other? Often, she thought of the Shadow realm as the second side of a coin, but even that comparison invited the mental separation of the two realms. It was more accurate to consider them as existing within the same space, and under the same frequency, but offset. And if the physical and spirit world existed in the same place, with frequencies offset from each other, there was no reason other realms could not do the same.\n\n\"I have summoned Daniel,\" Antoinette said. \"He will accompany us into your... nightmare realm.\"\n\n\"Of course.\"\n\n\"And I would... request,\" \u2014the word tasted bitter\u2014\"that we leave as soon as possible.\"\n\n\"Yes, I'm sure you do.\"\n\nAntoinette could not hold back a small snarl. \"My love's life is in danger.\"\n\n\"Yes, it is. Though, considering the strength of the curse, I doubt the danger is great.\"\n\n\"And this hope you have, that Jack or his companions will free S\u00e1ndor of the spell that binds him, is a random hope. A whim.\"\n\nThe old woman shrugged, and so too did Mark, as if to mirror his boss's demeanor. A yes-man, Antoinette was sure.\n\n\"Yes, it is.\"\n\nAntoinette stepped in front of Azamel, putting herself inches from the open door of her cell, and blocking Azamel's view of the incapacitated Begotten.\n\n\"Jack fights a man you brought to my city, that hunts your head, and here you stand... sit, defying me.\"\n\nMark frowned but stepped back a little, taking Azamel back a foot with him. Whatever bravery the man had, she had seen none of it. Every pore in her undead body told her Mark was a disgusting creature, not to be trusted; not for any traitorous intent, but rather, something about him told her Beast that the monster before her was inherently vile. Never trust a scorpion, who wishes to cross the river.\n\n\"Threaten me all you like, vampire, my offer stands. We wait here to see if S\u00e1ndor is freed by your boy toy Jack.\"\n\nGrinding her teeth, Antoinette looked past Azamel as she heard the quiet clop clop of a man's shoes on her marble floors. Daniel stepped into the hallway, stone expression locked onto Mark and the monster in the wheelchair.",
        "\"Why do you believe S\u00e1ndor will be freed by Jack tonight? Much of this madness revolves around that assumption.\"\n\nAzamel looked over her shoulder as Daniel joined them, and annoyance crept into her cracked, hanging skin. \"Jeremiah will go to ground. Jack has attempted on an assault on him once before, and the attack took Jack into my kin's nightmare. I know Jeremiah has been consorting with this shaman, Elen, and I... know more, about Jeremiah's defenses, than he realizes.\" The old woman looked up over her shoulder again, this time at her escort Mark.\n\n\"You have managed to penetrate the man's defenses?\" Rage once again ran through Antoinette's limbs, until her fists trembled at her sides. \"How long have you been playing this game with Jeremiah, Azamel? How long have you been able to attack him on his ground, and yet, you invite his pursuit, in hopes of obtaining this 'inheritance' you so desperately want?\"\n\nThe old woman scoffed, coughed, and shrugged again. \"Jeremiah and I have jousted with each other for a long, long time. We've been able to attack each other and go for the kill for a long, long time as well. Jeremiah has been trying to find a way to do so without getting himself killed in the process. I've been trying to find a way to kill him in such a way that the battle will be legendary, in the literal sense, made into legend, never to be forgotten.\" She clenched and unclenched her hands on the arms of her wheelchair, and Antoinette almost winced at the cracking sounds the frail creature's hands made. \"But as I said, time has caught up with me, and now I... do what I can, for my fellow Begotten.\"\n\nAntoinette stepped away and began to pace, slipping her hands into the small of her back as she looked down, frowning. With Daniel at her side, she was more than confident that if the old woman presented her with an opportunity to attack Jeremiah, now that the hunter was distracted with Jack, she could deal with him. She and Daniel could kill him, Angela, and every human the man kept at his side. No matter the tools he had available, there was little the hunter could do if she caught him unawares.\n\n\"Why do you devote yourself to a stranger?\" Antoinette said. \"You do not know this man.\"\n\n\"I know he's a slave, and that he's kin.\"\n\n\"Is that all?\"\n\n\"Do I need another reason?\"\n\nAntoinette paused. Yes, she needed another reason. People did not simply risk their lives for strangers, even those of the same kind. Vampires certainly did not. Then again, Azamel had said that she did not consider Kindred to be the same sort of monster as her fellow creatures of nightmares. Vampires often avoided each other, as if driven by instinct to be solitary, and to fight each other for territory and food. Were nightmare monsters creatures that actively sought others of their kind? Werewolves generally found themselves in packs, after all.\n\n\"A leech would never understand,\" the old hag said with a small, dismissing wave, confirming Antoinette's suspicions to some extent. \"You might be satisfied, hiding in the millions of humans walking around, a wolf among sheep, but we Begotten are... primordial, Kindred. We are ancient, and what defines us, separates us from the world.\" Leaning toward her, Azamel licked her teeth loudly, twice, before squinting a single eye at Antoinette. \"How much do you know about Athalia?\"\n\nAthalia. Antoinette knew little of the woman, honestly, except that she had once lived in Dolareido, left, and returned with Azamel a year ago. Though perhaps, the trouble the woman suffered, the curse of her existence, were problems Daniel knew of. She looked to her sheriff, and waited.\n\n\"I know she's... what you monsters apparently call Eshmaki, a monster of darkness. I also know that she hungers for... ruin,\" he said.\n\nAntoinette raised a brow as she looked at her old friend. Ruin? He had never gone into depth about his conversations with the woman, leaving Antoinette to assume the woman was benign. This was the first hint that, perhaps, her sheriff had reason to consider Athalia a threat to Dolareido.\n\n\"Elaborate,\" Antoinette said. It was not a request.\n\nDaniel adjusted his glasses, and his face set in stone all the more, as if preparing to hold his tongue. She knew the man had a strange affection for Athalia, but never to such an extent that he might defy her. Would he? There was a moment's hesitation, several seconds of deathly silence, as the sheriff met her eyes, and considered.\n\n\"What he means,\" Azamel said, sparing the man, \"is that Athalia needs to destroy the safety others feel, in order to feed. We Begotten feed on fear, as we are creatures of the nightmare, as you know. How we create that fear, and in what form we seek that fear, is different for each hunger a Begotten may be bestowed, for all time. Fiona, bless her young heart and old soul, feeds on the fear people feel when they are being pursued or punished for their transgressions. Her Horror, a strange, ancient Horror, lost to the realm of nightmares, unfettered and wandering the land of our Mother, emerged from the darkness to enter such a lovely girl. It hungers for the fear of the guilty. An easy craving to satisfy, as long as she isn't too gluttonous.\n\n\"Athalia hungers for the fear people feel when their sense of safety is ruined, obliterated, ravaged. When the walls you cherish and barricades you defend no longer provide you with a feeling of security, as they become destroyed, compromised, or left in shambles by her, she feeds upon the fear that follows.\" Glaring, Azamel gestured for Mark to turn her chair, and he did, pointing the old woman directly at Antoinette. \"Imagine, vampire, how difficult it is for a woman such as her, to have a life. Every moment of her existence, she struggles with a need to destroy the safety of others, to leave them feeling vulnerable. While a leech such as yourself must feed on the blood of the living, it is an enjoyable act, and sluts like yourself have built an entire city on its pleasures. You're a leech which people line up to let bite them. But no one enjoys feeling the security of their job, their home, or their lives, being shattered.\"\n\nAntoinette folded her arms, and tapped fingers along her bicep. It was a sad tale, true, and if Athalia had come to her seeking her help, Antoinette would have listened to her plight.\n\nAlas, be truthful with yourself, Annie. You would have listened to her, but you would not have helped her, beyond insuring the Kindred of the city knew to give her a wide berth. Dolareido is your concern, as are the Kindred within it. Begotten, Uratha, and other strange creatures, are unknowns, and not a part of your plan for a utopia.\n\n\"You vampires,\" Azamel continued, \"can frenzy, correct? You can lose control, and give into the Beast.\" Antoinette nodded, and glanced to her sheriff. His gaze remained steady, while hers did not, balancing annoyance with Azamel, and annoyance with Daniel for his hesitation seconds earlier. \"Your Beast is contained. It's inside you, a part of you. It is something that has latched onto your soul, and dragged it down into the muck. If it wants to act out, it has to go through you.\" Chuckling, the old woman lifted a hand and flicked it back at Mark, hitting the man's stomach playfully. \"There's a reason vampires are considered damned, Prince. If ever a creature was close to Hell, it's the vampire. You should give more credit to the Lancea et Sanctum.\"\n\nThe Voivode would not grind her teeth, or bare her fangs, or clench her fists, or give any indication this infuriating woman was, indeed, infuriating. For all Azamel's arrogance and clich\u00e9 need to tell stories, the old woman was both sharing information Antoinette ached to know, and also held the key to rescuing Jack tonight.\n\n\"The Beast is a taint upon our souls, you say.\"\n\n\"Hah, yes.\" Again the old woman reached for a cigarette from her breast pocket, and sighed as she found none. \"I can see it, but I cannot reach it easily, locked away as it is where souls reside. For us Begotten, our Horrors are not so... limited. Our Horrors are creatures of the Dream. Just as a human's soul resides within a chamber within the person, a place we cannot physically enter, a place that exists within a different realm and state of being, a Begotten's Horror resides within a chamber as well, a place sealed off from intrusion. It has devoured our human soul, vampire, replaced it, and elevated us to myth, and legend.\"\n\n\"And yet,\" Antoinette said, \"intrusion into these nightmare chambers seems to be a common act, this past year.\" She let the statement about a soul slide by, ignoring the overwhelming urge she had to pounce the old woman, and demand answers. A soul. The old woman knew much about the soul, that such a thing existed, and apparently, of a chamber it resided in. Antoinette's own studies, and the studies of the Ordo Dracul, had mostly confirmed the existence of a soul, but to define and understand it, were beyond their abilities.\n\nThe old woman coughed, and made no attempt to hide how much Antoinette's statement infuriated her. \"Consider the many, many, many stories that exist in all cultures, of entering someone's mind, and finding the person's soul, or spirit, or true self. Such tales often describe the journey, or the interaction, and share of the environment. That environment, that realm, is not of the Dream, but it is where the soul resides. Sometimes the soul can leave. A human who sleeps deep, very deep, who experiences life-altering dreams, has a soul \u2014 if it is truly their soul that does this, or a projection \u2014 with a tendency to drift from the walls of its realm, and into the Dream, where it may stumble onto many things... including us.\n\n\"And, in a similar way, our Horrors may leave their chambers while we sleep. Unlike a human, our Horrors hunger, vampire. They hunger for fear. They swim through the seas of humanity's consciousness, swim deep, and find the chambers of human souls. They leave nightmares, grand and terrifying nightmares. And like any predator, they return to places where food has been found.\"\n\n\"I do not\u2014\"\n\n\"The more a Begotten denies the hungers of their Horror,\" Azamel interrupted, \"the stronger the Horror becomes, and desperate. And Athalia denied her Horror for many years, feeding it only enough to keep herself sane. She gave birth to a girl, a human girl, vampire, something you will never be able to appreciate. And for years, Athalia fought to keep her Horror under control, to keep it out of her life, only for it to feed upon her daughter once her tiny eyes closed for sleep. Nightmares, vampire, horrible nightmares, visited upon a small girl, again and again and again. Imagine the guilt, leech, imagine the pain Athalia felt, wanting nothing more than to take care of her little girl, and yet every moment she spent with her, she was the greatest source of pain in the girl's life. Imagine the sorrow, at being forced to leave a daughter you love at an orphanage. Imagine the agony, at knowing your daughter's mind has been left in ruins, ruins no amount of years can repair.\n\n\"What comparison is there between vampire and monster, Prince? In what possible world, could your pathetic need to drink blood and hide from a giant ball of fire in the sky, compare to that struggle?\"\n\nThe single second of chuckling Azamel had shared with Mark was long gone, and now, there sat only an old woman, a creature who had seen troubles and suffered troubles well beyond the scope of Antoinette's experience. Antoinette was, as the monster said, a vampire. Her struggles were internal, forever battling the desires of her Beast, and the weakness of her Humanity; clich\u00e9, but true. Despite the very real battle of resisting her Beast, and maintaining a balance of her human and beastly desires, it was always a battle she was able to win, and easily at that. How long had it been since she had suffered famine? Not since the early years of her arrival in the village that became Dolareido, had she been concerned with unleashing an unwanted frenzy. For a Begotten to both forever battle their hungers and their unusual needs, but to also have their soul \u2014 or rather, Horror \u2014 hunt through the minds of nearby kine, and to bestow nightmares upon them in order to feed upon their fear, she could indeed not imagine.\n\n\"I do not deny that some Begotten suffer a burden greater than ours,\" Antoinette said. \"And, yes, I can understand that a shared burden of such magnitude, can create powerful companions.\"\n\n\"Family, vampire. We're a family. Me, Athalia, Fiona, Mark here, and even this man S\u00e1ndor. Hell, even you vampires, and the wolves, are distant cousins. We don't really want you around, or at least I don't, but I'll invite you to join us for Thanksgiving, if you agree to civility.\" Sighing, Azamel shook her head again, and gestured to the man chained up. \"This cell blocks a person off from other realms. Why hasn't it blocked him from the spell?\"\n\nKnowledge the old woman did not have. Finally, a dent in her relentless ego. But what little joy such an admittance brought Antoinette was short lived. She did not have the answers either.\n\n\"This room, as you said, prevents a person from reaching across realms. If Elen's magic does no such thing, then I can only assume that the symbols I have placed upon this Wyrm's Nest do not affect magical energies.\" Magical energies did not do justice the mystery that was magic. Mages existed, of that she knew, as did several elders, but their nature, their motives, such things were as secret to her as the Ordo was to the other covenants; they and it existed, but whatever happened behind closed doors was entirely unknown.\n\n\"If he begins to speak, will you release him?\"\n\nThe reality of what Antoinette had done to S\u00e1ndor wormed its way into her mind. Azamel insisted that, while a vampire's soul was tainted by the Kindred infection, becoming 'damned' as it were, it remained within a chamber quite connected to the human. She also insisted that the Horror, an entity that had apparently replaced, or devoured and replaced her own soul, was a creature that existed parallel with her in another realm as well. Similar to a normal soul, and yet different, as it came from a different realm, a realm her cell rendered inaccessible.\n\nShe had cut the man off from his soul. The ramifications of such an action, she could not begin to consider. Perhaps that was the true reason Azamel was desperate to have him released; though, she did not exclaim such. The mystery of the soul was ultimately a puzzle for another time.\n\n\"I will, if you take me to where you believe Jack is,\" she said. Azamel nodded. A deal struck. Now, to wait, the most difficult task in the universe.\n\nDaniel frowned at her. Frown was, perhaps, too strong a word for the look he gave her, but nonetheless, she recognized the disappointment and annoyance on his stone face. Well, she was disappointed in him, and her frown was a touch less subtle, enough that the man was the first to look away.\n\nThey did not have to wait long. How Azamel could have predicted this, Antoinette would demand to know later; there was no way, in any statistical sense, Azamel could have simply guessed correctly. But sure enough, after fifteen minutes of waiting, they felt something. She did not know what she felt, what the strange sensation was, but a fleeting breeze flowed over her. The air did not move, but it was a breeze nonetheless, or at least the feeling a breeze would give. It washed over her, and the others judging by their reactions, the feeling of something being released, tension being loosed, a wire snapping, or a window being opened. It was a tension she had not noticed before, and only now that it was gone, did she notice its absence.\n\nThe four of them looked to each other, standing in the marble hallway, before they looked to the cell and its open door. The man stirred.\n\nDaniel drew his sword, and Mark turned around in an instant, facing Daniel, hands at his sides, ready to do something. But Azamel reached behind her, thumped the man on the hip, and rolled her wheelchair closer to the door again. She did not enter the cell.\n\n\"S\u00e1ndor,\" she said. \"Are you awake?\"\n\nAntoinette stepped into the cell, her sheriff behind her, sword still drawn, and she peeked around at the man's back. The large symbol was, indeed, gone. The chances it had healed in this particular moment were astronomically low. She had no choice but to accept that Azamel and Mark had spied Jeremiah's defenses, and knew where he would go when chased by Jack, his friends, and the Strix curse.\n\n\"I... I...\" Slowly, with the obvious discomfort of someone fighting against stiff joints and borderline atrophy, the man lifted his head, and looked to Azamel. \"Y-You... you're...\"\n\n\"You know me?\" Azamel frowned slightly, before Mark came up behind her and again set his hands upon the handles of her wheelchair. \"I suppose you would, what with Jeremiah capturing you, and... Yes, I am Azamel.\"\n\nGroaning quietly, S\u00e1ndor twisted his head around more, taking in the sights and digesting his environment. For a moment, Antoinette expected the man to begin to panic. But no panic came. Instead, the man looked up to her over his right shoulder, Daniel from over his left, and then back to Azamel.\n\n\"I remember,\" he said. \"I... remember... everything.\"\n\n\"Bien. That saves us much time.\" Antoinette came around and looked down at the man. Blue eyes, with a hint of gentleness, buried under exhaustion and turmoil. She felt for the man, she did, but she cared far more for her city, and she would not take unnecessary risks. \"You understand that you were captured by Jeremiah, and have been used by him and his shaman woman, as a tool?\"\n\n\"Yes. Yes, I... remember what Elen did to me.\" He shivered, quite visibly, enough to rattle the chains. He had a deep voice, once he added some volume to it, enough for quiet conversation. \"I remember that... that kid, Jack. Angela, she... she was obsessed with revenge, and... and...\" His head shot up, and he yanked on the chains around him. The sudden motion was enough for Daniel to swing his sword with a snap and place it against the monster's throat, forcing his cessation. \"They're in my lair! I can feel them... see them... I\"\u2014again, his head snapped around at the room that held him\u2014\"I can see them, but I can't... burrow... from here. There's a... wall. I'm blocked.\"\n\nAntoinette felt a kernel of relief within. Her cell did not separate the man from his other essential half then, only limited his ability to enact his will from within her prison. Useful information. If she locked away creatures of a strange nature in the cell, she now knew there was a likely chance they would still be able to feel, sense, and perhaps communicate with supernatural means, but not leave the cell, or use abilities from the other realms within it. She could not wait to share this knowledge with Elaine.\n\nSpare your academic obsessions for later, Antoinette. Deal with the current situation, immediately.\n\n\"You can see what your Horror is doing?\" Daniel said.\n\n\"Y-Yes. That's... we... it's normal, for us... monsters.\" After a quiet groan, the man lowered his head, and started fighting for air. He was far more exhausted than he should have been.\n\n\"We merge when we are in the Dream,\" Azamel said. \"The relationship we have with our Horror is far more complicated than you, and your soul. Sorry, tainted soul.\" A grin from the old woman sealed the insult, and Antoinette struggled to keep from showing an angry fang.\n\n\"What do you see?\" Antoinette said, and she reached down, took the man's chin, and pointed his face up at her. There was no time for softness. Action needed to be done, now, and if she had to be stern with this broken man in order for such action to occur, then so be it.\n\n\"I... I'm att\u2014It's attacking... Jeremiah. Jack's there. So is... a werewolf woman, and some other vampires, one with... some crazy teeth.\" The man shivered again, but made no effort to look away from Antoinette's eyes. He looked defeated, weary, and guilty.",
        "\"Daniel,\" she said, \"release him.\"\n\n\"Are you sure?\"\n\nAgain she met her sheriff's gaze, and again, a momentary, quiet battle raged between them.\n\n\"Do it.\" She tried to keep the ice from her words, she truly did, but the situation demanded expedience, and her growing frustration with her sheriff had stripped away the single grain of patience she had left.\n\nAfter half a second of hesitation, Daniel sheathed his blade, and began undoing the shackles that bound the helpless Begotten. Antoinette removed the IV herself.\n\n\"Thank you,\" Azamel said. For a moment, Antoinette thought the woman may have looked to slip some defiance or insult in her words, but she did not. Sincerity was not a tone she expected to hear from the monster, but there it was.\n\nOnce S\u00e1ndor was free of his shackles, Daniel set his right hand upon the hilt of his sword behind his neck, but did not draw it a second time. His left hand slipped under the tired man's arm, lifted him up with grace and strength, and helped him out of the room.\n\nIt was clear to Antoinette that her sheriff would respond, if S\u00e1ndor acted peculiarly, once he stepped from the cell. If he attempted to run, swing a fist, or even so much as cough too loudly, the man would lose his head before he noticed Daniel was moving. And he did do something strange, enough for Daniel to draw his sword an inch from his sheath: the man gasped, and his eyes opened wide, like a man seeing daylight for the first time in years. He was no longer under the protection and limitation of her cell.\n\n\"I have to... to get back... to my lair.\" He leaned forward, coughing, struggling to regain his sense of balance. If not for the man ready to cut off his head, he would have fallen to his knees. \"Oh god, they're... they're... doing something. I don't know what. I have to get back... get back and stop him. Stop him, kill him. Kill him. Kill him. Kill him.\"\n\nAntoinette eased her weight onto the balls of her feet, as strength returned to the man before her. As if stepping from the cell had reattached the thread of life to him, his sense of balance returned. His eyes opened wide for another moment, before setting hard, glaring into nothing. His hands tightened into fists at his naked sides. Muscles flexed along his lean-but-muscular figure, and she could hear the clench of his jaw threatening to break his teeth.\n\n\"S\u00e1ndor,\" Azamel said, \"are you\u2014\"\n\n\"The vampire in the coat, with a sword, he broke the ritual.\"\n\nVampire, coat, sword. Damien, no doubt.\n\n\"You can see the contents of your lair? All of it?\" Antoinette said.\n\n\"No. I can see what I can see. I can see what it can see. I can feel what it can feel. I have to get back, merge, and guide it. It's... it's lost, without me. It's just a... just a gargoyle. I have to... get back.\" The man raised his head, as if to yell at the ceiling, but something stopped him. \"I... can't control it. Jeremiah has driven it beyond... my reigns. It's starving. It's furious. It's...\"\n\nEvery word, Antoinette wrote within her mind, each letter accompanied by a picture of the moment. S\u00e1ndor's face had looked up and into nothing again, as if he truly was somewhere else. A telepathic connection to his Horror, perhaps? Not telepathy she supposed, now that she considered the implications of that. A different connection, a special connection, if Azamel were to be believed, something as deep and mythic as the connection between a human and their soul.\n\n\"Then let's go,\" Azamel said, nodding, and gesturing to Mark with a small raise of her wrinkled hand. \"All of us. I will meet Jeremiah face to face tonight. Who knows, I may well live through the experience.\"\n\nAntoinette shared another look with her sheriff. Neither of them were anxious to do something as reckless as enter another realm. Both of them, ancient and set in their ways, had both feet firmly set on the physical Earth, despite their devotion to studying the very matter of other realms. To literally enter another realm, to feel the territory of creatures outside of flesh and blood, was a dream she had long held, but had never experienced. Neither had her most trusted companion.\n\nWas she ready, to test her second life so wholly? To fight monsters and other vampires in the streets and walls of her city was one thing. To fight trained professionals \u2014 kine, but still professionals \u2014 in a realm of dreams, a place she had never set foot, was another thing entirely. Daniel did not want to go, she could see that. It was not that he was unwilling to risk his life for her. Far from it, she knew very well the man would die for her, for duty and for friendship. But the man did not agree with who Antoinette had become as of late, someone willing to put her emotions before her logic. To enter a dream realm, a nightmare realm at that, was not a logical choice.\n\nShe had spent centuries being logical. She had long earned the right to set cold numbers aside for a night, and let her heart lead her for once. If she had to tear the entire nightmare realm apart with her bare hands to save her little Ventrue, she would. \n\n\"Very well,\" Antoinette said. Rotating her shoulders for a moment, she kicked off her heels, tested the floor with her toes, and centered herself. Vitae, through her limbs. Sensations, air on the tiny hairs of her body, scents in her nostrils, tastes on her tongue, the breathing sound of the three nearby Begotten, and the quiet light of her hallway. Her senses awakened, heightened, increased in sensitivity and precision, as the Beast also awoke from its slumber.\n\nShe was ready for battle. Not since Lucas had come to her door with several dozen Kindred, armed with weapons of all sorts, and Theban sorcery besides, had she prepared herself in such a way. Tonight, she would rip the bodies of hunters apart, and see her lover returned safely; if her lover left any alive. The curse was a deadly thing, and she feared the sight she would discover, once she found him.\n\n\"How do we... enter your lair?\" Daniel said to the man.\n\nSandor reached out, and set his left hand to the marble wall beside him. For all his returned desire, his body was weak, quivering, and as he looked around the hallway, Antoinette could see how it was fury that kept the man on his feet. She did not blame him. To be enslaved to a spell must have been a horrible fate.\n\n\"This place, these walls... of marble... I can bring my lair here.\"\n\n\"Can you?\" Azamel said. \"I would struggle to do a thing like that, Ugallu. This tower is built on a place of power.\"\n\nThe two vampires did not flinch at the mention of the unknown word, Ugallu; hundreds of years of experience had long taught her the value of pretending to not realize, notice, or know something. A place of power, on the other hand, Antoinette knew well. She had chosen this location for her tower for a reason. Something deep in the Earth, somewhere buried, something that scarred the land had left its mark before her arrival to Dolareido. It created, as she found out later, a locus of a sort, a gathering of essence that spirits were drawn to. She had harnessed it, and used the way it thinned the veil between realms for her experiments. A Wyrm's Nest.\n\nS\u00e1ndor stood up straight, offered Azamel a small, perhaps unnerving, angry grin as he cracked his knuckles, and tilted his head to the side until his neck cracked as well. It echoed through her hall of stone.\n\n\"Watch me.\"\n\nAntoinette stared at the naked man's back, waiting for a sign that this creature, this so called gargoyle, would betray them, or maybe that his words would spark a moment's concern on Azamel's face. But Antoinette found only surprise on the old woman's visage. Azamel was impressed by the gargoyle, if he spoke true. That, was startling. How strong was this man?\n\nS\u00e1ndor stuck his hands out to the side, and squeezed fingers upon open palms. Without so much as a second's buildup, the world around her began to change. She blinked several times as she slowly turned around, instinct guiding her to put her back to Daniel's. With her to guard his back, and he hers, they were safe, or safer, from the inevitable violence to follow. Violence, and insanity.\n\nShe tried to blink away the oddness before her, the impossibility of it, but no matter how she tried, the illusion remained. Her beautiful black marble that had cost several fortunes to acquire, and use as the building blocks for her tower, were changing. In place of them, stones, old, dirty stones began to fade into existence. The subdued, consistent, unnatural yet professional quiet illumination of her LED lighting flickered in and out, while the telltale shifting movement of flame light replaced it. The walls of her hallway changed in the same manner as her floor, though they spread out further, warping, bending, struggling to fit into the new shape the monster six feet from her was bringing into her world.\n\n\"Explain,\" she said, gesturing around herself.\n\nAzamel managed a small smile, but whatever wicked, insulting intent she carried, faded away, as if she were too tired to use what vitriol she had left. \"He's opening a doorway between his lair in the Dream, and the physical world. They will overlap, or at least, a small part of each will overlap. This hallway, and... what appears to be a hallway, of a rather old building.\"\n\nAntoinette looked to the floor, then back to Azamel, and gasped, a sound she so rarely made, she had almost forgotten what it sounded like.\n\nAzamel was no longer Azamel. The old woman, frail, angry, bound to a wheelchair and hopelessly addicted to nicotine, no longer existed. Something had taken her place, something strange, something from fiction, something that she could not have begun to imagine actually existing.\n\nIf someone had taken Ganesha, and twisted it, tainted it, corrupted it, and given it weapons of murder, slaughter, and torture, it would look like this. An elephant head, upon the body of an overweight man with four arms, skin leathery gray to match its animal head and ivory tusks. It stood before her upon elephant feet, and from two of its human hands, one on each side, hung chains, black and sinister. One chain held a net, bloody, dripping, and the other chain, short and also dripping red, ended with a cruel hook Antoinette could only imagine being used to rip open the innards of a victim. The other two hands held scimitars, also dark, and also dripping of blood.\n\nThe net was filled with human skulls, and upon the dangling hook, a corpse was run through. Except, such things could not fit, not in this hallway that overtook her fortress and now surrounded them. As the foreign stones and strange flames upon distant walls nudged aside her marble, edging it out of existence like how vines pull old houses into the earth, Azamel's form began to grow. No, not grow, not truly. She, he, it, had never been small at all. The titanic creature could not fit into the hallway of stone, and the hallway of stone knew that. Or perhaps, Azamel's body knew that, and refused to grow to a size that would damage it.\n\nBut the bones in her net of death, and the hook with its corpse, gave Antoinette an idea of how big the monster would have grown, and would likely grow once given the freedom. She would tower over many of the buildings of Dolareido.\n\nMark, if it truly was Mark, had become something she could not have predicted, and yet predicted perfectly. Worms. Insects. A skeleton that teemed with all that crept and crawled along and within the rotting earth. The skeleton wore clothes, a cloak of sorts, obviously made of skin. There was an odor as well, the disgusting smell of rot and decay, but more. If dishonor, wretched deception, and the horrible and terrible aspects of killing and death could be giving odor, it would smell as this nightmare before her smelled. It did more than make her nose curl. It made her insides recoil in complete disgust.\n\nS\u00e1ndor became, as she knew he would, the famed gargoyle. Jack had spoken of its size, and while his words had painted Azamel as a towering behemoth, and rightly so, she was not prepared for the size of the four-winged beast. Unlike Mark, who would have fit well in a pit of the plagued dead, the gargoyle creature before her, filling the huge hallway with its size and might, looked almost majestic. It belonged on a tower, a cathedral, a castle, guarding its entrance and the souls held within. In fact, it would have looked perfectly at home in Three Kings Cemetery, or perhaps above the door of the Grand Cathedral of Dolareido.\n\nThe lights above her disappeared, leaving old, solid boards of wood. Braziers of metal, beautiful things that would have fit in her art room, teemed with the life of the flame. Her hallway of black marble was gone completely, and she and Daniel had entered the realm of nightmares. And\u2014\n\nAzamel screamed. The sound of blasting trumpets filled the hallway, and the two vampires jumped away from the noise. The elephant creature, still growing but blocked by the hallway's dimensions, threw out its hands and dropped its colossal weapons. They disappeared instantly, vanishing in clouds of black, as the elephant creature was buried in an amber glow. Glow turned into searing light, and the elephant screamed again, the noise so powerful, Antoinette could only assume a thousand elephants were announcing their pain and anger.\n\nMark threw up his... its skeleton hands, and though it had no eyes or facial muscles to speak of, she could see shock and dismay there. This was not supposed to happen.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nJack smiled at his friend, and his prostrated body. Shit load of bullets just went through Damien, turning him into swiss cheese, but he was safe behind the rock. More important than safe, was he'd succeeded. The weird flap of skin was destroyed, and the effect was immediate. The big, dumb, pile of dream-essence gargoyle thing hitting him, stopped hitting him. More than that, Jack could feel the strange release of invisible tension that went out from the clearing where Damien lay. The spell was broken, fuck yeah.\n\nIt was like someone had flipped a switch in the monster's brain, and suddenly, it was capable of thinking again. Or maybe thinking was too strong a word, now that Jack watched it unload its anger upon the invisible barrier. This monster was clearly as dumb as a brick. Would Azamel's monster, a giant thing and obviously fucked up interpretation of Ganesha, be dumb like this, too, if Azamel wasn't merged with it? No idea, no idea at all, but it definitely made for an entertaining sight, watching the gargoyle realize it was free of a chain that had bound it for who knew how long. And it obviously knew who used to hold that chain.\n\nJack shrugged, and focused his vitae through his limbs. He still had plenty, and was confident he'd win in a fist fight against the gargoyle if it had to drag on. But now that the big threat was over, he could tone it down, and save his vitae for showing off when he killed Angela. Maybe make her rip her own guts out. That'd be cool, and satisfying as fuck to watch.\n\nThe gargoyle began to fade.\n\n\"Hey, what the fuck?\" Jack turned to look at the giant creature. Yeap, it was fading away, literally at that. It stopped beating on the barrier, turned around, and took to the sky in the direction of the wicked awesome castle. Jack expected it to kick up dirt, stir up the wind, and make a lot of noise; fucker was huge and heavy, after all. But it didn't. It just took to the sky from the way it came, and vanished, fading out like a dream.\n\nIf he had to guess, that meant S\u00e1ndor had come. Wow, he was sure the man would be trapped in Antoinette's cell. So, either her cell didn't work, or she'd let the man go, randomly. Someone on the outside was interfering. Azamel? Maybe. Or Athalia and Fiona? Where the fuck were those two anyhow?\n\nJack looked around and took stock. Clara was whole again, no more bones showing, and she wasn't twisted like a rotini noodle anymore; still down, though. Beatrice was dragging herself up to her feet, claws in a tree. Far as Jack could guess, she was just as fucked up as Clara, but unlike the werewolf, Beatrice had a mountain of hate to help fuel her. That was good. Hate was a great motivator.\n\nDamien was down, and considering the amount of bullets he'd taken, he was probably down for the count. He'd live, but torpor would take him soon. Othello was still skewered on a branch, in the background of the whole fiasco. Jack should have gotten him a red shirt to go with his level of uselessness. And Harcourt was behind a tree, out of sight from Jack, but also out of sight from the hunters. Fucker had been useful apparently, according to Scully. Well, who woulda thought.\n\nNow, his crows, they were the real stars of the show. Scully and Mulder were, at this very moment, clearing out the rest of the black soot. They'd taken down a quarter of the circle already, and in five more minutes, the whole damn thing would be gone.\n\nHe looked past Damien, past the altar, and into the clearing where seven hunters remained. Elen was still carving symbols into the air, and Jeremiah still had that fucking book. But, now that S\u00e1ndor was gone, Angela and her four bodyguards all looked straight at Jack, and boy oh boy, the fucking joy of seeing genuine fear in their eyes. Even Angela, who was usually one hundred percent hate and anger, showed a sliver of terror, when she saw him.\n\nJack licked a fang, and waved."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "slow",
        "violent",
        "paranormal romance",
        "vampire",
        "werewolf",
        "monster",
        "suspense",
        "action"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-07-ch-15"
}