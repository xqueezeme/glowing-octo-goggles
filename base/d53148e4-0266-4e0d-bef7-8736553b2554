{
    "title": "The Iceman's Wrath Ch. 04",
    "pages": [
        "Hey all, Annabelle here with another delicious chapter from the Iceman saga!\n\nIf you are new to this tale, I suggest going back to Chapter 1 and reading about how Jason struggles with the idea of being a good dad and being a dad who gets laid. Each chapter has been worth it, I promise!\n\nThat being said, if you like this one, don't forget to rate, comment, or tell all your friends! I enjoy reading your feedback (even if I don't respond), so keep it coming! \n\nDisclaimer: All characters in this story are 18 or older. Their bad decisions are completely legal, and strictly for your enjoyment!\n\nThanksgiving Stuffing\n\n\"Are you sure you don't want to come over for dinner with us?\" Naomi asked.\n\n\"I'm sure,\" Jason told her. She had spent the first few days of her Thanksgiving break at Jason's house, the two of them catching up on each other's lives. Jason told her about the new guy at the station, Douglas. Though he seemed nice enough, Douglas was full of himself and opinionated. After declaring one night that Game of Thrones was an overrated show, Jason had resorted to replacing the clothes in Douglas' drawer with slightly larger clothes that were identical. Thinking that he was losing weight from being at the firehouse, Douglas had packed on an additional ten pounds before Jason put all his old clothes back. Last he had seen him, Douglas was too busy eating rice cakes to share his stupid ass ideas.\n\nNaomi, on the other hand, had a new boyfriend she wasn't telling Jason much about. He chalked it up to the newness of their relationship, hoping that was all it was. In his experience, when a woman wouldn't tell you about a new boyfriend, it was because something was wrong with him.\n\n\"Have a happy Thanksgiving Dad!\" Naomi's voice on his phone snapped him back to reality. \"Love you!\"\n\n\"Love you too.\" He hung up, sliding the phone into his back pocket. He opened up his fridge and pulled out the large party sub he had purchased for today. He had multiple invites for Thanksgiving dinner, even one from Maria's family, and he had passed on all of them. With Naomi home all week, he felt he now needed some time alone. His head no longer felt like it was screwed on straight.\n\nThe weekend with Maria had terminated Sunday afternoon when she had waddled out the front door, her ass full of lube and cum. He had sexted with Megan multiple times, but their schedules had never lined up for a personal visit of any sort. Nearly a month after school started, Maria appeared on his doorstep again with a casserole her mother had made as a \"thank you\" for taking such good care of her that fateful weekend. Instead of eating the casserole, he had eaten Maria out before fucking her ass for a solid hour, his first sexual release in a long time.\n\nIt was the guilt that was getting to him. He had gone on several dates with women his own age, even fucked a couple of them, but it wasn't the same. More often than not, he found himself fantasizing about Megan's slender body, her unimaginably tight pussy, fucking her over his kitchen counter. Or the dangerous curves of Maria's ass, her innocence and enthusiasm enough to make him rock hard. While in bed with these other women, he had fantasized about his daughter's friends while getting off.\n\nEven Brianne. He hadn't forgotten the wanton lust on the young girl's face, or the way she looked in a bathing suit either. He had heard nothing from her since that eventful afternoon where he had shut her down for her shitty attitude.\n\nWas something wrong with him? Thinking back, he had often fantasized about older women when he had been a teen. When he was first married to Naomi's mother, it had been women in their mid thirties and forties that had gotten him hard. When they divorced, he pursued many cougars at the nightclubs, bedding divorces with college aged children of their own. The few times he had fucked some college girls, it had been exciting, but not all consuming. His daughter's friends occupied his waking thoughts in such a manner that he struggled to focus at times, imagining the look on Maria's face when he would first penetrate her from behind, or checking his phone for another picture from Megan to jack off to.\n\nIt wasn't just their age he was attracted to, or their bodies. It was their personalities. He had gotten to know them intimately through sleep overs, dinners, and parties. They were an extension of Naomi's life that he had accepted without question, and now he was getting the chance to deepen that relationship, to bury his dick in something that was not only forbidden, but exciting. He had never been into fucking in public places, but he imagined that it was the same kind of thrill he experienced now.\n\nHe pulled a beer from the fridge, and surveyed his dinner. The party sub would easily last him until Saturday, and he had just opened a bag of Doritos. Preparing his plate, he watched Wild Jason gently pushing Dad Jason around in a wheelchair, surveying the majestic spread before them. Dad Jason wasn't looking so hot these days, his body wrapped in bandages. Wild Jason took good care of him - though they were opposite sides of the same coin, they had a mutual respect. Dad Jason and Wild Jason had both approved of his sexual conquests of late (except for that random encounter with Maria), and Dad Jason was beginning to show more signs of life these days.\n\nPreparing a plate, he turned on his TV. He was avoiding Game of Thrones these days on account of the raging erection he now got whenever it reminded him of Maria. Instead, he had started the new Battlestar Galactica series, a sci-if thriller that was short on sexy and big on intrigue.\n\nIn the middle of the intro, someone knocked on his door. Setting down his sandwich, he walked to the door and opened it.\n\n\"Hello Mr. Dawes.\" Megan pushed her way in, shutting the door behind her. She wore a light jacket over a pretty white blouse with a red skirt that went to her knees. She was holding a backpack, which she tossed to the floor.\n\n\"Megan,' he said softly, her name a prayer on his lips. \"What are you doing here?\n\n\"No time to explain,\" she told him, turning around and lifting up her skirt. Instead of panties, she wore a garter belt with a remote control, the wire connected to a harness that she wore instead of panties. He immediately heard the angry buzz of the vibrator positioned directly on top of her clit. Her voice was raspy, and she pulled the harness aside, a large glob of her cream falling free and splattering on the tile of the entryway. \"I need your dick in me. Right now.\"\n\nMouth agape, he looked at the little table next to his front door. Wild Jason's eyes bugged out of his head, staring into the crimson void of Megan's wet, inviting pussy. Dad Jason wheeled himself over to the edge of the table, shaking his head slowly as he wheeled himself over the side. This wasn't even a battle worth fighting anymore.\n\n\"Please Mr. Dawes,\" she hissed, her ass moving from side to side. \"I've been wearing this for almost an hour!\"\n\n\"I don't know what to say,\" he whispered, but somehow his dick was already out. There was no foreplay, no preamble to what happened next. He grabbed Megan by the hips, gripping her tightly. She braced herself against the wall, whimpering quietly as he aimed the head of his cock at her tight snatch. She was so wet, his dick kept sliding off target, but once he slid into her, just a little, she shoved hard on the wall, sinking down onto him.\n\n\"Fuck!\" She screamed, pushing hard against him. Jason held on tightly, his eyes wide as the redhead fucked herself with his dick. He moved forward, pinning her more effectively against the wall. \"Fuck, fuck, oh shit!\" Her hands became claws that dug into his drywall, leaving deep gouges that would never have any logical explanation.\n\nHe had been caught off guard, but it was now time to take control. He grabbed a handful of Megan's hair, tugging it toward him and then down. His other hand wrapped around her waist, and he steered her away from the wall and toward the stairs. Her hands clasped at the railing, and he repositioned her, bending her over completely at the waist.\n\n\"Hold on to something,\" he told her. Her hands splayed out on the stairs for support, and he grabbed her hips so hard that her pale skin became completely white. He pulled his cock most of the way out of her, then slammed it forward as hard as he could.\n\n\"FUCK!\" Megan screamed, using her head to brace herself. In Jason's mind, every image she had sent him began playing like a slideshow, every dirty text a wishlist of things he intended to do to her. It was no longer about the girl on his cock - she had already cum once, and was ready to do it again. No, this time it was about what he wanted, needed in fact. This beautiful, sexy, smart girl who needed nothing more than a good pounding had already gotten what she came for.\n\nNow it was his turn.\n\nJason grunted, his balls slapping mercilessly against Megan's labia. She cried out, little whimpers of delight every time he bottomed out in her. She was doing something different now, squeezing her pussy whenever he pushed his way in, making her cunt a perfect fit for what he needed most. His legs shook, his orgasm building from within, and he shoved her against the stairs, her body nearly collapsing under his assault.\n\n\"Oh god, that's it, please fuck me!\" Megan cried, her words an unintelligible mess. Jason's grunts were coming more frequently now, his breathing ragged.\n\n\"Cum in me Mr. Dawes, please, I need to feel it!\" Megan was starting to rip chunks of carpet up with her nails. Pulling his dick nearly all the way out, he pushed forward, lifting her slightly into the air. Megan cried out, her hands clutching the railing as Jason howled, blasting his load deep inside her teenage pussy. He kept pounding her, pushing out giant globs of his own cum now, making a small mess on the stairs beneath.\n\n\"Fuck,\" he whispered, his dick twitching inside of her.\n\n\"Grab my bag for me, Mr. Dawes,\" Megan said, lifting her ass in the air. When Jason pulled his dick out, she frantically pushed as much of his cum back into her snatch as she could. Puzzled, Jason handed her the backpack, and she pulled a pair of black panties from the side pocket.\n\n\"Thank you,\" she said, pulling them on. Already, a large wet spot had formed.\n\n\"What are you doing?\" He asked, more than a little concerned. \"Your'e still on the pill, right?\"\n\n\"It'll make sense in a little bit. It's a surprise.\" Grinning sheepishly, she sat on the stairs, her legs splayed out for him. A large wet spot had formed in the crotch already. \"I needed that so bad. I had to pull over twice on the way here.\"\n\n\"Why aren't you at your parents?\"\n\n\"Ha! Funny story.\" Megan stood, her legs wobbly beneath her. \"My step-dad's sister had a heart attack this morning. He and my mom had to fly out to get her stuff sorted. She'll be okay, but dinner at my house is officially cancelled.\"\n\n\"I'm sorry to hear that,\" he said.\n\n\"Oh, I'm not.\" A delicious grin crossed her face. \"They won't be back until Sunday night. I'm all yours for the next few days.\" Standing up, she tugged gently on his chin before kissing him full on the lips, her tongue briefly touching his. \"I want to be your little whore this weekend.\"\n\nWild Jason was now weeping openly on the front table, making crosses on his chest and thanking God above. Dad Jason was a mangled mess on the floor, his limbs twitching beneath the wreckage of his wheelchair.\n\n\"I think that can be arranged,\" Jason said. \"You hungry?\"\n\n\"Starved, actually.\" Megan followed him out to the kitchen. \"Turkey sandwich, I assume?\"\n\n\"Well, it is Thanksgiving after all.\" He watched her prepare her sandwich, marveling at how innocent she seemed now that her lust had abated. This wasn't a trait he found in just any woman he met. Megan had something special, a quality that no words could appropriately embody. Staring at her ass, he wondered if she could feel his cum inside her as she spread mayo and mustard on her sandwich, her rear swaying back and forth gently as she circled the table to grab a handful of the chips Jason had put out.\n\n\"Ooh, Cool Ranch.\" Megan put the chips on her plate, suggestively licking the powder off of her finger. It was amazing how quickly she could flip the switch. Her skirt swished back and forth on her walk out to the living room. She sat on the floor, right near Jason's spot.\n\n\"So what are we watching?\" She asked, taking a large bite out of her sandwich. The large gob of mayonnaise that smeared across her lips sent a gentle pulse to Jason's crotch, enough that he could feel his dick stiffen, but not enough to wake the beast.\n\n\"Battlestar Galactica.\"\n\n\"Is it like Star Trek?\" Megan asked.\n\n\"Not quite. These robots called Cylons have just wiped out all of humanity except the people in these ships.\" Jason took his spot on the couch. \"So they are all doing their best to find a new plant to live on, but the robots are chasing them down. And their civilization is in a constant state of near collapse, in fighting and such.\"\n\n\"Interesting.\" Megan took another bite of her sandwich. Jason pushed PLAY on his remote, but couldn't help but watch the redhead. Just a few minutes ago, she had been screaming on his stairs. Now she sat on the floor, an image ripped from any innocent get together she may have had with Naomi. Full of his cum.\n\nWild Jason stood in front of Megan, a clear view of her creamy thighs before him. He was scribbling furiously on a long scroll of paper, a laundry list of all of the things Jason wanted to do to her perky little body. Dad Jason was beside him, his wheelchair held together by duct-tape, attention fixed on the television. That part of his psyche had long ago given up trying to contribute.\n\nThey watched half an episode, Jason answering Megan's questions as they came. He could tell she was genuinely curious. Whereas Maria had been eager to learn more about his body, Megan seemed to be interested in his mind.\n\nSomebody pounded on the front door, the sound loud enough that Jason jumped immediately to his feet. From the intensity of each strike, he immediately pictured either Megan's dad, or Maria's, maybe even a handful of the neighborhood men, shovels and shotguns at the ready.\n\n\"You should probably get that,\" Megan said, her eyes never leaving the screen. Clearly, she wasn't worried. The men of the neighborhood weren't going to bury her in a ditch, after all.\n\nJason's heart pounded inexplicably, and he slowly crossed the length of his house. The pounding resumed, three solid thunks on the door. Taking a deep breath, he put on his best I did not just fuck my daughter's friend face on, and opened the door.\n\nThe owner of the fist that had pounded his door was a five foot four Asian girl, maybe a hundred and ten pounds soaking wet. She wore a pale yellow dress and white tennis shoes. Her long black hair lay flat along her back and shoulders, and she fixed Jason with a scowl.\n\n\"Is Megan here?\" She demanded, pushing her way inside.\n\n\"Um, who are you?\" Jason asked, but the girl didn't answer. She stormed into the living room, crossing her arms when she saw Megan.\n\n\"There you are.\" It was an accusation, her voice dripping with malice.\n\n\"Hi Ling.\" Megan ignored Ling, her eyes still fixed on the screen.\n\n\"Hold on, hold on.\" Jason put himself between the two. \"I'm sorry, Ling, was it? You can't just barge into my house like this.\"\n\nLing fixed Jason with a heated glance that caused his balls to withdraw into his body in fear. Wild Jason pushed Dad Jason to safety under the couch.\n\n\"You were supposed to come home,\" Ling informed Megan.\n\n\"That was before plans changed.\" Megan ate some chips, smacking her lips loudly. \"I'm staying here this weekend.\"\n\n\"With him?\" Ling glared at Jason. \"This is the guy?\" Jason knew immediately what she meant.\n\n\"Mr. Dawes, meet my step-sister, the bitch.\" Megan smirked, setting her food down. \"She's a little upset because she was expecting me home for the weekend. While our parents are gone.\" Megan slightly raised an eyebrow, immediately communicating that Jason had somehow stolen away the weekend that Ling had planned. Appraising Ling in a new light, the only new information he gleamed was that somewhere a dictionary had her picture next to the entry Resting Bitch Face.\n\n\"He's so old.\" Ling sneered at Jason.\n\nMegan rolled her eyes, then stood. Grabbing Ling by the hand, she dragged her toward the kitchen. \"You're such a bitch when you're hungry, c'mon.\"\n\n\"Um, what?\" Jason watched them disappear around the corner. Shaking his head, he walked into the kitchen to see Megan building a plate of food for Ling, who eyed the food with uncertainty. \"Hold up, she's staying?\"\n\n\"Of course she is. She's family.\" Megan threw far too many chips onto Ling's plate, and for the first time since she had stormed in, her facial features relaxed. \"She and I are going to sleep in Naomi's room, if that's okay with you.\"\n\n\"Um, yeah. Since your parents are out of town.\" Maybe he could win her over with the nice guy act?\n\n\"Please. Don't insult my intelligence.\" Ling walked out into the living room, leaving Megan and Jason in the kitchen. \"Hey, Battlestar.\" She plopped down on the floor next to Megan's plate, her legs crossed politely beneath the yellow folds of her dress.\n\n\"What is going on?\" Jason mouthed at Megan.\n\nMegan's reply was a wink and a smile. She went to his fridge and grabbed a couple of Cokes, licking the edge of one can suggestively before joining her sister in the living room.\n\n-\n\nLing's sudden appearance dropped the sexual temperature in the room to negative twenty. What Jason had figured was going to turn into an evening long fuck-fest had quickly become an exercise in \"Don't Look At Ling.\"\n\nHer attention on the television, Ling looked demure in her pretty yellow dress. She picked up her sandwich, took a single bite, and then put it back down. He could see that layers of discipline and etiquette had been inscribed on her very being, a creature of proper time and place sitting before him. Still, the truth was that the petite young woman frightened him a little. Clearly, she knew that he had fucked her step-sister, but what would she use that knowledge for?\n\nApparently nothing. Ling sat quietly through three episodes of Battlestar, occasionally mouthing the words to herself. Jason tried to picture the sexual dynamic between Ling and Megan. He knew at once that he had seen Ling's pussy in at least a few of the sexts between them, and he was willing to bet that Ling knew. He watched his Thursday melt away, afraid to even drink a beer with Ling around.\n\n\"I think I'm turning in for the night,\" he announced at nine. Though he wasn't that tired, he figured it would be easier to go to bed and read a book then sit in silence with Ling any longer.\n\n\"We should go to bed as well,\" Ling said. \"It is better to keep our internal clocks on a good schedule.\"\n\nMegan rolled her eyes, but stood up off the floor. The fabric of her skirt had left faint creases in her pale flesh, flesh that Jason fantasized about running his hands across. She and Ling had downed most of the Cokes in the fridge, so Jason was unsure how they planned to fall asleep.\n\n\"Good night,\" he told them, walking toward the stairs.\n\n\"Good night Mr. Dawes,\" Megan said. Ling remained quiet.\n\nFuck. Walking down the hall to his room, he felt cheated. What the hell was going on here?\n\nA cold shower helped, and he had tucked himself in bed, reading a science fiction novel. Through the wall, he could hear Ling and Megan muttering to each other, the exchange slightly heated. Pushing his ear to the wall, the only word he could make out was his name. Sighing he resigned himself to the idea that he was probably going to play the unwilling host for the next few days. He didn't dare try to kick Ling out - the last thing he needed was for her to freak out on him.",
        "The words in his book blurred, and he found himself nodding off more than once. Succumbing to the sweet seduction of slumber, he almost missed it. Eyes snapping awake, he was fairly certain he had imagined the sound through his wall. Holding his breath, he waited.\n\nIt was faint, but it was unmistakably a woman's moan.\n\nThey were fucking in his house! The idea caused a surge of blood to his cock, which stood up at immediate attention. Their voices were faint, but the moans definitely changed in pitch. He recognized the lower pitch as Megan's voice, but the higher pitched one had to be Ling's.\n\nWhat were they doing? They were still talking, so they couldn't be eating each other out. Maybe it was some light foreplay, the two of them fingering each other? Did they have a toy in there, maybe a Magic Wand that they had both pressed their pussies against, scissoring their way toward orgasm? Maybe they were watching each other masturbate while discussing the political intrigue of Battlestar Galactica?\n\nJason was stroking himself leisurely, his imagination fueling his hand. Tugging at the skin by the head of his dick, he spread his precum around, tiny jolts jumping down his cock with every tug. He couldn't believe those two were doing this, they had to know he was listening.\n\nOr did they? They had downed a week's supply of caffeine each, maybe they thought he had fallen asleep. Or maybe they wanted him to hear. The implications made him shiver, and he heard Megan's moans growing louder through the wall.\n\n\"FUCK!\" That came from Ling, and it was not a word shouted in delight, but rather frustration. Jason nearly fell out of bed, quickly wrapping the covers around his legs once more. Nothing but absolute silence for nearly a minute. Should he go check on them? Maybe Ling had hurt herself? He should be a good host and make sure she was okay, but maybe they were still naked?\n\nDad Jason and Wild Jason stood on his nightstand, staring at him in bewilderment. They looked at each other intensely for several seconds before looking at Jason and shrugging. They had no clue what to do either.\n\nJason heard Megan laugh, and then Naomi's bedroom door opened. Footsteps creaked down the long hall to his room, and his door swung open, the hall light casting long shadows around the two women in his doorway. Jason sat up in bed, squinting at the sudden brightness.\n\n\"Are you girls okay?\" He asked. His eyes adjusted to the light, and he realized that Megan stood right behind Ling, who was looking away from Jason. Ling wore a simple pink nightgown with tiny red flowers. Around her neck was a black collar.\n\n\"We're fine, Mr. Dawes.\" Megan pushed her step-sister into the room, revealing a black leash in her hand. \"Ling is a little upset that she lost a bet with me, that's all.\" Megan wore a long nightshirt that came down to her knees.\n\n\"A bet?\"\n\n\"Yep. We make bets sometimes, just to keep things interesting.\" Megan approached the bed, tugging at her sister's collar. \"Sit, Ling.\"\n\nLing sat at the foot of the bed.\n\n\"What was the bet?\" Jason looked at Ling, who still refused to look at him.\n\n\"Oh, there's a bit of a story about that.\" Megan laughed, giving Ling a gentle push. Ling collapsed on the bed, unmoving. \"You see, after you fucked me, I told Ling all about how much fun it was to have a real cock inside of me. Much better than a silly old dildo. She didn't really believe me, but she kept asking me about it, again and again and again. She would let me take pictures of us fucking in exchange for hearing about how you pushed me against the counter, how you fucked me until I came, how I swallowed all of it. Contrary to her behavior tonight, it always gets her hot and bothered.\"\n\n\"I don't understand,\" Jason said. \"She doesn't seem to like me.\"\n\n\"Oh, it has nothing to do with you. When our parents told us they were leaving town, I told her I would rather come over here and fuck you then stay home with her. She wanted to come with me, see what all the fuss is about. She's just as eager to feel a hot cock inside of her as I am.\" Megan swatted Ling's ass, eliciting a tiny gasp. \"However, she had a bet to win.\"\n\n\"She was nasty to me because of a bet?\"\n\nMegan nodded. \"You're going to like this one. I bet her that she would be eating your cum by the end of the night. Ling made the mistake of thinking that meant she had to eat it from the source.\"\n\nJason immediately understood what had happened. \"She was eating you out, wasn't she?\"\n\nMegan laughed. \"Indeed. She even mentioned that I was extra creamy tonight, and wanted to know why. She ate your cum, so I won the bet.\" She held up the leash. \"Loser has to wear the leash until we leave. Whoever holds the leash makes the rules. Isn't that right, Ling?\"\n\n\"That's correct,\" Ling said, her voice muffled by the covers.\n\n\"She'll do... anything you tell her to?\" Jason asked.\n\n\"Nope,\" Megan said. She tossed Jason the leash. \"She'll do anything you tell her to do.\"\n\n\"And you're okay with this?\" Jason asked Ling.\n\n\"Yes,\" she whispered.\n\n\"It's a game we like to play,\" Megan told him. \"We make bets with our bodies. Those are the best kind, because even when we pay up, we still win.\"\n\nJason looked at Ling, then at Megan. He felt it deep in his core, an arousal building like the fire in a forge. Two willing participants, their bodies his for the taking. How many ways could they fit together over the long weekend, how many depraved things could he make them do. His heart racing in his chest, he chanced a look at his nightstand.\n\nWild Jason had placed a pair of headphones on Dad Jason's head, and followed it up with a canvas sack. Convinced that Dad Jason could no longer see or hear what was about to transpire, he gave Jason a double thumbs up.\n\n\"Ling, have you ever been with a man before?\" Jason gave the leash a gentle tug.\n\n\"No,\" Ling whispered.\n\n\"Then you have a lot to learn.\" Jason slid the blankets to the side, then tugged down his boxers revealing his rock hard cock, standing at full attention. He wrapped the leash around his fist over and over again until the leash was pulled tight between the two of them. \"Suck it, Ling.\"\n\n\"Okay.\" Ling crawled forward on all fours, panting with her tongue out.\n\n\"Told you she was a bitch,\" Megan said, smirking. Ling wrapped her lips around the head of Jason's dick, sucking gently inward. Jason tightened the leash some more, placing his hand gently on the back of her head. Ling let out a moan, sending pleasant vibrations down his shaft.\n\n\"A bitch in heat,\" Jason agreed, watching Ling bob her head enthusiastically, taking it deeper each time. \"She's already pretty good at this.\"\n\n\"I spent a week face fucking her with the strap-on once,\" Megan announced, sending a fresh surge of blood to Jason's cock. \"She doesn't have a gag reflex. That was the bet. Since I couldn't make her gag in a week, I lost the bet.\"\n\n\"And what did you have to do in return?\" Jason asked.\n\n\"Let her fist my ass.\" Megan lifted the hem of her nightgown just enough to crawl onto the foot of the bed. Kneeling behind Ling, Megan placed gentle hands on the globes of Ling ass. \"We like to experiment.\"\n\nHoly fucking Christ, Jason thought, watching Megan bury her face in Ling. LIng trembled, jacking the base of Jason's shaft with a tight fist, then burying his cock all the way until her throat bulged outward. Where did women like these come from? Jason tugged down on the leash, helping Ling take his dick even deeper. He was immediately grateful that Megan had fucked him earlier - he would have blown his load already otherwise.\n\n\"You like sucking my cock, Ling?\" Jason asked.\n\n\"Mmhmm,\" Ling informed him, pulling her mouth off to lick all around the edges of the head of his cock. The cool air of his bedroom caused the skin to tingle, and she blew gently across the top, cooling the skin. Jason gasped when she sucked him back in, the temperature change reminiscent of his first encounter with Megan. Jason never considered himself a wealthy man, but as of right now, he felt like the richest man on the planet.\n\n\"Have you ever been in a threesome before, Mr. Dawes?\" Megan asked, wiping LIng's fluids off of her mouth.\n\n\"Never with two women who were so eager.\" That was the absolute truth.\n\n\"Oh, we are very eager, Mr. Dawes.\" Megan pulled up on her nightshirt, lifting it off of her lithe body. Tossing it to the side revealed a floral print bra underneath, and the long, rubber cock that Megan wore around her hips. Megan lifted the head of the strap-on, positioning it carefully. \"Let me show you how eager.\"\n\nMegan thrust forward suddenly, making Ling cry out as her chin shoved its way between Jason's balls. Clutching tightly to Ling's ass, Megan started a slow rhythm, pounding Ling from behind and powering her head up and down Jason's shaft.\n\n\"Holy shit!\" Jason shouted, grabbing Ling by the back of her head. She bobbed her head faster now, moaning around Jason's dick and playing with herself with her free hand. The pressure was building now, a surge of warmth across the top of his thighs, pooling at the base of his spine. Grunting, he yanked hard on the leash, trapping her mouth at the base of his shaft as he blew his first load into the back of her throat.\n\nLing screamed around his cock, her hips bucking up and down. Megan held on for dear life, doing her best to keep the strap-on inside her step-sister as Ling came, spraying the bed with her fluids. Jason's eyes rolled back in his head, his whole body feeling lighter than air as LIng milked his cock dry, swallowing between shrieks. The three of them fell still, Ling pulling her mouth off of Jason's cock, her drool soaking his crotch.\n\n\"Did I ever mention that my sister is a squirter?\" Megan asked. Jason laughed, and Megan crawled up beside Ling, their mouths finding each other.\n\n\"I'm willing to bet there are lots of things you never told me about her,\" Jason said.\n\n\"You're about to learn a few more,\" Megan informed him, playing gently with his cock. \"But I'm going to need you to get hard again.\" She started licking the shaft of his softening dick, halting the process.\n\n\"That feels great,\" Jason told her.\n\n\"I can do it better,\" Ling said, joining Megan and licking the other side. The two began to fight over his cock with just their mouths, both of them sucking it back and forth, trying to trap it inside their cheeks. Jason stared in absolute amazement as they locked lips around the edge of his shaft and began jacking him between their combined lips.\n\n\"You two are incredible,\" Jason said.\n\n\"We do our best,\" Megan said, winking at him as her tongue teased the opening of his penis. Ling sucked his balls into her mouth, gently rolling them with her tongue while Megan sucked him as deep as she could, making a gargling noise in the back of her throat.\n\nEven though he was older, and had just had his second orgasm of the afternoon, having two incredibly eager teens work their magic on his shaft revitalized him. His dick was harder than before, the girls letting their tongues run into each other and making out with the head of his cock stuck between their mouths.\n\nJason realized that if he died now, there was no heaven that could be better.\n\nLing kept blowing him while Megan crawled up his chest, planting a kiss firmly on his mouth. Pulling her lips fro his, she placed them near his ear, her words a gentle breeze upon his earlobes.\n\n\"I want to watch you fuck her,\" she whispered.\n\n\"As you wish,\" Jason replied. Lifting the leash, he pull Ling away from his crotch, the pretty Asian whimpering when she was denied her treat. He sat up in bed, his hands running across her shoulders and down to her breasts. They were small, likely A-cups, and he ran his thumbs over her tiny, pointed nipples, pinching them lightly. She let out tiny little gasps. Keeping one hand on a breast, he slid the other hand down to grab her by the hip. He pulled her forward, and she crawled until her bare pussy slid across the length of his cock, leaving a glistening trail behind it.\n\n\"This is my first time with a man,\" Ling said, her lips trembling.\n\n\"Birth control?\" Jason asked.\n\n\"The pill,\" she replied.\n\n\"Good.\" Using his hands to guide her, he slid into her pussy, basking in the delicious tight warmth of Ling's body. Ling cried out, her hands clutching at Jason's chest, moving into an upright position. Jason held tightly to the leash, letting her swivel her hips.\n\n\"Now ride me,\" he commanded. Ling shivered, wiggling her hips in small, tight bursts at first, lifting herself up and then sinking down hard.\n\n\"It feels so hot!\" Ling leaned back, giving Jason a beautiful view of her pussy while he fucked her. Megan immediately dove in, her mouth finding Ling's clit. Ling moaned at the ceiling, her hands pulling at Megan's air. Megan's ass swayed back and forth, the strap-on clock swaying back and forth like the pendulum on a grandfather clock. Jason slid his fingers beneath the straps, finding Megan's soaking wet pussy with his fingers.\n\n\"Oh fuck!\" Megan pushed back against his hand, shoving herself forward into Ling's crotch. The sensation of Megan's hair swaying across his lap, her tongue brushing the shaft of his dick, and the tight convulsions from Ling proved to be nearly too much. Jason took several deep breaths, calming himself. The last thing he wanted was to cum too early.\n\n\"Come here,\" Jason rasped, grabbing Megan by the hair and pulling. She moved up his chest, her wet lips finding his, their tongues dancing around each other while Ling rode his cock like a champ, her sharp cries filling the air. Making out with Megan while Ling fucked him was an experience that seared its way into his mind, a permanent fixture in the architecture of his soul.\n\n\"Gah!\" Megan broke away from Jason, a grin on his face. \"I just had the most delicious idea.\"\n\n\"What?\" Jason asked.\n\n\"Do you have any lube?\" One of Megan's eyebrows rose suggestively. Jason pointed to the nightstand. Wild Jason wore a director's hat and held a film camera. He had propped up the scene marker in Dad Jason's wheelchair, Dad Jason still blissfully ignorant beneath his hood. Megan slid off the bed, pulling the lube from the nightstand and moving away from the bed.\n\n\"Fuck me harder,\" Jason told Ling, pinching at her nipples. She gasped, her whole body shuddering as another orgasm began to build. The foot of his bed was already soaking wet, so Jason figured why not make a mess of the rest of it.\n\nAt the foot of the bed, Megan liberally slathered lube across the length of the strap on.\n\n\"Come here.\" Jason tugged the leash forward, and Ling's face was suddenly in his. \"Kiss me. Don't stop until I let you.\"\n\n\"Mr. Dawes,\" she muttered, planting her lips across his. She was a far better kisser than Megan, her lips tasting every square inch of his lips. He held tightly to her hips, pounding her from beneath as fast as he could, one eye on Megan.\n\nMegan crawled along the base of the bed, running gentle hands along Jason's calves and thighs. She stood on her knees, stroking the dildo suggestively.\n\nJason's hands slid along the back of Ling's ass, and he grabbed tightly to her buttcheeks, pulling them apart.\n\n\"Erf!\" Ling's eyes shot open at the sensation of a cock at her asshole. Jason held her still, their lips fused together while Megan slowly worked the large head of the rubber cock into Ling's butt, grabbing her step sister by the hips and easing it gently into place. It was a slow process, one that created an insane tightness inside of Ling's vagina, all the spare room squeezed out of her pelvis. Ling was no longer kissing Jason - instead, she actively panted into his mouth, loud moans emanating from her.\n\nJason broke the kiss, sliding his hands along her ribs.\n\n\"Do it,\" he told Megan.\n\nMegan started easy, fucking Ling nice and slow.\n\n\"Oh god, I'm so full! It's so tight, I'm so full!\" Ling's fingernails broke the skin of Jason's chest. Megan established a steady rhythm, in and out, Ling already gasping for air.\n\n\"Don't you dare cum,\" Jason said, timing his strokes with Megan's. As she slid out, he slid back in. The sensation of a second cock through the wall of Ling's vagina was already driving him wild, and he knew it was going to be a close call to get Ling off before he did.\n\n\"Please let me cum, please let me - oh fuck!\" The timing had shifted, and Jason and Megan thrusted at the same time, the thin wall between them narrowing to almost nothing. Ling was so tight now that Jason was holding his breath to buy some more time.\n\nHe couldn't help it. He moved faster, pushed harder, filling Ling up with his dick every time he lifted his hips. She was crying now, tears of pleasure and joy, cream flowing freely into Jason's crotch. She moaned his name, Megan's name, and unintelligible strings of nonsense.\n\nJason was close, but he wanted something more. Grabbing both women, he tilted them all over onto their sides, clutching Ling to his chest while holding Megan in place. The three of them fucked this way in a frenzy, Jason holding Megan close enough that he could kiss her by lifting Ling's head onto his shoulder. There was a fire in the redhead's eyes as their lips touched, two twisted souls finding each other in the dark.\n\nLing let out a bloodcurdling scream, her body going rigid between them. Jason pumped her frantically, the spasms of her pussy sending him over the edge. Three long, hut bursts of cum filled her up, and when Megan fucked her ass some more, pushed nearly all of it out around Jason's dick. His entire lap became a swimming pool of Ling's cum and his own milky fluids.\n\n\"Holy shit,\" he said, holding both girls close. Neither one of them spoke, Ling's eyes closed in rapture and Megan's face fixed in a permanent grin.\n\n\"That's just the start, Mr. Dawes.\" He felt Megan pull the strap on out of Ling's ass. She tossed it on the floor by the bed. \"We have several days of just this.\"\n\n\"But why?\" Jason asked. \"Why this? Why me?\"\n\n\"Finals are coming,\" Ling answered, her voice a whisper.\n\nMegan nodded. \"And we needed to blow off steam with someone we could trust.\"\n\n\"You two are welcome here any time,\" he told them. They held each other, all three of them eventually sinking into a deep, restful sleep.\n\nI hope you enjoyed this quick little tale of lust and depravity! Leave a rating if you liked it, a comment if you loved it, and your favorite Dad Joke if you got off!"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "mature",
        "threesome",
        "blowjob",
        "dp",
        "strap on",
        "daughters friend",
        "step sister",
        "college girl",
        "mff"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-icemans-wrath-ch-04"
}