{
    "title": "Mable's Breasts Pt. 04",
    "pages": [
        "Friday morning dawned and I awoke from a very restless night, consumed with anxiety over spending the night with Mable.\n\nLast night, after dinner, Mable had telephoned me, anxious and concerned as to how things had gone that afternoon with Eleanor. At that time, I was buoyant with the knowledge of the videos in my possession and was looking forward to surprising her with them. I told her all went well, and that she had been absolutely right about Eleanor. I smiled as I kept her hanging in suspense, telling her I would give her more details when I came over.\n\nIt wasn't until we signed off and said goodnight that the overwhelming sense of panic descended on me. It happened when Mable said, \"Goodnight, baby. I'll see you tomorrow evening.\"\n\nNow, lying in bed on Friday morning, all I could think of was how I would be spending the night with Mable, and that we were going to have sex. Beyond that one single, all-consuming thought, I could hardly think at all. I had no idea whatsoever how it all would finally happen or what would happen afterward. It was that uncertainty and ambiguity that had me tense and uneasy.\n\nOther than those few intimacies I had already shared with Mable, I had no other sexual experiences to draw from. As well, all of those previous intimacies had been moderately brief, and I had always had the safety net of only having a short amount of time to spend with Mable before having to hurry home. Now, I was faced with the prospect of spending the entire night with her and, if I were to be completely honest with myself about it, I was nervous as hell and even a little fearful.\n\nSchool passed in a complete daze that day. It wasn't until John had slapped me on my back as we were leaving, that a sense of reality began to set in. \"See you around seven,\" he smiled. \"And don't forget your headset mic.\"\n\nI spent a long time in the shower after dinner, scrubbing my body assiduously, especially my privates and deep into the cleft of my buttocks and anus. I wanted to be especially clean and fresh smelling for Mable.\n\nI paced like a caged animal around the house after showering. As filled with anxiety as I was, the time just seemed to crawl. The plan was to meet the guys at John's house at seven, make my excuses, and then to meet Mable between seven and eight. By 5:30, I was almost squirming with pent up anxiety.\n\nFinally, at 6:00 pm, I could stand it no longer. I grabbed up my laptop and gaming equipment, stuffed them into my backpack and said goodnight to my mother.\n\n\"What time will you be home?\" She called from the kitchen as I was about to exit from the front door.\n\n\"I'm not sure,\" I answered doing my best to act casual. \"We usually go for a breakfast burrito or something after. So, I guess maybe eight or nine.\"\n\n\"Wait,\" she called again as I was about to close the door. She met me at the door and gave me a brief hug and a kiss on my cheek. \"Is everything okay with you?\" She asked, a look of mild concern on her face, as she affectionately brushed her fingers through my hair. \"You've been acting really strange all evening.\"\n\nI smiled, hoping to ease her mind. \"Nah, I'm good,\" I said. \"It's just thinking about the damn game is all.\"\n\n\"Are you wearing cologne?\" She asked bending to smell my cheek.\n\n\"Yeah...um, I nicked myself when I shaved,\" I managed to stammer. \"So, I put after-shave on to take the sting out.\"\n\nMom frowned, her intuition probably telling her something in my world was not quite right. \"All right,\" she said with a sigh, \"You guys have a good time...And don't be too late tomorrow morning and make me worry.\"\n\n\"Not to worry, Mom,\" I said. \"See you in the morning.\"\n\nMom nodded, her brow still creased with concern as she closed the door.\n\nI made my way to John's house, my mind so full of Mable and spending the night with her that I arrived without even remembering the walk.\n\n\"Hey, man, you're early,\" said John with a smile as he opened the door. \"Come on in...we just finished dinner.\"\n\nHe led me down to the basement where we usually carried out our dungeons and raids together. Once there, I turned to him. \"Listen, man...I can't stay,\" I said.\n\n\"What? What are you talking about?\" He asked with a look of incredulity. \"We had this all planned. Why the hell can't you stay?\"\n\n\"I...um...actually, man, I have a date,\" I said.\n\n\"A date?\" He frowned, folding her arms over his chest. Suddenly his eyes widened, and his face was wreathed in smiles. \"You mean with a GIRL? You've finally got a date with a girl?\"\n\nI nodded and smiled, feeling my cheeks warming.\n\n\"Okay, okay,\" he said, continuing to smile. \"No harm, no foul. It's an all-nighter here, so just come on over after your damn date.\"\n\nI shook my head, \"I'm sorry, man. I...um...won't be able to.\" I stammered uncomfortably.\n\nJohn's smile faded and he looked at me curiously. \"Why the fuck not? It's not like your date is going to...\" His eyes widened and his jaw dropped. \"Holy fuck,\" he gasped. \"Is this an overnight date? Are you spending the night with somebody?\"\n\nAgain, I nodded, my cheeks beginning to burn. \n\n\"Who is it with?\" He asked, grinning widely. \"Come on, man...you can't just bail out on us like this and leave us hanging without at least telling me who you're spending the night with.\"\n\n\"I...can't tell you her name,\" I said. \"It's actually...a woman that I did some computer work for, one of my clients.\"\n\n\"Wait...\" He gasped, grasping my arm and pulling me over to sit on the sofa. \"A WOMAN? Holy fuck, man.\"\n\nI nodded, wishing I had had the presence of mind to have not used that term.\n\n\"Holy fucking shit!\" He exclaimed with a broad smile as he shook his head. \"And what? You're going to spend the night with this woman...at her place?\"\n\nAgain, I nodded. John smiled and bit his lip, holding up his hand for a high-five. \"Wow,\" he said, looking at me with something akin to respect. \"Okay, then. I guess the rest of us will just have to muddle through the dungeon without you.\"\n\n\"Thanks, man,\" I smiled, patting his shoulder as I stood to leave. He followed me to the door. \"Hey, listen,\" he said, grabbing my arm and keeping his voice low. \"I want to hear all the details on Monday,\" he said with a leer and a wink.\n\nI nodded and smiled, knowing in my heart I would do no such thing. He'd get over it eventually.\n\nJust in case John might be watching me out his window, I walked away from Mable's apartment complex until I was out of his line of sight and then doubled back a block away.\n\nMy heart was pounding as I ascended the stairs to her apartment just as the evening reached full dusk. I stood on the landing in front of her door and turned to watch as the final glow from the sun faded behind the mountains. I took several deep breaths to calm my nerves and knocked softly on her door.\n\nMable opened the door with a flourish, smiling warmly and completely dispelling every ounce of anxiety I had been feeling by stepping out of her apartment to embrace me warmly, crushing her body against mine. \"Oh, honey,\" she murmured, her lips close to my ear, \"I'm SO glad you're finally here.\"\n\nShe wore a knee-length, black satin robe, complemented with a pair of black patent-leather pumps. As she had stepped from her apartment to greet me, I couldn't help but notice the heavy sway of her breasts beneath the sleek fabric, nor the soft billowing crush of her breasts against my chest as she embraced me. \n\nThe sound of applause came from her television and Mable pulled away with a smile. \"Quick, get in here,\" she said excitedly, grasping my arm and pulling me inside. \"Jeopardy is on and it's final jeopardy. Our Vegas guy is just about to win again.\" She helped me off with my backpack and set it on the floor beside the door, then took my hand and led me to the sofa where we held hands and watched in fascination as our local Vegas champion came through to put his total winnings at well over two million dollars.\n\nPleased by the outcome of the program, Mable switched off the television with the remote. \"How about some wine?\" She offered with a smile.\n\n\"Sure,\" I returned, with a nod.\n\n\"All right...while I get the wine, why don't you make yourself more comfortable? There's another robe, just like this one I'm wearing, on the back of the bathroom door. So, let's get you out of all these restrictive clothes and into something much more comfortable, shall we? Because tonight is all about being comfortable and relaxing with one another. \n\nI nodded, watching her as she walked away and admiring her plush, shapely calves and the sway of her wide hips and shapely buttocks. I shook my head, thinking I ought to pinch myself to make sure this wasn't just some kind of elaborate dream. I was HERE, alone with her in her apartment, and all of this was really happening. I glanced around and noticed, for the first time, how intimately Mable had set the tone of the evening. Soft indirect lighting permeated the room with a rosy hue, and an electric, wall-mounted fireplace added to the warmth and cozy ambiance. What a perfect setting for a romantic evening.\n\nI made my way to the bathroom and quickly removed my clothes, folding them with care and placing them on the counter beside the sink. I smiled at my reflection in the mirror, feeling deliciously lewd to be completely naked in Mable's apartment. I slipped into the black robe hanging on the back of the bathroom door, smiling to know it was a match for the one Mable was wearing. The sensation of the sleek satin material against my skin sent shivers of pleasure through me. So sensual was the material against my skin that I was compelled to do some mental aerobics to keep my cock from becoming completely erect as I made my way back to the living room.\n\nMable was waiting for me on the sofa with a bottle of wine and two glasses. As I approached, she poured the wine and smiled as she handed me a glass. We clinked our glasses together and sipped. It was excellent wine, nicely sweet and it burned warmly in my stomach.\n\n\"So,\" she said, reclining back onto the sofa and crossing her legs, \"tell me how your friends reacted when you told them you couldn't stay.\"\n\n\"Well...John was the only one there when I arrived,\" I answered, sipping my wine once more. \"And he was kind of pissed at me at first. But, when I told him I had a date with someone, he kind of warmed up to the idea. I don't feel all that bad about it, those guys are all good players and can do just fine on the game without me.\"\n\n\"I'm glad,\" she smiled, \"because I'm really happy to have you all to myself tonight.\" She looked at me thoughtfully for a moment and then smiled and touched my cheek affectionately. \"Are you nervous at all about spending the night here with me?\" She asked.\n\nI paused for a moment before answering, \"Yeah, I guess maybe I am, a little bit,\" I answered honestly with a self-conscious smile.\n\nMable leaned close, bending to kiss my lips lightly, \"You trust me?\" She asked, looking into my eyes. I nodded, and she smiled, \"Good, then believe me when I tell you...you have nothing at all to be nervous about tonight. I'm here, and I got you. And I won't let you fall.\"\n\nShe kissed me a second time and I felt my anxiety fade away. \"Oh,\" she said as if something had just occurred to her. \"I have something to show you that I'm hoping you'll like.\"\n\nI smiled, \"What is it?\"\n\n\"Well, this afternoon, while I was shaving my legs, I kind of got a little carried away.\" As she spoke, she pulled the bottom of her robe open to reveal she had shaved her entire pubic area smooth.\n\n\"Oh, my God, Mable,\" I gasped, \"that is SO hot.\" I couldn't take my eyes from her smoothly shaved lips.\n\nShe laughed girlishly and covered herself with her robe almost shyly. \"I was hoping you'd feel that way. I like the way it feels very much and I'm thinking I might even keep it this way.\"\n\n\"I think that is such a sexy look for a woman,\" I said, exceptionally pleased that she had done it.\n\n\"And, speaking of sexy women,\" said Mable, setting her glass aside and looking at me intently, \"I'm very curious to hear how your session with Eleanor went this afternoon.\"\n\nI couldn't help but smile, which caused Mable to raise one eyebrow in curiosity. \"What? Did she come on to you?\"\n\nI nodded. \"Well...\" I smiled, \"she DID show me her boobs. Does that count?\"\n\nMable's jaw dropped slightly, and she frowned. \"Okay...\" She said, drawing out the word slowly. \"And pray tell how did THAT happen? If you don't mind me asking.\"\n\nI nodded, \"It kind of came out of nowhere,\" I said. \"We were just talking while she was getting her purse to pay me, and she kept asking me questions about you.\"\n\n\"Me?\" Said Mable, looking surprised.\n\nI nodded. \"She asked me right out if you and I were sleeping together. When I told her no, she kind of laughed and said that you must have at least shown me your boobs though. That surprised the hell out of me, and, when I didn't answer right away, she just laughed again and said something like, 'Of course she did, I can see it in your eyes.'\"\n\nMable nodded, then shook her head. \"I'm sorry,\" she said. \"It's my fault she knows that about me. I had too much to drink one night at a company party and I made the mistake of confiding in her how I had exposed myself that way a couple of times.\"\n\nAh, I thought, so that's how she knew.\n\n\"But go on,\" she prodded as I paused to sip my wine. \"Please continue.\"\n\n\"There's not much more to it,\" I said. \"After she said that, she just pulled open her blouse...and asked me how her boobs compared to yours.\"\n\nMable laughed and shook her head, \"God, that woman never ceases to surprise me. Was that the extent of it, or was there more?\"\n\n\"No, that was pretty much it. I told her I thought she had very nice boobs, and then she covered up and I left pretty soon afterward.\"\n\nMable sighed, \"Well, at least you can't say I didn't warn you to be careful around her.\"\n\nI pursed my lips, \"I think...\" I began slowly, \"I found out something that kind of shows just how slutty she can really be.\"\n\nMable set down her drink and looked into my eyes, \"What are you saying? Do you know something I don't?\"\n\n\"Yeah...I kinda do,\" I nodded. \"When I was working on her computer, I found a bunch of video files she had on her drive.\"\n\n\"Oh?\" Said Mable, raising her brows.\n\n\"Well, I'm pretty sure I found the ones you told me about that were made at your company Christmas party, and...\"\n\n\"What?\" She interrupted with a gasp. \"Are you saying you actually found that video on her computer?\"\n\nI nodded. \"Yeah, at least I'm pretty sure. There were actually two of them. I only looked through one very quickly to see if it might be the one you told me about...\"\n\n\"Wait,\" she gasped, interrupting me once more, \"You actually SAW the video?\"\n\n\"Kind of, I mean, I didn't watch the whole thing, just fast-forwarded to different spots to see if it might be the one you told me about. But I didn't just SEE it...\" I said with a smile, \"I actually made copies of them onto my flash drive.\"\n\nMable's eyes widened and she burst out laughing. \"Oh, my god! You're my HERO! Do you have them here with you? Can I see them?\"\n\nIn answer, I stood and retrieved my backpack, pulling out my laptop and my flash drive and placing them on the coffee table in front of us. I booted the computer, stuck the drive into the port and opened the folder containing the videos. I then opened the first video, the one I had previously looked at.\n\nMable scooted closer to me and leaned toward the laptop screen as the video began. Mable gasped softly to see Eleanor having sex with three men simultaneously. She sat astride one man, his cock in her vagina, while another knelt behind her and used her anally. All the while, she was sucking a third man's cock as two other men stood in the background stroking their erections and waiting their turn.\n\n\"Oh, my god...that's Harold...and Bob from accounting...and Larry, our maintenance guy.\" Said Mable with openmouthed astonishment.\n\nThe man in her anus finished and stepped away and his place was quickly taken by another who bent and thrust his erection into her.\n\n\"Holy shit!\" Exclaimed Mable with a laugh, covering her wide-open mouth with her hand, \"That's Mark, the CEO of the entire company.\"\n\nWe watched together as the CEO of her company rammed his cock forcefully into Eleanor's anus and began thrusting rapidly, making her body shake with each impact. Eleanor cried out in pleasure with each powerful thrust, her voice muffled by the penis in her mouth.\n\n\"Oh, my god,\" said Mable in complete astonishment. \"I can't believe I'm really seeing this.\"\n\nThe camera zoomed in on Eleanor's face to show how semen was dripping from her mouth and oozing down the shaft of the man's erection as he ejaculated into her mouth. He stepped away and she smiled and wiped her chin as another man stepped up to replace him. The camera pulled back to show the CEO pulling out of Eleanor's anus and then zooming in once more to show his semen leaking from her and flowing in a long stream from her anus, down to the other man's erection, who was still lying beneath her. She rolled off of that man and onto her back, spreading her legs for yet another man who stepped from the shadows.\n\nMable and I both gasped to see Michael, the same Michael that had been my new computer client just the day before, insinuate his body between Eleanor's legs and begin to fuck her unbridled enthusiasm while she turned her head to suck on another man's cock. Michael finished very quickly and stood up for the camera to zoom in on Eleanor's dripping vagina. The camera quickly moved away for several seconds of rapid blurred movement, stopping on Eleanor's face as the man she had been blowing pulled out and ejaculated over her face as she smiled delightedly for the camera, and the video ended.\n\nMable was completely silent for several moments. \"Okay...two things,\" she said. \"First, I can't believe I just saw Michael fucking Eleanor. I mean, they sat right here, side by side, just the other day and neither of them gave even the slightest indication that they had EVER been intimate with one another.\" She paused once more and took a sip of her wine. \"Secondly...When it comes to sex, my god, Eleanor is certainly one astonishingly sleazy woman.\"\n\nShe took another large swallow of her wine. \"Okay...three things actually. That REALLY turned me on.\" She reached over and gently pressed her fingertips against my robe directly over my erection and smiled. \"I see it had the same effect on you too.\"\n\n\"That WAS pretty hot,\" I admitted, trying to act casual about her hand lying over my erection. \"I hadn't seen all of this one until just now. There's another one, I think from a different Christmas party.\"\n\n\"Can you show me that one too?\" She asked, with a smile, her cheeks pink with excitement.\n\nI leaned forward to close the first video and open the second. The second video was very similar to the first, just in a different room. As with the first video, it featured a very naked Eleanor with several men.\n\nMable leaned forward with interest, naming each of the men as they appeared in the video. She scooted from the sofa onto the floor in front of the coffee table to be closer to the computer screen, laying her arm over my thighs and leaning into me. The second video was more of a one-on-one gangbang scenario. Eleanor reclined back onto a red vinyl lounge chair with her legs raised high in the air as, one after another, each man took a turn with her. I counted eight men in all and at least two of them had even taken a second turn with her. The camera zoomed in at the end to show semen flowing copiously from Eleanor's vagina onto the vinyl lounge chair, where her entire buttocks were lying in a huge pool of semen. The video ended with a close-up of Eleanor's face where she attended to two men with her mouth. The men came simultaneously, and Eleanor's mouth was literally inundated with semen that poured down over her chin.",
        "The video ended and the computer screen turned black. Mable sat unmoving, her eyes on the screen. The only sound was the sound of her heavy breathing. She turned and looked up at me, her eyes wide and her cheeks highly flushed. In one swift movement, and without a word, she raised her hands to the front of my robe and pulled it open to expose my erection. As she did so, she rose up onto her knees and leaned forward, lowering her head. I looked down in surprise, seeing only the top of her head, and then suddenly her mouth closed over my penis.\n\nI gasped aloud as her tongue swirled against the tip of my cock and her lips pulled on my shaft urgently, her head bobbing rapidly. My mind reeled as the realization of what she was doing hit me like a bolt of lightning. And, within a nano-second of that realization, the immediate urgency of my orgasm was upon me. Wanting to warn her, I gasped her name, my voice little more than a hoarse whisper. But, in the instant her name escaped my lips, it was already too late, and my first ejaculation erupted into her mouth.\n\n\"Oh, God!\" I cried, as my cock pulsed inside her mouth. She made a soft sound from deep in her throat and, instead of pulling away or stopping, began pulling with her lips and tongue with even greater urgency. I closed my eyes and surrendered completely to the exquisitely sensual sensation of her mouth, entwining my fingers in her hair and whispering her name with each ejaculation.\n\n\"Mmm...\" she moaned softly with each pulse of semen. I lay my head back onto the sofa cushion, my hands in her hair as her head continued to rise and fall to the rhythm of my orgasm.\n\nMoments later, as my ejaculations ceased, she raised her head and looked up into my eyes almost imploringly, with her lips parted and her cheeks highly flushed. In one fluid movement, she rose up and lifted her leg to straddle my thighs, pulling her robe open as she moved.\n\nI smiled to see her gloriously nude body suddenly revealed beneath her robe, her creamy pale flesh contrasting highly with the deep black of her robe. She cupped my face in her hands, lifting my face to hers and crushing her mouth onto mine. Her tongue probing between my lips as I opened my mouth to find her tongue with my own. She slipped one hand behind my head as we kissed while her other hand moved between us and closed over my erection.\n\nShe stroked my erection gently, her fingers curling around my shaft and pulling as she shifted her weight above me. I felt the tip of my cock pressing against her body as her hand guided it into the cleft between her smoothly shaved lips and made me wet with her slick lubricating juices. She shifted her weight above me once more and removed her hand, holding the tip of my cock just inside the entrance to her vagina.\n\nWith her mouth on mine, her eyes wide as she looked almost pleadingly into my eyes, she slowly lowered her hips to take me inside her. Her eyelids fluttered and she gasped aloud, pulling her mouth from mine and taking in a huge intake of breath. A husky moan escaped from deep in her throat as her buttocks settled onto my thighs with the entire length of my cock deep inside her. \n\nShe was so exquisitely slick and wet inside. Her vagina enveloped me tightly, with a sensual warmth the likes of which I had never imagined in my wildest fantasies. She held herself perfectly still as we continued to kiss passionately, and I reached beneath her robe to caress her thighs and hips. Then, with a sudden gasp, she tore her lips from mine once again and cried aloud as her hips began to thrust almost violently.\n\nHer entire body shuddered as she wrapped her arms around my neck and held me tightly, my face pressed into her neck. I grasped her big, fleshy buttocks firmly as she ground her pelvis down onto me forcefully. Then, as her hips began to thrust against me rapidly, I felt her vagina suddenly begin to pulse on my cock. She cried out again...and then again...and again, as her orgasm took her away.\n\nAs her pleasure began to abate, she held herself still, her breath ragged and heavy, as shudders continued to course through her like little spasms of pleasure. She released my neck and lowered her mouth to mine once more, her fingertips stroking my cheek.\n\n\"Oh, my god...\" She whispered, her lips against mine, her eyes wide and looking directly into mine. \"Oh, my god...\"\n\nI arched my pelvis up into her, wanting to move inside her, wanting to FEEL myself moving inside her as I felt a renewed surge of energy suffuse me. Her intense orgasm had thrilled me as nothing had ever thrilled me before. I reached behind her, grasping her buttocks tightly as I attempted to thrust my hips up into her.\n\n\"Oh...Oh, yes!\" She gasped, sensing my need, her eyes boring directly into mine. She raised her leg and shifted her weight from me, pulling me with her as she rolled over onto her back. She opened her thighs and raised her knees, pulling me even deeper inside her with her hands gripping my buttocks cheeks.\n\nI thrust myself into her, thrilling to the sensation of my cock moving inside the exquisitely tight confines of her vagina. She began to move her hips beneath me, matching my rhythm.\n\n\"Yes, baby...yes!\" She whispered urgently, her lips next to my ear as she crushed me to her, her arms around my neck. \"Oh, God YES...\" She cried aloud as I thrust into her rapidly and feeling the rise of another orgasm swelling inside me.\n\nFeeling myself reaching the point of no return, I thrust into her rapidly to bring on my orgasm, my pelvis slapping loudly against her buttocks and, with my cheek pressed against hers, I sighed her name as my first ejaculation erupted deep inside her.\n\n\"YES!\" She gasped, her voice hoarse and breathy with arousal. \"Cum in me...Oh, baby, cum in me.\"\n\nI surrendered completely to the beauty of her entreaties and the exquisite sensation of our bodies moving together in perfect rhythm. \"Oh, Mable,\" I moaned, my lips close to her ear, as my body shuddered with each successive ejaculation.\n\nShe cried out, her arms tightening around my neck as her hips began to thrust rapidly beneath me. Her body shuddered violently, and she cried out my name loudly. As my orgasm began to wane, I realized she was cumming for a second time. I held to her tightly as her body shuddered with each wave of pleasure that coursed through her.\n\nMoments later we lie without moving, our passions spent. She lowered her legs and soothingly moved her hands gently over my back and buttocks. I closed my eyes and sighed pleasurably at her sensual touch and the feel of her plush body beneath me and never wanted the beauty of that blissful moment to end.\n\nTo my complete astonishment, her body began to shake, and I realized she was crying. She wrapped her arms around my neck and held me tightly as she sobbed silently. I held her tenderly for several moments as she cried softly.\n\n\"Are you all right?\" I murmured when she had calmed, raising my head to look into her eyes.\n\nShe smiled, wiping her cheeks with her fingertips, and then gave a little laugh. \"I think so, yes. Sorry, nothing like that has ever happened for me before.\" She took my head between her hands and kissed my lips tenderly. \"Thank you for making me feel so beautiful.\"\n\nI smiled and rose up, reluctantly pulling my rapidly softening erection from her vagina and lying beside her on the sofa. She reached out for me and took me in her arms, embracing me warmly as I snuggled against her and lay my head on her shoulder.\n\nHer robe hung open, exposing one of her gorgeous breasts and part of her bare hip and thigh. My robe was hanging completely open and, strange as it might seem, I felt not even a hint of self-conscious shyness to be so revealingly exposed in front of her.\n\n\"That certainly wasn't how I ever imagined it would be for our first time together,\" she said, toying her fingers through my hair. \"I apologize for letting myself get so carried away the way I did.\"\n\nI laughed, cupping her bared breast tenderly, \"You have nothing to apologize for,\" I said, \"because I loved every single minute of it.\"\n\n\"Yes, but...\" She began to protest. I smiled and, taking a page from her book of famous ways to interrupt, stifled her words by placing my fingertips over her lips.\n\n\"No buts, Mable,\" I said looking into her eyes, \"This has been the most incredible experience of my entire life.\"\n\nShe kissed me then, with a warmth and tenderness that almost took my breath away. We continued to kiss until she felt my cock rising against her thigh.\n\n\"Okay,\" she said with a smile. \"Before you have me getting carried away all over again, I need a few minutes to recuperate...and also a bathroom break.\"\n\nI smiled and rose up into a sitting position to allow her to stand. She smiled down at me and pulled her robe together, then made her way to the bathroom.\n\nI lay my head back onto the sofa cushions and smiled up at the ceiling. In that moment of totally relaxed satisfaction, I realized Mable had been so very right about my first time being special and memorable. I knew that for as long as I lived, I would never forget this night and the incredible woman to whom I gave my virginity.\n\nMable returned and stood in front of me, her robe open to reveal her deep cleavage and her beautifully shaved pubic mound. She held her hands out to me, pulling me up to stand beside her.\n\n\"I just want to look at you for a minute,\" she said, pushing the robe from my shoulders to fall about my ankles. She moved her hands gently over my shoulders, chest, and abdomen and smiled, \"God, I love your body. \"You're so beautifully hard all over. And,\" she continued as her hand dropped to my still moderately erect penis, \"in all the right places too.\"\n\nShe stepped into me and we embraced, her lips moving passionately on mine. After a moment, she stepped away and took hold of my hand. \"Indulge me this time,\" she smiled, pulling me across the room to the fluffy fur throw rug that she had placed in front of her wall-mounted electric fireplace. \"I want to make it right this time.\"\n\nShe pulled me down and we reclined on the rug in the glow of her fireplace. The rug felt exquisite on my bare skin and I understood immediately why Mable had wanted us here. She picked up a remote and dimmed all of the lights, leaving only the fireplace to cast its warm illumination over us. She picked up a second remote and the soft sounds of smooth jazz filled the room.\n\n\"That's really nice,\" I smiled, \"Who is it?\"\n\n\"That's the late, great Gerry Mulligan. His saxophone can really create a romantic mood, don't you think?\"\n\nI nodded and smiled at her. She returned my smile and let her robe fall from her shoulders. We embraced and kissed as I caressed her gorgeous breasts lovingly as her fingers moved tenderly over my erection. Moments later she reclined back onto the soft rug and pulled me with her.\n\nShe parted her legs and I insinuated my hips between her thighs. Her body was so sleek and soft I just wanted to lie against her forever. I felt her warm and wet pussy lips with the tip of my cock and pressed my pelvis tightly to her, sensing the delicious sensuality as the tip of my cock slipped between her lips to find the entrance to her vagina.\n\nShe moaned softly as I entered her, taking my time to slide my erection into her with a tender slowness, savoring every beautiful sensation of her lusciously slick vagina, as our mouths moved almost hungrily on one another.\n\nWhen I reached maximum penetration, I began moving my hips, slowly at first, thrilling to the sensation of moving inside her once again. Her vagina held me with such elegance, beautifully tight but supple enough to send electric shivers of pleasure through my body as I moved inside her.\n\nMable placed her hands on each side of my head to break our kiss. With her face only inches from mine, she looked into my eyes. \"Baby...your cock...feels SO good,\" she breathed, her voice low and husky with desire.\n\nWe continued to gaze into one another's eyes as I increased the tempo of my thrusts, moving faster to the rising need within me. As my tempo increased, so too did the force of my thrusts. Once again, my pelvis began to slap against the soft flesh of her buttocks.\n\n\"Yes, baby,\" she whispered hoarsely, \"Oh, God, yes...Just like that. Don't stop.\"\n\nShe grunted delicately with each forceful thrust of my hips, her eyes widening, breathing heavily through her parted lips as she gazed into my eyes and wrapped her legs tightly around my torso.\n\n\"Oh, my God...Oh, my God,\" she gasped, her body beginning to shudder beneath me. \"You're...gonna...make me...cum,\" she gasped aloud, her hips twitching beneath me.\n\nShe exhaled loudly, arching her back and tossing head from side to side as her eyes rolled up into her head and shudders shook her body almost violently. Her vagina tightened against my cock almost spasmodically as her orgasm took her away one more time.\n\nI kept thrusting, maintaining the rhythm that seemed to please her as her entire body writhed beneath me. I felt the tension begin to leave her body as she lay back, gasping for breath.\n\n\"Oh, Mable...\" I sighed, my voice little more than a soft whine in the back of my throat, as I felt my orgasm beginning to swell in the pit of my stomach and I thrust into her faster to bring it on.\n\nShe took my face in her hands once more, her eyes wide, pleading, her face only inches from mine. \"Cum in me, baby...cum inside me.\"\n\nI closed my eyes and surrendered to the pleasure that seemed to explode and radiate throughout my entire body. I felt it everywhere, but most acutely at the tip of my penis as my semen erupted inside her.\n\nWith a final gasp, I lay still on top of her, loving the sensual feel of her soft, plush body beneath me. My body seemed to mold itself into hers as if I belonged there and I never wanted to leave. The firelight and the music enhanced the sensuality and the mood tremendously and I shuddered with pleasure as her fingertips trailed lightly over my back, causing me to shudder pleasurably.\n\nWhen my erection softened, she lowered her legs and I rolled from her to lay in her arms facing her. We kissed slowly and sensually, and I lost myself in her lips, moving my hand over the swell of her hip and down over her buttocks.\n\n\"You were right, Mable,\" I murmured when our kiss finally ended.\n\n\"How so?\" She smiled.\n\n\"I thought that the first time, over on the sofa...was the most incredible experience of my life. And for sure, it certainly was. But, right here with you like this...with the firelight and the music...it was more than just an incredible experience...it was a real thing of beauty...it was perfect.\"\n\nMable's eyes welled and she bit her lip, crushing me to her tightly with her arms around my neck. \"I'm so glad, baby,\" she murmured, her voice breaking. \"I SO wanted to make everything to be special for you tonight.\"\n\n\"Are you crying again?\" I asked with a smile, lifting her chin to look into her tear-filled eyes.\n\nShe laughed softly and raised her head, wiping her eyes with her fingertips. \"It's only because I'm just so very happy right now.\"\n\nWe kissed and caressed one another for quite some time. When the final piece of music on the Gerry Mulligan album faded into silence, I pulled my mouth from hers and smiled.\n\n\"I really like your Gerry Mulligan,\" I said. \"I don't think I'll ever be able to listen to him again without thinking of you.\"\n\nMable smiled, \"I'm glad you liked it because I have a lot more of that kind of thing. She picked up the remote and soon more soothingly sensual jazz music filled the room. \"Let me go to the little girl's room once more while you bring the wine over here from the coffee table. Then, just relax right here and recuperate, I'll be right back.\"\n\nShe rose up and shrugged off her robe, standing before me in all her glorious nudity. She smiled and turned to make her way to the bathroom. I couldn't take my eyes off her body. Those gorgeous legs, so beautifully shaped in her high-heels, and the intoxicating sway of her wide, plush buttocks cheeks as she walked.\n\nI retrieved our wine glasses and the half-full bottle of wine from the coffee table, setting then down near the fireplace, just as Mable returned, carrying two large, fluffy pillows under her arms. I rolled onto my side to watch her as she approached and, to my astonishment and pleasure, she was no longer nude. She had slipped into her filmy little nightie that she had worn the day I had worked on her computer.\n\nShe smiled as she approached me, her breasts swaying provocatively beneath the sheer material. \"It felt a little cold without my robe,\" she smiled facetiously, \"so I slipped into something a little warmer.\"\n\n\"Warmer?\" I responded with a facetious grin of my own, \"Are you sure you don't mean hotter?\"\n\n\"I believe hotness is in the eye of the beholder,\" she responded, obviously pleased by the look on my face as my eyes moved appreciatively over her body. She placed the pillows against the stereo cabinet for us to lean against, and then curled up beside me, drawing her legs up beneath her.\n\nShe poured wine into each of our glasses and we clinked our glasses together. \"Here's to the bees...\" she toasted with a smile, \"those busy little souls...they got no use for birth controls...and that's why...in troubled times like these...you meet so many Sons-of-B's.\"\n\nI laughed, almost snorting wine from my nose. \"I liked that,\" I said. \"So, who is this we're listening to now? I like this a lot too.\"\n\n\"This is Coleman Hawkins,\" she said, reclining beside me. We listened for several minutes in silence, just letting the smooth jazz sounds wash over us as we caressed one another sensually and sipped our wine contentedly.\n\nI thought about her funny toast and smiled. But it also made me think about birth control. I was a little ashamed of myself for not having thought of it before. I had, after all, already cum inside her more than once without even giving it a second thought. My mind was slightly eased by the fact that she not only allowed me to cum inside her but had even encouraged it beseechingly.\n\n\"Um...\" I began, not quite knowing how to even broach the subject so long after the fact. \"I liked the toast you did, it was really funny. But...Well, I mean it's a little too late to even mention it now, but...\"\n\n\"Are you worried about making me pregnant?\" She interrupted with a smile.\n\nI nodded, and she smiled. \"Well, you can put your mind at ease,\" she said. \"There's absolutely no danger of that ever happening...\" She paused for dramatic effect, \"Just as long as you don't cum inside me.\"\n\nI gasped, my eyes flying open wide as I sat up and looked at her with fear and anxiety. \"But, Mable...\"\n\nShe cut me off once again, this time with a laugh. \"Gotcha!\" She said, smiling broadly as she sat up and wrapped her arms around shoulders affectionately. \"You are WAY too easy, baby. Sorry, I just couldn't resist it.\"\n\nShe kissed me warmly on my lips and smiled. \"In all honesty though, the chances of me ever becoming pregnant are extremely remote. As a little girl, I had a serious inflammation in my ovaries which scarred them so badly my doctor said it would be very unlikely I would ever be able to have children.\"\n\nI nodded, \"Sorry,\" I said.\n\nMable shrugged, \"It is what it is, I've resigned myself to it. My first long-term boyfriend broke up with me because of it though, he felt very strongly about having children.\"\n\n\"Sorry,\" I responded once again. \"That must have really hurt.\"\n\nMable shrugged, \"Better it ended quickly rather than years later.\"\n\n\"But,\" I said, returning to my original subject. \"I really should have at least ASKED you though before I just let myself go inside you. I apologize that I didn't.\"\n\nMable smiled and shook her head. \"No need to apologize for anything, honey. It's not just up to the man to do the right thing in a sexual relationship, sex is a two-way street. Believe me, If I had thought that there was even the slightest chance of becoming pregnant, I would have presented you with several dozen condoms as soon as you walked in the door tonight.\"",
        "I laughed, and we clinked glasses once more. I confess I felt a strong relief knowing Mable could not get pregnant. But it definitely gave me pause to consider how I might very well have lost control, in the very same way, had I been with someone else who COULD have become pregnant. The sensation of being inside a woman's vagina had been so intense that the need to cum was all-consuming. I had little doubt that I would never have been able to maintain the presence of mind to stop it from happening if I had needed to.\n\n\"This is nice, isn't it?\" Said Mable, her eyes glistening in the firelight. \"Beautiful music and wine and cuddling with someone special.\"\n\nI smiled and snuggled closer to her as we put our heads together and savored the ambiance of the romantic evening. I closed my eyes and let the music wash over me.\n\nSuddenly I started, realizing I had fallen asleep.\n\nMable laughed softly, \"You fell asleep, didn't you? I could tell.\"\n\n\"Oh, god, I'm sorry. I...\"\n\nShe laughed and stilled my words with her fingertips to my mouth once more, \"No, baby,\" she said. \"I loved that you felt comfortable enough with me to do that. I would have been perfectly happy to hold you until the sun came up if that's what you needed.\" \n\nI laughed sheepishly, \"It just felt wonderful to drift off,\" I said. \"But sleeping is almost the last thing I want to do with you tonight.\"\n\n\"It's okay,\" she smiled, leaning in to kiss me passionately. She teased my penis with her fingertips as we kissed until I was fully erect once more.\n\n\"God, I love the way you have so much sexual energy and enthusiasm,\" she murmured, her lips close to mine. \"I want you to lie down here on your back,\" she said, patting the fluffy rug. \"I want you to let me make love to you.\"\n\nAs I complied, Mable rose up on her knees and, in one quick movement, removed her thong panty. She moved closer and knelt near my feet and, parting my legs with her hands, insinuated herself between my legs. She sat back on her heels and smiled, stroking my legs lightly. \"I don't want you to lift a finger or move at all,\" she whispered, \"Not even a little bit. I want you to let me do everything.\"\n\nI nodded, watching with barely suppressed excitement as she smiled down at me and began to caress her breasts teasingly, squeezing the tender flesh and pressing them together as she moaned pleasurably. She lowered one hand between her legs and began to stroke herself while she closed her eyes and moved her hips seductively against her hand.\n\nWatching her tease herself was so excruciatingly erotic that I reached out to slide my hands along her thighs. She smiled down at me and shook her head as she gently pushed my hands away. \"No, baby,\" she whispered, biting her lip with a sensual glint in her eyes. \"No touching. You just lie still and let me do everything.\"\n\nShe bent over at the waist and lowered her lips to my cock, kissing the tip lightly. I flinched as if receiving a jolt of electricity and she smiled almost wickedly, holding my gaze as she bent a second time and, with the flat of her tongue, licked the entire length of my erection from my balls to the tip of my cock.\n\nShivers of excitement coursed through me and my entire body flinched at the sensual touch of her tongue. Mable smiled as she repeated the action. \"Mmm...\" She said, her voice low and sensual. \"I can taste my pussy on your cock.\"\n\nShe slipped her hand beneath my cock and held me gently as she lowered her head once more and I felt her warm tongue flicking along the contours of my balls. She moved from one to the other, circling with the tip of her tongue and then taking each one gently into her mouth and sucking lightly.\n\nI was writhing with pleasure at her tender oral ministrations. My God, I had never in my life imagined anything so intimate and so exquisitely sensual. After several moments of attention to my balls, she moved up and licked the length of my erection once more with the flat of her tongue. Then, lifting my cock with her fingers she tenderly took the tip of my cock into her mouth and slowly...very slowly...lowered her mouth onto me until the entire length of my erection was inside her mouth.\n\nI gasped aloud, wanting desperately to thrust my hips and erupt into her mouth, but then, sensing that need within me, she stopped moving and just held me in her mouth. Moments later, as the urgency within me abated, she slowly raised her head and released my cock. I was almost gasping, my breath highly elevated.\n\nMable shook her head and smiled, \"Not yet, baby,\" she whispered. \"Not so soon.\"\n\nShe grasped the hem of her nightie and pulled it over her head, baring her breasts. She leaned forward, supporting her weight with her hands on each side of my hips as she allowed her breasts to fall forward onto my erection. She rocked her shoulders from side to side, sliding her breasts back and forth over me as I squirmed with pleasure beneath her.\n\nShe cupped her right breast and pressed her nipple directly over the tip of my cock and I shuddered to feel the hardened flesh pressing so sensually against me. She repeated the action with her left breast as well, all the while looking into my eyes. To my complete astonishment, she squeezed the tip of her nipple until a small stream of her milk flowed from her and over my cock.\n\nShe bent her head to my cock and, with the flat of her tongue, lapped up the milk, holding it in her mouth as she leaned forward to bring her lips to mine. As we kissed and our lips parted, my mouth was suffused with the beautiful taste of her milk.\n\nShe smiled down at me, her face directly over mine as she raised her knees and straddled my hips. She reached between us to gently lift my erection to her pussy lips, holding my shaft against her as she slowly rocked her hips forward and back with my cock sliding between her lips, coating me with her slick lubrication.\n\nI reached up, wanting desperately to grasp her hips and guide her movements, but she once again shook her head. \"No baby,\" she purred seductively as she continued to slowly thrust her hips to tease my cock with her pussy lips.\n\nObediently I lowered my hands, resting them against her calves. \"Can you feel how wet I am?\" she whispered, her voice low and husky. \"How wet I am for you?\"\n\nAs she spoke, she moved her hips to slide her slick lips along the entire length of my shaft, from the tip all the way down to my aching balls.\n\nI wanted to cum so badly I was squirming for release beneath her. She smiled, sensing my intense need, and shook her head. \"Hold on just a little longer, baby,\" she said, lifting her hips to remove the temptation, her voice low and husky, \"We're almost there now.\"\n\nShe lowered her shoulders and let her breasts slide over my face and I opened my mouth to lick each of her nipples as they moved over my mouth. Her breathing became highly elevated and she moaned softly as she held herself still momentarily to allow me to take her nipple into my mouth and tenderly take some of her milk.\n\nAs I moved to her other breast to suckle there, she lifted my cock to her pussy, raising her hips to guide the tip to the entrance of her vagina. As she had done with her mouth, she slowly...very slowly lowered her hips to take my entire erection deep inside her.\n\n\"God, you feel so good inside me,\" she whispered hoarsely, her voice deep and husky with desire, \"Do you want to cum in my pussy?\"\n\n\"God, YES, Mable!\" I gasped, wanting desperately to thrust up into her.\n\nShe raised her hips very slowly and I felt myself begin to reach that point of no return where I would not be able to stop myself. Sensing my impending release, she paused, holding just the tip of my cock inside her vagina, and looked deep into my eyes.\n\nI felt the acute need to release abate slightly as she held me without moving, but then she smiled almost wickedly and began using her abdominal muscles to tighten her vagina and squeeze the tip of my cock with her lips.\n\n\"God...Mable!\" I gasped, feeling the sensation rising inside me and knowing I was only moments away from exploding whether she wanted me to or not.\n\n\"Yessss...\" She hissed, her eyes boring directly into mine as she sensed the urgency of my need, her vagina continuing to squeeze the tip of my cock. \"I'm ready for you now, baby. Are you ready to cum for me?\"\n\nI nodded frantically, \"Yes!\" I cried, imploring her. \"Please, Mable...please!\"\n\nWith a soft sigh, she lowered her hips down onto me, taking my entire length inside her. She lifted her hips quickly, only to plunge her hips down onto me again...and again. She leaned forward onto me, her breasts in my face. I took her nipple into my mouth and greedily sucked milk from her as my semen erupted inside her.\n\nMable cried aloud, and her body trembled above me, vibrating almost spasmodically in that now very familiar manner that told me she was cumming. She cried out my name, again and again, as each wave of pleasure shuddered through her.\n\nAs our mutual pleasure began to ebb, I moved my mouth to her other breast and began to suckle there as well, swallowing her warm sweet milk as her hips finally stilled above me.\n\nMoments later, she rolled from me and we lay side by side gasping for breath.\n\n\"Holy shit, Mable,\" I managed to gasp as I caught my breath. \"That was amazing. YOU were incredible. Where did you ever learn to do all those things?\"\n\nMable laughed softly and rolled toward me, supporting her head in the palm of her hand, \"Learn?\" She said, laughing again. \"Baby, I'm glad you liked it, but I was just making it up as I went along.\"\n\n\"Seriously?\" I asked, turning my face to her. \"That was all just spontaneous?\"\n\nShe nodded and smiled, caressing my stomach tenderly with her fingertips. \"Pretty much, yeah,\" she said. \"I wanted to tease you with my body and make you go a little crazy. And, in case you couldn't tell, I was enjoying it every bit as much as you were.\"\n\nI rolled onto my side to face her, mirroring her position of supporting my head in my hand. \"God, Mable, you made me crazy all right. You had me begging you to let me cum.\"\n\nShe laughed and smiled broadly, \"Would it surprise you to know that it was difficult for me to keep from cumming too?\"\n\n\"God, you are such an amazing woman, Mable,\" I said, leaning in to kiss her lips lightly.\n\nYou know what?\" she said with a smile. \"For an inexperienced lover who just lost his virginity, you are rather amazing yourself. I have never in my life had so many orgasms in so short a time. And, not just ordinary orgasms, but orgasms so intense I feel as though I'm losing my mind when they happen.\"\n\n\"That's a good thing, though, right?\" I smiled hesitantly.\n\nShe laughed and playfully slapped my stomach, \"It's a very good thing. It's just astonishing to me how it took a nerdy little computer geek to find the woman in me...and so many times.\" Her smile faded, \"So, you better be careful, or you may have me falling in love with you.\"\n\nI laughed softly, \"If that's the way things are, then I don't think I want to be careful at all,\" I said, reaching out to gently caress her cheek. \"Because I think I've probably been in love with you from the first moment I saw you.\"\n\nYet again, her eyes welled with tears and I smiled, \"There you go again,\" I said, using my thumb to wipe her eyes. \"You've got the leakiest eyes of anyone I know.\"\n\nShe leaned into me and wrapped me in her arms, holding me close. \"That's because you're always saying the most beautiful things. I can't help it.\"\n\n\"I love you, Mable,\" I said impulsively, looking directly into her eyes.\n\nWithout taking her eyes from mine, she placed her hand on my cheek. \"I wasn't completely certain, until tonight,\" she said, her voice shaking with emotion. \"I think I was afraid to even admit it to myself. But, I'm very much in love with you too, Jimmy.\"\n\nMy heart skipped a beat and I gasped. Looking into her eyes my eyesight began to blur as my eyes welled with emotion. We both reached for one another at the same time, clinging tightly as we both gave in to those emotions.\n\nMinutes later, we leaned back and wiped our eyes. \"So,\" I said, looking at her without smiling. \"What happens to us now?\"\n\nMable smiled and nodded, \"I guess that's the sixty-four-thousand-dollar question, isn't it? I think we should put our heads together and figure out the best solution to that question.\"\n\n\"I like that idea.\"\n\n\"All right then,\" she smiled sitting up to recline on the pillow behind her. \"Let's try to look at this pragmatically, and from both of our perspectives.\"\n\nShe pursed her lips thoughtfully as I joined her to recline beside her on my pillow. \"I'm reasonably sure that you feel the same way I do about tonight. I very much want to spend even more time with you like this, anytime it can be arranged.\"\n\nI nodded enthusiastically, \"Very much so,\" I said.\n\n\"So,\" she said as she refilled our wine glasses. \"I guess it only remains for us to define the parameters of this new relationship we find ourselves in.\" She held up her glass and I clinked mine against hers.\n\n\"First of all, let me just say that I love what we have together. I love how the computer business is taking off and working with you on it. And I love us being together.\" She frowned and pursed her lips, \"Where I have some concerns though is how we manage this new relationship outside of my apartment.\"\n\nI nodded, knowing exactly where she was going with this because I had the very same concerns.\n\n\"I'm not sure I would want for any of this to be put out there for public consumption. At least not right away. And don't get me wrong, I'm certainly not ashamed to show the entire world how I feel about you. I just think we should maintain a little discretion for a while. And keep in mind the difference in our ages is likely to be something that some people might look upon as being rather strange, or even immoral.\"\n\nI nodded in complete agreement, my first thought was for my Mom and what her reaction might be.\n\n\"I don't know how you feel about it,\" she continued. \"But, overall, my single biggest concern is your Mother, and what her response might be to learn we were involved sexually.\"\n\nI laughed aloud causing her to pause and raise her eyebrows in surprise. \"Sorry,\" I said. \"I only laughed because I was thinking the very same thought at the same moment you said it out loud. Honestly, Mable, I couldn't give two shits about what any of my friends or anyone else in the world might think about us being together. But my Mom is a different story entirely.\"\n\n\"Any clue about what she might think?\" She asked, sipping her wine.\n\nI shrugged, \"I honestly don't know, but I'm going to do my best to find out.\"\n\n\"And how might you try to manage that?\" She asked with a raise of one eyebrow.\n\nI laughed, \"Good question. I think I'm just going to have to pay better attention to the things she says. I know she has some reservations about the computer business...and, especially your involvement in it. I know she wonders what's in it for you. I usually just deflect those questions and change the subject.\"\n\nMable nodded thoughtfully, \"I wish there was a way I could talk to her too, to get more of a personal sense of her. I'll have to think about how to make that happen.\n\nAfter a moment of thoughtful silence, Mable turned to me, \"Okay, this is where I think we're at with this. First of all, we love each other, and we don't want this relationship to end. And secondly, we both feel the main obstacle to overcome when It comes to being open about our relationship is your Mother. Do I have that correct so far?\"\n\nI nodded, \"Yes. And I think that, if we're careful about it, I don't see why we can't just continue just like we have from the beginning, with no-one being the wiser. The whole computer business makes it easier for us to spend time together without too much suspicion from anyone, even my Mom.\"\n\nMable smiled, \"I believe we have a consensus, and I couldn't agree more. And, please, look for any indication from your Mom as to how she might react to learn about us being together.\"\n\nI raised my glass to Mable and we both drained the remainder of our wine. \"Now, how would you like to have a nice warm soothing shower with me before going to bed?\" She smiled.\n\nI returned her smile and followed her stunning nude body into the bathroom\n\n(The story continues in Mable's Breasts - Part 5. Comments welcome in Lit)"
    ],
    "authorname": "Jaymie_dee",
    "tags": [
        "virgin",
        "losing virginity",
        "older woman",
        "younger man",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/mables-breasts-pt-04"
}