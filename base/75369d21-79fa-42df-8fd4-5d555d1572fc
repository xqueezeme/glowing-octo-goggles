{
    "title": "Hero Worship Pt. 06",
    "pages": [
        "Here we are, part six of eight. If you're just coming in now you're going to be really lost. All characters in explicit scenes are over eighteen. Please rate and comment and send feedback. It keeps me going. Enjoy!\n\n- Aly -\n\nI slowly began to climb back toward reality.\n\nThe absolute ecstatic bliss I'd been floating in for so long was receding, leaving me feeling very empty, but also perfectly content. Which was weird. But My Lady was there, and she was holding me, and she was so warm, and so strong, and I loved her so much.\n\nThe rush of emotion was beyond intense, and I couldn't hold it in. Tears started to flow, and before I knew it I was sobbing into Taylor's shoulder. Sadness at the loss of the place I'd been, pure joy of having been there at all, the intense love of the woman who made it possible. The one who was holding me close, so close, and whispering in my ear that it was okay, that I was such a good girl, that I made her so happy, and that she loved me. Her hands rubbed gently over my back and ran through my hair.\n\nI don't know which one was more calming, her words or her touch, but even so it took me a long time to come down. Taylor was so patient with me. When I could finally look at her the concern just shone from her eyes, and there were tears on her cheeks. She was so worried about me.\n\nI managed to squeak out a word. \"Hi.\"\n\n\"Oh, baby, are you okay?\"\n\n\"Yeah.\" I lifted my chin, and we shared a soft, sweet kiss. \"I'm thirsty.\"\n\nTaylor nodded and jumped out of bed, running to the kitchen. She was back in a flash with a bottle of Gatorade, yellow, I think, and a straw.\n\nShe held it in my hands as I took a sip. I winced as her fingers touched my wrists. They were red and a little raw. I hadn't even noticed.\n\n\"Oh, my God, Aly, I'm so sorry.\"\n\n\"It's okay.\"\n\n\"No, it's not.\" She dashed into the bathroom, coming back with some lotion that she spread gently over my skin. \"I kept you in those cuffs way too long. I'm so sorry.\"\n\nI took her hands in mine. \"Don't apologize, ever. Not once, okay?\"\n\nShe nodded, her eyes still unsure. I finished my bottle of Gatorade and climbed back into her arms, which held me so tight. I'm not sure how she managed it, but suddenly the covers were around us, and an intense wave of fatigue settled over me, bringing the deepest sleep in its blessed wake.\n\n***\n\nWhen I opened my eyes the sky outside had barely begun to lighten in preparation for dawn. I had turned in the night so I was spooned flush against Taylor's body. I rolled over, and she did the same, coming to rest on her back as I slid my hand across her firm, flat stomach. I remembered when she'd looked at me last night and told me I was going to give myself to her, how my knees had shook.\n\nWhen I'd been a little girl in Bible School at my Grandma's church in Kansas one of my teachers had told me whenever a person came into the presence of an angel their first reaction was to fall down and worship them. As a girl I'd always thought that was a little silly. Angels were beautiful women with harps and halos, or chubby little babies in diapers with wings. Who'd be afraid of that?\n\nBut now I understood. When Taylor had looked at me with command in her eyes there was no other reaction but worship, and falling to my knees before her had seemed the most natural thing in the world. And once she had me on the bed, cuffed and helpless, nothing in the universe existed but her and me.\n\nTaylor stirred, and I kissed her shoulder. Her beautiful blue eyes opened, and she tried to blink the sleep out of them. \"Hi, baby.\"\n\n\"Mmm, good morning.\"\n\nShe pulled me in for a kiss, morning breath be damned. She was so sweet.\n\n\"Are you okay, baby?\"\n\nI nodded. \"Slept like a rock. And see?\" I held out my wrists. \"Barely red anymore.\"\n\nShe grabbed my arms and kissed me where I'd been sore, but I gave her a stern look that kept her from apologizing again.\n\n\"Did it hurt, baby?\"\n\n\"Yeah, but it didn't matter.\"\n\n\"Baby...\"\n\n\"No, you don't understand. It was fine. I mean, I have the lowest pain tolerance in the world. I start crying on the way to get my flu shot.\" Taylor laughed. \"But when I was, God I don't even know what to call it, under? There was no pain, or there was, but even the pain felt good. Like what you were doing with my nipples?\"\n\nTaylor nodded.\n\n\"That was amazing. I want more of that, by the way.\"\n\n\"Okay. That can be arranged.\"\n\nWe kept talking for almost an hour. I told her about how much I'd loved servicing her while my hands were tied. Actually being gently restrained had been a revelation. I couldn't do anything but just sink into the experience. I tried to tell her how it felt, the floaty, out of body-ness of it, how much more intense the pleasure felt, how I never wanted it to end.\n\nShe told me about how scared she'd been while I'd been crying afterwards, that she thought she'd really hurt me. The tenderness in my big, tough, butch's eyes as she said it made me feel wonderful, cared for, adored.\n\nUnfortunately the Monday morning sun was coming up, and Taylor had to work, and I had class. I took my time washing and servicing my lady in the shower, catching the faint echoes of what Taylor had called 'Subspace.' I'd been touched as she'd told me about the research she'd done.\n\nI wondered if I was going to be able to concentrate at all in my classes, but it didn't seem to be a problem. If anything I was more focused and relaxed. In all I felt wonderful.\n\nThat feeling slipped a little as I headed back into the house for dinner. I'd told myself that studying in the library for the last two hours hadn't meant I was scared and trying to put off this moment. But I was definitely aware of my increased heart rate as I returned.\n\nI got my dinner, a grilled chicken salad with dried cranberries. As I entered the dining room I saw Evelyn sitting with Macie and a few other seniors. I looked around for Sadie, but I didn't see her.\n\n\"Surprised you're here, Aly. Don't they do the pride meetings on Monday nights?\"\n\nI felt my ears burn. \"What the hell is that supposed to mean?\"\n\nMacie shrugged. \"You know, hang out with your real sisters one night. You could surround yourself with dykes like you want.\"\n\n\"Fuck you, Macie. If you want to keep living in the dark ages, there is nothing I can do about it. But you aren't going to make me feel bad about not being a classless bigot.\" My voice rose higher as I said it.\n\n\"Hey, chill out. Just thinking if your 'lifeguard' isn't doing it for you, you could try a few swings for the other team. See what it's like.\" She said the word lifeguard like she didn't believe Taylor was real.\n\nIf only she knew how Taylor 'did it' for me.\n\n\"If I did, it would be none of your damn business, Macie O'Brian. Maybe you should try a woman. You've never had a boyfriend that I've ever seen\"\n\n\"I use men as God intended. One night at a time. And when I'm done they're happy, I'm happy, and they leave. Everyone wins. But people see them. No one I know has even seen this Taylor. Not even Sadie. Why haven't you brought him around?\"\n\n\"This conversation should make that obvious.\"\n\n\"What's obvious is that you're hiding something, Aly.\"\n\nThe look on her face scared the crap out of me. It looked like she knew something, or at least suspected it. I scowled at her and turned away, sitting by myself. Evelyn stood up and came over and joined me.\n\n\"Don't mind her.\"\n\n\"What is her problem? God, this is supposed to be Los Angeles, in the twenty-first century. I try to be a little open minded, and...\" I shook my head.\n\n\"Hey, it's okay, I'm still in your corner So are the others.\"\n\n\"What's going on?\" Sadie sat down next to me and I just shook my head.\n\nEvelyn answered. \"Macie's being a bitch.\"\n\n\"Ah. About what it's usually about?\"\n\n\"She's still up in arms about what Aly proposed.\"\n\nMacie got up to leave with several others, and Sadie leaned forward. \"Methinks she doth protest too much.\"\n\nThat made me giggle. \"I doubt it. That girl's gone through half the guys in school.\"\n\n\"Yeah, but she doesn't care a lick about any of them. She's an odd duck.\"\n\nEvelyn sighed. \"True, but that doesn't mean she doesn't talk about them all the time.\"\n\nSadie gave a sly smile. \"Trying to prove something to everyone?\"\n\nI tried to stifle a laugh. \"Stop it. This is exactly what I'm talking about. It shouldn't matter at all who Macie or anyone else wants to be with, or not be with.\"\n\n\"I know, I know.\"\n\n***\n\nAfter class on Tuesday I made a beeline to Taylor's apartment. I admit I was hoping for a little matinee when I arrived, but Taylor was already ready to go to lunch. She was dressed more smartly than I was used to, with her hair combed and wearing one of her nicer button ups and jeans.\n\n\"You look nice.\" I gave Taylor a kiss as she took my hand.\n\nShe was definitely a little nervous. \"You remember the commission I got at the fair? The guy who wanted the water sculpture in his backyard?\"\n\n\"Sure.\"\n\n\"Well, after lunch I have to go and meet him and his contractor to get measurements and things. I was hoping you'd come with.\"\n\n\"I'd love to.\"\n\nTaylor gave me a wickedly sly grin. \"Good, you can be my assistant. Carry my stuff, help me measure things.\"\n\n\"It would be my honor, My Lady.\" I dropped into a curtsy, dipping my head and lifting my skirt out and everything. That made Taylor laugh, which I loved. She has the most beautiful laugh, rich and free, when she relaxed enough to share it.\n\nAnd it was wonderful to see her interact with her client and the foreman. At first glance the backyard was a disaster, dirt and tarps everywhere. But I could see how it was taking shape. I'd had one Landscape Architecture class my junior year, and I could recognize some of the techniques they were using and where things were likely headed.\n\nI was able to ask some intelligent questions of the foreman about how they were running the water lines and electricity, which ratcheted up his respect for me, at least. Taylor, on the other hand, was fearless, climbing right down into the pit that would someday be the pool with the owner and talking and pointing.\n\nWe took some pictures of the scenic backdrop, which consisted of a lovely view of the forested hills beyond. I looked over the blueprints and asked for copies of the section where Taylor's sculpture would go. Luckily the measurements were already there, so I didn't have to go down into the dirt with Taylor to measure.\n\nWe spent almost two hours going over things, trying to figure out exactly what he wanted, as well as looking at building materials and the color of the stone and wood stains that were being used.\n\nI came near and heard them talking.\n\n\"So, I'll have some sketches for you by the end of the week. I've already got a few ideas.\"\n\n\"I have to admit I'm excited. Oh, here.\" He reached into his billfold and handed over a check. \"I've added $300 for materials. Let me know if that's not enough. I really was just guessing at the number.\"\n\n\"I will, thank you.\"\n\nWhen we got back into my car Taylor was looking a little stunned.\n\nI put my hand on her knee. \"Hey, I thought that went well.\"\n\nTaylor interlaced her fingers with mine and nodded. \"Yeah. It did.\"\n\n\"Do you have any idea what you're going to do?\"\n\n\"Yeah, I have a few ideas.\" She placed her head back against the headrest. \"That was amazing though. It was like being a real artist, like an adult, with a job.\"\n\n\"You are a real artist, sweetheart.\"\n\n\"Ok, not a 'real' artist, a professional artist, like I could really do this, not just as a hobby or a side hustle.\"\n\n\"I know you can, Taylor. I've always known it.\"\n\n***\n\nBack at Taylor's apartment we threw together a bowl of spaghetti and meatballs with salad and garlic bread. I got to make the garlic bread, and it turned out really well.\n\nAs we sat at the table I noted Taylor was picking at her food a little.\n\n\"You aren't hungry, sweetie?\"\n\n\"No, I just, ... I'm thinking.\"\n\n\"About what? Today?\"\n\n\"No, not so much today.\" She breathed out a sigh and sat back in her chair. \"I don't know how I'm going to get this all done. With the commissions I took and the show in April. I'm already exhausted. I've worked every night till midnight this week.\"\n\n\"What do you want to do?\"\n\n\"I think I need to go down to part time at the beach. Three days a week, maybe. I just don't know how I can.\"\n\nI almost asked if I could help, but I caught myself. That likely wouldn't go well. But I filed it away for future consideration.\n\n\"Am I going to lose my Tuesdays with you?\"\n\n\"No, no, God.\" She reached out and took my hand. \"You're the only thing keeping me sane.\"\n\nA smile stretched across my face. \"I love you. Now eat your dinner.\"\n\nTaylor smirked at me. \"Yes ma'am.\"\n\nLater that night I was lying in Taylor's arms, the taste of her still in my mouth. Her eyes were closed and her breathing was starting to ease as she recovered from what I'd just finished doing for her. Today had been Taylor's day, and I was so glad she'd let tonight be all about her as well. So far, at least.\n\n\"Did My Lady enjoy that?\"\n\n\"Oh, baby, you have no idea.\" She pulled me into her embrace. \"I'm going to do it. I'm going to put everything I have into this show. I want to try to make something better. For us.\"\n\nUs. What a word. \"I'm so proud of you, Taylor. You're going to be amazing. I mean, you're already amazing, but, I mean...\"\n\nTaylor shut me up with a kiss, and all rational thought left me as I melted into it. \"Thank you, baby. Now shh.\" She turned me around so my back was pressed against her. One arm was holding me from underneath, caressing my breast, while her other hand moved softly over my tummy and between my legs. I closed my eyes and let My Lady sweep me away.\n\n- Taylor -\n\nI waved goodbye as Aly drove away toward school. And I headed straight into the garage and started up my bike. I had a couple of errands to run before I headed out to the warehouse for the day.\n\nAs I knocked on Jen's office door I was surprisingly calm. It's amazing how much more confident and together I felt after a night with Aly in my bed.\n\n\"Come in.\"\n\nI entered. Jennifer was sitting behind her desk. There was a shelf to her left with several picture frames. One of her and her volleyball partner holding a trophy, one of Vicky, smiling and beautiful, and one of them both, Vicky in a flowing white dress, her arm around Jen, who was wearing a white tuxedo.\n\nI imagined one of those pictures hanging in my home, with Aly in the dress. And the thought of it gave me peace.\n\n\"Taylor! What are you doing here?\"\n\n\"I need to talk to you about my schedule.\"\n\nBy the time I left I'd made the change. After this week, I'd go down to Friday, Saturday, and Sunday only. Jen had wished me good luck, and invited me down for dinner tonight. I'd take her up on it, I could use all the free food I can get. But I did still have a little money that I had set aside from the fair for Aly and me, and I wanted to use it before I went into full budget mode.\n\nI parked in front of the adult toy store where Aly had taken me several weeks ago. I wondered how walking into a shop like this was so much scarier to me than walking away from my secure paycheck had been just a half hour ago.\n\nLuckily, for me at least, the place was empty again, save for the same sales girl who'd been here before. She wished me a good morning and I waved pathetically back before heading over into the toy section. I could see the black leather, um, stuff, just off to my right.\n\nI jumped a little when the door opened again, and an older gentleman entered. Luckily for me he headed straight back to the DVD area without looking around. I nosed around for a few minutes, all of a sudden totally unsure of what I wanted. The man evidently knew exactly what he was looking for, as he checked out quickly, and I watched him out of the corner off my eye until he was gone.\n\nI caught the clerk, Trinity, that was her name, smiling at me in the reflection from the glass, and my traitorous cheeks heated up. I turned away, but I could feel her getting closer.\n\n\"Hey! So how did your last purchase work out?\"\n\nThe heat of my blush spread up into my ears. \"You remember me?\"\n\n\"Sure. You were in here with that pretty brunette. The one who couldn't keep her hands off you.\"\n\nI couldn't help but smile. \"Yeah, that's my Aly.\"\n\n\"Aww. You're adorable.\" She clapped her hands. \"So, what are we looking for?\"\n\nI took a deep breath and tried to summon Aly's boldness. \"Aly also really liked the, ah, the handcuffs, and, um and I kind of want to see about taking that to the next level?\"\n\n\"Oh, we can do that. The first thing I'd recommend are a good set of wrist and ankle cuffs. They're a lot more comfortable for longer play sessions.\"\n\n\"Yeah, the cuffs seemed to hurt her a bit. She didn't complain about it during, but her wrists were definitely red and sore after.\"\n\n\"That tracks. If she's a natural sub, when she gets deep into a scene pleasure and pain all get sort of intermingled. She won't make good decisions about what's hurting, and you can't trust her to safeword out.\"\n\n\"Yeah, subspace, I read about that.\"\n\nWe talked and shopped for almost forty-five minutes, and I relaxed significantly as she walked me through the options. It kind of amazed me, since she couldn't be any older than I was, but she'd had such an array of experiences it made me feel like a sixteen-year-old virgin. And the matter of fact, nuts and bolts way she spoke about these incredibly intimate things was amazing.\n\nSex had been an absolutely taboo subject growing up, and the only word ever spoken about it in my home was 'don't'. My father had threatened both of my older brothers with castration if they got a girl pregnant before marriage, and, while he was gentler of language about it, my sisters and I were under the distinct impression that we would be put out of the house if we ever found ourselves in the family way. I doubt the concept that one of his children might end up gay ever even crossed his dogmatic little mind.\n\nAnyway, I left with a bag full of goodies and my head held high., and I couldn't wait to see Aly again and try them out. But I might wait for a few weeks until Aly's birthday and make it a special night. Actually, that sounded perfect.\n\nAnd now I was going out to the warehouse to make something amazing for my client. I have clients. I was going to make this work, for Aly, so I could be the person she needed me to be. That I needed to be.\n\n- Aly -\n\nI got a lot of work on my senior project done over the next few days, mostly because I was hiding in my room or at the library instead of interacting with my sisters at the house. Sadie would keep me company sometimes, but I spent most of my time alone. I was always fighting the urge to go out to Taylor's apartment, but if she knew I was doing that she'd feel pressured to come home early, and she needed to work. It would be better when she went part time, but she'd still be working weekends.\n\nAnd I was scared for her because of that, too. Worrying about money was something so foreign to me, and talking to Taylor had exposed how privileged I really was. I didn't have to worry about school or student loans. I'd gotten a brand new, not inexpensive car for a graduation gift. I had a trust fund that meant I was going to have extensive savings the minute I turned twenty-five, sooner if my parents agreed I needed it.\n\nI'd never had to juggle rent and electricity and gas, or have to check my balance to see if I could afford groceries. I'd let Taylor pay when we went out often, and suddenly that felt incredibly selfish.\n\nBy Saturday I just wanted to get away, so I asked Sadie if she wanted to come out to my parent's house and swim, sunbathe, and generally lounge around by the pool for a day. She said she'd been planning to spend the day with Noah, and asked if she could bring him along, since it was more exciting than their current plans which consisted of 'hanging out'.",
        "So I ended up heading out to the house with Sadie, Noah, Evelyn, and her boyfriend Trent. It wasn't a bad afternoon. Dad even used the excuse to fire up his grill, which forever endeared him to the two boys in our group at the very least. I was in a distinctly more depressed mood, and as valiantly as I tried to hide it wasn't fooling anyone. At least not Sadie.\n\n\"What's wrong with you? Something going on?\"\n\nI've had to spend the day watching you and Evelyn hang all over your lovers, while I can't even acknowledge mine at school. \"Nothing. I'm fine.\"\n\n\"Bullshit. Is there something wrong between you and Taylor?\"\n\nShe sat down next to me. \"I told Noah, you know.\" I looked at her, shocked, but her gaze was calm and level. \"I don't keep secrets from him. And I trust him. And I think you can trust Evelyn with this, too. You don't have to hide all the time.\"\n\n\"Thanks, Sadie.\"\n\nBy the time Tuesday afternoon rolled around I was a miserable, emotional wreck. Everyone was still treating me differently at the house, split between people avoiding me or telling me they were supportive. The latter almost always did so in private, though. It didn't help that I was going to start my monthly in a day or so, so it wasn't going to take much to reduce me to a weepy mess.\n\nThe afternoon had started wonderfully. Taylor and I went for a walk in a local park, watching the dogs play in the bark park and children do the same on the playground. Taylor had brought a Frisbee which we threw around for a while, basking in the bright sunshine.\n\nIt wasn't until we made it back to her apartment after dinner that I lost it. We were sitting on the couch, cuddling, and she asked me gently how my week had been, and I started blubbering about how unfair it was and how mean Macie had been. Saying it out loud made me sound, to my ears at least, like a petulant child, and I was heartily ashamed of myself. Which, of course, only made things worse.\n\nTaylor just hugged me close, told me how much she loved me, and put on some feel good comedy. It made me laugh, and her touch soothed me. When she carried me back to bed she didn't even try to initiate sex, which I was so grateful for. She just held me close through the night.\n\nI felt so terrible. I'd totally ruined our time together. Well, maybe not totally, but I felt like it. She was being so brave, taking a risk, putting herself out there, and I was such a coward. I needed to help her somehow, to show her I was behind her.\n\nI was very attentive to My Lady in the morning, trying to apologize for last night through my actions, even though Taylor wasn't the least bit upset or angry. I was projecting and I knew it.\n\nI thought about it on the way back to campus. How could I help Taylor? What could I do? I was just a spoiled rich girl, like she'd always thought. Rich. Well that is something, I guess. Taylor needed money. I could take care of, well, some of that at least. Taylor would never take money from me. But Jen was her landlord. I could just do an end run and give Jen the money directly.\n\nIt would take talking to my parents. I mean, I don't actually have thousands of dollars in my name anywhere. And how the hell much is rent for something like Taylor's apartment, anyway? Maybe a thousand dollars a month? That sounds like it could possibly be close to right? Mom might know.\n\nI had an hour between my first two classes when I usually had some lunch, so I called my mom. She said they weren't going to be home tonight, but she and my dad would both be there tomorrow. Great, nothing like an extra twenty-four hours to talk myself out of something.\n\n***\n\n\"So, let me understand this correctly. You want to take six thousand dollars out of your trust fund to give to your girlfriend?\" Damnit, why did it sound so stupid when my father said it out loud?\n\n\"I'm not going to give it to her. I'm going to pay her rent. You know, from now until her show in April. Six months. That's all. This is her big chance, daddy. This could be everything for her, and I want to help.\"\n\nMy mom leaned forward and folded her hands on the table. \"Honey this is a very risky investment.\"\n\n\"Mom, it's not an investment. It's a gift. After what she did for Kelsey, this is not that big a deal, is it?\"\n\nDad shook his head. \"So this is a reward.\"\n\nThat was stupid. That wasn't why I was doing this at all. \"No, daddy. This is because I love her. Because I need to do everything I can to help her achieve her dreams.\" I cringed as heard myself say it. Wow, that was cheesy.\n\nMy dad leaned forward, and I could see it in his eyes. This is exactly what he'd been afraid of. \"Alyssa, doesn't it bother you that she would ask this? After only a few months?\"\n\n\"She didn't ask. She'd never ask. You have no idea how badly she wants to be worthy of me in your eyes, daddy. I already told you about her family. I can't be like them. I need to do this.\"\n\nMy parents looked at each other, doing that telepathy thing that old married couples sometimes do. \"Your father and I are going to talk about this. You going to stay the night, or are you heading back?\"\n\n\"I'll stay.\" What the hell, maybe my being in the house would give some positive energy.\n\nI helped Kelsey with some homework, reading over a report she was writing and giving her some pointers, but I still climbed into bed early, before nine o'clock, pausing to send Sadie a text letting her know I wouldn't be back that night. My cat jumped up and joined me, sitting down on the pillow next to mine.\n\n\"Hey, Taffey.\" I held up my hand and she butted her head against it, purring. \"Remember that girl I was telling you about?\"\n\n\"Meow.\"\n\n\"Yeah, that's the one. I'm in love, sweet girl. And it's the scariest thing ever.\"\n\n\"Mew. Rrrrrrr.\" Taffey pushed her head against my chin and flopped down next to me, and I just scratched her soft coat for a few minutes. I grabbed my phone from the bedside and sent Taylor a text.\n\nMe -- I love you.\n\nThere wasn't an immediate response, but I didn't worry. She was probably working or on the road. A cat is a poor substitute for a lover, but it wasn't so bad, and I drifted off to sleep.\n\n***\n\nI woke up before dawn, and there was a response.\n\nTaylor - I love you, too.  Sleep well, baby.  I miss you.\n\nI dressed and headed down stairs where my dad was toasting an English muffin. \"You want one, sweetie?\"\n\n\"Sure, dad, thanks.\" I helped myself to a Clementine from the fruit bowl and sat down. Mom made her appearance a few minutes later. Dad was dressed in a work shirt and jeans, which meant he was going to be onsite today, but mom was immaculate in a skirt, jacket and ruffled blouse.\n\nI was fixing to burst, wanting to know what they'd decided, but they let me stew for several minutes while mom got her coffee.\n\nThey both sat down at the breakfast table, where my knee was bouncing up and down.\n\n\"So?\"\n\nDad looked at mom and sighed.\n\n\"Okay. We'll let you do this. But this will be the only time, is that understood?\"\n\nI nodded vigorously. \"Yes, sir.\"\n\nDad still looked nervous. \"But I want you to keep your eyes open. People use people sometimes, Aly. I don't want that to happen to you.\"\n\nThat was a not so subtle dig at Taylor's character, and I bit back an angry retort, reminding myself they had only met Taylor once.\n\n\"Okay, dad. I will. If you admit you don't know her like I do, and you agree to give her a chance. A fair one.\"\n\nMom reached over and put her hand on my dad's, and his expression softened. \"Deal.\"\n\nKelsey chose that moment to bop downstairs and into the kitchen. She must have sensed the dissipating tension in the room, since she looked at each of us and asked what was going on.\n\nI shook my head. \"Nothing, kid. You want a ride to school? I'll tell you about it\"\n\nShe bobbed her head. \"Yeah.\"\n\nAs we drove away I filled her in on what I was wanting to do for Taylor.\n\n\"Ooh, that's so romantic.\"\n\n\"Thanks, I hope she thinks so. So no one at school will give you a hard time if your lesbian sister drops you off?\"\n\n\"Nope. If they did they wouldn't be my friends. It doesn't bother me.\"\n\n\"So you told your friends?\"\n\n\"Of course. My sister's dating this supper sexy lady lifeguard, the same one who saved my life. It's such a great story.\"\n\nI shook my head. \"You're braver than I am.\"\n\n\"Why? You aren't telling people?\"\n\n\"Not the girls at my sorority. I mean, Sadie knows, but no one else.\"\n\nKelsey looked at me with a weird expression. \"Did I tell you there's a lesbian in my AP biology class? I asked her to be my lab partner. Some of the other girls were making fun of her, and I told them off.\"\n\n\"And you don't worry they'll think you're, y'know?\"\n\n\"What if they do? I know what I am. And I'm not gay, just so you know.\"\n\n\"Are you sure? I didn't know at your age.\"\n\n\"Nah. I saw Jimmy Daniels with his shirt off after school the other day. He was all sweaty and shiny. I'm very sure.\"\n\nI couldn't do anything but laugh as I pulled up to the drop off area. She gave me a kiss on the cheek and was out the door. That kid was going to be something someday. Hell, she already was. How on Earth can an eighteen year old be that fearless, while her older sister is scared shitless half of the time?\n\nIt was something to think about.\n\n- Taylor -\n\nLast week had been amazing. Three whole days when I got to work on nothing but my art. I had sent three of my sketches to my client and he and his wife were very enthusiastic about one of them. It wasn't the one I'd have chosen, but hey, that's okay. I might build the others anyway for the show. I had a couple more smaller commissions that I needed to finish up after this one, but then I'd be able to completely focus on the show.\n\nIt was finally sinking in that I was having a show at Beville's Studio. Now it was all about putting my best foot forward. Unfortunately, as well as that was going, I wasn't a hundred percent sure I was going to be able to make rent all the way until April, especially if something went wrong with my bike or something. I saw a lot of Ramen noodles in my future, and not the good kind from that place over on Main St.\n\nAly'd been acting weird last Tuesday, too. Just a little, but I was still wondering about it. It was like she had something she wanted to tell me.\n\nIt had ticked over to November, and I knew I could make this month's rent without a problem, so I knocked on Jen and Vicky's door. My usual auto payment had been rejected, so I needed to figure out what was going on.\n\n\"Hello, sweetheart, come in.\" Vicky gave me a little kiss on the cheek, which made my cheeks turn red.\n\nI inhaled as I entered. \"Mmm, what is that?\"\n\nVicky clapped her hands and smiled, which was enough to knock a person over. \"Jennifer is cooking. Have you eaten?\"\n\n\"No, I haven't. Are you sure there's enough?\"\n\n\"Meu Amor?  Taylor is here. Is there enough for three?\"\n\nJen's voice answered in the affirmative and I sat down on one of their chairs.\n\nVicky sat across from me on the couch. \"So, Jen says you went down to part time. Your art is going well?\"\n\nI filled her in on everything that had happened at the fair and after, although it was very clear she was far more interested in my meeting Aly's family than my financial prospects. When Jen indicated it was time, I helped set the table and soon I was digging into stuffed pork chops with mixed veggies.\n\nEventually I pushed a very clean plate away and leaned back in my chair. \"That was awesome, boss.\"\n\n\"Thanks, kid.\" Jen set her fork down. \"So what brings you by, besides my mad culinary skills?\"\n\n\"Oh, yeah. My rent payment.\"\n\n\"Don't worry, I took care of it. I figured you forget to cancel your auto pay.\"\n\n\"Forgot to, uh, why would I cancel my auto pay?\"\n\nJen and Vicky exchanged a significant look, which made my brow furrowed in confusion. \"What's going on, guys?\"\n\nVicky looked concerned. \"Sweetie, when's the last time you talked to Aly?\"\n\n\"I've texted with her a bunch throughout the week, but I guess we haven't really talked since last Tuesday. I'll be seeing her tomorrow. Why?\"\n\nJen shifted in her seat. \"Aly came by last week, I think you were out at the warehouse.\"\n\n\"And?\"\n\n\"She paid your rent for the next six months.\"\n\n\"She did what!?\"\n\nThey spent the next few minutes trying to soothe me and talk me down from doing anything stupid, but I couldn't be there. I needed to be by myself so I could think. I stormed up to my apartment and flopped down on my couch. I turned on some Mozart, hoping it would help me relax, and maybe inspire some insight into what to do.\n\n***\n\nI barely slept that night, as I couldn't get my thoughts to settle down. What in the hell was I going to do? I couldn't let Aly do that, and I was really angry that she'd try without even talking to me about it.\n\nThe morning just drug by. I went through two different Tai-Chi workouts and even took a walk around the neighborhood. Eventually I ended up in my one chair, facing the door, waiting for Aly. My heart was beating faster and faster as noon approached. Aly usually got here a little before noon.\n\nFinally, at ten till, I heard a car pull into the driveway and footsteps sound on my staircase. I took a deep breath as Aly walked in, and in the moment before her smile died on her face I looked at her. She was so beautiful, with light brown hair, a bright, brilliant smile that made the whole world better, and a curvy, luscious figure that made my mouth water. But really it was those eyes, innocent and so full of laughter, light, and love. And I watched them change from joy to fear at my expression.\n\n\"Taylor? What's wrong?\"\n\nI looked down. \"Aly, we have to talk.\"\n\nShe dropped onto the couch near me. I could see how scared she was and that she knew exactly why I was upset. But it needed to be said, so there was no question. \"Did you pay my rent?\"\n\n\"Yeah. Surprise?\" She tried to make light, giving me a nervous grin.\n\n\"Why would you do that? I didn't need you to do that.\" I tried but failed to keep my voice from rising\n\n\"I just wanted to help.\" Her voice started to tremble as she spoke.\n\n\"Aly, damn, how the hell did you get that kind of money? Do you have that, was it from your parents?\"\n\n\"No, it was mine, it was from my trust fund. It's fine, Taylor.\"\n\nI laughed bitterly inside. Trust fund. Of course she'd have a trust fund. And I was just some kind of charity case.\n\n\"So you're here slumming with me while you're a millionaire.\"\n\n\"I am not a millionaire!\"\n\n\"So at the fair, you could have just bought everything I had there for double my price. You could have just done that, or hired someone to do it.\"\n\n\"No, I couldn't! I don't have access to it, not until I'm twenty-five.\"\n\n\"Then how the hell did you...?\" Her face turned an even brighter red, and I saw tears swimming her eyes as she stared at the floor. \"Oh my God, you did have to ask your parents for me, didn't you?\n\nShe nodded. I could tell she was on the verge of tears, but this revelation cut me to the quick. I'd just confirmed every fear that her father had about me.\n\n\"It's not their money, Taylor. It's mine.\"\n\n\"That's not the point, Aly. What's your dad going to think? They'll assume I asked you for this, that I'm trying to take advantage of you. God, I'm never going to be anything to him but a no good lay-about sponging of his daughter. I mean, did you think that? That I asked you for money?\"\n\nAly shook her head, tears rolling down her face.\n\n\"I can pay my own way, Aly. I don't need your money. I don't want that. I don't want you to support me.\"\n\n\"I'm sorry.\" Her voice broke as she spoke, and she was crying openly. \"Do you want me to go?\"\n\nSeeing her like that was too much. \"I need a minute.\" The problem with my little apartment was that the only place to retreat and think for a second was the bathroom. I closed the door and took a deep breath, staring at myself in the mirror. Maybe she should go. She'd be better off with someone else. Staying with me would mean rifts with her father; her parents always giving her those subtle hints and proddings that she could do better. How long would it take her to start to believe them?\n\nWhile I was arguing with myself I suddenly heard my apartment door open and close. A cold wash of fear went through me, and I walked out into my living area, where only a very empty couch greeted me. I ran to the window that overlooked the street and saw Aly's Mini pull away down the road.\n\nOh, shit, what have I done?\n\nI flopped down onto the sofa, my mind trying to wrap itself around the fact that Aly had just run out on me. And this time there was no chance I'd find her back at my apartment. My jaw began to tremble. What would it be like? Doing the show without Aly? Not having her to talk to, to hold at night?\n\nI wasn't going to cry, I refused to. When Gillian left me I hadn't cried once. I wouldn't just because Aly was gone. I wouldn't. Aly was gone. Shit, it was getting hard to breath.\n\nBANG, BANG, BANG!\n\nSomeone was pounding on my door. \"Aly?\" My heart leapt as I jumped up and ran, grabbing the handle and swinging it open.\n\n\"What the hell just happened? Why did I just see Aly drive off crying?\" Vicky's voice was angrier than I'd ever heard it and I couldn't help but recoil a bit from the supremely furious look on her perfect face.\n\nI turned around and walked back into my apartment. \"It's nothing.\"\n\n\"What did you say to her?\"\n\n\"None of your business.\" What the hell was she doing here?\n\n\"I know what I saw.\"\n\nI flopped down on the couch and crossed my arms over my breasts. \"She shouldn't have done it, Vicky.\"\n\nVicky sat in the chair next to me. \"No, probably not. But her heart was in the right place.\"\n\nI took an exasperated breath and waved my hand out toward the road. \"She's a trust fund baby, Vicky. And I'm just pretending.\"\n\n\"Pretending? What are you pretending, Taylor?\"\n\n\"That I mean anything. That there is any possibility that I could bring something worthwhile to this relationship.\" I let out an angry chuckle and shook my head. \"I thought for one minute that I could, you know, make myself worthy. What a joke.\"\n\n\"It's just money, Taylor. So she has more than you. Who cares?\"\n\n\"Her dad cares. Eventually he'll convince her that she cares, too.\" I blew out a breath and lowered my voice. \"Maybe someday I could be with someone like her. But it isn't now, Vicky.\"\n\n\"So you're assuming she wants someone to take care of her? Financially, I mean? That she wants to be the little woman, dependent on you? Jen told me about your conversation. I thought you'd settled this.\"\n\n\"I guess it's not that easy.\"\n\n\"Demons aren't easy to kill. There not intended to be.\" Vicky sighed. \"Let me ask you a question. Who's supposed to make more money in a relationship?\"\n\nI looked at her confused. \"It doesn't matter.\"\n\n\"It seems to me like you think it does.\"\n\nMy brow furrowed, but she kept going.\n\n\"You think because, what? You're taller? You wear your hair shorter? So somehow you think you are supposed to be the man? And I mean the toxic, 1950's variety? My Jennifer is taller, stronger, more what you call butch than I am.\"\n\n\"I know, and you make more money than her, she told me. That's not what this is about.\"\n\n\"Then what? I grew up in a two room apartment in a bad part of Rio. Jennifer grew up in a gated suburb in Phoenix. We come from as different worlds as there are. But we work. Because we support each other with everything we have, whatever that is.\"\n\nI started to respond but she cut me off.\n\n\"Why does Aly love you, Taylor?\" I made a face, and she cut off my initial response that she didn't, really. \"And she does love you. Without question\"\n\nI took a deep breath. \"Because I rescued her sister.\"\n\n\"That's not it, and you know it. That's how you met. Why?\"",
        "My cheeks were burning, and I was staring directly at the floor, hands folded in my lap. \"Umm...\"\n\n\"I won't make you answer. But you know the reasons, and they have nothing to do with your bank account. And you love her the same way.\" She moved over to the couch next to me. \"Now I agree that she should not have done what she did without talking to you. But she did it so you could have everything you've ever wanted, because she supports you no matter what. And that is not a reason to drive her away.\"\n\nShe was right, of course. I felt like an idiot. I picked up my phone and stared at it. \"How do I fix this?\"\n\n\"You talk. In person.\"\n\nI nodded and took a steadying breath.\n\nMe -- Aly, please come back.  I'm sorry.\n\nI stared at it for a minute.\n\nMe -- I love you.\n\nA tear slipped free from my eye and landed on my phone, and I looked up at Vicky, who pulled me into a hug.\n\n\"I love her, Vicky. I can't lose her.\"\n\n\"Oh, sweet child. You're going to be okay. I know it.\"\n\n- Aly -\n\nI honestly have no idea how I made it back to the house without crashing my car a dozen times over. Tears were freely running down my face the entire way. Luckily there was no one in the common area when I got there, and I was able to make it up into my room without meeting another living soul.\n\nBy the time I fell onto my mattress I felt numb inside. My thoughts insisted on chasing themselves around inside my head, mostly centered around how colossally stupid I'd been. I knew money was a sore spot with her. Just throwing it in her face like that had been beyond idiotic.\n\nI kicked off my shoes and crawled under my comforter. I heard my phone buzz, but I didn't look, instead dropping it into my backpack. Tears found me again, and I cried until I fell asleep.\n\nThe light came on and I dimly heard the door close.\n\n\"Aly? What are you doing here?\"\n\nI looked over at her, and watched Sadie's face change from curiosity to worry as she saw the tracks of my tears. \"Oh, God, Aly, what's wrong?\"\n\n\"I'm an idiot.\" I turned away from her and buried my head into my pillow, letting the flood come again.\n\nI felt Sadie's weight settle on my bed, and her hand rested on my shoulder. \"Sweetie? Tell me what happened?\"\n\nI sat up and let my best friend pull me close. After a few minutes I managed to tell her what had happened. I sat next to her after I'd finished, hands folded in my lap and eyes downcast.\n\n\"Have you tried to talk to her since?\"\n\nI shook my head.\n\n\"Has she tried to talk to you?\"\n\nI shrugged my shoulders.\n\nShe looked around. \"Where's your phone?\"\n\nMy eyes couldn't help but turn towards my backpack, and Sadie fished it out.\n\n\"Here.\"\n\n\"I don't want to see.\"\n\n\"You don't want to see what she wrote?\"\n\n\"I don't want to see if she didn't. If she really doesn't want me anymore.\"\n\n\"What if she does? Look, I agree, you screwed up. But that is not a reason to throw something away. And if she's the one for you, she'll know that, too. Now...\" she forced my phone into my hand, \"pull your head out your ass and look at your phone.\"\n\nMy eyes were burning, my heart hammering in my chest as I looked at the screen. Two texts, three simple sentences, and a heavy tear fell from my eye. It had been several hours since she'd sent them. Please still be there.\n\nMe -- Can I still come back?\n\nThe responding bubble appeared immediately.\n\nTaylor -- Of course, baby.   \n\nSeeing the word 'baby' made me almost dissolve right there.\n\nI showed Sadie, who smiled and gave me a one-armed hug. \"See? It's going to be fine.\"\n\n\"I think I've got some groveling to do.\" Of course, groveling for Taylor was likely to be more fun than it should be. I couldn't help a little smile.\n\nThe drive over seemed to take forever, and I couldn't remember being so nervous and excited and terrified to see Taylor since the first time. The butterflies were swirling in my stomach as I climbed the stairs. I decided to knock on the door instead of just walking in like I usually would.\n\nI heard footsteps and the door opened. There she was, tall and strong. She was wearing what she'd been before, a coral tank top and knee length board shorts. Her shoulders and arms were so well muscled, and her legs defied description, but the only thing I saw were those eyes, crystal clear blue. I'd seen them hard and full of commanding presence, deep with pain, even ice cold with anger, although the last one had never been directed at me before today.\n\nThis time, though, they were just worried and sad. Sad. I'd caused that. I couldn't look at her any more, my eyelids closed and I bowed my head. Two fingers slipped under my chin and lifted my face to hers. She was so beautiful, and I could feel my heart breaking as I looked at her. Then a miracle happened. A smile spread over Taylor's strong features. Not a goofy ear to ear one or a happy, joyful one, but a sad, shy one, one that asked me a very simple question. There was only one possible answer, and I went into her arms and her lips found mine.\n\nWe kissed, soft and gentle, and I let myself melt into her.\n\n\"I'm so sorry, Taylor.\" I laid my head on her shoulder and she held me close. \"I should never have...\"\n\n\"It's okay, baby, I shouldn't have gotten angry. I'm sorry, too.\" I let her hold me for a few more wonderful moments. \"C'mon, baby. Let's go inside.\"\n\nWe sat on the couch facing each other.\n\nTaylor looked nervous. \"I'm not good at this.\"\n\n\"Good at what?\"\n\n\"Trying to make a relationship work. I don't know much about it, really. But, Aly, when we have an issue, you can't keep running away. Please.\"\n\nI nodded, eyes downcast. \"I know. It's always my first instinct.\" I managed a delicate little laugh. \"My parents used to tease me about it when I was little. If they ever found me hiding somewhere their first question was 'What did you do?'\"\n\n\"Really?\"\n\n\"Yeah. One time I broke this crystal thing my Grandma had given to my parents as a wedding gift, and I hid for over a day.\"\n\nTaylor laughed and shook her head.\n\n\"Seriously. My mom told me later she knew where I was the whole time. But I still slept underneath one of the guest beds all night.\"\n\n\"You're adorable.\"\n\n\"Dad told me later that mom actually thought the thing I broke was really ugly, so...\"\n\nI took a deep breath and looked my lover in the eyes. \"I'm sorry about not asking you about the money. I really just wanted to help. And I told my dad that you didn't ask for it, that you wouldn't take if I offered. And I made him promise to give you a chance.\"\n\nTaylor harrumphed. \"You think he will?\"\n\n\"Yes, if I have to make him do it myself. But he will. Promise.\"\n\n\"Okay. I trust you. But about the money, Aly.\"\n\n\"Was I wrong? Would you have taken it if I'd offered?\"\n\nTaylor shook her head. \"No, probably not. I'd have been too stubborn and gotten angry.\" She reached over and took my hand \"And that would have been wrong.\" To say I was surprised at that comment would be an understatement. Taylor ran her fingers through my hair as her cheeks colored.\n\n\"Sometimes I think that if I'm not taking care of you I'm not doing my job. But then I remind myself you don't need me to take care of you.\"\n\n\"Yes I do! Maybe not with money, but in every way that matters you take care of me.\" My voice cracked a little as I responded. \"You're my center, Taylor. I need you. I love you so much.\"\n\nA tear slipped free from My Lady's eye, and I could barely see through the haze of my own. She put her arms out and I climbed into her lap, clutching her as she gently rocked me in her arms.\n\n\"You know I feel the same, right? That I love you? My precious baby.\" I just floated there, safe in My Lady's arms, letting her push away the whole world.\n\nUnfortunately the moment couldn't last forever, as my traitorous stomach gurgled reminding me I hadn't eaten since breakfast.\n\nWe laughed together for a moment before heading into the kitchen, where we made dinner together. Suddenly it was like the fight never happened, we were just Aly and Taylor again. It's crazy how things like that go, isn't it? I'll admit that I was a little overly, well, everything, I constantly watched her face, hoping for those little smiles that would tell me we're okay whenever we made eye contact, or I'd touch her when I passed by, trying to read her energy.\n\nAnd every time I did I relaxed a little. We were going to be okay. After we finished cleaning we sat together on the couch, and she pulled me into her lap, my head laying on her shoulder.\n\n\"We do still have to talk about this, baby.\"\n\n\"I know.\"\n\nHer fingers were running gently through my hair, and I wasn't scared. I knew it would hurt Taylor so much if I were ever truly scared of her.\n\nTaylor took a deep breath. \"When I was growing up, my dad made all the decisions in my house. He set the budgets, maintained the accounts. If my mother wanted anything she had to ask him, and he never consulted her about anything. A new TV or even a new car, it was what he wanted and what he thought was needed. We learned not to ask for things, or he'd get upset. I don't want that for us.\" Taylor paused and sighed. \"I guess, thinking about it, I'm more like him than I thought. And that scares me, Aly. This thing we do, it frightens me sometimes, how, um....\"\n\n\"Submissive I am?\"\n\n\"Yeah. Firstly, I love it, making decisions about where we eat or what we do, the way you look at me when you're trusting me to order for you. Taking care of you. I can't tell you how it makes me feel. But I don't ever want to turn into my dad. This can't ever be a one way street, either way.\"\n\n\"Yeah. I'm really sorry.\"\n\nTaylor laughed and kissed me on the cheek. \"I know, baby, you don't have to say it anymore. But make me a promise. From now on, the big things, things that affect us both, we talk about them first. We make decisions like this together. Okay?\"\n\nI nodded, tears in my eyes. She pulled me in for a kiss, and it filled my soul. Eventually she broke away, her perfect blue eyes boring into mine with equal measures of love and command. \"But you were a very bad girl, weren't you, baby?\"\n\nAll of a sudden I could barely breathe. \"Yes, My Lady.\"\n\n\"And what happens to bad girls, baby?\"\n\nMy voice was halting. \"They have to be punished.\"\n\nTaylor nodded slowly. \"That's right.\" I had no idea what she was planning, but I knew it was going to be both awful and amazing at the same time, and that realization made me start to tremble.\n\nTaylor continued. \"So tonight we're going back to bed, and you're going to service me, and then I'm going to bring you right up to the point of release, but you are not going to come. Do you understand?\"\n\n\"Yes, My Lady.\"\n\n\"And every night this week, until your birthday next Tuesday, you're going to spend at least fifteen minutes every night touching yourself, pleasuring yourself while thinking about me, but no orgasms. I have a special surprise for you next week, I want you primed for it. Am I understood?\"\n\nOh, shit how the hell was I going to manage that, especially without any release tonight to tide me over?' But I'd do it. I'd do anything for her. And I knew she'd make it worthwhile. By which I meant abso-fucking-lutely amazing. \"Yes, My Lady.\"\n\n\"Good girl. I love you.\" She gave me a kiss on my forehead. \"Now stand up, and remove your clothing for me.\"\n\nLater that night I lay there, naked in her arms, my body still humming and unsatisfied. She'd brought me to the edge at least three different times, in different ways, and left me hanging each time. I wasn't sure if I'd ever get to sleep. At least she'd let me pleasure her before and after each, which calmed me considerably. I could still taste her, and I concentrated on that as I sought sleep. There was also the touch of her skin, and the warmth of her, all so relaxing.\n\nWhen I opened my eyes it was still dark out. Taylor's fingers running softly up and down my arm as I swam toward consciousness, and I snuggled into her warmth, my head resting on her shoulder.\n\nShe kissed my forehead. \"Morning, baby.\"\n\n\"Good morning. You sleep well?\"\n\nTaylor gave a sweet little laugh as she pulled me tight. \"Yeah. You were amazing last night.\"\n\n\"I was trying to get you to change your mind.\"\n\nTaylor chuckled. \"No way. I do have a confession to make though. I was going to do this to you anyway. I have big plans for next Tuesday.\"\n\n\"You big meanie.\"\n\n\"You love it.\" Her hand went to my side and tickled me, making me squeal and laugh. Taylor held me tight, refusing to let me escape the sweet torture for several moments before rolling me onto my back covering both my body and mouth with hers. I melted into her kiss. If I just spread my legs a little, yeah, like that Taylor's thigh would start rubbing against me.\n\nTaylor shifted away. \"No, no. Nice try though.\"\n\nI groaned. \"Can't I buy my way out of it?\"\n\n\"See, now, that's what got you in trouble in the first place.\"\n\n\"Sorry, it's just what we spoiled rich girls do.\"\n\nTaylor smiled for a second, before turning somewhat serious. \"So, little Miss Trust Fund, how rich are you, exactly?\"\n\nI could feel the blush spread on my cheeks. \"It's funny. I never really thought of myself as rich. At least, not until I met you.\" Taylor glowered playfully at me. \"I'm sorry! That sounded bad.\"\n\n\"It's okay.\"\n\n\"I mean, at my high school there were plenty of kids that were from wealthier families than I was. I kind of considered myself average. Maybe a little above average. I have a small trust fund, nothing I could retire on or anything. It's a little less than half a million. Enough to buy a small house, maybe, or get some land and design and build my own.\" Suddenly I choked up. \"And now I think about making something for the two of us. Where you could do your art, and I could come home to you every night. A home, where we could be together, happy. Because without this,\" I placed my hand over her heart, \"it doesn't mean anything.\"\n\nTaylor shook her head. \"Who'da thunk I could fall so hard for a spoiled rich girl.\"\n\n\"So it doesn't bother you? That I have it?\"\n\nShe stroked my head. \"Would you give it up for me? If I asked?\"\n\n\"In a second.\"\n\n\"I believe you.\" A smile played across Taylor's beautifully strong features. \"I won't ask you to do that, though. My gift to you.\"\n\nI laughed, and she joined me, and we held each other. And nothing else in the world mattered.\n\n***\n\nIt was a seriously long week. Despite me putting forth my very best effort in the shower that morning, Taylor was insistent that I comply with her 'punishment.' At exactly ten o'clock that night I closed my advanced statics book and headed down for a shower, and I kept my promise to My Lady, letting my mind run wild with the things she might be getting ready to do to me on my birthday. Unfortunately, imagining those things made it much more difficult to comply with the second part of her requirement, no orgasms, but somehow I managed it.\n\nThursday brought our next leadership council. Macie was not happy when Evelyn informed us all that Heather was solidly in my corner, and to my stunned surprise my recommendation was approved and passed on to the alumnae committee by a vote of six to one. Macie looked daggers at me from across the table.\n\nI ignored her, her anger paling in comparison to the reality that I had struck a blow, admittedly small, for the rights of my sisters.\n\nThen came the meat of the meeting regarding the Christmas ball, which would take place the Friday before finals started. Macie stayed in her bad mood throughout, but the other girls were starting to come around, and I was no longer a pariah to most, as new gossip quickly replaced the old. That didn't make Macie happy, either. I thought she'd dropped it. I was wrong. But as the weekend arrived I didn't give Macie another thought.\n\nOne of the significant advantages of Taylor having more days off is that she was more willing to take weekend nights off from the warehouse. We spent Friday evening together at a poetry reading at a local wine house. Taylor introduced me to the owners, an older, married lesbian couple named Jackie and Tina. As I looked around I saw several other men and women who were clearly with same sex partners. So I asked Jackie if their business was intended to be for gays only.\n\nShe shrugged and shook her head. \"No, not particularly, but there's no judgment here, so that draws people. And Tina and I are very active in the LGBTQ+ scene so we get a lot of business that way. Tonight is specific to gay artists, though, so most of the people here will be members of the community. I'm glad you're here, Aly, excuse me.\"\n\nShe smiled and went off to greet another couple that had just entered, and I took in the room.\n\n\"You okay?\"\n\nI grinned and looked up at Taylor, nodding. \"Yeah, yeah I am.\"\n\nAnd I was. We spoke to several others who knew Taylor, and she confidently introduced me as her girlfriend, which was wonderful. Everyone was warm and friendly, and I felt so ... comfortable. I held Taylor's hand without a thought about who was watching us. And I felt accepted, a part of a larger whole that I hadn't ever experienced before.\n\nEven prior to meeting Taylor I'd never felt fully connected to the groups I'd been a part of, at least since I was a child. My friends, the sorority, the sports teams I'd been on and helped manage, there was always something that held me back. I knew what it had been now.\n\nThe place filled up quickly, and we shared the table we'd sat at with another lesbian couple. We talked during breaks in the reading, sharing how each had met, and they encouraged us with their stories of coming out to family and friends. They were both successful women in their mid thirties, living openly and without fear. At least that's how they appeared to me. They assured me that it hadn't always been a bed of roses, but ten years and two children together, they said it had all been worth it. And no matter what, they always had each other. It made me hold Taylor's hand a little tighter.\n\nWhen we arrived back at Taylor's apartment it was almost eleven. We got undressed for bed. I actually had some sleep shorts and a top that I kept here, so I looked from Taylor to the drawer in her dresser where I kept them.\n\n\"No, no clothes for you tonight, baby.\"\n\nI tried to keep the happy look off my face. \"Will you be wearing anything to bed, My Lady?\"\n\n\"No, not tonight.\"\n\nMy insides did a little happy dance at the thought of spending the night pressed up against my lover's skin. After we did what we needed in the bathroom, I was warm in My Lady's arms.\n\n\"Did you have fun tonight, baby?\"\n\n\"Yeah, I really did.\" I snuggled closer. \"It was nice. Being around other couples like us. Why haven't we done that more?\"\n\n\"Because we've been too busy doing other things.\"\n\nHer hands roamed down my body before tickling my side, making me squirm and squeal.\n\nWhen she stopped I looked at her sternly, and she sighed. \"Honestly, I was a little worried about it. I didn't want to scare you off.\"\n\nI scowled and propped my head up on my hand. \"You took me to a lesbian bar on our first date!\"\n\nTaylor chuckled, nodding and conceding the point. \"Yeah, but then I was trying to scare you off.\"\n\n\"Really?\"\n\nI thought she was kidding, but her blue eyes were sad and apologetic. \"Yeah. I thought you were just another straight girl who was going to break my heart, if I let you. Better to get it over with.\"\n\n\"Are you kidding? I was enraptured by you.\"\n\n\"That's how it usually started, then they couldn't run fast enough.\"\n\n\"I'm not running Taylor. I want to be with you.\"\n\nTaylor's eyes were heavy with emotion, and I lifted my chin and touched my lips to hers. She returned my kiss with a passion that took my breath away, and for a few blissful moments I lost myself in her. I could taste the wine she'd had at the poetry reading, and I smelled her light cologne, along with just the faintest hint of the sea from her skin and hair.",
        "Taylor pulled away, and I made a little unhappy face. Taylor's eyes were questioning. \"Have you touched yourself today like I asked, baby?\"\n\nOh crap, with everything else it had totally slipped my mind. I'm not sure when I would have had time, anyway. \"No, My Lady. I forgot. I'm sorry.\"\n\nI glanced at the clock, which said a few minutes past eleven thirty. Taylor saw it too. \"You still have time, baby. Come here.\" She sat up and leaned against the metal headboard. My pulse quickened as I followed suit, situating myself between her leg and leaning back. My Lady's left arm went around my shoulders, while her other went under my breasts, holding me gently to her.\n\nThere was a gentle kiss on my neck and Taylor's warm breath in my ear. \"You may begin, baby.\"\n\nI wet my fingers with my tongue and slid them down between my legs, massaging my small but already firm clit. I probably hadn't needed the extra wetness, as the contact with My Lady was causing my tingling body to provide plenty of its own.\n\nTaylor breathed kisses onto my neck and while massaging my breast, turning my sensitive nipple between her fingers. I sank back into Taylor's warmth, and within a couple of minutes my whole body was trembling. I turned to look at the clock.\n\n\"No, baby, just close your eyes. I'll tell you when you're done.\"\n\nIt was the longest fifteen minutes of, well, maybe not of my life, but it sure felt like it at the time. I kept rubbing my clit, trying to set a sustainable pace that wouldn't force me over the edge. However, that was a lot easier said than done with Taylor touching me so tenderly.\n\nMy breath began to come quicker, and I approached the point of no return much quicker than normal.\n\n\"Oh, God, oh GOD!\"\n\n\"No, baby. Feel the pleasure, but don't give in to it.\"\n\nIt was so intense that a tear slipped free from my eye. Bliss sang through my body, and I knew it would only take a moment to give myself over to it. But my Lady said no, and without her permission I just couldn't. So I kept going. And going.\n\n\"Okay baby, that's enough.\"\n\nI pulled my hand away, sucking in deep lungfuls of air. The clock did indeed say fifteen minutes had passed.\n\n\"Did you come, baby?\"\n\nI barely got the words out as I recovered. \"No, My Lady\"\n\n\"You're such a good girl. I'm so proud of you, and I love you so much.\"\n\nI tried to say it back, but my emotions were too thick. Instead I just accepted her kiss as we moved back into sleeping positions, and I replayed those words over and over as she held me until I finally found sleep.\n\n***\n\nLight was streaming in through the window. I slowly opened my eyes and reached out for Taylor, but she wasn't there. I started to roll over, and felt her settle next to me on the bed. She was already dressed, a light green tank top, sports bra, and jeans.\n\nI sat up quickly, a cold wash of panic running through my body. \"I overslept! I'm sorry.\" The clock next to the bed said eight-thirty, which meant Taylor had to go. \"I didn't get to wash you.\"\n\nMy voice was a little pouty, which made Taylor chuckle. \"I'm a big girl, baby, I can handle my own shower.\"\n\n\"I know, but...\" I frowned.\n\n\"Aww, baby.\" She gave me a little kiss and stood up. \"I have to go though. Will you be here when I get home?\"\n\nI hadn't been sure, until that moment, if I would be heading back out to school today or not. \"Yeah, I'll be here. Just going to hang out and work on my project. No distractions.\"\n\n\"Ok, then I'll see you this afternoon. I love you, Aly.\"\n\nI lifted my chin so she could kiss me. \"I love you, too. You want me to make dinner?\"\n\nThat drew a chuckle and a big smile from Taylor. \"You sure?\"\n\nI nodded. \"I promise I won't get in over my head like last time.\"\n\nTaylor laughed. I loved it when she laughed. There was an innocence about it that was so special. There was so much pain in her most of the time. She kept it covered, usually deeply covered. But sometimes, when we were together, she didn't just bury the pain, it actually lessened. It had healed some, I think. At least there was less now than there had been when I met her. I desperately hoped I was partially the cause of that.\n\n\"Okay, baby, I'll see you tonight.\" One more quick kiss, and she was gone. I flopped back onto my pillow. I felt alone all of a sudden, but that wasn't a bad thing, really. I missed her already. Just being around her made everything feel better. I could be me, completely and unreservedly, and that was wonderful. I knew that the moment I set foot back in the house I would have to start hiding again.\n\nBut here, this was my little oasis in the world. I eventually got up and crawled into the shower, which helped wake me up. I put in a few good hours on my project before running out to the store at lunch time. I decided to go for a shrimp fettuccine alfredo, the sauce coming from a jar. I could boil pasta, so the only thing I had to worry about was the shrimp, and I bought fully cooked and seasoned shrimp.\n\nIt probably was cheating, but it was going to be very hard to screw this up, so I had a decent amount of confidence in what I was doing. I got quite a bit done before I had to start dinner. I closed up fifteen minutes early so I could go lie in bed and take care of my obligation for the evening. Trying to do it a second night in a row while Taylor was touching and holding me was going to be darn near impossible.\n\nWhen Taylor got home I was busy in the kitchen, and it really did turn out well. We spent just a quiet evening at home, listening to music and reading while we cuddled on the couch. Eventually I pulled Taylor to her feet and made her dance with me. I kissed her shoulder, slowly working my way up to her neck, which always made Taylor turn to jelly in my arms, which I loved.\n\n\"You're being frisky tonight, baby.\"\n\n\"I didn't get my chance to service My Lady in the shower this morning. I missed it.\"\n\nA little laugh, and her gentle hand ran through my hair as I continued to nuzzle her neck. \"I missed it too, baby. Let's go back to bed and you can make up for it.\"\n\n\"Mmm, yes, My Lady.\"\n\nEventually I fell asleep in her arms, her taste still rich in my mouth. Taylor's heart was still racing, letting me know wordlessly how much she'd enjoyed what I'd done for her. I was sure that I'd enjoyed it every bit as much as Taylor had. I didn't miss our shower together the next morning, but I knew I had to get back to the house. I had work to do that needed material there, but I didn't want to leave.\n\nI snuck in the back door and made it to my room without running into anyone. I debated with myself as to whether I wanted to chance heading back out. If I went to the library I could study the rest of the day without seeing anyone, but I ran the risk of bumping into people coming or going. Staying in my room eliminated that issue, but people would be able to find me if they wanted.\n\nGod, I hated this. I remember spending afternoons down in the common area watching movies, or going out with the girls to parties. I missed it, not the parties so much as the camaraderie and friendships. Hiding in my room won out, and luckily I didn't see a soul until Sadie came back a little after seven. She said the girls were going to be starting up the Sunday night movie, a house tradition. I begged off, citing homework, which was a lie. I knew she hadn't bought it, but she didn't press.\n\nWhen she came back in after the movie I was just laying in bed.\n\n\"Hey, Aly. Just wanted to let you know Macie was looking for you.\"\n\n\"Why?\"\n\n\"I don't know, but I didn't like the look on her face. Smug.\"\n\n\"I'm just trying to avoid her.\"\n\n\"You won't be able to forever, you know.\"\n\n\"Doesn't have to be forever, just till May. Then I'll never have to see her again.\"\n\nI knew Sadie was concerned about me. To be honest so was I. I'd thought to myself I could handle anything, I'd been so sure, but I hadn't really expected any protracted opposition, and I really hadn't expected to be in the middle of the rumor mill like I was. Mostly I wanted this school year to be over so I could be with Taylor. For the first time I was really seeing what my life could be like. I'd loved going to work every day last summer at Urban Chic, brainstorming with the other architects and designers. And realizing not just who I was but also what I was and who I wanted to be with had been beyond life changing.\n\nBut I still had to finish this. Sadie always said that human beings were really bad at delayed gratification, and I finally understood why, as the freedom of graduation seemed an eternity away.\n\nAfter class on Monday all I could think about was what Sadie had said about Macie looking for me. That gave me a horrible, sinking feeling, so I went straight out to the library and stayed there until after ten. I got a lot done, but inside I felt like a coward, because I was hiding and I knew it.\n\nI managed to get to bed and back out to class without running into Macie. When the professor ended class Tuesday morning it felt like the sun coming out. I was going to see Taylor and she was ... oh, god, what was she going to do to me?\n\nAny contemplation of what awaited made me tingle from head to toe, and I had to really concentrate to keep my mind on driving. I was wearing a simple yellow sundress. Taylor had requested it, along with the requirement that I not be wearing anything under it. I was kind of cheating there. I wasn't going to class commando.\n\nBut that wasn't true about Taylor's apartment. As soon as I pulled into the drive I slipped off my bra and panties and stuffed them in my overnight bag. I couldn't believe how fast my heart was beating. I was already wet, one of the reasons I'd left my underwear on while driving.\n\nEven so, I walked slowly up the stairs, a part of me shaking with anticipation. There really wasn't any other way to put it, but I'd never been so horny in my entire life, and I include my first night with Taylor in that statement. Of course, then I hadn't masturbated right to the edge of orgasm for six straight nights.\n\nI put my hand on the door and took several deep breaths before pushing it open and walking inside. All the curtains were drawn and the lights were low, there were a few candles burning. My mouth was hanging open a little as I took in the scene.\n\n\"Hi, baby.\"\n\nMy eyes fell over Taylor, who was sitting calmly in a chair, one leg crossed over the other. She was staring at me, which made my mouth go dry. I set my overnight bag next to the door and stepped forward, removing my sandals and folding my hands in front of me.\n\nTaylor stood up and walked toward me, her eyes locked on mine. She was wearing a pleated white shirt, with the collar and several buttons undone, along with an untied bow tie hanging around her neck. Her black slacks hugged her slim, feminine hips and powerful thighs.\n\nShe closed the distance, brushing a hand over my cheek and walking around behind me. \"Happy birthday, baby\"\n\n\"Thank you, My Lady.\" Her breath in my ear made me shiver from head to toe.\n\nShe placed her hands on my shoulders. \"Have you done what I asked, baby? Every night?\"\n\nI drew a shaky breath. \"Yes, My Lady.\"\n\nSlowly she pulled the zipper down on my dress before slipping the shoulders straps down around my arms. The yellow material pooled at my feet, and I was naked. I felt no desire to cover. My body belonged to her. Covering would be wrong.\n\n\"Baby, you are so beautiful.\" Her hand ran up over my belly to cup one of my breasts, and I tilted my head to the side, letting her lips suckle the tender flesh there for a moment. \"You've been such a good girl this week. Are you ready for your reward?\"\n\nAs soon as she stopped speaking she went back to my neck.\n\n\"Oh, yes, My Lady, if you wish it.\"\n\n\"I do, baby. I'm going to enjoy giving you your presents. The first is on the couch. But first I want a kiss.\" Two fingers touched me under my chin and gently turned me, lifting my face to hers.\n\nI will never get over how good her lips feel on mine, what it's like to kiss this incredible woman, and how lucky I am that I'm the one who gets to do it. Her tongue met mine in their familiar dance, and I melted against her as her strong arms pulled me close.\n\nWe separated, and her perfect blue eyes looked into mine. Her gaze was firm and commanding, but there wasn't a hint of coldness. Underneath there was only tenderness and love, and I was immediately lost in her.\n\n\"Come on, baby.\" She walked me over to the couch. My eyes went wide. It was a collar, with a long strip of leather running perpendicular. There was also a cylindrical piece of material, and I wasn't sure what it was for.\n\n\"May I touch it, My Lady?\"\n\n\"Of course, baby.\"\n\nI picked up the collar. It felt like leather on the outside, but inside was an incredibly soft felt. It had a place to clip a leash in both the front and the back.\n\n\"Would you like me to put it on you?\"\n\n\"Yes, My Lady.\"\n\nTaylor took the collar from me, and I closed my eyes. The softness closed around my neck and a thrill ran through my body. This was already amazing.\n\n\"Turn around baby.\" I faced away. \"Put your hands behind your back, forearms together.\" I complied, and she slid the sleeve over one, then the other. It tightened to the point I couldn't move either arm more than a few inches, and then was clipped to the strap running down my back.\n\nTaylor kept my back to her, running a hand slowly down over my body. \"I love touching you.\" A finger ran around my areola. \"Let's see.\" Her hand traveled lower, and I gasped as a digit slipped between my lips and caressed my clit. \"My goodness, you're wet. Does wearing this excite you?\"\n\nExcite me? My God, I could barely stay standing. \"Oh, yes, My Lady.\"\n\nI whimpered as she stopped touching me and turned me around before leaning down and kissing me on each cheek. \"The problem is, your hands are busy.\" She began to unbutton her shirt, and I could see from up close there was nothing underneath. \"So how are you going to pleasure me?\"\n\nI leaned forward, pressing my lips to the exposed part of her flesh. She kept going, untucking her shirt and pushing back over her perfect shoulders. Her modest breasts were firm, her nipples erect, and I took one into my mouth, sucking greedily.\n\n\"Easy, baby. That's right, mmm.\" She sighed in pleasure and I rejoiced inside. I just wanted to make her happy, and I began to sink into that beautiful place where only she and I existed. Taylor stroked the back of my head, before moving me to the other side. God, I love the way she tastes, the way she smells, the sounds she makes as I gave her pleasure.\n\nI was completely enraptured in what I was doing when she lifted my chin, and I gasped at the shock of losing contact with her breast. She gave me a soft kiss before she spoke. \"Get on your knees, baby.\"\n\nI complied immediately. Taylor cupped her hands under my elbows to help me down, before she began to unbutton her slacks, which she peeled down her toned, tanned legs. Her underwear, black cotton, followed, and I was staring at her bare sex as my mouth began to water.\n\nHer palm rested against the back of my head, and I leaned forward, running my tongue through her wet folds. A part of me noted I wasn't the only one excited as I suckled on her lips.\n\nI avoided her clit as I enjoyed her, bathing my tongue in her incredible flavor, but knowing she wouldn't be ready right from the beginning. So I caressed her through her hood, then running down and rimming her vagina, pressing against the sensitive tissue hidden there.\n\nA steady stream of sighs and pleased sounds were streaming from My Lady. Maybe something in them changed slightly, or maybe it the way she ground her hips against me altered slightly, but after a time I knew she was ready, and I sucked her clit into my mouth, bathing it with my tongue. Taylor began to shudder and shake. She pulled away and sat down onto the couch, sliding her hips to the edge, spreading her legs and leaning back. I moved into position and took her into my mouth.\n\n\"Your tongue, baby, do it.\"\n\nI slipped my tongue under her good-sized nub and wrapped around it, which I'd become quite adept at over the past months. And it never failed, as My Lady's body immediately seized in pleasure, shuddering with a long cry as I caressed her before she began to pulse with orgasmic energy. She held me to her, which was a blessing, as I couldn't have maintained contact otherwise.\n\nWhen she finally came back down, I released her clit so I could lap up her fresh, delicious release. And slowly I began to work her again. It was weird, and also somehow made perfect sense, but time seemed to stretch as I went deeper, losing myself more and more in My Lady and her pleasure. My tongue swirled and dipped, my lips sucking and caressing and there was nothing but her, and the next time I could make her body pulse with bliss.\n\nEventually she pulled me up to her, and I made a little disappointed sound as I lost contact with her core. God how many times had I made her come? It was never enough for me.\n\nHer mouth found mine, and I reveled in her touch as she pulled me up and into her lap. \"That was so nice, baby. Did you enjoy that?\"\n\nI couldn't find my voice as her eyes held me in thrall, but I managed to nod, vigorously, I hoped. Enjoyed it? It was magic. I could do it for hours.\n\n\"I'd love to let you keep going, but I want to give you your pleasure, too, baby. And I have more presents for you.\" She ran a finger down my chest, between my breasts and almost to my sex, but not quite. The desire and need that I'd been building over the last week came rushing back as Taylor lovingly touched me, and I leaned back against my lover with a desperate moan.\n\n\"Oh, baby, it's time, isn't it?\" I moaned again as she traced two fingers up my inner thigh. She moved her lips an inch from my ear. \"The rest of your presents are on the bed. I'm going to take you there now. You aren't going to resist, are you?\" I shook my head, a tear escaping at the concept My Lady thought I could possibly do so. \"You're going to give yourself to me, and I'm going to take such good care of you. Because I love you, baby. Come on.\"\n\nI sat up and got to my feet, looking into Taylor's eyes the whole time. She stood as well, walking me back to the bed. My eyes took it in as I approached. Along with several lengths of rope there was a ball gag and leather cuffs of various sizes, each wide and black with rings for tying me off, I guess. Wearing those she could put me in any position she wanted, the thought of which made me giddy and terrified at the same time. I was already soaked.\n\nAlso, there was a silvery set of thin chains, three of them, centered around a metal ring, and each sporting a clip at the end. They wouldn't hold me. What were those for?\n\nTaylor undid the leather sleeve holding my arms behind my back and set it on the bed before picking up the ball gag.\n\n\"Open.\"\n\nMy jaw dropped to accept the red ball, which was firm, but not hard. Taylor buckled it into place.\n\n\"Baby, is that too tight? Can you breathe?\"\n\nI took a few breaths and nodded.\n\n\"Good. While you're wearing this you won't be able to say your safe word. If we need to stop, shake your head side to side and make a repetitive noise. Try now.\"\n\nI did what I was told. \"Mm, mm, mm.\"\n\nTaylor nodded. \"Good girl. Do that again and it all stops, and I won't be upset. Okay?\"\n\nI nodded, knowing I would never use it. But she was taking care of me, like she always did. I felt safe.\n\nTaylor slipped my blindfold into place. \"Lie down on the bed, baby, in the middle.\"\n\nI complied.\n\n\"Arms together, like before, only in front.\" I crossed my forearms over my belly, and she quickly buckled the sleeve back in place before pulling the over my head and attaching it low on the metal headboard. My hands were free to open and close, but I couldn't lift my arms at all.",
        "Taylor gently touched my cheek, her lips pressing against my forehead, me responding with a happy little sigh. Her hand ran down over my body to the swell of my right hip caressing my thigh. She put three cuffs on my leg, one high on my thigh, just a few inches under my butt, one just over my knee, and one around my ankle. My leg was bent back, and Taylor attached my ankle to my thigh before tying off the knee cuff to the headboard, stretching my whole leg back and exposing my sex.\n\nMy other leg was given the same treatment, and in moments I was totally at My Lady's mercy, unable to move any of my limbs. Taylor lifted my chin up and began to kiss my neck, while her fingers traced over the soft skin of my inner thigh. Her mouth moved down to my breast, pulling my entire areola into her mouth. Oh my God, this was heaven.\n\nI could feel myself relaxing into my bonds, slipping away into that place where nothing existed but My Lady and her touch. I'd there before, but today, helpless and completely in My Lady's care, it was deeper than I'd ever experienced. All the cares in my world just evaporated as she touched me. There were no disapproving sorority sisters, no judgmental parents, no senior project or scary real world yawning after graduation. There was only her.\n\nShe continued to work my breast, sucking and nipping, until after a few moments she pulled away and metal encased in warm, soft plastic closed over my erect nipple. The sensation pierced the blissful fog that was quickly forming around my consciousness, and I moaned into my gag.\n\nTaylor manipulated the clamp slightly, twisting and pulling as I continued to push my body against the exquisite sensation. It hurt, slightly, but it was so wonderful I didn't mind. Leaving the clamp in place Taylor kissed across the valley created by my breasts, and she did the same to the other side, making sure my tip was fully aroused before adding the additional stimulation from the clip. Once in place she began to manipulate both at once, sending me spinning.\n\nIt hurt a little, but it felt so damn good that I didn't care. Actually, I could barely feel the pain. I knew it was there, but it only made everything better, richer, deeper, and I sank more fully into the ocean of bliss that surrounded me.\n\nAs every nerve ending in my breasts screamed and sang, Taylor's mouth moved steadily lower over my belly. I almost didn't notice until her tongue swirled around my navel, and my body remembered its desperate, deprived need for orgasm. As ecstatically wonderful as her playing with my breasts was, it wasn't going to get me there. That tongue, though, was another story entirely.\n\nMy body roiled underneath her touch, desperately wanting, needing more. Her mouth moved slowly through the trimmed fur on my mound to the top of my sex and the bare lips below. I was beyond aroused, almost painfully swollen, and each beat of my heart reminded me of my need. Taylor nuzzled my outer lips, kissing either side before licking over the entrance to my core. I tried to raise my hips to meet her, but the way I was tied made it impossible. I could do nothing but lie there and wait.\n\nMy eyes closed behind my blindfold as my body began to literally tremble with need. My Lady's tongue moved through my slit almost languidly, her hands moving away from my breasts so my entire being could concentrate on what was happening below. And it was happening. After a week of almosts, My Lady was going to give me release. Her tongue ran up and down my hood, caressing my swollen clit underneath. I was shaking, desperate, but I couldn't get there. Oh, God, I needed her to give permission, to tell me it was okay. But the gag kept me from begging for anything.\n\nI was spinning, spinning, whirling through the air, riding the edge of a thunderstorm. I felt like I would shake apart, and then, \"Come for me, baby.\"\n\nA floodgate opened inside me, and I laid my head back and screamed into my gag as my body exploded in ecstasy. I pulled at my bonds, hearing the bed frame groan and creak at the force of it, while My Lady's tongue drove me higher and higher. A week of frustration burst out of me in under a minute, leaving me desperate to pull air through my gag, but Taylor didn't stop.\n\nHer hands went back to my breasts as she continued to suckle my clit, and my eyes rolled back in my head as the two sensations crashed into one another. Her thumbs flicked the clips, sending electric pulses into my hair and fingers and toes, while her continued tongue caressed my nub.\n\nAs my orgasm began to grip me again she pulled my pearl into her mouth as she grabbed both clamps. They released simultaneously, blood rushing back to each nipple, which she caught between her thumbs and middle finger, rolling them each as my world shattered around me. I honestly wasn't sure which was more intense, my spasming sex or screaming breasts. Either would have been perfect, but together they pushed me to a place I didn't know existed. I was blasted into space, floating along, aware of the sensations coursing through my body, enjoying them, letting them fill me, but somehow above them at the same time. Even when I came down, it was bliss. Taylor kept going, and once again orgasm wrapped me in its arms, this time rocking me far more urgently.\n\nTaylor kissed her way back up my body, every touch of her lips sending a warm wave through me. I sucked in a breath as she began to suckle my still tender breasts, and I whimpered in joy as she reattached the nipple clamps. They felt so good, but I knew they would have to come off again sometime, which had been so intense. But I could take it. I had to, because I belonged to My Lady, and I didn't have a choice. And, truth be told, I didn't want one.\n\nWhile pressing her lips to my thighs, My Lady's fingers caressed my clit, which was still swollen and tender. Two fingers slid along either side, pinching slightly and lifting the tiny shaft under my hood, and I gasped as another clamp closed around it. I waited for a moment for the rush of pain, but it never came. There was lovely pressure, and just feeling Taylor move on the bed sent rivulets of pleasure coursing through my body.\n\nTaylor slid off the bed, one hand still resting on my knee. She stopped touching me for the briefest of moments, and I felt myself start to panic. Instead of floating in that perfect ocean I was suddenly sinking. Then her hand was back, and everything was right again. I felt her climb back on the bed, still fiddling with something. I had no idea what was about to happen, so I just let myself feel as she touched my skin.\n\nHer fingers caressed down over my stomach, touching the clamp on my clit, which made me jump. She didn't pause, moving down my sex and slipping a finger deep into my vagina. She curled the finger up, hitting my g-spot, which made my sex clench. That in turn caused the most delicious sensation from the clip, as it seemed to massage my clit. Holy crap, that felt good. A second finger went in, making me shudder from head to toe. I was just starting to let the pleasure overwhelm me when she stopped.\n\nI whimpered for a moment until I felt her overshadow me, her arms on either side for a moment before she guided the head of a phallus to the entrance to my vagina. It was the one we'd bought together. I knew because I could feel the vibration from the base, and a wonderful memory flashed of a totally embarrassed Taylor standing in front of a rack of sex toys.\n\nI had only the briefest moment to enjoy it before she pushed deep inside me and I cried out into the room. Two strokes and she was buried all the way, and she began to work in and out, and the last part of my rational mind blinked away as the pure, uncontrolled ecstasy overwhelmed me.\n\nI'd always loved penetration, and Taylor was pushing in all the way, down to the deepest part of me. That alone was enough to satisfy me, but now it was only the beginning. With every motion, in and out, the clit clamp massaged the most sensitive part of my body, like two tiny fingers bringing the most exquisite pleasure. On top of that my clipped breasts were bouncing on my chest, every movement sending electric shocks of joy racing from my nipples through my arms and legs.\n\nIt was the most exquisite, intense, whole body sexual experience of my life, and I had no choice but to simply surrender to the incredible gift that My Lady was giving me. I was lost in her, lost in the surrender of my body to pleasure, in my total submission to her. The heat of her radiated above me as she moved in and out. Gentle lips touched my cheek. I wasn't just being pleasured, I was also loved, deeply and purely, by this goddess of a woman I worshipped.\n\nMy climax rolled over me like a thunderstorm, rippling me around like a flag in the wind. It calmed for a moment, and I soared in pure euphoria before my body gathered it's strength and my orgasm took me again. Over and over it happened. I don't know how much time passed in between each, maybe thirty seconds, maybe an hour. On and on it went, time seeming to stretch into forever.\n\nAnother orgasm wracked by body, and a weariness began to settle over me, and I wasn't sure if I could go on much longer. Somehow My Lady knew, and I felt her slip out of me. I whimpered into my gag, suddenly feeling empty, but she wasn't quite finished yet. She kissed down my neck, between my breast, and over my stomach until she was situated between my legs.\n\nThe euphoria that I'd been experiencing was starting to recede, and I was coming back to reality, but a single finger working the clamp on my clit sent me spinning back into bliss. Taylor's tongue worked under my clit, making me cry out, but then it happened. In one quick moment My Lady released the clip. Blood rushed back to my clit, and she pulled it into her mouth as I screamed into my gag. Her hands ran up my body and both of the nipple clamps released as well. The combination of sensations overwhelmed me, and my body simply exploded into climax. I'm not sure if there were several in a row, or if it was only one incredibly long, exquisite orgasm, but when it finally subsided I was done, utterly and completely spent.\n\nTaylor kissed the inside of my thigh, releasing my left ankle from my thigh, completely removing the cuffs. She quickly did the same thing at the knee, easing my leg, which was suddenly stiff and sore, back down to the mattress. She did the same thing on the right, taking time to massage both legs as I began to come back to reality.\n\nHands went behind my neck and released the gag, which was pulled away from my mouth and replaced with My Lady's soft lips. She released my arms from over my head and removed the sleeve.\n\nI was breathing heavily as that joyful place I'd been in receded and reality began to return. Finally, Taylor slipped off the blindfold, and my eyes opened to her beautiful face. My Lady, smiling down at me with perfect love and tenderness.\n\nEmotions overwhelmed me. Intense love for Taylor, the wonderful woman who'd given me this incredible gift. Sadness that it was over, but joy that I'd been able to experience it. The problems at my sorority, the worry about Taylor and my Dad's relationship, it all flooded back at once, and I began to weep, tears flowing down my face.\n\nTaylor didn't panic, or try to shush me, instead just pulling me close and holding me as sobs wracked my body. My emotions, good and bad, were a raw, untempered thing. She pulled the covers around us, and I let the touch of her skin against mine comfort me. The cathartic tears washed me clean, after a long time I quieted, resting against my love, as she gently kissed my face. Finally I looked up at her with a smile, our lips pressing together for a brief moment before I closed my eyes and slipped away, safe in her arms.\n\n***\n\nI was in the same position when I awoke. I glanced over at the clock, which said it was a little past four-thirty. I felt weak, drained, but still very peaceful. Taylor was still holding me, and I turned in her arms so that I was facing her, and I gave a little smile as I looked into those beautiful eyes.\n\n\"Hi, baby, welcome back.\" She kissed my forehead, which made me sigh. \"How are you feeling?\"\n\n\"Good. Really good. Tired.\" I closed my eyes again and snuggled against My Lady, but she didn't let me stay long.\n\n\"Okay, sit up.\" She reached over and took a sports drink off the bed stand. \"Drink this.\"\n\nTaylor went up into a sitting position, and I followed her, taking the drink and sipping from the straw. I didn't realize how thirsty I was until the cool liquid hit the back of my throat, and I greedily drank it down. I was also hungry, too.\n\n\"Did you bring anything to eat?\"\n\n\"You think I'm going to let you get crumbs in my bed?\"\n\n'I'm sleeping here tonight, too. And I'm really hungry.\" I pouted a little, but Taylor looked at me sternly. For a moment, that is, before a smile stretched across her face. She there was a chewy granola bar on the bed stand as well, and she handed it to me.\n\n\"I don't want you to ruin your dinner. We have reservations at six.\"\n\nI groaned and leaned against her \"We have to?\"\n\n\"Yes, we do.\"\n\n\"Aww, I'm not sure I can walk.\"\n\nShe held me close. \"Poor baby.\" I let her rock me for a moment. \"We're going to get you into the shower, and I'm going to wash you. You'll feel better, I promise.\"\n\nMy legs still felt like jelly, but Taylor managed to get me out of bed and under the water. I let its warmth roll over me. My Lady was standing behind me, gently rubbing my shoulders. She took the bottle of shampoo and began to wash my hair, and her massaging my scalp felt absolutely amazing.\n\n\"I used to have long hair. I remember doing this.\"\n\n\"You can do that forever, sweetheart. Ooh.\" When she finished I reached out and took the shower poof, but Taylor took it away from me.\n\n\"No baby, this is me washing you.\"\n\n\"But...\"\n\n\"No arguments.\" As she loaded up the body wash I was still pouting a little. \"Baby, I promise, tomorrow morning I'll let you do anything you want for me right here. But now I want you to relax, and focus on feeling good.\n\nI closed my eyes and tried to obey, and the soft way My Lady was touching me helped tremendously. I let her work, and when we finally got out of the shower I let her dry me and wrap me in a robe.\n\nI dried my own hair, just putting in a hair tie in at the base of my neck. I walked back into the bedroom, where Taylor was putting the shirt she'd been wearing when I arrived. She was already wearing those incredible slacks, the ones she'd had on when I'd arrived. She'd put on a sleeveless blouse, leaving her incredible arms and shoulders bare for a wonderful moment before she pulled on a jacket over top.\n\nShe fastened one button and spread her arms. \"What do you think?\"\n\nI walked up to her and grabbed her collar, smoothing it down. \"You look amazing and you know it.\"\n\n\"And you have to get dressed.\"\n\nI shrugged the robe off my shoulders. \"Really?\"\n\nTaylor took an appreciative look at my body before kissing me on the forehead. \"Yes, really.\"\n\nI pouted for a second. \"Okay, fine.\" I put my dress back on, this time with appropriate undergarments, of course. As I dressed I really began to feel down, and if Taylor hadn't gone to so much trouble to plan today I might have asked her to cancel, so we could just hang at home.\n\n\"Are you okay, baby?\"\n\nI made myself nod. \"I'm fine.\"\n\n\"Come here.\"\n\nHer voice was kind, but firm, and I moved to obey immediately. Taylor just wrapped me in a hug. \"You don't have to lie to me baby. But I think you'll like what we're going to do, if you'll try.\"\n\nI nodded with a sniffle. \"Okay. Will you drive?\"\n\n\"Sure\"\n\nThere was a chance of rain in the air, so we still took my Mini, and it was odd riding in the passenger seat of my own car. I stared out the window into the gray sky, thinking it was a reflection of my mood. Taylor reached over and rubbed my shoulder, earning a smile from me. I took her hand and held it as we went, and that did make me feel better. What also helped was us pulling into my favorite restaurant.\n\nI looked at Taylor. \"You know, we ate here the evening before I met you.\"\n\n\"Really? So it reminds you of better times?\"\n\nI chuckled and squeezed her hand. \"No. More innocent maybe. But I wouldn't trade you for anything.\"\n\nTaylor gave me a warm smile and kissed my hand. \"C'mon, we're a little late.\" It was true. Taylor had said our reservations were for six, and it was already a quarter after.\n\nThe last of my gloom was banished as we moved through the busy restaurant to our table.\n\n\"Happy Birthday!\"\n\nI covered my mouth with my hand as I saw the large table. Mom, dad, and Kelsey were there, as were Sadie and Noah and Jen and Vicky. All my worlds colliding in one spot. It was weird, but wonderful. I looked up at Taylor who was beaming down at me.\n\n\"Good surprise?\"\n\nI nodded and hugged her. \"Did you do all this?\"\n\n\"Your mom and dad helped.\"\n\nI got a bunch of wonderful hugs from everyone before I sat down, and everything was perfect. Noah, Taylor, and my dad had a long discussion about motorcycles, while Vicky regaled my mom and sister about some of exotic locales she'd done shoots in. It was odd, seeing them all together, but very comforting, and I felt loved and cherished. It was a wonderful birthday.\n\nWe stayed at the restaurant for over two hours. Mom goot Taylor to try the mussels, which are amazing, and Taylor ordered me the surf and turf, which is my absolute favorite thing there. I only got it on special occasions because it's expensive, but Taylor whispered in my ear that my dad was insisting on paying, so I didn't mind.\n\nBut the really amazing thing was how well everyone got along. Not that I expected fights to break out or anything, but they were all so different. My parents got along well with Jen and Vicky, and they I hoped they could see that it was possible to be happy and secure in a long-term lesbian relationship.\n\nBut mostly I loved being here with Taylor. No hiding, no sneaking, she was just my partner. Her little smiles and smirks, her soft touches, they were more than mine, they were part of me. As we headed back to our apartment I held her hand and we talked, telling stories, me setting the record straight on a few anecdotes my mother had shared, laughing together.\n\nWe walked up the stairs arm in arm, and as soon as the door closed I went into her embrace and began to cry. I couldn't say that I was sad, but I felt wrung out, empty for some reason.\n\nI could tell from Taylor's energy that she was concerned. \"C'mon on baby, let's go sit down.\"\n\nI nodded, sniffling once into her shirt and letting her lead me to the couch. By the time we sat I'd settled down. Taylor reached up and pushed a strand of my hair behind my ear. \"Tell me.\"\n\nI shook my head. \"It's nothing, My Lady.\"\n\nTaylor frowned at me. \"Huh-uh, Aly, we need to talk about this.\" Her voice softened a bit, suddenly unsure. \"This afternoon, was it too much for you? Did I do anything wrong?\"\n\n\"No!\" I took her hands. \"No, It was, God, I can't even describe what it was. I didn't know I could feel like that. It was amazing, beyond amazing. Thank you so much. But since then I've felt, just really drained and emotional. I'm sorry.\"\n\nTaylor nodded. \"I actually read about this, it's not uncommon after, um...\" her cheeks turned red \"intense play.\" I couldn't help but smile. She was still a conservative girl at heart. \"There were a whole bunch of things it said to do, but I can't remember any of them now.\"\n\nShe took my hand and kissed the back of it. \"And this can't be me telling you what to do. You have to tell me what you need. Even if it's to be away from me.\"\n\nA bolt of panic raced through me. I couldn't even fathom being apart from Taylor right now. I felt like her presence was holding me together. \"No, please. I don't want that. Can we maybe just put on a show? Cuddle on the couch? I really just want to be near you.\"",
        "There was a tear in Taylor's eye. \"That sounds wonderful.\"\n\nShe picked something, I don't even remember what it was. The only thing I cared about was her pulling the blanket around us, and the feeling of her strength behind me. I definitely nodded off at some time, and a kiss on the temple brought me most of the way back.\n\n\"Time for bed, baby.\"\n\n\"M'kay.\" I lifted my arms, wrapping them around her neck as she carried me back to our bed. I let Taylor undress me before I crawled under the sheets. Being literally held in her arms had woken me up fully, and I watched as she stripped down and joined me, our skin warm against each other.\n\n\"How are you doing?\"\n\nI still felt a little blah, but the sadness was gone, or at least going away. \"Good, happier. Nervous about going back tomorrow.\" I looked up at Taylor with my best pathetic expression. \"Do I have to go back?\" She didn't answer, instead just looking at me sternly.\n\nI pouted for a second, but Taylor ended that with a little kiss.\n\n\"I'd keep you here if I could, baby, but trust me, being a college drop out, not as much fun as you'd think.\"\n\n\"I know, I know.\"\n\n\"Is there anything I can do?\"\n\nI shook my head and kissed her on the shoulder. I knew what I wanted, but I needed her to ask for it. \"I just need to relax. Have I told you thank you for today?\" I rolled onto her and pressed my lips to her neck.\n\nHer fingers ran through my hair. \"Yes, you did.\" I suckled on a sensitive spot, which made her sigh and laugh. \"Are you saying you'd like to pleasure me?\"\n\nGod, yes, that's exactly what I wanted. \"If My Lady wishes it.\"\n\nThere was just a touch of amusement in her voice. \"I'd love that, baby. You may proceed.\"\n\nMy anxiety flowed away like water down a drain. I slipped under the covers, and for the next half an hour I just lost myself in her, the softness of her skin, the way she smelled and tasted, the power of her body as she orgasmed under my tongue. When I crawled back into her arms, there were those wonderful words waiting for me.\n\n\"How did I get so lucky to find you? You are incredible, Aly, and I love you so much. My precious baby.\" She cuddled me as she spoke, and joyful tears slipped from my eyes as I fell asleep.\n\n***\n\nThe nervousness didn't come back until after my classes. They went well. I was engaged, excited. I really did love to learn, after all. And my energy had returned in full that morning. Taylor and I had had a wonderful time in the shower, and I was grinning like an idiot when I pulled away, leaving her behind smiling and waving from the driveway.\n\nUnfortunately, I felt the anxiety starting to return afterwards. I spent a few hours in the library, but I was getting hungry, so I headed back to the house, with each step getting a little harder.\n\nI parked, taking some time to gather myself before heading inside. There was a big group of people in the common area around the TV, and Sadie was sitting just inside the entry.\n\n\"What's going on?\"\n\n\"God, Aly, I'm sorry. I just tried to call you.\"\n\nBefore I could ask what was going on I heard Macie's voice, sounding scarily smug, but still with that underlying anger. \"Hey, Winterberg, come in here for a second.\"\n\nShe was sitting on one of the chairs holding her tablet and stylus.\n\n\"What do you want, Macie?\"\n\n\"Well, just wanted to ask you something. Did you know that all employees of North Vista are listed on the municipal website?\"\n\n\"So?\" I tried to sound nonchalant, but inside my heart was racing.\n\n\"So, you said that you're dating a lifeguard named Taylor. Did you know there aren't any lifeguards named Taylor listed on the site?\" I looked at the TV, and sure enough, there was a list of names. I saw Jennifer's name on top, and sure enough, Ruth Knox several lines below.\n\n\"What's your point?\"\n\n\"It just makes me wonder who you're actually dating.\" Her voice told me that she already knew, and I tried to tamp down my rising panic. \"I mean, if you'd lie about that... But maybe you weren't lying. So Saturday I headed up to Tagalong beach and asked the first lifeguard I saw if they knew a 'Taylor', and they pointed right down the beach, to tower eight. Where I took this picture.\"\n\nShe tapped the screen with her stylus and up popped a picture of the white structure where Taylor and I had met on the day that changed my life. And standing on the edge, looking out over the water was my girlfriend. I was on the verge of tears. The picture showed her for everything she was, a proud, strong, beautiful woman, protecting and watching over the people entrusted to her so they could enjoy a carefree day at the beach.\n\nAnd Macie was going to use her as an object of ridicule. She was going to try to belittle me, using this wonderful person, and trashing the relationship I had with her.\n\nMacie continued with her sneering tone. \"Who's that, Aly?\"\n\nSomething inside me snapped. Not anger, or fear, or hate. It was pride. I was proud of the woman I loved, proud of what we shared together. I was beloved by an incredible partner, and my feelings for her were just as fierce. I also realized that I'd never had to hide. I'd always had a choice.\n\nThat's a funny word, choice. There are people who still think being gay or straight is a choice. No one can help whom they are attracted to, but we do have a choice. A choice to hide what we are, or to live free. A choice to be or to not be, just like Hamlet said.\n\nThe only trick with choice is that we have to be willing to live with the consequences. For Taylor, for us, I was.\n\n\"That is my girlfriend Taylor. What's your point, Macie?\"\n\nFor the first time Macie's smug satisfied face slipped. Obviously that had been her point.\n\n\"That's not really the best picture of her.\" I pulled out my laptop and connected it wirelessly to the TV, putting up a selfie I'd taken of the two of us the day we'd spent at the beach. \"This one's better.\" Taylor was leaning over my shoulder and smiling, her arms around me.\n\n\"I've got one, too.\" Sadie looked at me and I nodded, and she threw up a picture of Taylor kissing me last night at the restaurant.\n\n\"So, Ms. Investigative Journalist, here's your chance. An exclusive interview. Ask me any question you want.\"\n\nMacie looked stunned. And I knew it was over. To her, being a lesbian constituted the greatest shame, and to see me acknowledge it without fear was beyond anything she'd imagined. Without another word she stalked off.\n\nThe rest of my sisters were just standing there, stunned. \"Alright, if there aren't any questions, I'll make a statement. That woman on the TV is Ruth Taylor Knox. I've been dating her since August, when she rescued my little sister from drowning. Saved her life. She's an artist, and an art connoisseur. She was a Division I swimmer. She's funny and strong, and a great cook, and I am in love with her. She also happens to be incredible in bed.\" That drew a nervous titter from most of the women there. \"So if you want to put a label on it, fine. I'm gay. A lesbian, whatever. If you want to call me a dyke or a carpet-muncher or some other, clever, middle school insult behind my back I don't care. And I'm not going to tell you nothing should change, that I'm the same person I was, because I'm not. Being with Taylor has made me stronger, braver, and more in touch with myself than ever before. And I hope all of you find someone, someday who makes you feel as wonderful as being with her does for me. And that's it.\" I looked around, still shaking with emotion. At least half the house, probably closer to three quarters, were there now, listening to me. Evelyn, Kirsten and Leah were standing in the doorway, each giving me some version of a thumbs up.\n\nSadie reached out and rubbed my shoulder, and I gave her a hug.\n\n\"I'm so proud of you, Aly.\"\n\n\"Thanks.\"\n\nThere was a slow smattering of applause, which grew until there were shouts and cheers, and I looked around gratefully. Everyone wasn't cheering, but it was enough. I knew being different was going to be hard, and things would be coming down the line that I wouldn't like. But this particular weight was gone, and I'd face the rest when it came.\n\n***********\n\nThanks for reading, rating, and commenting. Only two more to go! It'll be an interesting ride to the finish. Feel free to send me feedback if you want to talk about the psychology of any of the characters, or if you want an insight into my thought processes."
    ],
    "authorname": "JCMcNeilly",
    "tags": [
        "lesbian",
        "romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hero-worship-pt-06"
}