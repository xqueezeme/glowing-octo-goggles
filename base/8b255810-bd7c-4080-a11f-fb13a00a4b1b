{
    "title": "Solstice Ch. 04",
    "pages": [
        "Lisa would know what to do.\n\nIt was the one thought that kept me moving, kept me functioning throughout the morning. But not because I didn't know what to do. Not because I thought she'd think of anything I hadn't--God, there couldn't be anything I hadn't thought of, no angle that I hadn't considered--but because I could no longer trust myself to do the right thing.\n\nThere hadn't been time to call her. As it was, I'd nearly missed the bus to work. I'd showered, then spent far too long looking at the leaflet that came with the packet of birth control, trying to figure out just how serious it was that I hadn't taken a pill since Sunday and that today was Friday. But in my panicked state the print seemed ridiculously small, the wording incomprehensible. I couldn't decide whether I should take a pill as normal or whether I should take two. In the end, I hadn't taken any. Pregnancy was the least of my worries. It was the one thing I could do something about.\n\nExcept that I probably wouldn't...\n\nI watched the children playing in the sand pit, two year old Matthew clumsily filling a bucket with a spade that was almost as big as he was, three year old Kayleigh busy with a plastic rake, combing the sand smooth again behind him as he scooped up each shovelful, reproaching him for spoiling her work. Once I'd finally accepted that James didn't want children, making the decision to split from him had been easy. I couldn't contemplate a childless future--working with them wasn't enough. I wanted my own. What I hadn't anticipated four years ago was that I might never find a partner to have them with.\n\nBut now, I thought, my suddenly shaky fingers creeping down to my lower abdomen, there could already be a tiny life inside me...\n\nThe sound of a handbell ringing from inside the old Victorian house made me start. Lunchtime. I rounded up the children, chasing a few down from the climbing frame, others out of the Wendy House, taking them inside to wash their hands. I was on auto-pilot, waiting for the grandfather clock in the hall to strike twelve so that I could escape--so that I could go and meet Lisa.\n\nThough how I was going to tell her, I didn't know, I thought, rushing along the road back to town twenty minutes later. One thing was for sure. Lisa--being Lisa--wouldn't hold back on what she thought of my actions. I knew what was coming--and I wouldn't blame her at all for saying it.\n\nHow could I have been so stupid? I was twenty-eight years old but I'd behaved like a na\u00efve teenager. Yes, there it was again--that word 'na\u00efve'. Trusting a man I'd just met with my health--with my life. I'd had unprotected sex. And now I was going to have to face up to what I'd done. Go to a clinic and get tested for diseases I didn't even want to think about. The potential consequences were terrifying.\n\nThe ASG building was just up ahead, its glass tower gleaming in the sunlight. There had been uproar years ago when they'd wanted to build it, the purists claiming it was completely out of keeping with the character of the ancient city. But to me, it was a symbol of home, a landmark that could be seen for miles around, as much of a part of my birthplace now as the eleventh century cathedral.\n\nAnd there was Lisa waiting outside the front entrance, hopping from foot to foot. Though she was looking in my direction she hadn't seen me yet and I could see the frown on her face as she glanced at her watch. \"You're late!\" she complained, spotting me at last.\n\nDespite my inner turmoil I smiled slightly. Patience would never be one of my best friend's virtues. \"I know, I know. I'm sorry. One of the boys bumped his head just as I was--\"\n\n\"Never mind about that,\" she interrupted, shaking her blonde head vigorously. \"What the hell happened last night? I can't believe you didn't phone me.\"\n\n\"Ah.\" I tried to swallow the lump in my throat, not knowing quite where to start. \"Well--\"\n\n\"Griff stood you up! After all the trouble I went to, the ungrateful sod. I had a right go at him, I can tell you. I can't believe he did that--\"\n\n\"Look, it doesn't matter,\" I said hurriedly, shocked to discover she already knew. But then, of course she did. She would've seen her boss that morning--she'd have asked him straightaway how the date went. \"I guess he had second thoughts. It's okay. I understand--\"\n\n\"Well, I don't bloody understand. He promised me he'd be there--\"\n\n\"Really--it doesn't matter--\"\n\n\"And you--\" she jabbed a finger at me. \"You could've phoned. You could've sent me a text. If I'd known I could have phoned him. Gone and got him. Dragged him down to the Buttercross by the scruff of his neck--\"\n\n\"Lisa!\" I gave an uncomfortable laugh, knowing that the longer this went on, the longer it would be before I could tell her what had actually happened the night before. \"Please--it doesn't matter. I'm sure he had his reasons--and besides--if he really didn't want to meet me, then maybe it's better that he--\"\n\n\"Oh but that's just it,\" she said, pushing her arm through mine and tugging me back towards the entrance. \"He does want to meet you.\"\n\n\"What? No--wait--\"\n\nBut Lisa was already propelling me inside. \"I told him I was having lunch with you and that I'd bring you upstairs so that you could meet him,\" she said, pulling me across to the lift. \"So that you two can thrash out a time for another date.\"\n\n\"Another--another date?\" I gazed at her in dismay as the doors opened in front of us, half a dozen people spilling out into the foyer. \"No--I can't do this right now--\"\n\n\"Of course you can.\" She dragged me into the now empty car, hitting the button for the top floor. \"Don't be chicken. Live dangerously.\"\n\nLive dangerously? But living dangerously was exactly what had got me into my current predicament... \"No--you don't understand,\" I gulped as the doors closed, my stomach lurching as we began to rise. \"I'm not being chicken, really I'm not. It's just--oh God--\"\n\nIf this had been a movie, this would've been the part where I hit the bright red 'STOP' button, the lift creaking to an abrupt halt. And then I could have told her everything, made her understand that arranging a date with her boss was the last thing I wanted to do, that I couldn't bear the thought of meeting another man right now, not after last night. Not after Adam... But this wasn't a movie and there didn't seem to be a red button.\n\n\"Look,\" I went on, my mouth going dry as I watched the numbers rising on the liquid crystal display above the control panel. \"There's something I really need to--\" But before I could say any more there was a loud ping and the doors slid open again.\n\n\"Here we are,\" Lisa said brightly, grabbing my arm again and forcing me out of the lift. \"Hi Jasmine.\" She waved airily at the girl sitting behind reception. \"Do you happen to know if Griff's still in his office?\"\n\n\"Think so,\" I heard the girl reply, my gaze having been drawn immediately to the window on her left.\n\nDear God... I couldn't imagine getting any work done with a view like that. I'd never been in the ASG building before so I'd had no real idea of how high it was. I could see for miles, the window looking out across the city towards the east. The sunrise would've been spectacular from here...\n\n\"Good, isn't it?\" Lisa said, peering over my shoulder. \"If you like that sort of thing, of course.\"\n\n\"Oh, I do.\" I remembered her telling me that the building was home to a number of businesses and that ASG didn't actually own it, they just occupied the top floor. The 'ASG building' wasn't even its proper name, just the one that had stuck following all the controversy over whether it should be built. ASG Architects had designed it as their flagship project--and it had certainly got them noticed. \"Come on then,\" she said briskly, making me jump. For a moment I'd almost forgotten why we were there.\n\n\"Oh God,\" I breathed, experiencing a fresh wave of nausea. \"Lisa--please--\"\n\n\"Will you stop it?\" She rolled her eyes, ushering me through a door behind the reception desk. \"Let's get this over with and then we can have some lunch.\"\n\nThe corridor was short, the door in front of us wide open. I could see a vast desk and the back of a high-backed brown leather chair, its occupant having swivelled it around to face the window. Reaching the doorway, I could well understand why.\n\nIf the view from the window in the reception area had been spectacular, this was breath-taking. Facing due south, the floor to ceiling windows looked out over St Catherine's Hill, from here a near perfect dome crowned with trees, the ramparts of the iron age hill fort clearly visible, the grassy hillside rising gently from the water meadows, verdant in the midday sunshine. It seemed close enough to touch. \n\n\"Griff?\" Lisa addressed the back of the chair. \"I've brought someone to meet you.\"\n\nIn the scant seconds before the chair completed its one hundred and eighty degree rotation I noticed the picture on the wall. A photograph. Two men, one woman. Even from here I could identify one of the men. It was Anton, the owner of the Mill House Hotel. I'd know that beard anywhere. They were standing in front of a water wheel.\n\nMy gaze slid to the desk, to a smaller photo in a silver frame, this time picturing a laughing woman. Pretty, in her late twenties I would guess, her hair a long, golden curtain across her shoulders. She was sitting cross-legged on a patch of grass, a book open in her lap as though she'd been caught unawares.\n\nAnd finally I saw the narrow wooden block on the front edge of the desk. Saw the one-inch high gilt letters across the front of it, spelling out a name in capitals.\n\nADAM GRIFFIN\n\n\"Griff, this is Emma.\"\n\nFor a moment, I couldn't move, couldn't breathe, still transfixed by those shiny little letters, my heart thudding in my ears. But then, it wasn't as though I needed to see who was sitting in the chair. I already knew the heat of that gaze.\n\n\"Hello Emma,\" he said quietly.\n\nAt the sound of his voice my head jerked up, my eyes meeting his, the look that passed between us swift and intense. And suddenly, in my mind I could hear him as I'd heard him earlier that morning, shouting my name as he exploded inside me...\n\n\"But you're not blond!\"\n\n\"What?\" Lisa looked at me as though I'd gone mad. \"Not--'hello Griff, nice to meet you'--just 'you're not blond'? I know he stood you up, but--\"\n\n\"You said he was blond.\" I stared at her accusingly, so many emotions sloshing about in my head I hardly knew which one to deal with first. \"You said he was blond and that he had blue eyes and that he was six feet tall.\"\n\n\"Well--\" Lisa seemed nonplussed as she looked from me to Adam. I could see the beginnings of his smile and all at once one of my confused emotions battled its way to the surface. Fury... How dare he find this funny?\n\n\"Okay, so he's not exactly blond,\" she conceded. \"His hair's light brown then. And--\" she leaned forward and peered into his eyes, Adam's smile widening \"--oh! They're brown too.\" She shrugged. \"Oh well. I don't see what difference it makes. He stood you up. It's not like he was there and you didn't recognise him.\"\n\n\"But--\" I realised there was nothing I could say in response, not without giving away that he had been there--and for some reason, I didn't want to do that.\n\n\"I'm really sorry.\" Adam didn't seem to want to give the game away either, his eyes softening as they met mine again. \"I shouldn't have stood you up.\"\n\n\"So why did you?\"\n\nHis mouth twisted slightly. \"Because I'm a bloody fool.\"\n\nI flinched at his choice of words; they echoed what he'd said when we'd first met.\n\n\"Look,\" Lisa put in, looking rather puzzled, \"I've brought Emma up here so you can sort out another date--\"\n\n\"Yes, you're right,\" he said, nodding vigorously. \"So let's do that--\" But then he stopped, his gaze still wholly on me. \"If you want to, that is.\"\n\nLisa gave a snort, clearly oblivious to what was going on between us. \"Of course she wants to. For heaven's sake, what do I have to do to make you two--?\"\n\nAdam suddenly clapped a hand to his head, groaning. \"Damn it--the McLellan file. I left it in Mike's office. Hey?\" He shot Lisa a speculative glance. \"I know you're officially at lunch, but I don't suppose you could go and find it for me, could you? I've got a meeting with them later and--\"\n\n\"I'm going, I'm going,\" she said, rolling her eyes and backing out of the room. \"But by the time I get back, you two need to have fixed a date, okay?\" Then she paused in the doorway, frowning at Adam. \"What the hell were you doing last night, Griff? You look bloody awful today. Didn't you sleep or something?\" And without waiting for an answer, she was gone.\n\nI watched in silence as Adam rose from the chair and came around the desk. \"Lisa,\" he said with a shake of his head, moving past me to close the door. \"You've got to love her.\"\n\n\"You said you'd call me.\" Still in shock, I was beginning to feel very peculiar. Hot and dizzy and weary... \"You said you'd call me--but I didn't know how. I never gave you my number.\" Even my voice didn't sound like my own.\n\n\"Ah, well.\" He grinned as he came back towards me. \"I knew I could ask Lisa for your number, you see.\"\n\n\"But I didn't.\" I stared at him, finding it hard to focus now, my legs trembling. \"I didn't know that. So I couldn't see how you were going to call me. And then it occurred to me that I didn't know anything about you--not really. That you could've been lying about everything.\"\n\n\"Emma....\" His grin faded abruptly. \"Oh--no, sweetheart--no...\"\n\n\"You said you'd never had a one night stand. That it was on your list of things to do be-before you die. And I thought--I thought that maybe I was just that. Your one night stand. That I'd made a terrible mis-ta-a-ake--\"\n\n\"Emma!\" My knees buckled as he swept me against him, tears pouring down my face. \"Oh sweetheart, no. I'm so sorry...\"\n\nAnd suddenly I was weightless, airborne, being carried across the office in Adam's strong arms. \"Lisa--\" I gulped as he sat down with me in that huge brown chair, pulling me across his lap.\n\n\"She'll be a while.\" Holding me tightly with one arm, he reached forward to his desk and plucked up a file. Even through the blur of my tears I could see the name 'McLellan' on the top. \"There's an awful lot of files in Mike's office.\" He threw the file back then began to feel beneath me, wrestling with something in his pocket. \"And she won't come straight in if the door's shut. Unwritten rule in this place. Here.\" He produced another of those large white handkerchiefs and I made a sound that was half-laugh, half sob. \"I really do want this one back,\" he teased, wiping my cheeks with gentle fingers.\n\n\"Adam.\" Though I still couldn't speak in more than a whisper, I already felt so much better for having cried. Cathartic, I supposed. \"Not--not 'Griff'?\"\n\nHe winced. \"No. That's something everyone calls me, but I don't actually like it all that much. Mike's fault. When we first set up in partnership he said it would be too confusing to call me Adam. We're Adams, Stokes and Griffin, you see--Mike Adams, Graham Stokes and Adam Griffin. He reckoned that we couldn't have Adams and Adam. So he started calling me Griff.\"\n\nI stared. \"You're--you're the G in ASG Architects?\"\n\nHe nodded solemnly.\n\n\"Oh--God!\"\n\n\"No, Griffin,\" he corrected with a grin. \"So you see, you were right.\" He dropped the handkerchief in my lap then held out his hand, flexing his long, lean fingers. \"Some kind of artist. If you can call being an architect an artist.\" He threw a glance across to the far wall and for the first time I noticed the drawing board and computer there.\n\nI gave a snort of sudden comprehension. \"You--you fraud! You knew I was a nursery school teacher--Lisa told you! It had nothing to do with your Granny teaching you how to read hands.\"\n\nHe was still grinning. \"She really was a wise old bird though.\"\n\n\"What else did Lisa tell you?\" I demanded, my mind whirring again, trying to remember what else we'd talked about last night. Then the penny dropped. \"She told you about James.\"\n\n\"A little bit.\" He had the grace to look sheepish. \"Enough for me to get that he was a self-obsessed bastard. And to be honest, that was what made me wonder about you. How you could've stayed with him for so long. Let him treat you that way.\"\n\nI swallowed hard. I could hardly believe it myself these days. \"So--\" I faltered, the last piece of the puzzle falling into place as I realised what pre-conceptions he must have made. \"You weren't sure that you actually wanted to meet me, were you?\"\n\n\"No. But not because of that, exactly,\" he added quickly as I tensed in dismay, his arms tightening around me. \"But because I knew how easy it would be to hurt you. Emma, you have to understand. After Claire died, I wasn't sure I ever wanted to be with anyone else. I'd given my heart to her--and I lost her. I didn't think I could ever take that risk again.\"\n\nMy gaze fell across the photograph on his desk. \"That's her, isn't it?\" I bit my lip when he nodded. \"She was beautiful.\"\n\n\"Thank you.\" When he dropped a kiss on my temple I had to fight to repress a shiver at the contact. \"After a while, everyone around me began telling me I should move on and find another woman. But I just couldn't.\" He gave a short, rather bitter laugh. \"I know they meant well, but in the end I volunteered to go to Scotland for a year to consult on a project, just to get away from it all. I sold our house because I wasn't sure I was coming back, and I knew that if I did, I wouldn't want to live in it. And, oh, Scotland was great.\" \n\nHe released a sigh. \"I finally got some space, some time to clear my head, to figure out what I was going to do with the rest of my life. That's when I did that parachute jump. I wanted to start living again. But I knew for sure that I didn't ever want another long term relationship.\"\n\nMy heart plummeted at his words. Did he still feel that way?\n\n\"And then I came back here. Decided I would stay, so I bought a two-bed flat--there didn't seem any point in getting anything any bigger. But the moment I came back to work, all the badgering about finding someone new started again. Only worse. People seemed to think that as it had been two years since Claire died I should be dating a different woman every night of the week. Like there was something wrong with me because I wasn't. In fact,\" he grinned suddenly, \"Lisa even asked me if I was gay.\"\n\nI knew she had. \"So--you really didn't go out with anyone else?\"\n\nHe shook his head. \"And I wasn't planning to either. But, as you know, Lisa had other ideas. God.\" He grimaced. \"That woman's like a bulldozer.\"\n\n\"More like a bulldog. With a bone.\"\n\n\"Only slightly better-looking.\" We exchanged smiles. Lisa was a blonde bombshell. \"But sweetheart, the more she told me about you, the more I realised that agreeing to a blind date with you had been a really bad idea.\"\n\n\"Why?\" It still hurt to hear him say it.\n\n\"I knew that if we hit it off, you'd probably want more than one date. Hell--that you'd deserve more than one lousy date. You deserved much better than me.\" He hesitated. \"But I didn't plan to stand you up. I made that reservation at the Mill House Hotel--\"\n\n\"You designed that water wheel, didn't you?\" I interrupted, glancing up at the picture on the wall.\n\nHe nodded, grinning. \"And, God help me, I even bought a book of romantic poetry. A rather expensive anthology of Shelley, Keats and Wordsworth, I have to say--and I had to buy a whole bloody bunch of carnations--the woman on the flower stand wouldn't let me buy just one. And I got down to the Buttercross early--about ten minutes before you did.\"\n\nHe blew out another sigh. \"So there I was, getting more and more nervous, wondering how to play it. And I decided I'd act like a total bastard so you wouldn't want to see me again and Lisa would leave me alone.\" He frowned. \"Then I realised that if I was going to do that, you'd be better off thinking I hadn't turned up at all.\"",
        "\"But you didn't go far.\" He'd been less than twenty-five yards away from me when I'd arrived, standing by the iron railings outside the bank. \"You were there, waiting.\"\n\nHe frowned again. \"I know. And I honestly can't tell you why I did that. To torture myself, maybe. Make myself understand what a shit I was, standing you up. And it really was torture. You looked so lost, so beautiful, sitting there on the steps in that gorgeous yellow sundress. And you waited and waited. Much longer than I would've done.\"\n\n\"Well, when you weren't there at eight, I thought maybe I'd got it wrong -- that it should've been half past,\" I murmured, feeling an odd, sharp pain in my belly. Could I dare to hope this was leading anywhere good?\n\nHe shook his head. \"You didn't get it wrong, sweetheart. I did. And when you started coming towards me, when I realised you'd finally given up on me, you seemed so sad I had to do something to make it better. So I pretended to be someone else. Someone who just happened to be there at the same time.\"\n\n\"Right.\" And then I narrowed my eyes at him. \"What happened to the book of poetry?\"\n\nHe smiled. \"I left it on the steps of the Buttercross. I wanted you to see it so that you'd know I'd been there--I wanted you to have it. But about a minute before you arrived, this bloke saw it, had a quick look around to make sure no one was looking, picked it up and legged it.\"\n\n\"Oh.\" I giggled despite myself and was rewarded by Adam's smile widening. \"Serves you right.\"\n\n\"You're right, it does,\" he agreed, nodding. \"I promise to buy you another one.\"\n\nMy heart lurched. Did that mean what I thought it meant? \"Please don't,\" I said, too scared to ask. \"I hate poetry.\"\n\n\"Emma!\" It was Adam's turn to laugh. \"All poetry? You can't possibly mean that.\"\n\n\"Okay, maybe not all.\" I shrugged. \"It's James' fault for writing me all those awful poems.\"\n\nHe shook his head. \"That man has a lot to answer for,\" he muttered, his eyes darkening, his head moving towards mine...\n\n\"W-wait!\" I gasped, battling a huge, pleasurable rush of adrenalin. \"Th-there's still something I don't quite understand.\" \n\nHe paused, his lips just inches from mine. \"What?\" he demanded, though he was smiling.\n\n\"You could've told me. You could've told me that it was you. That you were Griff.\" I couldn't look anywhere but in his eyes and the sudden look of remorse I saw there made me want to cry all over again. \"Why didn't you?\"\n\n\"Oh Emma.\" He planted a kiss on the end of my nose. \"I didn't have any intention of falling for you.\"\n\nHe'd fallen for me?\n\n\"I was just going to have dinner with you, then stick you in a taxi and send you home. I thought that would make it a win-win situation--even though you'd been stood up, you'd still have had an okay evening and I wouldn't have to feel such a shit.\" His lips twisted. \"But I didn't want to send you home. So I suggested the walk. And I was going to tell you, when we got to the gate, only then I found I wanted to kiss you instead.\"\n\nMy lips tingled at the memory of that first kiss.\n\n\"After that I was worried that if I told you, it would spoil everything. Because everything was so perfect. The moon, the stars.\" He grinned suddenly. \"All those layers of stars.\"\n\n\"Hey, it was hard to concentrate on a good description,\" I protested, blushing at the reminder of his head between my legs. He was teasing me. Again...\n\n\"Then I was going to tell you when we lying there after the sunrise. But then that bloody dog came running up...\"\n\nI smirked. \"Kind of wrecked the moment.\"\n\n\"It kind of did, yeah.\" He gave a small sigh, his breath warm on my face. \"And then, well. I think you already know when I panicked.\"\n\nOh yes, I knew.... \n\nHe smiled. \"I was looking at you, thinking how amazing you were--and I got scared. Scared that I'd got carried away. Scared that I wouldn't be able to follow through.\" He hesitated. \"You see, I'd thought I'd never want to be with anyone again.\"\n\nI nodded slowly, hardly trusting myself enough to speak. \"But?\"\n\nHe smiled again. \"The second you went to get on that bus, I knew I wanted to be with you.\"\n\nAnd finally, wonderfully, he kissed me, the sort of kiss where there ought to be an orchestra playing, with sweeping, swelling strings, and maybe a choir for good measure. And in all probability, it would have gone on for a lot longer and we would have gone a lot further--Adam's hands were already burrowing inside my blouse--if it hadn't been for an extremely loud knock on the door.\n\nWe sprang apart like guilty teenagers. \"Fuck!\" Adam muttered, barely managing to repress a snort of laughter as he took in my dishevelled state. \"Whoops.\"\n\n\"Ssh, it's Lisa!\" I hissed, my face feeling as though it was on fire, already struggling to do up my buttons. \"Oh God! What do we do?\"\n\nStill shaking with mirth, Adam thrust me forwards, sprang up behind me then forced me back in the chair, spinning it around to face the window. \"Come in,\" he called, after taking a glance to check I was hidden.\n\nI heard the door open. \"Hello?\" Lisa sounded more uncertain than I'd ever heard her. \"Griff, I'm sorry, but I couldn't find that folder anywhere--oh! Where's Emma gone?\"\n\n\"She's still here,\" he said cheerily. \"She's just admiring the view.\"\n\n\"Hi Lisa,\" I trilled, at last managing to fasten my blouse, patting down my hair. \"It's fabulous. You can see for miles.\" I jumped up and stepped forward to the window, still not daring to turn around.\n\n\"Hmm.\" Lisa sounded decidedly unimpressed. \"You get used to it after a while, believe me. So... \" She paused. \"You two fixed a date yet?\"\n\nI darted a panicked glance at Adam. \"Actually, yes,\" he said, smiling at me. \"You see, I'm free now. I know she was supposed to having lunch with you, but I was wondering whether you'd mind if I took her to lunch instead.\"\n\n\"Oh!\" But Lisa didn't sound at all put out. Far from it. \"Yes, of course,\" she gushed, the note of victory obvious in her voice. \"We can get together anytime. Emma--yes--go out with him now. And give me a call tonight, okay?\"\n\nAnd give me all the juicy details...\n\n\"Okay,\" I said grinning, risking a glance at her over my shoulder. \"Thanks Lisa. I owe you one.\"\n\nShe gave a grunt of derision. \"You owe me a lot more than one.\" And then she was gone.\n\nAdam came up behind me, his arms sweeping around me. \"You know,\" he said, as I gave a sigh of pleasure, \"I've spent a long time looking across at that hill this morning.\"\n\n\"Really?\" I smiled, loving the feeling of being in his embrace.\n\n\"Mmm. You see, I reckon if we could find a good enough pair of binoculars, we could probably still see our bum prints in the grass.\"\n\n\"What?\"\n\n\"Easy,\" he murmured contentedly, kissing my neck. \"Way too easy...\"\n\n<center>***************************</center>\n\nWe called her Catherine, of course. Katie for short. And though I tell Adam repeatedly that there's no way of knowing for sure that she was conceived that morning when we were up on the hill watching the sunrise, he remains--well--adamant that there can't be any doubt about it. He says you only have to look at the colour of her hair...\n\nI watch her now with a smile, her red-gold curls spilling across the pillow, one chubby hand resting up by her ear. Beautiful awake, even more beautiful at rest, exhausted after a busy morning playing in our garden.\n\n\"Good afternoon, Mrs Griffin.\"\n\nI gasp, startled to feel Adam's arms sliding around me. \n\nHe laughs softly. \"Ssh,\" he murmurs, peering at our fifteen month old daughter over my shoulder. \"You'll wake her.\"\n\n\"Home for lunch again?\" I whisper, not really surprised. It's the third time this week.\n\n\"Something like that.\" I smile as his hands begin to roam across my tummy. \"Ooh. Someone's awake.\"\n\n\"And whose fault's that? You just made me jump.\"\n\n\"Aw.\" He chuckles again, moving around in front of me and hitching my dress up to my waist, staring at my rounded belly with undisguised pleasure. \"Hey son,\" he says, dropping to his knees and planting a kiss just above my distended navel. \"Stop beating up your mother.\"\n\nWe both watch as the baby squirms inside me, the taut skin of my tummy undulating with the pressure of his tiny fist. Or perhaps his tiny foot. To be honest, I'm never entirely sure.\n\nAdam's mouth is on me again, trailing kisses in a decidedly southerly direction now, his darkening gaze lifting to mine as he reaches my underwear. And as he glances across at Katie's cot I know exactly what he's going to ask.\n\n\"How long has she been asleep?\"\n\n\"An hour and a half,\" I say innocently, even though it's only been about ten minutes. Because the bigger I get, the more Adam seems to want me, delighting in my expanding curves. But then, it was just the same when I was expecting Katie. I sometimes think he has every intention of keeping me pregnant for the next ten years. \"I was just about to wake her up actually.\"\n\n\"What?\"\n\nThe look on Adam's face is priceless. But then I've learnt a thing or two about teasing in the last two years...\n\n\"You don't mean it,\" he guesses, straightening up as I start to smile. \"You little minx...\"\n\nAnd laughing, I drop my hand into his. \"Easy,\" I murmur, even as I lead him across the hall towards our bedroom. \"Way too easy...\"\n\nOkay, yes, so I'm a hopeless romantic...\n\nThanks so much for reading me. I've has so much fun with these two. As before, your views, comments and votes would be gratefully appreciated."
    ],
    "authorname": "evanslily",
    "tags": [
        "sunrise",
        "pregnant"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/solstice-ch-04"
}