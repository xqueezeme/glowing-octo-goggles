{
    "title": "Officer Barnes",
    "pages": [
        "It was just too damn ironic. Peter Tosh's \"Wanted Dread and Alive\" was blaring out of the sound system of my car when I noticed the blue and red lights behind me.\n\nI had had a late night at the office and the warm summer night breeze felt good blowing over my face. So rather than put on the A/C, I let what we had waited all winter for, warm me up. I was also trying to put the shitty winter and the past few weeks of a shitty episode in my life behind me. \n\nYou see, summer on the coast had finally arrived and I greeted the warm weather by keeping the windows on my car down and turning up the volume of the radio. It wasn't so loud as to offend others, just loud enough to make me happy, so I had no other idea as to why Johnny Law wanted me to pull over. I wasn't speeding, well maybe 2mph over, but really? \n\nPutting my turn signal on, I pulled right, headed over to the shoulder of the street and put on my four-way flashers.\n\nMy cop was certainly in no hurry to come over to my car. He remained in his patrol car and must have been running a series of checks on my tags. With nothing out of the ordinary to be found, everything should come back clean. I had owned this particular car for the last 2 years, it was insured, and I had a clean driving record, so this should be short and sweet.\n\nIt my cop got out of the patrol car, it turned out that my officer was a she, and not a him. \n\nThe female officer approached my car with lots of caution, more than necessary in my opinion, but safety is not a bad thing. The officer carried her hand at her side, not far from her firearm. When she got a little closer, I gave her the usual, \"Good evening officer\".\n\n\"License and registration.\"\n\n\"Can I ask what I did wrong?\"\n\n\"License and registration.\" My patience in any bad situation is something that I've always prided myself on. I have been in my fair share of sticky places over the years and have never had trouble with the law, but I do tend to push the wrong buttons on some occasions.\n\n\"Yeah, I think we've already established that part. My question is why? What have I done that requires you to see those items?\" In this case, that was the button that pushed her over the edge.\n\n\"Hands where I can see them and step out of the vehicle.\" Patrol Officer Barnes as the name plate on her uniform indicated wasn't a happy girl. She had drawn her service revolver and pointed it at my person. \n\nThis wasn't the first time that I have ever had a gun pointed at me, but it was the first time ever by an officer of the law, so I did as I was told and got out of my car. With my hands entwined behind my head and a P320 pointed at me, Officer Barnes grabbed my thumbs and started to pat me down.\n\n\"Aren't you going to ask my permission first. You pulled me over for no reason, made me get out of my car at gun point and then you start to search me without cause. You didn't ask if there was anything in my pockets. I could have a weapon or a sharp object in there that could harm you. What are you, straight out of the academy?\" Apparently, this was just another button that was waiting to be pushed.\n\nThe 5'7\" officer twisted my left thumb back as is she was trying to break it and snapped the arm of her handcuffs over my wrist. I heard the ratchet teeth catching before I realized what she was doing.\n\n\"Really? Now you're cuffing me. Can I at least ask why?\" Barnes mumble something into the walkie on her shoulder that sounded like a request for back-up. The next thing I know, my chest is flat on the trunk lid of my car and she is kicking my feet apart.\n\nOfficer Barnes pat down tactics were more than a little handsy, she left no crack or crevice unsearched. If the roles were reversed, I'm sure that some sort of line or boundary would have been crossed. When she completed her task, she spun me so that I was leaning back onto the push bar on the front of her car.\n\nIt was the first time that I had gotten a good look at Patrol Officer Barnes and I would have to say that the view wasn't that bad. The officer wore zero make-up and her long brown hair was wrapped up into a bun on the top of her head. Her upper torso was hidden by her protective vest, but no amount of protection could hide the fact that she had a fine ass under her uniform.\n\n\"So, Barnes, nothing better to do tonight? Just wandering around out here, harassing the general public? We both know that I wasn't speeding.\" When Barnes started going through my car, the fur on my neck stood up a bit. Not that I had anything to hide, it's just that I like my privacy. \"You do know that that's an illegal search, and anything that you think that you might find, would be inadmissible in court, don't you Barnes.\"\n\n\"Officer Barnes, and I have probable cause.\"\n\n\"Please enlighten me as to what you think that \"probable cause\" might be.\"\n\nBarnes looked at me like she had won the lottery when she put my SIG Sauer M11-A1 on the roof of my car and didn't say another word until her back-up arrived.\n\nThe assisting officer didn't look like he was in a very good mood either. He was a large black man and from the stripes on his uniforms, he was well decorated in the police world. \n\n\"Captain.\"\n\n\"Officer Barnes. What do we have here?\"\n\n\"This gentleman turned off of Galveston onto Little Creek and didn't stop for the red light. This same Mercedes was reported to be lurking in a reported drug area earlier in the evening and when I asked for identification, he refused and then he resisted arrest. Also, I found a gun, with two clips in his vehicle\"\n\n\"Son.\" Captain Jones looked even less enthused now that he heard what Barnes had to say.\n\n\"Yes sir.\"\n\n\"What's up? And try to spare me the bullshit.\" \n\n\"Just left work. Exited off the Admiral so that I could pick up some food on my way home. I don't do drugs and I don't drive a Benz.\" Barnes' head snapped when she swung to look at my car. It is a 2019 Genesis G70. It looks like a Benz, but at a much lower price.\n\n\"Why did you refuse to be I.D.'d and why did you resist arrest?\"\n\n\"I didn't. I'm sure that the in-car camera will verify that. Also, how can someone resist arrest if they were never told that they were under arrest?\"\n\nThe Captain cocked his eyebrow at Barnes and walked toward the door of her car. The sound of another vehicle pulling up caused us all to look away from our current situation.\n\nMajor Hamlet, of the U.S. Marine Corps pulled his black non-descript SUV along-side the two patrol cars and stepped out. He must have noticed me and the predicament that I was in, when he was driving by.\n\nThe major was a career Marine. He went straight from the academy, to the war, to Norfolk. He was very well respected and like the Captain, he was highly decorated, but his decorations were from all around the world and not just a small part of Virginia. \n\n\"Captain. Officer. Can I ask why you have this man detained.\" The story of my so-called arrest was passed around. The fact that Barnes had found a weapon in my vehicle, etc. After the trio watched the video of my being pulled over, I heard Jones ask Hamlet why I was out of uniform and if he could vouch for my character. The Captain continued on, he explained that Barnes had just started her shift and had perhaps made an error in judgement.\n\n\"Chief Warrant Officer Mills is an up and comer in the Corps. He finished his shift hours ago but stayed behind working to keep our country safe. If Officer Barnes knew how to do her job, we wouldn't be standing here, in what could be called a sticky predicament. She should learn to ascertain the correct details before diving head-first into a hornet's nest. Captain Jones, it is my official recommendation that Officer Barnes be...\"\n\n\"Sir. If I may.\" The Major and I had worked on a number of projects together and we currently were teamed on a project that was deemed to be somewhat important to national security. I hated to interject when he was talking with the Captain, but this had gone far enough. I privately explained to the Major what my point of view on the situation was, and he reluctantly agreed to see it my way.\n\n\"Well Captain, it would appear that Mills here, just wants to let this go. He sees no harm or no foul. Captain, do you agree?\"\n\nCaptain Jones gave a deep growling, \"Agreed\" and the two upper classmen shook hands, got into their vehicles and parted ways.\n\nBarnes undid my cuffs and once again I was a free man. \"Barnes, if you don't mind, I'd like my weapon back.\" Her demeanor had changed drastically. At this point she was almost sheepish.\n\n\"Look Barnes, I'm not being a dick. All that you have to do is follow the basic rules of law enforcement and you'll do just fine. Facts, facts, and more facts. Don't rush or jump to conclusions.\"\n\nWhen, she handed me my piece and my two spare clips, I couldn't help but take a small shot, so I reached into my wallet and handed her my card, \"Look Barnes, if you ever need automobile identification and recognition training, give me a call.\" Barnes glared at me with a look of disgust. \n\n\"Officer Barnes.\" Was her retort. Well at least she had spunk.\n\nMy work took me out of the country for the following three months. When I returned to the grind, it took another month of solid catch up work before I could see daylight, all of which played havoc with my social calendar. \n\nWith everything back on a somewhat normal axis, I greed to join some of my troop at a charitable gala. One of the local charities was earning money to sponsor one of the state's Sick Children's Hospitals. \n\nThe evening was a fun Las Vegas styled casino extravaganza. Music, low stakes gambling, silent auctions, and drinks. Everyone in attendance appeared to be having a good time and were throwing cash around to help a good cause.\n\nScanning the room, I did my favorite thing in the world, I people watched. The actions, habits and mannerisms of humans fully intrigue me. I could spend a week at an airport or a mall as a vacation and tonight wasn't a letdown.\n\nOld money mixed with new money, who mixed with no money and everyone was happy. Using and losing cash that wasn't printed by the U.S. Mint will make that happen.\n\nThe gold sequined dress caught my attention out of the corner of my eye. The fine figure that it adorned looked out of place among the rest of us. Showcasing just enough cleavage to show some modesty and being only slightly tight so that it showed off a fine ass. Her long hair was washed to the side, so that it hung down over her shoulder and down her left breast. The delicate features of her face sparkled with only the minimal amount of make-up.\n\nI knew that I had to talk to her, and I didn't care about protocol or precautions.\n\n\"Barnes.\"\n\n\"That's Officer Barnes to you.\" I hadn't encountered her in a little over four mouths, but she still remembered our run in.\n\n\"You look lovely tonight, not that your uniform was any less becoming on you.\" Barnes gave me the once over and appeared to be trying to come up with a shot at me.\n\n\"You've cleaned-up pretty good yourself Mills. Did you trade the t-shirt and jeans for your dress blues?\"\n\n\"Yeah, it's a chick magnet, can't you tell.\" I waved my arm around the room to show the numerous other older guys wearing similar costumes.\n\nAn attractive older woman appeared to my right she kissed Barnes on the cheek and gave her a hug. \"Melanie, is this handsome gentleman one of the perspective dates?\"\n\n\"No mom, he is not. This is an old friend. Mills this is my mother, Eleanor Barnes. Mom, Mills.\" \n\n\"Well Mr. Mills, maybe you would like to sign up for next year.\" I wasn't sure what they were talking about, so I asked.\n\n\"I'm sorry, but I must have missed something.\" Barnes junior enlightened me to what had gone completely over my head.\n\n\"It's a Dinner Date Auction, Mills. You bid on men and women. The highest bidder gets to take his or her date out to a predetermined restaurant for a nice meal. All proceeds go to help the hospital.\" I let a laugh escape me before I could reel it in.\n\n\"What?\" Both Barnes ladies said in unison.\n\nWith my tail between my leg I was ready to run and hide but they wouldn't hear of it. \"Please Mr. Mills, enlighten us as to what you find so humorous with our little auction.\n\nFuck it. I didn't know these people and the worst thing that could happen to me was to have Barnes pull me over for no reason, again. \"Nothing. I'm just trying to rationalize whether this is the sexiest or the most sexist thing that I've ever heard of.\" Senior spun on her heels and made a beeline away from me. I would have made a wager that she was offended.\n\n\"Melanie, that's a nice name.\"\n\n\"Fuck you, Mills.\" And like her mother before her, she sauntered out of sight.\n\nThe night progressed as expected. I lost the appropriate amount of money to make a donation, and was ready to leave, but my ride wanted to stay for the auctions. I should have grabbed a cab, but for some reason I was compelled to stay.\n\nThe women were almost vicious with their bidding. It was like a contact sport where they were all vying to be top bidder for the beefcake up on the stage. Six guys were sold off and almost $10,000 was raised. The girls took to the stage and to my absolute surprise, Barnes was among the goods to be sold.\n\nThe men weren't quite as crazy as the women with their bidding. Oh, they bid more, but they didn't appear to be wildly in lust. \n\nBarnes was the third to the podium. After a pleasant introduction and description of the local restaurant the bidding started. It seemed to stall a bit around the $1000 mark. Then it went to $1750 and once again there was a lull in the bidding. As beautiful as Barnes was, there were still 2 buxom blondes and a redhead waiting in the wings. The auctioneer picked up his gavel.\n\n\"Last and final warning. Going once. Going twice.\" He raised it up and for some reason that I will never be able to explain, even to myself, I shouted out with a cackle.\n\n\"Three thousand dollars.\" \n\nBarnes looked truly shocked. Thus far this evening, that was the high bid for anyone. She was even more shocked when she saw who had bid it.\n\nAfter the last three were done, we were invited back to meet our dates, pay for the privilege and pick up the restaurant certificates.\n\n\"Well Mr. Mills thank you very much for your generous donation. Please come with me and I will introduce you to your date and you two can make arrangements.\"\n\n\"Melanie, dear, this young gentleman was the lucky bidder. I'm so sorry, I didn't catch your first name sir.\"\n\n\"Matt. Matt Mills. Very pleased to meet you, Ms. Barnes.\"\n\n\"Melanie. Mel to my friends. You can call me Officer Barnes if you like.\" Her voice dripped with sarcasm when she spoke to me. \"So, Mills, why me? You a big fan of three-thousand-dollar steaks at the LongHorn?\" \n\n\"Actually no. But I am a big fan of lively conversation, with a side order of harassment, so I figured bidding on you, along with the fact that the money is going to a good cause, is a win/win for everybody.\"\n\n\"Everybody but me.\" I'm not so sure that Barnes meant to let that part slip out.\n\n\"Look Barnes, I'm not always a dick. I promise that for our date, I'll be on my best behavior. I'll wear something casual. No uniform. We'll eat. Then we part ways.\"\n\n\"Saturday. 6:00pm. I'll meet you there.\"\n\n\"Sorry, but no. We're not taking the kids out for lunch, it's a date, and I don't get out much, so we're not going out at 6:00pm. I'll pick you up around eight. We'll go out for a drink and then for dinner.\"\n\n\"Sorry to deflate your balloon there General, but it's not a date. We both donated something to a charity, my time, your money, so it's just dinner.\"\n\n\"General? I do like the sound of that, but not yet. It's just C.W.O. but you already knew that. In many circles, when a woman \"sells\" her time to a gentleman for money, a \"date\" is exactly what it is called, but not a sit down for a meal kind of date. But you already knew that too, didn't you Officer Barnes? It's okay. I give in. Call it what you will. I'll pick you up at eight, sharp.\" \n\nThe prostitution innuendo pushed another button, but I started to walk away before it sunk in too deeply. Barnes called after me.\n\n\"You don't even know where I live.\" She was correct, but I wasn't letting her win this one.\n\n\"I'm in Intelligence Barnes. You think that I can't find out where you live?\" and I kept walking.\n\nI gathered up my ride and headed toward the door but made one last stop.\n\n\"Excuse me Mrs. Barnes. Thank you for a wonderful evening.\"\n\n\"Well thank you for attending and for your very generous donation Mr. Mills. I'm sure that you and Melanie will have lots to talk about on your night out.\"\n\nTaking a card out of my pocket, I handed it to her. \"I'm sure that we will. Would you be so kind as to text me or e-mail me Melanie's address. I forgot to ask for it when we made our arrangements for Saturday night.\" Mrs. Barnes did me one better. She took a pen from her purse and wrote down the address on the reverse side of my card and gave it back to me.\n\nThe thought of my Saturday night date didn't even enter my mind until I noticed that the donated funds had been extracted from my checking account. At that point I began to wonder what I had got myself into.\n\nDriving to the address provided, brought me into a very nice neighborhood. All of the properties had grand houses with manicured lawns and high-end vehicles. As I was pulling up to the house, I realized that Barnes lived with her parents.\n\nMr. Barnes answered the door with a bourbon in his hand and The Beatle's Abbey Road playing in the background. He seemed down to earth and offered me a drink, which I declined.\n\n\"I'd love one. But I'm taking a cop out to dinner tonight, so I can't risk the DUI.\" He got the joke and chuckled. He talked about his work and mine. Turns out that he has friends that are superior officers at the base where I work. He was an interesting guy and the truth be told, I enjoyed our conversation.\n\nWhen Barnes finally made an appearance, she looked good. Her long brown hair was pulled back behind her ears to showcase her face. She was wearing a very nice floral summer dress, with light white knit half sweater, black heels and a black clutch purse. \n\nFor the second time when meeting Barnes the music in the background hit the nail on the head. This time it was the Beatles belting out, \"I want you. I want you so bad, it's driving me mad\". It wasn't driving me mad, but Barnes looked so good that it was close enough.\n\nMr. Barnes walked us to the door, shook my hand and kissed his daughter on the cheek. \"You kids enjoy your date.\"\n\n\"It's not that kind of date dad.\" Barnes wanted her father to be clear of that, but he wasn't having it.\n\nHer father looked into her eyes and said, \"Maybe it could be if you gave it a chance Melanie.\"\n\nOfficer Barnes didn't make much conversation during our trip to the steak house. In fact, she wouldn't even acknowledge me when I spoke. We weren't off to a good start, but so far, it wasn't the worst date that I'd ever been on.\n\nLuckily, they sat us in a booth away from the noisy birthday party in the front of the restaurant. I ordered us a bottle of red wine, while Barnes gave the menu a thorough inspection. After everything was ordered, we waited for our appetizers.\n\n\"I'm sorry.\" I had to start somewhere. \"I wasn't trying to give you flack. It was a long day for me. I wanted some food and to get home. So, when I got pulled over, I wasn't in the best of moods. More than likely, I said some things that weren't very nice and for that I'm sorry.\" Barnes head hung pretty low when I apologized. She wouldn't make eye contact with me.\n\n\"I was having a bad day too.\" Her voice was low, and it sounded like she was trying to hold back tears. But she was saved when our server brought over our wine and presented a taste for the lady. Approved, and poured, we moved forward.",
        "\"How could your day have been so bad, according to your Captain you had just started your shift.\" Barnes looked at me with an agitated look. I was pushing her button all over again and this time, I wasn't even trying.\n\nShe sat up straight, squared her chin, shook off whatever is was that had her down earlier and said, \"My life outside of work had kinda gone for a shit that day. My head wasn't in the game and I made a really bad error in judgement.\" Honesty has always gone a long way with me.\n\n\"Fair enough. I know the feeling.\"\n\n\"Do you Mills? Have you ever been on a midnight shift and wake up during the day to find your future husband packed up and sneaking out of your house? Trying to leave without a goodbye or an explanation?\" Some of what she said was in a very sarcastic tone.\n\n\"Not exactly the same situation, but yes. Came home to an empty house after working away for two weeks. My ex fianc\u00e9e's note said that she couldn't stand the secrecy in our relationship. She knew coming into it that I couldn't talk about my work but expected that to change. When it didn't, she walked.\"\n\n\"Mine thought that cops should be guys and women should never work a night shift. It didn't look good. What would his family and friend think about me being out all night? So instead of trying to come to terms with it, he changed his lifestyle. Set-up another apartment with his little slut of a secretary and on the morning that I pulled you over, moved out. \"\n\nThe whole story sounded too familiar. I laughed into my hand and looked at Barnes. It would be way to funny if it were so, \"Was your ex's name Colin Morris?\"\n\n\"Do you know him?\"\n\n\"Nope. But his \"little slut of secretary\" is my ex.\" For the first time since we had met Barnes and I laughed at the same time.\n\nBarnes raised her glass to me. They clinked together just as our steaks arrived. It would seem that we were drawn together by a series of strange coincidences.\n\nFrom that point our night went much better. Barnes told me about her police work, and I told her about everything that I did that was public knowledge. After dessert and coffee, what was supposed to be a 90 minute eat and retreat, had turned into a full blown 4-hour meal and conversation.\n\nA well lite interlocked cobblestone path led to the Barnes front door. My date stepped up to the next level leaving me down on the main path.\n\n\"Well Mills, you didn't lie. You weren't a complete dick. You were a gentleman and you showed up nicely dressed. We ate and you returned me safe and sound. I gotta say, the night went better than expected.\" \n\n\"Yes, Officer Barnes, I like to keep my promises. Surprisingly, it was an interesting evening. I had a very nice time. Would there be any chance that you'd be interested in doing it again sometime, maybe next Saturday?\"\n\n\"No. I mean yes, but no. I'm working. I pretty much work every other weekend and next weekend is my regular shift.\"\n\n\"Nights?\"\n\n\"No day shift, but twelve hours from seven until seven.\"\n\n\"Come over after work, if you're not too tired that is. I'll make dinner.\"\n\n\"It will have to be an early night. I work in the morning.\"\n\n\"Fair enough. Can I text you my address?\"\n\n\"I work in law enforcement. You think that I can't run your plate again?\" I smiled. I knew that was her way of giving me a \"Fuck you\". I made a move to shake her hand goodnight, but she moved in for a hug instead.\n\nHer body was at the perfect height. Her breasts pressed against my chest and our faces touched together for the first time. Barnes and I held the hug for a little longer than we should have and when it was time to move apart, we each twisted our heads to kiss the other on the cheek. \n\nDue to positioning we missed completely. Our lips touched and kissed. Barnes soft lips sent a wave of electricity running through my body like I'd never felt before. The kiss that started as accidental was now full-blown. It was brief, lasting 5 seconds or less, but it was special. \n\nMy twenty-eighth birthday was right around the corner. That put me into a category where I believed that I was young enough to enjoy all that life has to offer, but old enough to know better when it came to things beyond my control. So, it was a surprise to me that I thought about Barnes as much as I did. \n\nI couldn't wait for Saturday to arrive. On Thursday, I passed her squad car when she had someone pulled over and I was tempted to stop. She appeared to be focused and professional, so she may have taken the opportunity to shoot me.\n\nDisappointment had set in by 8:15pm on Saturday night. Dinner was made and ready to be served, but Barnes was nowhere to be seen. I blew out the candles, poured myself some wine and turned on the game. Had I turned on the local news, I would have noticed why she wasn't there.\n\nAt 9:24pm the buzzer for my condos front door sounded. Pushing #9 to allow entry, I waited.\n\nBarnes knocked moments later. She was still in uniform and smelled of smoke. Apparently, there had been a multi vehicle accident on the Beltway and Barnes along with a number of other units, had been dispatched to the scene.\n\n\"Mills, I'm sorry. I just wanted to tell you personally that I couldn't make it tonight. I would have called, but no one could dig up your cell number, anywhere.\"\n\n\"Corp issued. Top secret shit.\" Barnes shook her head and laugh. \"Did you eat?\"\n\n\"No. I just finished my shift and came straight here. Like you, I try to keep my promises.\"\n\n\"Come in and eat. Some of it might even still be warm.\" Barnes looked around the room as if doing a scan for perps.\n\n\"I've been in this uni for fifteen hours. I stink of smoke, so I wouldn't be the best dinner guest.\"\n\n\"Shower is down the hall. Or use the one in my room, it's bigger. Clean robe, sweats or whatever you find in the closet.\" Barnes looked around for a second time as if analyzing the situation. \"I'll start reheating the fish. Red or white?\" and I pushed the door of my condo closed.\n\nThere was only a second more of hesitation before Barnes moved toward the hall. \"White.\"\n\nShe closed the door to my bedroom when she entered. It was less than 20 minutes later when she returned. Scrubbed clean, hair still wet, body smelling of Irish Spring soap, wearing a pair of my socks and my three sizes too big for her, black robe.\n\nI handed her a glass and made a simple \"Health and Happiness\" toast. It was a California Chardonnay, but from the look on her face, it looked like she was drinking from the Fountain of Youth.\n\n\"Oh my god, that is soooo good. It absolutely hits the spot.\" I couldn't stop myself from looking at her. Every time that she spoke or loosened her tight grip on her personality, you could see that her beauty was more than skin deep.\n\n\"What?\" I didn't answer. \"What?\" still no answer. Instead I stared at her leaning on my kitchen island. I watched how her wet hair lay and thought to myself, how her naked neck and shoulder were perhaps the sexiest that I'd ever seen on a woman. I should have picked up the plates and started to serve the meal, but I didn't. \n\nShe took another sip of her wine, just as I proceeded to bend in toward her. \"Mills?\"\n\n\"Barnes.\"\n\n\"Matt.\"\n\n\"Melanie.\" She tilted her head just before my lips touched hers. It was the first time that I had used her actual name, other than to taunt her. It sounded right, but I still enjoyed the sound of Barnes. It sounded more official.\n\nThe soft feel of her lips and the sweet taste of the white wine caused me to lose focus of my senses. When our lips pulled apart, I moved to my left and kissed and nibbled the nape of her neck. Her hand was soft and warm on the side of my face. For a second I thought that she was going to put a stop to my advances, but she didn't.\n\nTaking more liberties, I moved back to her lips and touched my tongue to them. Her mouth parted to allow me the requested access. The taste of wine was much bolder. Barnes was a passionate kisser to say the least. With her hand touching my face and me holding her head in my hands, we kissed like a couple who had known each other for years.\n\nI wanted to give Barnes an out, a chance to back away from my advances, so I stopped and looked into her eyes. \"Are you hungry?\"\n\n\"Well, not now I'm not.\"\n\nThat was my \"Get outta Jail Free\" card. Moving my head lower, I pulled at the sash that was holding her robe closed. \n\nBarnes was spectacular. She had very fine \"C\" cup breasts with dark brown nipples. Her belly, hips and legs looked like they belonged to someone that spent time in a gym or jogged a few miles a week. Her vagina was hidden from my close-up view, but it appeared to be smooth and freshly shaved.\n\nMy kisses trailed down from her neck until I was able to suckle at her breast. Her nipple reacted to my touch and tongue. They hardened and Barnes moaned as my lips pulled them forward. Her hands gripped my head and wavy hair, forcing me to keep direct contact, but I wanted something else. \n\nKissing her belly, I stood and caused Barnes to become concerned, she wasn't about to say anything, but the look of disappointment was on her face. \n\nPutting my hands on her waist, I lifted Barnes up so that her butt was seated on the granite countertop. Barnes grinned like a very naughty girl. Leaning back onto her elbows, she gathered up her glass and took a large swallow of wine.\n\nCaressing the smoothness oh her legs, I lifted one and placed it on the countertop so that the sole was flat on the surface. Looking down at her nakedness, I now had a perfect view of her wet and open womanhood.\n\nI could smell the scent of excitement and feel her warmth as I lowered my face. Barnes was more than receptive to my actions. It was no sooner than I had started to explore her depths, that she used her fingertips to pull her lips apart to allow me better access.\n\nMy tongue roamed freely over every groove and fold in her skin. Her juices coated my taste buds with their golden nectar. Barnes lifted her ass up the counter and pushed her vagina toward my face.\n\nUsing my middle finger, I penetrated her folds. When my lips sucked her clit toward my tongue, I sunk my finger in as deep as I could. Barnes released her hold on her pussy and used the very same hands to pull my face closer to her wetness. \"Oh, shit. Just like that.\" \n\nLess than a minute later, my flicking tongue on her hardened clit caused her to explode. I felt her body tense and stiffen as her orgasm ripped through her. \"Holy fuck Mills.\"\n\nThere would be no recovery time. I lifted Barnes into my arms and carried her toward my bedroom. \n\nHer uniform was laying across the end of my bed. It was exactly where she had left it after her shower. What amazed me about the uniform was her undergarments. Barnes must like to feel sexy at work, because a good-looking set of blue lacy panties and bra sat nicely folded on top of the other things.\n\nKnocking the smoky uniform to the ground, I laid Barnes down onto my bed. Stepping back, I removed my t-shirt, exposing my abs to my future lover. Barnes gave me the once over, but she was focused on the main event. \n\nI undid my belt and unzipped my jeans. Helping them over my bulge, I let them fall to the floor. Wearing no underwear, I sprung to attention in front of Barnes. Her gaze and the sexy way that she bit her lower lip told me that she approved.\n\nHer legs lifted, parted and tried to wrap themselves around my waist. Instead, I used my arms to hold them tight against me, put my hands on her thighs and pulled her to the edge of the bed. With her lying and me standing, our alignment couldn't have been any better.\n\nLeaning in for a kiss, I cupped one of her tits into my palm and gently squeezed it. Barnes bit my lip and sucked it into her mouth. When she did that, she reached between her legs and grabbed ahold of my shaft.\n\nUsing my penis as a vibrator, Barnes slapped her clit and mashed her lips with its head. When I felt her wetness part, I moved forward. My lover lifted at the same time and in one long, smooth, push, I was in. \n\n\"Holy fuck Barnes, you feel amazing.\" It was my turn to pay forward a compliment. \n\nSavoring the feeling of being with a woman for the first time in over six months, I began to move. Barnes cooed as I retreated to the point where I almost popped out of her tightness, then eased myself back in. \n\nThe well-oiled timing of our lovemaking had us moving in sync. Our hips pushed and pulled at exactly the same time. \n\nUsually I'm the kind of guy that likes to watch my cock going in and out of a vagina when having sex, but tonight was different. For some reason I wanted to be close to Barnes. I wanted my hard stomach touching hers. I wanted to gaze into her eyes. I wanted our lips to be joined like those that share a special bond and I wanted her to be in my arms.\n\nShe must have felt the same connection because as I thrust into her, her arms were draped across my back and her fingers were woven through my hair. \n\nEvery inch of my body was stimulated and on fire. The tight grip around my shaft, coupled with her passionate kiss and her fingers nails scraping my back, pushed me to the edge.\n\n\"Barnes, I'm about to cum.\" In an almost primal instinct, my words caused her to wrap her legs around my hips and pull me in. Her arms stopped their work on my back and wrapped themselves around my neck and her tongue found its rightful home in my mouth. \n\nMy groans sent my warm breath past her lips as I came. My hot bubbly semen shot out of me looking to inseminate my lover. Barnes stopped moving and cried out. \"Holy fuck.\"\n\nI continued pumping, trying to ensure that every last drop of my love filled her to the brim. When completely satisfied that there was nothing left to give, I collapsed onto her chest.\n\nBarnes let her arms lay out at her side like she had been nailed to a cross, while her legs dangled over the edge of my bed. I took the opportunity of her stillness to pull my softening cock out of her full vagina. \"Nooooo\", moaned Barnes as she felt the vacancy.\n\nI licked and kissed her neck. Once again, I suckled at her hard nipples. I kissed her belly that was full of cum, then I moved down to kiss the top of her pubic mound and said, \"thank-you\".\n\nMoving back to my lover's side we cuddled, basking in the afterglow of love making. Barnes mindlessly played with the hairs on my chest and traced her fingers over my ribs, while I stroked her hair and twirled her nipples. After what seemed like hours, Barnes finally spoke.\n\n\"So, what do you have planned for an encore Mills?\"\n\n\"Anything that you want.\" Neither of us moved. My new lover was just as pretty after sex as she had been before. My emotions were something new to me. I couldn't get enough of the woman next to me. It was the first time I had felt that way about anyone and I was engaged to my last lover.\n\n\"Barnes, did we just make a baby together?\" Her chuckle came from her belly. She was amused by the question and not offended in any way.\n\n\"You wish. I'm a twenty-seven-year old cop. I don't think that they'd want me chasing bad guys while I was pregnant, but I'm honestly so hungry right now, that I feel like I could eat for two. Is this the apartment that you shared with your ex?\"\n\n\"I'm not sure that I'd say that I wished it, but I wouldn't be opposed to it. At the risk of sounding vain, it would be a pretty good-looking kid, and no, there is nothing left in my life that her and I shared. I had only just moved here before you faked arrested me.\" Before Barnes could respond, I was up and out of bed. \"I'll be back with some food.\" \n\nWhen I returned Barnes was under the covers of my bed watching the news. I listened to her intently as she told me about her day. Like she had mentioned earlier, she ate for two. It was shortly after midnight when she yawned and told me that she had to leave.\n\n\"Stay.\"\n\n\"No sleep overs on a school night.\"\n\n\"It's only a school night for you. Tomorrow's still my day off.\"\n\n\"Show off. I wish that I could, but I don't want to be known as the stinky girl when I show up wearing that smoky uniform.\"\n\n\"I'll spray the hell out of it with Febreze. You'll smell just like lilacs.\"\n\n\"I can't Mills. I know what you have in mind and I need to sleep.\"\n\n\"Sleep. You'll get at least an extra hour if you stay here.\" With that, I dimmed the lights and kissed her good night. Minutes later the soft breathing sounds of her slumber filled the room.\n\nThe alarm on her iphone woke us both. It had been a half a year since I'd shared my bed with someone, and it was nice to be spooned up against her. Time was short, so I made coffee and bagels while Barnes showered.\n\nRushing into the kitchen at 6:25am, she grabbed her coffee, wrapped her bagel in some paper towel and headed toward the door. \n\n\"Do you think that you might be interested in joining me for dinner again tonight?\"\n\n\"I didn't join you for dinner last night. I showed up late. You seduced me, then you had your way with me, then you fed me some leftovers in your bed.\"\n\n\"That's not how I saw it.\"\n\n\"Well that's exactly how it happened. I took notes.\" She bent in front of me to tie her police issued footwear and gave me a great view of her ass. Looking back at me over her shoulder, she noticed that I was admiring the goods and said, \"I'll be here by 7:30pm.\"\n\nClearing up the leftover dishes and making the bed presentable, I found the pair of panties that Barnes had worn the day before. Was it a gift? She had to have known that she wasn't wearing any. Thoughts of her working the day without, made my mind race. I went for a jog along the shores of the bay and tried to clear my head, but try as I might, I couldn't get her out of my mind. \n\nTonight, there would not be a delay. Barnes arrived as scheduled, still in uniform, but toting a leather carry case. When I looked at it in a quizzical manner, she let me know what it was for. \n\n\"Clothes. Figured that you didn't want me wearing your robe again tonight.\"\n\n\"You must be kidding. Being on you, is the best that that robe has ever looked.\" Barnes blushed and lowered her head. That was a behavior that I wasn't expecting. She was a strong, well versed woman and I didn't think that she had a shy side.\n\n\"Do you mind if I use your shower again?\" She didn't wait for an answer and started walking down the hall. She knew that I was watching every move that she made, so there may have been a little extra sway in her hips. When she reached the door to my room, she looked back with her gun belt in hand. \"You plan on joining me Mills?\"\n\nA fake scream and laugh escaped her as I sprinted down the hall. Instead of the shower, Barnes flopped sideways across my bed, and I jumped in beside her.\n\nSlowly and methodically, I unbuttoned the shirt of her uniform. Hidden beneath the bluish gray top was the lacy bra from the night before. Using a little more force, I tugged Barnes toward me by the belt of her pants. The brass buckle fell apart in a matter of seconds, leaving just the single button and the zipper.\n\nWith both undone, I bided my time. Getting off the bed, I lifted up Barnes legs and removed her boots one at a time. Slowly unlacing the black leather, I removed the first and dropped it to the floor. Putting her foot flat against my chest, I roll up her pant leg and slowly pulled down the first sock.\n\n\"Thief.\" Barnes only smiled at the revelation that she had indeed worn my socks to work today. With the second boot and sock off, I undid the button on the cuff of her shirt and motioned for her to pull out the arm. First the right, then the left.\n\nTaking both of her hands into mine, I pulled her up just enough to reach behind her. With a perfunctory snap, the lacy garment came free in my hands. \n\nGently easing her back down to the mattress, I moved in for a kiss. The stale coffee on her tongue did nothing but heighten my senses for what lay ahead.\n\nReleasing her hands from mine, I lightly traced the outline of her arms until I reached her shoulders. Lifting myself off her, I continued moving my fingers. The tips went from her shoulders to her neck and down to breasts and hardened nipples.",
        "Barnes shivered and shook at the delicate touch that was tickling her skin. Not once did she speak. She only bit her lower lip to show me that she appreciated the effort. \n\nRunning circles around her perky globes, I tracked my way across her soft yet hard stomach.\n\nNo words were needed when I arrived at her hips. My fingers grasped the material and without a second of delay, Barnes lifted her hips, allowing me to remove her pants and revealing her hidden treasures.\n\nBarnes laid back onto the bed as the thick dark cloth was removed form her legs. I threw pants into the pile that was once her uniform. My eyes roamed over her body. I took my time to enjoy every curve and valley. Unlike last night, the excitement Barnes was facing was very evident. Her juices appeared to be flowing freely from her.\n\n\"Naughty girl, Officer Barnes. No panties at work today?\" Barnes just continued to bite her lip and watch in anticipation as I undressed in front of her. \n\nFully naked, I moved down to kiss Barnes again. When I did, I could feel the tip of my cock pushing at the entrance of her heat and wetness. Anticipation was killing us both.\n\n\"So much for my shower.\" Barnes knew that I couldn't wait until later. I pushed down and spread the lips of her love.\n\nInch by inch I sunk into heaven. Barnes groaned and gave me a \"Ohhhhhhh\" just before she bit me on the neck.\n\nUnlike the night before, I started immediately. My thrusts were once again timed perfectly with my lover's. Our well-choreographed love making felt amazing. \n\nThe strong scent of sex wafted up to my nostrils, only to add to the excitement.\n\nBarnes held my face as she tongued my mouth. She was very sexual and made no bones about enjoying herself. \n\nI had the feeling that I could have gone on all night, but when my lover exhaled all of the air from her body into my lungs as she came, it was over for me.\n\nFor the second day in a row I filled Barnes with my seed. \n\nCollapsing into one another, we laid motionless. Neither of us wanted the sensation to disappear, but with some kind of subliminal being directing me, I started to slowly hump into my lover.\n\n\"Nope. No way. We gotta shower first. Then you're gonna feed me. And maybe if your lucky, we'll do that again.\"\n\n\"Handcuffs or no handcuffs.\"\n\n\"Never handcuffs on a second date.\"\n\n\"Third.\"\n\n\"How many times do I have to tell you Mills, the first time wasn't a date. It was for charity.\"\n\nThe hot shower water pulsed out of the head onto our bodies. We took turns lathering and washing one another. The moans that came from Barnes as I washed and massaged her shoulder and back made me hard. I couldn't help it. The sight and sounds of the beautiful woman before me, turned me on.\n\nUsing the lubrication of the soap, I ground my thumbs into her spine and massaged her from her neck to her hips. Barnes stood with my hands on the tiles and feet spread apart. She looked as though she was on the receiving end of being frisked.\n\nWhen she turned to give me a kiss in thanks, she slapped my erection.\n\n\"Really?\"\n\n\"What?\"\n\n\"What, what? Are you eighteen or something? Doesn't that thing ever get soft.\"\n\n\"Not around you it doesn't.\" Barnes smiled at me with the sexiest smile she had graced me with since we met. Our soaked bodies entwined, and she once again foraged my mouth with her tongue. I thought that we were through in the shower, but it wasn't to be.\n\nLowering herself down to her knees, she engulfed my penis into her mouth. The warm vise like clamp of her lips would lessen her work. \n\nWith her tongue firmly planted on the underside of my shaft, Barnes started sucking. Water splashed off of her face and smoothed back her hair as her head bobbed back and forth.\n\nPlacing my hands on her ears, I bucked forward just slightly. The feeling of her action brought me closer by the second. \n\nEverything thing about this girl turned me on. When I noticed the reflection of her masturbating, in the glass shower doors I started to spurt. Barnes was able to pull off with only the minimal amount getting into her mouth. The rest of my load shoot out, landing squarely on her chest and tits. It didn't stay for long, as the steady stream of hot water washed it down the drain.\n\nBarnes had an almost apologetic look on her face. \"Sorry Mills, you caught me off guard.\"\n\nThere was no reason to be sorry and I kissed her to prove it.\n\nIt became apparent that Barnes didn't need to bring over any clothes, because just as the night before, she put on my robe. We sat on the couch and snacked on food, talking until a little after 10:00pm and once again Barnes started to leave.\n\n\"Where are you going?\"\n\n\"Home. I have to work in the morning.\"\n\n\"Yeah, I thought we'd already established that part.\"\n\n\"Mills, you ever say that to me again, and I swear to god, I'll shoot you.\" Oh yeah. That was the button that set her off way back when.\n\n\"Sorry. Stay. You slept well last night. I'll burn you another bagel in the morning.\" A smile washed over her face. \n\n\"What is this Mills? What do you want? Are we friends with benefits? Are we just fuck buddies?\" That comment truly hurt and I think that she could see it in my face.\n\n\"If that's what you want, but I was hoping for more.\" She grabbed my hand and pulled me with her to the bedroom. Barnes stripped off the robe and got into bed. I turned down the lights, pulled the covers up to her neck and kissed her on the forehead.\n\n\"Thanks for tucking me in Mills.\" I squeezed her hand and made my way toward the door. \"Mills.\"\n\n\"Yeah.\"\n\n\"Don't make me fall in love with you.\"\n\n\"I think it's a little too late for that Barnes.\"\n\nDarkness encased the condo. The only light came from outside and the screen of my laptop. Getting in a little homework helped to keep my work dockets clear. Shortly before midnight Barnes used the stealth of a cat and snuck up behind me, draped her arms over my shoulders and seductively asked me to come to bed. It was a request that she would never have to make twice.\n\nIn the shadows, I watched as she pulled the robe off of her sexy body and lay it across the bottom of the bed. Using the same cat-like skills, Barnes crawled up the bed and sat astride me. \n\nHer hair hung down, touching my face and chest as she kissed me. When she sat back and fished for my penis, I took the opportunity to fill my hands with her perky breasts. Rolling her nipples between my fingers, Barnes sank herself down onto my erection.  \n\nUnlike our prior couplings, we did not move together. This time Barnes did all the work. With her hands planted firmly on my chest, she only moved her hips. \n\nThe raising and falling gyrations were as sensual as anything I had ever heard of or seen. In the darkness my visual senses were for not, but my sense of sound, smell and touch were at their peak.\n\nBarnes came before I did. When she was mid orgasm, I shot my load up into her waiting vagina. She knew the power that she had over me. Taking her hands off my chest, she held my face tightly and kissed me passionately.\n\nHolding her in my arms, under the protection of my sheets and blankets, we were lovers.\n\nThis morning I was up and showered before Barnes. Today was a workday for me also. I put on the coffee, cooked up a couple of eggs, some bacon and two bagels.\n\nBarnes looked sexy as hell when she came into the kitchen. Her hair was tossed and a mess. She had put my robe back on and was trying to see what time it was. \n\n\"What time do you start Mills?\"\n\n\"Zero Seven Hundred, but I have to prep for a meeting. Here.\"\n\n\"What's that.\" I had passed her an envelope containing a couple of things.\n\n\"It's a key. The security code is written down. The card is for the parking garage. Spot twenty-eight is yours, and because of your shabby detective work, that's my number. See you tonight?\"\n\n\"Maybe. Yeah. I mean I can't stay here every night.\"\n\n\"Why not? I left you a new toothbrush. The only thing missing is soap. Don't want your peers getting the wrong idea when you go into work smelling like Irish Spring every day.\" I kissed her goodbye and didn't realize until I was in my car that there was no solid answer as to whether or not she'd show up that night.\n\nShe didn't.\n\nNo word from Barnes on Monday or Tuesday, but sometime after lunch on Wednesday, I got a text. \"I'll make dinner if your interested. Your house. Let me know.\" It was a simple enough text, so I returned one in the same fashion,\n\n\"There by 5:00pm.\"\n\nThe smell of fajitas filled the air. Barnes hit the nail directly on the head. Fresh guacamole, fajitas and a six-pack of cold Modelo. The chef was dressed in a pair of white shorts with black sport top on. She looked very much at home. We sat at the table to eat for the first time in three meals, it all seemed very domesticated. \n\n\"You trying to seduce me Barnes? Mexican and cold beer are my favorites.\"\n\n\"Mine too, and I'm fairly certain that you're a sure thing, so the whole seduction thing wouldn't take a lot of effort on my part.\"\n\n\"Fair enough. You off work?\"\n\n\"Until next Tuesday.\"\n\n\"Nice. So, no rush to run out of here tonight?\" \n\n\"We'll see. What do you have planned for the weekend?\"\n\n\"Maybe hangin out with my new girlfriend.\"\n\n\"Girlfriend? You sure that's something you want Mills? I come with baggage.\"\n\n\"Baggage? Do you think for a second that I'm worried about baggage? My middle name is Samsonite.\" There was an awkward silence as we ate. It was as if Barnes was pondering something or looking at the bigger picture. Something that I couldn't put my finger on. \n\n\"My parents are having a benefit dinner at their golf course on Saturday night, are you interested in joining me?\"\n\n\"How will I be introduced?\"\n\n\"How would you like to be introduced Mills?\"\n\n\"Well, I don't know. Is it like a date or do they plan on raffling us off to the highest bidder?\"\n\n\"Very funny.\" \n\nIt was the first time that Barnes slept over and we didn't have sex. We talked, I worked on a project and she watched television, apparently something that she says she never does. I left the condo Thursday morning and Barnes was still curled up, sleeping in a grey Marine t-shirt. She looked so sexy that I wanted to call in sick and spend the day ravaging her.\n\nI was finding out that with Barnes that life is full of peaks and valleys. In the morning watching her in my bed, was a high. Returning home and not seeing or hearing from her, was a low. I've never been dependent on another person, but with Barnes it was different, I enjoyed her company and having her near me.\n\nNo call or text Friday, but she was home when I got there. She was wearing a short, sleeveless, floral dress and was barefoot. By the look of her wine glass and book, she had been there for a while.\n\n\"Hey beautiful.\" Barnes did a double take and looked around the room to mock my words. I walked over and kissed her Chardonnay covered lips. \n\n\"You feel like going to O'Malley's for a bite and a beer? My treat.\" Her words sounded so good after a long day of work.\n\n\"You told me that I was a sure thing, yet you keep trying to put me under a spell of your wily ways, by offering me food and beer. What a cunning temptress.\"\n\n\"Yeah, yeah. Put on some jeans and let's go.\"\n\nO'Malley's is an Irish pub, not far from my home. It has good food and cold beer. Barnes turned heads when she waked in. I initially thought it was because of the short dress and her beauty, but as it turned out, it was because she was an off-duty police officer, and sometimes people will remember every cop that they've ever had a run in with. But fate and good luck were on our side, and no problems or issues arose. \n\nThis ended up being our first true date. No one was on the defensive. We drank and eat. Barnes made me dance with her. The Dubliner's, Whiskey in a Jar and Ed Sheeran's, Galway Girl, were her favorites. Sweaty, full and maybe just a little bit drunk, we grabbed a cab home.\n\n\"I'm gonna jump in the shower. Join me?\" Barnes gave me a wave as she turned on some music. \"Come on Barnes. Whiskey makes me frisky\" \n\n\"It doesn't take much to make you frisky.\"\n\n\"Ah, come on.\"\n\n\"Yeah, yeah. In a bit.\" But a bit never came. Washed and dried, I slipped on some sleep shorts and went looking for Barnes. She was still in the kitchen swaying along to some tune that I'd never heard. When I went to her, she gave me a quick kiss and told me that it was her turn to shower.\n\nI heard my name being called from the bedroom. To my surprise or pleasure, depending how you looked at it. Barnes was laid back on the bed. Clad in a set of sexy red lingerie. The lacy fabric of the bra and panties, along with the sheer nylons, accentuated all her hidden curves. \n\nLaying with her right leg bent at the knee and turned inward so that it seductively covered her treasures, she gave me the come hither with her index finger. \n\nIt took every ounce of restraint that I possessed to not rush over and ravage her. Instead, I crawled up the bed and lay down beside her. \n\nOur lips joined together in passion. Barnes put her hand on my cheek and spoke. \"Make love to me Matt.\" The use of our first names seemed almost taboo. It was only the second time that I recalled her doing so. The importance of the situation must have made her feel that it was necessary. \n\nI kissed my way down her body. Softly nibbling, licking and kissing all of the exposed skin on my way down. Melanie's neck and belly were very erogenous zones. My kisses made her quiver with anticipation. \n\nI continued down her legs, pulling off the red nylon as I went. One at a time, I rolled the fine, silky material into a small donut. When I finished, I lifted Mel's leg and kissed her pedicured feet. \n\nGrabbing her legs, I pulled her into a more laying position. My lips and tongue made contact with Melanie's bellybutton, causing her to moan out loud. The waist band of her panties clung to the stubble of my facial hair. Lower myself down to my stomach, I kissed at her soft treasures through the lace.\n\nUsing my tongue and mouth to savor the exotic flavors of the material and her womanhood was intoxicating. Melanie seemed to be enjoying my actions. \n\nWhen her panties were saturated with my saliva and her juice, it was time to pull them down. Slowly the wet lace released itself from the inner folds of her vagina. \n\nPlaying shy and coy, Melanie closed her legs so that my view to the heaven in front of me was obstructed. Playing along with the moment, I kissed her knees and gently pulled them apart. \n\nEven in the darkness I could see the light reflecting off the glistening wetness of her sex. The scent and taste of her arousal filled me as I sunk my mouth onto her hairless vagina. My earlier work must have had her close, because not long after I started, Melanie finished with a short series of body tremors.\n\nI wanted to continue. In fact, I never wanted to stop, but Mel put her hand on the top of my head and said, \"Tender\".\n\nBiting the inside of her thigh, my lover squealed, flipped over on her stomach and laughed. Her laughs returned to squeals when my teeth clamped softly down onto the perfect cheek of her ass. Using my hands as weapons of massage, I moved them and myself up and over her butt. My hands caressed her sides and up her back, kneading the skin as I went. My only stop was short and sweet. With a quick pinch between the thumb and fore finger, the lacy red brassiere was unclasped. \n\nMelanie shimmied and shook herself free of the material, pulling her arms out as she went. \n\nHer groans and moans caused me to swell. Every inch of her naked back was being rubbed by my warm hands. The release of tension in her shoulders and neck from my massage, was causing her to drift off into a restful sleep.\n\n\"Oh, my god. That feels so good. Never ever stop.\" But stop I did. Melanie made that happen. She rolled over under me. \"Please.\"\n\nI wasn't certain what she had meant by please. Please never stop or please, lets make love. I assumed the later. The feel of entering her was incredible. Mel and I both expelled deep breaths at the same time. Slowly my steel hard shaft sunk deeper and deeper into her.\n\nMelanie pulled my face to hers and kissed at my juice covered lips. I could feel the tight clench of her muscles gripping at my hardness. As my movements began, her legs raised and wrapped around my back.\n\n\"You are the absolute most beautiful woman that I've ever seen in my life.\" Mel tightened her hands on my face and kissed me passionately when she heard my words. \n\nWith our lips locked together, arms entwined, my chest pressed up to her perky breasts and the long gentle thrusts into and onto one another, we were making love. \n\nMelanie grabbed my face, stared deep into my eyes and held on for her life. When her orgasm ripped through her body, it was powerful enough to stop her in her tracks. I couldn't stop. I kept up my pace until it was my turn. My semen flooded into my lover and everything in the world felt correct.\n\n\"Mills.\"\n\n\"Yeah.\"\n\n\"I love you.\"\n\n\"I love you too.\"\n\nThe afterglow of our love making was epic. Mel purred softly and cuddled up to my naked body until sleep gently took us both away.\n\nBarnes didn't have to say anything, I knew that she was anxious about introducing me to her family, and the day was long because of it.\n\n\"Are we taking an UBER both ways or should we drive there and only get one back?\"\n\n\"Your call.\"\n\n\"The reason I'm asking, is should I reserve one and what time are you going to be ready?\"\n\n\"I don't knooooow Mills. We have two hours before we have to be there.\"\n\n\"For dinner. Cocktails start in less than an hour.\" Barnes cocked her head to the side and gave me a look of despair. \n\n\"Just give me a few more minutes and I'll be ready. Promise.\"\n\nTrue to her word, Barnes appeared from the bedroom. Her shear beauty took my breath away. She was wearing a long black, backless dress. It had tiny straps and the low cut allowed a great view of her plentiful cleavage. I couldn't resist giving a low whistle. Mel responded by giving me a small twirl to show off her form. \n\n\"Barnes, you look stunning. I think that I should bring my side arm to keep all the other guys away from you.\"\n\n\"Not so bad yourself Mills. You suit matches my dress pretty well.\" She wasn't wrong. My grey suit, and blue shirt, complimented the black of her dress like it was designed to do so. \n\nThe golf course was nicely appointed, and it was a well put together gala. Many of Melanie's family and friends were in attendance. Her parents greeted us in the foyer.\n\n\"Mom. Dad. I'm sure that you remember Matt.\"\n\n\"Mr. and Mrs. Barnes. Nice to see you again. Looks like a fairly big turn out.\"\n\n\"Sold out for the last seven years in a row.\" Mrs. Barnes seemed to glow at that news.\n\n\"Matt or do you prefer Matthew?\" Mr. Barnes questioned.\n\n\"Matt works just fine sir.\" \n\n\"Jim. I asked around about you Matt. A good friend of the family told me that you were, as he put, \"Tough as nails. Soft as a kitten\", and those were his exact words.\"\n\n\"Well sir. I guess that sounds like a compliment.\"\n\n\"Please call me Jim. Yeah, I'm sure he meant it as such. John Milner, do you know him?\"\n\n\"I do, but only as Brigadier General Milner, not John.\"\n\n\"Well he's Uncle John to the kids. He has always...\"\n\n\"Okay dad. No more shop talk. Come on Mills. You rushed to get me here so that we wouldn't be late for cocktails, so let's get one and I'll introduce you to my sister and her husband.\"\n\nWalking away I heard Eleanor Barnes comment on what a handsome couple we made, and I had to agree. \n\nThe night was fun. Good food, horrible live dance music that was so bad that it was great and lots of people enjoying themselves. Barnes and I took more than a few trips around the dance floor. When the music slowed, she insisted that we continue.\n\nWith her arms draped around my neck, Barnes was unembarrassed to pull me in for a kiss front of her family. I'm not certain that they were watching or even noticed, but she was comfortable doing so anyway. The music faded to silence and Mel led me off the dance floor. Returning to our table, I asked if anyone would like a refill.",
        "Melanie was first to order.\n\n\"Something cold.\"\n\n\"Ice water?\"\n\n\"Something cold, with a kick.\" With a few drink orders memorized, I made my way to the bar.\n\nStanding in line for the drinks I felt a hand touch my shoulder in an un-intrusive way. \"Matt. You and Melanie seem to be enjoying the evening.\" Mel's father stood next to me looking over the same crowd that I was.\n\n\"Yes sir, we are. Your daughter loves to dance. I found that out the other night at O'Malley's.\"\n\n\"She and her sister took more lessons than I care to remember. Let's just say that I sat through more than a few recitals.\" As if on cue, Mel and her older sister Susan, spun one another around the floor. \"She has been a different girl these past few weeks Matt. Any idea as to why that may be?\"\n\n\"I'd like to say that it's me sir, but I believe that it's due to being able to jettison some past history and memories.\"\n\n\"True, but don't sell yourself short son. She glows when she's near you or when she's telling her mother or sister about you.\"\n\n\"In that case, it makes what I'm about to ask you easier. Mr. Barnes, I come from an old fashion family. I'm the youngest of four siblings. All of us in the military in some capacity or another. My mother and father brought us up to respect others and they would be disappointed in me if I didn't show you the same respect that was bestowed on them.\" I had lost him with my rambling. \"Mr. Barnes. Jim. I am requesting your permission to ask Melanie to marry me.\"\n\n\"Matt, you seem to be a fine young man. I haven't heard one bad thing about you, but you two have only been dating for a couple of weeks. You don't even know her, and she doesn't really know you.\" \n\n\"Forgive me for saying so sir, but you're wrong. We've known each other all our lives. We just hadn't met. I can't imagine what my life would be like without her in it and I can honestly say that I love your daughter with all my heart.\"\n\n\"Those are powerful words. Not that you need it, but you have my blessing. If Melanie stays as happy as she has been for the past few weeks, she'll have a great life. But convincing her of that may be a completely different story. Once bitten, twice shy as the old saying goes.\"\n\n\"Understood and thank you so much.\" Jim had a firm handshake and he held it tight to seal the deal.\n\nPassing around the drinks and the shots of Pink Whitney that I had added to the order, I made a toast to Melanie and her family.\n\nThe evening and gala came to an end and everyone said their goodbyes. Jim shook my hand and put his left hand on my shoulder. Eleanor hugged me tight and kissed my cheek. She had tears in her eyes and if I had to bet, I'd have guessed that Jim let my intentions be known to his wife.\n\nTurns out that Susan was pregnant, so she became our ride home by default. The whole ride to my condo, I could feel her eyes on me through the rearview mirror. I could feel that she wanted to say something or at least ask some questions, but she didn't.\n\nIt felt good to be home. \n\n\"You were a pretty big hit with my family Mills.\"\n\n\"I try.\" I couldn't take my eyes off her as she slipped out of her dress. I don't know how it had slipped by me, but she was naked beneath the black fabric.\n\n\"From where I was seated, it didn't look like you had to try all that hard. Seems like you and Jimbo had lots to say to each other.\"\n\n\"Not really. We just know lots of the same people.\"\n\n\"And that's it?\"\n\n\"Pretty much.\"\n\n\"Really, then what's with the \"bromance\" when you two were shaking hands today?\"\n\n\"Bromance? Really? We were just shaking hands.\"\n\n\"Whatever. I've never in my entire life watched my father shake hands using two hands at once. It's just not his style.\" Barnes was in full on cop interrogation mode.\n\n\"Alright. I'll tell you. Your dad isn't really a lawyer. He's a spy. Undercover for the CIA. He's working in conjunction with the Corp and that's how I know him. The double handshake is a secret message. I'd tell you what it means, but his life would be in jeopardy.\"\n\n\"Kiss my ass.\" I spun my head in her direction and started taking off my suit as quickly as possible.\n\n\"Love to.\" Barnes squealed like a teenager and raced into the bathroom, locking the door behind her. \n\nOur love making was, soft slow and deliberate. No foreplay. Mel got on top and lowered herself down onto my waiting shaft. Not once did our lips or groins become detached during the short but fulfilling event.\n\nMelanie came at virtually the same time as I did and collapsed onto my chest. She stayed on me until I soften and slipped out of her overflowing vagina. Only then did she remove herself from my chest.\n\nIn total darkness, the star out over the ocean seemed to be within reach. They were bright and plentiful in the night sky. Barnes and I lay embracing in silence. Me gently tracing patterns on her arm with my fingertips and her mindless twirling the hair on my chest.\n\nAfter minutes of no movement the thought that she had dozed off, entered my mind.\n\n\"Melanie.\"\n\n\"Mmmm.\"\n\n\"I asked him for his blessing.\"\n\nHer voice sounded almost horse when she quietly asked, \"What did he say?\"\n\n\"To be truthful, he said yes, but he thinks that we haven't known each other long enough and that it would take lots of convincing to get you to say yes.\" Seconds turned into minutes and those seemed to drag by before Melanie spoke again.\n\n\"What did you say?\"\n\n\"I told him that I've known and loved you all of my life. I was just waiting to find you and now that I have, I can't imagine my world without you in it.\" Once again, the silence screamed at me. Melanie had resumed twirling my chest hair and it was minutes later when she spoke.\n\n\"Then ask me.\" \n\n\"Melanie, will you please marry me?\" \n\n\"Yes.\" \n\nThere would be no delay in her answer. Our future together was ready to begin immediately."
    ],
    "authorname": "Frankenstein1962",
    "tags": [
        "romance",
        "romantic"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/officer-barnes"
}