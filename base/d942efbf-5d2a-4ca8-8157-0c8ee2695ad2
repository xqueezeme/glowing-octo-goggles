{
    "title": "Halo Two - Five Ch. 02",
    "pages": [
        "My warmest thanks go again to my two friends whose technical advice is always helpful, thank you so much. As always my deepest thanks have to go to SouthPacific for his editing skills and for keeping me honest, many thanks my friend.\n\n*******\n\nFor the next two days my life did indeed split once again into two. During the day my family would be the centre of my life, but occasionally I would see Brooke sunbathing by the pool or taking tea in the hotel. When I put my girls to bed and my parents-in-law came back from a few hours to themselves, either taking in a show or a late candle-lit dinner, my attention would return to Brooke. Amongst the many hours of conversation in what had become OUR room, she admitted that the nightmares were few now.\n\nI also made sure I woke before she did for our morning run, but in retaliation she would still ask the gym staff if the sauna was closed. They smiled, held out towels and nodded as I was dragged back into it. She would quickly strip and wait for me to catch up. Brooke always took the top benches; she said it was the one time she got to look down at me.\n\nHer mother rang me mid-day of the third day and told me that what I needed was waiting for me with the hotel manager, and that he would make all the other arrangements. It took twenty minutes with him to get everything else sorted, and I quickly figured out why he managed this hotel. He was definitely one of those types that, if HE couldn't get something done, he sure knew someone who could.\n\nBrooke knew the moment I walked into our room. Her face gave her away, and she was afraid.\n\n\"We are going to dinner.\"\n\n\"I know. The manager just called to say all your guests have arrived.\"\n\nIt took her thirty minutes to get ready. I held her arm all the way down to the ground floor. Part of me felt I was physically supporting her the closer we got to the private room we had for the evening. When we entered, all sixteen people stood, and I walked Brooke around the table introducing our guests and their wives.\n\n\"Lieutenant Carmichael: two tours of Vietnam.\"\n\n\"Master Sergeant Martinez: again, two tours of Vietnam.\"\n\n\"Sergeant Young: Desert Storm.\"\n\n\"Corporal Nelson: a tour of Afghanistan.\"\n\nThe list and introduction of each man and wife went on around the table. Brooke, for her part, would shake hands with each man but always hugged the wife and thanked each of them for coming. They saw through Brooke straight away; they each knew she was military. We ate and talked; most recounted times that they dealt with their bouts of survivor's guilt. Coffee was served after dinner; not one person in that room asked for alcohol that evening. \n\nBoxes of tissues appeared from nowhere and were used in abundance. By the third hour, Brooke had recounted that day to everyone that was sitting around her. Those that were further away soon gravitated closer to hear her story. The wives held her up through the hardest parts of her conversation. Each of the retired servicemen there sympathized with her. Just before midnight the hotel manager appeared and started handing out room keys to each of the wives and telling them that they and their husbands were guests of the owner of the hotel tonight.\n\nBrooke pulled her phone out and the wives soon followed. I took a step back and smiled when they all swapped numbers. Brooke hugged, kissed and thanked everyone there as she wished them goodnight. We made it to the elevator before I realized she had her hand in mine. When I looked down she did as well, then curled her arm around mine and held on tighter.\n\nI got the door open before she said anything. Her shoes went somewhere under the couch before she spoke.\n\n\"Thank you for tonight. I didn't see what you were doing back at the ranch house, and I will forever be ashamed of myself for that, but I realized I needed tonight and I've made so many friends as a result of it.\" \n\nA part of me needed to find out if this exercise needed repeating.\n\n\"What else did you learn?\"\n\nBrooke went all thoughtful. It was clear she was recalling many moments from this evening.\n\n\"That I'm not alone. There are too many of us out there with the same feelings, and it's stupid to keep it all locked up because it will eventually eat its own way out.\"\n\nI nodded my head, thinking that at least she had the basics now. I still reminded her that she needed therapy to see her through, but the mainstay would be the people around her and her friends in her unit. Most had been there and done that, so could relate to what Brooke was saying. The more she talked about it the less stress she would put herself under.\n\nHer dress hit the floor, and her bra followed before she spoke again.\n\n\"Can I ask you a question now?\"\n\nI was folding my trousers when she said that and I instantly looked at her. I tried reading her face, but all I could see was resignation. She wanted me to answer before whatever emotion she was hiding from me could escape, so I shrugged my shoulders and told her to ask away. Her panties got pulled down and joined her dress in the puddle of clothing on the floor and, when she stood to look at me, all she had on were a set of earrings.\n\n\"You've had a naked, healthy woman in front of you for four days now, and not once have you had a hard-on. So what's wrong with this picture? If you even try to tell me you're a closet gay I may have to stab you in your sleep.\"\n\nThe worrying thing about her statement was that her face hardened towards the end, meaning she actually meant every word of it. It was while I was thinking how best to answer her that I suddenly noticed her eyes well up. When I went to reach out for her she turned towards the bathroom.\n\n\"I need a shower.\" \n\nMy hand went out again and grabbed the top part of her arm, my military instincts telling my other hand to grab her wrist as she spun round to slap me. She was just as quick and, with a twist, had released her arm from my grip. Her hand bunched into a fist so I quickly took a step inside and, not being inclined to act like a gentleman, placed my hand between her legs and lifted.\n\nShe went in a wide arc over me and landed flat on her back on the bed. I had sat across her hips before she had realized she wasn't standing anymore. Catching her hand before it connected with me proved to be more difficult but, with both arms now pinned, I glared at her.\n\n\"Now lay still and shut the fuck up. You don't get to lay that shit on me and then walk off and stew in the bathroom.\"\n\nIn fact, and to my surprise, she did just the opposite. She twisted and screamed, then broke my hold with one hand and wrapped it around my neck. I was so shocked that for a second her other hand managed to break free, and that also ended up around my neck. She was still fighting me and, since I don't multi-task all that well, it took me some moments to understand what she was yelling.\n\nOver and over again she screamed that I was just as broken and she was, and it wasn't fair. My heart truly went out to her, and I did something that came instinctively. I hugged her as those tears and fears came spilling out.\n\nThe fight went out of her as the energy from her frustration died away. She sobbed into my chest as I held her tight to me. My own thoughts were even more jumbled now. My overwhelming thought had been that I was sure I couldn't help her and, even though I told her mother that same thing, they still both seemed to think I could. Now I was starting to wonder if they might be right after all. Thinking it best not to let her out of my sight tonight, I let her go and pulled her bed covers off, slid her between the sheets and followed her into the bed. I'm not sure where her mind was, but my best guess was that it wasn't here.\n\nI moved in behind her, and she turned around to face me and then curled slightly into me so that her forehead now rested on my chest and my hand rested on her hip. She was still in the same position when she eventually fell asleep. As I listened to her breathing, my top priority for the morning became the need to phone Brooke's mother and get her back here and Brooke back to the ranch-house. \n\n*******\n\nI came to with a start, my mind struggling to figure out whether I was dreaming or awake. It's unusual for me to sleep on my back, but that's how I woke. The rest became obvious when I spotted the bulge in the covers and felt my morning wood was in a warm, wet place. Pulling the covers up found a set of eyes looking back at me. Brooke's mouth left my erection with a plop and the covers slid backwards as she knelt up, her hand wrapped around my hardness.\n\n\"Morning! Did you know that if you water the plants they grow?\"\n\nShe straddled my legs and almost dared me to answer her.\n\n\"You're in my bed and, since I have hold of this and possession is also nine-tenths of the law, this belongs to me! I plan on hiding it so you never get to find it again.\"\n\nBefore I could answer she sank down on me, wincing a couple of times on the way down. I'm sure she would have taken longer, but wanted me buried in her before I could talk her out of it.\n\n\"You know this is rape? I could get you arrested for this.\"\n\nMy body simply laughed at this, with my hips having a mind of their own and pushing upwards to bury more of me into her. She smiled; a very devious-looking smile at that.\n\n\"Go ahead, buster! I bet mom knows the judge for the trial before the ink is dry on the complaint. Now take it like a man, and shush while I have a little fun with this.\"\n\nIt was then she clamped her vaginal muscles down, giving my cock the most sensational feeling it had had in some time. She then lifted her body about an inch and dropped right back down again, the most remarkable smile on her lips and one heck of a dangerous look in her eyes to match the set. \n\n\"Oh, feel free to join in at any time.\"\n\nMy dick was buried in her pussy as she continued to do that thing with her muscles and my cock was wanting way more of it, even though my mind was reprimanding it at the same time. My hands took part in this treacherous act and moved to her hips as my body once again pushed upwards, although I doubted there was any more of me left outside that warm velvet place of hers.\n\nBrooke leaned forward and rested her hands on my chest. Her eyes held that dilated look that were reinforced when her cheeks reddened and that same shade inched down her neck.\n\n\"I've wanted this from the day I sat on that bench at the park to talk to you. Even being naked around you, and coming oh so close to throwing myself at you. Well Rick, this girl is going to take what she wants, and expects you to join in at some point and, when you do...\" She interrupted herself briefly to lean down and kiss the tip of my nose, her smile brightening up the whole room. \"...we are going to have SO much fun.\"\n\nIt was as she was about to say something else that she paused to look down at my chest, and her fingers moved to make her hand bigger.\n\n\"I can feel your heart, Rick; it's beating ever so fast.\"\n\nHer muscles clamped again, almost like she was trying to draw more of me into her.\n\n\"I've found a home for this, honey.\"\n\nHer chest now rested on mine, squashing her breasts tightly to me.\n\n\"Short of tying you to the bed and taking it, I need you to love me. Just pretend if you think I'm that repulsive, but for this morning can you PLEASE just love me.\" \n\nHer eyes filled and then something crossed her eyes as she lifted herself back off me. A tear was given permission from gravity, and dropped on me as she looked intently at my chest. My hands came to the sides of her head and gently held her. My God, just how little did this gorgeous woman think of herself?\n\nMy legs moved between hers and parted; hers had no option but to follow, and her legs were now as far apart as I could get them in the position I was in right now. I was in her warm place and, for the first time in some time, it actually felt like home. A twinge of sadness came to me and Brooke grabbed my head.\n\n\"No! Stay with me here. I'm sorry, Rick, honest I am, but you're in me. YOU are in ME; do you hear me?\"\n\nThe smile came back to her face and my hands rested on her hips once again. She did a quick check before her eyes settled on mine. I was in her, and it truly did feel like home as her muscles gripped me. She was real tight when she did that. She rested her elbows on my chest, and her muscles relaxed again as her hips moved to her own rhythm.\n\n\"Good. Now, where was I? Oh, yes.\"\n\nHer hips stopped moving and she used her weight to force more of herself onto me; or at least she tried. I held her hips tighter and pushed upwards and, for a second, her eyes widened and her mouth formed an O.\n\nAs for me, it really didn't look like I was putting up any real struggle! Her body heat, both around my cock and with her lying back down on my chest, kept sending me warm and contented signals, and I hadn't had those feelings for some time. My mind informed me of the last time just as sanity refused to listen. \n\nI was loving this moment and, although still afraid to vocalize the words just yet, I admitted to myself that I loved her. It actually felt odd forming those thoughts, and especially that it no longer felt like a betrayal of Abigail that I felt love for another woman.\n\nMy cock seemed to grow inside her as that thought fought against everything to become vocal. \n\nBrooke's eyes smiled back at me. \"Yes!\" She grinned as though at that moment she had read my mind, and that one word gave meaning to more than she dare say to me. To save us both we instinctively kissed, not only to seal that one word to our hearts but also to keep from saying any more. At this moment it was actions, not words, which mattered.\n\nWhat started out with me helping her with her PTSD had somehow morphed into this - but what WAS this? There were two beds in this room, and yet we gravitated towards sharing one. I was now buried balls deep into this woman, and my cock showed no sign of ever wanting to leave. Although we hadn't got as far as putting it all into words, were we now a couple? We did need to sit and have a real conversation about all this.\n\nMy cock twitched again inside this furnace of a woman, and the man in me realized that conversation was going to have to wait. My body once again took over, my hips forcing more of me into her, with that tingling feeling reminding me that, not only was I human, but I was coming out of a dry spell. A moan escaped Brooke, her body betraying her into showing her she just as human as I was.\n\nShe clenched her teeth, desperate to hold her own orgasm back, even when my hands went to the top of her hips and forced her body down on me yet again as my dick dived as deeply into her as our bodies would allow. Again my cock twitched inside her as her body exploded, her pussy soaking my legs. Brooke almost slumped forward, and the sound of her panting came loud to my ear as I erupted into her. Brooke's body relaxed, and the sigh that reached my ear sounded almost like disappointment that she hadn't been quite able to hold off her own climax so that I could have mine first.\n\nAs her body calmed my finger tips traveled up her spine, a slow groan emanating from close to my ear. Just then she also gave voice to her groan and I froze. Her arms moved and then her head came away so that she could look directly at me. A finger pressed gently to my lips, followed by a quiet shushing sound.\n\n\"I said I love you. I know you heard me and I don't care; it wasn't one of life's unguarded moments, Rick. I really do love you.\"\n\nHer finger was replaced by her lips and my arms instinctively held her tight to me.\n\n\"I can wait Rick; you'll get there. I know you will.\"\n\nWith nothing more than another quick peck on the lips she went to move, and I relaxed my arms to allow her to get up and go to the bathroom. She was choosing when we had that conversation, and to me it looked like it was going to be in the cold light of day. Brooke came back to bed and slid in close to me before her hand went searching for my hand, found it, and then placed it on her hip.\n\n\"Night, Rick.\"\n\n\"Goodnight, Brooke.\"\n\nHer ass wriggled in silent confirmation that she had heard me. Soon after that her breathing became even, and sleep took me as well.\n\nI woke still in the same position, other than my hand now having hold of her breast rather than her hip. My memories of the previous evening came back to me with a rush, the groan as she turned towards me still finding my hand holding onto her breast. Brooke looked down and her smile met mine as her head came back up to look at me directly.\n\n\"Remember that 'possession is nine-tenths of the law' thing?\" \n\nMy smile got wider as she tilted her head towards my hand.\n\n\"Well, you've got your hands on it, mister. So what you gonna do about it?\"\n\nShe really did have great tits and, just to prove it, I gave it a squeeze. I even reinforced that fact when my lips sought out the nipple on the other one, sucked it deep into my mouth, and ever so gently nibbled on that soft flesh. Brooke's hand rested on the back of my head and pressed my face an inch or so into her chest. It didn't take long for a gasp to escape her lips as she pushed her lower body even closer to mine, if that was at all possible.\n\nJust as suddenly her hand came away from my head and she pushed me away.\n\n\"Nope; that's not working. Let's try something else.\"\n\nHer body twisted, causing me to lay flat on my back. Her lips locked on mine, and our kiss became very passionate as her leg went over my body. My cock was just as eager, and nestled between her ass cheeks until she sat up, placed her hand behind her and latched onto it. I watched in fascination as her eyes widened before she lifted her body, adjusted me between her legs and lowered herself again, grinning as she sank down and made herself comfortable.\n\nBrooke seemed to pause for a moment, and I took the opportunity to look at her as the early morning light seeped through the half-open curtains. She just looked so damn gorgeous like that. My thumb pressed against her hood before the rest of my hand joined in, moving up through her pubic hair and on over her navel. A groan escaped her as she rocked against me.\n\nFor the first time since Abigail's death I was enjoying myself, and my playground was this stunningly beautiful woman above me. Her vaginal walls clamped down on me and this time we both let out a sigh, the smile that followed allowing me to think of something else other than \"when two halves become one\" - and that was proving to be real on more and more levels. \n\nBrooke lifted, and then brought that body of hers down on me again. My hands sought out her tits and wouldn't let go as she bounced again and again, trying once again to force more of me into her. We paused briefly, resting our bodies for just a moment before continuing again. Brooke's brow creased when my thumbs started to draw circles around her nipples, and her body was once again under assault from so many different sensations.\n\nThat furnace known as her pussy gave her away as well and, as the temperature went to white-hot, her fingers suddenly dug into the skin of my chest as another orgasm ripped through her body. Wanting to make it last longer, I twisted both nipples, causing her vaginal walls to clamp down on me so hard I thought I was going to lose it there and then. It took her a moment to focus, and the smile just got bigger.\n\n\"Fuck! Even the quickies are fun.\"\n\nShe was still giggling as I rolled her onto her back, still firmly implanted in paradise. One of her legs was planted squarely between mine, while I could feel the heel of her other foot moving up and down between my ass cheeks. Her hand gently rested on the side of my face, her smile reinforcing the warmth in her eyes.\n\n\"Do it, Rick! I won't break; I promise I won't.\"",
        "My chest came away from her body as her hand went to join the other one resting close to my hip. It was that one final nod that set us both off. As I pounded into her she would grunt when our bodies connected. It was a hard fuck, but not violent: we had both seen enough violence in our lives. When her head touched the board I would stop and pull her down the bed again. Brooke would laugh all the way back to the middle of the bed before we simply started again.\n\nSomething inside her sensed that I was close. Her arms came up and held onto me tightly, pulling me down with her onto the bed as my release poured into her, sharing her own climax as our juices mixed within her tunnel while they waited for me to wilt and take the opportunity to escape. \n\n*******\n\nI was resting on a lounger by the pool talking to my father-in-law when Tessa climbed on my lap, soaking wet. I wrapped her in a towel, and even went to hug her before she put her hands out to stop me. Even my father-in-law stopped talking when she did that. His brow creased, as did mine. Neither of us had seen my daughter refuse a hug before.\n\n\"We want you to talk to her, daddy.\"\n\nI got a shrug of the shoulders from the man sitting next to me. Even my mother-in-law, watching everything, said nothing.\n\n\"Who, baby?\" \n\nTessa rolled her eyes the way her mother used to when she thought I was being stupid. This time she climbed off me and dropped the towel as we all watched her walk to the other side of the pool and stop in front of Brooke, who was, up until that moment, reading from her e-book. She noticed Tessa standing in front of her and dropped her e-book. Tessa picked it up and handed it back to Brooke, and then sat on the lounger talking to her.\n\nAfter what must have been a good ten minutes she got up and stood to one side. Brooke eventually got up and picked up her things while my daughter slid her hand into Brooke's like it was a natural thing to do. Both girls walked back around the pool to us. I was even trying to suppress a smile when my own six-year-old tried the hand on hips gesture.\n\n\"This is the lady in the big car and the pretty dress, daddy. The one you talked to outside McDonald's when I had my party and you said she was lost.\"\n\nAll Brooke did was shrug her shoulders. There seemed to be a lot of that going around. My father-in-law moved his stuff to the vacant lounger on the other side of his wife, and Brooke put hers on the lounger next to mine. Tessa simply went back to playing with her sister.\n\nAfter I watched my daughter for a moment longer I turned to everyone and said, \"Well I didn't see that one coming.\"\n\nBrooke was still watching the children splashing and playing in the children's pool, her initial confusion overcome by our smiles.\n\n\"Are you sure she's only six?\"\n\nAll three of us nodded and laughed, and that universal shrug thing happened again. I made the introductions and gave a very brief history of how I knew Brooke. My father-in-law and his wife knew my work to some extent, and that was because my late wife told them. When she died my father-in-law took me for a walk and told me he and his wife knew, and had supported my choice.\n\nWhen I looked closely at him he gave me an army number, smiled, and then told me he was one of those who did National Service. It was only with their consent that I went back to the same work after my wife's death. The law got involved as well, and I made sure that, if anything happened to me, my two girls would be taken care of. This man standing in front of me, along with his wife, were ready to deal with that if need be.\n\nHe looked at Brooke and it took him all of ten seconds to realize who she really was. The knowing smile came next. \"It's a pleasure to finally meet you, Kitten.\" \n\nHis wife did a double take between Brooke and her husband, and joined in the smile he had. Brooke went beet red and stammered while trying for something to say. My mother-in-law cut right through her hesitancy and leaned over and kissed her cheek. I thought for a moment that Max would follow his wife's gesture, but it was handshakes that went around and then we settled down to watching the children and trying to figure out just how the heck Tessa figured it out.\n\nTowards the end of the day, and after the second plea for a few more minutes in the pool, both the girls got out and Tessa asked Brooke to join them in the pool. That got them a smile from Brooke, and I saw what I guessed was a third plea for yet another few minutes in the pool. I was now figuring out how smart these two were. We finally headed into the hotel, and got as far as the elevators before Tessa did that thing again.\n\n\"Daddy! Can Brooke join us for dinner?\"\n\nMax and Beth just took a collective step back and left me to it. I of course mentally thanked them, and took a moment to try to figure this out. It seemed that moment was too long, because Tessa turned to Brooke and asked her herself. Brooke hesitated just briefly, and you could see the plea in both the little girls' eyes before she melted and agreed to meet them for dinner. Ever seen two little girls do a happy dance? It's the damndest, cutest thing you will ever see! \n\nAs for me, I was once again trying to figure out just how smart this six-year-old really was. By the time we had got to their floor we had a time and location for meeting my daughters and their grandparents. The elevator door had not quite closed when we both heard my girls giggling. Brooke looked at me, went red-faced, and then burst out laughing. She was still trying to hold it together when we got to our room. The phone was already ringing as we entered. \n\n\"You two best get down here! I'm NOT answering the question Tessa's just asked us.\"\n\nBefore I could answer I heard a rustle and then my little girl on the phone.\n\n\"Daddy. Are you and Brooke sharing a room like we are with nanny and granddad?\"\n\nIt was a question I wasn't ready for. From my in-laws? Maybe. But from a six-year-old? Brooke must have heard the conversation because she took the phone from my grasp and shooed me away. Like hell was I going anywhere, but Brooke placed her hand over the phone and glared at me. I was thankful she wasn't within reach of any knives at that point. Brooke turned and held the phone back up to her ear while I got out of my clothes. She was still talking when I came out of the shower.\n\nShe had a smile on her face, so the dread I was feeling lessened slightly: but only just.\n\n\"I'm taking Beth and the two girls shopping tomorrow. We're doing the girlie bonding thing.\" She noticed my worry increase and said, \"You and Max can do a round of golf or sit by the pool and openly drool at all the women.\"\n\nWith that she stood and walked towards the shower. She was naked before she even got to the door. I swear there is nothing as erotic as watching a woman bend over to pick up something when she's naked. She even caught me watching, and smiled as she did. I heard the shower running seconds later. \n\n*******\n\nI watched from the safety of the bed as Brooke looked at every dress she had bought, trying to decide what to wear for dinner. She had met both my girls and the in-laws in a swimming costume, yet now she was worrying about what to wear for dinner?\n\nWe met the folks just outside the restaurant. My girls cut through any hesitancy Brooke was feeling when they took a hand each and lead the way in. All I did was look at Max and Beth, smiling along with them as we followed all three girls in. Between sitting, ordering our meals and eating, my two girls gave Brooke an almost blow by blow look into their lives, starting with school and the teachers they liked. Some of their friends got a mention, as did some of the places they had visited, both here and at home. Then Tessa decided it was time for a return on their investment.\n\n\"Daddy works a lot, and he's gone for a long time sometimes. Do you work, Brooke?\"\n\nI'm almost sure she was expecting this. \"I'm a medic in the army.\"\n\nTessa's eyes went wide. \"You're a doctor?\"\n\nBrooke put her fork down and placed her hand on Tessa's arm, trying to slow down the imagination of a six-year-old.\n\n\"No, honey. I'm a bit like a mix between a nurse and a doctor.\"\n\nI'm sure Tessa grasped her meaning because the conversation went all over the place from then on, starting with where she went to school and all the way to if she ever had a pet. It seems we all learned about Brooke that evening, and her interrogator was a six-year-old. Of course my youngest chipped in too, from the wonders of what ice-cream she liked to asking if she had ever seen a rainbow.\n\nWe took coffees and juices out by reception and, when Brooke sat, her two little bodyguards followed, leaving the rest of us to find our own seating arrangements. Brooke seemed to be taking all this in her stride, and answered any and all questions far better than I probably could have. It was about half an hour later when I also found myself redundant, and a little nonplussed about it, when Tessa asked Brooke to come to their room and read to them.\n\nShe noticed my discomfort and tried so hard to back out of the invitation; right up until my mother-in-law stood and took her hand, telling everyone that was a great idea. The girls shrieked with excitement, causing all those around us to look over. Tessa went to lead the way, before she suddenly remembered we were still here and rushed over, sat on my lap, and kissed me goodnight.\n\n\"She's our friend now, daddy.\" The little minx even stuck me with one of my own sayings when both sisters argued over something. \"You've got to learn to share.\"\n\nTessa jumped off, leaving me a clear view of her sister smiling and nodding her head at the same time before she too jumped on my lap and kissed me goodnight, adding her ten cents' worth as well.\n\n\"Share, daddy.\"\n\nMax and I watched them right up until when the doors closed and the numbers above the elevator started to rise. He then waved a waiter over, and ordered us a stiff drink each.\n\n\"They're not stupid, Rick. We've told you time and time again, and now you got to see it first-hand. Abigail is dead, and they both mourned her passing, but they are ready to move on. The timing of that decision just seemed right now that Brooke is on the scene.\" \n\nSitting with my father-in-law and being forced to face my own feelings was uncomfortable at best.\n\n\"She looks on herself as damaged goods, Max. I thought I was just helping her out.\" The pause as I re-evaluated those very thoughts caused him to look at me more closely before he spoke.\n\n\"When Abby died we all felt her loss, but you felt it in a different way. You withdrew into yourself, and then we heard what you did to that man who killed her. It didn't bring her back, did it, Rick?\"\n\nI watched as he took another sip of his drink before placing the now empty glass on the table. The waiter approached, but my father-in-law waved him away.\n\n\"You had those two little girls feeling so much pain and loss, yet your way of dealing with it was to rejoin the unit and deal out your own pain.\"\n\nWe had talked many times, my father-in-law and I, and yet this conversation seemed to have an urgency about it. \n\n\"You've stopped listening, Rick. Abigail talked to me rather than her mother about you, because of your work with the unit.\"\n\nIt isn't all that often that the people I work for get their code name spoken about out loud. I don't think I had even given that name to Abigail. Perhaps it was best I took it one step at a time, since neither of us had delved this deep into this conversation since the death of my wife.\n\n\"He knew he was lucky just getting a slap. The police got involved because his girlfriend saw me do it. When he knew I wasn't going to let this go, he pleaded guilty to stop me killing him. The unit reprimanded me and made my charge disappear, not that I could have given a shit by then, of course.\"\n\nAll he did was stare at me. I had owned up to something that only my heart knew, and kept its secret. Max's next words halted my mind from slipping into darker thoughts.\n\n\"I was in the Suez crisis, Rick, and I've seen men like you and where they go from here. Let that girl heal you as much as you heal her. Your own two girls are ready for another mother now. Not one to replace Abigail, but one to help them in the next part of their life. That would be your settling down and creating the family they both crave. They need YOU for that - not their grandparents.\" \n\nHe smiled, but his eyes told me he meant every word of it.\n\n\"That's a long way off yet.\"\n\nThis time we both stood and headed for the elevator.\n\n\"Those two children can wait if need be, Rick. They have already shown you that they approve of Brooke.\"\n\n*******\n\nIt was an hour before I got Brooke back from the girls. She came into our room with a smile that made her whole face glow. That so-called spring in your step seemed to apply to her as well, as she moved around the room taking her clothes off and sitting to remove her make-up. All the time she just talked about bedtime stories and the girls; thank goodness my in-laws got included.\n\n\"I stole your daughters! I'm sorry, but they asked, and I couldn't say no to those two munchkins.\"\n\nThe worry passed quickly from her face when I smiled. \"You only borrowed them; they're still mine.\"\n\nBrooke went ever so slightly red just then.\n\n\"Well, you won't have them tomorrow night! Apparently I tell stories better than daddy, so I have an appointment same time tomorrow.\"\n\nA naked Brooke walked towards me and my body reacted the same way as it always did around her just lately. She nodded down at my erection with a sly smile.\n\n\"I see a part of you has forgiven me! I will work on the rest of you tonight.\"\n\nShe was already in the process of running at the bed; her jump would have made a parachutist proud. She seemed to bounce once before she straddled my stomach, held my hands in hers, and looked down at me.\n\n\"Rick. I'm in love with you. I love your two girls, and your in-laws have welcomed me with open arms. Please tell me if I'm going too fast and I will back off: I promise I will.\" She had that pained expression I had seen a couple of times on her, and was clearly thinking about something. \"I can't lie to you - it will hurt if you do want me to back off, but you're important to me and I'm not going to fuck this up.\"\n\nI flipped her over, and she was now on her back with her legs wrapped around me.\n\n\"Oh, goody! Talking of fucking has got you worked up, has it?\" \n\n*******\n\nShe thought I was asleep. She had indeed fucked me to the point of exhaustion so that I dozed off as soon as she switched out the lights. In that half sleep I felt her move and thought she was just turning over, but her movement continued to ease backwards and the covers over both of us changed shape. The clock said 04:20; when I opened an eye and looked at her, thinking she was going to the bathroom, she was standing by the window, the stars still a beauty to behold in the night sky. \n\nIt was the sob that made me open the other eye. Brooke's shoulders moved and she stifled a cry as she looked up at the stars. \"Please, God, let them like me. I love him, and I want so much to love them if they will only let me.\" \n\nShe pulled the curtains closed and sighed before heading to the bathroom. I stayed awake, listening as she relieved herself and did her bathroom rituals before returning to bed, her now cool body once again connecting with mine. It still took a few moments before her breathing became calmer and sleep overtook her.\n\n*******\n\nIt was the frantic banging on the door that instantly woke me. My first thought was that there was a fire. Brooke was a few seconds behind me, and by that time I was in a robe and opening the door. I was eye level with Beth as two little people rushed into the room.\n\n\"See, she IS here, and she's sleeping with daddy - just like mummy used to.\" \n\nThe patter of little feet rushed across the room as Brooke grabbed a handful of bed sheet to protect her modesty. \n\nThe smirk from my mother-in-law said it all, but she just had to push it a little harder. \"This is your early morning wake-up call.\" \n\nWith that she turned and headed down the hall, telling me that they would see us at breakfast.\n\n\"Daddy! Why doesn't Brooke have pajamas on?\"\n\nI closed the door and said, \"That's because she was getting changed when you two knocked on the door, honey.\"\n\n\"Oh.\"\n\nWith a sheet around her body and holding on tightly in one hand, she made a swerve motion with the other hand as she grabbed some clothes and dashed into the bathroom while I kept the girls amused with the view from our side of the hotel. With Brooke ready I grabbed some clothes and headed for the bathroom.\n\nWe met the in-laws downstairs. They were still smiling when we entered the restaurant. I walked in beside Max while his wife joined the girls.\n\n\"You do know that was a low blow.\"\n\n\"Well, they had us up at the crack of dawn asking if it was time to see Brooke yet, so my wife thought it would be a good idea to do just that.\"\n\nAll I did was grunt. The words I really wanted to use may have upset him.\n\n\"Rick, both the girls look on Brooke as daddy's new girlfriend. At least give them this shopping trip and decide from then on.\"\n\n\"So the fact that we will be by the pool and watching bikinis for hours on end, waiting for them to return, has nothing to do with it?\"\n\nHe laughed so loudly that all the girls stopped and turned to see what the joke was. He waved them on to our table and used those few seconds to calm himself down.\n\n\"Young man,\" he said, faking a shocked expression, \"I don't know what you mean!\"\n\n\"Of course not,\" I replied with a grin as we joined the others.\n\n*******\n\nI looked at my watch, hearing Max sigh as I did. \n\n\"Please take it off and stuff it in your pocket.\"\n\nMax was pissed off. \"It's three o'clock! They've been gone for four hours. A bunch of women shopping for four hours is nothing new, and you looking at that damned watch every fifteen minutes isn't going to bring them back any earlier.\"\n\n\"It might.\" \n\nI knew it was a weak answer but I simply couldn't stop, a part of me also wanting right now to be a fly on the wall next to them so that I knew what they were up to.\n\nMax was just about to counter my pathetic excuse for an answer when something caught his eye. The rest of the people around the pool must have noticed about then as well because the general noise close to us decreased considerably.\n\n\"Good Lord, PLEASE don't let my wife catch me staring at HER for the rest of the afternoon.\"\n\nShe walked with the confidence of her years, and I was right about her tits as well, even in the modest swimsuit she was wearing. A hotel towel over her arm, and a book in her hand, although I could have bet my mortgage on her not even getting the chance to open that book any time this afternoon. Max sat up a little straighter when she stopped in front of me and smiled.\n\n\"Good afternoon, Rick! May I sit down?\"\n\nI had to bury my first instinct and sit her next to Max. Hell, I don't even think he could feel the drool leaving his mouth. As I stood, she held out her towel for me, and I placed it on the lounger next to mine while Max did his best to regroup. The waiter was there before her feet had left the poolside and rested on the lounger.\n\n\"The usual please, Benito, and the same again for these two gentlemen.\"\n\nThe man blushed slightly and nodded before walking away with his head held high and his chest out, proud as anything that this woman knew his name.\n\n\"Stop drooling or I'm telling your wife.\"\n\nMax humphed and got flustered. \n\n\"I'll have you know I was doing no such thing.\" \n\nShe smiled and continued to hide behind her sunglasses. Max stopped talking when one slender leg graciously slid over the other as she crossed her legs. Boy, did he have it bad.",
        "\"Would you like me to introduce you, or have you figured it out yet?\"\n\nI had wondered if his eyes had risen as far as her head of course, so I did the introductions anyway.\n\n\"Mrs. Constance Armstrong, I would like to introduce you to my father-in-law, Max Harper.\"\n\nWhen the lights still didn't look like turning on I leant over and whispered in his ear. \n\n\"Brooke's mother.\"\n\nMax recovered well. He took her offered hand, placed it to his lips and kissed the back of it. I rolled my eyes, and we then heard \"Mother?\"\n\nShe stood, and mother and daughter hugged at the foot of the lounger while Beth glared at her husband. Constance then knelt down, removing her sunglasses as she did so. She was eye level with my daughters and Brooke introduced them to each other. I thought the removal of my father-in-law's testicles was going to wait until they got back to their room, but Constance seemed to smooth the way by saying he was a perfect gentleman. \n\nBeth still wasn't letting him off completely, and told him he could help with the bags. I couldn't see how, though, judging by the three members of the hotel staff with handfuls of bags from shops with French and Italian names. \n\nWe watched from our loungers as the procession headed indoors and the noise level around the pool increased once again.\n\n\"So my tits are bigger than my daughter's?\" \n\nI do hate it when women share stuff.\n\n\"Are you going to deny it?\"\n\n\"For now perhaps they are. Get her pregnant and they won't be.\"\n\nNot a chance was I going down that road.\n\n\"How was London?\"\n\n\"It was fantastic; we got so much done. My husband is still there, of course, and will be for another few days, so I'm at a loose end and thought I would join you all here.\"\n\nThe waiter brought a tray full of drinks with him, so I assumed Brooke got to him at the bar on the way up to the rooms. Constance smiled, thanked him and turned to me as he took a step back and left.\n\n\"Don't go thinking all conspiracy theory on me, Rick; nothing is planned, either in front of you or behind your back. She wouldn't dare, and I'm not stupid enough to try; the fallout from all sides would be felt for some time.\"\n\n\"But you would, of course, facilitate anything that's asked, though.\"\n\nShe sipped her drink and put it down, smiling. \"In a heartbeat, dear boy.\" \n\nTessa came rushing out of the hotel, her sister in hot pursuit. She stopped long enough to wait for her sister before both sat on Constance's lounger. Constance adjusted her position by placing her legs under her, not only to give the two youngsters more room, but to sit up as well. Both waited for her to place her sunglasses next to her drink.\n\n\"Brooke says you live on top of the hotel?\"\n\nShe nodded her head and said, \"I live in many places. We have a ranch with horses, and yes, we even have a penthouse suite at this hotel because we like it here.\"\n\nHappy with her answer, the girls climbed off and dashed away in the direction of the children's pool, with us adults calling after them not to run too close to the adult's pool. When satisfied with their safety, the rest of us adults then dealt with the introductions. Max got his out of the way first, then went and sat closer to the children's pool, ostensibly to keep an eye on the girls, but no doubt hearing sounds of knives being sharpened to be used at a later date.\n\nConstance watched for a while, then turned to Beth saying, \"He really was a dear, you know.\"\n\nBeth smiled and nodded.\n\n\"I know, but from the hotel door to your lounger his eyes never left your chest. He's going to have to remember that he's going to bed with my chest, not yours.\"\n\nConstance took another look at Max and then back to my mother-in-law, a real wicked smile on her face.\n\n\"I happen to know the owner of this hotel. Do you think we should all go topless for the rest of the afternoon?\"\n\nI got up and joined Max while those three women conspired in ways to drive my poor father-in-law nuts. At the end of the day we did manage to get the children out of the pool with only three pleas for a few minutes more and, of course, a promise from Constance to join us for dinner.\n\nMy mother-in-law and Constance seemed to be joined at the hip for the remaining two days of our stay, and I was even allowed to babysit my own children while they all took in a show at another of the hotels down the road.\n\n*******\n\nAlthough we all met at the airport, it was in fact a parting of the ways, for a while at least. Tessa had school on the Monday, and her sister was due back at kindergarten, and my in-laws wanted to give them the full weekend to get over jet lag and rest up. Constance was in touch almost hourly with her husband, and planned to meet him in Washington on his return while Brooke and I went back to the ranch.\n\nSo it was hugs and a few tears and cast-iron promises made to my two girls that Brooke would come and visit real soon. I must admit I choked up a bit as well but, like all things, I had taken on a job and I had to see it through. I did still get the impression that I wasn't always the one steering this ship all the time, but I had to admit that it made for a fun ride. \n\nThe most important thing, though, was that Brooke, after waking a couple of times in the first few nights shaking, crying, and drenched in sweat, now seemed to be sleeping soundly without interruptions. She might murmur things in her sleep but, tucked into my arms, the nightmares about the wall of bodies seemed to have died away, or at least dropped to a level where they weren't vivid enough to break her slumber.\n\nWhether or not this was because her subconscious knew that she could come to no harm in the arms of her lover, or that her own strength had driven away the bad dreams, was something that only time would tell.\n\n*******\n\nAs the limo carried us up the drive one car stood out. Brooke took one look and groaned before the privacy divider was dropped.\n\n\"Ben! How long has he been here, and why was he even allowed on the grounds?\"\n\nThe driver must have been expecting this because he slowed slightly as his head tilted towards the window so he could talk.\n\n\"He's still on the guest list, ma'am. Your mother never changed it when you left, so we allowed him in.\"\n\nBen did feel the need to back up what he was said by saying, \"Ma'am, John is in the house with him, much to his annoyance. He seems to think he had freedom to roam. Ma'am, perhaps you could remind him he doesn't, since he's no longer involved with you.\" \n\nBrooke's hand went out and patted Ben's shoulder, and his relief was seen from the mirror in front of him. The limo came to a stop the other side of the car in the driveway. As Brooke got out she looked at me, held my hand in hers, and said, \"I'm sorry about this.\"\n\nAs for me, I nodded but didn't really understand any of it. The ranch house door opened and Maria came out, followed by a guy who basically shouldered her out of the way and ignored her as he passed. If it hadn't been for the security guard I figured was John, who saw it all and managed to catch her before she fell to the ground and hurt herself, then things could have got even more heated.\n\nI was the wrong side of the limo when Brooke left it at the speed of a rocket and passed the guy on her way to assist Maria, who seemed to take it all in her stride. By now I was on the porch steps and this guy stood in my way.\n\n\"Who the fuck are you, and why are you with my fianc\u00e9e?\"\n\nIt all made sense now. My mind even grabbed a conversation we had some time back and played it once again in my head... \"If I had listened to momma I would be married to Bernard now, with at least one child out there and another one in me already.\"\n\nBernard was tall and solid: I figured a good 6'3\" and mid way into the two hundred pound mark. He seemed to believe his size and weight could bully anyone. Poor Bernard seemed to also think that standing on the step gave him more presence over me. That thought left him rather loudly when I punched him in the nuts and then moved aside as he folded up, trying desperately to gasp for air as he rolled down the steps of the ranch house.\n\nI made it onto the porch just in time to pluck Brooke out of the air as she went to attack him for his assault on Maria. Damn, but she was strong when she was mad. John and Ben had him in an arm lock apiece and up against the trunk of the limo as Brooke was screaming that she wanted him out of here and arrested for assault on Maria. Another car came rushing up the drive and skidded to a stop as two more security guys dived out and took Bernard away. \n\nBrooke was a woman possessed that late afternoon. She sat Maria down and I actually got to meet the chef as he came with water for Maria. The County Sheriff turned up next and took notes from everyone, and Brooke insisted that a copy of the security feed was made and handed over. I did find out later that the security feed had a hiccup when it came to me hitting Bernard, and there were two security people who swore blind that he fell down the steps.\n\nConstance phoned when the Sheriff was about to leave, and I think he wished he had when he put the phone down. That poor man was as white as a sheet, and all he managed to add to the conversation with her was \"Yes ma'am\" - several times.\n\nIt was late evening when the dust had settled, well for that evening anyway. Brooke sent Maria and the chef home, and phoned the guard house to tell them all to order pizza and it was on her; just let two through to us, though. The knock on the front door came an hour later and I went to the door as Brooke went into the kitchen to fetch plates. This security guy I didn't know, but he smiled and asked me to tell Brooke that the live feed had been turned off as per her instructions.\n\nI met her in the day room, her clothes already on the floor. \"Security said...\"\n\n\"I know; I heard.\" The look she gave me was half amused and half wondering - why was I still dressed? I dropped the pizza boxes on the table and, a minute later, I was as naked as her.\n\nShe moved to sit on the couch, and that's where we were for the next hour as she ran through a range of emotions from having a quiet cry to sucking in breath and seething when her mind went back to our arrival and confrontation with Bernard. I stood up and got her a glass of water while I reheated the pizza.\n\n\"Want to tell me about it?\"\n\n\"No. but I feel I should.\"\n\nIt wasn't so much an arranged marriage; they had grown up together and people just assumed. But Brooke had doubts, and the more time she spent away at medical school and away from Bernard the more she was convinced she was right. Every time she came home he went so full out to get her to commit to an engagement that even her uncle noticed the tension. Halfway through her fourth year her uncle came to visit and gave her an out from the situation, at least in the short term.\n\nShe left school at the end of her fourth year and, with the help of her uncle, she was placed in a medical MOS so that she could continue her studies. The change of surname was at the suggestion of her uncle, so that Bernard couldn't have a hope of finding her. After two more years in the medical corps she realized she loved it, and asked to stay.\n\nWhen I had met her, she was on her second tour in Iraq; she was only in the area doing a hearts and minds project at one of the local schools - simple health checks and inoculations. When they realized they were short of a medic for the assault on the town, and her last name raised no flags with the Master Sergeant who pulled her out of the school, that's how I was introduced to Brooke.\n\nI'm sure there was more, but the pizza was warm again so we took advantage of it. She was attacking the wine she had brought up from the cellar a bit too heavily as well. When I mentioned it I got the glare for a second, and then a smile and a nod. \n\n\"Sorry, but he has that effect on me lately. I think the army gave me perspective and, when I look at Bernard now, all I see is him thinking I'm his free ride to an easy life.\"\n\nHer statement went against everything she said next. She spoke fondly of them growing up at school and being close friends and often study partners. Bernard's attitude started to change through high school. When he was picked for the football team he expected Brooke to follow along and join the cheerleader squad. She had no interest in doing that and it lead to their very first argument.\n\nShe felt a new freedom in high school that she never felt in elementary school. All Bernard saw was a quick skip through high school and onto college football, until the coach pulled him to one side and told him that as a team player he was damn good at his job on the field, but he would never make it as a pro. It was from then on that a mean streak grew in him, and it showed mostly on the field.\n\nHe hid it well around Brooke until she told him she wanted to be a doctor. Bernard couldn't figure out why, since her family was loaded and she would never need to work. Even she believed that to be the real turning point in their relationship, but they both had a lot of years invested in each other and both they and the families still remained friends. When Bernard didn't get the football scholarship to the college he wanted, he knew his playing career would be limited to team player only. \n\nIt was just assumed that they would go to the prom together, so they did. Bernard booked a room for later and, when Brooke found out, she called her folks to get a ride home from the prom. He went full on after that to keep his ride into luxury; he wanted to be engaged before she went to college and, in her own admitted stupidity, she agreed - and regretted it from the day of the engagement party onwards.\n\nWhen she came home for summer it seemed he had almost the whole summer planned out for them, from parties they just had to be seen at to days out with old school friends. Brooke paused just then to say that she started to look forward to college for a rest, not the other way around. It was during her fourth year at medical school that her uncle turned up to talk to her. Both he and Constance had seen everything from the sidelines and knew she wasn't happy, so he offered her an out.\n\nThe name change was a paperwork shuffle, and a way of keeping Bernard at arm's length so that she could at least breathe on her own without his permission. She liked the service so much she was already looking at finishing her training to become a doctor when her first tour started. Brooke took another step back and stayed a medic for that tour and, when the second came up, she was told that once she finished that one they were taking her off frontline and sending her back to medical school.\n\nThis time she looked at me, \"And that gets you into my life, Halo.\"\n\nI went to object but she beat me to it.\n\n\"I know; you're Rick. But in my heart your name will always start with Halo. It was Halo who saved my life that day, and Halo will always be my hero. It's the man I met afterwards that I fell in love with, and who helped fight the dragons. That's you, Rick - not Halo.\"\n\n******* \n\nThe door opened then, and Constance walked in. Brooke didn't even blink, but I grabbed a pillow and placed it strategically over myself. Only then she did move. Brooke stood and walked to her mother and gave her a hug.\n\n\"I had the jet fly me down here to sort this out. I'm so sorry; it just slipped my mind that he was still on the access list. The poor boys at the gate all thought the worst when I turned up. I've put that right; it was my fault, not theirs.\"\n\n\"Want some warmed up pizza, Constance? I think your daughter has left some wine in the bottle.\"\n\nThe glare I got from Brooke over my remark was met with as innocent a smile as I could muster.\n\n\"Please be a dear, Rick, and put some clothes on. I may not be able to explain this situation to my husband if he ever finds out. A naked daughter I can of course explain; a naked Rick might take longer.\"\n\nI walked over and pulled my trousers up off the floor and pulled them on. They tried to be quiet but I heard them.\n\n\"Shit! When you told me about his back I never realized it was that bad.\"\n\n\"Mine are mental, mother; his are physical.\"\n\nI do hate it when women share. Thinking it best if I took the pizza into the kitchen to try to breathe some life back into it, and to pull another bottle of wine out of the rack, I came back into the day room as Brooke was putting on her dress. We all talked Bernard for a while longer, and then decided to leave it up to Maria, since Constance would have no hesitation in going after him if she decided to take it further.\n\nShe also reassured us both that he was now off the list at the gate and she was only here for the evening, before heading back to Washington and into the arms of her husband early the next day.\n\nIt was both a strange evening and an insight into these women. Not content with what was left of the pizza, we adjourned to the kitchen where both women set about cooking and drinking. It may have been pasta and something else with an Italian name, but those two women could sure cook. Perhaps it was the man in me, but I sat back and watched from the sidelines, stirred when told to, and grabbed things from the refrigerator when asked to, all the while listening to them talk.\n\nThere were no secrets between them; at least, none that caused the conversation between them to stall at any time. It was almost mother-daughter one minute and sisters the next. As we set about our pasta and more wine I was even included as we laughed, burped and hiccupped through our meal. \n\nAs a neutral I could see the love between them, just as I could now fully understand and appreciate the pain in Constance's eyes that day at Chequers. Her own daughter was in pain and her wealth and influence were useless to her. It was as the bottle finally yielded its last, and even the glasses had emptied, that the women admitted the night was now over and beds were calling.\n\nI carried Constance while Brooke held on tightly to my shoulder. Her daughter kissed her goodnight and I waited for her outside the bedroom.\n\n\"What are you smiling at?\"\n\nThis time I lifted Brooke into my arms and her head nuzzled into my chest as I spoke. \"Oh, nothing; just never seen your mom wasted before. I had her pegged as a bit of a control freak.\"\n\nShe sighed. \"To others maybe, but this place is special to her. My folks don't often invite people to the ranch. It's the only place they truly call home.\"\n\nBrooke passed out as soon as her head hit the pillow. I stripped her down, did my bathroom rituals, and joined her. By the time I had my arm around her the gentle noises of a deep sleep came back at me. I'm sure it was instinctual when her ass moved back and connected with my groin. As for me, my hand rested on her hip and I know I was smiling as I drifted off to sleep.\n\nI followed the sound of laughter down the stairs the next morning. Constance was dressed and had a cell phone to her ear. She waved when she saw me and, judging by the tone of her voice, it was her husband she was talking to. I got a kiss from Brooke as Maria came out with my breakfast. It seemed that Maria didn't want any fuss, and said with a smile that the way Bernard fell down the ranch steps was justice enough for her.\n\nConstance left soon after breakfast, and we took to the sun loungers for the rest of the day. I think Brooke figured it out as we dressed for dinner.\n\n\"Your leaving, aren't you?\"\n\nI nodded my head first, but she cut me off before I could say anything.\n\n\"Well, I'm not letting you go. It took a war to find you, so don't even think I'm letting you go.\" \n\nWe kissed and walked down the steps hand in hand to dinner. Brooke was a little subdued, but we both knew she was on the road to recovery, even if not very far down it. She had been shown she was no longer alone; the husbands and wives of the vets would see to that, as well as the people of her unit. I stayed another two days before I got the official notice from my boss. ",
        "*******\n\nNothing was going right. The location was off by a kilometer, which meant my own preparations had been a waste of time. It also meant that my own back-up was now seven kilometers away, and not six. A kilometer doesn't sound much, but it is when you're at the wrong fucking end of it. I had the target in sight, and had done for most of the first day: all I needed to do was watch him for two more days. \n\nI know that hindsight is a wonderful thing, and I sure wish I had taken notice of mine. I had watched that damn target all day - ALL fucking day - before realizing he was out in the open for a reason. They knew where I was, but how? I don't know how, but they knew, and took their time coming for me.\n\n\"Control! This is Halo Two-Five.\"\n\n\"Send, Halo Two-Five.\" \n\nHe sounded a little confused and very worried. This was a radio silent op, and here I was talking to him. With my back-up so far away it was operational procedure for us to keep silent, and I had just smashed that wide open. Curtis and his team could hear me, of course, but their orders mirrored mine. \n\n'No comms whatsoever,' and now that one kilometer - yes, one thousand lousy meters - really did come into play. We all prided ourselves on the amount of details we sieved through before an operation, and THOSE one thousand meters were now going to cost me my life. My guys are the fittest and leanest I've ever shared a steak with but, even at a full-out run, they could never bail me out of this. Too much hilly ground, and also too many 'what if's' in the way now.\n\nI even paused before I touched my send button for the last time. Perhaps if I said it all in one go they wouldn't hear the sadness in my voice over what I was going to do next. The thought of my girls and Brooke seeing me being held captive, or even beheaded live, was simply an anathema: I just couldn't do that to them. I needed them to remember me as a whole man and father. \n\n\"Control. I've been cut off, with no chance of escape. They're coming for me.\" My mouth dried, and swallowing was difficult, but the last part of this transmission had to get out there. \"Take care of my family.\"\n\nTony choked, but he was professional to the very end.\n\n\"Confirmed, Halo Two-Five. Releasing a drone now; all weapons are hot. Radio silence starts immediately.\"\n\nI stuck my radio into my pack; I had no use for it any more. Although most of us plan for this moment, none of us ever want it to arrive. The cord felt so familiar in my grasp. The explosive charge in the bottom of my pack was my own design; all I had to do was make sure I was close enough when it went off.\n\nThey had spent so much time coming for me it was clear they wanted me alive. It would have been for what I knew initially, but after that? Well, even my own lurid imagination wasn't going down that road. The saddest part of those last few moments of my life was that I couldn't even afford to think about my children. Even Brooke was pushed to the furthest part of my thoughts. My mind spared me just a second to say \"sorry\" before it slammed that door shut forever.\n\nNo, my last thoughts before the end would be here, probably looking into the eyes of some lunatic hell-bent on doing as much damage to me as possible. I held onto that cord until I felt their presence close enough, and then I pulled it. That famous saying from those old \"Mission Impossible\" shows came to mind, and all I did was add my own little twist to it.\n\n\"This backpack will self-destruct in ten seconds!\"\n\nI don't know how many I took with me.\n\n*******\n\nThere was an irritating beep in my ears, and faint light coming from somewhere, but everything seemed fuzzy when I tried to open my eyes. When I moved it felt like I was testing restraints. A female voice said something, but it was in French. It hardly had time to register before there was some rubbing on my arm, and it suddenly felt warm before I lost consciousness again.\n\nThe next time I woke I tried so damned hard not to move, but they had someone watching me. I felt that warmth in my arm and I was out again. I tried to be even more subtle the third time and I actually thought I was getting away with it. Other than more of those damned beeps, I heard nothing stirring in this room or whatever it was.\n\n\"You can quit with the faking it shit, Halo.\" The woman's voice sounded stern, but I was sure that I remembered that scent.\n\nHalo? I was confused for a moment, and then it was like the fog lifting as everything came rushing back. Brooke! I smiled and instinctively tested the restraints.\n\n\"Try that again, and I will put you under - AGAIN.\"\n\nShe moved, and I felt her presence close to me. My lips felt something against them, and I opened my mouth.\n\n\"Sips only, Halo.\"\n\nIt seemed, when she snatched the straw out of my mouth, that my version of sips was nothing like hers.\n\n\"Why don't you fucking LISTEN, you dumb ass.\" \n\nThe vein in my arm throbbed slightly.\n\n\"You're all busted up, you knucklehead! We're still operating on you as we sail.\"\n\nAnd I was out once again, my time awareness all shot to hell. All I remembered was pulling the first one around. I was still in the process of dealing with him when one of his friends joined in, and him getting in on the act forced me to either take a couple of paces back or lose my footing entirely. It was then I realized I now had two of them between me and my backpack. For a second they were whole, and then I felt like I was lifted off my feet as a very loud bang made my world go dark. But how could I even remember that much? I was still puzzling that one out as I drifted back to sleep.\n\n*******\n\nI could hear my girls and I came oh so close to losing it. Once my mind settled down from its own range of emotions I realized it was a tape of songs they sing and stories they make up in their heads, which usually turn out to be a mixture of just about every story we have ever told them. Even some of what they both got up to at school, and how it was always someone else's fault.\n\nThe tape stopped.\n\n\"Halo. You may think I'm torturing you but I'm not, honest to God I'm not. But if you try and move again I will put you out.\" She gulped. \"Those are the rules Halo; please don't make me.\"\n\nWhen I didn't move, or even attempt to talk, she took that as a good sign and started to talk herself.\n\n\"I know what happened, Halo; I've been read-in up to super secret. All this shit is real, and you've been holding way too much back from me.\"\n\nThe temptation to smile brought the threat back to me. Just what the hell was super secret? In her head, I meant: I know my own security clearance, and there is no way she would ever come that close.\n\n\"You have great friends, Halo; you owe each and every one of them a steak dinner.\"\n\nWhen Curtis heard everything on the radio he was already getting his team stripped down and ready to travel light and damned fast. When Tony acknowledged my last, and said that he was releasing the drone with all weapons armed, he had effectively cut communications with me and Curtis's team. \n\nBut Curtis still had a back-up channel as per operational requirements. Curtis told Tony in plain English over the radio that if he heard any drones going over he would send one of his own guys back to camp to put him in hospital before any of the drone's missiles landed.\n\nOur boss ordered Curtis and his team to stand down. Curtis held the channel open so that our boss could hear his team tell him to \"fuck off.\"\n\nI felt Brooke's warm breath on my cheek, and she whispered in my ear. \"They were coming for you, stud; they knew they had all just kissed their careers goodbye, but they were ALL, to a man, coming for you.\"\n\nMy boss wasn't idle. He knew he could either step back, as indeed he should, or assist. He ordered Tony to send up a surveillance drone, and make sure it was damned high. He begged, borrowed and lied for the use of four artillery batteries. But cutting through that much red tape so quickly does raise its own flags, and General Shithead heard about it and paid my boss a visit. By the time he got to his HQ, he could only stand back and watch as my boss placed Curtis and his team in a pocket and matched their speed to the shells dropping all around them.\n\nGeneral Macalister watched in awe as a man with nothing but the basics was controlling three artillery batteries on a rolling barrage, with a small group of men in the middle. When the team was faster than the rolling barrage he would adjust the speed of the barrage to them, not the other way around. The numbers in terms of grid references rolling around in that man's head as his concentration was total must have put a small computer to shame. \n\nThe General knew my boss didn't have enough firepower, and effectively handed over control of three more batteries to him. Using only a map and the information coming from the drone's feed, the General used one of the batteries to cut off any escape routes so they couldn't steal me away while my boss was taking Curtis and his team right up to my last known position.\n\n\"The Blackhawks and Apaches were a present from my uncle, so play nice from now on.\"\n\nBrooke was going to continue, until she noticed that fatigue was once again creeping in. She leaned across and kissed my cheek before it was the turn of natural exhaustion to put me out this time.\n\n******* \n\nEven with the bandages that still covered my eyes I could hear and smell Brooke. That perfume was her favorite. She was making noises I recognized; Kitten was asleep next to my bed. She must have been sleeping very lightly because, as soon as I realized she was next to me, she woke.\n\n\"Welcome back, Halo.\"\n\nI wasn't sure if the \"keep still\" order was still in effect, so I stayed on the side of caution and did just that.\n\n\"So, where was I? Oh, yes - helicopters and stuff. Well, they ripped up everything in front of Curtis and his boys, and by the time Curtis got to your location I'm told it looked like a lunar surface with a pile of rags in the middle of it.\"\n\nKitten leaned over and placed the straw in my mouth again. I was a little daintier with my sips this time. When she was satisfied she sat down again and continued.\n\n\"As you can imagine, no one was going to hang around once they got there: something about upsetting the neighbors.\" The sarcasm amused me and I had to fight against the smile getting out.\n\n\"But from what Curtis could figure out, when you got stuck with dealing with two insurgents the blast from the explosives you had in your backpack launched you and both the guys you had in your hands at the time away from your last position. Once the rolling barrage caught up with you, all that did was add three more to the bodies that were already on top of you, thus adding to your very own body wall.\" \n\nThe pause was there and, as her voice found form, her humor poured out. \n\n\"Honestly, Halo! What is it with you and body walls?\"\n\nHer hand joined mine and she was incredibly warm to the touch. When I felt her lips on my cheek I almost forgot my orders, before a touch of sadness crept back into her voice.\n\n\"You're still badly busted up, Halo, and you're going to have to retire now, but I can say with some conviction that all your limbs are still attached - and work. Well, they will when we finish taking a knife to you.\"\n\nThe vein in my arm throbbed slightly as Kitten put me to sleep again. \n\n*******\n\nIt seems I turned into a tug-of-war between two countries. General Macalister insisted that I was to be sent back to America, but my boss wasn't too keen on that idea and took it up with the Prime Minister. Within the hour he was told that Walter Reed was expecting him. My boss was told to stand down on this and leave me in the hands of the Americans. Our unit rotated back while I was still in transit so my boss grabbed the first available flight out of England.\n\nHis face was the first I saw when I opened my eyes; minus the bandages, that is.\n\n\"Good to see you alive, Rick.\" He looked over his shoulder before leaning his elbows on his legs, so his next words were a whisper. \"Do you have any idea how much shit it took just to get me in here? She has you so well-protected I doubt even Curtis and the boys could get you out of this place.\"\n\nThe polite cough from the door stopped him from saying anything else. Brooke walked over and sat on the bed, her hand resting on my fingers before she gently interlocked her fingers with mine. The needles in the top of my hand prevented me from doing anything other than keep my hand straight.\n\n\"Curtis was here yesterday. Rick was still under, so I suggested he and his gang chill for a few days, and I would call them as soon as Rick was able to see them.\"\n\nMy boss went to speak, but Brooke beat him to it.\n\n\"You can't drone strike Walter Reed.\"\n\nI celebrated a couple of firsts that day; it was the first time that I had seen my boss at a loss for words, and go red at the same time.\n\n\"Brooke.\" She turned to me and I saw real fight in her eyes, but I continued anyway. \"Can you give us a moment, please.\"\n\nShe nodded, and gently squeezed my fingers before standing and leaving the room. I waited until she closed the door and, judging by the speed it closed, I figured she was in two minds about doing that.\n\n\"I'll speak to her.\"\n\nMy boss shook his head, \"No; don't bother. It would just complicate your life more if she found out the truth.\"\n\nThe honesty with which my boss said that made me pause and then nod my head. He did have a point, although his next words tore straight through my thoughts.\n\n\"I've spoken to the doctors. You have a long road to recovery ahead of you. I have a desk job waiting for you if you want it.\" \n\nHe could see that I was thinking about it. Just then a nurse came in, and Brooke took up position leaning against the door frame. My boss noticed, and looked at me before he hid his smile and got up. We nodded to each other and he headed for the door, reminding me that I had his number if I needed anything.\n\n*******\n\nThe first month was the hardest. Finding the patience to lie around while my body healed took its toll on both Brooke and me. I had to rely on others all the more when I was so used to doing things myself, and that frustration was only tempered by the time I spent with Brooke, and the look into her life she gave me as we talked.\n\nI learned the name of her pet fish she got when she was five, and what knee she scraped when she fell off her first bike. How at eight years old the first food she learned to cook was scrambled eggs. She sang a solo part with the school choir when she was ten, and kissed her first boy at eleven: she blushed at that one. She broke her arm at thirteen when her horse refused to jump a fence and sent her over his neck and onto the ground the other side. I didn't get all that good a response when I replied that at least she got over the fence.\n\nI got more details out of her about Bernard right about then, and how he became the shadow in her life. I'm surprised her mom didn't get involved at some point: the detail Brooke went into started me wondering if it bordered on stalking. Of course all this wasn't one-way traffic: at times Brooke would just stop and direct her own questions about Abby and me. At first I deflected them as best I could, but being a captive audience meant I had no place to run. Oh, I batted her questions away to begin with, and yet I found myself adding the answers to those questions just minutes later in the conversation. \n\nAfter six weeks the doctors sat me down to have a chat. The options were easy: with everything knitting nicely, it was time to start physiotherapy. Walter Reed could supply that, but that still meant that certain potential visitors, namely my girls, couldn't come. The questions as to why I was in an army hospital would complicate anything I told them, so we first moved me to a private hospital closer to the ranch in Virginia, and then Brooke invited the family to stay at the ranch during the girls' summer holidays.\n\nThe first full-on row had been when I asked her when her leave was up. She went quiet and told me that she had quit the army. The only time things calmed down was when Constance came to visit, and assured me that Brooke was going back to medical school just as soon as I was fit again.\n\n\"And all this, Constance?\" My head rotated around the hospital room. \"There's no way our government is footing the bill for this, are they?\"\n\nIt was another of those moments when the mother in her came out.\n\n\"Stop being stupid, Rick! Of course not. The day you left Walter Reed we took over the bills and, if you give me any crap about being a kept man, then so help me I will slap you.\"\n\nConstance paused for a moment. As for me, I was still torn between getting up and leaving, and knowing in the back of my mind that if I dared try it she would tackle me to the ground. This woman wasn't afraid to get her hands dirty: that was for sure.\n\n\"Look, this isn't about money. Oh yes, I have more than you, but so what? Do you think I can spend it when I'm dead?\" This time she paused to take a breath. \"Stop being such an idiot, Rick: that girl loves you. It's not infatuation because you saved her. I know my daughter, and she LOVES you. When she's not here with you she's at the ranch, looking after those two sweet children of yours.\"\n\nIt wasn't a glaring match between us. Constance, Brooke and I simply decided that this hospitalization was a blessing in disguise. A painful one, even I will admit, but it would help put to bed any observations my girls had. The scars on my back and legs could be tagged on to the fresh scars I had in this fictitious car accident. I made sure they never saw me with any tubes or wires attached to me, but even then Olivia still held tightly onto her big sister's hand. Both were pretty close to tears when they first came into the room. \n\nIf anything, that one moment caused me more pain than thinking I would never see them again. Compartmentalizing my life was my way of dealing with leaving them with my in-laws. It was only when I was sitting in that room, seeing pain and fear on both their faces, that I realized that, in their own small world, they shared my absence with each other, and were so relieved when I walked back into that life once again. Now daddy was in hospital and would be for some time. I just thanked my lucky stars for my support network. \n\n*******\n\nFor weeks the routine was always the same: physiotherapy, followed by tests, followed by loads of swimming and whatever other exercises they had dreamed up for that day. Yep: Monday was this torture, Tuesday was that torture, and so on. As the weeks rolled on, the only constant was the pain throughout the day. My fear of becoming addicted to painkillers caused another confrontation between us, until they assured me they were monitoring my intake and I should stop worrying. Easy for them to say. \n\nAlthough it shouldn't have been, given how much I had already seen of her, I was still a bit surprised to realize in those weeks just how much of a force to be reckoned with Constance was. I liked her, and could tell she was a real partner in her marriage. Eye candy she might be, but a true partner none the less. Although she never fitted into the 'what I say goes' category at all, it was clear to see that, when she spoke, people took the time to listen, because it was always common sense talking. They weren't simply humoring the pretty woman. I'm sure, though, that she had a big stick hidden somewhere for the more intellectually challenged.\n\nPlus, of course, my two girls had her laughing all the time with their antics around her and by the pool. She was instrumental in teaching both my girls how to swim properly and, judging by the slow show of tan being added to them when they visited, it was clear they spent a lot of time both outdoors and by the pool.",
        "At times those pangs of jealousy still came to me, but I was also a realist, knowing that I was still a long way from being able to play with them the way that normal fathers did. The person staring back in the mirror every morning when I shaved put me in this situation; no-one else. To begin with it was my outlet when my wife died. My in-laws had known all along, and gladly took over care of the girls for me. In a sense they healed each other and, although I tried oh so hard not to place myself in too much danger, wasn't that what my unit did all day long?\n\nOut there we placed our faith in people like Curtis and the boys; folks like my boss and Tony. To the outside world we were a closed-off entity that did 'something,' although even people like General Macalister weren't always sure what. We were the military arm of God's brother and, as I sat in that room full of flowers and get well cards, I just knew my time with my friends was coming to an end.\n\nMy boss reached out when my wife died and offered me a way of healing the hurt I felt. He saw the monster that was fighting its way out, wanting to hurt the man who killed my wife, and turned him away from the route of self destruction that loomed closer by the day. The unit helped me expunge the monster that could well have contaminated my family and destroyed everything in its path. With the healing process coming to its conclusion, the universe gave me Kitten, and then Brooke, and told me my healing had to take a different path.\n\nI was hurting too many of the people I loved and that had to stop if I was ever going to have a future, both as a family man and husband. It was that thought that sent my pulse rate rising, and the only way it would slow down was when I smiled to myself, because I had finally admitted it to myself. I LOVE HER.\n\nBrooke knew something was up when she came in with coffees in her hands. She dropped them by the door before rushing to my side, holding on real tight as my emotions set about the process of thanking the monster for keeping me alive and showing this wonderful woman that there was a place in my heart for her. Woman's intuition perhaps, or were we just so in-tune now that some actions didn't need words?\n\nFuck knows how long I held onto Brooke, or how many tears I shed that mixed with hers as we clung to each other. On the odd moment that we parted and made eye contact she knew, just as I knew I still had to put it into words and nailed it to the wall.\n\n\"Brooke Madison Armstrong, you're a pain in my arse, a hot fox with one hell of a killer body. You are great with my girls and they love you almost as much as I do. Will you marry me?\"\n\nI'm not sure either of us could see the other due to the tears. Brooke placed her hands on my cheeks and held onto me, forcing me to look directly at her.\n\n\"Not the way I expected that question to come out, I will admit, but it's the one I've been waiting for so I'll take it and sort you out later.\" Her hand went behind my head and pulled me close for a kiss; slow, gentle, and comfortable for us both. \"I won't ask what took you so long, but you got there in the end, so yes, Rick: I'm yours.\" \n\nOne thing still nagged me, so I held off on another kiss to sort this out.\n\n\"You're going back to medical school: I'm not having a drop-out for a wife. You hear me, miss?\" \n\nA part of her looked like she was going to object. I also suspect a part of her thought that I may change my mind when she was naked and in my arms. It was the smile and the nod of her head that let me know that she knew both would fail, and she was going to be a doctor; something she had always wanted to be in the first place. Who knows, I may even invite Bernard to the wedding and thank him.\n\nAfter all, it was due to his attitude that she went into the service and, eventually, into my life.\n\n*******\n\nI'm not stupid. I left the details of the wedding to Constance and Brooke. Hell, even my mother-in-law was on speed dial with those two asking her input. She knew that Brooke was going to be my wife, but also that I would never stop them both having access to their grandchildren, especially when they found out that, not long after the wedding, Brooke was going to resume her studies. I only insisted on two things: formally asking Brooke's father for his daughter's hand, something I was told that he wasn't expecting, and me being able to walk down the aisle.\n\nThat's when they all went into a huddle again and the doctors got to have their own input. As for me, I just carried on like before. On Tuesday it was this torture; on Wednesday it was that one. The pain meds started to diminish as bones knitted and muscles remembered what they were there for.\n\nFinally curiosity being what it is I just had to ask.\n\n\"Brooke?\"\n\n\"Yes, honey?\"\n\n\"Is this a big wedding?\"\n\nShe shook her head, \"Nope. Can't have one of those because your friends won't be able to make it if we did.\"\n\nThis time I managed to grab hold of her hand.\n\n\"But do you want a...\"\n\n\"Rick, the people we both want there are coming, and that's it. Daddy doesn't need to make this a showcase wedding. Not that mom would let him of course, but I promise you that the people we want at our wedding will be there.\"\n\nI squeezed her hand and sighed, more from pent-up relief than anything.\n\n\"I told you this morning that I love you, didn't I?\"\n\nShe giggled. \"Well, yes, but never let that stop you from saying it as much as you want... OK?\"\n\nThe pause was way longer this time.\n\n\"Brooke?\"\n\n\"Yes, honey?\"\n\nI'm a guy, and I shouldn't know until she gets to tell me, but I'm tuned into Brooke and that body of hers now.\n\n\"Your tits are getting bigger, aren't they?\"\n\nHer cheeks reddened and her smile reached that thousand watt threshold.\n\n\"Yes, honey. It's another reason why we're getting married in three days. God, I love your doctors, those visitation rights - and, of course, that private room you had.\"\n\nShe moved from her position on the couch. Her legs were now under her, and she looked directly at me.\n\n\"I wasn't trying to trap you, Rick. Not even our family doctor can figure it out. Thank you for not being mad at me, but I think med school will have to wait a bit longer. Momma said I should have told you sooner, but you knew anyway, didn't you? It's also why the honeymoon is a week after the wedding. We go for our first ultrasound two days after I say I do and always will.\"\n\nThe End"
    ],
    "authorname": "markelly",
    "tags": [
        "halo",
        "ptsd",
        "survivors guilt",
        "love",
        "pregnant"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/halo-two-five-ch-02"
}