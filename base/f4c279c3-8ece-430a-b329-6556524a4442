{
    "title": "In Dreams Ch. 01",
    "pages": [
        "\nIn Dreams\n\n\n\nBy Denham Forrest (The Wanderer)\n\n\n\nMy thanks go to the folks who have assisted me in preparing this story for posting.\n\n\n\nA few clarifications that might assist the uninitiated and/or those from foreign parts.\nEmmet: A Cornish (and West country) term for holidaymakers or seasonal visitors.  Punter: A person who is (unwittingly) gambling on the services he/she has paid for being successfully provided. In this particular example, paying to be taken out on a boat to see some basking sharks and/or dolphins, doesn't necessarily guarantee that the \"punter\" will see anything but the bottom of a sick bucket.  Stroppy: bad tempered and/or argumentative.   Bill/Ol'-Bill; Police \n\n\n\nIn Dreams, Chapter 01\n\n\nThe human brain is a strange and wonderful thing; buried inside it somewhere is our consciousness... our mind, or even our soul, if you like to call it that.  Every second of each day our brain monitors the most complex machine known to man and keeps it all running tickety-boo; heart rate, breathing, temperature and many other bodily functions are all monitored and maintained at the optimum.\n\nAlong with the former, the brain stores our memories... if sometimes not as fully or accurately as we'd like.  Now memories are even stranger because although we believe that we remember everything about our lives; in fact we can recall very little in detail.  Some parts of our life, which I suppose our brains have decided are poignant we find we can remember in great detail, but regretfully these recollections are often but very short episodes... recordings, if you like; usually only of the highlights of the more significant occasions.  Still more of our memories are but mere snapshots that our brain (in it's wisdom) somehow reassembles into what we believe are proper memories.\n\nI'm only explaining this to you now, so that you might understand, that the following are my memories; my recollections of the significant events of those few months, what actually happened between the described... poignant events, I really can't recall now.\n\nMy story starts on a sunny afternoon in mid July, 2010.  It had been a good day for me really.  I'd taken a group of ten people out on the boat and we'd found three Basking Sharks, one of them a real big bugger.  That's what the punters were paying for to see; the sharks up close and personal.  I'd earned my money that day and back at the landing stage the party had climbed off \"Quiet Times\" (my boat), a group of happy Emmets (Summer visitors, holidaymakers and the like from up-country and/or foreign parts. Emmits all, to us local country bumpkins).\n\nAs usual after I'd disembarked the party at the charter boys' landing stage, and having topped up the fuel tank, I moved Quiet Times over by the quay wall.  There I could refill her water tank, generally tidy everything away and swab the decks down a bit, before I took her back up river to my mooring.\n\nI was almost finished making her all ship shape and Bristol fashion, and had stopped for a moment to stare at the water; checking the state of the tide, when.\n\n\"Excuse me, but are you Mr Carson?\" A rather young sounding female voice, somewhat tentatively, asked from somewhere high above me on the quay.\n\n\"That I be Miss!\" I replied in my best Cornish nautical, and I'll add without lifting my gaze from the waters surface.\n\nBy the way, I'm not Cornish by a long chalk; but I've been living down here for a good few year and had been pretty well accepted as one by the locals.  And of course the punters sort-of expect that I should be; consequently one has to play the part as best one can.\n\n\"Are you Mr Taylor Carson?\" The voice asked.\n\nNow that caught my attention!  No one addressed me as Taylor anymore.  I'd been plain old Carson to everyone around those parts (including the Emmets) ever since I'd settled in that neck of the woods!  Except that some of the punters would call me Captain Carson or even skipper... on occasion.\n\nI looked up to see whom I was addressing and the sight before me took my breath away.  Gazing back down at me was an extremely familiar looking -- rather shapely and very attractive -- young woman.  \n\nBut no, she wasn't a young woman, she couldn't be; your the mind can play some devious tricks on you sometimes.\n\nOh, she was familiar all right; too bloody familiar looking by a long chalk.  And she even had the look about her or of a young woman.  But from the sound of her voice \u2013 and maybe more so my unconscious mind speedily fumbling through a few complicated calculations which had their roots in long discarded memories -- I figured that it was far more likely that she was a mere child.  My high speed mental gymnastics led me to the conclusion that she could be no more than thirteen years old... roughly; mental maths ain't ever been a strong point of mine.  Unless I'm calculating dart scores that is; which is a subtraction exercise anyway.\n\nWhatever, I had to admit to myself that the younger was certainly well developed for her age, and could easily have passed for being somewhat older.\n\nIt should be obvious to you though, that my estimate of her age, was influenced by the fact that -- on that first glance -- I'd very much suspected... Well I was positive when it comes down to it, that I knew exactly whose offspring my unexpected visitor was.\n\nBut I had no clue as to what her name was or as to what possible reason she could have had for being on the quay that day.\n\nI also had no intention of letting-on to the youngster that I did recognise her.  That's called... well self-preservation, I think?\n\n\"You have me at a disadvantage Miss?\" I said prompting her to introduce herself.  But she'd obviously decided to play her cards close to her chest.  Suspiciously close to her chest from my point of view.\n\nHey, I'll add, that by the look of it, that was going to be one impressive chest one day, once it had developed to it's full potential.  Yeah well, the youngster was definitely taking after her mother; that was something I was definitely sure about.  The one thing I suspected was going to lead naturally to the other, as nature dictates.\n\n\"Tara,\" she replied, \"May I come aboard your boat please Mr Carson, there's something I need to discus with you.\"\n\nThe name Tara immediately brought final confirmation to my suspicion of whose offspring this particular young lady had to be; not that I'd needed any.  The young woman I'd immediately pictured in my memory was a little more than... fixated on the film \"Gone With The Wind\".  I'd been obliged to sit through all 238 minutes on it's on... too many occasions for my personal taste.\n\nBut for the life of me, I still could not figure-out the why or wherefore, of what Tara was doing in my neck of the woods.  Or of rather more concern was, why she would feel the need to search me out.\n\nBut, being the gentleman that I am, (A description of myself not wholeheartedly shared by the rest of the world, I'll admit!) I could do no less than acquiesce to her request.\n\n\"Be my guest young lady!  But be careful on that old metal ladder; it tends to get a little slippery at low tide.  Although I do still have some chores to finish here, so if you don't mind I'll be working while we talk.  And then I've got to get Quiet Times to her moorings, before the tide turns.  So if you stay aboard for too long, then you'll probably find yourself shanghaied into a trip up river.\" \n\n\"That's fine with me, I can help you clean-up if you wish.  I'm in no hurry to do anything but talk to you this evening.\"  Tara replied, then holding her arm out, she called out \"Catch!\" as she dropped the jacket she'd been holding down to me, swung herself onto the ladder and shimmied down onto the deck beside me.\n\nThen she turned to face me again, and smiled, picked up the deck brush -- that I'd been forced to drop, to facilitate the catching her jacket -- and the bucket, before asking. \"Where do I start?\"  .\n\nProbably with a bewildered expression on my face, I gestured towards the foredeck out in front of the wheelhouse.\n\nTara smiled back at me yet again, then I watched as she carefully negotiated her way around the side of the deckhouse and out onto said foredeck.\n\n\"Water?\" she asked, then added. \"Oh, that's a silly question isn't it?\"  When after I'd looked back at her and then glanced over the side at the harbour waters all around us.\n\nI've got to admit, whilst she lowered the bucket into the harbour to fill it, I did take a long look at the way her... well, her pert derriere filled those tight fitting jeans she was wearing.\n\n\"God,\" I thought \"The girl has wonderful figure even at her age; she is definitely going to grow into the image of her mother.\"\n\nI had to remind myself that whatever age Tara looked, my in-built radar was telling me that she was not yet fifteen years old.  She had to be a lot less than half my years and that the wicked thoughts that were trying to wangle their way inside my perverted brain, were quite definitely illegal!\n\nBut in my defence, I must say that they might not have been thought's; they quite possibly could have been memories.  If you do not understand where I'm coming from here, I'm afraid there's nothing I can add that might make it any clearer at this time.\n\nI finished up topping-off the water tank from the hose that hung from the quayside, then ran the engine up and let it tick-over for a while to warm-up a little.\n\n\"Are we going up the river now?\" Tara asked as she re-entered the well deck, where I had been waiting for her.\n\n\"Yeah, to my mooring, only about a mile or so.  The tide is just about to turn shortly and it's easier to pick up the mooring during the slack... that's if I can time it exactly right.  I'll bring you back in the Rib after; if you'd like to come along for the ride.\" I replied.\n\n\"Please,\" she said, \"it'll give us time to talk.\"\n\nCasting off the single line that attached Quiet Times to the quay, I reversed her away from it in preparation for the turn to run up river.\n\nThe Boys on the regular charter boats (who were still undertaking their crafts evening ablutions) waved, but were uncharacteristically quiet as we passed them.\n\nUsually, if I still had a... female passenger aboard when I went up river after a charter... Well, we'd be greeted with a volley of wolf whistles and the like, and very often with a few \u2013 luckily completely unintelligible to the uninitiated -- suggestive or ribald remarks thrown in for good measure.\n\nBut to my surprise, that day the guys just waved or respectfully touched their caps.\n\nThe ebb tide was still slowly running, so I was sure that with luck on my side, we would arrive at the mooring on the slack.  Thereby making picking it up far easier and safer to do single-handed.  Once the tide started to flow, it moved very fast on that river and Quiet Times would have been a real bugger to hold steady while mooring her.\n\nTara had made a fair job of scrubbing the foredeck, but that didn't make her a sailor.  From her body language I somehow doubted that she had ever been on a boat before, let alone handled one.  I doubted she'd be of much assistance in picking up the mooring.\n\nBecause Tara was looking at me expectantly -- which I found a little... well, disconcerting -- I told her where to find the coffee making gear and she quickly disappeared below into the galley; returning shortly with two steaming mugs.\n\nIt was obvious that someone had taught Tara how to make a decent mug of coffee, if nothing else.  But I had to wonder how she had managed to know exactly how much sugar I was in the habit of using.  I somehow doubted that she could have guessed that right first time.\n\nAfter I'd complemented Tara on her coffee making skills and she'd seated herself near me on the bench that runs all around Quiet Times well deck, I asked. \"So what's all these important things that you need to discus with me?\"\n\n\"This is a very nice boat?\" She replied, obviously chickening-out of explaining the reason for her visit as long as she could.\n\n\"Hmm, need time to compose yourself, do you young lady?\"  I wonder what you are up too?  I thought to myself.  \"Right lets scotch that one as quickly as we can and get down to brass tacks.\"  Tara then got the standard holiday charter speech.  Well part of the usual banter anyway.\n\n\"Yes, she's a retired Royal Navy pinnace.  Quiet Times was built for the admiralty in 1956; out of Larch, on oak frames.  She's forty-one feet long, eleven-and-a-half feet wide, and she draws roughly around four-and-a-half feet of water, near enough anyway.  That helps to make her pretty stable when things get choppy out there.  The noise and the vibration you are aware of, is her Kelvin diesel engine down under our feet here; she'll plug on like this for just about forever, providing you treat her respectfully.\n\n\"Oh, and there's two berths and a head, plus the little galley down in the for'ard there.  But you've already acquainted yourself with the galley, and there are another four berths jammed into those two cabins back there.\n\n\"I mostly use Quiet Times for personal recreational purposes; but she is licensed to carry fare-paying passengers should the need arise.  Consequently when the charter boys get a little over-busy with the holiday makers in the summer, I can help them out; it brings in a bob or two as well.\"\n\n\"Right Tara , that's the boat sorted.  Now lets get down to the why and wherefore you looked me out, and what it is that you really wanted to talk to me about?\"\n\nI looked over at her and I could see a sort-of confused expression in the child's eyes.  She promptly averted those eyes from mine for a few moments -- to compose herself I assumed -- then after taking a deep breath she turned to stare right back at me.\n\n\"I think that you are possibly my father!\" Tara announced.\n\nFor a moment I couldn't think what to say to her.  I'm going to admit I wasn't expecting her to say anything like that.  But I didn't need to have to think on the subject, for very long.\n\n\"So you are Ottilie Thorn's daughter, I am correct, aren't I?\n\nShe replied with an almost imperceptible nod of her head.\n\n\"I had the feeling that you were; you have your mother's beautiful eyes.  But I'm sorry to have to tell you young lady, that there is no possible way that I could be your father!  I'm afraid that the time line just couldn't be mangled enough to fit into the timeframe.\"  I replied, hoping that I hadn't confused her any more than she already was.  But then I went straight on to add.  \"I will say though, that I'm sorry, because I would really love be the proud father of a daughter as beautiful as you are, Tara.\"\n\nTara blushed a little\n\n\"But... I... You...  How can you be so sure?\" Tara finally managed to ask.\n\n\"Tara, one look at you, tells me that you do not carry my genes.\"\n\nOkay, I was being a little more than economical with the truth there.  Tara looked so much like her mother when she had been the same age that no other features were apparent; except for Ottilie's.\n\n\"Ottilie yes!  You have your mother's eyes and you are definitely developing her fine figure, if you don't mind me saying?  Christ, Tara, you are the spitting image of your mother when she was your age.  But unfortunately there's nothing of me, or my family about you.\"\n\nWhich should be no surprise to anyone, because Tara could really have been mistaken for her mother's twin.  Wasn't that how I'd known who she was.... Sorry whose daughter Tara had to be, in the first place.\n\n\"I would suggest, Tara; that Bill Morris is your father.  I'm right there aren't I; your full name is Ottilie Morris?\" I asked her.\n\n\"How did you know that, mother told me that you left the country some time before she married Bill Morris?\"\n\nLets just say that I knew that Bill Morris was your grandfather's chosen candidate as prospective son-in-law, shall we; well before Ottilie and I stopped keeping company.  And your grandfather always has had the habit of getting his own way.  But isn't that a rather informal... disrespectful even, way to talk about your father?\"\n\n\"Some father!\"  She commented casually.\n\nI'm afraid that I failed to read any significance into Tara's comment, and let it slip right past me.  Bill Morris was no concern of mine and I was more curious as to what reason the child could have to think that I might be her father in the first place. \n\n\"Tell me Tara what in heavens name, gave you the idea that I could possibly be your father?  And why did you bother coming all this way down here to confront me about the ludicrous notion... you know nothing about me after all.  Come to that, how did you know where to find me anyway?\"\n\n\"Google of course, and your boat here!\"  She replied, \n\nI think I saw a hint of a smile, on what had become a very sad looking face.\n\n\"I Googled you on the Internet last week and up you popped, just like that.  Some of your passengers have some very nice things to say about you on their websites.\"\n\n\"I'm on the internet?\"\n\n\"Sure you are!  And some people have written all about how much they enjoyed themselves when you took them out on your boat.\"\n\n\"Well that doesn't say much; we put on an act for the punters.\"\n\n\"Okay!\" she grinned, \"Taylor Carson... Almost universally known around these parts as Carson.  You arrived in the harbour here about seven years ago on this boat.  After living on your boat for most of that first summer, you bought a derelict building beside the river; an old Victorian brickworks or something.  Anyway you lived on Quiet Times... moored to the brickworks quay, while you had the building repaired and converted into a cottage.  But it looks a little large to me, to be called a cottage.  You did some of the work on the cottage yourself, but a local builder did most of it.\n\n\"There's some conjecture about where you get your money from; it's generally agreed locally that the few charters you undertake would not bring in enough to run Quiet Times, let alone live on.  Consequently some people think that you're an eccentric millionaire; others think you won the lottery.  But maybe the one equals the other.\n\n\"You're generally well liked locally, and you are known for paying your bills promptly; but not for being extravagant.  You drink quite frequently, usually in one of three different pubs... two fishermen's pubs in town and one public house and restaurant that is over there, on the hillside; quite close to your cottage.  But you are not known to overindulge on alcohol.\n\nYou are single, but not celibate.  Rumour has it that you prefer one-night stands.  Most often your partners are visiting holidaymakers, or they come from amongst the seasonal staff who work in the local hotels during the summer months.  You appear to steer clear of any of the eligible females who live locally.\"\n\n\"Jesus Christ, you got all that from the Internet?\" \n\n\"No, of course I didn't!  I arrived down here a couple days ago.  I wanted to get to know something about who my father is today, before I set about meeting him; so I asked around town.  Once I'd explained to them that I was your daughter and that you probably were unaware that I even existed... and I'd showed them some photos of you and mother together... My resemblance to mother proved very convincing there, and you haven't changed very much; except for that beard.\"\n\nAs she was speaking Tara had reached for her jacket and retrieved an envelope from a pocket.  From which she extracted a few snapshots of her mother and I together when we were about Tara's own age. \n\n\"Anyway, having heard my story and seen those pictures, most people couldn't have been more obliging.  Oh, they all sing your praises by the way.\"\n\n\"Holy Christ, you've told everyone that I am your father?  But I'm not!  what gave you the ridiculous idea that I could be your father in the first place?\"  I insisted.",
        "That kind of disappointed expression returned to Tara's face again and she remained silent for a while staring down at the deck.  Then she looked up at me again\n\n\"Promise you will never tell, father?\"\n\n\"Stop calling me that, I'm not your father young lady.  Not tell who, what, anyway?\" \n\n\"Whom father!  My mother of course!  You promise that you will never tell her how I found out that...  Sorry, why, I thought you were my father.  Are you really so sure that there's no possible chance that you could be?\"\n\nConfusingly for me Tara was back to smiling at me as she spoke.  I kind-a got the idea it might have been because she'd been able to correct my grammar.  \n\nBut she didn't make a habit of doing so after that.  No bugger could do that, even if they wanted to; because it would probably prove to be a full-time occupation.\n\n\"Tara, I'm absolutely positive that there is not the slightest chance in hell that I could be your father.  But I can assure you that I'm deeply saddened by that fact; you are a most strikingly beautiful young woman.  Whom... I'm sure any father would be proud of!\"  I assured her.\n\nOddly I thought, Tara grinned back at me.\n\nHave you ever had the suspicion that someone knows... or thinks they know, something that you don't?  Well at that instant I got that suspicion about Tara.  However I knew categorically that I could not be her father; so... whatever the child thought she knew... I knew that she was wrong.  And I was just a little unsure how I was going to be able to let her down gently; if you get my drift.\n\n-----\n\nThe reason that I was so sure of myself, was because -- when I'd left the country for Canada some years before, I had not seen -- or had any... er intimate relations with \u2013 Tara's mother Ottilie, for the better part of eight months.\n\nWe'd been childhood friends and sweethearts on and off, since we'd first met at our primary school.  However as we grew into our teenagers, Ottilie's parents had made it painfully clear to us that they did not consider that I was suitable company for their daughter to be keeping; I'm sure you get the idea.\n\nIf I remember correctly, it was just after Ottilie's seventeenth birthday that they took positive action on the matter.  Of course it have might been that Ottilie's parents had discovered that our relationship had... well, moved onto a higher level.  Or at least they had suspected that it might do in the near future.\n\nWhatever, they set about separating us permanently, by shipping Ottilie off to some public school somewhere where I could not get in contact with her.  Their plan had worked.\n\nI was completely unaware that she was even going away to that school, until after Ottilie had gone.  The fact that Ottilie had kept that information from me had injured my pride and pained me very much.\n\nBecause I was aware of Ottilie's parent's disapproval of our relationship, it was no surprise when they kept me in the dark as to the school's name and location.  Effectively as far as I -- and all of our mutual friends -- were concerned, Ottilie had vanished from the face of the earth.\n\nBut rumour had it, that Ottilie had been sent to one of those exclusive Swiss finishing schools that you used to hear talked about at the time.  The rumour sounded about right to me, because -- in my considered opinion -- Ottilie's parents had always had delusions of grandeur.\n\nThe disappointment at Ottilie's sudden disappearance from my life had the immediate effect of leaving me kind of rudderless.  I really didn't know what to do with myself most of the time and turned into a bit of a loose cannon.  That led me to getting involved in a few ruckuses that I still can't fathom the reason for, and becoming reacquainted with the local authorities.\n\nI had no idea if I was on my head or my heels for a good few months.  Not knowing the what or the why of Ottilie's going seemed bad enough to start with, and then when I received no word... telephone calls or even letters from Ottilie... well, I began to get very seriously depressed as well as in trouble.  So much so, that my family began to get very worried about my mental health.\n\nIt was around that time that I first heard mention of a distant relative of ours in Canada, Uncle Percy.  Uncle Percy was childless and he had always been inviting any young male members of the family - who fell so inclined -- to join him out there and become a partner in his mining operation.  No one seemed to know exactly what doing so would involve, but it had always been assumed that Uncle Percy worked the mine himself and was looking for extra labour.\n\nEventually it was suggested that I might take him up his offer -- even if only for a short while -- to get away from things and my mind off of Ottilie.\n\nI declined the idea to start with, although I did discuss it with a few of my close friends.\n\nBut then rumours began to circulate that something was (and had been for sometime) going-on between Ottilie and a guy called Bill Morris.\n\nBill Morris was a local lad who had always been a near neighbour of the Thorns.  I knew that Ottilie had been friendly with him all of her life, but very few other youngsters I was familiar with, knew him at all.  You see, Bill Morris had attended public schools and he didn't make a habit of mixing with us hoi polloi when he was home during the holidays.\n\nLike all rumours, tracing the definitive origins of the ones concerning Ottilie proved to be impossible.  I know; my friends and I tried.  But it appeared that they nearly all -- and there were several variations of those rumours -- could all be traced back to the few local youngsters who could be classified as being friends or acquaintances of Bill Morris.\n\nThose rumours ranged from \"Bill and Ottilie are residing and studying at the same public school and having been dating each other.\"  Which I thought was vaguely plausible; but somehow didn't quite fit in with the Swiss finishing school scenario.\n\nTo \"Bill and Ottilie had got married in Paris and are living in France somewhere.\"  Which I found totally unconvincing.\n\nHowever there were several other rumours that suggested that Bill Morris was courting Ottilie, and which -- over time, having not heard from Ottilie myself -- I did find I was beginning to believe.\n\nThen came the bombshell, the announcement in the local weekly newspaper that William Morris and Ottilie Thorn were engaged to be married.  I didn't have to see the thing myself; the morning the paper was published my telephone nearly caught fire as one after the other, all of my friends called to give me the news and commiserate with me.\n\nWithout my involvement my parents made arrangements for me to fly over to Canada as soon as possible.  I believe they were hopping that I would have flown out of the country before Ottilie's wedding date was announced.  They didn't beat the announcement but I was gone before the wedding service actually took place.\n\nIt was on the first Saturday of that August, three days before I was due to fly board a flight to Canada, that I'd caught one last glimpse of Ottilie.  And by coincidence I was flying out of the country some four days before Ottilie's much-advertised nuptials with Bill Morris were due to take place.\n\nShe was out in town with her parents and prospective spouse that morning.  Actually Ottilie appeared to look directly at me for an instant, but gave no sign that she had recognised me.  Mind you, I was inside a passing bus at the time, so it is possible that she didn't actually see me.\n\nHowever, her father and Bill Morris certainly did spot me \u2013 or maybe even heard me shouting at least \u2013 and they had manoeuvred themselves to ensure that Ottilie did not get a second opportunity to spot me.  Regretfully I could not persuade the bus driver to stop the bus and let me off at that point in the High Street.  By the time I'd run back to the area where I'd seen them, they had all disappeared.\n\nFor all I know, Ottilie could well have been pregnant at that time, but from what I did see of her, there was no way in hell that she was eight months gone -- If you understand where I'm coming from there? -- when I'd last clapped eyes upon her.\n\nI suppose that you're wondering why I did not take \"The Graduate\" approach to the situation.\n\nWell, yeah I did think about it, but my airline ticket was paid for.  And after all, Ottilie had not written me even one letter in all the time she'd been away, or called me on the telephone to tell me that she had returned to the area.  Ottilie had known where to find me if she'd wanted to and she must have known that I'd had no idea how to find her.  And... I don't know.  Maybe I was sulking a little as well.  And maybe a little of the \"You've made your bloody bed girl.  Now you go lie in the bugger!\" Mentality has to be added into the equation as well.\n\nWho knows why we do anything when we're young?\n\n-----\n\nTara had fallen silent; I could almost hear the cogs grinding in her brain as she sat there thinking.  Then finally she said.  \"I discovered where mother hides her diaries and things.  In one of them...\" \n\n\"Woe-up there girl, you stop just there.\"  I butted in.  \"Are you telling me that you've been reading your mother's private diaries?\" \n\n\"Yes, I found them when I was nosing around, looking for stuff to take to grandfather's house.  Well, mother didn't actually keep a diary as such; she just wrote down her feelings about things that happened in her life in the back of some old school exercise books.  Clever really, she could hide them by leaving them in plain sight; who looks at old school books?\"\n\n\"Proud parents do!  Oh shit, I wonder...\" I was saying but Tara was still gabbling on.\n\n\"Oh I should imagine that she hid them better than that, when she lived with my grandparents.  Mother wrote a lot about when you and her were together at school, you know... and what you did after school as well!\"\n\nI wasn't so sure that I liked what I was hearing.  Especially if when added in the suspicion I had, that Ottilie's parents might possibly have come across those diaries.  That would explain their sudden determination to permanently separate us.\n\n\"Hold on, Tara!  You are telling me that Ottilie wrote some of those diaries or whatever, after we had left school, when we were at college? \n\nTara smiled, and nodded.\n\n\"Exactly how much detail did your mother go into?\"\n\nTara blushed a little.  \"Intimate and detailed, I'm afraid father!\"\n\n\"Very detailed?\" I enquired.  Letting the father comment slide for the time being.\n\n\"Very!\" Tara assured me, with a rather wicked grin on her young face.\n\n\"Oh shit!\" I said.  It was my turn to blush!\n\n\"Bouncer, it was obvious from those diaries that you and my mother were so very much in love with each other.  What happened, why did you break up?\"\n\n-----\n\nDamn it, I knew there wasn't a chance in hell that Tara had been pulling my leg about reading those diaries; when out of the blue like that she used my old nickname, \"Bouncer!\"  The name I was known by during my latter school and college years.  But no one had called me Bouncer in many years, by then.\n\nWhy Bouncer, well I was the guy who bounced the school bullies and anyone else who came on all stroppy, or tried to play the tough guy.  It wasn't that I was particularly good at fighting or anything like that, or even very tough when it came down to it.  It was more that I had always been able take a punch or two and still be around to deliver a reply.  \n\nYou've heard of boxers with glass jaw's who go down the moment someone lands a punch on them.  Well I was the opposite; I could take just about anything that was thrown my way and still be standing there hitting back.  I didn't always come out of it unscathed of course, but I was... nearly always, the last man standing.\n\nRegretfully my abilities to absorb so much punishment and then finish up the victor -- in fact, if not on points -- didn't do much for my reputation.  I was a pretty good scholar, but I became infamous for my fighting abilities.  By my teenage years I was on first name terms with most of the local constabulary and the majority of the local magistrates.\n\nAin't it funny, how some right little twerp of a kid, who goes around beating-up the littler kids all the time, goes crying home to mummy when he meets his match?  (Mind you, I've come across some adults who act the same way.)  Anyway I was up before the headmaster and then in Juvenile and latterly the Magistrates court, more times than I care to remember now.\n\nOf course I always had plenty of witnesses who would say that I didn't start the ruckus.  But unfortunately there were a lot of bullying types in the world, and only one of me.  Consequently it was my face that became familiar, and I got the bad reputation.  And somehow, picked-up nickname Bouncer along the way.\n\nBut I've digressed.  Tara had just asked me why her mother and I had stopped seeing each other.\n\n-----\n\n\"I really think you should ask your mother that question Tara.\"  I suggested.  \"Now slip this on, we're coming up to the mooring.\"  I said, handing her a life jacket; I still had a boat to get safely moored.\n\n\"I don't need a life jacket, I can swim!\" She retorted.\n\n\"So can I young lady; but what d'you think this thing is?\"  I said, opening my jacket and showing her the slim-line lifejacket that I always wear when on my boat.  \"If I can wear one so can you, we're going to change to the Rib in a minute.  Picking up the mooring and transferring to the rib can be a dangerous business.  Now please be a good girl and do as I ask.  What would Ottilie say to me, if you fell into the river and got drowned or something?\"\n\n\"She can't say anything.\"  Tara mumbled, as she took the lifejacket from me and began making a pig's ear of putting it on.\n\n\"Why can she not?\" I asked helping her sort the straps out.\n\n\"My mother is in a coma, she has been for almost a year now!\"\n\n\"Holy cow, what happened?  Was she in an accident or something?\"\n\n\"William Morris happened!  He turned up and beat her up... again!\"\n\n\"Oh my god, that's awful.  But wait a minute, lets get the boat moored and then you must tell me all about it.\"\n\nCutting the engine at the right moment, I managed to hook the rib on the first try and -- after pulling it alongside and passing the painter to Tara to hold -- I climbed into the inflatable to retrieve Quite Times mooring chain.  Then I made my way to her bow and made her fast.\n\n\"Again, you said.  How many times has Morris knocked Ottilie about in the past?\"\n\n\"Too many; more than I can count!  Mother divorced him years ago after the first time he put her in hospital.  But every time he gets out of prison, eventually he comes back and beats her up again; I don't think he's all-there!  Bill Morris seems to think that it's mother fault that he was sent to prison in the first place.\"\n\n\"Sounds like a complete nutter; I always did think Morris was a sandwich short of a picnic.  But your grandparents thought the sun shone out of his...  backside.\"\n\n\"I can assure you that my grandfather has changed his opinion of Bill Morris now.  Actually, granddad has changed his opinion about a lot of things... especially people!\"  She said, with an implied tone to her voice. \n\n\"I can't believe what you're alluding too there, young lady.  Although I can understand your grandfather wanting to castrate Bill Morris, if he knocked Ottilie about.  I'd have come and sorted the bugger out myself, had I known about it.\"\n\n\"I'll bet you would have too!\" she smiled,  \"But I'm not joking, Mr Carson.\"\n\n\"It's just plain simple Carson, Tara.  Or uncle Taylor if you want to be formal.\"\n\n\"Uncle?  I'd much prefer to call you, dad!\"\n\n\"Well I'm afraid that you can't do that young lady, because I'm not your father.  Look, just what are you doing here anyway, Tara?\"\n\n\"I came to get my father to come to town and talk to my mother.\"\n\n\"I thought you said that Ottilie was in a coma.\"  I figured I'd let the father bit slide again; for the time being.\n\n\"She is, but her doctor said that what she needs is for the people who love her... and whom she loves, to talk to her.  He says that that might help mother wake up.\"\n\n\"I've heard of the theory, but I really can't see how it would work.  Besides... although I did love your mother once, she ditched me for Bill Morris.\"\n\n\"My grandfather can have a very domineering personality when he wants to... Uncle Taylor.\"\n\n\"Don't I know it!\" I replied.\n\n\"Yes well, my mother isn't so strong-minded; you must have known that, as well?\"\n\n\"Yeah well, what her daddy wanted he usually got with your mother.  Except where I was concerned.\"\n\n\"So I understand.\"\n\n\"The ol' sod battled for years to get us apart and eventually he sent Ottilie away to some flash finishing school to get her away from me.  Unfortunately his plan worked, the next thing I hear, she was getting hitched to Bill Morris.\"\n\n\"Some flash finishing School!\" Tara commented with a strange tone to her voice and expression on her face.\n\n\"Well, it was a Swiss finishing school, wasn't it?\"\n\n\"Not exactly, no dad!  \n\nIt was proving to be a little annoying, but I let the \"dad\" bit go over my head yet again, because I was more interested in finding out exactly what Tara was trying to tell me. \n\n\"Can you recall when mother went away; or more importantly when she came back?\"\n\n \"I could probably quote you the exact date, well almost.  It has to have been about one month before I flew out to Canada.  I was due to go out there to work for a relative for a couple of years when I discovered that Ottilie had to be back home, although I had no idea where that was because her parents had moved.  Anyway I read the announcement of her impending wedding in the local newspaper.\"\n\n\"But what year.\"\n\n\"Ah now, let me think.  Dates and numbers aren't my strong point.\"\n\n\"Well, let's cut to the chase then, Uncle Taylor.  I can tell you that you flew out to Canada in late August,1996; exactly fifteen years ago next month.\"\n\n\"Yeah probably, that's about right.\"\n\n\"Well here's some news that might possibly surprise you.  I celebrated my fifteenth birthday on the third of this month... father!\"\n\nIt took second or two for the words Tara had spoken to sink through my thick scull.  So I sat staring back at the grinning child for god knows how long.\n\n\"Well?\" she demanded.\n\nMy mind was in turmoil; I was angry I suppose!  What man wouldn't be when he had just been given the information I had.  But I realised that there was little point in being... or showing that anger towards the child; she was only the messenger, after all.  And I knew that blowing my top was not the best way to go about building a relationship with anyone; let alone a daughter you had never known... no realised even existed.  And in the back of my mind somewhere was the suspicion that maybe I hadn't...  I don't know... asked all the right questions I suppose, before I'd shot off to Canada.  But hey, I had been just a snotty teenager back then.  Not a good excuse I know; but the best I can come up with.\n\nAnyway there was the chance that young Tara -- a teenager I'll add -- had...  well, got it all upside-down and backwards, if you get my drift.  Some teenagers do make a habit of getting hold of the wrong end of the stick.  In this particular instance, possibly a stick of dynamite!\n\n\"Are you sure?\"\n\n\"Daddy, I wouldn't be here if I wasn't!  When mother discovered that she was pregnant she made the mistake of confessing to her mother first; she thought her mother might be a little more sympathetic than she knew grandfather would be.  But my grandmother wasn't; both of them went ape-shit of course, and they promptly shipped mother off to an unmarried mothers home, a bit sharpish.\"\n\n\"Do those places still exist?\" I asked, not really knowing what else I was expected to say.  The full... implications of Tara's announcement had not fully sunk home at the time.  Actually I was still trying to get my head around all the misconceptions that had guided... and controlled the previous fifteen... almost sixteen years of my existence.",
        "\"They did sixteen years ago; well, one did at least!\" She assured me.  \"Mother told me once, that it was like being in a prison camp.  She said that although she'd tried, she could not get a message out to her boyfriend.  I knew that mother wasn't talking about Bill Morris by the way.\n\n\"Neither could she get out of that place herself; she tried doing that as well.  I wonder if we could sue them for false imprisonment or something?  Probably there's a statute of limitations or something now.\n\n\"Anyway the next thing that mother heard, you had emigrated to America.  So when William Morris asked her to marry him, she accepted.  Mother had no idea where you had gone, or if you were ever coming back.  I only discovered that you had returned to the UK a few days ago, through the Internet.\"\n\n\"I hadn't gone.  I saw Ottilie in town with her parents a few days before I was due to fly out.  Mind you, I'd already read about her impending nuptials with Bill Morris in the local paper.  And I weren't best pleased.\"\n\n\"Yeah I know that now, but mother still has no idea.  My grandfather admitted to me last week that he was a little more than economical with the truth concerning actual date you had left... were leaving, when he told mother you had emigrated.\n\n\"She never saw you in town that day, you know; but Granddad did.  He told me all about it few days ago.  Actually he said that they made damned sure that mother didn't catch sight of you that day, because they knew that she would never have married Bill Morris if she known that you were still in the country.\"\n\n\"Why would your grandfather come clean with you about all of this now?\"\n\n\"Because granddad didn't know how to find you in the first place, and even if he had known he couldn't come to find you himself, well not alone anyway.  He suggested that that might be tantamount to attempting suicide.  Granddad seems to be under the impression that you can be violent when you choose to be.  Mind you, he tempers that a little, by claiming that you are only violent towards people who... well, he said, asked for everything they got!  And he admitted to me that he has given you more than enough cause to want to kill him.\"\n\n\"He has done!  But I'm not a violent person by nature, Tara.\"\n\n\"I didn't think you were, I'm sure mother would have told me; she told me so much about her old boyfriend.  But I had to be careful.  That's why I wanted to talk to you first; before I proved to you that I am your daughter.  Just to make sure that you are the man my mother used to tell me about.  And the man I read about in her diaries.\"\n\n\"I'm still a little confused here Tara.  You said that your grandfather told you about what he did to keep your mother and me apart, why now?\"\n\n\"Well, you see father... mother is in a coma, like I told you.  But her doctor said that it's not a normal coma.  A-typical I think he called it.\n\n\"As I understand it, my mother is in a very deep sleep and the doctor said that she does not want to wake from it.  The doctor can't be sure but believes... suggested that she's possibly in a dream world and she likes it there; so she doesn't want to wake up.  I think I've got that right!  But he was probably simplifying things a little; he always treats me like a child, which I'm not!\"\n\n\"Oh my, my poor little Ottilie.\"\n\n\"Anyway... mother does mumble quite a lot sometimes; but you can't understand what she's saying most of the time.  Well, what she says usually does not make any sense anyway.  That is except for a couple weeks ago when grandfather swears blind that he heard her asking where Bouncer was.\n\n\"Something like that anyway, granddad was a little emotional when he told me about it.  My grandfather... my pillar of strength, broke down and told me that it was all his fault!  My mother was lying there in a coma because of his arrogant behaviour years before, in ignoring her wishes and deciding that he knew what was in the best interests of his daughter and grandchild...  Me that is!\"\n\n\"I kind-a gathered that, Tar... daughter.\"\n\nTara looked me in the eyes and smiled.  Then she came over, put her arms around my neck and kissed me on the forehead.\n\n\"Hi dad.\"\n\n\"Hello my daughter.  You do realise that I'm going to have some trouble getting my head around all this, don't you?\"\n\n\"It's to be expected. You had no idea that you had a daughter.  I've always known that I had a father out there somewhere, who wasn't Bill Morris. I just didn't know what your name was.\"\n\n\"But surely in Ottilie's diaries...\"\n\n\"Nope, you were only ever referred to in those diaries by three stars, mother trying to be secretive I should imagine.  And after she'd kicked Bill Morris out of our lives...  Well, you have to try to understand it from mother's perspective.  Mother had been told, by my grandfather that when you had learnt that she was pregnant with your child...  Well dad, Grandfather told her that you had run away to America, with your tail between your legs; instead of standing up to your responsibilities.\n\n\"Mother never could understand you doing that, by the way.  It confused her and caused her great anguish.\n\n\"All she knew for sure was... or maybe I should say that she believed, that you were not there anymore and that Bill Morris was.  So when he offered to marry her she accepted.  But she confided in me more than once after he had gone, that she'd had serious reservations about marrying him in the first place.  Unfortunately her parents kept on harping about me needing a father, in consequence mother made what she has always considered the second biggest mistake of her life.\"\n\n\"What was the first?\"\n\n\"I really wish you hadn't asked me that father.  And before I tell you, I must ask you to bear in mind that my mother did believe that you had deserted her in her hour of need.\"\n\n\"Oh, I see, but surely she didn't think that I could...\"\n\n\"Unfortunately mother did come to believe that you had.  What else was she supposed to think?  She did forgive you though, if that's any consolation.  I always thought you skipped out on us as well, until my grandfather broke down the other day and confessed all to me.  Had we been having this conversation a couple of years ago...  Well, I think we'd better not talk about how angry I would have been with you.\n\n\"Very often when the two of us were alone, mother talked about you... actually her one time boyfriend she always referred to you as; the great love of her life.  But she would never tell me your name.  Mother said that it wouldn't be fair on you, because you had probably married someone else in America and she knew that I'd go searching for you on the Internet.  So up until my grandfather told me last week, I only knew that you had been known by the nickname Bouncer.\"\n\n\"If your mother would not tell you my name, how did you work that out?\"\n\n\"Ah, right from when I was little, I realised that the name Bouncer had to hold some significance.  It doesn't take even a young child long to put two and two together.  Especially if, when her father and mother were arguing... Her supposed father... Bill Morris... was repeatedly referring to me as \"Bouncer's bastard.\"  He even did that sometimes just when he'd got drunk.  Which is not an uncommon condition for Bill Morris's to be in, by the way.  Anyway I had it sussed that he couldn't be my real father, before I can even remember.\n\n\"Actually that is why I investigated your drinking habits, by the way.  Sorry, but mother doesn't need another weirdo in her life.\n\n\"Actually I kind assumed for a long time that your surname had to be Bouncer or something like it.  Don't try doing a Google search on Bouncer by the way dad, you get millions of hits!\"\n\n\"You tried?\"\n\n\"Of course I did, I've been looking for my father for years!\"  \n\nSuddenly I noticed Tara shiver.\n\n\"Put your jacket on, you're getting cold; and besides we'd better get ashore before the sun goes down.\"\n\n\"Where are we going; back to town?\"  Tara asked over the noise of the outboard motor, after we'd pulled clear of Quiet Times.\"\n\n\"No, I thought we'd go to my cottage first, so that I can change; then we'll have something to eat up at the...  Hold on, if you've been down here long enough to snoop around and thoroughly vet me.  How did you get down here and where have you been staying?\"\n\n\"Grandfather drove me down, he and uncle George are waiting back at the hotel in town.  But I told them not to worry; all going well, I'd probably stopover at your house tonight.\"\n\n\"You better call the hotel when we get to the house and confirm those arrangements though.\"\n\n\"I'll use my mobile.\"\n\n\"No you wont, not down here anyway; you'll not get a signal.  So good old Frank brought his brother along did he?  I assume that you're referring to your mother's uncle?\"\n\nTara nodded.\n\n\"So Frank was coming mob handed, was he?  Taking precautions just in case I got all-unnecessary with him?  It's just what I'd expect of the old sod, but I wouldn't waste my breath on the bugger!\"\n\n\"I've always known him as Uncle George.  But he didn't come along to protect grandfather.  Uncle George is along with us to drive grandfather and me back, after you've punched my granddads lights out!\"  She grinned.\n\n\"Do what?\" I exclaimed, as I ran the rib up onto the riverbank beside the old brickworks quay that served as my landing point.  From there we could step onto some planks that allowed us to get ashore without getting caked in mud.\n\n\"Well grandfather says that he deserves anything that choose to dish out to him.  And he promised me that he won't take any legal action against you, if you do.\"\n\n\"I'm afraid I wouldn't trust anything that Frank Thorn said as far as I could throw him, young lady.  Anyway, I don't go around knocking old men about; no matter how much I believe they deserve it.  I told you, I'm not a violent person by nature.  Now you'd better get inside and call the old bugger, before he brings the ol'-bill down on me.\n\n\"And while you're at it, you'd better tell him that although I'd love too, I wont be breaking his neck.  But you can also tell him that I never want to... well; he is never to address me personally.  Anything he feels to need to discuss with me, will be said through a third party.  George would suffice, he weren't a bad old stick by my recollection.\" \n\nTara made the call, but there was nothing that Frank Thorn and I needed to discuss that evening.  Then after I'd showered and changed, my daughter and I walked up the pub to have dinner.\n\nWe didn't stay very long though; after we'd eaten we took a long walk through the trees along by the riverbank.  It was a whole new experience for me, strolling along with my daughter hanging on my arm, listening as she talked about her mother, and their life together.\n\nBack at my cottage, after a cup of tea, I showed Tara to one of the spare bedrooms and she helped me make up the bed for her.  Those spare rooms had never been used before, so it was quite an operation.  Then I offered her one of my clean tee-shirts to use as a nightdress, but Tara insisted on using the one I had been wearing that evening.\n\nIt's a little... I don't know... disconcerting I suppose you could say, when your brand new daughter insists in sleeping in the tee-shirt you've been wearing that evening so that she could enjoy your smell.  Actually the fragrance of my aftershave, I suspect.  And that isn't how Tara had put it, but it was in fact what she insisted on doing.  I was too new at this fathering lark, to know how to talk her out of the idea.\n\nDuring the night something woke me and when I went to investigate, I found Tara kneeling beside my filing cabinet in the darkened lounge.  She'd moved the lamp from my desk so that she could see what she was doing.\n\nI discovered that Tara was so absorbed in whatever she'd found, that she was totally oblivious to my presence until I was almost standing right over her.\n\nApparently not at all surprised or perturbed that I'd caught her snooping about in my private papers Tara looked up at me and smiled.\n\n\"I knew that you were still in love with mother.  You have many more pictures of the pair of you together than she does.  I couldn't find any old dairies though.\"\n\n\"That's because I've never kept a diary, Tara.  And you have to understand that those pictures are just fond memories!\"\n\n\"Don't be so defensive dad.  From what I've been hearing You only ever had one night stands, now that tells me something as well.\"\n\n\"That I'm yet to find a woman with whom I've shared the right chemistry, Tara!\"\n\n\"Oh yes you have, but she's lying in a hospital bed right now.\"\n\n\"Tara please go don't getting your hopes up.  Of course I'll go up there and do everything in my power to help Ottilie wake from her coma.  But when she does, please don't expect us to fall into each other's arms.  Dreams like that are what fairy tales are made of; they are not real life.  Possibly in her coma your mother is dreaming of the times we were together.  But when she wakes, she'll be in today's world, fifteen years later.\"\n\n\"She'll still be in love with you, I know it!\"\n\n\"Tara there's nothing else in there that will interest you.  Go back to bed now, please?\"\n\nAfter placing another kiss on my forehead, my child left me and went back up to her room.  I put everything back as it should be, and then returned to bed myself.\n\nThe next time I awoke, I was aware of the daylight trying to break through my bedroom curtains and some unusual pressure upon my chest.  I also discovered that I had more than a little difficulty moving my arms.  \n\nWhen I was fully awake I realised that the reason I could not move was that my daughter was all but lying on top of me, her arms entwined around my neck.  Albeit, she was on top of the duvet and I was under it.\n\nAs I struggled gently to disentangle myself from her, Tara awoke.  She lifted her head and smiled at me and then moving slightly kissed me on the forehead again.\n\n\"I really don't think this is appropriate way for you to sleep, Tara.\" I suggested.\n\n\"Why not?  I am your daughter, aren't I?  You have accepted that as fact now?\"\n\n\"Yes I have, but you are also your mother's daughter, in every respect and almost a young woman.  Daughters sleep in their parent's bed when they are little children, Tara.  They do not usually share their father's bed when they've reached your age.\"\n\n\"Yeah well, but we've got some catching up to do dad.  I've missed out on having a father up until now.  I intend to make up for lost time.\n\nTara meant what she said as well.  It was about all I could do to stop her sharing my shower with me that morning.  Christ, it takes some getting used to, remembering to lock the bathroom door every time you go in there.  Well, I had lived alone for many years and suddenly it seemed to me that wherever I went in the house that morning; Tara would very soon show up looking for me.\n\nGeorge Thorn arrived at the front door of my cottage uninvited at around eight-thirty, his excuse for calling was that he was delivering Tara's suitcase, which proved handy.  He wasn't invited inside because, frankly, I had no interest in talking to him or his brother.\n\nHaving heard and then seen him driving into my yard; Tara decided that it would be... more diplomatic, if she went to the door.  George also brought the news that he and Frank Thorn would returning up-country that day.  Tara must have told her grandfather that I'd agreed that I would go up to see if my presence... Well, the sound of my voice would have any effect on Ottilie.\n\nAfter George Thorn had left, Tara took her suitcase up to her room, then returned extremely quickly -- for a member of the female gender -- looking more alluring than ever dressed in fresh form hugging jeans and a remarkably tight jumper.\n\nFrom a father's point of view \u2013 especially one new to the job description \u2013 excessively form hugging and too damned tight!  But I figured I'd better not voice my concerns at that early stage in our relationship.  Well, I had missed out on fifteen years of training, hadn't I?\n\nTara stood there for a few seconds, I think enjoying my stare.  Then she crossed the room and putting both arms around my neck kissed me; on the cheek that time.\n\nI figured that it was about time I returned the complement, or the child might start to develop a complex or something.  So taking her head gently in my hands I -- tentatively -- kissed her on the forehead.  That brought the biggest smile I'd seen thus far to Tara's face and she hugged me so tightly that I could hardly breathe.\n\nIt took me far longer to prepare for my unexpected trip up country than I'd thought it would.  Besides packing my gear, I had to call numerous people to postpone various appointments and find a couple of the lads to take on the bookings I had for Quiet Times.\n\nWhat made it more of a problem was that I had no idea how long I would be away.  So other friends had to be roped-in to keep an eye on the boat and the house.  And of course -- as briefly as I could -- I had to repeatedly and explain why I was going.\n\nFinally I remembered to call Mrs Clegg my cleaner, and tell her that I wouldn't be around for a while.  Regretfully Maud Clegg -- as I had feared she would -- wanted full chapter and verse.  That call took far longer than I'd hoped it would.  However I was sure that on my return, half of Cornwall... the other half \u2013 everybody that Tara hadn't already spoken too -- would know that I was now an unmarried parent.\n\nIt must have been almost twelve o'clock before I could finally lock the front door.  Tara had walked over to the old \u2013 battered and very muddy -- SWB Landrover pick-up that I use as a day-to-day run-around.  Having dropped her bag in the back, Tara was in the process of trying to persuade the passenger side door to open, when I redirected her to the garage.\n\nWith a shrug, she retrieved her bag and carried it along after me.\n\n\"A Range Rover!\" Tara exclaimed, as I'd opened the garage door.\n\n\"Yeah, I don't use her much.  The old Landey does a far better job of clearing the Emmets from the middle of the narrow lanes down here.  That mangled front end hers scares the life out the buggers.\"\n\n\"Emmets?\" Tara queried.\n\n\"Yeah Holidaymakers, they're as numerous as ant's down here in the summer.  And an Emmet means an ant in this part of the world.  Probably old Cornish.\" \n\n\"Anyway the Rangey here, don't get used much; so a nice run up country wont do her any harm.  It's a little more comfortable as well.\"\n\nOn the drive out of Cornwall and across a good part of Devon, Tara didn't say much, probably because she had music blasting through those earphones she had on.  But I was aware that she kept looking across at me and I have to admit that I kept glancing across at her as well; not the safest way to drive.  I know I keep saying it, but I was still getting used to the idea that the angel sat beside me was... well, of my own issue.\n\nWe were passing the Tiverton turn I think, when I was jogged from my musing by Tara saying \"Da---ady?\"\n\nI'd overheard the word being pronounced in the same way so many times before -- by the punters on Quiet Times, children -- that I instantly recognised that it was the precursor to a request that was about to flow from my daughter's lips.\n\nIt felt really strange to hear myself answering, \"Yes sweetheart!\"\n\n\"When did you come back from America?\"\n\nActually, I lived in Canada, Tara.  And I came back... Oh must be almost eight years ago now.  I'd bought Quiet Times over the Internet from some guy in Maidstone.  After spending the winter months sorting her out at a boatyard on the Thames; I set out to circumnavigate the United Kingdom.  Cornwall was as far as I got.\n\n\"What did you do in Canada?\"\n\n\"Ah now, that was some party!  Turned out that my Uncle Percy was a bit of a nutcase.  Well, a little eccentric to say the least.  He lived, literally, in the middle of nowhere, really out in the back of beyond, the quickest and easiest way to get in and out, was to fly in a floatplane in the summer, ski-plane in the winter.",
        "\"But Percy didn't live a Spartan life.  He had the biggest log cabin that I've ever seen.  With air-conditioning, and central heating for the cold winters; it had its own generator and everything.  Fuel and supplies were trucked regularly during the summer months by a couple of real characters.\n\n\"Percy and I were looked after by two very attractive young women who did all the house keeping and cooking.  It was all an act to keep Percy happy, but the two girls were supposed to be Native American Indian.  Percy always kept harping on about Canadian heritage and that kind of thing.  They both had long black hair and fairly... well dark complexions; but I happen to know that one of the girls was Mexican and the other originated from Eastern Europe somewhere.\n\n\"There were several guy's who I think were real Indians, they looked after the stock that I rarely clapped eyes on, unless I was out riding in the summer.\"\n\n\"Horses?\"\n\n\"Yeah, or one of the trail-bikes.  There were some of those skidoo things for the winter as well.  But I preferred to stay hunkered down in the house during the winter months, it got bloody cold over there in the winter.  Snow ten feet deep and more!\"\n\n\"You liked it there though?\"\n\n\"Loved it, but you never saw a soul.  The nearest neighbours lived miles away.  I think I only met them a couple of times in all the time I was out there.\"\n\n\"What about the miners, surely someone had to work the mine?\"\n\n\"Ah now, the mines were hundreds of miles away.  Uncle Percy owned the land and had the rights; but some big conglomerate did the actually mining.  Percy got a healthy dividend on every ton of ore they extracted.\"\n\n\"But I thought you went out there to help in the mine?\"\n\n\"So did I, when I went out there.  I was expecting to be working underground and digging the stuff out of the ground by hand.  But it appears that my eccentric great uncle, several times removed, had really been looking for an heir and not... as he used to put it, god rest his soul, a freeloader.  On my arrival I discovered that Uncle Percy was the last leaf on the Canadian branch of my... our family tree.  He'd inherited the mines, the ranch and things as his relatives died off one by one.\n\nBeing unmarried and without issue...\" \n\n\"Issue?\" Tara queried.\n\n\"He had no children of his own, that he knew of, Tara.  Anyway, that left him with the problem of who to bequeath his assets to.  He wanted them to go to someone who had the same Carson blood running in their veins as he had.  Percy was into that kind of thing.  He said he'd been looking for someone who shared the quest for adventure, living off the land out in the wilds.  Well, eventually he got me!  Not the best of deals, but Percy appeared quite happy about it!\n\n\"When he'd contacted my family years before to invite any of my young cousins who craved some adventure and excitement in their lives, to go out and join him.  Percy had painted a picture of hard work and Spartan living.  In fact, I did almost nothing at all while I was out there, except live in isolated luxury and enjoy myself.  Very isolated luxury, but Mina and Totto were always there as well and they weren't much older than I was.\"\n\n\"The two housekeepers?\"\n\n\"Yeah... the housekeepers.  They were company of sorts.\"  I assured her, remembering exactly whom I was relating the tale too.\n\n\"So I assume that your uncle must have passed away and that's why you came back to the UK.\"\n\n\"Spot-on Tara!  Canada was very nice, but I prefer... Cornwall actually.  Only I didn't know that when I did come back, I just stumbled across the county.\n\n\"In his will, Percy bequeathed Mina and Totto a lump sum each, invested wisely I believe; the interest it makes should keep them comfortable for the rest of their lives.  And I got the rest of his capital and receive the dividends from the mines.  The hands got the ranch and the cabin to share between them.  I'm not excessively rich, but I'll get by.\"\n\nI was being a little less than frank with Tara there.  I've seen the effect overindulgence financially can have on some people, especially children.  I'd decided that whatever happened I'd make sure that Tara would get everything she needed in the future; I'd make sure of that.  But I had no intention of spoiling the child, if I could help it.\n\nThree hours after we'd left my home in Cornwall I parked the Range Rover in the hospital car park and my daughter led the way to Ottilie's room.  Tara entered first alone, to ensure that her grandfather was not present.\n\nTara discovered later \u2013 from a nurse -- that her grandfather had seen us crossing the car park from Ottilie's hospital room window and promptly made himself scarce.  But before going he had informed the doctors and nursing staff that I was coming, and told them that I should have unlimited access to Ottilie and be advised and/or consulted about her care in the same way they did himself.\n\nOttilie did look a little different than I remembered her; but she was some sixteen years older, so that was not really a surprise to me.  She was just as beautiful as she'd ever been.\n\nHowever almost immediately I discerned a couple of scars on her face that should not have been there.  No one said, but I assumed that they must have been the result of Bill Morris' actions during the previous fifteen years.\n\nI made a mental note to find the bugger after he was released from prison and extract my own personal reprisal for those blemishes.\n\nNow if you thought -- like I think my daughter might have done -- that there was going to be that Snow-White scene, where the handsome Prince swept in and awoke his sleeping beauty with one kiss... Well you got it wrong!\n\nI did gently introduce myself to the comatose Ottilie that day and I kissed her on the forehead, twice.  Once, shortly after we arrived and a second time just before Tara and I left.  But Ottilie did not stir a muscle all the time we were in the room.\n\nExcept for the fact that we could see that her chest was rising and falling to prove that she was breathing unassisted; Ottilie might well have been dead for all I could tell.\n\nTara was well-versed in the procedure and quite blas\u00e9 about it, but I had to learn the art of talking to a comatose patient.  Eventually -- after listening to Tara at work for a while -- I realised that one has to have a one-sided conversation with the patient.  Of course some people would probably find it far easier to get the hang of than I did.  You should not talk to yourself (which I'm sure we all do); you have to talk to the patient.\n\nDuring our visit a doctor came in to see me.  He gave me chapter and verse on Ottilie's condition, going into minute detail.  I'll be honest, besides learning that Bill Morris had fractured Ottilie's skull in several places and the doctors appeared to have been surprised that she'd survived the attack.  I'd got more information -- that I could understand anyway -- out of Tara's explanation.\n\nOne thing he said that did register though, was that they had no idea how much long-term brain damage had Ottilie incurred.  The guy implied that Ottilie -- if she ever did regain consciousness -- might be just confused for a while, at one extreme; or her brain function could be seriously impaired, at the other.\n\n\"We'll only know what the scenario is going to be, when and if she does regain full consciousness!\" The doctor said.\n\n\"By full consciousness, do I take it that she...\" I began to asked\n\n\"Oh yes, several times we thought that Ottilie was about to regain consciousness, but then she relapsed into deep coma again.  She can become quite vocal on occasion.\"  He informed me.\n\nFrom the way he had phrased it, I got the impression that it was when Ottilie did do her muttering act that I... everyone was supposed to... well, try to talk her into coming back to us.\n\nListening to two people talking at the same time is not a strong point of mine.  But as the doctor was speaking to me \u2013 and possibly the reason that I didn't understand half of the medical gobbledegook he had sprouted -- Tara had been relating to her mother, her recent adventures in Cornwall.  How she'd successfully tracked down her father, and all about the ocean liner called Quiet Times he owned and the mansion that he lived in.  She even mentioned my Range Rover and added a vivid description of the old Landey.\n\nBut what really caught my attention was when I heard Tara say.\n\n\"Daddy's still in love with you mother, you really need to come back to claim him now.  Before he starts to think that you don't want him again!\"\n\nShould I have said something to Tara about it later?  I don't know!  By the time the doctor had left I figured it was too late anyway.  Whether Tara gave her mother the same speech subsequently when I was not within earshot, I have no idea.  I didn't hear her repeat it, if she did.\n\nMy daughter and I had our first... disagreement as we left the hospital that day.  Tara wanted me to stay in Ottilie's house; back to where she implied, she was intending to move to be with me.\n\nBut after the previous nights experiences, I insisted that she remained living at her grandfather's house.  I figured that I needed a lot more time, to ease myself into this daddying lark.\n\nOh by the way, somewhere along the line I'd come by the knowledge that Tara's grandmother... Ottilie's mother, had passed away several years before.  Under what circumstance she had died, I know not and I have never enquired.\n\nWhatever, Tara and I exchanged a few heated words, before I reminded her that I was her father and told her that she should humour me.  But I added the bribe that I would take her out for dinner later that evening.\n\nHowever Tara did insist on coming to the hotel with me while I booked in.  Then I dropped her at her grandfather's house before returning to the hotel to wash and change.  As I entered the hotel foyer on my way to collect Tara for dinner, I found her already there waiting for me there.  She had talked her grandfather into dropping her off on his way to the hospital. \n\nWe enjoyed a leisurely meal together, then I dropped her back at her grandfather's house before returning to the hospital myself.  Tara living with the old sod, turned out to be useful in a way; because I knew that if his car was there, then it was odds-on that he wouldn't be at the hospital.  I really was not looking forward to our first physical confrontation; I feared that I might do something that would shame me forever.\n\nOver the next few days and weeks, my life fell into a rough routine.  Up for breakfast around eight AM.  At the hospital just after nine where Tara would already be in her mother's room.  Tara and I would have lunch together, then around three I'd drop her back home.  Why three o'clock?  Because that was when Tara's grandfather would take over.  During the evening Tara and I would eat together and I'd usually drop her home again before returning to the hospital for the night shift.  I'd usually leave to go back to my hotel around four in the morning, although sometimes I'd pass-out in the chair beside Ottilie's bed.  The nurses would never wake me unless they wanted me out of their way for some reason.\n\nThe first thing of real significance that occurred was while Tara and I were sitting there with Ottilie one morning a week or so after I'd got up there.  One of the nurses came into the room and attracted Tara's attention by calling her Miss Carson.  This made me look up and I immediately noticed that both the nurse and Tara were grinning back at me.\n\n\"What's so funny?\" I asked.\n\n\"Oh Miss Carson!  Thinks it's terribly funny that you haven't noticed.\"  The nurse replied.\n\nBecause the nurse had repeated it, it struck home.  \"You mean Miss Morris.\"  I told her.\n\n\"No she means Miss Carson, dad.\"  Tara replied, \"I've had my name changed by deed pole.  Well to tell you the truth grandfather organised it for me.  Now everyone will realise who my father is and we shouldn't get any more of those strange looks.\"\n\nI hadn't noticed any strange looks.  But perhaps I'm not as observant as my daughter.  Or maybe I didn't dash around like a dervish introducing Tara to everyone I vaguely knew that we happened to run into.  Literally anyone Tara could think of an excuse to introduce me to, to be precise.\n\nA week or so later, when the time came for Tara to return to school for the autumn term.  She even wangled it for me to go to her school one morning and be introduced to her teachers so that they could inform me of her progress.  I had never had the opportunity to attend any of the school open evenings.  Anyway, another new experience for a totally unprepared parent.\n\nIt appeared that most of her teachers were fully aware of the circumstance of my sudden appearance on the scene and didn't appear at all phased by Tara's change of surname.  Neither did any of Tara's school friends she introduced me to when the opportunity presented itself.  I was finding everyone's reaction that morning quite confusing until Tara led into her English teacher's classroom.\n\nTo my complete astonishment Mrs Carter turned out to be Sylvia Carter one of Ottilie and my childhood friends.  Much to my consternation and the amusement of her class, and Tara.  Sylvia she didn't formally shake my hand as Tara's other teachers had done; Sylvia embraced me, kissed me on the cheek, and addressed me as Bouncer.\n\nShe further embarrassed me by announcing to her students -- I suspect aimed at the more unrulier of them -- that as a young boy I had gained a reputation for teaching ignorant fellow pupils a few manners and how they should behave in the classroom.  That probably explained why I'd never found myself getting expelled from school for fighting.\n\nIt soon became obvious to me that Sylvia, on hearing of Tara's name change, had put two and two together and promptly briefed Tara's other teachers on the full situation in the school staff room.  I didn't mind that really, because it had saved me from a lot of repetitive and unnecessary explanations that morning.\n\nAfter singing my daughter's praises, and assuring me that Tara was a model student.  Sylvia suggest that we should have dinner together one evening; when -- she added -- she would be able to reintroduce me to her husband; another of my old school buddies. \n\nIt was painfully obvious to me that Sylvia and Ottilie had not been on good terms when they'd last met, probably at a school open evening.  I came to that conclusion, because Sylvia did not mention Ottilie by name, habitually she referred to her as Tara's mother.\n\nI had had some experience with a few one parent, divorced passengers on Quiet Times.  In my experience one parent referring to their ex-spouse as the child's mother or father, tended to indicate a certain amount of animosity.  Sylvia having grown up, as I had, with Ottilie; I figured that something had to have driven a wedge between them.\n\nOf course at the time I wasn't savvy enough to realise that that wedge would turn out to be me.  But I'll come to that shortly.\n\nA couple of days later Sylvia got in contact with me to invite me out for a meal with some of our old friends.  In fact I found a brief message waiting for me at the hotel reception desk when I arrived back there at five AM that morning.  The message made it patently clear that the invitation was for me and that Tara was not included.  I sort-of figured that was for teacher student reasons, but that assumption was subsequently proved wrong\n\nThe night of the meal, I walked into the restaurant to find that almost the whole gang of our old school friends were present; including their respective spouses, many of whom I did not know.  \n\nIntroductions were made all round and then getting on for thirty of us sat down to eat.  During the meal I was questioned about all my experiences in the wilds of Canada.  They got the exaggerated flowery version.  Once again it became obvious that everyone was purposely avoiding mentioning Ottilie.\n\nAs we adjourned to the bar, I realised that there was hidden agenda behind the evening.  Sylvia and Mavis Burton (nee Crouch) steered me to a table at the far end of the small bar.  I was all but pushed in behind it, then all of the girls and a couple of my old school mates seated themselves around the rest of the table as best they could fit in.  All their spouses headed for the other end of the room, as far away as they could get.  They only came near to keep everyone around the table's glasses well filled.\n\n\"Okay Taylor what's the real story!\"  Toby, One of my old mates asked.\n\n\"I'm Tara's father and that's all there is to it!\"\n\n\"No, come on mate!  What are you doing back here, running around her; after what Ottilie did to you?\"\n\n\"She ditched you without a word of explanation and then decided to marry Bill Morris and made him the father of your child.\"  Sylvia joined in.  \"That's not just callous, that's evil... calculated cruelty.  We know that you didn't know about the child when you left, but Ottilie ditching you without explanation and marrying Bill Morris was what drove you into leaving the country in the first place.\"\n\n\"Ah now, for many years that's what I thought as well.  But then my daughter tracked me down.\"\n\n\"Yeah well, learning that you did have a child that you didn't even know existed... I would have thought that would have made you even angrier, I know that I'd have blown my bloody top.\" Toby replied.\n\n\"Funny thing Toby.  The news that I had been a daddy for years and hadn't known, did piss me off some.  But then, when you've got an angel like my Tara bringing you the news.  Well, it kind-a tempers that anger a little.  Then she told me that Bill Morris had been knocking Ottilie about... well I think a lot of my anger transferred onto him.  And Ottilie's father of course, he was behind everything that happened back then, as someone sitting around this table well knows.\"\n\n\"What's that supposed to mean?\"  Toby asked.\n\n\"Well Toby.  My daughter can be one hell of a chatterbox when she gets started.  And it seems... and I'm not completely sure why, that Frank Thorn confessed all to Tara a few weeks back.  Following something that Ottilie had apparently muttered during one or her vocal sessions.  And guess what, I came to the conclusion that someone sitting around this table, related the story to Frank Thorn that I might be thinking about heading to Canada for a few years; well before I'd actually made up my mind to go.\"\n\n\"But it was common knowledge that you were going.\"  Sylvia pointed out.\n\n\"It was Sylvia, but only for less than a month before I went.  My family wanted me to go, but I hadn't agreed to, until that announcement that Morris and Ottilie were engaged appeared in the local paper.  And my Tara insists that her mother never agreed to marry Bill Morris until after she'd been told that I had already left the country.  Now, besides my family, the only other people who were aware that I was even contemplating the trip are sat around this table this evening.  So I have to ask which of you...\"\n\nI was interrupted by Mavis Burton... um, well, her husband Peter who had been seated beside Mavis had suddenly disappeared backwards, crashing to the ground.  I hadn't been watching them, but there was no mistaking the fact that Mavis had to have... well, thumped him.  And I'll point out that Mavis -- had she been a boxer -- would have been fighting in the heavyweight class.  Super-heavyweight, more like; if you get my drift?  Mavis had always been, what is known in polite society, as a big girl!\n\nYou bastard, Taylor was our friend!\"  Mavis shouted down at her dazed and prostrate husband.\n\nPete Burton made no attempt to get up.  I think he was utterly shocked by his wife's sudden outburst.  As we all were.\n\nMavis looked around the table and then said.  \"Well... didn't we all wonder how Peter swung that bloody apprenticeship at Ballard's.  Christ nearly all the boys went after it, and they took Peter?\"",
        "\"Well, Pete was never the brightest light in the class, but he weren't exactly dumb, Mavis.\"  Jimmy Morgan replied.\n\n\"But you did wonder why Ballard's picked Peter over the likes of... well, yourself even?  You went for it and so did Mickie there.  I can remember you bitching about it at the time, saying that you were both better qualified and better suited to the job than Peter was.\"\n\n\"Yeah, but what does that prove, Mavis?\"  Jimmy asked\n\n\"Nothing in itself.  Until Taylor tells us that someone was spying on him for Ottilie's parents and you add in the fact that Peter's father was a member of the golf club.  You know thinking back I'm sure I saw Ottilie's dad playing golf with Peter's father more than once.\n\n\"But what's that got to do with Ballard's?\"\n\n\"Frank Thorn is... well he was, a director at Ballard's.\"  I informed everyone.\n\nAll eyes moved to Peter Burton who was still sat in the chair, which was lying flat on its back on the floor.\n\n\"I didn't know what was going to happen!\" He exclaimed, old man Thorn just asked...\"\n\n\"Shut up, Peter I'm not interested!\" I said, \"Just get the hell out of here, will you?\"\n\nPete struggled up and set the chair back on its legs.  He didn't reposition it because one of the other guys snatched it from his hand and took the vacant slot beside Mavis.\n\n\"May I stay?\" Mavis asked.\n\n\"Course you can, gorgeous!\" I replied.  I had no beef with Mavis.\n\n\"Oh this is awful, I feel so ashamed of myself.\"  Sylvia said, taking me somewhat by surprise.\n\n\"Why, what did you do behind my back, Sylvia?\" I found myself asking.\n\n\"Oh god, nothing to you Taylor.  But I've wronged Ottilie something rotten.  We all have!\"\n\n\"How?\"\n\n\"By blanking her, we all did, didn't we?\"\n\nNods and murmurs of embarrassed agreement were returned from around the table.\n\n\"Taylor when you went off to Canada, we blamed Ottilie for you going.  We had no idea that she was pregnant with your child.  Well she must have had Tara by then, only we didn't know it.  But we all thought... as you did, that Ottilie had been two-timing you with William Morris.  We didn't know how, when or where, but it seemed obvious to us at the time.  Hey, it weren't as if any of us were welcome at her house, anymore than you were.  We figured that she had had plenty of opportunity, if you know what I mean.  Then she goes off to that exclusive private school and...\n\nThat exclusive School Sylvia, turns out to have been a bleeding unmarried mothers home.\n\n\"Shit.  I should have worked that part out at least.  Christ I've been teaching Tara English for three years, she's just too damned old to be... Well, I suppose she could have been Bill Morris' child.\"\n\n\"Bill Morris is not Tara's father, of that I'm sure.  I'm her father!\"\n\n\"I'm sorry!  But why are you so sure?\"\n\n\"Tara told me and I believe her.  Besides she found Ottilie's diaries; apparently in them Ottilie wrote all!\"\n\n\"Including Sam's seventeenth birthday party?\"\n\n\"Including Sam's party!\"\n\n\"Oh bugger, I bet it was embarrassing when Tara told you about that.\"\n\n\"Tara's very diplomatic, but the little tyke knows how to hint at what she has read.  Now let's get back to Ottilie herself, may we?  You were saying...\"\n\n\"Yes well, we thought that Ottilie had done the dirty on you, so we all made a pact to blank her if and when we ever saw her again.  Not that any of us did see much of her, I don't think.  Until Tara started at the school that is.\"\n\n\"Yeah Tara told me that Ottilie and Morris lived out Faversham way until she separated from him.  Morris was a piss-artist and knocked her about a bit.\"\n\n\"We read about that in the local paper; they said that he nearly killed her.  Tara disappeared from school for awhile and the head told us not to question her about it when she came back.\"\n\n\"So what happens now?\" Mavis asked.  \"Do we all go and apologise to Ottilie when she wakes up?\"\n\n\"No, you go tomorrow while she's still in her coma.  Well, some of you do at least.  Look guys and girls the quacks reckon that Tara needs to be talked to while she's still unconscious.  Kind-a reminded of her life when it was good.  They say that it might help her come out of it.  That's why I've come up here and I want you guy's to help in... well, we'll bombard Ottilie with memories of when we were all together; twenty-four hours a day.  Or as much as we can anyway.\"\n\n\"All the embarrassed faces around the table had disappeared, everyone was looking and sounding enthusiastic about my plan, even though some of them were confused about what I had been saying.  In short, utter chaos, as those who did understand explained to those who didn't; while others appeared to be sorting out a rota.  I'm afraid I couldn't follow who was saying what to whom!\"\n\nThe party broke up well after chucking-out time, the restaurant staff were looking quite peeved when we finally dispersed.  I suppose discussion of who would be visiting Ottilie and when, must have gone on all evening, but the girls didn't think I needed to be included in their rota.  Some of the guys were roped in as well, but it was considered that I'd be around anyway.  Consequently I spent the rest of the evening relating more tales of my adventures in Canada and Cornwall.\n\nI really don't think that I... we... our old gang that is, were on the hospital managements' favourite people list.  Because of Ottilie's unique condition, all visiting hour restrictions had gone by the wayside months before I arrived on the scene.  After that evening though, the two visitors to a bed restriction was ignored as well.  And Ottilie was moved to a more secluded room pretty smartly.\n\nWhen I arrived at the hospital the next morning, I found three of the girl's -- including Mavis Burton -- sitting around Ottilie's bed.  I was graciously given access so that I could kiss her on the forehead as I did every time I visited Ottilie.  But then I was pushed aside, as the girls carried on reminiscing about some outing they'd all been on together.  I learnt some things that morning, I can tell you!  Actually I learnt a lot of things over the next few weeks that I'm sure should never have seen the light of day again.\n\nAll three girls had been replaced by other old friends by three o'clock when I was due leave owing to Frank Thorn's imminent arrival.\n\nBut a guy called John something-or-the-other, a serving police officer (never a close friend of mine, but he courted one of the girls for a bit), stuck his nose in while at the hospital on official business.  He talked to me about Bill Morris and said he'd try to discover where he was incarcerated and when he was due to be released.  John did not enquire why I would be interested in such information.\n\nAnd one of the guys -- who's a postman -- joined the group around the bed when he'd completed his rounds for the day.  Christ, I really couldn't keep up with those girls myself.\n\nThat was the measure of things for the next couple of months.  Some of our old friends, seemingly being beside Ottilie's bed talking to her, almost twenty-four hours a day.  I mostly did the night shift twelve till seven AM alone, getting out a bit sharpish when I saw Frank Thorn walking across the car park with Tara.\n\nI'd have breakfast in the caf\u00e9 down the road and then take Tara on to school, before returning to my hotel to get my head down for the day.  In the evening I'd meet Tara at the hospital and usually take her somewhere to eat.  Sometimes we'd eat at Sylvia's or one of the other girl's houses, and then I'd drop Tara home and return to the hospital.  Although I wasn't what you might like to describe as \"on shift\" until midnight.\n\nThere was some excitement, like the first time Ottilie returned to one of her states of higher consciousness and started babbling.  The girls by her bed thought that she was awakening and a couple of them dashed outside to call everyone on their mobile phones.  It was pandemonium in that ward when a dozen or so of our friends (including me) came dashing in.  Only to be let down when Tara informed us what had actually happened.\n\nI must say, that I thought that those periods of higher consciousness were getting more frequent during November and early December. But the medical staff -- whom I assume kept records -- insisted that they weren't when you averaged them out.  Remember that Ottilie had been in her coma for almost twice as long as I'd been around and the girls had been visiting.\n\nIt was a Sunday about ten days short of Christmas.  I have no recollection of why now but Frank Thorn wasn't there that day, so I was at the hospital mid afternoon along with Tara, Sylvia and a girl called Joan Harper.  I remember it vividly; Sylvia and I were sat on one side of Ottilie's bed, Joan and Tara on the other.\n\nThe stories of the gang's miscreant behaviour in our younger days having been repeated so often that they were driving us all nuts.  Even though I found it fascinating how different people recalled remarkably conflicting versions of the same event, interesting as well when two of the girls disagreed on a point or two.\n\nAnyway I was thrilling my audience of four by relating an incident I'd had on one of Quiet Times' charters.  Where some guy was so intent on getting a close-up of a Basking Shark he lent over the gunwale too far, and -- when a swell caught Quiet Times \u2013 he went base over apex into the drink.  Discarding his camera the guy screamed for help, apparently believing that all sharks were of the man-eating variety.\n\nI'd better mention that Basking Sharks are filter eaters and only consume plankton; just in case, like the poor guy in the drink that day, you didn't know.\n\nHaving finished my tale, I headed off toward the visitors facilities to empty my bladder.  I will admit that I'd had partaken of a little light liquid lunch in a nearby public house, with Sylvia's husband Mark.  For some reason that little room, the only one us visitors were supposed to use, was right down at the entrance to the ward.\n\nAs I exited the ablutions the first thing that grabbed my attention, was a red light flashing urgently over the door to Ottilie's room.  Then two nurses appeared and started hurrying along the corridor pushing the crash wagon between them.  I'd seen it often, parked opposite the nurses' station.  A small trolley, that had a defibrillator and some other miscellaneous medical equipment sat on top of it. \n\nI found that I couldn't move, I seemed to be rooted to the spot as other nurses and a doctors rushed passed me all heading in the same direction; towards Ottilie's room!\n\nThen to my surprise and confusion several of the nurses backed out of her room again and stood staring back into it through the open door.  Eventually one of the nurses turned to look down the corridor at me, and started frantically signalling to me to join them.  Then Tara's face appeared around the doorframe and she started waving as well.\n\nI knew what the Crash Wagon would have been needed for and -- to be frank with you -- it had frightened the crap out of me!  But the obvious grin on Tara's face was implying the opposite of what I'd at first feared.\n\n\nEnd of Chapter 01\n"
    ],
    "authorname": "Denham_Forrest",
    "tags": [
        "dreams",
        "lost love"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/in-dreams-ch-01"
}