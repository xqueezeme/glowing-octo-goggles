{
    "title": "The Devil's Inheritance Ch. 05",
    "pages": [
        "The neighbor's rooster crowed distantly over the hillside, waking James. He looked out the window as pink clouds appeared on the horizon, then back to the crook of his right arm where Sophia was nestled, head resting on his chest, blonde curls spilling over his arm. Her leg was cast over both of his, and her arm lay on his chest, her hand curling over his opposite shoulder.\n\nJames smiled. She looked angelic there. He had slept fitfully all night thinking about the letter, which was now tucked safely in his waistcoat pocket by the wardrobe. Surely she had at least guessed of its existence! Why had she not mentioned a written contract before? Because you would have ripped it in half as you ravished her, he thought, answering his own question. Now more questions about this woman plagued him.\n\n...to Ms. Sophia Latwicke de Grey...\n\nDe Grey? Why would Uncle David add 'de Grey' to her name? Surely he didn't mean...\n\nIt was no matter. He would ask Whitcomb, the barrister, today and this whole mystery would be at last ended. He looked down at Sophia, still sleeping peacefully, her limbs cast over his slowly awakening body. There was so much he didn't know about her. But at the same time there was so much that he did know; knowledge that only he had of her. The thought quickened him at the same time as she started to stir against him, her thigh brushing upward.\n\n\"Mmm, James...\" she moaned. He looked down at her. Her breathing was still steady and her eyes were still closed. He looked down at her calm face and the side of his mouth curled up in a smile, realizing that she was dreaming about him. Her body moved against James, pressing her thigh over his hardening cock once more. He shook his head. Her sweet unconscious movements were rapidly becoming unbearable.\n\nJames brought his arm over Sophia and turned toward her, lifting her to rest on top of him. Her flaxen hair fell in a heap across his chest as her legs parted to either side of his. Heat flooded out from between her legs matching the ache he felt growing more unbearable by the second. He ran his hands up and down the soft skin of her back. They alternated between her shoulders to the small of her waist, and dipping further to sculpt the delicate cheeks of her ass and part her thighs further. His groin arched upward toward her from shear instinct and the desire to be within her.\n\nSophia was lost in the dream world. James was skillfully playing the violin for her, and her minds eye saw both of them naked in a wide, blinding white room. As she crossed the empty room toward him, the music continued. It filled her senses, even after he had set down the instrument to skillfully play her body instead. She felt the heat of him pressed against her in the dream, his hands cupping her buttocks and pulling her closer, her lips pecking at his broad chest. Her fingers ran through the sparse curls of hair and her tongue snaking out to taste his small flat nipples. Their feet rose off the ground.\n\nA muffled gasp escaped his lips as he felt the damp heat of her mound settle around the head of his cock, surrounding the sensitive glans with her pulsing warmth. He dipped his finger downward toward her sex, running up the inside of her thigh and grazing over the soft down of hair before being drawn by her wet heat. His finger met the moist inside of her lips and she sucked in air through her teeth, still asleep and wriggling torturously against him, \"Don't stop... fly with me...\"\n\nJames could stand this no longer. With Sophia's last unconscious writhe, his throbbing cock now sat poised at her entrance, able to feel the heat pouring out of her body. Her last sleep talk drove him over the edge and then slowly inside her. He carefully opened her passage with his cock, carefully sheathing himself so he didn't wake her. The tip parted her folds and drove slowly in as she let out a contented sigh in her sleep that turned into a long moan. James leaned slowly forward and grasped her at the hips, sliding her body down his to seat himself within her fully. He remained still and relished in her exquisite heat, letting her slow somnambulist undulations be the only movement allowed to give him pleasure. He lay like this for what felt like hours, his eyes closed and breathing rhythmic against the drum of his pulse. He belonged here; he had never been as sure of anything in his life.\n\nSophia looked down, the music surrounding them as James held her to him, his hands moving them together as she watched the ground disappear underneath them, the open sky pushing them together. She watched as his cock disappeared inside of her then stared back up at his face. They began to tip and she was turned upside down in the natural order of coupling, seeing the fields and trees far below them as he pushed up inside of her. They flew on like that as the music faded away, replaced by the sound of his heart beating in her ears, all-consuming. Her mind reeled, the sensations too intense for it to be a vision. Sophia blinked once and saw him blearily below him, half-awakening with a shudder from her dream to feel his hardness filling her completely.\n\nJames knew from deep inside of her the moment she became conscious, her muscles clenching down around him. He looked up at Sophia to watch her startle in realization within his grasp. As she awoke she clenched further, the twitches becoming spasms, and the spasms starting to roll through her in waves as she began to climax in her half conscious state. He heard her moan and shudder against him as her back arched and her thighs coiled upward along the length of his body. Her face was a wash of confusion and pleasure as she came around him. James would never be able to get enough of that incredible feeling, of Sophia surrounding him with those pulsing waves of her orgasm, as long as he lived. He stroked her hair away from her face and held her firmly on top of him as she clung to his body, her voice crying out in surprise and delight.\n\nAfter her shaking ceased James thrust up into her again, holding her at the small of her back. Sophia awoke fully, blinking at him in wonder, as she realized that he was laying underneath her yet still inside of her. James pushed up again to drive that point home as Sophia shuddered and moaned in his arms. He pushed down lower on the small of her back and forward on her stomach, levering her body upward as his hands moved around to gently hold the sides of her thighs, steadying her as her body rose to sit upright.\n\nShe looked down at him in amazement, \"James! How...\"\n\n\"Do you feel me inside you?\" he said thrusting upward for effect. He heard her moan as he pulsed against the back of her.\n\n\"Yes. Oh God, yes I can. But... but, this is impossible,\" she said, feeling as though she were teetering on the very top of the world. He smiled and chuckled at her, the laugh reverberating inside her body at the point of their joining.\n\nJames moved his hands to cradle her hips and pushed up into her. Sophia looked down at him, wide eyed, feeling herself expand around his cock and gasped. He smiled up at her and pulled back as she whimpered, before rising up into her again. She felt her thighs start to twitch, even more heat building as his flesh ground against her exposed bud. She felt like she was on a mountaintop, light headed and in awe of the sight of him below her. James found a rhythm, pulsing into her in deep slow thrusts, the friction not nearly as intense as either of them needed from each other. He could sense Sophia's desire for more. Soon enough, he would show her the vast power and potential she had when mounted on top of him.\n\n\"As you can clearly see, it is possible. And of all the positions we have coupled in, I find it entertaining that you find this to be the 'impossible' one. We made love standing in the water yesterday, if you recall.\"\n\nHer mouth twitched up at the memory and at that word he dared to use around her once more, the feeling melting into the slow wave of thrusts coming through her from his body underneath. Sophia was feeling her defenses drop around him. He was making it harder for her to shield her heart...\n\nSlowly he showed her, pushing up on her thighs and teaching her the primal movements as he lay under her. James guided Sophia's ascent with his hands then lowered her body upon his flesh once more, causing both of them to gasp. He repeated this again, feeling her legs control more of the movement this time, learning from his guidance as her hands met his at her hips. He turned his wrists to meet her palms and laced his fingers with hers, providing Sophia with support as she leaned forward and gained better balance upon him.\n\n\"You have complete control now, Sophia. I'm putting myself in your hands,\" he squeezed her fingers between his, encouraging her onward.\n\n\"How do you want me to move upon you?\"\n\n\"In any way you like. It's upon you to guide us together now,\" James said, smiling up at her. To his delight, she returned his smile then lifted herself carefully along his length before slowly descending again as they sighed in passion together.   \"Does that please you?\" Sophia said shyly, trying to gage his reaction.\n\n\"You can do no wrong here. I trust you,\" he moved her hands to his chest and felt her press her palms into him. I trust you, and I love you. He moved a wayward lock of hair behind her ear as she gazed down at him, \"You must trust yourself here; do only what pleases you.\"\n\nThe look she gave him was the most tender he'd ever seen on a woman's face in his life. He ran his hand over her cheek and felt Sophia lift up again, her flesh gliding upward on his throbbing shaft before she began her slow and torturous descent. James gritted his teeth together and groaned as she started to pull upward again. Sophia began to settle into a rhythm, the soft motion of rising and lowering, riding his flesh becoming familiar and deliciously pleasurable.\n\nShe read his face and saw that he found this as sensual as when she had taken him into her mouth last night. Sophia loved that she had that much more effect on him, able to stare into his heavy-lidded eyes directly as she controlled the speed and depth of him inside her. But hovering on the distance, she knew, was the reality that James could take back control at any minute, pinning her down and thrusting into her at his whim.\n\nShe grew bold and started to experiment with James. Sophia raised her body up all the way until just the head of him was inside of her. She watched the pleading strain on his face as she hovered above him before slamming into his lap. She watched his eyes close as he shouted out, breathing in hard gasps at her unexpected move. She bit her lower lip and lifted herself up slowly once more, feeling every ridge and vein of his cock exiting her velvet canal, the air lightly cooling the sensitive flesh where they were joined.\n\nSophia lingered above James for even longer, staring into his pleading eyes, savoring the moment as the head of his cock twitched underneath her before dropping down hard, her thighs meeting his with a loud slap. His eyes rolled back as the wave of pleasure shot through him again, vocalizing his pleasure with abandon. James opened his eyes and tilted his head up to look at her. He involuntarily thrust his pelvis up into her as she gasped. James clasped his hands on her thighs with a dull smack of her flesh, her skin burning under his palms, \"Witch...\"\n\nShe clenched her muscles around him with purpose, listening intently as he sucked air in through his teeth with each squeeze around his hardness. Her hips swished from side to side on top of him, moving in a circle, grinding against him. Sophia moaned as her bud came into repeated contact with his groin and the moisture of her collecting at the base of his shaft.\n\nHe watched her stomach snake around, her breasts riding high, and her blonde curls spilling over them. The look of her twisting seductively on top of him matched the hot friction of her within, surrounding him, closing in on him, but denying him, \"Oh God, Sophia, you're killing me,\" he groaned.\n\nThe twist of her hips didn't stop. She continued undulating back and forth, shifting and rotating her hips in the opposite direction as he thrashed his head and groaned, \"What would you like me to do instead?\"\n\n\"Ride me.\"\n\nShe smiled down at him wickedly, whispering her reply, \"Beg.\"\n\nHis eyes widened and shot a passionate, dangerous look up at her, sending a shiver through Sophia. James growled at her, \"Please ride me, Sophia. I really can't hold out like this much longer...\"\n\nHe gave her a playful warning as he spoke, digging his fingers into her hips. In that moment she knew that he was moments away from effortlessly rolling her underneath his body, throwing her ankles over her head and driving into her mercilessly. Much as that appealed to her, she liked her present position over him and wanted to feel him come undone underneath her. Sophia's heart beat quicker as she began to resume her rhythm, faster and deeper, moaning and shuddering at the erotic friction of flesh against flesh, the heat of him radiating through her as his hands traveled up from her hips to support her breasts from underneath. He pushed them up, cupping them and rolling his thumbs hard over her nipples before meandering down the front of her, over her womb, downward through the thatch of hair.\n\nJames carefully watched as his cock slid in and out of her core, the sight almost too much for him. He brought his fingers to where they were joined and started caressing her bud in slow circles, feeling her nearly lose her balance from the heady pleasure. She picked up her thrusts in response making him moan aloud, desperate and determined to bring him to completion with her. James sat up and clasped her lower back, thrusting upward to maintain her rhythm as he captured a nipple in his teeth, roughly sucking it into his mouth.\n\nWith his occupied hand, he rolled the delicate nub between his fingers, increasing the pressure with their every turn. Sophia felt his cock swell even further within her sending her over the edge. As James felt her shake in her climax, he laid his head between her breasts, kissing the flushed and soft heaving skin.\n\nHe thrust up inside her twice more, then fell back away from her, hips arching upward hard into her, lifting her up with his spurting cock as he came deep within her. She fell forward and collapsed on top of him, his arms coming up around her body as he made one last furtive push into her before his body relaxed, buried within hers.\n\nThe sun was now up, casting a long line of light over them through the half-closed curtain, as they lay entwined. James rolled them to the side, holding Sophia in his arms, \"You're coming with me.\"\n\n\"I already did,\" she said, biting her lower lip in a smile.\n\n\"No,\" he laughed and kissed her on the nose, \"I must meet with the barrister at two o'clock. You're coming with me into town. I want to take you out for a ride.\"\n\nSophia tensed, blushing, \"We can't. What will they say?\"\n\nJames cocked up an eyebrow, \"Who is this 'they' you speak of?\"\n\n\"The townsfolk. When they see me out riding in your chaise...\"\n\n\"What of it? Because you think you are of a lower station than I? Put on the new dress I gave you and\u2014\"\n\n\"No!\"\n\n\"Why are you being so obstinate?\" he said, coming up on one elbow as Sophia rolled onto her back. They both startled as a loud knock sounded on the door, breaking them out of their reverie.\n\nKatje's muffled voice came through the door, \"Ontbijt, Mijnheer James.\"\n\n\"Dank u, Katje,\" he called back as they heard her shoes clomp down the stairs.\n\nSophia blushed bright red, \"What did she say?\"\n\n\"She was telling us that breakfast is outside the door,\" James said, getting up and stretching as Sophia admired the backside of him from the muscles of his shoulder blades all the way down to his taut buttocks and sculpted calves. He walked to the door and opened it. Sophia pulled the sheet over her head until she heard it latch closed again. She heard him chuckle at her shyness and saw him walk toward the bed, fresh cream, sugar and blackberries on the tray.\n\n\"Do... do you think she heard me talking to you?\"\n\n\"Undoubtedly. But considering all she probably heard last night I don't think she'd think anything of it,\" James said setting down the tray and laughed as Sophia flushed hot once more.\n\nShe was mortified. Having spent the last few days working with Katje, she didn't want the woman judging her as a whore. She buried her face in her hands, \"Oh, God...\"\n\n\"You needn't be embarrassed. Katje's not a half-wit; she knew when she arrived about my arrangement with you. And how has she treated you?\"\n\n\"Katje and Aletta have both been very kind\u2014\"\n\n\"There you see?\" he said tossing a berry into his mouth, \"Nothing to worry about.\"\n\nJames set the tray on the chair beside the bed and picked up another berry, hovering it in front of her lips, as she lay propped up against the pillows. Sophia tentatively opened her mouth and let him feed her, not used to this at all.\n\n\"So you'll come to town with me?\"\n\n\"No, James, I can't...\"\n\n\"I ask you again. Why are you being so stubborn about this?\"\n\n\"Because then they would know for sure that I am your... whore,\" she said chewing on the word harder than the sweet fruit in her mouth.\n\n\"You are whatever I make of you. You have a brand new lovely dress and with your beauty, you will be the envy of all who see us. As far as they are concerned, you just 'inherited' trust of a farm from my uncle of whom I am the current proprietor\u2014\"\n\n\"James, most those people in town may be illiterate peasants to you, but they aren't stupid. And they have known me since... since I first came to the Ashford church when I was nine. They know I'm no lady, or mistress or owner of anything. But they will know that I'm your mistress once they see me with you.\"\n\n\"I don't see why you should be ashamed.\"\n\n\"They already judge me, James, because of how I arrived here.\"\n\n\"Then what is one more thing that sets their tongues wagging at you? Sophia, you need to see yourself as the lady of this farm; its owner, if you ever expect to have the upper hand in your business dealings with these people.\"\n\n\"Business dealings?\"\n\n\"What work did you do for my uncle?\"\n\n\"Milked the cows, carted the milk...\"\n\n\"What else?\"\n\n\"When he was... sleeping during the day, I would take it to town, barter the prices, take orders, occasionally keep the books...\"\n\n\"So you know how to manage this farm, but you don't know how to manage its value.\"\n\n\"I don't understand.\"\n\n\"Well, let me demonstrate,\" he said, pulling out another berry, \"Lie still.\"\n\nSophia gave him a confused look before watching him place the berry on her right breast. She shifted, giggling and James caught the little fruit as it rolled off.\n\n\"Lie still! I want to show you something!\"\n\nSophia complied as he replaced the berry, \"What are you doing?\"\n\n\"Pretend you're a map. This is the farm on the hill,\" he said pointing to the blackberry sitting on top of her breast as Sophia tried with all her might to keep from giggling and upsetting his 'map'. He set down three more berries on her stomach, \"And in the valley, these are the cheese maker, the churner, and the blacksmith at Ashford.\"\n\nSophia looked up at him smiling, \"I'm listening...\"\n\nHe dipped his finger in the cream, \"You supply milk to the cheese maker,\" he said tracing a line from the berry and around her nipple before ending at the group of berries around her navel, \"and the churner, and livery work for the blacksmith. Their livelihoods depend on you.\"\n\n\"Go on,\" she said, struggling not to laugh or let his delicate touch make her rise toward him as her body dearly desired to do.\n\nHe dipped his finger in the cream again; \"They take that profit from your milk and spend it at the pub and the shops,\" he said trailing the cream to her navel, then continuing the trail south, \"and other wares Ashford imports from outside the town.\"",
        "Sophia remained stock-still, \"All this I know. What are you getting at?\"\n\n\"The townsfolk don't scoff you for no good reason, Sophia. They do it because they are jealous of you; because you can conceivably control the source of all their income. They shun you to try and keep you where they want you. Powerless. But you need to believe in yourself, and they and their opinions of you can go hang.\"\n\n\"Well that's a lovely sentiment, but I'm just a bast\u2014\"\n\n\"Only because you think it. Charge your buyers five shillings more apiece, purchase more cows, and you can take control of a piece of Ashford. The sooner you realize this, the better your negotiations with them will be, and the richer you will be,\" he leaned in and kissed her, careful not to disturb the berries.\n\nShe paused for a moment after his lips came away then nodded, a smile curling one side of her mouth. She'd never thought of it in this way, \"What else?\"\n\n\"Then...\" James leaned over and licked the cream off her puckered nipple.\n\nShe sucked air in, \"And what is that supposed to be in this commercial scheme?\"\n\n\"Oh, that's nothing; I just like the taste of your nipple.\"\n\nShe burst out laughing, upsetting the berries.\n\n\"Now see what you've gone and done? An earthquake just destroyed all of Ashford,\" James said smiling, picking up the fallen berries, as Sophia laughed even harder. He caught her mouth in his and captured her lips, exploring her with his tongue. He drew her back down to the bed; kissing her with each sentence, \"Wear the dress. Come to town with me. The villagers be damned...\"\n\nSophia kissed him back, giving in, knowing that he would just torture a 'yes' out of her anyway. He wrapped his arms about her and moved over top of her, pinning her under the heat of his body. She relished his attention to her and unfurled once again in pleasure with him. It wasn't the villagers who would be damned...\n\nAfter they finally rose and got dressed, Katje and Aletta were already gone to town to deliver the milk. Sophia went downstairs to find her shoes and her best Sunday cap as James readied the carriage to take them into town.\n\nSophia hadn't ridden in a proper carriage since she was a child. She leaned back onto to James's shoulder as he drove the horse onward toward the town square before jumping out and helping Sophia down. He put three gold guineas in her hand, \"Buy yourself anything you like.\"\n\nSophia stared down in shock, \"James, I can't possibly\u2014\"\n\n\"Just say yes. Let the world be your oyster today, my little pearl,\" he said smiling down at her.\n\n\"I thought pearls are made by being an irritation.\"\n\n\"Then go irritate those petty townsfolk and buy yourself something nice.\"\n\nShe smiled and shook her head at him, wondering what in this town could possibly cost three whole guineas, \"When will you be finished?\"\n\nHe handed two pence to the groom's apprentice as he took the carriage around to the livery stable, \"It shouldn't take me more than an hour to finish. Now go enjoy yourself, Miss Latwicke.\"\n\nJames watched her walk across the street, disappearing into the marketplace, before turning around and making his way to Whitcomb, Morehouse, &amp; Sedgeley, the barrister's office.\n\nHe opened the door and a young clerk nodded at him before returning to work, dipping his quill in the ink pot beside his desk once more as James made his way to the first door marked George Whitcomb, Esq. He knocked.\n\n\"Enter,\" said a voice on the other side.\n\nJames opened the door and tipped his hat before removing it, \"Mr. Whitcomb. A pleasure to see you again.\"\n\nAn elderly man in a long gray wig rose out of his seat, nodding at James, \"And it is good to see you as well, Mr. Gardiner. Again, I am very sorry for your loss. Your uncle, Mr. Farthing, was a good friend of mine for many years.\"\n\nJames thought back to his last fight with Uncle David before leaving. The old man had been making plans for him to marry some wealthy farmer's daughter and caught James in the barn screwing one of Uncle David's maids. The had argued, David nearly knocking him to the floor after James made a crack about how David was jealous; James's dalliances were seen as commonplace, a young man sewing his wild oats, but David's tastes would have seen him hanged at Tyburn. James had vowed never to tie himself to just one woman, and never return. He looked at the old barrister across from him and wondered if there was more than the friendship with his uncle than he was letting on.\n\n\"Thank you. I miss him greatly,\" these thoughts and memories flashed through his mind, unseen on his face as James sat down across from the barrister, going straight to business, \"Are the papers drawn up for his estate?\"\n\n\"All fifteen hundred pounds a year in tenant rent throughout Ashford, plus the landownership of the farm. This inheritance makes you quite a wealthy gentleman, Mr. Gardiner.\"\n\n\"Wealthier, Mr. Whitcomb. Although it is fine to now possess lands in Kent, my primary holdings are in trade between London and Amsterdam.\"\n\nHe nodded, \"All the same. Before I hand these to you for your signature, will there be anything else?\"\n\nJames sat there, pursing his lips before digging into his pocket and pulling out the wrinkled letter, \"I have one last question for you. Who is Sophia Latwicke de Grey?\"\n\nGeorge Whitcomb slowly looked up, the color draining from his face, \"What name did you say?\"\n\nJames stared straight ahead, \"You heard what I said.\"\n\nGeorge nodded, stood up and walked behind James to the office door, opening it slightly, \"Master Morehouse, go run up to the market and buy you some dinner. Take from the petty cash.\"\n\nJames watched George wait at the door as the clerk opened the drawer and fished out a few pence before locking the front door behind him, the small bell the only sound in the building. The old man then walked behind his desk and looked outside before shutting the open window and latching it closed, \"The boy is my partner's son, a gifted clerk who will make a fine barrister some day, but a witless wonder when it comes to petty gossip.\"\n\n\"Why the secrecy, Mr. Whitcomb?\"\n\n\"Because that name is never to be used. Ever. Where did you hear it?\"\n\n\"I read it,\" he said, handing the letter to George, \"In a letter, addressed to you from my uncle, that was obviously never delivered.\"\n\nGeorge adjusted his spectacles and read the handwriting, clearing his throat and looking back up at James, blanching once more, \"Th...this letter is neither witnessed nor sealed\u2014\"\n\n\"It is in his hand, correct?\"\n\n\"Yes. It is. Still, why do you bring it to me?\"\n\nJames looked away, out the panes of the window, \"Because by that letter, the farm rightfully belongs to her.\"\n\n\"You... you don't have to worry about this; it's not witnessed. This letter would never be admissible in any court of law. The farm would be hers only by your doing at this point, to be perfectly honest. Were she to even find it, and since she's merely a servant girl\u2014\"\n\n\"It doesn't matter. I love her,\" James said, looking back from the window to stare the barrister in the eye. The words were out. He felt a weight lift from inside his chest that had been forming since he first returned to Ashford yesterday.\n\nGeorge took off his glasses by the bridge of the nose, \"I see.\"\n\n\"She won't say a word to me about her childhood.\"\n\n\"Good. Then she's been well taught.\"\n\n\"What? Whatever do you mean?\" James said, his brow creasing in anger. What had they done to her?\n\n\"Does the name 'de Grey' have any meaning to you?\"\n\n\"Somewhat. But it can't possibly be that de Grey.\"\n\n\"It is, one and the same. Sophia is the natural daughter of Lord Henry de Grey, Duke of Kent, member of the Privy Counsel to His Royal Highness King George, and the Lord Chamberlain of our recently departed Queen. Her mother was a chambermaid in his household, but much beloved by him, if all accounts are to be believed. She died of the puerperal fever, not a day after giving birth to Sophia.\"\n\n\"I see,\" James said, his mouth drying.\n\n\"You understand then the need for secrecy?\"\n\n\"No, I don't. Sir, I am from London and I can be the first to tell you there are hundreds of natural offspring of the court made gentry, running around as Miss this or Master that, or the precious 'niece' ward of Lord so-and-so...\"\n\n\"But not the children of enemies of the Jacobites, and the Duke is one of those enemies. A bastard daughter by a commoner would undo his career, so when she was young and as the Tories rose into power Lord de Grey, who was Marquess at the time, disavowed her and brought little Sophie to the church orphanage at Ashford.\"\n\n\"...I first came to the Ashford church when I was nine...\" Her words from this morning echoed in his mind. If this world were fair, then Sophia de Grey would have easily outranked James, and he would be lucky if she had even given him a word. The moment he took her flew into his mind and he felt a sharp pain in his stomach, as though a needle was piercing him through the center. He imagined her as her life was supposed to be, surrounded by governesses and maids, clothed in jewels and being married off to a lower noble instead of running a farm wearing rags, propping up his kind drunkard uncle and being raped by a nouveau riche rake who called himself a gentleman, \"So her own father pushed her into poverty and obscurity in the name of... politics?\"\n\n\"Aye. And threatened the deacon of the church and the head of the orphanage to keep silent and to make sure she followed suit. When David, your uncle, took her out of the orphanage to work for him five years past, he came to my offices to draw up the Parish Apprentice Terms of Indenture that I handed to you a fortnight ago. That same day, a man from court and two regimentals showed up at my office, paid both of us one hundred pounds a piece, and told us that if we revealed anything about Sophia to anyone our lives and lands would be forfeit.\"\n\nJames was taken aback, \"I... I don't know what to say.\"\n\n\"Then don't say at all, Mr. Gardiner. Never mention the name 'de Grey' to anyone, even in passing. The only reason I suspect your uncle would dare to write it was because he was either being sympathetically defiant or was just simply drunk.\"\n\nJames was sick. Sophia, his Sophia, had had everything taken from her piece by piece for the ambitions of great men, the same great men that shunned James in London because of his lowly parentage. And he was just the latest person to take from her. She had been abandoned by her father, locked away in an orphanage miles from her home. And as a reward for looking after his uncle for five years, James himself had marched into her home and enslaved Sophia to his body and will. He felt himself growing nauseous thinking of what he had done to her. He sat up once more in his chair, \"Anything else I should know?\"\n\n\"Nothing in particular. But, now that I think of it, it is fortuitous that we had this conversation, since your uncle penned another letter, this one addressed to you, which he forbade me open and instructed me to give to you only once your accounts were settled. It was my favor to him as a friend. At least you know a bit more about this situation in case she comes to mention therein.\"\n\nJames accepted the letter and examined his handwritten name on the front, thinking about the terrible things his uncle would have to say for him if he knew anything about how James had behaved toward Sophia. There was only one way to even begin to right his wrongs, \"I suppose then that concludes business between us. However, given the information you have shared with me, Mr. Whitcomb, there is still one piece remaining to be settled. It regards the farm...\"\n\nGeorge sank back in his chair and donned his glasses once more, \"Are you absolutely certain you want to do this?\"\n\n\"With all my heart.\"\n\nJames left Whitcomb, Morehouse, &amp; Sedgeley fifteen minutes later than he had promised her, the clerk closing the door after him. He looked around the street for Sophia and saw her sitting on a bench next to the park, her head dropped and her eyes downcast. He jogged across the street to be at her side, sitting next to her, \"What is the matter?\"\n\nTears rolled down her cheeks, \"It's nothing. Here are your guineas back.\"\n\n\"No keep them,\" he said, folding her hand back around the coins, moving closer to her.\n\n\"As payment for being your whore?\" she sniffled.\n\nHis voice grew more serious, \"Sophia, what happened?\"\n\nShe looked up at him, her lip trembling, \"I went to buy some shoes. I saw these pretty white ones in the window to match the dress you gave me. The shop mistress told me 'servants enter in the back'. I told her I was here to buy and she repeated it saying 'servants in the back, I don't care how you're dressed or who you sleep with' and then I\u2014 What are you doing?\"\n\nJames had grabbed her wrist, his face red in anger, \"Come with me.\"\n\n\"James, please don't do this\u2014\"\n\n\"Sophia, I'll hear none of it!\" he marched to the marketplace with her in tow, heads turning to watch them, \"Which one was it? Was it this place?\"\n\nSophia saw the white shoes in the window and nodded quietly.\n\nJames turned to a small boy watching them and held up a silver coin, \"Boy, go run to the livery and tell them to fetch my carriage and you can have this shilling when you get back.\"\n\nThe boy took off running without a word back down the street toward the stables.\n\nJames turned to Sophia, \"Wait here. Don't move an inch.\"\n\nShe watched silently as James marched into the shop and slammed the door behind him. The shop mistress smiled, greeting him as a customer before her face fell and turned white in horror. Sophia watched the scene unfold in silence behind the glass as James yelled at her, pointing outside and leaning menacingly on the counter. Sophia watched as the woman began to sob and shake her head, throwing up her hands in defense. Sophia's fear turned slowly to pride. He was defending her honor. She thought that strange somehow, considering that he had stripped her of it to begin with. James stormed away from the counter as the shop mistress clasped her hands together, pleading with him, then he came back to dress her down once more. James stalked away from the counter and the now hysterical woman and threw open the door behind him, pointing his finger at her.\n\n\"And if you ever, EVER speak to her that way again, I will close down your pitiful shop and see you starve or be hanged!\" he slammed the door shut and threw his gaze to the rest of the gathered crowd, ready for his next target. Those watching cast their eyes to the ground and either nodded to him or simply turned around and went about their business. The carriage drove up with the livery's coachmen and the little boy riding on the step before jumping down in front of James. Sophia watched his countenance change immediately as he leaned down with a smile and handed the boy the shilling, \"There you are, young master, as promised.\"\n\n\"Thank you, sir!\" the boy said, running down the street toward his home.\n\nJames helped her into the carriage and waited for her to move to the side and smooth down her dress. He leapt in next to her and shook the reins, the horse carrying them through town.\n\n\"You didn't have to do that,\" she said after a moment.\n\n\"Yes, I absolutely did. These people will respect you or suffer my wrath. And you should demand no less. Don't ever let yourself be treated that way.\"\n\n\"Why did you bother to defend me in the first place?\"\n\n\"Because I\u2014\" he stopped himself and sighed, \"So why did you decide on shoes?\"\n\n\"For dancing. If you would be willing to play the violin again for me...\"\n\n\"Fiddle,\" he said, smiling at her, \"And nothing would make me happier. But you dance so well in bare feet, I think that we should forget the shoes, for now.\"\n\nShe gave him a weary smile as they drove on and leaned into him. After the horse had cleared the crossroads and their chaise turned toward the farm, James felt her shuddering and sniffling and looked down to see tears rolling across her face.\n\nHe tried to hold her closer, tucked under his arm, holding the reigns in front of them, \"They won't bother you again; I promise. Please Sophia, I hate to see you cry.\"\n\n\"It's not about them, James,\" she said, straightening up and wiping her eyes dry, \"Well, it's mostly not about them. You don't realize what you have done, have you?\"\n\n\"No...\" James said, cocking up an eyebrow.\n\n\"They will only fear me now. And not even fear me, but fear you. They will whisper about me just the same.\"\n\n\"All right, I made a bit of a scene. But I did it to make sure they won't bother you again. You say they won't and they'd whisper about you anyway, so what is the difference?\"\n\n\"The difference,\" she sighed, the plain evidence weighing heavily against her words, \"Is that you can't just force people to your will.\"\n\nHe looked down at her, his mind warring between guilt and arousal at the memory of their first meeting. Her eyes were cast down, her mind on that same moment. James pulled back on the reigns and stopped the horse in the road. He turned to the side and tilted her trembling chin up until her tear-stained green eyes met his, \"Sophia, there isn't anything I can do or say to make up for what I did.\"\n\n\"James you don't\u2014\"\n\n\"Yes, I do. I deeply regret it. I don't deserve your forgiveness for how I treated you, and I only hope that I can prove myself to you,\" he cupped her face in his hand and kissed away a tear clinging to her cheek.\n\nShe turned to him as he drew back from her cheek and tilted her face toward him. He was drawn to her irresistibly and kissed her gently on the lips, feeling her deepen it as he brought his other hand up to cup her face. He drew away, looking at her flushed cheeks, her eyes filled with emotion.\n\nHe stroked his hand down her cheek, \"There is much I need to tell you; but not until we are safely at home. The evening is no time for us to be out on the road.\"\n\nThe late summer sun was setting earlier and the chaise rolled up to the house just as it started to touch the horizon. Candlelight already flickered in the upstairs windows and the smell of seared lamb wafted out the door. Sophia smiled; glad to be back at the farmhouse and even happier that she wasn't coming home to dark windows and a lifeless kitchen. She couldn't even remember when the house had looked so alive to her. James jumped out of the carriage and offered his hand to Sophia. Leaning on him for balance, she picked up the hem of her skirt and stepped out of the carriage.\n\nKatje came roaring out of the front door toward them, \"Eet! Eet! Ik zal het paard behandelen.\"\n\nSophia startled back before James answered her in Dutch, \"Dank u Katje.\"\n\n\"What was that about?\" Sophia said quietly to James.\n\n\"Katje is not a house servant by nature; she's a farmer, and a bit of a mother hen. You'll have to excuse her sometimes. She was ordering us to go in and eat; that she would tend the horse.\"\n\nSophia giggled and waited for James to hold open the door to her home before making her way inside. The kitchen was aglow with candlelight. They sat down to plates already made up with racks of succulent lamb, sage and wild corn from the colonies, \"I can't remember the last time I had lamb. Actually, I can't remember the last time I ate anything at all but my pitiful version of curds and whey or the cabbage soup I've been eating for years.\"\n\n\"Good,\" James said between bites, \"You know I adore your body, but you could use a little fattening up, honestly. I don't how you maintain such beautiful curves in the first place with how little you claim to eat. It must be the cream you get from this farm.\"\n\n\"You won't catch me drinking it,\" Sophia said, \"I'm certainly not going to skim off the top of what little I've been able to get out of the cows this year.\"",
        "James smiled at her. They were actually having a conversation, as if they had known each other their whole lives. He could get used to this. That thought started to unsettle him. Sophia was still such a new thing to him. He knew that he wanted her desperately, loved her, but balked at the idea of staying here at the farm. He thought about taking her to London to live but like their servants Katje and Aletta, her heart belonged here in the country. He diverted his mind away after some silence and changed the subject; \"I think we spoke on the road about the violin?\"\n\nSophia's eyes lit up again as she took her last bite, \"And where shall we enjoy our music tonight?\"\n\n\"I think that upstairs is still a safe bet,\" he said with a wicked grin, \"Take your hair down. I love seeing your curls bounce around when you dance.\"\n\nShe returned his look, biting her lip, before getting up from the table and walking toward the stairs, looking back over her shoulder to make sure James was following her, before removing her cap and shaking the springs of her hair free, as they cascaded down her back. She knew that he didn't like seeing just her curls bounce. Just two weeks ago she would have never found herself desiring him or flirting with him, but everything seemed different now. Out of his line of sight she felt her brow wrinkle, contemplating her feelings. She knew in her heart of hearts she wasn't supposed to feel anything for him and that the first meeting they had should be proof enough to not trust him, but she felt her defenses against him slowly lowering, just enough to be comfortable trusting that he wouldn't hurt her again.\n\nShe entered the bedroom, already awash in candlelight and felt the heat rising off of the wax, beckoning her to remove her dress and stays. She resisted and stayed put on the other side of the room, observing James as he removed his frock and hung it on the knob of the wardrobe. He walked over to the dresser and took the violin out of its case, tuning it carefully before putting it up on his shoulder, \"Any requests, my lady?\"\n\n\"Do you know Woolly and Georgey?\"\n\n\"No.\"\n\n\"What about Bloomsberry Market?\"\n\n\"I regret I don't quite have Uncle David's repertoire. Did he play often for you?\"\n\n\"Almost every night. But most nights he played the slower pieces because he... well he got tired and sick, some times. That's why I'm so happy you can play the faster dances.\"\n\n\"I try.\"\n\n\"You're very good, James. Really,\" she thought a moment, trying to remember a more popular song, \"Can you play Portsmouth?\"\n\nHe lifted the bow and drew out the first long note before running his fingers up and down the frets. Sophia smiled and bounced up and down before waiting for the measure to curtsy. He faced her as she spun around in the reel, holding her hand out toward James as though he were completing the other moves of the dance.\n\nJames watched her twirl around him, her skirts billowing out before spinning back around her hips. He wished that he could just put the instrument down to dance with her as she came back around, curtsying to him again before beginning another reel.\n\nShe turned, but this time the room turned faster than her. Sophia saw the dresser spin in front of her and the candles make a trail upward in her vision as she tried to catch her breath and balance all at once. A wave of nausea enveloped her and she fell toward the dresser, putting her hand out to catch herself. The ring in her ears almost drowned out James calling her name. The queasiness grew and she felt her vision start to go dark.\n\n\"Sophia!\" he rushed over to her, haphazardly putting violin and bow on the dresser and caught her by the arm as she started to fall. He swept her up into his arms and worked his hand under her skirt as he walked quickly over to the bed, setting her down and taking her dress off over her head, \"Don't worry, we'll get that contraption off of you. Damn that ridiculous stay... Sophia, can you hear me?\"\n\n\"James?\" she said weakly. Her skin felt clammy and the room still spun around, threatening to empty the supper from her stomach. Closing her eyes made it worse so she focused just on James's hand held against her stomach as his fingers worked fast to loosen the strings.\n\n\"Hang on. I'm trying to get you out of the stay. You started to faint,\" he cursed himself for making her wear that thing in the heat of August.\n\n\"I'm all right. I just was dizzy is all,\" she said as she felt him pull the hard fabric up off her abdomen. Her arms rose up again and she felt the cooling night air hit her chemise. Sophia took in a long breath, still feeling dizzy, \"I'll be fine.\"\n\n\"Lie down,\" he said, lifting her legs up onto the bed. He pulled the pillows out to prop her up before standing to walk over to the other side of the bed and lie beside her. He removed his waistcoat to give himself more leverage and sat up next to her, stroking her forehead.\n\nSophia closed her eyes as the wave of nausea finally passed. \"Trust me,\" she said quietly, \"it had nothing to do with your playing.\"\n\nJames looked down at her to see her smile and knew that she would be all right. He laughed and carefully leaned down to kiss her cheek, relieved. Sophia tentatively brought her hand up to his face and leaned toward his lips, initiating a kiss.\n\nThey held each other close, Sophia fumbling with the placket of his breeches, as they lay on their side face to face. She untied the strings quickly, James letting her innocently work to free him. Her hands felt his flesh grow hard and hot under the fabric as she opened the placket and lifted his shirt out, grasping and pulling upward until her hands finally met bare skin. She traced shaking fingers downward until they met the curls of hair, and the thick silky flesh pulsing under her fingertips.\n\nHe let out a sigh against her lips, moving a hand down from her face to lift upward and squeeze a breast in his hand, pinching his fingers around the nipple. Sophia moaned around his invading tongue as she felt him lift up her waist and bottom, pushing the thin silk of her chemise up over the curve of her hips before lifting it over her arms quickly, feeling her let go of his cock with a dull thud against his stomach, allowing him to cast it to the floor.\n\nSophia's hands immediately returned to him and began to push the waist of his breeches downward before James took over and removed them, then pulled his shirt off, tossing both casually aside. He returned to her skin, electric and flushed, each exploring the hard lines and curves of the other's form. James looked deep into her eyes, holding her by the small of her back and curving his hand over the cheek of her ass, as his lips possessed hers once more.\n\nHe brought her leg around and over his, opening her sex to him. Sophia held his cock outward and started guiding it forward to where both of them needed him to be. With a slight thrust James entered Sophia, holding her from underneath as he slowly filled her. His eyes, dark gray with emotion, never left her gaze. He watched hers glint emerald green in the candlelight, as her lips remained partly open, panting in sensation and the intensity of his attention riveted only to Sophia.\n\nJames stilled himself within her, running his hand across her face as she finally broke her concentration on his face and sighed, her eyes closing, her channel fluttering around him as it relaxed around his shaft. He moved his hips forward pushing into contact with her as she held onto his shoulders, captured fully in his arms. Their movements were slight but powerful, every muscle and fiber alive. He was not all the way inside of her, but this position felt far more intimate; comforting and secure as he cradled her in his arms. He felt her push toward him, forcing him deeper inside of her. James wanted more and as their bodies lay twined together could sense her growing need for release.\n\nTheir lips made contact once more as James rolled Sophia under him, his body never separating from hers. She brought her legs up around his waist, hissing through her teeth as he sunk into her to the hilt. His finger reached forward to brush through the folds of her crease and rising up against her bud. He marveled at how slight a movement of his fingers could make her entire body arch up to him.\n\nShe moved her hands down and pushed against his buttocks, angling him even deeper, her feet resting on the back of his knees as he took her in long powerful strokes. He steadied himself for a moment as the waves of her orgasm began, experiencing her spasms around his flesh, drinking in her cries and wincing as her fingernails dug downward through the flesh of his lower back.\n\nOverwhelmed, he began to move once more as she ended her crest, her thighs twitching around him as he made his final thrusts. He looked down at her flushed and heaving body then back up into her eyes before his rolled back, his neck craning back as he slammed into her one last time.\n\nSophia felt him spurt hot and deep of her, then blanched and looked up at him in shock at the words he had called out. He held her against him, gasping for air, and then looked down into her wide eyes before repeating in a steady voice what he had cried out to her at the height of pleasure, \"I love you.\"\n\nShe could only stare up at him, \"What?\"\n\nHe moved his hand to her face and looked down at her, propped up on his elbow so he didn't crush her, \"Sophia, I love you...\"\n\n\"James...\"\n\n\"...I know I have to earn your love...\"\n\n\"...you can't...\"\n\n\"...but I beg of you to give me the chance...\"\n\n\"...you can't love me if you own me.\"\n\n\"...let me prove myself to you...\"\n\n\"No!\" she said, tears stinging her eyes as she fruitlessly pushed at his chest with her fists, struggling for him to release her. He groaned as he suddenly withdrew from her to let her roll away from him. He heard her sobbing, a knot forming in his chest.\n\n\"Sophia...\"\n\nShe felt him come up behind her, holding her around the waist, his chin resting on her shoulder, \"Please James, you don't love me. I am just a toy and possession for you. Probably one of many\u2014\"\n\n\"No,\" he leaned his forehead onto her back, \"There is no one else. There hasn't been since I first laid eyes on you that day.\"\n\nSophia only shuddered again, her body heaving forward as she openly wept, her hands coming to her face. James shut his eyes and cursed himself for reminding her of their first meeting, at the same time as he felt his groin twitch in recollection. He cursed himself again. How could he have been so stupid?\n\n\"I'm sorry Sophia. Please, I'm so sorry. Please forgive me,\" he whispered, fighting back the lump in his throat as he said the words, \"Please...\"\n\nExhausted, Sophia stopped crying. She felt him stroke her forehead and hair, calming her down. Her breathing came in shudders, \"James, you can't love me if you own me. While you own me, how can you ever expect me to say that I love you back with any shred of honesty?\"\n\nJames felt a small glimmer of hope at her words. Was there a possibility that she could return his feelings? He kissed her on the temple, ready to wait until morning for her to calm down. If he told her tonight what he was holding back from saying, then there was a chance he may lose her forever. He couldn't risk that, \"Just sleep, my love. I don't expect you to return my feelings right now. Just know that they are real and that I will give you proof of it soon enough. All will be revealed in the morning.\"\n\nHe rocked her back and forth, stroking her arm as her body stopped recoiling from him. James trailed his hand up and down her arm as she started to nod off. She sniffled once more, and then fell limp into sleep.\n\nJames woke up with the sun and a sore lower back from where Sophia had dug her nails into his flesh. He rose out of bed to use the chamber pot and caught sight of his jacket on the floor. In the inner pocket lay the final letter from Uncle David. He looked over once at Sophia, then back at his name scrawled across the front.\n\nShe had taken care of the old man. Through his famous melancholy and drinking, his forbidden affairs. James thought back to when he had stayed in this house as a boy, learning from his uncle on how to succeed as a gentleman, and the cursing fight the last time he had seen David Farthing alive. He broke the wax seal and carefully unfolded the paper to look at the date. April 13, 1711. Over three years ago.\n\nMy dear nephew James,\n\nI entrust that my dear friend Mr. Whitcomb has given you this letter as instructed, now that I am dead. If he has, then I would like to say that I regret we were unable to amend our relationship in life. I only hope that you can look upon me better now that I am gone.\n\nThe contents of this letter must be guarded closely. It is only in the safety of death that I can reveal their contents. Working at my farm is a woman, Ms. Sophia Latwicke, first born natural daughter of the Duke of Kent and raised in the manner of her birth until age nine, when she was abandoned by the Duke in an effort to stay in the good graces of Queen Anne's Jacobite handlers.\n\nWhile I have entitled you with my tenant properties in Ashford, I plan to find a legal way to leave the farm to her. You will like her. The two of you are not so different as you may first think. Both of you had parents whom were dead before you could know them, and both of you were sacrificed by your remaining parent in pursuit of ambition...\n\nSophia opened one eye as James had stirred and saw him with a letter in his hand. She felt something twist inside of her. All this time that he had been here at the farm romancing her, she had forgotten to look for the letter that David had written entailing her the land. It was too late now. She lay perfectly still, paralyzed as he read on.\n\n...While I certainly cannot undo the damage done to you by my sister's neglect of your person James, do not wallow in that pain and waste your life away, flitting from one woman to the next until you die of Spanish sickness or wind up in debtor's prison. Abandon your rakish ways.\n\nI know your preferences for a partner almost as well as I know my own. God knows I had enough demonstrations of your baser desires in my household before our unfortunate falling out. I ask you to consider this woman, Sophia Latwicke de Grey. She has a kind and gentle heart and would make you a good wife. My last wish is that you, James, would treasure her and keep her well. Love for her may not come to you at first, but can develop over time...\n\nJames lowered the letter and looked back at the woman with whom he had shared his bed and bared his soul. His jaw clenched. She was bait for him. His uncle reached beyond the grave to rein him in even in death, knowing that he wouldn't be able to resist Sophia. James felt as though he'd been tricked, both of them pawns in his uncle's willful game to secure the farm and at last produce heirs to tie to the land.\n\nSophia watched his knuckles turn white and his teeth set on edge as he read the letter, and then shut her eyes when he looked up. She felt the same nausea begin to well up again as it had last night. Even from across the room with her eyes closed she could sense his anger rise within him. She would be cast out and ruined now, her heart cruelly undone, a village pariah. Her gorge started to rise and she knew she couldn't hold it back this time.\n\nJames watched as she flew out of bed and ran past him to the pot, kneeling down before heaving suddenly into the bowl. He shoved the letter back into his jacket pocket and turned to hold her hair back as she sputtered and gasped for air, \"What's the matter?\"\n\n\"I think,\" Sophia said between breaths, \"it was last night's dinner...\"\n\nHe stood up and walked over to the window. Sophia blanched, knowing that he was on the verge of saying something. She could feel it, her upper lip tightening. James drew inward. His uncle had taken in this woman, knowing full well that she would be too alluring for James. He couldn't stay here. He refused to play his part in his uncle's scheme to tie him down to Ashford, \"I must go back to London.\"\n\nSophia's heart raced. He wasn't casting her out? Maybe she had been mistaken and he hadn't found David's letter. Perhaps he did love her. The notion sent a wellspring of unexpected and somewhat unwanted hope through her. She teetered on edge, waiting for his next words, \"Back to London? But why\u2014\"\n\n\"I need to leave,\" he said, raising his voice, \"Now!\"\n\nShe felt an emptiness start to grow inside her, \"What about what you said last night?\"\n\nThe words cut through him like a knife. He closed his eyes, \"Sophia...\"\n\nShe backed away from him, toward the bed, sitting on his side of it with her ankles crossed. What an enticing picture she made. His uncle had chosen well. He felt his anger at him start to rise again, unwilling to turn it on her.\n\nWithout any more words, he put on his breeches and flung his shirt over his head. A paper floated out of his waistcoat pocket to the ground unseen by him. Sophia watched as he hurried about the room, quickly grabbing his personal effects, \"James...\"\n\nHe ignored Sophia, his teeth clenched as he grabbed his hat and walked through the bedroom door. She heard his feet pad down the stairs and wrapped the bed sheet around her, intent on following him down. She saw the paper laying on the ground and read down the text of a letter to the barrister.\n\n..to bequeath my farm at Ashford to Ms. Sophia Latwicke de Grey...\n\nWhy would David be foolish enough to use her birth name? Did James think that she had known of the letter and was lying to him this whole time to leverage her way back into the society that had cast her out? She dropped the letter and ran after him to explain. He had put on his boots and was already walking outside as Sophia stood on the threshold, \"James...\"\n\nHe turned to look once at her his chest aching. Stop, you fool, the voice within him said. Take her back into the house. Love her..., the voice inside him said before it switched the voice of his uncle, ...marry her.\n\n\"Please don't go,\" tears ran down her face as she watched him quickly hitch together the carriage and fling open the gate, ignoring her cries.\n\n\"James!\" she screamed. Impossible words hung back from her lips; please don't go. I love you. She collapsed in the doorway, sobbing.\n\nHe hopped into the seat of his chaise, unable to bear her sobs, tears stinging his eyes and cracked the whip. With a start he was off, hearing the feet of his horse meeting the ground in rhythm. Normally he would hear them drumming out the syllables of her name. But this time there was only one thing he could hear in their gait; Coward... you coward... you coward...\n\n* * *\n\nThank you everyone for your support and feedback! Look forward to the conclusion of this story, coming soon. I hope you've enjoyed this so far, and please vote or leave a comment. ~Sushi Taco"
    ],
    "authorname": "sushi_taco",
    "tags": [
        "bodice ripper",
        "sleep sex",
        "1700s",
        "historical",
        "neighbor",
        "defense",
        "blonde",
        "big tits",
        "mdom",
        "love story"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-devils-inheritance-ch-05"
}