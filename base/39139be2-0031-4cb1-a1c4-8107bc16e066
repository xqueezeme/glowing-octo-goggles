{
    "title": "Falling for Grace Pt. 02",
    "pages": [
        "Dad was waiting for me when I got home, a little after 11:30. He was a little annoyed: I still had my own 11PM curfew on school nights despite being 18. He said \"I know how much you like Grace. I remember what it's like not wanting to say goodnight when the time comes. But Henry, you have to be up early in the morning, and so do I. You have a curfew for a reason. I'll let you slide this time, but next time, 11 means 11. Not 11:30 or even five after. Weekends are different, but school nights are 11. Are we clear?\"\n\n\"We are dad. I'm sorry. I'll make it on time next time. I need to tell you, Mike Teller and his girlfriend Karen saw us. He might ask me what's going on before he says anything, but Karen's a talker. I'm pretty sure it's going to get around tomorrow. I expected it, just not so soon, you know?\"\n\n\"Henry, if you go out in public, like for 'ice cream', you're bound to be seen. It would have been a miracle if you weren't seen tonight. Are you worried you might get in a fight?\"\n\n\"Not really. It's not that kind of crowd. But things will get said. And then you and mom... and Evelyn. We didn't discuss how this could affect her.\"\n\n\"We couldn't think of everything, right? Don't worry about your mother and me. We'll deal with it. As long as you're safe, that's all I care about. It's late, son. Go get some sleep. I love you.\"\n\nDad didn't say that to me much. A guy thing. I didn't realize how much I missed hearing it. \"I love you too, dad. You go get some sleep too. And thanks. For everything.\"\n\nHe just smiled at me and we headed off to our rooms. Sleep didn't come easy. I knew to expect all possibilities of attention when Grace and I decided to see each other. I just was hoping, naively, for a little more time. Eventually I did fall asleep, I don't know what time.\n\nI straggled down to breakfast and Edina and I shared our customary greetings and light conversation. Not long after mom and dad joined us it was time for me to go and face an uncertain day.\n\nWhen I got to school, I breathed easy. No one looked at me any different, no one said anything to me. Michael and Karen hadn't started the rumor mill, at least not yet. Second period, before AP history began, I ran into Michael. \"Hey, Henry, how's it going? You surprised me and Karen there. Who was that very fine girl you were with?\"\n\n\"No one you know. I met her recently, and we started dating, that's all. Not much else to tell.\"\n\n\"'Not much else to tell?' Are you kidding? I mean, she was gorgeous, no question, but come on.\"\n\nI cut him off there. \"Michael, be careful with your next words. I happen to like Grace a lot. She smarter than any of these Debs we go to school with, by a mile. Smarter than the guys too. Including me.\"\n\n\"Hey, I'm not knocking it. Just wondering, man. I wasn't going to insult her. But you have to admit, you and a black girl...is she from a well to do family? I know there are a few from the black side of the city.\"\n\n\"Actually, no she's not. Her mother is a maid.\"\n\nMichael looked stunned. \"So what is this, just a little fuck around thing? You can't be serious with her. I mean, look at your family, and she's the daughter of a maid. It's about pussy, right? Trying something from the other side of the tracks?\"\n\nI was now officially getting pissed off but before I could say anything, the bell rang for one minute until class started. I just said, quickly, \"You're so far off base. And way out of line. You should wish Karen was half the girl Grace is.\" I just walked off to class, getting there just in time.\n\nThings stayed quiet until lunch. I was sitting with my friends Darrell and Chris when I noticed some people just staring at me, a few girls giggling, others giving me sympathetic looks, but all were out of the ordinary. The word was out.\n\nMy best friend, Darrell, said \"Henry, what's up? Why are you suddenly the center of attention?\"\n\nTime to find out just how \"best\" Darrell was. He was also from a very old Charleston family and our mothers were good friends. \"It looks like Mike Teller and Karen have been telling people they ran into me at Point Lookout with a girl last night. Someone I really like a lot, like serious girlfriend like.\"\n\n\"OK, so, that's not news of the world. You've been a little casual about things lately, but it's not the first girl you've been serious with. Who is she and which class is she in? Ours or Junior?\"\n\n\"Neither. She doesn't go to school here. She goes to Jackson.\"\n\nThat set in quick. \"But Jackson is almost all black.\"\n\n\"Well, then it works out, since she's black.\"\n\nChris spoke up then. \"Listen to you. Always with the jokes.\"\n\nBut Darrell could tell looking at me it was no joke. \"You're serious. Wow. Holy shit. How did you meet her? And what's her name?\"\n\n\"Her name is Grace and she's Edina's daughter.\"\n\n\"You're dating your MAIDS daughter? Are you well in the head?\"\n\n\"Tell me you didn't mean that, Darrell. You know better.\"\n\nChris \"Wow, no wonder you're being looked at like a bug in a glass. Fuck it. Is she pretty?\" Chris' family was well to do but they had moved down from Philadelphia 10 years before. Race really wasn't a big deal to him. \n\n\"Actually she's stunning. And she's smarter than anyone here, just about. She's going to Columbia in the Fall.\"\n\nChris said \"Hey, and you'll be at NYU! That's great! You can keep seeing each other! I'm happy for you\" he said, sticking out his hand for a shake.\n\nDarrell pushed it away. \"Don't encourage him, shithead. Henry, forget what everyone here will think, or already thinks. Do you know what this is going to do to your mother? She's going to have kittens!\"\n\n\"My parents know, and they're both fine. Even my mom. I can't say Grace would be her first choice, but they met and it went very well. Better than my best friend is handling it\" I said, giving him a hard look.\n\n\"You had to expect this, man. I'm still your best friend. But this is a shock to the system. Chris is right though. Fuck it. If she's that special, I'm happy for you too.\" He stuck out his hand and I shook it, along with a delayed shake for Chris. \n\n\"Thanks guys. I get a feeling this is going to be hard enough. And I'm worried for Grace. Her school is kind of tough for her already, with her being so damn smart. You should know I already asked her to prom, and I'm going to hers next week.\"\n\n\"I hope you're ok at hers. Chris and I will stand by you here. Anyone wants to fight you, they have to go through us too.\"\n\n\"Yeah, all 140 pounds of me\" Chris joked. He was a short, kind of scrawny guy, but he was funny and a good person. \"I'll take the football team, you guys take the cheer squad.\"\n\n\"Seriously, guys, your support means a lot. I just hope your mom doesn't give my mom a bad time. She's worried about losing friends and about dad losing business. And I hope Evelyn's sorority doesn't give her a bad time when word gets to SC. The old grapevine will spread it there.\"\n\n\"I hope my mom doesn't make it too bad for her either. You're really making the last weeks of school interesting, brother.\"\n\nHaving Darrell and Chris on my side was a big relief. I didn't care too much what anyone else said...probably. I figured I'd find out just how much I could deal with in the next few days.\n\nI got home my usual time and said hi to Edina. \"I'll make you a sandwich, Henry. Just give me a few minutes.\"\n\n\"Hold it for a few minutes, Edina. I have to make a call.\"\n\nOK. Tell my daughter I said hello.\"\n\nI gave her a sheepish smile and ran up to my room. I could tell she liked that I wanted to call her daughter when I got home. It showed I cared about her and wasn't treating her as a casual fling. I called Grace right away. She took a few rings to answer. I didn't like the way she sounded. \"Grace, hey, it's me. Is anything wrong?\"\n\n\"Henry...\" she broke down crying and my chest ached. She just cried for a few minutes.\n\n\"Grace, do you want me to come over? Should I bring your mom home?\"\n\n\"No! You can come, but don't tell mom. Please.\"\n\n\"Grace, honey, she knows I called you. If I leave, she'll know I'm going there and she's going to think either somethings wrong or we're going to have sex.\"\n\n\"I'd rather her think that right now. Please, I don't want to worry her. She'll be home in a few hours and I'll deal with her then.\"\n\nSo I agreed, I'd come over but lie to Edina, which I liked doing as much as I liked lying to my own parents. But I needed to see Grace. More than anything right then.\n\n\"Edina, I'm going to go see Grace. Just to hang out, I promise. No funny business.\"\n\nShe looked at me with a look that could melt a glacier. \"You better not be doing any funny business in my house or you and I are going to have a problem. We clear?\"\n\n\"As crystal. I promise.\"\n\nI drove there as fast as I could. Again Grace was waiting for me. Her makeup was a mess from crying and her cheek was a little swollen. \"Honey, what the hell happened?\" I said, alarmed.\n\n\"Henry, I got jumped when school let out. Three girls got me right by the bus stop. I fought best I could but I had no chance against three of them. My right boob hurts too.\"\n\nI held her in my arms and let her cry. I was at a loss for words; I just had no idea what to say to comfort her. \"The worst part is I'm not crying because I'm hurt, I'm crying because I'm furious. They kept yelling \"Keep away from that white bastard\" and shit like that. I care so much about you, Henry. I'm not quitting you. No way.\"\n\n\"Grace...I don't know what to say. I don't want to quit you either. But I can't stand to see you hurt like this. And your mom...she's not going to let you keep seeing me, not when she sees you later and you tell her what happened. She's going to lose her mind, and I don't blame her.\"\n\n\"Henry, I'm 18. What about what I want? It's six weeks to graduation. I can take the abuse for six weeks. Besides, I've got a big brother who they're going to have to deal with. You wouldn't believe how protective he is of me.\"\n\n\"He can't escort you to and from school every day. Besides, won't they just come after you in school?\"\n\n\"Gus will make sure I'm not hassled if I ask him. But I'm going to try to deal with this on my own.\"\n\n\"Honey, I'm not worth this. Seeing you in pain like this... When I heard you crying on the phone, it killed me inside. It really did.\"\n\nShe leaned back and looked at me. \"Really?\"\n\n\"Yes, really. I wouldn't lie to you. I never will.\"\n\nShe caressed my cheek and I kissed her hand. \"I won't ever lie to you either, Henry. I care too much about you. And besides, you're wrong. You're definitely worth it. Let's sit down.\"\n\nWe sat on the couch and I just held her, gently so as not to hurt any tender areas. We just sat there, holding each other. Eventually she said \"So, dear, how was your day?\"\n\nWe both laughed; we both needed it. \"Not nearly as exciting as your day. Though it was a little interesting. The bad news is the school knows about us. The good news is my two best friends are standing with me. Darrell and Chris. Good guys. I want you to meet them soon. Speaking of soon, do you want to go see some music together Friday night? Bruce Springsteen is playing at the The University in Columbia. I can get tickets.\"\n\n\"I've heard of him, but I've never heard him. White people's music?\" she said jokingly.\n\n\"Every people's music. Come on, it'll be great. I heard he puts on these amazing three hour shows. Next time I'll go see whomever you want us to see.\"\n\n\"Great. The week after your prom Sly and The Family Stone are coming. You're taking me.\"\n\n\"Deal. Thank You Falettinme Be Mice Elf Agin\" I started singing, one of their big hits from the late 60s. Grace laughed her ass off at that. Hearing her laugh like that was good for my soul.\n\n\"Any guy who likes Sly Stone is amazing in my book\" she said with a big kiss. \n\n\"Amazing?\"\n\n\"Yes, amazing. But I already thought you're amazing, Henry. And I think you're the most beautiful guy I've ever seen.\"\n\nNot for the first time in the short time we knew each other , I thought how incredible Grace was. She made me feel so good about myself, much better than the superficial girls I was accustomed to going out with. \"You're amazing too, you know. And you're a real knock-out. More beautiful than any woman I've ever dated before.\"\n\n\"Yeah? And how many have you dated, exactly?\" Grace teased me.\n\n\"Hundreds and hundreds of girls. I'm a regular Joe Stud. Didn't you know?\"\n\n\"I've heard. And I've found out for myself as well.\"\n\nWe cuddled for a while more and then Grace said \"You know, baby, you haven't kissed me once since you've been here. Aren't you attracted to me any more?\"\n\n\"Silly question. I just know your cheek hurts. Besides, I didn't want to take advantage of you when you were hurting inside.\"\n\n\"My mom always said what a sweet boy you are. If she only know what a great lay you are\" Grace giggled. \n\n\"I don't think I want her to know that, any more than I want my mom to hear that, honey. But thank you. You're pretty great yourself.\"\n\n\"Why don't you kiss me already and then we can see how great you are today?\"\n\n\"Kissing you is no problem at all. The other, however...\"\n\nShe sat up and looked right at me. \"Don't tell me you don't want to, Henry. I want you very much right now.\"\n\n\"I kind of promised your mom no funny business when I told her I was coming over. She said not in her house. I don't want to lie to her. Besides the fact that I just don't want to do that, I'm pretty sure she'd see it on my face when I get home later.\"\n\nGrace laughed lightly. \"Don't think my mom has some sort of super powers there. She's just like every other mom out there. They use intimidation to try to keep us on the straight and narrow. Now, who are you more concerned with keeping happy? Me or her?\"\n\n\"You. Definitely you.\"\n\n\"Good answer. Come on.\"\n\n\"Wait one. I'm going to call home and ask if I can bring you home for dinner.\"\n\n\"After. Time's wasting.\"\n\nWe were back in Grace's room, and all over each other right away. She winced a little when I first kissed her but she wouldn't let me stop. Back and forth our tongues did their dance, and it was no time before I was good and hard as Grace let one hand cradle my cock and balls over my tan pants. Her touch was soft and comforting and I moaned as I reached to cup her ass in my left hand as my right reached for her left breast. Our lips were busy and eager, to taste each others mouths as well as other things. I certainly was.\n\nI helped her off with her simple black blouse, then her bra. I had to kiss her nipples and hungrily attached my mouth to the left one, licking and sucking as I held the mound to my face. Grace whimpered as I pulled with my lips and my teeth, her nipple dark, thick, and delightful.\n\n\"Don't ignore my right tit, baby. It needs some love too\" she moaned.\n\n\"I don't want to hurt you; you said you're sore there.\"\n\n\"I can take it. Just be a little gentler.\"\n\nI kissed my way across her chest, all over her full, brown pillows. I sucked on her right nipple, touching it gently as Grace sighed with pleasure. \"That's it, baby. Suck my tits. You're so good at this. So good to me. So good.\" \n\nI released my suction so we could get my shirt off, then we got out of our pants. Grace had on a sexy, tiny pair of panties that matched her bra and my excitement grew. I could have taken her right then, but I wanted to make her feel special because she was so special to me. \n\n\"Lie down, honey, on your stomach. I want to make you feel great.\"\n\n\"You already have made me feel better. And you always make me feel great\" she giggled. \"Always.\"\n\n\"This will be even more special. Lie down for me, honey.\"\n\nShe got on the bed, on her stomach, with her head turned to the side, looking at me. I climbed on so I was sitting even with her hips, both of us in our underwear. I leaned over and, after kissing Grace on her soft lips I moved to the back of her neck, lifting her thick natural hair and I kissed her there. Grace let out a small gasp as I moved slowly down to her shoulders. I kissed everywhere I could along her upper back, mixing it up with small nibbles and then my tongue.\n\n\"Damn, Henry, that's incredible\" Grace whispered with a shaking voice. \"You could do that to me all day long.\"\n\n\"If only we had time\" I said as I kissed the concave curve towards her lower back. Grace shook a little from that as my hands moved along her hips. She was breathing hard but let me keep playing with her. I got to the place where her ass began, right at the elastic of her panties. I pulled them down slowly over her carmel colored cheeks, kissing each cheek as they became more and more exposed. \n\n\"Dammit, Henry, you're making me crazy!\" Grace cried out. \"You're torturing me, you know!\"\n\n\"Do you want me to stop, honey?\"\n\n\"Hell no! This is the most exciting thing I've ever felt. Well, you know. I'm wetter than I've ever been before!\" \n\nI smiled to myself. I pulled her panties down, all the way down her legs and I kissed all along the crease where her legs met her buttocks. I could smell her soft scent, so wonderfully feminine and so arousing. I lifted her hips and pushed her thighs wider apart and there at the bottom I could see the soft hairs and the bottom of her lips, swollen and moist, and very, very tempting. \"Hand me a pillow, honey\" I asked and wordlessly Grace passed me a pillow. I think at that moment she would have done almost anything I asked her to do. I slipped it under her tummy so her ass stayed raised like that. I moved between her soft and firm thighs and I took a long lick from her juices as Grace cried out loud. Her ass shook as my face went between her cheeks and my tongue wiggled all along the length of her sweet pussy. I thought to myself how fantastic she tasted as I let my tongue explore her folds and creases and Grace made all these sounds of excitement. My nose was between her ass cheeks and I didn't care. I just wanted more of her pussy, more of her creamy juices, more of everything about her.\n\n\"I'm on fire, baby. Burning up for you! You'd better have a condom with you, because you're not leaving here without fucking me!\" Her somewhat dirty mouth was such a turn on. I needed to work on getting into that with her.\n\n\"You're delicious, like sweet honey on my lips. Your pussy, your ass...you're perfect all over. So fucking sexy\" I said before I bit her right cheek gently. \n\n\"Oh god, Henry, I need to cum! Stop teasing me already!\" I pushed a finger into her pussy, which grabbed it tightly. I lifted her hips higher and slid under her, face up, so I could lick around her clit while my finger kept fucking her, and Grace went wild, humping her hips up and down, practically smashing my face as she cried out loudly as she came hard. My hand was very sticky and I was struggling to breathe but I kept going all through her orgasm. Grace pushed down one last time, grinding her hips all over my face as her body finally relaxed and I just kissed her lower tummy and her mound of soft hair. She rolled to the side so I could get out and breathe a little easier but she couldn't speak for a couple of minutes. \n\nI kissed up her body until I was even with her face and she grabbed me and kissed me deep and hard, with all the passion in her soul. \"You've got to tell me where you learned that! Not that I've been with a lot of guys, but no one ever did anything even remotely like that to me before.\"\n\n\"You really want to know? Sure a little mystery isn't good for us?\"\n\nGrace reached into my shorts and started squeezing and teasing my throbbing cock. \"Tell me or I'm going to leave you like this, you naughty boy. I don't want to do that to you but I really do want to know.\" \n\nI was hard as steel and I wanted her more than anything. I'd have given away our nuclear codes right then to be pleased by her. \"One of my friends found a few 8mm movies in his parents draw and 3 of us watched one. It had this title 'How To Be a Great Lover.' We had no idea it was a dirty movie. We found out in like 2 minutes. This guy did those things to a girl and she was squirming all around. There was no sound, but it really didn't need any, not for us. I've never done it to a girl before but I wanted to try it with you.\"",
        "Grace had a naughty smirk on her face. \"Did you go home and jerk off after watching it?\" she asked in a very soft voice.\n\n\"Three times. I didn't tell you the rest of it, like what the girl did to him.\"\n\n\"Did she do this?\" she asked as she pulled down my boxers quickly and took the head of my cock in her mouth.\n\n\"Oh god yessss\" I hissed. \"Just like that. Then she went further down.\"\n\n\"Like this?\" she mumbled with my cock in her mouth. Down she went until I felt air coming from her nose on my pubic hair. Her tongue was massaging the bottom side of my cock, paying special attention to the glans. Grace rolled me onto my back and sucked up and down, her fingers teasing my balls. She did amazing things with her tongue, swirling around the head, then popping my dick back into her wet and hungry mouth. \n\n\"God, you're wicked, you know that? Such a hot blowjob...\" \n\nGrace took my cock out of her mouth again and rubbed the head all over her face. \"Do you like when I get naughty with you?\" Grace said as she planted kisses all over my dick. \"I've been hoping to meet a man I can be like this with whom I can trust not to brag to all his buddies.\"\n\n\"Never\" I gasped. \"I promise. This is between you and me, honey.\"\n\nShe smiled, gave me one more long suck and said \"Go get that condom. I hope.\"\n\nI scrambled for my pants and got my ever present condom. Grace urgently rolled it down on my cock and then straddled my hips. \"I told you it was my turn to be on top\" she said with lust clouding her face. \n\n\"It was actually your turn last time. But I'll take this.\" She rubbed my cock along the crease of her pussy, lubricating the tip of the condom and then she slid down, slowly bringing my cock inside her. I reached and held her hips, guiding her lower, until we were fully joined together. I felt like her pussy was a soft, warm oven, cozy and snug. Our eyes were locked. Neither of us could look away from the other. Our hands found each others and our fingers entwined as Grace gently rocked her hips back and forth, then side to side. \n\n\"Do that thing you do that I love so much, baby\" she gasped.\n\nI flexed my cock inside her and Grace cried out with pleasure. She moved up and down on my cock, and her full tits were bouncing just behind the motion of her hips. I let go of her fingers with my right hand and I moved my fingers so they pressed on her clit as we fucked.\n\n\"Fuck, Henry, you fucking monster! Don't stop what you're doing! Play with my clit, baby, press it harder!\"\n\n\"Fuck me, Grace. Ride my hard dick!\" I made it twitch a couple more times and then Grace came all over my dick, grinding her hips in circles. She bent forward and pushed her left nipple to my lips. \n\n\"Suck it, baby, Suck my tits. Bite them if you want\" she grunted as her hips slammed down on mine over and over, making loud slapping sounds.\n\nI couldn't answer as my mouth was full of her soft breast. I helped her, grabbing them both in my hands, moving my lips back and forth, sucking and nibbling as her pussy squeezed me over and over.\n\n\"Grace, I'm going to cum...\"\n\n\"Wait for me. I'm so close, baby...\"\n\nI did my best, thinking about anything but cumming. Then Grace pushed her lips to mine and we got off together, my ass twitching as I shot a heavy load into the rubber. Grace's pussy spasmed a bunch of times before we both settled down and just clung to each other. We kept kissing, tender kisses, all we could do. We both were sweating, but it was visible on her brown skin and it made her skin glow. I kissed her shoulder to taste the salty flesh, so sweet and savory. After a few minutes, she rolled off me, staying right next to me. \n\n\"You are wonderful\" I whispered as I kissed her full lips. \"In every way.\"\n\n\"So are you, baby. Such a good lover. You made me cum three times!\" she said with wonder.\n\n\"You're pretty awesome yourself. The best, honey.\"\n\n\"You've had so many to compare me to?\" Grace chuckled.\n\n\"A few. Just a few. But I can't imagine how anyone could be better. And honestly, all kidding aside, I really like just spending time with you. Talking, cuddling. Whatever. Though this is my favorite\" I said with a light tone.\n\n\"I enjoy spending time with you too. You're fun and smart. And so damn sexy.\"\n\nWe were just laying there, touching each other. Grace kissed my chest. I knew if she kept that up I was going to get excited all over again. I looked at my watch and saw it was 4:45. We had to get cleaned up if she was going to come home with me for dinner. \"I need to make sure you can come for dinner, honey.\"\n\n\"You don't have to do that. Two nights in a row...I don't want to push things, Henry. Besides, I don't want your mom to see my cheek. I'm going to have to deal with my own mom. She may push me to end things with you for 'my own good'. But I already know what's good for me\" Grace said with a very sweet smile. \n\nI held her tighter. \"Are you sure? I feel bad loving and leaving like this.\"\n\n\"It's ok, it will give me a chance to get cleaned up before mom gets home. I don't think we'll be able to see each other until Friday. I have soccer practice tomorrow and a game Thursday.\"\n\n\"Yeah, and I have a rehearsal for our class musical. Man of La Mancha. I'm Sancho Panza.\"\n\n\"You didn't tell me you sing! You have to get a ticket for me to see you! Sing a little for me.\"\n\n\"Friday before the concert. I'll sing along to a couple of Bruce Springsteen songs before the show. I've got some tapes of his albums. You'll love it.\" I had to get myself together and get home for dinner. \"Grace, honey, I had a great time with you. In every way.\"\n\n\"Me too, Henry. I'm so glad you came over. Not just for sex, though that was great. You really made me feel so much better. Even before\" she chuckled. \"Go get dressed before I decide not to let you leave.\"\n\nAs I got dressed, a crazy thought hit me. \"Grace, do you think your mom would let you stay out with me Friday night? I could get us a motel room. It's a two hour ride each way and the concert won't be over until after 11, maybe even 12. We can go up right after school, meet up with my sister for dinner. It will be a long day, Maybe if you explain it to her that way. I have to sell it to my parents too, even if we are 18.\"\n\n\"I don't know, Henry. She's not stupid, you know that. Knowing I'm having sex with someone is one thing. But this is like rubbing it in her face.\"\n\n\"Try, Grace. I'll ask my folks tonight. I'll try hard. I'll push the safety aspect.\"\n\n\"I'll talk to her, baby. Best I can do. I may be 18 but you know her.\"\n\n\"OK, do your best. Call me later? After 10, so we get our homework done?\"\n\n\"I will. I'll miss you until later, baby.\"\n\n\"Same here, honey. A lot.\" We kissed, keeping them small and light. It was hard enough saying goodbye without getting ourselves all worked up.\n\nI got home just before dinnertime. Right away Edina asked me \"Is my Grace all right? You practically ran over there.\"\n\n\"She's fine, Edina. I'll tell you now, she's got a bruise on her cheek. Some girls went at her after school. She's fine, but she was upset and I went to comfort her.\"\n\nEdina got a very worried look on her face. \"She got into a fight? What about?\"\n\n\"About me, Edina. I'm sorry. More than you can guess.\"\n\n\"Henry, this is the kind of thing I was worried about. You may like her a lot, care about her, but she's my baby.\"\n\n\"I know. I told her I'm not worth this. She disagreed with me. I can't make her want to stop seeing me, Edina. And I honestly don't want to stop seeing Grace. She's the best thing to ever happen to me. I mean that.\"\n\nEdina looked resigned. \"I can't stop her, and I don't really want to. Not if you two like each other that much. But I worry about her. Someday you'll be a parent and you'll understand. Now go get cleaned up, dinner's almost ready.\"\n\nI had dinner with my parents and afterwards I offered to drive Edina home. \"You're going to spoil me like that. Go do your homework. I'll be fine on the bus. And thank you, Henry.\"\n\nAfter dinner, I called Darrell and asked him about tickets to the Springsteen concert. He had a connection in the ticket office who, for the right price, could come up with tickets, even at a late date. No problem, he told me. He gave me a price above the ticket value and I told him I needed two. He told me he was bringing a date as well, so we were going to be a foursome for the night. We also discussed staying the night, if his date was also interested.\n\nLater that night, after 10, Grace called. It was a good time for her to talk; Edina was asleep and Gus didn't get home from the restaurant he worked at until after 11. \n\nI picked the phone up on the first ring. \"Hey honey. I was thinking about you.\"\n\n\"Oh yeah? When was that?\" Grace teased.\n\n\"All night long. All day long. You're kind of hard to forget. Impossible, actually.\"\n\n\"Damn, I wish you were here right now so I could cover your face with kisses.\"\n\n\"I kind of warned your mom about your fight when I got home.\"\n\n\"I know. She came storming in, worried about me. I kind of wish you hadn't done that.\"\n\n\"It's hard enough having to deceive her about our other activities. She was wondering why I was in such a rush to see you today. I can't lie to her unless I have to. I'm sorry, Grace.\"\n\n\"It's ok. She's worried about me, but I told her I can handle it. I'm not breaking up with you, Henry. It's not happening.\"\n\n\"I'm very flattered. I don't want to break up either. I told her you're the best thing that ever happened to me, like I told you. I think that impressed her deep down. So I arranged for tickets for Friday night. We're going with Darrell and his date, whomever she is. We also agreed it would be best to spend the night. So now I just have to ask my folks. I mean, they can't really stop me. But they can be unhappy about it. So what do you think? Are you going to ask your mom?\"\n\n\"I don't think she'll be happy about it, but I'll explain it as a safety issue, like we discussed. If she doesn't like it still...well, I would do it anyway but then she'll be furious with you. I don't want that for you and for how it will affect her job, possibly. I'll ask in the morning. You'll know her answer by how she treats you at breakfast\" she giggled.\n\n\"Yeah, funny. Very funny.\" A short pause. \"I really miss you, honey. I miss you whenever we're not together. I feel like we've been together for months or more, not just a little more than a week.\"\n\n\"I know. I'd love it if you were here cuddling in bed with me. Just cuddling. It would be wonderful.\"\n\n\"We can hopefully do that Friday after the show.\"\n\n\"I have a feeling we're not going to be doing a lot of cuddling. It might be the last thing we do.\"\n\n\"Mmm that sounds great too. All night with you. We might not sleep much after all.\"\n\n\"Sounds great to me. Perfect. We both have to get up early, Henry. Call me tomorrow after dinner? I want to hear how your day went.\"\n\nThat made me just melt a little inside. \"That's very sweet, Gracie. I'd love to call you. Good night, honey. Talk to you tomorrow.\"\n\n\"Gracie? No one's called me that in years. But you can. You can call me anything you want. Almost.\" More sexy giggles. \"Good night, baby. Miss you already\" and then the phone clicked.\n\nBetter ask my parents now, before the morning, I figured. I knocked on their door and they told me to come in. It wasn't a simple discussion. If it had just been me and my guy friends, they would have been fine. But spending the night with a girl in a motel was pushing them and their conservative values. The safety aspect tilted the scales. They said if Edina approved, then they did as well. With reservations.\n\nThe next morning, when I went down for breakfast, before my parents came down, as was usual, Edina was silent with me. \"Edina? You're giving me the silent treatment? Come on, talk to me. Please.\"\n\nShe turned away from the stove and gave me her hard look. \"Look, Henry, this whole thing between you and Grace... I'm happy she's dating a nice young man, someone I know so well and know is responsible. Someone I know treats her kindly. She's 18 and going away to school in a few months. I can't tell her what she can and can't do any more. But I don't have to like it. Not certain things. I raised her to be God fearing. I know how you young people are. You didn't invent... sex... before marriage. But that ain't how I raised her. She was right; it's much safer than you all driving two hours at midnight. But neither of you are fooling me. I know what's going to go on in that room that night. Just let me get to terms with it. Might take a day or two. We're still friends, Henry. You just be careful with my girl.\"\n\n\"Understood, ma'am.\" I always called Edina 'ma'am' when she was in the elder demanding respect mode. She deserved it and earned it. \n\nGrace and I talked that night, and we were excited to be spending Friday night together, all night, despite both our parents discomfort. I'd never spent the entire night with a girl before, and Grace hadn't spent one with a boy. It was a big step in our relationship and in our fulling passing to adulthood.\n\nAll too slowly, it finally was Friday at 2:30, and school let out. I had said my goodbyes to my parents that morning, got the usual short lecture about driving carefully including no drinking and driving, being 'careful' spending the night with Grace (translation: no pregnancy!) and I told them not to worry and we'd be home by late afternoon. I said goodbye to Edina, who was better if not completely comfortable with the situation. She gave me a last word about respecting Grace, which I promised to do for the umpteenth time. I wasn't annoyed about it; Grace was her daughter and her youngest and she just wanted to look out for her.\n\nSo at 2:30 I drove over to pick up Grace from her school. After her fight on Tuesday, things had calmed down for her, surprisingly. I wondered what changed, but I wasn't about to complain. Things were tense for her, but non-violent. That was good enough for her, and for me. I had to wait a few minutes for her, but then Grace was there. I went to get out to open the door for her, but she just climbed in without waiting and gave me a very tender kiss. It was so great seeing her after not being able to do so the past couple of days. It was like a huge weight off my chest.\n\n\"Hi honey. You're a sight for sore eyes. You make me feel like I'm walking on air just seeing you\" I told her.\n\n\"You keep talking like that, we're going to have to take a long stop at my place\" Grace said with a big, brilliant smile. \"We have to go anyway, so I can change and get my bag. Just 20 minutes. What time are we meeting Darrell and...?\"\n\n\"Her name is Cynthia. He's been seeing her not so seriously for a month or so. We meet them at 4 at Cynthia's. We're taking my car, so you can all get to know each other. And we're meeting Evelyn at her sorority house when we get there and she's joining us for dinner. She and her boyfriend also have tickets to the show. Oh, and we're checking into the motel when we get there, before going to meet Evelyn. That way after the show, we can just go to our rooms.\"\n\n\"Wow, you have this whole thing all set up. The former Boy Scout in you?\"\n\n\"And the discipline from my parents and your mother. I was well trained.\"\n\n\"So, Boy Scout, did you bring the condoms we'll definitely need?\"\n\n\"I did. I've got a half dozen.\"\n\nGrace laughed like a crazy person over that. \"Really, that sounds like I shouldn't expect to get any sleep. Your poor dick is going to be very sore. Not to mention my pussy.\"\n\nMy cock twitched a little just hearing her talk a little dirty. \"Don't worry. I don't expect to use them all. I figured I'd come home with one, maybe two\" I said, grinning at her.\n\n\"Might save another one or two. You don't need them when I give you a blowjob. And I plan on giving you a blowjob. Maybe two. You're very tasty.\" Damn, she was turning me on. When we pulled up to her house, my cock was tenting in my jeans.\n\n\"Come on inside, baby. My bag is packed, but I have to change and do some makeup. Get us a couple of cold drinks.\" I went and poured two sweet teas and gave one to Grace as she went into her room, even closing the door. Some things were just private still. \n\n15 minutes later, Grace came out, looking hotter than I'd seen her before, by a lot, and she was a naturally sexy woman. She had on a very tight red with white stripes tee-shirt that made her tits look even bigger than they were. On bottom she had on a black snug short skirt, only about six inches below her ample ass, which was perfectly shaped. Black pantyhose covered her legs and she had on a pair of ankle boots with a 3 inch spiked heel. A little make up on her eyes and cheeks and a soft lipstick. My heart was pounding just seeing her and my cock was crying out for freedom from my own tight pants.\n\nI stood up, carefully, and took Grace in my arms as I kissed her passionately. \"Honey, you're so hot! Gorgeous. You could stop a clock!\"\n\nShe gave me a sexy smile and returned my kiss with her own, reaching down to squeeze my ass. \"You make a girl want to blush. And do other things. Speaking of which, it's 3:20. Think you have time for one of those blowjobs I promised you?\"\n\nI never met a girl who was so open about what she wanted sexually before. And most girls I knew or knew of gave head as a kind of obligation. Grace was completely different. She enjoyed it, probably both for the pleasure it gave her partner and the control it gave her. \"We have about 20 minutes. Should be plenty the way I'm feeling. But what about you?\"\n\n\"I'm not getting out of these pantyhose until much later, except to pee. You'll make it up to me tonight. I'll make sure of it.\" She unbuttoned my pants as we stood there staring into each others eyes. Those big, dark brown eyes that held my gaze. I felt her hands undoing each button on my fly. Before she pulled out my extremely excited dick, she whispered \"Do you want to sit or stand? Tell me what you want, my sexy man.\"\n\n\"I'll stand\" I said in a trembling voice. No girl ever talked to me or treated me like this before.\n\nGrace kissed me lightly before she dropped down to her knees, pulling my pants down around my ankles. She held my cock around the base, looking it over. \"Baby, you're so hard! I get a feeling this isn't going to take long at all. But I'll try to make it last for you.\" She kissed under the head, then her tongue flicked out to tease my tip. \"Henry, look at me. Watch me.\"\n\nFor someone who wanted to try to make this last, she was doing things and saying things almost guaranteed to make me pop fast. Her tongue slithered along the shaft, then all around the head before she took just the head between her lips, sucking gently. I moaned out loud as Grace's lips slowly continued their way down along my cock, taking me in almost to the base. I could feel her tongue massaging the underside of my cock and I closed my eyes to divert my mind, trying to make this last as long as I could. But Grace wasn't going to let me off so easy. \"Your dick tastes so fucking good\" she said as she kissed my balls. She gave my balls a tongue bath, nice and wet, as her thumb caressed the glans under the head and I was going nuts. My hips were bucking and my cock started twitching in her soft hand. \"Oh I love when your cock does that, baby. I wish it was deep in my pussy right now, twitching away inside me. I'm going to fuck this monster so good later, fuck it like it's our last fuck. But it won't be. We're going to fuck so many times.\"\n\n\"Fuck Grace, I'm getting close. I don't think I can keep from cumming...\"\n\nShe quickly pulled away and pressed her thumb right at the base of my cock on bottom and that relieved the impending need to cum. I fleetingly wondered how she knew so much about this, but I decided it wasn't my business. I was just happy to be the beneficiary.\n\nAfter a few seconds she started sucking me again, licking rapidly around the rim of my cock, bobbing her head up and down faster as her free hand reached up to rub my chest and tummy. Her lips were pulling on my cock, which was twitching again, this time in her mouth. I felt my balls pull up to my body and I started shooting warm jets of my cum into her throat. Grace kept up with my pulses, swallowing every few seconds as she drained my balls of my sperm. Then she just held me between her lips, sucking much softer, pulling the last few dribbles from my slowly softening cock. I looked down as she looked up with a very happy expression. Wordlessly I helped her up and kissed her hard, cum on her lips and tongue, and I just didn't care. I would have kissed her no matter what was on her lips.",
        "I held her close as I whispered \"You're amazing, honey. No exaggeration. Amazing. I'm not even talking about the blowjob. I'm talking about you.\"\n\n\"The blowjob helped, though, didn't it?\" Grace chuckled in my ear.\n\n\"It didn't hurt. Seriously, we are going to have such a great time tonight. Both at the concert and after. We may not get much sleep.\"\n\n\"As long as you can drive home tomorrow. Let me go fix my makeup and we can get going. I think you need to clean up little before you pull your pants up.\" \n\nI struggled to the bathroom where I washed and dried my genitals before making myself presentable. Ten minutes later we were out the door and on our way to Cynthia's.\n\nDarrell and Cynthia were ready when we got there and just hopped in my car and we were on our way. During the almost two hour drive, everyone got along great, and we were all laughing and talking like old friends. Cynthia was a very cute, very petite redhead with silky straight hair down to her shoulders. She and Darrell seemed to like each other a lot. She was a very sweet girl and she was very nice to Grace. \n\nWe found the Holiday Inn we had booked rooms for and I used the credit card my father had given me for use in emergencies or for things he or mom had approved of. We were given adjoining rooms, clean, nothing fancy, with queen sized beds in each room. Very comfy. We dropped our bags, everyone used the bathrooms and then we went to meet up with Evelyn.\n\nWe got to the university before 6 and a few minutes later we were at my sisters sorority house, one of those old Southern style gothic building. She was waiting for us in the lobby and after big hugs for Darrell and her baby brother she met our girls. Mom had told her about Grace so it was no surprise to her that she was black, but some of her 'sisters' were glancing more than what would be appropriate as they walked by. After a little getting to know you chatting, we went to a local pub where Evelyn's current boyfriend. Keith, met us. Nice guy, very good looking, very preppie, fraternity member, someone my parents approved of. Someone I was supposed to become. But I was rethinking all that since I met Grace.\n\nWe had a good time, sharing a couple of pitchers of beer with burgers or pulled pork sandwiches and at 7 we all headed over to the arena, a ten minute walk away. We got our tickets at will call from Darrell's connection, 12th row off center. And we had a great time, including Grace, who wasn't familiar with any of Bruce's music before. We didn't sit through the entire concert and we danced at our seats. Grace and I threw our arms around each other and kissed on and off. It was without a doubt the best date either of us ever had to that point.\n\nThree and a half hours later, we left feeling great in a big crowd. We met up with Evelyn and Keith and walked towards her Evelyn's sorority house. We were all feeling great, laughing together over jokes. Nearby were some frat boys and we couldn't help hearing them talking about the 'n****r' girl with the white 'folks'. They made a few nasty cracks and I was getting steamed. I tried to remember my father's advice, tried to ignore them, but they were getting more and more obnoxious as we walked. I reached for Grace's hand and our fingers locked. I glanced sideways at her face and saw that she wasn't taking it bad, certainly not as bad as I was. Finally, thankfully, they wandered off to whatever frat house they infested and left us alone. We said goodnight to Evelyn and Keith, both of whom were clearly embarrassed. Evelyn hugged me and whispered \"Don't listen to those idiots. She's a great girl and you're very lucky to be with her.\" \n\nI always loved my sister, always looked up to her. She kissed my cheek and I looked at her with greater admiration than usual. The four of us got in my car and headed to our motel, where we parted from Darrell and Cynthia for the night.\n\nI sat on the bed, feeling bad. I didn't stand up for the girl I thought the world of. I thought I might even love her, but I wasn't ready to say that to her just yet. Besides, you don't say I love you to a girl you just let down. \n\nGrace sat next to me and took my hand. We just sat there for a few minutes before Grace said \"I've got to take off these boots; I didn't expect to dance all night in them. Thank you, baby. This has been an amazing night. The best of my life.\"\n\n\"Until the concert was over and I let you down\" I said staring at my hands. \"Hell of a guy I am.\"\n\n\"That's right, you are a hell of a guy. The best I've ever known.\"\n\n\"Don't break my balls, Grace. You know I chickened out back there. I didn't even confront those idiots.\"\n\n\"That's right, you didn't. Thank goodness.\" I looked over at her quizzically. \"You ignored them. Like your father told you to do, like my mom told you to do. Like I hoped you would do.\"\n\n\"Grace, they humiliated you.\"\n\n\"Bullshit. You're pissed because the humiliated YOU. I've heard that word and worse before. I know the people who use it are worthless and hardly worth my time. So they called me a n****r. I've been called worse. A lot worse by a lot better than those fools. The guys I usually date would have escalated the situation until at the very least there was a big fight and at worst someone would have ended up stabbed or shot, lying on the ground, possibly dead. You can't think I wanted that. Never. And certainly not with you, Henry.\" She leaned back against the headboard sticking her feet in my lap. \"Baby, please rub my feet. They're sore as hell from having a great time dancing with you.\"\n\nI took her left foot in my hand and started to massage it with my fingers and thumbs. Grace sighed her approval. \"Henry, baby, you did what you were supposed to do, and if we're going to be together, you have to shake that shit off. We're going to hear it from all sorts. You can't fight these people with your ego. Because even if you win, you'll lose. Get used to walking away, Henry. I'll love you the more for it.\"\n\nI was startled by that. \"Grace, you said you'll love me even more...\"\n\nNow she was at a loss for words. \"I...ah...ummmm...\"\n\n\"Gracie, you said it, honey. I won't hold you to it if you weren't ready to say it and it just slipped out. But if you meant it...please be honest with me.\"\n\nShe was silent for a long time. We could hear Darrell and Cynthia getting busy in the next room and we both giggled, breaking the tension. \"They're inspiring me, baby. My pussy has been hot since this afternoon. Help me get these pantyhose off so you can make it up to me, like you promised!\"\n\nWe left the big question unanswered, giving Grace a break. For now. I slid my hands slowly over her nylon encased legs and Grace moaned her approval. Up along her calves, behind her knees, which caused her to suck in a deep breath. Then along the inside of her thighs, which made her legs tremble and her head twist right and left. Higher, under her skirt. Even through her hose I could feel the heat wanting to burst from inside her. \"Henry, I don't care if you tear my pantyhose off, just get them out of the way already!\"\n\n\"You mean like this??\" I asked with lust in my voice as I tore her hose away from her crotch, tearing them into shreds, and Grace cried out loud. \n\n\"Get up here and kiss me, you sexy bastard! Keep touching me, but kiss me!\"\n\nI was up and on top of her like I was a bullet shot from a gun. There was nothing slow or sensual about our kisses. They were lusty, hungry, desperate. My hands were full of her tits under her shirt which we both managed to get over her head. Her black bra was gone seconds later and I was kissing her all over her shoulders, her throat and then her tits, a slightly lighter brown than the rest of her body. Grace hissed when I took her nipples between my lips and teeth and my right hand was under her skirt and down the front of her panties. She was so sticky and wet and her hips were grinding her pussy hard on my fingers. I kept sucking her full tits as I pushed first one, then a second finger into her grasping pussy. When the second finger entered, she let out a huge cry that Darrell and Cynthia must have heard, but we didn't give a damn about that. Her pussy was making loud, squishing sounds as my fingers fucked her fast and Grace came, hard, as she wrapped her legs around my hand and she kissed me as hard as she came.\n\nGrace settled down slowly as we kept exchanging loving kisses. Our bodies were close together and she could feel my cock, desperate to get out of the confines of my pants. She whispered \"Poor Henry. We have to make sure those big balls don't turn blue. And I could definitely go for some more of you. Maybe all night long. Let's get out of these clothes.\"\n\n\"Anything you, say, honey. I want you more than anything in the world\" I gasped in her ear and I noticed she shivered when I did that. Then I blew softly into her ear and she let out a whimper. We shed our clothing, tearing off the remainder of her pantyhose and soon we were gloriously naked. My cock rubbed on her flat tummy as we kissed and rolled around on the big bed. I took a condom from the side table and laid back as Grace slowly rolled it down along my throbbing dick. \n\n\"You're so fucking hard\" Grace whispered with a lusty gaze. She kissed my balls all over as she lightly stroked my cock. Even with the condom on, her touch was incredibly exciting. \n\n\"You're going to make me cum if you keep that up. I think neither of us wants that, do we?\"\n\n\"Absolutely not! I have a much better idea for your cum!\" She got on her hands and knees and her ass and pussy were aimed right at my face. \"I've wanted to try this position for a while now\" Grace said breathlessly. \"Take me, Henry! Make me yours! I'm so fucking hot again!\" And as if to make her point, she reached between her thighs and ran her fingers up and down her dripping gash.\n\nI could have filled the condom right then, but I took a few seconds to get control of myself, moved behind her, and pushed my cock into her needy pussy, sliding all the way into her in one easy stroke. \n\nI'd never fucked a girl doggy style either, but I knew we'd be doing this again. We were both moaning and grunting with every stroke. This felt so dirty, in the best meaning of the word. My hips were smacking against her ass and the back of her thighs. Grace grunted \"Fucker, smack my ass! Make it sting! And keep fucking me!\"\n\nI slowed down, taken aback by what Grace asked me to do. I actually asked her \"Are you sure that's what you want?\"\n\n\"Spank me, dammit! Don't be so damn nice, motherfucker!\" Wow. As shocked as I was, I was more turned on. I started fucking her again and I spanked her ass, not sure how hard was too hard, so I did it kind of lightly. \"Harder\" she moaned, \"I can take it! Harder!\"\n\nI smacked her ass again, as hard as I dared, and she cried out \"Yes! More!\" I slapped her again and again. By now we were going so hard the bed was shaking, hitting the wall to the adjoining room. Darrell even slammed his hand on the wall and we could hear him and Cynthia laughing. Grace and I were too far gone to give a damn. When her ass turned a pinkish color I stopped spanking her and just grabbed her hips so I could pound her harder. \n\n\"This is what you want? To be fucked hard and dirty?\"\n\n\"Yes! Oh fuck, I'm going to cum! Spank me one more time!\" I slapped her ass again and Grace came again, grinding back into my hips as my cock twitched inside her. \"Fuck my cunt!\" She grunted as she came again, squeezing my cock and I was ready myself. \n\n\"I'm ready, going to cum!\"\n\n\"Wait!\" She shouted, sliding off my dick and turning around quickly. She pulled the condom off and jerked my cock hard, aiming it at her big tits as I splattered them with thick strands of my seed. The pearly white semen contrasted with the rick brown of her skin and I thought I would never stop spraying her as I kept moaning and my body shook. Eventually I was down to a few drops which she licked off my cock. It was the most intense sexual experience of my life and I thought I'd never be able to top it (I was wrong!). I fell back on the bed, covered in perspiration. Grace moved to me, also sticky and pressed against me. I didn't care about my cum on my body; I'd jerked off plenty of times and many times it got on my own body. Our bodies were hot and spent. Through the wall, we heard Darrell and Cynthia applaud and laugh. Cynthia yelled \"ONE MORE TIME\" and Grace and I both laughed hard with them. It could have been kind of embarrassing, but instead it felt like we were all very close friends. \n\nWe took turns in the bathroom cleaning up and then cuddled in bed together. It was nice just laying there, not having to rush to either get home or worry about being caught by a parent. It was late, after 1:30, but we weren't tired. Grace was playing with my sparse chest hairs and I was tickling up and down her spine.\n\n\"You're incredibly sexy\" I said softly. \"And incredibly naughty, sometimes.\"\n\n\"I don't know what came over me\" Grace said with her head on my chest and her leg around mine. \"Sometimes with you I just want to get so nasty. You know, girls talk like guys do. And my friend Janelle has been telling me about all these things she's tried with her older boyfriend, even when I ask her to stop already\" Grace said with a chuckle. \"Evidently he's been getting her to try all sorts of things. She says she feels sexy and a little slutty with him and it gets her off. And sometimes when we're together it hits me like that. I never felt like getting that way with previous boys. You do something to me, Henry. I do know what you meant about feeling like you got hit by the thunderbolt. It's like that for me now. I see you and I get all turned on and want to try and do everything I can imagine with you.\"\n\n\"I never thought of it in that way. But now I am. I want you too, honey, in every kind of fantasy I can imagine. But just with you. Grace, may I ask you something?\"\n\n\"I guess. I'll try to answer you.\"\n\n\"When you said you'd love me even more before, when we were talking about how I reacted with those assholes...did you mean you love me?\"\n\nGrace was very quiet. \"It's kind of scary to say it if you're not sure you're going to hear it back.\" I could feel her uncertainty from the way she was holding me. I felt the same fear.\n\n\"Grace, what if I told you I think I love you?\" I took the leap of faith.\n\n\"Really, Henry? You're not teasing me or anything, are you?\"\n\n\"No way. I wouldn't do that to you.\" Come on, say it back, I was thinking.\n\n\"Henry, I...I think I love you too. I know I never felt like this before. It feels like what I expected love to feel like.\"\n\n\"Me too. I never felt this way about anyone. I hurt when I have to leave you when we're together. Actually hurt. And I feel like I want to explode when we're together, in the best way imaginable.\"\n\n\"Henry, you can't say things like that to me without kissing me.\" I turned us so Grace was laying back with my arm under her, staring into her eyes. I could see what she was feeling, and I know she could see it in my eyes. We kissed, gentle and tender kisses which became one big long kiss, deep and loving. Over and over we shared great kisses. My cock was back to fully hard and I could tell the way Grace's nipples were poking up that she wanted me as well, despite the hour. Our bodies rubbed against each other, increasing our arousal and desire for each other. I reached for another condom but Grace stopped me. \"No, Henry. Just this once, I want to feel YOU inside me. Just pull out when it's time. Please baby.\"\n\n\"I understand. I want to feel you too. And I want to go slow. I want to love you now.\"\n\nShe just nodded her head. It was what we both needed. To take our time, quietly, so that what we shared was just between us. We didn't even want Darrell and Cynthia to know. This was our own private love.\n\nGrace pulled her legs back so my arms were behind her knees. She reached for my cock and knowingly guided me to the entrance to her pussy. I slid in very gradually and we both gasped from the incredible pleasure of the moment. Grace bit her lower lip as I filled her, and when we were fully joined, I leaned over and kissed her and kept kissing her as I felt her warmth surround my cock. We just ground our hips together for a while and when we broke our kiss I saw a couple of tears dripping down her cheek. I kissed them from her face, tasting her salty tears and she grabbed my face and kissed me again and again, on my lips and my nose and cheeks. I did the same to Grace. It was a beautiful moment in time.\n\nI stretched out along her body, my legs apart, so I had better leverage to control my movements. We took our time as small waves of pleasure kept flowing through us both. I was moving in and out of her pussy now, pulling back almost all the way before thrusting back inside, gently, not rushing. Grace's hands rubbed my chest and back and I moved my head to suck softly on her left nipple, then moving to her right. She was so warm and tight around my cock, squeezing me easy. I twitched inside her, sometimes on purpose, sometimes my body doing what it needed to do. The sounds we made were soft but full of lust. I felt Grace cum twice, not the explosive orgasms she had earlier, but pleasant waves that she rode to comforting peaks. Finally she whispered \"Baby, it's time, I want you to cum too. I can bring you off if you prefer.\"\n\n\"I'd like that very much, honey\" I whispered back as I kissed her sweet lips. I rolled off her body and she moved over me. I expected her to use her hand or her mouth, but she had a surprise for me. She got up on her feet and moved like she was going to ride me, but instead she pushed my cock flat to my body as she moved her pussy back and forth along my shaft, fucking without penetration. I touched her all over as she moved faster, groaning as the glans of my cock kept rubbing repeatedly over her clit and her very wet slit glided along my length. Back and forth, amazing pressure on my hips and I was very close. \n\n\"Grace, I'm going to cum\" I informed her of my impending climax.\n\n\"Let it go, baby. Cum for me. I love you.\"\n\n\"I love you too\" I said, much quieter than I really wanted to, and I shot thick ropes of cum up my stomach to my chest. The first shot even reached my throat due to the force of my ejaculation. Grace came a final time a few seconds later before she just fell upon me, kissing me as I kissed her back. We were both breathing hard as our bodies just went slack. Now she was the one sticking to me. We both kind of stank of sweat and sex, but we were too tired to shower. We barely had the strength to go to the bathroom and just clean up enough to sleep and we were way too tired to even put on what we wore to sleep in, preferring to sleep naked. We got under the blanket and held each other in incredible contentment. I stroked her arm and shoulder and she snuggled close to my chest and leg. I could get very used to this, I thought.\n\nBefore we fell asleep, we talked, just for a couple of minutes. It had been a long day. A great day, though. Probably the best of my life. \"Grace, honey, I was serious before. I do love you.\"\n\n\"So was I, Henry. I love you too, very much. You're the nicest, sexiest man I've ever met. You're smart and classy. It's very different from what I'm used to.\" \n\n\"I feel the same. Except you're a woman.\"\n\nShe pretended to slap my stomach. \"Now who's the ballbuster? Seriously, you're very sweet, baby, but I'm pretty tired. Sorry, I thought we could go all night.\"\n\n\"Would have been nice. Maybe if this had been a Saturday night, not a school night. We've been on the go for almost 20 hours. We both need some sleep. I'm going to enjoy sleeping in your arms, Gracie, and waking up next to you. Maybe we can have some fun in the morning. Right now, though, goodnight, honey. I love you.\"\n\n\"I love you too, Goodnight, baby.\"",
        "We kissed one last time and we fell right asleep.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nAround 10, Darrell knocked on the door connecting our rooms. Loudly.\n\n\"Hey you two animals, wakey wakey. Are you decent or indecent? Indecent works for us.\"\n\nWe struggled to wake up and since we were both under the covers I told him to come in. Darrell opened the door and he and Cynthia came in in their sleep attire, applauding us again, so I grabbed a pillow and threw it at him. Grace grabbed another and covered her face in mock shame before breaking out in laughter. \"Were we really that loud?\" she asked with a big smile.\n\n\"Loud? We're surprised to see the bed's in one piece!\" Cynthia chuckled. She had a hell of a sense of humor. They made a cute couple. \"Seriously, when we thought about it this morning, we attacked each other. I'm surprised we didn't wake you two up!\" They kissed and held each other. Very cute.\n\n\"Well, we just got up, so why don't we meet in at 11:30 and check out, then go get a big breakfast?\" I asked. \"Besides, I have to piss like a racehorse!\"\n\n\"So? We're all friends\" Darrell said. \"We're in our sleep clothes.\"\n\n\"Yeah, but we're not\" I said with mild embarrassment.\n\nThey chuckled at Grace's and my predicament. \"So? As I said, we're all friends here\" Darrell said with a shit eating grin.\n\n\"OK... GET OUT!\" I yelled as we all laughed hard. \n\n\"We're going. You two have plenty of time to...shower\" he grinned as they finally left us alone.\n\n\"I like your friends a lot\" Grace said, kissing me good morning.\n\n\"They're good people. I can't wait to meet some of yours. Maybe even one afternoon before your prom on Friday.\"\n\n\"We'll see\" Grace said with another kiss. \"I've got to pee too. Ladies first\" she said as she scooted out of the bed and I was treated to the view of Grace's butt, tight and curvy, as she semi-ran to the bathroom. Beautiful from every angle.\n\n\"Just pee! I've got to go too! Urgently!\"\n\nShe did her business and I did mine, a major relief. Then we got back into bed and started making out.\n\n\"We have an hour and a half\" Grace whispered in my ear seductively. \"Think we should give them something to cheer about?\"\n\n\"Absolutely! Let's make them jealous!\" We were all over each other and it didn't take long for our bodies to respond. Grace pushed me on my back and got between my legs, forcing them apart. \n\n\"Mmm look what you've got for me to play with. I wonder which of us is going to have more fun?\" she teased. Then she bent lower and took a long lick of my cock. That was enough to make me groan in ecstasy. Her tongue was wet and warm and she used the flat part to cover as much of my dick as she could before she used the tip to tease the rim of the crown. \n\n\"God, what you're doing to me\" I groaned. \"You're a wicked little tease.\"\n\n\"Tease? I never teased you. I always give you what you want, and I get what I want. I never\" a kiss on the head \"ever\" a lick along the shaft \"tease you. And you're going to fuck me nice and hard because you never, ever tease me either.\" With that she reached over and grabbed a condom, sliding it down my cock with her lips. I never had a girl do that to me before. If I had to wear a rubber, that was the way to do it. \"Lay back. I'm riding you this morning.\"\n\nGrace held my cock and just went down, her slippery pussy welcoming me inside. She whimpered when I was all the way in and she just rocked back and forth for a while, her eyes closed. I massaged her breasts as my thumbs pressed her nipples, causing her to let out a soft cry. \"Baby, that's so good\" she said in a guttural moan. She put her hands on my chest, scraping my nipples with her nails which sent tingles down my body to the back of my knees and the bottom of my feet. I pulled her to me, first kissing those delicious lips, then bringing her lovely breasts to my mouth. I kissed her natural pillows all over, licking, sucking, even lightly biting. \"Such a nasty man\" Grace moaned. \"So damn sexy.\" Her fingers were running through my thick dark hair while my hands were filled with the cheeks of her ass. She was bouncing on me with force, holding her tits and pulling at her nipples while I let my hands roam over her hips and thighs as well as her tummy. We were both getting loud and again not caring who heard us. \n\nIt wasn't long before we heard Darrell and Cynthia as well. We heard them moaning at first, their erotic play inspiring us to get even wilder. In a short while we heard Cynthia, cute little Cynthia, almost shouting \"Fuck me harder, motherfucker! Pound my hot little cunt!\" Darrell gave as good as he got. \"You like being my whore don't you? Taking my big dick all the way up your hot little cunt!\" Back and forth they went like that. We had no idea how much was really them and how much was show for our benefit and competition. Grace and I looked at each other and came to an unspoken agreement. We were going to give them a performance of our own.\n\n\"Ride my cock, you hot little bitch! Ram that pussy up and down! Fuck me like it's the last fuck you'll ever get!\"\n\nI saw Grace's eyes glaze over; she was getting into this without playing at it. \"You love this black cunt, don't you, you nasty white boy! This hot, nasty fuck hole! Twitch your big dick inside me! You know how it makes my pussy cream!\" Then she did something that blew me away. She held up her right tit and put the nipple into her own mouth. Just fucking wow! I was pumping my hips up to meet her hard thrusts as we heard Darrell and Cynthia treat us to another round of their dirty talk.\n\n\"Spank me, motherfucker!\" Grace shouted good and loud. \"Smack my big brown ass hard!\" This time I was willing and ready. I slapped her ass hard enough that I knew they could hear it in the next room. Grace yelped in pleasure and then we heard Darrell slap Cynthia's ass and she howled in pleasure, sounding like she came, then begging for more. \n\nWe kept the kinky game going for 10 or 15 minutes, outrageous dirty talk, spankings, Grace licking at her own nipples. It was kind of childish, trying to outdo each other but at the same time it was incredibly dirty and hot. Both girls came a couple of times, and then it was time for the girls to compete to see who could get their man off first. I was on my back as Grace put my cock between her tits, rubbing me hard and fast between those wonderfully soft and warm mounds of flesh. Whatever Darrell and Cynthia were doing, it couldn't have been this. Cynthia was a beautiful girl, but she had very small tits. It wasn't stopping them from having a great time.\n\n\"Shoot your hot fucking load all over my big tits, baby. I want you to get them all sticky, white hot cum all over my big brown tits!\" She kept moving up and down, my dick trapped between her cushions, licking the head when it came up through her cleavage. \n\nWe heard Cynthia saying \"Time to cum, Darrell! You can shoot it all over my face, spray it all over my lips and tongue! Cum, you dirty fucker!\"\n\nGrace was pumping my cock, still talking all sorts of dirt when I blasted my cum, hitting her neck and chin and flowing all over her magnificent breasts, pearl white fluid making streaks all over. A minute or two later, we heard Darrell cum too, presumably all over Cynthia's adorable face. Then all four of us laughed as if we were listening to the greatest sitcom. It took a long time to get control of ourselves as the absurdity of the situation hit us. But as silly as it was, it was also incredibly erotic. \n\n\"We're going to shower now, you perverts!\" I shouted through the wall.\n\n\"Look who's talking! See you at 11:30!\" Darrell called back.\n\nIt was a little after 10:30. Grace and I decided to save time and shower together, though there was a risk it wouldn't save any time at all, and might even take us longer. I wanted to shower with her, and she with me, so we took the chance.\n\nIt was a very sensual experience. It was the first time I'd ever showered with a woman (I really couldn't call Grace a girl any more; she was all woman) and it was so sexy massaging soap onto each other. I paid special attention to her breasts and the sight of all that lather on her soft body had me hard again. \"Henry, we really don't have time for this\" Grace said as she massaged my slippery dick with both hands. \n\n\"You can't say that to me while your lathering up my cock, honey. I didn't think it was possible for me to get so hard so soon after the great time we just had, but you did it to me.\"\n\n\"Yes I did, baby. Ok, you're all slick. I'm going to give you a hand job. You've got 5 minutes to cum. I have to do my hair and makeup, so that's all I can spare. Enjoy.\" She worked on my throbbing cock, stroking fast, then slowing down to get me all worked up, then shifting into high gear, rubbing her thumb under the head. I leaned back on the tiled wall as Grace kept sending pleasure up to my brain. Surprisingly, it didn't take long at all. With a minute to spare, I came, not like before, but it felt great to me, as I splattered the wall with my seed. \"Good boy\" Grace said with a small kiss, then we finished cleaning up. \n\nWe all made our 11:30 deadline. Things were a little bit uncomfortable at first, but we all broke out in laughter again and the discomfort melted away. Darrell and I paid our bills and we went off to find a restaurant my sister had recommended for a good breakfast, fresh biscuits and gravy being their specialty. \n\nWe kept having fun, talking and laughing, like two couples that had known each other for years. And no one gave us funny or threatening looks. Maybe things were changing more than my mom realized.\n\nWe settled down on the ride back to Charleston. Grace sat in front next to me, and Darrell and Cynthia were in the back. We were all old friends having a good time talking, playing Born to Run on my tape deck, then Greetings From Asbury Park . \n\nMy father had warned me long ago about speeding in general, and particularly if I had a girl with me. He wasn't worried much about the Charleston Police Department. They were moving forward with the times, for the most part anyway. They had black officers on the force and a good reputation for honesty overall. What he was really concerned about were the local sheriff's departments. Most of the sheriffs were \"good ole' boys\", elected cycle after cycle, many who held their jobs for 20 or 30 years, some even longer. Many still unofficially acted like Jim Crow was still the law. A few were moving forward, but they were still the exception to the rule. And so driving down I-26 in Dorchester County, about a half hour from home, I saw the flashing lights in my rearview mirror. I wasn't speeding, keeping my speed just below the limit, even using my cruise control to make sure. Darrell looked at me uneasily. \"Henry, you weren't speeding, were you?\"\n\n\"No way. I kept it below 60. I know better.\" I looked in the rear and saw Cynthia concerned but Grace was downright scared. I gave her a smile to try to reassure her, but it only had a slight effect. In the meantime, I tried to keep my cool. Dad and I had gone through what I should do. Be respectful, always call the officer 'sir', never raise my voice or challenge him. If he writes a ticket, don't argue. Just take it and sign. We could always try to fight a wrongful ticket in court. \n\nThe deputy was a tall, older man, about 45 or 50, a real old time deputy in a county where the sheriff was known to be a real hard case. Just take the ticket, I told myself.\n\n\"Boy,\" he said in a deep, rural drawl, \"License, registration and insurance.\" \n\n\"Yes sir\" I said, getting him the requested documents. Everything was in order, of course.\n\n\"You know why I pulled you over?\"\n\n\"No sir, I have no idea. I know I wasn't speeding.\"\n\n\"You got yourself a broken taillight. Come look.\"\n\nI got out of the car, wondering what was going on. I hadn't had a broken light the day before, though I didn't check that morning like I usually would have. I went to the back of the car and there was no broken light. \"Sir, they're not broken. I don't understand.\"\n\nHe leaned close to me and growled in a low, menacing voice \"Yes you do, boy\" and he took his nightstick and smashed my drivers side taillight. \"See it now, n****r lover?\"\n\nFuck, that's what this was. I went red with rage but I knew better than to fight with him. \"I see it sir. Why don't you write me your ticket and me and my friends will be on our way. I'll get it fixed by Monday.\"\n\n\"Tell you what, boy. Instead of writing you a ticket, why don't you pay me the $100 fine here, plus another $100 for your shitty attitude?\" He stood there towering over me, pleased with his shakedown. He'd keep 100 and turn the other over to the sheriff. The corrupt bastard.\n\n\"I'll have to see if me and my friends have that much on us. Can I go talk to them for a minute, sir?\"\n\n\"Sure, go see if your asshole friends and your n****r got the money.\"\n\nI went back to the car, seething. I explained what was going on, minus the racial shit. They of course had seen and heard him break my light. We collected money and we were 40 dollars short. I hoped it was enough to get us out of there.\n\nI stepped back out, slowly as I had been taught. Never give a cop a sudden movement. \"Sir, we only have $160. Please, take it and my apology. I'm not looking for trouble here.\" \n\nHe must have really hated to see interracial couples. He was furious. \"Not good enough, boy, not nearly good enough. Hands on the back of the car!\" He had his hand on the butt of his gun, in case I thought he wasn't serious.\n\nI was scared now. This was likely to end up with my arrest, maybe even all four of us. I had to protect my friends, Grace most of all. I put my hands on the trunk and he kicked my feet apart before searching me. That didn't worry me; I had nothing on me that would cause trouble. And I knew the law from my father. If there was nothing illegal, he couldn't impound the car as long as there was another licensed driver in the car. Though he could plant something if he wanted; it wasn't unknown. Thankfully he didn't.\n\nOut came his cuffs next. Darrell started to get out to argue but the cop yelled at him to get back in or he'd be arrested too. I said \"Darrell, don't argue. Just drive the girls back and go see my dad.\" I asked the cop which station he was taking me to, and by law he had to tell us. I told Darrell to let my dad know where to get me; thankfully, he and mom planned to be home all day.\n\nHe read me my rights and pushed me into the back of his cruiser. I tried to give my friends a smile to show I wasn't scared, but I was scared. Terrified, in fact. I knew my father would be there in a couple of hours and I knew I'd done nothing wrong. Still, when you have a bad cop on your case, none of that mattered.\n\nOn our way to the station, deputy Brill (I saw his name tag) decided to have a little fun with me. \"Tell me, bright boy, what's a rich kid like you doing fucking some hot little coon girl? I bet she fucks you like a wild little slut. I had me a darkie once myself and that girl could fuck!\" I just kept quiet, not answering, but I was furious. \"I asked you a question, boy, and you'd better answer unless you want a whole world of trouble!\" He glared at me through the rearview mirror.\n\n\"She's a good friend, that's all. She's sweet and smart.\"\n\n\"Oh, bullshit!\" he said in the Southern way, drawing out the 'shit' into a 'sheeet'. He was a real redneck son of a bitch, making everyone in the South look bad. \"You like that black cooze. Just admit it to me. She got big titties too? I bet you just love putting your face in them titties.\" He was having a hell of a laugh up there.\n\nWe got to the station and he brought me in, saying I was arrested for dangerous driving and resisting a lawful order. It was all bullshit, but I knew to just keep quiet. I'd let my dad deal with this. He wasn't a criminal lawyer, but he was a damned good lawyer, and if he couldn't handle it, he had partners and associates who handled criminal cases. Criminal, I thought. They could ruin my life, get my college acceptance revoked. I was really scared.\n\nI was printed, photographed, and put in a cell with ten or twelve others, some black, some white. They all looked like experienced criminal types and I looked like a privileged white kid. I just sat on a bench and kept to myself.\n\nSince my property had been taken from me, including my watch, I had no idea how long I sat there. It had to be 4 hours at least, because the shadows were getting longer through the small window up on the wall of the cell. They finally called for me and brought me out where I saw my parents, Grace and Edina all waiting, all worried. I first went to the desk, where I signed for my property, then they brought me into an office where the sheriff, Jim Parker, and deputy Brill were waiting. My dad came in and the sheriff said \"Well young man, it looks like a mix up happened here. So we're going to let you go with just a warning. Don't drive in this county with a broken light or any other vehicular defect again. And you owe my deputy here an apology for being so disrespectful. You young people need to learn you some manners. So make your apology and you and your family and your so-called 'friend' can be on your way.\"\n\nI stared at my dad, incredulous. Apologize to this corrupt piece of shit? My dad could see what I was thinking and he glared at me. I could read him like he read me. I had to do this. I turned and faced Brill, who had this big ass grin like he ate my lunch, spit it up and I had to eat it. It certainly left that kind of taste in my mouth. \"Deputy Brill, I'm sorry. I should have treated you with the respect and courtesy your position entitles you to. It will never happen again.\"\n\n\"You better believe it won't. Go, take your n****r girl and get the fuck out of here.\"\n\nDad had rage in his eyes too, but he knew better than to start a problem. We just left and went out to the waiting area, where first mom, then Grace held me like they were going to crack my back. Then Edina did the same. All three were crying.\n\nWe got in dad's large sedan. \"Dad, mom, I'm really sorry.\"\n\nMy dad said \"For what? You did nothing wrong, Henry. That son of a bitch, him and his boss, are corrupt, bigoted asses. That deputy noticed Grace in the car and he decided to have his fun and make some money in the process.\"\n\n\"I shouldn't have gone with you\" Grace said softly, tears crawling down her cheeks as she leaned against her mother. Edina put her arm around her daughter and my heart broke a little to see how hurt she was, and how scared she was for me. I held her hand in mine.\n\n\"Grace, listen to me\" my mother said, turning from her seat in front. \"There are bad police here. You know this by now. Did you both have a good time at the concert last night?\"\n\n\"Yes, Mrs. Douglas. We had a great time. It was a wonderful time until a few hours ago.\"\n\n\"Then you hush with that silliness. You two keep seeing each other if that's what you both want. We will stand by you both if anyone tries to stop you. You're a very fine young lady and I've never seen Henry so happy before.\"\n\nEdina was silent during this. Grace still held to her while holding my hand. Edina finally spoke up. \"Mrs. Douglas, your boy is a good boy. But I knew something like this would happen sooner or later. I can't wait for Grace to go to New York already and get away from this...craziness. Henry, I'm glad you're ok, Lord knows. And I'm proud for how you looked out for Grace and your friends. Darrell told us how you made sure he just drove the girls home and not get into trouble. I guess I can't keep calling you a good boy anymore. You're a good man.\"\n\nComing from Edina, that was huge, maybe even more than from my own parents. My dad said \"Your mother and I are also very proud of you, son. You did everything just as I told you. You kept from losing your temper, and you didn't escalate a potentially bad situation into something worse. That SOB sheriff shook me down for a thousand dollars as it is.\"",
        "\"WHAT?\" I practically screamed. \"You gave that...corrupt jackass...a thousand dollars?\" I couldn't believe my father, a true believer in the law, paid a bribe, especially when I hadn't done anything wrong. \"Dad, I was innocent! Why would you pay him like that?\"\n\n\"To protect you, Henry. He could have ruined your life. Besides giving you a criminal record, he threatened to send you to the county work farm for six months! God knows what could have happened to you there! You could have been beaten, had an accident logging, been assaulted by other inmates.\" I could see him in the mirror, what he meant by assaulted, and a chill ran through me. \"So I paid a 'donation' to his reelection campaign fund. Cash, of course. Thankfully, we keep money in the house for emergencies.\n\nWe all got quiet, except for Grace, who was softly crying. She leaned away from her mother and then into my arms. She felt so good and yet I still hurt seeing how scared she was. My strong, brilliant girlfriend was so sweet and loving, and she was so worried about me. I may have thought I loved her the night before. Right then, I knew it for certain. I really loved her. A lot. \n\nEdina said \"I guess my girl isn't a girl anymore either. Grace, honey, you're a real woman. You got yourself a good man here, and you're a good woman. I got to come to deal with that.\"\n\nWe rode for a while more before I remembered to ask \"Dad, what about Darrell and Cynthia? What happened with them?\"\n\n\"Darrell came to the house with Grace and Cynthia. They were all very upset and very worried about you. He told us what happened and we drove them to his house before we came to get you. You need to call him as soon as you get home. Cynthia's a very nice girl. Ummm, make that young lady. None of you are kids anymore. You all kind of lost your innocence today. I'm proud of all of you, how you all handled this situation.\"\n\n\"Same here\" mom added. \"You're all going to do great things in your lives.\"\n\nEdina just smiled at Grace and me. She'd already spoken her piece. \n\nBy the time we got near home, it was almost 6. My father said \"We should go out and get something to eat. Grace, Edina, you're both welcome to join us. I think after today, we're all kind of family here.\"\n\n\"No, Mr. Douglas that's ok. You can just let me off by the bus. Grace you can go if you like. I'm just kind of tired and I have some things to prepare for church tomorrow.\"\n\n\"Well, then we're taking you home. No reason to make you wait for a bus.\"\n\nWe took Edina home, and we went in with her and Grace and waited while Grace changed her clothes. Everyone made small talk. Mom used the bathroom and dad whispered to me \"Why don't you and Grace stay at the house tonight? I'll take your mother to dinner and a late movie. I think you two could use a little time alone\" he said knowingly.\n\nI blushed a little. \"Dad, are you sure? What about mom? She'll have a bit of a fit.\"\n\n\"She'll be fine. Let me handle your mother. You two can order a pizza or something when you're hungry. You deserve it, both of you\" he said as he took my hand.\n\nGrace came out about ten minutes later just in a pair of jeans and a nice shirt. Like she expected to just stay in with me. \n\nWe said goodnight to Edina and we drove in the direction of home. Dad said to mom \"Darling, why don't we just drop these two off at home and have ourselves a nice date night? Dinner, a late movie? We need a little alone time.\" He changed it up smoothly, which fooled no one.\n\n\"Thomas, but what about...\" she saw him glance at her and just went quiet. Mom was no one's fool. Grace looked at me questioningly and I just held her hand and we communicated like that. We had such great chemistry together.\n\nThey let us off, dad saying \"If you have to drive anywhere, take your mothers car. Don't drive with that broken light. I'll get it fixed on Monday. Go watch a movie, we'll see you later.\" Dad told me the next day mom said as they drove off \"I guess I have to get used to the idea that he's an adult, doing adult things. I mean, I know they spent the night together last night. But he's still my baby.\"\n\n\"He's not a baby, darling. He's moving out in a few months. They need some time to talk alone.\"\n\n\"Thomas, they're not going to just talk.\"\n\n\"Probably not.\" Mom just sighed. He said they had a nice time.\n\nWhen we were alone in the house, Grace just fell into my arms and cried, really cried, deep tearful sobs. I held her tight and said softly \"Grace, it's ok. I'm fine, I'm safe. Come, sit on the loveseat. I'll get us something to drink but I just have to call Darrell. He's probably scared shit that he hasn't heard from me yet.\"\n\n\"Wait, baby, sit with me a minute first, please?\" I sat there with her, stroking her hair and kissing her cheek and lips. I felt so bad for having scared her so much. I let her rest her head on my shoulder. I didn't try to kiss her, just held her. \n\n\"Gracie, honey, I really have to call Darrell. If you want, come upstairs with me. But I have to let him know I'm all right.\"\n\n\"You're right. OK, I'll come with you.\" We went upstairs to my room and I sat at my desk where my phone was and Grace sat on the floor, leaning against my legs, like she was afraid to lose contact with me. I called Darrell, who was by then losing a little of his mind. I told him basically what happened, let him know I was fine, and told him to call Cynthia, which he was ready to do anyway. I thanked him for being such a good friend and we agreed to talk more the next day.\n\n\"Ok, that's done. Grace, come, sit on my lap instead of down there.\" She got up and sat across my lap and kissed me very lovingly. \n\n\"Henry, I thought last night, as we were going to sleep, do I REALLY love him? I mean, I guess I had a little bit of doubt. I've never been in love before, though there was one boy when I was 15 I was crazy about. But nothing like what I feel for you. And then, when that bastard put his cuffs on you and I didn't know what could happen to you...I knew it for certain. I love you so much.\" She kissed my lips with so much warmth and affection I thought I was going to cry. She stroked her fingers through my hair. \"I love you.\"\n\n\"Gracie, when I was in his car, he was saying such ugly, vile things about you. Things I'll never repeat to you, not to anyone. Not even my father. I never wanted to kill anyone before. But I could have killed him then. Because he was talking about the woman I love so much.\" \n\nWe just looked into each others eyes and through them, into each others hearts. Mine was pounding. We kissed, long and loving, sweet and lusty. Her tongue probed my mouth, then mine probed hers. I then kissed the side of her neck and her throat, and Grace emitted a long, hot moan. Her medium brown skin was almost hot on my lips, which just made me hungrier for her. I peeled off her shirt so I could kiss her shoulders and her chest above her bra and Grace held my head to the top of her breasts while I undid her clasps. Her bra fell away and once again here perfect breasts were in front of me, so kissable and soft. I gently massaged them as I kissed down to her thick nipples. They were much darker than her skin, lovely nubs of rubbery flesh. I couldn't resist sucking hard and Grace let out a gasp as her fingers entwined in my hair.\n\n\"God, I love when you do that, baby\" she whispered above my ear, kissing the top of my head. Then Grace pulled my shirt up and off. I moved back to her mouth, kissing her hard as I held her under her thighs and stood up, carrying her to my bed. \"So strong...so sexy\" she moaned.\n\n\"You're the sexy one. Gorgeous too. Just being around you makes me so incredibly excited.\"\n\nWe kissed, softly then more passionately. I unbuttoned my pants as Grace did the same and we both got out of our jeans. She was wearing a small red pair of panties that hugged her hips perfectly. I could see her pussy lips outlined in the crotch of her panties and my cock throbbed. \"Stand up for me\" Grace said urgently. I got off the bed with my cock tenting my boxers. She rubbed me through the cotton shorts and it was my turn to moan. \"So nice and hard for me. Let me show you how much I adore you.\" \n\nGrace kissed me above my belly button, gently biting at the very sensitive flesh there and below. \"Oh, god, you're so damn sexy, Gracie\" I said as my cock twitched.\n\n\"Look, you're doing that thing I love so much\" she said as she pulled my shorts down until my cock sprang up at her, almost hitting her lips. She snapped her head back in reflex, but almost immediately she had my cock in one hand as she licked exclusively on my glans, That wet, flat tongue playing with just that supersensitive area was driving me nuts. I held her head in my hands and tried to push more of my aching dick into her mouth, but Grace was in a teasing mood. \"No, baby. I'll decide when. Cool your buns. Your cute, bitable buns\" she said flirtingly. Then she went back to having fun with me.\n\nGrace's playfulness was making me weak behind my knees. I bent back a little, thrusting my hips forward, and she kept licking me like an ice cream cone. Her fingers were playing with my balls and her nails crept up a little more, almost to the crack of my ass. When she lightly scraped me there I thought I'd lose my mind. I couldn't help myself; I held her tightly as I thrust my cock into her warm, welcoming mouth. Grace started sucking in earnest, just the head for a few seconds, then down the shaft until the tip was at the back of her throat, causing her to gag a little. \n\n\"Grace, honey, I want to lick your pussy. Let me lay down and you can get on top of me. I bet you're deliciously wet right now. Maybe even soaked?\"\n\n\"God, Henry, I am. I'm very happy to share with you.\" We scrambled around so I was on my back and Grace lowered her pussy over my face, her skimpy panties still covering her creamy sex. Her mound was rubbing on my lips and nose as she moaned, then she went back to swallowing my dick. \n\nShe tasted wonderful through the cotton of her undies, but I wanted to taste her without a barrier. I pulled the crotch, wet with her sticky juices, to the right as I attacked her pussy with my tongue. My nose was between the cheeks of her smooth ass as I explored her wonderfully creamy slit. At the same time I could feel her bobbing up and down on my cock enthusiastically, sucking me like my cock contained much needed nourishment. I used my thumbs to pull her slick lips apart so I could poke my tongue in and out like I was trying to fuck her and I felt her humming on my cock. We were having an incredible time teasing each other. The only reason I didn't cum was because of the two orgasms I already had that day.\n\nGrace was grinding her hips on my face and I had a great view of her ass, soft, brown and round, moving in circles. Suddenly I felt her hips shiver on either side of my face and she pushed down hard, cumming on my face from my nose to my chin. Her juices were salty, sweet, a little musky. Delicious.\n\nBreathlessly she got off my face but stayed in that position, on her hands and knees. \"Come and get me, Henry, baby. Fuck me like you did last night, hot and dirty. I'm all yours, you sexy, nasty man.\"\n\n\"I want you too, so fucking bad. You need another spanking, don't you. Such a bad, bad girl. A little punishment is what you need\" I said huskily as I rolled down the condom and quickly penetrated her needy pussy. As I went inside her until I could go no further, I slapped her magnificent ass, making it shake as she gasped. Another smack of my palm had her howling.\n\n\"Fuck yeah! Fuck me, spank me, punish me! My hot, sexy man! Ride me hard!\" Grace grunted as we kept thrusting into and against each other. I spanked her about six or seven times altogether but my hips kept smacking on her cheeks with each forceful thrust. \n\nI pulled out and turned her over on her back. As much fun as that was, I wanted to see her beautiful face as we shared our lust and love. In just a few seconds I was back inside her and her legs wrapped around me, holding me tightly like I was in the warmest, most loving entrapment imaginable. \"Grace, you're so incredible, so sweet and loving and so nasty and wicked. So beautiful. So fucking hot. I love you, love everything about you.\" I told her this as I kept thrusting over and over, my balls lightly slapping her perfect ass. All that time, my eyes were glued to hers, and I saw so much love there, and desire.\n\n\"I love you too, my wonderful man. So good to me. The way you tried to protect me. Oh god, please make your cock twitch for me! You know what that does to me...\" she moaned as she came in my arms. \"Fuck, baby, that's it! Oh god, here it comes again...!\" \n\nI was fucking as hard as I could now, and I was finally closing in on my own climax. \"Cum for me, baby\" Grace whispered. \"Cum like you're trying to fill my pussy. One day we will, baby. Cum now!\" As if on cue, I shot off, filling the condom with my thick creamy semen. I kept pumping my hips, slower but harder thrusts, until I could move no more. I just fell on top of her and suddenly all the emotions I had been holding back since the afternoon just spilled out and I cried like a baby in her arms. Grace instinctively understood what I was feeling and just held onto me, stroking her long, slender fingers on the back of my head and neck, whispering soft and tender words of love in my ear. \"I love you so much, Henry. Just let it out for me. You were so brave today, and so smart about things. Such a good, wonderful man.\"\n\nI kept crying on her neck and shoulder for a while. \"Baby,\" she whispered, \"You're getting kind of heavy for me. Just roll off and I'll keep holding you. I'll hold you as long as you need.\"\n\nI sniffled a little, my sobs finally quieting, but we kept holding each other and Grace kept giving me little loving kisses all over my face. After a while I kissed her tender lips and softly said \"Thank you, honey. I really needed that. I don't know if I could have cried like that in front of any other woman. Except maybe my mom or yours. But I'm glad it happened with you. And I'm so glad you don't think I'm weak or something.\"\n\n\"Weak? You were so brave today, baby. You didn't let him bait you, which he clearly was trying to do. And your first thought was for your friends. To protect us. It didn't surprise me at all. I know what a good man you are. And a real man knows it's ok to cry sometimes. I'll always be here for you, to share our hearts and souls.\" She kissed my forehead, then my lips. We realized it was almost 7:30 and we were starved. We got dressed and I called for a pizza, and we went down to the family room to try to find a movie to watch. The rest of our night was spent cuddling on the couch, eating a pizza with sweet tea and cuddling. It was perfect. And when I took Grace home at 12, we sat in my car kissing goodnight for 20 minutes. We just didn't want to let each other go. We saw Gus in the window, and he just let us be. Finally, we had to end the night. I would have given anything to spend another night with Grace, my sweet Gracie, even just cuddling together.\n\nIt would have been more than enough that night. But we knew there would be many more nights to come. Many many many.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nAs always, I appreciate your votes and comments. Please feel free to comment as you like."
    ],
    "authorname": "Rabbitman55",
    "tags": [
        "interracial",
        "love",
        "romance",
        "romantic"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/falling-for-grace-pt-02"
}