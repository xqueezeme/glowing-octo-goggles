{
    "title": "The Spirit of Rosemont Plantation",
    "pages": [
        "\"The Battle of Chickamauga was the bloodiest two days of fighting in American history. The battle cost the Federals 1,657 dead, 9,756 wounded, and 4,757 missing for a total of 16,170 casualties out of 58,000 troops. The Confederate losses were 2,312 dead, 14,674 wounded and 1,468 for a total of 18,545 out of 66,000 troops,\" explained the tour guide.\n\n\"Union troops were led by Brigadier General William Roscrans. General Braxton Bragg was in charge of the Confederate troops. The fighting had been so intense that President Lincoln sent General Ulysses S. Grant to re-establish command. In fact, Lincoln's brother-in-law, Confederate Brigadier General Benjamin Hardin Helms was mortally wounded in the Battle. Federal Generals McDowell, Crittenden, and McCook were relieved of duty and order to Indianapolis to face a court of inquiry because of the way the Battle was handled.\n\n\"Following the Battle, Union troops retreated to Chattanooga to regroup and get supplies. However, food and supplies were nowhere to be found. Cutting federal supply lines was the first thing General Bragg and his men did. So, the Union troops were literally starving.\n\n\"When Grant arrived, he relieved Roscrans of his command and put General George Thomas in charge. Grant ordered Thomas to hold Chattanooga at all costs, but they knew that their men were too weak to put up much of a fight. The next day, Grant and Thomas took Army engineer, General William \"Baldy\" Smith to Brown's Ferry to try and figure out a way to sneak supplies to their men. Smith chose William Hazen and a couple of his men to scout the area. The plan was to load flat-bottom boats with food and supplies and move them quietly down the river under a blanket of fog right past the Confederate lookouts.\n\n\"One of Hazen's scouts, Tom Thrasher, came here to Rosemont Plantation on a cold October 25th night. The manor house where we are standing had been deserted by most of the family, but Laura Rosemont stayed behind to take care of her Grandfather, Beau Rosemont, who was dying and was too sick to move.\n\n\"According to records that were later excavated, Thrasher broke into the house looking for food and was confronted by Ms. Rosemont. A painting of her hangs here over the fireplace,\" explained the tour guide.\n\n\"Wow! She beautiful,\" Kate exclaimed. \"Look at her eyes.\"\n\n\"Yeah,\" Jenny agreed. \"You know, you could be her sister. You look just like her.\"\n\n\"You're crazy! I wish I looked like her,\" Kate said as she stared at the painting, unable to turn away.\n\n\"Thrasher seems to have been a typical low-life enlisted man, and when he saw Laura, he reportedly threatened to kill her grandfather if she didn't take care of his carnal needs,\" the guide said.\n\n\"Gross!\" Kate said to Jenny.\n\n\"As the story goes, Laura led Thrasher to a back bedroom, and the repulsive man ordered her to take off her clothes in front of him while he ate bread and cheese he stole from the Rosemont's cupboard. Laura was determined not to cry or show fear in front of Thrasher. Her hands were trembling as she began slowly removing her outer garments. When she got to her undergarments, Thrasher told her to stop and said that he liked to open his own Christmas presents. He took out his hunting knife and walked toward her. Laura closed her eyes and stiffened, awaiting the assault.\n\n\"Instead of feeling filthy hands or cold steel against her throat, she practically jumped out of her skin at the sound of a gunshot. Laura opened her eyes, and a young Confederate Lieutenant, named Jerrod Price, was standing over Thrasher's prone body holding a spent pistol. Price kicked Thrasher to make sure he was dead and spit on him to emphasize his disgust. Laura was shaking from head to toe. Price turned to the young woman, took off his coat, and wrapped it around her. He looked at her with gentle blue eyes and asked her if she had been hurt. She shook her head 'no.' He then escorted her into the kitchen and built a fire in the stove to make her a cup of tea.\n\n\"When Laura had calmed down enough to think, she looked at the thin young man in her kitchen and figured he was no more than 22. His hands and face were stained with a combination of dirt, blood, and gunpowder. She looked down at his shirt and saw a growing blood stain. He smiled at her and told her not to worry. He had been stabbed in hand-to-hand combat, but it was just a flesh wound. Laura insisted on removing Jerrod's shirt. She cleaned and dressed the wound, and she filled a large bowl with hot water to allow him to clean himself.\n\n\"Laura started to leave to give the man some privacy, but he said that the shoulder injury she had just cleaned wouldn't allow him to reach the parts of his body that needed cleaning. He explained that he was a little embarrassed but asked if she could wash him. She looked into the kindly, shy eyes and consented,\" the guide continued.\n\n\"Excuse me,\" Kate interrupted. \"You seem to have a lot of detail about this private encounter. How do you know all of this?\"\n\nThe guide answered, \"When we were renovating the plantation with the help of the Rockefeller Foundation grant, one of the items we unearthed was Laura Rosemont's diary. The section about her encounter with the lieutenant was quite detailed,\" the guide explained with a smile.\n\n\"Laura then cleaned and fed Price. According to the diary, they shared a bed that night in the main bedroom at the top of the stairs. Laura described the evening as the most intensely romantic and erotic experience of her life. The next day, the soldier got ready to rejoin his unit. But, before he left, he promised Laura that he would return for her.\"\n\n\"So, did they live happily ever after?\" Kate asked.\n\n\"I'm sad to report that Price was killed in the Battle of the Little Tennessee Valley. Laura waited for him to return until after the war. Finally, she married a doctor from Atlanta and went on to have three children with him. He was reportedly an honorable and decent man, and she loved him. But, she never again felt the passion she experienced in the arms of her soldier savior. \n\n\"Though I have never seen or experienced anything personally, there have been several reported sightings of a man who bears a striking resemblance to the description of Jerrod Price that Laura included in her diary. Many believe that Jerrod Price returns to the manor to try and make good on his promise to find Laura,\" the guide explained.\n\n\"That's so sad,\" Kate said to Jenny. \"Imagine having only one night with the man of your dreams and losing him forever. I can't imagine anything more tragic.\"\n\n\"I totally agree, but wouldn't this place be perfect for our Halloween fund raiser? Do you think they would allow it?\" Jenny said.\n\n\"I don't know how you can think about parties after hearing that story, but, go and ask,\" Kate said. While Jenny was gone, Kate looked at the furnishings in the family room and moved closer to get a better look at Laura's portrait. Her eyes seemed sad, Kate thought. \"Maybe I'm imagining things.\"\n\nShe caught up with Jenny, who was peppering the guide with questions about renting the facility for a night. Afterwards, Kate asked him about the diary.\n\n\"Actually, you can read it yourself. The Foundation reproduced it in book form, and it's available in the gift shop,\" he answered.\n\n\"I'll come by tomorrow to give you a deposit and make arrangements,\" Jenny said to the guide, who turned out to be Mr. Bryant, caretaker of the property.\n\n\"Thanks. It should be a great atmosphere for your fund raising event,\" he replied.\n\nKate and Jenny were part of the Alpha Kappa Alpha sorority at Benton College, and the sorority had adopted the local chapter of the Children's Defense League as the focus of their fund raising efforts for the year. The Halloween Ball would be the first major event, and they were hoping to raise $10,000 through corporate sponsorships and alumni connections.\n\nJenny was going to the Ball with Brad Keller. Kate had broken up with her boyfriend over the summer, so she didn't have a date.\n\n\"Katie, with those long legs and that killer body, I can fix you up with pretty much any man on campus,\" Jenny offered.\n\n\"Thanks, but we'll need worker bees for the event, and I'd rather work than have a blind date.\" Kate replied.\n\n\"Don't be so quick to turn down blind dates,\" Jenny smirked. \"They have to communicate with their hands, you know!\"\n\n\"You are horny and twisted,\" Kate said as she shook her head.\n\n\"I wouldn't have it any other way,\" Jenny remarked.\n\nKappa Alpha Psi, one of the college frats, heard about the fund raiser and offered to help host the event. They said that if they pooled their alumni resources, they thought they could raise $25,000 for the League. AKA agreed. Kate was asked to be in charge, and her counterpart was Stephen Cowens. Kate was not thrilled. Stephen was a stereotypical spoiled frat boy with too much of his father's money and not nearly enough of his brains. He was basically no help except for being an expert in the acquisition of beer kegs. Kate had to pull together the event mostly by herself, though several of her sorority sisters did pitch in to help.\n\nA big tent was set up on the grounds by the manor house. The Rosemont Foundation agreed to allow the first floor of the manor house to remain open during the party, but the upstairs was to be off-limits.\n\nKate hired a jazz band to play during the event, and Walton's Catering came up with a Civil War period menu, composed only of dishes that could be made with the items that would have been available on the plantation during the war. The dinner was served by waiters and waitresses in plantation era tuxedos. Guests were encouraged to wear tuxes and ball gowns, preferably from the era, but that wasn't a requirement.\n\nThe response was better than anyone expected. Limos were lined up for a couple of miles as the corporate sponsors and guests danced and dined. Several attendees were so impressed they donated extra to help pay for the party so more money could be sent to the League.\n\n\"Kate, you have done a magnificent job,\" Terri Marshall, the Executive Director of Children's Defense League gushed. \"I have been doing this a long time, and I have never seen such a response. The decorations, the music, the food ... it's all terrific. Thank you so much for your hard work. You and AKA are going to help a lot of kids get out of bad homes and start new lives because of what you've done here tonight.\"\n\n\"Thank you, Ms. Marshall. It was fun. The kids you introduced me to were amazing, so this was really a labor of love.\"\n\n\"Did someone say love?\" asked Stephen, as he intruded into the conversation. Terri gave him the same look she would have had if she had stepped on a snail. Kate stifled a laugh.\n\n\"Yes, well, I have to get back to mingling. Kate, please call Annie on Monday so we can find a time for me to take you to dinner as a small way of saying thanks.\"\n\n\"Am I invited too?\" Stephen asked with as stupid grin.\n\n\"Only if we decide to dine in a brewery, dear,\" Terri said with a fake smile. Kate laughed out loud at that remark. Terri winked at her and made a hasty exit.\n\n\"Kate, you look hot in that gown. How about taking a spin on the dance floor?\" Stephen asked.\n\n\"Thanks, Stephen, but I'm still working.\"\n\n\"So am I, but we can have a little fun, can't we?\" He grabbed her wrist and pulled her to him. \"You know you're the best looking girl here. How about a dance with the best looking guy?\"\n\nKate struggled to get out of his grasp. \"Stephen, let go of me! You're hurting my wrist\"\n\nOne of the waiters had been watching the activity out of the corner of his eye. When he saw that Stephen was not releasing Kate, he walked over and said, \"Can I help you, Miss?\"\n\n\"Fuck off, Jose. Kate and I were just going to have a little dance, weren't we?\"\n\nKate slammed her heel down on Stephen's foot, which enabled her to get out of his grip. \"WE are not doing anything, loser!\"\n\n\"Come on, Kate. I've seen how you've been looking at me the past few weeks,\" Stephen said.\n\n\"Yeah ... like an entomologist examining a mutant slug!\" The waiter let out a burst of laughter before putting his hand over his mouth. Stephen shot him an angry look.\n\n\"Sorry, sir. The young lady's metaphor caught me off guard,\" the waiter explained.\n\n\"Why don't you go peddle some drinks,\" Stephen said, stepping toward the waiter menacingly.\n\n\"If it's all the same, sir, I'd rather stay and make sure the young lady is all right,\" the waiter replied in a calm but firm manner.\n\nStephen turned like he was going to walk away, but quickly turned back to deliver a right hook to the waiter's jaw. The waiter merely took a small step back, threw up a forearm to block the blow, grabbed Stephen's tuxedo sleeve, and used Stephen's momentum against him, sticking out his own leg to trip the obnoxious frat boy and send him tumbling to the ground. Kate watched the whole thing in stunned silence.\n\n\"May I help you up, sir,\" the waiter asked as Stephen struggled to his feet. Stephen angrily brushed grass and dirt off his pants, slapped the waiter's hand away, glared at Kate and stormed off.\n\n\"Thank you ...\" Kate said as she searched for a name badge.\n\n\"Jerry,\" the waiter offered. \"Are you alright?\"\n\n\"Yes, thanks to you. I don't know what that Neanderthal would have tried to do if you hadn't been here,\" she said she gazed into Jerry's clear blue eyes.\n\nHe shrugged modestly and replied, \"He wouldn't have done anything too bad with all these people around. I'm just glad I was here at the right time.\" He took Kate's hand and gallantly kissed it. \"Well, I better get back to work.\"\n\n\"Really? Do you have to? I mean, the party's almost over,\" Kate said.\n\n\"Yes. I have to finish serving the guests and then work as part of the breakdown crew.\" Kate's face dropped a little. \"Of course, if you were still here near the end of clean-up, we could share a late evening drink.\"\n\nKate looked at the handsome face with the light stubble, the pronounced dimple on his right side and the small cleft in his chin. She was momentarily lost in his masculine good looks. \"Uhm ... yes, I'd love to,\" she said with a big smile.\n\n\"Then it's a date,\" he replied. He handed her two clean wine glasses and picked out an excellent bottle of Bordeaux for her. \"Meet me on the back porch in an hour and a half. I'll be the one in the sweaty monkey suit.\"\n\n\"I'll be the one dying to get out of this corset,\" she replied, which made him chuckle. He nodded his head, smiled, and went back to work.\n\nJenny saw the tail end of the exchange and saw the look on Kate's face. She walked over to Kate and remarked, \"Excellent taste, Ms. Sebastian. He's gorgeous! Where did you find him?\"\n\n\"He found me, actually. He stopped Stephen from dragging me off into the woods for good ol' hearty rape,\" Kate explained.\n\n\"Just like Laura ...\" Jenny said. \"Saved from an assault by a gallant soldier!\"\n\n\"Yeah,\" Kate snorted. \"No damsels get distressed on the Rosemont Plantation.\" \n\n\"Come on ... let's get back to the party!\" Jenny said, as she rambled off to find Brad.\n\nKate stood there for a moment, thinking about Jerry, then shook her head, and followed Jenny to the bar.\n\nAt midnight, Jerry came around the side of the house and saw Kate swinging gently on the porch swing. She had taken off her shoes, and she was staring at the stars in the cool, blue darkness. He smiled.\n\n\"You made it!\"\n\n\"Of course,\" she said demurely. \"I wouldn't stand up my rescuer.\"\n\nHe waved his hand as he stepped onto the porch and approached her. \"You're giving me too much credit. That guy was a buffoon. It was no big deal,\" he said as he sat beside her. She turned her body so she was leaning against him. Jerry put his arm around her shoulders.\n\n\"I've never been saved before, so cut me some slack. If I want to fawn over my hero, I'm going to fawn,\" she replied.\n\nJerry chuckled. \"Okay ... you win. Fawn away.\" He pulled a bottle opener out of his jacket pocket and opened the wine. He sniffed it. \"Mmmm ... I think you're going to like this,\" he said as he poured her a glass. She sipped it. \"What do you think?\"\n\n\"That's great! What is it?\" Kate asked.\n\n\"It's a 2004 Domaine de Bellivi\u00e8re, something or other. I'm not very good at French, but I do know this is supposed to be an excellent wine,\" he answered.\n\nShe settled against him and sipped her wine while they swung back and forth. \"So, tell me about yourself, Jerry. How did you come to be here to rescue me?\"\n\n\"I recently got discharged from the Army and am taking a little time off before starting to college. I guess I dread being the oldest guy in the classroom,\" he said.\n\n\"What are you going to study?\"\n\n\"My grandpa has a big ranch out west. I was planning on going to vet school and moving out with him to work on the ranch and eventually take it over. He and my Grandma Millie desperately want to keep the ranch in the family. What about you?\"\n\n\"I'm a journalism major, hoping to make it onto a paper some day and become the next female Bob Woodward.\"\n\n\"Really? The paper and not TV, huh?\"\n\n\"Yeah. I know everyone says newspapers are dying, but my dad's an editor, so I guess I inherited ink under my fingernails.\" \n\nJerry picked up her hand and kissed her fingers. \"They look pretty clean to me.\" She turned to look up at him, and he stared into her dark brown eyes, brushing back some loose strands of her long, straight hair. \"God, you are beautiful, Kate. In the moonlight, you look like a Goddess from Greek mythology.\"\n\nShe snorted. \"Give me break.\"\n\n\"I'm serious. With your dark hair and your tawny, velvety skin and those chocolate pools of your eyes,\" he said as his speech got slower. \"And, your soft, ruby lips.\" He bent down and kissed her. Kate turned her body to provide easier access. She put her hands behind Jerry's head and pulled him into her. Jerry opened his mouth wider to let their tongues dance together. As their kisses grew more urgent, Kate felt herself begin to get wet.\n\nJerry stopped and took her hand. \"Bring the bottle and come with me,\" he said, picking up the glasses. They stepped off the porch and walked in the moonlight to the old smokehouse. Jerry used the small foil knife from the bottle opener to pry back the plunger in the knob of the back door. \"Be careful,\" he cautioned Kate. \"It's dark and a little treacherous.\" Kate had no idea what he was doing, but she felt safe with him, so she continued. \n\nThey went down some narrow stairs and walked through a tunnel. On the other side was a short staircase that led to the back of the kitchen in the manor house. He led her into the hallways and up the stairs. When they got to the master bedroom, he took the wine from her and set the bottle and glasses on the nightstand.\n\n\"Jerry, what are we doing here? This is breaking and entering. We could get into serious trouble.\"\n\n\"It's okay. Everyone's long gone, and they don't have a caretaker at night. We'll be fine. May I?\" he asked as he waited for permission to begin unleashing her from the Civil War era gown and undergarments. She knew she shouldn't be doing this, but she didn't want to stop. Jerry saw from her eyes that he could continue.\n\nHe unhooked the back of her gown and pulled it slowly off her shoulders. His smelled her scent and kissed her cool, creamy skin. Kate closed her eyes and concentrated on the feel of his strong hands. He pulled the skirt open to enable her to step out of it. He untied the back of the corset and released her body. He picked Kate up and gently laid her on the bed. He let out a long deep sigh as he studied her beauty. In fact, Kate had never felt more beautiful than basking here in the radiance of his stare.\n\nJerry looked into her eyes as he rested one of her feet on his chest and unhooked her stocking. He put one hand on her inner thigh and one on her outer thigh and ran his hands down the entire length of her sleek leg as he slid the stocking off her slender foot. He repeated the action on the other leg, took her foot in his hands and began kissing her toes.",
        "\"O beauty, passing beauty! Sweetest sweet! How can thou let me waste my youth in sighs? I only ask to sit beside thy feet,\" he said as he kissed the sensitive bottom of her foot.\n\n\"That's beautiful. Who wrote that?\" Kate asked as she relished the attention Jerry was paying to her.\n\n\"Tennyson. He's one of my favorites,\" he said as he reached to the top of her leg and ran his fingertips unhurriedly along the delicate sinew of her inner thighs. Kate gasped at the sensuousness of the simple act. Jerry then continued undressing her. \"The skin on your thighs is like the petal of a rose,\" he said, as he bent down to kiss and lick her, always stopping just short of the thin, translucent piece of silk that separated her pussy from his lips.\n\nJerry pulled her up to sitting position and sat beside her. He unhooked the bustier and peeled it off of her torso. He put his hand behind her head and laid her tenderly down on the pillow. He lay his hand along her cheek and let his eyes decant his passion over her. Jerry slipped the garters off her hips and slid her sodden thong down to her ankles.\n\nBe bent down and sucked one of her taut dark nipples into his warm, eager mouth. Then, he looked at her and recited:\n\n\"She was a phantom of delight When first she gleamed upon my sight; A lovely Apparition, sent To be a moment's ornament; Her eyes as stars of Twilight fair; Like Twilight's, too, her dusky hair; But all things else about her drawn From May-time and the cheerful Dawn; A dancing Shape, an Image gay, To haunt, to startle, and way-lay.\n\nI saw her upon a nearer view, A Spirit, yet a Woman too! Her household motions light and free, And steps of virgin liberty; A countenance in which did meet Sweet records, promises as sweet; A Creature not too bright or good For human nature's daily food; For transient sorrows, simple wiles, Praise, blame, love, kisses, tears and smiles.\n\nAnd now I see with eye serene The very pulse of the machine; A Being breathing thoughtful breath, A Traveler between life and death; The reason firm, the temperate will, Endurance, foresight, strength, and skill; A perfect Woman, nobly planned, To warm, to comfort, and command; And yet a Spirit still, and bright, With something of angelic light.\"\n\n\"That was William Wordsworth,\" he answered before she could ask. Kate grinned. Jerry stood and took off his shirt. Kate sighed as she stared at his broad, defined chest, muscular arms and trim waist. He sat and removed his shoes and socks, and she marveled at his taut back.\n\nJerry stood, unbuckled his belt, unhooked his pants, and unzipped them. He never broke eye contact with Kate the entire time. Jerry let the pants fall to the floor and turned to face her.\n\n\"Holy shit! Now, who's the Greek God?\" she asked as she took in the majesty of his long, thick straight penis. It was currently hanging over his heavy, masculine balls, but it was beginning its ascent with each pulse of his heart, pumping it full of steamy, hot blood. By the time he climbed onto the bed beside her, it had become a turgid object of Kate's lust.\n\nJerry moved cat-like between her welcoming thighs and rested his swollen cock on top of the stormy sea of her sex. He kissed her with a hunger stronger than anything she had ever experienced. His rough hands moved gently over her breasts and pinched her nipples as he sucked in her tongue. He rubbed his cock slowly, achingly slowly up and down the drenched opening to her oasis.\n\nKate felt like every nerve in her body was on overdrive as the tension and the passion built. They were both panting, as Jerry kissed and sucked the ticklish skin of her neck. He roughly sucked her nipple against his tongue and nipped the end with his teeth. She felt his breath, hot and wet, coating her chest as he inhaled the rigid tip of breast.\n\nWithout giving Kate's body time to recover, Jerry drove his tongue into the inner recesses of her flaming vagina. Kate thrashed back and forth on the pillow as he would bring to the edge of ecstasy and back off, time after time. She needed release so badly, she grabbed his hair and pulled him into her. Jerry knew she was on the precipice, and he lined the broad mushroom head of his cock with her sodden pussy and plunged into her. Kate arched her back and held her breath. The sudden attack and the width of his manhood sent a cascade of stars spinning into her head.\n\nJerry became an animal, ravishing her pussy with his thrusts. Kate wrapped her leg around his body and matched his movements so he would reach the innermost depths of her carnal cavern. Sweat poured off of both of them as they became enraptured. Kate dug her nails into his back as her orgasm began to build to an explosive level.\n\nAs Jerry gasped, he blurted, \"I love you, darling.\" Kate felt his cock widen and release a waterfall of molten cream into her. Her orgasm ignited with nuclear force, and she bucked uncontrollably along his shaft, grabbing him and milking him with the salacious rhythm of her vaginal walls. Kate, again, saw stars and rode him until he fell onto her in a clammy heap.\n\nKate kept her legs wrapped around him for a long time. She didn't want to let the memory of this evening escape. Finally, his cock slipped down the slick river of fluid leaking out of her vagina and fell onto the drenched area of the bedspread beneath their loins. Jerry rolled off of her and pulled her tightly to his chest. Neither of them said anything for the longest time.\n\nFinally, Kate said, \"Jerry, that was the most intense sexual experience I've ever had. My God, you are an amazing lover. You aren't married are you because I can't imagine any woman ever letting you go?\"\n\nHe laughed. \"No, I'm not married. I was in a relationship a long time ago, but nothing since.\"\n\n\"Good,\" she said hugging him, \"Because I'm not ever letting you get away.\"\n\nJerry smiled. \"We better get out of here.\" They got dressed and snuck out the same way they entered. When Kate asked about the bed covers, wet and smelling of sex, Jerry told her he would take care of it. \"I'm on good terms with the caretaker.\"\n\n\"Can you come to my place?\" Kate asked.\n\n\"For how long?\"\n\n\"For a night or for a lifetime,\" Kate answered, smiling hopefully.\n\nJerry smiled in return but answered, \"I've got to go, love.\"\n\n\"Wait! You can't just disappear!\"\n\n\"I promise I'll come back to you, Kate.\"\n\n\"Give me your number. How do I reach you?\"\n\n\"I don't have anything to write with. Tell you what ... stop by the catering company office tomorrow, and I'll leave information for you.\"\n\nKate smiled and kissed his hand. \"Mmmmm ... smells like pussy. I plan on keeping it that way.\" Jerry laughed. \"See you tomorrow, then?\" Kate asked.\n\nJerry kissed her forehead, looked at her one last time, and he disappeared around the corner of the house.\n\nAfter class, Kate raced to the catering company offices to get Jerry's information. The woman in the office looked confused.\n\n\"Jerry? I don't think we have a Jerry working for us, Miss,\" the receptionist said.\n\n\"Yes. You do. He worked for you last night at the sorority benefit. I'm Kate Sebastian. I put the event together.\"\n\n\"Oh, yes, I remember you,\" the receptionist said smiling. \"You were always so understanding and easy to work with.\"\n\n\"Thanks ... but what about Jerry?\"\n\n\"Jerry ... Jerry ... let me see. I just can't find any record of a Jerry. I'm sorry.\"\n\n\"He said he'd leave something for be. Do you have a message or anything?\"\n\nThe receptionist looked through the messy message box, found an envelope with Kate's name on it, and handed it to her. Kate ripped it open and found a single piece of paper with the words, \"Never worry, Kate. I will love you for all time.\" It was signed, Jerry. On the back was a series of number that meant nothing to her. They definitely were not phone numbers.\n\n\"This is it? There's got to be something else,\" she said desperately.\n\nThe receptionist sensed her despair and kept looking. \"Oh, look ... does this help?\" She gave Kate the timesheet for the people working last night. Kate scanned the names and stared in horror when she saw \"Jerrod Price\" written about halfway down.\n\nKate walked out of the office in a complete daze. She didn't even remember driving back to her apartment. When she walked in, Jenny could see she was visibly shaken.\n\n\"Honey, what's wrong?\" she asked as she ran over to throw her arm around Kate.\n\nKate trudged over to the sofa and collapsed. \"Remember the cute guy from last night ... the waiter?\"\n\n\"Yeah ...\"\n\n\"His name's Jerry, and we met after the event, and he sneaked us up to the bedrooms on the upper floor. Jenny, I had a life-altering sexual experience with him. He took me places I never even dreamed of going. The orgasm was like nothing I've ever felt. He was so kind and gentle and loving. He ...\" Kate stopped and buried her head in Jenny's shoulder and began sobbing uncontrollably.\n\nJenny was not prepared for any of this and just held Kate for awhile. Finally, she asked, \"Katie, Sweetie, did he hurt you?\"\n\nKate gained enough control of herself to whisper, \"Jenny, I know I sound like I've lost my mind, but that was Jerrod Price.\"\n\nJenny turned Kate's face toward her and looked for signs that this was a strange joke. It wasn't. \"Honey, what makes you think you met a ghost?\"\n\n\"I went the catering office, and they had no record of a Jerry working for them. The lady in the office showed me the time sheet for the crew, and the name 'Jerrod Price' was listed. I can't find a trace of Jerry anywhere. Jenny, I've never felt this way about a man before. When I close my eyes, I can still feel him inside me. I can feel his hands exploring my body. I can see the passion in his eyes as he looked at me. Jenny, I don't know what to do,\" she blurted as she started crying again.\n\nJenny just held her and rocked her until Kate fell asleep in her arms.\n\nThe next day, Kate found the reproduction of Laura Rosemont's diary and read all the passages relating to Jerrod. She was astonished to read Laura's descriptions of him. It was pretty much a dead-on match with Jerry. She felt an incredibly strong connection to Laura as Laura described her intense feelings of love and obsession from that magical night. Kate felt like she could be reading her own autobiography.\n\nShe drove back out to the Plantation. As she walked into the office, she wondered if Jerry's presence sensed that she was there.\n\n\"Mr. Bryant, do you have a moment?\"\n\n\"Ms. Sebastian, of course!\" he said jumping up from his desk. \"I heard the event was spectacular. I hope you were satisfied with the facility.\"\n\n\"Yes, the Plantation was perfect,\" she said, but she seemed distracted.\n\nHe tried to read what was going on behind her eyes. \"Do you have an issue, Ms. Sebastian?\"\n\n\"This may sound crazy, but can you tell me about some of the encounters people have had with the ... the ghost?\" she asked sheepishly.\n\nHe studied her face. \"Did you have an encounter?\"\n\n\"Maybe,\" she answered, avoiding looking into his eyes.\n\nThey sat down, and he said, \"It seems as if the ghost only appears to women. Sometimes, it's a glance. Sometimes, it's the feeling of a kiss, but there's no one there. One woman claimed to have actually talked to him. Why? What happened?\"\n\n\"I -- I can't say. I feel stupid. Let's just say that I felt his presence in a most profound way.\"\n\nMr. Bryant's expression softened. He took her hand. \"Everyone has their own beliefs about spirits, life beyond death and so forth. I personally feel that the essence of what makes us human is a force of energy that lives beyond the simple dimensions of our tangible world. I don't know what you experienced, Ms. Sebastian, but I can tell it was real. I'm reminded of a passage I read by Khalil Gibran: Some goddesses live in the lives of their worshippers and die in their deaths, while some live an eternal and infinite life. My life is sustained by the world of beauty which you will see where ever you rest your eyes, and this beauty is nature itself.\"\n\n\"That's exquisite, Mr. Bryant,\" she said, finally looking into his eyes.\n\nHe smiled. \"Call me Peter. If I may say so, Ms. Sebastian, I think, perhaps, you met a spirit who lives an eternal and infinite life sustained by beauty.\"\n\nA tear slid down her cheek, and she forced herself to smile. \"Peter, do you have any idea what these numbers mean?\" she asked as she handed him the note from Jerry.\n\nPeter put on his glasses and studied them. \"You know, Jerrod Price was a cartographer for the Confederate army. These look like map coordinates.\"\n\nKate looked at him with big, hopeful eyes. \"Where do you think they lead?\"\n\nHe smiled and brushed back a strand of her hair. \"I'm not sure, Ms. Sebastian, but you know what they say ... in dreams and in love, nothing is impossible.\"\n\nKate went to the college library and discovered that the coordinates pinpointed an area of land outside Santa Fe, New Mexico. She bought a train ticket and was off the following day. In Santa Fe, she rented a car and drove to the area indicated by Jerry's coordinates to find herself at the entrance of a rambling ranch, called the Circle T. She drove up the long driveway to the house. No one answered the door, so she walked over to the nearby barn. An old cowboy came out when she called and asked if he could help.\n\n\"I'm looking for ...\" she stopped and started laughing. \"I don't know what I'm looking for.\"\n\nThe man pulled a kerchief out of his back pocket and began wiping his hands. He studied her for a moment and said, \"Well, if you don't know what you're looking for, it does make it a might more challenging to find.\"\n\nKate looked at him and laughed even harder at the absurdity of the situation. He stuck out his hand and said, \"I'm Jimmy Meadows.\"\n\n\"Hi, Mr. Meadows. I'm Kate Sebastian. It's beautiful here.\"\n\n\"Thank you, and call me Jimmy. Formality and the Circle T don't mix too well,\" Jimmy said. He looked around and told her, \"This ranch has been in my family for almost 150 years. It's home. Listen, I need a break anyway. Would you join me for some lemonade? My wife's gone to town at the moment, but she left behind a fresh-baked peach cobbler that's just begging to be cut.\"\n\nKate smiled. She liked Jimmy immediately. \"Sure, Jimmy. I'd love to. And, call me Kate, by the way.\"\n\n\"Alright, Kate. Let's go see what kind of mischief we can get into.\"\n\nThey walked into the kitchen, and Jimmy poured them tall glasses of ice cold lemonade. He then took a good whiff of the cobbler and cut a piece for each of them. He sat down and dove into his dessert.\n\n\"Millie's a great cook anyway, but man do I love her cobbler,\" he said with a grin.\n\nKate spooned some into her mouth and replied, \"You're right. This is wonderful.\"\n\nThey ate for a few minutes in silence. Then, Jimmy asked, \"You say you're looking for something here at the Circle T but you don't know what you're looking for?\"\n\nKate didn't know how to explain without appearing like a lunatic. \"It's a long story, Jimmy. I thought I came here looking for a man ... Jerrod Price, but I don't know ...\" Her voice trailed off.\n\n\"I don't rightly know of anybody by that name around here, but he seems mighty important to you.\"\n\nShe looked up into the kind man's weathered face, and a tear rolled down her cheek. All the hope that seemed to power her to this point was now draining out of her. \"He is, Jimmy.\"\n\n\"I spend most of my days right here, up to my neck in steers and cactus, so I don't know the town folk that well. When Millie gets back, maybe she knows where this Price fellow lives.\"\n\n\"I don't think so, Jimmy, but thanks.\"\n\n\"Now, don't go counting out Mille so fast, Kate. Between her church group, her sewing group, and her social group, she's got a good bead on just about every man, woman, and iguana for a hundred miles.\" Kate laughed at the way Jimmy drew out the word \"group.\"\n\nJimmy got up and walked over to put a hand on Kate's shoulder. \"We'll find him, Kate. Don't you worry.\" Jimmy walked to the screen door and yelled, \"Luke!\" He stuck fingers in his mouth and whistled. \"Hey, Luke! Come in here!\"\n\nKate noticed that Jimmy's glass was empty, and got up to refill it for him. \"Thank you, Kate, but you don't have to bother your pretty head worrying about me.\"\n\nShe picked up her own glass to take a sip. \"Believe me, it's no bother, Jimmy,\" she said with a smile. \n\nJust then, the back door flew open and in stormed an irritated young man screaming, \"Grandpa, what do you want? I'm trying to get that broken shoe off Ginger, and she's being all pissy about it.\"\n\nKate turned at the sound of the door and the voice. Her eyes met Luke's and they froze. The lemonade glass slipped out of her hand and crashed to the floor, shattering.\n\n\"Don't worry about it, Kate. Accidents happen,\" Jimmy said, as he jumped up to grab a towel and attack the spill.\n\nKate and Luke just stared motionless at each other.\n\n\"You ... what ... how ... what are you doing here?\" Luke asked,\n\nJimmy looked up from the floor and asked, \"Do you two know each other?\"\n\nLuke walked slowly toward Kate. \"How-how could it ...\"\n\nKate's mouth was still open as she studied every detail of his face ... the sharp chin with the cleft ... the dimple on the right side ... the crystal blue eyes ... the dark, curly hair. How was this possible?\n\nJimmy swiveled his head from side to side watching the two of them.\n\n\"How do you know me?\" Kate asked. Luke was now next to her and took her hands into his.\n\n\"I ... I don't know you, but I've seen you ... many times ... in my dreams.\" He drank in every detail of her face. He'd had the dream several times over the past month. He knew the woman's face intimately. Luke reached up and lightly stroked Kate's straight, dark hair to make sure she was real. He stared into her deep brown eyes, and his hand travelled down her soft cheek to her ruby lips.\n\nShe put her hands on either side of his face and ran her fingers through his dark brown curls. They stood facing each other, mesmerized.\n\n\"Would you like to go for a walk ...\" he hesitated.\n\n\"Kate,\" she said, finishing his question.\n\nHis face lit up in a broad smile. \"Would you like to go for a walk, Kate?'\n\nShe bit her lower lip and answered, \"I'd love to, Luke.\"\n\n\"What about Ginger?\" Jimmy asked as he swept up the broken glass.\n\n\"Yeah, go ahead and pluck them, Grandpa,\" Luke said dreamily, still staring at Kate and taking her hand to walk out the door.\n\nJimmy stood up and looked at Luke like he was loco. \"Dang it, Luke! I told you to wear your hat when you're in the sun all day! 'No, grandpa, that's just in the movies,'\" Jimmy said, imitating Luke. \"I told you cowboys wear hats to keep from getting their brains fried, but it looks like I'm too late this time!\"\n\nNeither Luke nor Kate heard a word he said as they walked out the back door.\n\n\"Do you have to be anywhere, Kate? I mean, can you stay?\" Luke asked.\n\n\"For how long?\"\n\n\"For a night or for a lifetime,\" Luke answered.\n\nKate smiled at him and threw her arms around his neck. \"If those are my only choices, I choose a lifetime.\"\n\nLuke smiled, and said, \"That's what I was hoping. So, there's no place else you need to be?\"\n\nKate looked around and answered, \"Nope. I'm home.\"\n\nShe turned back to him, and they kissed. It was a kiss for the ages, and it was the first of many, many more to come.\n\nThe End."
    ],
    "authorname": "LSanders",
    "tags": [
        "love",
        "supernatural",
        "gallantry",
        "romance",
        "ghost",
        "historical"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-spirit-of-rosemont-plantation"
}