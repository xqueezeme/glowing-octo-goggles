{
    "title": "The Unexpected End Of Love",
    "pages": [
        "Author's Note: I would imagine that not many people will enjoy reading about the remembrances of life that come with death. I didn't particularly enjoy writing it, but I needed to; there are two people who know why. One will never read this, and to the other, cor meum in aeternum. At least this was written with honesty.\n\nEarlier stories about these characters are probably not necessary to read, but will provide some background, especially \"The unexpected start of love.\"\n\nThank you to Kate7891 for some excellent suggestions during the preparation of this story.\n\n----------------\n\nDexter sat by Jen's side as she died.\n\nHe knew that today would be her last. The cancer, originally found in her breast, had spread to her liver and bone, and from there things went quickly. There was surgery, radiation, chemo, and then nothing else to do. The predictable stages of grief had swept through Dexter until all that was left was the acceptance of her life, love, and now the pale horse of Death barreling toward him. He spent those final weeks constantly by her side, taking a leave from running his now-large and diversified landscaping company to sit and talk with her while she slid in and out of consciousness, a drip of Dilaudid in her arm that got stronger every few days to ease her pain.\n\nThe room now was dark, waiting for the sun to rise. Dexter had decided to let her pass in their home, and for the past two days they had been side-by-side in the bedroom they shared for the past twenty-two years. The cute little colonial that Dexter had stayed in after the divorce from his first wife Ashley, and that Jen moved into about 6 months after they had met. Over time, they had re-decorated rooms one-by-one to make them theirs. Jen never pressed these changes; it was always Dexter, reaching out to connect with Jen in different ways, wanting to be close to her in a house that was a home to both of them.\n\nHe sat with her that final day and told her stories of their time together. He wanted her to leave with memories of love to take with her wherever she was going. The old brown leather chair that had been there from the beginning was snugged up against the bed, while on the other side stood a small array of medical equipment the hospice nurses used on their daily visits. Despite that, their room still felt as calm and loving as the first night they had shared it.\n\nDexter looked down at Jen with tears in his eyes again and said, \"Do you remember our first night in this room?\"\n\n\"I was afraid I would fall in love with you the first time we met, sitting on your front steps. I tried so hard to convince myself that I just needed to get laid, but I knew from right away that something was different. I felt so calm around you, like I could do anything. You remember all that stuff I told you about my childhood, and how my father used to beat the shit out of me, and my mom ignored me? I never laughed or felt happiness back then. I didn't know what it was. I married Ashley because she was like my parents; I understood it. It made sense to me. We never connected and I never felt intimacy. I never could trust anyone because of my parents, and then after Ashley left me for that guy, I thought it was all over for me. I guess I learned that trust and love didn't exist. Not for me anyway. But you stayed close every time I felt alone, you saw me as beautiful when I felt ugly, you showed me how much I meant to you when I felt worthless. You shared your vulnerability with me. You helped sooth all that pain from my past, and then you helped me understand trust, and then it was there. You saved me. You gave me happiness for the first time in my life.\"\n\nHe stopped to take a deep, calming breath.\n\n\"That first night,\" he smiled through the tears weaving tracks down his stubbled cheeks, \"You remember the neighbors going at it? Twenty-some years later and I can still hear them in my head like it's yesterday. I wonder whatever happened to them. Probably 90 and still going at it.\" The thought brought a pang of grief to Dexter. \"Talk about setting the mood for us, although I think the mood was already pretty well set...\"\n\n\"I remember everything about that night. Every small detail. Eating spaghetti together on the back patio, the fire we build, all of it. Jesus Jen, I don't think I ever told you how terrified I was when we came up here that first time. I knew if we had sex, I'd be lost in love with you. I think I already was. I was scared I couldn't perform because I so nervous,\" he paused, his eyes seeing something far away, \"Then again, you always did look amazing in jeans. I'll miss that. How you could put beat up old clothes on and look so fucking good. Do you remember that first Halloween where you dressed as a zombie? How does that make a guy horny?\" Dexter let his thoughts go back to their first night together.\n\n\"I didn't fall in love because we had sex. It was the second you touched me, when we hugged and you took all that fear away. It felt like you never wanted to let me go. I still feel that hug every second of every day. It never stopped for me. It never will.\"\n\nHe hung his head, letting his chin rest on his chest, and allowed sadness and loss to envelope him. Dexter had learned over these past weeks that if he embraced the grief, it could be healing for him. He let it wash over him like a wave in the ocean to take away the acute pain, leaving him clean again. The deeper pain would always be with him, and he knew that was part of love. He couldn't have one without the other anymore.\n\nHe looked up, his painful reverie past, and grinned. \"You agreed to sleep over that first night if I had sex with you again in the morning. If I recall correctly, we had sex about an hour later, again in the middle of the night, and in the morning. The sheets were torn off the bed and when we finally woke up, do you remember our legs being stuck together and we peeled them apart? That was the about the funniest thing I've ever seen! I couldn't breathe I was laughing so hard,\" The smile faded and Dexter rubbed his palms across his thighs, a habit that calmed him down.\n\n\"I always got so happy when you'd call or text me at work, sometimes just to remind me that you were still there and thinking about me. If I never told you, that meant so much to me, and I don't think a day will go by that I don't check my phone hoping to see your name.\"\n\n----------------\n\nThe cellphone tucked between the seat of the grumbling backhoe and Dexter's groin buzzed.  He shut down the hoe and turned off the tractor to check the message.\n\n'I am sooooooo horny. I'm climbing the walls!' it said.\n\nA little picture of a smiling Jen was next to the text, long, sun-lightened brown hair swept over her shoulder and her blue eyes creased with laughter. Three years older than when they had first meet and he still got butterflies around her. A love affair that had grown from the debris of their first wrecked marriages and Dexter's history of childhood trauma. An unlikely outcome that gave everyone that knew them hope that some sad stories have happy endings.\n\nThe time stamp on the text said 11:27 a.m. He was removing tree stumps around an industrial building with a backhoe while most of his landscaping crew re-surfaced a local baseball field when her text came through. She had left before Dexter this morning for an early meeting at her law firm, and as the backhoe sputtered to silence, he wondered again how she managed to sit through meetings day after day. She had said to him once in response to this \"So how can you dig up people's yards on a loud, smelly tractor all day long?\" His indignation came through when he answered \"I do a lot more than that,\" and Jen crinkled her face up in that way that said 'do you realize what you just said?' Dexter hugged her and said \"Ok, I know you do so much more than meetings.\" Jen pressed herself close and whispered \"I think I should do you.\"\n\nDexter texted back, a single thick finger laboriously touching letters one at a time, \"Better go take care of business then.\" The phone whooshed to acknowledge the text being successfully sent, and he leaned back to lose himself in the quiet and sun and breeze of perfect summer weather. Her text had guided him back to the memory of their first night together. Their connection had been so strong from the very beginning that physical intimacy came naturally; not sex, not making love, but profound connection between two people. The sense of trust and safety that Dexter had needed so desperately after so many years of feeling isolated and alone. Everything about Jen pulled him out of that lonely world, and the first night they had sex left Dexter truly in love for the first time in his life.\n\nThe buzzing phone jarred him back to the present. \"Can't. Still in that mtg. Going to duck you tonight.\"  Dexter smiled at the auto-correction.  He thought of several (what he considered) funny responses, but she beat him with her follow-up text. \"Baby, I'm gonna make u quack. Out.\" The word 'out' was her code that she had to stop texting and attend to whatever was going on at work.\n\nDexter sat on the tailgate of his work truck to eat lunch. The truck was painted a deep forest green, with a side logo reading \"Dexter's Landscaping -- We cut grass, not people\". Not many people got the reference to the Showtime series 'Dexter', but he thought it was funny anyway. Jen and Dexter had a long-standing tradition that the first one out of the house made lunch for the other. As former athletes, they both had a deep competitive streak that often led to interesting games of one-upmanship. A peanut butter and jelly sandwich was their equivalent to a white flag, although the winner ended up with a bad lunch.\n\nAs he relaxed on the tailgate, legs dangling over the edge, he reflected on all the little 'inside things' that they had built together. A language only they understood. Code words like 'chimichanga,' that meant the speaker was ready to leave a social engagement (although they had to change that particular code word when Jen used it at an office party, saying to Dexter \"I have a craving for a chimichanga,\" and one of her friends jumped on it, \"Oh my God, me too! Let's go get Mexican!\") There were dozens of secret touches they used that no else understood, each one with a special meaning. If Jen placed her hand on Dexter's hip when she was talking to him in public, he knew it meant that she was feeling especially aroused, and probably came from Jen's habit of holding onto Dexter's hips when they made love. If she put her hands on his chest and stood close, it was to reassure him. \n\nDexter opened the soft lunch cooler. On top was a small, handwritten note on a yellow Post-It. \"D --  Before tonight is over, you're going to be begging! I love you more than anything! -- J\"\n\n'Well,' he thought, 'that should make the day creep right along.' He knew it was a gift she gave him to have things to look forward to, even small things. Jen once told him \"As great as today is, tomorrow might be even better.\" A quote from her grandfather and his father before him. He envied how she lived life like it was one unending adventure, and now he was a part of it.\n\nIt was 4:30 before he heard from her again.\n\n'Still horny. How about you?'\n\n'Why yes. Yes I am. I'll be home about 7,' he sent back.\n\n 'Hurry up,' was all she said.  \n\nDexter entered their house and found a typed note right inside the doorway.\n\nLove of my life,\n\nCome upstairs when you're ready. But here are the rules:\n\n1. Sit in the big brown chair, no clothes\n\n2. You can't touch me or yourself\n\n3. Make no sound, don't say anything, nothing\n\n4. If you make it without touching yourself or making a noise, you will be allowed to do anything you want\n\n5. If you don't, your next orgasm will be followed by a long session of less than comfortable head play\n\nDexter didn't know if a shower counted as making noise or if they were already started, so he risked a 60 second shower in the downstairs bathroom, not even waiting for the water to warm up. He crept naked up the stairs and slowly opened the door onto a room mostly dark now except for a few candles. Jen was sitting on the edge of their bed wearing a short red lace robe, leg crossed with the hem of the robe provocatively high on her thigh. She was fully made up and her long sandy hair hung down to the middle of her back. Dexter noticed that her finger nails were painted red, and she had on a pair of red satin \"fuck me\" pumps. She stood when Dexter entered the room, and did a slow pirouette.\n\n\"The shoes make my ass look incredible, don't you think?\" she said more as a statement than a question. Dexter just nodded in response. \"Good boy,\" she purred, waving him to the brown chair. \"I see that your cock appreciates the shoes,\" and nodded at his growing erection. He raised his eyebrows in assent and sat in his assigned place.\n\nJen stood in front of him and slipped her hand inside her robe to tease her nipple, her eyes locked on his. Her other hand began to stroke her thigh all the way up to the junction of her legs and back down. Her fingers dancing on her clit before moving away again.\n\n\"Shall we see if I'm wet?\" she asked, sliding her finger into her pussy and then into her mouth. \"I am so ready for something to be inside me.\" Her smile sultry and provocative. \"Oh, baby, you didn't think I meant you, did you? I will admit that your cock looks absolutely breathtaking right now. So hard, I could almost come just thinking about you sliding inside me...\" Dexter sat, his hands gripping the arms of the brown leather chair, his cocking now aching for attention.\n\nJen turned around and bent at the waist, the robe sliding up and over her ass, her pussy inviting Dexter to pleasure it. She looked back over her shoulder, the questioning arch on her eyebrows asking 'are you going to fuck me?' When he didn't move, she shrugged her shoulders and took a large, realistic dildo from underneath a pillow, and still looking back at him, proceeded to run her tongue over the head and slide it into her mouth to lubricate it. She reached down between her legs and pushed the glistening head against her opening and slowly pushed it in. Dexter had never seen something enter Jen from this angle, and he was transfixed as the thick dildo stretched her until it was completely buried, the synthetic balls pushing against her lips and clit.\n\n\"I'm going to do this like you do me,\" her voice breathy, \"so you can see how fucking hot you are.\" Her eyes held his as she began to deliberately and completely fuck herself with the dildo, the pace slowly picking up until she stopped. \"Do you want to see what it looks like when I come?\" He nodded. Her hand started to move faster and Dexter could see the dildo glisten in the candlelight. One final time she pushed it all the way, her knees pressed together and started to buckle before she caught herself. \"Oh fuck,\" she grunted, and then slowly started to work the dildo again. \"Oh...wow...ok, I'm coming again, I'm coming again...\" Her face froze in the agony of pleasure as the orgasm blew its way through her whole body. Dexter could see the dark flush on her face and neck even in the dimness, and was aware of his cock, hard and aching. One last big breath out, and Jen set the dildo on the bed and shuffled behind the chair, putting her arms around Dexter and whispering into his ear. \"You can have anything you want now. Anything...\"\n\n----------------\n\nDexter got up to stretch his legs, \"I'll be right back.\" He needed some air, to push the pause button on his emotions if only for a minute.\n\nIt was fall and the leaves were in full change, trees exploding with red and orange. The morning weather beautiful and the memories came unbidden as he walked around the neighborhood.\n\nHi mind went like it often did to the first day they met.\n\n'That was the day you started to show me that you cared more about my happiness than your own. And you let me care more about your happiness than mine, and then it all blended into one...'\n\nHe was startled out of his reverie and surprised to find himself back home. 'I must be losing it. Get your shit together,' he chastised himself as he climbed the stairs back to their bedroom. He reminded himself of the advice a therapist had once given him, 'Be gentle with yourself.'\n\n\"Do you remember the day Dog died?\" Dexter asked as he sat back down in the old brown chair that had borne witness to so much of their lives together. \"I know you do. That was a strange day. It all happened so fast. I remember Dog as a puppy, with that puppy smell and feet that smelled like Fritos. When I got lonely after Ashley left, I would lay in bed with her and smell her feet. Somehow it comforted me. Funny I remember that before I remember how much hair she shed.\"\n\nHe paused, looking at the floor, half expecting to see tumble-weed clumps of Dog's hair rolling aimlessly around the bedroom. \"I don't know what would have happened if you hated her. I mean, I suppose that's part of why I fell in love with you so fast. Dog loved you right away. I guess that was my permission to love you, too. Oh my God -- remember how she sniffed your crotch that first day? She was all up and in there. Yes, I was, in fact, jealous,\" the corner of his mouth turned up the smallest bit at the memory.\n\n\"I didn't want to lose her and I don't want to lose you.\" Dexter sagged as another wave of grief crashed over him, \"But I'm going to. When she died, I decided to let myself believe she was somewhere better. Like a dog heaven. I don't know. That afternoon I was driving home from somewhere and a fox crossed the road in front of me. Right in the middle of the road, it stopped and looked right at me, and then disappeared into the trees. I had the most certain sense that it was Dog saying 'catch you later, dude.' I always laughed because I thought it was her showing off -- 'See how cool I am now?' It was like she was telling me that she was still ok. Just different. She was a good friend.\"\n\nHe stopped talking and listened to life for a minute. The rhythmic beep of some piece of medical equipment, the random creaks of the house, and bouts of silence. It was the silence that scared Dexter the most, because in the silence was the emptiness of a childhood that he could never fully outrun.\n\n\"I think Dog came into my life to teach me that she would wait for me, and to teach me that you would wait for me, too.\"\n\nDexter was still for a long time then. He felt heavy, caught in a painful pool of syrup where every breath took effort. Off in the distance, Dexter heard the ring of chimes, and wondered for a second what day it was, what time. Then the chimes again, calling the faithful to their knees. The chimes were closer now, louder, and harsh. His cell phone rang one more time before Dexter picked up to see his daughter's name. Jen's daughter.\n\n\"Hi Jennifer,\" he tried to sound stable for her sake, \"Where are you?\"\n\n\"Hey Dad. How's it going? How are you?\" she answered.\n\n\"You're not supposed to answer a question with a question,\" Dexter surprised himself with a laugh, \"House rules. But I'm ok. Sitting with mom, keeping her company.\"\n\nThere was a long silence and Dexter could hear Jennifer breathing in deeply, trying to calm herself, he imagined.\n\n\"No change?\" She asked\n\n\"Not really, but she seems peaceful.\"\n\n\"Ok. I just finished my last mid-term, and I'm going to leave in about 20 minutes, so I'll be home in maybe an hour and a half.\"\n\n\"Please drive carefully, ok? Don't speed, it won't help anything,\" he said, knowing that she would anyway.",
        "Jennifer had always been close to both of them, but especially her mother. Jen had always had a way of reaching Jennifer and helping her walk the right path. Even when Dexter had felt left out, he loved watching the two of them. From the time she had been a baby, Jen had infused Jennifer with a trust, as she had with Dexter, teaching her daughter that she would love and protect her no matter what.\n\n\"Dad. Seriously. I've been driving for 5 years. See you in a bit, ok?\" There was still some rebellious little girl left in his adult daughter.\n\n\"Alright, Jennifer. Bye for now.\"\n\nHe had sat so often in the brown chair next to the bed that it started to feel like an extension of him, that he was growing into the house itself. It was comforting, like something permanent and loving was seeking to fill the void left behind as Jen slid away. He thought of his childhood, devoid of the loving permanence that parents are supposed to give their children, and how Jen had filled that empty space inside him, and now that she was leaving, something new was there. The memories of their life together raced through his mind like a slot machine with Dexter waiting to see if it would stop on a winning combination. Bucket lists. The slot machine lit up with lights and sounds as \"WINNER!\" scrolled across the screen.\n\n\"You have to remember the night we tried to make bucket lists in the backyard. I remember we were just sitting and watching the end of the day,\" he said to Jen. \"I told you I couldn't have a bucket list because I didn't grow up with the luxury of dreaming about wonderful things to see and experience. It just wasn't a part of my life.\" The last light of that fading day long ago speckled through the trees, and...\n\n--------------------\n\n...covered them in warmth as Jen put her hand on the side of his neck in the way she knew calmed him. Dexter could almost feel himself being physically pulled from his painful past back to the present. He looked down, unwilling to meet her gaze in the shame of how he felt, the shame of who he was, certain that she would share his awful sense of self-loathing and disgust. She gently lifted his chin until he was looking in her eyes to see compassion, and patience, and love so wonderfully mixed with her endless mischievousness.\n\n\"Then let's make it our bucket list together, because I want to share everything with you,\" her mouth turned up at the corners the smallest bit, \"Besides, I'm pretty sure we can come up with some adult adventures that require two.\"\n\n\"Like a threesome with a circus carny, or cream cheese and a goat?\"\n\n\"What? No. Not like that, you dork,\" but she was smiling, \"More like making love in a sailboat during a thunderstorm.\"\n\n\"Jesus, that's pretty specific,\" he said as he looked down at her 'IF I COME BACK AS A ZOMBIE I'm eating you first' tee-shirt, \"How about item number one on our bucket list is for me to take off your shirt?\"\n\nShe put a very serious look on her face and said, \"We could do that, but since we've done that before, it's not really a bucket list kind of thing. It's more of a 'you're horny' kind of thing. How about the first thing we put on our joint bucket list is to make a baby?\" \n\nDexter was frozen silent for a few seconds before his face broke into a huge smile, \"Holy shit, are you serious? Let's start right now! Because I'm serious!\"\n\n\"Can we at least wait until we get to the bedroom to impregnate me?\" She took his hand and led him through the sliding back door into the cool air of the house, \"And you're going to have to get your fucking language in check, Dad, because I'm not going to fucking tolerate a fucking child that cusses every other fucking word...\"\n\n----------------\n\nDexter's mind jerked back to the present as he saw the ladder of light on the wall formed by the noon sun slipping through the slats of the closed blinds, and he felt the big brown chair still pulling him into its comforting fold, and heard the repetitive hum and click of the machines monitoring Jen's fading vitals. He remembered the night of their daughter's conception clearly, as he did so many others that were full of warmth and love. It brought his grief again to the surface and he cried quietly so that Jen wouldn't hear him. He didn't want to take the chance of that being the last thing she heard.\n\nThey never did finish their bucket list.\n\nDexter looked down at Jen. \"Should I keep talking? Yeah? You were always a good listener,\" he said. \"I remember all those days when Jennifer was so young. She tried so hard to be grown up. The time she wanted to order for herself at that crappy restaurant. Split pea soup. She asked if you wanted to split some pea soup with her, and then got so upset when we couldn't stop laughing. Remember how that just made it funnier, she got madder, we laughed more, and then she finally started laughing with us? I'll never forget that. What it felt like. A part of a whole.\"\n\n\"And her insistence that it was Jennifer, NOT Jen. She was always going to be her own person, just like her mother. But she always knew she could come running back to you when she fell off her bike. God, the time she hurt her knee in that lax game freshman year of college. She was a mess until she saw you and then she just calmed down. I could see it in her face. Determination. You held us together and I'm scared now.\"\n\nDexter stood up to stretch his legs. \"I feel like I have so much to say and I'm running out of time. Stay at least until Jennifer gets here.\" He paused to take in a large breath. \"Jennifer. I would have never imagined raising a daughter would be like it was. Trying to teach her to play lacrosse catch? She figured it out the very first time. She's like you, that's for sure...Sensibly free-spirited,\" he laughed, \"makes you guys sound like clothes from the JCPenny catalog.\"\n\n\"She grew up right, though. We got her far enough. I can't imagine holding a grandkid without you. I'll probably cry the first time. But fuck it, because I know Jennifer will understand. She'll cry, too. And then we'll laugh and share 'remember when' stories, just like now. And your grandkids will grow up knowing all about you. Who you were, where you came from. How you laughed...But I'll keep one thing just for myself.\"\n\n\"I need to eat something,\" he told Jen, \"Don't go anywhere, I'll be right back.\" While the little attempt at lightheartedness had the opposite effect on Dexter, Jen had always cherished his ability to keep some perspective on the harder things in life. She told him a few years back that always made her feel strong, like nothing was too big to handle. He remembered their conversation exactly.\n\n----------------\n\n\"I don't feel strong, though,\" he tried to explain, \"I feel like I'm trying to hide from something.\" Jen crinkled her forehead in the way that said 'I'm a little bemused'.\n\n\"I don't see it that way,\" she said, \"It feels more like you're in control of things, like you're confident.\" Her voice slipped into a bad imitation of a British accent, \"And when you're like that, you make me so horny, baby.\"\n\nJen put her hands around his waist and pulled him close and whispered \"And you know what happens when you make me horny,\" and kissed him. Gently at first, Dexter could feel her body pressed against his, and then they passed a point together where sex was inevitable. But it was only partly physical. The rest was the need to be connected, to be as close as they could possibly be. Jen knew that, just like she knew when the self-criticism from his childhood threatened to pull him backwards, sex was often the way Dexter could most quickly find safety in their relationship.\n\nThey had made love then. It was gentle and sweet and passionate, and it felt to Dexter that those feelings defined who Jen was, and who he was when he was with her. Not always, but there were moments when he felt like she liberated who he truly was away from the isolated, self-abusing parts that were gifts from his parents that kept on giving. \n\nJen loved the unrushed feeling that Dexter could bring to sex. So different from anyone else. It allowed them to connect in so many different ways, 'and,' she thought as Dexter achingly entered her, 'it always felt so good.' He held himself up with his forearms so that their chests were together and they could kiss, long and deep. The feeling of having an orgasm while kissing Dexter was indescribable to Jen; if it was an especially strong one, she would moan into his mouth, sharing the intense pleasure. He almost always came then, the same way they had made love; unhurried and protracted.\n\nThey lay quietly afterwards, the last of the sunlight painting the bedroom in the deep blue-grey of a Pennsylvania dusk. \"You know,\" Jen said, turning on her side to look at him and laying her leg over the top of his, \"we're actually still having sex. I can still feel it in my whole body, like fireflies flickering in the field.\"\n\n\"You make alliteration so sexy,\" he answered. Her hand snaked down to his half-hard cock and began to tease that one little spot that drove him crazy. She could feel him getting hard again.\n\n\"Pretty good for an old man,\" she said. \"You got enough in the tank to pick up the pace a bit?\"\n\nHe pulled her on top of him and said, \"Be careful what you ask for, old woman, or you might end needing a new hip.\"\n\n----------------\n\nDexter broke his trance and looked into the kitchen. Organized chaos. Not just kitchen things, but emotional ones. When Dexter had met Jen, he was just learning to cook in the aftermath of his divorce. It was important to him not just to survive, but to find ways to touch the richness of life. \"Eat well, be happy\" had been one of his mantras after Ashley left. It didn't always work, but it gave him something to hold on to and then became something he shared with Jen.\n\nThe small counter-space was littered with the accumulated cooking accessories of 21 years together. The Kitchen-Aid mixer she had gotten him one Christmas when he was in his 'baking phase', a basket of fruit, a big spice rack, and thises-and-thats, each of which carried the torch of memory for Dexter. The kitchen had been a place of love for both of them, the place where they re-connected every day after work, and after Jennifer was born, it was the common area for the three of them.\n\nHe leaned against the counter and recalled again the day Jen moved in next door and he had made her an apple pie. A bad one, but they had shared it that night. He had always held onto the beautiful thought that they were celebrating the first day of the rest of their lives together. He had told her it was a house-warming gift, but it was so obviously an excuse to spend time with her, something Jen always teased him about. He asked her once, \"Would you have made the effort to meet me if I didn't make you a pie?\"\n\nShe smiled that perfect smile, a few more years' worth of laugh lines then the day they met, but always captivating to Dexter, \"Fuck, yes. Probably not that first night, because I'm so petit and demure,\" Dexter scrunched his face into the 'you have got to be kidding me' look as she went on, \"When I pulled up to that house I was renting and saw you playing with Dog, I thought 'he can't be single'. I had to find out if there was a Mrs. Stud Muffin around. But yeah Dex, I would have made it happen.\"\n\nDexter ran his hand across the smooth granite countertop and drifted back.\n\n----------------\n\nThe cold, fall rain dripped off Jen as she walked through the front door and dropped her work bag. She shrugged out of her coat and heard the rattle of a pan from the kitchen.\n\n\"Dex!\" she called, \"Ima need something hot! Stat! I'm freezing!\"\n\nDexter stepped into the hallway, backlit by light from the kitchen, a big smile on his face. \"Oh, I've got something hot for you, baby. Come and get it!\" He grabbed his crotched and leaned forward onto the tips of toes. \"I'm bad!\" he sang, in a high Michael Jackson falsetto.\n\nShe hugged him tight, the way she always did. \"What's got you in such a good mood? I mean, besides your incredibly sexy and willing wife.\"\n\n\"Well, in addition to you,\" he answered, leaning back to look at her. \"We got the baseball job.\"\n\n\"Oh. My. God!\" she yelled, pulling him tightly into her. \"You're going to be a professional baseball groundskeeper!\"\n\n\"Yep,\" Dexter said, \"The Clownton Clown Punchers. An auspicious first step into the world of professional sports.\"\n\n\"Tell me all about it while I warm up,\" Jen said, \"I need a cup of coffee.\"\n\nThey had made the kitchen warm, with sensual smells of cooking and the shared sustenance of life, a place of safety and connection to the things that were most important. Hardwood floors and dark walnut cupboards fronted with glass. The walls were a veneer of large stone and the countertops granite, giving the room strength, folding them into its protective embrace.\n\n\"Sit,\" Dexter said, and lifted her by the hips onto the counter next to the warm oven. She was light for him, a landscaper used to hard, physical work, but she still had the body of an athlete, with strong shoulders and legs. Her blue eyes set off perfectly from her long sandy blond hair. Dexter found more attractive with each passing year. \n\n\"What are you cooking? It smells amazing.\"\n\nDexter said, \"Oh, I just whipped up a little chicken cordon bleu casserole with whatever we had laying around. It'll be ready in about a half hour.\"\n\nHanding her a cup of coffee, he said, \"We're having an appetizer, too.\"\n\n\"Oh, really?\" Jen giggled, \"And what's that?\"\n\n\"Fresh clams,\" he answered, \"Butt up.\"\n\nShe braced her arms and lifted herself off the counter so that Dexter could slide her skirt up around her hips and her red panties down. He gently pulled her legs to coax her to the edge of the counter.\n\n\"I should be doing this for you today,\" she said as her hands ran through his hair.\n\nHe kneeled on one knee and looked up at her, \"Oh, dear Jen, this IS for me.\" He kissed up her thigh and barely touching, ran his tongue along the length of her slit, stopping to just graze her clit.\n\nJen let head rest against the cupboard, \"Ok. Fuck. Whatever you want.\"\n\nDexter ran his hands over her thighs as he teased her. His hands made her feel so connected to him; more than just physical, it was loving and erotic blurred together. He pulled her clit into his mouth, his tongue flickering over the exposed tip, sending sparks into Jen.\n\n\"Dex,\" she hissed, \"This isn't going to take long.\"\n\nHe gently slid a finger into her, his palm up so that he could massage the sensitive bump inside her pussy, causing Jen to let out a small moan. His tongue continued to work her clit, continually changing patterns and pressure to keep her from coming too soon.\n\nDexter took his mouth away from her and stopped moving his finger. \"Maybe we should wait and make this dessert?\" He asked.\n\nShe pulled him back into her, \"Are you kidding? I'm so close.\"\n\nHis tongue settled into a circular motion on her swollen clit and he began to lightly rub her G-spot with his finger. Dexter knew this drove her wild. He thought to himself, 'This is my finishing move!' and almost giggled. His free hand had to hold Jen's hips down as she began to come, her hands clenched behind his head and her toes curled into tight light little balls. She was never loud, but the unintentional sounds that she did make were so authentically erotic that Dexter could feel himself getting hard. He peeked up at her face and saw her hand slipped inside her blouse, gently pinching her nipple. Her teeth clenched as her whole body tensed for what seemed like a happily long time to Dexter before she slumped back and he took his mouth away.\n\nThe chicken cordon bleu casserole was exquisite.\n\n----------------\n\nDexter had to force himself to come back, looking at the space where Jennifer's high chair had sat 2 decades earlier. She must have been about 2 at the time and Jen was trying to feed her while Dexter cooked. It was spaghetti night and Jennifer's mouth had a halo of orange from the sauce and a single, long noodle clinging to the top of her head. She had always been a good-natured but stubborn baby and this night epitomized it. In a state of bloated infant satisfaction, Jennifer had signaled that she was done eating by very casually pushing her sippy cup off the high chair. Jen was talking to Dexter, and without being interrupted, picked up the cup and put it back on Jennifer's spaghetti- and pea-strewn tray. Jennifer waited for a few seconds and brushed the cup off again. This time Jen stopped talking and looked with her stern mother face, which clearly wasn't interpreted by Jennifer in the way it was intended, and retrieved the cup. The kitchen air filled with the smell of 'game on', and Dexter stopped to watch as the test of wills began to unfold.\n\nJennifer stared at her mother, defiance written across her spaghetti-stained face, and slowly, deliberately pushed the cup off the tray again. The cup hit the ground, and they both sat motionless. Dexter's eyes went back and forth between mother and daughter, waiting to see who would laugh first. Jen retrieved the cup again, and held it in front of Jennifer's face until they both broke out laughing. Hearing them laugh gave Dexter a deep sense of peace and belonging that he had never known before Jen, a sense of happiness and certainty of love. The thought of that night, and the feelings that went along with it gave him a jolt back to the present. He said out loud to no one but himself, \"You taught me to laugh, Jen. The day we met was the first best day of my life.\" He took deep breath to ward off more tears and decided he didn't feel like eating after all.\n\nHis phone rang, ice cold water thrown into the face of a sleeping man. Jennifer's voice was distant, a voice from the other end of a canyon.\n\n\"Hi Dad. How are you?\" she asked.\n\n\"Ok, I guess,\" Dexter lied, \"Am I on speaker phone?\"\n\nThere was a click and Jennifer's voice was clear now. \"What are you doing?\" she asked.\n\n\"Sitting around, I guess, telling your mom stories to keep her company.\"\n\nWhen Jennifer finally spoke, Dexter could hear how stuffed up her nose was. \"It seems like a week ago that mom was helping me shop for a prom dress. 'Nope, too short', 'Too low cut', 'Too tight', but we finally found the perfect one. We had so much fun. Did she ever tell you that I got her to try one?\"\n\n\"No,\" he answered, \"I wish I would have seen it.\"\n\n\"You know, it was really funny, and then I realized how beautiful she was. She made that stupid dress look amazing.\"\n\nDexter took a deep breath. \"You look a lot like her. At least the good parts came from mom.\"\n\n\"I didn't get her great boobs, that's for sure,\" Jen said.\n\n\"No, no, no. That's not a dad topic.\" Dexter regretted the words as they came out, too late to take them back. \"I'm sorry, Jennifer.\"\n\n\"No, it's ok,\" she said, \"I guess we have to get used to it. But I am going to miss being able to talk to her about anything.\"\n\nDexter looked around the kitchen. He wondered for a second how he had gotten down here, a black stretch on the road of his memory that felt like a missing puzzle piece. His head twitched to the side, an involuntary movement he knew was a holdover from his abusive childhood. It usually felt like that was a switch to a different part of himself, a child part split off and hidden for safe-keeping when he was very young. He felt a growing panic that came with the feeling of acid in his stomach, like danger was coming and there was nowhere to hide. His head jerked again, like a parent slapping the face of a child. He took a deep breath and reminded himself that it wasn't 50 years ago, and thought of a safe place for the child, the backyard in the early summer evening. It was a sanctuary for him. In his mind, life was bursting all around; butterflies, bees, bird song, and the loud trilling call of tree frogs. The cooling air carrying the smell of cut grass from somewhere close by. He was sitting in the grass while Dog romped around. Dexter said to himself, 'It's ok. It's safe. You're not alone.' He could feel himself almost physically dragged back to the present. \"It's no safer here,\" he muttered.",
        "\"Dad, are you ok?\" Jennifer asked, her voice full of concern.\n\n\"Yep,\" he answered, \"I'm ok. When do expect to get here and do you want something to eat?\"\n\n\"Probably about 30 minutes and we can order in later if we get hungry,\" Jennifer said.\n\nDexter made his way back up to their bedroom, thinking that soon he would have to think of it as only his bedroom. The machines continued their beeping and pinging like nothing was changing, only Dexter knew it was, minute by minute. He stood over the bed, looking down at Jen. There was almost nothing left of her, of who she really was. So thin and frail now, hair thinned to wisps, but he still saw her. The real her. He checked his watch. Another hour before the hospice nurse was due. Dexter sat in the big brown chair, exhausted inside and out, wondering how long it would be until he could follow her and what would happen to Jennifer when he did.\n\nHe reached down and stroked her cheek. For all these years, 22 of them, that was how they comforted each other. He wished more than anything that she could run her wonderful fingers across his cheek right now, look him in the eye and sooth him. He reversed his hand and let the backs of his fingers re-trace the path. The phone rang again, setting off a sprinkle of irritation for interrupting his time with Jen. The caller ID said it was Jen's brother, Oswald.\n\nDexter answered the call, \"Hey Waldo.\"\n\n\"Any change?\" he asked Dexter.\n\n\"Nothing unexpected,\" Dexter said, \"Jennifer is on her way and should be here in a couple of minutes.\"\n\n\"I can't believe this shit. I can hear the medical stuff in the background. How you doing, man?\"\n\nDexter glanced across Jen at the stand that held the Dilaudid drip and the vital signs monitor, beeping, beeping... \"Ok, I guess. I will be nice to have Jennifer here. It's hard to do this alone, but life has to go on, right?\"\n\nDexter could hear Waldo's voice shake, \"I'm sorry I can't be there, it will take me a few days,\" Waldo told him, \"We're all still here for you for the rest of your life. You're stuck with us, man.\"\n\n\"Thanks. I appreciate that, Waldo,\" Dexter tried to sound ok, \"I'll let you know if anything changes.\"\n\nWhen he ended the call, Dexter looked down at Jen. \"What the fuck kind of name is Waldo, anyway?\" He adjusted the covers on Jen and held her hand, listening for changes in the vital signs monitor, some sign that indicated she was at least aware of his presence. Nothing. \"It's better than Oswald, though.\"\n\n\"I remember the fourth of July back about 6 years ago when you all thought it would be funny to get your brother and I matching tee shirts. His said 'I'm with Dexter' and mine said 'I'm with Waldo'. I never understood why you guys all thought that was so hilarious. No one ever game me a good reason why he was named Oswald. Poor guy to grow up with a name like that. Then again, I remember you asking if my parents hated me when they named me Dexter. Ironic, don't you think?\"\n\n\"I love your family,\" he continued, \"Everyone is so open and accepting. I didn't know what to do at first. Like, here are all these people acting like I mattered to them. Your parents were so amazing, both of them. I had no idea that was how it was supposed to be. I miss your parents. I felt so much loss when they died. But, at least there's still Waldo!\"\n\nDexter stood and looked out the window at the late afternoon sun shining on their backyard, stretching his arms over his head, 60 years of accumulated creaks popping like small, muted fireworks. He thought that it would be nice if he could release grief as easily as letting trapped nitrogen out of joints. The backyard had changed over the years, but was still looked like a landscaper's house. Expansive Dutchman's pipe vines covered the fence on all three sides, the purple flowers shaped like ornate antique smoking pipes. Their garden, a raised bed to keep the rabbits at bay, had been lush through the summer, but now all that remained were a few die-hard red tomatoes determined to tough out the fall and withering cucumber vines woven up an ornate wooden trellis. Tomatoes. Dexter smiled to himself as he remembered the time they had gotten into a tomato fight.\n\n----------------\n\nIt was fall and time to pull the tomatoes out and plant winter brassicas. Most of the tomatoes were either over-ripe or fallen to start rotting in the soil, many half-eaten by birds. The day was abnormally warm even for September in Pennsylvania with lines of clouds cruising overhead. Jen stood behind Dexter with her arms around his waist, hugging him close.\n\n\"Is it supposed to rain today?\" she asked him, one arm letting him go.\n\n\"I don't think so,\" he answered, \"It's not going to rain until Tuesday or so.\"\n\nShe giggled, \"Yes it is. It's going to rain...\" and smashed a soft tomato on his cheek, \"...tomatoes!\"\n\nShe let go and stepped back, throwing another tomato at Dexter just as he turned around, wiping the first one off his face. This one hit him square in the forehead and was mushy with rot. \"See?\" she laughed and danced away, \"Raining tomatoes!\" She flung another at him that disintegrated before it hit him, covering him with chunks of tomato. Jen turned to run, but Dexter caught her around the waist with one strong arm and held her squirming.\n\n\"I heard tomatoes are good for your hair!\" he said and crushed a giant beefsteak tomato on the top of her head, juice running down the side of face.\n\nJen spun and threw her arms around his neck, pulling him into her. \"And I heard tomatoes make you horny,\" she said, kissing him through the tomato debris on his face.\n\nDexter pulled away enough to speak. \"Everything makes you horny.\"\n\n\"No,\" she said, sliding down his body to her knees, \"Just you.\"\n\n Dexter looked around, worried that someone might see them, but the yard was mostly invisible to the outside world. He was always more inhibited about sex than she was, but her sense of spontaneity almost always guided them. 'Ok, let's go for it,' he thought. She unbuttoned his jeans and fished the tip of his soft cock out, running her tongue over it and under the ridge of the head. \"That's called the corona glandis,\" Dexter said as matter-of-factly as possible.\n\nJen stopped and looked up at him. \"Do you mind? I'm trying to work here,\" and pulled the hardening head into her mouth before saying, \"And how in the fuck of all fucks do you even know that?\"\n\n\"Penile anatomy is kind of my thing.\"\n\nJen laughed his cock out of her mouth, \"Mine, too!\"\n\nSliding his jeans down to his knees, she let him fully harden in her mouth under the careful supervision of active tongue and began to bob her head on his shaft, not quite able to take his entire length in her mouth, cupping and gently massaging his balls with her hand. Dexter looked down to meet Jen's eyes, and had to stifle a giggle at the tomato drying in her hair. 'I hope that doesn't stain her hair,' he thought, 'better to not bring that up right now...' She broke up the pattern of her movements by periodically using her free hand on Dexter's butt check to pull him as deep in as she could handle, and hold him there while her tongue slid along the sensitive underside of his shaft to the head, giving him a jolt of pleasure. \"Oh, shit, that's the frenulum,\" he explained. \"Umm hmmm,\" she agreed through the cock in her mouth, and bit lightly down on him. \"Youch! Ok! No more Gray's Anatomy!\" he yelped.\n\nShe stopped long enough to strip her t-shirt and bra off, and smiled up at him as very loosely hold the shaft of throbbing cock, twisting it over the lubrication of her saliva to follow her mouth. Jen could already feel the insistent beat of his pulse through the thin skin on the top side of the shaft and knew he wouldn't last long. She paused long enough to ask him, \"Do you want to come in mouth or on my tits?\"\n\n\"Mouth.\"\n\nShe took him back into her warm mouth, and set a steady rhythm; her mouth, and hands working his shaft and balls. The salty-sweet precum mixed with her saliva to add to the lubrication for her twisting hand, his cock throbbing and getting impossibly hard, his breath stronger and deeper. His whole body became rigid as he came in her mouth, Jen continuing to work him, helping him hold on to the high for as long as possible. When the pulsing slowed down, she gently made sure he was clean and satisfied before pulling his pants back into their natural position. As she stood, Dexter embraced her in a deep kiss, and he could taste a hint of himself and, he thought, tomato...\n\n----------------\n\nDexter looked down at Jen, the contrast of his memory and her reality almost overwhelming. \"That was before Jennifer was born,\" he said aloud. \"You know, Jen, nothing changed when Jennifer was born. It was like you had this big reservoir of love and patience. I heard from the guys at work that having a baby would change things between us. It did, I suppose, but not in the ways they said. It was better. I always felt like there was a space inside you that was waiting for her. That's why you were always so patient, with me and her. You had enough for both of us.\" He could feel the grief rising again, his eyes filling with tears. \"I only hope I gave you enough.\" Dexter looked back out the window, afternoon light filtering through the large trees that surrounded their house. 'My house now', came the painful thought.\n\nThe monitors next to Jen beeped quicker, and then slowed back down. Dexter could hear her breathing become quietly ragged. He reached down and gently held her frail hand, hoping that somewhere she found reassurance in the simple act.\n\n\"Jennifer was 14 when you turned 50,\" Dexter said. \"She insisted that we have a big party for you. She goes 'Dayaddd! It has to be special!' Her hands were on her hips and she was looking at me like I was a simpleton. She asked me 'What do you want to get her?' and I told her I was going to get you time away from your nagging daughter. You remember how she would get indignant at that age? \"Very funny, Dad. Not.\"\n\n----------------\n\n\"I'm serious,\" Dexter said, \"I'm going to take her on a trip and you're staying with Gramma and Grandpa.\"\n\n\"Where?\" she asked.\n\nHe replied, \"At their house.\"\n\n\"No, I mean where are you guys going?\" Jennifer said.\n\nDexter stepped forward and pulled her into an embrace. \"Out to Colorado to walk around the mountains.\"\n\nJennifer's voice was muffled against Dexter's shirt, \"Ok, as long as I'm not missing anything good.\"\n\nThe trip was spectacular. A day and night in Denver, a drive and long hike into the Pike National Forest where they camped in isolation. They were both exhausted by sundown that first evening in the forest, laying on their backs holding hands, looking at the vast swath of stars.\n\n \"I've never seen stars like this,\" Dexter said, \"It's kind of awe-inspiring.\"\n\nJen smiled and said, \"Have you ever looked?\"\n\n\"I guess not lately. When I was a kid, I used to look at the stars, but they weren't like this. I used to wish I was somewhere up there instead of where I was, like I could escape for a few minutes.\"\n\nJen rolled on her side to look at Dexter. \"Where do you want to be now?\"\n\nHe rolled to face her. \"I think the rest of the universe is out there looking at us, wishing they were here. I don't want to go away anymore. I'm where I belong.\"\n\nShe held his face between her hands and kissed him. Loving, sensual, and reassuring. Her tongue tested him, seeing if he was open enough for the intimacy she offered under the stars, the tip brushing feather-light on his lips. The fire cracked and an owl called out from nearby. 'Hoot-hoot-hoooot. Hoooot.'\n\nDexter whispered into Jen's ear, \"That's a horned owl. He's trying to get laid.\"\n\nShe pulled back to look at his face in the light of their camp fire. \"Um yeah, Mr. Suave, I know the feeling.\"\n\n\"I hope that owl gets some serious cloaca,\" Dexter laughed, \"Then he'll hold his talon under all his friend's beaks so they can smell his cloaca talons.\"\n\nJen burst out laughing. \"The art of romance,\" she said, sitting up.\n\n\"Awww, never fear, Jen. At least it's a for sure thing you're getting laid. That poor owl might have a case of blue cloaca in the morning.\"\n\nShe unbuttoned her light shirt from the top down, deliberately, \"Oh, I know. And in the morning, too. And the afternoon...\" She held her shirt closed when the all buttons were done. Dexter looked up at her washed in gentle golden orange firelight, with the stars as her background. \"Ready?\" she asked, slowly sliding her shirt down her arms to fling it aside.\n\nDexter slid his hands up her sides, feeling her stomach muscles, and around to her back, pulling her down so that he could unclasp her bra. Jen stood up, letting the bra fall away so that she was only in jeans, a look she knew was one of Dexter's weaknesses. He quickly wriggled out of his own clothes, feeling the hard ground through the thick blankets they had laid down. Jen stood over Dexter, allowing him to shimmy the rest of her clothes down her legs.\n\nKneeling down, she kissed Dexter for a long time, letting the head of his hard cock nestle against her pussy, entering just enough so that Dexter could feel her heat, before slowly sliding down to take him all the way in. They got into a slow rhythm; Jen on top and Dexter holding her hips.\n\n\"God, this feels good,\" Jen moaned, \"I'm trying not come yet.\"\n\nDexter opened his eyes and looked at her. \"Slow down.\" He could feel the walls of her pussy tightening around him.\n\nShe could feel every bit of him moving inside. \"Oh, fuck, that's worse. I can't hold it. Is that ok?\"\n\nDexter smiled and nodded, watching her eyes scrunch closed and her mouth grimace in ecstasy. He could feel her who tense and for a few seconds she stopped moving as her the orgasm sparkled throughout her body.\n\nShe started moving again, faster and with more urgency. \"Don't stop, baby,\" she said, \"I'm going to come again.\" Her body tensed again. \"Oh fuck, right now,\" she softly moaned and ground her hips down on Dexter. He could feel a trickle of her come slide down his inner thigh.\n\nStill holding her hips down on him, Dexter said, \"That looked like it felt good.\"\n\n\"Holy fuck, was that huge,\" Jen breathed, \"Give me second.\" She continued grinding her hips back and forth in tiny throbbing movements, a juicer extracting the last bit of juice from an orange.\n\n\"You've got one more in you,\" Dexter said.\n\nJen circled his cock with her fingers as she climbed off, letting her hand drag up the length of his shaft and over the sensitive head. Dexter jerked like a jolt of electricity had hit him.\n\n\"Ohhh, sensitive are we?\" she asked, grazing the head with her fingernails and making him shiver in the warm mountain air. \"I guess we'd better take care of that.\" She turned around on all fours, her athletic ass facing him, and looked back over her shoulder. \"I want you to fucking pound me. But tell me before you come.\"\n\nDexter saw the firelight twinkle off her swollen pussy like the stars that surrounded them. His cock was so hard that it felt huge to him, a rare gift for a man to feel like that, thinking 'Enjoy it while it lasts!' and he slipped into her, pushing a small moan out of Jen. She was still looking back at him, her hand clasping his arm, \"Now, baby.\"\n\nShe was so swollen with lust and orgasm that her whole pussy pressed against his penis as he pounded into her. Their gaze was locked together, intimate and erotic, and Dexter could feel her hand on his arm. Even what they laughingly termed 'grunting pig fucking' was so intimate that Dexter felt it push back the darkness in his dusty, pathology-riddled mental attic.\n\nJen's finger squeezed hard on Dexter's arm. \"I'm gonna come again,\" Jen said in a matter-of-fact voice that belied was happening inside her. Her moan this time was long and loud, and her legs shook as she came. Dexter was barely keeping his own orgasm at bay as he slowed down to a more leisurely pace that made it even harder to hold back.\n\nHe finally had to say, \"If we keep doing this, I'm going to lose it.\" Jen leaned forward to pull off him and turned around, still on all fours. She took his cock into her mouth, tongue working it over as she bobbed up and down, her hand following her mouth and twisting. She could feel the pressure building, like water threatening to burst a dam, until it finally let loose, flooding the valley of her mouth. Dexter's legs shook and she almost feel his knees give out before she finally slowed down.\n\nDexter knelt in front of her and kissed her. \"I saw stars when you did that,\" he said.\n\nJen smiled and kissed him again. \"I see stars every time.\"\n\nA horned owl called out again. Hoot-hoot-hooooot. Hooot.\n\n----------------\n\n\"Wow, this really sucks,\" Jennifer said. She had pulled a chair alongside Jen's bed, a father and his daughter to sit final vigil. Dexter looked at Jennifer and saw so much of Jen in her; amber blonde hair and blue eyes, but he saw also the spark and passion that made Jen who she was, and it gave Dexter comfort to know that a part of Jen would still be alive.\n\nDexter stared without focus, and said, \"I remember part of a poem from college, but I can't recall who wrote it. 'Out of the night that covers, Black as the pit from pole to pole, I thank whatever gods may be, for my unconquerable soul.'\"\n\n\"That's Henley. A poem called 'Invictus',\" she answered, and then smiled. \"No, not Don Henley, either.\" Jennifer paused, and then continued, \"In the fell clutch of circumstance, I have not winced nor cried aloud. Under the bludgeonings of chance, my head is bloody, but unbowed. Beyond this place of wrath and tears, looms but the horror of the shade, and yet the menace of the years, finds and shall find me unafraid.\"\n\n\"I remember now,\" he said, sitting up straighter, \"'It matters not how strait the gate, how charged with punishments the scroll, I am the master of my fate, I am the captain of my soul.' William Ernest Henley. I used to love that poem. It reminds me of your mother right now.\"\n\n----------------\n\nDexter was walking on a beach, the rhythmic surf gentle along the shore. It was dusk and the sky was a canvas of brilliant, flaming orange. The last fiery hump of sun sitting stubbornly on the horizon. Jen was standing next to him, holding his hand, their fingers entwined. Seagulls squawked and somewhere a dog barked. His dog. His friend. Dog bounded up to them and sniffed Jen in that shameless way of hers, like she was sizing up the competition. Jen stopped walking and turned to Dexter, her eyes bright blue and crinkled with smiles in the corners. \"You still have things left to do. Jennifer needs you, at least for a while, at least until you're a grandfather. One of us has to be there.\" She placed her hand on his cheek and smiled. \"There's a purpose for everything and for everyone, and I've done what I was meant to do, Dexter. Besides, I'll be waiting for you.\" She looked down at Dog. \"We'll be waiting for you. We'll be right here when you're ready. I promise.\"\n\n----------------\n\n\"Dad.\" Jennifer's voice was pain and loss. \"Dad, she's gone.\"\n\nDexter looked at his daughter. \"I know.\"\n\n \n"
    ],
    "authorname": "Novengliae2",
    "tags": [
        "love",
        "dying",
        "remember",
        "passion",
        "grief"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-unexpected-end-of-love"
}