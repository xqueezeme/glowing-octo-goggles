{
    "title": "The Chronicles: Three Sisters 09",
    "pages": [
        "THREE SISTERS Chapter 9\n\nI was still weak as a kitten, after the fever. Sulcen and the girls fussed over me, and continued to take turns sleeping. The fever didn't return, but I woke one morning, and immediately concluded that I was hallucinating.\n\nThere was a big blonde woman standing over my bed.\n\nShe was dressed outlandishly, in a black leather jerkin, decorated with pieces of cheap jewelry and bits of metal. There were two ... well, they looked like desiccated human fingers, sewn into the shoulder of her jerkin. Over her shoulder, I saw a quiver, with half a dozen arrows.\n\nThe woman was tall, and broad-shouldered. She had rather thick lips, and a wide face, but she was reasonably handsome - if you like your women wearing severed fingers. She saw my eye open.\n\n- \"There we go!\" she said, cheerfully. \"So you're Veran One-Eye? Payl's grandson?\"\n\n- \"What? Great-grandson.\" I mumbled.\n\n- \"Right - that's right.\" said the big blonde. \"Tell me: is it true that she wore a necklace of foreskins?\"\n\nI was barely awake, and a little bit grumpy. My manners weren't quite what they should have been.\n\n- \"Why do people refuse to get the story straight?\" I complained. \"It was her friend Meeli-DeadEyes who wore the foreskins. Payl had a necklace of teeth.\"\n\n- \"Human teeth?\" asked the woman.\n\n- \"As far as I know.\"\n\n- \"That's still pretty good.\" she said. \"And she was Borna's mistress? The real Borna?\"\n\n- \"No! Where did you get that? She bore twins to Ljudevit, Borna's Hand. The boy was my grandfather.\" Only at this point did I notice that there were two more strange women sitting at our table.\n\n\"Who are you?\" I demanded.\n\nThe big blonde smiled. \"I'm the next Payl, old man.\"\n\nThen she laughed, with her hands on her hips, throwing her head back. It was a belly laugh, a full-bodied celebration of amusement. I had seen one or two men laugh like that in my time - but never a woman.\n\n\"My name is Giedra.\" she said. \"These are my friends: Eliv, and Rion.\" She indicated the two seated women. I had no idea which one was which.\n\nThe first had painted her face with vertical black stripes across her eyes, and a strange swirl under her mouth, across her chin. It was very distracting. The second girl - neither was very old - had painted half of her face blue. She cradled a double-headed axe to her chest, stroking it with her fingertips.\n\n- \"What ... what are you doing here?\" I asked.\n\n- \"Your daughter invited us.\" said Giedra. \"But it looks like we were too late for the first fight. There'll be more - right?\"\n\nI tried to glare at Giedra. My one eye was useful for frightening children, but the big blonde didn't seem all that intimidated. I suppose it's also harder to impress people when you're lying flat on your back.\n\n- \"Where did you come from?\" I said. \"Why are you here?\"\n\n- \"I told you - to fight.\"\n\nGiedra finally took pity on me. She pulled over a stool, and sat down next to my bed, so that I wouldn't have to look up at her.\n\n\"We're from Nareven - do you know it?\"\n\n- \"West of the Three Sisters? West of the lake?\"\n\n- \"Northwest. Four, may five days walk. Bacho's men came ...\"\n\n- \"Five years ago.\" said the girl with half of her face painted. Rion, I think. She was still stroking her axe.\n\n- \"That's right.\" said Giedra. \"They raped a girl, and took most of our sheep.\"\n\nI nodded. It was a story we had heard before.\n\n- \"They came back the next year. This time, two girls were raped. Eliv was one of them.\" I glanced at her two friends. Eliv was the one with the stripes and the swirl on her face. She didn't look my way.\n\n- \"I'm sorry, Eliv.\" I said.\n\nGiedra's friend did not respond. But the blonde let out a deep breath.\n\n- \"That's right. You know what it's like ... we heard about your wife. And your son.\"\n\nI was no more prepared to talk about that with strangers than Eliv was.\n\n- \"What else happened? The second time?\" I asked.\n\n- \"They killed a man, and took the rest of our livestock. They also took two of our young men along. 'Recruits', they called them.\"\n\n\"There was a lot of talk, after that. Most of our folk wanted to move, up into the hills. To hide. Only a few were prepared to fight.\"\n\n\"I can't blame them, really. There were only four men left - and they were hardly warriors. In the end, only one of them came with us.\"\n\n- \"A man? Where is he now?\" I asked.\n\n- \"In the ground.\" said Giedra. \"He thought that running off with three women meant that we would be at his disposal - that he could hump us whenever he wanted.\"\n\n- \"He was wrong.\" said Rion, still stroking her axe.\n\n- \"Dead wrong.\" said Giedra.\n\nThey were an unusual trio. It made me wonder if Payl, the Shining One, had been just as strange. But if they could fight ... I would be more than ready to accept their little ... foibles.\n\nThe door opened. Yevna came in, followed by Inisian.\n\nGiedra picked up the stool, and moved to join her companions, giving my daughter space to approach my bed.\n\nYevna came and perched on the side of my bed. I was taken aback. She seemed to have grown, somehow. She wasn't taller, or heavier, but I had a sudden sense of ... presence.\n\n- \"Papa - how are you feeling?\" asked my eldest.\n\n- \"Better.\" I said. \"Much better, now that I've met your new friends.\"\n\n- \"We'll let you talk to your father, Yevna.\" said Giedra. \"See you later, Papa.\"\n\nAs the big blonde and her companions left, Inisian came closer, to shake my hand.\n\n- \"I'm so glad you're both safe.\" I said.\n\n- \"We're glad that you're alive.\" said Moruith's son.\n\n- \"Everyone says that you're a hero. You and Guenna.\" said Yevna. \"And that Sulcen saved your life.\"\n\n- \"She did.\" I said. \"But you've obviously heard the tale. I want to know where you went - and what happened.\"\n\nYevna turned to Inisian. \"Will you get them?\"\n\nAs he stood up to leave, I asked: \"Get who?\"\n\n- \"You'll see.\" said Yevna. \"We went north of the Three Sisters, just as you said. Moruith's house is still standing. We found Dengelle living there.\"\n\n- \"Who?\"\n\n- \"Dengelle. Svijo's sister.\"\n\n- \"Ah - I remember.\" When we first met Inisian, his brother had just been murdered by a local thug leader, named Rymvi SmallFoot. Svijo was a reluctant member of his little band, and Svijo's sister their even more reluctant cook, washerwoman, and communal bed-warmer.\n\nJust before our flight to the Hill, we had found Svijo killed, and his house occupied by Kestutis and his reivers. We assumed that his sister had met a horrible fate - but there was nothing we could do about it.\n\n- \"She survived.\" said Yevna. \"They raped her - repeatedly - and left her for dead. They also ... cut one of her ears off. I have no idea why. She supported herself by hunting, with a bow. She's a bit ... deranged - but she's fine with me. I'll take care of her, Papa. I promise.\"\n\nInisian came back, with a short, slender girl. I recognized her. I hadn't remembered her name, but I knew her face. How odd that Svijo's sister should bear the female version of Dengel Nadesti's name.\n\nShe was frighteningly pale, with filthy black hair hanging in tangled strands on either side of her face. Her eyes were a deep blue - and slightly mad.\n\n- \"Dengelle's going to stay with us - Inisian and me. We're going to live with Moruith.\"\n\nI nodded. That made perfect sense.\n\n- \"Dengelle.\" I said. \"I'm sorry.\"\n\nYevna responded quickly. \"He means he's sorry that we couldn't save you, Dengelle.\" Then to me: \"She knows that, Papa.\"\n\nMy daughter returned to her story.\n\n- \"People hate Bacho, Father. Everywhere we went, they had been there before us. Killing, raping, stealing ... Kestutis is loathed. Despised. So many have suffered at his hands ... Folk fear them - but they hate them, too.\"\n\n- \"How many are prepared to fight?\" I asked.\n\n- \"You'd be surprised.\" said my eldest. I was surprised, again, by how mature she seemed. She was no longer my child.\n\n\"Giedra and her friends were ready to fight on their own - even though there were only three of them. I told them of Payl - and we used your name, too.\"\n\n- \"My name?\"\n\n- \"Everywhere they go, Bacho and Kestutis ask for news of you. Of us. We met dozens of people who'd heard your name. Many think that you're the one man who's fought back against Bacho. You're a bit of a legend. Giedra thinks so, anyway.\"\n\n\"She loved my tales of Payl. But you she'd heard of. And she wanted me to re-tell ... our story - almost every night.\"\n\n- \"She looks capable.\" I said.\n\n- \"She can shoot.\" said Yevna.\n\n- \"Better than you?\"\n\nYevna shrugged. I laughed, and took hold of her hand.\n\n\"You did well.\"\n\nI hadn't seen Inisian leave, but now he returned, with another girl. Yevna saw my eye shift, and turned her head.\n\n- \"Ah! Father - I'd like you to meet ... Nameless.\"\n\nI was looking at a thin, almost scrawny young woman, no bigger than Dengelle. She was equally filthy. If I'd had to bet, I would have wagered that she had last bathed on her second or third birthday.\n\nBut her eyes ... Dengelle looked slightly crazed; this girl, though, was intense. Her big brown eyes were fixed on me. I wouldn't even dare to start a staring contest with her.\n\n- \"You are welcome.\" I said. It was an old, old expression, from a time when accepting a stranger at your fireside could have unpleasant consequences. I have no idea why I said that - it just seemed appropriate.\n\nNameless stared at me, for another uncomfortable moment. Then she nodded.\n\n- \"Kestutis killed her parents.\" said Yevna. \"Looted her home.\"\n\n- \"I'm sorry.\" I said. It was becoming a habit, this day.\n\nNameless was not mute.\n\n- \"I will fight, alongside you.\" she said.\n\nI didn't laugh. Nor did I ask her name. It's an old Upland custom, to go Nameless. Not so common these days, but more widely known in my grandfather's time.\n\nIf a person had been shamed, or embarrassed, they might want to leave their name behind. Or, they might wish to earn a better one. Either way, 'Nameless' was often an upgrade on a person's birth name. And there were some truly unfortunate nicknames ... Grandfather used to talk of a poor bastard named ThreeNipple ...\n\nThis girl was running from something - her past, most likely. But she might also be looking for a more promising future.\n\nThere was no way that I could stay abed, with all these newcomers on the hill. I couldn't have them thinking that I was some sort of invalid. Despite Sulcen and Guenna's protests, I was on my feet that very afternoon.\n\nTanguiste understood. She hovered nearby, taking my arm when she saw me tiring, and steering me to a seat. When Tan said 'That's enough for today', I listened.\n\nI arranged an archery contest, with the women, to see what they could do. Giedra was a fine shot, as Yevna had told me. Her friends Eliv and Rion, though ... they would be better off hurling the bow at our enemies, and keeping the arrows.\n\nDengelle was reasonably accurate, even though her little bow wasn't very powerful. The real surprise was Nameless, who was deceptively strong, and could pull any bow on the Hill. She also had a sharp eye.\n\n- \"Impressive.\" I told her.\n\nThen I sparred with the women - one at a time.\n\n- \"You're wounded, old man.\" said Giedra. \"you should be in bed.\"\n\n- \"One eye, one hand.\" I said. \"But I wager I can still take you.\"\n\nI shouldn't have said that. I was wrong, for one thing. Plus, Giedra took it personally. She gave me a solid thump with the stick we were using in place of edged weapons. The big blonde was physically powerful, and reasonably agile. I might have been fast enough to hit her back, had I not been wounded. Maybe.\n\nHer friend Rion, the axe-stroker, was a maniac. She swung at me two-handed, without a thought for her own defence. I blocked two blows, and dodged half a dozen more. When she began to tire, and couldn't recover quickly enough, I stepped in and touched her with the point of my wooden weapon.\n\n- \"Granted, it won't be so easy for someone to block an axe.\" I told her. \"But your eyes and your arms told me, every single time, where you were going to strike. If we can get you to disguise your intentions, you could be very dangerous.\"\n\nEliv wasn't dangerous, with a sword or a long knife. An axe was out of the question. I settled for teaching her two simple moves: a stab at the throat, and a stab at the groin.\n\n- \"Keep your weapon directly in front of you. don't swing. Don't cut. Just lunge forward. Stab. Again - stab.\"\n\nDengelle, Svijo's sister, would have to stick to a bow. She was timid, and frightened, at close quarters. She wasn't fast, and certainly wasn't ruthless enough.\n\nNameless, though, was a revelation. She was lightning-quick, and light on her feet, but could strike with power. I didn't come close to hitting her back.\n\n- \"Where'd you learn to fight?\" I asked her.\n\nNameless only shook her head. That question struck too close to home, apparently.\n\n- \"She's awesome.\" Yevna said to me.\n\n- \"She certainly is.\"\n\n- \"Better than me?\" asked Giedra.\n\nI looked her in the eye. \"You're good, Giedra. Stronger than Yevna, though she's a touch faster, and better with a bow. Nameless is beyond both of you. I wouldn't bet on Vingoldas or Hedyn against her. I wouldn't bet on myself, even with two eyes and two hands.\"\n\nOver dinner that night, Guenna asked my opinion.\n\n- \"How do they look, to you?\"\n\n- \"Nameless is a marvel.\" I repeated what I had said to Yevna.\n\n- \"What about the others?\" asked my daughter.\n\n- \"With time, I might be able to turn Giedra's two friends into useful fighters - especially Rion. Dengelle ... probably not. But Giedra herself, and Nameless - they can stand with the best of us.\"\n\nOnly a week later, Seva and Weyl returned. They had one man with them, Hocon by name. I only had to look at him once, to know what he was.\n\nHocon was the runt of the litter, the low man in the pecking order. He was short, and slim. But it was his eyes that told the tale. Hocon was accustomed to giving way to stronger, more forceful men. He had been bullied, pushed around - perhaps even mocked, probably for his whole life.\n\nWe could train him to fight. But I had to wonder if he would stand, in a pinch. He looked as if he had never stood up for himself in his life. I explained my misgivings to Guenna.\n\n- \"But he had the courage to leave home. To come back with Seva and Weyl.\" she pointed out.\n\n- \"Maybe.\" I conceded.\n\nBut Seva brought back more than a single man. She had news.\n\n- \"The Izumyrians have invaded Hvad.\" she said.\n\n***\n\nTo most Uplanders, Lowland Hvad was like the back of the moon: they knew next to nothing about it, and cared even less. My family was different, of course. Payl's mate, Ljudevit - though she had never married him - had been Borna's Hand.\n\nBorna was a legendary figure. After taking bloody vengeance on his father's killers, he had clawed his way to the top. Ban of Yeseriya, then Ban of Adarion by conquest and Ban of Yelsa by marriage ... with control of three of the seven Lowland provinces, he had succeeded in making himself Overlord of all Hvad, eventually taking the title of Voivode. The Izumyrians called him Duke.\n\nMy brothers knew these tales as well as I did. They had chosen to go to Hvad, to offer their services to Richwin, the present Duke - Borna's great-grandson.\n\nThey say that talent often skips a generation. Or, that the first generation does the work, the second enjoys its fruits, and the third squanders the advantage. In the case of Borna's descendants, that was certainly true.\n\nBorna handed a united Duchy to his son and heir, Ered. But that fool promptly adopted the ancient custom of gavelkind. He left the title of Duke, and the town of Hvad, to his eldest son, the second Ered. His other sons were given Adarion, Yelsa, and Yeseriya.\n\nEred the Second could not divide the town, or the title: his son Richwin inherited the lot. But the damage had been done. Three of the six other provinces were ruled by his kinsmen - cousins - but they were not so close.\n\nSeva was happy to be the centre of attention, while she told us what she had learned.\n\n- \"Richwin gathered an army, and gave battle. He was heavily defeated, and killed.\" she said.\n\nI wondered if my brothers had been there.\n\n- \"The Izumyrians have captured his castle, and Hvad town. They also control Yelsa and Adaron.\"\n\n- \"Adarion.\" I corrected. It didn't matter; few Uplanders had ever been to Hvad. In my lifetime, I had only met two people from Hvad: a tinker, and a guslar.\n\n- \"What does that have to do with us?\" asked Giedra. Though just a newcomer, she obviously had no intention of being a silent member of our councils.\n\n- \"It's good to know.\" said Vingoldas. \"Go on, Seva - do you have any more to tell?\"\n\n- \"That's pretty much all I heard.\"\n\n- \"Well,\" said Mother Nadesti, \"Giedra is probably right. Nothing to do with us.\"\n\nWe had our own problems, on the Hill. Winter was coming, and we didn't have as much food stored as we should have. Part of the problem was that Yevna and Inisian hadn't been here to hunt. Seva, too, had been away. Vingoldas, Hedyn and I hadn't hunted much at all, as we needed to be on hand in case of an attack.\n\nNow, we also had more mouths to feed. It would mean short commons for everyone but the elderly and the children until we could make up the difference. Seva and her brother went hunting, as did Inisian and Nameless. Yevna didn't pair up with her man, because she hunted with Dengelle.\n\nWhen my daughter came home empty-handed for the second day in a row, I lost my temper.\n\n- \"What are you doing?\" I demanded.\n\n- \"What are you talking about?\" she snapped back.\n\n- \"You know damn well what I'm talking about!\"\n\nTanguiste appeared, as if by magic.\n\n- \"Keep your voices down.\" she said, soothingly. \"Or move a little further away.\"\n\nYevna and I didn't move. She just stood there and glared back at me.\n\n\"What is it? Why are you angry?\" asked Tanguiste.\n\n- \"We need meat - we need it desperately.\" I said. \"But your sister thinks it's more important to play nursemaid to her friend Dengelle.\"\n\n- \"She's helping me!\" said Yevna. \"Dengelle can hunt, Father! She supported herself after ... after her brother was killed.\"\n\nThat shut me up. What Yevna had not said hit me harder than what she did say. After Dengelle was raped ... over and over, and then left for dead.\n\n\"She learns quickly, Papa.\" said Yevna. \"She can track, and she can shoot. And I promised that I wouldn't leave her alone.\"\n\nThere was no answer to that. My daughter was doing what she thought was right.\n\n- \"I'm sorry.\" I said. \"I shouldn't have ... spoken.\"\n\n- \"She doesn't get in my way.\" said Yevna. \"She doesn't slow me down. We've just been unlucky for a couple of days.\"\n\nI nodded. Tanguiste gave us both a hug, and my anger dissipated, leaving me feeling slightly foolish.\n\nWe had to build a new house, as well. Yevna moved in with Inisian and Moruith, and took Dengelle with her. That arrangement worked out better than I had expected.\n\nHocon, the new man, went to stay with Seva, Weyl, and their mother. Somehow, we ended up with Nameless. I couldn't really protest, when Yevna had moved out of our house. But a stranger in the same room was bound to make me feel a little self-conscious, if I wanted to stir the furs with my wife.\n\nSulcen, though, took an immediate liking to Nameless. I didn't hear them having a conversation - I'm not sure if they spoke at all. But there was an affinity there, a sort of bond, between kindred spirits.\n\nThe new house, of course, was for Giedra and her friends. Despite the big blonde's strong personality, I decided early on that I liked these women warriors. Fierce, for certain. And dangerous to be around. But they weren't too proud to pitch in and help, and to get their hands dirty.",
        "- \"It's a good place, your Hill.\" Giedra said to me. \"I like it.\"\n\n- \"Oh? Why's that?\"\n\n- \"Everybody works.\"\n\n***\n\nIt was another hard winter. The river froze again, and our new warriors had to take turns on watch with the youngsters. It was Guenna who pointed out that the ice on the river was thick enough to a support a man - or several men.\n\n- \"If we can see it, then so can Bacho or Kestutis.\" she said.\n\n- \"They wouldn't come in winter.\" said Seva, but she didn't sound too sure of that. She was just being contrary - as usual.\n\n- \"We can't afford to take chances.\" said Vingoldas. \"Is there anyone here who thinks they aren't coming back?\"\n\nWe all took a turn or two on watch. The only exceptions were three of our most elderly folk, Mother Nadesti, and Moruith, who had fallen ill, with a wet cough. She choked, and spat up phlegm. Tanguiste made her a tea that seemed to help, but Inisian's mother was weak, and feverish.\n\nShe got better, though - just about the time that Mother Nadesti fell ill. It was quickly apparent to all that she was suffering from the same ailment as Moruith, but the old woman wasn't as strong.\n\nSulcen nursed her, and Tanguiste spent hours keeping watch over her while my wife rested or slept. Sulcen didn't want to talk about her mother's illness - or the prospect of losing her. It was too hard, so soon after coming home. Sulcen might have felt that she'd already lost her mother once before. Now she had to go through it all over again.\n\nAfter a few days, the old woman sent for me.\n\nGuen looked weak, and wasted. Her eyes were still alive, though, and fever-bright. I sat next to her, and covered her little hand with my own. She squeezed two of my fingers.\n\n- \"I'm glad you came.\" she said, her voice a whisper.\n\n- \"Of course I came.\"\n\n- \"No.\" She squeezed my fingers again. \"I mean ... to the Hill.\"\n\n- \"Ah.\" I understood what Guen meant. Given the history between our families, she couldn't have been too happy to see me here, when we first arrived.\n\nShe squeezed my fingers a third time, to make sure that I was paying attention.\n\n- \"Take care of my girl, Veran.\"\n\n- \"You know I will, Guen.\"\n\n- \"Good.\"\n\n- \"But you'll be here to see it. You're going to get better.\" I said, trying to sound more cheerful and confident than I felt.\n\n- \"Hah!\" she said - but that led to a coughing fit. It was a wet, hacking cough, and I was afraid that she was going to choke. I pulled her into a sitting position, and called for help.\n\nSulcen and Tanguiste appeared immediately - they had only stepped outside to give us some privacy. They took over, and shooed me out the door.\n\n***\n\nGuen Nadesti was a tough old bird. She recovered.\n\nIt was Moruith who suffered a relapse, and died.\n\n***\n\nInisian went quiet. He had Yevna, of course, but Tanguiste told me that he was blaming himself for being away so long - for leaving her alone.\n\n- \"She wasn't alone.\" I said. \"She had everyone here on the Hill.\"\n\n- \"I know.\" said my daughter. \"And he knows it, too. They'd have died years ago, if they hadn't come here. But his mother was all the family he had left.\"\n\nWhen I had the chance, I put my hand on Inisian's shoulder, just as I had when he was younger.\n\n- \"She was a good woman.\" I said.\n\n- \"Thank you.\" he got out. \"I didn't ... I don't want to be the only one who remembers her.\"\n\n- \"My daughters and I will never forget her, Inisian. She saved our lives.\"\n\nHe seemed to be comforted by that thought.\n\nMother Nadesti survived, but she seemed to have shrunk - to have diminished, somehow. There was little left of her but skin and bones, and wrinkles. Her nose and chin still jutted forth, but that only further emphasized how her face seemed to have sunk in on itself.\n\nHer eyes, though, were still sharp, and bright. There was nothing wrong with her mind. She called for me again, when she felt better.\n\nTanguiste and Vingoldas were sitting with her when I arrived. They excused themselves, to leave us alone.\n\n- \"You'll have to watch those two.\" said Mother Nadesti.\n\n- \"Will I?\" I glanced over my shoulder, but they had already gone.\n\n- \"So - you were right.\" she said. \"I didn't believe you, at the time, when you said I wasn't going to die.\"\n\n- \"I didn't believe me, either.\" I admitted.\n\nShe smiled at that.\n\n- \"Things have to change, though.\" she said. \"I can't get around like I used to, and I tire too easily.\"\n\n- \"You'll get better.\" I said.\n\n- \"I am better. But I'm not going to get any younger.\" She shrugged. \"It's time for someone to take over the leadership here. Time for someone else.\"\n\n- \"I disagree.\"\n\n- \"Too bad. Face facts, Veran. You can lead the fighters, and you can lead in council. Everyone looks to you already. And your daughters ... Yevna is indispensable. Tanguiste is ... a blessing. And your youngest - I think she's smarter than you are.\"\n\n- \"That's no great achievement.\" I said.\n\n- \"You've done a wonderful job with those girls.\" said Mother Nadesti. \"I wish I knew your secret. My children ...\"\n\n- \"Sulcen is a gem beyond price. I love her, Mother.\"\n\n- \"She was an innocent. And I sent her away, to ...\" I knew what she couldn't say: to be abused by one of the most wicked, most evil men in the Uplands.\n\n- \"How could you have known?\" I said, trying to console her.\n\n- \"We knew.\" said Guen Nadesti. \"And we did it anyway. Out of fear, and stupidity. And ambition. No wonder none of my children came out as I would have wished.\"\n\n- \"Dengel was an honourable man. I liked him.\" Strange words, to describe a man I had killed - but true nonetheless.\n\n- \"He was thick-headed, and stubborn. Lanko was a liar, and a thief. Somehow, my husband and I mangled everything that we touched.\"\n\n- \"You didn't mangle them, Guen.\" I said. \"You gave birth to them, but you didn't make them - no more than my girls are somehow my creation. They're only part me - and part Meonwe. The rest is them - and what they've been through.\"\n\n- \"You don't have to try to cheer me up, Veran.\" she said. \"I made peace with who I am - with what I am - long ago.\"\n\n\"I was the chieftain, after my husband died. And I remained the chieftain, when Dengel died. But it's time for you to take over.\"\n\n- \"I disagree.\" I said. \"Hear me out. Your folk accepted us here - my daughters and me, Inisian and Moruith - because you did. You told them to, even if you didn't put it into words.\"\n\n- \"You're a leader, Veran. So are your daughters - each in their own way.\"\n\n- \"I agree with you Guen. We're leaders - but not the leader.\"\n\n- \"What are you babbling about now?\"\n\n- \"You're the leader, Guen. Your folk - the Nadesti folk, and everyone else who came here before us - they look to you. In their eyes, I'll always be a latecomer - next thing to a guest.\"\n\n- \"There's no one -\" Mother Nadesti was about to say 'No one else'. But she stopped herself.\n\n\"Vingoldas.\" she said.\n\nI nodded. \"I think so. Your people respect him. He's a good fighter - better than me, with my ... limitations. And he has a good head on his shoulders.\"\n\nGuen Nadesti was no fool. She heard me out, and then thought about what I was saying. I knew that I was right - and eventually, she saw it too.\n\n\"Besides, if we both stand behind him ... if we accept him as the leader - don't you think others will, too?\"\n\n- \"You may be right, Veran. Especially if he marries your daughter.\"\n\n- \"What? Wait - what?\"\n\n***\n\nI don't know if Guen Nadesti said anything to him, but Vingoldas found a way to speak to me alone, less than a week later. We went to the edge of the hill, to look out over the river. The ice was breaking up, and the water was flowing fast.\n\n- \"Mother Nadesti told me what you discussed.\" he said.\n\n- \"Did she, now?\"\n\n- \"Thank you, Veran. For suggesting me - as leader. It means a lot to me, that you think I'm capable.\"\n\n- \"Of course you are.\" I took a good look at the young man. He was no taller than me, and lighter in build - a bit slimmer, less broad in the shoulder. But Vingoldas was a warrior.\n\n\"You're a fighter, and you've proved it. There's no doubt of your courage. You've worked harder than anyone to make this place go. Everyone respects you. More important, they trust you. And rightly so.\"\n\n\"Some of the older Nadestis remember me as the man who killed Guen's sons, and brought all their miseries upon them. But they've always trusted you.\"\n\n- \"They respect you, Veran. Everyone does.\"\n\n- \"Respect's not the same thing as trust. You have both. I'll back you - and so will Guen Nadesti.\"\n\nVingoldas bowed his head. \"I know.\" he said. \"And I'm grateful.\"\n\n- \"Nothing more than you deserve.\" I told him.\n\n- \"It may be presumptuous of me ...\" he began, and then faltered.\n\n- \"Yes?\"\n\n- \"Umm ... you see - I wanted to ...\"\n\n- \"Spit it out, Vin.\" There was a growing tightness in my stomach, as I suspected that I knew what he was about to say. What he was about to ask. Had Guen Nadesti been right?\n\nThe young man had courage. He looked me in the eye.\n\n- \"I want to marry your daughter.\" he said. \"I mean ... I'm asking for your permission ...\"\n\nMother Nadesti was a wise woman. I'd had time to think about the idea, and discovered that I was quite comfortable with the idea of Vingoldas as a son-in-law.\n\nFor one thing, I liked him. Respected him, too. And Prospal Hill wasn't exactly overflowing with prospective husbands. There was Weyl, I suppose - the redheaded weed, Seva's brother. I didn't relish the thought of being closely related to her, though.\n\nFor another, it wasn't my decision. I had told my girls that they could marry whoever they liked. My permission wasn't an issue.\n\n- \"You've spoken to her?\"\n\n- \"Yes.\" said Vingoldas. \"I asked her not to say anything to you, until I had a chance to ask.\"\n\n- \"I told my daughters, long ago, that they could choose their own husbands. If she wants you, then I have to say ... that's fine with me.\"\n\nVingoldas smiled. \"That's ... that's wonderful.\"\n\n- \"If you want my blessing, you have it. I think that you and Tanguiste will be very happy together.\"\n\n- \"I will treasure her, Veran - for as long as we live.\"\n\n- \"I know you will.\"\n\nI just had to hope that their lives together wouldn't be measured in weeks, or months.\n\n*****\n\n<hr >\n\n A Hand was a combination bodyguard, lieutenant, and right-hand man.\n\n Gavelkind was a system of inheritance, probably of Germanic origin, used in parts of the British Isles. By this law, the father's land was divided more or less equally among his sons or heirs.\n\n \n"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "combat",
        "dark ages",
        "fantasy",
        "swords",
        "women warriors"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-chronicles-three-sisters-09"
}