{
    "title": "Tucker's Studio Ch. 27",
    "pages": [
        "All people and places are fictional. All characters are over eighteen.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nHannah Hangs Around\n\nLiz confided in Marsha that she wasn't comfortable telling Tucker about the gang-bang. They decided to tell him most of what happened at Kelsey's orgy party, but not everything. Liz didn't like keeping secrets, but what she'd allowed to happen at Kelsey's party, and the fact that she enjoyed it so much, shook her perceptions of what kind of person she was. Maybe she needed to be a liar, or maybe she didn't. She hadn't figured it out yet.\n\nThe sun peeked around the neighboring building the morning after, bathing the breakfast table in its golden glow. The two women looked radiant after their wild night with Kelsey's young friends. Liz's confusion certainly didn't show.\n\n\"You two look beautiful,\" Tucker said as his two girls served up hot coffee and vegetable omelets. \"Fun party?\"\n\n\"Let's see...\" Marsha said with a smile, \"...it was at Kelsey's, so...are there any other options?\"\n\n\"Probably not,\" Tucker said. \"How many'd she have?\"\n\n\"There were...ten of us girls and...twelve boys?\" Marsha said.\n\n\"Twelve!\" Liz gasped, her eyes suddenly big. She looked horrified. \"That many?\"\n\n\"That's about the size of it,\" Marsha said, her own eyes flaring as she smiled at Liz.\n\n\"Gooood Goddd!\" Liz said quietly.\n\n\"You two gonna tell me anything or are you gonna leave it up to my imagination?\" Tucker asked.\n\n\"Ryan and Josh were there,\" Marsha said, taking the pressure off Liz. \n\n\"I figured Josh would be,\" Tucker said. \"And I'm not surprised Ryan couldn't resist your charms.\"\n\n\"Yeah, well I'm afraid it was the other way around,\" Marsha said, deciding to be brutally honest. \"I scooped them up and...monopolized them a bit.\"\n\n\"I'll bet they liked that,\" Tucker said. \"The studio's turning into one happy family, isn't it? I hope it holds up and doesn't flame out or self destruct.\"\n\n\"Is that why you've never...\"\n\n\"Yeah. It's risky,\" Tucker said. \"But I gotta say, the people we've got are all so cool about everything, it really does seem like a happy family. And now Liz's a member,\" he said, putting his hand on hers. \"I'm glad you guys had fun.\"\n\n\"There was a gang-bang,\" Liz blurted out. \"I was...I was a gang-bang.\"\n\n\"Wow!\" Tucker said calmly. \"That's big for you, right?\"\n\nIt was a strange question, and she didn't know how to answer it. Of course it was big for me, she wanted to say, but she couldn't seem to form any more words. Marsha came to her rescue.\n\n\"It was very big for her, and it was beautiful,\" Marsha said, reaching out for Liz's other hand. \"Kelsey loved it of course. She sorta orchestrated things.\"\n\n\"That sounds like our Kelsey,\" Tucker chuckled.\n\n\"Our sweet girl here may need the rest of the day to recover,\" Marsha said. \"I've never seen anything like it. I didn't know a girl could orgasm like that, just on and on and on. I watched a video once of a woman on one of those machines, that Sybian thing, and she just had this endless orgasm and finally rolled off of it and couldn't even move her body. Lizzy was sort of like that. She just came and came and came and ended up all covered in sweat and cum. I guess I shouldn't have expected anything less wild at Kelsey's place.\"\n\n\"I know,\" Tucker said. \"You sort of knew what you were gettin' into. You okay Liz? It sounds wicked hot, but...are you okay with how it went?\"\n\n\"I loved it,\" she said quietly. \"It feels good to admit it. I'm still not used to thinking that way.\"\n\n\"Yeah, well, either we'll all get used to it, or we won't,\" Tucker said. \"It's fun figurin' it out though, right?\"\n\nThe girls smiled. Their omelets were getting cold, so they tucked into them like starving truckers. Fucking your brains out burns a lot of calories.\n\n\"So what's Kelsey's place like?\" Tucker asked. \"And her roommate, is she nice?\"\n\n\"Oh good Lord!\" Marsha said. \"Hannah is sooo sexy! And sweet and nice like Kelsey. Those boys they hang out with are just the luckiest.\"\n\n\"Their place is a little rougher than we expected,\" Liz said, \"but pretty typical I guess. I'm sure it's a palace to those girls though, their first apartment alone. They decorated it cute.\"\n\n\"Kelsey's mad you decided not to go,\" Marsha said to Tucker. \"She and Hannah both like older guys. You missed out big time.\"\n\n\"I think you guys probably had more fun without me there,\" Tucker said. \"Twelve sounds like it was just right,\" he said to Liz. \"Thirteen might have given you brain damage.\"\n\nLiz looked shocked again when she heard the number. Twelve. She didn't know if she'd ever think of it as anything other than a crazy dream.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe following week at the studio was quiet and uneventful. Jamar was in every day working on editing, the I.T. guy was in, working on a website problem and some computer issues, and Tucker fielded a few phone calls from potential amateurs. One of them seemed promising, but only time would tell.\n\nJamar was Tucker's only full-time employee. Tucker liked to post at least one full scene a week on the website, and numerous \"bonus content\" clips \u2014 hot stuff from the past that didn't make the cut, maybe a different camera angle or something that didn't fit the narrative flow of the original scene. It kept Jamar busy at the editing desk on days when the studio was quiet. Occasionally, when things were slow, Tucker would bring one of the girls in for something solo \u2014 a sexy striptease, or a little fun with toys. He liked to keep things moving and keep his workers 'in the money' as much as he could, but that week was a bit of a bust because of the computer problems.\n\nTucker liked to wind down on weekends. Especially on Sundays, when he'd sip coffee, read the paper and maybe catch up on a little paperwork. Marsha had caught on to his routine soon after she moved in. She enjoyed it too \u2014 her ex-husband wanted to always be on the go on weekends, but she shared Tucker's desire for languid, care-free Sundays.\n\nSunday that week was another beautiful, sunny day. They all loved the condo's huge windows, especially Liz. Her own condo was across the hall, with smaller windows facing North, not nearly as warm and inviting as the glorious warm sunlight that flooded Tucker's place on a nice day. \n\nAfter breakfast the girls announced that they were going shopping. They'd be back for dinner, and would stop and get takeout on their way home.\n\n\"We got you a little present,\" Marsha said just as they were leaving. \"The delivery is today I think. You can open it if you want.\"\n\nThey closed the door behind them and the sunny silence enveloped Tucker. He wondered what the gift might be \u2014 a bottle of scotch he guessed. The liquor store around the corner was open on Sundays and they delivered within the neighborhood. He settled into his favorite chair, read some of the paper and fell asleep \u2014 he and the girls had stayed up late watching a movie the night before.\n\nThe door buzzer woke him with a start. The voice on the intercom was female \u2014 \"Delivery\" was all she said. He buzzed her in and waited...\n\n\"Your sweethearts sent us,\" Kelsey said with a big smile when he opened the door. \"They told us you like long, slow fucks on Sunday mornings.\"\n\nThe diminutive redhead looked radiant, with her usual glowing smile and shining blue eyes. Next to her was another vision \u2014 Hannah, nine or ten inches taller than Kelsey, her dark, exotic eyes, light-mocha skin and dark hair the perfect foil for the redhead's freckles. Tucker was stunned at her natural beauty, and Kelsey's too of course.\n\n\"This is Hannah,\" Kelsey said. \"Marsh and Lizzy met her at our party.\"\n\n\"Yes, they told me. Hi Hannah. It's so nice to meet you,\" Tucker said, as he ushered the two youngsters inside. \"You know, you guys gave me back a different Liz from the one that left here that night.\"\n\nKelsey looked confused.\n\n\"Twelve guys? She's a newbie you know,\" Tucker said.\n\n\"Ohhh Thaaat,\" Kelsey said. \"Yeah, that was fun.\" She looked like the gang-bang was no big deal, just another normal party activity.\n\n\"You're somethin' else,\" Tucker smiled. \"So what's up? You didn't really come here for...\"\n\n\"To fuck you in your beautiful condo? Sure we did. Marsh and Lizzy said they owe you big time. God, this place is so awesome!\" \n\nKelsey looked around and drifted to the big windows overlooking the Sunday morning street scene below. Hannah looked a little uncomfortable standing there with someone she'd just met, and Tucker did too.\n\n\"You ever fuck by the windows so people can watch?\" Kelsey asked.\n\n\"Maybe a little,\" Tucker said. \"Nothing too blatant.\"\n\n\"We can do it today if you want,\" Kelsey said nonchalantly, still gazing through the glass. Hannah walked over next to her, giving Tucker his first look at her exquisite backside. \n\n\"I like him,\" Hannah whispered to her friend. \n\nTucker wondered what she'd whispered. She probably wanted out, he thought. She couldn't possibly be as freely sexual as Kelsey, could she?\n\n\"You're supposed to be relaxing today,\" Kelsey said, turning to Tucker with the sun at her back. She noticed the nice leather chair with the newspaper on it. It had 'favorite chair' written all over it. She walked over to Tucker and took his hand, leading him to it. \"Sit,\" she said. \"Let's all get comfortable.\" She looked around again, at the art on the walls and the photographs and artifacts from Tucker's life displayed on the bookshelves. \"Let's pretend we live here,\" she said to Hannah.\n\nShe took her friend's hand and the two of them scampered off down the hall, looking for the bedroom. She found a women's short bathrobe on a hook behind the door.\n\n\"Strip and put this on,\" she said to Hannah.\n\nShe started taking her own clothes off. Hannah watched for a moment, bemused by her roommate's effortless brazenness, but it was really nothing new. Kelsey had been a wonder ever since the first moment Hannah had met her.\n\n\"Maybe I'll leave this on,\" Kelsey said, when she was down to just her thong. It was white lace, appropriate for a Sunday morning she thought, and it matched the white robe Hannah was slipping her naked, goosebump covered body into. \"Tie that loose, so it's sorta open down the front,\" she said, helping Hannah adjust it. \"That looks hot. There. Now we get to live here for the day, and fuck our man.\"\n\nThe two girls walked back out into the bright, sunny living area, Kelsey's jiggling, swaying tits leading the way.\n\n\"Morning honey,\" she said to Tucker when he saw her. She walked to him and kissed him on the cheek. \"Did you sleep well last night?\"\n\n\"I did,\" he said. His smile grew as he caught on to the roll playing game. \"The coffee's pretty fresh if you want some.\"\n\nHannah loved coffee, and made her way to the kitchen. It was open to the rest of the space in the loft-style condo, so she could keep an eye on what Kelsey was up to.\n\nBut Kelsey was quick and silent like a cat. By the time Hannah had found a coffee mug the jogging shorts Tucker never jogged in were pulled down to his thighs and his cock was hardening in Kelsey's mouth. He groaned as Hannah poured. By the time she'd added her usual dollop of milk Kelsey was fully involved, her whole body into it as she blew Tucker like a pro. He loved the little redhead's mouth \u2014 it felt a lot like her mother's, and the thought of all that was too much for Tucker. As he watched Hannah walk toward him, her young tits barely covered and moving free under Marsha's little robe, his cock gushed like a schoolboy's in Kelsey's warm mouth.\n\n\"Do you think church people ever stay home and fuck on Sunday mornings?\" Kelsey asked after she swallowed.\n\n\"The happy ones do,\" Tucker smiled.\n\nTucker knew it was going to be a special day, so while the girls drank coffee and ate raspberry-filled danish he snuck off to the bathroom, swallowed a boner pill and cleaned himself up a little. He looked at himself in the mirror, astonished at the place in life where he found himself. Do I really deserve this, he wondered? Two incredible girlfriends, and a gift from them like this? How on earth did this happen to me?\n\nBefore the noon bells had chimed at the church two blocks away Tucker and the girls were naked on the big bed, tangled up like a twister game. He was delighted to find that Hannah was as orgasmic as Kelsey, and the two of them had a special magic together. They seemed to be able to make each other cum at the drop of a hat, and Tucker was the lucky guy along for the ride.\n\nThey each had 'decisive moments' during the day. For Hannah it was reverse cowgirl, with the sun streaming in on her face and chest, making her glow like a starlet in a technicolor musical. The warmth was what she loved, feeling the ultraviolet on her skin while the sex heated up her insides. She was leaned back on Tucker, hands on his shoulders while he fucked up into her. It would have been pretty straightforward if Kelsey hadn't been involved, but she was, elevating things to a whole other level. She crawled in on her knees, at first trying to lick Tucker's balls, but her always exploring tongue drifted up to his slippery shaft as it slithered in and out of Hannah's pussy, and then up to Hannah's clit, wide open for the taking. Kelsey found something new though. As her tongue drove Hannah higher she repositioned herself with Tucker's foot against her own pussy. Tucker got the idea and let his big toe slide through her wetness. When Hannah's wild orgasm hit, Tucker's cock and Kelsey's tongue took her as high as she's ever been, and Kelsey was grinding so hard on Tucker's foot his slicked up toes could have went right up inside her. They did a little bit, and Kelsey came almost as hard as Hannah did. Simultaneous orgasms between the two best friends always made them laugh \u2014 as they caught their breath they giggled like school girls.\n\nKelsey's favorite moment was nothing too exotic. She was riding Tucker, lost in a sweaty daydream. Hannah was riding Tucker's face, looking deep into her eyes. Hannah pushed the long red hair off Kelsey's tits, leaned forward and sucked a perfect nipple into her mouth. It was a scenario that had played out in Kelsey's hyper-sexual life many times before, but the recipe was perfectly executed that day, with perfect ingredients. Kelsey's mind expanded in a near hallucinogenic way, letting loose the purest, most joyful orgasm imaginable. When she was halfway though the magical trip a soft laugh rose up inside her and filled the room with her spirit.\n\nFor Tucker the whole day had been special, but the part that stuck in his mind came at the end of the hours long session. Kelsey had led him to the living room, put her hands against the big window and absorbed his cock into her tight pussy yet again. As they fucked there, in the bright sunlight overlooking the street below, both of them had beautiful memories swirling in their brains of the time Tucker took her in the same way \u2014 standing, from behind \u2014 on the balcony in Las Vegas, the first time they'd ever fucked each other. But this time Hannah was there, standing beside Tucker, caressing his sweaty, pumped-up muscles and gently massaging his balls. Even after hours in bed together he still could hardly believe how tight Kelsey was. His cock was worn to a frazzle but still hard. How could it not be with Kelsey around? He fucked her slow, wondering who could see them through the brightly lit window. Kelsey's hands slid down the glass as they fucked, sweaty from the warm sun and all the exercise. He put his arm around Hannah's slim waist and pulled her to him as his final orgasm neared, her body moving with his, softly fondling his balls as they tightened. He came with the satisfied groan of a happy man.\n\nTucker and the two youngsters cleaned themselves up in his glass walled shower. They'd spent all their orgasmic currency, so it was just a warm, soapy wind-down, everyone washing everyone else, the perfect way to end the perfect Sunday afternoon. The girls left about an hour before Liz and Marsha got home. Tucker was in his chair finishing the paper when they arrived with their hands full of shopping bags.\n\n\"Wow, looks like you had some success, huh?\" he said.\n\n\"We went a little wild,\" Marsha said. \"It was one of those days.\"\n\n\"The present you got me came,\" he said. \"Actually, it came a lot. We went a little wild too.\"\n\n\"Ooo, nice!\" Marsha said, leaning down to kiss Tucker. \"Isn't Hannah just...\"\n\n\"Oh my God,\" Tucker said, shaking his head in disbelief. \n\nLiz gave him a big kiss too, wondering if Kelsey and Hannah were enough to compensate for the ultimate sluttiness of allowing herself to be gang-banged. It didn't seem right to ask him \u2014 she guessed the give and take of an open relationship would just naturally balance out over time. It was a concept she was still having trouble wrapping her head around.\n\n\"I got you something,\" she said when the warm, loving kiss ended. She opened a bag and lifted out a blazer, sleek looking in soft black fabric, almost like velvet. \"Marsha said it's your size. I hope it fits.\"\n\nTucker was in his jeans and a black t-shirt. He stood and pulled on the new jacket.\n\n\"Oh my God,\" Marsha said, looking over her handsome man approvingly. \"We may have to fuck you. Got anything left, Stud?\"\n\nTucker smiled at his two girlfriends, wondering once again how his life had turned out so wonderful.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Hannah,\" Kelsey yelled toward her roommates bedroom. \"Wanna come to the studio with me and watch me do a scene?\"\n\nHanna rubbed her eyes as she emerged from her room, barefoot, in a pink bra and baggy sweatpants. It made her look a bit like I Dream Of Jeannie, if Jeannie was half black with an Asian mom.\n\n\"What time is it?\" she asked.\n\n\"Nine-thirty. Sorry, did I wake you? Tucker wants me to work. He said you can watch if you want.\"\n\n\"Yeah,\" Hannah said groggily. \"Let me change.\"\n\n\"It's not 'till tonight sweetie. Go back to bed.\"\n\n\u2014\n\nAt six o'clock they took the bus Downtown. Kelsey showed Hannah around the studio and introduced her to Jamar and Chip. The scene was to be with Billy Carpenter, but he hadn't arrived yet. Tucker had pizza, beer and wine for everyone. Liz was there, and Marsha played hostess, passing food and filling glasses.\n\n\"I'm surprised you haven't come down before,\" she said to Hannah as she refilled her plastic cup with dark red wine. \"Haven't you been curious?\"\n\n\"Oh, yeah, really curious,\" Hannah said. \"But I don't know...until I met all you guys it seemed kinda...scary maybe?\"\n\nBilly walked in and Hannah clammed up. She wasn't the most talkative girl to begin with, but meeting Billy Carpenter in the flesh after seeing all his scenes on the website gave her a strange tingle and rendered her speechless. Billy didn't say much either. \n\n\"Billy, do you mind if Hannah watches our scene?\" Kelsey asked. She could sense a little electricity between him and her roommate.\n\n\"No, that's...that's cool,\" he said a little nervously. He picked up a slice of pizza and wolfed it down.\n\n\"So I'd like to revive a couple characters,\" Tucker said. \"Remember Pauline from your church Billy? She was Aunt Karen and you were Johnnie and Kelsey was your sister Mindy. Today's scene'll be Johnnie and Mindy, home from college for the weekend. I talked Liz into playing your mom. She'll just do some lines at the beginning and then you two'll be alone for the sex.\"\n\n\"Oh cool!\" Kelsey said. \"We haven't done the same characters before. That'll be fun! I loved Johnnie and Mindy! The brother sister thing's so hot, isn't it? Lizzy, you gonna be our mom?\"\n\nLiz looked nervous. Back when her relationship took off with Tucker and Marsha she'd promised herself that she'd never get in front of the cameras again, no matter what temptations tried to lure her there. But Tucker and Marsha both thought it would be fun if she played the small, fully clothed role of the kid's mother. She'd agreed in a moment of weakness, but she was regretting the decision. ",
        "\"I guess so,\" she said quietly. \"I doubt if I'll be any good.\"\n\n\"You'll be great,\" Tucker said. \"Just pretend they're your real kids. You'll see. It'll be fun.\"\n\nSome more wine loosened her nerves a little, and they rehearsed some lines. Marsha and Chip got everyone dressed in the proper wardrobe, everyone gathered on a bedroom set decorated to look like a teenage girls room, and they were off and running. The cameras rolled. It took a few takes for Liz to get used to the lights and everyone watching her, but she was surprisingly good and actually enjoyed herself.\n\n\"It's so nice to have you both home together,\" she said to the kids as the cameras rolled. \"I wish I didn't have to leave. You sure you don't wanna go see your Nanna with me?\" \n\n\"We've both got papers to write before we go back to school tomorrow,\" Kelsey said. \"Tell Nana we said hi.\"\n\n\"Okay. I'll be back in a couple hours,\" Liz said.\n\n\"Okay mom,\" Kelsey said.\n\n\"Bye mom,\" Billy said as Liz walked out the bedroom door.\n\n\"Cut!\" Tucker said. \"Nice Job! Lizzy, you're a natural!\"\n\nJamar moved a camera and the scene picked up with Kelsey looking out the window.\n\n\"She's gone,\" she said. Billy was sitting on her bed and she joined him. Her hand drifted up his thigh to his crotch and she kissed him.\n\n\"You'd like my new roommate,\" she said, squeezing Billy's growing lump. \"She likes big cocks.\"\n\nHannah smiled. She knew Kelsey was improvising, and she wondered if Billy knew that Kelsey spoke the truth \u2014 Hannah really did like big cocks. She was increasingly fascinated with Billy. She'd seen him on the website, but he was even more dreamy in person.\n\n\"You got a boyfriend yet?\" Billy asked Kelsey.\n\n\"No, nothin' serious. Lots of parties, you know? But the boys are all... you kind of spoiled me. Nobody fucks me like you do.\"\n\nHannah's heart was in her throat as she watched. She'd seen Kelsey fuck plenty of times, hundreds probably, but watching a scene play out at the studio was different. More exciting. It was like a front row seat at a Broadway show, with lots of sexy hormones thrown in for good measure.\n\n\"You think Mom knows about us?\" he asked.\n\n\"Why?\" Kelsey asked, her hand recoiling away from her brother's lap. \"Did she say something?\"\n\n\"No, just, you know...when we were with Aunt Karen, I thought maybe it got back to Mom somehow.\"\n\n\"Aunt Karen? No, she's cool. She loved what we did. She emails me sometimes.\"\n\n\"Yeah, me too.\"\n\n\"You don't think she told, do you?\"\n\n\"No...no...sometimes I just wonder if Mom knows,\" Billy said. \"We've been doin' stuff for so long, you know?\"\n\n\"Yeah,\" Kelsey said, \"and we've only got a little while to do some more. I miss you.\"\n\nKelsey's hand went back to Billy's crotch, squeezing his lump gently. Her lips went to his and they kissed \u2014 a soft, slowly probing kiss that brought back the familiar feelings.\n\n\"I miss you too,\" Billy said when the warm, wet kiss ended.\n\n\"Do you have a girlfriend at school?\" Kelsey asked, improvising again.\n\nBilly caught sight of Hannah in the darkness behind the cameras.\n\n\"Yeah,\" he said. \"She's really cute. Asian, and tall.\"\n\n\"I thought you liked small girls,\" Kelsey pouted. \"Is her pussy tight?\"\n\n\"Nobody's as tight as you,\" he said, kissing Kelsey again. \"But I don't know, I haven't fucked her yet.\"\n\nKelsey smiled as the nibbling kiss went on. She knew Billy was talking about Hannah, and she could see the wonderfully shocked, excited, bemused look on Hannah's face.\n\n\"Are you gonna fuck her?\" Kelsey asked, stretching the wonderfully sexy moment out as long as she could.\n\nBilly didn't know what to say. He was smitten with Hannah from the moment he met her, but the courtship playing out was a little too public for his bible-school-boy ways, so he put an end to it. He pushed Kelsey down and rolled on top of her. She giggled like a teenager.\n\n\"I'm gonna fuck you,\" he said forcefully, snuffing out his sister's giggles with another wet kiss.\n\nThe wardrobe for the shoot was standard college kid fare \u2014 bare feet, loose shorts and t-shirts \u2014 and it was all tossed aside quick as a wink. Kelsey's petite body moved like a cat, flattening Billy onto his back and sixty-nining him in one smooth move. She let out a sweet little groan when she felt Billy's tongue, and she devoured his big cock with a single wet slurp.\n\nHannah lost all the breath in her lungs. Marsha was next to her, noticed the reaction and put her arm around her.\n\n\"He's beautiful,\" Marsha whispered in her ear.\n\nHannah was stunned. She thought she knew what to expect, after all the sex with Kelsey and all the boys, but Billy was different and Kelsey seemed different too. The Most Promising Newcummer award on Kelsey's dresser suddenly made sense \u2014 the girl came alive in front of the cameras.\n\nBilly and Kelsey went at it like nuclear powered sluts, fucking and sucking until the sweat dripped off of them and then fucking and sucking some more. After two hours they were exhausted. Tucker came up with a finale \u2014 he knew Kelsey loved being fucked up against a wall, so that was the big finish, next to the window. She stood on two piles of school textbooks to get her little ass at Billy's height, and he slipped into her one last time.\n\n\"Oh Fuck Johnnie! God I love your cock!\" she hissed as he drove her toward yet another orgasm. Just as she reached the pinnacle she looked out the window. \"Oh Fuck!\" she grunted mid-orgasm. \"Mom's home!\"\n\nThey were too far gone \u2014 both of them cumming hard \u2014 to do anything but finish.\n\n\"Hi kids, I'm home,\" Liz yelled from off camera.\n\nBrother and sister grunted and groaned through clenched teeth as the last spurts filled Kelsey's pussy. \n\n\"Go!\" she whispered when Billy's long cock pulled out.\n\nKelsey scrambled for her shorts and shirt and Billy stuck his head out of the bedroom doorway to see if the path was clear. He ran down the hall naked, clutching his clothes.\n\n\"Cut!\" Tucker yelled. \"Awesome people. That one's gonna burn up the website.\"\n\n\u2014 \n\nHannah looked through the racks of lingerie in the dressing room while Kelsey cleaned up in the shower.\n\n\"That's a great color for you,\" Marsha said when she saw Hannah eyeing an iridescent green bra and panty set. \"That's too big for you though...here, how about this one?\"\n\n\"I wish I was bigger,\" Hannah said, holding the bra Marsha had chosen up against herself.\n\n\"Don't let Tucker hear you say that,\" Marsha chuckled. \"He's a natural tits man, no matter what the size.\"\n\n\"Really?\" Hannah asked.\n\n\"Yeah, and he's right too,\" Marsha said. \"You're about as beautiful as a girl gets. Don't mess with it.\"\n\nKelsey emerged from the shower with a towel wrapped around her long hair and another draped over her shoulders. It partially obscured her big tits, but Hannah watched what showed, bouncing taughtly as the little nymph approached.\n\n\"Tell this girl not to get a tit job,\" Marsha said to Kelsey.\n\n\"No fuckin' way!\" Kelsey said to Hannah. \"You better fuckin' not!\"\n\n\"I'm not,\" Hannah said dejectedly. \"But you guys are so beautiful.\"\n\n\"And you're not?\" Kelsey said. \"What are you, crazy? Let's go find Billy. When you see the look in his eyes it'll make you feel better.\"\n\n\"He's still here?\" Hannah said, suddenly looking nervous.\n\n\"Whaddaya think Marsh?\" Kelsey smirked. \"I'm thinkin' it was love at first sight.\"\n\nMarsha smiled, but it was a melancholy smile. She was happy to see that young love might be blooming, but the boy in question was Billy. If he had a serious girlfriend would it mean she'd never feel his long cock inside her again? Even worse, if he fell in love would he give up the business? Marsha couldn't imagine the studio without Billy around.\n\nKelsey dressed quickly while Marsha was pondering the future.\n\n\"Come on, let's go find him,\" Kelsey said. She took Hannah's hand and pulled her out the door. \n\nMarsha felt a strange twinge of jealousy, and scolded herself for feeling it. Jealous! she thought. Why should I be jealous! I'm having sex with everybody for God's sake. I've got a wonderful man. I've got Liz. She shook her head, smiling at the memory of Billy's cock filling her mouth for the first time, and went back to straightening up the dressing room.\n\nBilly was on the set, helping Tucker and Jamar break down the cameras and tripods, putting them in their cases and carting them to the gear locker.\n\n\"I can barely walk Billy,\" Kelsey said when she and Hannah approached him. \"What got into you today, as if I didn't know.\"\n\n\"Oh hi,\" he said. \"Hi Hannah.\"\n\n\"You two are going on a date,\" Kelsey said firmly. \"I don't know why I never put it together before.\"\n\nHannah wanted to scold her roommate, but really she was glad to have a matchmaker intervene. She was hoping Billy was too.\n\n\"Yeah,\" Billy said to Hannah. \"I mean I want to. Do you?\"\n\n\"Okay,\" Hannah smiled.\n\nTucker smiled too, as he overheard the young people talking. He loved Billy almost like a son, and he'd fallen for Hannah's charms that morning in his condo. It struck him a little odd that he'd fucked her before Billy had, but that was only because he hadn't quite gotten used to the sexual intermingling that had been going on lately. It was nothing to worry about though. Kelsey was on the case, and good vibes were in the air.\n\n\"If you guys have a boy I'm probably gonna fuck him,\" she said to Hannah and Billy. Everyone laughed nervously. \"I'm just warnin' ya.\""
    ],
    "authorname": "riverboy",
    "tags": [
        "threeway",
        "ffm",
        "younger woman",
        "older man",
        "redhead",
        "asian",
        "open relationship",
        "gangbang",
        "porn"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/tuckers-studio-ch-27"
}