{
    "title": "Toes a la Mode (Ma Cheri)",
    "pages": [
        "The past year for Cheri had been about as boring as a year could get. She couldn't even find a guy who wanted to go see SUNSET OF THE LIVING DEAD with her! \"I mean,\" she sighed, \"I thought ALL guys liked these scary flicks. Or is it just me they don't like? Maybe it's because I keep insisting that they rub my feet for me. Oh, sure, they're all ready and willing to rub other things...but my feet? Oh, GOD FORBID!\" She sighed, taking the soda from the man behind the counter and throwing entirely too much money at him for it. She got her ticket torn and walked back to the screening room, still bemoaning her less than satisfying personal life.\n\nWork had been pure hell, and she was tired and aggravated. She'd worn a brand new pair of shoes to work and had paid the price for not waiting until they were properly broken in first. The shoes seemed to have teeth...gnawing on her delicate feet for eight nonstop hours. All she wanted to do was drown her sorrows in soda and zombies. It was a little too early to eat, though, so the soda would be enough until after the movie. That was the beauty of coming to the theater directly from work. She could see a great horror flick and then pick up some fast food on the way home. Great entertainment, and no dishes to wash. Couldn't be any better. Well,...unless she had a man to share this coup with, of course. She smiled as her brain added, a man who'd maybe rub her sore feet while she watched the movie. She sighed. What were the chances of finding a decent guy at all, let alone one who'd be willing to pamper her achy feet for her? She mentally slapped herself, telling herself she needed to come back to reality.\n\nInside the theater, the usual boring ads were screening...the usual pleas to buy the theater's popcorn and candy at ridiculous prices. She ignored them as she chose a seat several rows up and near the center. She plopped into it, tired and feeling a bit down, despite knowing that she'd soon be watching a movie she'd waited months to see. Exhausted from the day's stress, she sunk deep into the seat, a soft sigh escaping her lips. She took a quick sip of her soda, then placed it and the napkins in the convenient cup holder in the arm of the seat. Now it was time to get down to business...to get comfortable once and for all on this otherwise crappy day.\n\nPutting toe to heel, she grunted and strained to get her right shoe off. It resisted. She persevered, and finally got the evil shoe to slip off her foot, though not without a fight. It was a good thing she was wearing thigh highs, as the silkiness of the nylon helped her foot to slide free of the stubborn leather. The shoe was pushed free of her foot with a loud \"whoosh\"ing noise - the sound of silky nylon rejecting cloying leather - after which it clunked to the floor, landing somewhere in the darkness beneath her seat. It's evil twin soon followed. \n\nCheri noted that the theater was empty, and that the movie was due to begin in only minutes. Figuring most people were still at work and the theater would probably be empty throughout the movie, she felt secure enough to lift her legs and rest them on the seat back just in front of her. She stretched and wiggled her toes, spreading them to see what the gossamer nylon looked like with the light of the movie screen peering through it from behind. There was still enough light in the room for her to see her blue toenails, even through the sheer nylon. For some reason, blue nail polish always seemed to make her toes seem even cuter.\n\nShe admired her toes. She'd always thought her feet were pretty, which is why she couldn't understand why men didn't want to play with them. \"What's wrong with my feet?\" she thought, and then answered herself, \"Not a damn thing. Those are two cute feet ya got there, Cheri. Men are just too focused on other body parts to appreciate them, but those feet are damn sexy. If men can't see that, to Hell with them...every last tit-groping one of them!\"\n\nShe took another look at the nylons. Nope...her feet weren't comfortable enough...free enough. They needed total comfort...and they deserved it, after the day she'd had. So, lowering her legs, she crossed her left calf over her right knee and removed the stocking from her left foot. Changing legs, she repeated the nylon removal on the other foot. When she had removed both, she simply dropped them, letting them drift softly to the floor to join her rejected shoes. Ahh...now her cute, neglected piggies were totally free. Back up over the seat back they went. Again, she admired her feet, the blue-painted toes even more attractive wiggling free of the nylon. She stretched her legs as straight and far as they'd go, and fantasized some cute, attentive man holding them by the heels and romantically pleading to kiss her lacquered toes, asking sweetly with puppydog eyes if he could pretty please massage them for her. She smiled and sighed, even though she knew it was all just a sweet, impossible dream. Men! Damn their selfish hides!\n\nCheri sipped her soda, smiling as the cool air of the air conditioned room soothed her bare feet as they dangled and wiggled in front of her. Her feet, once hot from the suffocating shoes, were now being nicely cooled by the moving air. She could even feel the cool air moving between her toes when she spread them apart. She giggled at the feel of it. As she saw the light sneaking between her spread toes, she sighed. The imaginary man who'd begged to rub and kiss her feet was now smiling wickedly at her...leaning forward...opening his mouth...sticking out his tongue...slipping it between her toes. She squirmed in the seat, feeling a burning itch begin between her legs. The itch intensified when she saw the dashing fellow slowly take her toes, one by one, into his mouth and suck them, licking the underside of each as he did. Her pulse quickened and she sighed heavily, feeling the urge to slip a hand between her legs and play in her sweating honeypot.\n\nSo intense was the erotic flood of sensations tingling every inch of her body as she fantasized in greater and greater detail about her attractive foot admirer, that her vision got blurry. She could barely see her wiggling feet, her now hormone-jazzed toes dancing, curling and flexing madly. The lit screen beyond those toes almost didn't exist at all, except as an aid in illuminating and highlighting her feet. She didn't sip her soda,now, but gulped it, hoping the icy liquid would go through her body all the way to her burning sex and yearning toes to quench the growing flames of desire searing ever hotter in both locations.\n\nIt was just as she was humorously pretending she could see steam rising from her feet and from between her legs thanks to the flame extinguishing soda, that light flooded one side of the theater. Someone else had entered the dimly lit room and was walking toward the rows of seats. \"Damn,\" she thought, \"another few minutes and I could've had myself one heck of an orgasm right here in my seat!\" In the darkness, she scowled at the newcomer who made her imaginary foot lover disappear.\n\nThe silhouette walking toward the seats slowly took more distinctive shape. It was a man...by himself. \"Oh, wonderful,\" she thought, \"just what I need. Some loser without a girlfriend who skulked around watching horror movies all by himself.\" But, then, she realized that except for gender, she was doing the exact same thing...and she definitely did not consider herself a loser. \"Oh, okay,\" she conceded, \"maybe he's not a loser. But, still, he'll probably be grossed out by me putting my feet up on the seat in front of me. He might even ask me to take my feet down. Well, screw him...I'm comfortable, and he doesn't have to sit anywhere near me. We're the only two people in here, so he has lots of far away seats to choose from. If he DARES ask me to put my feet down after the day I've had, I'll show him how my feet can turn his balls into earmuffs!\"\n\nThe man walked slowly - his eyes possibly adjusting to the dim lighting? - deciding where he wanted to sit...and then made a beeline for Cheri, walking to the row of seats in front of hers. He seemed to hesitate at first, but then continued. Sure enough, he headed down that aisle, walking ever closer to her cool, comfy feet. She tensed for a confrontation. She pictured his balls wrapped around his ears, warming them nicely. The thought amused her greatly, and she prepared her litany of exotic threats should he even mention the word \"feet\" in anything but a pleading-to-kiss-them manner.\n\nSlowly he walked past seat after seat. Along the way, he spilled some of his popcorn. Oh, great, Cheri thought...just my luck...a clumsy, nerdy loser. Her luck, she feared, was running true to form. She watched him advance down the aisle, bumping into seats and depositing puffed kernels of popcorn onto the sticky floor for the hired help to clean up later. Finally, only three seats from Cheri's comfortably propped feet, he sat down, still seeming awkward and uncoordinated. When he looked her way, she smiled at him. He WAS cute, after all, in a klutzy sort of way. He smiled back pleasantly, if a little shyly. Still, she made no move to take her feet off their perch. In fact, if anything, they wiggled and danced more than ever...perhaps defiantly. She giggled to herself, wondering if she wasn't subconsciously hoping to tease and entice this stranger into desiring her feet...to the point where he'd fall on his knees and beg just to kiss her big toe...fawning away at her feet. But then reality slammed her back down to earth, and she realized that was a hopeless fantasy. Her swoony smile reverted back to gritty defiance. And just that quickly her thoughts went from pussy-moistening reverie to \"If he doesn't like my feet up like this....TOUGH!!\"\n\nAfter sitting down and seeming to settle into his seat, the man unexpectedly got up and slid smoothly to his left, moving yet another seat closer to her. Cheri only assumed that the floor was extra sticky in front of his original seat, or that the cup holder was broken, or some such. She thought nothing much of the move, but again tensed for a confrontation should he ask her to move her feet.\n\nThen she noticed something that first took her by surprise, and then started the gears turning in her head. Did she imagine it, or was this guy actually sneaking peeks at her feet? Was he going to ask her to move them after all (at his own peril)? No...she didn't think so. It seemed he couldn't keep from looking at them. But the look on his face when he did glance over was not one of disgust or even inconvenience. No, he seemed to be...yes..he definitely was!...he was smiling!! He even appeared to slink down in his seat so he could glance over more discreetly...so she wouldn't notice him looking! Suddenly, Cheri was getting warm all over.\n\nLifting her hand to her mouth, she tried to stifle an excited, giddy giggle. She didn't do a very good job of it, and the giggle escaped. She wondered if the man heard her, because he seemed to stiffen and then slink down lower in his seat, as if he was embarrassed or suddenly trying to hide.\n\nThe movie began. Clever opticals and special effects enhanced the opening titles and credits. No name actors and actresses had their no names emblazoned on the screen with blood dripping from each letter. Eerie music sounded from the partially disguised speakers spaced along the upper walls of the theater. Zombies roamed about a deserted street, their only company wind-blown newspapers proclaiming the \"Zombie plague!\" Symbolically, the sun in the background was setting, the ever darkening sky becoming more and more blood red. SUNSET OF THE LIVING DEAD had begun to strut its stuff.\n\nBeing a horror movie, there were very few scenes that were bright enough for human eyes to see about the large screening room. But every now and then, especially at the beginning of the film, a daylight scene or interior scene with lighting did occur. And each one of those scenes found Cheri stifling yet more giggles, and squirming in her seat. She was sure of it now. Every time a brightly lit scene flashed on the movie screen, the slumped down man would quickly look over at her feet. Being slumped so low, he had to look to his left and then upward at such an obvious angle that she knew he could only be looking at her feet. He was apparently taking every possible opportunity to admire them. Even during the darker scenes, if she wiggled her feet or stretched her legs...almost any movement at all...his head would swivel in their direction, even though he presumably couldn't really see much. She thought he must indeed be attracted to her feet if even such slight movements in the dark caught his immediate attention. It was making her giddier by the second!\n\nFeeling in her heart and mind that the man was definitely interested in her feet, Cheri decided on a bold move. She took her feet off the seat back. When she did, she could swear the man looked over, peering intently in the darkness, trying desperately to see them again. He sighed, and, to Cheri's pleasure, seemed disappointed when he couldn't.\n\nNot wasting an instant, Cheri repositioned her feet, this time sticking them between the seats in front of her, on the side closest to her apparent foot admirer, resting them between the seats. She was eager to see what his reaction would be. She crossed her legs, one foot over the other, and wiggled them about energetically, hoping he'd see them and resume his visual fascination with them. \n\nIt worked...in spades. Even through the noisy din of the zombie battle on the movie screen, she was sure she heard him sigh. He repositioned himself in his seat, moving more to his side, trying to hunch down below the seat back so as not to be seen. But that's the beauty of stadium riser seats. Try as he might to hide, Cheri could see him turning his head to stare at her boldly displayed feet. And she kept up the pressure on him. She wiggled her toes with more energy than ever. She rubbed her feet together. Occasionally, she'd raise the upper foot and rotate it in the air, then lower it to repeat the same actions with her other foot. She kept crossing her legs, first with one foot on top, then the other. She even rubbed the sides of her feet on the sides of the two seat backs on either side of them, ever so slowly sliding her feet up and down along the soft material.\n\nIt was working perfectly. She could see the man squirming in his seat. His head constantly swiveled to his left, his eyes locking on any movement her feet made. It wasn't long before he was watching her feet more than the movie. He wiped his brow several times. Once he even slapped his cheek as if to divert his attention from her teasing distraction....or perhaps to see if he was dreaming. She was ecstatic that she was turning this rather cute looking fellow into a sighing, squirming, sweating puddle of goo. His every move proved she was doing exactly that. She had no doubt of it. A woman instinctively knows these things anyway, but in this case it was a crystal clear \"no brainer\". And not only that, but she was driving him nuts with her feet...not her breasts or her ass or her legs or even her pretty eyes.....but her FEET! And that was making her squirm easily as much as he was.\n\nShe knew she had him. A slight, but growing, feeling of power washed over her like a warm shower. She knew if she tried, she could get him to touch her feet....probably massage them for her. And maybe...maybe even get him to do more....much more. The fantasy of her toes sliding into the warmth of a sucking mouth came back, with a vengeance. She knew that she could probably get this man's mouth in just that position if she played her cards right. So, she decided it was time to do just that. \n\nIt was time, she thought, to reel him in...to drag him, sighing and drooling, to her sorely neglected tootsies. Those feet were screaming to her, \"Now! Do it now! Get this guy rubbing and kissing us RIGHT THIS MINUTE!\" Cheri agreed, complying instantly with their urgent pleas. It was definitely time to capture her prey. She trembled from head to toe, both with nervousness and with expectation, as she leaned forward in the darkened theater to make her bid. \"It just has to work,\" she thought as she opened her mouth, \"It just HAS to!\"\n\n************\n\nIf there was one thing Mike was getting tired of doing, it was going to horror movies alone. None of his friends liked scary fare...especially if there was even a drop of the red stuff in it. He had one female friend who liked horror movies, but her weightlifter boyfriend was just a tad on the possessive side...not to mention jealous enough to yank Mike's gonads up over his head and tie them into knots...just for looking at her. And even his more adventuresome relatives balked at any movie where the actors employed anything stronger than harsh words. God, people could be so repressed! Wherever the non-wussies of the world were hiding, he couldn't find them. And why is it only one woman out of a million likes horror movies? What's up with that?!\n\nAnd so it came to pass that once again poor Mike was forced to go see a scary movie by himself. He went straight from work, having just enough time to get to the theater by showtime. Not only was the theater conveniently just a mile or two down the road from his place of employment, but the early showtime meant that the theater would be mostly devoid of movie-goers. No giggling, smart mouthed teens to listen to - and have to screech at - throughout the movie. No restless, fidgety kids kicking the back of his seat. No nervous, clingy girl clutching onto her boyfriend and yelping at every other frame. No idiots with cell phones who just can't bear to turn them off during the movie. Ahh....a nice, quiet, dark room with wall to wall scary movie. No date, either...but it would have to do. Sometimes you have to embrace the positives and try to ignore the negatives of life.\n\nMike paid for his ticket, making sure to get his \"frequent movie-goer\" stub punched by the girl with way too much eye shadow who lurked behind the great glass window. He stopped at the snack bar and bought a microscopic popcorn (almost literally microscopic) and a small fruit drink (ironically, big enough to fill the stomachs of a roomful of Hulk Hogans), nearly having to refinance his car to do so. He handed his ticket to the white haired man who collected them from the customers, who promptly tore it in half and handed half of it back to him. \"Theater ten,\" the man mumbled disinterestedly, and that's where Mike's tired dogs shuffled him off to.\n\nDim lights still partially illuminated the theater, and the pre-movie advertisements were still rolling along when he entered. He looked around. Hallelujah! No other patrons! His prayers had been answered! He'd get to see SUNSET OF THE LIVING DEAD in a nice, quiet, dark theater...all by himself. A private showing. How cool is that?!\n\nMoving up to the fifth row of the stadium riser seats, he started to enter the row. But, then he noticed something. He wasn't alone. Two rows up, hunkered down low in her seat, was a woman. It was hard to tell in the low light, but she looked to be about his age or younger, and was sitting quietly slurping a soft drink, waiting patiently for the movie. Oh, well, he thought, at least she seemed quiet. She was alone, so she didn't have anyone to talk to or cling to while yelping during the \"cheap scare scenes\". So, it was still good...if only she had the common sense not to bring a cell phone, or at least keep the damn thing turned off during the movie.\n\nBut then Mike noticed something that made him break out in a sweat. Just as the final local ads were playing out their mostly unimaginative come-ons, he noticed the woman, hunched way down in her chair, her head almost obscured from view behind the seat back that loomed in front of her, had her feet up on that seat back and those energetic puppies were happily dancing and wiggling about. His eyes focused on the splaying and scrunching toes as if his irises together worked as one to bring the enticing image right up to his nose. His eyes had instantly become very efficient biological binoculars. Something almost immediately stirred in his sexual psyche. He felt his breathing become a bit labored, and his heart was pounding out the same kind of intense beat that he'd heard hundreds of times in the thriller movies and cheap, \"B\" horror flicks he so enjoyed.",
        "With her head almost completely hidden from view, suddenly Mike saw her stretching her legs, moving her feet in all directions as if she was looking for something on them...maybe even admiring them. The happy wiggling and stretching and luxuriant cavorting of those feet said she was obviously happy to have them free of the confines of her shoes. Mike's sweat mechanisms turned themselves up a notch...or two...or twenty. Sighing to himself, he knew he could never tell her that he was equally happy to see those lovely feet freed of their leather prisons.\n\nAlmost as if in a trance, Mike's wobbly legs backed him away from the fifth row and carried him up one step to the next row. Slowly, he walked down the row, his shaky hands spilling kernels of popcorn along the way. He stopped three seats away from the seat just in front of the woman. She looked over at him and smiled. He smiled back. \n\nHe sat down, sighing and shaking...sneaking quick glances at her feet. They were lovely. If he had to guess, he'd say they were a size 7 or 8. They looked so soft and smooth. And when she scrunched her toes, he could see a pretty, deep blue color painted on her toenails. Those adorable feet held his attention, discreetly of course, for several minutes as they danced and wiggled on the seat back in their comfortable freedom. Just as the lights began to extinguish completely for the trailers to begin, Mike, trying to be cool and slick, got up out of his chair just enough to slide over one more seat, closer to those sexy tootsies. He hoped the woman didn't notice...or worse yet, he hoped she didn't start screaming...or move to another seat. \n\nShe neither screamed nor moved. But Mike was sure he heard a stifled giggle. He shuddered, afraid she might've seen him looking at her feet. But a part of him reveled in the idea that she maybe did see him, and perhaps she liked having her feet admired, or at least didn't mind. He wouldn't even care if she was amused by it, as long as she wasn't offended. It was always his fantasy to be caught discreetly admiring a woman's feet and have her seduce him with them. It was a remote possibility at best, and it hadn't happened in his twenty years of admiring shapely feminine feet, but...hope springs eternal.\n\nThe only downfall to trying to ogle a pair of sexy feet during a movie like SUNSET OF THE LIVING DEAD, is that zombie flicks seldom have a lot of bright, sunny scenes. After the first ten minutes or so, there were few scenes in which the brightness of the projected image aided him in his admiration of all things footsy. But, those rare instances in which light WAS sufficient, Mike took full advantage. Instinctively, as soon as a bright scene lit the theater, he would hunch down in his seat and immediately look at the woman's feet as they flexed and wiggled on the seat back. God, how it made him horny to watch those feet...so close, yet so very, very distant. It caused a most exasperating ache in the crotch of his pants. As frustrating as it was to be able to look but not touch, it was still eminently fun in a tantalizingly voyeuristic way.\n\nBeing only occasionally able to focus on the objects of his desire, Mike resigned himself to watching bits and pieces of the movie, occasionally looking toward those peds in hopes that he might be able to see them in spite of the gloominess of the room. Thus keeping track of the woman's feet only sporadically, he lost track of them briefly. Glancing over yet again, he saw that those incredible soles and toes were gone...removed from the seat back in a cold attempt by God Himself to shatter his adoring heart. With a sigh of complete and utter dejection, Mike assumed the woman had tired of having her feet up and had brought them down to place them back on the floor. Even worse, she probably had become offended or nervous and decided to put her shoes back on. Oh, bitter agony.\n\nBut no! They weren't gone at all. Rather, those tantalizing tootsies had been moved slightly, to a new and presumably more comfortable position. And...joy of joys!...they had been moved even nearer to him! The darling woman had slid her feet down between two of the seat backs, the one in front of her and the one next to Mike! Her legs were crossed so that one outstretched leg rested atop the other, the heel of the upper foot resting on the inside ankle of the lower. Now those lovely works of art were less than two feet from Mike's heaving chest. As before, the flexing, stretching and wiggling of soles and toes continued. Mike felt the distinct urge to lean over and kiss the foot nearest him, holding it captive and adoring it from toes to heel with his hungry lips. Oh, how he yearned for that foot...how he desired it...how he wanted to nuzzle and nibble it. He stared at that foot and got harder and harder by the second. He'd have given anything just to touch it...to stroke it oh, so tenderly with his hands...to sigh on those wiggling toes.\n\n***********\n\n\"Excuse me,\" Mike heard, a sound like the whisper of butterfly wings.\n\nHe thought he was hearing things. Oh, no, he thought, it must be someone in the movie. He looked at the screen more intently, turning his ear toward it, but saw and heard only screaming victims running from brain-hungry zombies in a run-down, deserted diner. As one of the characters tossed a homemade Molotov Cocktail at one of the shambling things and set it ablaze, the theater lit up brightly, and Mike again took the opportunity to adore those oh, so tempting feet.\n\n\"Excuse me,\" he heard again. Tearing his eyes from darkly painted toenails, he instinctively looked in the direction of the hushed words. \"Hello? Excuse me,\" the voice said again as his eyes focused on the pretty face. It was the barefoot woman, not a character on the movie screen. With her feet still between the seats, she was leaning forward as far as she could and looking between the seats directly at him! The glow of the onscreen cooking zombie glittered in her eyes, making them dance mischievously in the darkness. \"Um....uh....yeah?\" Mike answered. His blood froze. He was terrified. Surely she had caught him ogling her feet and was going to tell him to go have sexual relations with himself...if she was THAT kind about it.\n\n\"I was wondering,\" she said quietly, \"if you wouldn't mind doing me a favor.\"\n\n\"Uh....if I can...sure,\" he replied, cringing a little. Oh, sure, he thought...here it comes. He was certain she was going to strongly suggest he begin copulating with himself, or perhaps a very close relative.\n\n\"Well, I hate to ask,\" she said sweetly, \"but I really could use your help.\"\n\nMike just looked up and back at her, afraid to move a muscle. Even in the darkness, he could see her smile. Her eyes looked pleadingly at him. The look seemed genuine...sincere. She wasn't angry with him at all. His tightened muscles untensed. \"Sure,\" he said, feeling better, but still wary.\n\n\"Well, you see, I came here directly from work, and I had a terrible day. I had to stand most of the day in a pair of shoes I just bought yesterday. It was stupid, I know, wearing shoes to work that haven't been broken in yet... but...well, I did. Anyway...\" Her voice trailed off as Mike's mind drifted. He was thinking of her pretty feet trapped in uncomfortable shoes for so many grueling hours...of what a crime that was, and how he wished he could have been with her at work all day to rub and kiss away the pain those lovely feet must've endured. His own sigh was so loud that he brought himself out of his fantasy world. Scrambling quickly to listen again, he shifted his position and looked more directly at her.\n\n\"So....could you? I mean...would you mind?\" he heard her say. \"Seeing as how you're sitting right there and all,\" she continued without stopping for air.\n\nHaving no clue what she asked, he stammered, \"I'm sorry....what....?\"\n\nShe smiled, and her smile didn't look at all embarrassed...but rather cautiously hopeful. She cocked her head to one side and spoke, more loudly than was actually necessary, despite the carnage on the movie screen.\n\n\"My feet. If you wouldn't mind, could you be a dear and rub them for me?\"\n\nThere was no way in a million years Mike could believe he'd heard correctly. His fantasies were obviously getting the better of him. He was losing it. He had to be.\n\n\"If you'd rather not, it's okay,\" the woman continued. \"I fully understand. But if you could....I would sooooooo appreciate it.\" Even if he hadn't been into feet, her smile and twinkling eyes would have suckered him into it in a fraction of a heartbeat.\n\nNot believing he was saying it, he replied in a voice slightly louder than a sigh, \"Sure...I'd love to. I mean...I'd be happy to.\"\n\n\"Really?\" she beamed, \"Oh, thanks so much. My feet are really achy, and a nice rub would be Heaven. Really, thank you so much...um...,\" she waited for Mike to take the hint and give her his name, but his mind was still digesting the unbelievable fact that this incredible woman wanted him to rub her feet. Smiling, the woman reached her hand out as far as she could and said, \"By the way, my name's Cheri...what's yours?\"\n\n\"Mike,\" he sighed, \"I'm Mike.\" Gathering his wits a bit and shaking her hand nervously, he added, \"Nice to meet you, Cheri..very nice.\"\n\n\"Thank you, Mike. Same here. And you are definitely my hero. My feet will be forever in your debt.\"\n\nNo, Mike thought, I'll be forever in YOUR debt. With his chest heaving and his heart pounding, he said, \"Cheri, why don't you just sit back, and I'll see what I can do for these achy tootsies, okay?\"\n\n\"Oh, Mike....you're a saint. Thank you so much. And you feel free to do whatever you think you need to do to make my tootsies feel good. You have Carte Blanche.\"\n\n\"Really?\" Mike said, allowing himself a wicked smile. He laughed. \"Well, maybe I should just confine myself to rubbing them for now. Who knows how carried away I might get with such pretty feet as these.\" He couldn't believe he said that! Now he knew for sure she would look at him like he was the king of the pervs and take those lovely feet away from him. He tensed again...waiting for the hammer of disappointment to once again slam down on his dreary life.\n\n\"Wow...you think my feet are pretty? Thank you, Mike. I'm flattered. I try to take really good care of them...well, when I'm not dumb enough to wear untried shoes to work, that is. But it is nice to have all the effort noticed once in a while. And, like I said, do whatever you think will soothe my feet.\"\n\n\"Well, I'll stick to rubbing,\" he laughed. He wanted to say, \"Okay, I'll try to keep from kissing them TOO much,\" but those words stuck in his throat. His brain had to scramble for the other, less needy words as it was.\n\n\"Don't you dare. If you know of something you can do for my feet that will make them tingle with delight, you feel free to go ahead and do it. A girl can never have too much foot pampering, I always say. Sometimes rubbing is only the tip of the pleasure iceberg. Besides, you're being nice enough to comfort my sore feet, so I'm not going to look a gift horse in the mouth if you know of anything else that'll make them wiggle with joy.\"\n\n\"Well....I don't know,\" Mike said, already moving into the seat immediately alongside her feet, \"I might get too fond of such gorgeous tootsies and then who knows...? I think I should just....\"\n\n\"I repeat, Mike,\" she said firmly, smiling at him, grinning from ear to ear, \"you do whatever it takes to pamper my feet, and,\" she added looking directly into his eyes, \"to make them feel loved. Understand, Mike? I have positively the most neglected feet on the planet. My poor tootsies would die for some loving.\"\n\nIndeed he did understand what she meant...or, at least, hoped he did. His pulse raced and his breathing became choppy at best. But, as much as he wanted to take those feet in his hands and kiss them raw, he still couldn't risk it. For all he knew, she was just being flirty, and didn't really want anything more than a foot rub. If he had misunderstood her meaning and started kissing her feet, he could find her knee firmly implanted in his crotch, thoroughly squashing all three of his most prized possessions. For now, he wasn't going to take any chances. He'd play the hero...massaging her tired feet, and doing nothing more.\n\nCheri sat back in her seat, biting her lower lip, praying that Mike had gotten the message. Sure, she wanted a nice, soothing foot massage, but if this guy was willing to do more...mmmm...how wonderful that would be. She started to fantasize again. This time it was Mike's lips she felt caressing the insteps of her feet, saw grazing the tips of her toes. In the dim light, she could swear she saw her toes disappearing between his lips, plunging deep into his mouth. She stifled a giggle as she found herself wondering what his mustache would feel like as he sucked her toes. She sighed, but the visions remained just that...visions...gossamer strands of imagination. All that touched her feet was a strong pair of hands...no adoring lips. Oh, well, it was better than nothing. And how many women could go to a theater and get a foot rub while they watched a movie? She was certainly ahead of the game, if not totally where she'd like to be. And she was NOT about to look a gift horse in the mouth.\n\nMike fought hard to hide his desire as his hands captured her right foot and cradled it. He held it close enough to his face to admire it's shape. The side of the seat back kept him from bringing her foot closer to him, so he had to lean over to get close to it. He didn't mind at all. His hands savored it's softness and smoothness. Even in the ever-changing light of the theater, his eyes took in every curve and slope of his prize. He started to gently massage it, which brought a sigh from Cheri. She sat back in her seat and tried to watch the movie, although she had trouble concentrating on it. Bending still nearer to her foot, raising it closer to his admiring eyes, Mike realized the first of his fantasies. While kneading her soles with firm pressure from his thumbs, and gently stroking her insteps with lightly caressing fingers, he inhaled deeply and exhaled, sighing on Cheri's toes. She felt the warmth of that sigh as it cascaded lightly over her happy toes, and though she tried to watch the movie, her eyes had other plans. They rolled up in her head as if trying to see the pleasure beginning to sparkle in her brain. \n\nCheri's eyes remained rolled up in her head, try as she might to watch the movie. She had gotten weak, slumped back in the chair, face aimed at the dark ceiling. All she could do was sigh and lick her lips. The wonderful rubbing and kneading going on at her pampered foot was draining every bit of energy from her...relaxing her completely. But part of her was anything but relaxed. The closeness of Mike's lips to her foot, and his warm breath washing over it ( my God...was he panting?! ) had seemed to reroute every nerve ending in her body to the quickly moistening patch between her legs. She yearned for his lips and tongue to help his hands pamper her feet. In her head, she screamed, \"PLEASE...PLEASE...USE YOUR LIPS...YOUR TONGUE! OH, MIKE...GO FOR IT!!\"\n\nMike, holding Cheri's pretty, soft, sensual foot just inches from his lips, was losing his ability to maintain his composure. He knew he should only rub her foot...not take chances...but his mind was becoming clouded, his thought processes muddled. He wanted to kiss Cheri's foot more than he wanted to take his next breath. His lips seemed to be tugging his head downward, compelling it toward her warmly tingling foot. His mouth wanted to lunge forward and attack her toes, taking them all into itself at once, and sucking feverishly. His tongue urged his mouth to do just that, so it could enjoy those warm toes as well. Inhaling deeply with the intent of sighing yet again, Mike's lungs sucked the mild scent of Cheri's feet into his nostrils...and all will power vacated his mind and body.\n\nStill enjoying the foot rub, Cheri gave in. She gave up totally the idea of watching the movie, her brain preferring to savor every sensation of what was occurring below her ankles. To do that, her sensory receptors decided to shut down all other stimuli. All she could now feel was the warmth and rubbing going on at her foot...and the growing wetness between her thighs. Everything else faded hazily from existence.\n\nAnd then it happened. Something soft brushed along the tips of her toes. While most of her foot was cool from the theater's air conditioning, the area from the ball of her foot to her toes was very, very warm. The contrast between the two, heat and coolness, was both invigorating and exciting. But, it was when the warmth at her toes increased that she mustered up the strength to bend her head forward to see what was happening.\n\nShe thought she was fantasizing again. Her pleasure-glazed eyes slowly focussed. She wasn't fantasizing at all! It was really happening! Mike was hunched over her foot, his hands still working at comforting it, but his lips were slowly, tenderly adoring her toes! He was actually kissing her foot!! She nearly lost all the moisture in her body directly through her incredibly hot honeypot. She was mesmerized watching him worship her toes, holding her foot tightly to his lips, seeming to not be able to get enough of her toes. And though he wasn't sucking, the earlier posed question of what his mustache would feel like on her toes was answered.\n\nMike had been kissing Cheri's foot for a very long time, as lost in the pleasure of it as Cheri had been, before he even realized he was doing it. The softness of her foot against his lips was driving him crazy, making his pants tighter by the second. When he finally did realize he was lovingly kissing her wiggling toes, his mind weakly told him he should stop, that she was probably going to slap him into the middle of next week. But he couldn't stop. What's more, he wanted to do MORE than just kiss her foot. His mouth yearned to taste it. His tongue actually ITCHED to savor the softness of her flesh. He sighed more frequently than ever on her foot. What he didn't realize was that he'd been kissing her feet, both of them, for well over an hour. He'd given both a thorough massage, and kissed much more than just her toes. Fingers and lips had left no stone unturned. Toes, soles, ankles, insteps and every possible inch of both feet had been both soothed and worshipped. To Mike and Cheri it had been only seconds, when in reality both had enjoyed this incredible diversion without either of them having seen much more than the opening credits of the movie and a few early scenes. Unknown to either of them, the ending credits had begun to roll by the time Mike realized he was going further than he'd intended to.\n\nNot being aware of what had truly transpired, Mike tried to force himself to pull back from her feet...to go back to just massaging them. Still unaware of the actual time lapse, his illogical hope was that she hadn't noticed him kissing them. Finally, using every ounce of will power he possessed, he managed to force his lips to vacate Cheri's soft foot flesh. But he was shown quickly that that was NOT what Cheri wanted. As he pulled his mouth away, her foot seemed to tense. The toes bent back, splayed apart slightly. If such a thing could happen, it almost seemed as if Cheri's foot was angry...or, more accurately perhaps, determined. Mike's mouth hadn't moved three inches away from her foot before those single-minded toes shot forward. The pads of her toes slammed against Mike's slightly parted lips in a no-nonsense act of desperation. They pressed hard against his lips, wiggling energetically, the tips of the toes working between his lips about a half inch before they relaxed, still flexing slightly as they reached his teeth. Mike was only vaguely aware of Cheri's words as her foot roughly attacked his mouth.",
        "\"My God, Mike...don't you dare stop! Oh, please don't, Mike.\" The soft statement trailed off into a sigh as her toes once again made firm contact with his mouth.\n\nBut something stopped them both in their tracks. Suddenly, light filled the theater. The movie had ended. Mike had fondled and loved Cheri's feet throughout the entire movie, and the theater's automated system had turned on the lights. \n\nTheir hazy minds focused just in time to hear the theater employees entering the screening room to prepare it for the next showing. In they came with their brooms and waste baskets. That's when the scurrying began. Mike sat up quickly, heart pounding, but he still held one of Cheri's feet by the heel, though not for long. The foot that had tried to ram its way into his mouth shot back between the seat backs and was valiantly trying to cram itself into its leather prison once again, as was its equally pleasured mate.\n\nHaving succeeded in shoving her feet back into her shoes, Cheri sat nervously, seeing Mike for the first time in full, bright light. His face was flushed, as was hers, and he was looking at her wide-eyed, also seeing her face clearly for the first time. They stared at each other as the theater help moved about mechanically, sweeping and grumbling.\n\nBoth Cheri and Mike felt like naughty children, almost getting caught doing something wonderfully bad. They stared at each other for a full minute, then both broke into nervous laughter. When the laughter stopped, they looked at each other with admiration...and more. They were excited, giddy. They understood that something meaningful had happened, and each was thinking of some way to expand upon it. Mike, still a little unsure if he'd overstepped his bounds, despite Cheri's obvious approval of everything he did, spoke first.\n\n\"Uh...Cheri...I hope I didn't...I mean, it seemed like you enjoyed....well....I mean....did you?\"\n\n\"My God, Mike....that was incredible. I felt so....special...so.....\" Words failed her.\n\n\"Are you sure?\" Mike asked, needing definite approval.\n\n\"Yes, Mike,\" Cheri replied, finally relaxing a bit, \"I really enjoyed that. I mean, I really, REALLY loved it. Thank you ever so much.\"\n\n\"Well,\" he mumbled, fidgeting, \"maybe we could go out to dinner together? Maybe talk a little? I don't know about you, but I'd like that.\"\n\nCheri's eyes sparkled. Her words put the final nail in his coffin. \"Mike, I'd love that...especially if you treat my feet like that again.\"\n\nIt was Mike's turn to have sparkling eyes. He smiled and sighed, speaking clearly despite his thumping heart. \"I'd consider myself the luckiest guy on the planet to treat your feet any way you liked. So,\" he cleared his throat, \"shall we go somewhere and talk? Maybe have dinner?\" He fought hard to keep from showing how much he hoped she'd say yes.\n\n\"I'd love that. Yes...definitely!\" was her reply. Her voice was the controlled squeal of a schoolgirl kissed by the school hunk.\n\nTheir smiles seemed to touch, meeting somewhere in the air halfway between them. Both were horny from what had happened, but there was more. It was like they'd each found something they thought they'd never find.\n\n\"Shall we go, then? I mean, together?\" Mike asked.\n\n\"Oh, you bet, Mike. After what I just experienced, you may NEVER get away from me. Lead the way, my hero.\"\n\nCheri found and collected her crumpled thigh highs, leaving her mostly finished soft drink in the arm of the seat. Mike looked at his uneaten popcorn and barely sipped fruit punch and left them where they were, to be collected by the robotic theater help. Both of them walked to the end of their rows and stood smiling at each other before turning to go down the stairs. When they came close to one another, Cheri's right hand and Mike's left jerked almost imperceptibly, each of them feeling a fleeting urge to clasp one another, to hold hands as they descended the lighted stairway. It was a brief period of subconscious awkwardness...as both of them felt that such an act would be way too premature.\n\nWhen they got to the parking lot, Mike said, \"Let's take my car. We'll come back for your car later. Is that okay with you?\"\n\n\"Mike, I'll go where those fantastic lips of yours take me. Lead on, my foot pampering hero.\" She didn't know him, but somehow felt safe with him. She got good vibes from this cute fellow, and trusted him. Besides, if he tried anything, she was tough enough to make him wish he hadn't. The testicle earmuff vision came waltzing back into her mind. She laughed a silent, internal laugh.\n\nAs they walked, they looked around, not sure what to say to one another. At some point about halfway to Mike's car, their arms intertwined, finally completing the act their hands hadn't in the theater. Somehow, interlocking their arms wasn't as much a statement of familiarity as holding hand's would've been. Or, maybe they just felt it was now okay to touch. In any case, they walked arm in arm. They arrived at Mike's car, settled themselves into it, and drove off to have dinner together, both of them trembling with excitement and tingling all over. The air crackled with electricity. Two hopeful minds bubbled over with endless possibilities.\n\nMost of the conversation in the car consisted of small talk, congenial chat. As with all first conversations it was a feeling out process. Mike and Cheri were quite simply just getting to know each other. Both deftly skirted the foot fetish issue, eschewing any talk of what happened in the theater in favor of idle pleasantries...though both of them wanted so, so badly to talk about it. \n\nMike drove aimlessly at first, until he and Cheri finally got around to discussing where to have dinner. It seemed that food was the furthest thing from their minds. Cheri was in the mood for something quick, and suggested several fast food places. She had skipped buying food at the theater, and was now rapidly becoming famished. Although Mike had bought popcorn, he had actually consumed barely more than a few kernels. His mouth had been much too preoccupied with Cheri's soft, tender feet to waste its time with puffed, bloated corn. He, too, was in need of sustenance.\n\nAfter only a few minutes of deliberation, it was mutually decided that a local Burger Barn would do nicely. That way they could sit in the car and talk privately, with no fears of big-eared waiters or waitresses overhearing what might turn into very personal talk. Even the mention of \"privacy\" had them both anticipating what a private conversation might entail. Each of them wondered how the subject of foot worship and the events at the theater might be broached...and by whom.\n\nMike was so nervous about the whole thing, that when he gave their order at the drive through - barely understanding the broken, staticky voice that sputtered back his order - his voice was cracking almost as much as the one coming from the slightly rusted speaker. He had to clear his throat several times because the five chicken nuggets displayed in the picture he happened to notice on the menu around the speaker, just happened to be arranged side by side, reminding him of Cheri's all too edible toes. But, he managed to give the order, drive up to the next window to pay, and then escape with their fast food gourmet treats. He pulled around and parked behind the restaurant. Still being a bit early for dinner, there were few customers parked in the lot. Mike and Cheri opened the various cardboard containers and happily chomped and slurped their meals, once again engaging in small talk between chews.\n\nNeither of them could figure out a way to broach the foot fetish subject. Even after they'd finished their meals, the talk remained innocent, pleasant, basically interesting, but under the circumstances...dull. Not that the two didn't click, or enjoy talking with one another, but they both wanted to babble incessantly about the incredible turn of events in the theater. Cheri ached to have his hands rubbing her feet again, see his mouth enjoying her toes instead of chicken nuggets. Mike yearned for her to kick off her shoes and plop them in his lap...strictly and \"solely\" as a starting point, of course. He did have \"normal\" needs, too, after all. Man does not live by toes alone! But neither of them had the courage to start things off.\n\nCheri had decided not to partake of any of the Burger Barn's dessert items, but Mike had purchased an ice cream sundae to finish off his meal. Cheri was content to talk about whatever came to her while Mike savored the vanilla ice cream and the tasty hot fudge. \n\nAs much as they enjoyed each other's company, the sexual tension between them could've been cut with a chainsaw. Both were getting edgy, restless. If one of them didn't break down and talk tootsies soon, one or both of them would need to be fitted for a straight-jacket. After about a half dozen spoonfuls of ice cream, Mike couldn't take it anymore.\n\n\"Cheri,\" he said, a pleading look in his eyes, \"I have to tell you something. I hope it doesn't offend you.\"\n\nCheri's heart skipped a beat. She was literally vibrating from head to toe. She had to take a deep breath in order to have enough lung force to say, \"What, Mike? What is it? I doubt you'll offend me.\"\n\nMike tried to hold back, keep his feelings at least somewhat in check, but pent up, unsatisfied desires from the last dozen years, coupled with flashbacks of kissing Cheri's feet, betrayed him. It all came out as a rambling, convoluted mess of deep feelings and yearnings. \"Cheri,\" he said, \"I don't know how to say this, but what happened at the theater....I mean...it was like....it was incredible. I must've just phased out. I mean, it was so fantastic just rubbing and kissing your feet, that....I don't know...I could've kissed them all night.\"\n\nCheri's face was beaming. Her mouth was ear to ear smile. Her breathing quickened. She was about to blurt out how much she too enjoyed it, when the stumbling and bumbling Mike continued.\n\n\"I'm sorry if this offends you, but your feet are gorgeous...so soft and sexy...so sweet, kissable. I know you only wanted a foot rub, but I just...I couldn't help myself. I HAD to kiss them. I've never wanted anything so bad in my entire life. And I wanted to do so much more than just kiss them. I wanted to....\" He caught himself, realizing that if he went further with his statement and Cheri took offense, he'd probably never see her again. As he hesitated, a very elated Cheri saw clearly that a crossroads had been reached. It was now or never. This was the chance to get everything out in the open and make this whole thing work.\n\n\"What, Mike? Tell me, what did you want to do besides kiss my feet?\" The look on her face was of breathless anticipation. Mike saw that look and finally felt comfortable enough to go for broke. But he still babbled his feelings.\n\n\"I wanted to....oh, jeez...how do I say this without sounding like a total perv?...I wanted to hold your feet to my face and nuzzle them and hug them and just....well....suck your toes...and lick your feet...and like, just lightly chew them and suck them all over. I wanted to rub your soles all over my face and just sniff in their scent and kiss them over and over and over again. I wanted your gorgeous feet to just be...I don't know...a part of me. Oh, God, that must sound totally twisted...I'm so sorry...\" he chuckled nervously, \"really...I didn't mean to get so creepy on you.\"\n\n\"Mike,\" Cheri said softly, trying to control the heart-thumping glee she was feeling, \"it's fine. Believe me, I loved when you started kissing my feet. I've wanted a guy to do that for years now. I've even ASKED guys to do it, but they never would. When you started kissing my toes, I nearly flew through the roof...and I mean that in a good way. And I wanted you to do more to my feet, too. That's what I was trying to tell you when I first asked you to rub my feet. So, relax...I'm not only flattered that you like my feet, but I'm...well...really excited that you do. And all those things you just mentioned? I'd KILL to have a guy do those things to my feet. My feet are definitely an erogenous zone for me. A guy doing things like that to them would drive me insane! So, if you're serious about any of that at all...my feet are all yours.\"\n\nThere it was...spoken at last. Both had admitted their desires and feelings. Each had given the other their outspoken approval. All the fears of admitting such intimate thoughts to one another, of confiding in another human being their unusual needs, were gone. It was like a great flood of doubt and feared regret draining from each of them. For several minutes, they just stared at each other, their eyes locking then drifting apart as they looked at the totality of one another, then meeting again. They both liked what they saw, both inside and out. Finally, Mike broke the silence.\n\n\"You know what I'd really love to do right now?\" Mike asked in a low, guarded voice.\n\n\"No, Mike. What would you like to do?\" came Cheri's equally quiet response.\n\n\"I'd like...I'd like...,\" he hesitated momentarily, then barged ahead, \"I'd like to take those cruel shoes off of you right now and show you how much I truly adore your feet.\" He looked down at the floor, wondering what Cheri was thinking, even after their confessions just moments ago. He had a pounding erection, and could feel his face flushed with both excitement and embarrassment. He knew he must look like a fidgeting, drooling idiot to Cheri.\n\nSince his head was bent downward, he didn't see Cheri turn in her seat and swing her legs toward him. What he did see quite clearly was her tortured, shoe-smothered feet plop into his lap. \n\n\"Why don't you go ahead and do that, Mike? Take my shoes off for me. Then you can do as you please with my feet. Carte Blanche, remember?\" She winked, but he missed it because he was looking at those cruel shoes.\n\nHe looked up, unbelieving. Her eyes seemed to urge him on...encourage him. When he looked back down, Cheri's feet were moving in his lap. He could almost hear muffled cries from her poor, trapped feet, begging him to remove their persecutors and love them passionately. They were cries he couldn't ignore, especially now...knowing that Cheri wouldn't want him to ignore them.\n\nMike looked back and forth from Cheri's eyes to her feet as he removed first one, then the other shoe. But once her feet were again bare, he couldn't take his eyes off them. The sight of those wiggling toes brought back vivid memories of how they felt against his lips, and he ached deep in his soul to have that experience again. He sighed, trying to decide where to begin. Cheri made that decision for him.\n\nMike's hot fudge sundae had been waiting patiently throughout the baring of souls...and soles. It sat there on the dashboard, just now beginning to melt, looking inviting to almost anyone's palate. Cheri leaned over and dipped her finger in hot fudge sauce, making sure to capture a good sticky gob of it. She then leaned forward a bit more and dabbed the sauce on the tip of the toes of her left foot, streaking the sticky brown sauce from her big toe to what she called her \"baby\" toe. The hot fudge dribbled slowly down each toe.\n\n\"I hope you like your sundae, Mike,\" she smiled. Her heart was pounding in her chest. It pounded even harder when she saw the schoolboy smile of pure glee plastered on Mike's face.\n\nHe lifted the anointed foot with reverence, as if it were as fragile as a single gossamer strand of cotton candy. He raised it until her toes were even with his chin. He sighed audibly as he watched the chocolate slowly inching its way down those toes. He stuck out his tongue with the intention of calmly licking the sauce from the slender digits, but when he did his entire body shuddered and he lost control. His mouth suddenly gained a will of its own, lunging forward to suck eagerly at Cheri's fudgy \"tootsie rolls.\"\n\nThe warmth of the hot fudge alone on her toes was enough to make Cheri tremble with delight, but when she saw Mike's mouth voraciously sucking it off her toes, it made her gasp with pleasure. She squirmed once again, eyes wide as she watched her toes being devoured. Mike sucked them hungrily, his mind more melted than the ice cream.\n\nHis sucking lips were very soon joined by his licking tongue. He licked and sucked her toes until they were spotless. You could never tell there had been any hot fudge on them at all. Still trembling, awash in sexual lust and desire, Mike pulled back from his chocolate snack to give his eyes a chance to feast on Cheri's lovely feet. When he did, the pause in the action was an agonizing Hell for her. Not even thinking about it, she reached again for the shallow bowl of ice cream. This time she didn't bother with a gentle dabbing of sauce on her toes. That proved too easily...and quickly...lapped away. No, this time she tipped the dish above her foot and let all the melted ice cream and its clinging hot fudge pour over her feet...both of them. She never even thought of the possible consequences for Mike's poor jeans, or the seat of his car. She was not thinking at all clearly. Her brain had been shut down, and her motor was now running purely on hormones, all of them careening madly toward the moistening tuft between her legs.\n\nMike watched the liquid swirl of vanilla ice cream and chocolate syrup drench Cheri's ten wiggling toes, gliding down toes and instep, along the sides of her feet, over her ankles to her heels. He watched with glazed eyes as it dribbled between her toes and ran down her soles. As he watched, ecstatic, her feet became two wonderfully tasty, sticky sundaes. \n\nCheri wiggled her toes, feeling the cool mixture squeeze between them. She rubbed her feet together, smearing the liquid dessert over every inch of them. She delighted in the stickiness of her toes and how some parts of her feet were cool from ice cream while others were warm from the hot fudge. It was a mind-boggling mix of sensations - hot, cool and sticky - all over her feet, and she loved it. But what started the flood between her legs was the thought of Mike's warm mouth licking and sucking all of it up. Her sticky, sweet, toe sundae just for him.\n\nMike looked up at her, staring into her eyes. They twinkled back at him. Her smile was as sticky sweet as her feet now were. As he looked at her grinning face, he saw her wiggling her bottom back and forth. She leaned back against the inside of the car door. She was snuggling herself into the car seat, getting comfortable. With a grin of his own, Mike realized she wanted to enjoy this as much as he did, and she was getting herself prepared for a long session of foot tasting on his part. She'd offered him some tasty \"toes a la mode\", and now she was nestling back to enjoy watching him devour it.\n\n\"Looks like you've got your work cut out for you,\" she said, still grinning.\n\n\"Yes,\" he said with a glimmer in his eyes, \"looks like I most certainly do.\" He wasn't the least bit concerned about his jeans or his car seat. He wouldn't have cared in the slightest if a tornado was brewing outside or if a barrage of mortar shells were tearing up the asphalt outside his car door. His eyes were focused on the sticky, dripping, tasty looking feet purring on his lap.\n\nWith a sigh and a final snuggle into the seat cushion, Cheri said softly, \"Bon appetite, Mike.\" Her body all but hummed its anticipation, and she was forced to use every ounce of her self control not to cackle gleefully like some triumphant madman in a cheesy psycho flick. Finally, her feet were going to be properly appreciated.\n\nMike's salivary glands were working overtime as he stared at Cheri's ice cream coated feet. He was forced to continually swallow or choke on his own saliva. His hands trembled as he lifted the first foot, his wide eyes noting every drip of ice cream, every spot of sticky chocolate syrup. Cheri's eager toes curled and wiggled, making the sticky fudge stretch and string between them. It looked so deliciously gooey. Mike kept staring, his eyes roaming eagerly over every inch of her sweetened foot. His mind was having a hard time accepting that he could be this lucky.",
        "Cheri's feet were eager for attention. While she enjoyed Mike's look of rapt attention and his heaving chest, she grew impatient for the feasting to begin. As he held her foot once again by the heel, she decided to wake him from his adoring trance and get his hot mouth busy. She shook her foot in his grasp, rotating it, bouncing it up and down enthusiastically, moving it all about with enough energy to make her impatience known.\n\nMike chuckled, finally aware of what he was doing...or NOT doing...and just how eager Cheri was for it to begin. He looked directly into her eyes and raised her foot slowly up to his lips. Keeping his eyes fixed on hers, he gently kissed the tip of each toe. Cheri's mouth dropped open ever so slightly and she sighed. Mike saw her eyelids flutter. Her chest rose and fell more rapidly. Although her fluttering eyelids seemed to be getting heavier, her dilated pupils watched every move Mike's lips made. Like him, she couldn't believe this was finally happening...a cute foot guy adoring her feet. And to think, not too long ago she had prepared herself for a confrontation with him, and even considered rearranging his testicles if he had balked at the sight of her feet. Wow, she thought, how quickly things change.\n\nAs Cheri watched, Mike kissed her sticky sole from toes to heel, up and around the sides, both ankles and even the back of her foot just above her heel. He held her leg straight out in front of him, lowered it a bit, bent his head down and adoringly kissed her instep, from just above her ankles all the way to the tops of her toes. To Cheri it looked so romantic, so erotic...as if Mike was her long enamored lover worshipping her feet as a prelude to ravishing her sexually for many lust-filled hours. Watching him kiss her instep like that was making another part of her wet and sticky. \n\nMike kissed every inch of her foot, his lips caressing gently at first, his kisses soft and eminently respectful. But as his passion grew, the kisses became more erotic, more needful...more lusty. Closed-mouth puckered-lip kisses worshipped her foot, but were eventually replaced by more insistent, openmouthed kisses. He kissed her foot as a man would ravish the lips of a lover. He held her foot tightly to his mouth, pressing his lips hard into her flesh, his panting breath warming the cold ice cream almost as much as his lips did.\n\nCheri squirmed when Mike's tongue became bold enough to join in the festivities. Up until now, he'd only kissed her feet, as he had in the theater. But now, just the sight of his tongue beginning to become interested was enough to make her bite her lower lip. God, how she wanted him to hurry...how badly she wanted to feel that hot, wet tongue all over her feet, gliding and snaking along, licking and tasting. Her dripping flower began to burn, an insistent itch commencing deep inside her.\n\nThen it happened. Mike's tongue started taking slow, tentative licks along the undersides of her toes. Those first gentle licks sent sparks prickling up her legs directly to her soft, pink core. She sighed, her eyes riveted on his pink, wet tongue and the licking motion of his head. The heat of his mouth and breath on her toes was making her giddier than she'd been in a long, long time. \n\nWhen Mike's tongue snaked between her toes, she started to feel woozy. All she could do was pant, sweat, tremble and watch his mouth on her foot. At first she saw just the tip of his tongue peek through between her second and third toes. Her lungs somehow skipped a breath or two. Then he pushed his tongue further between her toes, the increased thickness of the back portion of it forcing her toes further apart. She barely breathed at all when his probing tongue pulsed and writhed in that tight space. It seemed to undulate as it searched for the taste of her flesh...and, perhaps, of the ice cream and hot fudge. The more that tongue boldly barged between her toes, the more her thumping heart threatened to burst beneath her heaving breast.\n\nBy now, most of the ice cream was beginning to dry on her feet, as was the syrup. It didn't matter. If anything, it pleased Mike even more that way. That meant he'd have to lick all the harder...and he didn't mind that a bit. After he thoroughly licked the sticky vanilla and chocolate mixture from between Cheri's toes, he did something he never thought of before...and had no idea what made him do it. He just felt like he wanted to rub his lips along the insides of Cheri's toes. He felt there would be something sensual about it...and he turned out to be right. He took each toe individually, pulling the toes on either side of it away from it, bent it slightly toward him, and just put his lips around it from the side, those soft lips barely touching it, and slid them slowly up and down the toe. He loved the feel of his lips just slowly caressing her toes one by one. It turned out to be an awesome sensation...for both of them.\n\nWhen Mike started rubbing his lips along her toes, Cheri at first thought she was going to get bored with it, and she would have to again make her desires known. But each and every toe tingled when he held it and brushed his lips along it. His hot, panting breath bathed her toes and the spaces between them and felt incredible. Warm breath against ice cream cooled flesh was a most sensual contradiction in sensations. And watching Mike's eyes as he lip-massaged each toe caused a definite yearning between Cheri's trembling thighs. His soft, warm lips squeezing between her toes was maddeningly sensual. She wondered how much of this she could take before she outright raped this man.\n\nMike thoroughly enjoyed rubbing his lips along Cheri's toes. It turned out to be such a delight squeezing and forcing them into those warm spaces, and once again sighing on her toes. He'd long since licked away most of the fast food dessert from her toes, and his lips got to experience the soft flesh of her beautiful feet. Every cycle of his lips along a toe made the throbbing between his legs more intense. His crotch was getting extremely uncomfortable. He wasn't sure if he could take much more...but he was willing to risk anything to continue worshipping Cheri's feet. It didn't seem like any other course of action could possibly be an option he could live with.\n\nAfter his lips had savored her toes, Mike's mouth sent an urgent signal to his brain. It was hungry, and it wanted her toes deep inside it. Unable to resist, he gave it its wish. The synaptic command which sent the message to his brain was a sudden one. Mike's lips were gently stroking a toe when suddenly his mouth opened and swooped down on that toe, sucking it inside, lips again sliding up and down the toe, but this time with the toe completely in his mouth, his cheeks pulled in with the force of his sucking. He panted and sighed as his mouth moved from toe to toe, sucking them hungrily, gently chewing the pads, licking the undersides of each, moaning as his mouth had its way. He sucked her toes passionately, like a man who's mouth was now calling the shots and he was just along for the ride. He'd hoped to do this much more sensually...romantically...but when his passion overcame him, that became all but impossible. He could only hope she wouldn't mind too much.\n\nCheri watched in awe as Mike went from gently massaging her toes with his soft, warm lips, to sucking them like a hungry animal. She squirmed and purred like a kitten as she saw his head darting about, his mouth sliding from toe to toe, sucking, licking, even lightly scraping his teeth along her toes, gently chewing the tips. Every now and then he even made slurping noises as he sucked, or in his fevered movement a toe would pop out of his mouth, only to be hungrily sucked back into it. Cheri's eyes glazed over during this wild toe-sucking frenzy, just knowing how much Mike was enjoying it. She became all too aware of how her sexual fires were being fanned into a blazing inferno, and was afraid once again that she might begin ripping Mike's clothes off, or rip her own off to see what else Mike might like to suck on.\n\nPanting as if he'd just run a three minute mile, Mike had a moment of minimal control and forced his mouth away from Cheri's toes. Although this stopped the hormonal flow both of them were experiencing, it was an actual relief to them. It gave their skyrocketing libidos a chance to stabilize, their hyperactive hearts, lungs and sex organs a chance to take stock of their out of control, rampaging situation and try to achieve equilibrium. If the manic toe sucking had gone on even a few minutes more, the point of no return would've been a thing of the past. In short, Mike's mouth ceasing its assault on Cheri's toes kept the two of them from raping each other in the parking lot of the Burger Barn.\n\nMike sat there, staring at Cheri's now wetly glistening toes. He slowly regained some composure. He stared in wonder at her still incredibly tempting toes, even moreso without the ice cream combo masking their sensual beauty. He loved the idea that the shine on her toes was from his own lucky mouth. And he beamed with a certain pride to see that he'd sucked and licked away the dribbled ice cream from every nook and cranny of her toes, all the way down to a good portion of the ball of her foot. He sighed. Surely, he thought, he must be the luckiest man in the known universe.\n\nCheri was likewise staring at her toes. The ice cream and hot fudge was completely gone from every inch of them. The sticky, and now hardening, sundae combination was absent from her toes all the way to about a half inch beyond the base of her toes, well below the juncture of her toes with her instep. With a shiver of sheer delight, Cheri noticed this, amazed at how thoroughly Mike had managed to remove the two sweet treats from such a large area in his toe-sucking frenzy. Her blue toenails even shined brightly, as if she'd just painted them. It made her smile. She wanted to jump up and hug him long and hard, but she was too weakly mellow to do anything but sigh and grin.\n\nMike's eyes, admiring his handiwork on Cheri's toes, suddenly caught sight of something that made them become sharp focused, piercing, his brow knitting together tightly, giving his face a look of determination. Cheri squirmed when she saw that look, particularly since it was accompanied by a truly wicked grin. Mike raised and lowered his eyebrows in rapid succession, looking for all the world like a bearded Snidely Whiplash. All that was missing was the trademark \"Nyah ah ah...\" Mike was obviously planning something, and from the trajectory of his gaze, Cheri knew in a flash that it had to do with, happily, her once again gleefully wiggling tootsies. Another oral attack on her \"sundae feet\" must surely be in the offing.\n\n\"This isn't right,\" Mike said, his lips curling into an even more lascivious grin, if such was possible.\n\nTingling, Cheri asked, \"And what might that be, Mike? What's not right? Do tell.\"\n\n\"Well, look,\" he said, pretending to be outraged at some unacceptable circumstance, \"look at your foot. The toes are so nice and clean now....not a drop of ice cream sundae to be found. But look here...look at those cream and syrup covered soles. Why, that's just not acceptable!\" Again he made with the Snidely Whiplash eyebrows. Cheri giggled and squirmed.\n\n\"Well, my hot mouthed hero, I suppose it behooves you to do something about that little problem, now, doesn't it?\" Cheri could be just as much the hammy actor as Mike was.\n\n\"Mmm...yes...I do feel obligated to make all things equal. Your toes are so nice and dessert free now. But the rest of your foot definitely does need to be tended to. After all, I do pride myself on the thoroughness of my work.\" Once more the eyebrow dance...and a wide, wicked grin. Obviously, Mike was becoming very comfortable with things...not the slightest hint of embarrassment or hesitation anymore. Licking his lips, he asked, \"May I begin, Ms Cheri?\"\n\n\"Oh,\" she said, her entire body quivering, \"I insist. You can't possibly leave my feet as they are.\" It took every ounce of strength she had to keep from laughing out loud as she continued. Shaking her finger sternly at Mike, her face adopted the look of a stern mother scolding her child. \"Don't you dare stop, either, until every bit of ice cream is completely licked off my feet. And you might want to hurry, because it's getting very hard and sticky. Well...what are you waiting for? Begin, Michael...lick like a good boy!\"\n\nIt was Mike's turn to stifle a laugh. In his excitement, he was short of breath, and the laugh would've sounded stupid anyway, so stifling it was the best possible thing he could do. But it didn't matter anyway, because his eyes were already hungrily eyeing her ice cream coated sole.\n\nAgain he raised her foot, holding the sole directly in front of his face. His eyes traced the cream and brown colored drips and smears. His mouth planned its attack. His tongue squirmed impatiently in his mouth. He looked around one side of Cheri's foot to see her face. She was again biting her lip. Her eyes seemed intently focused on her foot...with him directly behind it. One last Snidely Whiplash impersonation, and he moved his head back behind her foot. She could only see the outer edges of his cheeks, his ears and a few unruly strands of hair behind her expectant foot. The suspense was killing her.\n\nThen, thankfully, she saw the slightest of movement. Then she felt something hot and wet on the bottom of her heel. Slowly, that hot, wet sensation climbed from her heel up her sticky sole to the ball of her foot. Then it stopped. Mike's head moved again. The moist warmth began again at her heel, and again slowly inched up to the ball of her foot. Over and over that same warm sensation traveled heel to ball. Five times, ten times... twenty...over and over. Long, slow, continuous heat bathed her sole from heel to base of the toes time after time. Cheri knew what must be happening, even though she couldn't see it. She closed her eyes and imagined she could watch what Mike was doing, but mostly she just enjoyed the feel of it.\n\nMike flattened out his tongue and licked ever so slowly from Cheri's heel to the base of her toes, licking up the spilled sundae treat from her sole in one long, continuous lick after another. He pressed his tongue hard against her sole and licked in a slow, graceful, fluid motion. Only when his tongue approached her toes could he see over them to steal glances at her face. Her eyes were shut and her mouth open, low sighs exiting it with almost every breath.\n\nSince she was enjoying it so much, he licked her sole like that some fifteen or twenty times. Although it took quite a while, slowly, over time, he was able to lick off almost all the sticky cream/syrup combo, but a few dabs and smears were not so accommodating. Some drips and blops were hardened and more stubborn. This was not a problem, but rather a welcome challenge for Mike, who thoroughly enjoyed licking Cheri's foot. He merely abandoned the long, slow, gentle licking process and hardened his tongue, making it stiff and firm. He then attacked those stubborn spots with short, rapid licks, intended to loosen the dried ice cream. The still more recalcitrant spots were bored into with a well-moistened, ultra-firm tongue tip...hard and rapid licks usually doing the job nicely.\n\nLulled into a dreamlike state by Mike's slow sole licks, Cheri was gently nudged awake by his more determined lapping as he tried to remove the sticky dessert from the bottom of her foot to restore it to its former pristine beauty. Her eyes now open, she had to look. She had to see him licking her foot. She'd dreamed of this so many times that she just couldn't miss it now. Luckily, Mike was beginning to lick hard at the area where the side of her foot met the sole, all around the edge.\n\nHe looked like he was getting passionate about it again, his head moving briskly and sharply as he licked. She watched his head bob and weave as his tongue found more cream and syrup to lick at. Up and down, side to side, went his head, over and over, as the warmth of his tongue and his breath continued to make her foot tingle. On quite a few occasions, he sucked at the edge of her foot, lips, tongue and even teeth savoring all the way from her big toe down to her heel, and back up from her heel to her \"baby\" toe. All the while his eyes were focused on her foot. Sometimes they glazed over, or shut for a moment or two, but mostly they admired her foot as his mouth stimulated it. Every time he licked or sucked any part of her foot, Cheri's mind wondered what that mouth could do for her if she was to direct it between her thighs instead of her toes.\n\nMike started slurping and licking madly again, his mouth moving over every inch of her foot. He was totally into it, panting and sighing, lapping, sucking and chewing at her foot. He licked her sole spotless, then the sides and ankles. His tongue worked easier, softer strokes on her instep, as the drips here seemed to lick up more easily. His tongue worked harder above her heel, and when all was said and done, you wouldn't have known Cheri had poured melted ice cream sundae on her foot at all. Only the occasional wisp of chocolate syrup deep in a pore or wrinkle would give it away, and only to the most keen observer. As a final touchup, Mike even licked on and around Cheri's toenails, ostensibly to be thorough, but mostly just because he wanted to. He liked the new shine his licking had given them. It was like some kind of visual proof of a job well done...not to mention just plain fun.\n\nWeakly, Cheri raised her arm and looked at her watch. She was curious how long Mike had been worshipping her foot. Her eyes grew wide and her jaw dropped. It was almost 6:30 PM! That meant that Mike had been licking her foot for well over an hour! She jiggled her arm, shaking the watch, as if something inside it must not be working right. But all was working just fine. \n\nShe looked down at Mike, incredulous. She intended to tell him about the time, but when she finally focused on his face, she put her hand to her mouth, forcing back yet another giggle. The tip of Mike's nose, and his face from his mouth to his chin, plus a good portion of both cheeks, was smeared and stained with the sticky ice cream mixture he'd licked off her foot. His beard and mustache were crusted with it, the short, stiff hairs splayed out in all directions. It appeared the sweet dessert hadn't been licked off Cheri's foot at all, but rather had abandoned it in favor of a new home on Mike's happy face. He was a comical sight to behold.\n\nBut he was grinning from ear to ear...and beaming with pride.\n\nThat grin, his ice cream smeared face, and just knowing what he'd done for her neglected foot, all caught up to Cheri. Her body suddenly grew hot. Her heart thudded against her ribcage like a prisoner pounding on the bars of his prison. She quivered from head to toe. But this time, the majority of the quivering, the moisture, and the intense heat...was directly between her legs. She put her feet, one licked clean, the other still coated in sticky sweets, soles down on Mike's lap, pressed firmly against his right thigh. She clamped her legs together tightly and bit her lip hard, trying to quell the burning tide rising between her vibrating thighs. It wasn't working. She was so horny she wanted to grab Mike by the ears and ram that wonderful tongue directly into her sweet, wet honeypot. It was frustration in the extreme.\n\nMike was taken aback when Cheri ripped her foot from his hands and pressed it hard against his thigh. At first he thought he'd done something wrong. But when he saw the clenched thighs, the chewed lip and the look in her eyes he knew what was happening. He'd seen that look before, though not nearly as often as he'd have liked to. She was horny...very, VERY horny. And that made him smile...because he was horny, too. His penis was pressed so tightly against the crotch of his pants that he didn't think the denim could take the strain. At any rate, he was thrilled that his worshipping of Cheri's foot had done as much for her as it had for him.",
        "They stared at each other. Two flushed faces, two heated bodies. By now, Cheri's balled fist had found its way into her crotch, the skirt pushed firmly and deeply down between her legs. Her face had a desperate, lost look to it. She wanted to leap up and jump Mike's tongue, but she hardly knew him. She was battling with herself, her common sense trying valiantly to fend of the raging hormones roiling between the silken folds of her drenched sex. The strain was making her flushed face redder by the second. \n\nMike wanted her badly. He knew she wanted him, too. He knew that what they had between them went beyond toe-sucking. He felt it was right, but he didn't want to scare her off. That would break his heart. He fumbled for something to say. Cheri couldn't even look at him, embarrassed by her feelings and desires. He kept trying to think of the right thing to say. Finally, he gave up, and just did the best he could.\n\n\"Cheri...thanks for letting me worship your foot...and believe me, I'd love to do the other....but...well, right now I'm... I....well.....I'm really a nice guy. But I'm horny as hell. I mean, really, REALLY horny. I should probably let you go..take you back to your car....but I...I'm sorry, but I want you so bad right now.\"\n\n\"Mike,\" she stammered, fist still firmly pressed between her legs, \"I'm horny, too. I mean, I'm like....well, you get the idea. I keep wondering...what it would be like...I....oh, shit!\"\n\n\"Cheri, look....what would be the harm? I mean...if we....you know....I think it would be incredible!\"\n\n\"Oh, damn, Mike....why'd your mouth have to be so good? I'm not like this...I don't just....oh, fuck it...how far away do you live from here?\"\n\nMike's eyes got as round and huge as ping pong balls. His mouth dropped open. But he forced himself to speak. \"We could be there in less than ten minutes,\" he said, crossing his fingers covertly on the steering wheel.\n\nCheri bit her lip again. She heaved a great sigh and came to a decision.\n\n\"Drive,\" she said.\n\nMike's eyeballs were sweating as he drove to his apartment. He had a screaming woodie that tapped insistently on the inside of his zipper...a Morse code of lust. The tightness of his pants against his crotch was pressing into his testicles so hard that he thought they might try to escape into his abdominal cavity. Trying to drive responsibly despite his raging hormones, he licked sticky ice cream and fudge remnants from his mustache, relishing them all the more because of where they'd come from.\n\nCheri sat quietly, her feet still firmly entrenched in Mike's lap, trying to quell the rising tide of lust, and resolve her own internal battle. She saw Mike as a really cute, sexy guy...and quite the accomplished foot worshipper. And every time she pictured that attentive tongue peeking from between her toes or his rather insistent mouth sucking a toe into it, she had to again press her balled fists into her groin. She took constant deep breaths and continuously blew air from between her lips in frustrated sighs.\n\nMike was as good as his word. He reached his apartment in seven minutes flat. It wasn't all that far from the theater, after all, so even if he weren't drooling with lust he could've gotten there just as fast. He pulled into a long, curved driveway, which circled around the back of the tall, two-story building. When he stopped the car, he still had a firm grip on the wheel. He was breathing deeply, trying to control himself, maintain his composure. He'd had his share of sexual encounters before, but not with someone like Cheri...not only a sexy woman, but one who relished the idea of having her feet pampered and worshipped. That alone set her way above any of the other women he'd brought back to his apartment.\n\n\"Well,\" he sighed, \"we're here.\" He turned to look at Cheri. She was still biting her lip. She looked back at him. \"You sure you want to go through with this, Cheri? I'll understand if you change your mind.\"\n\n\"Mike..you're fantastic, but...I don't know. I mean...I hardly know you. Actually, I don't know you much at all...just what we briefly talked about at the Burger Barn. That's really it.\"\n\n\"Oh, I see...\" he said, a hint of defeat in his voice, \"Well, I understand. It's okay. Really...no problem. It's been wonderful just getting to know you. And your feet....wow....incredible. Thank you for letting me...get to know them.\" He smiled a smile he hoped would reassure her.\n\n\"Okay, let's just hold on here,\" Cheri said through clenched teeth. \"Mike, I really like you....and right now I'm so turned on I could hump the Dallas Cowboys, including the coaches and water boys! But we need some boundaries here. I mean, I can't just...you know...let you jump me...just because you sucked my toes so...really.. really....REALLY....wonderfully\" She sighed, and her fists again slammed between her legs. Mike noticed and smiled wistfully.\n\n\"Should I drive you back to your car?\" he asked.\n\n\"Yes...NO! I mean...oh, I don't know what I mean. I keep thinking about your mouth all over my feet, and that's keeping me horny as hell. I don't know what to do.\" She looked at him with pleading eyes. It seemed as though she just wanted some reassurance from him...or from anyone willing to give it.\n\n\"Cheri, I swear...I'm not the kind of guy who sleeps around. In fact, I hate to admit this, but I RARELY get lucky, though I do have the occasional triumph...every decade or so.\" He laughed, still trying to ease her doubts.\n\nShe smiled, but her hands were still firmly in place a few inches below the clasp of her skirt. \"Oh, God,\" she said, closing her eyes and pressing the back of her head against the passenger door window. \"If only that mouth of yours hadn't gotten me so damn hot. Ohhh....every time I think of it.\"\n\nMike made a joke, hoping to lighten things up a bit. \"Well,\" he said, pouting, \"I see it's only my mouth you want. The rest of me means nothing to you, huh?\" The pout turned quickly into a smile. Cheri pulled her head away from the window and looked at him intently. She seemed to be scanning him at first, but then her eyes locked in on his face...and then his mouth. She stared at his mouth, licking her lips the whole time. \n\nA plan struck Mike. He'd put two and two together. Cheri had been talking about his mouth the whole time. She didn't once mention his hands or how he might hold her or caress her body. Nor did she mention copulation in any way. Her only sexual comments she'd made since they'd been in his car all concerned his mouth and how much it had turned her on. He wondered if that could be the link, the way to her heart. He put his plan into action.\n\n\"Uh...Cheri...how about this idea?\" He hesitated, waiting for Cheri to take her eyes off his mouth and raise them up to his eyes. \"I don't want to be gross or sound...well...indelicate...but you keep talking about my mouth and tongue. You seem to like them quite a bit.\" He waited for her to answer, trying to give her an understanding look, and not a lecherous leer.\n\n\"Oh, Mike,\" she sighed, looking back down at his mouth, \"you have a wonderful, wonderful mouth. So...sooooo, talented. It makes me wonder...\"\n\n\"Wonder what?\" he interrupted, sure now that he was onto something.\n\nBefore she could catch herself, Cheri almost moaned the words, \"It makes me wonder what that mouth could do.....\" The thought trailed off into a smile. Her eyes glistened at first, then glazed...then shut. She rammed her fists between her thighs again and sighed. Smiling, her mind drifted off into fantasy. With her eyes shut, she sighed and licked her lips, leaning once again against the door. \n\nAt first Mike was content to watch her chest fall and rise, and listen to her sighs. But then he knew what he had to do. He knew that it was his lips and tongue that had put Cheri into this state, and he felt it was his responsibility to make things right. This was one of those rare times when doing one's honor bound duty would also make him as happy and horny as hell!\n\n\"Cheri,\" he said, tiptoeing on fragile ice, \"there IS a way...I mean...if you don't want to actually have sex, per se... I mean, I know it would actually be sex, but not....you know...well, none of my sex organs actually involved.\" He fumbled for the right way to say it without being offensive. Cheri opened her eyes and looked at him as if he'd just gained a third eye. She laughed.\n\n\"What on earth are you trying to say, Mike?\"\n\n\"Well....\" he scratched his head. \"you seem to really, REALLY like my mouth. I mean, you've mentioned it a dozen times between the theater and here, and several times just now. It just seems...well, you seem curious as to how my mouth might perform on other things besides feet. Um...am I right about that, or should I just accept that I'm having hallucinations? And if you want me to shut up, just say so. I don't want to skeeve you out or anything.\" He tried to smile, but because he was nervous about touching on new ground, his smile was crooked and twitching. He thought he might look like an ice cream faced lunatic.\n\nCheri laughed nervously, biting her lip, squirming in her seat. \"You caught that, did you? I guess I'm just the obvious type...can't keep my mouth shut. I guess sometimes I just fantasize out loud and don't even know it.\"\n\n\"So?\" Mike replied calmly and quietly, \"Nothing wrong with that. You like what you like. That's a good thing.\"\n\n\"That still doesn't tell me what you were just mumbling about, Mike...what you were trying to say.\" In reality, she was being coyly deceptive. She knew damn well what he was trying to say - and she was thrilled he'd even bring it up - but was not about to let him know his thoughts were mirroring her own.\n\nMike sighed, finding the courage and strength to somewhat accurately verbalize what his addled brain was trying to get his babbling mouth to come right out and say all along. He felt he had nothing to lose. He felt he knew Cheri, and didn't think she would get upset enough to tell him to get lost at this point. She was obviously open-minded, and she seemed to like him. So, he went for it. He said precisely what was on his mind.\n\n\"Cheri...you're in a real state here. And it's really my fault. Yes, YOU asked ME to rub your feet, but I took it from there. It's my fault you're all...well...horny, right now. So, I thought maybe there was something I could do for you. Something that...involves my mouth...since you like it so much.\" He paused to let that sink in. Cheri looked at him blandly at first, but then her eyes widened and her jaw dropped. It really was true, after all.\n\n\"Oh my God, Mike...are you saying...? I mean...you don't mean what I think you do, do you?\" What seemed like possible shocked protest, was actually Cheri's brain digesting the information it was just given...however staggered and mumbling it was. She was taking in the enormity of what was about to be discussed...and possibly even performed. And she did not do so with disappointment.\n\n\"Look, Cheri, this is killing me..seeing you like this. I know I can make you feel really good, if you'll give me the chance. I don't mean to brag, but...well....my tongue IS my best feature. You know how long it can go, how thorough it can be. I just thought...well, you liked it so much on your foot, so...maybe I could use it somewhere else for you? That way you'd get some satisfaction and not have to worry about my...\" he blushed, \"my penis. It's just a thought...an offer..so please don't be upset. And trust me...I'll shut up if you want me to.\"\n\n\"I don't believe it,\" she said, a telltale gleam growing ever brighter in her eyes. \"You're actually offering to....You're not serious!\"\n\nHe thought he'd offended her, and rushed to remedy things. \"No...I'm sorry...I just thought...Well, yes, that's what I was offering, but...like I said, if you don't want to... I just hate seeing you go home all frustrated like this.\"\n\nCheri had her hand over her mouth, chuckling into it...but it was a wicked chuckle, like a woman who couldn't believe her luck. Mike was actually offering to do the very thing she'd been fantasizing about since she first felt his tongue on her feet. He was offering to lick her \"someplace else\", to help her have an orgasm. She was instantly dripping wet, and her body shivered. She felt like she couldn't breathe. She fought for control.\n\n\"Mike, are you offering to....oh my God...to lick me? I mean, you know...like, sexually?\"\n\n\"Sure,\" he said, smiling, \"why not? I know it's actually sex, but it's not like sex sex...you know, sex organs meeting sex organs.\" He laughed. \"Guess I'm not making sense again.\"\n\n\"Well, you kind of are. But, Mike, what would be in it for you? I mean, wouldn't you get horny, too? That's if you aren't already? Wouldn't you want to jump me? And wouldn't that defeat the whole purpose of the oral sex in the first place?\"\n\n\"Well, I'm not doing this TOTALLY unselfishly. I admit, I love to taste more than just toes. And, yes, it IS a turn on for me. But I would never try to take advantage of the situation. I mean, if I wanted to do that, I would've already tried...given your current condition and all.\"\n\n\"But, then, I repeat...what's in it for you, Mike? What do you get out of it, besides just enjoying doing it?\"\n\n\"Well,\" he blushed, \"promise not to laugh?\"\n\n\"Of course. Well, I'll TRY not to.\" She smiled, still fidgeting...in fact, maybe even fidgeting just a bit more.\n\n\"Okay, then...I not only enjoy giving a woman oral pleasure, but I can even have an orgasm from doing it. It's that much of a turn on for me.\"\n\nCheri's eyes showed a mixture of incredulity and distrust. She couldn't believe such a man existed. \"You're kidding, right? I mean, men like you don't actually exist, do they? Are you really trying to get into my pants, Mike? It's okay...you can admit it if you are. I'll admire your ingenuity, if nothing else.\"\n\n\"I swear, Cheri...I love giving a woman oral pleasure. I just....do.\" \n\nWhat little heat had left her burning body was quickly returning. The wet itch between her legs was increasing. She'd always loved a good, active tongue between her legs, and from what had happened on her feet earlier, she just knew Mike's tongue would give a fantastic accounting of itself if she allowed it into her steaming honeypot.\n\nMike was beginning to look sexier and sexier to her. He had an innocent, little boy look on his face, but underneath that innocent look lurked a man's desire to spread her legs and lick her until she exploded. And, oh, wouldn't that feel sooooo good right now? The whole idea was unbelievably tempting...more tempting even than wanting him to worship her feet in the theater. \n\nEvery part of Cheri seemed to ache and itch and tingle at the same time. Her eyesight was getting hazy again. She was at once weak and full of energy. She squirmed. She licked her lips again and again. She looked at Mike's still ice cream sticky mustache and pictured it between her legs. She fantasized his willing head bobbing as his formidable tongue licked up and down, in and out, around and around.\n\n\"Mike,\" she said, trying with every ounce of strength she had to keep her voice calm and even, \"you promise....no dick attacks, right? I like you...but not THAT much...yet.\"\n\n\"Not a one..unless you want me to. Scout's honor.\"\n\n\"You're just going to nuzzle my....honeypot...for me, right? That's the deal?\"\n\n\"Absolutely.\" Hope, previously a tiny, sputtering ember, started to grow into a raging inferno in his brain. That fire crawled along nerve endings in a mad race to reach the Morse code tapping still going on behind his zipper.\n\n\"Wow...this is too much. First, my feet...now my..... Oh, myyyyyyy....\"\n\n\"Shall we?\" Mike asked, nodding his head toward his apartment door.\n\n\"Oh, what the hell...\" Cheri replied, her head swimming. If he tried to fuck her, she could always do that testicle rearranging maneuver on him with a good kick between his legs. That would surely put an end to any attempts at pussy-poking right quick. Although...she mused...maybe at some later date...somewhere down the road...\n\n\"Mmm...you won't be disappointed, I promise,\" he said. His eyes were lit like two lighthouse beacons, shining their glee...and desire.\n\nAs he opened his door, he turned to her and told her to stay put for a second. Then he got out and went to the door of his apartment, unlocking it, swinging it open wide. He came back to the car and opened her door. When she tried to get out, he stopped her.\n\n\"You're still barefoot, Cheri.\"\n\nShe bent to put her shoes back on, but he stopped her. \"No,\" he said, \"your right foot is still sticky with dried ice cream. Leave your shoes in the car. I'll get them for you in a minute. I'm going to carry you inside first.\"\n\n\"What? Oh, please...you're joking, aren't you? You can't be serious.\"\n\n\"I'm very serious. I'm going to carry you inside. I'm going to bring you into the living room and sit you on the sofa with pillows all around you like a pampered queen. Then I'm going to come back and lock up the car. And when I come back inside, I'll be your personal body servant. I still have one sticky foot to kiss and lick and suck. And that will be just a warm-up for my mouth. After I've gotten that sexy foot as squeaky clean as the other one is, I'll slowly kiss, lick and nibble my way up your leg...my hot breath tickling your skin as I move inch by inch up your calf...your thigh...and end up right where you want me. I'll slip my hands up under your skirt and gently glide your panties down your legs. And when I get them completely off you, I'm going to put my hands on your inner thighs and gently pry your legs apart...to make room for my head...and the tongue you love so much. Then I'm going to kneel down between your legs and get as comfortable as I can...because I want to take my time and really savor you...drive you crazy....make you sigh and squirm. I'm willing to bet I can make you feel very, very satisfied...and myself too. If you'll let me, that is. You still willing to do this?\" He looked at her yet again with those cute, puppyish eyes. He seemed so eager to please her. How could she refuse that pleading face? And, after all, wasn't this all exactly what she'd fantasized in the theater...not to mention a dozen times during their drive to and from the Burger Barn? When would she ever get another offer like this?\n\nCheri was glassy eyed...too excited to speak. She just nodded. Beside himself with glee, Mike picked her up from the car seat and carried her inside. He placed her on his sofa, exactly as he said he was going to. He sat her at one end, stretching her legs out comfortably, putting her at a slight angle so her feet could dangle over the edge of the sofa. After surrounding her with plush pillows, he went back out and closed up the car. When he came back, he held her shoes up to show her they were okay, then set them down gently next to an end table. On top of her shoes he placed her somewhat crumpled thigh highs, smiling as he did. When he walked over to her on the sofa she was breathlessly snuggling herself into the sofa and pillows, as she had done in the car when he'd tasted her sticky sweet foot. She did indeed look like spoiled, pampered royalty. A wide grin crept onto her expectant face, and seemed to become frozen there.\n\nMike got down on his knees at Cheri's feet. He grinned at her. \"And now, my delicious Foot Goddess, we begin.\" He slowly raised her still dessert covered foot and looked at it closely. Every inch was still covered with ice cream and fudge...all of it dried and caked and sticky.\n\n\"You'll get it as ice cream free as this one?\" Cheri kidded, holding up her other foot.\n\n\"Yes, ma'am...every bit as clean. And then, with your permission, I'll lick upward...to another delicious prize.\"\n\n\"Oh, kind sir...you definitely have my permission. I just don't know how long I can hold out before I explode.\"",
        "\"Explode as many times as you like,\" Mike said, \"I'll still be here. You can count on that.\"\n\n\"Oh, myyy.....\" she sighed, \"Really? I can have as many orgasms as I like, and you'll stay right there and keep giving them to me? Sounds like boasting to me,\" she laughed.\n\n\"Cheri,\" he replied, looking very serious, \"I'm going to try my best to make you as happy and satisfied as I possibly can...and my dick won't even come out of my pants. I really love doing what I'm about to do for you, and I'll be happy to take my time, and work hard to see if I can make you explode over and over again. And I'll just keep at it until either you BEG me to stop, or until I pass out from exhaustion. So...if you'll allow me, I'll begin with this still sticky foot here...and I won't stop licking until I'm all the way up there.\" He pointed at her skirt, where her balled fists were once again pressing it between her legs.\n\nGently massaging her calf, he tilted his head to the side and smiled. \"Should I begin?\" he asked.\n\nCheri could only nod.\n\nGrinning, Mike looked down at the multicolored foot. Then, with a soft sigh, he got his mouth busy. As he savored that luscious foot, he stared directly up Cheri's legs, looking up her skirt...leering at her...making obvious eye contact. He made a point of staring directly between her thighs as his tongue licked suggestively along the side of her foot and between her toes. Cheri was already dripping and sighing long before a single sticky toe entered his mouth.\n\nEverything Mike did the first time around on her first foot, he duplicated for her second pretty ped. But, this time, he made sure he maintained eye contact. He teased more, deliberately trying to drive her insane. His reasoning was that if his wild, out of control slurping of her foot turned her on so much, then this calculated erotic teasing should make her so hot she'd grab his head at some point and shove it between her legs....and that was a place he definitely wanted to be.\n\nCheri's eyes were riveted on Mike. She wanted to close them, but she just couldn't. His eyes glinted with pure, erotic glee as they drilled directly into her own, making the very idea of looking away or shutting her fluttering lids a complete impossibility. All she could do was stare as his mouth did wondrous things all over her foot.\n\nWhenever he licked anywhere on her foot, he first grinned at her, then slowly brought his tongue to bear on the desired spot. He licked so slowly that a complete trip from heel to toes took many delicious seconds. When he licked between her toes, he'd first kiss every inch of the toe, then lick from the base to tip with just the very tip of his tongue. Just licking a single toe took several minutes. He tried massaging the sole of her foot with his flattened tongue, moving it in wide circles, then smaller ones. As she watched his head moving around and around, his eyes still bored into hers, and the warmth of his tongue started that wonderful prickling electricity up her legs and between them.\n\nStill mesmerized by Mike's foot worship prowess, Cheri's chest began to heave when he started nibbling her toes. He put her first three toes into his mouth and lightly chewed them, working his teeth gently into the toe flesh, moving them around in his mouth with his teeth. Her toes trapped in the warm cavern of his mouth increased the electric charge centered in her honeypot. Much more of this, and she wouldn't be able to say no to him licking her pussy. In fact, she'd strangle him if he DIDN'T eat it!\n\n\nAfter chewing the last two toes, he licked and slurped up the now liquefied ice cream from all her toes, making sure Cheri could see every exaggerated movement of his mouth on them. Then he did as before, licking her foot completely, even along the edges and tips of her blue toenails. Cheri nearly had to ball her fists in her crotch again as she watched his head move back and forth with his tongue gliding along the tips of her nails.\n\nHis oral servicing of this foot took longer than the first time...because he was purposely being erotic about it. He was much more in control of himself this second time around, despite the erection that throbbed in his pants. He even made comments as he worshipped her foot. Comments like, \"Mmmm...this toe looks so tasty. I simply must suck it\", or....\"Such a sweet sole. I hope you don't mind if I lick it all night,\" or....\"God, Cheri, you have the sexiest feet I've ever seen. Thank you for letting me worship them,\" all made her squirm and moisten. Oh, yeah, she was definitely letting him get between her legs. And after all this sexual torture, if he even THOUGHT about backing out on his other oral commitments...he was DEFINITELY dead meat!!\n\nMike finished by working his way slowly and softly along her instep, licking up every last drop of ice cream and syrup. The last parts of her foot he tasted were her heel and ankles. He sucked them all, then licked them dry. When he was done, he held her foot up in front of him, proudly displaying his thoroughness to Cheri's hazy eyes. She wanted to tell him what a nice job he'd done, but her mouth felt numb, dry as a desert. And she didn't want to waste her breath trying to speak. It was hard enough to breathe as it was.\n\nBefore she knew it, Mike was kissing the lower part of her calf. The tingling moved from her toes to her calves, following the path of his hot, sexy lips.. As she watched, he lifted her other leg and alternated back and forth, kissing one calf then the other....back and forth...back and forth, each kiss a little higher up her calf than the last. She barely noticed his slow progress up her calves...at least not consciously. But, subconsciously, her body was responding to every kiss and nibble. Each one made her heart pound harder, beat faster. Each made the wetness just below her navel become more pronounced. Each made her want more.\n\nBefore she knew it, Mike's leering face was halfway up her thighs, licking and kissing her inner thighs with a definite purpose, a sweet goal. His eyes still held hers, even when his lips sucked at the soft flesh of her thighs, roaming ever upward. The trembling of her body was almost visible now.\n\nTime seemed to stand still, but yet that stimulating mouth inched ever closer to her slickened honeypot. Mike was all eyes, lips and tongue, all of them advancing on her erotic portal. When his soft lips had reached the hem of her skirt, she knew damn well she wasn't going to be able to resist him if he went further. She had no desire to resist him. What that talented mouth offered was something she'd been wanting since he first kissed her feet in the theater. \n\nMike's hands gently pushed her skirt up, exposing more thigh to his lips and tongue. Cheri gasped as she saw the skirt hiked all the way up to her hips, and even further, exposing her soft, cotton panties. Mike saw the wet spot and smiled. Cheri knew in an instant what he was smiling at, but didn't care. She was too erotically charged to even think about that wet spot. With any luck, those panties would be history in a second anyway.\n\nMike ended any doubts Cheri might have had about wanting her pussy devoured when he pushed her legs back and leaned into her, his tongue licking the juncture where her thighs met her carpeted mound. Each slow lick drained any resistance from her mind and body. She just sighed and surrendered. She couldn't have stopped him now if she'd wanted to.\n\nAs she looked down at him, her legs up and slightly spread apart, he kissed the wet spot on her panties, then pulled his head back to look deeply and meaningfully into her eyes. Cheri couldn't quite figure out what was going on behind those eyes, but whatever it was, she wanted to experience it. When Mike spoke, she was already lost in fantasy of what was to come, and it startled her.\n\n\"Last chance,\" he said softly. \"It's now or never. Do I go on...or do I stop here, Cheri? Your call.\"\n\nCheri laughed a low, quiet laugh. She didn't have the power to resist him, and she was sure he knew it as well as she did. She tried to speak, but when she could only muster a sigh, she gave up. Staring into his warm, playful eyes, she smiled softly. Saying nothing, she lifted her hips off the sofa, knowing he'd understand.\n\nWith a smile, Mike reached up and grasped her panties at her hips. He slowly lowered them, inch by inch, over her buttocks, down her thighs, along her calves, and over her feet. Away they went, no longer keeping her delicate flower hidden from his searching eyes...and hungry mouth.\n\nMike grabbed Cheri's hips and pulled her forward, to the edge of the sofa. Then he spread her legs wide, slowly, revealing her secret treasure. Cheri put one leg on the back of the sofa, the other she stretched out to her side, her bare foot bracing it on the floor. With her bottom near the edge of the sofa, her glistening, tufted slit was revealed for Mike's approving eyes to adore. He instantly got as hard as titanium, the vessels of his shaft throbbing with every beat of his heart.\n\nAs if her lifting her hips wasn't enough of a green light, Cheri, moaning and sighing, reached for Mike's head. Her splayed, grasping fingers wanted to feel his head held firmly, inescapably, by them...wanted to guide that head between her legs, put his lips where she needed them most. Mike was only too willing. He leaned forward so her hands could have their wish. As soon as he did, he felt his head locked in their grasp, his face being pulled down between her sweating thighs.\n\nThe scent of her lubricating love juices became stronger as his nostrils neared their source. His mind swam with lust and animal desire as his lips approached that soft, pink reward. Cheri pulled those lips down...down into her soft, moist sex. As he'd done earlier in the car with Cheri's foot, Mike lost control. With his head reeling, he plunged his face and lips into her flower and kissed it madly, panting and sighing loudly as his lips explored it so, so thoroughly.\n\nFinally, they'd both gotten exactly what they'd hoped for. Mike's happy mouth began exploring Cheri's equally ecstatic pussy lips and the soft folds they protected. For the third time that day, Mike's hungry mouth was devouring a part of Cheri, but this time the object he feasted upon was more satisfying than ever....for both of them.\n\nCheri sunk into a deep, trancelike state as Mike's mouth explored her yearning honeypot. Although she hadn't been totally honest with herself about it, she'd not only been hoping for this all day, but she'd actually been steering Mike toward this very thing. It was part of her fantasy of being orally worshipped by a man, having him start at her feet and worship her with his hungry, adoring lips and tongue, from her playful toes all the way up to her steaming, dew-dropped petals. She'd never had a man truly worship her in this way, and her subconscious was not going to allow this opportunity to pass, no matter how much she would dispute that consciously. As soon as she first felt Mike's mouth on that first sticky foot, she knew deep in her soul that she would claim his oral talents for other pleasures. His exploring tongue between her legs was exactly what she wanted, and now that she had it, she was going to enjoy it for all it was worth.\n\nMike's state was not trancelike. What had begun as a pussy-tasting frenzy slowly evolved into a thorough, mellow savoring of Cheri's succulent sex. Once the initial passionate heat of the moment subsided enough for him to again gain control of himself, he'd made himself comfortable between her legs and began to slowly explore the folds of her pussy, his lips sucking the moist flesh, taking them into his mouth to enjoy their full flavor. His tongue roamed freely, but discreetly at first. It's initial barging was replaced by tongue-tip searching, a sojourn of discovery...finding all of Cheri's favorite, most sensitive spots. Her sighs and moans told him of his tongue's successful probings, and he committed each spot to memory for future use...if he was ever so lucky again.\n\nHis fingers spread her wide, the glistening petals opening to reveal the beautiful pathway to her molten core. Her pouting erotic portal lay openly exposed before his admiring eyes. With just the tip of his tongue, he circled again and again the very outer edge of that beckoning cavern. Cheri's fingers dug just a bit deeper into his scalp.\n\nSlowly he worked his tongue inside, licking just inside that sensitive edge. Again he circled his tongue repeatedly. Again she moaned her approval. Every so often he would remove his tongue and kiss the soft pink flesh surrounding her enticing opening. All the while he kept his fingers kneading that flesh ever so slightly, keeping her nest awash in sensation. After a few kisses had been deservedly administered to her flower, his tongue once again slithered inside her. He sent his tongue into her slowly, pushing it forward millimeter by millimeter, each time circling it within her, the stiffened tip gliding along her inner walls.\n\nCheri's opening seemed to be filled with more than just Mike's tongue. It seemed to be humming with a low but steady, tingling energy. Those multiple sparks apparently ignited synapses throughout her body, as various parts of her jerked and twitched involuntarily. Other than her hands holding his head firmly in place, the only muscles performing properly were those between her hips and her knees. She used those muscles to again raise her bottom off the sofa, trying to push her tongue filled opening more firmly against Mike's face, thereby driving that tongue deeper still. Raging hormones rushed to meet the urgings of her loins, the ensuing liquids building up in her pussy in hopes of surging into Mike's attentive mouth at some point in the very near future. Her thrusting hips pushed her sex into his face, while her clutching hands pulled his face into her burning sex. She couldn't get his tongue far enough into her, though she never for a second gave up trying.\n\nMike was in Heaven. Cheri's incredibly delicious honeypot was a treat beyond his expectations. His tongue loved every bit of soft flesh, every drop of liquid, it encountered. He stuck his tongue out as far as he could get it and licked deep inside Cheri's smoldering chasm. Her sighs were staggered and choppy. Her thighs vibrated. She squirmed. All those things made him feel incredible, knowing what he was doing to her. He sighed himself. He sucked her for all he was worth. He was trying so hard to get his tongue further and further into her, that the base of it actually started to ache. It didn't matter. Feeling her squirm and jerk more than made up for it. Tasting her deepest inner walls was worth almost anything. Any discomfort paled next to the pleasures of licking her deeply. \n\nWith her softly carpeted mound mashed against his sucking face, Mike, too, began to enter a hypnotic world. His liquefied mind was thinking about how incredible this all was...how lucky he was to be pleasing Cheri this way. He even started to think that this is what he had been searching for all these years...the perfect woman...his foot goddess...the woman who wanted his mouth working nonstop from her feet to her pleading, pouting slit. He felt like he belonged here, his tongue stretched out, his head moving tirelessly between Cheri's legs. What a totally awesome feeling it was! One that he would be disappointed to give up. One he would be devastated not to have again. He wondered if Cheri felt the same way, if she'd want him to worship her feet and pussy again...and again.\n\nCheri was nearing orgasm. She cooed, sighed, gasped, squirmed and jerked. She never wanted to let Mike's head go. She wanted to keep it right where it was for years...decades...the rest of her life. He was so incredibly patient in his oral explorations. His tongue was so sweetly attentive...sometimes playful, other times bold. And he always seemed to know which was needed at any given time. She could tell how turned on he was, how hungry for her. He was panting almost as much as she was, and she loved that eating her was such a turn on for him as well. Most men agreed to do it, though it was generally mostly a chore for them. But Mike actually seemed to be getting off on licking her. That excited her even more, sending her reeling mind careening toward ecstasy.\n\nMike knew that by now Cheri's swollen bulb must be begging for attention. After hours of having her feet licked and sucked, and now her dripping sex being likewise attended to, it had to be ripe for plundering. He took his tongue out of the warmth of her vaginal canal and quickly aimed his mouth at her clit. He put his lips around it, but did not suck. Rather, he gently licked it with just the tip of his tongue. Cheri's response was immediate. \"Oh my God!\" she gasped, as her body convulsed from her shoulders to her knees. Her toes were curled so tightly that they looked as though they were frozen that way.\n\nMike attacked her clit again, licking faster...and just a bit more insistently. Again Cheri shuddered, but she could only manage a gasping, \"Ohh....ohhhhhhh......ohhhhhhhhhhh!\" Her once spread legs wrapped around Mike's body, helping her hands hold him in place for as long as was needed. Mike continued to lap at the intense itch that irritated her sensitized nub. Cheri bucked herself furiously against his face, using it to try to scratch that infuriating itch once and for all. Mike tried to slip his fingers into her as he sucked her, but he was holding on to her ass for dear life, and moving his hands was a complete impossibility.\n\nFinally, he locked his lips tightly around her clit, sucked hard, battered it incessantly with the tip of his tongue. He let his teeth graze the area around it as he sucked and licked. Cheri had a strong muscle spasm in her thighs and the muscles of her ass clenched as tightly as those of her toes. Her fingers dug deeply into Mike's scalp, the nails thankfully stopping short of drawing blood. She moaned loudly, \"Ohhhh.....Goddddddddddd.... oh my.......Godddddddddddd......oh, Mike..........Mike..............I'm.............yes! yes! YES!!\"\n\nHer warm fluids spilled into Mike's face, protecting his skin somewhat from the grinding pubic hairs. Some he was able to quickly swallow as her gushing sex squirmed all over his face, but the rest bathed him in its sticky sweetness. He loved both. And when she came, moaning and panting, screaming and thrusting, the sheer pleasure of it all washed over Mike like the surge of a crashing waterfall. He had so enjoyed eating Cheri that he, too, had an incredible orgasm. It felt wonderful, rewarding, completely fulfilling. He would later regret the fact that he was still wearing his jeans, as the large volume of seminal fluid he'd ejaculated left a wide stain on both his underwear and his jeans. At the time, however, he didn't care even a tiny bit.\n\nMike continued to lick and suck Cheri's button as she bathed him in her fluids. She jerked and screamed throughout her bucking ride. He also continued to send spurt after spurt of his own juices into the already spreading stain on his jeans. He sighed onto her clit, gasping and bucking his hips almost in unison with hers. Any moans or gasps that escaped his lips were immediately muffled by the flesh of Cheri's thoroughly happy honeypot. \n\nWhen both male and female spurting sex organs had slowed to a trembling dribble, Mike and Cheri slumped tired and weak. Cheri sunk deeper into the sofa and pillows. Mike's face lay weakly on Cheri's soaked mound, his panting breaths causing tiny ripples in her soft curls. Both grinned like loons, though neither could see the other's face.\n\nFinally, Mike had enough energy to lift himself off Cheri's glorious treasure and roll over onto the floor next to the sofa. He lay there on his back, lungs sucking hard to get enough air into them. Then Cheri rolled over on the sofa and looked down at him. She was smiling softly, her face flushed with satisfaction...glowing with pleasure.",
        "\"Wow,\" she said softly, \"am I ever glad I allowed you to do THAT!\"\n\n\"Me too,\" Mike said, his tingling lips forming a tired smile.\n\nCheri noticed the stain on his jeans and chuckled softly, \"I guess you were, at that. Did that happen while you were sucking my toes or my pussy?\"\n\nMike laughed, too, only slightly mbarrassed. \"It was that tasty honeypot that did it, hon...no offense to your delicious toes, though.\"\n\n\"None taken. I'm happy that having your head between my legs could do as much for you as it did for me.\"\n\n\"Oh, yeah...it sure did. You are a most succulent morsel, hon. Like I said, I just love doing that for a woman. And in your case, Cheri....well....I'll do that for you anytime. You just ask and it's yours.\"\n\nCheri sat up on the sofa. She smiled down at the exhausted Mike. Still awash in sexual afterglow, she sighed and stretched. When she did she held her legs straight out, admiring once again her blue-painted toes. Mike saw her admiring her feet and chuckled.\n\n\"You really do like my feet, don't you, Mike?\" she asked him, already knowing the answer.\n\n\"I sure do, Cheri. You have the sexiest feet I've seen in a long time.\"\n\nShe blushed. \"Thank you, Mike. That's important to me.\"\n\nCheri smiled a warm, contented smile, then lowered her legs, putting her feet on Mike's chest. He reached up and started gently stroking her insteps and calves.\n\n\"Mmmm.....thanks, Mike. That's really nice.\" When he smiled, she slid the foot closest to his head up until her toes brushed his cheek. She slowly stroked the side of his face with the undersides of her toes and her sole. He closed his eyes and enjoyed that soft foot caressing his jaw and cheek. Seeing that he liked it, Cheri kept doing it, even as he kept rubbing her calves.\n\nWith his eyes closed Mike never saw the other foot join the first. Cheri started rubbing both feet all around his face, her toes kneading the skin gently. Mike sighed. Then the rubbing stopped. Cheri's feet had stopped with her soles resting across his face, one foot across his head just above his nose, the other just below it. She just rested them there, not saying a word. Mike opened his eyes, but was only able to see the sole of the foot that covered them, barely visible because it blocked out most of the light. He blinked. Cheri felt his eyelashes brush lightly against her sole and giggled. Mike waited. A couple of minutes passed.\n\nMike laughed, the warm breath from his nose and mouth washing over the foot that lay resting across his lips. \"What are you doing?\" he asked. \"Did you fall asleep up there?\"\n\n\"Nothing,\" she replied with a grin, \"just resting my feet. It's actually kinda comfy. Do you mind?\"\n\n\"No, not at all. I love your feet...and whatever makes them feel good is okay with me.\" Cheri saw the truth of his words in the puptent that was quickly reemerging in the crotch of his jeans, just alongside the large wet spot. He did indeed adore her feet. She also took a quick look at the ice cream stains on his thighs and realized that she and Mike had had an incredible day, and that it would be a shame to let such a good thing end.\n\nGently rubbing her feet across his face again, she sighed as she enjoyed the warmth of it on her cooling soles. His breath on her lower foot was particularly enjoyable. Once again, she stopped moving her feet, allowing them to rest lightly across his face. Again she sat that way for a minute, smiling as she looked at her feet resting on Mike comfortably, her shiny blue-lacquered toes beginning to wiggle with glee.\n\n\"Mike,\" she asked, sugary sweet, \"would you let me keep my feet like this for a while if I wanted to?\" She moved her upper foot slightly, sliding it up onto his nose, so that she could see his eyes as he answered.\n\n\"Yeah, Cheri,\" he said softly, \"yeah...I would.\" His eyes showed he told the truth. He wasn't just agreeing with whatever she said so he could get into her pants. But, then, she knew it was the truth, anyway. She'd come to learn a lot about Mike, and his joy at being near her feet was a given. Still, she wanted to see it in his eyes when he replied.\n\nThat reply pleased Cheri very much, and she stored it away for future reference. For the time being, though, she wanted to learn more about this man. She wanted to know what else made him tick, besides loving her feet and wanting to lick between her legs all night.\n\n\"Come here, Mike,\" she said, taking her feet off him, swinging her legs back up onto the sofa and making room for him. She patted a spot close, but not immediately next to, her. He got up and sat beside her, where she'd patted. She once more lay back into the plush pillows. Languishing there like a spoiled goddess, she sighed and put her legs up on Mike's lap. \"Mike, honey,\" she said, \"I think this thing we have going here has lots of potential. What do you think?\"\n\n\"Oh, I definitely agree,\" he said,\n\n\"So, we should pursue it?\"\n\n\"Hell, yes!\" he said, maybe a bit too enthusiastically. \"I think we'd be insane not to.\"\n\nShe smiled. Once again she snuggled deeply into the pillows and smiled at him. With a sly grin, she wiggled her toes and cooed, \"Massage my feet, and let's talk about it. Give me a really nice, firm, soothing massage, now. Really pamper my feet.\"\n\nWith a grin of his own, and further swelling between his legs, Mike started rubbing her sexy feet.\n\n\"Now tell me all about yourself, you sweet, sexy little foot boy, you.\" She grinned and sighed as he rubbed her happy feet.\n\nAs he rubbed, Mike told her all about his childhood, his life growing up, when he first realized he had a foot fetish. He told her humorous things that happened to him throughout his life and how much he disliked his current job. He told her everything he could think of that wouldn't bore her to tears. At first, she listened intently, thrilled to have not only found an adoring foot boy at last, but a cute, sweet one, too. \n\nShe wasn't sure at what point in the conversation/foot massage the revelation came to her, but it came to her with a vengeance. It came like a bright, shining beacon of no nonsense fact. THIS man....Michael....was to be her foot boy. Period. She wanted him between her toes and between her legs. As far as she was concerned, he had no say in the matter. He was her long sought after foot boy...end of story. She wasn't letting him go. She was going to keep him right where he was...at her feet...for as long as she breathed. She smiled, watching his cute mouth speak of his life before she came along. She sighed as his hands worked magic on her tired...but now quite happy...feet.\n\nThen she looked back up at his mouth. She didn't hear the words as clearly as before. She watched that mouth...that sexy, talented mouth...move with speech. She preferred it moving with more erotic purpose, but that was fine. Because, somewhere along the way...somewhere between his rubbing of her feet and her watching his attentive mouth so intently, she'd come to another decision. As matter-of-factly as she'd ever told herself anything in her entire life, Cheri now told herself something that made her wet all over again.\n\nShe told herself that before she left this man's apartment (if she left it at all), she was damn sure she was going to get his cute, sticky, mustached face back down there between her legs again, and feel that wonderful tongue busily taking care of business.\n\nShe squirmed with anticipation.\n\nEND\n\n\"Toes a la Mode (Ma Cheri)\" copyright Bacomicfan/Mike, December, 2002"
    ],
    "authorname": "Bacomicfan",
    "tags": [
        "toes",
        "tongue feet",
        "lips toes",
        "foot worship in movie theater",
        "rub kiss",
        "foot fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/toes-a-la-mode-ma-cheri"
}