{
    "title": "The Flume at Falcon Rock",
    "pages": [
        "* * *\n\n<br>A Chance Encounter:\n\nMy sister Erin glanced over as she eased her car from the arrivals curb at the Dallas-Fort Worth airport. \n\n\"So how was your flight?\"\n\nActually, it was pretty shitty, now that you ask. She had just driven over a hundred miles to pick me up so I wouldn't be tormented by a three hour wait to take the next Greyhound bus home. I knew she was just being friendly and probably didn't want to hear the details.\n\n\"It was fine. No one took the middle seat. That's always a nice surprise these days. Hey, thanks for coming to get me. You know you don't have to as long as there's still a bus leaving when I get in. You want me to drive back?\"\n\n\"No, I'm good. It's still light for a few more hours. Anyway, we'll have a chance to catch up on the way. Ed and I are delighted you came home for your birthday. It'll help take your mind off things out there. A change of scenery will be good. You know you're always welcome.\"\n\nErin is six years younger than I am. I must have been so incorrigible as a child that my mother refused to have another baby until I was safely in the first grade and out of the house for most of the day.\n\nMy plans to visit Erin and her husband Ed were made at the last minute. I had been dumped by my long-time girlfriend a few months back and was still asking myself why. Maybe I was in need of some serious self-reflection, which might happen a little more easily if I was away from my familiar surroundings.\n\nI had been looking forward to a destination party for my 50th birthday. Away from Los Angeles, up the coast near Santa Barbara. A perfect storm of excuses caused my entire inner circle of friends to decline the invitation: spousal illness, a business crisis, a family funeral, having other plans, and a cratering marriage. Oh, and the parents who decided to go to their daughter's umpteenth gymnastics meet instead of partying down with me. Since I don't have kids of my own, I guess I shouldn't judge. \n\n\"So have you figured out how you want to celebrate your birthday? Ed's out of town on a company retreat, but he'll be back in time. Check if there's any live music you want to see. And decide on a restaurant soon so we can get reservations if we need them.\n\n\"I waited to go food shopping until you got here. We finally got a Natural Grocers. They should have most of the things you say you never can get in our backwoods town.\"\n\nThat was good news. I'd definitely grown into a food crank and picky eater as my list of things I should avoid grows longer every year, but I still planned to have birthday cake and ice cream.\n\n* * *\n\nWe were pushing the cart around the store when I thought I saw one of Erin's old friends.\n\n\"Isn't that Laurie Quinn over there? At the deli counter.\"\n\n\"Oh, god. I don't want to talk to her now.\"\n\n\"Why not?\"\n\n\"She's ... weird.\"\n\n\"How so?\"\n\n\"Well, you know.\"\n\n\"No, I don't know. I thought you and Laurie and the others were inseparable when you were in college.\"\n\n\"We were. And still are mostly, except Laurie was the only one who moved out of state after graduation. She lives in Washington, D.C. \n\n\"Sometimes the things that bring people together in their childhood or at school change over time. So the friendships change. You don't hang out with everyone that you buddied around with at school, do you?\"\n\n\"I guess you're right. I probably would still be close to the old gang if I hadn't moved away. So what's she doing back here?\"\n\n\"She was engaged to this guy, but that went sideways. She'd been with him for years. Laurie's never been able to hold onto a man. We thought she'd finally broken that curse. She's here to settle her late mother's estate. The house has just been sitting there the whole time, even though the funeral was almost a year ago. I thought about calling her, but I was waiting for her to make the first move.\"\n\nLaurie began heading our way. She had on a washed-out burnt orange sweatshirt from the University of Texas, one that looked like she'd been wearing since she was a freshman. A pair of baggy brown pants and flip-flops completed her slovenly outfit. I always thought Laurie didn't do herself any favors by the way she dressed\u2014unfeminine and unfashionable. Even when she was cleaned up for a party or some grown-up event, she dressed very matronly, in things her mother would wear. I wondered if she walked around like that in D.C. Her reddish-brown hair was pinned up tightly in her trademark schoolmarm bun, severe and nary a hair out of place.\n\nOn the other hand, Laurie has a very elegant neck that's optimally displayed by that hairstyle. And her eyes\u2014she has the deepest blue eyes. What color would you call them: cobalt, indigo, lapis? I could stare at them indefinitely\u2014like other women's cleavage.\n\nI always thought she was the most attractive of Erin's friends but didn't present herself well. Laurie always seemed shy and unsure of herself, sometimes awkwardly overcompensating for this.\n\n\"My god, she's gotten a boob job!\"\n\n\"Laurie? You're kidding.\" She seemed like the most unlikely person I know to do that.\n\n\"No, look. Those two lumps in her sweatshirt were never there before.\"\n\n\"Tell you what, I'll go over and ask her: 'Laurie, Erin was saying you must have gotten a boob job.' That should clear things up.\"\n\nErin swiftly turned our cart down the next aisle so Laurie wouldn't see us. More out of loneliness than any physical attraction, I decided to go over and say hello.\n\nErin and Laurie were part of a quartet of close friends as far back as I could remember, along with Terri Unger and Fran Carver. Terri was the plainest of the bunch, but she got all the boobs that Laurie and Fran didn't\u2014and then some. I pretty much ignored all of them, but I'll admit that I had more than a few sexual thoughts about Terri once I started noticing her burgeoning bosom when she was a UT student.\n\nLaurie beamed with surprise when I called her name.\n\n\"Oh, hi, Joe. Didn't expect to see you here. Are you here with Erin? I've been meaning to call her since I got back. I'm finally dealing with cleaning out and selling my mother's house.\"\n\nShe didn't mention her failed engagement. Naturally she wondered what brought me there during the hottest part of a Texas summer.\n\n\"I decided to celebrate my 50th birthday here. The plans in L.A. didn't jell, so I thought I'd come back home and do it here. Things haven't been going well of late out there ... socially.\" \n\n\"So are you and Erin going to the free river concert tomorrow night?\"\n\n\"I hadn't heard about it. Who's playing?\"\n\nShe mentioned the name of a Western Swing revivalist band I knew was based in L.A.\n\n\"Oh, they're good. I've seen them several times. I'm sure you'll enjoy them if you like that kind of music. I'm not sure about Erin, but it sounds like fun. Maybe I'll see you there.\"\n\nI was surprised when Erin appeared with our cart. The two of them made small talk while I mulled over my birthday party options. Erin took a pass on the river concert\u2014too hot and too many mosquitos. When we got back in the car, Erin teased me about going on a date with Laurie.\n\n\"It's not a date. Maybe you could call it a hook-up\u2014if people our age are allowed to use that term.\"\n\nErin smirked. \"If I find out you've poked one of my friends, you'll never hear the end of it.\"\n\n\"So I'm supposed to be a homebody like you and not go, just to prove I'm not interested in her?\"\n\n\"No, I'm just worried that you're both on the rebound and might not exercise good judgment.\"\n\nI reminded her that the purpose of my trip wasn't to get laid, particularly by any of her friends. The conversation got into the antics of the four of them back in college. Erin was regaling me with stories about Laurie's prim attitude amidst the school's legendary debauchery.\n\n\"She would go to some of the fraternity parties, but never the toga parties. Laurie was a virgin when we started as freshmen. She didn't give it up until her sophomore year. And the guy she dated then was a complete loser. I'll bet she wished she had that as a do-over.\"\n\n\"Did she ever do any of that campus nude streaking? Or those midnight underwear runs?\"\n\n\"Laurie Quinn? Ha-hah, surely you jest. Those were even a step too far for me. I think Fran participated in one of the underwear runs\u2014or claimed she did.\"\n\n\"What about Terri Unger?\"\n\nErin shot me a dirty look and shook her head. She knew exactly why I had asked about her busty friend.\n\n\"In your dreams.\"\n\n<br>Soft Summer Nights:\n\nThe following night I decided to go to the concert, mainly to see the band; but there might also be some single women present who needed a dance partner. I hoped the slight breeze off the river would keep the mosquitos at bay, but I brought along a pump bottle of repellent to be sure. I was putting some on out in the parking lot when I heard the band strike up the first notes of \"Ida Red.\" I finished up and made my way toward the music.\n\nThe concert was in a natural amphitheater built into the side of a gentle knoll. The stage extended out into the river with a dance floor directly in front. Masons had used local limestone to create the tiers of rustic seating. Chairs and tables were set up at the top terrace where it was level, and strings of lights festooned the live oak trees. It would have been a perfect evening if it wasn't so damn humid.\n\nAbout three songs in, I noticed Laurie sitting by herself, with her hair tightly pinned up, swatting mosquitos. She stood up to greet me, but we both seemed unsure about a hug\u2014so we just shook hands. Laurie had on a fit and flare dress but wasn't wearing it confidently. Maybe she just bought it or it wasn't a style she would normally choose\u2014or both. Regardless, I was surprised to see her wearing a dress at all. I had only seen her wear ones at formal parties. It was modestly cut with the hem below the knee, cap sleeves, and a high neckline. I couldn't decide if the style was hipster retro or merely out of fashion. The pattern was unexpectedly bold, but the colors were wrong for her.\n\nI didn't really care what she was wearing since her physique was that of a perfect dance partner: several inches shorter, slender as a reed, easy to maneuver. We need to get this woman out on the dance floor at some point tonight. I offered to get her a drink. She looked like she could use one: anxious, tugging and pulling on her dress, fixated on the mosquitos. She wasn't interested in my drink offer.\n\n\"Do you have any insect repellent back in your car?\" she asked. \"These damn skeeters are eating me alive.\"\n\n\"I have some right here in my pocket.\"\n\nI gave the bottle to her, and she started to squirt it directly on her legs.\"\n\n\"Laurie, spray it into your palm first, then spread it on. You'll get more consistent coverage that way.\"\n\n\"Oh, I hadn't thought of that.\"\n\nShe was almost done when I watched a mosquito land on her back and bite her. She flinched and vainly tried to swat it away.\n\n\"Here, let me get your back.\"\n\nHer dress was cut lower in the back than I expected. The top of her bra band was visible. I wondered if she knew that.\n\n\"Laurie, I'll need to put some under the edges of your dress and bra. They love to target those tiny spots you overlook.\"\n\n\"Sure, it's OK. Just hurry, please.\"\n\nMy hands slipped under the fabric of her dress to make sure I didn't miss any exposed areas. I lifted the back of her bra so I could protect her skin there, too. It felt odd touching her like that for the first time, with my hands all over her bare skin and clothing. I was probably more uncomfortable than she was.\n\nEven though her dress had a high bodice in front, it didn't fit that snugly. When she leaned over, I could see some cleavage. Her boobs were definitely bigger than what I remembered. If we did a slow dance I might be able to tell if they were fake or real, assuming we got that close to each other. She had on an alluring scent. It was the first time I'd ever noticed her wearing perfume.\n\n\"Laurie, that's a very sensual fragrance you have on. But if it attracts men, it's going to attract mosquitos, too.\"\n\nShe got a worried look on her face. \"Did I put too much on?\"\n\nI touched her bare arm to reassure her. \"No, it's subtle but detectable.\"\n\nActually, it was a bit strong, but I didn't think it was my job to be candid about things like that. That's what friends like Erin are for.\n\nLaurie handed the bottle back to me. \"Joe, you're a lifesaver.\"\n\n\"Now can I get you a beer?\"\n\nLaurie put her hand on my shoulder to stand up. \"I'll buy you one instead. I need to thank you for saving me from the mosquitos. I was getting ready to leave early because of that, right when you walked over. Is Shiner Bock OK?\"\n\n\"Are you going to remember where we're sitting?\" She seemed a little scatterbrained.\n\n\"Oh, you think I'm going to fall in with some roughneck cowboy?\"\n\n\"Maybe. That dress you have on is very appealing.\"\n\nShe blushed and almost tripped over her own feet.\n\n\"Oh, Laurie, one other thing. When you get home, get in the shower and wash off the insect repellent. Don't go to bed with it on.\"\n\nShe nodded her head and thanked me. As she walked away, the image of a naked, wet Laurie Quinn\u2014hair pinned up, soaping off her bigger boobs\u2014caused an unexpected twitch down below.\n\n* * *\n\nWhen she returned, we engaged in some small talk while we drank our beers. I was getting restless, yearning to get out on the dance floor; but I wasn't sure about Laurie's abilities or sense of rhythm. One way to find out.\n\n\"Laurie, would you like to dance?\" She looked like I had just asked her go nude skydiving.\n\n\"Oh, thanks, but I'm no good at it. Look at what some of those couples out on the dance floor are doing. I could never jump and spin like some of those gals.\" \n\n\"I can show you some simple steps, enough to have fun. Look, I don't even have a cowboy hat on, so I'll feel odd, too. We can take it slow, start off easy.\" \n\nLaurie was right; many couples were executing some advanced moves: dips and lifts, pulls between the legs, aerials. Most seemed to be part of some dance club since they were all wearing the same orange kerchiefs. I couldn't remember what that color means in the gay hanky code.\n\nI took Laurie by the hand and led her down to the dance floor. I positioned us off to the side so we wouldn't get in the way of the show-offs.\n\n\"Why don't we just boogie to loosen up before trying partner dancing?\"\n\nShe was stiff and self-conscious\u2014no surprise there.\n\n\"Laurie, no one's watching us. They're looking at the fancy club dancers. C'mon, clap those hands, toss that head. There we go. Shake those hips, move those feet.\"\n\nWhat I also wanted to say was \"undo that hair, let it down, set it free.\" By the second song, she was starting to loosen up a little; but she was overwhelmed watching the expert dancers.\n\n\"Forget about them. We can try a few basic steps. Let's start side by side to get the timing down. The man starts off on his heel, the woman on her toes.\" \n\nSoon we'd progressed to dancing face to face. \"Here's the secret: the woman is actually providing the locomotion, not being pushed backward by the man\u2014he's just steering.\"\n\nLaurie wasn't a natural, but she was trying. \"That's good ... you're getting better ... nice. See, it's not that hard. Remember, I'm not pushing you, you're pulling me.\"\n\nOnce she had the basics down, I introduced her to a couple of simple lady twirls by having her watch how some of the other dancers were doing it. Sure, we had our share of moves that didn't work out, but that's when we laughed the most.\n\nAs her dancing improved Laurie surprised me. She revealed a playfulness matched with an infectious smile\u2014a combination I'd never noticed before. After another song or two, we were working pretty well together. We were able to stop thinking about the mechanics and start feeding off each other's energy and charisma. Subtle but inescapable sexual undertones grew as we got in sync. I wasn't sure how I felt about that.\n\nLaurie's enthusiasm, however, was getting out ahead of her abilities. She wanted us to try some of the more advanced techniques.\n\n\"Laurie, you should never do moves like that with someone you don't know. Even if you've seen him do them well with another partner. For starters, the man's hands often need to touch some unexpected places to make the move work. Keep in mind this is as much about acrobatics as it is dancing. To get that good you need lots of practice with a partner, ideally on a gym mat with a friend to spot you.\n\n\"What about what they just did?\"\n\nLaurie had eyed a couple performing a Cinderella lift. Somewhat against my better judgment I agreed to show her how to do it.\n\n\"Let's start with my picking you up on cue without circling around. You need to get used to being touched in different places. Now the key to this is how you place your forearms above mine so they act as a brace when I lift you. Start by putting your hands on my waist. Now when I lift you, I'll have my forearms under yours to provide support for your body.\"\n\nI demonstrated how this would work and gave her the count-off that cues the lift. We did a few repetitions in place without my pivoting. I wanted to make sure I was strong enough to lift her and she was focused enough to get off the ground safely.\n\n\"Alright, I think you're ready for the twirl. As I lift you I'm going to pivot in place and do a 360 degree turn then set you down. Do you remember when Prince Charming was dancing with Cinderella at the ball, and he lifts her up and pivots around? That's what we're doing. Relax below your waist and let your legs fly out during the turn. Let's pivot without the lift to make sure we both understand the count. And we need to be aware of our position next to other dancers when we do a move like this.\"\n\nLaurie was a little clumsy at first. She wanted to try again; and after a few more attempts, she started getting it. I felt she was ready for the full version. Up she went, her legs swinging out as I pivoted around. Laurie was as giddy as a child on her first merry-go-round ride. We did it two more times but stopped there since I was getting worn out from all that lifting.\n\n\"Good work, Laurie. You're a quick learner. And you should be after all those dancing classes I drove the four of you to every week.\"\n\nThat was a chore my parents laid on me. Driving a quartet of giggly girls to and from their dancing class. It was a condition of getting my unrestricted driver's license, which I desperately needed to stop having my Mom or Dad drive the car when I dated.\n\n\"Ah, I remember those dance classes,\" she said. \"It was the only time I was allowed to get close to boys at that age. Pre-teen is an odd time for girls. Some were growing up sooner than others.\"\n\n\"Like Terri Unger?\"\n\nAs soon as those words left my lips, I wanted to take them back. Laurie had the wry grin of a woman who remembered what it was like to spend her early pubescence in the shadow of a bustier friend.\n\n\"So you noticed, too?\" she said in an accusing tone.\n\nLaurie, the boys at the blind school noticed.\n\nOur awkward conversation was interrupted by the twin fiddle intro of \"Faded Love\"\u2014the first slow song since we started dancing.\n\nThere's always that moment of uncertainty when the first slow dance starts up. There shouldn't be any hard feelings if one's partner wants to take a break, sit down and rest. Or maybe the woman wouldn't be ready for the closeness a slow dance involves. Surely a guy wouldn't be offended by that, particularly if it's the first time she's danced with him, and especially if they don't know each other. That's understandable. And frankly, the woman just may not be that eager to press her body up against some sweaty oaf, whether she knows him or not.\n\nLaurie had a sheen of perspiration and was breathing hard; but she surprised me when she gracefully guided me into position for the slow dance: our hands clasped and raised on one side, a few discreet inches between us, her other hand on my shoulder, mine on her lower back.",
        "She eased a little closer, and our cheeks grazed. Seconds later her hand moved down from my shoulder, slipped around my waist, and drew my body against hers. She repositioned my left hand next to my other one, behind her back and just above her hips. Laurie looked up at me and smiled, placed her arms around my neck, and nestled her face against mine with a barely audible sigh. Heat was radiating off her skin.\n\nI felt her body mold to mine. Her breasts felt very natural as they flattened against my chest. Our waists and thighs pressed together with just enough freedom below the knees to slowly glide around the dance floor. Laurie's perfume crept into my nostrils as she let her body soften even more, melding to mine in a way that was unavoidably intimate. I struggled to keep my erection from crashing the party. The lyrics from that Sinatra song about a very good year floated through my head: \"Small town girls on soft summer nights.\" But I certainly wasn't seventeen, not by a long shot.\n\nAt the end, Laurie gave me a little hug and lifted her head. Her unusual indigo eyes stared into my run-of-the-mill light blue eyes. An enigmatic smile crossed her face as her fingertips lightly touched my cheek.\n\n\"Thank-you, Joe. That felt nice. Very natural.\"\n\nLaurie and I had another round of beers and talked some more. More fast dancing and some more slow dancing. We both seemed to be nourished by the feel of one's body against another's. We were sitting together closer than before, with our adjacent knees gently touching, when I asked her if there were any new restaurants in town I should know about.\n\nShe mentioned several, but I was hoping to hear about some healthier breakfast choices.\n\n\"So you're not an Egg McMuffin person? Let me think. Oh, did you ever eat at the Whispering Pines Caf\u00e9, about ten miles outside of town?\"\n\n\"Yeah, I had a summer job took that took me out there, usually every week. I thought that place was all heart attack food.\"\n\n\"They still have that,\" she explained, \"But the owners retired, and their two daughters took over. One went to culinary school and was a chef in Dallas. The other one handles the front of the house. There's been a noticeable upgrade in their quality and selection.\"\n\n\"Well, thanks for the tip. I'll have to check it out while I'm here.\" I noticed an involuntary flinch of disappointment cross her face. I quickly corrected myself and squeezed her hand. \"Hey, why don't we check it out together?\"\n\nHer face brightened. Did I just ask her out on a date? Did I mean to do that? Well, breakfast is no biggie, right? I asked if we could go the next morning.\n\n\"No, it's way too busy there on the weekends. We can do it next week. How about Tuesday? Can you pick me up around 7:45? By the time we arrive the ranchers and farmers should be clearing out, but we might miss out on the homemade biscuits.\n\n\"I'm staying at my mother's old house. Do you remember where that is? I know it's been awhile since you chauffeured us to our dance classes. Erin can tell you if you don't.\"\n\nIt was time to go, so I offered to walk her to her car. It was her mother's ancient but well-preserved Ford Crown Victoria in a predictably bland color. I took both her hands in mine, unsure of what level of parting affection was appropriate after our slow dancing.\n\n\"Laurie, I'll see you Tuesday morning.\"\n\nI pulled her in for a hug, but she landed an awkward kiss on my cheek that was supposed to be on the lips. She blushed as red as the flowers on her dress and almost seemed ready to cry. I quickly tried to diffuse her embarrassment, caressing her face and apologizing.\n\n\"Laurie, that was my fault. I missed my cue. We need a do-over.\" I kissed her gently on the mouth. \"Better?\"\n\nShe nodded and smiled. A smile with a glimmer of guilt, like a child asking for another cookie.\n\n\"Then I get a do-over, too.\"\n\nHer kiss was lightly sensual. No tongue, but there probably would be the next time. Why was I thinking about a next time? That was just a friendly good-night kiss, wasn't it?\n\nShe opened the car door and gave me a final hug.\n\n\"That's the most fun I've had in a long time. Thanks for the dance lessons. You have a lot of patience.\"\n\nI watched her massive vehicle crunch across the gravel parking lot, wondering where this was all headed. My first date ever with one of Erin's friends. Why did I suddenly feel like a teenager again?\n\n<br>Just a Breakfast Date?\n\nThe drive over to Laurie's place allowed me some time to think. Was this a real date or merely a couple of folks that have known each other a long time being friendly to each other? When I pulled up to her old house I noticed multiple signs of neglect.\n\nAs I stepped inside, Laurie's \"hello\" kiss felt natural and unforced. I could see numerous pink spots where mosquitos had feasted on her exposed skin, but none of that floored me as much as what she was wearing. Laurie's outfit seemed uncharacteristically fashionable: white linen culottes, a soft blue linen blouse with the sleeves rolled up, and cute wedge sandals. I could see the faint outline of her bra. The shirt's Henley collar exposed her elegant neck to great effect since her hair was pinned up tightly\u2014as usual.\n\nHonestly, I would have been less surprised if she had opened the door dressed like Catwoman. When I touched her shoulder and complimented her on her clothes, I detected a twitch of triumph. I also detected the tell-tale scent of sizing, indicating the clothes were brand-new; but anyone who knew Laurie would have already assumed as much when they saw her dressed like that.\n\nShe ushered me through the house toward the back where her car was parked. \n\n\"Sorry the place is messy.\"\n\nI'll say. Boxes and trash everywhere, vacuum cleaner in the middle of the living room, family photos covering the dining room table\u2014just for starters. Her late mother's place was in the sad condition of a typical estate house, just like my parents' was when they passed. Nothing had changed for decades. Ancient appliances and worn vinyl flooring in the kitchen. The carpets and drapes needed cleaning. Knickknacks cluttered every flat surface. The furniture probably hadn't been moved since the day it was brought in.\n\nLaurie pressed the button to raise the garage door. \"I'll drive. You may not want to be the captain of an old granny car like the Crown Vic.\"\n\n* * *\n\nThe parking lot of the Whispering Pines Caf\u00e9 was mostly filled with pickups. A booth opened up shortly after we arrived. Once Laurie had found what she wanted on the menu, she set it down and looked at me.\n\n\"Do you know why I'm back in town?\"\n\n\"To settle your mother's estate. Aren't you the executor?\"\n\n\"That's true, but it's a convenient cover story for what the real reason is. Something that would have brought me back here even if my mother was still alive.\" She took a breath before continuing. \"I'm reeling from the devastation of having my engagement broken off. I'd rather get it all out right now so you don't have to tiptoe around it or whisper behind my back.\"\n\n\"Do you want to talk about it?\"\n\n\"Part of me doesn't, but you're a fresh listener. I'd been dating this guy for seven years. He asked me to marry him two years ago. We never set a firm date, just kept pushing it out. Then he drops a bombshell on me. He'd accepted a promotion which involved a move to Denver, but didn't include me in the plans. I was devastated. I thought he was the one, we'd grow old together\u2014all that stuff.\"\n\n\"Do you have any idea why?\"\n\n\"I wish I had some hussy to blame it on. It's worse not having a specific reason. I'm really not ready to start dating again at 44. I dread the thought.\"\n\n\"Did you want kids?\"\n\n\"Yes and no. Every woman feels the urge, but it's too late now. There were some other potential daddies when I was younger, but perfect is the enemy of the good, or so they say.\"\n\n\"I'd think your prospects would be better a lot better in D.C. than here.\"\n\nLaurie disagreed, describing the shitty selection of men. \"At least half the town is people I find politically despicable. The men are self-important narcissists, married, or gay\u2014not that those categories are mutually exclusive.\"\n\nShe gave me a rundown of her work with a non-profit environmental organization, drafting position papers and grant requests.\n\n\"I asked them for a two-month leave to settle the estate. I could stay longer if necessary, plus I could keep up with my work from here part-time.\"\n\nLaurie put her head in her hands. Her voice started to choke up.\n\n\"I'm paralyzed with inertia dealing with the huge mess at the house. I'm an only child and don't have any help. I had to hire a probate attorney to handle the minimum legal filings, but her billing rate is astronomical. I can't imagine why my mother thought I could handle being the executor. I don't know what to sell or keep ...\"\n\nShe seemed ready to have a meltdown. I reached over and touched her hand.\n\n\"Laurie, let Erin and me help you. We had to do all that stuff four years ago when my father died. Not having children makes it simple, actually. You won't have heirs to give things to. Everything is going to end up in the landfill when you die. Keep a small set of your mother and father's personal things that are meaningful to you and get rid of the rest: throw out, donate, or sell. We can give you some names of people who do appraisals and estate sales.\n\n\"And I can look over your financials and tax records. I have an accounting background, but you'll ultimately need a local C.P.A. to do the serious work and the tax filings.\"\n\nLaurie listened appreciatively. \"This means so much to me, your offering to help. I hate to say this, but I'm a little disappointed in Erin. She knew why I was in town but hasn't reached out to help.\"\n\nLaurie wiped a tear from her cheek and reached over to take my hand in hers. The moment didn't last long.\n\n\"Watch out! These plates are hot,\" warned our server as she slammed down our food\u2014including some homemade biscuits. \n\nWe took a break from the unpleasant topics and focused on our meals. Laurie was right, the new chef had done an excellent job in upgrading the menu without disappointing their faithful customers. I even sensed there was a burgeoning hipster patronage in the mix of customers. As we settled into our after-meal coffees, I felt I should share some things about my recent relationship history.\n\n\"You understand, of course, that you're only going to get my side of the story. Like you, I don't know why she broke it off. That's why I wanted to get away from my usual surroundings and have some time to think about it. Maybe I've got one or more flaws that should be addressed before I ruin an otherwise promising prospect during the early months of dating.\"\n\n\"Can't Erin give you an honest sit-down if there are things that need to be fixed? She would know you best.\" \n\n\"She's too preoccupied with problems at her business to listen to my whining. Besides, I've been away for years. She hasn't kept up with the blow by blow of my romantic relationships. Hell, you'd be just as helpful as she would.\"\n\n\"I'd be happy to listen to what you have to say. To give you an independent female perspective. It's the least I can do to return the favor of your assisting me with the estate.\"\n\nHonestly, I was half joking when I threw that out there, but Laurie seemed sincere about helping with my relationship problems. Maybe I could do the same for her. Try to find out why she's been unlucky in love.\n\nOur talk abruptly shifted to more pedestrian matters as a fiery wall of humidity greeted us when we stepped outside.\n\n\"Holy shit, this heat! And it's not even 9:00 yet,\" I moaned. \"Maybe we should go swimming while we're here.\"\n\nOur best option was the large outdoor pool at Willow Creek Park. It had been there at least since my parents were children. The park was free, but you had to pay to use the pool. It looked like any other developed swimming area with all the usual amenities like lockers, snack bar, and lifeguards. However, the pool was fed by insanely cold spring water. Even on the hottest days it's a real jolt to your senses when you first dive in.\n\n\"I haven't been there in years,\" Laurie said, \"but I'm sure it's still open. I've seen some items about it in the local paper since I've been back. I'll need to meet with those estate sale people tomorrow, so we can go Thursday.\"\n\n* * *\n\nWhen I got home Erin teased me mercilessly about having a third date so quickly with Laurie.\n\n\"No, it's only two,\" I countered, \"And both during daylight hours. Merely crossing paths with her at the concert doesn't count.\"\n\nErin wanted to firm up my birthday plans. I told her there was no good live music on that night without driving to Dallas, which I didn't want to do.\n\n\"How about this: there's a pop-up outdoor movie theater in front of City Hall every Sunday evening during the summer. They erect a portable screen, and the crowd brings lawn chairs. There's also a good mix of various food trucks. I suppose you're bringing Laurie? Seems like this is getting serious. This would be the third official date in what ... a week?\"\n\n\"Erin, it's just two lonely people trying to regain their footing emotionally and socially after a tough breakup.\"\n\n\"Please use protection. Don't get her pregnant. She might want to keep the baby. It's her last chance.\"\n\n\"I ... I don't think we're headed in that direction.\" Heck, I couldn't even conjure up a decent mental image of my giving Laurie a good seeing-to as she's down on all-fours. Sure, we'd had a little fun together and shared some of our respective woes, but Laurie still seemed like a person who was a little too uptight and prim to be appearing in my sexual fantasies. However, there was the matter of those new clothes she had on that morning ...\n\n\"Here's what I'd like to do. Eat dinner at Post Oak Barbecue and play mini golf at FunLand. Ed's going to be back by then, right?\n\n\"Yes, he's returning late the night before. Looks, like we're doing a double date then.\"\n\nFunLand was an old, family-owned amusement park. They had endured some lean years, closed for a while, but reopened just in time to enjoy the backlash against the tightly controlled experience at corporate theme parks like Six Flags. Retro was in, and FunLand had that in spades. It was carny and edgy, like they all used to be before Disneyland ruined it.\n\n<br>Goin' Swimmin':\n\nWhen I picked up Laurie at her house for the swimming date, she greeted me wearing a simple turquoise tank dress for a cover-up. She also sported a floppy straw hat, oversized sunglasses, and whimsical Kate Spade slides with miniature fruit appliques. The only reason I recognized her sandals was because Erin has a similar pair. Laurie looked unusually chic again. Her hair was tightly pinned up, of course; but I wondered if she would actually get in the water, maybe even loosen her hair\u2014which I'd never seen her do.\n\nAfter paying the admission to the pool, we sought out a shady area to lay out our towels. I had brought a picnic jug filled with iced sangria wine for later since the park didn't allow alcohol, but I wanted to wait until after our swim before we started drinking.\n\nLaurie lifted the turquoise dress, revealing a very eye-catching skirted one-piece bathing suit with a surplice front, shirred midriff, and thin shoulder straps. It's shimmery, steely gray fabric added an extra touch of class. It fit her like a glove, new curves and all.\n\n\"Wow, Laurie, that's an amazing bathing suit. Very retro glamour. You look great in it. Ooops ... there's still a tag on it. Let me get my knife and cut it off.\"\n\nI had to slip my fingers up under the edge of her swimsuit to make sure I didn't cut the fabric. I don't know how much the suit cost, but it didn't look like it came from Wal-Mart. Again I was putting my fingers in places they had never been before on Laurie Quinn's body.\n\n\"Did you drive all the way to Dallas to get this?\"\n\nShe didn't answer my question but claimed she no longer fit in her old suit.\n\n\"Didn't fit? You look like you're the same weight as you've always been.\"\n\n\"I am mostly, but the old one didn't fit in the bust anymore. I looked like some Hooters waitress spilling over the top.\"\n\nI carefully snipped the thin plastic strand holding the tag while contemplating the absurd image of schoolmarm Laurie Quinn posing in a Hooters crop-top with a pitcher of beer in each hand and a come-hither smile on her face\u2014and her hair pinned up.\n\n\"I'll bet your sister thought I had gotten breast augmentation surgery. I saw her staring at my chest at the grocery store, like some guy.\"\n\n\"She did mention that she hadn't seen you in a while.\"\n\n\"My doctor says it's normal to experience unexpected breast growth for a woman approaching ...\"\n\nThe word \"menopause\" was stuck in her throat.\n\n\"Approaching the end of her fertile years?\" I offered.\n\n\"That's a good way to put it.\" Laurie ran her hands over her breasts. \"I would have liked them firmer, but I guess I'm lucky to get bigger up top. And my rear, which needed some filling out, too. I've been waiting thirty years for this to happen. They won't be much use to me now.\"\n\n\"I wouldn't be so sure about that. You're going back into the dating pool eventually, right?\"\n\nA sad look crossed her face when she contemplated the unpleasant thought of throwing herself into the madness of post-40 courtship. I tried to cheer her up.\n\n\"At least you didn't have to wear a bra all those years.\"\n\n\"Not so, I've got some serious 'headlights'.\"\n\n\"You mean you can't walk down the frozen food aisle in the grocery?\"\n\n\"Yeah, huge 'pokies.' Like I dropped two big marbles in my sweater. I need to wear heavily padded bras to hide them. I was always worried about disappointing a man when he sees how little of me is inside the bra. Honestly, I hope they don't get any bigger. I've got a drawer full of new bras that I'm barely fitting into as it is.\"\n\n\"This may not sound very feminist, but I'm actually enjoying having fuller breasts. I was so flat before. Now I can at least fill out clothes properly.\"\n\nRoger that. Her bathing suit was a prime example, although I wouldn't mind seeing her in the old one, too.\n\n\"I like my body the way it is now, but I'm still terrified thinking about stripping down in front of a new man. It's always been lights off for me.\"\n\nI couldn't resist responding to her comment. Boy, did she leave herself wide-open.\n\n\"Sounds like you need to find a nude beach somewhere. That might cure you of that hang-up. Seems like you're confident enough in your appearance now to experience a 'clothing optional' setting.\"\n\n\"Nice try, Joe, but there's no way I'm going to flash you and a bunch of other people just to convince myself I feel better about my body now.\"\n\nThat sounded like a \"no,\" but she had an odd look on her face after she said it. Like she might actually be thinking about it.\n\nWe started applying sunscreen. She offered to get my back, and I reciprocated; but it was about as sexy as putting a bandage on Erin's skinned knee when she was little. An unexpected silence overtook both of us. Laurie finally spoke up.\n\n\"Joe, I've known you for years, and I know your sister very well, but I hardly 'know' you at all. Only what I've heard from Erin. This creates an interesting dynamic. I'm curious to see what we talk about today. We've got plenty of time.\"\n\nI figured I might as well get started and shake things up right away. I knew there was a nude sunbathing spot in Willow Creek Park. It was upstream and outside of the official pool area, high atop an outcropping that overlooked the pool and the surrounding area. It was called Falcon Rock, and it was notoriously difficult to climb up there. During my youth I spent many a day at Falcon Rock, enjoying the naked bodies of free-spirited women.\n\n\"Speaking of nude sunbathing, do they still do that up on Falcon Rock?\" I asked Laurie innocently.",
        "\"I wouldn't know. I've never been so inclined. I have enough problems with sunburn. I don't need to expose more skin.\"\n\n\"Oh, c'mon, Laurie. You must have tried it in your wild, younger days.\"\n\n\"I didn't have any wild, younger days.\" Her flat voice revealed that she might have wanted to but didn't know how.\n\n\"There's a waterfall up there, too. Really nice.\"\n\n\"Yeah, I've always wanted to see it but wasn't willing to go nude for it.\"\n\n\"At the bottom of the waterfall, there's a natural flume over these mossy rocks. You can ride down it like a water slide and splash into the lagoon below.\"\n\n\"That sounds dangerous for the guys.\"\n\n\"How do you mean?\" I couldn't resist teasing her.\n\n\"Don't make me say it.\"\n\n\"If they're hanging low, down below? Well, I wouldn't risk it these days. You do a lot of crazy things when you're young.\"\n\nOur conversation grew serious again. Laurie lamented her upbringing in a female-only household.\n\n\"I'm an only child. I never had a brother, and my dad died before I turned ten. I had no male close enough to confide in about sex or get an honest perspective from the other side.\"\n\n\"I wouldn't glamorize having an opposite-gender sibling growing up. Erin and I rarely talk about anything related to sex.\"\n\n\"Really? Both Terri and Fran have brothers, and they've been able to have frank discussions with them about men things.\"\n\n\"Well, they're a lot closer in age. Erin and I are six years apart. I still get woozy when I think about Erin having sex, even with her husband.\"\n\nLaurie let out a girlish giggle. \"Hee-hee! You're funny. I could tell you stories.\"\n\n\"Please don't.\"\n\nThat got her laughing even more. \"You know, Joe, it feels odd, but I'm enjoying being able to talk about boobs and sex with you and not worry that it's some new guy I have to worry about offending.\"\n\nThat gave me an idea. I thought back to her comment at the Whispering Pines Caf\u00e9, where she offered to give me some \"sisterly\" advice about dating and the opposite sex. \n\n\"Laurie, free to veto this idea if it offends you, but hear me out. You gave me an idea with what you just said. We could bare our souls to each other as an exercise in gender exchange. Act like we're surrogate siblings. We could ask those questions about how the opposite sex acts and thinks. The whole range of topics, nothing off limits.\"\n\nI could sense the wheels spinning in her head. \"How that would work. How do I know your intentions are pure?\"\n\nShe thought about it for a minute.\n\n\"I would need you to open yourself up first. Reveal something super embarrassing, an encounter with a woman.\"\n\n\"Something sexual?\"\n\n\"Absolutely. And make it good.\"\n\n\"Let me think of one. There're a lot to choose from.\" Yeah, and a lot that are way too embarrassing to tell. I finally came up with an anecdote that wasn't that unflattering.\n\n\"I was set up on a blind date by the girlfriend of a close buddy. I didn't fancy the gal once I saw her, but I tried to be polite during the date. After a tepid goodnight kiss, I turned to leave but heard her ask if I wanted to come inside. Her voice had a sad, pleading tone. I couldn't decide which would be more humiliating for her: my continuing to walk away or not calling after a one-night stand. The sex was awful, but I decided to stay overnight to avoid causing a fuck-and-run crisis.\n\n\"The next morning was excruciatingly awkward. She cooked breakfast and ruined it. We both sat there in silence trying to force down inedible food, cutting tiny bites, cutlery scraping on the plates the only noise in the room.\"\n\nEven though it had been many years, retelling the story made me feel almost as uncomfortable as it did that morning.\n\nLaurie looked at me with an air of disappointment. \"That story doesn't count. It's not cringe-worthy enough, not enough sex.\"\n\n\"What? Do you just want to hear me talk dirty?\"\n\n\"No, but I want to know why was the sex was bad? I worry that guys think that about me.\"\n\nI wasn't expecting the conversation to take that turn. I had to think about my answer.\n\n\"I could see she was doing it for the wrong reasons. That came through strongly. And she seemed uncomfortable about her body.\"\n\n\"Small boobs?\"\n\n\"Yes. Plus she was very awkward while we were screwing. She turned out all the lights, not even a candle. She said she was on the pill, but she had the demeanor of a woman who was scared shitless about getting pregnant with every stroke of my dick. I had her get on top, but she seemed very self-conscious in that position. She held back her reactions. And when she didn't, they seemed forced and unnatural.\"\n\n\"Sounds like you're talking about me,\" Laurie said candidly.\n\nAn uncomfortable silence followed before Laurie insisted that I come up with a better story.\n\n\"OK, this one should do it. I was dating this gal who was a virgin, and I had only been with a few women at that point. I didn't want to be the first since I wasn't that into her, but I was OK with kissing and petting.\"\n\n\"Meaning ...?\"\n\n\"Meaning mutual manual stimulation outside the clothing, including below the waist, without release. That night I convinced her we should go a step further and get each other off with our hands. It would help tamp down our youthful libidos and keep us from crossing the line. I said taking her jeans and panties off would be a good start.\n\n\"I got ready to finger her, but decided to go down on her instead. She got really tense and nervous and made a funny noise. I thought that once I started in on her, she would be a quick convert. But after the first lick, she pushed me away, jumped up, and ran to the bathroom.\" I stopped there to see if I could get away with telling part of what happened. Laurie was having none of that.\n\n\"There's more to this story, I'm sure.\"\n\n\"Yes ... she got sick. It was a real mess later when I had to clean it up. She was in there for an hour, sobbing, wouldn't come out or talk. I finally offered her a solution since her jeans and shoes were still in the living room and she'd locked the bathroom door. I called a cab for her then went outside so she could get dressed. I met the driver and sent him up to get her. I promised to stay out of sight.\"\n\n\"And ...?\"\n\n\"It was the last I ever heard from her. I guess I 'skipped a chapter' by going straight to oral. Was that my problem?\"\n\nLaurie was chuckling. \"No, you should never 'skip a chapter.' Follow the time-tested sequence: touch it before you lick it. Was her Aunt Flo visiting? From Reading? Maybe that was her issue.\"\n\nI was slow in deciphering the euphemisms: was she on her period? Laurie allowed that my second story qualified.\n\n\"What about your first time receiving oral?\" I asked her.\n\nLaurie got flustered and said that wasn't the story she was going to tell.\n\n\"Mine is actually better. My first oral was bland, all smoke and no fire.\"\n\n\"You didn't come?\"\n\nShe shook her head. Wow, how do you eat out a woman and not make her come? That must have been one inexperienced dude going down on her.\n\n\"Alright, here's my story. I was having sex with this guy in college. He was the first person I'd been with, so when he kept falling out, I thought that was just part of what happens during intercourse. I realized some years later that he was below average in length. Anyway, he was going at it with great vigor\u2014\"\n\n\"What position?\"\n\n\"Missionary. So he was screaming he was about to blow, and I was responding well, also.\"\n\n\"How so?\"\n\n\"My juices were flowing down into my butt crack,\" she answered, with a look that dared me to say it was too much information. \"I was very close myself, hoping he could keep it hard long enough afterward to make me come, when he fell out\u2014but he stuffed it back in the wrong hole and immediately finished in my back door.\"\n\n\"Wow! What did he say? Or what did you say?\"\n\n\"I was rendered speechless, too startled to feel any pain. The guy tried to pretend nothing had happened. He quickly pulled out and rolled over. I had his mess leaking out in the back and it made me ... it made me have to go sit on the can.\"\n\n\"You had to go poo?\" She gave me an embarrassed nod.\n\n\"When I ran to the bathroom, the last thing on my mind was being so close to an orgasm but not getting one. But once I finished what I went in there for ... I don't know what came over me, but I had to finger myself on the toilet until I came. I couldn't go back and do it in front of him.\"\n\n\"That's a good story, Laurie.\" I wasn't expecting something that raw and intimate. \"Did he ever ask to try it again, back there?\"\n\n\"No, he kept calling me, but we never went out again.\" Laurie started to say something more but pulled back. \"Well, there was one thing that I ...\"\n\n\"That you what?\"\n\n\"Uh ... that's all. End of story.\"\n\n\"Oh, c'mon. You were about to say something else. What was it?\"\n\nLaurie clammed up and refused to tell anymore. So I decided to guess at what might have happened.\n\n\"Let's see ... you were grossed out but enjoyed the sensation a little bit?\"\n\nLaurie hid her face in her hands and tried to change the subject.\n\n\"There're a lot of nerve endings back there ...\"\n\n\"OK, enough. I'm going in the water. Story's over.\"\n\nLaurie ran toward the shallow end of the pool and gingerly eased down each step. She winced as the water covered an ever increasing portion of her skin. That's the most miserable way to get into really cold water. You should just jump in and get the shock over with quickly. Laurie paddled out into the middle of the pool but kept her hair dry.\n\nI dove into the deep end and felt the knife-like cold pierce through every part of my body. Even though it was well into the nineties that day, it was still a jolt. When I surfaced, I saw Laurie swimming toward me.\n\n\"Joe, this water is freezing! Don't swim away. Let me come over there so you can warm me up.\"\n\nShe got about twenty feet away but stopped paddling. She appeared to be in distress. \n\n\"Joe, I need help. My leg is cramping.\"\n\nI quickly glanced around. I was a lot closer to her than the nearby lifeguards.\n\n\"I'm coming right away. Hold on.\"\n\nI did an aggressive breaststroke in her direction, keeping her in sight the whole time.\n\n\"I'm going around behind you so I can get ahold of you.\"\n\n\"Hurry, please, I'm so cold. My leg really hurts. It's hard to keep my head above the water.\"\n\nA few seconds later I had reached her, keeping a safe distance in case she panicked and tried to grab me. I maneuvered up from behind her.\n\n\"I'm here. Let me put my arm across you so I can take you in.\"\n\nSomehow my Red Cross junior lifeguard training from decades ago locked in, and I was able to put the correct hold on her and begin pulling her toward the shallow water.\n\n\"You're OK now, Laurie. I've got you. We're not that far. Just a little more.\"\n\nHer shoulder was nestled in my armpit with my arm stretched across her chest\u2014right between the two lumps that Erin had claimed were not there before. A healthy spurt of adrenaline helped me get her to safety. I guided her to the steps at the shallow end so she could rest for a moment before getting out.\n\n\"Help me get all the way up on the side. I need the warmth on my leg to ease the cramp. Damn, that was scary. But you knew what to do, didn't you? Now I remember your having that Red Cross lifeguard patch on your swimsuit when I was a little girl. Didn't think you'd be saving me when I was in my forties.\"\n\nLaurie glanced down at her chest. \"My god, this suit hardly has any padding in the bust! Look at the way ... actually, don't look. My 'headlights' are definitely on high beam. Let me soak up the sun for a few minutes so I won't be mortified walking around like this.\"\n\n\"Maybe you should look around you. You're certainly not the only woman in the pool affected by the water temperature. Just embrace it. It's natural. Every guy here knows you have two nipples under that bathing suit. There're plenty of 'headlights' for them to gawk at. You're just one of many. C'mon, let's get back to our spot.\"\n\nThe first thing Laurie did was wrap herself in her big beach towel. She was still shivering.\n\n\"I'm thirsty. What's in that jug you brought?\"\n\n\"A type of grape punch with some extra fruit. Let me pour you a cup.\"\n\nShe took a big swig.\n\n\"You scamp! There's wine in here.\"\n\n\"Shhh, keep your voice down. Or we'll have to share it with everybody.\"\n\nLaurie scolded me with a playful slap on my butt. Before long, I was pouring out a second round for us both. Our conversation bounced around an impressive range of topics, mostly sexual. Soon we were ready for another refill.\n\n\"Maybe you're right, Joe. Maybe going up to Falcon Rock would help me tamp down my anxiety about undressing in front of a new man.\"\n\n\"Good idea, Laurie. It'll help you get over your body image issues. You'll see how indifferent everyone is to the things you obsess about.\"\n\n\"I don't know, though. That would be an awfully big leap for me to take. Public nudity.\"\n\n\"Afraid to bare yourself in front of strangers?\"\n\n\"No, the opposite. I'm worried I'll see someone I know. Anyway I hear it's very difficult to climb up there.\"\n\n\"I can show you where the secret path is up to the top. It's a bit out of the way, but it's not as steep and treacherous as the main path.\"\n\n\"You really think I'd go up there by myself? Hah, that's a good one.\"\n\n\"You want me to go with you? I thought you didn't want to be seen by someone you know. Wouldn't you be embarrassed to see the 'longsword' of a guy you've been talking to all afternoon?''\n\nShe pointed to the front of my swim trunks and smiled. \"After that cold water, I might not be able to see anything at all.\"\n\nI was shocked. It was very uncharacteristic of Laurie Quinn to make a dick joke. Must be the sangria going to her head.\n\n\"Keep in mind, Laurie, if you go up but chicken out, you'll have to come right back down. It's bad form to keep your clothes on when you're on Falcon Rock. And I'm not sure you have the right footwear. Clambering up the rocks is tricky. That's what keeps the crowds of leering old fat guys away.\"\n\n\"I'll do it barefoot if I have to,\" she said bravely.\n\nBack in the day you could find people drinking and smoking weed up there. Taking your clothes off was just part of the lifestyle. Everyone was very strict about bringing their trash back down and not causing problems. I wouldn't be surprised to find out not much has changed along those lines.\n\n\"Here's how I'm going to do it,\" she announced. \"Take me up close to the top then you can wait for me up there.\"\n\n\"What? I'm supposed to sit in the woods until you've had your exhibitionist thrills? I don't think so. You can find your way back by tagging along with some of the other folks when they come down.\"\n\n\"Alright, I need to go to the ladies' room. Then we can head over to where the secret path starts.\"\n\n<br>The Flume at Falcon Rock:\n\nIt was about a half-mile to the trailhead\u2014which wasn't that much of a secret anymore, based on the number of people we saw coming in and out. Laurie took off her expensive sandals before we started up the narrow trail. We had to maneuver around other folks who were on the way down as well as being careful to avoid the poison ivy along the path. She noticed most of the people on the trail were young enough to be our children.\n\n\"Are we going to be the oldest people up there?\"\n\n\"No, there's always a bunch of leathery hippies with permanent all-over tans. It's probably the same ones from the last time I was up there.\"\n\n\"Just men?\"\n\n\"No there are some female counterparts. With their titties riding low.\"\n\nLaurie was beginning to struggle as the path got steeper. Her going barefoot and using one hand to hold onto her sandals wasn't helping.\n\n\"Are you that desperate to see a naked woman?\"\n\n\"No, I just want to see you naked,\" I joked.\n\nShe sputtered with embarrassment and ended up tripping and scraping her knee on the rocks.\n\n\"Ow! Shit! Look what you made me do. Oh, I'm bleeding. Damn it!\"\n\n\"Laurie, let me see ... hold still ... OK, it's not that bad. You'll live. You can rinse this off in the lagoon when we get up there. The hem of your dress is above the scrape, so be careful and you won't get any blood on it.\"\n\nAs we neared the top Laurie started getting cold feet. I had to calm her down.\n\n\"Laurie, it's not going to be everyone stopping what they're doing and staring at you as soon as you take your bathing suit off.\"\n\n\"Maybe I'm too old for anyone to look at,\" she rationalized.\n\nJust before we reached the end of the path, Laurie turned toward me.\n\n\"I just thought of something. I'll let you stay with me on one condition.\"\n\n\"What's that?\"\n\n\"You have to ride down the flume.\"\n\n\"Are you trying to turn me into a eunuch?\"\n\n\"You said you used to do it all the time back when. If you're too scared to do it, then you have to go back down. I'll meet you at the car in one hour.\"\n\n\"Speaking of scared, how will I know if you really got naked up here? You've been getting more reluctant the closer we get. What's to keep you from hiding in the bushes until the hour is up and pretending you've been sunbathing au naturel?\"\n\n\"If you want to monitor me, you know what you have to do: nude flume ride. In fact, I'm going to insist that you do it before I take off my clothes. If you chicken out, I'll announce it to everyone else up here. Time to man up.\"\n\nHow dare she! I wasn't going to take any guff from Laurie Quinn. She's my little sister's age, for god's sake. \"Sounds like you just want to see me naked. I'm calling your bluff. Let's go. Flume riding time.\"\n\nWe walked out onto the wide, flat rock together. A few heads glanced our way, mainly to see if we were someone they knew. We set down our towels, and Laurie nervously removed her cover-up dress.\n\n\"First things first, Joe. I'll hold your swimsuit for you while you ride down the flume.\"\n\nI pulled my trunks down and handed them to her, wondering if she was bold enough to glance down at my exposed member.\n\n\"The flume's over this way. Follow me.\"\n\nThere were plenty of guys clambering up the rocks to ride the flume. Even a few women. Fortunately I remembered the trick: holding your package in one hand while you slide down. Of course when you only have one arm free it becomes very hard to maintain your balance as you go down\u2014which is half the fun. When it was my turn, I waved to Laurie, who still hadn't taken her suit off.\n\nOn my first ride I got slammed around as the rushing water propelled me down the mossy rocks. Nothing serious, I just looked foolish. The final thrill was still as powerful as it was when I was younger: shooting out of the flume and splashing down in the lagoon about ten feet below. I pulled myself out and walked over to Laurie.\n\n\"That was fun. I'm riding it again. Oh, by the way, you're overdressed for Falcon Rock. Remember what I told you about gawkers who don't play by the rules up here. I better see you holding two swimsuits in your hand when I get out of the water.\"\n\nLaurie gave me a defiant look and threw mine on the ground. Her indigo eyes glared at me, daring me to lower my gaze as she pulled the straps off her shoulders and pushed the swimsuit down past her knees. She kicked it aside next to mine and placed both hands on her hips.\n\n\"How's this?\" she taunted.\n\n\"That's the spirit.\" I picked up both swimsuits and handed them back to her. \"See you in a minute.\"\n\nAs I made my way up to the top of the flume, I tried to quickly forget what Laurie looked like naked. I liked what I saw, and nature was sending blood down below my waist so I could follow through on those urges.\n\nLaurie was waiting for me after I splashed down a second time. I suggested she get in the water so she could wash off the wound on her knee.\n\n\"I've got a first aid kit in the car with disinfectant and bandages. You'll just have to wait until then. And we'd better put on some sunscreen, too. Our nasty bits are white as snow.\"",
        "Laurie set some boundaries. \"You can put sunscreen on my back, but that's it. I'll handle the newly exposed areas. After all, this isn't a massage parlor.\"\n\nTwenty minutes later the shock value of the nudity was starting to wear off. Nonetheless, Laurie was checking everyone else out behind the privacy of her big sunglasses.\n\n\"I'm astonished at all the shaved pussies out here. Almost everyone. I feel like a gorilla down there. And I don't think I've ever seen this many peckers all at once.\"\n\n\"No one's looking. You're too old, remember. If you get any disapproving looks about your thatch, you can tell them you're kicking it old school.\"\n\n\"I'm not sure what that means, but I'll have that comeback ready if I need it.\"\n\nWe basked in the sun, enjoying the sheer novelty of hanging out with a bunch of naked people. Laurie asked me what Erin thought about us going swimming together.\n\n\"I seriously doubt if she's thinks we're up here on Falcon Rock. But she's been teasing me about having a third date with you. She counts the night at the river concert. Just to prove I don't care what she thinks, I'd like for you to be my date for my birthday celebration. It's Sunday night. We're going to Post Oak for barbecue, and we get to go to the front of the line since it's my birthday. After that, we're playing miniature golf at FunLand. There's been talk about doing the midway, too, but I haven't agreed to that yet. Erin's husband Ed is joining us. I hope you can go.\"\n\nShe smiled as she glanced over at me. \"How can I say 'no' to a man who's flashing his tool at me? Sure, what time?\"\n\nI reminded Laurie we needed to stroll around the whole Falcon Rock area. After all, the main reason for her coming up there was so she could get used to being naked around strange men. Sure, I'd be checking out the lineup of bare breasts on display as we strolled the perimeter. I dare any straight guy to claim he wasn't up there doing the same.\n\n\"Lots of peckers to look at, like you said. Let's walk around and see if we know anyone else here.\"\n\nThat almost frightened her into going back down, but I convinced her the possibility was remote. \n\nAfterward I said I wanted to make a couple more rides down the flume before we headed back. Laurie surprised me when she crawled to the top right behind me.\n\n\"I want to try it, too. Now that I have enough padding on my rump. It looks like fun.\"\n\nI went first and waited down at the bottom for her to come shooting out the flume. Needless to say, that was one image I never would have expected to see in my lifetime: a nude Laurie Quinn, squealing and arms flailing, splashing down into the lagoon at Falcon Rock. She still had her hair pinned up, and somehow she managed to mostly keep it dry when she hit the water. Laurie was beaming with excitement.\n\n\"You take me to the most fun places, Joe. I want to go one more time.\"\n\nSo we did. As we waited our turn up top, Laurie weighed in on the Falcon Rock experience.\n\n\"I can't believe I'm standing around showing my bare boobs and muff to all these people.\"\n\n\"Liberating, isn't it?\"\n\n\"That's not the word I would have used. More like 'insane,' 'scandalous,' 'lewd'.\"\n\n\"Oh, Laurie, get over it. You're trying to pretend like you're not loving it. Everyone should get pushed out of their comfort zone from time to time.\"\n\n\"It was the wine. It's your fault,\" she said playfully. \"Getting me drunk and naked. You're a real bad influence on me. What would Erin think?\"\n\n\"Erin? She'd think I'd made it all up. Laurie Quinn, naked on Falcon Rock? Sliding down the flume? C'mon, get real. As if.\"\n\nWe both found that hilarious. I added a third run before we gathered up our belongings and made our way back down the path. When we got to the car I got out my first aid kit. As I crouched down to take care of her scraped knee, she pulled her skirt up to mid-thigh, letting her legs fall open slightly. I glanced up.\n\n\"You said to keep the hem away from the blood,\" she explained.\n\nLaurie stared at me with an innocent look. I knew she hadn't put her swimsuit back on, so she was naked under her turquoise dress. And she knew that I knew. Down boy.\n\nAs we were driving home Laurie suggested another entry to our social calendar.\n\n\"Joe, I'd like for you to come over to my place for a movie night Saturday, the night before your birthday. That'll get Erin buzzing. I promise to straighten up a little, at least in the den where the TV is.\"\n\nI readily agreed. I told her I had my passwords to several streaming services, so she didn't have to go rent a DVD. I wasn't sure what might happen there, but maybe nothing\u2014which was fine with me. Our little surrogate sibling project was working just fine without the possibility of sex complicating things. I reminded her to clean and bandage her knee each day so it wouldn't get infected. \n\n<br>                                                 Movie Night at Laurie's:\n\nSaturday night\u2014still officially in my forties. I wasn't sure what kind of home theater setup Laurie had at her place, so I brought my tablet and a connecting cable. Her appearance floored me when she opened the door.\n\nLaurie's hair was not pinned up in her usual schoolmarm up-do. The first time I'd ever seen her like that since she was in middle school. Instead it was held by a hair bobble in a high ponytail that hung down to her shoulders. She was barefoot and wearing a dark blue short-sleeve linen shirt that matched her eyes and a pair of light tan linen shorts\u2014the operative word being \"short.\" Before I could recover my senses, she marched up and gave me a kiss on the mouth.\n\n\"Come on in. The TV is in the den. Follow me. I found some bottles of wine, too. Don't know if they're any good.\"\n\nI wanted to offer a compliment for her clothes and tell her how sexy her new hairdo looked, but I was speechless. I gamely followed her back to the den, mesmerized by her ponytail swishing back and forth.\n\n\"I bought this TV for my mother a few years ago. It should have all the right hook-ups and whatnot. I'm getting Internet through the cable company, plus there's a Wi-Fi thingy.\"\n\nI connected my tablet to her TV and asked if she wanted to watch something sappy or bittersweet. Laurie surprised me when she chose the latter. She also pointed to the bandage on her knee and assured me she had followed my first aid instructions carefully, although it still hurt a little. \n\nWe sat fairly close to each other on the sofa as Laurie poured two glasses of wine. Frankly I was unsure what I was supposed to be doing in the way of romancing her, if anything. Yes, we had bared everything in front of each other on Falcon Rock, but the presence of all the other nude bodies kept it from being an erotic situation. Even so, I had seen her boobs and pussy, and she saw my dick. Plus all that dirty talk about our failed relationships and sex.\n\nWe ended up being playful with each other while we watched the movie. Lots of friendly touching, light bantering, and our heads together when we talked. After it was over Laurie thanked me for selecting the movie.\n\n\"I really enjoyed it, Joe. Good selection. Bittersweet it was.\"\n\nThat was a good chance to segue into another deep relationship discussion. Still I felt a bit odd when I asked her a very personal question.\n\n\"Laurie, do you sometimes feel unsure around a man? Wondering what he sees in you? Not sure about when or if you should go to bed with him? Overthinking things?\"\n\n\"Well, I ... I do ... yes. I'm afraid that's most of the time. How did you know?\"\n\n\"It's something I picked up on since we've been hanging out. I thought we should have a talk about it.\" \n\nI wondered if I was hitting too closely with my analysis. I tried to come from a positive direction. \n\n\"Laurie, you just need confidence in yourself and your ability to read the situation when you're with a man. My observation is very subjective of course, but I think you have a significant amount of sex appeal.\"\n\nYes, that she's always kept hidden under those frumpy clothes and prim hairdo, but it looks like something's inspired her to start making some changes.\n\n\"And I want to comment on your hair, the way you're wearing it. It looks good, and it projects assuredness. Also your clothes. They seem different from how you usually dress. And I have to say, you wear them well. They evoke the same confident persona that goes along with your more relaxed hairstyle.\"\n\n\"Thanks for saying that, Joe. You probably sense I'm not one to embrace change. It never comes easily to me. It's an unfamiliar feeling, sometimes confusing. I'm still the same me attached to the hair. And the same me under the clothes. Yet I do feel different, better about myself.\"\n\nI thought it was time to start talking about sex again. \"How do you decide when to sleep with a man?\"\n\n\"I can't say ... it's impossible to put in words, you just know. And you? How do you know when to sleep with a woman?\"\n\n\"Well, I've already decided before I ask her out on a date, obviously. Guys know in the first three seconds when they see a woman. The only time when there's hesitation is if you think she might be psycho. Problem is, those ones are insanely hot in bed. It's hard to resist playing with fire.\"\n\nLaurie looked visibly dismayed. \"So normal women don't stand a chance compared to the crazies? That's good to know,\" she said sarcastically. After an awkward pause, she began to confess.\n\n\"I'll admit, I'm not that confident about sex. I'm never sure if I'm being adventurous enough. My upbringing and doubts are holding me back.\"\n\n\"Do you perform oral sex on a man?\"\n\n\"Sometimes.\"\n\n\"Do you like doing it?\"\n\n\"Sometimes.\"\n\nI had met a couple of her boyfriends in the past. They seemed like doofuses. I remembered thinking Laurie could do a lot better than those guys. It was hard to picture her down on her knees, orally servicing one of those jokers as he howled like a lonely puppy. That image always seemed comical, in a twisted way\u2014which says something about me, I guess.\n\n\"Have you let a man come in your mouth?\"\n\n\"A few times ... but I can't swallow.\"\n\n\"What do you do then?\"\n\n\"I run to the bathroom and spit it out. And brush my teeth and gargle.\"\n\n\"Have you ever thought about how that makes the man feel? Seconds after the two of you have shared one of the most profoundly intimate sexual acts, you go sprinting off like he just dumped a load of poison in your mouth. Look, I know women say some guys have nasty tasting cum, but that's a whole other discussion ... for some other time.\n\n\"Here's a suggestion. The next time you have a man's load in your mouth, quickly spit it into a Kleenex\u2014quietly, without a lot of gagging or other weird noises\u2014and cuddle with him, play with his spent cock. Or even better, let it drool out onto your breasts and slowly rub it in while you stare up at him. That's very visual. It makes a guy think his load was so massive that his woman couldn't handle it all. She had to let some of it spill out.\"\n\nLaurie seemed flabbergasted by my recommendations. \"Whew, when you first suggested this, I wasn't sure what to expect or how graphic the talk would be. I guess this is what we both needed to find out.\"\n\n\"Do you masturbate?\"\n\nLaurie nodded her head.\n\n\"How often?\"\n\n\"How often do you do it?\" she asked defensively.\n\n\"When I'm not with someone, like now? About three or four times a week. It used to be twice a day or more when I was a teenager.\"\n\n\"I do it. That's all I'm saying.\"\n\n\"Have you given hand jobs?\"\n\n\"Yeah, but guys have complained about my technique. I guess I don't keep stroking long enough. I pull my hand away when he starts to spew.\"\n\n\"So how does it make you feel when you bring a man to climax?\"\n\n\"The actual jizz is kind of gross and messy, but I like the raw passion of watching him come, hearing him moan. Causing a man to lose control because of me, as a sexual being.\"\n\n\"Do you like being eaten out?\"\n\n\"Of course,\" she replied, surprised that I would ask such a stupid question. \"But it doesn't happen enough. And the few guys who've gone down on me weren't that good at it. I've never come that way. They didn't know how to read my cues about what's working\u2014and what wasn't. I was afraid to correct them. I'm just glad that they're trying at all. Too many men seem to be grossed out by it. And some have flatly refused when I asked. Maybe they smelled their fingers after touching me down there and decided to back out. That doesn't exactly make me feel confident about my lady parts.\" \n\nGeez, what a bunch of losers.\n\n\"I've never understood that attitude,\" I replied. \"Particularly when guys expect to get oral from the woman. It should go both ways. Equally.\"\n\nLaurie rolled her eyes and nodded in agreement. \"Ya think?\"\n\n\"I don't think it's gross. Not by a long shot. I love to do it. I don't mind doing it as long as it takes, an hour if necessary. I like to keep going and let the woman have as many orgasms as she can stand. That really turns me on.\"\n\n\"You must be popular with the ladies.\"\n\n\"I suppose. Once they get to know me on that level. But it's generally seen as creepy if you brag about it upfront\u2014oops, like I just did.\"\n\nLaurie laughed. \"That's OK, I'm making no judgments over here.\"\n\n\"Do you come when you have intercourse ... with a man?\n\n\"I have.\"\n\n\"Do you touch yourself while having sex?\"\n\n\"I touch my breasts.\"\n\n\"What about downstairs?\"\n\n\"No, that's rude.\"\n\n\"Not really. It gets me hot when a woman frigs herself while we're fucking.\"\n\nLaurie let that comment sink in. She was quiet for a few moments, then turned toward me. It turned out she wasn't done talking about cunnilingus.\n\n\"So what was your longest session? Going down on a woman.\"\n\n\"Oh, I remember it very clearly. It was at least thirty minutes, probably longer.\"\n\n\"Were you successful?\"\n\n\"Sure, of course. She had warned me as we were taking our clothes off that she never has orgasms with a man, so I shouldn't be obsessed with trying to make it happen. I told her we wouldn't worry about it, just enjoy each other's bodies. But if she wanted to try for it later in the session, I'd be happy to work with her. Let her tell me what she needs. She said she'd be looking forward to it and suggested going down on her might work.\n\n\"Later when I got on my knees and spread open her thighs, I promised her I would do it as long as she wanted and not to worry if I was getting tired or impatient. I stuck with it until she came, which she seemed very happy about, but I strained the tendons in my neck. Toward the end she needed it real fast, with my stiff tongue. Rapid back and forth on her clit, left to right. It was kind of embarrassing telling my doctor about it.\"\n\n\"Well, I hope you're all healed now.\" The comment seemed to startle her as soon as she said it. Laurie clapped her hand over her mouth as her eyes widened. \"God, did I just say that? Must be the wine talking.\"\n\nLaurie shrugged her shoulders and smiled. \"We really have let it all out, haven't we? On this sex talk?\"\n\nI decided it was time to get my face slapped. Just as she was taking another sip of wine, I posed a question.\n\n\"Have you thought about doing more than talking?\"\n\n\"With you?\" she sputtered, spilling some wine on her blouse. I nodded.\n\n\"What? Are you proposing to have a fling, a one-night stand?\"\n\n\"I wouldn't use those words. They have a tawdry connotation, where one or both parties feel bad or guilty afterward. Often involving betrayal of a supposed loved one. Look, we both need to get back up on the proverbial horse after being thrown off. Think about all the times you've been to bed with a man and recall the things that made you embarrassed or uncomfortable. Or sexual techniques you worried about doing wrong or not well enough. Or ones you were afraid to ask for. This would be a low risk exchange for both of us. Find out what needs fixing without worrying about what a stranger will think.\n\n\"We each could say the embarrassing things and ask the uncomfortable questions now that usually take months or years, or never get said at all. We both could go back into the dating pool with confidence. We can make the mistakes and suffer the uneasiness\u2014now, with each other\u2014instead of it ruining a promising prospect in the early dating stages. Of course, it would have to be a mutual decision if it happened more than once.\"\n\nLaurie was dabbing at the spilled wine while I made my pitch. She finally looked up.\n\n\"The good girl in me is trying to act offended, but ... it makes sense. Working this out with someone you know. We're both going back to separate coasts soon, so it's not like it's a marriage proposal.\"\n\nLaurie contemplated this for a long time. She turned toward me and put her hand on my knee.\n\n\"What happens if one of us likes it too much?\"\n\n\"Good question. I'll admit that's the only danger. But even if we both like it too much, I guess it would burn itself out naturally at some point.\"\n\nLaurie was quiet as she took a few more sips of her wine and stared down at the contents of the glass, as if the right answer would be floating near the bottom.\n\n\"I hope you weren't expecting me to respond on the spot. Right now.\"\n\n\"Of course not. Take your time. I know that was a heavy proposal to spring on you.\"\n\nAnother long, uncomfortable silence followed. I figured as long as I was shocking the hell out of her with my sexual frankness, I may as well keep going.\n\n\"Have you ever looked at adult videos online?\"\n\nLaurie acted nervous and offended. \"You mean porn?\" She struggled with what to say next.\n\n\"My ex-fianc\u00e9 did. He was really careless, leaving traces all over our home PC. I easily found the folders where he'd been saving naked girl pictures from the Internet. It really made me feel hurt and inadequate, thinking about him drooling over all those chesty women. Probably jerking off in the shower thinking about them instead of having sex with me.\"\n\n\"Laurie, I'm sorry to hear that. What should be happening is both of you looking at it together. Enjoying things that are a mutual turn-on.\"\n\n\"Joe, this might shock you ... but I will admit to having some curiosity about what all is out there to look at. But I'm afraid of viruses or leaving evidence on my computer. Or having the government know what I've been looking at.\"\n\n\"Worried that it'll go on your 'permanent record'?\" We both snickered at that all-purpose hollow threat that parents of our generation used on their wayward children. I offered to get my tablet and show her a few things.\n\n\"Anytime you feel weird about this and want to shut it down, just say so.\" I disconnected the cable from the TV. It would be much too raw to view porn on the big screen. \"I'll surf over the cellular connection on my tablet. There'll be absolutely no way to trace it back to you.\"\n\nLaurie looked excited and nervous. \"Am I going to be grossed out by what I see?\"\n\n\"There's always that chance, but we can just scroll away from it or hit back on the browser.\"\n\nI offered a theory that I hoped would put things in context.\n\n\"Sexual practices and turn-ons exist on a continuum like everything else. On one side you'll find people whom you think are perverts for the weird things they do in bed. And on the other side you'll find people you think are hung-up and prudish because they won't try the things that get you hot. But keep in mind the prudes think you're the pervert and the perverts think you're the prude. It's all relative.\n\n\"We need to find out where you fall on that continuum. You'll see some things that look icky or stupid or weird or twisted. But you'll also see things that turn you on, maybe things you hadn't thought about or things that you wanted to do but were scared to ask. We need to find your comfort level.\n\n\"Have you ever used toys?\"\n\nShe seemed flustered at the question. \"I could never walk into a sex shop and buy that kind of thing.\"",
        "\"You don't have to. You can order anything you want online. Even from the major drugstore chains. Lube, condoms, vibrators, dildos.\"\n\n\"I have a friend who has a massage wand. She swears by it. Hitachi, I think.\"\n\n\"That's a big seller, but it's corded. A lot of toys today are battery operated or rechargeable. They have different speeds and patterns. Cordless is the way to go. Waterproof, too. We can start by looking at some YouTube videos of women talking about them.\"\n\n\"They have videos of sex toys on YouTube?\"\n\n\"Sure, but not showing them actually in use. That type of content is only on the adult sites, but the sex toy companies have posted slickly produced company promotional ads tailored to women. They're discrete enough to not violate YouTube's content policies. On the amateur side you can find people reviewing them. Mostly women talking about the pros and cons or how to use a particular toy.\"\n\n\"So you can watch videos like that on your tablet, and it can't be traced to me or this house?\"\n\n\"Sure. I'll turn off my Wi-Fi now.\" I quickly pulled up some YouTube videos from a Swedish sex toy company showing a charismatic pitchwomen extolling the merits of their new products. We spent awhile viewing various vibrator videos. Laurie seemed surprised, intrigued, and a little turned on by them. It was time to leave YouTube for something more explicit. I sought out an erotic Tumblr that had a general appeal, purposely avoiding the ones with a specific fetish. Just routine naked man/woman sexual activities. I wasn't sure about Laurie's tolerance of girl/girl content though.\n\n\"We'll look at some mainstream sexual content now\u2014but no gay or rough stuff. Although there may be a lesbian item here and there. Are you turned off by seeing two women together doing things?\"\n\n\"How would I know? I've never seen any of that.\"\n\n\"Have you ever kissed a girl?\" Laurie blushed instantly and shifted around in her seat. \"Your expression says 'maybe',\" I teased. \"Perhaps you were just fooling around, at summer camp? Slumber party dare?\"\n\nLaurie seemed extremely discomforted by my playful line of questioning. I immediately dropped it when I realized it might have involved Erin.\n\n\"So-o-o, anyhoo ... where were we?\"\n\nI explained what a Tumblr was and how the ubiquitous GIF format lends itself well to depictions of sex.\n\n\"Screwing and hand jobs and oral have an inherent repetitive rhythm that can look very natural, even though the animation is only a few seconds.\n\n\"As we look through these, if you see something that gets you going, make a note of it. Then we can pull up another Tumblr that highlights that particular activity.\"\n\nI turned the tablet so we both could see it, and off we went. It was mostly naked women by themselves or doing things with naked men. I started off slowly with still pictures before progressing to GIFs and videos.\n\n\"This is interesting,\" she said. \"I'm not so intimidated by these other women now that I have a little something to fill out my bras.\"\n\nWe were about ten minutes in when Laurie pointed to a naked woman standing in her bathroom, looking in the mirror. It was a selfie taken by a blonde with huge natural boobs and a very narrow waist, even providing a \"clothes on\" version of the same pose.\n\n\"If you ever wanted to know what Terri Unger looks like naked ...\"\n\nLaurie got a guilty look on her face. I was surprised she would say something like that.\n\n\"I'm so bad. Pretend you didn't hear that.\"\n\nLaurie made quite a few nervous comments here and there. She looked at a lot more content than I was expecting. I can't remember everything she said, but here's a good sampling of her observations:\n\n\"Is she speaking German? They seem to really be into it. Look at them, right there on the dining room table. Wow!\n\n\"I had no idea there were so many busty Asian women.\n\n\"Hah! That mask she's wearing wouldn't fool anybody. I'd still recognize any of my friends or co-workers if they were in this video.\n\n\"So this girl just sits in front of her computer and plays with her boobs? And guys pay to watch? Can anyone do this?\n\n\"You're telling me all of this is free? You never pay to look at any of it?\"\n\nI had almost forgotten her comment about Terry Unger when Laurie pointed to a slender, auburn haired woman with a nice pair of medium sized natural breasts, posing outdoors. A woman whose long hair was not pinned up in a severe bun.\n\n\"That gal looks a lot like me, doesn't she?\"\n\n\"Actually its does, except for the hair-do. You know, Laurie, I don't think I've ever seen you with your hair down all the way. Do you keep it up day and night?\"\n\n\"No, I let it down when I go to bed.\"\n\n\"Then that explains why I've never seen it like that.\"\n\nShe blushed the instant I said it. \"I'm sorry, Laurie. That was a really crude comment.\"\n\n\"No,\" she countered, patting my leg. \"You were merely stating a fact.\"\n\nWe kept going, a lot longer than I thought we would. The subdued enjoyment she displayed while viewing such a vast abundance of erotica seemed to have taken her\u2014actually both of us\u2014to weird, unexpected places. I wasn't sure where we'd end up. I didn't want to intervene or break the spell so I let her choose what to click on and how long to watch.\n\nThen things took an interesting turn. Laurie selected what turned out to be a short video. It looked like someone had edited down a full scene to a series of about a dozen quick cuts and converted them to very short GIFs. I think it would be worth describing what she saw in detail. You'll see why later.\n\nA young, attractive brunette is constrained in black leather bondage cuffs, attached to a wide spreader bar hanging from the ceiling of an elegantly furnished room. The woman's arms are pulled upward as she dangles from the bar, her feet barely touching the floor. She's wearing only a black satin sash as a blindfold plus a pair of sexy black panties. A handsome, confident male admirer in a dark suit, white shirt, and necktie is lewdly running his hands over her breasts and neck. He pulls her body close to his with one hand while forcing his other hand roughly between her legs as he aggressively sucks and bites her nipples.\n\nThe expression on her blindfolded face teeters between panic and lust. He moves slightly to her side, cupping her buttocks with one hand as the fingertips of his other drift up and down her front, from throat to mound, pressing in softly against her labia before moving back up. The man moves behind her. Her panties are gone now, and her head is tilted back in ecstasy. His hand alternately slaps her pussy and fingers it gently. His other hand lingers ominously at her throat as she struggles. The video cuts to a close-up of his fingers flicking across her clit, occasionally dipping in. Another cut to a close-up of their faces. Despite his expensive attire, the man has the unshaven, dangerous look of a Eurotrash playboy who's recently come into a lot of money. A man who can easily find women who'll let him do these things to them.\n\nI glanced sideways at Laurie, trying to be as unobtrusive as I could. Her gaze was transfixed on the bondage scenario playing out a few inches from us on my tablet. Is this a kink that Laurie has been repressing her entire life? What else am I going to find out about her sexual proclivities? Back to the video ...\n\nNow the black satin sash has been repositioned across her mouth as a gag. She alternately looks into his eyes and then down at his fingers teasing her pussy. We get another close-up, but this time his fingers are rapidly pistoning in and out of her quim. The next cut is a shocker: the man now has the gag pulled down so he can jam his wet fingers into her mouth, forcing the woman to taste her own cum. She looks exhausted; no telling how many times she came. The final gesture is his loving kisses on her mouth as he pulls her close and lets his other hand do gentle caresses on her body: from her throat, across her breasts, near her mound, and finally cupping her ass cheek, barely constraining his urge to be rougher.\n\nThe video, about thirty seconds long, was on an automatic loop, restarting from the beginning. Laurie watched several times, eyes fixed in fascination at the scenes as they played out repeatedly. Her soft, barely audible breathing had become more pronounced. She finally looked over.\n\n\"I'm not sure I'd want to be hung from the ceiling like that, but ... wow!\" She shifted around nervously on the sofa and reached over to refill our wine glasses. \"OK, I'm ready for more. Can you show me a guy jacking off?\" \n\nInteresting request. I found a video that showed a man edging himself in close-up, copious precum drooling from the tip of his substantial cock. Eventually he ejaculates hands-off, followed by a slow motion replay.\n\n\"Whoah! How does he come without stroking himself? Fascinating. And the slo-mo does add a nice touch.\"\n\nI showed her some similar ones that featured a woman making a guy come without stroking him.\n\n\"Now that's impressive. Just licking under his knob until he blows.\"\n\nI explained to her how the woman was stimulating the sensitive frenulum underneath the end of a man's penis and there was probably lots of traditional sucking and stroking leading up to the finale but not shown in the video. A compilation video of tit cum shots was up next.\n\n\"Oooh, she jerked his load all over her boobs! That's kind of sexy, actually. Wow, two guys, each one creaming on one of her titties at the same time. I never realized this was a 'thing'.\"\n\nLaurie was excited to see some cunnilingus videos. \"Finally, equal time for women. Eek, she's really hairy. Now I don't feel so bad.\"\n\nShe wondered if they had people our age. I explained what a MILF was and how the woman is often portrayed as the young man's teacher, neighbor, or the mother of a friend.\n\n\"Then there's plenty of content showing the reverse situation: older men with very young women. A schoolgirl uniform with a plaid skirt is a common costume, particularly the ones with Asian models. You don't see that many where it's mature couples together.\"\n\n\"Eeew! Why does she have her finger up his ass?\" I had to explain to her what a man's prostate gland is. Laurie was shocked. \"You've had that done to you? By a woman? And you liked it? Isn't that kind of ... sissy?\"\n\nTime to change the subject. When a scene showing a massive cock appeared, Laurie offered a comment.\n\n\"Yike! That guy's tool is scary!\"\n\nYes, it was. Thick as a tree. But after all, a baby has to come out the same hole it was plowing into, right? But Laurie wasn't concerned about girth.\n\n\"I'm talking about length. Hitting the cervix hurts, at least it does for me.\" She stared at the scene until its messy conclusion. \"I must say, the high def really brings it all home, doesn't it?\"\n\nEventually Laurie wanted to see more bondage content. I tried to avoid the rougher stuff, where the action takes place down in a dungeon; but she selected a few anyway. \n\n\"Are these women being paid to do this or do they actually like it? Or both ... or neither?\"\n\nWhat seemed to fascinate her, however, were the numerous \"prone bone\" scenarios where the woman is face down and the man enters from the rear\u2014either hole. The ones she picked out usually involved the woman's hands being tied behind her back. That type of sex is rarely gentle, to say the least.\n\nShe also watched ones where the woman is tied to the bed on her back. Laurie commented on the various restraints: scarves, handcuffs, ropes, spreader bars\u2014plus nipple clamps and other devices. She also weighed in on the prevalence of anal sex in the scenes.\n\n\"I still don't get it. Why would a guy want to go in the back way if he's got a perfectly good opening in front?\"\n\nShe had me pull up various Tumblrs showing submissive female sex. I wasn't sure where she was going with this, but I let her choose her own path. I finally had to say something.\n\n\"Laurie, this is more advanced sex play. But if you ever decide you want to experiment with some of these activities, I could restrain you like that.\"\n\n\"Then what?\"\n\n\"Then ... nothing. It's for you to get used to that feeling, of helplessness. Finding out if you could trust someone to restrain you like that for real. Then I untie you.\"\n\nShe thought about it for a minute. \"That seems kind of pointless unless there's some follow through.\" Laurie turned her head to look at me. \"Don't you think?\"\n\nI was speechless. Was she serious? She shrugged her shoulders and took another sip of wine. \n\n\"Just sayin' ...\"\n\nShe was playing with me, right? I could see a little smirk at the corner of her mouth. Or was some other desire hiding behind her deadpan humor. She handed the tablet back to me. \n\n\"I'm the most turned on I've been in years. I can barely get the nerve to say this out loud, but I need a release.\"\n\nWell, of course. Who wouldn't after looking at porn for over an hour?\n\n\"I understand. I can head out so you can take care of that. I'll leave the tablet in case you want to do some research on your own, in private.\"\n\nLaurie looked like she was burning up with shame. She touched my arm to keep me from standing up. Her dark blue eyes were penetrating. She hesitated.\n\n\"I'm scared to say what I want.\"\n\n\"Just blurt it out. Not much left between us to be embarrassed about.\"\n\nI was wrong.\n\n\"I want ... I want you to stay and ... and hold the tablet while I do myself.\"\n\nI was shocked into silence.\n\n\"You've already seen me nude, so it wouldn't be that big a step to take. Actually you won't be able to see much skin. I'll just loosen things a little bit and reach in.\n\nI was frozen with astonishment.\n\n\"Let's do it before we talk ourselves out of it.\"\n\nLaurie turned around and lifted her blouse in the back.\n\n\"Here, undo me.\"\n\nMy hands were trembling like a teenage boy unhooking his first brassiere.\n\nLaurie sat back and unbuttoned her blouse partway at the bottom and unzipped her shorts. I couldn't read the expression on her face. Some odd mixture of bravado and fright.\n\n\"Move over here and sit on the edge of the coffee table. Hold the tablet in front of you where I can see it.\"\n\nShe put her bare feet up on my knees.\n\n\"Go back to that one where she's hanging from the ceiling.\"\n\nWhile I was searching for the video, she made an observation.\n\n\"If you told me a week ago I'd be sitting on my mother's couch, fingers up my twat, in front of Erin's big brother while he shows me dirty sex videos on the Internet, I would have collapsed in\u2014\"\n\n\"Laughter?\"\n\n\"No, more like horror.\"\n\nI pulled up the video with the well-dressed tormentor and the spreader bar. Laurie leaned back, slipping one hand under her blouse and one in her shorts. A few seconds later her hands began to move beneath her clothes, and a soft moan escaped her lips.\n\nI couldn't believe the scene playing out in front of me. The lights were still down low from watching the movie. Her eyes were half shut as she watched the video over and over. Laurie's breathing became more erratic and her body shifted around on the sofa. I watched how her hands were moving. I couldn't see that much with them inside her clothing, but I could get a sense of the speed and rhythm, stopping and starting, how she liked to pleasure herself.\n\nLaurie's eyes were glued to the screen as her squirming became more pronounced. An unpredictable cadence of gasps and grunts filled the room. Soon a desperate, muffled squeal indicated she was nearing the end. Her body froze in an awkward position, eyes closed, one hand moving rapidly in her shorts, the other grabbing at her breasts. An anguished groan filled the room as her toes curled up. She gulped and fought to take another breath, finally collapsing on her side. We both sat there for a long time before either of us said anything. Her eyes still hadn't opened.\n\n\"I can't believe I just did that. Frigging myself in front of you. What are you turning me into?\"\n\nLaurie finally sat up and looked at me. We stared at each other until she had a request.\n\n\"I'm not done yet. Show me something where a girl jerks a guy to completion.\"\n\nWas this actually Laurie Quinn sitting there in front of me? What was I turning her into? I found a hand job compilation video, and she started back in on herself. Barely five minutes later Laurie climaxed again. She seemed a little less inhibited doing it in front of me a second time.\n\n\"OK, Joe. Just one more. Dealer's choice. Surprise me.\"\n\nI quickly tried to find a \"couples\" video that emphasized the eroticism more than the raw sex. The search produced a good sampling of videos featuring tasteful photography and attractive performers getting it on in sparsely furnished daytime bedrooms with billowing white curtains. I found one that was labeled mature, although the actors were probably younger than we were. The Eastern European woman had nice natural breasts, which is hard to find in that age group. Laurie slowed things down to match the languor of the on-screen couple having morning wake-up sex. She had another orgasm and slumped back on the sofa, exhausted.\n\nI wondered if I should be adopting a dominant role with Laurie. I set down tablet and leaned in toward her.\n\n\"Stick your fingers in my mouth.\"\n\nShe remained motionless, shocked by my request. I waited a moment for her to comply, then I moved nearer and took her hand slowly out of her shorts, raised her fingers to my mouth, and started sucking on them. Laurie seemed stunned by my eagerness to taste her cum. Almost involuntarily her other hand began manipulating her breasts. After I had cleaned off her fingers, I leaned over and grabbed the front of her blouse\u2014like some playground bully\u2014and pulled her upright.\n\n\"That proves I won't be timid about going down on you,\" I hissed at her. \"If I ever have the chance.\"\n\nI gave her a rough kiss on the mouth and pushed her back on the couch. Almost a minute passed before she said anything.\n\n\"I thought I'd be more ashamed than I am.\"\n\n\"Are you ashamed?\"\n\n\"No. It was more intense than I've ever experienced ... with a man in the room.\"\n\n\"And I wasn't even touching you.\"\n\nWe sat there in silence, wondering what was going to happen next. Laurie had a question.\n\n\"What about you?\"\n\nShe sat up and pointed to my crotch. A fierce erection was stretching the front of my shorts where a telltale wet spot had soaked through.\n\n\"Aren't you turned on watching the porn? And watching me\u2014a real, live woman\u2014inches away from you, going multiple by her own hand?\"\n\n\"Of course. It'll be the first thing I do when I get home.\"\n\nLaurie tilted her head quizzically. \"What is?\"\n\n\"You know, relieving myself, jerking off.\"\n\n\"Hmm ... that might be a bit tricky to do it in the same house with your sister and her husband there. Well, you're welcome to do it here,\" she said casually.\n\nWhat?!\n\n\"Are you serious?\"\n\n\"I just said it, didn't I?\"\n\nI couldn't believe how far things had gone. I never would have imagined prim, meek Laurie Quinn sitting there on the tired, old sofa in her late mother's house, with her hair not in a bun, blouse unbuttoned and her shorts unzipped, breathless from three orgasms.\n\nI was completely at a loss as far as the propriety of tossing off in the home of a woman I'd never had sex with. I couldn't imagine jerking my load into the bathroom sink that Laurie uses. That's bound to be bad form, even if it isn't in any of the etiquette manuals.\n\n\"Is there a second bathroom I can use?\"\n\n\"You can do it right here in the living room, in front of me. I'd like to watch.\"\n\nI'm sure a look of disorientation was spreading across my face.\n\n\"Haven't you ever done it in front of a woman before?\"\n\n\"Sure, but it was for variety. And after we'd had sex lots of times.\"\n\n\"So you never did it on your earlier dates before you went all the way? Or as birth control?\"",
        "\"Sure, but that's when she would do me. Give me a hand job. But I've never done myself in front of someone I've never been to bed with. Have you ever watched a guy do it before?\"\n\n\"No, I haven't. But there's a first time for everything, right?\"\n\nLaurie tilted her head back slightly as the tip of her tongue moistened her lips seductively. It almost seemed involuntary. She had me off-balance emotionally and was enjoying it.\n\n\"Can't you stand in front of me and do it? Finish on my body? Like those videos where the guy shoots out on her tummy or her boobs or her bum? Here ...\"\n\nLaurie stood up and unbuttoned the rest of her blouse and striped off her bra, tossing them to the side. She pulled off her shorts and panties and twirled around like a ballerina.\n\n\"There, just like up on Falcon Rock. You can just drop your shorts and take it out, like you did up there.\" She plopped back down on the sofa and patted the cushions on either side of her thighs. \"Come kneel here, straddle my legs. Remember, I've seen you naked before.\"\n\nI obeyed silently, as if in a trance. My cock was harder than marble. I don't think I'd ever been so turned on and discomforted at the same time as I exposed my erection.\n\n\"Mmm, no cold water effects this time\u2014quite the opposite.\"\n\nHer playful manner ended abruptly.\n\n\"Let's make one thing clear: I'm not going to touch you. You're on your own. I'll merely be a passive observer.\"\n\nI knelt on the sofa, swooning at the reality of having my stiff, dripping cock in my fist, inches away from Laurie Quinn's bare breasts.\n\n\"Just keep it off my face, OK? I'm not ready for that.\"\n\nI couldn't believe this was happening. My thoughts drifted back to seeing her in Natural Grocers a week earlier, innocently pushing her cart around in her faded UT sweatshirt.\n\nAfter watching all that erotica my cock was within a few dozen strokes from going off. Not to mention the thrill of having demure Laurie Quinn there, watching it with me, taking it all in. Turning into an uninhibited, randy minx. I still couldn't believe she had diddled herself to several orgasms right in front of me.\n\n\"Go ahead, Joe. I'm waiting. Start stroking. Don't be shy. I showed you mine, so to speak. Now you show me yours.\"\n\nI had to close my eyes at first; it was too overwhelming to look at her while I tugged on my prick. Laurie chided me for my cowardice. \"No fair. I thought you liked looking at my deep blue eyes.\"\n\nI finally got into the groove. It was like when people describe their conscious selves leaving their body and floating up to the ceiling to watch some unimaginable activity occurring down at ground level. Laurie wasn't afraid to look me right in the eye; that wasn't like her. I used my free hand to fondle and massage my balls, increasing the pleasurable tingle between my legs.\n\n\"Hmm, I'm learning a few things from watching this. How you're caressing yourself. And where,\" she said pleasantly. \"I'll show you how I like my breasts to be touched. You can watch while you're stroking your shaft.\"\n\nLaurie followed through on her promise, playing with her impossibly swollen nipples and running her hands all over her boobs. She had to know that was making me burn even hotter down below. From that point on she didn't say much, just a few soft, monosyllabic words of encouragement. Even though my balls were aching, I wanted to prolong the sensation as much as possible. I kept my cock teetering right on the edge of an orgasm\u2014such sweet, smoldering agony!\n\nI was so close. Precum was leaking down onto her thighs. A few more strokes and there would be no turning back. Laurie pressed her boobs together, her mouth slightly open as she looked up at me with anticipation. I met her stare. She began jiggling her breasts, making a more inviting target.\n\n\"Joe, you're holding back on me, aren't you?\" she scolded. \"Forget what I said earlier about not touching. Do you know how close I am to grabbing your dick and finishing you off?\"\n\nThat comment was enough to trigger my pre-ejaculation, a steady flow of semen pouring down on her leg, right before the major contractions started. She seemed startled by how hot it was.\n\n\"Laurie, are you ready for this? I'm going to shoot all over you now.\"\n\nBoy, and shoot I did! Nearly a dozen forceful spurts against her chest. She gasped as each shot impacted her body, strong and hot.\n\n\"Oh god, Joe. That is so hot. So much ... so much. Oh, wow!\"\n\nA final drop of semen dangled from the end of my cock, left behind after my last contraction. I scooped it up before it could fall on her carpet and rubbed it all over my sensitive glans. Laurie was still cradling her boobs in the palms of her hands as my cum ran down the front of her chest and onto her stomach.\n\nWe were speechless, sheepish grins spreading across our faces. Laurie finally asked for a favor.\n\n\"Joe, would you be a dear, and go down the hall over there to the powder room and get the box of Kleenex?\"\n\nI stumbled in the direction where she had pointed, trying not to keel over. When I returned I held out the box so Laurie could take what she needed to clean up. She used numerous tissues, remarking that maybe she should have sent me for a roll of paper towels instead.\n\nWhen I got back to the den after disposing of the evidence, Laurie was buttoning her blouse. Her panties and bra were still on the sofa. I approached her, and we both stood there awkwardly for a minute.\n\n\"I guess it's true,\" she remarked as she put her arms around my neck.\n\n\"What is?\"\n\n\"About the grocery store being a good place to pick up women for sex.\"\n\nWe both had a good cackle over that one. Laurie asked if she could borrow my tablet and return it when I came to pick her up for my birthday party. She wanted me to bookmark a few websites that had how-to instructions for hand jobs and blow jobs.\n\n\"I think I need to do some research before things veer off into uncharted waters.\"\n\nI thought of a few couples-oriented sites I knew would be perfect. Just before I pulled up the first one, she reached out and touched my shoulder.\n\n\"Do me a favor, will you? What happened here tonight ... why don't we let that be our little secret for now?\" she said with a wink.\n\nShe didn't have to elaborate. I readily agreed and invited her to sit next to me as I revealed the ones I had chosen.\n\n\"I'll show you three different women who've established themselves as quasi-amateur porn stars, mostly in the blow job and hand job arena. Each has their own website and individual style, and they only have sex with their husbands or boyfriends. Plus you never see any shots or camera angles that would require other crew people on the production, so it's just the two of them\u2014or it seems that way. It's either point-of-view, or POV for short, where the guy holds the camera and points it at the woman and/or stationary shots on a tripod.\n\n\"The first gal is a longtime Internet favorite. She and her husband do videos where you see her but rarely him. Mostly shot from the husband's POV, but they also use a second camera on a tripod for a two-shot with only his lower body visible. Plus the slow-motion replays are always a treat.\n\n\"She is an absolute cum slut: on the face, on her tongue, on her tits, in her hair. And she swallows with gusto. I think her humor and playfulness set her apart from the others. You hear the whole dialog between them, particularly her talking as she works on his cock. Her specialty is the ultra-slow hand job or blow job once she's gets him close to ejaculating.\"\n\n\"Her boobs are huge! Are they real?\"\n\n\"I think so, at least in all the early videos. My ex-girlfriend even had a subscription to this website. We loved watching it together and getting turned on by her antics.\"\n\nI could tell Laurie was shocked by the revelation. Until that night she could probably honestly say that she didn't know anyone who openly admitted to watching hard core pornographic videos, especially ones involving facials and boob cum shots and swallowing. Not to mention someone who had a paid subscription to a website with all of that!\n\n\"Now this second performer has a different style. No dialog, just contemporary electronic music soundtracks. She films herself in very soft focus. Same general framing: you see her face and boobs but just his dick. His cum mostly end up in her mouth.\"\n\n\"I didn't know this could be a career move for women,\" Laurie noted. \"Doing your own thing and not having to get chewed up in some sleazy operation run by creepy, threatening men.\"\n\n\"OK, this last one has a little soft focus going as well. She's very sexy but keeps all her clothes on. This subgenre of porn is called 'clothed female, nude male' or CFNM for short. Again, you only see her face, never his. Just his cock.\"\n\n\"Do I need to be taking notes?\" she quipped. \"I have to say, there's something really sexy about a woman working that slowly and deliberately on a guy's pole. I imagine that's a very satisfying way to have her take care of you.\"\n\nWe finished up by watching some extremely explicit sex education videos.\n\n\"This is a whole different class of erotica. An emphasis on Kama Sutra type sensibilities and surroundings: incense, candles, hot tub, massage oil. A helpful narrator keeps you informed every step of the way. No cum shots, though. I think you have to pay to see the 'happy endings' on their website.\"\n\nLaurie seemed overwhelmed by the sheer explicitness of the videos and their noticeable difference from the usually tawdry mainstream professional porn.\n\n\"I think I've got enough to work with. Thanks for walking me through this extra material. You selected some interesting offerings, Joe. I think I'm going to have fun with this. As an educational exercise, of course.\"\n\nI gave Laurie a final goodnight kiss and reminded her of the time I'd be picking her up Sunday night.\n\n<br>Double Dating at FunLand:\n\nBirthday night, the Big Five-Oh: Joe gets to do what-ever he wants. I had nixed Erin's suggestion of going to that free summertime community event, sitting in lawn chairs in front of City Hall, passively watching a movie on a temporary screen. Besides, I wasn't interested in getting dinner from a food truck when my birthday status could get us cuts to the front of the line outside Post Oak BBQ\u2014an otherwise interminable wait that I refuse to put up with the other 364 days of the year, even though their food is exceptional.\n\nI went to pick up Laurie while Erin and Ed were getting cleaned up and ready. She came to the door wearing another atypical outfit: sexy and flattering, effortlessly casual and chic at the same time. I was really curious about the secret behind her sartorial transformation.\n\n\"Joe, here's your tablet back.\" She declined to say anything about what she might have viewed on it when I asked.\n\n\"We can discuss it later. Otherwise you'll be fixated on my reactions the rest of the evening.\" She had a good point there.\n\nAfter pigging out at Post Oak BBQ, we swung by the 7-11 to get some beer to drink while we played mini golf at FunLand. Yes, they let you bring your own as long as it's in cans. That's a perfect example of why a small, family-run business is different from a national corporate operation. Erin limited us to a single six-pack between the four of us, being the spoil-sport that she is.\n\nSince it was still sweltering outside, the mini golf courses weren't crowded. We originally planned to play all three, since we never had to wait at any of the tees; but we stopped after the second course. Erin and Ed wanted to take a spin in the go-karts for a change of pace. Laurie and I declined, instead using the opportunity to enjoy some frozen custard from the snack bar.\n\nThe harsh noise and foul exhaust from the go-karts enveloped us as we sat on a bench, silently licking on our cones. I glanced down at the bandage on her scraped knee, recalling her breezy nudity up on Falcon Rock. Laurie eventually had something to say, although she didn't turn to look at me.\n\n\"Joe, I've been thinking about what you suggested last night. Especially while I was using the tablet after you left. I saw some very interesting visuals as I jumped around to various websites. Remember, you talked about us trying out some of the erotic activities we saw on the videos?\" she asked nonchalantly. \"I think I've built up a level of trust I'm comfortable with. To move forward on that plan. How about you?\"\n\nA surge of blood flooded my penis. \"So you think it's a good idea? Our experimenting together?\"\n\n\"Sure, kind of like a test kitchen, working out various recipes,\" she explained as she concentrated on swirling her tongue around the diminishing dome of custard sitting atop her cone. \"But I think we should drive to Dallas and get a room. I'll pay for it. Let that be my birthday present to you.\n\n\"It's too weird thinking about it happening in my parents' house. It's too depressing and staid for what we have in mind, and doing it in their bed would be way too creepy.\"\n\nShe still hadn't looked over at me. I had to admire her wry, deadpan manner of laying out the plan. The plan where we would fuck each other's brains out on an overnight road trip. Laurie was full of surprises. Who knew?\n\n\"Should we say we're going there to catch a Rangers baseball game?\" I wondered.\n\nShe laughed. \"It doesn't really matter what our cover story is if we spend the night.\" Laurie finally turned to look at me and grinned. \"Can you handle the teasing at home from your sister?\"\n\n\"Sure, I'm a big boy.\" I didn't mention Erin's cautionary words about Laurie's possible motherhood quest.\n\n\"I know of a cute boutique hotel in Uptown we can stay at, though we'll likely be some of the oldest people there,\" she warned.\n\nWe quickly decided to leave as soon as we could. Laurie filled in some more details.\n\n\"I can't go tomorrow. I have someone coming over to do the appraisal for the estate sale. So let's do it the next day. We can leave right after lunch, around 1:30. I'll drive over there, and you can drive back. Bring a bathing suit. I don't think we can get away with what we did up on Falcon Rock at the hotel pool. They've got a good restaurant there, but there're lots of other choices within walking distance. Plus there's a free trolley that runs up and down the main drag.\"\n\n\"I've heard about that, like the ones in San Francisco. Each one's a different historic streetcar from other cities.\"\n\nI watched Erin and Ed get out of their go-karts and head our way. Just before they got within earshot Laurie added one other thing.\n\n\"I can supply the scarves for restraints, if you can bring the condoms ... and whatever else you think would be helpful.\" Laurie gave me a teasing smile and popped the tiny remains of the cone in her mouth and began licking her fingers.\n\nWhile I tried to regain my composure after that last comment, the others had a short discussion about whether we should call it a night or head over to the midway and wallow in the nostalgia of cotton candy, arcade games, and nausea-inducing carnival rides. I used my birthday privileges to veto any more activities at FunLand. I was more interested in seeing what Ms. Quinn might have in store for me when I took her home.\n\nEd went off to get some sodas from the vending machines while Laurie headed for the ladies' room. As soon as they were gone, Erin pounced. She plopped down next to me and literally got in my face.\n\n\"What have you done to Laurie?\"\n\n\"What do you mean 'what have I done to Laurie'?\"\n\n\"She's acting really weird.\"\n\n\"You say she always acts weird.\"\n\n\"No, you know what I mean. For starters, her hair is in a ponytail instead of pinned up tightly. I haven't seen her in public like that since we were Campfire Girls. She even had some discreet cleavage showing when she bent over to putt. I'm sure my husband noticed that.\n\n\"And she's acting calm and easy-going. Confident, self-assured. She's usually a mess of neuroses and indecision. Self-doubting, uneasy around men. And her clothes! A dress to play mini golf? Did you take her shopping?\"\n\n\"No! What makes you think I would do that?\"\n\n\"Look, I know Laurie and I know women. She has on things she would never normally wear. Laurie has always dressed like a waif or a dowdy old maid, even when she was in college. And still does\u2014until tonight. I recognize the style of clothes and shoes and jewelry she has on. They had to come from Neiman's or Bloomingdale's. Not the stores she usually shops in.\n\n\"Laurie's idea of fashion forward is Old Navy. And she wears things way past their expiration date. That dress she has on is so unlike her.\"\n\n\"I thinks it looks good on her.\"\n\n\"Exactly my point. The tasteful floral pattern. The graceful drape and above-the-knee hemline. Those cute pin tucks in front, down to the dropped waist. That's so not her. Did you see those half-pint fringed boots she has on? And I'd kill for that necklace, all those semi-precious stones. She's usually a great-grandma's brooch kind of woman, if she wears any jewelry at all.\n\n\"Plus her sassy little cross-body purse. She usually drags her stuff around in a lumpy tote bag that barely qualifies as an airline carry-on. And she beat me at golf\u2014twice! She hasn't beaten me at anything since we played Candyland when we were little. Tell me the truth: have you been to bed with her? I'll know if you're lying.\"\n\n\"I swear, I haven't touched her, sexually anyway. Just out on the dance floor at the river concert.\"\n\n\"Not even a goodnight kiss?\"\n\n\"OK, that. After the concert. I was just being polite. No tongue.\"\n\nErin wrinkled her nose in disgust: \"T.M.I.\"\n\nI decided to limit my confession to what we'd done in public. Our little secret, remember? If I had poked Laurie, telling Erin would trigger a big reaction. But if I told her what we had actually done on movie night, it would be much worse.\n\nErin shook her head. \"She may still be able to bear children, so watch out. Her biological clock could be mounting a last minute surge.\"\n\nI felt like we were regressing to our childhood roles and Erin was going to start a sing-song chant of \"Joe's got a girlfriend, Joe's got a girlfriend\" at any moment. Oh, but crafty Erin threw me a real curve ball, one I never saw coming.\n\n\"If there's nothing going on between you two, then neither you nor Laurie should object to my giving her a ride home instead of your driving her. I need to get to the bottom of this.\"\n\nWhat could I say to that? Damn it!\n\n\"Sure, go ahead. Save me the trouble.\"\n\nErin wasn't expecting me to cave so quickly. She gave me her \"I know you're hiding something\" look.\n\nWhen the four of us got back home, Erin used the flimsy excuse that I'd had more to drink than she had, so she'd handle taking Laurie home. If Laurie was thrown by this, she didn't show it.\n\nWhile Erin was playing chauffeur, I sat in the kitchen alone, gorging on more birthday cake, reading my email, and catching up with the day's news. I tensed up when I heard her key in the back door. She breezed right by me with an odd look on her face. Erin ignored me until she was halfway up the stairs.\n\n\"Shut off the lights before you turn in.\"\n\nLooks like Laurie told her about the Dallas trip.\n\nI pulled up the website of one of the major drugstore chains and clicked over to their Sexual Well-Being department. It's unbelievable what they sell online nowadays. I located the vibrator Laurie had shown some interest in while we were watching the sex toy videos. I added some of my favorite lube but got bogged down in the condom department. I hadn't bought any in ages and was bewildered and overwhelmed by the selection.\n\nAfter finally defaulting to an old standby brand, I added a sturdy pair of medical scissors. The BDSM websites strongly recommend having them handy in case you had to cut someone loose quickly from their restraints. A single click later, the order was on its way via overnight express delivery."
    ],
    "authorname": "KenNicottii",
    "tags": [
        "romance",
        "public nudity",
        "light bondage",
        "masturbation",
        "cunnilingus",
        "dirty talk",
        "dancing",
        "hotel",
        "redhead",
        "tied"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-flume-at-falcon-rock"
}