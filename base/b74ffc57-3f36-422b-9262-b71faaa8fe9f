{
    "title": "Trawling Atlantis",
    "pages": [
        "Hello again. A couple of comments at the end of 'The Thin Line Between' asked if this story will appear again. Well... here it is! Hope you enjoy it, whether it seems a little familiar or is totally new to you. Made a significant edit which I'll point out at the end.\n\nThree things influenced this story. Two songs and the BBC documentary series 'Trawlermen'. If you want to watch a bunch of hard, northern Scotsmen sailing the seas, with the thickest accents imaginable, I can only recommend it.\n\n*****\n\nCHAPTER ONE\n\n\"What's your name, son?\"\n\n\"Christopher McDonald, though I'd prefer to be called Chris. Mates back home called me Macca.\"\n\n\"McDonald? Well, you're obviously not local from the accent. Have you got family over here?\"\n\n\"Ancestry is in Inverness. My grandparents' brothers and sisters still live there, well, those still alive anyway. My mother's parents moved to Australia in the sixties. Dad's family is originally from Glasgow, though further back along the line.\"\n\n\"And what brings you all the way to Peterhead? I mean, apart from showing up here looking for a job.\"\n\n\"It's a long story, and to be honest, not one I really want to go into now. I know that doesn't sound too good, considering I'm desperate for a job. Maybe one day I can explain it all. I'm not in trouble with the law, either here or in Australia. I'm here legally in the UK,\" gesturing to the documents I had, \"But I'm not allowed back home, primarily by my father. I decided it was best if I just left.\"\n\n\"Sounds like one hell of falling out?\" I nodded but stayed silent. \"Very well. So, you're here now, looking for work. Do you know what being a trawlerman involves?\"\n\n\"Long, wet, tiring days and nights at sea.\"\n\nThe captain laughed. \"Very simply put but, yes, that's about it. I'll be honest, it's very hard work. Weeks at sea as we look for a catch. Cold, wet and miserable most of the time on the North Sea, god forbid if we head anywhere near the Atlantic. And it's bloody dangerous. I've lost two men while captaining my own vessel, both overboard, never to be seen again. Before that, I've worked on ships where men have been injured, maimed and killed. It can be a ghastly business.\" He gestured to the plaque above the bar. \"That's the list of names of men lost since the turn of the 20<sup>th</sup>. Names are still added to this day. And not all the bodies are found. We've put many caskets into the ground which were empty.\"\n\n\"I'm aware of the dangers involved. But days and weeks away at sea sound perfect.\"\n\n\"The guys will give you a lot of shit to begin with. I hope you have broad shoulders.\"\n\n\"I'd expect nothing less. I know I'm young, but I'm fit enough, willing to learn and want to do this.\"\n\nHe cast me with a keen eye, judging my sincerity. Ever since leaving Australia, I'd wondered what I was going to do with my life. I knew I didn't want to be stuck in an office five days a week. I wanted to breathe fresh air and feel the wind in my face. And I also wanted to enjoy the camaraderie of my fellow man. Since joining the forces was out, something I'd always considered doing, I started looking at other options, and remembered watching a documentary series on TV called 'Trawlermen'. I found it rather interesting, the work looked gruelling, but I enjoyed watching the friendships of the men and the work, while hard, didn't look too difficult. Sure, I'd have to learn, and learn fast, but I was willing to give it a go.\n\nCaptain Jack McTavish stuck out his hand. \"I'm always willing to give someone eager to work a chance. We cast off two days from now. 5am. Don't be late.\"\n\nI shook the offered hand. \"Thanks, Captain. I won't let you down.\"\n\n\"If you do, I'll throw you overboard myself.\" My face must have dropped as he started to laugh. \"Pulling your leg, lad. I won't do that.\" His face turned serious in an instant. \"Because one of the others will do it for me.\"\n\nI chuckled nervously, as I knew he was probably right. \"I'll be on time and raring to go, Captain.\"\n\nI watched as he filled out some paperwork, stating I would now be employed and paid by him, handing me copies to sign and keep for myself, as he kept a copy while the third would be sent off to the government. Once everything was dotted and crossed, he shook my hand again, told me not to be late but to enjoy my last two days of freedom. The one suggestion he made would be the best piece of advice he ever gave me.\n\nGet as much sleep as possible.\n\nOf course, sleeping wasn't something I wanted much of. If I slept, I would start to dream. And I would dream of her. The reason why I was now in Peterhead, Scotland, looking at being a trawlerman, instead of living back in Sydney, Australia, wondering what steps we would have taken in our lives together.\n\nI sat at the bar most of the evening, chatting with the locals, always centre of attention once they heard my accent. Most of the questions were the same. What the hell was I in Peterhead for? Why the fuck would I want to be a trawlerman? Did I have a screw loose or a death wish? I answered the first question easily, the second I handled rather deftly, and while I don't think everyone believed me, they respected the fact I was an outsider willing to give it a go.\n\nAfter a night on the ale, I headed up to the bedroom I'd occupied for the past week as I'd looked for work. There was little in the room. My large backpack. A double bed. A small bathroom with a shower, basin and toilet. Closing the door behind me, I just felt incredibly lonely, ostracised from my family, my friends left far behind.\n\nI stripped down to my underwear and got into bed, flicking on the small TV, though there was little on and was feeling tired in minutes. Switching it off, I read my kindle for another five minutes at most before sleep overcame me and I started to dream. And, of course, my dreams were about her.\n\nI missed her terribly.\n\n*****\n\nAlexandra, though she preferred Alexa, was my sister, born two years after me. From an early age, we were inseparable. I know she worshipped the ground I walked on, while she was always my cute little sister. We loved each other dearly, though I mean the innocent sort of childish love of the time. Before we hit puberty, we were just a pair of siblings who happened to actually like each other and enjoyed the other's company. I know it made our parents lives easier, as Alexa and I were a real team. I'd help her with homework, as I had done exactly the same work two years prior, while Alexa just made me feel... good. She'd often come looking to me, even at a young age, simply to give her a hug, instead of Mum or Dad. At school, I was her big brother and protector, and being one of the bigger kids, no-one messed with my little sister.\n\nI would have thought when both of us reached puberty, we would have drifted apart. But we didn't. Even as I hit the mid-teens, we were still as close as ever. In fact, I think we were probably too close. I knew by the time Alexa hit her teenage years, she definitely had a crush on me, while my cute little sister was already developing certain womanly features impossible to ignore.\n\nBut while both of us noticed the changes, our relationship remained entirely innocent. I think the only people who may have been concerned would have been our parents. I can understand why, for example, when Alexa would snuggle up next to me on the couch when watching a movie. It would appear innocent, but my heartbeat would definitely increase and, being the young man I was, blood would flow to areas I wished it wouldn't.\n\nI think we knew our relationship may have been more than siblings, if we wanted it to be, when Alexa was around 16. I was 18, in my final year at school, ready for final exams, and had just finished talking to a friend about the end of year formal (otherwise known as prom to Americans.)\n\n\"Do you have a date for the end of year formal, Chris?\" Alexa asked once I was off the phone.\n\n\"No, I haven't asked anyone.\"\n\n\"Why not?\"\n\nI just shrugged. \"I don't need one. If I could take my little sister, I would.\"\n\nShe blushed. \"You'd take me?\" she asked quietly.\n\n\"Of course. Why not? What's wrong with wanting to take my little sister on a night out?\"\n\nAlexa shrugged, blushing brighter, not meeting my eyes. \"Chris?\" she asked quietly.\n\n\"Yeah?\"\n\n\"Why have you never had a girlfriend?\"\n\n\"I don't need one, Alexa. I have you.\"\n\nShe looked me in the eyes. \"But, Chris, I can't be your girlfriend.\"\n\n\"I didn't say you were, or you had to be, Alexa. I just mean... I prefer being around you than anyone else. To be honest, you're far more mature than most of the girls I have to deal with on a daily basis anyway. I don't hear the same crap out of your mouth. You're intelligent, witty, make me laugh and....\" I trailed off, not willing to share the last bit.\n\n\"And what, Chris?\" she asked, nearly inaudible.\n\nI took a deep breath and looked at her. \"You're blossoming into one hell of a beautiful young woman, Alexa. Any boy or man would be lucky to have you on their arm.\"\n\nShe grabbed my hand and squeezed it, on the verge of tears, I think. \"Thank you.\"\n\n\"Just being honest, Alexa,\" I said, squeezing her hand back, before dragging her in to give her a hug. Entirely innocent again, at least physically. Emotionally or psychologically, I think things were different.\n\nAfter that one conversation, where I certainly insinuated I had other feelings than just those brotherly ones I'd always had, our relationship definitely changed. For the better in one way, as there was no doubt our crushes for one another were turning into something far deeper and meaningful. But for the worse in the other, as our parents were definitely aware of how close we were becoming and I knew they were growing concerned.\n\nThe one thing I knew I couldn't or wouldn't do was be intimate with my sister. Definitely not before she was an adult, as even though the age of consent in our country is 16, I knew I'd be fucked legally if I tried anything as an 18-year-old. And god forbid anyone actually found out. But even though, with each passing day, week and month, I knew I wanted her, I wasn't sure I could actually take that step into telling her how I felt, despite how obvious it was, and then actually doing the deed itself. I know she felt the same, insinuating enough over time, but I figured, being the older sibling, I'd have to make the first move.\n\nSo I left my feelings unsaid and tried to move on with my life, finding it slightly easier once I left school.\n\nI knew I had to do something, and once I'd graduated, found a job and started working, it wasn't long until my social circle expanded and I met Melanie. She was a couple of years older than me, but a stunning red haired, green eyed beauty, that I was immediately smitten with. I was told you shouldn't shit where you eat (otherwise known as dating a colleague at work) but, once she reciprocated my interest, I asked her out and things developed from there.\n\nWe had sex within a fortnight of our first date. Obviously, she was my first and she was quite happy to show me the ropes. The difficult part was inviting her around to meet the parents and my sister. To say the reception from my sister was frosty would be an understatement, but underneath the cold stare, when she looked only in my direction, I could see the pain and heartache I was causing. But there was nothing I could do. I would have sat down and explained it to her, if I could, but I didn't think that conversation would go well at all. In fact, I think it would have destroyed our relationship. Upon meeting Melanie, it was strained enough.\n\nMelanie and I dated for around eighteen months before the night that changed everything. Did I ever love her? In a way, I did. As I said, I was smitten to begin with. She was attractive, rather bright and made me laugh. She was also my first, so there were the feelings that come with that too. But did I love her as much as my sister? I've got to be honest, I simply didn't. I knew I was effectively 'settling' for her as the woman I truly wanted simply wasn't available. Or, she was available, but not to me. I'm aware that makes me sound like an arsehole but... I was making a choice to protect myself and Alexa in the end.\n\nThe relationship between Melanie and I eventually turned rather serious, particularly once Melanie started to mention moving in together. Figuring that was a sensible move to make, I talked to my parents about moving out and they seemed quite pleased for me to finally leave the family home. Not in any bad way, but I was now a grown man, in a serious relationship, and they subtly suggested this was the first step towards possible marriage, kids and all that. Just thinking about marriage left me feeling cold, as I wasn't sure I could ever do that to Melanie. I cared for her deeply, loved her in my own way, but that was one hell of a big step, a show of utter commitment.\n\nAnd I just knew the vows I would state would be a complete lie.\n\nBut all the above was moot on the night I slept with my sister.\n\n*****\n\nAlexa appeared surprised to see me walk in the front door alone, a broad smile forming as she skipped forward to hug me. I just hugged her in return, certainly glad that our relationship had somewhat recovered since those early days when I started to date Melanie.\n\n\"Where's Melanie?\"\n\n\"She's gone out for the night with the girls. Where's Mum and Dad?\"\n\n\"Said they were heading out for the night. Dad said 'Don't expect us back to the morning'. Ugh, I don't even want to think about it.\"\n\n\"So it's just us two?\" I asked, unable to hide the smile.\n\n\"Looks like it. We haven't had a night like this in quite a while.\"\n\n\"Why aren't you out, now that you're 18 and all?\"\n\nAlexa just shrugged. \"Going out and just getting shitfaced doesn't interest me. Plus...\"\n\n\"Plus?\"\n\n\"I knew you were going to be home tonight. So I abandoned all my plans.\" She hugged me tightly again. \"I just wanted a night of having you to myself.\" I'll admit I liked the sound of that too. Probably a little too much, in all honesty. She pulled back, though still held me around the waist, looking into my eyes. \"So, I'm thinking... I'll make us dinner, then perhaps we could share a bottle of wine or two and watch a movie. Sound good?\"\n\nI leaned down and kissed her cheek. \"Sounds great, Alexa.\"\n\nI sat on a stool at the kitchen counter, watching Alexa cook our meal. She stood at around 5'6 and had pretty much stopped growing upwards. She had the most perfect pair of perky boobs possible. I mean, those things just sat there on her chest, even without a bra. I tried not to be too obvious as I wondered if she wore one now. She was slim, though not thin. I knew she exercised, but she had some subtle curves that nearly all men appreciated. Alexa was a brunette, a rather light brown, her hair in a simple ponytail. Definitely cute, as she bounced around the kitchen. She met my eyes, knowing I was staring, her blue eyes looking into my brown, watching a shy smile form, her lightly freckled little nose crinkling as she started to blush.\n\n\"What?\" she asked quietly.\n\n\"Sorry. It's just... You're gorgeous, Alexa. I mean, I remember this cute little girl of five, ten or even fifteen years old following me around. I wonder where she's gone and who this woman is in front of me.\"\n\nAlexa put the tray into the over before approaching me, wrapping her arms around my neck and kissing my cheek. \"She's definitely still here, though she's now definitely a woman,\" she breathed into my ear. Feeling her hot breath in my ear and then along my neck, I was hard in an instant.\n\nI turned to look at her and I felt a desperation I'd never felt before, to simply hold her in my arms and kiss her. And I don't mean the chaste kisses we'd always shared. I mean the sort of kiss that would result in lots of tongue, hands exploring bodies and... other things. But I took a deep breath, calmed my heartbeat and just smiled.\n\n\"She most certainly is.\"\n\nTwo rows of pearly whites appeared before she kissed the tip of my nose. \"I'll just prepare some potatoes and veggies. Got to keep feeding your properly, Christopher.\"\n\nMy erection having thankfully subsided, I grabbed a bottle of wine from the fridge and poured us a glass each. My sister rushed out of the kitchen to grab something, returning with her phone to put on a bit of music, bouncing around the kitchen as she continued cooking. She was absolutely mesmerising. I had to shake my head at times, emptying my mind of the million and one thoughts I was experiencing, all of them exciting but none of them feasible.\n\nI couldn't help but stare at her arse as she shook that, dancing along to some song I barely noticed. I had a feeling she was doing it all on purpose, and I didn't care one little bit. Then she'd turn side on and I'd watch her boobs jiggle about, learning that she was definitely wearing a bra, but that didn't matter. I had to resist the urge to get up and dance with her in a way that would be incredibly suggestive. I sat there and wondered if that was what she wanted.\n\nAfter a couple of songs, she stopped dancing and walked towards me again, cuddling into me for a few minutes, resting her head on my chest. I cuddled her back, inhaling the scent of her shampoo, and she was definitely wearing some sort of perfume too. She smelled fantastic. She always did, to be honest.\n\n\"I miss you,\" she said quietly.\n\n\"I know, Alexa. But...\"\n\nI heard the sigh. \"I know. I know.\" She lifted her head to look at me. \"Part of me just wants to be selfish and keep you all for myself.\" I could only smile, tempted to say I wouldn't mind if she did. But I couldn't be that honest. I had to jog my mind, and remind myself I was in a relationship with... Melanie, that's her name.\n\nThankfully, the oven dinged before I could contemplate any sort of response, Alexa just smiling at me as she started to serve up two plates. We sat the dinner table, with another bottle of wine already opened, eating in contented silence, though Alexa would occasionally look at me and just smile. I automatically smiled in return, simply left wondering what was on her mind. If it was anything like mine, then something was going to happen. And I was unsure if I wanted to stop it if it did.\n\n\"What movie do you want to watch?\" Alexa asked, once we'd finished dinner and cleared up.\n\n\"I'm easy, Alexa. Whatever you want.\"\n\nWe ended up watching what I would have called a 'chick-flick', some romantic comedy from the UK. I barely paid attention, though, because before we got settled, Alexa grabbed a blanket from the cupboard, as the evening was rather cool, switching off the lights before covering us both in the blanket. She then snuggled into me, a hand resting on my chest as I wrapped an arm around her, holding her close. It was something I would have called rather intimate.\n\nI think we'd barely watched half an hour before her hand started to slowly move up and down my chest, very slowly, very softly, but even that was enough to get my engine running. I just held Alexa that little bit tighter in response, running my hand up and down her side. My heartbeat was thundering in my chest as I thought 'What the hell am I doing?' The other part, the louder and larger part of my brain, was telling me to just do it. I know I wanted it. And I knew she wanted it too. It was finally time to give into temptation.\n\nWe must have been able to read each other's thoughts, as we turned to look at each other at the same time. We just stared for what felt like hours before I lowered my lips to hers, kissing her for the first time. It was brief, only a few seconds, before I pulled back. She smiled before reaching behind my head and pulled me in, opening her mouth immediately and she readily accepted my tongue. She was on her back in seconds as we made out, the pressure that had been building up between us finally being released. My hands were already very busy, appreciating her soft skin and subtle curves. Hers were all over mine, feeling her smile as she kissed me, as I had developed rather broad shoulders and some defined muscles thanks to my job.",
        "I pulled back for a moment and had to ask. \"Are you sure, Alexa?\"\n\n\"What do you think, Chris? I should ask you if you're sure?\"\n\n\"I've wanted this for years.\"\n\n\"There's your answer.\"\n\nI sighed. \"I want to right now, Alexa, but... I've got to make a call first. Just hope it won't ruin the mood.\"\n\nShe kissed me softly on the lips before we sat up, switching off the movie as I pulled out my phone. I found the name I needed and pressed call, putting the phone to my ear. I only had to wait a couple of rings before the call was answered.\n\n\"Chris?\"\n\n\"Melanie, we need to talk,\" I said, already feeling like shit. Alexa took my free hand in hers, giving it a squeeze. We both knew what we were doing, what the outcome of this call would be.\n\nI heard the music of wherever she was go quiet, figuring she was stepping outside or at least somewhere she could hear me. \"What's wrong, Chris?\"\n\n\"Melanie...\" I took a deep breath. \"You need someone better than me in your life.\" Alexa squeezed my hand again. \"Someone like you deserves all the happiness in the world, and I'm simply not going to be the man to provide that. There are a billion other better options out there.\"\n\nShe was silent for a moment. \"You want to end things?\"\n\n\"Better I do now before we do go further in this relationship and we both end up regretting it. You're an intelligent, attractive woman, Melanie. Men will be falling over to be with you for life.\"\n\n\"But not you?\"\n\nI glanced at Alexa. \"Melanie... I love you, but I'm not in love with you. I hope you know what I mean by that. And, as I said, you deserve someone better than me. I try to be a good man, but...\"\n\nI'll give her credit, Melanie wasn't stupid. She'd been around the house often enough to see the dynamic. \"It'll never work, Chris. I know exactly why you're calling. Thing is, I already know where your heart lies, at least most of the time. I always hoped things would change, that once you were with me, that it would eventually work out, that you'd just see me. I should be ranting and screaming right now, or falling into floods of tears but... it would be pointless, right?\"\n\n\"I'm sorry, Melanie.\"\n\n\"So am I, Chris, because you're about to make the mistake a life time.\"\n\n\"I hope not.\" I sighed, \"Goodbye, Melanie. I can only wish you the best.\"\n\nI clicked off the phone and just felt awful. Alexa wrapped an arm around my waist and snuggled into me. Kissing the top of her head, I put the phone down and dragged her to straddle my lap, hugging her tightly towards me. \"I'm sorry,\" she whispered.\n\n\"I am too. She deserves better.\"\n\n\"She does. But... I want you, Chris. I want to be selfish and have you to myself. Tonight, tomorrow, forever.\"\n\nOur eyes met, brushing her cheek with a thumb as we kissed again. Within seconds, the phone call was but a distant memory. I knew the guilt would come in waves over the coming days, but I felt I'd done the right thing. Picking her up, she wrapped her arms and legs around me, continuing to make out as we moved to my bedroom. Once back on her feet, our clothes disappeared very quickly, mine certainly did as I was in my underwear in seconds, though I took my time undressing my sister, appreciating every time a different bit of skin appeared, making sure I gently caressed or kissed her all over.\n\n\"Chris, I've never done this before,\" she admitted once down to bra and panties.\n\nThat brought me to an immediate stop as I had wondered if she was a virgin. She blushed as I no doubt looked surprised. \"Why?\"\n\n\"It's not that I haven't had opportunities.\" Then she met my eyes. \"But I wanted you.\"\n\n\"I felt the same way but...\"\n\nShe caressed my cheek and smiled. \"I know, Chris. And I understand why.\"\n\n\"Why now, though? I mean, why are we doing this now?\"\n\n\"Because we obviously both want to. Would that be correct?\"\n\nI kissed her again in way of reply, wrapping my arms around her, feeling her warm skin again mine. Her hands were all over me, up my arms, down my back and sides, before I felt one hand grab my cock through my boxer-briefs. \"Someone's excited.\"\n\n\"I've wanted this for as long as you, Alexa.\" I then met her eyes. \"Are you on the pill?\" She nodded. \"Good.\"\n\n\"Since I was 15. Mum didn't want any unplanned pregnancies.\" She paused, then smirked. \"I still think they believe we've done this before.\"\n\n\"Probably. May as well prove them right this time.\"\n\nShe tasted of wine and smelled of strawberries, the mix of shampoo, soap and perfume. Thing is, I love strawberry flavour, and I knew she wore it simply because I liked it. Not breaking our kiss, I manoeuvred us both onto my bed, Alexa shuffling backwards so her heads rested on the pillows. My hands were now incredibly busy and I savoured the first moment I felt one of her breasts in my palm, albeit still behind her bra.\n\n\"Take it off,\" she said softly.\n\nWhat my sister wants, my sister gets, her bra removed rather deftly, actually leaving her impressed that I didn't fumble. I'm sure she knew where I'd learned, though said nothing about it. With her breasts now free, I could now play with them, uninhibited by small pieces of cloth. I felt her nipples harden at my touch as I kissed her neck, hearing her moan for the first time. My cock was already hard but I almost shot my load when she did that.\n\nI kissed all around her neck, feeling her shudder slightly as I did, no doubt experiencing new thrills never felt before. I wandered up her neck towards her ear, kissing and sucking at one of her lobes, telling her how beautiful she was at the same time. I noticed she blushed at what I told her, as I started to get rather rude in what I wanted to do to her.\n\n\"Chris, I just want this to end with you fucking me. It's all I ever think about when I masturbate.\"\n\nI knew my sister masturbated. Not that I'd ever seen or heard it. I just assumed she did. But hearing she masturbated, thinking about me? I don't think my ego would have fit out the door.\n\nI kissed down her body, feeling her shudder every so often as my fingers grazed her skin at the same time. Taking one of her breasts in hand, I licked around and across her nipple, feeling her buck slightly, a loud moan escaping her mouth, before I started simply suck and nibble at it, very gently as I didn't want to hurt her. She gasped again as I did.\n\n\"Oh god, that's good, Chris.\"\n\nI smiled to myself, lavishing plenty of attention on one breast with my mouth while feeling the other up with my free hand, before swapping for her other breast. With my free hand, I moved it down her body and felt up her pussy above her panties, earning myself a rather loud groan when I did. What I did feel was wetness. Her panties were soaked. I slid my hand under the band of them, feeling her trimmed hair on my palm before I felt her wet cunt. She gasped again as my hand grazed her clit, feeling her body shudder again, as I teased her entrance.\n\n\"Oh, Chris, you have no idea how long....\"\n\nI didn't know the signals of her body, but I'd learned enough to know at least the basic signals, and my sister was hot and already ready to blow. Kissing down her body, I moved both hands to her panties, eventually sliding those down her legs, finally revealing what I'd wanted to see for years. Removing my underwear at the same time, she would have got a good look at my very erect cock.\n\n\"It looks... big,\" she whispered.\n\nI couldn't help smirk as I didn't think it was anything special, but it was nice to hear. Putting a hand on each of my sisters' legs, I spread those as I gazed upon my sister's cunt for the first time, taking in every little detail. In the low light provided by my bedside table, I could now see how wet she was, plus the well-groomed dark patch of hair above her cunt.\n\n\"What are you going to do now?\" she asked shyly.\n\nMy reply was in the form of running my tongue along her slit, tasting the juices of my sister for the first time. I think she almost orgasmed from that alone, the moan she made loud enough to wake the neighbours next door. I then teased her, kissing around her crotch, on one thigh then another, running my hands up and down her calves, before finally returning my tongue to her slit, slowly running it up and down, simply to tease her.\n\n\"I think I'm going to cum,\" she cried softly.\n\n\"Not just yet. Hold on.\"\n\n\"I'll try,\" she said, but she was already breathing deeply, her body moving in such a way that I knew she was already incredibly close.\n\nIt was time to stop teasing her as I ran my tongue along her labia before delving her depths in between, rewarded with another small flow of juices, lapping those up in delight, thoroughly enjoying her taste. I knew I would definitely do this again, without even her needing to ask.\n\n\"Oh god...\" she exclaimed. It was time to put this to bed, moving my tongue up to her clit, circling the little nub first before running my tongue gently across it. She nearly leapt off the bed when I did that, causing me to chuckle, as I pressed my tongue against it again. \"Fucking hell, Chris.\"\n\n\"Cum for your brother, Alexa,\" I said, before flicking her clit, feeling her shudder again, as I continued to flick it, learning that she liked me to circle it before running my tongue across it. Pressing her cunt down into my face, she was begging for release. I picked up the tempo, all my attention on her clit, just wanting my little sister to cum.\n\n\"Oh god! Chris, I'm cumming!\"\n\nThose were the five greatest words I'd heard in my life up to that moment, rewarded with a gush of her juices as she had what appeared to be the best orgasm of her life so far. Or, at least that's what she told me once she'd calmed down and only shuddered every few seconds or so. I would have kept eating her out, but I felt a hand grab my hair, lifting my head to look into her eyes.\n\n\"Enough for now, Chris. Very sensitive.\"\n\nLicking my lips, she wasn't too sensitive to have me kiss back up her body before I was at her eye level. \"Good?\"\n\n\"I can't believe I waited so long to make a move on you if it was going to be that good!\" she said before kissing me.\n\nI just smirked. \"I haven't even fucked you yet.\"\n\n\"Give me a few minutes then you're definitely sticking that thing inside me.\"\n\nI was hard as a rock as we made out, feeling one of her hands stroke my chest before grabbing my cock, wrapping her hand around it before slowly jerking me off. \"Do you want me to blow you?\"\n\n\"Maybe later.\"\n\nShe smiled again. \"You want to fuck me first?\"\n\n\"Definitely.\"\n\nWe continued to make out, hands still exploring. Her body was so soft and warm. Her breasts were perfect. Her arse was wonderful. Her legs were smooth and what I'd describe as athletic, thanks to years of netball. Then I started comparing her to someone and that brought me to a halt.\n\n\"Shit,\" I muttered.\n\n\"What's wrong?\"\n\nI sighed. \"I just thought of someone again. Didn't meant to but...\"\n\n\"Oh...\"\n\nI sighed. \"I do feel like an arsehole,\" I added.\n\n\"Do you love her?\" I shrugged as, though I cared for her, and loved her in some way, I wasn't in love with her, and probably didn't love her like she did me in return. \"There's your answer, Chris.\" Then she grabbed one of my hands, locking our fingers together. \"Do you love me?\"\n\n\"Of course.\"\n\nShe shook her head. \"Do you love me as more than a sister?\"\n\nI chuckled. \"What do you think?\"\n\n\"I want to hear it.\"\n\nI kissed her softly on the lips. \"I'm in love with you, Alexa,\" I whispered.\n\nI watched her blink rapidly as she said, \"I feel the same way.\"\n\nShe pulled me on top of her, feeling the heat of her pussy against the head of my cock. She gasped when my head pressed against her, though the gasp turned into a smile as she kissed me again. Wrapping her arms around my neck again, she said the few words I'd always wanted to her from her. \"Make love to me, Chris. Make love to your sister.\"\n\nShe spread her legs a little more as I positioned my cock at her entrance. I met her eyes a final time, waiting for her to get comfortable. Then she nodded as I slowly pushed forward, the head of my cock entering my sister. She gasped as soon as I did that, waiting for a moment before pushing forward another inch or so. \"Slowly,\" she whispered. I just nodded, knowing what to do, as the last thing I wanted to do was hurt her. What did surprise me is that I didn't feel a barrier. I must have looked surprised as she whispered, \"Dildo broke it.\"\n\nDespite having half my cock inside my sister, I couldn't help chuckle. \"Good to know.\"\n\n\"You're already so much bigger and better, Chris.\"\n\nI pulled back until only the head of my cock was inside her before pushing forward again, allowing her to completely adjusted to me. I wasn't that big by any stretch of the imagination, though I had measured myself and was pleased at the result, but my sister was tight, so despite the wetness, she definitely had to adjust. It took a few minutes but I eventually had my entire length inside her, our pelvic bones meeting. Alexa just hugged me tightly. \"Let me just enjoy this for a minute,\" she said quietly.\n\n\"How does it feel?\"\n\n\"I feel so full, Chris.\" She gently pushed me chest, so she could see my face. \"And it feels so good. I mean, totally awesome.\"\n\nI kissed her before adding, \"And it gets a lot better too.\"\n\nI proved it too as I slowly started to thrust back and forth. She was incredibly wet, so despite her tightness, I had little trouble making love to her. She shuffled every now and then, obviously adjusting, and I was pleased that she did just lie there, making sure she touched me all over, spending a lot of time kissing me, just as much as I kissed her. I'll admit, within a couple of minutes, I felt the urge to cum. So I stopped, earning an amused smile.\n\n\"What's wrong, Chris?\" she asked, surprising me further by squeezing me with her cunt.\n\n\"I'm going to cum rather quickly.\"\n\n\"Do I turn you on that much?\" She was being a smartass, so I gave her a harder thrust. Her eyes closed and she moaned. \"Well, do I?\" I thrust hard again, earning a larger smile. \"Oh god, you're hitting the right spot, Chris.\"\n\nIt was pointless delaying, as I was definitely going to cum rather soon. Letting Alexa know, she said I should just cum, then we could continue the fun in a few minutes. So I pounded her a little harder, hearing a few rather cute moans from my sister, grabbing one of her legs to wrap around me. I felt the change in angle and se groaned rather loudly. \"Oh fuck, that's deeper,\" she said, kissing me hard again, feeling her tongue explore my mouth as she moaned rather loudly.\n\nUpping the tempo further, I was already past the point of no return. \"I'm close,\" I muttered, feeling a tingling sensation in my balls. I knew this was going to be a big one.\n\n\"Cum in me, Chris. Cum in your sister.\"\n\nOkay, now that was the hottest thing I'd heard up to that point in my life. And she got what she wanted no more than a minute later, burying my cock all the way inside her as I swear I could feel cum travel all the way from my balls, down my cock and out, spurting what felt like a torrent inside her. She giggled as I groaned loudly, my arms already feeling weakened, struggling to hold my body up above her, feeling her other leg wrap around me. \"I want it all inside me,\" she said with a giggle. I grunted some sort of reply.\n\nThen there was only the sound of our heavy breathing, staring at each other in the low light. The smile on her face was something I'd never seen before. She was blissfully happy. \"Finally?\" I asked, understanding what the smile meant.\n\n\"You've got ten minutes, then we're doing that again!\"\n\nI looked down, realising my cock wasn't exactly deflating, before meeting her eyes again. \"Well, it might not take ten minutes. Though we could do with cleaning up.\"\n\nAfter quickly cleaning up the mess, we cuddled into each other, I guess both of us thinking about and realising the new reality of our relationship. I did feel bad about doing this to Melanie, but it was past time that I confronted and admitted my feelings for Alexa. I already knew that I wanted to be with her for the rest of my life. In my mind, though, was figuring out how it was going to work. We were both out of school now, both of us adults so apart from the whole breaking the law part, we could do what we wanted. Our parents would freak, naturally. I had no idea what Alexa was thinking, though could only assume she thought the same way.\n\nFinding myself pushed onto my back, my sister returned the earlier favour, kissing all over my body before ending up on her knees between my legs, holding my cock in one of her small hands. \"I'm not sure I can take the whole thing in my mouth,\" she said.\n\n\"Do whatever you can, Alexa.\"\n\n\"I'm going to blow you for a few minutes, then I'm going to sit on it. Okay?\"\n\n\"Whatever you want, Alexa. Trust me, I'm not going to complain.\"\n\nShe was obviously inexperienced but she made up for that in enthusiasm, her lips and tongue working perfect harmony as the attention she gave to my cock was something else entirely. The fact she was so eager to do it pleased me greatly too. She licked it like a lollipop or ice cream to begin with, running her tongue up and down my shaft, and even further down to my balls, raising my eyebrows in surprise, before moving back up my shaft, circling the head with her tongue, sending shivers up my spine, as I was still feeling a little sensitive.\n\nI couldn't help stare was I watched the head of my cock disappear inside her mouth, my mind almost in disbelief, shouting 'Your cock is currently in your sister's mouth!' before then adding, 'That is so fucking hot!' She sucked on my head, taking a little bit more of my length after a few minutes, letting her jaw adapt to my size. She eventually reached a point where she couldn't take anymore, not that I was going to complain. Just having any part of my cock in her mouth was a dream come true.\n\nMy cock lathered in her saliva, her eyes had never left mine, jerking me off as she asked, \"Good?\"\n\n\"God yes.\"\n\n\"Do you want me to keep going or do you want to fuck me?\"\n\n\"Can I be honest? I want to fuck you again.\"\n\nShe smiled. \"Good answer.\"\n\nShe straddled my lap, running her soaking wet cunt along the shaft of my cock, teasing the hell out of me and herself all at once. I ran my hands up and down her sides before reaching for her breasts, tweaking both her nipples, causing her to giggle. \"Do you like them?\"\n\n\"Always have. Now I know what they look like.\"\n\nLifting herself up a little, she grabbed the base of my cock and positioned it at her entrance, watching, utterly entranced, as my cock disappeared inside her once again. She made a guttural moan as she slid down it, quietly exclaiming \"Oh my god!\" once she'd bottomed out. \"Chris, this is hitting all the right spots. I'm definitely...\" She stopped to take a breath, appearing rather flustered already, \"I'm definitely going to cum.\"\n\nConsidering it was her first time, I could only assume my sister had watched some porn, as she certainly had the moves I would not have expected of a virgin. She was also louder or more talkative than I expected, telling me how good it felt, or what felt good, or just that she loved having my cock inside her. I reckon it was a couple of years' worth of her desire for me finally erupting.\n\nLeaning forward, planting her hands on the bed either side of me, she leaned down to kiss me deeply, feeling her tongue explore my mouth, as she bounced or rubbed herself even faster on my cock. After having her blow me, and now enjoying the tight confines of her cunt once again, I was feeling a building urge to blast inside my sister once again.\n\n\"Is it always this good?\" my sister asked, her breathing intensifying and I knew she was also close to orgasm.\n\n\"Can be,\" I uttered, dragging her down to kiss her once again as I started to thrust upwards into her. She kept kissing me, moaning into my mouth at the same time, before she finally had to break away.",
        "\"Oh god!\" she cried, and I could feel the walls of her cunt start to clamp around my cock. \"I'm about to blow!\" she yelled. I almost cracked up in laughter, though I felt the same way. \"Keep fucking me!\"\n\n\"Don't plan on stopping,\" I grunted, now pumping my cock into her hard as she collapsed on top of me. I held her close and just enjoyed the feeling of her soaking wet cunt, tightly wrapped around my cock. I knew I'd want to do this for the rest of my life, just kissing her gently as I felt my cock erupt inside her once again. I heard her giggle as I groaned into her ear, along with a series of swear words that would have made a sailor blush.\n\nOnce we'd both come down from our shared high, Alexa kissed my cheek and whispered into my ear, \"I love you.\"\n\n\"I love you too.\"\n\n\"More than a brother should?\"\n\n\"Definitely more than a brother should.\"\n\nShe kissed my cheek again. \"Good.\"\n\nWe cuddled up again for a few minutes before heading to the bathroom and sharing a shower. Now that we'd finally given into temptation and had sex, we had a good look and feel of each other's bodies as we washed the other down. My sister certainly expressed her thoughts about my frame. I was about 5'10 or so, far more solid than I was even two years before. My cock, now rather shrunken after the nights' activities, was given some attention, leading to it becoming semi-erect again. My sister said she was pleased I kept myself groomed, and expressed a desire to see me shirtless far more often, appreciating the tan I kept.\n\nAs for my sister, the only word I can used to describe her is perfect. Absolutely perfect.\n\nAfter drying each other off, making out for a little while and sharing another glass of wine, we hopped into my bed and cuddled up again, sharing words of love for each other a final time before drifting off.\n\n*****\n\nI was happily dreaming when I was awoken rather suddenly, feeling my sister wrenched from my arms, hearing her scream in surprise. Before I had barely opened my eyes or moved to react, I felt something very hard smash into my back. I couldn't help cry out in pain, opening my eyes to see my father standing next to the bed, brandishing a cricket bat. I hadn't even managed to say a word or move a muscle when I watched it crash down again, this time on my legs.\n\n\"You fucking cunt!\" my father roared, \"What the fuck do you think you're doing?\"\n\n\"Wait a min...\"\n\nHe pointed the bat at my face. \"Shut the fuck up before I put this thing through the side of your head.\" He turned back towards the door, where my mother held my sister, who was crying her eyes out. \"Get her back to her room. I'll be dealing with her later, once I've dealt with this sick fuck.\"\n\n\"Brian, is this really...\"\n\n\"Yes, it is, Claire. I've always suspected something. Now I know for sure. Take her to her room. Now!\"\n\nI looked at Mum, pleading with my eyes for her to intervene, but she turned her eyes then her body away, disappearing through the door. My father stood over me, breathing heavily. I'd never seen such hatred in anyone's eyes. \"She's your sister, you sick bastard. She's my little girl. And you fucked her? What the fuck is wrong with you?\"\n\n\"Sad I got in first, are you?\"\n\nThat wasn't the smartest thing to say. My father is a good four inches taller than me and built like a brick shit-house. Life as a labourer, and years of rugby, made him a broad, intimidating man. I didn't exactly fear him, but in the few times I'd seen him lose his temper, yeah, I'll admit it scared the shit out of me. He roared, grabbing me by my hair and dragged me off the bed, throwing me on my back as he put a knee into my chest, a hand around my throat. I honestly thought he was going to kill me.\n\nRather calmly, which scared me more than his fury, he said, \"You have twenty minutes to get dressed, pack a bag of clothes and get the fuck out of my house. As far as I'm concerned, I no longer have a son. Certainly not a son who would defile my daughter in such a way. But you don't just leave this house. You leave the city. You have 72 hours, or three days, to get out of Sydney, because trust me on this, everyone is going to know about this. All our family and all your friends will know what you've done.\"\n\n\"You can't...\"\n\nHe tightened his grip around my throat, cutting off my speech. \"Three days. If I even get a whiff of your presence, whether it's living with a friend, or in your own place, or even living rough on the streets, I will ensure the coppers hunt you down for raping your sister. Oh, I know what happened last night was probably consensual in your eyes, but my little girl would definitely not have wanted her brother to take advantage of her in such a way. So, 72 hours to have your affairs in order, then I tell the family you're gone and they will know the reason why. I won't say you raped her, but they will know you forced yourself onto her, convinced her it was a good idea, and then fucked her. I will ruin your name with this family to ensure you will never be welcomed back.\"\n\n\"Why?\" I croaked.\n\n\"Why?\" he asked, surprised, before he leaned down into my face, \"Did you just ask fucking why?\" he roared. He stood up and held the bat to my chin. \"Twenty minutes, Chris. I suggest you make the most of it. Oh, and one last thing. If you contact anyone in this family after 72 hours, I go to the police. You will not contact any of us again. Do you hear me?\" I looked at him but didn't respond. \"I'll take your silence as acceptance.\" He looked ready to leave, before forcing the bat into my throat. \"And if you even think of contacting your sister again, even the police won't locate your body. Trust me on that one, Chris.\"\n\nI gingerly got to my feet, pain shooting up my back and down my legs from where he'd whacked me. I'm amazed he hadn't broken anything, as it felt like he'd put everything into each swing. I dressed as quickly as possible before I grabbed a rucksack, throwing everything I could think of into it. I looked at my electrical items but decided against taking anything except my smartphone.\n\n\"I know about social media, Chris. I'll ensure you cannot contact your sister again that way.\"\n\n\"Whatever,\" I muttered, glaring at him. He just smirked at me, holding the bat at his side.\n\n\"I know you want to take a swing. I'd suggest you don't. I don't particularly want to go down for murder, but after what you've just done to my little girl, it may be a price worth paying. I'm sure plenty of judges would be sympathetic.\"\n\nI had no idea what I was going to do, but used every minute available to pack everything I could think of, even grabbing my passport, because who knows where I could end up. Putting my phone and wallet into a pocket each, I grabbed my keys, my father holding out a hand. \"House keys. You won't be needing those again.\" I took them off the ring and handed them over. He stood to the side and gestured down the hallway with the bat. Walking by my sister's room, I could hear her cries from inside, coming to a stop outside her door, though Dad just pushed me in the back. \"Keep moving. She's not your problem anymore.\"\n\nHe pushed me out the front door, using his large frame to barricade the way in. I turned back to look at him and flipped him off. \"Fuck you, cunt,\" I said. He just smirked. \"Oh, and one last thing. Your daughter definitely wanted me to fuck her last night. She wanted it just as much as me, Brian. I'll say it again for emphasis. Your so-called little girl wanted me to fuck her brains out. And I did. I love her, she loves me, that's all that matters.\"\n\n\"Bullshit. You're fucked in the head, Chris. Seriously fucked up. Get help. Get fucked. Get out of town.\" He pointed with his bat down the driveway. \"Your car is there. Get in, reverse, drive away and don't come back.\"\n\nI drove to the end of the street before pulling over, lowering my head to the steering wheel as I groaned, the pain coursing through my body overcoming me. I was in absolute agony after the battering I'd taken, figuring I was going to be absolutely covered in bruises. I then thought of where to go. I could go see Melanie, but I was going to break up with her anyway. I now knew I'd just have to do that by text or phone. I didn't want to see her. There was no point saying goodbye to friends, as I knew my father was serious. I was definitely going to have to leave town. Knowing I had plenty of money, having saved thousands due to living at home, I booked a hotel on my phone and drove off.\n\nThat night, I received a message from Mum. It was rather simple but solid advice.\n\nGo see your grandparents' tomorrow morning. They're aware something has happened. Head to Canberra afterwards, get a visa and get out of the country. Go to Europe. Family is Inverness. Link up with them. Let things calm down here then perhaps things will change.\n\nI replied with a simple Thanks, Mum. How is Alexa?\n\nDevastated. I can't claim to understand what happened between you two, but I'll be honest, I've expected it. I just never expected that reaction from your father. I don't agree with him, Chris, but I've never seen him this mad. As I said, I'll let it all calm down then see what happens.\n\nThe grandparents had plenty of questions the next morning. I just said I'd had a big falling out with my father about something and that he'd kicked me out. They offered to speak to him, but I declined, saying it was best to let it cool off. Instead, they gave me their documents I'd need for a visa, and they also wrote out a cheque for a couple of thousand dollars. I was ready to decline that too, though they insisted I take it, saying they had enough for their retirement. I thanked them both before leaving.\n\nThree days later, I was at Sydney Airport, passport, visa and backpack in hand, waiting for a flight to London Heathrow via Singapore. My back and legs were covered in bruises, having had trouble sleeping since that morning, while walking quickly was difficult. Even my throat had the bruised remains of being squeezed. It was a long, boring flight, but I didn't sleep. Sleeping meant dreams. And dreams were reminders of what I was leaving behind.\n\nOne month later, I was in Peterhead, speaking to the captain about a role on his ship.\n\n*****\n\nThose first few days at sea were horrible as I gained my sea legs. I think I spent half the time leaning over the side, emptying my stomach of whatever contents were within. There was much amusement about the Australian trying to prove himself as a hard, northern bastard. But I learned the ropes rather quickly. The trip out to the fishing spot was dull, as we prepared the nets and the lower deck for the influx of fish. Once we hit the fishing spot and started trawling, life became very exciting, and we'd be awake for hours on end as we had to haul in the catch, assess what we found, then either put the nets back in the water or sort out the catch and prepare it.\n\nThe days and nights were long and utterly exhausting. At the end of shift, I'd crawl into my bunk and crash immediately, at least during the first few trips as my body adapted to the grind. But I was quickly accepted as one of the crew, as although I made mistakes, I learned the ropes rather quickly and was soon just one of the guys.\n\nWe were out in the North Sea one evening, so far from the coast that we were trawling Atlantis, as Jack often liked to say, when I finally shared with someone what had happened. The entire group was sitting in the kitchen, sharing a brew, as I played tunes through my MP3 player. A particular song came on that I couldn't help sing along to, though everyone noticed my change in demeanour immediately.\n\n\"What song is this?\" asked Jimmy.\n\n\"Huh?\" I asked, not hearing the question.\n\n\"The song, Chris. What's it called?\"\n\n\"It's called 'Here Without You', by a band called Three Doors Down.\"\n\n\"Rather melancholy. Do you like it?\" Craig wondered.\n\n\"It's not about liking it. It's about what it means. Listen to the lyrics and you may understand.\"\n\nI turned up the volume as everyone quieted down.\n\nA hundred days have made me older\n\nSince the last time that I saw your pretty face.\n\nA thousand lies have made me colder\n\nAnd I don't think I can look at this the same.\n\nAll the miles that separate\n\nDisappear now when I'm dreamin' of your face.\n\nI'm here without you baby\n\nBut you're still on my lonely mind.\n\nI think about you baby and I dream about you all the time.\n\nI'm here without you baby\n\nBut you're still with me in my dreams\n\nAnd tonight girl, it's only you and me.\n\nI'll admit, I had to take a very deep breath to stop the tears that definitely wanted to flow. I wasn't going to start blubbing in front of these hard men. But I think they all immediately understood why the words meant so much to me.\n\n\"Remember during our first meeting, Chris, about telling me what happened. Any chance you want to share now?\" Jack, the Captain, asked. I looked around the small kitchenette, indicating it wasn't something I wanted to share in front of everyone. \"Upstairs?\" Jack offered. I accepted the offer.\n\nWe headed up to the bridge with another warm brew. Looking out into the near darkness, the port of Peterhead still two days away, I gathered my thoughts of what exactly I should say. \"So, you dream about whoever this person is?\"\n\n\"Nearly every night, just as the song says.\"\n\n\"Doesn't sound good for your sanity.\"\n\n\"It isn't. Perpetual heartbreak doesn't help either.\"\n\n\"Who was the singer speaking about?\"\n\n\"His wife at the time. It was an ode to her about the loneliness of time on the road, and how much he missed her while he was gone. I can't even begin to describe how I feel, but I find the isolation of the sea somewhat comforting. Being surrounded by just you guys doesn't remind me of her.\"\n\n\"Guess that sounds rather familiar, from the little I know about your story. So, who is she?\"\n\nI took a sip of the hot brew before I couldn't help sigh, wondering if I was about to be thrown overboard for admitting it. \"My sister.\"\n\nThe captain audibly gulped whatever was in his mouth before glancing my way. \"I hear that right, Chris?\" I nodded. \"Shit, no wonder you're so messed up.\"\n\n\"Yeah, explains one or two things, I guess.\"\n\n\"So, you miss your sister. But I'm guessing... something else happened?\"\n\n\"Long or short version?\"\n\n\"How about just the short, bullet points. I don't need you to bare your soul.\"\n\nI took another deep breath. \"I'm in love with my sister. She's in love with me. We've felt that way about each other for years but never do anything about it. Then, one night, we gave into temptation. Had sex. Our father discovered us the next day. Beat the shit out of me. Kicked me out of home. Threatened me with retribution if I didn't leave town. Believed him, as he was ready to kill me. Ended up here looking for a job.\"\n\nJack took another sip of his brew. \"Well, I guess I've read in the news about things like it before, but would never have believed it was actually real.\" He then met my eyes. \"Your sister?\"\n\nI could only shrug. \"Can't control who you love. Best explanation I can give.\"\n\nHe met my eyes, judging me again, before he finally nodded. \"Can't say I understand, but...\" He shrugged. \"I'm certainly not going to judge, being a twice divorced father of three. I've certainly made some poor choices.\" He held up a hand, as I was about to reply. \"Not saying you made a poor choice, Chris. Just comparing our lives.\" He fell silent, and I remained so. Finally, he nodded again. \"Okay, Chris, that took a lot of guts to admit. I respect that. So, far as I'm concerned, what you just told me stays between us two. I won't tell a soul.\"\n\n\"Thanks.\"\n\n\"So what do you plan on doing?\"\n\nI shrugged. \"I can't go home. I have no doubt my father was serious with his threats. He's not a man to idly threaten someone. Honestly, I think if he ever saw me again, he'd kill me. So I'll stay here.\"\n\n\"Interested in running your own ship one day?\" I knew I looked surprised as he chuckled. \"You seem like a smart kid, Chris. Learn the ropes downstairs, then I'll show you what goes on up here. You'll need to do a bit of studying, and you'll need plenty of collateral, but I think you could have your own ship... in around a decade.\"\n\n\"You think so?\" He nodded. \"Let me think about it.\"\n\nI took the captain up on his offer, learning the ins and outs of the trade over the next few years. I also had to study at the same time, as there was more to captaining a boat than just looking out the window and steering, the captain suggesting a bit of learning always comes in handy. Appreciating how eager I was to learn and eventually having my own vessel, within five years I was effectively his second in command, and he would have no problem leaving me in charge whenever he needed to recharge the batteries.\n\nEven though the years passed quickly, I never forgot my sister. I was still in love with her, but I knew the pair of us being together was now completely unrealistic, figuring she would have moved on not long after I'd left. If she was as smart as I knew she was, she would have just forgotten all about me. We'd only been together the once, and though I'm sure she still loved me, she was also a grounded individual. But while I may have had one or two partners, local girls who showed an interest in me, particularly as the lone Australian living in the small town of Peterhead, I never settled down with anyone. I could afford to buy a one room house that I kept for when I was on shore, but most of my money was saved to eventually buy my own boat.\n\nI could afford to do that just before I'd turned 30, though it required a loan from the bank. To say the bank manager was surprised when an Australian walked in, wanting to buy a trawler, would be an understatement, though by this time, I was a dual citizen, having been in the UK for over a decade. The loan was easy to get, as I had a significant deposit, while I had already put ads in the paper and online for crew. Within three months, I was the proud owner of a new but used trawler, the previous owner retiring and selling his boat to me on advice from my old captain.\n\nThe first thing I did upon purchasing it was registering a new name. There was only one name it could have.\n\nThe 'Alexa'.\n\n*****\n\nCHAPTER TWO\n\nThe night with my brother, where I finally shared myself with him, was the best night of my life. The morning after and nearly every day following was equally the worst. I still remember my father bringing the bat down on him, hearing my brother cry out in pain, surprised I didn't hear the bones in his body crack and break from the assault. I know I screamed out for him to stop, but he looked back at me with such hatred in his eyes, not sure if it was for me too as well as my brother, that I only remember my mother dragging me to my room, closing the door and consoling me as I felt my heart shatter into pieces. I heard everything my father told my brother. I wanted to stop him, but my mother held me in place, warning that my father would only hurt my brother more if I tried to intervene.\n\nI looked out the window as Chris walked to his car. He wouldn't have seen me watch him through the curtains, though he did look up at my window briefly, no doubt trying to see me. He then got in his car, watching it reverse out of the driveway and drive away. I couldn't stop the fresh batch of tears that fell. Mum tried to console me, but it was pointless. He was gone.\n\nMy father dragged me into the living room a few minutes later, sitting me on the couch. The anger had disappeared and he now looked terribly upset. \"He's been grooming you for years, Alexa. How can you not realise that?\"\n\n\"I love him! And he loves me!\"\n\nHe scoffed. \"Don't be so ridiculous, Alexa. He's your brother. And he's obviously put all these thoughts in your head. I've always thought you two were a little close for siblings, but would never have thought he'd have taken this sort of step to actually having sex with his sister.\"",
        "\"I seduced him, Dad!\"\n\nHe blinked silently at that admission. Then he laughed. \"I find it highly unlike my little girl...\"\n\nI got to my feet. \"I'm 18, Dad. I'm no longer 'your little girl'.\"\n\n\"You'll always be my little girl, Alexandra,\" he said softly but firmly, \"And I no longer have a son. No son of mine would do anything like what I found this morning. So, as you no doubt heard, you won't see him again. Not if he's got any brains in that sick head of his. Because I did not idly threaten him. He will never be welcome in this house again, as long as I draw breath.\"\n\nI narrowed my eyes as I glared at him. \"I love him. And I hate you.\"\n\n\"You don't mean that, Alexandra. You'll see what I mean soon.\"\n\n\"Bullshit. I'll always love him.\" I brushed past my father, walking towards the hallway, turning back to glare at him again, \"And I'll always hate you for driving him away.\"\n\nI immediately tried communicating with my brother, calling and messaging his phone, but it was already switched off. I had heard what my father had said, but hoped Chris would ignore the warnings. I tried sending him an email, but never heard anything back.\n\nMy father was also true to his word. Four days after Chris left, my phone blew up with messages from the family, consoling me about what happened, calling my brother every name under the sun, stating he would never be welcome in their homes again. I honestly thought those were only threats but my father was true to his word. He didn't make idle threats. And he made sure to destroy my brothers' reputation.\n\nWithin a month, even his and my friends had found out. And I knew I just couldn't be honest with them, because no doubt they'd think I was a freak, and I'd lose friendships I'd built over many years. I never said anything negative about my brother, even when my friends thought he'd assaulted me, even raped me. I denied he did either of those things, though would not elaborate any further. How could I say that I loved him more than anyone and would have happily spent the rest of my life with him? I just told them that my brother was a good man and would never hurt me. I was left thinking my friends just thought I was left damaged by my so-called 'ordeal'.\n\nAfter three years at university, training to become a teacher, I was desperate to move out of home. By this stage, I refused to even speak with my father, barely acknowledging his existence. I was rarely home, either at university, studying somewhere or working, either as a student-teacher or in a part-time job. I'd tried innumerable times over the years to get my mother to open up and tell me where he may have gone. But she refused, almost scared of how my father would react if she did. I know the relationship between my parents was strained after what happened that morning. They still loved each other, but it was an event that did drive a wedge between them.\n\nI'd asked his friends time and again, but they didn't have a clue, as he didn't let them know where he was going. And, after what they'd learned, they wouldn't have helped him anyway. I even asked Melanie, which was rather awkward, knocking on her door three years after he'd left. I'd only found her because she was still living in the same apartment.\n\nShe invited me in after answering my knock on her door. Offering me a coffee, I accepted and took a seat on one of her armchairs, waiting for her to return. I noticed the ring on her finger as she handed me the mug before sitting on the couch near me.\n\n\"You're married?\"\n\nShe smiled and nodded. \"Yes, six months already.\"\n\n\"Congratulations.\"\n\n\"Thanks.\" She took a sip of her coffee. \"What brings you to my door after all this time, Alexandra?\"\n\n\"I know this is a bolt out of the blue, but do you have any idea where my brother is? Do you have any idea where he may have gone? Everyone I've asked won't say or they don't know. You're my 'Hail Mary' attempt.\"\n\n\"I wish I did, but no, I don't. The last time I heard from him was the phone call, saying it was over, though he did his best to not make it sound like he was in love with someone else.\" I tried to keep the smile from appearing on my face, though Melanie just looked at me with a smirk of her own. \"I know he was talking about you, Alexandra.\"\n\nI should have been surprised, but I guess my feelings were obvious. I'd always been jealous of her. I knew Chris had felt guilt because of it, and I'll admit, even I did at times.\n\n\"Sorry,\" I said quietly.\n\n\"Don't be. I knew Chris was never truly in love with me. I saw the dynamic between you two. I wasn't blind. But I just thought you were rather close, despite being siblings.\" She looked at me again. \"But I've heard what your father has told everyone, the Chinese whispers that took place at the time. What's the truth?\"\n\nI shrugged. \"We made love.\" She gave me a look that suggested 'Well, duh.' \"We wanted each other. We've always loved each other. We finally did something about it. I've always been in love with him, and I know he always felt the same way.\"\n\n\"Who seduced who in the end?\"\n\n\"I think I made my intentions that night rather obvious. I definitely gave my brother the green light to proceed.\" I sighed, \"I did feel a little guilty. So did he. He said that...\" I trailed off, as it was obvious.\n\n\"I guess if you hadn't made your move, we might still be together.\" I nodded. \"Hey, you did me a favour, Alexandra. I knew I was always going to play second fiddle to you, even if I did marry him, which I didn't think would ever happen. But I'll tell you one thing. I did love him.\"\n\n\"I know,\" I said softly, \"And he loved you, in his own way. But...\"\n\n\"He wasn't in love with me,\" she stated, and I could hear the sadness, even after all this time. \"I think you're weird. I think you're both really fucking weird. But, in all honesty, I don't hate either of you. I should have hated him from the moment he ended that call, but I never did. I knew when he called that night he was going to end it, and I had an inkling as to why. I actually pitied both of you.\"\n\nI must have looked shocked as she chuckled. \"You don't? Or you do?\"\n\n\"No. Why should I? Sure, what you did was so off the deep end, I kind of understand why your father blew his top. I mean, you're related. It's... weird, as I said. That's why I pity you. No-one will ever accept your love. I have no idea what Chris is doing. But I guess you're still single?\"\n\nI shrugged. \"Tried one or two dates. I just compared them to Chris. So, yes, I am at the moment.\"\n\n\"I can only wish you good luck, Alexandra, but he's not in Sydney, that much is true. I'm not even sure he's still in the country.\"\n\n\"What makes you say that?\"\n\n\"Just a feeling. I think if he was in the country, he'd have at least tried to keep in contact with his friends. If he'd at least talked to them, they may have believed him instead of your father. His silence led to everyone believing him guilty.\"\n\n\"I wonder where he could have gone then,\" I muttered. I looked at Melanie, and she just shrugged. \"I'll find him eventually.\"\n\nMelanie actually smiled. \"I hope you do someday. Everyone, even you two, deserve some happiness.\"\n\n\"I'm glad you found happiness too, Melanie. And I'm sure he'd think the same thing.\"\n\nI was 21 when I moved out of the family home. I had been desperate to leave since the day Chris had been kicked out, but I couldn't afford to live away from home while I studied. But once I had a full-time teaching job, I immediately started looking for my own place. I had one or two offers from friends to flat-share, but I wanted solitude. I was already feeling lonely without my brother, and my friends were already trying to set me up with plenty of men.\n\nMy father offered to help me move, which I refused. We barely spoke, though I made sure I was never rude to his face. But on the day I moved out, I finally told him exactly what I thought of him. Watching his face fall, knowing his heart was breaking, I didn't feel anything except contempt for the man. The last words I shared with him echoed what he said to Chris.\n\n\"As far as I'm concerned, I no longer have a father. No father would have done what he did to my brother. If you ever see me again in this lifetime, it will be too soon.\"\n\nI kissed Mum goodbye, letting her know that I didn't blame her, she being as much a victim as I was, considering she hadn't seen or heard from her son since that day, before I got in my car and followed the removal van to my new apartment.\n\nOnce I'd settled in my new place and job, I hired a private investigator to try and find my brother. I gave him the details I was aware of. His name, age, assumed profession, height, weight and other personal details. The date he left home. The date he may have left the country. Anything and everything possible I could think of that may help track him down.\n\nI paid him a lot of money over many months and what did he come back with? Fuck all. Well, maybe not quite that. He could only tell me one thing. My brother was definitely not in the country. But as to where he was now, he couldn't tell me. He gave me possible options, depending on what sort of visa he may have been able to obtain, but the world is large. It would have been a needle in a haystack.\n\nIt was soon seven years since my brother had disappeared. I was miserable. If I'd gone to a doctor, they would have just called me depressed and tried to get me tablets. All I know is that I missed him each and every day. But I was ready to give up. It was perhaps just time to move on. I'd never forget him. I knew he was out there somewhere. I wondered what he was doing. I wondered if he missed me as much as I missed him. I just hoped he was okay and that, despite everything, that he'd found some happiness, even if that was with someone else.\n\nI did my best to put my brother to the back of my mind and eventually met someone I figured I could date for a while. To be honest, I chose him because of subtle reminders he gave me of Chris. It wasn't really fair on him, and I never truly loved him, but like Chris had done with Melanie, I was settling for second best. We never moved in together. I was not interested in that sort of commitment. I certainly didn't want to be married or bring children into a relationship with a man I didn't love as much as someone else. But we dated, and we eventually had sex, but it wasn't terribly satisfying. No fault of his. Objectively, he was very good. Pushed the right buttons. Made me orgasm. But I had nowhere near the same feelings as that one night with my brother.\n\nBut have you ever felt like life was just beating you down? My world fell apart for a second time not long after I turned 29. Mum had been feeling under the weather for a while and, after numerous tests, was given the worst news possible. She was immediately put in hospital for treatment, an attempt to at least prolong her life and prevent further spread of the disease. I visited whenever possible and it was only a month or so after the diagnosis that Mum called me in to talk to me alone.\n\n\"I don't care what your father says. If I'm a goner, I want to see my son before it happens.\"\n\nI felt my stomach drop and my heartbeat increase. \"What do you mean, Mum?\"\n\n\"I mean I have at least an idea of where Chris is.\" I was already holding her hand and she yelped as I unconsciously squeezed it hard. Once I loosened my grip, she said, \"I sent him to the UK. If he's not in Australia...\"\n\n\"I've hired a private investigator before. He was adamant Chris wasn't here. He couldn't tell me where he'd gone, only that his passport record stated that he'd left.\"\n\nMum nodded. \"Then he's in the UK. The question is, Alexa. Do you love him?\"\n\n\"I've never stopped loving him, Mum. You know that.\"\n\nShe nodded. \"Very well. Travel to the UK. Go to Inverness. That's where I suggested he go. Someone there may know where he went. Bring my boy home, Alexa. I want to see him one last time before I die.\"\n\nThe boyfriend was dumped the next day. A flight to London Heathrow was booked for two days later. I told the school I needed to take emergency leave due to family issues. I let my landlord know I was going to be out of the country for a while but I'd still meet the rent, unsure of when I'd return, asking a friend to at least check the place from time to time to ensure it at least didn't burn down.\n\nSitting in departures at the airport, I couldn't stop the butterflies in my stomach. Finally, after over ten years, there was a silver lining. I knew it was still a long shot. Chris could be literally anywhere in the world. I could only cross my fingers and hope that Inverness would start a trail of crumbs that would lead me to him.\n\nLanding at Heathrow, crossing the UK border was interesting when the customs officer asked why I was visiting the UK. \"I'm here to find my brother,\" I replied.\n\n\"Is he in trouble?\"\n\n\"No. But he disappeared a few years ago. I believe he's here.\"\n\n\"Is he a missing person?\"\n\n\"I don't believe he is. We just need to find him.\"\n\n\"How long ago did he get here?\"\n\n\"Over ten years ago.\"\n\n\"And you haven't heard from him since?\"\n\nI shrugged. \"There was a falling out. With my father.\"\n\n\"How long do you intend on staying in the UK?\"\n\n\"As long as I can find him. If I have to stay longer than legally allowed, I can always get a visa. I can apply for an ancestry one if required.\"\n\nThe border official just nodded, as I'd half admitted I'd be willing to break the law to find him. He eventually stamped my passport and handed it over. \"Good luck on your quest, Miss. I hope you find him.\"\n\n\"Me too.\"\n\nAfter collecting my luggage, I headed straight for the domestic lounge and booked the first flight out towards Scotland. I found one leaving for Inverness in the afternoon, meaning I'd have to spent a few hours waiting, but I didn't mind. Once I'd checked in my luggage, I headed for a bar and enjoyed a drink, feeling nerves actually start to build. I actually felt confident I was going to find him. I just knew, like a sixth sense, that he was somewhere in the UK. He felt closer than I'd felt in a very long time.\n\nI managed to find a hotel upon arriving in Inverness, landing after the sun had gone down, so all I did was have a meal in a nearby pub before getting some much needed sleep. The next morning, I grabbed a taxi and headed to the address Mum had given me. I felt another bundle of nerves as I knocked on the door, answered by a lady who was a dead ringer for Mum.\n\n\"Hiya. How can I help?\" she asked in a broad Scottish accent.\n\n\"Hello, I'm Alexandra. I'm looking for Mary.\"\n\nThe lady clapped her hands together and laughed. \"Alexandra! Claire told us you were coming! Oh, I'm Mary, by the way.\" She reached forward and dragged me in for a hug. \"We've been wondering if or when you were ever going to get here.\"\n\nI found myself introduced to the extended family over the next few hours. Far too many Scottish people, with way too strong an accent, that I could barely understand half the time. They were full of a million and one questions about me, though were aware of what Mum was going through back home. Once I'd answered what I could, I finally asked the one question I was dying to ask.\n\n\"Do you know where my brother is? Did you ever meet him?\"\n\n\"We met him just the once, over a decade ago. I still remember him even today. He looked... lost, like his entire life had been destroyed. He didn't stay long before he took off.\"\n\n\"Do you have any idea where may have gone?\"\n\nMary shook her head. \"No. He's not in Inverness, that's for certain. He gave no indication he was going to go too far though. It's possible he may have remained in the region.\"\n\n\"Where could he possibly be? What could he be doing?\"\n\nMary could obviously hear the desperation in my voice. So could one or two of the others in the room. Mary shared a glance around the room before nodding. \"We'll certainly put the word out for you.\"\n\nThey offered me a room for the duration, but I was going to do my own searching. I was going to use my Google-fu and see what would happen. Figuring Mary may have been right, and Chris would have stayed somewhere close, I pulled up a map of northern Scotland and wondered what Chris may have chosen to do. He had worked as labourer, much like his father, so figured he would have tried to do the same thing. I tried numerous options -- plumbing, carpentry, landscape gardening -- you name it, I tried it, but there was no sign of his name anywhere.\n\nAfter a least a week of searching online and simply through asking a million and one questions, criss-crossing the north, someone suggested fishing. I asked Mary upon returning to Inverness, and she thought it was a possibility, though wondered how an Australian would cope with deep sea fishing to the far north of Scotland. Once again, I used my Google-fu and, this time, I may have actually found him.\n\nThere was a chance, a possibility, he was in Peterhead. I wondered what on earth would have led him there, but if the website that listed every ship that was based there, he was currently captain of a ship. And the name of his ship almost brought me to tears.\n\nHe had called his ship the 'Alexa'.\n\nI knew in that moment that he'd never forgotten me. That he still loved me. That he still thought and probably dreamed of me. Those thoughts broke my heart, realising how alone he must have felt, ostracised from me, the rest of his family, his friends, his homeland.\n\nI called Mary and let her know what I'd found. She told me simply to get in my hire car, drive to Peterhead, and find him.\n\nSo that is exactly what I did.\n\nInverness to Peterhead should normally take no longer than three hours to drive. But it felt like it was the longest drive of my life, my eyes glancing between the clock or milometer, each taking forever just to move up one digit. I spent most of the trip on the verge of tears, desperate to know that the name I'd found was truly him. The fact his ship was named after me was almost a cause for celebration. It couldn't just be a coincidence. Surely fate couldn't be that cruel?\n\nI parked near the harbour and wandered the docks, looking for any sign of his ship, but the few that were in dock were not named after me. But I wasn't going to give up so easily. There were a few pubs nearby and I looked for one that appeared to cater towards sailors, or what I soon learned what were called trawlermen. I approached the lady behind the bar, who looked upon me with a little curiosity. I was obviously a new face.\n\n\"How can I help? Want a drink?\"\n\n\"I'm looking for someone.\"\n\nThe lady laughed. \"That's quite the accent. Never thought we'd get a second one here.\" My heart leapt in my chest as I was sure that meant what I hoped it did.\n\n\"Do you know someone called Christopher McDonald?\" I asked quietly, almost thinking if I said his name, my hopes would disappear.\n\nThe lady nodded. \"Aye, I do. Who's asking?\"\n\n\"I'm Alexa.\"\n\nNo word of a lie, the entire pub fell silent and it felt like all eyes were suddenly on me. \"Holy shit! You actually exist!\" one of the man at the bar exclaimed. There were other murmurs and shouts of excitement before the lady behind the bar shushed all of them.\n\n\"Aye, lass, I know someone called Christopher McDonald. He's currently out at sea at the moment. Ian, when did you say he'll be back?\"\n\n\"Tomorrow morning, as long as the sea remains calm. But Chris is a good skipper. He'll get the boat home.\"\n\nI suddenly felt very faint, placing both hands on the bar. I wanted to be sick. I felt a hand on my back, and a stool pushed underneath me. \"Heard all about you,\" a voice with a very thick accent stated.\n\n\"You have?\" I asked, turning to see a man with a bright red but kindly face, a lot of facial hair and a cigarette hanging from his lips.\n\n\"Aye, I have. Name's Jack. Chris was on my boat for a number of years. Bloody hard worker and a good man to boot. And I know about you, Alexa.\"",
        "\"You do? How much?\"\n\n\"Enough.\" But I met his eyes and he nodded subtly. I immediately knew Chris had shared his secret with him, but this was a man who would have kept his word never to say anything. \"I suggest you find a room and get some sleep. He'll be back no later than 6am if he keeps time. He'll need to unload his fish immediately but once all that is sorted out, you'll definitely find him down at the docks. I'd head down there for around 10am. His crew should have disappeared by then.\"\n\nI couldn't sleep that night. It was the longest night of my life.\n\n*****\n\nCHAPTER THREE\n\n\"We'll be in port for around 05:30, lads.\" I heard the shouts from down below. It had been another cold, wet, and miserable few days at sea. The ocean had been rough as we'd been slammed by a storm, and I really thought the entire trip was going to be a waste. Hell, I was left thinking we'd end up sunk, and dropping to Atlantis far below. I didn't believe the place actually existed, but I always remembered what Jack said. But on the final day I'd planned to be in the fishing spot, we finally obtained a decent sized haul. Enough to break even and even make a tidy profit, but not as much as I wanted. Such was the life of a trawlerman. It was never enough...\n\nThe sun was already rising by 04:00 and land was in view not long after that. I was looking forward to sleeping in my own bed, though only after I'd taken the longest shower possible. I loved my work but, by god, did I smell afterwards. One of the lads brought up a coffee as I steered us towards Peterhead harbour, glad the sea was now calm and we would definitely return on time.\n\n\"Ah, can never tire of that sight, skipper.\"\n\n\"Aye. I love the sea, but you sometimes can't beat terra firma under your feet.\"\n\n\"Sounding like a Scotsman with each passing day, skipper. Any chance you'll soon be following the Tartan Army?\"\n\n\"In what? Football or rugby?\"\n\n\"Why not both?\"\n\nI laughed. \"Yeah, that'll be the day.\" Then I looked at him. \"At least not fucking England, right?\"\n\nHe burst into laughter. \"Definitely turning into a Scotsman, skipper!\"\n\nWe docked just a little after 05:30, passing a couple of trawlers on the way in as they headed out for their long journey wherever they chose to fish. The first and most important job was to get the fish out and into warehouse for sale. I always marvelled at how quickly it sold. There was no wasting time as most of it ended up on shop shelves the very same day, all around Scotland. Some of it was hard frozen and sent further south to England and Wales.\n\nOnce that was done, amazed at how quickly it ended, I headed back to the ship to help the crew clear up, though we'd do the minimum before returning the next day to clean the ship from top to bottom in preparation to head out in a couple of days' time. By 09:30 I'd dismissed the crew, letting them return to their loved ones, saying I'd do the final checks before I would head home too.\n\nBusy checking the ropes holding the boat to the docks were in place, I didn't hear the footsteps behind me. But I almost jumped out of my skin when I heard the voice.\n\n\"You're a hard man to find, Christopher McDonald.\"\n\nI dropped the rope and closed my eyes. It must be my mind playing tricks on me. Perhaps it was the wind. Maybe I was just finally going insane. I stood up straight but didn't turn around. I just couldn't believe it. That she would actually be here. Right now. Today.\n\n\"I didn't have you down as Billy Joel fan,\" the voice added.\n\n\"What?\" I asked, confused by the statement.\n\n\"Calling your boat the 'Alexa'.\"\n\n\"I named it after someone special. Someone I love,\" I stated, my eyes still on the sea in front of me, not daring to turn around yet.\n\n\"Someone you still love?\" the voice asked hopefully.\n\n\"I've thought about her every single day for the past ten years and more.\" I paused, still didn't turn around. \"But I wonder if she still loves me?\"\n\n\"More than anything. She's never stopped thinking about him, either.\"\n\nI finally turned around, lowering my head, closing my eyes. I didn't want her to be a figment of my imagination. Then I heard footsteps and felt her presence in front of me. I felt her hand caress my cheek, already thinking I needed a shave and shower, as I no doubt smelled rather... horrible. The hand moved down towards my chin, lifting it up as I opened my eyes. Mine finally met hers, filled with tears, watching them cascade down her cheeks, a crooked grin that looked ready to either break out into a smile, laughter, or simply break down in sobs.\n\nMy own hand shaking, I lifted it towards her face, gently caressing her soft skin, wondering if she thought my hands were too rough. Her eyes closed immediately, moving her head into the palm of my hand.\n\n\"Alexa...\"\n\nShe opened her eyes, the smile brightening an otherwise dull day. Lowering my head towards hers, I knew what I had to do. I had to kiss her. Our lips met, and the years melted away immediately. We were in my bedroom once again. She opened her mouth, I opened mine. Our tongues danced. Our desperation, our need, our desire for each other was absolute immediately. I wrapped my arms around her and pulled her close. She was already crying. I'm not ashamed to admit that I was too.\n\nThen I heard the cheers and applause. I looked up as she turned around to see the large crowd that had formed near the entrance to the docks.\n\n\"Way to go, Chris!\"\n\n\"About bloody time, skipper!\"\n\n\"Does this mean more shore leave, skipper?\"\n\nAlexa buried her head into my chest, obviously embarrassed. I just waved them away. \"Alright you lot, show's over for now.\"\n\n\"Oh, you don't get out of it that easily, Christopher McDonald!\" Iris, the landlady of my favourite pub, yelled, \"Once you're done there, you will definitely be joining us in the pub to introduce your little lady.\"\n\n\"Yes, ma'am.\"\n\n\"Good boy.\"\n\nThankfully, the crowd dispersed, lending my sister and I at least a little privacy. I could only hold her head in my hands, staring into her eyes. \"I can't believe you're here. I thought I'd never see you again.\"\n\n\"I've spent so long trying to find you, I was almost ready to give up. But Mum....\" I watched her face fall as she trailed off.\n\nI understood immediately. \"Is she still alive?\" She nodded. \"How long does she have?\"\n\n\"Long enough for me to find you and take you home.\" I let her go and stepped back. She sensed the change in my mood immediately. \"She just wants to see you before the end.\"\n\n\"And Brian? What about him?\" I growled. My hatred for the man had grown with each passing day. I had no idea what I'd do if I ever saw him again. I hadn't grown taller, but I was now a broad, powerful man. I'd be eager to go toe to toe with him.\n\n\"I haven't spoken to him in years, Chris. He drove you away from me. I hate that man with every fibre of my being. I wish it was him instead of Mum.\" I must have looked surprised at the admission. \"He never gave us a chance to explain. He assaulted you and drove you away from everyone. He made sure your name was blackened with everyone. Then he carried on with his life as if nothing was wrong. He's a cunt.\"\n\nI couldn't help laugh. \"So you want me to go back with you?\"\n\n\"Just to see Mum to start off with. I guess we'll see from there.\"\n\nI ran a hand through my hair. \"My life is here, Alexa. I'm a trawlerman. Bloody good one, to be honest. It's a hard life, but I love it.\"\n\nI knew it wasn't what she wanted to hear. But she nodded, I think in understanding. \"I know, Chris. Why don't we go to the pub first, then perhaps head to your place and talk? We have a lot to catch up on.\"\n\nShe was right. I grabbed her hand, no doubt feeling the calluses along my fingers, and we walked towards the end of the dock. The pub was only a couple of minutes away, half of Peterhead waiting inside, ready for me to introduce Alexa. Only Jack, my old captain, knew who she really was. Since no-one knew who we were, the introduction could be rather simple.\n\n\"Alexa, half of Peterhead. Half of Peterhead, Alexa.\"\n\n\"Not really half of Peterhead, lassie,\" someone said, \"Chris is prone to exaggeration, like the size of the fish he catches.\"\n\nPersonal introductions were made to most of the locals, the crew of the 'Alexa', my old crew, my old captain, the landlady and her staff. No-one really asked who Alexa was. They simply knew her as the woman I loved. I hadn't really created a backstory of why I was in Peterhead. Most believed me when I simply said I was interested in the job, citing the BBC documentary series I had watched.\n\nAlexa received numerous questions. I learned a few things about her from the answers she gave. She was single, never married, no children, which I'll admit was a relief. She was a school teacher, which impressed me. She had come to find me as her mother was sick and wanted to see me a final time. When someone asked why we had been split apart for so long, she simply said it was her father that had been responsible, not elaborating any further. It was obviously a source of tension and heartbreak, and even hard as nails sailors can recognise the signs.\n\nAfter a couple of hours, Alexa and I were itching to leave. Iris gave me the eyes, and we managed to slip out with just a few quiet goodbyes, promises that we'd definitely catch up again. I lived close by, Alexa driving her car the short distance to park it outside my little house. My hand was still shaking when I tried to put the key in the lock.\n\n\"Mine are just the same, Chris.\"\n\n\"You're really here?\"\n\nI felt her hand on my shoulder. \"I'm here as much as you are.\"\n\nEscorting my sister inside, we entered the small living room. Part of me just wanted to leap on her. The other, more sensible part, knew I needed to clean up first. \"I really need a shave and a shower. Do you mind?\"\n\n\"Can I join you?\"\n\nI couldn't help smile. \"Of course.\"\n\nThe bathroom wasn't large. The house wasn't large. Living room and kitchen downstairs. Bedroom and bathroom upstairs. But the shower was large enough for two people. I almost fell over in my desperation to get my clothes off; Alexa was in just as much a hurry. Once we were both naked, I couldn't help but gawp at her body. Still as beautiful as ever, she'd certainly matured into a gorgeous woman. Her eyes gazed at my rather battered, scarred body, though as I said above, I was far broader and more muscular than when she'd last seen me. But fishing was dangerous, and I'd certainly earned plenty of reminders over the years that death was always a moment away on the sea. Then her eyes moved down, and there was no missing I was achingly hard.\n\nShe smiled as she said, \"Just as big as I remember.\"\n\nWe ended up under the water as I washed her and she washed me. I definitely needed a good scrub, usually going a few days at sea without a real clean, just a cloth and a bit of soap and water on the important parts. But after a good scrub, I was certainly as good as new, and definitely would have smelled a lot better. In addition to washing, we made out, desperate for contact by either hands or mouths. I was ready to fuck her right there and then, though she shook her head, saying she wanted it in bed.\n\nI shaved quickly, ridding myself of the beard I'd recently grown. Once I felt and looked like me again, I wandered out into my bedroom, where Alexa was already waiting for me. Neither of us wasted any time, as I crawled up the bed towards her, kissing her again, our tongues intertwined as my cock was at her entrance.\n\nShe broke the kiss to say one simple sentence. \"Make love to me, Chris.\"\n\nI'm not embarrassed to say I lasted all of five minutes, impressed I lasted even that long. The moment I slid my cock inside her pussy, not surprised that she was incredibly wet, I felt whole once again. She nearly started crying, instead just wrapping her arms around my neck and giving me one hell of a kiss. Otherwise, the coupling was fast and frantic, no doubt a precursor to however many days we were about to spend together. But she felt as wonderful today as she had the only other time we had made love.\n\n\"I'm not going to last long,\" I informed her after no more than three minutes.\n\n\"It's okay. Just cum in me again. We have the rest of our lives to do this again and again.\"\n\nThere was no point trying to delay my orgasm. I couldn't remember the last time I'd had sex. I rarely masturbated, considering I spent most of my time on a boat. So I generally walked around with rather full balls. Plus, this was Alexa. My sister. The woman I loved above all others. In fact, apart from my mother, the only woman I loved, though I didn't want to fuck my mother.\n\nWhen I came, I groaned so loudly I'm sure they heard me down in Edinburgh, while the curses would have made my crew blush. My sister just held me tightly as I finished. I came hard, and so much, I thought my balls would shrivel up into my body and that I would pass out from the high.\n\nOnce I'd recovered my thought processes, I kissed her gently. \"Think I needed that,\" I said quietly.\n\n\"I just needed my brother inside me again.\"\n\nUnsurprisingly, I remained rather hard. \"You have no idea how much I've missed you,\" I admitted.\n\nShe blinked rapidly as I kissed her forehead. \"I searched for so long, Chris. I'll admit I gave up for a while because there was just no sign of you. It was like you'd disappeared off the face of the earth.\"\n\nI pulled out, turning onto my side and just held her against me. \"I'll admit, Brian frightened me with his threats. I really thought he'd either see me thrown in jail or even kill me. So I left and hoped you would eventually move on with your life, perhaps just putting what we shared as a once in a life time experience.\"\n\n\"Did you really want that?\"\n\nI shook my head. \"Of course not. As I said, I've thought of you every single day. I've been miserable for over a decade. Only the job and my crew has kept me going.\"\n\n\"And now?\"\n\n\"I know I never want to let you go again. So what do we do?\"\n\n\"How about small steps? We fly back to Sydney so you can at least say goodbye to Mum. I'll call and see how long she has left. She doesn't have long left, Chris. It's a vicious disease and it took hold quickly.\"\n\n\"Cancer?\" She nodded. \"Damn...\" I couldn't help the sigh. It certainly wasn't the news I wanted to hear. \"Okay, I'll need to put a few things in order. I need to ensure my boat still goes out as the men need to make money.\"\n\n\"When do you think we can leave?\"\n\n\"Give me a couple of days to get my affairs in order, then we can go.\"\n\nOf course, that was all for later. We made love constantly for the rest of the day. There was little in the way of foreplay that first day. The need we had for each other could only be satisfied by me having my cock buried deep inside my sister. We would make love until we both orgasmed, then hold each other afterwards, continuing to discuss everything that had happened over the years. Once I was hard again, which didn't take too long, we'd make love again. We only stopped for food and drink a couple of times, before heading straight back to the bedroom. Alexa wouldn't accept any other position except me on top so I could see her eyes, and that she could run her hands up and down my body, never removing her hands from me, in near disbelief she was with me once again. If she felt that way, she had no idea how frazzled my mind was, left believing this was all just one hell of a realistic dream.\n\nShe slept in my arms that night, our appetites for each other barely satisfied. Both exhausted, I think we enjoyed a good night's rest, though we woke at least once for another round of intense lovemaking, always expressing our love for each other, probably sharing all the 'I love you's' we'd wanted to share over the past decade and more.\n\nBeing the tight-knit fishing community it is, friends I'd made over the years stepped forward to help when I explained the reason to go home. My old captain, Jack, offered one of his most experienced crew members to take over the running of my boat while I was gone. I explained I had no idea when I'd be back, though he wouldn't hear of it. \"I didn't know you smiled, Chris,\" he said. I understood what he meant.\n\nWithin three days, we were in a hotel on the outskirts of London Heathrow, waiting for a flight back to Sydney. If anyone thinks our lovemaking slowed down, they'd be wrong. To say we were making up for lost time would be an understatement. Whenever we were alone, my pants and underwear would drop, her skirt would be lifted, her panties dropped or simply moved aside, and we'd make love. Or fuck. Or rut. Or bang. Or I'd go down on her. Or she'd go down on me. If we had the opportunity, we'd go down on each other.\n\nI revelled in her taste once again, spending so much time with my face between her legs in those intervening days, bringing her to orgasm time and again, I knew for an absolute fact I'd never leave her. I felt I'd been left with no choice all those years ago. Now nothing would keep me away from her. She was just as desperate for me, whether for my cock to be inside her pussy, where it spent most of its time, though she quite happily took me in her mouth, sucking and licking my cock to completion. She swallowed whatever I gave her, which surprised me, though she'd just look at me with those beautiful eyes of hers, humming away happily before showing me an empty mouth.\n\nI'm pretty sure we kept the hotel awake that night before we flew back home. I know we kept each other awake nearly all night, the intensity our lovemaking reaching near fever pitch. I ate her out for what felt like hours, making her cum with my tongue and fingers, letting her come down from her high, before eating her out to make her cum again. I left her a sweaty, dribbling mess by the end. My face was an absolute state, covered in her juices. It took her quite a few minutes to recover before she pushed me onto my back, climbed on my cock and rode me to an orgasm of my own within five minutes. No real surprise, considering.\n\nWe flew via Singapore on a midday flight from Heathrow. Once it was dark, and most people had gone to sleep, I felt a tap on my shoulder. My sister leaned into my ear to whisper, \"I need you to fuck me now.\"\n\nI'd obviously never had sex on a plane though had heard of the 'mile high club'. I grabbed her hand and we quickly made our way to one of the toilets. It was small, cramped, with barely enough room to swing a cat. She lifted her skirt as I dropped my trousers, Alexa turning around as we looked into the small mirror. She smiled at me though her face changed when my cock found her wet tunnel, sliding inside her with ease.\n\n\"Oh god, it's been too long, Chris.\"\n\nI couldn't help chuckle. \"We fucked this morning, Alexa.\"\n\n\"Too long. I want you inside me all the time.\"\n\nIt lasted barely ten minutes. It wasn't particularly comfortable. She banged her head against the mirror. I cracked my knee against the basin. But her pussy was warm and tight, and it was so naughty, knowing a plane full of people was just outside the door. We tried to keep the noise to a minimum, though I'm sure they heard me groan as I came. I had my fingers furiously working her clit at the same time, and she orgasmed just after me. It was probably the best and worst sex I'd ever had. We fell asleep once we got back to our seats, not waking until near Singapore.\n\nI was thankful no-one was there to meet us once we arrived in Sydney, my sister having explained everything my father had said and done once I'd left. My sister had done her best to defend me, but when everyone was told that I'd assaulted her, or had groomed her to take advantage, my name was practically mud. Even friends eventually believed it, because they heard nothing from me in return.\n\n\"Melanie didn't believe it,\" Alexa said in the car, driving me to her apartment.\n\n\"Now that's someone I haven't thought of, or a name I haven't heard in years.\"",
        "\"She knew, Chris. About me and you.\" I just shrugged. No point worrying about it now. \"Last time I saw her, she was married. That was about three years or so after you left. She told me that she really did love you.\"\n\n\"Guess I did her a favour, then. Because I loved someone else.\"\n\nAlexa just grabbed my hand and smiled at me. \"I know,\" she said quietly.\n\n\"When should we go see Mum?\"\n\n\"Let's get over the jetlag. So I was thinking tomorrow morning?\" I nodded. \"Besides, I need my brother's cock inside me again. I'm thinking the rest of the night.\"\n\nI burst into laughter as my sister was proving to be rather insatiable. Not that I complained one little bit. There was no way she was going to wear me out anytime soon. The first thing we did when arriving at her place was to have a shower. A day and more in transit left one feeling rather icky. I was used to the feeling but my sister begged me to wash her. So I did that, plus a little more.\n\nOnce we'd dried off, I picked her up in my arms, my sister complimenting me on my strength, as I carried her to the bedroom. Laying her down on the bed, I must have spent the next couple of hours covering her entire body with attention. Not a single piece of skin would have remained untouched my either my lips, tongue or hands. Even though my hands were battered and scarred, she cooed at how gentle I was. Her breasts remained as perfect as I remember, spending plenty of time licking and sucking her nipples, amusing myself as they hardened, gently biting them and hearing her gasp as I did. I kissed her entire body all the way down to her groin, ignoring her dripping wet pussy as I kissed all the way down one leg to her cute little foot, before doing the same back up her other leg. By the end, she was begging for me to eat her out.\n\nHer taste is indescribable. All I know is that I could do it every day for the rest of my life. I teased her mercilessly, my tongue running around the outskirts of her cunt before I finally grazed her lips. She pushed down, her body aching for my tongue or cock. I finally gave into my own temptation, spreading her lips and teasing her entrance, feeling her body shudder.\n\n\"I'm going to cum so fast,\" she moaned.\n\nI didn't say anything, though I liked to know that everything I was doing worked. To say I feasted on her wouldn't be entirely incorrect. She was literally flowing from everything I was doing to her. I inserted a couple of fingers, and the moan she made suggested to me that was she was about to blow. Gently fucking her with a couple of fingers, looking for that perfect spot inside her, I started to gentle flick her clit, doing little things with my tongue that I'd learned since we reunited that I knew she loved. And that I knew would make her cum hard.\n\nWhich is what she did about a minute later, crying out my name as her walls clamped around my fingers, continuing to pump those in and out as she arched her back, trying to squeeze her legs together though I was in the way. \"Oh my god, Chris!\" she cried.\n\nI nearly came myself at what I'd managed to do to her. And I didn't stop, continuing to pump my fingers and lick her clit. She didn't tell me to stop, in fact telling me to keep going. \"The next one may be bigger,\" she said, actually giggling.\n\nAnd it was. I think she nearly passed out and I figured I should probably stop what I was doing. Once I'd pulled out my fingers, licking them clean before wiping my face, I lay down next to my sister as she started to laugh. \"My god, Chris. Can you do that to me every day for the rest of my life?\"\n\nI stroked my chin. \"Um, let me think about it.\"\n\nShe playfully slapped my arm. \"Tease.\"\n\nSliding my cock inside her again a few minutes later, we made love slowly, even tenderly. Our need for each other hadn't diminished, but we were now together, and the fear that this wasn't real had receded. She wrapped her legs around me, hooking her feet together, moaning that I was even deeper. My thrusts were long but slow, burying myself inside her before pulling back, enjoying the warmth of her pussy, my cock appreciating it completely. She felt so good. And it felt so right. This was my sister, a woman I'd loved my entire life. Who would love a sibling more than her own brother? I'd spend the rest of my life trying to make her happy and ensuring she felt loved every single day. That was the promise I made to myself.\n\nShe beckoned me on to finish inside her, though I purposely made her wait for the prize. I'd cum rather quickly quite often, though she never complained, knowing I was just so excited to see her, probably glad I didn't cum before I'd even entered her. Slowly but surely, I was building up a resilience, able to last a few minutes longer, though neither of us appeared interested in hour long fuck marathons. We'd fuck for ten or fifteen minutes, orgasm, rest, then go again later. And that's what I did again this time, kissing her hard as I felt another flood of cum flow out of my cock deep inside her. She giggled again, feeling me blast inside her, groaning into her mouth before near collapsing. I think every orgasm I had with her was better than the last.\n\nWe escaped the bedroom later that night to head out for dinner. It felt very strange being back in a big city. Living in Peterhead, I'd rarely left the town itself, only heading to Inverness if I wanted some time away. I'd never even been to Europe. There just wasn't time with being a trawlerman, and I didn't really have the inclination to travel alone. The crowds made me a little uncomfortable, in all honesty, wondering if anyone would recognise me after all this time. My sister recognised my discomfort, so quickly suggested we grab some take-out to eat back her apartment.\n\nAfter eating, we finally stayed out of the bedroom, actually sitting down on the couch to watch a little television. Eventually settling on a movie, Alexa cuddled into me, everything feeling rather reminiscent of that very first night we shared together, though this time, we made it through the entire movie before we ended up having sex on the couch. Then on the floor between the living room and bedroom. Before finally the bedroom.\n\nI was a nervous wreck the next morning. I hadn't seen any of the family since the day I visited the grandparents in the few days before I'd left. I had no idea if any other family would be at the hospital. \"Brian doesn't make an appearance until the evening. Our grandparents may be there, though. Her parents, at least.\"\n\n\"How will they react to my appearance?\"\n\nShe shrugged. \"Honestly, I don't really know. A lot of time has passed. And I think showing up there with me may help put some things right. Mum knows the truth, though. I have no doubt she's been telling everyone what really happened.\"\n\n\"So the truth but... it was consensual?\"\n\nShe shrugged again. \"I'm not sure, Chris. We haven't really spoken about it.\" She hugged me. \"Don't worry about it. We'll be fine.\"\n\nI was bricking it in the car on the way to the hospital. I really didn't want to run into Brian, and had noticed Alexa also called our father by his name too. We walked in hand and hand, following bright corridors, coming to a stop just outside her door. Alexa just squeezed my hand as I took a deep breath before I nodded.\n\nMum was awake. She didn't look well at all. In fact, she looked as ill as Alexa had described. But her face lit up into an enormous smile at my appearance. Sat near her bed were her Mum and Dad, our grandparents. Grandma gasped as they both got to their feet too.\n\n\"Mum gets the first hug, Chris,\" Grandma said.\n\nI couldn't hug her too tightly as Mum felt so thin and fragile. But she held me tightly in reply, hearing her sob quietly in my ear as I held her. \"I'm sorry, Mum,\" I whispered, feeling hot tears drop from my eyes.\n\nShe didn't say anything while we hugged. I'm sure we held each other for at least ten minutes. Probably longer, in all honesty. When she finally dropped her head back onto the pillows propping her up, the smile had broadened, though I could see the echo of pain in her eyes. \"You have nothing to apologise for, Chris.\"\n\n\"But...\"\n\n\"But nothing.\" Mum then looked past me to Alexa. \"Knew you'd find him eventually.\"\n\n\"I wasn't returning without him. Sorry it took so long.\"\n\n\"My sister let us know of your arrival, Chris,\" my grandfather stated, walking towards me with outstretched hand, \"And it's good to see our grandson again.\"\n\nI couldn't help the surprise that no doubt appeared. \"You too, Grandad.\"\n\nThen I hugged my grandmother. \"We never believed his lies,\" she said quietly.\n\nI wanted to ask plenty of questions about what Brian may have said about me. But, to be honest, it was ten years ago, and I didn't really care anymore. All that mattered was enjoying these last few days or weeks with Mum. I took a chair and placed it next to her bed, Alexa sitting next to me, grabbing my hand. Mum noticed it and smiled. \"Even after ten years, Chris?\"\n\nI glanced at my grandparents before meeting her eyes. \"I never stopped loving her, Mum.\" I looked at my grandparents again. They both simply nodded and smiled.\n\n\"I told them everything, Chris. What really happened that night and morning. They don't claim to understand. But you are their grandchildren. They love you. And want you both to be happy. Just like your mother.\"\n\n\"What are you saying?\"\n\n\"I've watched my family fall apart, Alexa. My son was forced out of his home. His sister never comes home. My husband,\" she spat that last word, and I had a feeling she was getting everything off her chest now the end was nigh, \"Brian has taken everything I cared about from me, and all I did was stand there and watch. I may be dying, but I can still make this right.\"\n\n\"You don't need to do anymore, Mum. We're going to be together, and anyone who doesn't like that can get fu... I mean...\" I trailed off and cleared my throat.\n\n\"What about Brian?\" my sister asked, \"In fact, I can't remember the last time I saw him. I don't particularly want to see him either.\"\n\n\"You'll need to speak to him once you're getting ready to put me in the ground, Alexa.\"\n\nI couldn't help the burst of laughter that erupted. \"Sorry, Mum, but you talk about it so... calmly.\"\n\n\"I'm going to die, Chris. I don't know when, but the doctors are pumping me with so many painkillers, I'm assuming they'll eventually give me enough to put to sleep and I won't wake up again. I know it's soon, so I'm saying as much now because, no doubt, I'll be fucked soon enough.\"\n\nMum held on for longer than anyone imagined. Alexa and I visited nearly every day, and were lucky to never run into any other family except our grandparents and her brother, our uncle. We kept our relationship under wraps in front of him, though he echoed what his parents had said. He didn't believe what our father had said. It was nice to know after all this time, though it was too late to change the past.\n\nI managed to avoid seeing my father until the day Alexa received a call from the hospital. By this stage, we'd already said our final goodbyes as Mum had slipped into unconsciousness for the final time. My sister was already prepared, having to swallow her pride and at least speak to our father on the phone as plans were made for the funeral.\n\nThat was when the long lost son, his name besmirched by his very own father, would reappear in front of the entire family.\n\n*****\n\nCHAPTER FOUR\n\n\"I'm still not entirely comfortable doing this at her funeral,\" I said for no doubt the hundredth time.\n\nAlexa just smiled as she helped me straighten my tie. I'd never worn one in my life. \"It's the perfect time. He can't say a thing once he sees you. And you reappearing on my arm will certainly set plenty of tongues wagging.\"\n\n\"The eulogy should be interesting.\"\n\n\"There will be two. Grandad will be sharing some words too. The differences between the two should be interesting.\"\n\nMy sister drove us to the funeral home, never letting go of my hand as she drove one handed all the way. Once we arrived, there was no missing the stares and surprise of family members, and even one or two old friends, upon my appearance, but particularly as I walked hand in hand with my sister. Mum's parents were already there, greeting the pair of us, as did our uncle. Friends of Alexa's, and even a couple of my old friends, appeared and immediately bombarded us with questions. I put it straight, saying my father had lied. Whether they chose to believe me or not was up to them.\n\nBut it was a sideshow to the main attraction. Alexa and I made sure we were the last to enter, and I saw my father for the first time in over a decade. He looked a little older, his frame having diminished. But when his eyes met mine, they burned with the anger and hatred I saw the last time we'd seen each other. I just smiled at him, holding the hand of my sister. My grandfather gestured for us to join them.\n\nAlexa and I walked down the aisle, stopping to greet people we hadn't seen in years. Most of the greetings were friendly enough, obviously the poisonous lies of my father left lingering doubts, though the fact I was there with Alexa suggested things were not as they were told so long ago.\n\nThen we had to walk by my father.\n\n\"When did you get back?\" he asked testily.\n\n\"Long enough to have shared plenty of words with Mum and my grandparents.\" I leaned in close and whispered, \"Just know that your wife despised you by the end of her life. Go to your own grave knowing that, you son of a bitch.\" Then I leaned back, clapped him on the shoulder and said, \"Good to see you too, Dad. It's been a long time.\"\n\nMy sister played her part perfectly, even kissing him on the cheek. \"I still hate you with every fibre of my being, you bastard,\" she whispered, loud enough for only my father and I to hear. Even at a funeral, the hate ran deep.\n\nI could see he was rattled, not just by my reappearance but by the eyes my sister gave him. I'd never seen such hatred in anyone's eyes like that. I remember the look he had in his eyes that morning, so long ago, and they were nothing compared to the stare my sister returned to her father.\n\nWe sat hand in hand through the service, sitting next to our grandparents. The celebrant -- we were not a religious family -- shared some words before opening up the floor for eulogies. I had one mention during my father's, the fact my mother gave birth to a boy. Other than that, nothing. He spoke of my sister in grander terms, though I could see her words had got to him. My grandfather must have adapted his eulogy rather quickly for my return, as he spoke in glowing terms of his two grandchildren, and the love his daughter had shared for her two children. I'll admit, the old man got to me, feeling it necessary to wipe my cheeks, feeling Alexa cuddle into me at the same time. I'd never doubted Mum loved me, and I was filled with deep regret that I'd barely had a couple of weeks with her before the end.\n\nOnce the service ended, plenty more people came up to at least say hello, and I did my best to remain friendly and pleasant. The wake was to be held at our old house, now empty of everyone except my father. I'll admit that thought pleased me to no end, knowing the bastard was now alone.\n\nI was hoping to get through the entire day without confrontation so Alexa and I could just move on with our lives in peace. But once my father had a couple of drinks, he came looking for trouble. I'm not a complete asshole. I could see he was devastated by the loss of his wife. But I knew he had taken my words to heart. I have no doubt my grandfather's eulogy would have been a jolt too, as his speech suggested plenty of thoughts and feelings no doubt repressed for a very long time.\n\nMy sister and I were quietly chatting about nothing important as I heard my father shout my name from across the room. Silence followed, as I simply turned towards him and smiled. All eyes now glanced between son and father.\n\n\"Something you want, Brian?\"\n\n\"I told you to get the fuck out. Again.\"\n\nThe smile remained on my face. \"You don't get to tell me what to do anymore, Brian. And if you think you're going to stand there and intimidate me, then you're fooling yourself.\"\n\nHe strode towards me, his face turning into a sneer. I knew what was coming. It was so telegraphed; a carrier pigeon could have dropped me a note saying 'He's going to throw a punch'. It was so long in coming, I could have finished the beer in my hand. Instead, I quickly handed that to Alexa, as I felt her step away. His right hand came up, balled in a fist, and I know I surprised him when I caught it in my left hand.\n\n\"Not this time, Brian.\"\n\nThen I punched him in the face. That rocked him, so I hit him again, this time straight into his nose, watching blood immediately pour out and I was left with little doubt it was broken. He started to wobble, so I hit him a third time, sending to the ground on his arse. It was still silent as I looked around.\n\n\"Anyone else want to have a go?\" I specifically looked at his side of the family, glaring at them with the same hatred I had the man on the ground. No-one made a move.\n\nI got down on one knee, doing exactly what he had done to me ten years before. A knee into his chest, a hand around his throat, before using both hands to grab his collar, bringing his face closer to mine.\n\n\"Payback, you son of a bitch. Over ten fucking years of my life you've stolen from me. And for what? Because I love my sister.\" I heard the murmurs start, but ignored them. \"I didn't assault her. I didn't groom her. I most certainly didn't fucking rape her. It was the best decision I'd ever made, and the best night of my life up to that point. And I know it was for Alexa too. All we did was consummate the love we'd had for each other up to then.\"\n\n\"You're fucking...\"\n\nI violently shook him, cutting off his words. \"You didn't even let us explain! All you did was beat me up then kick me out. We knew it may have been difficult for you to understand, even accept, but we were your children. You should have at least attempted. Instead, you treat me like dirt and god knows what you really thought about your daughter. I'm still convinced you wanted her for yourself.\"\n\n\"Fuck...\"\n\nI shook him again. \"Shut the fuck up! You don't get to talk now. Over ten years, Brian! Over ten years I was separated from the only woman I've ever loved. So this is what is going to happen now. She is coming with me because she wants to be with me. Because she loves me just as much as I love her. I'm not going to tell you where we are going. You don't get to know that information. Just know that, after today, you will see neither of us again. Mum died with love in her heart, knowing her children were happy. And she hated you for breaking up her family. So it gladdens me, no matter how sick it sounds, that you will now die alone. We won't show up to your funeral, whenever that is. If we lived in another country, I'd be tempted to give you a gun so you put it in your mouth and end yourself now. Just know that I despise the ground you walk on. Your own daughter hates you with every bone in her body. You are nothing to us. A sperm donor at best.\"\n\nI fell silent and watched his eyes glare back into mine. I finally released his collar and his head dropped back onto the ground as I got to my feet. I looked around the room, stunned expressions returned from most people. Our grandparents, our mother's parents that is, just smiled at us. I walked towards them. \"We'd better go. I think I've finally done what was required.\"\n\nMy grandmother just hugged me. \"Keep in touch?\"\n\n\"We will.\"\n\nMy grandfather shook my hand. \"Your mother was always proud of you, Chris. And she'd love you even more for protecting your sister. You go with our blessing.\"\n\n\"Thank you,\" my sister and I said together.\n\n\"Wait, what?\" my uncle asked, finally understanding.",
        "\"We'll explain it later, David.\"\n\nHe shook my hand, sharing one last hug and handshake with the grandparents, before Alexa and I walked out of our hold house hand in hand for the last time. Before getting in her car, she pushed me into its side and kissed me. And I mean kissed me! It was hot, heavy, with the sort of tongue involved that was only ever going to make me achingly hard. I kissed her back, of course, though couldn't help wonder if she was putting on a show for anyone who may have been watching.\n\n\"I've been dreaming about you doing that for ten years,\" she said, a little out of breath once she broke away.\n\nI just cupped her cheek. \"I love you.\"\n\nShe kissed me softly before replying with the same words.\n\nDespite the sadness of the day, I think smacking my father had turned her on, as by the time we got back to her apartment, she was ready to fuck. \"I want to celebrate life,\" she said upon closing the apartment door. She took two steps towards me before practically leaping on me. We fucked right there in the hallway. All she did was pull up her dress and drop he panties. I dropped my trousers and underwear and we fucked. There is no other way to put it. We. Fucked. It was hard, fast, sweaty and incredibly orgasmic, the release of pent up emotions over the previous days, weeks, months and years. Once I came, we kept right on fucking, my cock barely going soft.\n\nWe eventually undressed completely and in the bedroom, my sister now on top of me, riding my cock through orgasm after orgasm. We didn't stop until much later that evening, when I think we were both feeling a little sore and worn out. I was still a little erect and inside her as she lay on my chest, breathing hard.\n\n\"So I'm going with you, am I?\" she finally asked.\n\n\"Ah, yeah, about that...\"\n\n\"I'd love to.\"\n\nThat surprised me. I was convinced she'd want me to return. \"You're serious?\"\n\n\"You said you love the life, Chris. I can't pull you away from that. Plus, the UK is always looking for teachers. I'm sure I'll find a job somewhere.\"\n\n\"It's a hard life up there, Alexa.\"\n\nShe lifted her head to meet my eyes. \"As long as I'm with you, Chris, I don't care where we live or what we do. I just want to be happy. And I'll be happy when I'm with you.\"\n\nSo I guess that was decided. Alexa was coming with me.\n\nI got in touch with my old captain, thankful I managed to get hold of him while he was on shore. I explained what was happening, and told him I'd be a little longer. He just laughed, suggesting my replacement would be rather happy to continue using my ship for as long as I wanted.\n\n\"So, I guess the one question I have is... Is your sister joining you back here?\"\n\n\"She is,\" I replied.\n\n\"Your secret is safe, Chris. As I said, I can't claim to understand, but I saw how she looked at you. There's no doubt in my mind she feels the same way.\"\n\n\"I know. But thanks, Jack. We'll definitely catch up once we're back.\"\n\n\"No hurry now, Chris. You take all the time you need.\"\n\nAlexa had to get all her affairs in order. Though I had the feeling she would have rather just dropped everything and left, she still had responsibilities that required sorting out. She resigned her teaching position, though would work until the end of term (thankfully only a couple of more weeks). Other than that, she had to give notice about ending her rental agreement, started to tell friends that she would be leaving with me, as nearly everyone was aware of our relationship after the wake. I guess that was another good reason to leave, as I have no doubt someone would eventually let the authorities know.\n\nDespite that, we did hold a farewell party, inviting the few friends that remained. Not all were at the funeral or wake, so may not have been aware of our relationship. We didn't particularly want to go into details or explain too much to those who were not aware, so we simply said Alexa was joining me overseas as there was nothing left for her now that her mother had passed.\n\nOnce the party was over, Alexa and I made love for what I assumed would be the final time in our home country. We were all over each the moment we closed the door on the departure of our final guests. She was definitely in charge, dragging me into the bedroom by the front of my shirt, before she sat down on the bed. Grabbing my belt buckle, that was undone in double quick time, my trousers and underwear dropping to reveal my already hardening cock.\n\nOne of her hands wrapped around my shaft as she looked up at me, innocence in her eyes and all over her face. \"Do you want your little sister to suck your cock?\"\n\n\"Only if she takes a load in her mouth.\"\n\n\"Oh, she will definitely take whatever her big brother gets her.\"\n\n\"This gets you off, doesn't it?\"\n\nShe smirked. \"Are you complaining?\"\n\n\"I love the fact my little sister loves my big cock.\"\n\n\"She certainly does.\" To emphasise how much she did love it, I watched the entire length disappear inside her mouth, not all at once, as she had to adjust her mouth and throat, but after a couple of attempts, her nose did bump into my groin. Pulling back, my cock now covered in her saliva, she looked up again, didn't say a word, before she started blowing me. One thing I can say about my sister is that she was now an expert cocksucker. I knew she'd been with one other man, and she said he was rarely blown by her. Me, though. I think she liked sucking my cock as much as I liked going down on her.\n\nI could help throw my head back and groan, feeling tingles flow up my body, looking back down to see my sister's head bob up and down on my cock. She looked up at me the entire time, a smile wanting to appear on her face. My cock reappeared again. \"Are you going to cum for your sister, Chris?\"\n\n\"Soon enough.\"\n\n\"Will you eat my pussy afterwards?\"\n\n\"All night if you want.\"\n\n\"While that sounds delightful, I definitely want you to fuck me soon. But I want your cum in my mouth soon.\"\n\nShe received a healthy dose of it not long later, wrapping one of my hands around her head, hearing her squeal with delight as I blasted hot, sticky ropes into her mouth. Once I was finished, I released her head as she looked up at me and opened her mouth. She then closed her mouth, smiled and swallowed. My cock barely went down after seeing that, and she started blowing me again. I was feeling rather sensitive, and my legs felt on the verge of giving out, but I didn't stop her.\n\n\"You're insatiable, Alexa.\"\n\n\"I went over ten years without this cock in my life, Chris.\"\n\nI eventually had to stop her. Not because I wasn't enjoying myself, but I wanted to return the favour. She was ready to complain when I lifted her up, though as soon as I started to unbutton her shirt, she just leaned up to kiss me. We were both naked rather quickly as I lay her back on the bed, her legs automatically spreading as I teased her entrance with my cock.\n\n\"Not yet,\" I said quietly.\n\nShe knew what was coming, unable to stop the smile forming as I kissed her. I could taste myself on her lips and tongue, but it never really bothered me. Why should it when she's willing to take an entire load? I teased her for a while, but it wasn't relentless. My fingers went to her cunt every so often, and if it was possible, she was wetter each and every time. Her perfect breasts were shown plenty of attention and affection, hearing her whimpers as I sucked, licked and gently bit her nipples. They were so hard, the saying 'hard enough to cut glass' would have been rather apt. I think she almost orgasmed just from the attention I gave those alone.\n\nI then shocked her by flipping her over onto all fours, once again pressing my cock to her entrance, feeling her push back, eager for me to slide inside her. Instead, I leaned forward and kiss the back of her neck, feeling her shudder as I moved down her back, covering her back and gentle kisses. \"Oh my god,\" she whispered as I gently started to rub her.\n\nKneading her butt-cheeks, I covered them in kisses too, my sister wiggling her butt into my face at the same time. \"Do you like my arse?\"\n\n\"It's perfect, just like the rest of you.\"\n\n\"Want to stick your cock in it?\"\n\nThat grabbed my attention. \"Seriously?\"\n\n\"I've never done it before but I'd let take you me in every hole, Chris.\"\n\n\"We'll look into it if you'd like.\"\n\nBut I know I still surprised her when I started to lick her arsehole. She actually started to laugh, though only because she said it felt a little strange. But she still ended up pushing her arse back into my face, urging me to eat it out. \"I had no idea,\" she breathed.\n\n\"Got any lube?\"\n\nShe giggled. \"Want to try it now?\"\n\n\"God yes.\"\n\nI'd done it before with Melanie, though that was a long time ago. The fact my sister was willing and eager would hopefully make this easier. She kept lube in a drawer of her bedside table. She giggled again as placed some lube on her puckered little hole, gently rubbing my finger at her back entrance before I inserted a finger. She gasped when I did, and naturally tried to pull away. I held her in place and let her adjust to the intruder.\n\n\"Let yourself adapt.\"\n\n\"It's just weird.\"\n\n\"It'll get better.\"\n\nI slowly finger fucked her, letting her get used to having something in her arse. I wasn't stupid and wasn't going to just start fucking her. I wanted her to enjoy it and offer to do it again. The fact it was my little sister offering her arse to me made it even more mind-blowing. She was soon pushing back onto my hand and I knew I could insert another finger. She moaned when I did, and I started to finger her just a little harder.\n\n\"Oh, that's good, Chris.\"\n\nI used my other hand to start fingering her cunt at the same time, and my sister was soon writhing in my hands. Literally. I almost made myself laugh as I'd insert my fingers into her arse and out of her cunt, then vice versa. My sister knew what I was doing too, but was far too caught up in the sensations to do anything but whimper and moan.\n\n\"I need you to fuck me, Chris. Fuck my arse!\"\n\nI was generous in the application of lube on my cock before adding more to her arse. Placing the head of my cock at her entrance, I could sense she was a little nervous. But she looked back and smiled, and I pressed the head of my cock through her tight little hole. She gasped again as I did, stopping as soon as I was inside her, letting her adjust to the size of my cock.\n\n\"Holy shit!\" she cried softly.\n\n\"Good?\"\n\n\"Uh-huh. Just give me a moment.\" She wiggled her butt and laughed. \"Wow, that's actually pretty good.\"\n\nI took my time, adding an inch before pulling back, adding another inch, slowly, slowly, lowering my entire shaft into the arse of my sister. Once I had my entire cock inside her, I couldn't help the groan. It felt different to her cunt but the sheer taboo of arse fucking my sister nearly made me blow my load then and there.\n\n\"Okay, Chris?\" she breathed.\n\n\"Just taking a moment.\"\n\n\"Fuck me, brother.\"\n\nBeing her first time, I only ever remained gentle as I started to fuck her. While I fucked her arse, I tried to play with her pussy at the same time, though she eventually grabbed my hand and moved it away as she started to play with herself. \"Hold my hips,\" she requested, so I placed a hand on a hip each and started to rock myself, slowly upping the tempo every couple of minutes. Pounding her wasn't going to be necessary, I was definitely going to cum regardless. But I wanted my sister to cum while I was deep in her arse.\n\nApplying a bit more lube, feeling it starting to run a little dry, I started to pound my sister's little arse a little harder, hearing her breathing change, earning myself more moans, and I knew she was now in the moment and on the verge of having an orgasm. I was doing all I could to hold back my home, trying to ignore the warmth and tightness of her arse, trying to ignore the fact this was my sister and she was actually letting me fuck her there. I'd never even thought about it until she offered.\n\n\"Oh, Chris, I'm going to cum so hard.\"\n\nThat's probably one of the most glorious sentences a brother can hear his sister say. \"So am I.\"\n\n\"Cum in my arse, brother. Blast inside your little sister's arse.\" She then squeezed and I nearly came. \"Yeah, that's right, fuck my arse, big brother. Make your little sister cum while you're in her arse.\"\n\nI lasted another couple of minutes as I started to pound her. She screamed, I think in delight but also in a little pain, though she urged me to keep going. I felt that usual tingling sensation in my balls, knowing I was going to erupt and very soon. I let her know. All she did was start pushing back into me, urging me on. I sensed she was getting close too, noticing her right hand was rubbing her clit furiously.\n\n\"Oh shit!\" I groaned, pushing forward one last time as I started to cum. \"Holy shit.\"\n\n\"Oh Chris!\" my sister cried barely seconds later, falling forward, taking me with her as we collapsed on the bed. I felt my sister shudder underneath me, my cock still buried inside her arse, as she let rip a series of expletives as she came. Then near silence, only our heavy breathing echoing around the room for a few minutes.\n\n\"Wow!\" my sister whispered a little later.\n\n\"Wow indeed. That's one of the hottest things I've ever done.\"\n\n\"You just fucked your little sister in the arse, Chris. It was the hottest.\"\n\n\"It was hotter still by the fact she suggested it.\"\n\n\"Every hole is yours, Chris. And we're definitely doing that again.\" She wiggled her butt. \"I can't believe how good it felt. I'd read about it but thought it was only ever going to hurt.\" I leaned down to kiss her cheek. \"I love you,\" she finished quietly.\n\nAfter enjoying a shower, we cuddled together in bed, plenty of kissing and caressing though, for once, I think more sex was the last thing on our minds. We didn't talk much. I think we were all talked out for the time being. So we just looked at each other in silence, a content smile on the fact of my sister before she finally yawned and snuggled into me, whispering how much she loved me before drifting off to sleep.\n\nWe left the country the next day. Only our grandparents came to see us off. I was okay saying goodbye, but my sister was in tears as she hugged our equally tearful grandmother. Although there were promises of seeing each other, I knew air travel from one side of the world to the other for them would always be rather difficult. We suggested we'd try and visit them, but it would depend on how our lives eventually panned out. But there was plenty of technology available, our grandparents being rather tech savvy for their ages, that meant we could easily remain in contact.\n\nWith a final wave, I took Alexa by the hand and we walked through customs into our new lives together.\n\n*****\n\nCHAPTER FIVE\n\nWe returned to Scotland a newly married couple. Not officially, there was no way that could happen, but we bought each other a ring and simply introduced each other as man and wife, telling everyone that we had married before leaving Australia. Of my friends in Peterhead, only Jack ever knew the truth about who Alexa and I truly were. And he was true to his word. He never told a soul.\n\nAlexa and I lived in my small house until the day she announced that she was pregnant, which was barely six months later. She had already found work at one of the new primary schools in the area, and was adamant she would return to work after the baby was born. Although I loved my work, I'd met plenty of husbands and fathers who worked as trawlerman that had seen their families drift away. I sat down with Jack one day and he gave me the brutal but honest truth.\n\nFind something else to do if I wanted to keep my family.\n\nI sat down with Alexa one evening and we discussed my options. I never thought of myself as particularly intelligent, but my sister wouldn't hear of such self-deprecation. While I wasn't particularly interested in further study, Alexa suggested I would make a fine school teacher like herself.\n\n\"You reckon?\" I asked, unable to hide my surprise.\n\n\"I've seen you with the kids, Chris. You're going to make a wonderful father,\" she said, rubbing her developing belly, \"And I think you'd prove an inspiration to the next generation coming through. You're a history buff. I'm sure you could inspire the next historian.\"\n\n\"What options do I have?\"\n\nIf Alexa was one thing, it was prepared. She had a booklet from the Open University. \"Study and work at the same time. It will be a bloody hard couple of years, Chris. But if you're serious about giving it up...\"\n\n\"I have to. I have to be here with you.\" I shook my head. \"No, wrong term. I want to be here. I don't want to be out there, trawling Atlantis. Not anymore.\"\n\nMy sister rewarded me for those words with an outstanding blowjob and a night of mind-blowing sex. I know she missed me every time I left the docks. I knew she would appreciate the fact I was giving up the job I still loved to be with her all the time.\n\nIt was long, hard work, but I eventually graduated with a teaching degree and found a job at one of the local high schools. I certainly earned respect of students with my gruff but still rather easy-going manner, adapting the way I'd dealt with my crew on the boat to how I dealt with students. Speaking of my boat, the 'Alexa' was sold and we used the proceeds from that to buy a bigger house while building some savings. The gentleman that bought it said he'd keep the name.\n\nAlexa and I eventually had a large family, for the standard of the time anyway. Our first child, a girl, we named after our mother, Claire Alexandra McDonald. She would eventually turn into a dead ringer of her mother. Fifteen months later, we had twins, a boy and girl. The girl we named Isla Olivia McDonald, the boy Lewis Christopher McDonald. Finally, we had a boy another eighteen months later. We called him Jack Alexander McDonald. When my old captain and now best friend found out, it was the only time he ever cried in front of me, and being squeezed into a big bear hug by the man nearly suffocated me.\n\nAs our children got older, we noticed the relationships that developed between them. The twins were very close, obviously, while Claire and Jack were near inseparable at times, the oldest sister certainly doting on the youngest brother. Alexa and I discussed it at times, particularly once they hit puberty, and agreed we would simply let nature take its course if that was to happen.\n\nAs for Alexa and I, we were blissfully happy. We still made love nearly every night or morning. Sometimes we'd even sneak away at lunch for a quickie in one of our cars. Even if we didn't, we were always kissing, hugging or sharing sweet words. I can honestly say we rarely if ever argued. I'm not saying we never disagreed. We could well and truly disagree at times, but we always discussed things rationally, never left a room angry or with bitter words, and definitely never went to bed angry. We never sweat the small things. Only the larger issues would ever cause us minor problems. Marriage is constant work, though it's not hard if you're willing to work together, a little bit of compromise from both parties but the central aspect should be one's love for the other. I loved my sister more than anyone, except perhaps my four children, and did everything to make her happy, and I know she did the same for me.\n\nOur kids were certainly smart, and it was no surprise when Claire was the first to disappear off to university, though only headed down the coast to Aberdeen, able to return home quite often. Unsurprisingly, it was Jack who missed his oldest sister the most, moping around the house while she was away, though he certainly brightened up once she returned.\n\nBut it was the twins that Alexa and I certainly discussed more often than not with my wife. They were a definite reminder of past events.",
        "\"Do you think they're sleeping together?\" my sister asked one night in bed. She was staring at the ceiling, taking a number of deep breaths after I'd just left another load inside of her. Thankfully now blanks, having had a vasectomy while she'd had her tubes tied, just to be safe.\n\n\"I don't know. What do you think?\"\n\n\"They remind me of us, Chris. It's like watching an action replay.\"\n\n\"Apples don't fall far from the tree, it seems.\" I paused, then asked, \"What about Claire and Jack?\"\n\nMy sister giggled. \"God, do all our kids want to fuck each other?\"\n\n\"Is there something wrong with wanting to fuck a sibling?\"\n\nAlexa just turned onto her side and kissed my cheek. \"Definitely not,\" she stated adamantly, before swinging her leg over me, straddling my groin and lowering herself down on my rising cock, \"I said I was going to love my brother the rest of my life. I'm not dead yet.\"\n\nI reached up and squeezed one of her breasts. \"You're definitely not.\"\n\n\"You'll still love me when I'm old and grey?\"\n\nI pointed at my head with my other hand. \"Already there.\"\n\n\"You're still as handsome as ever, big brother.\"\n\n\"And you're still as gorgeous, little sister.\"\n\nWalking down the hallway a couple of weeks later after needing a late night piss, I definitely head noise from Isla's room. Noises I knew well enough. I grabbed Alexa and suggested what I heard. We headed back to the door and listened. Looking at each other, smiling then nodding, we carefully opened the door. The scene that met us was not surprising but it certainly was... beautiful. That was the only word I could think of to use. The way Isla looked at Lewis as she rode him, and vice versa, there was no doubting the twins were head over heels in love with each other. The sort of love I shared with my own sister. I couldn't help grab Alexa around the waist and hold her close as we watched our children make love.\n\nIsla came first, making a series of adorable little moans before my son groaned and came inside his sister, feeling thankful that we put both girls on birth control as soon as we could. It was only then that the spell was broken and the pair of them noticed us in the doorway. I almost laughed as I watched colour drain from Lewis's face while Isla looked like she wanted a hole to open up in the ground.\n\n\"Dad, it's...\" Lewis stated to say.\n\n\"Mum, I...\" Isla tried to add.\n\n\"Clean up, kids, and come join us in the kitchen,\" I said softly. I noticed the confused looks they shared, figuring I should have been blowing up at them.\n\n\"We have something to tell you,\" my sister added, before we turned and walked away.\n\nAlexa and I brewed some coffee, placing mugs at a pair of empty chairs as we waited for the twins to appear. Lewis walked in first, unable to meet our eyes, while Isla looked on the verge of being sick. But, to their credit, they held hands on top of the table, a slight show of defiance, though completely unnecessary.\n\n\"How long have you been having sex?\" I asked, \"I know that wasn't your first time.\"\n\n\"Since we were legal,\" Lewis replied, \"We had sex on our birthday. It was our present to each other.\"\n\n\"And you've been having sex since?\"\n\nThe twins shared a glance and smiled. Lewis looked back and almost appeared smug. \"Nearly every day, Dad. Usually once we're home from school and have a couple of hours alone. You know we've never been with anyone else.\"\n\nI couldn't help burst into laughter. Alexa just swatted my arm. \"Be serious, Chris.\"\n\nI waved her away for a second before I cleared my throat. \"We assumed something was going on, but we were never going to pry. But, well, I heard you tonight so figured I'd put our minds to rest. No matter what, you're our children and we love you.\"\n\nThere was no missing the surprise. \"You're not mad?\" Isla wondered.\n\nI looked at my wife and she smiled, grabbing my hand. \"We have something to tell you, kids,\" Alexa started, \"It's pretty big.\"\n\nI cleared my throat. \"Your mother. My wife. She is also my sister.\"\n\n\"And your father, my husband, is also my brother.\"\n\nSilence. It was rather funny to see the shock on their faces.\n\n\"Fuck off!\" Lewis exclaimed.\n\n\"Really?\" Isla asked.\n\nWe both nodded. \"So, obviously we have no issue with your relationship. We can only urge caution. Firstly, realise that very few people will understand or accept. It's why we're the only family we have. Your great-grandparents accepted us, but they're both now buried back in Australia, as is your great-uncle. However, you must remember that you are the product of an incestuous relationship. First generation, there is a possibility of complications, but we were lucky to have four healthy children. However, each subsequent generation can suffer further problems and complications. Do you understand what I mean?\"\n\nI looked both my children in the eyes as the reality appeared to dawn. \"No kids?\" Isla asked.\n\n\"Your mother and I would advise against it, sweetie. The possibility of complications heightens significantly after each generation.\"\n\nThe twins shared a look. \"I'll be with you no matter what, Lewis.\" Her twin did nothing except lean across and kiss her.\n\n\"Well, I guess that's sorted,\" my sister said.\n\n\"Dad, do you know about Claire and Jack?\" Lewis wondered.\n\n\"No?\" I asked cautiously.\n\n\"I'm not sure if they've slept together or not, but I know Claire has offered to be his first.\"\n\nNow my sister burst into laughter. \"Dear god, I was right. My children do want to fuck each other!\"\n\n\"We'll talk to those two separately. Now that everything is out in the open, would you two like to share a room?\"\n\n\"You're serious?\" Isla asked.\n\nI shrugged. \"You have nothing to hide in front of us. You now know the truth about us as we know about you. Just don't start fucking in front of us. Watching you make love was beautiful and all, but I don't particularly want to watch it again.\"\n\n\"We'll behave, Dad,\" Lewis said. He was a good kid and I believed him.\n\n\"Very well. I'll help you move your stuff this weekend. You can move into Isla's, as her room is bigger. Is that okay, Isla?\" She nodded rather eagerly. \"The only other suggestion is caution. Don't let your relationship be known. It will blow up in your face as most people won't understand.\"\n\n\"We'll be careful, Dad.\"\n\nWe had a similar chat with Claire some time later. She was around three years older than Jack, but we knew Jack had carried a candle for his older sister over a number of years. No doubt the subject of all his masturbation fantasies. She reminded me of her mother, a real beauty, thankful I wasn't interested in father-daughter fantasies. I shudder at the thought.\n\nWhen we broached the subject of Jack, Claire just smiled. \"We had sex months ago,\" she stated, \"It was his birthday present. I would have done it when he was legally allowed, but I didn't think he was ready, so we waited until we were both ready.\"\n\n\"And has it continued?\"\n\nClaire shrugged. \"Not as often as either of us would like, I think. Doesn't help we live far apart, but why do you think I've been coming home so much more lately or he's so eager to visit his older sister? My little brother is quickly becoming a man.\" She smiled warmly. \"And he definitely takes care of my needs.\"\n\nWe gave her the same warnings as we had Lewis and Isla. Claire admitted she wasn't interested in children anyway, while Jack may have still been a little bit young to think about it. \"Do you love him?\" Alexa asked.\n\nThe smile that appeared on my daughter's face spoke volumes. \"Yes,\" she said quietly. It was a one-word reply, but it was all that required to be said.\n\nWe caught up with Jack the next day while Claire was still at home. To say we scared the shit out of him would be an understatement. But once he found out that we didn't care, and that all we wanted them to be was safe, he recovered well. Then he asked, \"What about the twins?\"\n\n\"We know about them, Jack.\"\n\n\"Oh...\"\n\nI raised an eyebrow. \"How long have you two known?\"\n\nClaire looked rather sheepish. \"I walked into their room a while ago while Isla was... um... you know, to Lewis.\"\n\nI looked at Jack. \"Oh, come on, Dad. How have you not heard either of them?\"\n\nOur children eventually moved out of home. Isla and Lewis moved to Inverness first, buying their own little place after finding work, though eventually ended up in Edinburgh as there was far more work in the capital. I was a little unsure about Claire and Jack, despite Claire admitting her love for him, but once he graduated high school, he avoided university, found a job and moved out to join Claire in Aberdeen six months later. He worked on the rigs through his twenties, eventually rising through the ranks.\n\nAs for Alexa and I, now middle-aged and without children in the home, we simply fell in love even more, our lives dedicated to only the other once again. We continued working, planning for our retirement, and I have to say our sex life was as fantastic as it always was. We tried different things, though never invited another person or people in, but anything else that required an open-mind, we would perhaps give it a try.\n\nI walked into the house one evening after work, whistling a tune from the old country, my sister greeting me at the door as usual with a passionate kiss, hands running over my body. Even at middle-age, she still lit my fire without a problem. This man didn't need little pills to help fire his engine. She had that look in her eye, suggesting she wanted her brother to fuck her. I smiled, but told her to wait.\n\n\"I did something naughty.\"\n\nShe raised her eyebrows. \"What have you done?\"\n\nI grabbed her hand and escorted her out to the car, before driving us down to the harbour, where the personal crafts were moored. Asking her to close her eyes, I lifted her up in my arms and carried her down the wharf before eventually placing her feet down on the ground. Holding her around the waist from behind, I placed my head on her shoulder, ensuring she still had her eyes closed.\n\n\"Ready?\" I whispered in her ear. She nodded. \"Okay, open your eyes.\"\n\nShe opened them, hearing her gasp in surprise, before she immediately turned to kiss me. \"Oh, you are definitely getting fucked now, big brother. Is there a bed on board?\"\n\n\"Of course.\"\n\n\"I could ask how much...\"\n\n\"The deposit was worth every penny. We can afford the monthly payments.\"\n\n\"Can you take me on a tour, paying particular attention to the bedroom?\"\n\n\"Definitely.\"\n\nWe stepped on board our new yacht and were in the bedroom seconds later, clothes disappearing, as we made love for the millionth time. Every time was spectacular. I would never tire of my sister. And, of course, there was only one name the vessel was worthy of carrying. Though, this time, I wasn't naming it after someone I loved but missed terribly. Now it was named after someone I saw every day and loved more than life itself. She was my wife and the mother to my children. She was my best friend and my sister. She would be the only woman I loved until the day I died.\n\nThe 'Alexa'.\n\n*****\n\nA/N -- So for anyone who might remember when I originally uploaded this a couple of years back, I did make a significant edit to how their first night went. Melanie is still the sympathetic figure in it all, which was my intention originally and with this 'new' version, but the phone call Chris made to her wasn't in the original. I figured him at least making that call to end it before being with Alexa would be better than the original, when he was a bit of a bastard, putting it frankly. Then again, while I try to write genuinely good characters, I also want them to be human, mistakes, warts and all.\n\nOther than that, I just try to write a good story. Not perfect, happy that just one person likes whatever I write. But for anyone that did read this, hope you liked it.\n\nI have a few more stories that I'm editing and will upload them over the next few weeks."
    ],
    "authorname": "UltimateSin",
    "tags": [
        "brother",
        "sister",
        "romance",
        "incest novella",
        "drama"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/trawling-atlantis-1"
}