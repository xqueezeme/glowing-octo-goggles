{
    "title": "Unbelievable Pt. 09",
    "pages": [
        "Thanks to WAA01 and Killerarmyguy for the edits.\n\nThere's no sex in this if that's what you're after I suggest looking elsewhere.\n\n*******\n\nThe pocket sliding doors of the den sounded in a thump as John closed them. Turning around, seeing how it was only Ruth and her sister in the room. Noting how the woman beside Ruth, whose body language screamed out 'Don't touch!', had hidden herself in oversized clothing.\n\n\"Give us the room,\" Johnny said, looking over at Ruth. He knew she would never understand what her sister went through. Even if she was drugged at the time. It was still a violation.\n\n\"You sure?\" Ruth asked; her amber eyes glanced to him, then back to her younger sister.\n\n\"I'm sure,\" Johnny nodded. \"You wouldn't understand.\"\n\n\"But you can?\" the woman asked, peering intently at John.\n\n\"More than you know,\" Johnny said ominously.\n\n\"Listen to him, Yasmine,\" Ruth uttered in a plea as she placed a hand on her sister's forearm.\n\n\"Why? What could he know?!\" Yasmine shouted.\n\n\"Because I was raped for two years to your one time,\" Johnny said darkly, narrowing his eyes at the woman. \"So I know a lot more about being violated than you do. So don't assume, at all, that you think you know more about rape than I do.\"\n\n\"Johnny, I think I should stay, just in case you need me to calm you down,\" Ruth said, seeing that look in his eyes. The same look she had seen at the lake.\n\n\"Suit yourself,\" Johnny shrugged. \"I'm gonna sit here,\" pointing to the love seat across from Yasmine, \"so you don't feel threatened.\"\n\n\"I don't?!\" Yasmine said, getting defensive.\n\n\"You do; your body language says so,\" Johnny said, lowering himself onto the seat.\n\n\"Why should I listen to anything you have to say?!\"\n\n\"Sis, I asked Johnny here for a reason; he doesn't like talking about what those men did to him. This is a big step for him, do not fuck this up,\" Ruth warned in that older sisterly voice.\n\n\"Didn't you tell me he was just a crazy...\"\n\n\"I think we're done here. If I want to be insulted, there are better places for that,\" Johnny said, getting up from his seat.\n\n\"Johnny, wait?!\" Ruth said, surging from her seat. \"Please, don't go; Yasmine is just being difficult. You know how it is. You, yourself, were like this. Just please talk to her, help her see there are places that can help her.\"\n\n\"Does she want to be helped?\" Johnny asked with a pointed look. \"It seems to me she doesn't. Seems like all she wants to do is be angry all the time. Understandable, I was too, still am,\" he admitted.\n\n\"Then tell her why you aren't the same boy I met when you were sixteen,\" Ruth said with pleading eyes.\n\n\"If I do that, I'd have to start from the beginning, and I don't think she can handle it,\" Johnny said, pointing at Yasmine.\n\n\"Try me, crazy boy,\" Yasmine sneered. Jumping in her seat when Ruth struck her upside the back of her head.\n\n\"You do not call Johnny that?!\" Ruth growled, coming to John's defense.\n\n\"Y-you hit me,\" Yasmine stammered in shock.\n\n\"Damn right I did! I'll do it again if those words come out of your mouth,\" Ruth said bitterly. \"Please, Johnny, retake your seat, and let's try this again,\" she said, looking over at him.\n\n\"You know this is so weird coming from you,\" Johnny said in a matter-of-fact manner.\n\n\"I know,\" her voice held the shame of her past actions, \"yet I am getting better, am I not?\" Ruth asked once John retook his seat.\n\n\"I'll give you that,\" Johnny agreed.\n\n\"Fine, I'll play along,\" Yasmine grumbled, thinking John had no idea what being raped felt like. \"So, when did it happen?\" Seeing her sister glare at her at the tone she had taken.\n\n\"The first day I was in Raven Dale and every day after that for two years,\" Johnny said coldly. \"It's why I don't go by my given name. You might not remember what happened to you. I do not have that luxury. Every night, every day, every fucking second of my life. I hear his voice in my head. Smell his foul breath. The feel of his hands. The...\" Stopping himself as his fist curled around his shorts. Feeling his anger bubbling to the surface. The urge to stick a fountain tip pin into the man's neck like Julia had done to her own rapist. \"You were only raped once. I'm not saying this to disparage your ordeal. I'd never do that. But you have no idea what it's like to listen every night to the screams that haunt me. To the pleas, to the beatings, to every single fucked up thing those people did to us. For two fucking years! So you sit there playing the victim when there are far more people in this world that have and had it worse than you. You lash out at people that want to help you,\" Johnny said, gesturing to Ruth. \"I get it,\" he spoke before Yasmine could utter a word. \"Took me a long time to open up about it. Do you have any idea what it's like having grown men violate you over and over and over while you're chained to the ceiling in one night do you? No, you don't, and I pray you never do. So don't sit there and say I do not know what it's like to be raped. Have a train run on you for six hours, then get back to me, and we'll compare notes.\"\n\nRuth sat there in shock and wide-eyed. She never heard this from him before. She could even see her own sister shocked and revolted by what John was telling them.\n\n\"Yasmine!\" Ruth called out as her sister raced from the room after John had been detailing the events of life in Raven Dale for the past thirty minutes.\n\n\"Ruth? Is everything alright?\" Bill asked, stepping into the den, seeing how green in the gills Ruth was at the moment.\n\n\"I don't think she could handle the truth,\" Johnny said, peering over at his older brother.\n\n\"What truth?\" Bill asked, confused.\n\n\"Everything,\" Johnny said vaguely.\n\n\"Define...\" Turning around when he heard someone approaching.\n\n\"Hello, Bill,\" Yasmine said, still feeling queasy after hurling the contents of her stomach into the toilet bowl.\n\n\"Hello, Yasmine,\" Bill greeted, looking back at Ruth when that was the most polite greeting she's given him in the past year. Wondering just what was being discussed in his family's den.\n\n\"Give us the room, would ya? I'm not done yet,\" Johnny said, looking up at Bill.\n\n\"There's more?!\" Yasmine and Ruth exclaimed in unison.\n\n\"All you've heard was what happened in the first month. I still have a year and eleven months to detail,\" Johnny said truthfully.\n\n\"The first month?!\" Ruth muttered slack-jawed. \"No wonder he was so angry! Hell, if it were me, I'd be a raving basket case?!\" she spoke in her mind.\n\n\"Please, I believe you,\" Yasmine stammered, sitting down next to John on the loveseat. \"I don't know if I can handle more,\" she said in defeat.\n\n\"I guess you can stay then,\" Johnny said, turning his attention back to Bill. \"That is if Yasmine wants an audience for this.\"\n\n\"Bill knows. I'm okay with Bill.\"\n\n\"Get the door,\" Johnny said when Bill started to walk towards the couch that Ruth was sitting on. \"Not everyone needs to hear this,\" he stated when his brother gave him a look.\n\n\"Okay, so what are we discussing?\" Bill asked, taking a seat beside Ruth. Looking over at her as he felt her trembling at her light touch.\n\n\"Shh! We aren't, we're just observing,\" Ruth whispered when John turned his sole attention to her sister.\n\n\"Where was I,\" Johnny muttered, \"ah, yes, that little fucking room,\" he seethed with hate. \"Every night, I would wish that chain would snap so I could strangle the man with it?! How I just wanted to shove all those bastards into that room, slit their throats and drown in their blood. At least then Julia would still be alive, even if I wasn't. Yet... that isn't the case; no, that can never be the case. I must endure. I owe her that much even if I have to listen to her screams in my dreams every night.\" A single tear rolled down John's left cheek. Ignoring how Ruth kept Bill rooted when he started to get up. \"Yet... that isn't the worse of it...\"\n\n\"It's not?!\" Yasmine muttered in shock. What she had heard so far was far, far worse than her one time. Sure, yes, she was violated, taken against her will. However, she was drugged and couldn't remember a thing. Not like what John was telling her of his experience.\n\n\"No. It's not. When they had their fun or one of the more sadistic ones was on shift at the time, they would join in. Not in the rape. They got off on my pain and fear as they would whip me with a metal coat hanger or a belt with metal studs on it while one of their pals was raping me repeatedly.\" Seeing Yasmine look at the other two, who nodded that they had seen the scars. Only to cause Yasmine to feel her stomach heaving once again as she bolted out of the room at the revulsion of how sick some people are that could do that to a thirteen-year-old boy.\n\n<p align=\"center\">******</p>\n\n\"Can I hug you?\" Yasmine asked, after an hour and a half of speaking of things that no one should speak of, yet the world is a cruel place, filled with equally cruel people. John Masters learned that the hard way.\n\n\"Normally, I'd say no, but okay,\" Johnny said, seeing the woman's understanding in her eyes.\n\n\"Sorry, I was a bitch earlier to you. You're right; I wouldn't understand what you went through,\" Yasmine whispered into his ear.\n\n\"We each have our own terrors that torment us,\" Johnny said, patting her back. \"Ours just happens to be people that are alive but are better off buried somewhere no one will find them.\"\n\n\"I can totally get behind that,\" Yasmine nodded vehemently. \"Would you mind if I came with you, Wednesday, just to see if finding one at home would be worth it?\"\n\n\"Sure, it was hard for me too, but someone pushed me into it. Oddly, it did help some, I might never get over it, but I can stand to be touched a little bit more now,\" Johnny spoke, looking over at Janus, who had a rather bashful expression on her face when he did.\n\n\"Thank you, Johnny; I know this was tough for you,\" Ruth said, stepping up to his side. \"I think this has helped Yasmine out a lot, knowing there are people who've gone through the same thing more or less.\" Seeing him nod as she said those words.\n\n\"Johnny?\" Seeing the light playing along his black hair as he turned his gaze towards his mother. \"It's time for your nighttime meds,\" Katherine uttered, standing before the doorway to the kitchen.\n\n\"I hope you sleep okay tonight,\" Yasmine said kindly.\n\n\"I will,\" Johnny answered as he walked towards his mother, who stretched her arm out to him.\n\n\"You okay, honey?\" Katherine asked, noting the look in her son's eyes. Wondering what they had talked about in that room. Looking over at Bill, who was pale as a ghost and tight-lipped. Pondering on what could have been so horrific that would make him appear in such a manner.\n\n\"Bill, will you escort me back to my motel room?\" Yasmine asked, looking over at her future brother-in-law.\n\n\"Of course,\" Bill replied with a stern nod. After what he had just heard, he wasn't going to let either of them out of his sight when they were around him. While he may never understand fully what had happened to his brother and Yasmine, seeing how he has never been raped before, he could at least make sure, as John's eldest brother, that nothing like that ever happened to his little brother again. Watching his mother's hair sway along her back as she led John into the kitchen. Following Ruth out the door, praying that he could find some way to help his brother. He owed it to John, or at least, that's what he thought.\n\n\"Johnny, is everything okay?\" Janus asked, stepping into the kitchen, feeling Annie at her back.\n\n\"No, I'll never be okay; those people are still alive,\" Johnny said darkly as his mother laid his pill tray before him.\n\n\"Johnny, you can't mean that, can you?\" Katherine asked in a concerned voice.\n\n\"If I had my way, they'd be buried neck-deep with honey poured over their heads and bullet ants unleashed upon them,\" Johnny spat in fury. \"Then dug out and strung up and quartered like they were in the middle ages.\" Ignoring the horrified looks on their faces when he said those words. Spilling his nightly pills into the palm of his hand.\n\n\"John...\"\n\n\"Not now, don't want to talk about it,\" Johnny mumbled before popping the pills into his mouth and taking a big swig of water, washing it all down. \"Sorry,\" he spoke in a more softer tone, seeing his mother's blue eyes quivering. \"It's just not something you can understand, Mom. The only one who can is in the room with us. I'm sure she feels the same way as I do towards her own attacker.\"\n\n\"You?!\" Katherine turned her gaze towards Janus, who reluctantly nodded.\n\n\"Sorry, Janus, didn't mean to out you,\" Johnny said in an apologetic voice.\n\n\"It's okay, Johnny, you were only trying to make her understand that she couldn't understand what it really is like. No offense, Katherine,\" Janus said, casting John's mother a look of forgiveness if her words were hurtful.\n\n\"No, you're right. I can't understand what that was like; I'm sure it was as traumatic to you as it was to Johnny. But, Johnny, I would like to understand. If you'd let me,\" Katherine said sweetly, placing her hand lightly on John's upper right arm. Seeing that questioning look in his eyes when he glanced at her. \"I just want to understand your pain, honey, that's all, and maybe try to help you overcome it.\"\n\n\"You saw Bill; if he couldn't handle the truth of what happened, do you think you can?\" Johnny asked with a pointed look.\n\n\"I can't say, Johnny...\" Catching her son as he fell forward, causing the glass he had been using to skitter across the surface of the island before falling off the ledge. Shattering as it struck the floor in a loud, crisp pop.\n\nHis mother's, Janus', Annie's voices were distant in his ears. His head throbbed like mad. White flashes of light strobed before his eyes. A numb feeling flooded his body as he collapsed onto the island counter. His green eyes were open, yet they saw nothing. Not the dripping of the single drop of water from the faucet. Not the twinkling of the stars one could see from the small window above the sink, nor could he see the frantic worry on his mother's face as her image played upon the surface of them. No. For you see, John's damaged mind had flung him into his past, a past he could no longer remember thanks to Dr. Mott if one could call the man a doctor. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\nA loud, happy bark filled his mind as that forgotten memory flared to life. His little legs ran through the house at the sound of it with Anastasia (Annie's given name), hot on his heels as they raced down the stairs. They both skidded to a stop as they watched with wide, shocked, and happy, joyful eyes as Buster -- then a three-month-old puppy -- eagerly licked Brandan's face as he held that little ball of fur in his arms. Bill and Ray soon joined them; given how they were in the early stages of their teenage aloofness; they took their time in coming down.\n\n\"Boys, Annie, I want you to meet Buster,\" Katherine said with a wide smile on her lips at their children's happy faces as they peered up at them.\n\n\"Now we've talked about this, your mother and I think you all are ready for the responsibility of caring for a dog. So it will be your responsibility to see that he has plenty of food, water, and lots of walks out back; he has to be on a leash if you take him out front. We don't want him running away, now do we?\" Brandan asked, peering down at his children as Buster never failed to keep that tongue licking away.\n\n\"Is he really ours, Dad?\" John's eight-year-old voice filled his mind.\n\n\"He is John. Do you think you can help your brothers and sister in taking care of him?\" Brandan asked, giving his son that fatherly stare.\n\n\"Mmmhmm!\" John hummed loudly as he nodded his head vigorously.\n\n\"Set him down, honey, let the kids get to know Buster,\" Katherine said, placing a hand on her husband's left arm.\n\nAnother stabbing pain flared, taking his brain further as his mind pushed the memory forward in time. John was running around in the back with then a six-month-old Buster hot on his heels. Laughing without a care in the world. Only to be diverted as Anastasia ran past him, and the chase began anew. Her then ear-length raven hair flowed through the air as she giggled like mad as Buster playful nipped at her heels.\n\n\"Ow!\" Annie hissed as she tripped over her own left foot and skinned her left knee.\n\n\"Anastasia?!\" John hurried to his sister's side. \"Are you alright?\" he asked in a concerned brotherly voice. Seeing his sister shaking her head, trying not to cry. \"Come on, let's go see Mom. She'll know what to do.\" Helping his sniffling sister up off the ground. Calling Buster to him as they neared the house. Hearing the jiggling of the nametag he had made in one of those vending machines at the local hardware store near his grandparents' home with his own allowance. \"Mama?!\" John's voice called out as Buster raced to his dog bed to rest after being worn out.\n\n\"What is it, John?\" Katherine called back from upstairs.\n\n\"Anastasia is hurt; she's bleeding!\" He heard the pounding of his mother's feet racing towards them.\n\n\"Don't scare me like that, John?!\" A sigh of relief escaped her lips at the sight of her daughter's skinned knee. \"You almost gave me a heart attack!\" Katherine teased, giving John's nose a little wiggle. \"Take your sister to the kitchen; I'll get the hydrogen peroxide, cotton balls, and a Band-Aid.\"\n\n\"'Kay!\" John chirped, seeing his mother in her old, tattered clothes with her hair held back by a bandana which he knew she only wore when she was cleaning the house. Shouldering his sister's weight as she limped towards the kitchen. \"Does it hurt?\"\n\n\"Mmmhmm.\" Annie nodded as she lowered herself into the chair. Not seeing the shock in her eyes when John bent down and placed a kiss on top of her knee.\n\n\"John, what are you doing?\" Katherine asked from the kitchen doorway.\n\n\"What you always do for me when I have an owie. Kiss it and make it better,\" turning his head to peer at his mother, \"Did I do it wrong? Does it not feel better?\" John asked, looking at his sister, not understanding why Anastasia's cheeks were so red when he did.\n\n\"You silly goose!\" Katherine chuckled lightly, shaking her head. \"Only mothers have that power.\" Posing herself like a superhero.\n\n\"I'm sorry, Anastasia, I tried,\" John said in a sad tone. Feeling the corners of his lips lifting as he felt the kiss on top of his head.\n\n\"That's what matters, my Li'l John is that you tried to make your sister feel better,\" Katherine said in a sweet, motherly voice.\n\nHolding out his hand to his sister when he asked if she wanted to squeeze it when their mother applied the hydrogen peroxide to the wound on her knee. Seeing his sister nodding before her hand wrapped around his. Remembering the smile on his mother's lips as she worked to clean the wound and he stood there stalwartly like the Li'l John in the Robin Hood tale did when he first faced off against the man.\n\n\"See, that wasn't so bad, was it?\" Katherine asked, a little proud that her daughter didn't cry out once during it. \"Now you two go watch some cartoons while I finish cleaning,\" she directed, shooing her children off. She was taken aback when John abruptly hugged her as Anastasia left the room. Rocking her son gently, her hand lightly brushed along the back of his head as she held him close. \"What was that for?\"\n\n\"For being the best Mom in the world,\" John said with a wide toothy grin.\n\n<p align=\"center\">******</p>\n\nHeart rate monitors beeped in his ears. The sounds of the intercom played overhead. The irritating squeaks of sneakers on a newly waxed floor plucked at the cobwebs of his mind. His legs moved beneath the light blanket that covered him. The sound of the plastic mattress of the hospital bed echoed in the room.",
        "\"Johnny?!\"\n\n\"Mama?\" John muttered. His eyes slowly opened as he felt a hand stroking his hair.\n\n\"Yes, baby, I'm here, so is everyone,\" Katherine said, staring into her son's eyes. Seeing how the printout of the EEG was rolling out. Looking down when John placed his hand over her heart.\n\n\"Best Mom in the world,\" Johnny muttered. His hand fell away as he slipped back into his slumber.\n\nHer hand shot to her mouth. Hiding her trembling lip at what her son just said to her. A phrase he hasn't spoken in five long years. Something that she was afraid she would never hear again. \"Oh, my Li'l John, my sweet, sweet boy,\" Katherine whispered as she caressed her son's face. Peering over her right shoulder as Brandan placed a steadying hand on it.\n\n\"He's going to be out of it for a while. Let Janus and Annie stay with him; we both need rest.\" Brandan said as much as it hurt him to say it, he knew they were the most likely ones he would want to see the first thing he woke up.\n\n\"Then you go, I'm not leaving my baby, not ever again,\" Katherine said, shedding a tear as she turned her gaze back to her son.\n\n\"Then we'll take shifts; there's a free bed, me and Annie can sleep on it while Katherine keeps watch and switch off every two hours. That should give us all four hours of sleep,\" Janus said, getting to her feet, eyeing the free bed next to John's.\n\n\"Then you call us the first thing in the morning if he wakes up,\" Ruth said, coming to her side. She and Bill had franticly raced to the hospital when Ray had called them. Hearing Katherine crying over the line as he drove them towards the hospital. Telling them, John had another seizure, and he was unresponsive. \"I don't have a class in the morning, so I can come and take over.\"\n\nNonetheless, while the Masters family and future family members were hashing out the details so that one of them was always with John. His mind had sent him back to the worst day of his life. The day that Buster died.\n\nRecounting how his sister had pulled him behind the Mulberry tree. Planting the very first kiss he ever received upon his lips. Shock was evident on his young teenage face. Yet the silence in the air was deafening. That was when the loud cry of an animal tore at his mind. His head was turning so fast, franticly searching for Buster.\n\nIn the outside world, all grew still as John thrashed about in his sleep. Watching how his head turned to and fro in quick succession. How his hands tore at and bunched up the blanket as if something horrible was happening in his mind. Which it was, for at that moment, in his fractured memory, his screams of 'No, no, no!' Tormented him as the sight of Buster's bloody, broken body laid there unmoving.\n\n\"Buster!\" John's voice cried out in his mind as Bill and Ray had to hold him back. \"You can't be dead! You can't!\" he screamed out. Trying to will his best friend back to life. Then something cold, something dark, something alien inside of his mind that had been lurking, waiting patiently for the right time to show itself, for the right factors to fall into place to make itself known. \"You! You killed him! Why?! He never did anything to you!\" In that state, as he clawed at the air to get to his mother, who stood there in shock and horror at the twistedness that lurked inside of his mind finally showed itself to the world, marred his face. He could feel his brothers' strength waning to hold him back. That twistedness grew in elation, knowing soon it would right a wrong. That the scales would be restored.\n\n\"John, I'm sorry, Buster came out of nowhere, it was an accident?! I swear I tried to stop, but it was too late.\" Katherine's apologetic voice filled his mind. Yet, to the thing he had become, it didn't matter. All that mattered was his friend was dead and lying at her feet.\n\n\"John, calm down,\" Ray grunted from behind him. \"Bill, grab his legs.\"\n\n\"Let me go! She killed Buster! Don't you care!\" John squirmed as they lifted him into the air.\n\n\"You stay here until you can calm down,\" Bill stated after they had deposited John onto his bed.\n\n\"You were never Buster's friends, were you?!\" His voice took a very hard tone to it as he was fully immersed in his schizoaffective episode. His delusions that were clouding his mind were making him see his brothers as the enemy when in truth, they were just as torn up about Buster's death and John's sudden change of behavior.\n\n\"John, you don't know what you're saying,\" Bill said, waving off his statement.\n\n\"Maybe I should have chosen you. Yes. Yes. That sounds good. Buster will come back. He will; I know it. Wouldn't you like that, Bill? Wouldn't you like to help bring Buster back? I know I would.\" A maddening look was etched on John's face as he turned his gaze towards them. \"Why don't you come close? No need to be shy. Just let me wrap my hands around your neck. It will all be better soon. I promise,\" John said in a deathly tone. Seeing Bill not as he was but the monster his delusion had made of his brother. John's insane laughter followed them out as they darted quickly out of his room.\n\nForty-five minutes had passed as John sat cross-legged on his bed waiting. Eagerly waiting for the monsters to return. All so he could return his beloved friend back to him. His insane mind whispered to him. Telling him that if he did, Buster would be good as new. John had no reason to doubt the voice. It sounded like a brilliant plan to him. He had to take a life to restore a life. It sounded quite logical to him. Even the voice thought so. So there he waited with two very, very sharp pencils resting on either side of him. Tilting his head, a wicked smile formed on his lips when he heard steps approaching as the heavy rain clouds unleashed their torrent onto the earth. A cruel, vile grin spread across his lips as his fingers wrapped around the pencils. His feet compressed his mattress as he squatted on it, waiting for the moment to spring into action. \"Soon,\" he told himself, \"soon Buster will be back. He's going to be so happy to see me!\"\n\n\"John! What in the hell are you doing?!\" Brandan roared as he barely caught his son's arms when his son leapt at him unexpectedly.\n\n\"Don't you see! They're monsters! Monsters have to die! Why are you stopping me?!\" John bemoaned, struggling to free himself from his father's grasp.\n\n\"Hurry, Bill, he's like a bucking bronco,\" Brandan grunted, wondering where this strength was coming from. He saw the wildness of his son's eyes. It wasn't his son looking back at him. He knew that in an instant. \"John, calm down. They aren't monsters; they're your brothers,\" he said, trying to instill reason into his son.\n\n\"Brothers?!\" For a moment, that did register in John's brain, yet only for a moment. Nonetheless, that moment was all Brandan needed to pin John's arms to his side. Keeping those sharp objects in his hand from harming them or himself. \"So... you're one of them, masquerading as my father. You wanted Buster dead too, didn't you?\" John's voice was cold and alien as he stared hatefully at the thing that he couldn't overpower. At that moment, in his mind, he didn't see his father but a globous blob that had him ensnared. Knowing something had to be done. He had to find where these monsters had hidden his family and free them if he could. First, he had to find a way to deal with the foes before him. Yet, he needed help. He was just a little kid.\n\n\"John, what are you talking about? No one wanted Buster dead, no one. Don't you remember when we brought Buster home? Don't you remember how he wouldn't stop licking my face? If I was a monster, would Buster do that?\" Brandan asked, trying to reach his son. He had no clue what was happening to John, yet he knew they weren't equipped to handle it. Watching how John looked to the left and to his right as if he was talking to someone.\n\n\"If you're not a monster, what's Buster's favorite toy after he has a bath?\" John said, trying to throw the thing that believed he was his father off.\n\n\"That's a trick question since Buster rolls around on that old blanket to get himself dirty again.\"\n\n\"He knows,\" looking to his right, \"what am I to do?\" John asked the imaginary image to his left.\n\n\"I'm done,\" Bill stated\n\n\"Go! Tell your mother to call 911!\" Brandan ordered. His muscles strained as that insane strength that surged through his son tried to lunged at Bill as he left the room. \"You want to see Buster, right?\" He knew this was wrong, so wrong, to lie to his own son. Yet he feared if he let go of John's arms, it would be him that would be stabbed with those pencils. \"You know it was a joke, right? Your mother just took it a little too far. Buster's just fine. But you have to wait here so I can get him, alright?\" Seeing that insane light in his son's eyes just brightening, thinking that Buster was indeed still alive and not buried in the backyard.\n\n\"It wasn't a very funny joke,\" John said darkly.\n\n\"I know; I thought so too. But he's alright,\" praying that his son could forgive him for this, \"just let me go get him, okay, you stay right here.\"\n\n\"Okay,\" John nodded. Dropping the pencils, thinking Buster wouldn't want to see him with such things in his hands. However, the moment the door closed behind his father, so did the lock on his door, which had been reversed to keep him contained in his room. The moment he saw the door handle, John rushed to the door. His body bouncing off of it as it held true. \"Deceiver! Monster! Murderer!\" John screamed out, his fist pounding the door as he did until he was red in the face.\n\n\"See?! Only monsters deceive. They can't be trusted,\" the voice whispered in his delusional mind as John paced his room. Lightning crackled overhead, shaking the house; its blue-white light filled his room. Turning his head towards the window when his new friend, someone, that to his mind was being truthful to him, or at least that's what his mind thought of at the time. \"Go. Buster is waiting.\"\n\n\"Huh?\"\n\n\"He isn't dead. He's alive; they wanted to kill him. Hurry?!\" John saw a dark figure standing at the edge of the grave site of where Buster was put to rest. Hurriedly taking off his shoes and socks. He didn't want them to hear that their prison couldn't keep him contained. He was going to save his friend! It didn't matter if it was pouring down rain, lightning striking a mile away. No. None of that mattered to John. All that mattered was saving Buster. His body became instantly soaked as he eased down his bedroom window when he stood on the porch's roof.\n\n\"I'm coming, Buster,\" John muttered in determination. Barely registering the fall after he had let go of the overhang of the roof. Ignoring the pain when he fell backward onto his ass. Causing the water that stood on the lawn to splash out from around him. Slowly inching out of the light that played through the window as those that appeared to be his parents, yet to his mind were actually monsters, were discussing something, what that was he couldn't say; nor did he care to know. Once he knew they didn't see him. Didn't realize that he had escaped their clutches. John raced to Buster's grave.\n\nWater poured down his face. Globs of mud clung to his hands as he hurriedly dug with his hands to free Buster. Always muttering, 'I'm here, I'm here. Don't worry. I won't leave you.' An insane smile formed on his lips once he had uncovered Buster. To his mind, Buster was panting for air, not the lifeless body before him. \"There you are,\" John said in a loving voice as he brushed his hand along Buster's head.\n\nHe didn't know how long he sat there on the back of his legs, holding Buster's dead body to him. It took all five of them to pry Buster's dead, wet, bloody body from his arms as he thrashed wildly in his brothers' arms once they had separated the two of them...\n\nJohn bolted to a sitting position in his hospital bed. Pulling off the electrodes on his forehead as he did. A maddening look appeared in his eyes as he stared down at his hands. Not seeing them clean but covered in blood. Buster's and Julia's. The blood of his two only friends in the world. Blood that will never come off. Not seeing how Annie held Janus back when she knew he wasn't in his right mind.\n\n\"Johnny,\" Bill took a step forward while Brandan and Ray kept Wanda and Ruth out of arms reach. \"Johnny, do you know where you are?\" he asked, being the only one that's had any professional experience, albeit in a classroom setting, it was still more than anyone else had; and he was determined to reach his brother. Wherever he was in his mind at the time. Taking a dry swallow as his brother turned his gaze towards him. He could tell that John was on the verge of an episode. \"Mom, get a nurse, lots of them,\" Bill warned.\n\n\"Is the monster afraid of Li'l John? Come closer,\" a very creepy smile formed on his lips as his former persona surfaced, \"come on, I'm just a little boy, surely you can't be afraid of me?!\"\n\n\"Johnny, honey, you're not yourself; come back to me,\" Janus pleaded from the foot of his bed. Seeing the blank look on his face when he peered at her. \"Remember, Johnny, you aren't that little anymore. You aren't in that place. You're safe here with us. We aren't the monsters you're seeing.\" Praying that her voice was reaching him. Praying that he wouldn't be thrown back into a ward. She knew if that happened, she would lose John forever.\n\n\"I... what... you're confusing me!\" Johnny grumbled. He wasn't about to be deceived, not again!\n\n\"John, can you hear me, my Lil John?\" Katherine's voice was sweet and soft once she had returned. Buying the nurses time to get the restraints in case John became violent.\n\n\"Mama?\" John's voice changed its cadence as he turned his gaze towards her.\n\n\"Yes, baby, I'm right here,\" Katherine said, slowly approaching his bedside. \"You had another seizure. You're in the hospital.\"\n\n\"I am?\" Johnny muttered, confused.\n\n\"Yes, honey,\" Katherine nodded. \"Your mind is playing tricks on you. No one here is a monster, not even you. You're just special. But you need help right now. These people are going to help you, so you don't hurt yourself or anyone else,\" she said, gesturing to the nurses as they poured into the room. \"Will you be my good Li'l John for me?\"\n\n\"Please, Johnny, it's just for right now,\" Annie pleaded as she held Janus against her. \"Can you cooperate with them for us?\"\n\n\"Anastasia?\" John muttered, blinking his eyes a few times, causing the delusion to dispel from his sight.\n\n\"Yes, Johnny, it's me. We've been here the whole time,\" Annie said. Her heart fluttered when he used her given name.\n\n\"You've grown,\" Johnny said, still in the mindset of five years ago.\n\n\"As did you,\" Annie retorted with a smile. Keeping his attention on her as the doctor injected John with a sedative. \"Be a good little brother and let them help you.\"\n\n\"Help me how?!\" Johnny growled, struggling the best that he could with the nurses, yet there wasn't much he could do in his weakened state.\n\n\"So you can rest and sleep this episode off.\"\n\n\"Johnny, please, don't fight them, can you do that for me? I don't want them taking you away from us,\" Janus said, placing her hand over their baby that was growing healthy in her womb.\n\n\"Right. No fighting,\" Johnny muttered as her words finally breached his confused mind. His green eyes ran up and down Janus' body as the memories, he had acquired after his return home flooded his mind. \"You shouldn't see me like this,\" he uttered low as he watched the nursed shackling him to the bed rails.\n\n\"I take you any day of the week with the good and the bad,\" Janus said firmly, resting her hand on John's right shin.\n\n\"Johnny, do you know where you are?\" Bill asked once again.\n\n\"Oregon.\" Johnny retorted in a smartass tone.\n\n\"I meant specifically where you are at the moment.\"\n\n\"Oregon, in a hospital, better?\" Johnny replied combatively.\n\n\"Can I ask what brought your episode out?\" Bill asked, noting how all the others were listening intently as John tugged on the restraints.\n\n\"A memory.\"\n\n\"You remembered something?!\" Katherine and Brandan asked in unison. \"Can you tell us what memory it was?\" Shaking his head, John wasn't ready to talk about it.\n\n\"It was when Buster died, wasn't it?\" Bill asked, remembering the only time he called them monsters was on that day. He didn't realize it then, moreover, understood what was happening to John at that moment. Now. Now, he did, and he knew that was the first time John experienced his very first episode. \"I'm sorry, Johnny, I know how much he meant to you,\" he said, laying a hand on his brother's leg when John nodded. Yet John's eyes weren't on him but on Annie.\n\n\"What?!\" Annie asked, blushing underneath his gaze.\n\n\"I remember,\" Johnny said, laying back on the bed as he felt the drug starting to kick in.\n\n\"You remember what, Johnny?\" Annie asked, curious as was everyone else in the room when he said those words.\n\n\"How you got that scar on your left knee,\" Johnny stated in a matter-of-fact manner. Turning his head when his mother's hand flew to her mouth.\n\n\"Johnny, what exactly do you remember?\" Annie asked, stepping towards the foot of his bed\n\n\"Buster, you, me, out in the backyard, playing. You fell. I went to check on you. Mom came running down the steps...\" Giving his mother a quick glance, comparing her past self to her present one. \"She said: I almost gave her a heart attack.\" Seeing Bill propping up their mother as Katherine's knees gave out. Her eyes were quivering. Filled with emotions too numerous to name as John continued on.\n\n\"What happened next, Johnny?\" Annie urged him on. She had to know if it was a real memory or something his mind was falsifying. So far, it had held true.\n\n\"I took you to the kitchen. I kissed your knee. But I don't think it worked. You were still hurting,\" Johnny said truthfully.\n\nEveryone looked to Annie and Katherine, wondering if what he had said was true or not. John could see the hope in their eyes.\n\n\"Oh, Johnny, you do remember,\" Annie said with tears in her blue-green eyes. \"I'm so happy that you do.\"\n\n\"But to do so, I become this,\" Johnny said, rattling the shackles against the railings. \"But it's for the best. Best that you aren't hurt because of me,\" he spoke, his eyes squarely on Janus. That was the last thing he ever wanted to do, was hurt her or their baby. \"Sorry, I thought you were monsters,\" Johnny uttered, turning his gaze to his family. \"I know who the real monsters are now.\"\n\n\"Johnny, son, I know that day was hard, especially what came after it. I know we didn't handle it as well as we should have, yet we didn't...\"\n\n\"I know; you think I understand myself?\" Johnny asked, cutting his father off. \"I might resent you for what you did; I don't blame you for trying to help. Even if that help put me through a Hell you can't even imagine,\" he said darkly. \"I'm going to sleep now,\" yawning loudly, \"Mom?\" Johnny mumbled as he closed his eyes.\n\n\"Yes, baby, what is it?\" Katherine asked with a trembling voice.\n\n\"Take Janus home, will you?\"\n\n\"Johnny?!\" Janus said, not eager to be separated from him at this critical time.\n\n\"It's not good for the baby, her worrying about me. Will you do that for me?\" Johnny inquired, opening his eyes a fraction of an inch.\n\n\"Of course, Johnny, but don't you want her to stay with you?\" Katherine asked, casting Janus a glance.\n\n\"I do; however, her sleeping here will put too much stress on her. She needs to be comfortable,\" Johnny said, remembering what he read in Janus' pregnancy book. \"Plus, she takes care of me; I have to take care of her, too.\" Not seeing how red Janus' face lit up when he said that. \"One more thing.\" The room grew silent as they all waited for him to continue.",
        "\"Johnny?\" Katherine called sweetly to him, thinking he had fallen asleep. Which was true when he smacked his lips as her voice roused him.\n\n\"You, only you, can call me Li'l John,\" Johnny muttered before falling under the drug's influence.\n\nBill held his mother close as she broke down in tears. Not tears of sadness, but of joy, joy that finally, after all this time, she could utter that name again. A name that she had given him as she held him in her arms for the very first time after he was born. A name that held so many wonderful memories of the boy that Raven Dale had taken away from her. A name of a son that she has hoped and prayed still lived inside of the man that walked out of that nightmare.\n\n\"I'm going to be here the first thing in the morning, and you won't be sending me away,\" Janus whispered as she leaned over the left side of his bed. Planting a kiss upon his lips, which even in his sleep got a smile out of him.\n\n\"Come on, honey, let's get you home,\" Brandan uttered low in a caring voice. Lightly rubbing his hand along Katherine's left arm as he hugged her close. Noting how she hadn't let go of their son's hand when he told her she could resume calling him that name.\n\n\"My Li'l John, my sweet baby, we'll be back. You sleep tight. I'll see you at lunch tomorrow,\" Katherine said, sniffling slightly as she spoke those words. \"He's coming back to us.\" Her voice was muffled as she buried her face in her husband's chest.\n\n\"I hope so; you're not the only one that misses our little boy,\" Brandan whispered into his wife's hair.\n\n\"I know you do,\" Katherine peered up, knowing while yes, she was so overjoyed that she got another glimpse of her son, the son that was taken from them. She knew it was a fleeting thing. That in a day or two, his brain chemistry would return to normal, and the bridge these seizures gave them would be closed once again. \"Come on, let's go home,\" she said lightly, kissing her husband's lips. \"Janus, I know you want to stay, I do too, but I'm going to follow Johnny's request.\"\n\n\"I know, I wasn't going to fight you. I know he was only looking after our health,\" Janus said, brushing her hand through John's black hair. She loved that he looked out for their wellbeing even when he was dealing with his own demons.\n\n\"We'll be back; you just rest,\" Annie said sweetly; her fingertips slid off of the tips of his toes as she followed everyone out.\n\n<p align=\"center\">******</p>\n\nThe next morning...\n\nYasmine arrived at the Masters home a little before eight that morning. She was concerned about John. Even though they had only met yesterday and she was indeed a bitch to him before he had shown her that while, yes, what happened to her was horrible, yet it wasn't anywhere near as horrific as what John had gone through for two years. She wanted to come over and keep him company if he would let her. She didn't disparage him for keeping people at a distance. John had a very good reason for doing so, at least that's what she thought.\n\n\"Sis?!\" Ruth muttered, rubbing the sleep from her eyes. It had been a very hard night for all of them.\n\n\"Hey, sorry, I really didn't mean to wake you or anyone else up. I know you all probably got back very late last night. I just thought I'd come and keep Johnny entertained while I'm in town,\" Yasmine said, patting her satchel that contained her sketch pads, her tablet with her software that allowed her to format and edit her comic panels, pens, colored pencils, and everything else an artist would need.\n\n\"Huh?\" Unsure if she heard her sister correctly, given her groggy state. \"You came here for Johnny?\"\n\n\"I did,\" Yasmine nodded. \"Is he up?\"\n\n\"No, Johnny didn't come home last night. They're keeping him there for an additional forty-eight hours,\" Ruth said truthfully, letting her sister in.\n\n\"Oh, are you going to see him?\" Yasmine asked, watching her sister shut the door behind her.\n\n\"No, Annie and Janus are going first thing. I'm going to take the afternoon shift, so Johnny has someone to talk to given his dislike of hospitals,\" Ruth said, suppressing her yawn.\n\n\"Ah, could you ask if I could tag along with them?\" Yasmine inquired, noting how her sister was eyeing her.\n\n\"Why?\" Ruth asked, growing suspicious of her sister's actions.\n\n\"I know I came off wrong yesterday, but Johnny and I share something that no one here can understand. Plus, he's going to be my brother-in-law soon, or soonish, whenever you two can finally pick a date,\" Yasmine said, shooting her sister a knowing smile. \"So we have to stick together,\" she uttered with a firm nod.\n\n\"I see,\" Ruth mused. It had been a while since she had seen her sister like this. \"Let me go see if they're up and ask.\"\n\nYasmine looked down as her sister took hold of her hand and led her towards the bedroom that Annie and Janus shared with John. She wondered how they could even fit everyone in that house, given the number of people living in it.\n\n\"Relax, Annie and Janus are good people. Plus, if you want to see Johnny, you'll have to get their approval first,\" Ruth said as they walked down the hall.\n\n\"He has two girlfriends?!\"\n\n\"No, Annie is his sister; she's protective of him. Janus, although, is his girlfriend,\" Ruth said, peering over her shoulder.\n\n\"Then why are they staying in the same room?\" Yasmine asked, confused.\n\n\"Because last night was a trying night. Annie wanted to make sure nothing happened to Janus or their baby.\"\n\n\"Their baby?! I thought she and John...\"\n\n\"Get your mind out of the gutter,\" Ruth chuckled softly, \"the baby is Johnny's. Janus and Annie don't have that kind of relationship,\" she lied. Her sister didn't need to know the full extent of what went on in that house. She wasn't about to bring trouble down upon them should Yasmine freak out if she ever learned of the truth about the Masters family. Little did Ruth know that Yasmine held her own secret that she kept hidden from them, not even Ruth or her other family members knew off. \"Annie, Janus, are you awake?\" Ruth knocked softly on their bedroom door. Hearing someone approaching, the sound of the handle being turned\n\n\"Ruth?! I didn't expect you to be up,\" Annie said after opening the door a quarter of the way.\n\n\"I wouldn't be, but someone had to drop by so early in the morning,\" Ruth teased, gesturing to her sister.\n\n\"Oh? Who's this?\" Annie asked even though she knew who it was, yet they hadn't been introduced yet.\n\n\"This is my sister, Yasmine; she would like to ask a favor of you and Janus,\" Ruth said, stepping out of the way, allowing Annie to get a better view of her.\n\nAnnie ran her blue-green eyes down the slightly younger version of Ruth. While their eyes were the same color, only Yasmine's hair was a tad darker shade of blonde than Ruth's was. Who, also had a slightly larger bust than her sister did, or that could be because of their height difference. Annie couldn't tell, given the bulky shirt Yasmine wore. \"And what kind of favor could it be, so early in the morning?\" Annie asked, standing in the nightshirt she had worn to bed while she heard Janus sliding clothes hangers along the railing of the closet behind her.\n\n\"I am sorry for the early hour, but I couldn't stay in my motel room... alone. So I thought I could come keep Johnny company for the day, I know he had to go to the hospital last night, and I'm not trying to step on anyone's toes here. It's just I think he and I connected yesterday,\" Yasmine said, speaking rapidly like she always did when she was nervous. \"So, I was hoping that I could come along with you all to see him in the hospital.\"\n\n\"Oh? You think you and my brother connected?\" Annie asked with a pointed look.\n\n\"Annie?\" Janus' voice rang out from behind her. \"There's no need for that kind of tone. I'm sure she's inferring to what she and Johnny went through. So be a dear and do let the girl in so I can get a look at her.\"\n\n\"She isn't after Johnny, Annie,\" Ruth whispered into Annie's ear once her sister entered their room before her. \"She's just trying to be his friend...\"\n\n\"We'll see,\" Annie grumbled. \"Janus, I'll be ready to go in ten minutes,\" she said before heading off to her old room, where she still stored her clothes, given the lack of space in John's.\n\n\"Hello, you must be Johnny's girlfriend; I'm Yasmine,\" she greeted, holding out her hand to her.\n\n\"I am,\" Janus said with a warm smile on her lips.\n\n\"Don't take this the wrong way, but aren't you a little too old to be his girlfriend?\" Yasmine asked. When Ruth informed her of Janus as his girlfriend, she had pictured someone within his age range.\n\n\"None taken; we get that a lot when Johnny and I are out in public. Namely shopping for the baby,\" Janus cooed sweetly down at her growing belly. Knowing that any day now, they would learn the sex of their child. She so hoped it was a girl, not that she wouldn't be thrilled if it was a boy; however, Johnny was betting on a girl, and she didn't want to disappoint him. Even though that wasn't possible given how it was the father of the child that determined the sex of the child. Still, John needed something good in his life, minus her and Annie. \"So you want to visit Johnny?\"\n\n\"Yes, as long as I wouldn't be interfering,\" Yasmine said, noticing a very peculiar graphic novel on John's desk titled: 'Family Secrets.'\n\n\"While I'm not against it, per se, yet it might not be a good time right now, given his episode last night.\"\n\n\"Oh,\" Yasmine uttered sadly.\n\n\"If you can follow my rules, which is for your safety. Since I have no idea who we will be greeted by, will it be Johnny or the madness that lurks within? I can't say,\" Janus said, shrugging her shoulders. \"If you can do that, I have no problem with you coming along,\" she spoke, buttoning her shirt as she stood in front of Yasmine. Feeling her 32D breasts slightly more plump than they were days before. Wondering if she should go bra shopping after they leave the hospital for when her breasts increase in size once she starts to produce milk. Hearing the strands of her blonde hair brushing against her back\n\n\"He's really that dangerous?\" Yasmine asked, looking between the two of them.\n\n\"Sis, the first time I saw it, it scared the bejeezus out of me. So when she says he can be dangerous, heed her words,\" Ruth said in all seriousness.\n\n\"I understand,\" Yasmine nodded, all the while trying not to eye that graphic novel. Wondering why it was there and why he would be reading such a thing?\n\n\"Then let me get dressed, and we'll head out, okay?\"\n\n\"Right, sorry, please don't rush on my account,\" Yasmine said in an apologetic voice as she backed out of the room.\n\n\"You listen to what they say, okay, don't get Johnny too worked up. He isn't in his right mind right now, not after his seizure,\" Ruth said when she and Yasmine stood at the foot of the stairs.\n\n\"I promise, sis, I'll be on my best behavior,\" Yasmine nodded. \"You heading back to bed?\"\n\n\"Of course, you interrupted my beauty sleep,\" Ruth joked, pulling her sister in for a hug. \"I'm happy you're starting to come out of that shell,\" she whispered in a sisterly voice into Yasmine's ear.\n\n\"One day at a time,\" Yasmine replied lightly, patting her sister's back.\n\n\"Go faster, you stupid thing,\" Annie hissed at her tablet as the download she was watching slowed down to a trickle as she walked down the stairs.\n\n\"Is something wrong?\" Yasmine asked, standing there patiently, waiting.\n\n\"Just this torrent I'm using to download comics from so Johnny can have something to read isn't going as fast as I would like,\" Annie sighed when she was trying to download the entirety of: Spawn, Witchblade, Gen13. Bloodstrike, Surpreme, The Darkness, The Maxx, Youngblood, Shadowhawk, Cyberforce, Savage Dragon, Wolverine, X-Men, X-Factor, Green Lantern, Superman, and a few dozen others at the same time.\n\n\"Wow, he reads all these?\" Yasmine whistled once she peeked at the screen of Annie's tablet. \"Well, if it isn't done when we leave, you can use my hotspot to download the rest,\" she said, offering up her data plan at the cost of earning their goodwill.\n\n\"Thanks, I'll probably have to take you up on that. Would you like a cup of coffee before we head out?\" Annie inquired, gesturing to the kitchen.\n\n\"Sure, I've been aching for a good cup,\" Yasmine said with a smile and a nod. \"Don't you just love how it warms your hands on a cold day,\" she uttered, making light conversation with Annie as they waited for Janus. Glancing up when Annie snapped the two lids onto the traveling cups she had filled and mixed with half and half and sugar while her hands were wrapped around her own traveling cup.\n\n\"I do, especially after a long walk across campus,\" Annie said, flashing Yasmine a smile.\n\n\"Are we ready?\" Janus asked, appearing in the doorway of the kitchen.\n\n\"Yep, and here I made you a coffee,\" Annie said, holding it out to her.\n\n\"You have my thanks,\" Janus said, thanking Annie for the forethought.\n\n\"Finally!\" Annie muttered once the last torrent file reached a hundred percent the moment they walked out the front door.\n\n\"I bet he's just going to love all those comics,\" Yasmine stated, casting Annie a smile.\n\n\"He should; he has most of them in his room; I just hope the ones he doesn't have he will like.\"\n\n\"I'm sure he will Annie, you did get them for him, so he'll enjoy them all the more,\" Janus said, pulling Annie into her side as they walked towards her SUV.\n\n\"I take it Johnny's really into comics?\" Yasmine asked, sliding into the back seat once Janus had unlocked her vehicle.\n\n\"He is, it's his way of escaping the world and his mind,\" Annie said, slipping her tablet into her bag.\n\n\"I can understand that,\" Yasmine mused, taking a sip of her coffee as Janus started the engine.\n\n\"So, Yasmine, what do you do back home?\" Janus asked, making small talk as she pulled away from the curb.\n\n\"Self-employed.\"\n\n<p align=\"center\">******</p>\n\nIt was ten till nine when all three of them walked into John's hospital room as he was in the middle of flipping through channels with a scowl on his lips. Tossing the remote aside in frustration when he couldn't find anything good to watch.\n\n\"Johnny...\" They saw how his face lit up at the sight of them and then confusion when he noted Yasmine.\n\n\"Please tell me you're here to spring me from this... boredom,\" Johnny grumbled, looking at the shackles in irritation.\n\n\"Johnny, the doctors want to keep you here for another day because of the way you were acting last night,\" Annie said, closing the distance to test the waters. To ensure it was safe for the other two to draw near.\n\n\"Right, like doctors know what's best, but maybe they're right... this time. As long as they don't go fettling around with my head,\" Johnny stated in a firm tone.\n\n\"We won't let that happen, Johnny,\" Janus said, walking along the right side of his bed while Annie stood on the left. \"Are you up for a kiss?\"\n\n\"If you don't, then I'll be mad; you don't want to see me when I'm mad,\" Johnny said, imagining himself transforming into the Hulk as his smile rose the corners of his lips. His thumb brushed along the back of Janus' hand when she slipped hers into his as their lips embraced one another's. \"How are you? How's the baby?\" he asked after taking a few seconds to savor her taste on his lips.\n\n\"We're fine, baby,\" Janus said in a loving tone.\n\n\"How are you feeling?\" Annie asked, slipping her own hand into his left, lightly rubbing her right down his forearm, given she couldn't do what she really wanted to do at that moment with Yasmine there.\n\n\"Like I got hit by a truck. But it will pass like it did last time. So... hello, why are you here?\" Johnny asked, peering around his sister to gaze at Yasmine.\n\n\"I wanted to see how you were doing and to keep you company if you want it. If not, I can go; I know you...\"\n\n\"No, you're okay, you can stay if you want. Just didn't think you'd want to be seen hanging out with the crazy boy,\" Johnny said, repeating the words he had heard Ruth utter many a time.\n\n\"Fuck what they think; if they think they're better than you, then that just shows me they're weaker than you are. Because we both know they wouldn't last a week with what you went through,\" Yasmine said firmly, crossing her arms along with nodding in conformation of what she had just said.\n\n\"Okay, I think I like her,\" Johnny said, peering up at his sister with a smile.\n\n\"I'm glad to hear you do, Johnny. We are going to be brother and sister soon. Would it be okay if I came closer?\" Yasmine asked, seeing John nod that she could. \"Can I ask what's a seizure like?\"\n\n\"Like the ones I have or just in general?\" Johnny inquired for clarification.\n\n\"Like the ones you have?\" She spoke as she rested her hands on the footboard of his bed.\n\n\"Hmm...\" Johnny hummed, giving it some thought. \"Like being trapped in a waking nightmare in your mind without knowing what's going on around you.\"\n\n\"What do you mean?\"\n\n\"All sensory input is blocked, so I can't see, smell, touch, hear anything when it happens. I'm trapped in my head. Not a place even I want to be stuck in,\" Johnny muttered in a dark tone.\n\n\"I can understand that,\" Yasmine nodded. \"I just hope I wasn't the cause of your seizure because of what we spoke about yesterday.\"\n\n\"No, you weren't, I have brain damage, so you're off the hook. For now,\" Johnny said ominously, putting on his best evil grin that he could at the moment.\n\n\"Brain damage?! How?!\" Yasmine gasped in shock.\n\n\"Happens when a sadistic asshole passes four hundred volts through your grey matter for ten minutes at a time,\" Johnny intoned as shadows played across his face as the sounds of the keys of the orderlies jingled when they bounced against their thighs as they dragged him towards that torture chamber. The sound of his bare feet slapping against the floor as he tried to wiggle free. Their cruel laughter burned in his blood. His muscles tensed as he remembered how the very first jolt of electricity felt as it passed through him. Also, how his piss ran down the table. Glancing up when Annie and Janus squeezed his hands when they sensed that he was slipping into a foul mood.\n\n\"They are in prison, right? Right?!\" Yasmine asked, looking between the three of them.\n\n\"A few. Most are dead,\" Johnny said with a cruel, satisfied smile on his lips. \"Those that aren't soon will be if I get my way,\" he stated with determination. He wasn't about to let one of Julia's rapists walk free a moment longer. Even if it meant he had to put the man in the ground himself.\n\n\"Good. Pigs and they are pigs because no decent human being does that to another,\" Yasmine said, earning her a nod of support from John.\n\n\"Hey, come here,\" Johnny whispered, looking up at Janus.\n\n\"What is it, Johnny?\" Janus uttered low as she leaned down.\n\n\"Can you like undo these things so I can go pee? I promise you can put them right back on.\"\n\n\"I can't do that; you know I can't. But I'll get the bottle for you,\" turning her gaze towards Annie and Yasmine, \"give us a minute, will you?\"\n\n\"We'll just be right outside,\" Annie said, not enjoying the smirk she saw in Janus' eyes, knowing she would be the only one touching John like that while in the hospital.\n\n\"How often have you been thinking of this, hmm?\" Janus cooed as she held his manhood as he filled the bottle.\n\n\"The peeing, the shackles, or your hand on my cock,\" Johnny asked, with a flirtatious smile.\n\n\"The last one,\" Janus replied, matching his smile.\n\n\"The moment I woke up, or are you asking in all the years I've known you?\"\n\n\"Oh, did you stroke this thing to me when you were a boy?\" Janus asked in a husky voice. Giving John's root a few shakes before setting the bottle aside.\n\n\"I plead the 5<sup>th</sup>.\"\n\n\"I was so worried, Johnny,\" Janus sighed, pressing her forehead against his while her hand aroused that branch of his. She didn't care if they were in a hospital; she was going to get the father of her child off and be damned to those that stood in her way. \"We're going to keep searching for a way to treat these seizures in a better way,\" she uttered, feeling John growing in her hand as she continued to stroke him off. She knew it wasn't the best blow job she's ever given to him, yet she knew he needed relief, and she wasn't about to deprive him of what she could give him. Plus if she was honest with herself, which she was, she would have admitted she just wanted John's first load of the day. \"Let me dump this out, and I'll get the other two.\" Picking up the urine bottle and sashaying towards the room's bathroom. Noting the look that Annie was giving her when she walked out of it when they reentered the room upon hearing the flushing of the toilet. Maybe she shouldn't have had a gloating look in her eyes, yet she couldn't help it. It was just too much fun teasing Annie.",
        "\"So, I got to ask, what's up with the bag? Do you like to cosplay as Indiana Jones?\" Johnny inquired, his green eyes falling on it.\n\n\"Oh, this, this has all my artist supplies. Thought I could sketch you,\" Yasmine said, patting her bag. Not hiding her bemused smile at what he had just said.\n\n\"Me? You want to sketch me?!\"\n\n\"Mmmhmm,\" Yasmine nodded. \"Also... I was hoping we could talk some more, only if you're up for it. I don't want to pressure you.\"\n\n\"Do you need to talk?\" Johnny asked, knowing what she was inferring.\n\n\"A little,\" Yasmine said shyly; also, she had to know why he had that comic on his desk.\n\n\"Okay, we can talk... later,\" Johnny answered after a few moments of deep thought.\n\n\"Of course, and thank you,\" Yasmine said in a bashful tone.\n\n\"No problem. If I get out of here tomorrow, do you want to go with me?\" Johnny asked, knowing she knew what he was speaking of.\n\n\"I'll... give it a try,\" Yasmine said after a moment's hesitation.\n\n\"Annie knows the time; she takes me to it. She's a good listener,\" Johnny said, praising his sister, who blushed as he did.\n\n\"Johnny,\" her voice drew his attention to her, \"I got you some comics so you won't be bored too much,\" Annie stated, watching how his eyes lit up at that.\n\n\"Really?\"\n\n\"Mmmhmm,\" Annie nodded with a wide smile on her lips.\n\n\"Where are they?\" Looking around for them, he could have sworn she didn't have any in her hands when she first entered his room.\n\n\"They're right here, Johnny,\" Annie said, pulling out her tablet along with the charger, seeing the confusion in his eyes as she did. \"I download a ton of them, so you'll have lots to read while you're in here.\" Showing him how to power it on and where to find the files she had extracted from the RAR files that they had come in.\n\n\"Oh, that's a lot... You got the Watchmen?!\"\n\n\"I did,\" Annie nodded, seeing the elation on his face as he peered up at her.\n\n\"How did you know I wanted to read that series?\"\n\n\"Because you've watched that movie like a hundred times,\" Annie said, knowing how she could repeat every single line of the movie given the number of times she had overheard him watching it.\n\n\"Come here, closer, closer,\" Johnny cooed as Annie bent down. Feeling the heat flooding her cheek as he placed a kiss on it. \"Thank you, Anastasia.\"\n\n\"You're welcome, Johnny,\" Annie replied with glistening eyes. This was the first time he had ever used her given name without having his seizure bringing it out. Noting how his eyes sparkled as he scanned down the other files in the folder she had placed them all in.\n\n\"Johnny...\"\n\n\"Right, sorry,\" Johnny apologized and powered down the tablet and set it on his lap. \"So any word on the house?\"\n\n\"Signing the papers the end of this week, have three construction companies coming out to give your father and me a quote on the price of the work for the extension,\" Janus said, noting how John hung onto every word.\n\n\"The baby stuff is still being delivered Thursday, right?\"\n\n\"It is, you'll help set it up, won't you?\" Janus asked, smiling down at him when he nodded.\n\nAs they talked, he noted how Yasmine had her sketch book out. Her eyes flicking up every so often, then her hand would continue its frantic pace over the paper. Until sadly, Annie and Janus had to leave in order to get home before those men arrived, along with Annie having to head off to her afternoon class, leaving him alone with Yasmine.\n\n\"So... you wanted to talk,\" Johnny said once he was sure they were well enough away so as not to overhear. Noting how she got up, set her pad on the seat of the chair, and picked the whole thing up, and carried it over to his bedside.\n\n\"Sorry, didn't feel like speaking from all the way over there, and given what I have to say, I rather not stand if you don't mind,\" Yasmine stated, setting her chair down by the side of his bed.\n\n\"Not like I can stop you,\" Johnny uttered, tugging on his shackles, causing the railing of the bed to wobble slightly.\n\n\"Can I ask you a very serious question?\" Yasmine asked; her tone had a curious feel to it.\n\n\"Shoot.\"\n\n\"Why do you have the 'Family Secrets' graphic novel in your room?\"\n\n\"You been in my room?\" John's voice grew hard. He didn't like anyone that he didn't know well around his things.\n\n\"Only after Janus invited me in,\" Yasmine said, trying to still his anger she could see rising.\n\n\"Oh. Okay, if she let you in, I can't say too much about it then,\" Johnny said in defeat. \"Why do you want to know?\"\n\n\"Why did you get it?\"\n\n\"I didn't per se; at first, I wasn't all that into what they were doing. Yet, the sex witch angle, as odd as it was, was intriguing. Plus, the author of it kind of reminds me of Todd McFarlane before he quit drawing Spawn.\" Arching an eyebrow as Yasmine's eyes lit up, and a wide smile lifted the corners of her lips. It was a peculiar expression, at least to his mind.\n\n\"So you like how that person drew that graphic novel?\" Yasmine asked, knowing if she revealed this secret to him, then she knew John wouldn't tell a soul. That's just the feeling she got from him.\n\n\"Oh yeah, the other two novels of his are just as good as that one. I hadn't seen a hair of his skill dropping...\"\n\n\"Hers,\" Yasmine corrected.\n\n\"Huh?\" Johnny uttered as he stared at her in confusion.\n\n\"I'm Damien Sol,\" Yasmine said, sitting proudly in her chair.\n\n\"Come again?!\"\n\n\"I'm the one that draws and writes those graphic novels that it appears you enjoy,\" Yasmine said, still seeing the disbelief in his eyes.\n\n\"You're fucking with me, right?\" Johnny spoke, wondering why she would draw those kinds of graphic novels given what she had went through.\n\n\"I swear I am not. Here, I don't normally do this, not with something I'm working on. But I want you to believe me,\" Yasmine said, pulling out the sketch pad that had the mock ups panel for the next 'Porn Star Family' graphic novel she has been working on.\n\n\"No way?!\" Johnny said in shock as he stared down at that penciled drawing of Ira. He knew this style of drawing from anywhere given the numerous times he had read, alongside his mother and sister, the ones he had.\n\n\"Yes, way,\" Yasmine said, smiling down at him. \"Go on, you can look through it, just don't touch the sketches.\"\n\n\"Wish I could draw like this; you got talent. Can I ask, why?\"\n\n\"Why, what?\" Yasmine asked, arching an eyebrow. She had been ready for this question to pop up.\n\n\"Why draw incest?\" Johnny inquired, handing the pad back to her.\n\n\"Well... long story,\" stuffing her pad back into her bag when she retook her seat and pulling out the one she was doodling in that she hoped if John gave his approval to make a new comic out of, \"after what happened, I got real dark, and it showed in my work,\" Yasmine said, seeing John nod in understanding. \"My therapist that my parents back home forced me to go to showed her how dark, how evil they were. Tried to get me to find some other, more healthy way to express my emotions...\" Peering up when she heard John snort.\n\n\"Yeah, I barely listen to my own. I know where you're coming from.\"\n\n\"I mean, sure they're helpful sometimes, but mostly they just muck up the works, you know what I mean?\" Yasmine replied, flashing John a smile.\n\n\"I totally do.\"\n\n\"I don't remember how it turned into full-on incest. But well... it's paying the bills. Plus, I'm kind of fascinated with it.\"\n\n\"Huh?\" Johnny spoke, raising an eyebrow. \"Care to explain?\"\n\n\"I mean, just a little over a hundred years ago, it suddenly became taboo?! Why? What for? Before the 1900s, when the first incest laws went into place, it was a complete and normal thing to do. Nobility has done it for countless centuries. Not counting those families so far removed, say out in the plains when the first settlers started to make their homesteads. Do you think there was an abundance of wives or husbands? I don't. Not when, at the time, say traveling twenty miles took the better part of a day by horse. So I don't think a whole lot of dating was happening as we know it today. While I might not ever experience it. At least not right now, being with a man like that makes my...\"\n\n\"I understand,\" Johnny said, nodding in support when he saw her shiver.\n\n\"Can I ask, how long have you and Janus been going out?\"\n\n\"A few months. Known her since I was ten, although I can't remember anything that early without landing up in here,\" Johnny stated, gesturing to his surroundings.\n\n\"Why? I'm not trying to be nosy, just curious,\" Yasmine quickly said when John gave her that look.\n\n\"The damage in my brain is blocking my access to that part of my long-term memory, or that's what my doctor says. Anything after that, I have no problem remembering,\" Johnny said; a look of sadness filled his eyes as he dropped his chin. \"Can you do something for me?\"\n\n\"Sure, Johnny, what is it?\"\n\n\"Can you put on the Counting Crows 'A Long December' for me?\" Johnny asked, as his eyes glistened as he peered at her.\n\n\"Okay,\" Yasmine said, drawing out the word. She had no idea why he wanted to hear that song. Yet, she could see something was happening in his mind.\n\nAs the intro of the song filled the room, John turned his head, peering out the window. Seeing Julia's image playing along the glass. The way she would smile at him. To how she would look at him. Not as some freak or some weird thing that was meant to be hidden away. No. That was never in her eyes whenever they were together. Even in that Hell, that nightmare that would never end, even now, after all these years, he was still there in his mind; she was the only light that kept him rooted. The image of the courtyard soon found its way onto its surface. He could still see that smiling face of hers. \"Johnny...\"\n\n\"Don't... don't touch me right now, please,\" Johnny said when Yasmine started to reach towards him, as his hot tears fell onto his lap. How he hated himself. How weak he felt. How pathetic he was for allowing it all to happen. Although, in truth, John could never have stopped it. That didn't mean he wouldn't hate himself because he wasn't strong enough.\n\n\"Johnny, why would you want me to play a song that you know would make you upset?\" Yasmine asked, drying his eyes for him; when he nodded, it would be okay, given how he couldn't at the moment.\n\n\"I lost someone in that Hell. Someone that meant a great deal to me,\" Johnny whispered, tugging hard on his shackles to vent his anger, his sadness, his grief onto. Causing Yasmine to jump back in startlement.\n\n\"Would it happen to be this Julia you spoke of yesterday?\" Yasmine inquired, seeing John nod.\n\n\"I didn't mean to frighten you. I just hate myself. Hate those men for what they did to us. What that so-called doctor did, and all the misery and pain he inflicted upon us.\"\n\n\"Why would you hate yourself?\" Yasmine asked, trying to understand.\n\n\"Because I loved her, and I was powerless to stop it,\" Johnny said, hanging his head in shame.\n\n\"Johnny, you know it isn't...\"\n\n\"I know, but that doesn't change how I feel,\" Johnny uttered, cutting her off.\n\n\"I'd like to know more about her if you'd mind sharing Julia with me,\" Yasmine said, retaking her seat. Flipping her pad to a clean page sketching out what Julia appeared to him as, as John detailed their time together. Then the room grew somber as they reached the day Julia killed herself.\n\n\"I don't blame her for taking her own life,\" Johnny said sadly after describing how he had found her in the courtyard. \"If I could have, I probably would have joined her, but they...\"\n\n\"You don't mean that do you, Johnny?\" Bill cut in, making his and Ruth's presence known. He didn't want to eavesdrop, yet he didn't want to interrupt his brother either when he was finally talking to someone about his pain. He knew that was the only way to truly heal from it.\n\n\"Yeah, I would have,\" Johnny stated coldly. \"Been listening long, I take it?\" Eyeing his brother as they neared.\n\n\"Please, Johnny, we didn't mean to, yet we didn't want to interrupt either,\" Ruth said, trying to placate his temper.\n\n\"Uh-huh,\" Johnny mumbled as his icy exterior grew.\n\n\"Johnny?\"\n\n\"Yeah?\" Turning his head to look at Yasmine.\n\n\"Would you like to see what I've drawn while I've been here?\" Yasmine asked, trying to break the tension she had felt forming.\n\n\"Sure.\" Noticing how she had purposely blocked his view of his brother as she handed him her sketch pad.\n\nHis jaw muscles clenched as he opened it. Seeing the front entrance of Raven Dale staring up at him. Knowing she must have looked it up given the detail of the drawing. If he could, he would have torn it off and wiped his ass with it. However, he couldn't do that. Nevertheless, a cruel, sadistic smile formed on his lips when he noted how she depicted the staff of that vile place on the next page. Then his head snapped up, his eyes bored into her as his own image peered up at him. \"Me?! Why?\"\n\n\"I have an idea, but it will have to wait till later when we can speak alone,\" Yasmine stated, seeing that hard look in his eyes.\n\n\"We can give you two some privacy if you two still need to talk,\" Bill said from behind Yasmine. Hating that he was the one that caused his brother's mood to shift. Wondering when they would ever get back to like it once was.\n\n\"If you don't mind, I promise it won't be long,\" Yasmine uttered when she turned to look at Bill and her sister.\n\n\"No problem, sis, I'm glad you're opening up to someone,\" Ruth said, smiling at her, lightly placing her hand on Bill's left arm. Giving him that silent signal to let them have the room for a few more moments.\n\n\"Explain, and it better be good,\" Johnny spoke once the door to his hospital room closed, narrowing his eyes dangerously.\n\n\"I was thinking, if you'd let me, I'd like to tell yours and Julia's story,\" Yasmine said, retaking her seat.\n\n\"Why?\"\n\n\"Because people need to know that this happened, that this vile act happened here, in the States, that if it can happen here, then it can happen anywhere?!\"\n\n\"But why us? There're other patients that were in there with us. Why exactly the two of us?\" Johnny asked, feeling his heart racing. Unsure if he could put his dark history out there for all to see.\n\n\"Because yours and her story needs to be told. So that maybe it will help to put her memory to rest and bring those that profited and/or partook in those evil acts sees what a prison cell looks like. Of course, I wouldn't use yours or her names; I'll just put a disclaimer on it stating that it's based on a true story and that names have been changed to protect the innocent.\"\n\nJohnny eyed her, unsure what she was suggesting could actually be done. Could her graphic novel actually bring awareness to the horrors that happened at Raven Dale? Would anyone truly believe it? If they did, what could possibly come out of it? These questions John rightly didn't have an answer to. Yet, she was right. Julia's story, not for his sake, so that people would know she was a human being. That she existed! That she was someone's daughter, that there were those that loved and still loved her. That had suffered the most horrendous of horrors that anyone could possibly imagine.\n\n\"But to do so, I'll need to know everything, I mean everything that went on there,\" Yasmine said, seeing how his mind was deep in thought.\n\n\"You sure you can handle it? You couldn't handle me describing what a month of their rapes was like. Can you truly handle the true horror that went on there?\" Johnny asked with a very pointed look.\n\n\"Hey, I'm not saying I won't puke my guts out. But if you work with me, then I'm going to see this through to the end,\" Yasmine said, her eyes were set in determination.\n\n\"You promise me that if I do this, that there won't be any sugar coating on your part. If the world is going to hear, or read in this case, about what truly happened at Raven Dale. Then I need to know, I need your absolute assurances that our tale will be told as I remember it,\" Johnny stated, setting his foot down, metaphorically speaking.\n\n\"That's the great thing about being a self-published artist like myself. I can do whatever I want within reason, depending on who picks up the artwork. But... if we label it as graphic horror, then I doubt we'd run into too much trouble given what the content will be about. So... what do you say?\"\n\n\"Personally, I'd tell you to go fuck yourself. But...\" Blowing out a breath, \"this isn't about me; this is about us. You promise me that mine and Julia's names will not appear anywhere in that comic?\"\n\n\"You have my word,\" Yasmine nodded sternly. She wasn't about to break it either.\n\n\"When do you want to do this?\" Johnny asked, looking right at her.\n\n\"No time like the present,\" Yasmine said, trying to put a light spin on what would be a very gloomy atmosphere.\n\n\"Then you might want to call Bill back in here,\" Johnny said, knowing it was going to take him to a very, very dark place. A place he might not be able to come out of on his own. The motor of the bed hummed as he raised the head portion to a comfortable position. If he was going to recount what had happened, he didn't want to be disturbed by muscle strain sitting up for that long. His eyes followed his brother and Ruth as they walked back into the room. \"Sit, and listen, that's all you have to do,\" Johnny cut off his brother as Bill started to speak.\n\n\"I can do that, Johnny,\" Bill said with a nod. Arching an eyebrow when Yasmine pulled out her phone and pointed it at John.\n\n\"Are you recording?\" Johnny asked, peering at Yasmine's phone.\n\n\"Mmmhmm,\" Yasmine hummed, \"whenever you're ready.\"\n\n\"My name is Johnathan Evan Masters; what you are about to hear is the true account of my two years while I was institutionalized in Raven Dale sanitarium,\" he said, speaking his full given name for the first time in five years. Noting how his brother's brow was raised when he uttered those words. \"Let me tell you about what truly happened behind those closed doors that people seem to willfully ignore.\"\n\n<p align=\"center\">******</p>\n\n\"What's going on in here?\" Katherine asked, noting the very pale, very sickly faces, except for John, when she arrived later in the afternoon so she could stay with John for the evening until Brandan arrived.\n\n\"Telling them a story,\" Johnny said darkly.\n\n\"What kind of story could it be that makes them appear to be green in the gills?\" Katherine inquired as she moved towards the side of his bed.\n\n\"A true story,\" Johnny said in a matter-of-fact tone. \"We just only covered a fraction of it. I had to stop, given.\" Pointing at his brother and Ruth, who appeared to be on the verge of losing their lunches. \"Got to admit you hung in there,\" he said, peering at Yasmine.\n\n\"I have to, not saying I won't be hurling up my lunch afterward, but I had to make sure you weren't interrupted,\" Yasmine said, feeling how unsettled her stomach was. Also noting how John's mother was eyeing the two of them. \"But I think I'm at my limit for today,\" she uttered, stuffing her phone into her satchel.\n\n\"Hey, you get a reprieve from it, I do not,\" Johnny stated in a cold tone.\n\n\"I know, I didn't mean for it to sound...\"\n\n\"It's fine; I think you two should show her back to her motel room,\" Johnny spoke, looking over at Bill and Ruth.\n\n\"You sure?\" Bill asked, uncertain of John's mood.\n\n\"I'm fine; this is nothing new to me,\" Johnny uttered, seeing the confusion on his mother's face.\n\n\"Johnny...\" Katherine's voice stilled when John peered up at her like he was waiting for something to happen. A Dodo to land on her head, the sky to split apart and all time to cease? She rightly didn't have a clue as those green eyes gazed at her.\n\n\"Say it. I know you want to,\" Johnny prodded. Seeing the heat flooding his mother's cheeks.\n\n\"Oh, I think you're the one that's wanting me to call you my Li'l John,\" Katherine spoke, her smile lifting the corners of her lips.\n\n\"I... hmm... honestly, it sounds weird. I know not to you, but to me, it does. But I told you that you could, so I'm not going to tell you, you can't,\" Johnny said after a few moments.",
        "\"As much as I would love to revive that name, yet if it makes you uncomfortable, honey, I don't have to use it,\" Katherine replied in a loving tone as she brushed her hand through his hair.\n\n\"No, you can; just going to take me a while to get reacquainted with it.\"\n\n\"So, honey, why did your brother, Ruth, and her sister look like they were going to lose their lunches?\"\n\n\"Already told you,\" Johnny uttered with an arched eyebrow.\n\n\"But what kind of true story could have done that?\"\n\n\"What really happened in Raven Dale, what the papers and everyone got wrong,\" Johnny replied truthfully.\n\n\"Good, then you wouldn't have a problem telling me, would you?\" Katherine said in that motherly voice. Taking the seat that Yasmine had vacated.\n\n\"I don't...\"\n\n\"I'm stronger than you think, Johnny, I did, after all, raise you, so I have to be extra tough,\" Katherine said even though she knew most of what had happened in Raven Dale, given how she had Wanda tell her everything that he had spoken about in Jared's lawyer's office. Still, she needed John to tell her himself. To build that rapport with her son that they had lost because they trusted the wrong people with their son's mental health and safety. \"Lay it on me, Johnny, don't hold anything back,\" Katherine stated with a roll of her hand.\n\n\"Remember, you wanted this,\" Johnny said darkly.\n\n<p align=\"center\">******</p>\n\nKatherine was lightly stroking John's left forearm and along the back of his head to comfort her son when she knew how much of a toll this was putting onto himself. Even if she knew most of it, still hearing it from her son's mouth was another thing altogether. \"Don't you worry, honey, we'll get through this together,\" Katherine cooed lovingly down at him.\n\n\"Why aren't you like the others?\" Johnny asked, peering up at his mother.\n\n\"Because I have to be strong. If I can't be strong for you, then how can you trust me to be strong when you really need it,\" Katherine answered in a motherly voice. Turning her body when two knocks came upon John's hospital room door.\n\n\"Mrs. Masters, might I see you for a moment,\" John's doctor said, keeping what he hoped would be a way to restore some of the functions of John's damaged brain cells, or at least that was his hope given the results of the animal testing that has been done so far.\n\n\"I'll be right back, honey; I'm sure it's just normal hospital stuff he needs me to look over,\" Katherine said, leaning down placing a light kiss on her son's forehead.\n\n\"Not like I can go anywhere,\" Johnny uttered, rattling his shackles.\n\nKatherine arched an eyebrow when the good doctor closed John's hospital room door. Immediately she was on edge. Was he here to tell her that they were once again going to be forced to put John back into a ward? A place she knew wholeheartedly would destroy any chance of bringing their son back, that wasn't including their relationship that was on the mend. She also knew that would just devastate Janus. As much as she had been annoyed by her arrival at their home almost a month ago, she couldn't deny how good she was for her son. She knew it was because Janus was around that John was slowly coming out of that dark world he has been living in for so long because they failed to see. Failed to listen to their son's pleas for help. How that single moment in time would forever darken her and Brandan's lives. They should have heeded their son's words instead of the man that they had first taken John to, to see what was truly wrong with their child. Yet that man was just as bad as Dr. Mott was, she had no idea if the man was involved in what happened at Raven Dale or not; all she knew was they had listened to the wrong man.\n\n\"Yes, Doctor, what is it?\" Katherine asked, hiding her worry from her tone.\n\n\"Please, come to my office; I'd like to discuss something in private about Johnny's future care,\" the man said, holding out his arm directing her towards the elevator.\n\nThe five minutes to get to the man's office had Katherine on pins and needles. Silently praying to herself that they weren't going to take John away. Although, she knew that was a possibility given how dangerous he could be during an episode. She wasn't willing to lose her boy, no matter how broken, how damaged he was, ever again!\n\n\"Please, have a seat,\" he said, gesturing to the chair in front of his desk within that oddly small office for a doctor.\n\n\"What's this about Doctor Hartwick?\" Katherine asked, her eyes following the man as he ambled towards his chair.\n\n\"I don't want to get yours, your husband's, or your family's hopes up, but there might be a chance we can restore some of the function of the dead brain cells caused by your son's mistreatment at Raven Dale,\" Doctor Hartwick stated, seeing Katherine's jaw instantly dropping.\n\n\"Come again?!\"\n\n\"I know, it goes against everything the layman knows about the brain and what happens when the cells in the brain die off. What I'm about to suggest to you is very, very experimental and highly dangerous given it will deal with injecting the drug directly into that part of Johnny's brain that was injured. Yet, so far, the animal trials have shown outstanding results. I only bring this up to you because the FDA has given the go-ahead for human trials to begin.\"\n\n\"I think you need to begin at the beginning, Doctor,\" Katherine stated with hope in her eyes. Not to get her son, the boy that place took from them, no matter how much she would love that, no, so it would help John to live with some part of his brain restored in a limited function. Nodding along, telling him she understood what he was saying as the man went over everything about the trial and what its original purpose was for. Which he told her it was developed to help those who've suffered a stroke and lost some brain function due to the lack of blood to that part of the brain. Also showing her how the drug interacted with the damaged tissue while leaving the healthy parts of the brain alone. How the drug reformatted the cells, in layman terms, to carry blood flow through that part of the damaged portion also changing some of the cells to act as neurons to help bridge the gap between the healthy parts. \"What would this mean for Johnny?\" Katherine asked, looking at the man once he had finished.\n\n\"I can't say for certain, I can speculate if you would like,\" seeing Katherine nod, \"if this does what I think it will in a human brain as it does in a rat's brain, given their similar makeup, then it's possible that Johnny's memory could be partially or fully restored if the drug does what it's designed to do.\"\n\n\"What about his seizures?\"\n\n\"Hmm...\" A deep hum emanated from his chest. \"That I cannot comment on, could it lessen them sure, could it make them worse, also a possibility. As I said, the drug is experimental, so there's no telling what or if any side effects would be to Johnny's health. I know this is a very big discussion you, Johnny, and your family has to decide on. The trial begins in four months' time, please make a decision by the end of the month, so I can ensure that Johnny has a spot on the trial.\"\n\n\"And where exactly will this trial be taking place,\" Katherine asked, arching an eyebrow.\n\n\"The place is called New Venture Medical Research in Ohio,\" Doctor Hartwick said, printing the name neatly on a yellow sticky-note pad so they could look the place up for themselves and see he wasn't trying to hoodwink them. He wasn't about to be like the man that did that to John. He was ashamed, to say the least, that they both work in the same field. He got into medicine to save lives; it appeared to him that man, whoever he was, got into it to torment lives.\n\n\"Ohio?!\"\n\n\"I know, it's a long way to go, but I believe it will be worth the cost,\" Doctor Hartwick said, handing her the piece of paper.\n\n\"And just how much would this trial cost us?\" Katherine asked with a pointed look.\n\n\"To you and Johnny? Nothing, just the cost of the plane ticket, the people that are running it aren't charging those that are approved to take part in it. From what they've told me, they pay for the hotel room so they can easily monitor their patients while they're in recovery to ensure nothing goes wrong.\"\n\n\"I see,\" chewing on her lip, she was onboard the moment he said it might get John's memories back, \"I don't know if Johnny will be up for it. He doesn't like people, namely doctors, messing with his head,\" Katherine said, knowing her son would be the one that has to determine if he wants this or not.\n\n\"That's very understandable,\" Doctor Hartwick nodded. \"Please, just present him the facts; I know he's smart; you can see it in his eyes. I'm sure he'll understand what's at risk and the gains he might receive if this works.\"\n\n\"I'll try, but I can't guarantee you anything,\" Katherine said, running the pad of her thumb over the name on the paper. She was going to be damn sure that this place was what it said it was. She had learned the hard way of blindly trusting a medical professional before. She wasn't about to make the same mistake ever again!\n\n\"I understand; if he doesn't, then he doesn't. We'll just continue on as we've done so far.\"\n\nShaking the man's hand, saying a few parting words. Katherine felt her heart was light, full of hope, as she made her way back to John's hospital room.\n\n\"Johnny?\" Katherine cooed, softly knocking on the door of his hospital room as she pushed it open. Seeing his head turning with the tablet that Annie had brought for him in his hands as the door inched wider.\n\n\"Bad news, I take it?\" Johnny greeted as his mother sauntered into the room.\n\n\"No, why do you say that?\" Katherine asked, returning to her son's side.\n\n\"You were gone a while,\" Johnny answered, showing her the time on the tablet.\n\n\"I know. Can you put that away for a moment? I have something very serious I want to discuss with you,\" Katherine spoke, seeing John arching an eyebrow at that.\n\n\"So, what ward am I going to this time?\" Johnny asked in a cold tone. Why else would his mother be gone for so long if not to discuss the details of his transfer to a mental hospital?\n\n\"None.\"\n\n\"None?\" Johnny repeated her answer; his disbelief was evident in the tone of his voice.\n\n\"No,\" shaking her head sternly, \"if you let me speak, I'll tell you everything, and no, you being carted off to a ward never once came up,\" Katherine stated, smiling as John's jaw snapped closed.\n\n\"You want me to do what?!\" Johnny growled if he wasn't strapped to that bed, he'd be up in arms right at that moment; as it were, his display was very muted.\n\n\"I'm not telling you to do anything, just to think on it, that's all,\" Katherine said after detailing what Doctor Hartwick had told her about the trial.\n\n\"And you just want me to let some damn whack-a-doo mess with my brain?! Have you gone insane?!\"\n\n\"I know you're hesitant, Johnny; I understand all that. Yet think of the benefits this might bring to you.\"\n\n\"No, you just want your son back; what happens to me, Johnny, if this is successful, huh? Am I to be stuffed into some dark hole never to be seen or heard from again?\"\n\n\"I...\" Biting her tongue, denying that she wanted her boy before his hospitalization back, would be bad, and John would see right through it. \"I don't know Johnny; I can't say what will happen if it is successful. Maybe it will be a good thing for you. You never know it might help to stabilize your personality.\"\n\n\"No, you don't seem to understand,\" Johnny sighed, shaking his head.\n\n\"Then help me to understand, honey,\" Katherine uttered, leaning forward and taking his hand into hers.\n\n\"John and I are two different people. He can never be me, nor I, him. Can't you see that? Even I can see that with what I've discerned from what I've seen in my memories.\"\n\n\"Do you not see the contradiction in what you just said?\" Katherine asked, trying not to smile. \"If John, my Li'l John, isn't you, then why do you have his memories, hmm? I'm not dismissing you're concerns, son; I'd never do that to you. Not again. But why not give us the month to find out everything we can about this trial and make our discission together.\"\n\n\"Together, huh?\"\n\n\"Mmmhmm,\" Katherine nodded her head, causing her brown hair to bounce against her chest. \"I'm sure Janus and Annie would also like to have a say in this since this is going to affect them as well. Given I'm sure, Janus will be the one taking you to Ohio.\" She couldn't help it; the corners of her lips lifted at the sound of her son's grown.\n\n\"And if it doesn't work, what then? You'll give up on this crusade to get your lost son back?\" Johnny asked, looking intently at her.\n\n\"Never. I'd never give up on my baby, no matter how difficult he's being at the moment,\" Katherine said in a teasing tone, brushing her thumb along the back of his hand as she did.\n\n\"So did he say when I was getting out of here, or is my stay indefinite?\" Johnny asked, changing the subject.\n\n\"Well, now, I'm a little hurt, Johnny. Has my hospitality been so unwelcomed?!\" Doctor Hartwick joked from the entrance to his room.\n\n\"No, you're fine; it's just no one here likes the midnight ice-cold sponge baths,\" Johnny retorted with his own joke.\n\n\"I could have sworn the hot water was working,\" Doctor Hartwick mused with a smile on his lips.\n\n\"So, Doc, am I to be a free man or are ya going to glove up again because I feel a big one coming on,\" Johnny uttered, causing the good doctor to snort in kind.\n\n\"I don't know; if I let you go, how do I know you won't go terrorizing the city in your Doom bot?\" Doctor Hartwick asked; he's always taken an interest in his patient's likes and whatnot. John had become a special case for him. To show him that not all doctors were like the man who did horrible things to him so long ago. Seeing Johnny chuckling at his reference to the Dr. Doom comics.\n\n\"If you give the word, I promise no death rays or giant robots for twelve hours,\" Johnny retorted with a wink. Watching as his doctor brought up the folder in his hand that contained his medical file.\n\n\"Now, before we get to the nitty-gritty part of your wonderful stay at El Mercy, I hope you're mother has informed you of what we have talked about earlier. I know you're hesitant,\" cutting John off as he began to speak, \"it's very understandable given what you went through. I think I would be too, but the possible rewards outweigh the perceivable risks to you. I'm just a phone call away; any time you need to talk about it, or you need more detailed information about the trial, I'd be glad to do so with you and your family.\"\n\n\"What happens to me if I do this?\"\n\n\"If you're referring to your personality... that I cannot say. Although I seriously doubt you'd revert back to the personality you had five years ago. I think you'd become a more whole version of you. Think of the Green Hulk and the Grey Hulk; they both are Banner but they both aren't the same Hulk,\" seeing John's gaze staring at him intently as he referenced that comic, \"but Banner combined the two of them and made the Blue-Green Hulk. A smarter, stronger version of his previous self.\"\n\n\"I see, so I'd be like the Bionic Man?\"\n\n\"In a sense,\" Doctor Hartwick nodded with a smirk on his lips.\n\n\"I'll have to give it some thought,\" Johnny muttered as he looked down at his hands. Trying to will himself to Hulk out, and yet nothing happened; he was so disappointed.\n\n\"Please do, Johnny; I only brought it up to your mother because I believe it can heal some of the damage done to you by that quack of a doctor,\" Doctor Hartwick said in a firm tone. \"Now, since I can safely say that you're imbalance has passed, I'll start work on your discharge forms.\"\n\n\"Isn't that great, baby?! You'll get to come home tonight,\" Katherine said with a wide smile on her lips.\n\n\"Only to go to school in the morning,\" Johnny snorted.\n\n\"Well, you very well can't cut school, young man,\" Katherine teased.\n\n\"Not if I do that little thing you like?\" Johnny asked, trying to bargain his way out of going to class the next morning.\n\n\"Hmm...\" Tilting her head to the side, tapping her finger against her chin, pretending to think about his offer. \"As tempting as that is, you need your schooling, and eating my pussy isn't going to teach you what you'll need to know... for the most part,\" Katherine said, smirking impishly at her son.\n\n\"So mean to an ill man,\" Johnny grumbled in a light tone.\n\n\"You're not ill, just special,\" Katherine retorted with a smile on her lips. So very pleased that she and her son could be speaking like this. This was a far cry from the past five years. Where every conversation they had had a confrontational feel to it. It was good to see that John still had some humor in himself, given what those people had done to her little boy. \"Now, let me call Janus and have her bring you some fresh clothes from home,\" she said, patting his thigh above his knee as she rose.\n\n\"Hi, Janus,\" Katherine greeted the moment Janus had answered her phone.\n\n\"Hello, Katherine, how's Johnny?\"\n\n\"I have good news.\"\n\n\"Oh?!\" Katherine felt her smile widening at the mirth in Janus' voice.\n\n\"They're going to release Johnny soon, so he's coming home tonight; I was wondering if you would mind bringing some clothes for him to wear?\"\n\n\"Of course, of course?! I'll be there soon as I can...\"\n\n\"Oh, before you hang up, there's something else we need to talk about, but not over the phone,\" Katherine said before Janus could hang up on her.\n\n\"Okay, why does it sound ominous?\"\n\n\"Like I said, I don't want to get into it over the phone, only when everyone is with us so we all can discuss it.\"\n\n\"I... see, okay, I won't pry... yet; it better be soon.\"\n\n\"I promise once everyone is home tonight, we'll discuss it then,\" Katherine stated in a firm nod. \"Johnny,\" walking back into the room after she had ended her call with Janus, \"she'll be here soon with your clothes. How do you feel about spaghetti tonight?\"\n\n\"You're making it right, and not Dad's version?\" Johnny asked with an arched eyebrow.\n\n\"Come on, Brandan's can't be that bad, can it?\" Katherine asked, keeping her smile from her lips as John nodded his head very vehemently. \"I'm sure your dad is going to be so heartbroken hearing that you don't enjoy his cooking.\"\n\n\"It's not that, just he burns the sauce; who burns sauce?!\" Johnny exclaimed, thrusting his arms up as far as his shackles would allow.\n\n\"Well then, I'll just make sure that you only get my delicious spaghetti whenever you want it,\" Katherine cooed in a loving voice as she retook her seat. \"Johnny?\"\n\n\"Hmm?\"\n\n\"What did Doctor Hartwick mean by the Green and Grey Hulk. I thought there was only one Hulk?\"\n\n\"Oh, no, there're three Hulks; She-Hulk, who's Banner's cousin, then there's the Red Hulk, he's the General you see in those movies, he came way later in the comics. The Green Hulk is the one you see the most of. Given how the Green Hulk was the first incarnation of the Hulk. The Grey Hulk came after Banner irradiated himself with another gamma blast to rid himself of the Hulk the first time, only to turn himself into the Grey Hulk. Then he did it a third time, resulting in the Blue-Green Hulk,\" Johnny said, rattling off his knowledge of the comic world. Not voicing even that didn't last, and the Green Hulk reemerged. Wondering if what they were suggesting would end up just like Banner's futile attempts to rid himself of the Hulk. He didn't know what was crueler, what he went through, or giving them false hope if the operation didn't last.\n\n\"Ah, but the last one is the best one, right?\" Katherine asked she had no inkling for comics, yet if her son was into them, she would try her damnedest to be a part of it. Her mind flashed back to the outfit she had worn when she, Annie, Johnny, and all the rest went to the convention in the next town over before Janus became a permanent part of their lives.",
        "\"Depends on who you ask,\" Johnny uttered with a shrug of his shoulders. \"Personally, I like the Grey Hulk, only because he wasn't around for a long time.\" Referring to himself as the second incarnation of his fractured psyche. Looking down at his leg when his mother gently squeezed it.\n\n\"I know you're concerned, honey, that if this works, you won't be you anymore. I can't pretend how scary that must be for you. But you know we are always going to be here for you in whatever you choose to do,\" Katherine said in that loving motherly voice.\n\n<p align=\"center\">******</p>\n\nLater that night...\n\n\"Okay, everyone, settle down,\" Katherine spoke in an authoritative voice as she stood in front of the TV, commanding their attention. Noting how close Annie and Janus were sitting to John on the love seat to her right while her other two sons along with Ruth and Wanda beside them, Brandan sat in the middle of them in the right recliner staring at her. She hasn't told anyone of what the good doctor had spoken to her about except for John, and he was tight-lipped about it. \"What we discuss here tonight stays in this room. Is that clear?\"\n\n\"Okay, why?\" Ray spoke up, looking right at his mother with Wanda snuggling against him. Noting how she shyly waved at John while trying not to be jealous of his brother as Janus pushed those 36D breasts against his brother.\n\n\"Because it involves your brother, and you know how he likes his privacy,\" Katherine said sternly, glaring at her son.\n\n\"Katherine?!\" Brandan's voice took a hard edge to it at the mention of his son's involvement. \"What do you mean this involves Johnny?\"\n\n\"Do you want to tell them, or should I?\" Katherine asked, peering over at John, who held out his hand for her to continue.\n\n\"Tell us what?!\" Ruth asked; ever since they had left him and his mother at the hospital, she couldn't close her eyes and not see the horrors John had spoken about. She had no idea why her sister wanted to know about it, and she asked repeatedly! When they drove her back to her motel room. After a while, when they were alone, she cried and cried in Bill's arms at how much of a shitty person she had been to John in the past. Praying that if she ever went through a fraction of what John experienced that she wouldn't be faced with the same ridicule she had levied against him since she met him when he was sixteen.\n\n\"What I'm about to say is very dangerous for Johnny, but if it works, it might restore the part of his memories that place took from him,\" Katherine said in a matter-of-fact tone.\n\n\"What?!\" Annie and Janus roared in unison as they each surged from their respective seats.\n\n\"Why didn't you tell us?!\" They asked in one voice, incensed that he wouldn't tell them the moment they were alone.\n\n\"Because I don't know if I want to do it in the first place,\" Johnny said in a cold tone, staring up at them.\n\n\"But why?!\" Annie's voice held a pleading tone to it as she peered down at him. \"Don't you want to remember all the good times and bad that we had together?\" she asked with quivering eyes. Hoping that he could see the pain that was in them at the thought of not getting back what that damnable doctor took from her brother.\n\n\"What happens to me? You all are so hellbent to get this John person that I have no idea who he is back that you don't give a shit what happens to me in the process,\" Johnny said, getting defensive.\n\n\"Johnny, you know the doctor doesn't think that's likely to happen,\" Katherine said with a stern look.\n\n\"That's the point -- he doesn't know?! No one knows; that's why it's experimental!\" Johnny shouted, throwing up his arms. \"I did not survive that hellhole just so you all can just push me aside because you don't like what came out of that place!\"\n\n\"Johnny,\" Janus' tone was soft yet firm, \"no one is trying to push you aside, not me, not Annie, no one,\" sinking down into her seat, \"I know this must be frightening for you... Johnny?!\" Janus was in shock as Johnny abruptly surged from his seat and walked out of the room.\n\n\"Let's give him some time to cool down,\" Brandan said, looking worriedly at the doorway of the den. He could see how and why his son would be so hesitant to discuss this, given their reactions. While yes, he would so enjoy having some part of his son that was taken from them, back, yet not at the cost of the man John had become to date. \"While we wait, what exactly did Johnny mean that it was experimental?\"\n\n\"And you thought this was a good idea?!\" Bill asked from the edge of his seat after his mother had detailed what John's doctor had told her. \"Did you not think having some more doctors messing with his head wouldn't upset him?\"\n\n\"Yes, Bill,\" rolling her eyes, \"I thought of that; I'm not so blind to know how Johnny dislikes them,\" Katherine huffed. \"I knew the moment Doctor Hartwick even mentioned it to me that it would be a challenge to talk to Johnny about it. I'm not trying to get that boy back, as much as I would like to see my boy, but this is about helping Johnny to recover from what was done to him.\"\n\n\"And this place is in Ohio?\" Janus inquired, to which Katherine nodded. Looking down at her growing belly, she knew she wouldn't be flying there, and driving in her late-term pregnancy wouldn't be good for her or their baby. \"Then you'll have to go in my stead,\" she said, looking over at Annie.\n\n\"Me?! I thought...\"\n\n\"You all are so quick to plan something when it's I that would have to go under,\" Johnny said darkly from the doorway.\n\n\"Johnny, baby, it's not like that,\" Janus spoke with pleading eyes. \"I'm only thinking ahead. I won't be able to fly if you do choose to go. I'm not pressuring you into anything. If you don't, it doesn't matter to me. I love you just the way you are; if you get your memories back, even partially, wouldn't that be a boon for you and our baby?\" she asked, seeing his mind working behind those green eyes of his.\n\n\"How could memories of a person I don't remember help?\" Johnny asked, confused. \"What if the reverse happens? Have you thought of that? What if, while messing with my head, they do something to erase everything?! I will not lose myself to placate you all. I will not lose Julia because you want a boy that's dead and gone, back!\" he growled, staring at his mother.\n\n\"Let's all settle down; we've all gotten a little hot under the collar,\" Brandan spoke, being the voice of reason. \"We have a month to discuss this, right?\" Looking to his wife, who nodded. \"Johnny, no one is saying make a choice now; let's see what we can find out and go from there. That's a reasonable compromise, right?\"\n\n\"If I'm not satisfied?\" Johnny asked with a pointed look at his father.\n\n\"Then we'll drop the matter entirely and never bring it up again, won't we?\" Brandan uttered, peering at Katherine.\n\n\"Of course, Johnny, please, I know you're upset right now, and you probably are thinking we're trying to change you into something that you might not want. But that's farthest from the truth; all I want is to help you, so you aren't having any more of these seizures,\" Katherine said, praying that he could understand where she was coming from.\n\n\"How is an experimental drug helping me?\"\n\n\"Because it can reverse what that doctor did to you,\" Annie exclaimed, surging from her seat. Her 46DD bouncing in her bra, which strained to keep those voluptuous orbs contained as she did. \"That's what I want to believe,\" cutting her brother off when John started to speak, kneeling on the cushion of the couch where she had just been sitting, \"Johnny, look at me,\" she spoke in a sweet tone. \"Have I ever asked you to change who you were to be something I know that you are not?\" Seeing the scowl forming on his lips knowing that was the truth. \"Have I not been understanding, have I not done things that I find rather silly and far too revealing?\" Referencing the outfit she had worn to the comic convention as 'Lady Death.'\n\n\"What are you getting at Annie?\" Johnny grumbled, crossing his arms.\n\n\"Come closer,\" Annie said in a sweet-like voice as her right index finger beckoned to her brother. A curvaceous smile formed on her lips as he took a step and then another towards her and Janus. \"Answer me, Johnny, have I or have I not made you do things that you didn't want to do?\" she spoke lightly, running her hands up John's chest. Noticing how Janus rested her right arm on the back of the loveseat, wearing a warm smile on her face as she propped herself upon it. Seeing that light dancing in her green eyes as she stared at the two of them. Smirking sinfully at her brother when his gaze darted down as she pressed her breasts into his chest when she pulled him closer.\n\n\"No... you haven't,\" Johnny admitted reluctantly.\n\n\"I'm not saying you should or shouldn't do this, just that you don't bat it off without knowing every single fact before making this decision, okay?\" Annie spoke in a loving tone as her thumbs lightly brushed along John's cheeks. Seeing those eyes of his searching hers. \"I'm not saying I wouldn't love to know that you can finally remember our first kiss...\"\n\n\"Already did,\" Johnny blurted out, watching the shock and glee spreading rapidly across his sister's face before huffing as Annie quickly pulled him into a crushing embrace.\n\n\"You don't know how happy that makes me, Johnny,\" Annie whispered into his ear.\n\nGlancing out the corner of his eye as Janus took hold of his left hand, feeling the featherlight touch of the pad of her thumb upon the back of it when she held it in her hand. His sister's sweet perfume filled his nose just like it had done on that fateful day when her soft cheek brushed along his. He was uncertain as to why Annie would get so much happiness out of that memory. The way he remembered it, given how he had to live it out all over again, was not a very good day for any of them.\n\nKatherine felt her cheeks heating at how intimate that kiss was that Annie had planted on John's lips. Looking over at Ray when she heard him muttered about if she was ever going to kiss him like that, only to have Wanda pounce on him. Ruth and Bill just simply looked on as Ruth snuggled against her eldest son's arm as Ruth rested her left cheek on it. It was only when Brandan cleared his throat when the two of them were getting a tad too frisky in front of everyone that he brought their embrace to a stop.\n\n\"Mmm...\" Annie hummed, dragging her lower lip along her teeth as she gazed wantonly at her brother. Feeling how her hardening nipples were pressing into the fabric of her bra. \"That's what I remember,\" she said dreamily. \"Johnny, can you promise me you'll hear it all out? No one is forcing you to make a decision right at this moment; just let us at least hear everything before you do. Can you do that for me?\"\n\n\"Us,\" Janus cut in, \"all three of us.\"\n\n\"Fine, I'll listen, but don't expect much from me,\" Johnny sighed.\n\n\"That's all we're asking for, Johnny,\" Katherine said from the spot she had yet to vacate. \"I'm not saying that this will all work out, and everything will be sunshine and rainbows. But as a family, don't you think you would give us a chance to help you heal from what that man did to you?\" Holding her breath when those cold, hard eyes of his flickered over to her. She knew what he was thinking; it was clear as day. He wouldn't have been under that man's care if they had listened to his pleas.\n\n\"Well then, how about I fire up the grill?!\" Brandan spoke, rubbing his hands together as he rose from his seat.\n\n<p align=\"center\">******</p>\n\nFriday, four days later...\n\n\"Is a John Masters in your class?\" Came a voice over the intercom as John sat in his seventh-period class. A scowl formed on his lips at the sound of his given name.\n\n\"Yes, he is. May I ask to the nature of this interruption?\" His English teacher asked as the late fifties man turned towards the intercom after pressing the signal button to transmit to the main office.\n\n\"Please send him to the office; his ride is here.\" A large smile formed on his lips, knowing he was free from the looks that his classmates constantly levied at him.\n\n\"They finally going to cart you off to a loony bin?!\" Snickered one of the more preppy females in his class as John rose from his seat as he grabbed his book bag.\n\n\"No, not this time, been there, done that, as the saying goes. But I'll bring back some really fancy kneepads for you since that's what you spend most of your time on,\" Johnny retorted, earning him a few slack jaws at his words.\n\n\"Wow. You can actually form words that aren't a one-word answer,\" the girl sneered as she glared at John hatefully. \"It's a wonder how you'd ever get laid.\" Snorting as her friends chuckled along.\n\n\"While it might not be as... lengthy as your rap sheet given the running tally in the men's room on how many of them have slept with you, your assumptions are wrong, once again,\" Johnny spoke, brushing off her remark as if it meant nothing to him, which it didn't. Glancing out of the corner of his eye as his teacher franticly wrote out his hall pass so he wouldn't cause any more of a scene. Noting how she was fuming in her seat, red as a beet as that haunting silence filled that brick and mortar painted room.\n\n\"John... just go,\" his teacher said, holding out the pass for him. He couldn't say anything against the boy; he was, after all, verbally assaulted. He just didn't know John would drop that truth that everyone knew but kept tight-lipped about. John wore a taunting, wicked grin on his face as he glared at the girl as he left the room.\n\nMaking a quick stop by his locker, grabbing the books he would need knowing where he was going doing it on Sunday night wouldn't be doable given the late hour they would likely get back by. In truth, John has been looking forward to a little peace to himself for a bit, given everything that's been going on as of late. His bookbag jostled against his back as he rounded the corner of the four-way intersection of the hallway that led to the main office. A smile formed on his lips as his eyes fell upon that alluring body of hers. Seeing that light blush on her cheeks as those masterful fingers brushed her golden strands behind her ear as she stood there waiting in front of the Principal's office\n\n\"I'm sorry Johnny, I told them to call you, Johnny, but...\"\n\n\"It's fine; I'm used to them not listening,\" Johnny said, cutting Janus off. \"So, busting me out, huh?\"\n\n\"Mmmhmm,\" Janus hummed, glad to see that John had moved past the open hostility at being referred to that name. However, given how it was high school, and like all of them, there were those that liked to belittle those that didn't fit in. Like the JV basketball player that was lucky enough to stumble upon the sight, or that was what it was going to be until the boy focused his camera on Janus, soon as the two of them left, John had become rather popular given the power of social media.\n\n\"You sure you don't need to be in class?\" Johnny asked, noting how his sister leaned against the side of Janus' SUV.\n\n\"Told you, I switched days, so I'll be with you always,\" Annie spoke in a loving, sexy tone.\n\n\"Just don't want you failing because of me,\" John uttered, noticing the glimmer of light in his sister's eyes when he said that.\n\n\"I promise, all taken care of, so we can just relax all weekend if you want, Johnny,\" Annie cooed, dropping the subtle hints of what was to come.\n\n\"Oh, I got a place I so need to show you,\" Janus said, taking Annie by her left arm, her glee to be able to share it with someone danced in her eyes.\n\n\"Well, then, I definitely have to see it,\" Annie answered with an eager nod.\n\n\"Now, let's hit the road, Johnny. Do you want to stop at the fish shack and grab dinner on the way to the house?\" Janus inquired, watching how John placed his book bag into the back as she peered at him from the driver's seat before pulling away.\n\n\"Sure. Shrimp, though...\"\n\n\"I know, Johnny, no fish,\" Janus nodded sternly, knowing the reason why he disliked fish.\n\n\"Johnny?\" Annie's sweet, enticing voice drew his attention as she peered around her seat.\n\n\"Hmm?\"\n\n\"I think Yasmine is going to miss you,\" Annie said, referring to how broken up about it she appeared to be when they saw her off at the airport last night.\n\n\"Maybe,\" Johnny mumbled. Although, turning his gaze to peer back out the window, he had to admit Ruth's sister wasn't a bad person to know once you got past the anger.\n\n\"No, I think she will, Johnny,\" Janus joined in as they turned on to the road that would lead them to the interstate onramp. \"Before what happened to her, I bet she was one of those types of people that can make friends with anyone.\"\n\n\"But why me?\"\n\n\"Just because you deal with what you deal with doesn't mean you aren't worthy of friendship,\" Annie uttered in a caring tone as her touch was light on his knee. \"Everyone needs someone as strong as you in their lives; I know I do.\" Loving how she could make those cheeks blush. Which only happened with her and Janus, so she knew it was special. She knew he had difficulty with saying that word, given what happened to the first girl he remembers that he fell in love with. \"Plus, I know how much you enjoy having her to chat with about comics. I know that was the main discussion with you to after the meeting on Wednesday.\"\n\n\"Yeah, what can I say? She has good tastes,\" Johnny admitted with a shrug of his shoulders.\n\n\"So you up to putting the baby's room together tomorrow?\" Janus asked, enjoying how they all have gotten into the swing of things when it came to their relationship.\n\n\"As long as it isn't from the same place you used for the house here,\" Johnny grumbled, recounting how frustrated he had gotten, even his own father had trouble understanding the wording of their instructions on how to put the crib together. Which they ended up getting the one they all had used when they were growing up instead after his father had brought it down from the attic and made sure no stowaways were onboard.\n\n\"Agreed, not from that place again,\" Janus nodded along.\n\n\"Hey, I was thinking after we finish with the baby's room, you and I could take a little stroll. It's somewhere where we used to go, but not if it brings on another episode.\"\n\n\"So, Johnny, have you given thought about the prom?\" Janus inquired curiously as her green eyes peered back at him from the rearview mirror.\n\n\"Do you really want to go?\" Johnny held back his groan as they've been having this conversation ever since he'd gotten home from the hospital.\n\n\"I do,\" Janus chirped in excitement. \"You know I never went to mine, and I know being around, so many people isn't something you like unless you're saying you're ashamed to be seen with your old...\"\n\n\"You insane?!\" John knew what that was bait for, and he wasn't falling for it as he cut her off. \"Have you looked at yourself, you're fucking hot, and you damn well know it,\" Johnny huffed, crossing his arms along his chest. \"So don't you go trying to guilt me into that your old bit.\"\n\n\"Yes, dear,\" Janus cooed in a teasing, playful tone. \"But, Johnny, you only get one prom in your life, don't you want to go?\"\n\n\"No, but if you want to go, I'll go to make up for missing yours,\" Johnny replied after a few moments of thought.\n\n\"I promise, Johnny, it's going to be magical,\" Janus said in a dreamy voice.\n\n\"We'll go shopping for the two of you next week,\" Annie said, knowing alone helping to deal with his troubles would be difficult on the best of days on her own. She got that didn't mean she liked sharing her brother. Yet she couldn't deny that the two of them had a bond, a bond that she knew she and Johnny shared as well. She could see how good she was for him. So, if she had to share her brother to help him heal from the pain that was inflicted upon him, she'd walk that path if it meant her brother could heal. That's all that mattered to her, his wellbeing.",
        "\"Come on, let's eat before the food gets cold. Johnny, you can unload the car while Annie and I put up the food for our stay after we do,\" Janus said as she and Annie lowered the cooler packed with ice that held their meat and the other cold items they would need to the ground behind the SUV.\n\n\"Okay,\" Johnny said, gathering up their to-go containers and his book bag as he slid out of the rear passenger seat. With Annie pulling the cooler behind her in step with him as Janus led the two of them towards their front door.\n\n\"I got a little something for you for later,\" Annie whispered heatedly into John's ear as Janus unlocked her front door. \"You'll like it, trust me,\" she cooed when John flashed her a look. Listening to Janus quickly disarming the alarm system that she had installed not for burglars, no, it was her safety net should her ex-husband come looking for her. Not that he has since their divorce, yet old habits die hard.\n\n\"Come on, you two, let's go enjoy our dinner,\" Janus said with a sweet, warm smile on her lips as she looked at the two of them.\n\nThe sounds of merriment filled Janus' lake house as the sky darkened and the sun fled from the rising moon. However, one by one, the lights that illuminated the ground floor found their own rest, then the second floor as they moved towards their bedroom. Which was hidden behind a secret door in case her ex tried to break in during the night. John watched how the moon danced along the surface of the lake when he stood there gazing down at it from the hidden third floor. Feeling the tips of Janus' finger's along his shoulders as she brought him into her embrace.\n\n\"Johnny.\" Janus's voice was soft in John's ear as she pressed her chest against his back as he stood there in front of her window. \"Come to bed; we have a big day tomorrow; we're going to need our rest,\" she whispered sweetly into John's left ear.\n\n\"Johnny?!\" Annie's alluring voice called to him as she stood in the doorway of their bathroom. \"How do I look?\" she asked, flashing her brother an alluring smile as she stood in a black tinted, see-through nightgown.\n\n<p align=\"center\">*******</p>\n\nSunday night...\n\nJohn struggled to breathe as his mother hugged him tightly the moment he, along with Janus and Annie, walked in a little past six that evening. Casting his family a look when Katherine rocked him back and forth.\n\n\"I've missed you so much,\" Katherine finally spoke after that rather long hug. Greeting her daughter and Janus soon afterward.\n\n\"How was your weekend?\" Brandan asked, taking his son's bag from him as the rest joined them in greeting their return.\n\n\"Not bad,\" Johnny admitted, not bringing up the fact that a group of guys kept coming around demanding that Janus and Annie show them their tits.\n\n\"Good, I'm glad you had fun; let's get your stuff put away,\" Brandan said, squeezing his son into his side as they headed off towards his room.\n\n\"So... how was he?\" Katherine asked, fearing the answer.\n\n\"We were pretty busy all weekend, so not a whole lot of things got his attention,\" Janus spoke, knowing that John's ability to survive on his own weighed on Katherine's mine and that she was there to outplace her.\n\n\"Good,\" releasing a pent-up breath, \"now how was the lake really?\" Katherine asked, knowing John wouldn't have said anything to her if something had irked him. For fear that she would put a stop to it all. She would if it endangered her son's mental health.\n\n\"Couple of guys harassed us...\"\n\n\"Like the one's before?\" Wanda asked, stepping forward; her mind flashed back to that day.\n\n\"No,\" shaking her head, causing her blonde strands to bounce about, \"I think they were just a couple of weekenders given how the numbers on the boat I wrote down belonged to a rental place. \"I doubt we'll see them again.\"\n\n\"Remember what Johnny did?\" Annie asked; a little chuckle escaped her lips, causing Janus to smile as she nodded along.\n\n\"What did he do?\" Ray asked, intrigued at what his brother had done during their time away.\n\n\"Got up from his spot on the edge of the float where he was fishing, while we sunbathed, and ripped off his shirt and threw it down and said: Here! You happy now, you assholes?!\"\n\n\"Then he said: Don't make me learn how to walk on water to come over there and beat your asses. Now get the fuck out of here,\" Janus said, adding on, feeling a warmth spreading through her body recounting that Saturday afternoon. Noting how Bill looked down at his own chest and gave his pectoral muscles a lift.\n\n\"Yeah, I got him beat,\" Bill said, getting a laugh out of everyone.\n\n\"Johnny?\" Ruth's gaze turned towards him as he and Brandan rounded the corner.\n\n\"Hmm?\"\n\n\"Yasmine was wondering if you would call her,\" Ruth stated, while she was happy that her sister was finally opening up to someone, yet she didn't want to place undue stress upon John. Not that she didn't think he couldn't handle what they had spoken about, she would never have asked him to speak to Yasmine if she wasn't sure he couldn't. She just didn't want to overburden him with things when or if he needed space.\n\n\"Like right now or...?\"\n\n\"Later would be fine, just not too late; it's already nine there,\" Ruth said with a warm smile.\n\n\"Okay, I'll call her,\" Johnny nodded.\n\n\"Why don't you come and tell us all about how the lake was,\" Wanda said sweetly, placing her hand lightly on John's left arm. \"So what did you all do during your stay?\" she asked, looping her arm around his and guiding John into the Den where the rest of them followed after.\n\n\"Seems like you had a good time, Johnny,\" Katherine said, a little saddened that her little boy was growing so fast before her eyes that she couldn't look at her son like a little boy that needed his mother any longer. Not that she was going to halt this. She knew if she interfered, that would only ruin every advancement that her son had made in the past couple of months. Still, she would always think of John as her baby, no matter how old he was. Feeling Brandan squeezing her into him when she knew he could sense her distress. Her eyes flickered up, noting how Annie was slightly nudging John's side. Why, she couldn't say. Yet, it seemed to her they had discussed something prior to coming home. Her chin lifted as her eyes followed how John rose from his seat. Her heart hammered in her chest as John strolled over to the couch she and Brandan were sitting on. Noting how Ray quickly got to his feet and scurried over to the love seat to give them room on the couch.\n\n\"Hi,\" Johnny said as he sat down between his mother and Wanda.\n\n\"Hi, baby,\" Katherine responded with a growing smile on her lips. Her heart leapt into her throat as John allowed her to actually hold his hand for the first time in a very long time. \"Did you have fun with Janus and your sister over the weekend? Good, I'm glad,\" she said sweetly when John nodded his head. Her thumb brushed along the back of her son's hand. She was going to treasure this moment for the rest of her life.\n\n\"So when is the construction going to start?\" Johnny asked, ignoring how Ray was trying to worm his way into Janus' bra.\n\n\"They told me, the company we went with,\" nodding to Janus, \"that they'll start Monday and go from there. Said it wouldn't take long given how it's just a connector with limited electrical work,\" Brandan said, peering around his wife to gaze at his son.\n\n\"Okay,\" Johnny said with a nod. His gaze falling on Annie and Janus, who were blushing in their seats as he did. He had to admit living with only the two of them wasn't so bad. It was quieter than he would have liked; then again, he has lived in a house full of people all his life; it was just going to take him some time to grow used to Janus' large house.\n\n\"Johnny, would you mind coming with me for a bit?\" Bill inquired after they all had caught up.\n\n\"Me?\"\n\n\"Yep, you li'l brother,\" Bill said, smiling at John from across Ruth's and Wanda's chest. \"Ray, come with,\" he ordered in that big brotherly voice as he and John rose from their seats.\n\n\"Okay, what's this about?\" Johnny asked once his brothers had brought him to a stop in the dining room.\n\n\"Can you teach us to dance like this?\" Bill asked, holding out his phone of the video clip he saw on Twitter. Noticing how John watched it without the volume on as he held his phone in his hands.\n\n\"I assume you have some music for this?\" Johnny spoke, his eyes flickered up from the phone's screen.\n\n\"I do, well Ray does; he's the one that found it,\" Bill said offhandedly.\n\n\"Yeah, shouldn't be too hard,\" Johnny said, hearing the voices from the den conversing about everything that happened over the weekend. \"Just getting the two...\"\n\n\"Three of us,\" Ray cut in, seeing the confusion in John's eyes.\n\n\"We were thinking if you wouldn't mind joining us, the four of us, I mean, to a dance club soon,\" Bill said, knowing this was going to be the hardest part. Getting John into a room packed full of people.\n\n\"Define soon,\" Johnny spoke with a hard edge to his voice.\n\n\"Say in a month, that should give Ray and me some time to get the moves down,\" Bill said, praying that John wouldn't say no.\n\n\"Only if Annie and Janus can come with me...\" His body rocked to the side as Annie threw her arms around his neck.\n\n\"I'd love to be your date for the night, Johnny,\" Annie whispered lustfully into his ear. Recounting how he had her moaning and begging for him to fuck her harder and faster on Janus'... now their bed that very morning. Also, remembering the moans that weren't hers filling the house when Janus and John would sneak away for their own fun.\n\n\"We'll have to see how I am that day, Johnny; I don't know if I'll be up for much dancing by then,\" Janus said, smiling lovingly at John as she stood in the doorway to the den. Feeling the rest of them at her back as she and they looked on.\n\n\"Then I'm...\" John's voice died in his throat as Annie had that look in her eye warning him not to renege on his promise.\n\n\"Johnny, you will take your other wife dancing...\"\n\n\"Wife?!\" Brandan had to catch Katherine as she fainted from shock.\n\nTo Be Continued..."
    ],
    "authorname": "soul71",
    "tags": [
        "brother",
        "sister",
        "drama",
        "mental trauma",
        "siblings",
        "brother sister"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/unbelievable-pt-09"
}