{
    "title": "Band Camping",
    "pages": [
        "Author's Note: \n\nSo it's been a long time since I last posted. This story began in 2015, was edited by GaiusPetronius through the first half or more, and recently, I finished it and have self-edited the last bit. Hopefully it still flows. Any errors are, of course, mine. \n\nAll characters engaged in sexual acts are, as always, over the age of 18. \n\nAnything in this story that resembles real life in any way is coincidental or used as a product of my (weird) imagination. Except the movie reference. If you lived through the 2000s as a teenager, I'm sure you know what movie I'm referring to... \n\nEnjoy! \n\nRex \n\nChapter 1 -- A First-Time Do-Over? \n\nI remember how much stress -- and how much significance -- got placed on losing one's virginity. Whose idea was it to begin telling hormonal teenagers they needed to worry about having sex before they turned 18? Looking back, I wish someone had come along and slapped me in the face and told me, \"Stop it. Just stop it!\" \n\nIn the end, after all the hype and all the craziness over virginity, losing it felt more like a letdown -- exactly what happened with my first girlfriend. We were both young, and of course, we both thought we'd found that \"forever love.\" Psssh, right. What we'd found was mutual masturbation partners. Heck, even that might have been more exciting than the rushed, awkward, and truly unsatisfying experience losing our virginity turned out to be. \n\nAfter that first time together, well... we broke up. I guess we weren't exactly forever-bound by any means. I mean, it wasn't, like, next-day break-up or anything, but it may as well have been. We went on for a few months, less intense than we'd been before the sex, and found out that we had plenty of different ideas and dreams. \n\nSo, I made a personal declaration: I was going to be a virgin again -- figuratively speaking. Sure, I couldn't undo the past, but I had actually learned quite a bit from it. I learned not to rush (two-pump-chump, anyone?). I learned to take my time, be considerate and loving, and not so much to focus on the task at hand, but just to enjoy the experience. Sure, I was idealistic and na\u00efve, but I knew what I wanted to do whenever the opportunity arose again. \n\nOf course, whenever I told someone about my personal decision to become a virgin again, they laughed. I kept it to myself after the first two girlfriends broke up with me, thinking I was lying or manipulating them when I revealed my \"reclaimed\" virginity. I guess, in a way, they were right, since I worded it that I actually was a virgin, leaving out the small detail that I wasn't a true one, but only a self-declared one. \n\nThis was yet another proving point to my first theory that people place too much weight on virginity -- as if being a virgin was a toxic disease, the only cure being awkward teenage sex riddled with insecurities and regrets. \n\nAll of that brings me to the reason I'm telling this tale: I wish to pay homage to the woman who cherished my Virginity 2.0 -- a woman I am more than pleased to have given it to, a woman I wish I had given my true virginity to, and a woman I will always remember. \n\nAnd it all started this one time, at band camp... \n\nChapter 2 -- This One Time, At Band Camp... \n\nYes, I know, that phrase is a cheesy, lame, and pathetic attempt at humor based on a raunchy movie that was somehow met with box-office success for its crude humor, lewdness, and unashamed tale of teens attempting to lose their virginity before their senior prom. I find it even more amusing that the very same direct and frank telling of teen romance woes (including gratuitous nudity) that was \"pushing the envelope\" at the time, is now common fare, seen in prime time on network TV. Young children are exposed regularly to this puerile innuendo (except maybe for the nudity... which still gets blurred or edited out, or somehow made passable by placing as much skin as possible on display without slipping in that shameful nipple or \u2014horror of horrors! -- a penis. But naked butts, both female and male, are free game nowadays?) \n\nSeriously, however, I met the woman I shared my reclaimed virginity with at \"band camp.\" Technically speaking, that's what you could call it. In reality, it was a grueling, exhausting experience aimed at weeding out the weak, out-of-shape, and pathetic marching band losers. Okay, that may have been a bit excessive, as I was, at one point in my life, one of the very same weak, out-of-shape, pathetic band geek losers. \n\nBut high school marching band and a major university's marching band are like comparing pee-wee football to professional football. In high school marching band (my high school was small, class 2A, so my experience may be a little lightweight compared to a 4A or even bigger school), we practiced once a day, during the scheduled period for band class, under one hour, with about ten minutes of it spent by the director/teacher trying to get the weak, out-of-shape, pathetic band geek losers to get in line and pay attention. It's nothing short of a miracle that the eighty of us somehow managed to make it to State Marching Band competitions every year I was in the band (although we never won, always placing second or lower, but that's beside the point). \n\nSo, my senior year, I'm thinking I'm pretty hot shit, marching trombone in a band of eighty members, only three of them qualifying as weak, out-of... (you get the idea), that placed second in Class 2A State competitions, beat out by a 3A team that just barely got bumped back to 2A standings, by 2 points out of 100. \n\nNow, fast-forward to the month before I began my freshman year at a major Division I NCAA-accredited university -- where I got my first taste of \"Band Camp Hell.\" Yep, that's what they called it, and they weren't kidding. The first week of drills had absolutely nothing to do with playing your instrument. \n\nOh no, the director (most likely one of Satan's most cherished spawn) thought it necessary to have everyone run twenty yard ladder sprints while carrying sixty-five pound drums... then \"karaoke\" agility runs, high-stepping runs, and a final one mile run. And that was only week one. \n\nDuring this first week of Hell, I met her. She was a veteran, having been in the marching band already for two years, but this year, she was sitting out, convalescing from the extensive knee surgery she'd had that summer. She was still on crutches. And from a distance, when I first saw her, I assumed one of the band members had brought their kid along for practice. I learned later that she normally stands at a proud four feet ten inches, but that day, hunched over her crutches, she could maybe measure four and a half feet tops. \n\nAs I approached, though, I saw her standing next to a trombone (my instrument, too), and noticed she had quite attractive breasts, despite her diminutive stature. (Excursus: \"Quite attractive\" means different things for different people, so here goes: her breasts sat perfectly round upon her chest, proudly jutting out at just the right slope, just the right angle, and just the right size -- neither too big, nor too small. Judging from appearances, they were C cups, charmingly taut and toned. They looked like perfect handfuls. But beyond the physical desirability of them, they complemented her overall figure. From the side, she looked like a model, despite whatever she lacked in height. From the front, her shirt wrapped around them and snugly hugged her trim stomach. We now resume our original programming.)Her first words to me were: \n\n\"Hey, buddy, I may be down here, but my eyes are still up here.\" Busted. As she said this, she pointed to her eyes and used one of her crutches to whack the side of my leg. \n\n\"Ah, Midget, you can't fault him for looking,\" this coming from another trombone player, who came up behind her and rested his head on hers. \"They are quite possibly your best assets.\" \n\n\"Fuck off, Donkey,\" she swung her crutch around, and, to my amazement, barely missed the one she called Donkey. (I'd learn later that the nicknames were sort of like an initiation into the trombone line, based upon their recipients' tendencies or other embarrassing behaviors, and were meant to be insulting or degrading or both, all given, of course, out of love and amiable affection.) \n\n\"Midget! Donkey! Knock it off! We don't need anyone else on crutches!\" \n\nI turned to see a short guy with wild blonde hair stroll up to us. \"Ah, you're one of the new guys. Welcome to the Bruces.\" \n\n\"Bruces?\" I raised my eyebrow at that. \n\n\"Hehe, yep. We're the Bruces. Make it through Hell and we'll tell you why we're the Bruces -- right, Bruce?\" This, he said to the one called Donkey. \n\n\"Right, Bruce,\" he said back, in what sounded like an Australian or faux-British accent. The others, who had gathered around during this exchange, were chuckling. \n\n\"But, let me introduce you and the other two new guys to the rest of the Bruces. G'DAY, BRUCE!\" he finished with a yell. \n\nThe speed at which everyone jumped into formation startled me. Within seconds, the trombone section was in line, at attention, and looked as if they belonged in a crack military unit, not broiling here in the July sun for a marching band camp. \n\n\"You'll learn everyone's nickname first, and, if they like you, they'll tell you their real name. I'm called Gas Bruce, and I'm section leader, along with Baby, the other section leader. Any questions, you come to us first,\" he said, as he gestured to a long, dark haired, and short-but-not-quite-as-short-as-Midget girl stood away from the line, next to him. \n\n\"Right. We follow every band-wide rule, and we follow our own Bruce rules,\" Baby spoke up, her voice much louder than her size would have suggested. \"Three rules! Number one...\" \n\n\"RESPECT ONE ANOTHER!\" My head snapped back as everyone in line shouted the words in unison, nothing short of a deafening roar. \n\n\"Rule number two...\" Baby started. \n\n\"WE WORK AS ONE!\" Again, everyone shouted. \n\n\"And rule number three...\" \n\n\"THERE IS NO RULE NUMBER THREE!\" \n\nI wanted to laugh, but everyone remained stoic, solemn, and straight-faced, eyes fixed on the horizon. \n\n\"Ok, remember them well, Newbies!\" Gas finally grinned, looking at the three of us \"newbies\" standing before the line. \"I'll have everyone state their given names for you. Baby?\" \n\n\"You may have guessed, I'm called Baby.\" She turned to the left-most person in line, a cute, blonde haired girl. \n\n\"Hand Job!\" No grins from anyone else, so I tried my hardest to mask my snicker at that one. \n\n\"Misty!\" A skinny, short-haired guy shouted next. \n\n\"Donkey!\" The guy who had been teasing Midget yelled out. \n\n\"Midget!\" Even on crutches, and standing less than five feet, she looked intimidating. \n\n\"Boobs!\" A large-busted girl shouted, her breasts somehow jiggling just from her shouting her nickname. \n\n\"Sasquatch!\" A rather tall, hairy looking fellow yelled. Not too surprising a nickname. \n\n\"Dick!\" Another cute, blonde girl shouted. I subdued yet another chuckle. \n\n\"Nipple!\" The final guy on the right end yelled. \n\n\"Great. Now, to prevent confusion, you each get a number based on your name,\" Gas addressed the three of us standing in front of the line. \n\n\"One,\" he said to the guy to my left. \"Two,\" to the guy to my right, \"and Three,\" to me. \n\nBaby spoke up next. \"Listen carefully to Gas or myself; we're giving drill instructions. Go grab a snare from the sidelines and get prepared for ladders!\" \n\nThat began the first week of Hell. I was grateful I had chosen to run in track my senior year. If not for that, I probably would have dropped out from that week alone. As it was, Two left, leaving One and myself as the only newbies to the trombone line. \n\nThe first time I actually got to talk to Midget was at the end of the fourth day of Hell. I didn't have a car, so I walked the two and a half miles to and from practice every day, since the field we used was off campus. I had just gotten to the end of the parking lot when I heard a horn blare behind me, making me almost drop my trombone case and jump quickly to the side. I quickly spun around and saw a small car that made me do a double-take -- it looked like an older British car, my double take confirming it with the MG logo -- with Midget in the passenger seat (where any American car's driver would be) and a girl who looked like her double driving. They were laughing, clearly amused at my startled reaction. I picked up my trombone case and stepped back out of the way as they pulled forward a little farther. \n\n\"Need a ride, Number Three?\" The driver, now that I could see her closer, was like a direct clone of Midget, only with blonde hair and blue eyes, whereas Midget had brown hair and hazel-green eyes. I was assuming she was short as well, as the two girls were sitting at the same height. \n\n\"Sure.\" Who could pass up a ride offered by two incredibly short and just as incredibly attractive twins? I sure wasn't going to. \"You know where--\" \n\n\"Jacobs Hall, right?\" Blonde-clone of Midget replied, cutting me off, as I buckled up in the back seat. \n\n\"Uh... yeah, but how did you--\" \n\n\"Jess lives there, too,\" Midget cut in. \n\n\"Do you two always cut--\" \n\n\"Yep,\" they both replied, in perfect unison, giggling. \n\n\"Wow. But wait, if you're both juniors, why are--\" \n\n\"Jess just loves the dorm life. I live just off campus in a studio apartment.\" \n\n\"I do love dorms, don't ask why, I don't even know. So, Number Three, what's your name?\" Jess asked, glancing back at me from the driver's seat, flashing a grin that one might call wicked. \"We'll tell you ours if you tell us yours.\" Holy crap, I felt a stirring in my pants from that... and it had nothing to do with anything overtly sexual in nature. Curse my overactive imagination, conjuring up a fantasy image of the two of these lovely twins stripping before me... On second thought, I think I'll keep that image to myself. \n\n\"Uh...\" my voice cracked. I cleared my throat and tried again. \"Daniel Young. Most people call me Dan.\" I hoped they didn't hear that squeak in my voice, or see the blush I felt on my face. \n\n\"Alright, Dan. I'm Jessica, and this is my twin. Most people call me Jess, but please don't call me Jessi. I don't like it. It makes me want to hurt people.\" Midget chuckled, but didn't say anything. \n\n\"I'll keep that in mind. Nice to meet you, Jess.\" \n\n\"Likewise. I'd shake your hand but... driving.\" \n\nI nodded, realizing I was doing so while she wasn't looking at me. \"Hehe, right.\" \n\n\"So I play clarinet in the band. When we start band-wide drills we'll be seeing each other more...\" she paused and moved her head so that, where I was sitting, I could see her lips in the rear-view mirror. She purposefully and quite sensually licked her lips, before continuing, \"when we blow our horns.\" \n\nThat gave me more than a stirring down below. In fact, it made me semi-hard. Obviously she was teasing, but it still had the effect that I'm sure she knew she was having on me. \n\n\"Jess, stop it. I'll tell Jim.\" Midget finally spoke. \n\n\"You wouldn't...\" \n\n\"Try me.\" \n\n\"Why? I'm just having a little fun.\" \n\n\"Yeah, at the expense of one of my section-mates.\" \n\n\"Sheesh, you Bruces are a little bit Bruced in the head, taking all that shit way too seriously.\" \n\n\"Ha! If every section of the band had as much dedication and cooperation as we do...\" \n\n\"Yeah, I know, we'd be the best band in the nation. But we don't compete with anyone, so what's the point?\" \n\n\"School pride? Or how about a sense of pride in what you do?\" \n\n\"Hrmph.\" Jess didn't say any more at that. A short silence followed in the car. \n\n\"Oh, right, I haven't told you my name,\" Midget broke the silence. \"I'm Jennifer, but most people call me Jen... or Midget, as I'm sure you can guess why.\" \n\n\"Ah, right, the car you guys drive, huh?\" I tried, hoping they'd get the joke. It was a long shot, of course, considering it was a rather obscure reference to an older car model, and one would have to know the history of the car company. \n\n\"No, because of our height, duh!\" Jess piped in, right away. Jen looked sideways at her, then twisted in her seat to glance back at me. The twinkle in her eye and the grin on her face told me she got it, but that glance was enough to get us both to laugh. \n\n\"Jess, you're such a ditz!\" Jen laughed out loud. \n\n\"What? It's your height, isn't it?\" \n\n\"Yes, but the maker of the car we drive used to produce the MG Midget.\" Jen explained. I grinned like a fool, so happy that she got my joke. It was a stab in the dark, but I was impressed she knew some car history. \n\n\"So I'm a ditz for not knowing some ridiculously obscure and pointless fact about this rust-bucket? And how the hell do you know about car history?\" Jess turned to her sister. \n\n\"You're always a ditz,\" Jen looked back at me and winked. \"The MG Midget was, like, one of the most popular compact coupes way back. Right, Dan?\" \n\nAh, that's what the wink was for. The Midget, if I remembered correctly, was only produced in the UK. \n\n\"Uh, yeah,\" I ventured, assuming she wanted me to help trick and tease her sister. \n\n\"Really? Like, VW Bug popular?\" \n\n\"More. They're everywhere. I'm surprised you don't know about this.\" Jen glanced at me again, a grin spreading across her face. These twins seemed like a lot of fun to be around. \n\n\"C'mon, you know I'm not a car person! To me, they're all just small cars, big cars, vans, and trucks.\" Jess glanced over at her twin, obviously seeing the grin. \"Wha... oh fuck you! You did it again, didn't you!?\" \n\n\"God, you're so easy!\" Jen burst out in laughter. I couldn't help it -- I had to laugh, too. \n\n\"Was all of that made up then?\" Jess sounded a little bit annoyed. \n\n\"Most of it. But Dan's reference to cars was accurate. Remember when I got the nickname Midget, my freshman year, and one of the upper-classmen that year drove that tiny-ass car? That was an MG Midget.\" \n\n\"Oh, you mean that clown car Doug always drove was actually called a Midget?\" \n\n\"Yep.\" \n\n\"Gotcha... that explains a lot of those car jokes you've made that I never seemed to get...\" Jess admitted. \n\nAgain, Jen and I made eye contact and we chuckled. The laughter, teasing, and good times continued until we reached Jen's apartment. I offered to help her to her door, considering her crutches, but she politely declined. She waved at us and shut the door. She was quite an amazing woman, so tough and yet so short... \n\n\"You know, Dan, I'm not a chauffeur. And I don't bite. You can sit up here with me,\" Jess's voice made me realize I had been staring at Jen as she crutched away. \n\n\"Oh, right, ok.\" I hurried around to the front... driver... side and climbed in next to her. I definitely wasn't used to British cars and the seats being opposite to what I was used to. \n\n\"It's weird being on a different side, huh?\" Jess asked, noticing how awkward I felt sitting on the left side of the car up front. \n\n\"Yeah, you could say that.\" \n\n\"You've got the hots for my sister, don't you?\" Jess inquired, once we had pulled onto the road again. I blushed, I'm sure. \n\n\"Wha--\" I couldn't even finish a word before she continued. \n\n\"I mean, it's okay. She hasn't even dated anyone in two years, let alone screwed anyone.\" \n\nI blinked in surprise. Had she just said what I thought? Jess sure was a candid one. \n\n\"What? We're sisters, twins, you know? We tell each other everything.\" \n\n\"I, uh, wouldn't know. I only have a brother, six years older than me.\" \n\n\"Ah, bummer, not exactly at the same stage of life, hard to share stuff with each other, huh?\" She glanced over at me and placed her hand on my knee, making me jump slightly. \"You know, you can share stuff with me, if you want...\" ",
        "What was it with this girl? Hadn't Jen mentioned some guy's name? Jim, right? I wasn't sure I liked this kind of attention from her, especially if she was as serious with that guy as the earlier mention of his name had indicated, so I thought I'd use that name again, see what happened. \n\n\"What would Jim think?\" As soon as I said it, her hand jerked away from my thigh like I had suddenly turned into the Human Torch. I did kind of miss feeling her hand on my thigh, though. \n\n\"Uh... you talked to him?\" \n\nI decided on a bluff to \"go all-in,\" as it were. \n\n\"Yeah. He mentioned you a lot.\" \n\n\"Damn that Misty. He never can keep his mouth shut.\" Jess huffed. Haha, it worked! So Misty/Jim was her boyfriend... interesting. I wonder how he got the nickname 'Misty' then... \n\n\"Look, just don't mention any of this, ok? I like teasing guys, seeing their reactions, but it makes him kinda mad. I won't mention anything to Jen... in fact, I can plant a good seed about you, if you'd like.\" \n\n\"No problem, Jess. I won't tell.\" I was grinning inwardly at my little bluffing victory. Not to mention that she was okay with me having an interest in her twin. We were getting out of her car, as we had just pulled up at the dorms, where we had been granted early access for being in the marching band. \"See you tomorrow?\" \n\n\"Uh... yeah, we will.\" I closed the door and turned to leave, headed toward the dorm's entrance. \"Dan, wait!\" \n\nI turned around, hearing her voice call out to me. She trotted up next to me. \n\n\"Yeah?\" Was she about to play another teasing game or something? \n\n\"We live in the same dorm, dummy. You could at least walk a lady to her door. This lady doesn't mind a good-looking guy offering to walk with her.\" She paused and leaned closer, her hand resting on my forearm. \"You are offering, right?\" \n\nGod, what did she mean by all this? Hadn't we just talked about Jim, her boyfriend, and how she didn't want me mentioning her flirtations? Of course she also said she liked to see a reaction. But... did she call me a good-looking guy? \n\n\"Umm... \" \n\nJess seemed to shake herself from a trance or something. \n\n\"Fuck, sorry. It's such a habit of mine to flirt with cute guys.\" She pulled her hand away and rapidly put a small gap between us. \"We've only been dating a few months, and I've been swimming in the singles' pool for such a long time... the transition has been killing me!\" \n\nI had to laugh. \"Jess, I won't lie -- it's not like I dislike being flirted with by someone cute like you.\" \n\n\"But...\" she cut in during my pause, \"you like the darker hair and eyes, more like Jen, huh?\" \n\nI think I blushed again. \n\n\"Hehe, I thought so. You seem like a good guy, so...\" Jess ran ahead to the door and turned around in the entrance. \"Make sure you treat her right!\" \n\nAnd with that, she disappeared into the building. So much for walking her to her door. \n\nBand Camp Hell had just gotten a whole lot more interesting. \n\nChapter 3 -- I Dub Thee... \n\nThe rest of Band Camp Hell went by quickly, with Jess and Jen giving me a ride back to the dorms each evening. Several times, Jim/Misty went with us and we all had dinner together. There seemed to be a strong bond forming between us all. I was enjoying it quite a bit. \n\nIt was during the last week of camp, just before school started, and also just before the opening game where we'd march our first halftime show, that I embarrassed myself, and thereby earned myself my Bruce nickname -- Lube. \n\nFirst, it's important to know why the trombone line got the name of the Bruces. I was delighted that Jen had explained it to me one evening while we all ate dinner. Even Jim was okay with me knowing early, since the tradition was to tell the \"Bruce Legacy\" during a cookout after the end of Band Camp Hell. \n\nIt turned out that many, many years ago, four of the trombone players had watched an episode of the Monty Python Flying Circus one evening prior to band practice. The next day, inspired by the Monty Python sketch, they started calling each other Bruce all during practice. The other trombone players caught on and joined in, while the rest of the band who witnessed and heard it just assumed the trombones had come up with a section nickname. \n\nShortly after, the moniker stuck, the individual Bruce nicknames got added a few years later, and the tradition continued to get passed on through the years. \n\nThat was how we, the trombones, became known as The Bruces. \n\nBut how did I become known by my rather embarrassing and amusing nickname of Lube Bruce, you ask? The story makes sense only if you understand another of the Bruce traditions. \n\nSeveral years after the Bruce nickname first took hold, another group of friends inside the trombone line witnessed a fascinating choreography during another school's marching show. They saw trumpet players executing a neat swinging pattern with their horns. \n\nBut being trombone players, they thought they could put on as good a show -- only faster, snappier, and with trombones. \n\nThey brainstormed, practiced, and decided they would add a bit of \"danger\" to the routine -- every trombone player would stand at shoulder-width apart, and swing their horn left and right while the player next to them would duck. They experimented with calling the routine \"guillotine trombones\" but decided a much simpler and more evocative term -- \"suicide trombones\" -- would be catchier and sound edgier. \n\nAnd they were right. They showed the rest of their Bruce line, had everyone practice it, and then got the drumline to play one of their cadences for them, to keep a rhythm going. \n\nThe band director -- a much younger version of our current Satan-spawn -- saw it and decreed that it must be incorporated into the choreography of the halftime show. \n\nNearly a decade since it started, it has become a highlight of the marching band. \n\nNow, as for my nickname -- Lube -- that came during a full routine practice. \n\nIt was a day when we were to be playing the whole show, including the suicide trombones bit in the middle, as a sort of dress rehearsal, before the opening game. I was a little nervous, worried that I might forget a move or a note of the song, or mess up my timing in the suicide trombones maneuver. \n\nDuring warm-ups, I noticed my slide was a little bit stiff in moving, something a trombone player learns to hate. But that's why they invented slide oil -- commonly and fondly nicknamed tube lube by many. I had purchased some specialty kind that came in a tiny bottle along with an empty spray bottle. I hadn't used it yet, and the correct manner of application hadn't been demonstrated to me. So of course I didn't use it properly. \n\nI might have added too much -- I was very familiar with generously adding drops of oil from a little bottle, not spraying it on. Only later did I learn that with this new tube lube you're supposed to drip a few drops on your slide from the tiny tube and use water in your spray bottle. I had transferred the oil from that tiny tube into my spray bottle, and very nearly coated my entire slide. \n\nMy slide worked famously, with no sticking, no issues whatsoever. \n\nI made it through the show with no mistakes or errors, and I had come to the end, where we lined up for the suicide trombones. Everything was going smoothly as the cadence rolled in. I was spot on, jerking my trombone left and right in perfect synchrony with the drum beat. \n\nUnfortunately, the excessive quantity of oil made my slide slip right off the end of my trombone during a jerk to middle, causing it to go sailing through the air. As it gracefully arced toward a landing, it smashed into the drum major's face, knocked him off the step-ladder, cut his nose and broke his wrist, and fractured a few ribs. A fountain of blood gushed gloriously from his nose. On the other hand, my trombone slide survived the ordeal unscathed. \n\nNeedless to say, I felt terrible. The rest of the band thought it was hysterical. It happened to be caught on tape, and, when the drum major watched it later, even he thought it was pretty comical. No one was mad, no harm was done (except the injuries to the drum major, which didn't hinder or deter the tough, crazy bastard from his drum major duties), and I had effectively earned my nickname -- Lube Bruce. \n\nOn the final day of camp, we did another \"dress rehearsal\" -- flawlessly this time, with no flying trombone slides (although I got teased relentlessly during warm-ups, whether I had lubed my slide enough, or if I used too much lube, or... well, you get the idea). \n\nAfter it was all said and done, the trombone line had organized a cookout for each Bruce (and Jess, the honorary Bruce girlfriend and Bruce Twin), where I and Number One were formally and officially welcomed into the Bruces. (Incidentally, One didn't do much of anything embarrassing, or much of anything else worth noting, so they called him Boring Bruce -- he just shrugged and didn't really say anything.) \n\nThe location had remained the same since the cookout started. I rode with Jess and Jen to a small park quite a ways away from campus. The park was nice, with many gazebos scattered around, plenty of trees to offer breaks in line of sight to every gazebo, and several tennis and basketball courts. We pulled up, late in the afternoon, to one that was screened on two sides by a line of pine trees, on a bend in the road deep inside the park. It basically meant that we could be noisy and boisterous without pissing too many people off, if they happened to be in the park, too. \n\nDuring the cookout, one by one the Bruces, in keeping with tradition, shared the stories -- some funny, some poignant -- of how they had each come by their nickname. \n\nGas led off. \n\n\"Hello, everyone. I'm Gas.\" \n\n\"Hi, Gas.\" We all snickered, feeling like we were in an AA meeting. \n\n\"I got called Gas because on one of our camping trips a few years ago. I was one of the drivers. Unfortunately, our car peeled off from the group, and we got lost. Even more unfortunately, I had decided, in whatever wisdom I thought I had, to eat a copious amount of fart-inducing foods just before the trip. As we're searching for where to go, we see a campground. I pull in, and we learn that the place we were looking for was 70 miles behind us. Awesome, right? \n\n\"So we start heading back, only my personal gas is becoming an issue. So I apologize to everyone and let 'em go. It gets worse. My car decides to run out of gas. So we push the car about half a mile to a service station. They have fuel cans, but no gas. Swell. So we buy some cans and walk the ten miles back to the place that has fuel. Along the way, everyone was laughing how it would have worked out if I could have used all my farts as gas for my car.\" Gas finished, and everyone was chuckling at his unfortunate turn of events. Quite amusing, I must say. \n\n\"I'm Baby. I don't have a funny story, unlike most of you, but, for whatever reason, I get giddy when I see babies. One practice, a former Bruce brought his newborn daughter to watch, and I got so scatterbrained, I kept missing my cues, bumbling notes and marching steps, and, as I ran over to see the baby, I slipped in some mud. Nothing too special, but that's my story.\" Baby took a bow, and sat back down. \n\n\"I'm Hand-Job, or HJ.\" This time, everyone snickered. \"No, it's not dirty. But, we often play hacky-sack before games. I have a bad habit of using my hands during the game -- a big no-no, I'm told. So I got stuck with the humiliating name of Hand-Job.\" She sat back down, blushing, while the laughter echoed around. \"Hey, be thankful yours are family-friendly!\" \n\n\"Mine's not,\" Boobs said, as she stood up, her breasts doing their signature bobble/wiggle. \"I'm sure anyone can guess, but I'm called Boobs because of my breasts. Nothing special, just these two jiggling double Ds.\" She gave a small wiggle of her breasts, earning several hollers and whistles, before she sat back down. \n\n\"Yeah, mine's not family-friendly either,\" Dick said, as she sat up. \"I got called this name simply because I used to say it in phrases, like 'quit dicking around' or 'what a dick.' Whoopee.\" She sat back down, and everyone laughed. She joined in, saying what appeared to be her catchphrase: \"Aw, quit dicking around!\" \n\n\"Well, I'm Misty,\" Jim said, as he stood up. \"I got that name because during registration, when I was drinking Sierra Mist, someone said something funny, and I laughed so hard it sprayed out my nose. Like, literally sprayed, as if I was some kind of hairspray can. God, that burned so bad, I had tears in my eyes, and everyone around me said my eyes looked all 'misty' from my tears. Sierra Mist plus misty eyes...\" He shrugged and sat down. I had to admit, it was a funny story, one I wished I had been present for. My ideas for how he got Misty were way off, of course. One idea included the Pokemon game. \n\n\"I'm Sasquatch. I, uh, am tall, hairy, and... last camping trip, when I had to go to the bathroom, I tripped on a branch, scraped my knee, and I howled. Like a sasquatch, they said.\" He sat back down. He wasn't exactly one for words (and I would find out later, he hardly said anything at all. That was probably the most I'd heard from him since becoming a Bruce). \n\n\"I'm Donkey. Some people have called me an ass, and I have pretty strong political views, so thus, I'm Donkey, since being an elephant just doesn't work as well as being an ass.\" He sat down with a pretty close mimicking of a braying donkey, evoking more laughter. \n\n\"I'm Midget,\" Jen said, standing up. By now, she had been able to ditch the crutches, and was in a thick knee brace. \"I got my name because of my car...\" She looked right at me, and we noticed none of the other Bruces got it, their eyebrows arching, since they all knew why she was called Midget, after all. Watching their reaction, we couldn't hold it in anymore, so we started laughing. They all looked even more confused, making us laugh even harder. We heard several \"What's so funny?\" questions and whatnot, making it even more amusing. \n\nFinally, Donkey piped up and asked us a question. \n\n\"Ok, what did you two lovebirds do in her car?\" Donkey's question made us both stop laughing and look right at each other. I noticed a blush creeping up her cheeks before she glanced away. I was about to say something, but she beat me to it. \n\n\"Nothing. It was a simple joke that Dan and I both got about a car called a Midget. You all know I got my name because of my height.\" Jen's brows had furrowed into a scowl. She sat down, the lively mood effectively killed. Several people looked around at each other, exchanging knowing glances. I had no clue what was going on, but I remembered something her sister had said: She hasn't dated anyone in over two years, let alone screwed anyone. \n\nI wondered if that was the cause. For all I knew, she might've been sensitive about being alone for the last two years. Well... whatever it was, I wasn't going to find out about it tonight. Thankfully, Nipple somehow knew how to bring the excitement and laughter back. \n\n\"I'm a Nipple. I mean, I am Nipple.\" He paused to snicker at his own blunder. \"Well, my nickname is Nipple... because I used to laugh when I heard that word. So one day, a bunch of the Bruces got together the fixings for a drink called the Slippery Nipple, and they told me, every time I laughed at the word nipple, I had to drink one. Needless to say, I got flat-out wasted that day, and was laughing hysterically every time someone said the word. I eventually passed out from being so drunk, and woke up to find myself surrounded by nipples from baby bottles. Despite my hangover, I couldn't stop laughing.\" Thanks to Nipple, the mood lightened, and everyone seemed to go back to enjoying the cookout. \n\nEveryone except Jen, the Midget, who sat facing out from the table, slightly away from everyone else. I tried to think of any excuse to go over and talk to her. I couldn't come up with anything suave or fancy, so I opted for the direct route: I grabbed my plate of food and walked over to sit next to her. \n\n\"Penny for your thoughts,\" I offered. \n\n\"You'd better be a rich man for how many thoughts I'm having right now.\" \n\n\"Wow, that lost in thought, huh?\" \n\n\"Yeah...\" she trailed off, using her plastic fork to push some baked beans around on her plate. \n\n\"You, uh... wanna take a walk? With me?\" My heart had leapt in my throat, as I realized just what I was asking. \"I mean... if you want to, that is. Uh, you don't have to, or anything. I know you just had your knee --\" \n\n\"Shhh.\" Jen whispered, pressing her finger to my lips. She nodded behind me, so I glanced around. Gas had commanded the rest of the group's attention with a magic trick. He shot us a nearly imperceptible look and nod, and continued with his mini-show, keeping everyone facing away from us. I felt Jen's hand on mine as she dragged me to my feet. \n\n\"Wh--\" \n\n\"Shhhh!\" she whispered, a bit more forcefully, smacking me in the gut this time. \"Just follow me.\" \n\nI silently trekked behind her, into the rapidly dwindling light of dusk. As I moved up to walk beside her, our hands were still linked. I was beginning to really enjoy holding her hand, when she let go and sat down on another bench under a gazebo. We were well out of sight of where the Bruce party was going on, and we could scarcely hear the music and laughter. Had we really been walking that long together, especially with her limp? Was I really that distracted by just holding her hand? And if our shared laughter made them -- well, Donkey, at least -- think that something was going on between us, wouldn't they... \n\n\"They'll realize we're both gone, together...\" I pointed out. \n\n\"Fine, let them. They just didn't need to see us sneak off together.\" She looked away for a moment and then patted the bench next to her. I only hesitated a moment before sitting next to her. \n\n\"Dan... have you ever loved someone?\" \n\n\"Pardon?\" The question took me aback -- it was definitely not one I had anticipated or expected her to ask. \n\n\"Have you ever fallen in love? Or thought you had?\" \n\n\"Well... I did, once.\" I sighed, recalling how na\u00efve I was back then. \"But I was 16 at the time, so I hardly think it counts.\" \n\n\"No, tell me about it.\" She glanced at me. \"I mean, if you want to, that is. You don't have to, or anything,\" She grinned slightly. I smiled sheepishly. She'd echoed my words (and style) from earlier when I asked her to take a walk with me. \n\n\"Sure.\" I took a deep breath and exhaled slowly. \"Back in high school, I was dating this girl. We were both freshmen when we started dating, then sophomores when we were really serious. We had thought we were going to get married, have children, and live the great 'American Dream,' as they say.\" \n\n\"Yeah...\" \n\n\"Well... we, uh... we decided we were in love and thought we should do what people do when they're in love...\" \n\n\"You fucked.\" Jen's frankness was one of the qualities I had come to like about her, in the short four weeks I had known her. \n\nI laughed. \"Yeah, you could put it that way. It wasn't what I expected. I had thought it was supposed to be this magical, deep, amazing experience...\" \n\n\"...and it wasn't.\" It was more of a statement than a question. \n\n\"Nope, not at all. Truthfully, I'd been more satisfied by my own hand, than with that experience.\" Jen snickered at my words. \n\n\"What happened after?\" she asked. \n\n\"Well... you could say we gradually fell out of love.\" \n\n\"Ahh.\" \n\n\"Yep. In a way, I began to hate that experience, eventually, because it robbed me of my virginity, stole my innocence, and took away the deep, loving relationship we had. Later on I came to understand how shallow and petty our relationship truly was.\" \n\n\"You grew up.\" \n\n\"I guess so.\" ",
        "\"It seems sex does that to people.\" \n\n\"Well, I wouldn't know, I only had that one experience. But... well... promise you won't laugh at me?\" \n\n\"I can't promise that, but if I do laugh, know that I'm not laughing at you, at your expense.\" Her eyes were turned on me now, and I wanted so badly to lean over and kiss her. Even in the dim light, with the gazebo awning blocking most of the amber glow from the street lamp, her eyes seemed to sparkle. \n\n\"Ok... after that, I... I vowed to be a virgin again. You know, to treat my next experience as if it were my first.\" I frowned, because not only had Jen turned away, but her body was shaking slightly. Then I heard the stifled giggling sound. \"Ok, ok, real cool. Laugh at Dan the Nerd, self-proclaimed virgin.\" \n\nShe burst out laughing at that, leaning into me and clutching my arm. After a few moments, I think she realized what she was doing, as she pulled away -- not fully, her leg still pressing up against mine, and her hand resting partially on my leg -- and calmed down. \n\n\"Sorry. Not laughing at you, per se... But, honestly... Dan... 'self-proclaimed virgin'? What were you thinking?\" She jabbed at my ribs, and I had to chuckle a little. \n\n\"Yeah, yeah, I know. It's corny.\" It was my turn to look off into the distance. \"But I wanted to share that first time with someone special. I can't now. Well, I could lie about it, but that wouldn't be cool. I can't get a do-over on the actual first experience, so I wanted to share the next best thing with that special someone.\" \n\n\"You know, that's actually kind of sweet of you.\" \n\n\"Really?\" \n\n\"Yeah...\" Jen looked off into the distance again, lost in her thoughts. \n\nWe sat silently for a few more minutes before she broke the silence. \n\n\"I was engaged.\" That was a sudden way to break a silence. \n\n\"Whoa... two years ago?\" \n\n\"Haha, I see Jess told you I haven't dated -- and more, I assume -- in two years.\" \n\n\"You could say that,\" I said, with a slight grin. She shook her head. \n\n\"I could tell you about all the twelve guys she's slept with up until Jim... but what kind of sister would I be if I did that? So I won't.\" I could hear the irony and humor in her voice. This was clearly an ongoing fight, something they had bickered about numerous times before, probably since middle school or high school. \n\n\"Wow, that many?\" I caught her slight scowl -- the look I assumed said she had just told me something privileged. \"I mean... what?\" \n\n\"Right,\" she chuckled. She let out her breath, and took in a slow, long one. \"So... yeah, I was engaged two years ago. We were typical high school sweethearts. We'd actually been fond of each other since elementary school. We were always hanging out, playing together, going everywhere together -- with Jess, too, of course, tagging along. \n\n\"Anyway, it only seemed natural that he would propose to me when we hit 18. Everything was going to work out fine. He was working with his dad's construction company. The plan was that he would take it over when his dad retired, which was no more than ten years in the future. So he had the income to support us, while I finished my degree, and a bright future for the both of us.\" \n\n\"I'm... sorry.\" I nearly whispered. I wasn't quite sure what to do, whether I should extend a hug, or stay rigid and silent, or say something. So, I just offered my hand -- held it out between us... and she surprisingly took it, interlacing her fingers with mine. My heart seemed to skip a few beats. I couldn't believe she was holding my hand, even if it was while she was feeling such sadness. But the next thing she said made me forget any pretense of romantic feelings. \n\n\"Yeah... a few months later... there was an accident at a job site... stupid failed safety equipment, and...\" Jen trailed off, her voice cracking slightly. It seemed it still pained her, even two years later, to think of it. She cleared her throat. \"They said death was instantaneous, but... it was like a part of me had just been taken away. I almost dropped out of college here, but... I have the Bruces to thank, because their encouragement kept me going.\" \n\n\"I am truly sorry you've had to endure that kind of heartache,\" I offered, as gently and sincerely as I could. She squeezed my hand and leaned her head against my shoulder. \n\n\"Thanks, Dan.\" She sighed, and it almost felt like she nestled against me. I took a deep breath, closed my eyes, and tried to burn this moment into my memory forever. \n\nI must have been concentrating, or had some sort of weird look on my face, because I felt and heard her start to chuckle. \n\n\"What?\" I asked, afraid to open my eyes. \n\n\"You,\" she said with plenty of amusement in her voice. \"You're enjoying this, aren't you?\" I think my face might have turned a slightly red color, since her giggles turned into a laughing fit. \n\n\"You bet I am,\" I said finally, \"especially now that you're laughing again.\" I'm guessing the laughter was like a release for her, since she continued, despite there not being anything funny -- except for whatever stupid look I had on my face. But I really was enjoying the moment, feeling her hand in mine and listening to her melodious laughter. \n\nAfter a few moments, she calmed down, and returned her head to my shoulder. \n\n\"Dan?\" Her voice broke the comfortable silence that had settled over us. \n\n\"Yeah?\" \n\n\"Thank you.\" \n\nI almost asked her what she was thanking me for, but some tiny little voice inside me said that wasn't the right thing to say, so I simply said, \"You're welcome.\" \n\n\"Seriously, I don't think I've talked about it to anyone not directly involved -- you know, like family, close friends... So... thank you for listening, for being... you.\" \n\nNow, somehow, a slight feeling of romance stirred between us. I was looking at her, as she had pulled her head from my shoulder and was gazing into my eyes. I wasn't an expert at these kinds of situations, having only kissed two girls. Would it be the wrong moment to lean in and kiss her? I felt like I'd be taking advantage of her, just after she poured her grief out to me like that. \n\nThankfully, and frustratingly at the same time, I didn't have to decide, because Jess's voice cut through the darkness. \n\n\"Woohoo, what were you two doing clear out here by yourselves?\" She strolled up to the gazebo we had chosen, which had been shaded from the overhead park lights, making me realize that we'd been talking long enough it was now fully dark. \"Oh, did I interrupt something?\" \n\nJen had jerked her hand away from mine, in taking a swing at her twin. Jess dodged it and began laughing. \n\n\"My bad, but the Bruce party ended half an hour ago. You guys should thank Gas later, since he created a cover story for you both. I came looking for you, on the off chance that some crazy psycho -- or Lube here -- had gotten to you.\" \n\n\"Hey!\" I protested at her jab. She leered at me, sticking her tongue out. But the party...It had ended half an hour ago? \n\nI glanced at Jen as she looked back at me, both of us likely realizing we hadn't heard any of the vehicles leaving, or heard Jess's car pull up, only a hundred feet away. \n\n\"You suck, but thanks for caring about us, in the weird way you do,\" Jen reached out again, making contact this time with Jess's shoulder. \n\n\"Ow!\" \n\n\"You know...\" I started, a thought striking me, \"you could have been a crazy psycho sneaking up on us and we wouldn't have known, either...\" \n\n\"Well you got the crazy part right...\" Jen piped up. \n\n\"I should just leave you both here, and you can gimp your lame ass home,\" Jess teased. \"Or you could ask Lube here to give you a piggyback ride...\" She turned to me, with that same mischievous look she'd had when I had gotten the ride from her only a few weeks ago, \"Provided he doesn't have too much lube in his pocket.\" Then she got a really wicked look on her face. \"Although, lube might be a good thing for you two...\" She took off running after finishing that statement. I noticed Jen wasn't sitting next to me anymore, but limping rather rapidly after Jess. \n\n\"Fuck you, Skank, for making me run after you with my knee still healing!\" \n\nIt was an amusing sight to see -- twins, each under five feet tall, one chasing the other around the small parking lot in the yellowish lamplight, Jen, the chaser, with a limp, but both slinging fairly foul insults. \n\nIt took about a minute for the pain in Jen's knee to become too great for her to give chase anymore. \n\n\"Whore. You're lucky my knee is keeping me from smashing your grinning face into the grass -- or the pavement.\" Jen had sat down on the curb, rubbing her brace-covered knee. Jess stood by the driver-side door of the car. \n\n\"Just ask Lube -- he can give you a hot oil massage.\" \n\n\"You just don't give up, do you, Jess? Or is your mind just permanently in the gutter?\" \n\n\"Jen, do you really have to ask? You know how much of a dirty girl I am...\" Jess looked at me and back to Jen. \"Maybe I should show Lube here just how dirty I can get...\" \n\nSomething transpired after this, some unspoken tension, some pseudo-telepathic form of communication unique to twins. They stared at each other, creating a silence that felt like a dark void. If I was correct in my assessment of what went unspoken but clearly got exchanged, it seemed that Jess was challenging Jen to confirm her own suspicions that Jen was attracted to me. \n\nI was fortunate to have some kind of gift for reading people, at least, to a small degree, until it came to the signs a girl was giving directly to me. As she sat on the curb, staring at Jess, Jen's body language was quite clear -- she was sending a defensive signal of possession, that Jess better not put a finger on me. \n\nMy heart soared in my throat. She really was attracted to me... at least I hoped, if I had understood the situation correctly. Jess's next words seemed to confirm my thinking. \n\n\"I thought so,\" Jess muttered, backing down and climbing into the car. She leaned out the window, looking at us. \"You guys coming?\" She grinned and cackled, making me wonder what was going on in her head, until I realized the innuendo in her words. \n\n\"Just shut up already,\" Jen groaned. I quickly offered her a hand to get up. She took it, smiling at me, and gave my hand a small squeeze before she let go and got into the car. \n\nThe car ride home was awkward and silent, save for the radio playing softly in the background. That's when I heard exactly what was playing on the radio, the lyrics clearly saying \"Come my lady, come, come my lady, you're my butterf\u2014\" Jen's hand slapped hard against the power button, effectively shutting up the singer. \n\nIt was too dark to see either twin's face, but it looked like both of them were looking straight ahead. I could tell Jess wanted to comment on the all-too-well-timed innuendo of the song, but upon seeing her remain silent, I think I chose the wise option of keeping my own mouth shut a well. \n\nAs we pulled up to Jen's apartment, the street lights played briefly over their faces, revealing that Jess had a Cheshire grin, and Jen wore a scowl directed at her twin. \n\nNot a word was spoken as Jen left the car -- the same twin psychic stuff happening instead -- but Jen caught my eye and winked at me with a small smile right before she turned around. I couldn't help but watch her walk up to her apartment, captivated by her movements, and in awe and wonder that she might possibly like me. \n\n\"You two will make a cute couple,\" Jess whispered in my ear, startling me back to reality. \"Oh, and adorable babies.\" \n\n\"Sheesh, you really do think dirty all the time, don't you?\" I said, after shifting to the front next to Jess. \n\n\"Pretty much. I bet you two will have mind-blowing sex, the way you've been looking at each other... and the fact she hasn't gotten any in such a long time.\" Jess's candid words had me blushing, and, once again, stirring in my pants. \"Just be gentle and kind to her, 'kay?\" \n\n\"R-right...\" I wasn't sure what to think: was Jess being serious, or was she teasing me again? I supposed only time would tell. \n\n\"You know...\" Jess began, looking over at me while we were stopped at a red light, \"I've never seen her look at someone like she does you.\" \n\n\"What do you mean?\" \n\n\"Gosh, are you retarded or something? She's totally into you.\" Jess laughed as she thought of something. \"In all the years I watched her fawn over him, she gave him these little looks like, 'I like you.' But with you, Dan, she's giving you this 'I don't like being away from you' kind of look. You catch my drift?\" \n\n\"Seriously?\" I really hoped she was being serious... It would be some kind of mean and cruel joke if she wasn't. \n\n\"She was holding your hand and had her head resting on your shoulder, and you've only known each other these past 4 weeks of Hell. You think she'd do that with someone she considered just a friend?\" Jess did have a point. \"But...\" \n\n\"What? I don't like hearing buts after that kind of statement.\" \n\n\"She's let Zack's death seep into her pretty deep. I've tried shoving guys her way, but she's wanted nothing of it. We've talked, of course, and while she's okay on the surface... I don't actually know what's going on down deep.\" She paused. \"Oh damn... I've just mentioned Zack and you don't seem surprised. Why are you not surprised? Oh! Shit, she told you!?\" \n\n\"What, that she was engaged, and the guy died in some kind of construction accident two years ago?\" \n\n\"Oh my God!\" Jess jerked the car over, cutting someone off, as she screeched to a stop on the shoulder of the road. The angry driver blared their horn and shouted something at us, but Jess didn't even give it a second glance. \"She's never told... You're the first person she's...\" Jess was breathing faster, unable to finish a sentence. \n\n\"Yeah, just tonight, she said the same thing, that she'd never told anyone outside of her family or anyone not directly involved. Jess, calm down, is something wrong?\" In the four weeks I'd known her, Jess could act pretty strange, but this was way outside even her norm. \n\n\"No, it's just... Wow...\" Jess looked at me with wide eyes and a smile. \"You'll probably be The One.\" \n\n\"'The One?' Like, 'he's the one for me' or 'I am Neo'?\" \n\n\"You might be the one to break her free from her own sadness.\" She placed her hands around my right hand, pulling it closer. \"You have my full support. Besides, you'll probably be a pretty cool brother-in-law.\" \n\n\"Uh...\" I was left pretty speechless. It wasn't every day that someone's twin tells you she basically wants her sister to marry you -- especially after just four weeks. \n\n\"Yeah... sorry, that probably sounds kinda creepy.\" She looked forward, took a few deep breaths and turned back toward me. \"Forget that last part, just... be patient with her, and keep doing what you're doing... You're doing something right.\" \n\n\"You know...\" I said, after she had started easing back into traffic, \"you'll be one crazy sister-in-law after all.\" She squealed a giddy sound at my words, wiggling excitedly in her seat. \n\n\"Glad to know you're on board the crazy train.\" \n\n\"I think I am too. You two are a riot.\" \n\nAfter that, Jess and I made small talk for the few remaining minutes until we got to the dorms. She said good night to me and headed to her floor. I slowly made my way back to my dorm room, plenty on my mind to contemplate -- and my college life hadn't even officially begun yet. That started on Monday. \n\nChapter 4 -- Homecoming \n\nMy first week of classes breezed past, what with my full schedule and band practice on Monday, Wednesday, and Friday nights. That first Monday night practice, every time I glanced over at Jess, she had this huge cheesy grin on her face. I'm sure Jen had to have noticed, but she didn't say anything. \n\nThat weekend was our first game. The football team was opening against one of the best rated teams in the country. We'd hear after the game that our halftime performance was the highlight of the game, so severe was the beating our team received. \n\nJen was still sitting out, her knee having not fully recovered yet. I was able to sit next to her in the stands, while we played pointless pep tunes for our dispiritingly losing team. It was still a blast. We talked at almost every chance we could get, laughing and having a grand time despite the game. \n\nFor the next few weeks, it felt like we had fallen into a comfortable routine; Jess, Jen and I (occasionally Jim, too) would all ride home after weekday practices, and Saturday games had us sitting together and thoroughly enjoying each other's company. \n\nIt truly felt like we were falling in love. I had never felt so great. \n\nAnd then there was an accident. \n\nIt wasn't anything incredibly major, but it did change things quite a bit. \n\nDuring Homecoming week, our band director had scheduled a showcase for local high school bands to come out and watch us march our halftime show and to show off their own skills, getting feedback and input from us. We'd then break out into section groups and have small lessons prepared for the high school kids. It was hard to believe I had still been in high school only a few months prior. \n\nThe accident happened after we had split into sectional groups. One of the high school kids was trying to show off to Boobs, in some pathetic attempt to get her attention, I guess. He tried to do some kind of somersault or flip or something, while holding his trombone, but I think the extra weight threw him off balance. He collided with me, falling onto me in such a way that my upper body faced one direction, and my knee, trapped beneath his bulky, clumsy ass, twisted close to the opposite direction. \n\nThe Bruces came to my rescue immediately, hauling the kid off of me, but unfortunately, not before the injury had worked some major damage. I couldn't move my knee at all, and the pain was quite possibly the worst I had ever imagined. \n\nI was rushed to the hospital with all the Bruces coming along to make sure I was okay. The doctor took an x-ray and a few other scans I didn't even know the name of, always with a \"hold still, this might hurt a bit\" before scanning or rubbing some wand thing over my knee. \n\nAfter a couple hours, I had the diagnosis -- a partially torn meniscus, the tendon that crosses like an 'x' in the knee and keeps your calf from swiveling around your knee joint. \n\nThe doctor reassured me (he must have thought of it as reassurance) that it could have been much worse. A fully torn meniscus could require numerous surgeries and extensive physical therapy, with a strong possibility that the person would never make a full, 100% recovery. A partially torn one, however, would heal itself within a month or two with a basic knee brace so long as I kept most of my weight off the leg that entire time. \n\nJen told me later, that when she delivered the news, everyone stared at her, realizing that she had suffered the exact same injury just last year (in a much different way than I had), having undergone her final surgery at the start of summer. They all took turns visiting my room, with a few jokes passed around, some sympathetic words, and some discussion over what would happen with the sudden gap I had left in the Bruce line. \n\nWhen the excitement died down (and the prospect of a devastating diagnosis faded away), everyone left, likely to go over how to plug the hole I had left in the show, except for Jen and Jess. Jen said something to Jess. Jess nodded, looked over at me with a mix of pity and something else and left the room. Jen came over to the hospital bed and pressed her hand into mine. \n\n\"She'll wait in the parking lot until you get discharged, but... funny how we have the same knee injured the same way, huh?\" Jen smiled -- something I had come to treasure. I returned her smile. \n\n\"Wait, that's what was wrong with your knee?\" I realized I hadn't known what had happened to her, why she had needed knee surgery. \"How did it happen?\" ",
        "\"Well, during the last home game last year, a crazy drunk fan jumped into the band section, knocked me down, pinned my knee, and made my upper body twist over one of the bleachers.\" \n\nI grimaced at the thought of how bad that would have hurt. \"Ouch... it's taken this long to heal?\" \n\n\"Yeah, I've had three surgeries, the last one right after the spring semester. My doctor, however, thinks I'll get close to 100% recovery, provided I don't do anything stupid or too forceful.\" \n\n\"That's fortunate, right?\" I gave her hand a squeeze. \n\n\"Yeah, but now you're hurt.\" Her face turned from that beautiful smile into a frown. \n\n\"Well, look on the bright side -- now I get to sit with you on the sidelines during the show.\" \n\nInstead of cheering her up, my statement seemed to deepen her frown. \n\n\"Actually, I just got released and cleared to be in the Homecoming show this weekend. The marching shouldn't be too hard on my knee. I was waiting to tell you after the high school groups had gone home.\" \n\n\"Oh. Well, that's great, though, isn't it? You get to march again!\" \n\n\"Yeah, but now you're out for a while. I know what it feels like to watch everyone march while you just sit there... and I know how bad it hurts to have this kind of knee pain...\" She placed her hand above my red, swollen knee. \"I hate to see you in pain.\" \n\n\"Well, I could say the same thing, when I see your knee giving you grief.\" I was going to add more, make the moment truly corny, but the nurse arrived with my discharge papers, schooling me on all the meds, ice, rest, and every other possible form of relief I might obtain for my knee injury. They also gave me a short-term prescription for the heavy-duty pain pills they had given me in the hospital, warning me of the side-effects and how I shouldn't drive or operate heavy machinery or drink alcohol... there was quite an extensive list of don'ts associated with the drug. \n\nFinally, the nurse left, clearing me to leave. Jen helped me into a wheelchair, and pushed me through the hospital to the waiting car, where Jess had pulled around and was waiting for us. Either Jess had been waiting here the whole time, or had somehow just known when I'd be discharged. Or I was really out of it with my pain pills and Jen had just called her. That was probably the case. \n\nAs the two girls helped me, I wished I could have been an observer, watching two women -- twins, too -- less than five feet tall assisting a man at 6'2\" into the backseat of a rather compact car. When I later mentioned it on the ride home, I got a matching pair of scowls thrown back at me. \n\n\"We could have left your bum ass to fend for yourself, you know,\" Jess reminded me. \n\n\"Yeah, for being a couple of midgets, we were still able to load you in here,\" Jen added. \n\n\"Okay, okay, sorry. I meant no harm, and I definitely intend no form of ingratitude in that statement. I am incredibly thankful, and I always knew the two of you were strong and able women.\" \n\n\"That's better,\" Jess said. \"You've trained him well, Sis.\" \n\n\"Shut up, I didn't train shit! He's been like that since I met him,\" Jen's response sounded a bit defensive -- something I was pleased to notice in her voice. \n\n\"Wow, touchy much? Did you two start dating and not tell-- OW!\" The resounding smack I heard from the backseat made me flinch. \"Sheesh, take it easy, I'm only teasing!\" \n\nJen turned away from Jess, her gaze locked and turned outward through the passenger window. She remained like that for the duration of the drive. However, instead of heading for Jen's apartment, we turned into the parking lot for our dorms. \n\n\"Did you take a wrong turn at Albuquerque? Weren't we supposed to drop off Jen first?\" I spoke up, concerned about how Jen was going to get home. \n\n\"Not quite, Doc, we gotta help you get up two flights of stairs, remember?\" Jen said, finally turning away from the window to give me a smirk from the front seat. \"You happen to live in the only multi-storey dorm on campus that doesn't have an elevator -- on the top floor, no less.\" \n\n\"Unless, of course, you think you can make it by yourself?\" Jess teased. \n\nI paled, completely forgetting that I lived on the third floor. I stared at the crutches tucked next to me. Well, at least I was still going to be getting my exercise... \n\nI was quite thankful for Jess and Jen's help, as I had never had to use crutches before. Figuring out how to ascend stairs while using them was definitely not an easy task. \n\nSomehow, we made it, and the girls took a break on the futon in my room, after helping me sit up in my bed. \n\n\"Where's your roomie?\" Jess inquired. \"It doesn't even look like someone else lives here, except for the second bed.\" \n\n\"He practically doesn't. I've only seen him twice since the year started. I think he stays with his girlfriend most of the time.\" I smirked, recalling one of the times I had seen him -- and his girlfriend -- a bit too personally. \n\n\"What's so funny?\" Jen was watching my face, noticing my internal amusement. \n\n\"Well, one of the two times I've seen him, and his girlfriend, happened to be when they came in here and had some kind of ninja sex while I slept. When I woke up in the morning, as I went to the bathroom, his girlfriend walked past me, butt-naked, to grab something from the sink, like it was completely natural to be nude and walk past a stranger taking a leak. I guess she realized I was there, as she turned back around to face me and extended her hand 'Hi, I'm April, nice to meet you,' like people greet each other naked all the time, you know? Especially while I'm occupied, my hands on my... uh...\" I paused, realizing just exactly what I was saying to the girls. Well, the nurse wasn't kidding that the painkiller could make you a bit talkative and loopy. \n\n\"I bet you liked it, huh?\" Jess jeered, winking at me. I noticed Jen wasn't as amused, giving me a raised eyebrow look. \n\n\"Well, honestly, she's not even remotely my type, and she had weird looking boobs. I asked her to leave and let me finish peeing, hoping she'd put some clothes on by the time I was done.\" \n\n\"Hahaha, 'weird looking boobs?' What, were they cube shaped?\" Jess laughed. \n\n\"No, just... weird. I didn't want to look any longer than the first glance I gave her.\" \n\n\"Was she tall?\" Jess asked. \n\n\"Yeah, why?\" \n\n\"So... you're into short girls, huh?\" She sat next to Jen. \"Hear that, Sis? Even a nude woman can't sway him from you.\" Jen slapped Jess across the chest. \"Ow, you really gotta stop hitting me every time I suggest that you two might like each other. It's obvious, isn't it? Hurry up and hook up already! Ow!\" Jess cried out, getting an elbow in the side this time. \n\n\"You're incorrigible, you know that?\" Jen told her sister. \n\n\"Yep. But that's why you love me, right?\" \n\n\"Hah, right.\" \n\nJess took her phone out, checking a message. \"Well, I think I'll head back to my room, go spend some time with Jim.\" Jess rose from the futon, winked at me and then turned to her sister. \"So you guys can be alone.\" Jess hurried out of my room as one of the books I had left there slammed into the wall where Jess had been standing a moment ago. \n\n\"Sorry, I didn't really mean to throw your book,\" Jen apologized, getting up to pick up the thrown book -- a massive tome on calculus. \"But, well... you could see what she can be like.\" \n\nI had to laugh. \"That was quite a throw -- that book isn't very light.\" \n\n\"Oh, yeah, I pitched softball all four years in high school.\" She rotated her arm around, causing her breasts to do wonderful things. I quickly averted my eyes, realizing that was only the second time I'd openly eyed her chest. She must not have noticed, since she continued. \"I guess I haven't lost the arm, even two years later.\" \n\n\"I'd say. Once your knee's better -- well, and mine too -- we should form a softball team, maybe with the rest of the Bruces, and square off against another section,\" I suggested. \n\n\"That could be fun.\" Jen moved slowly around my room, looking at the things I had set up. \"What's this?\" She had spotted a plaque I had placed on the wall. \"All-State?\" \n\n\"Yeah,\" I said, rather sheepishly. \"It's the one thing I kinda like to boast about.\" \n\n\"Really? Why's that?\" \n\n\"Well, I began by playing saxophone, back in seventh grade. I switched to trombone just last year, during my senior year, and I made the All-State Honor Band on trombone.\" \n\n\"Wow, that actually is really impressive.\" She carefully placed the plaque back on the wall. \"And I take it this is your family?\" She asked, picking up a family photo I had on the corner of my desk. \n\n\"Yep. My dad, mom, my brother, and me, shot last year. Promise not to laugh too hard?\" I asked, having given up on expecting her to not laugh. \n\n\"I'll try.\" \n\n\"Well, we used to take a family photo every year, since I was in kindergarten.\" \n\n\"Please tell me you didn't do any of those awkward poses...\" \n\n\"Nope, just your typical shot, much like that one.\" \n\n\"Oh good, then I won't have to laugh after all.\" She turned to face me. \"Still, it's good to know you appreciate your family.\" \n\n\"My brother and I used to be really distant, never able to connect, but we've gotten pretty close now, even though he's six years older than me. It's probably because I'm in college now. He graduated with a teaching degree a couple of years ago, and he's been teaching elementary school since then.\" \n\n\"Well, good for you guys, and for him, then.\" Jen smiled the charming and mesmerizing smile I loved to see on her. \"By the way, how's your knee feeling?\" She came over to where I was sitting on my bed, placing her hand above my knee, just like she had at the hospital. \n\n\"Better, since they gave me those painkillers there at the hospital.\" \n\n\"I'm glad. I was worried about you, you know?\" She looked at me with a look I couldn't decipher. What was she thinking? Did she want us to become closer? Did she want me to kiss her, or make some move, or ask her out? I really had no idea what to do, and felt myself getting nervous. \n\n\"Y-you were?\" I realized I had stammered a little bit. Would she notice my nervousness? \n\n\"Of course. That kid that fell on you looked a bit on the large and chubby side, so I'm sure it had to hurt.\" \n\nI laughed, always amused at her uncensored, frank statements. \n\n\"Yeah. But... I was glad to know you were coming to the hospital with me. That helped.\" \n\n\"Really?\" Was that a blush creeping up her cheeks? Was she getting nervous now? \"Dan?\" \n\n\"Yeah, Jen?\" I swallowed hard. \n\n\"I don't think I've ever met anyone quite like you.\" \n\n\"Same here.\" \n\n\"So... last time I felt what I'm feeling right now, my sister came up to us, at that gazebo.\" She looked down at her hands, my gaze following hers, and I was a bit surprised to see her fidgeting with them. I glanced back up at her, and she was chewing on her lip. \n\n\"...and?\" I tried prompting her, my heart beginning to speed up a little bit. \n\n\"Well... are you sure your roommate won't come back any time soon?\" Her words made my stomach do flip-flops. I racked my brain, trying to think of when he said he'd be back next, but I couldn't come up with anything. Fuck it. \n\n\"One sec,\" I muttered as I jumped up, startling Jen. I hopped on my good leg over to the door, throwing the deadbolt lock in place. I hobbled back to the bed, plopping down where I was. \"There, now I'm certain no one will walk in on us.\" \n\n\"Good,\" Jen whispered, slowly closing the distance between us. She placed her left hand on the right side of my face. \"I've actually wanted to do this for quite a while now...\" \n\n\"M-m-me too,\" I stammered. My body felt like it was perched on the crest of a massive rollercoaster ramp, awaiting the moment when gravity takes over and causes the cars to go plummeting down the track. Her forehead nudged gently against mine, and I felt her hot breath against my lips. Slowly, I felt the contact of her soft lips against mine. \n\nNothing compared with the sensation of her lips touching mine --the most wonderful feeling I had experienced to date. I'd made out with two girls before, and I'd even had sex that one time, but this -- this simple, single kiss -- was like an electrical surge that flowed freely through my body, making me feel weightless and tingly all over. I felt the burst of pleasure flow directly to my groin, and I got harder than I think I'd ever been before. \n\nHer lips pulled slowly away from mine, leaving me feeling like she was drawing something out of me with her. Just as I thought she was finished with that simple kiss, she pressed forward again, her lips capturing my bottom lip, eliciting a slight, irrepressible moan from me. It was like that sound I made was fuel to a fire that burned within her, for she reached up with her other hand, captured my face between her grip, and slowly slid one of her hands behind my head to the back of my neck. Her lips pressed harder against mine, more insistent, opened more than last time, pulling more of my lip into her mouth. \n\nMy own hands, having been passive and inactive, found new life. I traced one hand up along the side of her face, letting my other hand wrap around her little frame, pulling on the middle of her back. I didn't want to let her go. I felt like I could hold on to her forever, like I could continue kissing her like this for the rest of my life. \n\nShe pulled back slowly, gently, just enough to let her lips break free of mine. I heard her pant slightly, mirroring my own feeling of having lost my breath. Our hands remained locked on each other as we took deep breaths. \n\n\"Dan... Oh, God, your lips...\" \n\n\"I know... Don't stop, please...\" \n\n\"Okay...\" Jen obliged, pressing forward again. This time, I felt the tip of her tongue flick along the edge of my bottom lip. New sensations I never thought possible surged through me. How was it that I could feel this great from a simple kiss? I felt I had to tell her something, but I wasn't sure what. I pulled back, a cute little whimper escaping her lips. \n\n\"Jen... I...\" \n\n\"Shhh, don't stop, please,\" she interrupted, once again echoing me. It was probably for the better. I doubt I had the words to express what I was feeling right then. I suppose I could tell her I loved her, but I didn't want to say that at just any time. That, I would save until I was certain and the timing was perfect. My heart, though, felt certain that it was a deep and genuine love for her. \n\nShe pressed into me again, and I parted my lips farther than before, allowing her own lips and tongue to explore more. I was getting lost in the sheer pleasure she was giving me through such a simple contact of our mouths, when a knock on the door shot through the room. Damn! \n\n\"Jen! You still in there?\" Jess's voice pierced through the moment, shattering the magic and delight. Jen pulled back from me rapidly, her face a bright red color, looking hapless. \n\nI beckoned her closer and whispered into her ear. \"You don't have to answer.\" \n\n\"Yeah, but she'll know. If she's back this soon, she would have crossed paths with me,\" Jen whispered back. Her breathing was rapid. Either way, I knew that Jess was going to find out. \n\n\"Okay, just go let her in and get her out of here as fast as you can,\" I suggested. \n\n\"Works for me,\" Jen leaned in and gave me a quick peck on the lips, and as she pulled away to turn toward the door, she caught sight of my pants. I had been wearing workout shorts, a loose mesh material, so, unlike jeans, they did nothing to contain my erection. Her eyes widened. She looked back at me and mouthed the word \"Damn\" followed by \"Hide it.\" \n\nAt some point, my calculus book had been returned, and was nearby, so I grabbed it, opened at random and placed it in my lap. \n\n\"One second!\" Jen hopped across the room, glancing back at me once more with a nervous smile. She tried to unlatch the door as quietly as she could. As the door pulled open, Jess was revealed, her face rather neutral at first, but quickly becoming full of mirth and unhidden amusement. Jen grabbed a fistful of her shirt and yanked Jess into my room, closing the door quickly behind her. \n\n\"Whoa, am I inter--\" \n\n\"Shut up, and listen to me,\" Jen hissed. I had never heard her speak like that before. \"I'm fed up with your teasing and childish bullshit. You know where I've been, you know what I've felt. So quit these damned games of yours, and be the grown up I know you can be!\" \n\nMy own surprise seemed to match the look on Jess's face. She looked like she'd just been slapped, which, I suppose, in a verbal way, she had. Once Jen let go of her shirt, Jess took a couple of steps back until she was against the door. \n\n\"Jen... I'm... well, I'm sorry. I've only wanted the best for you, you know that.\" Jess paused, glancing at me. \"I can tell he's special. Not just to you, but in general. I guess I was just hoping you would take that first step, and not... you know.\" \n\nJen bowed her head and let her shoulders slump. \"Yeah, I know. We'll talk later, 'kay? Just... can you leave? I'll let you know when I need a ride.\" \n\n\"Sorry. I only came back for my keys,\" Jess said, pointing at my desk where they rested, \"not to tease, or make fun. You guys... resume whatever you were doing. I won't judge or say anything.\" \n\n\"Go!\" Jen had grabbed the keys, and slapped them into Jess's hand. She gave Jess a push toward the door. \n\n\"Okay, okay! Holy shit, it must have been good! Tell me la--\" but the rest was cut off by the door slamming shut. We heard Jess laugh loudly, the sound trailing off as she moved away down the hall. \n\nJen flicked the deadbolt latch shut again, and glanced back at me with a slightly embarrassed look on her face. \n\n\"Sorry, Dan...\" she sighed. I knew, and it sounded like she did too, that we didn't really have the same mood as before -- anything more would just be forced. She sat on the bed next to me, noticing that I had placed my heavy calculus book in my lap in a pathetic attempt to cover my raging erection, which, by now, had subsided to mostly normal. She started laughing. \n\n\"What? My choice of cover?\" I asked. \n\n\"No, just you, Dan. That's so you. I can't say math ever excited me that much.\" Her eyes lit up suddenly, and a look much like the one I'd seen cross Jess's face appeared. \"Although, that might make me a bit more interested...\" She laughed harder as a blush spread across my cheeks. When my book moved because of my resurging erection, she squealed, tears starting to appear in her eyes from her laughter. \n\n\"Whoa, down boy!\" She got out. \n\n\"Har har, really funny,\" I said, ditching the book. She already knew it was there, because of her. \"Who do you think caused it, hmm?\" I said in mock accusation. That question sobered her, though, as I could tell the idea was crossing her mind that she had gotten me fully engorged with just a kiss -- oh, but what a kiss! \n\n\"Us kissing... did that?\" She said, pointing at my crotch. I grinned sheepishly, nodding. \n\n\"Yep. I have to admit: you kissing me was quite possibly one of the best feelings I've ever felt in my life.\" It was Jen's turn to blush, but she leaned forward, fooling me into thinking she was going to kiss me again. Instead, she pressed her lips against my ear and whispered: \n\n\"That's not where I plan to stop with you.\" \n\nMy eyes widened as I realized what she had just implied. She had already moved across the room, and was standing by the door. \n\n\"Rest well, Dan. You're coming to practice tomorrow?\" \n\n\"Uh... yeah. Yeah, I'll be there, on the sidelines.\" \n\n\"Good. See ya, Hon.\" \n\nThat felt good, being called \"Hon\" by her. It wasn't the last pet name she'd have for me either. \n\nChapter 5 -- A Happy Ending... Already? \n\nAfter the injury -- and that glorious kiss -- things seemed to slowly heat up between Jen and me (at least while we were alone -- to the Bruces we just looked like fellow trombone players... or at least that's what it seemed, the way they still treated us the same), while my knee gradually healed. I started physical therapy with a woman who, I swear, fit the stereotypical image of Helga from Switzerland. She had the unibrow, the massive, beefy body, a thick accent, and a cast-iron determination to inflict the most intense suffering on her patients, all while cleverly disguising it as effective, therapeutic improvement. ",
        "Jen sympathized with my PT torment. She had, after all, endured several months of it, while healing from her complete meniscus tear. After each of my sessions, we found ways to sneak off to my dorm room or her apartment -- both locations provided us a semblance of privacy, seeing as my roommate was still largely AWOL, having made only one short appearance to grab some things and left as quickly as he had arrived. \n\nHer apartment became our location of choice, largely to avoid any suspicious eyes that might recognize us and spread the rumors through the Bruce line. I wasn't sure exactly why we were hiding it from them, but I trusted her, and that was one thing she had requested, that we wait to speak to the Bruces about our budding and blossoming relationship. For the most part, it seemed none of the other Bruces suspected or noticed anything romantic between us. \n\nSpeaking of, we didn't exactly have a relationship, in the traditional sense. Every time I had asked her to become my girlfriend, she had changed the subject or told me to ask her again another day. If it weren't for the kisses and sensual knee massages we exchanged, I'd have wondered if we were anything more than friends or fellow trombone players after all. \n\nStill, the kisses were deeper than any I'd ever experienced, more loving than those I felt from the girl I thought I had loved, more sensual than the ones I'd felt from my subsequent girlfriend, and more satisfying than any other experiences I had had with either of my two girlfriends. So I didn't complain. And Jess, whenever she had a moment with me, would encourage me to continue being patient, but usually said no more -- much different from how much she disclosed to me just before that first kiss. \n\nI was only 18, after all. I imagined I could still wait -- I wasn't getting old and gray anytime soon. The fact that Jen was two years older than me never seemed to cross either of our minds. \n\nAs for the marching band, Jen was perfect. I was certain she would be, once she got her knee back to normal, but she was above those expectations, looking as if she had been there the whole time and had never missed a single practice or anything. I suppose she had been in the band for two years already, which afforded her the depth that only experience can give. \n\nIt was a special delight getting to see her march; she flowed across the field, despite having an obvious limp when she wasn't marching, and even being one of the shortest on the field, she held herself proud and tall. \n\n********** \n\nSeptember came and went, just as quickly, it seemed, as that first week of school. Our team lost all three home games they'd played thus far, but, as usual, sitting in the stands with Jen was more than enough entertainment to make it through each time. That wasn't even considering how much fun it was to be around the Bruces and the rest of the band. Plus, whenever Jess would come be an honorary Bruce, we'd all get to witness the humorous spectacle of the twins' exchanges. Jen and I had even come up with an amusing song parody we taught to the rest of the Bruces first, then to the entire band. \n\nIt parodied \"God Bless the USA\" by Lee Greenwood, often mistakenly called \"Proud to be an American.\" Our mascot was a Ram, our primary school color was green, we had a tradition about shaking keys during kickoffs, and one of the best coaches we had was named Buddy Ruddick, to explain each reference. It went like this: \n\nI'm proud to be a Ram Fan, where at least I know I'm green, \n\nAnd I won't forget the Rams who tried to win one game for me. \n\nSo everybody stand up -- Shake Your Keys, \n\nAnd remember Ruddick's plays. \n\n'Cause there ain't no doubt we'll lose this game, \n\nGod help the Rams today. \n\nIt became our anthem whenever we faced the all-too-frequent, horribly lopsided defeat, where we'd usually fall behind by three or more touchdowns. Fans around us even caught on and would start to sing it. \n\nOnce October was upon us, the Bruce line had a special announcement: the annual Bruce camping trip would be happening in just a few weeks. Only Bruces were allowed to come, or in Jess's special case, the twin sibling of a Bruce who happened to be the girlfriend of another Bruce. The upperclassmen were providing the food and most of the supplies; we only needed to bring a sleeping bag and our personal items. \n\nJen and I were talking about it one Friday evening after one of my few remaining physical therapy sessions. We were at her apartment, in her room, where I was on her bed while she helped ease the discomfort I was feeling in my knee. We were talking about the upcoming trip, scheduled for the following weekend. \n\nThere was a little concern that hiking in the mountains was going to be a bit too grueling on my knee, but I wasn't about to miss this trip over a little knee pain. Jen agreed, as she had been working on my knee, too, with some beneficial stretches, and giving me some amazing massages to help ease the pain. It turned out she was studying sports medicine to be an athletic trainer, but she was also going to be able to do physical therapy, so it was like hands-on experience for her. \n\n\"Gas was suggesting that the trip itself isn't too much, just the planned hikes,\" Jen explained, as she dug into the muscles surrounding my knee. I winced, but held still for her. \n\n\"Yeah, but aren't they, like, one of the main parts of the experience?\" I'd been told stories by other Bruces, about \"Bruce Rock\" and the lake surrounding it -- a mere half-day hike away from the chosen campsite, not to mention the lookout above some cliffs, which offered a near bird's-eye view of the lake and the massive rock formation jutting into it that sort of resembled a trombone. \n\n\"Well, in a way, but...\" she paused on my leg, moving closer to my head and leaning down, \"I also have a knee issue, and I could stay back, so as to not let you get too lonely.\" She leaned down and kissed me, the same passionate, full-lipped kiss I had come to crave and look forward to every time I was alone with her. \n\n\"Well, you do propose some pretty interesting counter-arguments,\" I grinned, pulling her down for another kiss, \"but wouldn't you agree it would be nice to see those sights with each other?\" \n\n\"You are such a hopeless romantic!\" She playfully swatted my hand away from her back and moved back to my knee. \"Not that I'm complaining about it...\" \n\n\"You bring out the best in me.\" \n\n\"...and the worst, you beast,\" she smiled wickedly at me, staring at the bulge in my pants. \n\nIt had been a frequent topic, when we got into kissing or massaging -- I would get pretty prominent erections. She was amazed to cause that in me, especially considering that we remained fully clothed. I had to wonder why she was so surprised by my reaction to her... I mean, hadn't she been engaged to a guy? I always assumed they'd done quite a few things together, considering an earlier conversation where Jen had observed that sex seemed to make people grow up. I never dared to ask her about her past experiences, though. It didn't seem right to bring it up. I mean, I had already deduced from her description of her past, that she'd only ever been with Zack. What was I going to say -- \"Hey Jen, did you ever fuck that fianc\u00e9 of yours before he died?\" Yeah, that's classy. \n\n\"How is it you get so hard from kisses and knee massages?\" Jen asked, shaking me from my thoughts. She'd asked the question more times than I could count, and I'd always answered it in much the same way. \n\n\"Physical beauty only brings out the horniness, in my belief, whereas attraction brings out the arousal, which is much more, uh, firm, so to speak.\" She'd always smile at my explanations, today being no different. \"Your kisses are... indescribable, incomparable, and immensely satisfying -- they reach a deeper part of me that is quite firmly attracted to you, especially your personality and qualities, you know, just who you are. It's a part of me that lo...\" I paused, aware that I had almost dropped the love-bomb on her. I quickly tried to change tracks, hoping she didn't catch on to my blunder. \"...looks forward to seeing you, and eagerly awaits the next time we get to be together.\" Whew, I hoped that worked. \n\n\"Dan, you should write romance novels for those lonely housewives, and you could make a fortune as you make their hearts flutter with your words -- I know you do mine.\" She fanned her face dramatically, exaggerating her last words quite a bit. I had to grin at her, but I suspected there was a kernel of truth there. \n\n\"Well, Jen, you've made my heart flutter since I first saw you and you called me out on checking out your breasts.\" Okay, it seemed she didn't sense (or ignored) my near-love-blunder. I'd tell her soon... I just wasn't sure how to go about it -- for the perfect timing and setting. \n\n\"Oh, right, that,\" she laughed. \"Being short, it's sometimes hard to know when a tall guy is just looking down at you or trying to see down your shirt.\" \n\n\"I can't imagine what that would feel like, being ogled like that.\" \n\n\"It feels rather degrading. Like they only want to use you.\" \n\n\"Ugh. That would be sucky.\" I shuddered at the thought, imagining a world where women stared at men's crotches, assessing the size of their bulge and judging their attractiveness based on how it looked in their clothing. What would it feel like if a woman only wanted to look at you and get off, or use you, even if you weren't attracted to her at all? \n\n\"Quit imagining it, it makes your face look all stupid.\" Again, her directness made me laugh. \n\n\"I really like that part of you.\" \n\n\"What -- that I say your face sometimes looks all stupid?\" \n\n\"No, your directness, your 'say it how it is and to hell with what anyone thinks' attitude and words.\" One of our earlier conversations came to mind. \"Like when you said, 'So you fucked.' That surprised me but, whenever I think of it, it makes me laugh.\" \n\n\"Right. Well, anyway, about the camping trip...\" There it was -- she was changing subjects again. \"...I have an extra sleeping bag, if you need one.\" \n\n\"Oh, right, I had been meaning to go out and buy one. But thanks, I appreciate your offer.\" There was something in her face I could see, something more she wasn't quite telling me, but it seemed it wasn't too important, at least at the moment. It vanished once I accepted her offer. \n\n\"Alright, I'll make sure to pack it, then.\" She gave a small smile as she finished rubbing my knee, and made a gesture for me to get up. \"Okay, my turn.\" \n\nShe had taught me how to massage and manipulate the knee joint, in order to facilitate increased blood flow, healing, and comfort. It was fascinating, plus it was always a pleasure to be able to massage her legs. Sometimes I'd try moving my massage higher up her legs, but she'd always swat my hands when I tried, telling me to wait. \n\n\"Ah... you are quite a natural, Dan,\" she moaned, clearly enjoying my ministrations to her knee. I'd often offer to show her how my hands could probably cause magic elsewhere. She'd refuse, again, asking me to wait. Tonight, I thought I'd ask her something different. \n\n\"Jen, you've looked pretty tense lately. Would you like a back massage?\" I fully expected her to reject the offer, or tell me to wait, but she shocked me tonight. \n\n\"You know... that does sound nice -- and with your magic fingers... hmmmm...\" Jen flipped around on her bed, lying face down as a result. \"Do your magic.\" \n\n\"Your wish is my command, m'lady,\" I said in an over-the-top courtly voice. I began by tracing small circles with my fingertips, in between her shoulder blades and spine, an area she had told me was frequently tight on most people. She was no exception. As I started to rub with more pressure, the muscles, rigid and tense, resisted my touch. \n\n\"Ahhrggggh...\" Jen groaned, or moaned, or something... It was some kind of mix of sounds that made me begin to get hard again. I tried my best to ignore it, focusing on helping her out the best I could. I listened to her requests to go over a little, or right there, or up a little, and tried to pay attention to the way she seemed to respond to each area I massaged. \n\nAfter what felt like fifteen minutes, I felt her muscles yield to the pressure I was applying. \"How's that feel?\" I asked. \n\n\"Hmmm... amazing and magical.\" Jen let out a long sigh. \"Dan... if I do something, would you be able to... I mean...\" She seemed to be struggling with the words. She sat up, and turned to face me. \n\n\"What is it? Did I do something wrong?\" \n\n\"No, not at all. I was just thinking...\" She looked away for a moment, clearly contemplating something. \"Well, I was thinking that it would... I think it would feel great on my bare skin.\" My eyes widened a little and she smirked at my face. \"Don't get any ideas...\" \n\n\"I'll be a good little boy, I promise -- scout's honor.\" My words made her giggle and shake her head. \n\n\"Good, because you know I can kick your ass if you aren't.\" \n\nI didn't doubt her. \n\n\"Want me to turn awa-- okay,\" I was again taken aback as she pulled her shirt up over her head, to reveal her smooth, creamy skin and the pale green bra covering her breasts. I wasn't sure if I should avert my eyes to be a gentleman, or if, by putting her chest on display, she was giving me some kind of silent permission to look. I remembered her words about ogling, and kept my glances to what I felt was a respectful minimum. \n\n\"...well, what do you think?\" Jen actually sounded nervous. She had nothing whatsoever to be worried about, looking as she did so... irresistible and amazing. \n\n\"I think I have just witnessed the boast meautiful thing... uh, I mean... the most beautiful thing, ever, that I have ever seen, like, ever. Ever.\" I fumbled over my words, but it seemed to put her at ease, making her giggle. \n\n\"God, you are a dork.\" She leaned over and pecked my lips. \"But... you're my dork, right?\" \n\nWow... did that mean... she wanted to date me? No, I wasn't going to read into it just yet, I was going to be patient, like Jess had suggested. If Jess was honest, then Jen hadn't gone this far with anyone since her fianc\u00e9. \n\n\"All yours,\" I reassured her. I gave her the most sincere smile I could manage. \n\n\"Thanks, Dan.\" Jen spun away from me and, in an incredibly smooth and fluid motion, unhooked her bra, caught it in her hands, dropped it off the side of her bed, and stretched out flat on the bed. Her bare back was fully exposed to me, and I was nearly drooling at how incredible her back looked -- all her trombone playing had chiseled some gorgeous definition into her shoulder blades. The curve of her lower back, the slope of her sides and the slight bulging of her breasts, looking as if they were playing hide-and-seek from my wandering eyes were just downright... \n\n\"You going to stare all night, or return to that back rub?\" \n\n\"Oh... uh... right, sorry,\" I chuckled, shaking my head. I stared at her back again, not sure where to begin. \n\n\"I have some massage oil in my dresser, top drawer, left side,\" she said. I got up and found it exactly where she described... next to her underwear and some sports bras. \"Focus, pervert.\" \n\nI laughed. \"Sorry.\" I grabbed the small bottle, and closed her drawer of undergarments (completely unaware of the future fact, yet inwardly hoping upon all hope, that I'd get to see them again... many times). \n\n\"Just a few drops, rub it between your hands to warm it up.\" \n\n\"Okay.\" I did as she directed, feeling a light tingling sensation in my palms. I pressed my palms into her now-bare shoulder blades, working my hands in that same circular motion. Jen let out a sigh that added the finishing touches to my prominent erection. I don't think I'd ever been this hard in my life. I felt a little awkward, what with my shorts pulled tight by my erection, standing next to her bed, the bulge just a few inches away from her. I was quite aware of her naked back underneath my hands. My mind seemed to be conjuring up image after splendid image of lewd and quite sexual acts between Jen and me. \n\n\"Good God, Dan, you look like you're about to burst in your pants.\" Jen's frankness brought me back to the present moment, away from the envisioned fantasy of doggy-style sex I had been imagining. It also brought quite a furious blush to my face. \"Ah, you naughty boy...\" She had turned her head outward, toward me, obviously noticing my condition. Her wicked-looking grin suggested that she seemed to know exactly what I had been thinking about. \n\n\"I, uh, was just, um... yeah, sorry.\" I gave up trying to defend myself. \"I mean, you, your back, just... wow.\" \n\nShe giggled. \"Just you wait, Dan.\" \n\n\"Huh?\" Oh, she must be telling me to wait again... I mean, she did just say to wait... \n\n\"Try this: use your thumbs to start from my lower back, one on either side of my spine, and press up toward my neck.\" \n\nI followed her instructions. \"Like this?\" \n\n\"Hmmmmmm.\" \n\n\"I take that as a 'yes,' then?\" \n\n\"Now, gently pinch my traps, squeeze them between your fingers, and use your thumbs to press upward toward my neck, while holding my muscles in your hands.\" She sighed as I followed her directions, another indescribably wonderful sound coming from her. \n\nI was intoxicated by the moment, completely drunk on her sounds, the visuals of her nude back, her tight shorts covering her butt... \n\n\"Hey, don't stop,\" Jen reminded me. \"Here, climb on the bed, you'll get better leverage and it'll feel better.\" \n\nI did as she said, climbing up onto her bed, but... where exactly? Did she mean that I just... straddle her? What about... \n\n\"Yeah, it's okay, I won't break.\" She reached her hands back and down to pat near her thighs. Did she realize that, if I sat down like this, my crotch would press directly down on her butt? \n\n\"Okay,\" my voice cracked. Ugh, I thought I sounded more like a nervous teenager than... well, I guess I was a nervous teenager, technically, being 18 and all. I tried my best to focus, returning my hands to her back, resuming the massage. \n\n\"Yessss,\" she whispered, as my oiled hands continued to knead her muscles. \n\nAnd then something unexpected (not expected by me, at least) and delightful happened: her butt arched upward at about the same time I was leaning forward. The result: my rigid penis now rested between the softness of her butt cheeks. My every action halted, including my breathing, as that single sensation seemed to engulf, overwhelm, and override everything else. I had a single realization that this moment was made exponentially better by the simple fact that we were both wearing soft mesh shorts.  \n\n\"Ohhhh\" escaped from my mouth, sounding more like a gargled, unintelligible, and guttural growl. Jen surprised me again, by moving her butt, ever so slightly, and causing my erection to slide gently along her crack. My breathing picked up pace. \n\n\"Told you... better leverage, and... ahhh... feel better,\" Jen said between what sounded like moans or gasps, or something good. Her hips had started moving more quickly, more insistently. It seemed she was enjoying this too. But, at this rate, if she kept it up... I had to warn her. \n\n\"Ohhh... Jen... I... um... ahhh...\" I tried to speak, but words seemed to fail me. Her speed had increased from a gentle rocking back and forth to a more insistent and relentless motion, as she pressed harder into my erection. \n\n\"Good... hmmm... Dan... feel good... let go...\" Jen was nearly panting. \n\nWe were dry humping. I was dry humping this girl I had fallen in love with (there, I said it -- to myself at least...) and I was going to cum from it, quicker than I ever had from just jacking off. \n\nMy mind quickly conjured up the image of her smooth, bare back in front of me, with my cock buried deep inside her. That thought, the sounds and words of encouragement from her, the slow and subtle \"tease\" I'd felt all evening -- it all had me close to the edge of orgasm, something I had not expected could happen like this. ",
        "\"Oh Jen, oh God... I'm gonna... I...\" I was looking down at the side of her face, watching her making the sounds she was, when she did something that did it for me. \n\n\"Do it, Dan, do it... for me...\" Jen encouraged me. She twisted her torso a little, as she continued to hump her butt into my groin, revealing more of her left breast until... there it was! \n\nJust as I saw the slightly darkened area of her areola, followed by the rigid nipple, come into view, I lost it. My hips jerked wildly, forcing my pulsing penis harder into her crack, while I felt several hot jets of my semen flood into my underwear. \n\n\"Ohhh, God, I can feel... feel you cumming!\" Jen reached one of her hands back around my hips, tugging on me to push against her harder. \"Holy fuck, that's so hot!\" \n\n\"Ahhhh, Jennnnn...\" I moaned, my eyes fluttering with the intense pleasure I was feeling. \"Ungh, ungh... ohhhhh...\" My voice could only push unintelligible sounds out of my mouth. I felt as if I had been reduced to a puddle of tingling, pulsing spasms of pure bliss. \n\n\"Dan... I gotta... please!\" Jen suddenly began to beg, pushing back into me firmly. She suddenly let go of my hip, as she pulled slightly forward and away from me. I immediately missed the contact, but Jen flipped her body over, so that she was face up, her gorgeous breasts completely exposed to my eyes. Not only had I just had an orgasm dry-humping this incredible girl, but now she was letting me see her beautiful and flawless chest. Had I just died and gone to heaven? \n\n\"Oh... wow...\" I whispered, feeling awestruck. My whole body was still tingling and shaky after that intense orgasm. Was this actually happening? \n\n\"Hump me, Dan... please, hump me and kiss me!\" Jen looked desperate, as my eyes finally found hers. All this time of our chaste (okay, rather intense at times) kisses and limited touching, I'd never seen or heard her act this... sexily. I must have died, or fallen asleep and I was just having a dream. Everything felt so surreal. This was still Jen, right? I hadn't just fallen asleep and imagined it? But the wetness I was feeling in my own pants, my racing heart, and a smell that wasn't there just a few moments ago made me realize that this most definitely was real. \n\n\"Dan!\" Jen's voice was filled with an urgency I'd never heard from her before, snapping me quickly back to my senses. She had spread her legs, giving me a quick glimpse of the damp spot on her shorts. She placed her legs on either side of me, and scooted closer. She reached up, pulling me by the shirt back down with her, until I was nearly on top of her. \"God, I gotta feel you against me. Hump me, Dan, make me cum!\" \n\n\"O-okay, of course I will, for you,\" I finally found my voice. I began to push my still-hard penis against her pelvis. I could feel an intense heat from her crotch, along with the slipperiness of my semen in my underwear. Definitely not a dream. \"Holy shit... Jen... I...\" \n\n\"Just... ungh... more! Harder!\" Her words encouraged me and I complied, trying to press my rigid member where I thought she'd like it the most. Her legs hooked around my butt, as she started to pant and grunt with my every movement. \"Yes... yes, like... oh, like that! Ah, ah, ah, Dan...\" \n\n\"Oh Jen, I... you...\" \n\n\"No more... words... just... keep... ohhh... going... yessss... yess... like that...\" Jen rhythmically moaned every time I pressed against her. \"Dan! Fuck, yes, I'm gonna... gonna... cummmm!\" Her last word was held, continuing into a hum of pure ecstasy. Her legs clamped harder against me, limiting the motion I had going against her, but she didn't seem to mind. For a moment, she didn't even seem aware of her surroundings. Her whole body went rigid for a moment, before she began trembling all over. \n\nWithout warning, she grabbed my face with both hands, and pulled me in for a deep, passionate kiss. Her noises of pleasure were passed directly into my mouth now, her hands frantically caressing the back of my head and the sides of my face. \n\nThe kissing continued, even after her rigid body began to loosen its death-grip on me. It took a few more minutes before we finally broke from the kiss, both of us panting for breath. I lay directly on her, our groins still pressed firmly together, her bare breasts shoved against my shirt-covered chest. \n\nJen smiled at me. \"Wow...\" She closed her eyes and gave me a peck on the lips. \"That was... definitely a first for me, and...\" \n\n\"Fan-fucking-tastic?\" I finished for her. \n\nShe laughed. \"My thought exactly!\" She wiggled her hips against me a little. \"God, how can you still be hard after that?\" \n\n\"Um... you. I think I said that before, right? It's just you that does that to me.\" \n\n\"Hmm, you did, only to my question of how you could get hard from something simple. This, I can understand.\" She paused for a moment, looking at me with a grin. \"I am so fucking wet right now.\" \n\nDespite what we just did, that comment actually shocked me a bit. I must have blushed a little, because she started giggling. \n\n\"I think I can understand now how you can get so hard: I mean, you still have all your clothes on and you made me wetter than I've ever been before.\" \n\nThat filled me with a little pride. \n\n\"Really? I know you've made me harder than I've ever been before.\" \n\n\"I know, I could feel it.\" She wiggled her hips again. \"Still can.\" \n\n\"Ohhh,\" I moaned at the sensation, \"keep it up and I might go again.\" \n\n\"Damn, you fountain. If you cum any more our shorts will be soaked through. Probably already are...\" She pressed gently against my chest. \"I should probably change. You too.\" \n\n\"Into what?\" I asked, aware that I didn't have any clothes at her place, and pretty sure that she didn't have anything I could wear. \n\n\"Oh, yeah...\" She pushed me back further, until I was sitting up again. Her breasts were exposed again, and I had a hard time keeping my eyes off of them. \"We probably need to get you... hey!\" She swatted me in the chest, just noticing I had been staring. \"I know they're nice, but sheesh, we just did... that... together.\" \n\n\"They are beyond nice,\" I said, looking at her arm covering her chest. \"I can think of several words: perfect, gorgeous, amazing, awe-inspiring, delicious...\" \n\nShe was clearly amused, but also looked a bit relieved. \"You really think so, Dan?\" She uncovered them, biting her lip as she watched me. \n\n\"Oh yeah... without a single doubt.\" I smiled reassuringly at her. \"They are so completely perfect on you.\" \n\n\"You're a sweetie,\" she grinned, leaning forward for a kiss. I gave her one, using the moment to give a squeeze to one of her breasts. \"Hey, you pervert.\" \n\n\"Just had to make sure they felt as perfect as they look.\" \n\n\"Uh huh. I better put them away before you hurt yourself,\" she said, gesturing to my shorts. She reached down to the floor to grab the bra she had removed, and shrugged her way back into it. I watched her walk across her room to get some fresh panties from her drawer before glancing back at me. \"You might want to get some napkins or something to clean up a bit.\" \n\nI glanced down, noticing that there was a dark, wet spot on the outside of my shorts. I was about to say something about how it could have been from her, seeing as she claimed she had been so wet, but she had already stepped out of the room to get changed. I decided to take her advice, padded out of her room, and found some paper towels out in her small kitchen area. The bathroom door was still shut tight. I guess I could just clean up here, in the kitchen. \n\nI gave one last look at the closed bathroom door, slid my pants down to my knees, and used the paper towels to mop up everything I could, between my underwear and my still semi-hard penis. My mind was so consumed by thoughts of what we had just done that I failed to see or hear Jen come out of the bathroom -- at least, until I heard her voice. \n\n\"Oh hey, Dan, I b\u2014\" Jen's voice trailed off. I looked up to see her standing in the short hallway next to the bathroom, her eyes wide and locked onto my groin. \n\nAt first, I felt a little embarrassed and made to cover myself up, but... I stopped. I looked at her, trying to decide what she was thinking. Fortunately, her pause wasn't very long, so I didn't really have to figure much out. \n\n\"Wow... Dan... that's...\" she moved forward toward me, her eyes darting up to my face. She seemed to be searching my eyes for something. \"Can I?\" \n\nHer question made my heart leap in my throat. I nodded, a bit more enthusiastically than I intended, prompting a short giggle from her. But, what exactly was she asking me permission for? I was frozen in place, slightly bent over, with my one hand holding a wad of paper towels, now damp with my semen, and my other hand still holding my shorts and underwear up at my knees. \n\nI didn't have to wonder long. Jen closed the gap between us and reached out, almost as if she was reaching for a handshake with my half-hard penis. \n\n\"Unnngh...\" I couldn't help but moan blissfully when her hand made contact with my member. My eyes fluttered, but I didn't want to miss this, seeing her explore. \"Oh Jennnn...\" \n\n\"It's beautiful, Dan,\" Jen whispered. Her slender fingers traced lines along the sides, the top, the underside, and the crown. It was as if she was studying it and trying to memorize my features. \n\n\"God, that feels soooo good,\" I moaned. I had to shift my weight off my bad knee. I discarded the wet paper towel and reached for the nearby chair at the table, holding onto it for balance. My shorts and underwear slid the rest of the way down my legs, bunching at my ankles. \"Hmmmm,\" I moaned some more, as her other hand reached under to cup my balls and explore them. By now, I had resumed a full erection, despite the release I'd had only minutes prior. \n\n\"You're so hard again... even after that in there?\" Jen sounded like she was in awe. \n\nI moaned as she closed her hand around the shaft of my penis. \"Ohhh, I said before, it's all you, Jen. And now you're touching me directly so...\" I trailed off. The look she was giving me made my good knee weak. \n\n\"Dan... can you still... can I... make you feel good, again?\" She almost sounded sheepish and shy. She had just kneeled down before me. \n\n\"Uh huh,\" I nodded, even more vigorously than before. I wondered, once again, if I was in some incredibly detailed, realistic, and amazingly sweet dream. We'd been kissing for the past few weeks, but Jen was pretty insistent on us waiting to do... this, I guess. She hadn't said what to actually wait for. But we had just dry humped each other to orgasm, and suddenly she was... I was snapped back to reality as I felt the incredible pleasure of her lips kissing the tip of my penis. \"Oh God, Jen!\" I cried out as her lips parted, and her tongue gently licked against the head. I watched in awe as she was testing me with her tongue. \n\n\"You... Dan, you actually taste good. I thought it would taste... I dunno, not like this.\" Fingers wrapped around my shaft, her hand started to pump slowly, creating a pleasurable rhythm, while her tongue and lips continued to work leisurely around the tip. She paused for a moment to look up at me. \"Relax and let go, Dan, I want to do this for you, I want you to feel good... I want to make you feel good.\" \n\n\"Okay,\" my voice cracked again. I gripped the chair tighter, taking more weight off my bad knee. I guess I had been too rough on my knee while... dry humping... Jen. It was starting to ache, but with what she was doing, I could give two fucks less about that pain. Lifting my bad leg off the ground caused my foot to slip out of the cloth trap my shorts had made, leaving only one ankle ensnared. She smiled, but just continued what she had been doing. I moaned again, as her hand and mouth started working a little faster and more insistently. I felt a tingling building, realizing I was nearing an orgasm already. \"Ohhhh, Jen, that's... definitely going to make me cum... soon...\" \n\n\"Ah, good, Dan, just hold on a few more seconds for me?\" she panted. I hadn't noticed before, but as I looked down, past her intoxicating eyes, I saw her other hand was between her legs... and her shorts and panties were bunched down at her knees. Her hand was moving rapidly between her bare legs. The sight of that alone... I felt my penis flinch in her hand. \n\n\"Oh, God, Jen, I'm not gonna last...\" I was panting now. My whole core seemed to be vibrating, insisting on my release now. I was trembling, my chest heaving, as her simple back-and-forth motion combined with her lips and tongue, swirling and flicking across the head, was driving me rapidly to orgasm. \n\n\"Mmmmhmmm,\" she whimpered. Her eyes were open, locked onto mine. I swear I could read her eyes, that her look was describing her feelings for me (was that love and adoration in here eyes???), her wish for me to feel good, her own desire for release... that moment seemed to last an eternity, and everything seemed to happen at once. \n\n\"Ohhhhh!\" I moaned loudly as I felt the buildup of pleasure. \"Gonna... Jen... Jen... oh, oh, oh,\" \n\n\"Gunnnngh,\" which I interpreted as \"go,\" somehow escaped from her lips around my penis. \n\nEverything she had been doing finally triggered my orgasm, and I felt myself pump and spasm into her mouth. Her lips were closed around the head, and I could see her throat working, swallowing what I was delivering. She was making some kind of sound, between swallows, which I realized was her own orgasm, as I saw her body quivering and her hips bucking on her hand. \n\nThat short blow job will be forever etched into my mind. I had never before received -- or felt -- anything even half as erotic, satisfying, and intense as that moment with Jen, in her tiny apartment kitchen. \n\nThe pleasure seemed to last longer than I expected. As her hand attempted to milk everything out of me, her tongue and lips seemed to be sucking every last drop down. She eventually slowed down, her hand and mouth finally releasing me, and her own hand, glistening in the light, retreated from between her thighs. She smiled at me -- quite an odd sight, if I do say so, to see her grinning, some of her hair stuck to her face, a blush still across her cheeks, and my softening penis inches from it all. \n\n\"Wow,\" Jen and I said in unison. We started giggling. The high of realizing what we had just done was as real as if drug-induced, as we both were consumed in a fit of laughter. \n\n\"Oh, my knee,\" Jen finally got out after a further burst of laughter. She grabbed my hand and tugged me down toward the ground with her. I was feeling some pain creeping into my own knee, realizing I had let go of the chair and put weight back onto my leg about halfway through that amazing experience. \n\n\"Are you okay?\" I was actually concerned, a thought coming to my mind of how embarrassing it would be to have reinjured her knee during a blow job. I was now sprawled next to her on her kitchen floor -- me naked from the waist down (I must have kicked the shorts off my other foot at some point), her panties and shorts still bunched at her knees - and she rested her head on my arm. \n\n\"Yeah, it's just the normal pain -- I didn't do any harm to it.\" Her smile grew when she saw the relief I must have had on my face. \"I am touched and happy to see you're worried about me, even when I'm naked.\" \n\n\"Jen, I -- \" \n\n\"Shhhh,\" she pressed her finger to my lips (the same one that had been pleasuring herself -- and I couldn't help but take a deep breath of her lingering scent -- something I most assuredly wanted to experience again), \"just enjoy the moment with me. C'mon, scoot closer and just hold me.\" \n\nHow could I deny such a request? \n\n\"Your wish is my command,\" I said, once again lapsing into my courtly voice. I turned onto my side, still facing her, and let my other arm come around behind her back. As I was moving my lower half closer, I felt her do the same, the small hairs of her crotch tickling the end of my penis. She used her arm to reach around behind my butt, pulling my hips harder into hers. The result was that my mostly-soft-but-gaining-new-life member slid against her slick folds as we found our tight snuggle together. My breath hitched in my throat, but I wanted to respect her, so I tried my best to control myself from getting another erection (I know, at 18, a losing fight), and I waited for her response. \n\n\"Hmmmm, that feels so good, Dan,\" I felt Jen sigh as she nestled into my neck, where she placed a small kiss, something that was incredibly arousing. She must have felt the effect it had on me, as she giggled. \"How can you still have life left in that thing after all that?\" \n\n\"It's just--\" \n\n\"Yeah, me, I know that now,\" she interrupted me, giggling some more. \"Ohhhh... God, I could just...\" She trailed off. \n\n\"What?\" My heart was hammering in my chest. I could feel her wetness on my head and shaft (almost fully hard again, despite two consecutive orgasms). The slick folds had started to part and hug my member. I was practically inside her. A little shifting of my hips and I could just... \n\n\"Dan... I want you so bad...\" She was thinking the same thing? Oh God, critical mass reached! But... she trailed off... again. I knew what was coming. I tried my best to maintain my composure. Jen had said, after all, that she didn't plan to stop with me, right? And we had just done... quite a bit. \n\n\"Me too... but I hear a 'but' in there, right?\" \n\n\"Promise me something?\" \n\n\"Anything, Jen.\" I felt like I could commit a horrendous, violent crime for her if she asked (okay, maybe not, but I felt such an incredibly strong devotion to her already). \n\n\"Please don't laugh or... or... hate me.\" Her voice sounded small, almost afraid now. \n\n\"I doubt I ever could, Jen. What is it?\" I was starting to get worried now. \n\n\"Can you wait... just a little longer?\" \n\nI was confused at first; wait... wait for what? Then it dawned on me -- sex. Or lovemaking, as I was beginning to think of it in my mind when I fantasized about it with Jen. We'd already gone this far now, I was fairly certain we'd be making love sometime soon -- whenever Jen was ready. \n\n\"Of course. Jen, remember one of our first conversations, where I told you about my self-proclamation to be a virgin?\" \n\nShe giggled. \"Yeah, and I laughed at you. Sorry 'bout that.\" \n\n\"No worries,\" I chuckled. \"But...\" I took a deep breath. Here goes. \"I've come to really enjoy all our time together and... Jen, I really have started to fall for you.\" \n\n\"Oh, Dan,\" she gripped me tighter, and whispered the next part: \"Me too.\" \n\nI held her close, just savoring every sensation I was feeling: her breath on my neck, the smell of her hair, the sight of her uncovered hip when I glanced down, the subtle and pleasant smell of her arousal in the air, and, of course, the delightful feeling of our bodies pressed together and the way our sexes seemed to meld together, even though we weren't actually having sex. I could feel myself soften ever so slightly, with the prospect of sex put on the back burner, yet I was about as content as I'd ever felt in my life. \n\nIt must have been nearly an hour before we moved. My bad knee was burning from the pressure against my other knee, and I sensed that Jen was starting to hurt too. \n\n\"Jen, I think I have to get up. My knee is starting to kill me.\" \n\n\"Oh, good, I'm not alone. I didn't want to break the moment, or seem like a wimp, considering your knee was injured just a little while ago.\" \n\n\"Here, I'll help you up, if you want.\" I had shifted to my good knee, trying to extend my stiff leg, but my foot caught on something. I almost fell over. \n\n\"It looks like you're the one who needs the help up,\" Jen teased, gesturing to not only my swollen and red knee, but the fact I had somehow gotten tangled in my discarded shorts whilst getting up. Jen had already pulled hers back up, and was standing there with a hand out to help me, just as she had said. "
    ],
    "authorname": "rexspaulding",
    "tags": [
        "marching band",
        "camping",
        "tents",
        "massage",
        "hand job",
        "blowjob",
        "romance",
        "virginity",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/band-camping"
}