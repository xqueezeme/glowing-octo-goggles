{
    "title": "It's a Miracle",
    "pages": [
        "It's a Miracle\n\nAuthor's Note: I originally titled this story Running Late, but after it took an unexpected turn, this title seemed to jump out at me. I hope you enjoy it.\n\n*****\n\n\"There's my handsome son! How was your first day on the job?\"\n\n\"Good. Real good, in fact. And I thank can't thank you enough for picking Emma up after school. I feel terrible not being there for her first day.\"\n\n\"Of course. But it's not like this was Kindergarten or anything. She's in fourth grade now, so while I understand wanting to be there, it really wasn't a big deal.\"\n\n\"True. But even so, thanks, Mom.\"\n\n\"So did you arrest any criminals or thwart a bank robbery?\" his mom asked, a twinkle in her eye and a smile on her face.\n\nHer son laughed then told her neither of those things had happened on his first day as a police officer in the town of Bloomington, Illinois.\n\n\"But I did pull someone over for speeding.\"\n\n\"Let me guess. Was it the mayor?\"\n\nHer son laughed again and assured her it wasn't.\n\n\"No. But I let her off with a warning even though she was doing 48 in a 35.\"\n\n\"Thirteen over the limit and no ticket? Oh, my. Someone's getting soft in his old age,\" his mother teased.\n\n\"She was very apologetic and admitted she was speeding as soon as I approached her vehicle. She told me she was always running late for something then immediately said she knew that wasn't an excuse.\"\n\n\"You know how I feel about the law,\" his mother replied. \"I don't think it's always ironclad, and my sense is that that's one reason police officers have discretion in situations like that.\"\n\n\"I agree. I know we have to apply the law fairly across the board, but laws should be deterrents rather than rigid, ironclad rules. It was clear, sunny, and there was no traffic, so I didn't see her speeding as any kind of menace to society, although I'm sure some who see it differently would remind me that next time she might run over a child. But this was my call, and that's how I saw it.\"\n\nNow his mom laughed and told him she agreed with him. Even though it was her heartfelt belief that 'the rules were the rules', something she'd instilled in her son his entire life, she also believed there were times when such discretion was more valuable than just enforcing the rules. Right or wrong, those values had served him well in high school where he lettered in football and track, then in the US Marine Corps where he'd been a military police officer. \n\nSince returning to his hometown of Bloomington, Officer Rick Gates had gone through the police academy while living at home, and was now wearing the uniform of the city's police force and had his own place.\n\n\"And...it didn't hurt that she was also one of the prettiest women I've even seen,\" Rick added.\n\n\"Oh, okay. Now I understand!\" his mom teased. \"So did you by any chance ask her out?\"\n\nRick laughed then said, \"No. For starters that would be very unprofessional. But I did check her driver's license and to my huge surprise, she was 41 years old. I was shocked because she looked a whole lot closer to my age, but the ID doesn't lie.\"\n\n\"Well, you can't blame me for wanting you to find someone, can you?\" his mom replied with a sweet smile.\n\nHer son really did understand. He and his former girlfriend, Ellen Thompson, had gotten married right after graduation, and Emma came long just six months later, a sure sign that Ellen was pregnant while still in school. She happily followed Rick to Camp Pendleton, California, where he served four years after finishing boot camp and MP school. \n\nRick then reenlisted and was sent to Marine Corps Air Station Cherry Point, North Carolina. Two years into his second enlistment, Ellen told him one evening out of the blue that she'd had enough of being 'nothing but a wife and mother'. A long, emotional talk ensued, but after several days of trying to convince her stay, Ellen walked out of their lives and hadn't been heard from since. Rick finished out the last two years of his enlistment and headed back home to Illinois.\n\nEmma was just getting over the devastation of losing her mother without having actually lost her, and it was her grandmother's greatest joy to be there for the little nine-year old girl she so dearly loved\u2014and her son who was now 27 years old\u2014and a city police officer.\n\nRick laughed at his mom's reply just as his daughter came into the kitchen and saw her father.\n\n\"Daddy!\" she said as she ran over to him and hugged him once he knelt down a little.\n\n\"Hey, sweetie. How was your first day?\"\n\n\"It was so much fun! I made two friends, and I really like my teacher.\"\n\n\"That's wonderful, Em!\" her dad said as he kissed her cheek before standing up. \"So are you ready to go home?\"\n\n\"Can't I help Grandma finish making dinner?\" she asked, her sad eyes tearing her father apart the way they always did.\n\n\"Why don't the two of you stay and eat with me?\" Bonnie Gates asked both of them.\n\n\"We've done enough freeloading, Mom. We don't need to keep being a burden to you.\"\n\n\"A burden. Listen to you! Like I don't love having both of you here with me,\" she said with a kind 'pfft' attitude.\n\n\"It does smell good,\" her son said, his stomach grumbling with pangs of hunger.\n\n\"So can we stay?\" Emma asked hopefully.\n\n\"Well, I suppose so,\" the brand new police officer said as he caught his mother's eye who smiled and winked.\n\n\"But we have to leave in time to let me get home, shower, change, and get to your open house, okay?\" he warned his daughter.\n\n\"Okay!\" she replied, a happy smile on pretty face. \n\nShe then turned around and asked, \"Grandma? What can I do to help?\"\n\nBy 6 o'clock they were back home leaving Rick with one hour to get ready and get to Oakland Elementary School, located on, what else\u2014Oakland Avenue.\n\nThey arrived with five minutes to spare and walked into the auditorium just as the principle was getting ready to welcome everyone for the start of the new school year.\n\nShe was mercifully brief then excused everyone to find their child's homerooms and teachers. Rick loved that Emma still wasn't too old to be embarrassed holding her father's hand as they walked down the hallway toward her classroom.\n\n\"It's right here, Dad!\" she said as they got close to room #17.\n\nRick let Emma go in first and heard her teacher say hello and call her by name. He stepped in right behind her, looked up, saw the teacher's face and froze.\n\n\"Hi! You must be Emma's father. I'm Ms. Peterson. Or...Karn...to you.\"\n\nShe was smiling at him, and Rick noticed her hand sticking out. He shook it, smiled back, then said, \"I uh, I believe we've met.\"\n\nShe gave him a puzzled look then the expression on her face changed dramatically.\n\n\"Oh, my goodness! You're the police officer who pulled me over this morning!\" the embarrassed fourth-grade teacher said.\n\n\"Yes. That would be me,\" Rick replied with a smile.\n\n\"Dad? You gave my teacher a ticket?\" a horrified Emma asked, her eyes wide and her jaw agape.\n\n\"No! Your very nice father let me off with a warning,\" Ms. Peterson explained. \"Which was very much appreciated.\"\n\nShe was looking at Emma then looked at her father before saying, \"Ms. Peterson is always late for everything and sometimes she drives too fast. And she most definitely does not need another ticket on her record, so she's going to work very hard on changing her bad habit.\"\n\nEmma smiled, satisfied with the explanation, then said to her dad, \"Come on. Let me show you were my desk is!\"\n\nOn their way over, another very cute little girl saw her and said, \"Hi, Emma!\"\n\n\"Hi, Sophie!\" \n\n\"Is that your dad?\" the girl asked as she stared her friend's father.\n\n\"Uh-huh,\" Emma replied before introducing them just like an adult would do.\n\nRick told Sophie 'hi' and that it was a pleasure to meet her, and just as he turned away he heard her say to Sophie, \"Your dad is very handsome!\"\n\n\"I know,\" Emma said matter of factly before showing her dad her desk and the supplies inside it.\n\nNot surprisingly, Rick felt pretty sure he was the youngest parent there, but he'd never cared about such things. In fact, the only thing he cared about was being the best dad he could be to his little girl, and with that he sat down and waited for Ms. Peterson to get things started.\n\nShe took about ten minutes going over her her goals and procedures then asked if there were any questions. Rick found himself mesmerized as he tried to listen, but it wasn't due to her words. It was her beauty that that had him spellbound, and as she spoke he was taking inventory. Inventory of her hair, her eyes, her smile, and everything else about her.\n\nShe was dressed very modestly for the open house, but Rick could tell she was what his late father called 'a bombshell' underneath the pale pink blouse and knee-length blue floral skirt. In spite of that his brain was telling him she was much too old to even think of as someone he might ask out, and yet he found himself also looking at her left hand for a wedding ring. There wasn't one, and as the battle raged in his mind he suddenly became conscious\u2014and then self-conscious\u2014of what her beauty was doing to his body.\n\nRick casually crossed his legs and forced himself to think of something awful in order to reduce the embarrassing growth he was now trying to conceal.\n\n\"So if there aren't any other questions from the group, please feel free to see me individually,\" he heard Emma's teacher say.\n\n\"Do you want to talk to Ms. Peterson?\" he heard his daughter ask as other parents stood up and moved her way.\n\n\"Um...yes. But why don't we give the other moms and dads a chance first, okay?\" he replied as nonchalantly as he could.\n\n\"Can I go talk to Sophie?\"\n\n\"Oh. Sure. Go ahead, honey.\"\n\nEmma got up, walked over to her friend, who was clearly bored as her parents asked her new teacher a few questions, and Rick smiled when the girls went to the back of the room to talk. Another girl joined them a minute or so later, and by then, the um...swelling...had subsided.\n\nRick casually stood up, stretched a little, then made his way to the front of the class and waited for his turn to talk to the beautiful blonde teacher whose hair showed no trace of having been bleached that color. It was parted at the right side and fell to halfway down her neck and was slightly turned under at the bottom.\n\nShe smiled happily when it was his turn to ask her something, but she spoke first saying, \"I really did want to thank you for not giving me a ticket. I have so many points on my record, I can't afford to get another one.\"\n\nRick laughed and started to reply when she said, \"I know. I know. The simple solution is to slow down. But that would require me to leave the house on time, and I'm one of those people who's going to be late to her own funeral.\"\n\nShe smiled as she spoke, and Rick again found himself unable to avoid staring. Fortunately, he was at least listening this time, and was able to respond.\n\n\"Well, if there is a next time, I may not be able to be so nice,\" he told her, a smile on his face, too.\n\nShe laughed then asked if he had any questions or concerns just as Emma walked up and stood next to her dad.\n\nShe looked back at him then said, \"That don't involve my driving.\"\n\n\"Yes, but none that I should probably ask someone I just met,\" Rick told her making sure to keep smiling.\n\nHe watched her very closely, and once she realized what he meant, her smile faded but it was obvious she wasn't angry or offended. He just couldn't tell what effect his not-so-subtle flirting had had on her. Emma got bored and wandered off again as they talked.\n\n\"Well, if you think of anything please ask or send a note with Emma. I'm sending a folder home with each student that also has my cell number if you ever need to call me. Or if you prefer, you can use the school's email site. My name is there under KMPeterson at.... dot edu,\" she said filling in the rest of the email address for him.\n\n\"Okay. I'll do that,\" Rick told her. \"And it was really a pleasure meeting you, Ms. Peterson. Both times.\"\n\nShe smiled then said, \"Same here, Mr.... Sorry, Officer Gates.\"\n\n\"Rick is fine,\" he replied with a little laugh.\n\n\"And so is Karn,\" she told him politely.\n\n\"Karn. I've never heard that name before.\"\n\n\"Me, either,\" she told him. \"But one day I'm going to run into another woman with my first name!\"\n\n\"Just not in your car, okay?\" Rick said as though her were seriously warning her.\n\nKarn laughed and promised that wouldn't happen.\n\n\"It really was a pleasure meeting you, Karn,\" Rick told her before stepping away to let another parent talk to her.\n\n\"You, too, Rick,\" she said, that smile of hers nearly causing another 'event'.\n\nHe walked around the room mostly to give Emma some more time to talk with her friends, and as he glanced over at her, he had a flash of anger, something that rarely happened anymore. His wife was long gone, he was divorced, and she was never coming back. And while he'd made his peace with that, it still hurt knowing how much Emma had suffered as she dealt with the aftermath of her mother's selfishness and need to 'find herself'.\n\n\"Find myself, my....\" he said quietly just as a voice asked him if he was Emma's father.\n\nHe turned around and saw a woman of about 30 smiling at him.\n\n\"Hi. I'm Grace. Sophie's mom?\"\n\n\"Oh, right. Yes. Hi, it's a pleasure to meet you.\"\n\n\"Same here,\" the woman said. \"Sophie just loves Emma.\"\n\n\"I believe the admiration is mutual,\" Rick told her as they looked over at their daughters.\n\n\"I uh, I understand you're a police officer,\" Grace said, a huge smile on her face.\n\n\"Well. For one whole day now, anyway,\" he admitted.\n\n\"I'm a huge supporter of law enforcement and just wanted to thank you for doing such a thankless job.\"\n\nLiving in a modest-sized city of just under a hundred-thousand people, Rick wasn't likely to see too many of the things police officers in large urban areas saw every day. Anything was possible, but speeding, domestic disputes, and other misdemeanor offenses were likely going to make up nearly all of the 'evils' he'd be dealing with.\n\n\"Oh, thank you. I appreciate that.\"\n\n\"I uh, I was also wondering if you might like to, you know, maybe get together sometime. With Emma and Sophie. And...me.\"\n\nGrace wasn't unattractive, but she was definitely not gorgeous or even beautiful. 'Cute' was the better word, and while she seemed nice enough, there just wasn't anything there that could draw Rick to her.\n\n\"Oh. Well, I suppose that might be possible. I am pretty busy, but maybe we'll see,\" he said as nicely as he could.\n\n\"I'd...we...Sophie and I...we'd like that,\" Grace told him, the look in her eyes unmistakeable, a look that Rick had had in his just a few minutes earlier when he was looking at Karn Peterson.\n\nGrace excused herself to go get her daughter, and after giving her a few seconds, he went over and asked Emma if she was ready to leave.\n\n\"I can't believe we're having dinner at Sophie's house!\" she told her dad excitedly as they got ready to go.\n\n\"What? Dinner? At Sophie's? When?\"\n\n\"I don't know. That's her mom said just before you came over to get me,\" Emma told him as she tried to read the look on her father's face.\n\n\"Ah, okay. Yeah, we'll have to see about that, okay?\" he told his daughter with a smile that seemed to answer the mail without dashing her hopes.\n\n\"Okay!\" she replied, letting her father breath a sigh of relief.\n\nAs they walked by Karn, she stopped talking to one of the parents and waved to Emma.\n\n\"Bye, Emma! See you tomorrow!\"\n\n\"Bye, Ms. Peterson!\" Emma said.\n\nRick was also looking at her, and when she smiled at him in a way he understood as possibly meaning something more than just a smile, he smiled back.\n\nNeither of them spoke, but as they left to go home, Rick Gates was making plans to find the right time and place to see whether or not his instincts were still as good as they'd once been where it came to reading women was concerned.\n\n\"Did you like my teacher?\" Emma asked on the way home.\n\n\"You know what? I did. I really like her a lot.\"\n\n\"She's very nice,\" Emma told her father. \"And she's really pretty, too, huh?\"\n\n\"Um, yes. She uh, she's definitely very pretty.\"\n\nThe rest of the way home Emma talked about Sophie and her other friend, Olivia, and all Rick had to do was occasionally say 'oh' or 'huh'. Again, he was hearing the words but not paying any attention as the image of this beautiful, blonde teacher with the amazing blue eyes and dazzling smile was the only thing he could think about.\n\nYes, she was 41-years old, but for the first time in his young life, Rick Gates didn't care about something that would have been an automatic deal breaker in the past. He had his first serious crush going on since high school, and a part of him told him this wasn't just some kind of puppy-love thing. \n\nHe had no idea what it was, but it wouldn't leave him alone, and he woke up the following morning with a smile on his face, still thinking about this beautiful, older, single woman named Karn Peterson; a woman who just happened to be his daughter's teacher.\n\nRick was having a second cup of coffee when his new 4th-grader walked into the kitchen.\n\n\"Morning Daddy!\" she said with a smile.\n\nHe said it back to her then marveled how a child her age could wake up on her own and get up at the same time every morning and unfailingly be in a good mood.\n\n\"You hungry?\" he asked.\n\n\"I can get it,\" the independent young girl told him as she stood on the folding stepladder they kept in the kitchen and got down a bowl and a glass. She folded the ladder then moved it over to the panty and used it again to get down a box of cereal then opened the refrigerator for some milk.\n\nRick had no idea how or why she was so responsible at such an early age. All he knew was that he was very grateful that she was. Doing little things for her wasn't difficult, but when Emma did them herself, it made things a lot easier for him. Especially with him starting a new job.\n\nOnce she finished getting her cereal ready and finished a first bite, her dad asked, \"So is Sophie your new best friend?\"\n\n\"Uh-huh,\" she replied as she slurped another spoonful then said, \"And Olivia, too.\"\n\n\"Two best friends. Lucky you.\"\n\nWhen they moved out of his mom's house, they changed school districts, and even though Emma hadn't been in her old school very long, Rick hated making her leave. But now that he knew she'd be okay, he felt relieved.\n\n\"Maybe we could have them come over sometime.\"\n\n\"For a sleepover?\" Emma asked hopefully.\n\n\"Eventually. At first maybe just to spend some time one evening. Then we'll see. How does that sound, sweetie?\"\n\nWhen Emma set her spoon down and got up to come hug him, Officer Rick Gates nearly teared up, and he wasn't an emotional kind of guy. But with Emma's mother turning her back on them, and Emma being so grown up already, it made him feel the kind of thing he tried to avoid feeling. He did that because feeling that way made him sad, and sad just wasn't something any self-respecting Marine would willingly do. Or newly-minted police officer, for that matter.\n\nRick was almost relieved his daughter didn't tell him she loved him, because that would have forced him to pretend there was something in his eyes that was making them water. Emma was probably already too smart to buy the line, but he wasn't ready to let his daughter see him do that.\n\nWhen she finished, Emma rinsed out the bowl, put it and her spoon in the dishwasher then told her dad she was going to brush her teeth and get ready. He knew she'd also make her bed and didn't need to bother checking.\n\n\"Sounds good, honey!\" he told her as he drained the last of his coffee.\n\nHe'd already showered and shaved and only needed to get dressed. He wasn't into checking himself out in mirrors, but he always took a quick look to make sure he was 'squared away' before leaving the house. He knew everything was exactly where it was supposed to be down to a sixteenth of inch just the way he'd done during his time on active duty. ",
        "It had been a big surprise to him to see quite a few other, more experienced police officers wearing badges and name plates that were cockeyed or off center. It looked like they'd just stuck them on the uniform with the only concern being that things get close to where they should be. Not Rick. He even used small pieces of cardboard as backing underneath his name plate to make it look completely smooth with no material 'gapped' between the two pins that attached to his shirt.\n\nSatisfied, he went to get Emma who was sitting and waiting patiently for her dad.\n\n\"You have your lunch money?\" he asked as he grabbed his wallet and keys.\n\n\"Yes, Dad.\"\n\n\"Of course,\" he replied, making sure to smile. \"I only have THE best daughter in the whole entire world.\"\n\nEmma laughed and told him he didn't know all the daughters in the world.\n\n\"That's okay. I'm sure I'm right,\" he told her as they got into their family car.\n\nJust five minutes later, Rick gave his daughter a kiss on the cheek, told her he loved her, then headed for the precinct for another day of pulling over speeding motorists. That thought made him laugh, but as someone who'd been shot at on two occasions, he'd be okay with never hearing the snapping sound of a round zipping by his head again.\n\nHe'd only spent three months in Afghanistan, but in those 90 days he and his fellow Marine MPs had provided security for several convoys, and one of them had been ambushed. It was over in less than a minute, but the intensity of the brief gunfight made an indelible impression on his brain. So had seeing the dead bodies of the three outgunned jihadists who'd foolishly opened fire on the heavily-armed Marine unit.\n\nWith that very pleasant thought behind him, he pulled into the parking lot and got ready for Day 2 on the Bloomington police force.\n\nHe was met with a variety of greetings from, \"Hey, Rook!\" to \"Semper Fi, Marine!\" and a couple of others that made him chuckle. Rick knew that every new guy (or gal) gets razzed no matter the job. He was new, and this was a part of the rite of passage. That said, he knew he wouldn't be razzing 'newbies' when he had some seniority, because that wasn't his style. But he was in the minority where that kind of thing was concerned, and he took it all in stride, smiled, and let it roll off his back.\n\nHis second day was very similar to his first. The only difference was responding to a call from a very large man who was a merchant in town. He had an accused shoplifter sitting quietly waiting for the police to arrive, because he was too afraid to try and bolt past the man who was built like the proverbial brick shit house. \n\nOr maybe 'outhouse' was the better word. Rick was working hard to put his Marine Corps vocabulary behind him, but as they say, old habits die hard.\n\nHis partner was a 53-year patrolman named Norm Davis who'd been content to never even try moving up the ranks. He wore two stripes on his sleeves, but after nearly 30 years on the force, was still just a patrolman like Rick. He was clearly burnt out, and he was more than content to let the young officer interact with the public. So when he'd let the older man know he let the beautiful blonde off with a warning on his first-ever stop, all he got in response from Norm was, \"Whatever works.\"\n\nNorm rarely ever spoke except when it came to his upcoming retirement. He had dreams of buying a trout farm, and whenever he had the opportunity to talk about it, Rick knew he was in for a long, boring, oneway conversation. But he didn't judge because he had no idea what he'd feel like when he was 50 or even 40 for that matter. Norm had been divorced twice, had a daughter who didn't speak to him, and he was a good 30 pounds overweight. And going bald.\n\nRick actually felt sorry for the man, and did his best to pay attention, and whenever the opportunity presented itself, make a positive comment. A comment that was almost always ignored as Norm barreled on about his future career in fish.\n\nHe forgot all about Norm, fish, and the day when he got to his mom's house to pick up Emma. But the moment he walked in, his mom grabbed him and took him aside.\n\n\"What's going on?\" Rick asked when he saw the concerned look on her face. \"Is Emma okay?\"\n\n\"Something happened at school today,\" his mother began.\n\n\"Did Emma get hurt?\"\n\n\"No. Well, not physically.\"\n\n\"Mom, what is it?\"\n\n\"Evidently these two other girls, who were her best friends, Sophia and Olive maybe?\"\n\n\"Sophie and Olivia,\" Rick said trying to hurry his mom up.\n\n\"Yes. That sounds right. Anyway, they told Emma they don't like her anymore and that they're now best friends. Poor girl hasn't stopped crying since she got in the car!\"\n\n\"That...that doesn't make any sense,\" her son replied.\n\n\"Honey? That's how girls are. I don't know why, but they can be vicious. And sometimes for no apparent reason. I've seen this happen over and over where some girl decides she no longer likes her best friend, pairs up with a new girl, and someone gets hurt. This time it's Emma.\"\n\n\"Is she in her room?\" he asked.\n\n\"Yes. She might have cried herself to sleep by now. I haven't heard anything for a good 15 minutes or so.\"\n\nRick walked to the back of the house with his mom and there was his little girl. She was asleep, but her cheeks were a bright red, and her eyes were still puffy and red, too.\n\n\"She didn't say what happened?\" a bewildered Rick quietly asked.\n\n\"No. As far as I can tell, there wasn't any...event. It's not like they'd be fighting over a boy or something at this age.\"\n\nAs her son ran his hand through his thick, dark, closely-cropped hair, his mom put her hand on his arm and said, \"Girls really are like this, Rick. It might be nothing more than one of them deciding they like the other girl better than Emma and want her out. And just like that, the other two team up and....\"\n\n\"Break her heart.\"\n\n\"I know it hurts, but she will get over it. And maybe you could check with the school and see if Emma's teacher knows anything. Just in case.\"\n\n\"I hate to wake her up,\" Rick said after saying he'd do that.\n\n\"I understand, but she'll be very glad to see her father,\" his mom said supportively.\n\nHe knelt down by her bed, then looked at her, said, \"Sweetie?\" as he gently touched her shoulder.\n\nHe saw one little eye open up and then the other. And once she recognized him, she threw her arms around his neck and that's when the crying started again.\n\n\"I know. I know,\" he said as she tried to explain what happened even though Emma had no idea why it happened.\n\nEmma cried most of the night in spite of her father's best efforts to distract her. It killed him to see her like this, and he called Norm to let him know he might be a few minutes late in the morning.\n\n\"No problem. God knows there's nothin' worth hurrying in here for,\" the veteran officer said glumly with a heavy sigh.\n\nEmma asked to stay home the next morning, and when her dad told her she had to go to school, the crying started again. It was times like this that he knew Emma needed a mother. His mom was a good substitute, but she couldn't be there all the time. \n\nBut Rick didn't even have a girlfriend let alone someone he was serious about. So for now, it was up to him and him alone.\n\nEmma almost smiled when her dad he was going to walk her to class as they pulled into the parking lot.\n\n\"Can you stay with me at school today?\" she asked, on the verge of crying again as they approached her classroom.\n\nMs. Peterson was at the door when they walked up, and when she saw Rick she smiled, said 'good morning' then told him she thought she knew why he was there.\n\n\"Oh, so you saw something?\" he asked, hoping she had an answer.\n\n\"No. I only noticed that after recess Emma was very quiet. But when I saw Sophie and Olivia holding hands a little later, I assumed there were hurt feelings.\"\n\n\"My mom says that's normal for girls, but I've never heard of such a thing,\" Rick told her.\n\n\"Oh, she's 100% correct. It happens all the time, and almost always between girls. Boys tend to fight it out but girls just...well, they get mean. I planned on talking to Emma this morning, but now that I know what's going on, I'll be better able to help.\"\n\n\"What can you do, though?\" Rick asked quietly as Emma stayed by his side.\n\n\"I'm no miracle worker, but I have some ideas,\" she told him with a smile.\n\nShe then bent down, smiled at Emma, and asked, \"How would you like to be my special assistant today?\"\n\nEmma looked at her dad then back at her teacher and finally smiled.\n\n\"Really?\"\n\n\"Yes! You'll be my #1 helper all day today. How does that sound?\"\n\nWhen Emma flung her arms around her teacher's neck, Rick got a lump in his throat.\n\n\"You're good,\" he told the attractive teacher when she looked at him.\n\nShe smiled at him, then said, \"I don't know about that, but I do love children, and Emma already has a special place in my heart.\"\n\n\"Yeah, I kind of like her, too,\" Rick said as he looked down at his daughter.\n\n\"You love me!\" Emma said, correcting her handsome father.\n\n\"I do indeed, and I think Ms. Peterson does, too. So something tells me this is going to be a very good day.\"\n\nWhen he bent down to hug Emma, she squeezed his neck and told him she loved him, too.\n\nWhen he stood back up, he thanked Ms. Peterson who only smiled before saying, \"I must say you look very handsome in your uniform, Officer. I was too afraid of getting another ticket to notice when you pulled me over.\"\n\nThe very attractive, older woman was wearing a light-gray sweater over a white blouse with a pair of dark-gray pants, and looked even prettier than she had the two other times he'd seen her.\n\n\"Coming from someone as...beautiful as you...that's quite the compliment,\" he told her.\n\nShe laughed and told him he needed to get his eyes checked.\n\n\"No. I see just fine, thank you very much,\" Rick told her with a smile and a little laugh.\n\n\"If you say so,\" she graciously replied before asking Emma if she was ready to go inside.\n\n\"Okay!\" the young girl replied.\n\n\"Bye, honey! Have a good day!\" her dad said.\n\n\"Bye, Daddy! You, too!\"\n\n\"Thank you,\" Rick said to her teacher.\n\n\"Anytime,\" Karn said with a smile. \n\nAfter a long day with Norm, Rick was really looking forward to seeing his daughter and had largely forgotten about the previous day's drama until he walked into his mother's house.\n\n\"Hi, Daddy!\" were the first words he heard, causing him to recall the sad affair of the day before.\n\n\"Did someone have a good day?\" he asked as he gave her a hug.\n\n\"Dad. I had THE best day EVER!\" Emma bubbled.\n\n\"Tell me about it,\" he said as he saw his mom smiling at him.\n\n\"I got to sit next to Ms. Peterson all day. And she let me decide all kinds of things!\"\n\n\"Like what?\"\n\nEmma ignored the question because she had even better news.\n\n\"At recess, Sophie told me she wants to my best friend again!\"\n\n\"That's great, honey!\" her happy father said.\n\n\"She wanted me to not like Olivia, but I told her we should all be friends instead.\"\n\n\"Wow! You're like a little grownup!\"\n\n\"So now all three of them are friends again,\" Rick's mom proudly announced.\n\n\"I think I need to thank someone's teacher,\" her son replied as Emma gave him one more hug and told him he was the best daddy in the whole world.\n\n\"What a difference a day makes,\" Rick said as Emma skipped away.\n\n\"Girls. What can I say?\" his mom replied with a smile.\n\n\"Should I expect them to hate Emma again tomorrow?\"\n\n\"Maybe. But it will probably take at least a week or two,\" his mom replied before giving her son a hug and telling him she agreed with her granddaughter.\n\n\"Thanks, Mom. I don't know what I'd do without you.\"\n\n\"Maybe it's time to start thinking about finding someone....\"\n\nShe stifled a laugh when she had to stop herself from saying, \"Someone to do it with,\" because, although she was no prude, her son wouldn't have laughed because it was his mother saying it. Still, she thought it was true, and wished he'd make more of an effort. Then again, she wasn't willing to take her own medicine and look for a new husband, so she couldn't make too big a deal out of Rick's not being ready yet. \n\n\"What would be an appropriate way to thank Ms. Peterson?\" Rick asked.\n\nShe nearly laughed again when she thought about saying, \"Try saying 'thank you'.\"\n\nShe gave it a little thought then said, \"Maybe a little plant for her desk?\" \n\n\"Yeah. That's...perfect. Thanks, Mom.\"\n\n\"You could add a nice card if you wanted to make it even more special.\"\n\n\"Hmmm. I may just do that,\" her policeman son replied, a little grin on his face.\n\nIn fact he stopped on the way home and had Emma help him pick out both the plant and the card. Just seeing his daughter happy again was its own reward. Knowing he was doing something nice for the person who'd made Emma's happiness possible was icing on the cake.\n\nRick couldn't afford to take any more time off, so he let Emma deliver the thank-you gifts after dropping her off at his mom's before heading to work the next morning.\n\nAfter learning more about the mating habits of trout, Rick was ready for anything else when he went to pick Emma up, but he wasn't ready for the very nice, handwritten note she gave him as soon as he walked in.\n\n\"What's this?\" her father asked.\n\n\"It's from Ms. Peterson. She got teary-eyed when I gave her the little plant and the card.\"\n\n\"Really?\" her father replied as he opened it.\n\nIt took all of the restraint Bonnie had no to try and read over her son's shoulder, but she kept her distance as he read.\n\n\"Rick\u2014thank you SO much for the beautiful plant! I love orchids and it looks so nice on my desk. And the card was very touching. Neither one was necessary, but you truly made my day. Thank you again from the bottom of my heart. Karn.\"\n\nShe'd drawn a heart near that word and that made Rick smile.\n\n\"So? What did she say?\" Rick's mom asked the moment he put the note down.\n\n\"She said 'thanks'.\"\n\n\"That's it? Just thanks?\"\n\n\"Pretty much,\" her son told her.\n\n\"If only she was say...31,\" his mother mused.\n\nEmma was dialed into the conversation, and in spite of her youth, she understood.\n\n\"My dad is going to ask my teacher out on a date?\" the nine-year old inquired with a kind of hopeful look on her face.\n\nHer grandmother only shrugged then told Emma she'd have to ask him that.\n\n\"Daddy? Are you?\"\n\nHe almost said 'yes' but hedged his bets.\n\n\"Oh, I don't know, honey. She's very pretty, but we're not really the same age, so....\"\n\n\"That doesn't mean you can't love someone,\" Emma replied without hesitation. \"Grandma is a lot older than me, and I still love her.\"\n\nBonnie's feigned look of shock was accompanied by a smile as she said, \"Well, that is true!\"\n\n\"See? So you and Ms. Peterson could fall in love, too!\"\n\n\"Well, we'd probably need to go on a date or two first, don't you think?\" her father asked with a laugh.\n\nEmma thought for a moment then said, \"Probably a whole bunch of them!\"\n\nWhen her father and grandmother both laughed, Emma laughed, too, then forgot all about it.\n\nBut her father didn't. He thought about the beautiful cursive writing on the very nice paper and the woman who wrote it the rest of the evening and tried to decide how to best go about finding out if she might possibly be interested in going out with him.\n\nFor the next couple of days, he spent as much time as he could trying to come up with a plan for finding the right time and place to ask Karn out, but in spite of his best efforts, he kept drawing a blank. So that Friday evening he casually mentioned it to his mom when Emma was in her old room playing.\n\n\"Why don't you have a house warming?\" Bonnie suggested.\n\n\"Seriously?\"\n\n\"Yes. You haven't been there very long, and if she doesn't even bother to show up, that'll tell you a lot about whether or not she's even interested.\"\n\n\"But my house is....\"\n\n\"A little bleak?\" his mom suggested.\n\n\"I was gonna say 'plain', but yeah, bleak works.\"\n\n\"No worries! I'll spiff it up for you in no time.\"\n\n\"So how I do this?\" Rick asked.\n\n\"Let me take care of the invites and the house. Once it's ready, we'll pick a date and send out the invitations.\"\n\nHis mom hesitated then asked, \"Do you even know enough other people here anymore to pull this off?\"\n\n\"Oh. Yeah. That might be a problem unless I just ask all the guys on the force to come over.\"\n\n\"If you do that, you better be ready to shell out a few hundred dollars in beer and snacks.\"\n\n\"Ouch,\" the cash-strapped police officer replied. \"Got any other alternatives?\"\n\n\"Yes. Keep it small. Ask maybe a dozen or so folks to come like Emma's teacher, your partner, and a few others. For less than a hundred bucks, we can do this.\"\n\n\"What if she doesn't show up?\"\n\nHis mom smiled then said, \"You pays your money and you takes your chances, right?\"\n\nRick's father had often said that, and even though he'd been gone for nearly 15 years, he could still hear his dad saying those words like it was yesterday.\n\n\"I sure miss Dad,\" he said.\n\n\"Me, too, honey. Me, too.\"\n\nRick's father had passed away when he was just 40 years old. He'd had congestive heart failure but led a nearly normal life until it took a serious turn for the worse right after Rick turned 12. The decline was fast and furious and his father went from working full time and playing catch with his son in the back yard to being out of work and bedridden within six months. Three months after that he was gone.\n\n\"Okay,\" Rick said after a quick trip down memory lane; a lane that was a mixture of happy times and oxygen tubes and a beeping monitor in his father's hospice room.\n\n\"You just leave everything to me, okay?\" his mom said just as Emma came in.\n\n\"Leave what to you, Grandma?\"\n\n\"Grandma is going to help us have a house warming,\" her father explained.\n\nThe puzzled look on Emma's face wasn't because she didn't know what that meant. It was that her father was the person saying it.\n\n\"Is my dad okay, Grandma?\" she asked, causing her grandmother to laugh.\n\n\"He's fine, sweetheart. In fact, he may be ready to start dating again.\"\n\nBonnie knew she shouldn't have said that, but it was too late.\n\n\"What?\" a shocked Emma said as she looked at her father.\n\n\"No. I'm not. Well, maybe I am, I just don't know for sure. Yet.\"\n\nThe shock went away as Emma came over and hugged him.\n\n\"I am SO happy!\" his daughter told him as she let go and looked up at her dad.\n\n\"You want me to start dating?\" he asked, not sure he understood.\n\n\"Duh!\" Emma told him, causing Bonnie to laugh.\n\n\"How else are you going to find a new wife if you don't start dating?\" the almost-grownup nine-year old said.\n\n\"She has a point,\" Rick's mother added as she kind of tilted her head toward her son.\n\n\"Guess I better get busy then, huh?\" an energized Rick Gates said as he put his arms around his two favorite girls on earth. \n\nOn their way home, Emma asked her father a question that surprised him.\n\n\"How about Sophie's mom, Dad? She's single, and she's really nice.\"\n\nHe'd forgotten all about their very brief conversation at the open house, and while he didn't want to tell his daughter that just wasn't going to happen, she was someone else he could invite to their own 'open house', so he told Emma he'd make sure to do that.\n\n\"And can Sophie stay with us that night?\" an excited Emma asked.\n\nRick also remembered saying that Sophie needed to spend some time there, first, so he suggested asking her to come over after school one day the following week.\n\n\"Can Olivia come too? Please, Daddy?\"\n\nThe battle was over before it began when Rick said, \"We'll see, honey. But soon. I promise.\"\n\nKnowing he could trust his mom completely, Rick let her run with getting his place ready for the house warming. The only question he had was when it would be. She told him she only needed two days on her end, but suggested he give people a week's notice. So they agreed on a day, Rick set the time, and all he had to do was give his mom a list of names, and in some cases, addresses.",
        "The following day they were ready to go, and Rick smiled when she handed them to him.\n\n\"Calligraphy and everything, huh?\"\n\n\"I love doing this kind of thing!\" his mom replied.\n\nHe shuffled through them and stopped when he found the one that had Karn's name on it and smiled.\n\n\"They're not sealed yet. You know, in case you want to write something personal...in one of them.\"\n\n\"She probably doesn't have any, you know, feelings for me,\" Rick said.\n\nHis mom knew exactly who he had in mind and smiled.\n\n\"She's quite a bit older than you, so that may be the case. But if you have feelings for her, you owe it to yourself to find out.\"\n\n\"Even if she's...41?\"\n\n\"Honey? I'd do anything to have your father back. And if I believed I could have that again with someone else\u2014of any age\u2014I'd be on every dating site there is. But you're not me. And you have Emma to think about. I don't know Ms. Peterson well, but I have met her. She's a very attractive woman, and even more importantly, she's seems like a wonderful person. So while there is a big age difference, if you like her, and if you find out she feels that way about you, I'd be very happy for you.\"\n\n\"Wow. I have the best daughter and the best mom in the world,\" her thankful son said before hugging her and thanking her for the invitations.\n\n\"You're welcome. And don't worry. Your place will look spectacular, and I won't spend much money getting it that way.\"\n\nThe next morning, Emma delivered the invitation to her teacher who looked at it and said, \"This is very...pretty. Did your father write this?\"\n\n\"No. My dad's handwriting is terrible,\" Emma told her with a smile. \"But my Grandma's is beautiful.\"\n\n\"Please tell her 'thank you', okay?\"\n\n\"I will, but the invitation is from my dad,\" Emma explained.\n\n\"Oh. Okay,\" her teacher said as the confusion lifted. \"Should I open it now?\"\n\n\"Uh-huh,\" Emma said, anxious to see her reaction.\n\n\"A house warming. How nice! That sounds lovely! Yes. I'd love to go.\"\n\n\"Really?\"\n\n\"Yes. Really. Please let your father know I'll be there.\"\n\n\"I will. And that is so awesome!\"\n\nKarn reread the personal note at the bottom and tried not to laugh. Emma was correct. Rick's handwriting was...bad. Really bad. But the words were as good as the writing was bad.\n\n\"Karn. I'm very much looking forward to seeing you again\u2014somewhere outside of the classroom. I hope you'll be able to join us. Just don't speed on the way over, okay? Rick.\"\n\nAs she got ready to welcome the rest of her incoming students, she couldn't help but wonder if this handsome, young police officer was flirting with her. The possibility that he was made her tummy flutter, but just as quickly she dismissed the whole thing because she knew that he knew how old she was. \n\nNo, this wasn't flirting. It couldn't be. It was just a well-mannered gentleman being nice to his daughter's teacher. And with that, she turned her focus to her class and got ready to start the day.\n\n******\n\n\"Mom. This is...insane!\" Rick said as he walked into to his newly spruced-up home. \n\nBonnie had been there since 8am, and the place looked fantastic.\n\n\"How did you not spend a lot of money to do all of this?\" he asked as he looked around.\n\n\"A few pillows here, a colorful quilt or two there, some inexpensive staging items, a little paint, and...voile!\"\n\n\"Wow. This is...incredible.\"\n\nBonnie thanked him then said, \"Okay. I just have enough time to run home, get ready, then get back here before your guests start arriving. And I'll swing by the store and pick up the poo-poos.\"\n\nRick laughed at another word he'd learned along the way that his mom had starting using. This one wasn't from his father. It was something he'd heard while on active duty. Hors d'oeuvres and such were all just 'poo-poos' to Marines while snacks and junk food were called 'gee dunk'. He also chuckled when he recalled the word for a vehicle that sold such items\u2014a 'roach coach'.\n\nAs if he wasn't surprised enough, when he turned around, Emma had quietly walked up behind him. She not only startled him, she surprised him.\n\n\"Look at you! Don't you look pretty!\"\n\n\"Thanks, Daddy,\" she said with a smile. \"Do you really like it?\"\n\nHer grandmother had bought Emma a dress for the start of the school year, but she hadn't worn it yet. She'd been saving it for a special occasion, and this was it.\n\n\"Yes. It's beautiful. And so are you.\"\n\n\"You need to get ready, too,\" his daughter informed him.\n\n\"Right. The uniform just doesn't fit with the occasion, does it?\" he said with a laugh.\n\nIn her typical adult manner, Emma informed him, \"It's always appropriate for a police officer, but you would look much nicer in a coat and tie.\"\n\n\"Coat and tie? Hold on there, missy.\"\n\nEmma giggled then told her dad he could skip the tie.\n\n\"But not the jacket. And wear the camel-colored one, okay? With the blue shirt and the black pants.\"\n\n\"Camel colored. Is that brown?\"\n\n\"Ugh! No, it's not brown,\" his daughter said. \"Come on. I'll show you so you don't mess it up.\"\n\nRick knew which one she meant. He only had to sports coats, and one of them was black. \n\n\"Ah, okay. So this is what camels look like,\" he said very seriously when Emma pulled it off the rack.\n\n\"Daddy!\" she protested, knowing he was teasing.\n\n\"Okay. Go on. Scoot! I gotta shower and change!\"\n\nThirty minutes later, Rick walked out and asked his daughter what she thought.\n\nShe was all smiles even before he asked.\n\n\"Only that you are the most handsome dad in the whole wide world.\"\n\n\"You think Ms. Peterson will like it?\" he asked, not sure if he should.\n\n\"Wait. You like my teacher?\" a confused Emma asked. \"What about Sophie's mom?\"\n\n\"I'm sure Sophie's mother is a very nice lady, but I...I'm not really very interested in her,\" her dad said, a little wince at the end added to lessen the blow.\n\n\"Oh, okay. Like the movie. You know, 'he's just not that into you'.\"\n\nAll Rick could do was shake his head at the maturity of his daughter who was growing up so fast.\n\nBefore he could reply, Emma smiled then told him,\"She'll definitely like it. Trust me, okay?\"\n\n\"I do trust you,\" her dad replied before saying they should take one more look around to see if anything needed to be moved or adjusted.\n\nBefore they finished, Bonnie came screaming in with just five minutes to spare causing Rick to ask if she'd been speeding.\n\n\"Maybe just a little,\" she admitted. \"But I know a police officer, so....\"\n\nRick laughed then helped her set out the hors d'oeuvres while Emma set out the three bottles of wine Rick had picked up on the way home the day before.\n\n\"Oh, my. I see a car,\" Bonnie said as she removed the plastic from a plate of deviled eggs.\n\n\"No way. It's Captain Brunell,\" a very surprised Rick Gates said as he headed to the door to meet his boss's boss's boss.\n\n\"Captain. Nice to see you, sir,\" Rick said as he shook the older man's hand.\n\n\"Rick. Good to see you, too,\" he replied as he handed his newest officer another bottle of wine.\n\n\"Thank you, and come in. Please. Let me introduce you to my mother and daughter.\"\n\nThe distinguished looking man of around 55 stepped inside and found two ladies standing there waiting to say hello.\n\n\"Sir? This is my beautiful daughter, Emma, and this beautiful lady is my mother, Bonnie Gates.\"\n\n\"Emma. You are indeed a beautiful young lady,\" the man with the gray around his temples said.\n\n\"Thank you,\" Emma told him as he looked at her grandmother.\n\n\"As are you, Mrs. Gates,\" he said with a smile.\n\n\"Bonnie. Please,\" the surprised and flattered grandmother said.\n\n\"Okay. And I'm John. Brunell.\"\n\nRick watched as his mom's face lit up when she offered her hand.\n\n\"I had no idea a woman as young as you could have a son Rick's age,\" the captain said with a smile.\n\n\"Oh, he's good,\" Bonnie said to her son as she smiled at the handsome, older man.\n\nThere was a knock at the door, and with that, Captain Brunell stepped aside, and Bonnie asked if he'd like a drink or something to eat.\n\n\"Yes, please. That'd be great,\" he said as he followed her to the kitchen.\n\nEmma opened the door and there was Sophie holding a beautifully-wrapped gift, her mother right behind her.\n\nSophie passed off the present to her mom, said hello to Emma's dad, then ran off with her friend to her bedroom.\n\n\"Hi,\" Rick said, unable to recall the woman's name.\n\nShe smiled then said, \"Hi, Rick. I'm Grace. We met at the open house. Remember?\"\n\n\"Yes. Of course I remember,\" he replied, knowing that he did remember having met her.\n\n\"Please come in. I'd like you to meet my mom.\"\n\n\"And it's only our first date!\" Grace bubbled as she handed him the gift.\n\nRick thanked her then led her to where the others were congregating, and after a quick round of introductions, there was another knock. Rick walked to the door, and peeked thought the peephole and when he saw who it was, he had a rush of emotion he hadn't felt in a very long time.\n\n\"Karn. Hi. It's nice to see you,\" he told her as she stepped inside.\n\n\"Good evening, Rick. You, too,\" she said as she offered yet another bottle of wine.\n\n\"You didn't need to bring anything.\"\n\n\"I know, but showing up empty-handed seems so...tacky,\" she replied with a smile that caused another flurry of the same kind of emotion.\n\n\"Well, thank you, and I gotta say, you look amazing. Again.\"\n\nKarn laughed politely, thanked him, and told him he looked quite nice himself.\n\n\"I have a secret to confess,\" he said with a smile. \"Emma chose my wardrobe.\"\n\nKarn laughed again and assured him his daughter had very good taste.\n\nHe brought her to the kitchen, too, where Bonnie recognized her and hugged her before welcoming her while thanking her for being so good to her granddaughter.\n\nBonnie, on the other hand, gave her a much cooler reception saying only, \"It's nice to see you again, Ms. Peterson.\"\n\n\"Uh-oh,\" Rick said when he saw Norm coming up the steps. \"Will you excuse me?\"\n\nHe stepped through the small group of guests and made his way to the door just as Norm knocked.\n\n\"Norm! Come on in.\"\n\n\"How long's this thing gonna last?\" his partner asked without even saying hello and nothing in his thick hands.\n\n\"As long as you'd like,\" Rick cheerfully replied.\n\n\"Don't tell me that, or I'm gone,\" the cynical, older man said as he looked around. \n\nHe saw Grace first then Karn and said to Rick, \"Then again. Maybe I could be talked into staying a little while.\"\n\nRick understood, laughed politely, then told his partner who they were.\n\n\"Your kid's teacher is hot as hell!\" Norm said as he leaned closer before slapping his younger partner on the back. \"Introduce me.\"\n\nRick did just that, and within ten minutes another five people showed up which was more than enough for the house warming Rick never planned to have.\n\nHe made sure to mingle, but he was trying his best to find a way to get some one-on-one time with Karn who was, with one notable exception, everyone's favorite guest.\n\nJust as he saw his opportunity, Grace slid in front of him and said, \"I was hoping to have a chance to chat with you, Rick.\"\n\nHer smile was as bright as her eyes, and Rick did his best to be just as friendly back.\n\n\"Oh. Well, this seems like a pretty good time to do that,\" he told her as he glanced Karn's way. Norm had her trapped, and Rick desperately wanted to rescue her, but he couldn't break away without being rude.\n\n\"Your house looks amazing,\" Grace told him.\n\n\"That's all thanks to my mom,\" he modestly replied.\n\n\"She did a fantastic job!\"\n\n\"She's pretty amazing.\"\n\n\"I uh, I think you're pretty amazing, Rick,\" Grace said, that big smile now even bigger.\n\n\"Oh, gosh. Um...thank you. That's very kind.\"\n\n\"I have to admit I've thought about you a lot since we first met. And I was really hoping we might be able to maybe...spend some time together one of these days.\"\n\n\"Oh. Well, I uh, we...Emma would um....love to have Sophie come over sometime soon.\"\n\n\"Perfect! That'll give us a chance to get better acquainted!\" Grace said as though he'd just invited her, too. \"Listen, I know I'm a...little bit older than you...but I don't think adults should let something so insignificant get in the way. Don't you agree?\"\n\nFeeling even more trapped, Rick had no idea how to respond or even tell her the invitation was for one, when Norm called him over.\n\n\"Grace? Would you excuse me, please? My partner is summoning me.\"\n\nGrace laughed as though that was the funniest thing she'd ever heard.\n\n\"Sure! You go right ahead. No need to keep the boss waiting, right?\"\n\nThe thought of Norm being his boss turned his stomach, and yet, in one sense anyway, he kind of was. He made his way over to where Karn was still graciously enduring Norm's dissertation on trout farming.\n\n\"What's up?\"\n\n\"Did you know this beautiful young lady is a trout fisherman?\"\n\nBefore Rick could reply, Norm tapped Rick's stomach with the back of his hand and said, \"Make that fisher...woman.\"\n\nKarn dutifully laughed and told Rick that was true.\n\n\"At least I used to be. Back when I was married.\"\n\nShe said it in a way that didn't tell Rick anything about her previous marriage or how it ended, but he was now very interested in learning more about it\u2014and her.\n\n\"I offered to take her, but she's evidently a very busy lady,\" Norm said, this time elbowing his partner.\n\n\"Oh, right. Yeah, teachers don't just teach. They have papers to grade, lessons to plan, parents to meet with, and a lot of other things we don't see.\"\n\n\"It can't be that hard, can it?\" Norm quipped loud enough for Karn to here. \"I mean, they work what? Maybe a 180 days a year? Hell, I'd love to have a job like that!\"\n\nRick knew he had to act, so he looked at Karn and said, \"Karn? I was wondering if I could maybe show you around.\"\n\nThere wasn't all that much to see, but the relief on her face said it all.\n\n\"Yes, of course. I would love that!\" she told him as she let Norm know what a pleasure it was talking to him.\n\n\"You okay?\" Rick asked when they were far enough away that hi partner couldn't hear.\n\nShe laughed quietly then said, \"He's a very nice man.\"\n\nRick was surprised by her comment but pleasantly so.\n\n\"Yes. Yes, he is,\" he agreed.\n\n\"And you have a very nice home,\" Karn said as she looked around.\n\nRick explained who'd done all the work, and Karn laughed again.\n\nThe 'tour' was over in less than three minutes, and when it ended, Rick realized his mouth was suddenly very dry.\n\n\"Would you care for some wine?\" he asked.\n\n\"I'd love a glass,\" she replied with that amazing smile. \"But just a little. Gotta drive home, and a DUI would put my speeding tickets to shame. And me in jail.\"\n\nNow Rick laughed and promised he wouldn't try and get her drunk. Her genuine laugh caused another surge of something pleasant, and he promised he'd be right back. He poured two glasses, and when he turned around, Grace was right there again, that smile still on her face.\n\n\"Is that for me?\" she asked with an outstretched hand.\n\nHe looked at Karn who nodded and smiled understandingly as the look on his face, as well as Grace's presence, said it all.\n\n\"I uh, I believe it is,\" Rick said as he handed it to her.\n\n\"Cheers?\" Grace offered, unaware that Rick's mind\u2014and eyes\u2014were elsewhere.\n\nTo his great relief, Emma came out of her room a minute or so later, and she and Sophie latched onto their teacher who was clearly happy to see them both as Rick once again plotted his exit strategy. But thinking and doing proved to be two very different things as Grace was proving to be a formidable challenge.\n\nJust as he was ready to force his way out, Karn came over, excused herself then said, \"I'm sorry, but I really need to be going. I just wanted to thank you for inviting me and tell you again you have a very lovely home.\"\n\n\"Oh. I...that's....\"\n\n\"It was so nice seeing you again, Ms. Peterson,\" Grace said without really looking at the more attractive woman.\n\nKarn told her 'goodbye' then smiled at Rick who had feelings of desperation welling up inside of him.\n\n\"Now that I finally have your undivided attention,\" Grace said as Karn walked away.\n\n\"Right,\" Rick replied, never taking his eyes off of Emma's teacher or her amazing figure underneath the pretty-but-modest dress she'd worn.\n\n\"So when would be a good time for us to get together?\"\n\nRick didn't hear a single word. He set his glass down, gently touched Grace's forearm, then, without looking at her, said, \"Would you please excuse me for a moment?\"\n\nUnsure what was going on, Grace mumbled, \"Okay,\" before looking to see what had his attention. When she saw Sophie's teacher walking down the front porch steps, she bristled.\n\nRick quickly made his way to the front door then opened it, stepped outside and called out, \"Karn?\"\n\nThe older woman stopped, turned around, smiled and said, \"Did I forget something?\" as she looked at the purse slung over her forearm.\n\n\"No. I...I just wanted to um...talk with you. If you have a moment.\"\n\nHe quickly closed the distance between them and was now right in front of her as she said, \"Of course. Anytime.\"\n\n\"I uh, I wanted to thank you for coming,\" Rick blurted out.\n\nKarn managed not to laugh as she said, \"Well, I believe you already did that, but I must say it was my pleasure.\"\n\n\"Right. I...I suppose I did, huh?\" Rick said as he looked down briefly before looking back up at her. He was a good four inches taller than her even in the kitten heels she was wearing, but he still felt like he was out of sorts.\n\n\"Did you want to ask me something about Emma or school?\"\n\n\"Emma? No. I...I was just wondering if you'd...I mean, I've been meaning to ask you, if, um....\"\n\n\"Rick? Are you okay?\" Karn asked as he stammered away.\n\n\"Yes. No. I mean, I'm okay. I'm just not sure how to do this.\"\n\n\"Why don't you start with telling what it is you're trying to do?\" she politely suggested with another beautiful smile.\n\n\"This used to be so easy,\" he said without explaining what 'this' was.\n\n\"This?\" Karn asked.\n\nRick finally steadied himself and said, \"I haven't asked a woman out in....\"\n\nHe was trying to count up the years when Karn smiled and before he could finish said, \"If you're asking me out, I'd say 'yes'.\"\n\n\"Really?\" a happy, surprised police officer replied.\n\n\"Yes. Unless it's to go trout fishing. I did do that with my ex-husband, but I never liked it. In fact, I didn't enjoy it all. I just couldn't find any other common ground with Norm, and I sort of blurted that out without thinking. I mean, I really have gone trout fishing a few times, it's just not something I'd ever do again of my own free will.\"\n\nRick laughed nervously and promised he had no intention of asking her to go fishing with him.\n\n\"I don't even know when fishing season is in Illinois, so you can relax.\"\n\nKarn laughed and smiled and then thanked him for that.\n\n\"The uh, the truth is, I haven't had time to think of where to ask you to go. It's not that I haven't thought about it\u2014and you\u2014a lot...it's just that....\"\n\nKarn laughed politely, smiled, then said, \"It's okay. I understand.\"\n\n\"Oh. Good. Because I'm not sure I do. It really has been many years since I've done this.\"\n\nHe looked down again for a second then told her as succinctly as he could what Emma's mother had done.\n\n\"Emma's only mentioned her mother once, and when she did, she seemed so sad. I didn't ask why, but I'm glad you told me, because now I understand and can use that to help me help her.\"\n\n\"It was pretty awful. Especially for Emma.\"\n\n\"My husband did something very similar to me. It just happened to involve a woman half my age.\"\n\nRick stared at her beautiful face for a moment then said, \"He's a fool.\"\n\nKarn got serious and said, \"I still can't understand it. I've accepted it and moved on, but I'll probably never fully get why he left. Then again, I don't really care anymore.\"\n\n\"I'm sorry that happened to you. You certainly don't deserve it.\"",
        "\"Nor did you or Emma,\" she said very sweetly.\n\nThere was an awkward silence for a few seconds before Rick finally spoke.\n\n\"Can I maybe call you when I get my act together?\" he asked, a goofy little smile on his face.\n\n\"Of course. You have my number, right?\"\n\n\"I do. And the school's email address.\"\n\nKarn laughed then said, \"Rick? May I ask you something?\"\n\n\"Sure. Anything.\"\n\n\"You saw my driver's license. Did you notice, you know, that I'm...older than you?\"\n\n\"I did,\" he told her. \"And when I saw it, I was sure it was a typo.\"\n\n\"Oh, my goodness. You just made my day!\" the pretty blonde replied.\n\n\"It's true. I told my mom I pulled over a beautiful blonde on my first day and mentioned the fact that you look much closer to my age than the one on your license.\"\n\nKarn smiled again then said, \"I'd ask your age, but I'm afraid to hear the answer.\"\n\n\"In that case I'll keep that to myself.\"\n\nAnother laugh followed along with her thanks.\n\n\"Is it really that important to you?\" Rick asked.\n\nKarn looked at him for a second or two then said, \"No. I don't think it is.\"\n\nRick's dark hair and beard made him look older than he was. He was clean shaven, but she could see his very dark facial hair quite clearly. And after having been unceremoniously 'dumped' herself, she had a more openminded perspective on men now. It wasn't that she was unconcerned, it was more that she was now at least willing to try something new. Like dating a man who was quite a bit younger than her.\n\n\"So I'll call you soon then?\" Rick both said and asked.\n\n\"Yes. Please do. I'll look forward to it,\" she said, again very sweetly.\n\n\"And thank you for coming, Karn.\"\n\n\"Oh, it was my pleasure. And please tell you mom for me again how nice everything looks.\"\n\n\"I will,\" Rick promised before opening her door and saying 'goodbye'.\n\nAs she drove off he realized he hadn't had feelings of any kind for any woman since his own 'dumping', but he most definitely had them now. And whether they lasted for one date or even a couple more it felt incredibly good to feel like this again, and he planned on nurturing these newfound emotions for as long as he possibly could.\n\nAs he turned to go back inside he saw Grace on her way out with Sophie in tow.\n\n\"You two leaving already?\" he asked cheerfully.\n\n\"I see no reason to stay here any longer,\" Grace tersely informed him as she walked by without so much as looking him.\n\n\"Bye, Sophie!\" Rick said to her daughter knowing her mom wasn't in the mood to talk.\n\n\"Bye, Mr. Gates!\" she called back as her mother said, \"Sophie? Let's go!\"\n\n\"Nice job, assh....\" Rick said to himself before changing the last word to 'buddy' just as one of two car doors slammed shut in quick succession before Grace sped off.\n\nBack inside the house, Rick saw Norm, Emma, Captain Brunell, and and his mother standing together and talking. The remaining guests were in another small group sipping wine and doing the same thing.\n\n\"You really pissed off the other cute woman there, rookie,\" Norm said as Rick joined the group.\n\n\"I did?\"\n\n\"Yeah. She saw you outside with the blonde hottie and after watching from the window for a minute or so, she called for her kid and stormed out. Didn't even say 'goodbye' to your mom.\"\n\n\"That explains a lot,\" Rick replied as he thought about the way Grace left.\n\nHe looked at his mom who smiled and told him she'd explain later. Before he could say anything she looked back at the captain and said, \"You were saying, John?\"\n\nNorm jabbed his partner again then, at least quietly this time, said, \"Your mom seems to have a thing for the cap'n.\"\n\nHe watched them interact then told Norm he might be onto something.\n\n\"Ya think?\" the older man said. \"Believe me when I say I know women, and I know that look. Trust me, she's likin' the boss.\"\n\nRick didn't know the captain well. In fact, he'd spent maybe ten minutes in his office on his first day at work getting welcomed aboard. But other than that, he didn't know a thing about him. But he seemed polite, professional, and if his mom enjoyed talking to him, that was just fine with him.\n\n\"Hey. You got any beer here? I'm not much for girly drinks like wine,\" Norm said as he elbowed his partner one more time.\n\nRick went with him and grabbed a beer out of the fridge then picked up the glass of wine he hadn't touched yet as Norm took a long pull from the green bottle before belching loudly.\n\nWhen Bonnie and the captain both looked over, Norm managed a little, \"Sorry,\" and all Rick could do was shake his head as his partner asked if the blonde bombshell really was a trout fisherman.\n\nAn hour later all the other guests, including the captain, had long since gone, but Norm was still going strong\u2014and on his third beer\u2014about trout. Bonnie used Emma as a reason to get away while Rick broke down and grabbed a beer himself. \n\nAfter Norm's forth and a lull in the conversation, his new partner insisted on driving the veteran officer home. He got a lot of initial resistance, but when Bonnie offered to drive his car, Norm gave in and agreed. She drove Norm's car while Rick followed in his with Emma who was very confused about what was going on.\n\n\"Don't feel alone, honey. We're all a little confused after tonight,\" her father told her with a laugh.\n\n\"Did you and Ms. Peterson get a chance to talk?\"\n\n\"We did.\"\n\n\"Really? Tell me about it!\" his daughter asked, the excitement in her eyes coming through loud and clear.\n\n\"How would you feel about me going out with her. On a date?\"\n\nEmma's eyes opened wide as she again said, \"Really?\"\n\n\"I take that would be okay?\"\n\n\"That would be SO okay!\" came the happy reply.\n\n\"You really like her, don't you?\"\n\n\"She's like my teacher, a best friend, and a mom all rolled into one,\" Emma informed him.\n\n\"Really?\" her dad asked, causing Emma to laugh when she realized he was saying it like she did both times.\n\nHer answer was serious, though.\n\n\"I really like her, Dad.\"\n\n\"I can see that,\" he told her as he looked over being adding, \"And I kinda like her, too.\"\n\nOnce Norm and his car were safely home, Bonnie got in with her family and said, \"That man can talk!\"\n\n\"Trout?\" Rick asked, knowing the answer.\n\n\"Oh, my goodness! I had no idea there was so much to know about...fish!\"\n\nRick chuckled then asked his mom what happened with Grace.\n\n\"Yeah, Grandma. Why did Sophie have to leave all of a sudden?\"\n\n\"I think she really likes your father, honey.\"\n\n\"Who wouldn't, right?\" Emma said with a smile.\n\n\"I'm with you, but when a woman gets jealous, she can get pretty upset.\"\n\n\"Oh. 'Cause of Ms. Peterson, huh?\" the young girl said once she realized what was going on.\n\n\"Your teacher is a very beautiful woman. And she's also as nice as they come. I think Sophie's mom just assumed your father had no interest in her and when she found out he does....\"\n\n\"Ohhh,\" Emma said. \n\nShe thought for a moment then asked, \"So is Sophie going to mad at me again?\"\n\n\"What? No. Of course not,\" her grandmother said, knowing she couldn't be sure about that.\n\n\"But her mom is mad at my dad, right?\"\n\n\"She's just a little...hurt. But she'll be okay.\"\n\n\"Is it always like this with grownups?\" Emma wanted to know.\n\n\"No. Not always,\" her grandma said with a smile. \"But you're a very pretty girl, Emma, and there will be a lot of boys whose feelings are going to get hurt, too, because you can't like all of them.\"\n\n\"Why can't I?\" Emma asked, her maturity failing her for once.\n\n\"Not...like them, honey. Like...them.\"\n\nAgain, Emma said, \"Ohhh. Duh! I get it!\"\n\n\"Isn't getting older fun?\" her father asked.\n\n\"I don't know. It seems...complicated.\"\n\nRick looked at his mom who tried not to laugh, but when her son smiled, both of them lost the battle.\n\n\"Getting older makes people weird!\" Emma announced before crossing her arms and pretending to pout at being laughed at, causing more laughter.\n\nRick found it nearly impossible to get to sleep that night. He sat up until 1am thinking about Karn and mulling over ideas for a first date. Then the word 'date' caused him to sit there and think about what that meant. It had all kinds of implications for him. Like...a failed marriage, a daughter he loved more than anything who was growing up without a mom, and how any future dating would affect Emma.\n\nThe mental thought stream continued until around 2am when his brain finally turned off when it realized it wasn't required to turn on again at 6am. It was the weekend and neither he nor Emma had to go to work or school.\n\nEmma was in the kitchen waiting for her father when he stumbled in around 8 o'clock.\n\n\"Morning, Daddy!\"\n\n\"Hey there, sweetie. How long you been up?\" he asked, one eye still shut from the sleep in it.\n\n\"Um...since 6:45 or so.\"\n\nHer dad looked around and saw the sink was empty, the dishwasher was running, and that his coffee pot was ready to go.\n\nHe stopped at the table, bent down, and gave his sweet girl a hug and kissed the top of her head.\n\n\"You're amazing.\"\n\n\"Thank you!\" Emma said, a big smile on her face. \"Did you sleep okay?\"\n\nRick hit the 'on' button on the Mr. Coffee then said, \"Not so much.\"\n\n\"Is that maybe because of Ms. Peterson?\" his daughter gingerly asked.\n\nHe turned around and tried to smile but his tired face was working yet.\n\n\"Yeah. I think maybe it was.\"\n\n\"Why? Don't you like her?\"\n\n\"I do. I like her a lot. I'm just not sure about where to take her on a first date.\"\n\n\"You could go to dinner.\"\n\n\"True. But that's so...cliche.\"\n\nEmma knew that word, so she didn't ask for an explanation.\n\n\"How about a movie? Is that cliche, too?\"\n\n\"Um...kind of.\"\n\nShe thought for a minute or so, then said, \"What about ice skating?\"\n\nHer dad tilted his head as he looked at her then said, \"Honey? Are you sure that's such a good idea.\"\n\n\"Unless she doesn't know how,\" Emma said, shooting her own idea down.\n\n\"No. It's just that, you know, you and Mom used to ice skate.\"\n\nIn fact, the three of them went quite a few times together in North Carolina just before Ellen bailed on them, and it was one of the last happy memories they had as a family. They hadn't been since Emma's mom walked out, and Rick was concerned this might not be such a good idea.\n\n\"I know,\" his daughter said with no hint of emotion. \"But it was fun, and I want you to have fun again, Daddy.\"\n\n\"Maybe she doesn't know how,\" her father replied, now wishing the subject had never come up.\n\n\"Then just ask her, Dad. It's not that hard.\"\n\nHe looked at his daughter and wondered how old Emma really was. There were times when she seemed to be much too old for her age, and that thought made him feel even worse. He didn't say anything, though. He only made a better effort to smile when he spoke.\n\n\"Okay. I'll ask her,\" her father said, a little smile forming at the corners of his mouth.\n\n\"So...pancakes or bacon and eggs?\" his too-old daughter asked.\n\n\"I love bacon. And I love eggs. But I should probably start watching my fat and cholesterol intake.\"\n\n\"Dad. There's a new study out that says cholesterol isn't linked to heart disease.\"\n\n\"What? Where did you here that from?\"\n\n\"Ms. Peterson. Someone in class was saying their grandpa had a heart attack because he ate too much cholesterol and it clogged his arteries.\"\n\n\"Wait a minute. Just how old are you?\" her father asked, his eyes narrowed as though he was examining her.\n\n\"Daddy!\" Emma replied with a laugh. \"But I'll make pancakes if it makes you feel better.\"\n\n\"No. That's okay. If bacon and eggs won't kill me, fire up the grease!\"\n\nAround 11am, Rick got out his phone, and after staring it at for a minute, he took a deep breath then dialed the number.\n\n\"Rick. Hi,\" he heard Karn say in a very pleasant voice.\n\n\"Good morning.\"\n\n\"Good morning to you, too,\" came the cheerful reply.\n\n\"I know I'm supposed to make small talk, but I'm really bad at it.\"\n\nKarn laughed and let him know that wasn't a requirement.\n\nRick's laugh was one of nervous relief as he steeled his nerve and said, \"I was wondering if you might like to maybe go...ice skating. With me.\"\n\nHe could tell Karn was smiling, but she didn't laugh.\n\n\"The weather is supposed to turn cold in a couple of days, and you want to make me give up my summer clothes early, huh?\"\n\nShe was clearly teasing, but Rick hadn't seen the weather report for several days and had no idea. But it was mid-September in Bloomington, and he was surprised it wasn't already cold outside.\n\n\"Sorry. We could...go to dinner or see a movie.\"\n\n\"I love to skate,\" Karn told him. \n\n\"Really?\"\n\n\"I was fairly good at it when I was Emma's age and a little older. I haven't been in a long time, but I do love it.\"\n\n\"Is...tonight okay?\"\n\n\"I think I can squeeze you in,\" he heard her say, the teasing still obvious.\n\n\"You sound like you're joking, but I would expect you to have quite a few guys interested in going out with you, and if you had plans....\"\n\nKarn didn't tell him whether or no that was true. There were several men who'd asked her out in the last couple of months alone, but she'd only said 'yes' to two of them, and neither of them had been someone she wanted to see a second time. That, plus having been left in the way it happened were big parts of the reason she was willing to go out with him.\n\n\"No. Not hardly,\" she told him. \"But you, on the other hand, must have to carry around the proverbial stick.\"\n\nIt took him a second or two to realize what she meant, and in the meantime she said, \"But then you carry a gun, so a stick probably isn't necessary.\"\n\nRick relaxed a little, laughed at her humor, then asked if he could pick her up around 6.\n\n\"Yes. That sounds great.\"\n\n\"Okay. I'll uh, I'll see you then.\"\n\n\"Oh. Is Emma coming?\" Karn asked just before he said goodbye.\n\n\"She loves to skate, but....\"\n\n\"Then please bring her!\" \n\n\"You don't mind? You see kids all day.\"\n\n\"Yes, but there's only one Emma, right?\" \n\nKarn's voice was pleasant and sweet, and Rick smiled as he agreed with her.\n\n\"Yes. Yes there is.\"\n\n\"So I'll be ready by six.\"\n\n\"Great. I'll...we'll see you then.\"\n\nWhen Rick told his daughter she'd be going with them, she said, \"Daddy, no! I don't want to ruin your date.\"\n\nHe put his hands on her shoulder and said, \"Emma? There is nothing in this world you could ever do to ruin anything in my life. Okay?\"\n\nShe didn't say anything, but she didn't have to. The way she hugged him said it all.\n\n\"So be ready to leave at 5:30, okay?\" he said when she let him go.\n\n\"Okay! I will!\" his daughter called out in a happy voice he hadn't heard in much too long, or at least since he'd told her he liked her teacher.\n\n\"You wanna ring the doorbell?\" Rick asked when they got to Karn's house.\n\nShe smiled then pushed the button and waited for the door to open.\n\n\"Well hello! If it isn't my favorite police officer and one of my favorite students!\" Karn said, a huge smile on her beautiful face as she invited them in.\n\n\"Hi, Ms. Peterson,\" Emma said as she walked in. \"You look really pretty.\"\n\n\"Thank you, and so do you,\" her teacher replied.\n\nKarn had her hair pulled back into a ponytail and was wearing just a touch of makeup that included some ice-pick lipstick. Rick was no fashion expert, but he assumed it was because it matched the color of the sweater she was wearing. He also assumed she was wearing black tights rather than pants and was correct on both counts.\n\n\"I agree with my daughter,\" Rick told her.\n\nKarn smiled and thanked him, too.\n\n\"I'm ready if you are?\" Karn said.\n\nWith that, she picked up a white, puffy coat, some white gloves, and a white stocking cap along with her purse then said, \"I hope the AC works in your car!\"\n\nIt wasn't hot outside, but it would be too warm for what everyone was wearing in the car.\n\n\"It does,\" Rick assured her as they headed outside.\n\nHe opened the door for her, and Karn thanked him, another amazing smile coming his way.\n\nRick was content to listen to Emma and Karn talk about skating the entire way there. It took some prodding to get her to admit it, but she finally admitted she'd finished third in a state-level competition when she was 12 years old.\n\n\"I think after that, I realized I was never going to be all that good, and I kind of just gave it up,\" Karn explained when Emma asked if she'd won any other trophies.\n\nWhen she asked Emma, \"How about you? Do you like to skate?\" Rick wondered how Emma would respond.\n\n\"I only went a few times, and that was when I was little,\" she said with no hint of sadness or any mention of her mother.\n\nThe rink wasn't busy, and with only a few people there, the three of them were able to do pretty much anything they wanted. Karn kept saying how rusty she was, but both Rick and Emma were impressed by everything she did. She wasn't showing off by any means, but she still knew how to skate very well, and Emma was amazed.\n\n\"Can you teach me how to do that?\" Emma asked each time Karn tried something new.\n\nShe picked up each new move fairly quickly while Rick managed to fall down several times trying to repeat what his daughter had done on the first or second try. The two-foot, three turn seemed impossible to him, but Emma did it on the first go 'round and the same was true when Karn showed them how to do a two-foot glide with a leg lift. On that move, Rick managed not to crash and...freeze...but he wobbled so much he brought the leg down immediately before face planting on the ice.\n\n\"Will you skate for us?\" Emma asked after a half hour or so of learning.\n\n\"Oh, I don't know,\" Karn said.\n\nRick stood behind Emma, his hands on her shoulders then said, \"Please?\"\n\n\"Well, okay. But it won't be much to see,\" she warned them.\n\nNeither of the Gates had any idea how difficult the things Karn did actually were, but both of them were wowed by her grace as she glided around skating backwards and doing a couple of basic moves, one small jump, and then a tight spin at the end.\n\nWhen she skated back over to them, Emma was so excited she threw her arms around her teacher who was smiling from ear to ear.\n\n\"I'm impressed,\" Rick told her as she hugged his daughter back.\n\n\"So am I,\" Karn replied, a reference he assumed had something to do with him and most likely his parenting ability. He'd love to take credit for it, but most of it was just how Emma was.\n\n\"Now you and my dad go skate!\" Emma said as she let go of her teacher.\n\n\"Just be ready to move if I fall your way,\" Rick warned. \"I could kill both of us!\"\n\nKarn laughed then took his hand and said, \"Come on!\"\n\nRick saw Emma beaming with happiness as Karn pulled him away. Within moments, he forgot about his daughter as he skated hand in hand with this incredibly attractive older woman who was now getting inside his heart as well as his head.\n\nEmma skated by herself practicing what she'd learned and occasionally looking at her father and her teacher. Each time she did, it made her smile.\n\n\"Our time is just about up,\" Karn said as she looked at the clock in the rink.\n\n\"Right you are!\" Rick agreed as they headed for the wall nearest the exit.\n\nKarn got to the side of the rink first, and as Rick skated in behind her, he had the usual amount of trouble stopping.\n\n\"Look out!\" he called as he headed right for Karn.\n\nShe not only didn't move, she held out her arms and caught him and brought him to a stop. As she did, Rick ended up in her arms not four inches from her face, and when he looked at her, she smiled. He smiled back, and when she didn't look away, something deep inside him told him to go ahead and kiss her. He prayed his instincts were right and leaned in.\n\nHe saw her eyes close as his lips met hers, and although the kiss lasted less than two seconds or so, it was the most amazing kiss Rick could ever remember. And just as it ended, Emma slid to a stop right next to them, and was all smiles as they looked down at her.",
        "\"Dad? Can we go for some hot chocolate?\" Emma asked as they were taking their skates off, making sure not to mention what she'd seen.\n\n\"Is that okay?\" Rick asked his date.\n\n\"Okay? I'd love that!\" she replied with that amazing smile of hers.\n\nAs they sipped their chocolate, Karn said, \"That was so much fun!\"\n\n\"We had a very nice time, too,\" Rick told her.\n\n\"Ms. Peterson? You are SO good!\" Emma said.\n\n\"You know what? You have a lot of natural ability, Emma. I bet you could be a very good skater.\"\n\n\"Are you serious?\" the excited nine-year old asked.\n\n\"Yes. I've seen a lot of skaters, and you pick things up very quickly.\"\n\n\"Dad? Could I....\"\n\n\"You'd need a coach, honey,\" her dad said before she could finish.\n\n\"Awww!\" Emma replied, nearly pouting, something she rarely did.\n\n\"Maybe we can figure something out,\" Karn told her as she reached over and ran her fingers through Emma's long, brown hair.\n\nShe looked at Rick to gauge his reaction, and when he smiled, Karn said, \"I've missed skating, and after tonight, I wouldn't mind going more often.\"\n\nWhen Rick's facial expression told her he approved, she looked right at Emma and said, \"I'm sure I could work with you a couple of times a week.\"\n\nEmma also looked at her dad who smiled and told her that was up to Ms. Peterson.\n\n\"I'm game,\" the beautiful blonde replied.\n\n\"So...can I?\" Emma asked.\n\n\"Yes. If Karn...Ms. Peterson is willing, sure.\"\n\n\"I am,\" Karn said, \"and if it's okay with your dad, maybe you could call me Karn when there aren't any other students around.\"\n\nThe look on Emma's face nearly cause Rick to get emotional again just before the thought hit him that this woman could possibly do what his ex-wife had done and break Emma's heart...again.\n\nBut just as with the kiss, he felt like he could trust his instincts, and they told him she wouldn't do that.\n\n\"It's okay with me, sweetie,\" Rick told his daughter.\n\nEmma was sitting next to her teacher and put her arms around her again and said, \"I love you, Ms. Peters...Karn.\"\n\n\"I love you, too, Miss...Emma,\" the older woman told her as she hugged her back again.\n\nEmma refused to walk Karn to her door when they got to her house as she hoped and silently prayed they would kiss again. After what seemed like the longest goodbye in the history of the world, Emma smiled when she saw her teacher put her arms around her dad's neck as they kissed goodnight.\n\nWhat she didn't know was that Karn told him she'd had the best time she could remember in many years and that her dad agreed with her. They also agreed to see each other the following day when Karn offered to make dinner for them.\n\nRick accepted, and when he told Emma on their way home, she squealed with happiness.\n\n\"Dad?\" Emma asked a few seconds after the squeal.\n\n\"Uh-huh?\"\n\n\"Can we go to church sometime?\"\n\nRick looked at his daughter then asked why she wanted to know.\n\n\"Well, I asked God for you and Karn to kiss when you said goodnight, and you did. And He also answered my prayer for you guys to go out again!\"\n\nAfter Afghanistan, Rick's already shaky personal faith had all but vanished, but he had faith in his daughter, and if it was something she really wanted to do, he'd happily take her one day.\n\n\"Sure, honey.\"\n\n\"Dad?\"\n\n\"Yes?\"\n\n\"I am SO happy!\" Emma told him.\n\nHe reached over and squeezed her small hand and said, \"You know what? So am I.\"\n\nThe next morning, Rick was hoping his daughter would forget about church, but he'd given his word, and his word was his bond. So, after breakfast, he asked Emma if she still wanted to go to church.\n\n\"Yes. Can we?\" she asked.\n\n\"I don't really know where to go, honey. We can drive around and you can pick one if you like.\"\n\nEmma agreed and after they got ready and headed out, she chose the first church they saw. It was an Episcopalian church, and as far as Rick was concerned, he thought he'd feel equally out of place there as anywhere else. He almost thanked Emma (and God) she hadn't chosen a Jehovah's Witness Kingdom Hall but didn't mention it.\n\nAs they walked inside, Rick was worried about doing or not doing something wrong, so he watched everyone else and after a few seconds he relaxed a little.\n\nA tug on his arm brought him back to reality.\n\n\"Dad. Look,\" Emma whispered. \"It's Ms...Karn.\"\n\nHe couldn't believe his eyes when he looked in the direction Emma was nodding, but there she was, sitting in a pew all by herself.\n\n\"Come on!\" Emma said excitedly as she pulled on her dad's arm.\n\n\"Is this seat taken?\" Rick asked once he was close enough that she looked over his way.\n\nKarn's face lit up in an instant.\n\n\"Hi! What are you two doing here?\" she asked, still in mild shock from seeing them.\n\n\"I'm not sure,\" Rick told her. \n\nHe smiled then said, \"But I'm beginning to think it's a miracle.\"\n\nKarn gave him a puzzled look, and he told her he'd explain later. She gave Emma a hug and asked her to sit next to her. She did, but she took the other side so her father could also sit next to her.\n\n\"It's almost like we're a family,\" Emma whispered to her favorite teacher.\n\nKarn looked at her, smiled, then said, \"Yes it is, huh?\" as she took the girl's hand.\n\nShe then looked at Rick who also smiled before holding his hand out. Karn looked at it for a second then took it and smiled back at him just as the service was about the begin.\n\nRick had only been to a Baptist church and only a few times. He'd never been to a liturgical service before and felt lost most of the time. But sitting next to Karn more than made up for any discomfort he might be feeling. When it ended, Rick mentioned how surprised he was to see Karn sitting there.\n\n\"But pleasantly so,\" he added.\n\n\"I started coming after my divorce. I've never been very religious, but this has helped...center me.\"\n\nShe then asked why they came, and Rick explained the reason why as Emma shyly sat there hoping her teacher wouldn't be upset.\n\n\"You were praying for your dad and I to...keep seeing each other?\" she asked her student.\n\n\"Yes. Is that okay?\" Emma asked, her face kind of scrunched up in worry.\n\n\"Of course it is, sweetie. And to tell you the truth, I'm glad you did.\"\n\nThat earned another 'Really?' from Emma and Karn assured her it was true.\n\n\"I like you both very much,\" she said to Emma while looking at her father.\n\n\"Well, we feel the same way,\" Rick told her as they got up to file by the priest who was now at the doors waiting for his parishioners to file out.\n\nRick shook his hand, and the priest said he hoped to see him and his daughter again soon.\n\n\"You just might,\" Rick replied as Karn shook his hand.\n\nAfter she said her goodbyes, she suggested they all go back to her place rather than wait for dinner. \n\n\"If you don't mind.\"\n\n\"Can we, Daddy? Please?\" Emma asked as she grabbed Karn's hand.\n\n\"You don't have to beg, honey. I like Karn just as much as you do.\"\n\nEmma smiled, then hugged her dad, then asked if she could ride with her teacher.\n\n\"It's okay with me, Rick.\"\n\n\"Then I'll follow you,\" he said as Emma smiled happily and thanked him. \"But you're not allowed to drive.\"\n\n\"Dad!\" his daughter said, causing him and Karn to laugh.\n\nRick wanted to kiss this beautiful, older woman in the worst way, but because they were still technically at church, he settled for touching her hand before they parted ways.\n\nBefore they knew it, it was 8 o'clock at night and they stayed for both lunch and dinner. The day literally flew by as they played games, talked, and ate. \n\n\"We should be getting home so Emma can get ready for...school,\" Rick said just after eight. He would have said 'go to bed' but didn't want to embarrass his daughter.\n\n\"I am so glad you picked my church, Emma, and I'm even more happy that you spent the day with me,\" Karn told her favorite new girl.\n\n\"Do you think it was a miracle, Karn?\" she asked.\n\n\"I don't know, sweetie. Maybe. But even if it wasn't, it was a very wonderful surprise.\"\n\nEmma gave her a big hug then said, \"I'll give you guys a chance to say 'goodbye' alone, okay?\"\n\nWithout waiting for an answer, she left the room leaving Rick and Karn by themselves for the first time all day.\n\n\"This was pretty wonderful,\" Rick told her as he reached for her hands.\n\n\"I agree,\" Karn replied sweetly as she pulled his arms around her waist. \n\nWhen Rick smiled, she said, \"You know, Emma might be praying for us to kiss again.\"\n\n\"Oh, right. And we definitely want to make sure that prayer gets answered, huh?\" Rick said as he pulled her closer.\n\n\"I have to admit I really did have some concerns about, you know, our...difference in age.\"\n\n\"But?\" Rick asked as they stared into one another's eyes.\n\n\"But...now...I can't help but think maybe this was...meant to be.\"\n\n\"I've never believed in miracles before. I'm not even sure I really believe in God, but after today, I have to admit there are things I can't explain.\"\n\nKarn smiled at him and Rick smiled back as she put her hand on his cheek as he kissed her softly.\n\n\"Like how I can feel the way I do about you already,\" he said very quietly when their lips parted.\n\n\"I was thinking the very same thing,\" Karn quietly told him.\n\n\"I haven't felt like this about anyone since....\"\n\nHe almost said, \"Since my ex-wife and I started dating,\" but even then it wasn't like this. So he said, \"Ever,\" which was the truth.\n\n\"So it isn't just me?\" Karn asked, her arms now around his neck.\n\n\"You are so beautiful,\" Rick told her quietly before kissing her again.\n\nWhen the kiss ended, both of them heard a quiet, \"Yes!\" from Emma before hearing her also say, \"Thank you!\"\n\n\"I do believe another prayer was just answered,\" Karn told him with a very happy smile.\n\nRick laughed quietly then got serious.\n\n\"I want to see you again, Karn. Soon. And often.\"\n\n\"I've completely cleared my schedule\u2014just in case,\" she told him with a little laugh. \"So you may see me as often as you like. And I really do want to work with Emma at the rink.\"\n\n\"Would it be okay if I tagged along? You know, just to be near the beautiful woman I'm falling for?\"\n\n\"She'd like that. Very much,\" Karn told him before kissing him one more time then walking him, and Emma, to the door.\n\n\"Goodnight, Ms...Karn,\" Emma said as the two 'women' embraced.\n\n\"Goodnight, honey. I'll talk to you tomorrow about going skating, okay?\"\n\nEmma agreed then stood there hoping\u2014and praying\u2014she and her dad would kiss again. They did, but it was a very quick kiss, but that was enough to bring another big smile to her face as they all said 'goodnight'.\n\n*****\n\nThings got a little crazy after that Sunday together. Captain Brunell continued seeing Bonnie, and Karn began working with Emma three days a week at the rink and spending as much time as she could with her and her father. They didn't do crazy things or even anything all that exciting. They were content to stay home and watch movies or make dinner together or just sit and talk.\n\nBoth Rick and Karn knew they hadn't really dated anyone else since losing their spouses, but they both believed that it wasn't important that they do so. And the more time they spent together, the more they grew to believe that. And they also believed that an hour spent together in church each Sunday was a positive investment for them individually, and later on, as a potential family.\n\nRick's mother couldn't have been happier for her son and granddaughter, and she and Karn hit it off immediately. Bonnie began teaching her how to quilt, and Karn even managed to get Bonnie to come to the rink and skate with them. Getting her new police captain/boyfriend to so was another matter. \n\nShe was even worse then her son had been the first they went together, but she loved being with them so much she was willing to brave falling down and looking foolish just to spend time with the people she loved the most.\n\nOver the Christmas break, Rick, Karn, and Emma took their first trip together as a family and braved the crowds in Orlando, Florida, as they walked around the Magic Kingdom, much of the time hand in hand. They road roller coasters, ate cotton candy, and bonded even more during the three days they spent there.\n\nAs far as lovemaking was concerned, neither of them were in any great hurry. They'd been dating since September and still hadn't been together in that way, but when they got home, Bonnie suggested keeping Emma for a couple of days.\n\nEven though she was only nine, Emma had pretty good idea of what was going on, but all she cared about was her father and Karn being together\u2014whatever that meant for grownups.\n\nSo on that first night, in Karn's bedroom, Rick made love to this amazing, older woman he'd fallen in love with. And for the first time, he told her that after they'd explored one another's bodies the way only new lovers can.\n\n\"I love you, too, Rick,\" she told him as her eyes filled with tears. \"I was so devastated when my husband left me, and I often wondered if I'd ever meet anyone I could love.\"\n\n\"Oh, I get it,\" Rick told her immediately. \n\nHe smiled at her and said, \"It's like the Far Side comic strip where it says, 'And then a miracle happened'.\"\n\nKarn hadn't seen it, but that didn't matter.\n\n\"Yes. Yes, it did,\" she replied with a warm, loving smile of her own. \"And speaking of miracles....\"\n\nShe reached for him, and to her great delight, he was ready for another 'go'. When she mentioned it, Rick laughed then told her, \"You see. There really are benefits to dating a younger man.\"\n\n\"Yes there are,\" she said as she guided him in and moaned softly as they made love a second time within an hour.\n\nRick waited until Spring Break to propose even though he knew he was in love well before the winter holidays. When he finally asked her, at the skating rink no less, Karn playfully asked him what took him so long after loudly shrieking, \"YES!\"\n\n\"That's a rhetorical question, I hope,\" Rick replied as he slid the ring on her finger before they held each other as with Emma and Bonnie joined in. Even Captain Brunell showed up and shook his young officer's hand and congratulated them both. He just didn't do any hugging.\n\nRick looked down at Emma who'd just turned 10 as they all held onto each other. She looked up at her dad and said, \"Yes, I know what 'rhetorical' means, Dad.\"\n\nThe four of them laughed, hugged each other some more, and reveled in the moment; a moment they wished would never end.\n\n*****\n\nThree years later. Springfield, Illinois\n\n\"Can you wish your big sister good luck?\" Rick asked his two-year old son.\n\nThe little boy looked at his beautiful, 13-year old sister and said, \"Good luck, Emma!\"\n\n\"Thank you, Michael!\" she told him as she got ready for her first-ever competitive event.\n\n\"You can do this, honey!\" Karn told her just before Emma got ready to go out on the ice.\n\n\"Thanks, Mom!\" she told the woman she loved like her own mother. \"This is all for you today.\"\n\nKarn teared up as her daughter pushed off when the announcer called out her name.\n\nShe sat down between her husband and her mother-in-law and her own new husband, John Brunell, and took one of their hands as Emma skated out into the spotlight and waited for the music to begin.\n\n\"Are you nervous?\" Rick asked knowing his wife had been on edge for days.\n\n\"It's all up to her now,\" she said as the music began.\n\n\"It'll take a miracle for her to win,\" Rick whispered.\n\n\"Yes, it will, but I believe in miracles,\" she told him as she looked over at the handsome, younger police officer she loved with all her heart and the little boy they'd created together.\n\nEmma then executed her first-ever move in a competition, a single axel consisting of one-and-a-half revolutions.\n\nWhen she nailed it perfectly, Rick squeezed his wife's hand and said, \"So do I, honey!\"\n\n \n"
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older woman",
        "attraction"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/its-a-miracle"
}