{
    "title": "The Ensigns of Detection Ch. 04",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 15 - Sources and Information \n\nTuesday, November 24th. Pizza was served at the noontime meeting in Classroom 'E'. Present were: myself, Chief Moynahan, Captain Cindy Ross, Lieutenant Tanya Perlman, Detectives Martin Nash, Diana Torres, Joanne Cummings, Theo Washington, and Teddy Parker.\n\nWe all told our stories of our interviews. I had to give the Chief a thorough briefing of who and what Elizabeth was, and why she was a 'person of interest' in this case due to her past history of industrial espionage and smuggling, which in my opinion distracted from the case at hand.\n\n\"So what is the thread running through all three of these cassssse-esssss?\" asked the Chief. \"What is the central theme here? What is the webbing that binds these cases?\"\n\n\"I think we've managed to stumble into a deep rabbit hole on this one, Chief.\" I said. \"Practically by accident, we're about to uncover several crimes, from fraud to industrial espionage... to murder. But to answer your question, Chief, the only real link is BigPharmaCorp itself.\" I said.\n\n\"What about that sto-len research drug?\" asked the Chief. \"Is that not central to all of this, as well as the arson fire at those apartments?\"\n\n\"Right now, sir,\" I replied, \"I see no connection between that and the late Michael Campbell Fulton. In fact, the only solid connection he has to the other cases, that we know about, is that his body was deposited on BigPharmaCorp property.\"\n\n\"Chief,\" said Martin Nash, \"I've asked for a warrant to search Fulton's, a.k.a. Campbell's apartment. As soon as that comes in, I'll go do that, and it may shed some light on this case.\"\n\n\"Okay, okay,\" said the Chief. \"Here's what I'm getting at: the Commander has a big whiteboard in that Mind Palace of his, and he can see these links. For the rest of us ordinary police officers, I suggest we use the real whiteboards. Who'd like to start?\"\n\n\"I'll be glad to, sir.\" said Cindy, getting up and opening the whiteboards that were on the wall on the right side of the room, as one looked from the door. \"How about we start with Robin Grayson?\"\n\nI did not fail to observe that she was well-prepared with photos, and I surmised that she and the Chief had 'conspired' to do these whiteboards, which were something I personally never did do all that much... the Chief was right in that I managed to do this in my head without really realizing it.\n\nCindy put up a photo of Dr. Robin Grayson on the top left corner of the whiteboard. \"I don't want to get too much into the weeds of his sexual affairs,\" she said, as a direct warning to Nash to keep his mouth shut about Emma Washburn, \"but we will have to speak of my darling cousin Elizabeth eventually.\"\n\nShe continued: \"Suffice it for now that Grayson and Dr. Wilkins had something going on between them that affected not only their working relationship, but things at the company. Grayson also once did research on the refined drugs of which a sample was found in the apartment of James and Susan Douglas... an apartment that was subsequently and conveeeeniently destroyed by fire some days later.\"\n\nCindy put up pictures of the Douglases. \"We don't have much on these guys. They're basically out-of-work losers, but except for a few pot busts they've stayed below the radars. They're the kind of people we know we have to be watching in order to find out anything on them. They have new lodgings at a duplex in the same area of the apartments the used to live in, but so far we've seen nothing from them.\"\n\n\"Next is Dr. Laramie Wilkins.\" said Cindy, putting his picture up. \"Head of the Research Department, Grayson's boss. Had no seeming problems in his life, but suddenly up and decided to commit suicide, or so it was made to appear. Didn't like it that Grayson was having a sexual affair with someone, even went and told Mrs. Grayson about that affair.\"\n\n\"Next,\" Cindy said as she put up another photo, \"is Michael Campbell Fulton, a.k.a. Mike Campbell, a Publix butcher who was found dead on the BigPharmaCorp property. Never worked for or at BigPharmaCorp, as far as we can tell. History of violent crime, assaults, rape, but went off the grid eight years ago. Not sure what his role in all of this is.\"\n\n\"Okay, anyone else?\" asked the Chief.\n\n\"Yes.\" I said. \"Dr. Tom Cubbard and his wife Lucy.\" As everyone gasped, I said, \"This would be a good time to tell you what I've found out about this lovely couple. First him: Tom Cubbard received a Masters in Industrial Engineering and at the same time worked towards his Ph.D. in Organic Chemistry. He was hired right out of school by BigPharmaCorp, and quickly placed himself on the Leadership track.\"\n\nI went on: \"He initially worked in the Research Department, but took a position as a Factory Overseer. He then got himself put in charge of their Quality Control Department, then became a full Factory Manager. After that, still in early thirties, he became a Sr. Vice President and Production Manager, then Chief Operating Officer. With the passing of Donovan Donolan, he became Acting CEO, and has recently been formally entitled the Interim CEO and is a candidate to take the position permanently.\"\n\n\"Very young to be so accomplished.\" said the Chief.\n\n\"He's definitely a brilliant, and also exceptionally ambitious man.\" I said. \"In some ways I can admire him. But the Union for the workers of the Company hate his guts with a passion. One of his hallmarks during his rise was his utter hatred of the Union. He constantly pushed against them, bird-dogged the Union employees. He would make surprise visits at 3:00am to see who was working and who was not, and would write up any Union employee not working, even if they were legitimately on break. He has had more grievances filed against him than every other Plant Manager in the system combined. The Union has come out strongly against him being named the permanent CEO.\"\n\nI continued: \"Now his wife is an interesting woman. Her maiden name was Lucy Covington, and she got her hooks into Tom pretty quick, from what I hear tell. She's originally from central Florida, where in high school she was known as an 'easy' girl, if you know what I mean. Had some early arrests for pot possession and use, and even a prostitution charge that was dropped. Rumor has it that she took on the entire high school football team one night at a party. She had good grades out of college, though, and got a position with BigPharmaCorp's Sales Department.\"\n\n\"How in the hell did you get all that information?\" Cindy asked skeptically. I smiled at her.\n\n\"In due time, Captain, in due time.\" I said. Cindy was just shaking her head in disbelief as I went on:\n\n\"So Lucy then became an assistant to a minor executive, came to our Town with him, and then met Tom Cubbard. These two became fast friends with a certain set of people, including Donovan and Trish Donolan, and certain others that are part of the Hedonists Swing Club. Cubbard is known to have a wandering eye, but word is that Lucy worked her way through half of the company's executives. Other secretaries caught their bosses with Lucy on her back on their desks.\"\n\n\"Sir,\" said Joanne Cummings, \"with all due respect: where do you get stuff like this?\" I could not help but smile again.\n\n\"I don't know where Elsie Gringer gets all this stuff, either,\" I replied, \"but a certain Auxiliary Policewoman, that being my mother, and Ms. Gringer share information, and some of it happens to drop into my ears at the dinner table. That goes for the information from Florida, as well.\"\n\nAmong the gasps of disbelief mixed with some laughter, the Chief said \"Creating sources like these is something similar to what the Vice Squad does in developing Confidential Informants. It's a valuable thing to do, and a good lesson for you Ensigns of Detection to ab-sorrrrrb.\"\n\nAnd absorb they did, as I continued: \"From these reports, it's easy to see a couple of patterns. First, Dr. Wilkins was in a place to know more than Dr. Grayson about the goings-on of BigPharmaCorp research, as Dr. Grayson was only involved in research at our plant here, while Dr. Wilkins was ostensibly over all research departments of all the BigPharmaCorp campuses.\"\n\nI continued: \"Second, Dr. Robin Grayson was like Dr. Cubbard in that he was also an ambitious man. Dr. Grayson 'married up', so to speak, marrying into his wife's money just as Donovan Donolan did by marrying Trish. Dr. Grayson was friendly with Lucy Cubbard, and I daresay Tom Cubbard had no problem with that: he either was hooking up with Mrs. Grayson behind Dr. Grayson's back, or else the Cubbards have open relationship... which I actually suspect is the case.\"\n\n\"I don't think that applies to the Graysons.\" said Cindy. \"The open marriage part, that is.\"\n\n\"No, it doesn't.\" I said. \"They have real problems in their marriage right now.\"\n\n\"So where do we go from here?\" asked Tanya Perlman.\n\nI said, \"When the warrant gets here for Fulton's apartment, Nash and Parker will lead that. Lt. Perlman, I'd like for you to supervise that, and work with them on finding the Stevens couple, who I suspect will be in the loving arms of the TCPD sooner than y'all might expect.\"\n\n\"Second,\" I continued, \"I am personally going to go with Detective Cummings and her team, which is calling themselves the 'Inquisition Team' behind her back, and we are going to do some interviews at BigPharmaCorp, come hell or high water. I especially want you, Joanne, to talk to Ashok, the research manager, though I may do so myself first if I get the chance. Upload pictures of James and Susan Douglas, as well as my dear sister Elizabeth, into your iPhones, ask all the Research staffers if those people are known to them. I recall hearing that some employees that were very bad were in the building; maybe that was the Douglases going in and getting that refined heroin sample.\"\n\n\"For myself,\" I said, \"I will be having a long, hard talk with Dr. Cubbard. The feast is over with him, time now for the famine...\"\n\n\"Where does your sister fit into this?\" asked Diana Torres. \"Is she behind the refined drug getting out?\"\n\n\"That's my going theory.\" I said. \"It cannot be a coincidence that she shows up, is friendly with Dr. Grayson, actually got into the labs and saw their layout... and then that sample shows up in the possession of the Douglases. No connections made between her and the Douglases yet, but it's something I'm working on...\"\n\nPart 16 - The Rip \n\nArriving at BigPharmaCorp, Cindy expressed surprise that the Security people let us in with absolutely no fuss. Joanne Cummings was in the backseat, and she also registered surprise.\n\n\"Power of the Crowbar, people.\" I said jokingly. \"Seriously, I think I know why they did, and we'll discuss that later.\"\n\nWe were met at the front security checkpoint by a slenderish woman with dark red hair. She was not very attractive, though her legs might've looked decent under the pantsuit she was wearing.\n\n\"I'm Lucy Covington,\" she said. \"If you'll come with me, I'll take you to a Conference Room, then Dr. Cubbard and his lawyer will come talk with you.\"\n\n\"Thank you, Mrs. Cubbard,\" I said, \"but my time is too valuable to be wasted sitting for an hour waiting for your husband to show up at his whim. I'll be in the Research Building, per these Court-issued warrants I am exercising, and I'll be talking with the Research Staff until Dr. Cubbard makes time to see me. If you'll excuse me, I think my Detective knows the way.\"\n\nLucy Cubbard's eyes had widened with shock; she now practically ran down the hallway as we went outside and toward the Research Building. Cindy was not able to keep from laughing, and Joanne was her joyously, seemingly innocent self.\n\n\"She almost lost her breakfast when you called her out as Cubbard's wife.\" Cindy said through her laughter.\n\n\"That was fun, I have to admit.\" I said. We arrived at the Research Building, where I wasted no time corralling Ashok into their conference room for an interview. Ashok was Indian, his skin on the darker side of the spectrum, and he talked with something of an accent that many Indian immigrants have. India is the largest English-speaking nation in the world, so there was no problem with language.\n\n\"First of all, do you recognize these two people?\" I asked, showing him pictures of James and Susan Douglas.\n\n\"I have never seen her, but I know him.\" Ashok said. \"He worked here for a short time. Didn't seem to know a damn thing about chemistry, couldn't follow instructions at all. We kicked him out after two weeks.\"\n\n\"Who hired him? You?\" I asked.\n\n\"No, not me. I do not know, but I believe the Personnel Department hired him.\" said Ashok. \"Normally candidates talk to me, Dr. Grayson and Dr. Wilkins, but I never spoke to James here, and suddenly he was showing up as being hired.\"\n\n\"I see.\" I said. \"What about this woman?\" I asked, showing him Elizabeth's picture.\n\n\"Ah yes, she came in with Dr. Grayson.\" said Ashok. \"He said she was from the Pennsylvania offices, and making a visit.\"\n\n\"An inspection?\" I asked.\n\n\"Dr. Grayson did not say that,\" said Ashok, \"and she did not act like she was formally inspecting anything. Dr. Grayson said it was just a visit to see if our methods were the same as the Pennsylvania labs' methods.\"\n\n\"So, Ashok, tell me about Dr. Grayson and Dr. Wilkins. Did you like them?\"\n\n\"They were both good people.\" said Ashok. \"Dr. Grayson was brilliant with the research ideas he had; I very much enjoyed working with him on the projects. Dr. Wilkins was a very good boss. He was efficient. He was friendly with everyone, but not particularly 'friends' with anyone, if you understand what I mean.\"\n\n\"Yes, I do.\" I said. \"Did Drs. Grayson and Wilkins like each other? Friendly? Cordial? Professional?\"\n\n\"Both very professional, they both loved the work they were doing.\" said Ashok. \"They seemed to be friends, but in the last two or three months, some of my staff remarked that they were not talking to each other very much.\"\n\n\"Any idea of why that was?\" I asked.\n\n\"No sir.\" said Ashok. \"Neither said anything about the other to me.\"\n\n\"Did Dr. Wilkins ever seem agitated?\" I asked. \"Anything bothering him, any problems he might've mentioned...\"\n\n\"No sir.\" said Ashok. \"I don't know of any problems he had. His death is very shocking to me, to all of us I think.\"\n\n\"Tell me, do you know Dr. Cubbard at all? Beyond meeting him at events?\" I asked.\n\n\"He was my boss in the Quality Control Division.\" said Ashok. \"He then became a Factory Manager, and I came to the Research Department, where I am now, of course.\"\n\n\"What did you think of him?\" I asked.\n\n\"He was a very good manager. He knew what he wanted done, told us, and we did our jobs.\" said Ashok.\n\n\"Did people like him?\" I asked.\n\n\"In a professional way, yes. They all thought he was a good leader and manager, as far as I know. Personally, he kept himself at a different level. He wanted to move up, and he did.\"\n\n\"Did Dr. Cubbard seem friendly with either Dr. Grayson or Dr. Wilkins?\"\n\n\"Oh, he and Dr. Grayson were talking all the time, about the research projects.\" said Ashok.\n\nI heard a commotion in the front areas, and knew what it meant, so as the door opened I asked \"Ashok, do you know of any research that was stolen from the labs recently?\"\n\n\"No sir, our audit after Dr. Wilkins death came up with nothing missing--\"\n\nJust then Dr. Tom Cubbard himself walked in. I'd asked that last question so that he would hear Ashok's answer, and not hear directly my questions about him (Cubbard).\n\n\"You wanted to speak with me, Commander?\" Cubbard asked, his voice professional but with the barest minimum of courtesy.\n\n\"I certainly did, Dr. Cubbard.\" I said. \"Shall we go to your offices, or the big conference room we met in last time?\"\n\n\"Uh, sure.\" said Cubbard. \"But before your people continue speaking with any of my staff, I want company lawyers present.\"\n\n\"Better call them fast, then.\" I said. \"My warrants do not require me to wait, so unless your people specifically ask for legal representation, I'm not obligated to wait for it... and so far they've been very willing to talk to us without lawyers present.\" I saw the beginnings of Cubbard's face flushing. I quickly stood up and left the room, striding down the hallway, forcing him to follow. Joanne stayed behind to finish talking to Ashok, as pre-planned.\n\n* * * * * * * * * * * * * * * *\n\n\"Now I know why the Commander carries that crowbar.\" said Martin Nash, as the SWAT Team members prepared to use a ram to batter down the door to the late Michael Campbell Fulton's apartment. Tanya Perlman nodded, and gave the SWAT team the sign to go.\n\n*WHAM!*\n\nThe ram was more than effective in forcing the door open. The two other uniformed officers, wearing protective gear, entered the apartment to clear it. A moment later, they were back at the door.\n\n\"Lieutenant,\" one said, \"the apartment is clear. But you need to see this.\" Going in, Tanya and Martin saw what the officer was talking about.\n\n\"Yep, this is a crime scene.\" Nash said. The rug on the floor was soaked with blood. Brain spatter was all over the sofa and floor, as well.\n\n\"Okay, the Crime Lab is being called in now.\" said Lt. Perlman, who was on her Police Cellphone.\n\n* * * * * * * * * * * * * * * *\n\nLieutenant Teresa Croyle and Detective Christopher Purvis arrived at the Grayson residence. They were getting in a bit of cross-training, as well as helping out to resolve some issues for their MCD colleagues. And Teresa knew that she was uniquely qualified for this particular mission...\n\n\"Hello, Dr. Grayson,\" said Lt. Croyle as he greeted them in the study. \"We only want to ask if you can identify a couple of people. She showed him a picture of James and Susan Douglas. \"Do you know these two people?\" she asked.\n\n\"Uh, yeah, I know him, anyway. James Diggle, or something like that.\" Dr. Grayson said. \"He was hired into the Research Department some weeks ago. Didn't work out.\"\n\n\"Who hired him? You?\" asked Teresa. \n\n\"No, and it was strange.\" said Dr. Grayson. \"Normally we have a rigorous interview process, where Ashok, myself, and Dr. Wilkins would talk with the candidates. But none of us talked to him. If we had, we'd never have hired him; he didn't know how to do a darn thing in the lab.\"\n\n\"Did you and this 'Ashok' get along well?\" Teresa asked.\n\n\"Oh yes,\" said Grayson, \"he managed the staff, but he loved to talk ideas with me, and he helped me on some of my experiments.\"\n\n\"Did you talk with him about your previous research?\" Teresa asked. \"The refined drugs, and all of that?\"\n\n\"Not really.\" Dr. Grayson said. \"We talked mostly about what we were currently doing, some fresh ideas on current processes, but nothing about my previous work. I might add that Ashok has a Masters in Chemistry and is working towards his Ph.D. at the University, but he is actually the manager and not one of our scientists.\"\n\n\"Okay. What about this woman?\" Teresa asked, showing the Elizabeth photo. \"Did you ever see her in the BigPharmaCorp facility?\"\n\n\"Ah, the Iron Crowbar's sister.\" said Grayson, shaking his head. \"My wife said that she saw the resemblance between them when he showed her that picture yesterday.\"\n\n\"Yes, she's his sister, but they are not close at all. Quite the opposite.\" said Teresa. \"So, did she ever go into BigPharmaCorp? Into your research areas?\"",
        "\"You'll find out, so I might as well tell you that I took her inside there, once.\" Grayson said. \"She said she wanted to see the facility, and we jokingly devised a plan where she would pretend to be from one of our other labs on an inspection tour. I took her in, showed her around the place, and that was that.\"\n\n\"She never handled any equipment, drugs, or paperwork, did she?\"\n\n\"Oh no, nothing like that.\" said Grayson. \"She said she liked the 'blinkenlights', as we call the banks of instruments we have, but she never handled anything. It was pretty innocuous. She said her brother had been a Chemistry major-- oh, wait...\"\n\n\"Fancy that.\" Teresa said, trying not to laugh. \"Tell me this: how well do you know Dr. Cubbard?\"\n\n\"Pretty well.\" said Grayson, still reeling. \"He's always interested in our research, and would come down and get briefings from us on a regular basis.\"\n\n\"Do you know his wife?\" Teresa asked.\n\n\"Oh, sure.\" said Grayson. \"My wife and I had dinner with the Cubbards from time to time... well, not just the four of us, but usually as part of larger dinner parties. But we know them fairly well.\"\n\n\"Did you ever have a sexual relationship with Mrs. Cubbard?\"\n\nAfter a pause, Dr. Grayson said \"Yes. She gave me head a couple of times, but we never had intercourse.\"\n\n\"Generous of her.\" Teresa said drily. \"Do you think your wife and Dr. Cubbard were having sexual relations?\"\n\n\"I'd be shocked if they were, and shocked if they weren't.\" said Grayson. \"My wife was a prude, and had no interest in swinging or swapping. I think the Donolans and Cubbards were into that stuff, though.\"\n\n\"Changing the subject: were Dr. Wilkins and Dr. Cubbard friends?\" Teresa asked.\n\n\"Well, this is hearsay, talking out of turn,\" said Grayson, \"but I don't think they saw eye to eye on some things. Cubbard was pushing Wilkins hard to get projects done, and Wilkins said he would not cut corners. I also think... well, Dr. Wilkins stuck his nose in my business, told me to stop cheating on my wife... I can only imagine what he thinks of Cubbard and his wife... like I said a moment ago, they have an open marriage, swingers and all that stuff. Like your Commander and his wife, so I'm told.\" he added.\n\nTeresa's face showed nothing as she declined to rise to the bait. \"Okay,\" she said, \"I do need to ask you one other thing. And let me just tell you this, in confidence, first.\" She acted as if she was drawing closer, and dropped her voice as she said \"A few years ago, I had to work a case of a woman that died at the hospital of a drug overdose. That woman had been trying to get clean, and two very evil women took her right down to the clubs and to the men who gave her drugs. The woman was raped, she O.D.d, and she died.\"\n\n\"I'm sorry to hear that.\" said Grayson. \"But what does it have to do with me?\"\n\n\"That woman,\" Teresa said, \"was named Margo Bailey. The two women that left her to die were Trish Donolan and Cat Clausen.\"\n\n\"Oh. Geez.\" said Grayson, and Teresa observed both understanding and shock on his face.\n\n\"And they, along with Donovan Donolan, were friends of the Cubbards, were they not?\" Teresa asked, bearing down.\n\n\"Like I said before, yeah.\" said Grayson. \"Of course, Dr. Cubbard knew Mr. Donolan very well anyway, they were the upper leadership of the company...\"\n\n\"And now,\" Teresa said, \"Donovan and Trish Donolan are dead, Cat Clausen is in prison, Dr. Wilkins is dead, you and your wife attacked and, quite frankly, lucky to be alive... and you're still walking along a precipice but don't fully know it...\"\n\nRobin Grayson's eyes were wide with shock and fear as he began to understand the full ramifications of what he was hearing.\n\n\"So, how did you meet the lovely Elizabeth?\" Teresa asked. Grayson didn't answer, and Teresa said \"Either Tom or Lucy Cubbard introduced you, is that not right?\"\n\n\"Oh my God...\" said Grayson.\n\n\"And did Cubbard suggest you have Elizabeth tour the labs?\" asked Teresa...\n\n* * * * * * * * * * * * * * * *\n\n\"No baseball bat, anywhere in the apartment.\" said J.R. Barnes, who was leading the Crime Lab team in the investigation and evidence collection. \"No fingerprints other than those of Fulton, either. This is also a pretty old crime scene, relatively speaking.\"\n\n\"So what have you found?\" asked Lt. Perlman.\n\n\"The guy bled out completely here.\" said Barnes. \"This apartment is on the ground floor, so the blood soaked into the rug, then through the wood on the floor to the slab below. There's also some tissue and bodily fluids where the body must've laid for some time.\"\n\n\"Ma'am, sir,\" said Technician Christian Cho, \"there is something else.\" She shined a light that glowed eerily green on the floor around the rug and all over the room, leading to a back door to the patio, then outside. \"As you can see, there are footprints all over the place. They wore some kind of protective footies, but these are not Police footprints, as our guys are along that path I laid out for them.\"\n\nChristina had checked for evidence, then marked a path for others to take to the back bedrooms, kind of like walking through a minefield. This reduced contamination of the crime scene. It was also an idea given to the Crime Lab by our new Chief, Sean Moynahan.\n\n\"So someone carried the body to the back patio, and apparently to a car on the gravel path the Sanitation Department uses to collect trash.\" said Nash. \"That's strange.\"\n\n\"Why is that, Martin?\" asked Tanya.\n\n\"The perp kills Fulton with the blow to the head,\" said Nash, \"waits long enough for Fulton to completely bleed out and be otherwise drained of fluids, then carries off the body. Why not bag him and carry him off immediately? Or just leave him here, for that matter? And leaving and coming back here would be a huge risk.\"\n\n\"And another thing...\" Nash said, as the thoughts came to him in a rush, \"when we examined the body at BigPharmaCorp, remember how I told the Chief there was only some blood on the upper back part of his shirt? If he'd been lying here in that shirt, the front of it should've been totally soaked in blood!\"\n\n\"Yes, that's true.\" said Tanya. \"Good observation, Martin. What does that infer to you?\"\n\n\"Sounds crazy, I know,\" said Martin, \"but the only theory that matches the facts is that someone changed the man's clothes after he was killed, or else he wasn't wearing clothes so someone put clothes on him. Hey, Johnson! Any clothes in the dirty clothes hopper or basket?\"\n\n\"No sir.\" said Johnson. \"Nothing in the washer or dryer, either. A couple of empty coat hangers in the closet in his bedroom, though.\"\n\nPatrolman Morton came up. \"Ma'am, sir, there is very little in this apartment about this man. Some mail, some current bills, a couple of 'Sports Illustrated' magazines. Cellphone in the bedroom next to his wallet. No computer, no router or anything to suggest he had a computer in the first place. Pretty sterile; looks like this guy led a verrry boring life.\"\n\n\"Well, Martin, what do you think?\" asked Lt. Perlman.\n\n\"I was about to ask you the same thing, ma'am.\" replied Nash. \"It's... weird.\"\n\n\"Yes, it is.\" said Perlman. \"So based on this data, what's your plan going forward?\"\n\n\"It's times like this I realize just how much of a crutch the Iron Crowbar has been for us.\" said Nash. \"And how lucky we are to have him. And the same goes for you too, Lieutenant.\" \n\n\"Butter me up, butter me up.\" Tanya said mischievously. \"But seriously, this is just about out of my league, too. But it's right up the Iron Crowbar's alley. We'll see if we can get him to come over and look around after he's finished with the other stuff at BigPharmaCorp.\"\n\n* * * * * * * * * * * * * * * *\n\nCindy and I were in the large conference room with the windows overlooking the River. Dr. Cubbard and his legal beagle were there, also. Cubbard had brought in two security guards, and I played the Game by bringing in two well-armed and armor-protected uniformed officers, Patrolmen Hicks and McGhillie.\n\n\"Ah, you've hurt your hand, Dr. Cubbard.\" I said, seeing a plastic brace on Dr. Cubbard's right wrist.\n\n\"Yeah, I fell on it, playing tennis.\" Cubbard said.\n\n\"Ah, tennis.\" I said. \"Did you ever play against Anthony Warner, the former CEO of Dynacorp?\"\n\n\"Only once.\" said Dr. Cubbard. \"In a tournament with the Town Tennis League. He was really good and beat me badly. So... why are you asking about him?\"\n\n\"He was a good tennis player, and I was just curious.\" I said, then got serious: \"Okay, Dr. Cubbard... up to this point in time I have been more than patient with you. But it's time for you to start talking.\"\n\n\"Ask questions and I'll answer them, if I can without harming company interests.\" said Cubbard.\n\n\"You don't understand, Doctor.\" I said. \"We are wayyyyy past any talk of 'company interests'. We're talking about murder, here.\"\n\n\"What?!\" gasped Cubbard. \"You mean that guy you found outside by the railroad tracks?\"\n\n\"Yeah, there's that.\" I said. \"But I was talking about the murder of Dr. Laramie Wilkins.\"\n\nThe room went silent. Cubbard and his lawyer sat dumbfounded for a moment.\n\n\"I thought he committed suicide.\" Cubbard finally said. He looked at his lawyer and said \"I was told he shot himself. Is that not right?\" The lawyer nodded, but also shrugged his shoulders as if not knowing what to say.\n\n\"Oh, he was shot,\" I said, \"but there is considerable question as to who pulled the trigger of the weapon. In addition, Dr. Cubbard, I am finding strong evidence of several other crimes, crimes related to industrial espionage, theft of your company's property, and stealing of intellectual property, perhaps with fraud and RICO implications.\"\n\n\"Are you kidding me?\" said Cubbard. His lawyer was equally agitated.\n\n\"Not at all.\" I said. \"And, totally as a precaution, to protect you and your legal rights, I'm going to read your rights to you.\" I proceeded to read the BigPharmaCorp CEO his Constitutional rights, then asked if he understood them.\n\n\"Yes, I understand them.\" said Dr. Cubbard. His lawyer whispered into his ear, then Cubbard said \"I reserve my right to invoke my Fifth Amendment rights at any time, but will answer your questions until such time I do invoke.\"\n\n\"Good enough.\" I said. I took out my Police iPhone, and brought up a photo. \"Do you know these two people?\" They were the photos of James and Susan Douglas.\n\n\"No, I don't know either of them.\" said Cubbard. \"The man looks familiar, but I can't remember where I've seen him.\"\n\n\"And you have not seen the woman at all?\" I asked.\n\n\"Not that I can remember.\" said Cubbard.\n\n\"What about this woman?\" I said, bringing up the picture of Elizabeth. Cubbard's eyes failed to hide his recognition, but he said nothing.\n\n\"Doctor, is this woman familiar to you?\" I asked again.\n\n\"She looks... like I've seen her, but...\" Cubbard said, then his eyes seemed to get crafty as he said \"You know, she looks like you, Commander Troy. I think that's where the recognition comes from.\"\n\n\"Except I'm not a woman.\" I said. \"Now one more time, Doctor: do you know this woman?\"\n\n\"No. No I don't.\" said Cubbard.\n\n\"Captain,\" I said, turning to Cindy, \"Did you hear my question and Dr. Cubbard's answer?\"\n\n\"Clear as a bell, Commander.\" Cindy replied as she took notes, which she'd been doing all along.\n\n\"Johnson, McGhillie, did you guys hear that?\" I asked my uniformed officers. They confirmed that they did.\n\n\"Good.\" I said, turning back to Cubbard. \"Dr. Cubbard, I have read your biography here, and I must admit that it is one of astonishing achievement, especially for a man of your young age.\"\n\n\"You've done pretty well yourself for your age, Commander.\" replied Cubbard.\n\n\"Not like this, though.\" I said. \"Ph.D., leadership in quality control, plant management, C-level leadership. You've worked hard to rise to the very top, and now you're here. And now you're having to work like a dog to stay on top, am I right?\"\n\n\"What is the point of this line of questioning, Commander?\" asked the lawyer.\n\n\"Just expressing my appreciation and admiration of the journey that Dr. Cubbard has made, and the effort he as made to climb to the top of the mountain.\" I said. \"And I would hate to see those achievements washed away, and worse... because of something as silly, but as bad... as a felony charge of Lying to Police.\"\n\n\"That only applies to the FBI.\" said the lawyer, beginning to take over to shield Cubbard.\n\n\"Not in this State, Counselor.\" I replied. \"It's a State crime, and a felony, to knowingly lie to the SBI and/or any local-level law enforcement agent. But if you want to get technical about it, I am also an FBI Consultant, so if you want to play the Federal game...\"\n\n\"If you think I've lied to you, Commander,\" Cubbard said with bravado. \"Prove it.\"\n\nI looked over at Cindy, who just looked up at me under her eyebrows as if to say 'Did he really just do something that stupid?'. I then took out my reading glasses and put them on my face as I leaned forward so that Cubbard could clearly see me.\n\n\"Oh, I will prove it, Dr. Cubbard.\" I said. \"I will indeed prove it... why, what's the matter, Doctor? You look like you've seen a ghost!\" He was now fully understanding.\n\nAt that point, the lawyer practically jerked Cubbard's collar and began urgently whispering to him. Cubbard nodded.\n\n\"At this time,\" said the lawyer, \"my client and I wish to confer. This interview is concluded, and will not be resumed in the foreseeable future.\"\n\n\"Fine.\" I said. \"In reply, Counselor, your client is being ordered to not leave this County's jurisdiction. Doing so will cause the FBI to become involved... as well as the rabidly anti-business, anti-pharmaceutical Media. I'm sure Dr. Cubbard understands the value in staying at home for the evening. I might suggest that of his wife, as well.\"\n\n* * * * * * * * * * * * * * * *\n\nLeaving the Grayson residence, Detective Christopher Purvis was astounded.\n\n\"Lieutenant,\" he said as they pulled out in the Police cruiser, Purvis driving, \"how did the Iron Crowbar know? Everything that happened, was exactly as he told us it would happen. You asked the questions just as he asked you to, told the Margo Bailey story... and...\"\n\n\"Yes,\" said Teresa Croyle, \"the Iron Crowbar is where he is because he is a step ahead of the game.\"\n\n\"But that's... uncanny.\" said Purvis.\n\n\"We Vice guys don't get to see him work as often as the MCD guys do.\" said Teresa. \"He's just a step ahead, like Sherlock Holmes would be. He sees things, correlates things, and takes action before anyone else has time to blink.\"\n\n\"Yeah, maybe... but it's like The Abacus has been telling us,\" Purvis said, \"it's almost as if Commander Troy isn't just figuring it out, but that he already has knowledge of what happened.\"\n\n\"You say that in a bad way, Purvis.\" said Croyle. \"Almost like you're saying the Commander is behind the crimes himself.\"\n\n\"You know,\" Purvis replied, \"some people have actually wondered if that's the case...\"\n\n\"Who are those people?\" asked Teresa, peering at Purvis.\n\n\"I'm not the one to be a snitch, ma'am.\" said Purvis. \"But there's just... talk. Happens in Police Forces everywhere. And this Police Force has an Iron Crowbar, and the scuttlebutt about him is that he seems to know too much, too soon...\"\n\n* * * * * * * * * * * * * * * *\n\nAs she and Martin Nash watched the Crime Lab people work, Tanya got a phone call.\n\n\"Hi, Jack.\" she said. \"What's up?\" It was Jack Muscone of the FBI.\n\n\"Hi there,\" said Jack Muscone. \"We just picked up the Stevens couple. They were in the State to your east, holed up in a hotel. When we came to get them, they refused to come along, so we arrested them. Now they're asking for lawyers and refusing extradition.\"\n\n\"You're the FBI, can't you just bring them back to the City?\" Tanya asked.\n\n\"We can,\" said Jack, \"but if we cross that State line, it might give them a legal loophole on any State-level crimes, such as murder. Listen, Don asked me to not let Martin Nash know that he, Don, had us looking for these guys before Nash's APB went out, and we've been trailing them all along. I don't know what you want to tell Nash, but if you guys want the Stevenses back, you'll have to show some probable cause to the judge.\"\n\n\"I'll get right on that.\" said Tanya. After saying her goodbyes to Muscone, she turned to Nash. \"The FBI found the Stevenses pretty fast, and arrested them... but over the State line to our east. They're fighting extradition, so we'll need to show probable cause.\"\n\n\"What's the best way to do that?\" Nash asked.\n\n\"Normally we go through the State DOJ,\" said Tanya, \"but do you want to go through the State any more than the Iron Crowbar would?\"\n\n\"Gotcha.\" said Nash, understanding. \"So what's the next step?\"\n\n\"Call Paulina Patterson.\" said Tanya. \"She'll run it through the Court system. By the way, after seeing this crime scene, do you still want these guys?\"\n\nAfter a moment of thought, Nash said \"Yes. Yes I do. Nothing in this crime scene exonerates them...\"\n\nPart 17 - Cogs In The Machine \n\nIt was 4:30pm, but my Detectives were energized as we met again in Classroom 'E'. The MCD Team was joined by Lt. Teresa Croyle and Vice Detective Christopher Purvis, as well as Myron Milton and ADA Paulina Patterson.\n\n\"They're expediting an extradition hearing,\" said Paulina, \"and the Stevenses should be in our County Jail by tomorrow. It may even be that they'll waive extradition once they understand that we're playing for keeps.\"\n\n\"Great!\" said Chief Moynahan, \"and excellent work, Detective Nash, for getting that done in such a timely manner.\" Nash nodded, but I could tell that inside he was pleased, and well he should be.\n\n\"By the way,\" said Nash, \"their son Chad works in the City. We had him picked up, also, and we've sent someone to pick him up and bring him over.\"\n\n\"What are you going to hold him on?\" asked Paulina.\n\n\"Material witness, person of interest, same as his parents.\" said Nash. \"I've asked the Court to release him on his own recognizance, but with ankle monitoring. We're putting him up in a hotel for one night, as well.\"\n\n\"What if Judge Nance orders him let go, without ankle monitoring?\" asked Paulina. I knew she was testing Nash, and hard, over this.\n\n\"I...\" said Nash, faltering for the first time, \"I'm not sure.\"\n\n\"Tell him his parents are being brought in.\" I said. \"Tell him he can spend the night at the University Hotel, on our dime, and see them tomorrow, or he can go. At worst, I think he'll go to his parents house in Nextdoor County, but he won't run away and leave them hanging.\"\n\n\"And if he does run?\" Paulina asked.\n\n\"Then he'd have run anyway, so we're no worse off.\" I said. \"And we just call our FBI friends again. Jack Muscone loves it when I buy him double cheeseburgers at the Cop Bar.\"\n\n\"Good logic in that.\" said the Chief. \"And buying off FBI agents with double cheeseburgers is brilliant in both concept and exe-CU-tion.\" We all laughed, then the Chief said \"So we'll put Detective Nash's plan into effect, and hope that Nance is not on duty too-night.\"\n\nThe Chief continued: \"Okay, let's carry on with these BigPharmaCorp cases. I understand that you've all done brilliant jobs today. Mr. Nash, tell us what you've found so far.\"\n\nNash began: \"We went to the apartment of Michael Campbell Fulton. We found a lot of blood, which from typing matches his, and the Lab is doing a full workup for us. No fingerprints other than Fulton's, no baseball bats or other blunt objects that might be the murder weapon were present. Some strange things about the place, though.\" Nash went on to explain the strange things.\n\nAfter that, Nash continued: \"I checked back with the Riverside Tavern, taking Mr. Stevens's DMV photo with me. The bartender last night was also there Saturday night. He says he has no memory of Mr. Stevens at the bar that night. But we may have gotten a break: that barkeep did not work Friday night, but a waitress there did work Friday, and she says she thought Stevens looked familiar. Not too much there, but if she could pick him out of a lineup, we'd be halfway home.",
        "\"Except the murder likely occurred Saturday, not Friday.\" Cindy said.\n\n\"It may still be a good thing.\" I said. \"Keep going, Martin.\"\n\nNash kept going: \"Myron's credit card checks showed no activity Friday or Saturday night on Mr. Stevens's card, nor his son's card. However, Mr. Stevens's cellphone pinged off the tower nearest Riverside Tavern all day Friday and into Friday evening, with several phone calls being made from that phone. I checked around, and found that the hardware store chain Mr. Stevens is a part of was having a regional meeting. The hardware store franchisees meet, place orders for next year's inventory, and such stuff.\"\n\n\"Circumstantial.\" said Cindy, playing Devil's Advocate.\n\n\"But pretty strong, nonetheless.\" I replied. \"Okay, Martin, you've done a huge job, here. Start planning your interrogations and work with Paulina on a transition to a legal case... that is, of course, if Stevens doesn't have a massive explanation for some things. In the meantime, let's go to the Grayson/Wilkins cases.\"\n\n\"Why don't you save us time, and let us get to our respective dinner parties,\" said Cindy, \"and just tell us the solution now.\" By that, Cindy meant that I had the reception at the Wellmans to attend, while she, Teresa, Todd, Barry Oliver, and Seth were having a dinner hosted by Joanne.\n\n\"Well, I do have enough data to form some opinions.\" I said. \"But the really huge problem here is putting it into a neat package, tying it with a bow, and presenting it to ADA Patterson. Since she's pregnant, of course we want to present her with an easy, stress-free case with an assured conviction to follow.\"\n\nWith that, I proceeded to outline the basics of my case, omitting all details of Emma Washburn and the iPad tablet. When I finished, I had a lot of very stunned people looking at me.\n\n\"So, Crowbarrrr,\" said the Chief, \"how are you going to make that dream of making that neat and easy case for Ms. Patterson happen?\"\n\n\"I hope,\" I said, \"that by noon tomorrow that will take care of itself. Lt. Croyle did an excellent job of planting the seeds, and we will now have to see if that bears fruit...\"\n\nPart 18 - Family Resemblances \n\n\"Mmm, this is very good.\" said Cindy, as she tasted the appetizer. \"What is it?\"\n\n\"Venison.\" said Joanne. \"I marinaded it for 24 hours, then grilled it with a sweet glaze sauce. Melina has used all her tags for the season and gave me two of the deer, and now I have a freezer full to cook for you guys.\"\n\n\"Wow, you're very good at cooking it, too.\" Teresa said. \"Venison is not easy to get right.\"\n\n\"She and I are both getting practice.\" said Seth. \"I'm learning how to cook deer steaks.\"\n\n\"The Commander asked for the leftovers, such as the good meat around the spine.\" said Joanne. \"He says he's going to make stew in a slow cooker, then strain out the bones. I'd never thought of doing that.\"\n\n\"That should work very well.\" said Teresa. \"Slow cook it 10-12 hours, the meat will just fall off the bone.\"\n\n\"Does this County have a Police Force or a Wild Game Cooking Academy?\" asked Todd with his brilliant grin. Everyone laughed.\n\n\"Speaking of that,\" said Barry Oliver, \"that woman that was killed a few months ago, Emma Washburn, she was giving cooking classes at places, and was going to open a catering service. It's too bad she was killed, that would've been really good.\"\n\n\"Yes, my friend Sean said something about that.\" said Todd. He did not mention that he and Sean were friends because they were both members of the S.E.X. unofficial fraternity for well-hung studs. \"Too bad she was killed, and by Sean's mom, too.\"\n\n\"I think I can relate to how he feels.\" said Seth, whose mother Karla Warner had murdered Michelle Schelle in Michelle's hot tub in 'The Swap' case... a case solved by Your Iron Crowbar.\n\n\"I'm trying to get Seth to visit his mom in prison, and make amends with her.\" said Joanne. \"Jesus said to remember those in prison.\"\n\n\"I think we all have our family issues.\" said Todd. \"My own mother was in and out of jail.\"\n\n\"Todd, your entire family story could be made into a soap opera.\" said Cindy. \"And that includes me and your uncle as part of it. At least my mother and your grandmother are the normal ones.\" Todd grinned again.\n\n\"What about your mother, Teresa?\" Joanne asked. It got quiet in the room.\n\n\"My mother died in childbirth with me.\" Teresa said. \"I never knew her.\"\n\n\"Aw, I'm sorry.\" said Joanne. \"I didn't know that.\"\n\n\"It's okay.\" said Teresa. \"I've learned some things about her, and my father, in the last few months. Apparently she was a patient, quiet woman. Obviously I did not inherit those traits.\"\n\n\"Oh I dunno,\" said Todd, \"working with my uncle and cousin here, you show great patience.\"\n\n\"If I had my crowbar with me,\" Cindy said, \"I would be waving it at you like I do your uncle.\" That had Barry Oliver beginning to laugh.\n\n\"You know,\" said Joanne, musing, \"my cousin John, who ran for the State Senate, he said that someone prominent in the County's wife died in childbirth...\"\n\n\"I think it was Edward Steele's wife.\" said Seth. \"His daughter Selena, her mom died in childbirth with her.\"\n\n\"Oh really?\" asked Cindy. Gears had suddenly begun turning in her head. \"I could've sworn Don... er, the Commander, was going to a reception for Mr. Steele's wife tonight.\"\n\n\"Maybe Mr. Steele remarried.\" Seth said.\n\n\"Could be.\" Joanne said, and everyone could tell she was thinking hard of something. \"But... maybe it wasn't Mr. Steele I was thinking of. I'll have to ask John if it was Mr. Steele or someone else.\"\n\n\"Speaking of relating to things,\" said Sean, \"I can relate to how you, Cindy, learned about your biological father. That happened to me after my father, Anthony Warner, that is, was killed.\"\n\n\"Yes, you can understand.\" said Cindy. \"But I have to say, I knew Dr. Eckhart even though I didn't know he was my father, and I knew what a great man he is. You never met the Reverend Jonas Oldeeds, did you?\" Out of the side of her vision, Cindy noticed Todd's face change just a wee bit as he looked down at his plate.\n\n\"I remember seeing him as a child.\" said Seth. \"He and my parents were friends for a number of years after Karen and I were born. But I don't remember much about him. And from what I've learned in recent months... I'm probably glad I didn't.\"\n\n\"Speaking of fathers one didn't know he had,\" said Teresa, \"how is your father doing, Todd?\"\n\n\"Oh, he's doing okay, I guess.\" Todd said. \"He and Jeanine went to Florida. I wish they'd have left little Jack with me, but they didn't.\"\n\n\"Like Doug is not a handful by himself?\" asked Teresa.\n\n\"Oh, Doug is so cute!\" gushed Joanne. \"And he loves you, Teresa. By the way, Cindy, when is your sister going to have her baby?\"\n\n\"Any day now.\" Cindy said. \"I will not be shocked if our Thanksgiving Dinner with the Commander is interrupted by a trip to the hospital...\"\n\n* * * * * * * * * * * * * * * *\n\n\"You look good.\" said my wife as we finished dressing. The reception was not formal, so Laura was wearing a black-and-white horizontally-striped dress and high heel black pumps. I was wearing a dark gray suit with a light blue tie... no Wildcat Red tonight.\n\n\"You look good, too, as always.\" I said.\n\n\"No uniform, either.\" said Laura, then teased my by adding \"Nobody will recognize you.\"\n\n\"That would be a good thing.\" I said. \"And since this is going to be just about all Academia, I'll blend in a little better.\"\n\n\"Darling, you stand out no matter where you are.\" Laura said. \"And every woman in the room will be looking at you.\" She was being very flirtatious with me tonight.\n\n\"No, I'm just the guy who is accompanying you to the party.\" I replied. \"And very proud of that, I might add.\"\n\n\"Aww, you're sweet.\" she said. \"You are going to have one hell of a long, hard night tonight, mister.\"\n\n\"I can't wait.\" I said. \"Speaking of that... where are our children, not to mention their guard dog?\"\n\n\"They are at The Cabin, with Molly, Tanya, little Pete, and Pete's grandmother Pamela Feeley.\" said Laura. \"If Molly goes into labor, Tanya will get her to the hospital and call me, and Pamela will keep our kids, and Ross and Little Pete, until reinforcements arrive.\"\n\n* * * * * * * * * * * * * * * *\n\nThe reception at University President Sidney P. Wellman's home was indoors, as it was cold outside. There was no truly formal reception line, but Wellman and his wife Sally would be with the Steeles, and everyone would make their way up to greet them.\n\nAs we approached, I saw the Wellmans. Sally was looking very nice in her off-white and navy dress, with navy high heel pumps. I remembered my little bet with her, in which I won the opportunity to fuck her brains out in her own bed, and I made a mental note to remind her that I fully intended to make that claim.\n\nNext to the Wellmans was Edward Steele. His black hair was beginning to turn gray, and he was still in good shape. He was not particularly handsome, but not bad looking, and I could see some of where Selena got her good looks. I did not see Selena immediately as I looked around.\n\nNext to Edward was a woman about his age, in her early fifties. Her hair was a very light brown, and I had the feeling that it was her natural hair color. She had a curvy, hourglass body. Her legs were okay, her thighs beginning to put on some flesh. Her face was not beautiful like Selena's, but 'okay'; she was beginning to put on a bit of flesh on her cheeks and chin and under her neck. She was trying to stay in shape but would one day become 'dumpy'. Bad of me to think, I know, but that is what I do when observing people.\n\n\"Who is that with Edward Steele?\" I asked.\n\n\"His wife, Stephanie.\" said Laura. \"She's the honoree at this reception. You've never met her because she was on a sabbatical to Hawaii and New Zealand.\"\n\n\"That's right, she's getting the Copernicus Chair of Physics and Astronomy, isn't she?\"\n\n\"Shhh!\" admonished Laura. \"How did you find out about that? Even she doesn't know; it's going to be a surprise for her... she thinks she's just getting a full professorship.\"\n\nI saw Chief Moynahan arrive, with my mother as his escort. His wife had died of cancer a few years before, and I'd arranged for my mother to be his date for the evening. He was going to be introduced as the new Chief tonight.\n\n\"You're not going to tell me?\" Laura said.\n\n\"How I know about Dr. Steele's new appointment?\" I said with a cryptic smile, teasing my wife. \"Well, I can't tell all of my secrets, can I? Maybe after I'm totally exhausted in bed after long hours of trying to keep up with you...\"\n\n\"Mmmm, you are a bad, bad man.\" Laura said. \"And I love you for it. Oh, there's Selena.\"\n\nIndeed, the beautiful woman had come up to her parents, and we began moving towards the line to greet them, when it hit me...\n\n\"Don?\" Laura said when I stopped suddenly, staring, in a reverie. \"Don, are you okay?\"\n\n\"Uh, yeah...\" I said, trying to recover. \"Yeah, I'm fine... I just realized something.\"\n\nMy mother walked up to us. \"Ah, son, you've seen it, too, haven't you?\"\n\nIndeed I was seeing it, but I was seeing more... far more than even my mother realized.\n\n\"Yes...\" I said. \"I think I understand now why the Black Widow was trying to kill Selena...\"\n\nTo be continued.\n\nDear Readers, you have the clues. Who killed Dr. Laramie Wilkins? Who killed Michael Campbell Fulton? And why? Answers a'comin..."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-ensigns-of-detection-ch-04"
}