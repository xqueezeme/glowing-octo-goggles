{
    "title": "Within Pt. 04",
    "pages": [
        "The next morning Isabelle was at the book store before it opened, waiting to accost Bernie before he could get wrapped up in anything and try to dodge her questions. \n\n\"Isabelle,\" he greeted her warmly. \"Did everything go well last night?\"\n\n\"Sort of.\" She stood up from the bench that was just outside the front door of the store. \"I need to talk to you.\"\n\nHe unlocked the door and ushered her ahead of him. \"Is something wrong?\"\n\n\"I'm not sure yet. I have to go see my doctor first.\"\n\n\"Doctor?\" He smiled and moved to take her hands. \"So it's true then?\"\n\nShe shrugged absentmindedly, still in a daze from the queen's revelation. \"Wait.\" Her hands tightened on his. \"Did she tell you?\"\n\n\"Lock the door dear. We should talk.\"\n\n\"I'll say.\" She flipped the deadbolt and then followed him to the back office. \"Bernie, what's going on?\"\n\n\"Have you figured out how to open it?\" He waved at the chair in front of the desk. She sat down quickly.\n\n\"I didn't get a chance to look at it. I was a little busy,\" she murmured.\n\n\"Yes, I suppose you would have been.\" He patted her shoulder.\n\nShe watched him walk around the desk. \"How do you know the queen?\"\n\nHe smiled and looked at her for a moment. \"I suppose you do have a right to the whole story.\" She sat quietly as he took off his jacket. \"I'm sorry I've had to lie to you but not many humans can be trusted with the truth.\"\n\n\"The truth about what?\" Her eyes went wide as he seemed to expand in front of her. \"What the hell?\" His posture straightened, he seemed to grow six inches taller and twenty years younger.\n\nHis hands moved to the buttons on his shirt, he shrugged it off his shoulders and let it fall to his waist. He turned in the cramped little room to show her what he'd been hiding. \n\nSilvery gray wings were folded and tucked against his back.\n\n\"Holy shit! You're one of them,\" she breathed.\n\n\"Not quite,\" he said while pulling his shirt back into place. \"I'm half faerie.\" He turned back to her buttoning up his shirt. \"My father was human.\"\n\nShe breathed a little sigh of relief. \"So it is possible to have a healthy baby.\"\n\nBernie transformed back into the form she was used to and took a seat at the desk. \"From what I've been told there aren't many of us, kind of a rarity, but yes.\"\n\n\"I don't understand.\" She sat forward in her seat. \"Alasdair got the witches daughter pregnant and now possibly me. Who know how many more women he was successful with.\"\u2028\n\n\"You're the only one that the queen is aware of and you can trust that she would know how many grandchildren she has out there.\" He shook his head. \"That girl was already pregnant when she met Alasdair. Are you alright?\" She'd gone pale as he spoke. \n\n\"You said grandchildren,\" she whispered.\n\n\"He didn't tell you?\"\n\n\"That he's a prince? Uh no. I'm pretty sure I would remember if he had.\" She ran her hands through her hair. \"Will you please tell me what's going on?\"\n\n\"I assume he told you how he came to be trapped in the book?\" She nodded. \"Well the truth was, like I said, that girl was already pregnant. She was probably looking for a way to trap the poor boy into something but he'd already gone before she could put any plans in motion. Before anyone could get to her mother and explain what had happened it was too late. She wouldn't listen to reason, the book was gone, sold to a lord passing through the village. He, after discovering the true contents, gave it to a rival lord as a gift.\" His hands waved back and forth as he spoke. \"We did manage to get the amulet though. The queen has had it all this time. You brought it with you?\"\n\n\"Of course.\" She nodded at her backpack where she had set it on the floor next to the desk. \"So the book disappeared?\"\n\n\"Yes, passed from owner to owner till I tracked it down in Germany a few hundred years ago. I've been holding onto it for safe keeping ever since.\"\u2028 \n\n\"Until you sold it to me. Clearly that wasn't an accident.\" He smiled. \"So what was it then?\"\n\n\"No one has found a way to open the amulet so it's been suggested that it might require something more.\"\n\n\"Something more?\" She tilted her head. He tapped his chest softly. She stood up quickly. \"What's wrong with you people? You can't just put a book in front of someone and expect them to fall in love.\"\n\nExcept that they had and you did. She thought with a little shake of her head.\n\n\"We didn't expect anything. But I sure as hell hoped,\" Bernie said.\n\n\"Why?\" She wiped at her eyes. \"So I can end up alone again? That's just cruel.\"\n\nHe came around the desk to take her shoulders in his hands. \"That was never my intention.\" He rubbed gently, bending his knees to look at her straight on. \"How long have you known me?\"\u2028\n\n\"Six years.\"\n\n\"And have you ever known me to be cruel to anyone?\"\n\n\"No,\" she mumbled. \"But it looks like I haven't really known you after all.\"\n\n\"I'm still the same person I was yesterday, just with a more interesting heritage.\" She snorted softly. \"The only thing I was hoping for was that you'd find some happiness. I saw what losing John did to you.\" He pulled her into his arms.\n\n\"But what am I supposed to do now? I may be pregnant and if I can free him I wouldn't expect him to stay with me. I'll be alone again, with a baby.\"\n\n\"Hey.\" His hands rubbed her back. \"Even if that does happen, which I doubt, you'll never be alone.\"\n\n\"Thank you.\" She sniffed softly.\n\n\"Do you want to have a look at the amulet with me?\"\n\nShe nodded and bent to grab her backpack off the floor. She pulled the silver disc out of the front pocket. \"Can you read it?\"\n\nHe took it from her outstretched hand. \"I can but I memorized it years ago.\" He turned it over in his hand. \"It says 'That which has been torn asunder by death once reborn is the key.' Do you have the book?\" She pulled it out of the bag and laid it next to him on the desk.\n\n\"It's literally the square peg in a round hole except the exact opposite,\" she said quietly. \"Do you have any idea how to make it work?\"\n\n\"We've never found a mechanism to open it. It must need something else, something mystical.\"\n\n\"An incantation?\"\n\n\"Possibly. We've never found the right one though.\" He handed the amulet back to her.\n\n\"So we're no closer to finding a solution.\" She slid the book back into the backpack and set the amulet in with it. \"I should get going. I have an appointment with the doctor.\"\n\n\"I hope it's good news.\" He patted her shoulder. \"A child is a blessing my dear.\"\n\nShe looked up at him. \"Can you do me a favor?\" He tilted his head in question. \"I've been thinking about it all morning. I want to wait to tell him. If I can figure out that damned amulet and get him out of there I don't want him to feel that he has to stay with me for her.\"\n\n\"Isabelle\u2014\"\n\n\"He deserves a chance to choose. I won't free him from one prison to force him into another.\" He opened his mouth to say something. \"Please? And can you ask the queen to keep it to herself?\"\n\n\"Alright.\" He answered softly. \"Will you let me know how it goes?\"\n\n\"Sure.\" She smiled. \"I'll flip the sign on my way out.\"\n\n\"Thank you dear.\" He sat down and watched her leave.\n\n******************************************\n\nThe doctor confirmed what the queen had implied. She was pregnant.\n\nShe did her best to appear calm while he delivered the news and then gave her a referral to an obgyn. Briefly she wondered what her new doctor would say when she saw the wings developing.\n\nMaybe she'll think I was abducted by aliens for genetic testing. Why not? It's just as believable as being knocked up by a faerie.\n\nShe sat in her car in front of the doctor's office trying not to burst out laughing for several minutes before she texted Bernie with an update. He replied quickly, congratulating her.\n\nHer laughter died on her lips as she stared at the appointment cards sticking out of her purse. This was real. She had something she'd hoped for but it was all wrong. She was supposed to be married to a wonderful man who would be there with her throughout the process. Not a faerie lover trapped inside a book. What kind of parents could they be?\n\nShe rubbed her hands over her belly. \"I'm sorry, this isn't going to be easy.\"\n\n***********************************\n\nIsabelle let out an irritated sigh. She'd had the amulet for a week and still hadn't figured out how to open it. After yet another wasted hour of turning it over in her hands she tossed it into her jewelry box and closed the lid. It was hopeless. She couldn't do it without help.\n\nOnce the sun was down she stood looking at the book turning everything over in her mind. She had to let Alasdair know she had the amulet at the very least. \n\nShe hadn't wavered from her decision about the baby, if he knew anything that could help and they were successful she would give him the opportunity to choose whether he wanted to go home or stay with her. That was the right thing to do. \n\nShe took a shaky breath and ran her hand over the place where their little princess was growing. \"I hope he stays,\" she whispered.\n\nHer fingers traced the divot on the cover, it was so shallow it was hard to believe it was actually a lock and not just an embellishment in the intricate leather work. With another sigh she flipped it open and stood back.\n\nHe arrived in seconds. \"Hello lass.\" His rich baritone wrapped her in warmth.\n\n\"Hello dream faerie.\" There was a tiny hitch in her reply.\n\nShe only had a moment to take him in, the huge black wings tucked regally behind his shoulders, wide shoulders and chest. Her breath caught as his hands gripped her hips and pulled her against him. She tilted her head to look up at his smile and slid her hands around his waist. \n\nHer hands moved down to tug at the plaid he'd wrapped around his hips. His hands had already pulled her shirt up by the time she'd pulled it loose. She released him to let him pull her shirt off and then backed towards the bed to lie back while he eased her pants off.\n\nAfterward she sprawled across the bed smiling as he dropped down next to her. \n\n\"Did you miss me?\" She asked softly.\n\nHe laughed and took her hand. \"Of course. Who else will feed me strawberry ice cream?\" He kissed the back of her hand before she could pull it away and give him a playful swat. \n\n\"You are such a brat.\" She crawled over his big body to disappear into the en suite for a few minutes. When she came out she didn't immediately crawl back into bed with him. Instead she stood next to it just looking at him.\n\n\"Isabelle, is something wrong?\" He sat up and reached for her. \n\nShe smiled and stepped back. \"You didn't tell me that you're a prince.\"\n\n\"How do you know that?\"\n\n\"So it's true?\"\n\n\"Yes. Now you answer my question.\"\n\n\"Bernie told me.\"\n\n\"And how does your boss know about that?\"\n\n\"He's one of you. Sort of.\"\n\n\"Sort of? A half breed? You know this for certain?\"\n\n\"I saw his wings.\" She moved to the dresser, opened the jewelry box and palmed the amulet. \"It would have been helpful to know you're royalty when I met your mother.\"\n\n\"You met the queen? Why? When?\"\n\n\"Yes I met her last week. I have to say you get your looks honestly. She is absolutely stunning.\"\n\n\"Lass, why did you meet her and not tell me?\"\n\n\"I was afraid of disappointing you.\"\n\n\"Please try making some sense.\"\n\n\"I met the queen to ask her help in setting you free. I know you said she wouldn't be able to and you were right.\" The words tumbled out in a rush. \"She said she didn't have the power to but that I might.\" She held up the amulet. \"Then she gave me this.\" He stood and took it from her. \"I'm sorry, I haven't been able to figure out how to open it.\" \n\n\"It's alright. I've gotten used to the frustration.\" He turned it over in his hand with a frown then took the chain in his fingers and slipped it over her head letting it rest between her breasts.\n\n\"Do you have any clues that might help?\"\n\n\"Sadly no. The witch wasn't very informative. She was more intent on getting me into the book than explaining how to get out.\"\n\n\"Damn it.\" She looked down. \n\n\"It was kind of you to attempt to help.\"\n\nHer eyes filled with tears. \"It wasn't out of pity.\" She looked up, resting her hands on his chest. \"I just want to set you free.\" He wiped the tears sneaking down her cheeks with his thumbs then cradled her face in his hands to kiss her. Her hands slipped around his neck.\n\nHe reached down to her waist lifting her against his chest as he deepened the kiss. The cool metal of the amulet pressed between them.\n\nIt wasn't until he had lifted his lips from hers that either of them noticed the glow emanating from the amulet. A pale green light shone from the center of the disc. \n\n\"Do you see that?\" She whispered.\n\n\"I do.\" He bent his knees to set her down. \n\n\"Don't let me go,\" she hissed. He straightened quickly. \"It's not open.\" She looked up at him. \"What should we do?\"\n\n\"I don't know. I had no idea it did that.\"\n\n\"Dammit. I don't know what to do.\"\n\n\"We cannot stay like this all night.\" \n\n\"Hey, now is not a good time for comments about my weight.\" She frowned at him. \n\n\"That was not what I was referring to, I assure you,\" he said with a confused look.\n\nShe noticed the beads of sweat forming on his forehead. She'd been so intent on the amulet she hadn't noticed his growing need that was pressed against her.\n\n\"Is it bad?\" She asked softly.\n\n\"It's not unbearable yet but I won't be able to fight it much longer.\" His voice was strained. \"I'm sorry lass but you are naked and in my arms.\"\n\n\"Maybe that's how it's thwarted you in the past. You can't finish whatever it is that it needs because the enchantment gets in the way.\"\n\n\"Isabelle.\"\n\n\"Sorry.\" She kissed him gently. \"Put me down.\" She flinched as her feet touched the carpet.\n\nThe light dimmed a little but it didn't go out. She looked up at him but didn't have a chance to comment on it. He crowded her against the bed forcing her to sit and then scoot back to give him room. \n\nAs soon as she stopped and opened her knees he was on her, shoving his shaft into her as far as she could take it. \n\n\"By the stars,\" he swore with a groan, his eyes closed with relief.\n\nShe grabbed his head pulling him closer. \"Don't you dare say you're sorry.\"\n\n\"Lass.\" He thrust deep.\n\n\"No.\" She moaned. \"Do not apologize for this.\" She arched under him as he continued to thrust. \"We will figure this out.\"\n\nHe kissed her hard as the incessant need to fill her built in his lions. She held onto him through the storm of passion, using his body as a focal point when it threatened to sweep her away.\n\nThey moved together letting the pleasure take them, the amulet laid on her chest ignored as the crest of the wave over took them. She pulled her lips away bending under him, her peak twisting her body. He followed her driving his shaft deep and staying there, each pump of his seed lowering the level of pain in his big body till he was left breathless in her arms.\n\nHe held himself there, resting his forehead against her neck, smiling as her hands rubbed his back under his wings. \n\nShe waited till her heart had almost settled back into a normal rhythm and then looked down.\n\n\"It's still glowing,\" she whispered excitedly.\n\n\"What?\" He lifted his head to look at her. \n\nHer eyes were wide and she was smiling. \"The amulet. It's still glowing.\" She kissed him. \n\n\"Lass, it might not mean anything.\" \n\n\"How can you say that?\" She pushed at his shoulder. \"You said you'd never seen it do this before. Can you get off me for a minute?\" He dropped down on the bed next to her. She hopped out of the bed and marched to the dresser. \"I'm going to call Bernie. Maybe he can help.\"\n\n\"Lass.\" She grabbed her phone. \"Isabelle.\"\n\n\"What? There has to be another step. We just need to find it.\"\n\n\"Isabelle stop.\" Something in the tone of his voice made her look up. \"Please.\" She set the phone down.\n\n\"But\u2014\"\n\n\"Come here.\" He held out his hand. She came back to the bed and sat next to him. \"Before you do anything more you need to think about something.\" He took her hand. \"If you free me I will be called to my realm. It might not be right away but a summons will come and I will not be able to refuse.\"\n\n\"I've thought about that. A lot actually.\" She squeezed his fingers. \"You can't expect me to give up when we might be close, to watch you suffer while I might be able to do something to help.\"\n\n\"It's just pain.\"\n\n\"No, it's your freedom. Your chance at having a life again.\"\n\n\"I told you\u2014\"\n\n\"You're being punished for a crime that you didn't commit,\" she said quickly.\n\n\"What are you saying lass?\"\n\n\"Bernie told me the whole story. The witches daughter was already pregnant when you met her.\" His eyes narrowed. \"It wasn't your baby.\"\n\n\"Why has no one ever told me?\"\n\n\"He didn't say.\" She brushed her fingers along his jaw. \"You're innocent. How can I stand by and watch you being punished for something you didn't do?\"\n\nHe looked at her, a gut wrenching look of confusion and pain in his eyes. \"How could they not tell me?\"\n\n\"I'm so sorry. I don't know.\" She got onto her knees to wrap her arms around him. \"Maybe they thought it would be easier for you if you believed you were guilty.\"\n\n\"All this time I thought it was my fault.\" His arms wrapped around her. She stroked his hair, her heart aching from the tears she could feel sliding down her chest.\n\n\"We're going to figure this out and then you can go home.\" She swallowed the tears in her throat. \"I'm not giving up okay.\" He nodded but didn't say anything. \"We're getting you out of there.\" She kissed the top of his head. \"I promise.\" \n\n*************************\n\nIt felt like dawn came early that morning, stealing him away before either of them were ready to say goodbye. Not that they had been on any previous morning but that day was especially bad.\n\nIsabelle fell into bed, completely exhausted. She'd spent hours trying to console Alasdair in between bouts of intense sex. \n\nHis frustration and anger had been clear every time the spell asserted itself. Although he hadn't turned it on her, he was just as caring as he'd always been, she could see it in his eyes, hear it in his voice.\n\nShe rolled onto her side to look at the book. Anger burned in her chest. He was right, someone should have told him the truth a long time ago. Instead they'd let him go on thinking he deserved his imprisonment. She couldn't imagine the weight of that kind of guilt. \n\n\"We'll find a way,\" she whispered.\n\nHours later she woke to the sound of her phone. Alasdair had eventually relented and let her call Bernie but he hadn't been able to offer anything more. Bernie had texted her to ask if they'd gotten any closer.\n\nNo luck so far but it's still glowing. She typed quickly.\n\nThat's a good sign.\n\nI'll keep trying.\n\nOkay. Let me know if you need anything.\n\nShe flipped the blanket back and swung her legs off the bed to sit up. Her stomach rumbled loudly.\n\n\"I'm going, I'm going.\" She mumbled and placed her hand on her belly. It was a habit she'd developed soon after finding out about the baby. \"Mommy isn't doing the best job looking after you so far huh?\" She stood, stretched and looked down at her still flat stomach. \"I'll do better I promise. I just need to get your daddy out of there.\" \n\nAfter a quick breakfast and shower she dressed and moved to the night stand. The book was still open from the previous night.\n\n\"What else can I try?\" she asked softly. The words on the pages didn't rearrange themselves to reveal the answer, not that she had expected them to, so she turned away with a sigh.\n\nShe wandered through the house lost in thought and didn't notice until she was standing in front of the door to John's office. It was in the back of the house where it was always quiet.\n\nIt had once been her favorite place to escape to but after he died she could barely bring herself to go near it. \n\nShe touched the door gently, closing her eyes against the ache in her chest. Tears slid down her cheeks as she stood there remembering. She rested her forehead against the dark wood, took a breath and opened her eyes. Her gaze fixed on her stomach again and her lips curved in a sad smile. ",
        "She gripped the knob and turned it slowly, took another breath and then shoved it open. The hinges creaked softly. She blinked back new tears as the desk came into view. Dust motes danced in the sunlight streaming through the curtains behind the desk. She stepped inside slowly, waiting for the onslaught of pain that had engulfed her the last time she had tried to go in that room. \n\nIt didn't come. Instead there was a dull ache in her chest but it was no where near as bad as it had been in the past. \n\nShe moved farther into the room, carefully avoiding looking at the framed pictures scattered among the lines of books on the book cases. She was there for a reason, not to test how much she'd healed. \n\n\"Where should I start?\" She glanced around quickly considering. \"Notebooks.\"\n\nShe moved around the desk, sneezed as the dust she'd kicked up hit her in the face. Her hands pulled open drawers till she found the right one. It was stuffed full of notebooks. John had always kept detailed notes of his research. As she lifted the first one out to place it on the desk her gaze fell on the framed picture he'd kept close to the monitor.\n\nIt had been taken on their honeymoon in Scotland. There was a ruin of a castle in the background, which one she couldn't remember if a person paid her, there'd been so many castles to see on that trip. In it they were the smiling happy picture of potential. Two people excited to start their married life, eager to grow old together.\n\nShe wiped her eyes quickly and pulled out another notebook. Once the drawer was empty she scooped the books into her arms and moved around the desk.\n\nHer eyes glanced at the bookcase as she passed it. A little pang of pride spread through her chest under the ache that was making it hard for her to take a full breath.\n\nWhen they'd moved in she'd insisted that the books bearing his name be placed on their own shelf, separate from the others. To remind him of what he'd accomplished and to give him something to strive for. There were only five books between the bookends. His goal had been to fill the rest of the shelf.\n\nShe used to come in there to read them again and again, curled up in the over sized wingback chair by the desk. It had never mattered to her that he was busy creating other worlds and getting lost in them. They'd fit together so well that it felt right just to be in the same room with each other.\n\nShe stopped in the doorway suddenly reluctant to leave. \"John.\" She turned back. \"I don't know if you can hear me. I don't know if I even believe in this sort of thing. But if you can, I really need your help. You probably know what's been happening and why I want to figure this out.\" She swallowed tears gathering in her throat. \"I'd like to get a little justice for one of you.\" She looked around once more and then closed the door.\n\n**************************\n\nAlasdair found her curled up on the sofa, surrounded by handwritten notebooks and balled up tissues, sound asleep. The spell twisted through his limbs painfully. In his mind he shoved back at it hard. \n\n\"Lass.\" He squatted down next to her and brushed her hair away from her face.\n\n\"I can't find it,\" she mumbled, \"You said it was there but I can't see it.\"\n\n\"Isabelle,\" Alasdair said softly, \"you have to wake up.\"\n\nHer face screwed up in a frown. \"You don't understand. Why can't I find it? He said it was there.\"\n\n\"Who lass?\"\n\nHer eyes opened, she squinted up at him. \"Alasdair? Did I fall asleep?\" She sat up, catching the book that had been resting on her chest as it slid down.\n\n\"Have you been searching all day?\"\n\n\"Most of it yes.\" She frowned again. \"I don't think I've found anything.\"\u2028\n\n\"You said he told you the answer was here. Did you mean in these books?\" She nodded. \n\n\"I was just dreaming. Probably just wishful thinking.\" She looked at him. \"We should go upstairs.\"\n\nHe stood and held out his hand to help her stand. She stepped around the books gingerly.\n\n\"Where did all of these come from?\" he asked softly.\n\nShe looked down at the floor and the books spread in front of the sofa. \"They were my husband's.\"\n\n\"Why would he have information on spells?\" His voice was strained.\n\nShe looked at him quickly, sweat dotted his brow, damp strands of hair clung to his neck. \"We don't have time for this right now.\" She took his hand. \"Come on.\"\n\nThey made it half way up the stairs before he had to stop. He pulled at her hand.\n\n\"Lass, I\u2014\"\n\nShe turned to him. He was bent over, his free hand a heavy fist pressed against his bent leg. \n\n\"Oh god.\" She knelt on the stairs and yanked her yoga pants down to her knees. He moved behind her, pulled his plaid out of the way and shoved himself into her. She was not at all ready for him that time and had to bit her lip to stifle a cry of pain. He stopped and reached for her hand where she was gripping the carpeted stair. \n\n\"Stars lass, I'm so sorry.\" He could barely get the words out.\n\nShe took a deep breath. \"It's okay.\"\n\n\"I've hurt you,\" he said softly, his voice filled with pain. \n\n\"Not your fault,\" she whispered. He squeezed her hand and slowly pulled his hips back. Her breath escaped in a little sob.\n\n\"Isabelle.\"\n\nShe shook her head. \"Don't stop.\"\n\nHe pushed back at the scorching pain in his chest, hating that he'd been forced to hurt her. She tried to push back into his lap but he moved with her.\n\n\"Lass wait.\" His hand slid from where it was holding her hip to between her thighs, finding her little hot button. Her hips bucked as he circled it with shaking fingers. \"I will not let it make me inflict more pain on you.\" She nodded, too focused on what his fingers were doing to speak.\n\nWithin moments he felt the change in her body. Her back arched, her head fell forward and most importantly her sheath grew slippery. A few short strokes and he was able to glide into her without causing pain for either of them. She lifted her head as he lengthened his thrusts. He knew what she was seeking and leaned over her back. She looked over her shoulder and brushed her lips against his.\n\n\"Better,\" she whispered. He groaned as she pushed back against him.\n\nThe hand that had been covering hers moved to her hip to pull her into his thrusts. It wasn't long till her body shuddered under him, the spasms gripping his hardness urging him to find his own release. He did so quickly, moaning his pleasure against her lips.\n\nThey stayed together, crammed against the stairs for several long minutes letting their heartbeats settle, catching their breath.\n\n\"Lass,\" he said quietly. \"I'm sorry. I should not have waited as long as I did.\"\n\n\"It's okay.\" She pressed her hand against where he still held her hip. \"I guess I was a little distracted so I wasn't as ready as I have been.\"\n\n\"By the search, yes.\"\n\n\"I haven't given up it that's what that tone was about.\"\n\n\"I'm angry, for what it made me do to you.\" He straightened, withdrawing from her. She winced slightly.\n\n\"You didn't do anything. It was the spell.\" She yanked her pants back into place and turned to sit on the stair. \"Alasdair, I know you. You would never do that to a woman if you had a choice.\" She reached up to cup his cheek. \"We could have just stayed in the living room. I just couldn't...not with John's work around us.\"\n\nHis hand pressed her palm against his cheek. \"Do you still love him?\"\n\n\"Of course. Don't you still love your mate?\"\n\nHe smiled sadly. \"It wasn't a love match.\"\n\n\"What?\"\n\n\"Our pairing helped my mother secure her throne. It is not uncommon among royalty.\"\n\nShe looked into his eyes. \"You haven't even had a chance to fall in love.\" She leaned forward to wrap her arms around him, tucking her face against his hair. \"She took everything from you.\"\n\nNot everything. He thought with a little smile.\n\nHe pulled her close relishing the feeling of her body against his. She clung to him as he stood and set her on her feet. \n\n\"You should take advantage of our reprieve to wash up,\" he said with a smile.\n\n\"I suppose I'm covered in dust.\" She wiped her cheeks. \"Do you want to come with me?\"\n\n\"We both know you won't get anything clean if I'm in there too.\"\n\n\"True, your gigantic wings block the water.\" She turned to walk up the stairs.\n\n\"I thought you liked my wings.\" He frowned at her swaying backside. She reached the top and turned back to him.\n\n\"Well, actually...they're a bit...freakishly huge.\" She smirked and then let out a shriek as he bounded up the stairs after her. She ran down the hall to her bedroom laughing. He caught her just inside the doorway, hooking an arm around her midsection and pulling her onto the bed with him, making sure she landed on top.\n\n\"You shouldn't tease me woman.\" He nuzzled her neck. She giggled breathlessly, squirming against his chest. \n\n\"I'm sorry,\" she gasped. \"I love them. I swear.\"\n\n\"I don't believe you,\" he growled, playfully biting her shoulder.\n\n\"No, I promise, they're perfect. I wish I had my own.\"\n\n\"You want to be faerie?\" He let her slide from his chest.\n\nShe turned on her side to look at him. \"To be able to fly must be incredible.\"\n\n\"It isn't terrible, except during thunderstorms.\" Her eyes went wide. \"Very dangerous.\"\n\n\"I hadn't thought of that. Maybe I'm safer on the ground.\" She sat up. \"Come shower with me. That damned spell is going to do it's thing soon and I'd rather not have you picking me up while I have shampoo in my hair again.\"\n\n\"That potion is vile,\" he grumbled.\n\n\"Agreed. I should have warned you about getting it in your eyes.\"\n\nHe shuddered remembering the stinging pain. \"I thought you'd blinded me.\"\n\n\"I know and again, I'm very sorry.\" She looked down at him. \"Can you ever forgive me?\"\n\n\"Perhaps.\"\n\n\"Would ice cream help sway you?\"\n\n\"Strawberry?\"\n\n\"Nope this one is even better. Dark chocolate truffle whiskey and I promise it'll make you weak in the knees.\" She winked at him, stood and held out her hand.\n\n*******************\n\nShe was right about the ice cream he decided as he stood in the kitchen watching her licking a spoon with a dreamy satisfied look on her face. \n\nThey had wrapped towels around themselves and dined on leftover pizza and the heavenly ice cream she'd mentioned. It was everything she'd promised although it didn't make him weak kneed. The pain of the spell did that all on it's own, forcing them to stop twice while they were trying to eat to come together to ease his pain.\n\nShe'd been right about the shower as well. They'd just managed to rinse the hateful shampoo out before he couldn't bear the pain further. She'd held onto him as he lifted her and braced her against the cold tile of the shower wall. At least all she'd suffered that time was a chilled back.\n\nHe reached out and took the now empty bowl from her to set it in the sink with his then turned back to her before she hop down from the counter.\n\n\"Stay there,\" he said softly, his hands pulling his towel free and letting it fall to the floor. She pulled hers open and then spread her knees for him. He kissed her softly while tugging her hips till she was balanced on the edge. He reached between them, parting her lips with his shaft, using the tip to tease her little button out from beneath it's hood as she leaned back.\n\nIn his mind he shoved back at the spell with everything he had. Then he took a breath and slid into her, carefully working himself into her fully, listening for any sounds of distress. There were none. Just her little gasp followed by a soft moan.\n\n\"Never has there been a more perfect sound,\" he said softly.\n\nHe ran his hands along her thighs, lifting them together, resting her ankles over one of his shoulders, wrapping his arm around her legs. She arched against the granite, gripping the edge tightly.\n\nHe kept his pace as slow as he could, alternating between pushing back at the spell and letting the feeling of her skin against his pull him towards his peak, until her soft pleas of harder, faster grew loud. Then he took those lovely long legs down and pulled them around his waist exposing her center to his attentive fingers.\n\nShe bent backwards as he shoved her over the edge, crying out loudly. She relaxed onto the cold stone for a moment before propping herself up on her elbows and then reaching for him. He let her pull herself up with her hands on his shoulders. She pressed her lips against his while his hands moved to her hips, lifting her into his pounding thrusts. He pulled her off the counter driving his shaft deep into her welcoming softness, spilling his seed with a guttural groan.\n\nAfter a moment he set her down carefully, she held onto his shoulders, kissing him between deep calming breaths, letting her legs fall weakly from his waist. His hands ran over her back, pulling her close.\n\n\"Holy hell,\" she said when he lifted his head, \"remind me to get more of that ice cream.\"\n\nHe smiled. \"It really was better than strawberry.\" She laughed. He pulled back and helped her down from the counter. She turned to pick up the towel, stopped and stared at it blankly for a moment.\n\n\"Of course. Why didn't I see it before?\" she whispered and turned back to him. \"He was in his office, at his computer.\"\n\nAlasdair stood from picking up his towel. \"Who?'\n\n\"John.\" She waved her hands. \"When he said the answer is here. He was in his office, at the desk, and the computer was on. That must have been what he meant.\" She turned suddenly, wrapping the towel around her nakedness. \"That's got to be it.\" She continued excitedly as she marched to the back of the house.\n\nWhen he caught up to her she was standing at door he'd never seen before, reaching for the knob. He came up behind her but she didn't move to open it.\n\n\"Isabelle?\"\n\n\"His office,\" she said with a little catch in her voice. She turned the knob slowly, swung it open, and reached inside to turn on the light. \n\nHe followed her into the room looking around. Bookcases lined two walls, most of the shelves were filled with books but some held framed pictures. To the right of the large dark wooden desk was a big comfortable looking chair. She bent down behind the desk.\n\n\"It'll take a minute to boot up.\" She looked up at him. He had stopped at the shelf that held John's work. \"Those are John's.\" She walked back around the desk to join him. \"I'm biased of course but he was quite good.\"\n\n\"He wrote these?\"\n\n\"Yes.\" She pulled one down and held it out to him. \"You asked why he would have information of spells. He was good because he did a lot of research.\" She smiled with pride. \"Well that and he had an amazing imagination.\"\n\nHe looked at the brightly colored cover then turned it to read the back briefly. \"He wrote about witches and warlocks?\"\n\n\"And elves and dwarfs. There's a dragon in this one.\" She pointed to another. \"He would have loved meeting you.\" She smiled up at him. \"Your life story would have fascinated him. He probably would have kept you in here for days answering questions.\"\n\nHe set the book down to pull her into his arms. As she'd been speaking tears had gathered in her eyes and slid down her cheeks.\n\n\"Lass, we can search tomorrow night.\" She shook her head.\n\n\"No, every day you're stuck in there is another day that horrible hag wins.\"\n\n\"It's just one more day.\" His hand cupped the back of her head. \"I can endure one more day.\"\n\n\"You shouldn't have had to endure even one.\" She pulled away, wiped her face and moved back to the desk. \"I'm going to find whatever opens that damned amulet and get you out of there.\"\n\nHe'd never seen her angry before. He watched her for a moment before sudden understanding struck.\n\n\"Isabelle.\" He moved around the desk and went down on a knee next to the chair she had plunked herself in. \"What happened to him?\"\n\nShe looked down, closed her eyes for a moment and then looked back at the screen. \"I told you, he was killed.\"\n\n\"How did he die?\"\n\n\"What does it matter? He's gone, someone took him from his life. Just like someone did to you.\" She sniffed softly, grabbed the mouse and started clicking on icons. \n\n\"Lass, please.\" He turned the chair so she was facing him. \"Leave this for tonight. The spell won't give us much more time.\" She looked at him, wiped her cheeks and nodded.\n\n\"I just want to check one thing.\" He frowned but nodded and stood. She turned back to the screen and grabbed the mouse again. She clicked on a folder skimming the contents quickly. She clicked again and again searching as fast as she could. \"He kept notes of ideas, pieces of dialog, anything he thought he might use.\" Her eyes ran over the screen, hovered over a line for a moment, ran across it again and then she closed the folder. She clicked the shut down icon, flipped off the screen and stood. \n\n\"Did you find something?\"\n\n\"I'm not sure yet. Let's go upstairs.\" She waited while he exited the room and then followed, flipping off the light. Before closing the door she turned back and whispered, \"I think I see it now.\"\n\n\"It's almost sunrise.\" Alasdair took her hand, she let him pull her through the house quickly. They burst into the bedroom and stopped. \n\n\"What do you think you found?\"\n\n\"He made a note for himself. All it said was 'a declaration?'. I know it's not much to go on but I know the book he was working on was about a witch and that's the folder it was in.\"\n\n\"What could it mean?\"\n\n\"Maybe making a declaration of some sort can break the spell?\"\n\n\"A declaration of what?\"\n\nShe smiled and moved to her jewelry box to grab the amulet. \"I can't speak for faerie but for humans it's one thing we really seem to struggle with.\" She held the amulet up. \"Love.\" He smiled. \"You think I'm crazy.\"\n\n\"Not at all.\" He reached out his hand. She hesitated for a moment before she stepped closer and took it. \"Faerie don't wrestle with expressing our feelings the way humans do.\" His fingers caressed hers. \"I've been trying to tell you for weeks.\"\n\n\"Tell me what?\" she asked quietly.\n\n\"I love you Isabelle.\"\n\nShe stepped closer, looking up at him. \"I love you too.\" She held her breath waiting for something to happen but nothing did. The amulet still had a faint glow but nothing had changed. It was still just a disc that wouldn't fit in the square divot on the cover of the book.\n\n\"I don't understand.\" She looked at it.\n\n\"Do you mean it lass?\" He was staring at her intently.\n\nHer hand drifted down, she swallowed and took a breath. \"Yes.\"\n\nHe pulled her against his chest, dipped his head and captured her lips in a deep kiss. She sighed softly as he lifted her onto her toes and then stumbled forward suddenly, her arms empty.\n\n\"No!\" She grabbed the book, slammed it shut. \"You give him back.\" It didn't respond. She sank down onto the bed. \"It was a mistake. He doesn't belong in there.\" Hot tears splashed the cover as she bent over it. \"Let him go. Please, just let him go.\"\n\nShe sat there crying in quiet frustration for what felt like hours but turned out to be twenty minutes when she finally wiped her face with the end of the towel and stood. Her stomach rumbled loudly.\n\n\"Really? Now? I know pregnancy is supposed to mess with a lot but this is ridiculous.\" She sniffed. It did it again. \"Baby, if I didn't already love you I'd be a little\u2014\" She stopped and looked down at her hand. She'd put it against her belly as she spoke, in it she still held the amulet. \n\nIt was a silver square with the green glow oozing from the sides.\n\nShe blinked and turned it, afraid to believe it had actually changed.\n\n\"It was you.\" She looked down with a smile. \"Not us, not each other. It was you.\" Her other hand rubbed her belly. \n\nShe moved to the nightstand and set the now square amulet into the divot. She watched wide eyed as it melted into the cover, changing from silver into the brown leather.\n\nEverything went silent for several heartbeats and then the book flipped open, the pages glowing with the same green light as the amulet. The light seemed to shrink inward for a second then with a ear ringing boom it exploded into the room. Isabelle was tossed backwards, banging against the wall. She slid halfway down in a daze but refused to look away. Alasdair appeared on the floor next to the bed. He caught himself on his hands as he fell forward onto his knees.",
        "Behind him the book slammed itself shut. Isabelle pushed herself up, went to him, fell to her knees and wrapped her arms around him. He pulled her close and kissed the top of her head.\n\n\"We did it,\" she whispered.\n\n\"Lass,\" She looked up at him. His eyes were full of happy tears. \"Say it again for me.\"\n\nShe smiled. \"I love you.\""
    ],
    "authorname": "Justbecause1011",
    "tags": [
        "nonhuman",
        "faerie",
        "romance",
        "trapped",
        "love",
        "non-human",
        "romantic"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/within-pt-04"
}