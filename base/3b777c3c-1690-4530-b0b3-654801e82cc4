{
    "title": "A Neighborly Bet Ch. 04",
    "pages": [
        "After my romp with Christi, I showered, and then went to the bar that the party had been at a few weeks earlier. As I walked in, I saw Britt sitting there, just as I expected, and she was obviously getting a good buzz on.\n\nI stepped into the empty space next to her and ordered a beer as she looked up at me.\n\n\"What do you want?\" she asked.\n\n\"I think we need to talk,\" I told her. \"Let's go over to that empty booth.\n\n\"Fuck you,\" she replied, slurring a little. \"I'm not going anywhere with you.\"\n\n\"Ok,\" I said. \"Then we'll just talk about tonight right here at the bar, where everybody can hear us.\"\n\nBritt's head jerked and her eyes got big, and then she slowly tried to stand. \n\nAs she took her first step, she stumbled a little, and I reached out to help her over to the booth.\n\n\"Did you enjoy the show?\" I asked, smiling at her after we sat down. \"Don't answer. I know you did, otherwise you wouldn't have watched as long as you did.\"\n\n\"Fuck you,\" she replied, slurring again.\n\n\"You know, I realized something tonight,\" I told her. \"You're not really mad that I'm sleeping with your mother. You're jealous.\"\n\n\"Jealous?\" she yelled. \"Why the fuck would I be jealous of you?\"\n\n\"Quit yelling,\" I told her calmly, \"unless you want these people to think you're even more of a basket-case than they already do.\"\n\n\"Fuck you,\" she replied, looking around.\n\n\"I didn't say that you were jealous of me,\" I continued. \"You're jealous of your mother.\"\n\nWe sat there quietly, looking at each other as Brittany glared at me for a couple of minutes.\n\n\"You're an asshole,\" she finally said.\n\n\"Maybe, but I'm right,\" I told her. \"And, I keep your mother very happy.\"\n\n\"Fuck you,\" she mumbled as she took a drink.\n\n\"Really?\" I replied. \"With all of your education, is that the only reply you can come up with on a regular basis?\"\n\nBrittany glared at me again and finished off her drink.\n\n\"Do you want me to drive you home?\" I asked. \"You've obviously had too many, and you shouldn't get behind the wheel.\"\n\n\"I'll drive myself,\" she said defiantly. \"I don't want any help from you.\"\n\n\"Suit yourself,\" I told her. \"But just so you know, I'm going to sit here and wait until you leave, and I'm going to follow you home.\"\n\n\"Why are you such an asshole?\" she asked loudly.\n\n\"In this case, I'm not an asshole,\" I told her. \"I would just hate to see someone else get hurt because you shouldn't have been driving, and I would hate to have to see your parents fork out the money it would take to get a lawyer because you were stupid enough to drive.\"\n\n\"Yeah, like you care about my dad,\" she spit at me.\n\n\"Young lady, I understand that you're not happy with me right now, but there is more to this story than you know, or that you need to know, so don't be so judgmental.\"\n\nBritt glared at me again, looking like she wanted to say something, but instead pulled her car keys from her purse.\n\n\"I'm going home,\" she slurred.\n\n\"And I'm right behind you,\" I replied.\n\nI heard her mumble \"Asshole,\" as we walked out the door.\n\nA few minutes later, I watched as she pulled her car into her driveway, and I then went inside my house and went to sleep.\n\n*****\n\nThe next morning, as I was cleaning off my patio, Britt walked into my yard.\n\n\"Can I talk to you for a minute?\" she asked softly.\n\n\"I don't know,\" I replied. \"Can you?\"\n\n\"Huh?\"\n\n\"You don't exactly have a history of TALKING to me,\" I told her. \"Normally you yell at me.\"\n\n\"I'm sorry,\" she said. \"I want to talk. Privately.\"\n\n\"Ok,\" I replied.\n\nI led her to a table and chairs in the shade and we sat down.\n\n\"What's up?\" I asked.\n\n\"I'm sorry I was such a bitch last night,\" she said. \"You caught me by surprise.\"\n\n\"That's not all I caught you by,\" I laughed.\n\n\"I know,\" she said softly, looking at the ground.\n\nShe was silent for a minute, and I was about to ask if there was anything else she wanted, when she looked at me again.\n\n\"You're right,\" she said. \"I am jealous. Of my mother.\"\n\nI didn't respond. I just looked at her.\n\n\"Ever since she started up with you, she's been a different person,\" she continued. \"She's happy. I don't think she's ever been this happy.\"\n\n\"I want that,\" she went on. \"I've never been with a man that can make me that happy. That can make my respond the way you get her to last night.\"\n\nI sat there thinking that she could find a guy to make her that happy, if she didn't act like such a bitch to them.\n\n\"I watched and listened to my mother last night, and I was jealous. I want a man that can make me cum like that. Hell, I want a man that can make me cum, period. The guys I've been with just want to get their rocks off and then go to sleep, or wait until they can go again. I don't think that my last boyfriend even knew I could cum.\"\n\n\"Ok, now you're getting into the 'TMI' area,\" I laughed.\n\n\"Sorry,\" she said. \"But it's not funny.\"\n\n\"I can imagine,\" I told her.\n\n\"I know all about my parents and you,\" she said after a few seconds of silence.\n\n\"What do you mean?\" I asked. \n\n\"I know about the bet,\" she said.\n\nI didn't know how to respond to that, so I didn't. I sat quietly and looked at her.\n\n\"I think it's disgusting that my dad would do something like that,\" she went on, \"and at first, I was pissed-off that you went along with it.\"\n\n\"But I see how happy my mother is, and while I still think it's wrong, I am happy that she's happy. And I know that you are the reason that she's so happy, so I really can't be that mad at you.\"\n\n\"I wish I knew what to say,\" I told her. \"I have no defense.\"\n\n\"You don't have to defend yourself,\" she replied. \"Like I said, my mother's happy. Hell, she's happier than I can ever remember her being.\"\n\n\"I also know about my dad, my brother, and that fat slut they're fucking,\" she continued. \n\n\"How do you know about all of this?\" I had to ask.\n\n\"My father has a big mouth,\" she said. \"I hear him bragging about it all the time when he's on his cell phone in the garage, supposedly working on his boat.\"\n\n\"Ahh. Ok,\" I replied. Joe was known for his loud voice, and it didn't surprise me at all that he would brag about his playmate at work to whoever would listen.\n\n\"The whole thing disgusts me,\" she said, \"but like I said, I really can't be too mad at you and my mother. It's almost like you were put into this situation.\"\n\n\"Maybe you should talk to your mother,\" I told her. \"She doesn't understand why you're so angry all the time. She thinks you hate her.\"\n\n\"I know,\" Brittany said. \"I didn't know myself until you forced me into thinking about it last night.\"\n\n\"See? Sometime being an asshole can be a good thing,\" I joked.\n\n\"Let's not get too carried away,\" she replied, smiling at me. \"I'm still conflicted about the whole thing with you and my mother.\"\n\n\"I understand that,\" I said. \"That's why I think it might help if you talked to her. Maybe hear her side of the story.\"\n\n\"Maybe. I'll have to think about it.\"\n\n\"I should go now,\" she said a couple seconds later. \n\nWe both stood, and to my surprise, Brittany stepped up to me and hugged me. Tightly.\n\n\"You know, if you hurt my mother, I'm going to kill you,\" she said as she held me.\n\n\"No worries,\" I laughed. \"I'm not going to hurt her.\"\n\nShe didn't say another word as she turned around and walked out of my yard.\n\nI stood there, wondering what the hell just happened, when my cell phone rang.\n\n\"Did I just see my daughter hug you?\" I heard Christi ask. \n\n\"I don't know,\" I laughed, looking at her house. I saw her in one of the upstairs windows, looking down at me. \"Did you see that?\"\n\n\"What the hell was that about?\" she asked.\n\n\"I've been wondering the same thing,\" I told her. \"She knows about us, though.\"\n\n\"What?\" Christi yelled. \"What did you tell her?\"\n\n\"I didn't tell her anything,\" I replied, wondering just how much to tell her. \"She already knew.\"\n\n\"How?\"\n\nBefore I could answer, I heard Britt's voice in the background. \"I'll call you back,\" Christi said.\n\nI finished up my yard work, and was happy that I didn't hear any yelling coming from next door. A couple of hours later, after I had showered as was on my front porch getting my mail, I saw Christi and Brittany getting into Britt's car.\n\nI looked over at them, and saw Christi looking at me, smiling. As they drove off, she waved at me, and I wondered just what had happened next door.\n\nAround midnight, just as I was getting ready to go to bed, my phone rang. Seeing it was Christi, I picked it up right away.\n\n\"Hey sexy!\" I heard. There was a lot of noise in the background, including Brittany giggling, and Christi was slurring.\n\n\"Hi beautiful,\" I replied. \"What's up?\"\n\n\"What's up is my buzz!\" she said. \"We're drunk! We can't drive. Will you come and get us?\"\n\n\"Sure,\" I told her. \"Where are you?\"\n\nChristi was barely able to get the name of the bar out, but I knew where she was at. As soon as I was able to throw on a pair of shorts, I was in my car and on my way there.\n\nI walked in the bar, and saw the two drunk women right away, dressed in short summer dresses and short heels, surrounded by a bunch of college boys obviously trying to pick them up.\n\n\"There's our ride!\" Christi yelled when she saw me.\n\nI walked up to them, trying not to laugh at their condition, and as I put my arms around both women, one of the guys asked, \"Dude, you sure you can handle them both?\" causing his equally drunk friends to laugh.\n\n\"No,\" I replied, looking at him, \"but I AM sure that YOU couldn't handle EITHER of them.\"\n\nThat got a laugh out of Christi and Britt, and we started walking out the door.\n\nI helped Britt into the back seat first, and I got a nice panty flash as she slid in. From the smile on her face, I had to think that it was intentional.\n\nAs I opened up the passenger side door, Christi grabbed my crotch, which made Britt laugh in the back seat, and then she slid into the car, also giving my a look up her skirt, but showing me that she wasn't wearing panties.\n\n'Holy crap! What the HELL happened today?' I thought as I walked around the car.\n\nBoth ladies were very animated as I drove home, and it was obvious that they were both quite drunk.\n\nA few minutes later, I pulled into my driveway, and helped them out of the car. I walked them to their front door, and Christi finally opened it after three tries.\n\nBrittany went in first, and before Christi walked in, she whispered in my ear, \"Meet me in back, by the gate. Now!\"\n\n\"What about...?\" I started to ask.\n\n\"NOW!\" she repeated, and shut the door.\n\n'Ok, then' I thought to myself.\n\nI stepped down off her porch and pulled my car into my garage, and then behind my garage to the gate in the back of the yard, where I saw Christi walking, or stumbling, toward me.\n\nAs I opened the gate for her, she began unbuttoning the front of her dress down to her waist, exposing her tits.\n\n\"You are a wonderful man,\" she slurred as she walked to me.\n\nShe threw her arms around me and kissed me, holding me tight and rubbing her body against me.\n\n\"And I am going to treat you like a wonderful man should be treated,\" she said softly, as our lips parted and my hands squeezed her asscheeks.\n\nShe quickly pushed me toward the back of the garage, where she pinned me up against the wall.\n\n\"What did I do that makes me such a wonderful man?\" I asked as she knelt in front of me.\n\n\"Do you want me to talk,\" she asked as she unbuttoned my shorts, \"or give you the best head I've ever given?\"\n\n\"Oh, definitely head,\" I gasped as she pulled my hard cock out into the cool night air.\n\n\"Good answer,\" she whispered, as she flicked her tongue down the length of my rod.\n\n\"Oh shit! I thought so,\" I moaned, feeling her lips slide down my shaft.\n\nI continued to lean against the back of the garage as Christi sucked and stroked my cock, sometimes taking me deep and trying to bury her nose in my pubes, and other times keeping just the head tightly in her lips as she sucked hard and quickly stroked the length of my exposed shaft.\n\n\"I want you to fuck my face,\" she slurred a few minutes later as she leaned back. \"Asshole should be home soon, and I want you to finish off.\" \n\nWith her still sitting on her heels, I stepped forward and placed the head of my cock on her open lips. I reached down and grabbed a hold of her ponytail and held tightly.\n\nI moved my hips forward, sliding my shaft into her warm mouth, and she moaned loudly, placing her hands on my thighs.\n\nHolding tight to her hair, I began thrusting my hips back and forth, sliding my stiff pole in and out of her mouth. A couple of times, I pulled my cock all the way out, and then slid it right back in, just as I like to do when I'm fucking her hot pussy.\n\nAfter a couple of minutes, I felt Christi slide her hands from the front of my legs around to the back, and hold tight to my ass.\n\n\"Oh, yeah!\" I moaned as I began thrusting harder and faster.\n\n\"MmmHmmm!\" she moaned in response, pulling my ass in closer.\n\nI looked down as I continued, and in the moon light, I could see her tits shaking and bouncing as I thrust.\n\n\"Ohhshit!\" I gasped as she pulled me in close. I could feel her cheeks tighten as she sucked on my cock, and then loosen.\n\n\"Play with your pussy,\" I told her as I slowed down.\n\nChristi looked up at me, keeping just the head of my cock in her mouth.\n\n\"Reach up under your dress and play with your pussy while I fuck your beautiful face,\" I told her again.\n\n\"Mmmm,\" she replied, leaning her head back a little. \"You're naughty!\"\n\nWithout replying, I grabbed her ponytail again and thrust my cock back down her throat. Moaning loudly, Christi then slid her hand under her skirt, and I felt her moan as her fingers must have slid across her clit.\n\n\"Is your pussy nice and wet?\" I asked, as I continued pumping my hips.\n\n\"MmHmm!\" she moaned, moving her arm.\n\n\"Good,\" I replied. \n\nA couple of minutes later, I started to feel like I wasn't going to last too much longer, so I slowed down for a second.\n\n\"Slide two fingers into your hot, wet pussy,\" I told her. \"Show me how wet you are.\"\n\nShe moaned a little harder, and I watched as she moved her arm a little further down, as I began thrusting faster again.\n\n\"C'mon, baby, show me your fingers,\" I told her, knowing that I was going to cum soon.\n\nI felt her moan again as she raised her arm and showed me her fingers, glistening with her juices.\n\nI grabbed her wrist with my free hand and pulled her fingers to my mouth. \n\nI wrapped my lips around her wet, sticky fingers and began licking and sucking on them, tasting her essence as I pulled her face harder toward my crotch.\n\n\"Oh, fuck baby!,\" I moaned around her fingers. \"I'm gonna cum!\"\n\n\"MmmHMMM!\" she moaned, using her other hand to pull me closer.\n\nI started sucking on her fingers harder as I felt my balls begin to contract.\n\n\"Ohhyeahh!\" I moaned loudly, as I felt my cock spew my load down Christi's throat.\n\nI held her head in tightly, and her hand squeezed hard on my asscheek as I continued to empty my balls. Christi was moaning loudly around me, and her body looked like it was shaking a little.\n\n\"Holy shit!\" I gasped a couple minutes later, as I slid my spent rod from Christi's warm mouth.\n\n\"Oh yeah!\" she moaned in agreement, licking her lips.\n\nI reached my hands down to help her up, and she leaned in to give me a salty kiss.\n\n\"That was the first time I've ever cum from giving head,\" she whispered when our lips parted. \n\n\"I've never cum without being touched,\" she added.\n\n\"Nice,\" was all I could say as I tried to catch my breath.\n\n\"As badly as I want to stay, I have to get home,\" she said, kissing me again. \"He should be home any minute.\"\n\n\"Ok,\" I replied, squeezing her ass one more time. \n\nI walked over to the fence with her, and as I watched her walk to her house, I looked up at her upstairs windows, and saw Britt looking down at me. *****\n\nThe next morning, I woke up to the a bright sun blasting in my windows. As I looked out into my yard, I saw Christi and Brittany in their yard, wearing bikinis and sunglasses, and sunbathing.\n\nI quickly picked up my cell phone and called Christi.\n\n\"How's your head?\" I asked when she answered.\n\n\"You seem to enjoy it,\" she laughed.\n\n\"Absolutely!\" I replied, \"But that's not what I meant.\"\n\n\"I know,\" she sighed. \"We're both hurtin'.\"\n\n\"I can imagine,\" I laughed. \"You were both a bit trashed last night.\"\n\n\"Yes, we were,\" she said, reaching her hand to her daughter's. \"But, we had a good time.\"\n\n\"That's good,\" I told her. \"Are you going to tell me why I am such a wonderful man now?\"\n\n\"Later,\" she replied. \"Right now, I just need to rest.\"\n\n\"Ok,\" I laughed again. \"Just a little advice for your hangovers, try a couple bananas and some Gator-ade. Ibuprofen would help, too.\"\n\n\"Hmm. Ok, we'll have to give that a try. Coffee isn't working.\"\n\n\"No,\" I replied. \"Coffee is not going to help. You need potassium and re-hydration. Trust me on this.\"\n\n\"Yes, sir,\" she said. I heard her tell Brittany what I said, and then she came back to the phone. \"Can I call you later?\" she asked.\n\n\"I'll be here,\" I told her.\n\n\"Oh, by the way,\" I added, \"you look hot in your bikinis.\"\n\nI hadn't intended to pluralize bikini, and I was hoping that she didn't catch it.\n\n\"Are you watching us?\" she asked. \n\n\"Maybe,\" I laughed. \n\nIn the background, I heard Britt call me a perv, as she raised her head and looked at my house. I heard Christi laugh on the phone.\n\n\"Britt says you're a perv,\" she told me.\n\n\"If she only knew,\" I replied.\n\n\"You never know,\" Christi responded. \"She'd probably like it.\"\n\nI heard Britt yell, \"Mom!\", and I laughed, not knowing how, or if, to respond to that.\n\n\"I'll talk to you later,\" I told her.\n\n\"Sounds good. Bye.\"\n\nA couple of hours later, Christi called me.\n\n\"Can you talk?\" she asked.\n\n\"Sure. What's up?\"\n\n\"Well I finally have a few minutes, and I thought I'd call you,\" she said. \"I wanted to talk about last night.\"\n\n\"What about it?\"\n\n\"I want to thank you,\" she told me.\n\n\"Are you kidding?\" I laughed. \"After the way you attacked me behind my garage, I should be thanking YOU!\"\n\n\"Yeah, I did get a little carried away,\" she sighed.\n\n\"I should get you drunk more often,\" I joked.\n\n\"As long as I don't have to deal with a hangover like I had this morning,\" she laughed.\n\n\"What I wanted to talk to you about was your talk with Britt,\" she continued. \"When she got home, we had a long talk.\"\n\n\"She apologized for being such a bitch. She's never apologized for ANYTHING before! She told me that she really doesn't hate me, and that she's not even really mad at me. She's mad at her father.\"\n\n\"She told me that you helped her figure all of this out,\" Christi said. \"Thank you so much!\"\n\n\"I didn't do that much,\" I replied. \"I think she knew the truth about what she felt all along, she just didn't want to admit it to herself.\"\n\n\"And she wouldn't have, if you didn't confront her like that,\" Christi said. \n\n\"I know my daughter well enough. She would have gone on in denial if you didn't take the time to talk to her like that.\"\n\n\"What all did she tell you?\" I asked. I wasn't sure if Britt had told her about playing the voyeur, and if I should say anything if she didn't.\n\n\"She told me that she knew about the bet,\" she said, \"and that she knew all about us, and she knows about her father and his girlfriend.\"\n\n\"Ok,\" I said, waiting to see if Christi would say anything else.\n\n\"Anyway, I just wanted to let you know that Joe's going away on his end-of-the-summer fishing trip next weekend, and he's taking my son and my dad. Britt said that she'd watch my daughter, if you want to have some time together.\"\n\n\"That sounds great,\" I told her. \"Did you have anything special in mind?\"\n\n\"As a matter of fact, I did,\" she replied. \"I was thinking an evening in the city, followed by spending the night together, in a hotel room.\"",
        "\"That sounds very nice,\" I said. \"I'll start making some reservations.\n\n\"Good!\" she responded. \"And I haven't forgotten that I promised you a little something when we had a chance like this, either.\"\n\nI smiled at that thought, and Christi then had to go.\n\nOver the next week, Britt was surprisingly pleasant and nice to me every time I saw her. She even made it a point to start conversations with me when she saw me, touching my arm as we talked, something she had never done since they moved in.\n\nThe night Christi and I went out, we decided that it would be smarter if we drove separately, to avoid the neighbors getting suspicious. We decided to meet at the hotel, and then go out from there.\n\nI was all set up in the room, with candles set out and a romantic set list ready on my iPod, when I heard a knock on the door.\n\nLooking through the peep hole, I saw Christi and I quickly opened the door. \n\nChristi walked in with an overnight bag on her shoulder, and I took it from her, placing it on the floor.\n\n\"Holy crap!\" I said softly, as I looked at her. \"You look amazing!\"\n\nShe stood before me wearing a sparkly, dark blue, sleeveless dress that ended closer to her ass than her knees. On her feet was a pair of heels that made her as tall as me, her hair was flowing down past her shoulders, and her make-up was perfect!\n\n\"Thank you,\" she replied, blushing slightly. \"Britt helped me with my hair and make-up, and she even had to help me get dressed, I was so nervous!\"\n\n\"Well, she did a great job,\" I replied. \"You are amazingly beautiful.\"\n\n\"Thank you,\" she said again.\n\n\"You know, Britt really does like you,\" she told me.\n\n\"I know,\" I replied, \"and I'm glad. She's a good kid when she wants to be.\"\n\n'It's just HOW MUCH she's starting to likes me that is making me a bit nervous,' I thought to myself.\n\n\"You have no idea how much I want to just stay here now, looking at you like that,\" I told her.\n\n\"That could be fun,\" she said softly, stepping toward me.\n\n\"It would be,\" I replied, taking her into my arms and kissing her, \"but we're going to do this right. Dinner, drinks, maybe some dancing, and then ... I bring you back here and ravage your body.\"\n\n\"Mmmm. Is that a promise?\"\n\n\"That's a promise,\" I told her.\n\nWe left the room after another passionate kiss and went out to dinner.\n\nWe had a great meal at one of the top steak houses in the city which was just down the street from the hotel, and after, we walked to a club where we had a few drinks and did a little dancing. \n\nI could tell that Christi was enjoying the fact that I danced with her, or at least I attempted to dance while she did, and eventually the band played a slow song.\n\nI took her in my arms and held her close while we swayed to the rhythm. I felt her sigh against my shoulder as I slid my arm across her back.\n\n\"Thank you for such a wonderful evening,\" she said as she kissed me.\n\n\"Believe me, it has been my pleasure,\" I told her, \"but the night isn't over yet.\"\n\n\"I know,\" she smiled at me. \"As soon as this song is over, I want you to take me back to the room and, what was it you said? Oh yeah, 'ravage my body.'\"\n\n\"I can do that,\" I told her, smiling back at her as I slid my hand down to her ass.\n\n\"Oh, I know you can,\" she replied, sliding her hand down to my ass and pulled me in. \n\n\"And you want to know what else you're going to do?\" she said, nibbling on my neck just below my ear.\n\n\"Tell me,\" I said, squeezing her asscheek.\n\n\"You're going to take my ass,\" she told me.\n\n\"Oh yeah?\" I replied, playing coy, even though my cock was rising to the occasion.\n\n\"Yes, you are. You're going to fuck my wet pussy, and then you're going to stick that big, thick, hard cock in my tight, virgin ass.\"\n\n\"Sounds to me like you've got this all planned out,\" I teased.\n\n\"I'm offering you my last cherry. Is that a problem?\" she asked, pulling her head back and looking at me.\n\n\"Not at all!\" I laughed. \"I love it when a woman wants to be naughty and play the aggressor once and a while!\"\n\n\"Good. Because tonight, I want to be VERY naughty,\" she told me, pushing her pelvis against my leg.\n\nShe had perfect timing, because just then the song ended. I took her by the hand and led her to our table, where I paid our bill, and we left, walking down the street back to the hotel.\n\nAs soon as we walked into the lobby of the hotel, Christi started walking faster, leading us to the elevators.\n\n\"A little impatient, are we?\" I teased as soon as the elevator doors closed behind us.\n\nChristi replied by pushing me up against the wall, pressing her body against me, and kissing me passionately, reaching her hand down and squeezing my semi-hard cock.\n\n\"I don't know about impatient,\" she replied as our lips parted, \"but I am definitely VERY horny!\"\n\nI smiled in response as the elevator doors opened, and I took her hand, leading her to our room. \n\nAs soon as the door closed behind us, I pinned Christi up against the wall and kissed her, pressing my bulging cock into her as I lifted her leg, sliding my hand against the back of it.\n\nAfter a couple of minutes of grinding against each other and kissing, Christi gently pushed back against me.\n\n\"I'll be right back,\" she told me as she walked toward the bathroom.\n\nWhile she was in there, I started walking around the room, lighting candles and setting up my iPod. I also washed down a little yellow helper that I got from a co-worker, knowing that this was going to be a long night, and wanting to make sure I could keep up with Christi.\n\nA couple minutes later, I heard the bathroom door open and her heels clicking on the tile floor.\n\nI turned to look at her, and my jaw dropped.\n\nShe was standing in the entryway to the room in a silk and lace chemise, with a matching pair of thong panties and her heels, backlit by the light from the bathroom.\n\n\"Do you like?\" she asked softly.\n\n\"I'm speechless,\" I finally replied. \"You look so damn hot!\"\n\n\"Thank you,\" she said, slowly turning. \"It looks ok on me?\"\n\n\"It looks much better than just 'ok',\" I told her as I walked toward her. \"You look stunning.\"\n\nI stepped behind her and slid my hands around her waist, gently gripping her hips as I started kissing the soft skin of her neck.\n\n\"Oh my god,\" she softly gasped as I kissed her just behind her ear lobe.\n\nShe tried reaching her hands around behind her, to hold on to me, but I grabbed a hold of her wrists instead. \n\n\"Open your eyes,\" I whispered in her ear as I turned her slightly.\n\nWe were facing a full-length mirror, and Christi could now watch as I took her arms and brought them back to her side. \n\nShe moaned as I slowly slid my hands up her sides and gently cupped the bottoms of her breasts. \"Keep your eyes open,\" I told her when I saw her start to close them. She moaned softly.\n\n\"Did you bring your toy bag?\" I whispered.\n\n\"Yessss,\" she replied as I softly passed my fingertips across her hard nipples. Her eyes were locked on mine in the mirror.\n\n\"Good. I want to watch you.\"\n\nChristi gasped, and her eyes opened wide.\n\n\"You want to watch me?\" she asked.\n\n\"Yes. I want to watch you. I want to watch you play with yourself. I want to watch you make yourself cum.\"\n\n\"I've never done that in front of anyone,\" she replied softly.\n\nI quickly wondered if she remembered playing with her pussy while she gave me the drunken blow job in my yard.\n\n\"Well, then I guess you will give me TWO cherries tonight,\" I whispered as my fingertips glided over her mound.\n\nI then reached down and took her hands, and started gliding them across her body, one hand toward her breasts, and the other toward her pussy.\n\n\"If you want, close your eyes and pretend that you are at home, all by yourself,\" I told her. \"I could always blindfold you, if you need it, too.\"\n\nChristi gasped, and I felt her knees buckle as she leaned back against me\n\n\"What are you going to do?\" she asked.\n\n\"I'm going to sit in the chair and watch you,\" I told her. \"I might even take my hard cock out and stroke it while I watch you.\"\n\nChristi whimpered and voluntarily squeezed her breast as I gently nibbled on the soft spot behind her ear.\n\nWithout another word, I led her to the bed.\n\n\"Wait,\" she told me. \"My toy bag is in the big bag.\"\n\n\"Do you want to get it, or do you want me to get it?\" I asked.\n\n\"You get it,\" she replied, as she lay back on the bed. I walked over to her bag, and inside it was a smaller, satin bag. I took it out and brought it over to her, unzipping it.\n\nI didn't say a word as I took out three vibrators and laid them on the bed next to her. She had a small 'pocket rocket', a short, slim vibe, and a bigger one. She also had a small bottle of lube, which I quietly placed on the night stand next to the bed.\n\n'She really came prepared,' I thought to myself. 'She really wants this!'\n\nSilently, I walked over to a chair, turned it toward the bed, and sat down.\n\nAs I looked at her, she was smiling at me, with her hands resting on her belly.\n\n\"I'm nervous,\" she told me. \"I've never done this before. Joe never...\"\n\n\"Shhh,\" I interjected softly. \"There is no Joe tonight. Joe doesn't exist. Tonight, there is just you and me. Here, in this room, for, and with, each other.\" \n\n\"I like that idea,\" she replied smiling.\n\n\"Good. Me too.\"\n\n\"If you need to, just close your eyes,\" I told her. \"Or, I can blindfold you...\"\n\n\"No, no blindfold,\" she replied.\n\n\"At least, not this time,\" she giggled.\n\nI smiled at her and watched as she lay back, keeping her eyes on me, and started softly sliding her hands across her body.\n\nWith her eyes locked onto mine, Christi cupped her breasts and gently squeezed them. She then pinched her nipples, eliciting a soft moan.\n\nHer hands stayed on her breasts and nipples for a couple of minutes, and then she started sliding one hand down her body. Her fingertips slowly glided across her silk and lace-covered belly as she slipped her other hand inside her top and started squeezing her breast.\n\nOpening her legs slightly, she slid her hand across her mound and pressed on it, pinching her nipple at the same time.\n\nI heard her moan softly as she started rubbing her pussy a little harder, and then she slid her hand up to the waistband of her sheer, lacy panties.\n\nI gave my hard cock a squeeze as I watched her, and she moaned a little louder.\n\n\"Show me,\" she asked softly as she slid her fingers into her panties.\n\n\"Show you what?\" I asked, teasing her.\n\n\"Show me your cock,\" she pleaded, sliding her hand further down.\n\n\"Soon,\" I told her. \"I want to watch you for a little while first.\"\n\nChristi whimpered and I could see her hand start to slide up and down under her panties.\n\nAfter a couple of minutes, I watched as she slid a shoulder strap down her arm, exposing her breast.\n\nShe started playing with her hard nipple again and moving her in circles under her panties, sometimes dipping it further down.\n\n\"Please,\" she pleaded. \"Show me your hard cock.\"\n\n\"Show me your hot, wet pussy first,\" I told her, smiling at her.\n\nShe instantly started sliding her panties off down her legs, leaving them hooked over an ankle. \n\nAs she brought her hand back up, she grabbed her little pocket rocket and turned brought it up to her clit, turning it on as she lay it on her stiff little bud.\n\n\"Ohhh yeessss!\" she gasped, closing her eyes and tilting her head back as the vibrations coursed through her pussy.\n\nAs she slid the little vibe up and down across her clit, I quietly stood and slid my pants off. I then sat down and started unbuttoning my shirt as Christi tilted her head back down and opened her eyes again, looking back at me.\n\n\"Oh yeah!\" she moaned, looking at my hard rod.\n\nKeeping her eyes locked on my cock, she took her hand off of her breast and reached for her bigger vibe.\n\nKeeping her pocket rocket against her clit, I watched as she brought her bigger vibe up to her mouth and slowly slid it between her lips. \n\nAs she slid the toy deeper into her mouth, her legs opened wider and she began pressing the little vibe harder against her.\n\nShe then wrapped her lips tightly around the big vibe and slid her hand down it's length. When it reached the base, she slowly turned the knob at the bottom, turning on that toy too.\n\nShe slowly slid the vibe from between her lips and began sliding it down her body, stopping to run the tip across her hard nipples.\n\n\"Mmmmm,\" she moaned as she pressed the vibrating toy against her tits.\n\nThe vibe then continued it's path down her body, until she had it placed at her wet, glistening hole.\n\n\"Stroke your cock for me,\" she said softly as she lined the tip of the big vibe up with her pussy.\n\nI wrapped my fingers around my hard shaft and slowly slid them down it's length as she began sliding the vibe into her pussy.\n\n\"Ohhhhyeeaahhhh!\" she gasped as she slid the plastic shaft deep into her pussy, pressing the little one even harder against her clit. Her eyes remained locked on my cock as the vibe slid in deeper.\n\nShe then started sliding the bigger vibe in and out of her pussy and pressed the tip of the smaller one just above her clit.\n\nIt didn't take long before she began moving her hips up and down and thrusting the big vibe faster in and out of herself.\n\nAfter a few minutes, Christi's breathing started getting heavier, and then her eyes opened wide.\n\n\"That's it,\" I said softly. \"Make yourself cum for me.\"\n\n\"Oh my god baby!,\" she gasped. \"Yes! I'm gonna cum!\"\n\n\"OhhhhYEAHH!!! I'm cumming!\" she exclaimed loudly. \"Oh god! Yesssssss!\"\n\nShe dropped the pocket rocket and I watched as her body shook, her hips arching off of the bed. Her eyes closed, and her head arched back as she plunged the bigger vibe deep in to her pussy and started rubbing her clit with her free hand. \n\n\"Oooohhhhh!NnnnnGhhhhhhaaahhhhhhhh!\"\n\nAfter about a minute, her free hand slid away from her clit and her other hand released the deeply buried vibe.\n\nThe vibe slowly slid from her wet pussy, and fell to the mattress, glistening with her juices and still buzzing away, now less than an inch from her ass.\n\n\"Ohhmyyygoddd!\" she softly breathed as she recovered from her intense orgasm.\n\nAs she lay there, a light sheen of sweat coating her body, I quietly dropped my shirt on the floor and walked over to the bed.\n\nChristi gasped when she felt the bed sag as I climbed on to it, and her eyes opened just as I placed my head at her ankles and began slowly kissing my way up her long, firm legs.\n\nI alternated my kisses from one leg to the other, working my way along her inner thighs. Her legs fell open and she let out a long, low moan as I kissed her just above her glistening mound.\n\nI continued kissing my way up her body, stopping to suck on her erect nipples and circle my tongue around them, until my hard cock was nestled against her ass.\n\nMy shaft slid up along her seeping slit as I raised my body up further, leaning in to kiss her.\n\n\"That was very enjoyable to watch,\" I told her softly as I pushed back from her. \"Thank you.\" \n\n\"I've never done that before,\" she replied, gasping as the head of my cock slid over her clit. \n\n\"Did you enjoy doing that?\" I asked, sliding my rod back down.\n\n\"Yes! I was nervous at first, but once I was comfortable with it, it was really hot!\"\n\n\"Good!\" \n\n\"Did you enjoy watching me?\" she asked, taking in a sharp breath as my cock found her wet hole.\n\n\"You have to ask?\" I laughed softly, slipping just the head in. \"This isn't evidence enough?\" \n\n\"Yesss!\" she exhaled as I slowly slid the length of my shaft inside her. \"Oh shit! Yess!\"\n\nI raised my upper body until I was kneeling and hooked my arms under her legs, resting the backs of her knees in my elbows as I held on to her hips.\n\nChristi moaned and reached her hands down to my ass as I slid my cock in and out of her hot, wet pussy for a few minutes. I then slid my hands up until they were at the backs of her thighs. \n\nI pushed her legs back, until they were almost pressed against her tits. I began thrusting harder into her, causing her to gasp and moan louder.\n\n\"Oh yes, baby!\" she moaned, looking up at me. \"Fuck me! Fuck me hard!\"\n\nI did as she asked, sliding my pole in and out of her, sometimes in short, quick thrusts and others in long, slow thrusts. Sometimes soft, other times hard, trying to keep her on the edge.\n\n\"Ohhhhh yeeaaahhh,\" she moaned, reaching down and holding tightly to my arms. \"This is so goood!\"\n\nI slammed my cock in as deep as I could, and held tightly to her hips. I then began bucking my hips against her ass, reaching slightly deeper each time.\n\n\"Yesssss!\" she exclaimed, squeezing my arms. \"Do it again! Fuck me hard!\"\n\n\"Oh my god! Sooo goooood!\"\n\n\"Oh shit!\" she exclaimed seconds later. \"I'm gonna cum, baby!\"\n\nNot wanting her to go over the edge just yet, I slowed down, and then slid my wet cock from her pussy.\n\n\"Why did you stop?\" she asked, looking angry. \"I told you I was going to cum! I was right there!\"\n\nI just smiled at her and rolled her onto her left side, straddling her bottom leg and placing the other one in my elbow. I then slammed my cock back in, bottoming out in one thrust.\n\n\"Oh fuck!\" she yelled. \"Oh yeah!\"\n\nI kept my rod buried deep in her hot, wet hole as I reached over and picked up her pocket rocket.\n\nI turned on the mini-vibe and placed it in her right hand, and then brought the hand down to her pussy. Christi immediately slid her hand to her clit and pressed firmly against it.\n\n\"Ooohhhhmyyygoddddd!\" she exclaimed loudly as I began sliding my pole in and out of her again. Her free hand grabbed a hold of the sheet and pulled hard against it as the sensations took over her body.\n\nI slowed down for a second, still not wanting her to cum yet. I then reached one hand up and took a grip on her hair, and slid the other one up to cup her tit.\n\nAs I pulled on her hair and pinched her nipple, I started thrusting harder again.\n\n\"Oh yeahhhh!\" she moaned loudly. \"Let me cum now! Please let me cum!\"\n\n\"Yes, baby,\" I told her. Cum for me.\" \n\n\"I want to feel you cum all over my HARD, THICK COCK!\" I said, slamming hard as I said the last three words.\n\n\"Oh shit! Yessssss!\" she yelled, her body starting to quiver.\n\nSeconds later, I felt her pussy start to squeeze my cock, and a gush of her juices flowed over my balls.\n\n\"Ohmygod! Yes! I'mcummingsogood!!!\" she exclaimed, still holding her mini-vibe firmly against her clit.\n\nI felt her pussy spasming on my shaft as I buried it deep inside her, and the milking sensation of her walls squeezing on it soon brought me to the point of no return.\n\n\"Oh shit, baby,\" I breathed, as I began sliding my cock in and out of her again, \"I'm gonna cum too!\"\n\n\"Yes! Cum with me!\" she yelled. \"Make me feel you cum!\"\n\nFeeling my balls contract, I slammed deep into her one last time and started blasting my load into her pussy.\n\nChristi felt my cock spasm inside her, and that caused another wave of orgasms over her.\n\nShe dropped the vibe, and I could feel it roll over to my leg, still vibrating as we both continued to cum.\n\nFinally, a couple of minutes later, I caught my breath and reached down to turn off the little toy. I then set her leg down and slid behind her, my slowly softening shaft starting to slide from her soaked pussy.\n\n\"Holy crap,\" I breathed as I slid my arm around her chest.\n\n\"Oh yeah!\" she replied, holding on to my arm.\n\n\"I'm kind of disappointed,\" she said softly as she rolled onto her back a couple of minutes later.\n\n\"Disappointed?\" I asked. \"Why?\"\n\n\"I had planned on giving you ... more, tonight,\" she said, placing her hand on my chest.\n\n\"What makes you think the night is over?\" I asked, taking her hand and sliding it down to my soft, sticky cock.\n\n\"You think you have another round in you?\" she asked, gently squeezing my pole.\n\n\"I think I have at least on more round in me,\" I told her, 'but, why don't you check it out, just to make sure?\"",
        "Raising her head from my chest, Christi looked at me and smiled, and then started kissing down my stomach.\n\nI could feel my shaft slowly starting to thicken again, and as she started to stroke my hardening cock, she looked back up at me.\n\n\"Wow,\" she breathed. \"I get you that turned on that you can go again so quickly?\"\n\n\"Yes, you do,\" I told her, not wanting to have to explain taking the little helper.\n\n\"Nice,\" she replied.\n\n\"Oh, yeah!\" I moaned, feeling her lips slide down the length of my revived cock.\n\nChristi's head slowly bobbed up and down on my shaft for a couple of minutes, taking me in deep as her hand stroked what little of the shaft remained outside of her talented mouth.\n\n\"Mmm,\" she said, licking her lips when she released my pole. \"I really like the way we taste together.\"\n\n\"Well, I certainly like the way YOU taste,\" I replied\n\n\"I can see why,\" she told me. \"I would never think that pussy could taste this good.\"\n\n\"Are you going to take my ass now?\" she asked as she flicked her tongue around my head.\n\n\"If that is what you want,\" I told her, moaning as she wrapped her lips around the head and sucked hard on it.\n\n\"Is that what YOU want?\" she asked.\n\n\"I've wanted your ass for a long time,\" I told her.\n\n\"How long?\" she asked, teasing me.\n\n\"I have wanted you, AND your cute little ass, since the day I first met you,\" I replied.\n\n\"Really?\" she asked, stopping what she was doing and looking at me.\n\n\"Yes, really,\" I replied. \"When I saw you moving in, my first thought was that you were now the hottest woman in the neighborhood.\"\n\n\"Mmm. Nice! What was your second thought?\"\n\n\"Honestly? My second thought was that Joe was one of the luckiest bastards I'd even seen.\"\n\n\"Well, you got the bastard part right, at least,\" she sighed.\n\n\"You have no idea how hot that makes me, knowing that you were checking me out from day one,\" she told me as she licked and sucked on my pole.\n\n\"Oh damn!\" I gasped as she plunged her face down the length of my shaft.\n\n\"Can I tell you something?\" she asked a couple of minutes later, letting my saliva-coated cock from her mouth.\n\n\"You can tell me anything you want,\" I moaned as she stroked the length of my shiny, wet shaft.\n\n\"I've fantasized about you, before the idiot ever made that bet,\" she told me. \"I used to watch you doing your yard work, and working out on your patio, and I would go into my bedroom and play with my toys until I came. And I ALWAYS came. A few times.\"\n\n\"Oh damn!\" I gasped as she started sucking on my cock again.\n\n\"Now, are you ready to take my last cherry?\" she asked seconds later.\n\n\"As soon as we get each other lubed up,\" I told her, sitting up.\n\nChristi lay flat on her stomach as I reached over to the night stand and grabbed her toy bag. I also found the bottle of baby oil and then took the toys that lay on the bed and brought them all over to my side.\n\nI had her lift her hips, and I then slid two pillows under them, raising her ass for me.\n\nI held the oil in my hands, warming it up, as Christi wrapped her fingers around my hard pole and began slowly stroking it.\n\nShe then leaned in and kissed the tip of my cock, and then slowly slid her lips down the length as I began pouring the warmed baby oil down the crack of her ass.\n\nI could feel her moan around my pole as I started rubbing the oil into her ass, and she spread her legs open.\n\nShe moaned again and took my cock deeper in her mouth as I pressed my finger against her asshole and started rubbing more oil into her.\n\nI then took her small vibe and poured a little oil onto it as she watched, and I felt her lips tighten around my thick shaft.\n\n\"Ohhhh!\" she moaned as I placed the tip of the vibe against her tight ass and turned it on.\n\n\"Ooohhhhh! Yeahhhh!\" she gasped as I slowly pushed the vibrating shaft of plastic into her tight asshole.\n\nI reached down with my free hand and gently pulled her head back to my cock. Christi quickly engulfed my hardness, and I could feel her moans vibrate as she resumed sucking on it while I slid the toy deeper inside her. \n\nIt wasn't long before she started pushing her ass back at my hand, fucking the vibe as I pushed it in and out.\n\nA couple of minutes later, when I knew that she was used to that toy, I slid it in deep. I then grabbed a hold of the bigger one and proceeded to oil that one up.\n\nI could hear, and feel, Christi moan in disappointment as I slid the first vibe from her ass, and then she moaned again as I started pushing the bigger one in.\n\nI held her head firmly on my rod as I slowly slid the bigger vibe in her ass, and she started sucking harder on me.\n\nOnce I had the vibe as buried deep in her ass, I began sliding it out and then back in again, fucking her with that toy now.\n\nAgain, it wasn't long before she began pushing her ass back up at my hand, fucking the new intruder. \n\nI pulled my cock from her warm, wet mouth and heard Christi gasp and moan as I slid the vibe in a little faster.\n\n\"Give me your hand,\" I said softly as I reached for the bottle of oil.\n\nI poured a good amount of the oil into her hand, and then told her to get my cock nice and slippery. \n\nChristi didn't hesitate as she grasped my shaft and began sliding her hand up and down, moaning and pushing back as I continued fucking her ass with the vibe.\n\n\"Oh god!' she gasped as her body shook a little. \"I want it! Give it to me!\"\n\n\"You want what?\" I asked, teasing her.\n\n\"Cock!\" she exclaimed. \"I want your cock!\"\n\n\"What do you want with my cock?\"\n\n\"Ohhgoddd!\" she moaned. \"My ass! I want your cock in my ass!\"\n\n\"Tell me what you want,\" I told her as I started fucking her harder with the toy.\n\n\"Fuck my ass!\" she said loudly, stroking my shaft faster. \"I want you to fuck my ass good!\"\n\n\"Ok,\" I replied, as I slowly buried the vibe in deep. \n\nShe moaned again as her ass was filled, and she pressed her face into the mattress.\n\n\"Baby,\" I said. \"You've got to let go of my cock now.\"\n\n\"Oh, shit!\" she gasped, realizing that she was still holding tight to my rod.\n\nI then moved behind her and lay my oiled pole in the crack of her ass.\n\nI leaned down to her and placed my mouth at her ear, sliding my cock up her ass and resting it just below the buzzing toy.\n\n\"Hold your ass open for me,\" I whispered in her ear.\n\nShe moaned again, and as I leaned back, I watched as she reached behind her and pulled her asscheeks apart, showing me her virgin rosebud.\n\nI slowly slid the vibe from her depths, and Christi sighed. I then tossed the toy to the side and leaned in, pressing my cock against her ass and trapping her hands in between our bodies.\n\n\"Are you ready?\" I asked softly.\n\n\"Yessss!\" she hissed. \"Just go slowly, please!\"\n\n\"I will,\" I told her. \"I promise.\"\n\n\"Ok,\" she breathed.\n\nI shifted my body and slid the head of my cock up and down her oiled ass crack, until I placed the tip against her back door.\n\nI then began to slowly lean in, forcing my cock against her asshole.\n\nFinally, the head of my cock popped past her tight ring, and Christi gasped loudly.\n\n\"Don't worry, baby,\" I told her. \"I'm going to wait for you.\"\n\n\"Ok,\" she replied, breathing hard.\n\nI stayed motionless for a couple of minutes, and when her breathing softened I started to push in again.\n\n\"Oh damn!\" she gasped as another inch slid in. \"Go slow!\"\n\n\"As slow as you want,\" I assured her.\n\nI waited a little longer, and started to pull back just a bit, and then pushed forward again without going any deeper.\n\nChristi began moaning louder, and soon was starting to push her ass back at me.\n\nWith a slow, methodical progress, I soon had half of my thick cock in her tight ass.\n\n\"Oh shit!\" she moaned, releasing her asscheek with one hand and reaching back to place it on my stomach. \"Stop for a second!\"\n\nTrying hard not to push any deeper, I braced myself on my arms and leaned in, kissing her neck.\n\n\"Are you ok?\" I asked softly.\n\n\"Yes!\" she replied. \"I just feel so full!\"\n\n\"Does it hurt?\"\n\n\"Yes, but in a good way!\" she replied.\n\n\"Good,\" I said. I then resumed sliding my shaft back and forth, fucking her ass with short strokes and slowly slipping more and more of my cock into her.\n\nChristi moved both hands to the mattress and lay them flat, releasing her asscheeks.\n\nAfter a couple of minutes, she had me stop again.\n\n\"Are you all the way in?\" she asked, moaning softly.\n\n\"Not yet,\" I told her, making her moan louder. \"I've got about an inch to go.\"\n\n\"Ohhhshiiit!\" she gasped as I started moving my hips sideways.\n\n\"Give it to me!\" she exclaimed. \"Push it all in!\"\n\n\"Are you sure?\" I asked, sliding backwards about an inch.\n\n\"Yes!\" she replied loudly. \n\n\"Give me all of your COCK!\" she told me, yelling the last word as I thrust forward, bouncing my hips against her ass.\n\nI didn't move for a few seconds, letting her get used to having her ass filled. Soon though, I felt Christi begin moving her hips, urging me on.\n\nI started slowly sliding my cock back and forth a little bit at a time as it was squeezed in her tightness.\n\nI was soon sliding more and more of my slick pole in and out of her ass, and she was moaning louder and moving with me.\n\n\"Oh yesss!\" she moaned. \"This is so good! Oh my god, yesssss!\"\n\nI soon had a good rhythm built up, and was fucking her ass with the entire shaft.\n\nChristi was getting in to it now, humping her ass back up at me and getting louder.\n\n\"Yessss! Fuck me! Fuck my ass!\" she exclaimed loudly. \"Fuck my ass! Give it to me!\"\n\nI could see her pushing back at me with her arms, like she was trying to do push-ups as I thrust into her.\n\nI stopped for a second and reached down to hold her arm. I then brought her hand down, sliding it under her belly.\n\nWithout my telling her to, Christi slid her hand all the way down and I could feel her start to rub her fingers across her clit.\n\n\"Ohhhhyeeeahhh!\" she moaned loudly. \n\n\"Oh fuck me!\" she gasped as I resumed my movements and started picking up a little speed. \"Fuck my ass so good!\"\n\nI reached my hands down and squeezed her asscheeks, pulling them apart slightly, and she gasped and moaned louder. \n\nA couple of minutes later, Christi began panting.\n\n\"Oh fuck! Oh fuck! Oh fuck, yessss!\" she moaned. \"I'm gonna cum!\"\n\n\"Yeah, baby,\" I told her. \"Cum for me!\"\n\n\"Yessss!\" she yelled seconds later. \"I'm cumming! Oh my god! I'm cumming with your cock in my ass! Fuck meeee!\"\n\nI could tell that her hand was rubbing her clit faster as I started thrusting a little faster, and soon Christi's body started shaking and went rigid.\n\nI suddenly felt her asshole clamp down on my cock, holding it even tighter, and she began to softly wail.\n\n\"Ohhhhyeaaahhhh! Oh my god, yeaaahhhh! I'm coming with your cock in my ass!\"\n\n\"Ooooohhhhhhhhhhh!\" she then exclaimed loudly.\n\nThe sensations from her ass squeezing my cock and almost milking it soon had me ready to blow.\n\n\"Oh shit!\" I moaned. \"I'm gonna cum, baby!\"\n\n\"Yessss!\" she replied, yelling. \"Cum in me! Cum deep in my ass!\"\n\nI took a couple more full, deep strokes, and then felt my balls tighten. I thrust my cock all the way into her ass, making her yelp, and my cock exploded.\n\n\"Ohhfuck!\" I bellowed as my shaft spewed my load deep into her ass. \n\nChristi's body shook again, and she gasped loudly as my cock pulsed and emptied itself.\n\nA couple of minutes later, I could feel her asshole trying to milk the last of my load out and I slowly lowered my body down onto her back.\n\n\"Holy crap!\" I breathed.\n\n\"Ohhhhhhhhh!\" she replied softly.\n\nI could feel my shaft deflating, and I slowly slid it out and rolled on to the bed, collapsing on my back.\n\nA couple of minutes later, I felt the bed shift, and then Christi's head lay on my chest.\n\n\"Oh my god!\" she moaned softly. \"That was amazing!\"\n\n\"Didi you like it?\" I asked.\n\n\"Holy shit!\" she replied. \"That was the most intense orgasm I've ever felt!\"\n\n\"You've given me the best orgasms I've ever had,\" she told me, \"bu this was the biggest, and best yet!\" \n\n\"Good,\" I said. \"I'm glad I could make you feel that way.\"\n\nWe lay on the bed for a couple of minutes, and them I slowly slid out from under her body.\n\n\"Where are you going?\" she asked as I slid off the bed and stood.\n\n\"I'm going to take a quick shower,\" I told her.\n\n\"Ok. Hurry,\" she told me.\n\nA few minutes later, I stepped from the steamy bathroom and rejoined Christi on the bed.\n\nShe repositioned herself back on my chest, and I could feel her body slowly deflate as she started falling asleep.\n\n\"Good night,\" I said, as I kissed the top of her head.\n\n\"Good night,\" she replied, kissing the top of my stomach.\n\nJust as I nodded off, I heard, \"I love you.\""
    ],
    "authorname": "cuninglinguist61",
    "tags": [
        "voyeur",
        "neighbor"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-neighborly-bet-ch-04"
}