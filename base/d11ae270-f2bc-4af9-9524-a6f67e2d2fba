{
    "title": "The Trainer Pt. 03",
    "pages": [
        "Welcome back again! Since you are here, I'm assuming you've read Parts 1 and 2 of this story, and you probably hate me a bit right now. I would too. I'm glad you came back anyway! And at least this wasn't too long of a wait, was it? This is the eagerly anticipated conclusion of The Trainer. As always, I'd love to hear what you think! I enjoy every comment and message, even the ones that tell me I'm in trouble. Especially those; they show me how much you care! As for the previous parts, a warm thanks goes out to my wife, to Broken Spokes, and to all of you for giving feedback. And now, without further ado, happy reading!\n\n \n\n* * * * *\n\n\"Jamie!\" Amy scrambled frantically over to her dog, who was breathing heavily. She whimpered when Amy touched her. There was so much blood. Jamie's muzzle was covered in it, and a trail of drops through the open door showed that she'd done some damage to the attacker. There was a large pool of blood around Jamie's back leg, which was slowly expanding even as Amy looked at it. It made her feel sick and she urged herself to think. She needed help. Jamie needed help.\n\nWith trembling fingers, she looked for her phone, which miraculously was still at the side of the bed. The burglar must not have seen it in the dark or he would surely have taken it.\n\nAmy acted without thinking. She called the first person that came to her mind. The one person who would know what to do.\n\n\"Please pick up,\" she pleaded to the dial tone.\n\n\"Amy? What...,\" came finally the groggy voice on the other end. A wave of relief coursed through Amy. She hadn't heard that voice in over a month and she hadn't realised how much she'd missed it. She had avoided any contact with Charlie. Trying to get over her, trying to respect her wishes to not engage with someone who was due to leave the island. But in this moment, there was no one else she could have called. She needed Charlie. She started crying, finally overwhelmed with stress.\n\n\"Amy, calm down. What's going on?\" If Amy had had any concerns that Charlie may have been upset by Amy calling her, she was proven wrong. There was nothing but concern in Charlie's voice.\n\n\"She's been shot,\" she sobbed into the phone. \"It's her leg. She's bleeding. Oh Charlie, I think it's bad!\"\n\n\"What are you talking about? Who's been shot?\" Charlie's usually calm voice gained an edge of panic.\n\n\"Jamie-ie-ie...\"\n\nWithout needing any further details, Charlie got down to business: \"Okay, Amy, listen carefully. Here's what I need you to do. I need you to tie something around her leg, higher up than the wound; a belt or something, or a tea towel. You've seen them do that in movies, right? Make it really tight. You need to stop the bleeding. Can you do that?\"\n\n\"Yes, I think so,\" Amy snottered, wondering why she hadn't thought of that. She spotted the trousers she'd been wearing the night before draped over a chair. She ripped the skinny belt from around the waist and kneeled down next to Jamie, putting the phone on speaker.\n\n\"There's so much blood,\" she said, feeling herself get queasy again.\n\n\"Look where it's darkest. That's where the wound is. Can you see it?\"\n\nAmy saw a darker puddle in the centre of Jamie's thigh. The blood there seemed to well up when Jamie moved. \"I see it,\" she confirmed.\n\n\"Tie the belt above it, Amy. Make sure the bleeding slows down.\"\n\nAmy got to work, making Jamie yelp with pain when she pulled the belt tight around her leg.\n\n\"I know, I know. It's okay, baby girl. You'll be alright,\" Charlie was saying. It took Amy a moment to realise she was talking to Jamie and not to her.\n\n\"I think it's slowing down,\" Amy said, seeing the blood not forming any new bubbles.\n\n\"Great. Well done, Amy. Now I need you to very carefully put her in your car, okay? Wrap her in a blanket so you can lift her without hurting her. Make sure she's comfortable. Drive to the vet, okay? The one where we cleaned her up. I'll meet you there. I'll call and make sure someone is there.\"\n\nAmy hadn't even thought that far. Of course the vet wouldn't be open. Her phone told her it was nearly 3 am.\n\n\"Okay, okay...,\" she stammered. She hung up the phone and got to work. She grabbed the biggest beach towel she had and wrapped it around Jamie, carefully avoiding her sore leg. She managed to get the dog in the car. Jamie was significantly heavier than the first time she'd handled her like this, all those months ago.\n\nIt was when she rushed back to her apartment to lock up that she saw the broken window next to the front door. The intruder must have broken that to get in. There was nothing she could do about it, apart from propping a left-over moving box against it from the inside and hope for the best.\n\nAmy made it to the vet clinic in record time and was greeted by one of the vets she recognised from her earlier visits with Jamie. Charlie wasn't there yet but that was hardly surprising considering how far she had to go.\n\nShe helped the vet carry Jamie onto his examination table and watched as he carefully inspected the wound.\n\n\"You did good to stop the bleeding,\" he said. \"The bullet is still in there, so that needs to come out. You may want to wait outside,\" he added kindly.\n\n\"But she'll be okay, right?\" Amy asked with a sniffle.\n\n\"She's lost a lot of blood but it looks like the bullet has missed the important bits. I'll know more when I get in there. Please...\" He ushered her to the door in a friendly yet determined manner and Amy could do nothing more than to sink into one of the plastic waiting room seats to cry some more.\n\nWhen Charlie burst through the door a while later, she wasted no time. She rushed over and gathered Amy into her arms, hugging her tight. Amy sobbed into her shoulder, soaking Charlie's hoodie with her tears.\n\nCharlie didn't say anything but just held her until her sobbing slowly subdued and her breathing calmed down. Amy resurfaced from Charlie's arms.\n\n\"I think I'm okay now,\" she sniffed.\n\n\"Are you sure?\" There was a fierce mix of concern and anger in Charlie's eyes. The first aimed at Amy, the second at whoever did this to her. \"What happened?\" She asked at last. They sat down on the plastic chairs, Charlie still grasping her hand tight.\n\n\"There was a man in my bedroom. He had smashed a window to get in. He was shouting at me. He wanted money. He had a gun. And Jamie...\" Her answer had come out in a factual, succinct way but when she got to the Jamie part, she burst into tears again.\n\n\"Is she going to be okay?\" Charlie asked when she calmed down a bit.\n\n\"He's... The vet... he's not sure. She's lost a lot of blood and the bullet was still in there. He shot her, Charlie. The guy shot her! She was defending me...\" Amy felt so guilty for letting her girl get hurt standing up for her.\n\n\"She's a good girl. And she's sturdy, Amy. If anyone can get through this, it's our Jamie.\"\n\nAmy wasn't sure how long they spent alternating between Charlie coaxing more little details out of her, her crying in Charlie's arms, Charlie pacing up and down the room ranting about how anyone who would shoot a dog should be shot themselves, and both of them pacing because it was taking so long. Eventually they just sat side by side in silence.\n\n\"I'm sorry I called you. I didn't want to rope you into this. You're already so busy,\" Amy said quietly. They must have been here for hours. She had woken Charlie up in the middle of the night. The girl would get no sleep because of her, and surely she had things she needed to do in the morning. \"You can go if you want,\" she added, really hoping Charlie wouldn't.\n\n\"Don't even think about it,\" Charlie replied. \"You did the right thing by calling me. I'm not going anywhere.\" Amy leaned her head on Charlie's shoulder gratefully, wondering what she'd done right in a previous life to have Charlie by her side right at this moment.\n\nThe next thing she knew was Charlie waking her up gently from a restless sleep. Fatigue and stress must have overpowered her. The vet was standing in front of them, waiting patiently.\n\n\"How is she doing?\" Amy asked, suddenly wide awake.\n\n\"She's going to be okay,\" the vet said with a smile. \"She's going to have a sore leg for a while but she'll get to keep it. She'll probably have a limp but if you're careful that she doesn't overdo it in the beginning, she should recover well.\"\n\nAmy rushed over to hug the vet and smother him in words of gratitude. He clearly didn't expect this. He tapped her back awkwardly and quickly stepped back to maintain a professional distance.\n\nCharlie put her arm around Amy's shoulder and gave her a side hug. \"That's great news, Amy. Poor little Paco is going to be disappointed he'll still be the only tripod though...\"\n\nAmy laughed through her tears of happiness as the vet continued: \"She needs to sleep off the anaesthetic. That could take a few hours, so why don't you go home, have a shower, have some breakfast. I'll call you as soon as she wakes up.\"\n\nA wave of panic rushed through Amy as reality hit her. She had to go home. She had to go to work. The clock on the wall told her it was almost 7.30 am.\n\n\"Don't even worry about it,\" Charlie said, as soon as the vet had left the room and Amy had outlined her concerns. \"You work with Lucas, right? I'll call him and explain. How about we go get a coffee?\"\n\nAmy nodded gratefully and remembered that Charlie had told her she was barely functional without her morning coffee. She seemed very functional now.\n\nAs they left in Charlie's truck, Charlie spoke to Lucas on the phone. She explained to him what had happened. Amy only picked up a few words in the rapid stream of Creole.\n\nCharlie just pulled into the parking lot of the coffee shop when she got off the phone. \"He says to take the rest of the week off. He'll clear it with your manager. You already have holiday next week? He says don't worry about coming in before then. He's got you covered.\"\n\nAmy nodded. She had taken some holidays to enjoy some time on the island before leaving. She thanked Charlie and vowed to call Lucas later and thank him too.\n\nWhen they got back to the car a little while later, loaded with coffees and just about every breakfast to go item on the menu, Amy tucked in greedily. She hadn't realised how hungry she was.\n\n\"We need to go to the police, Amy,\" Charlie said calmly. Amy stopped chewing and looked at her. That hadn't crossed her mind at any point, but of course Charlie was right. \"It's going to be frustrating and a waste of time, but we have to do it. Your landlord will need the police report so he doesn't charge you for the damage; so will the insurance if you need to claim anything. Did he take anything?\"\n\n\"My bag...,\" Amy said, only now thinking about that for the first time. \"It didn't have much in it, I think... Oh god, I have no idea what was in there!\" She felt her panic rising. Had she left her camera in there? What about her iPad?\n\n\"It's alright, all that stuff is replaceable, okay? It sucks, yes, but you're okay, and so is Jamie. That's the most important thing.\"\n\nAmy nodded, knowing that Charlie was right, but she couldn't help going over the possible contents of her bag in her head. It felt like such an intrusion that he'd even touched her stuff, not to mention having him on top of her, pressing a gun to her head. The feeling of violation was overwhelming.\n\nCharlie had not been mistaken in her statement that filing a police report would be frustrating. First of all, she was treated as a naive tourist who had no sense of security. They asked her three times if she'd locked the doors and if someone may have seen her coming or going with valuable stuff. Furthermore, if it hadn't been for Charlie translating and occasionally talking back to the cop, she'd have a language as well as a cultural barrier to deal with. Eventually the cop concluded they'd go and have a look, but with these sorts of hit and runs, the chances of them finding anything they could tie to anyone were slim.\n\n\"These guys are opportunists. They take a chance when they see one and then they disappear.\" He made a gesture with his hands that illustrated vanishing into thin air.\n\n\"What about the blood?\" Charlie said. \"She told you the guy's blood is on the floor there. And he may have left prints.\"\n\nThe cop shook his head wearily. \"It doesn't work like that in real life, sweetheart. That's only on CSI Miami...\" Great, now we get some condescending misogyny to top things off, Amy thought.\n\nShe could see that Charlie was seething. \"Let's go,\" she said quietly. Charlie agreed but not before making the cop promise they would go check out the crime scene right now, update their report, and call her when they could pick up a copy.\n\nWithout anything else to do, they went back to the vet to wait for Jamie to wake up. Fortunately that didn't take too long, since their visit to the police station had taken so long.\n\nAmy gave a happy squeal when the vet brought in Jamie. Her damaged back leg was completely bandaged and taped up against her body and she had some sort of strap around her waist, which the vet used to support her. He explained that it would let Amy help her walk until she could put weight on her leg again. Amy was instructed to only walk her with the strap for at least three weeks to help her build up her strength. Jamie further had painkillers she had to take and she may experience discomfort lying down or sitting. She'd probably be restless for a while and she needed strict supervision so that she didn't overexert herself during her recovery.\n\n\"What about flying?\" Amy asked, the thought popping into her mind suddenly. The vet looked at her confusedly. \"I'm going back to England in two weeks. She needs to get on a plane with me,\" Amy explained.\n\nThere was a loud clang as Charlie dropped a stethoscope she'd been playing with. She recovered quickly but Amy could see the shock on her face. She realised she'd never actually discussed with Charlie when she was leaving. At first it had seemed too far away to care; then she'd had more important things to talk to her about; and when the date came near, they'd been keeping their distance from each other.\n\nThe vet seemed as surprised as Charlie was and shook his head gravely: \"That's not going to happen. She can't fly until she's fully recovered. She can't be in a crate for that long with that leg.\"\n\nAmy started to protest but Charlie said from the corner of the room: \"We'll figure it out, Amy.\" Her voice sounded cold and business-like, nothing like the kind patience she'd shown all night.\n\n\"I'm sorry,\" Amy said when they got back to her car and carefully laid Jamie in the back seat.\n\n\"What are you sorry for?\" Charlie's voice still lacked its earlier kindness.\n\nAmy hesitated. What was she sorry for? That she was leaving? That she hadn't told Charlie? \"That you found out this way that I'm leaving in two weeks,\" was what she settled on.\n\nCharlie shrugged. \"It's got nothing to do with me, does it? No need to apologise.\" Her eyes were fixed on some unknown point in the distance and her jaw was tense. \"Jamie can stay with me until she's healed. I think it's best that she's with someone she knows and trusts, someone who understands how important it is to care for her properly while she's healing. I'll arrange for her to travel to you when she's better.\"\n\nAmy had been hoping that would be possible but she hadn't dared to ask Charlie. She was devastated at the thought that Jamie couldn't join her straightaway and stressed about having to arrange new travel plans, but she'd feel a lot better knowing Jamie was with her second favourite person in the world.\n\n\"That would be amazing. Thank you so much. I'll make it up to you, I promise.\"\n\n\"There's nothing to make up. It's what I do, I look after dogs that have been mistreated by humans.\"\n\nAmy didn't know what else to say that could alleviate Charlie's sudden grumpiness. It was Charlie who spoke again: \"I have to get home. The dogs must be starving by now. And you must want to have a shower, change out of those clothes.\" She pointed at Amy's blood-stained shirt. \"Are you okay to get home?\"\n\nA wave of panic came over Amy at the thought of going home. \"I can't go home,\" she whispered, hearing a tremble in her own voice. \"I really don't want to. What if he comes back?\"\n\nCharlie's expression visibly softened. \"He's not going to come back, Amy. You heard what that cop said, these guys are opportunists. Besides, after the fight Jamie gave him, he'll think twice.\"\n\nAmy knew she was probably right. Yet, the thought of going home now made her nauseous. She took a few quick breaths but stopped when she felt herself get dizzy.\n\nCharlie put her hand on Amy's shoulder, which strangely had an immediate calming effect. \"You know what...,\" Charlie started, \"the cops are probably going to be in and out of there for a while. Do you want to come back to mine for a bit?\"\n\nAmy nodded gratefully. Anything was better than going home, but going to Charlie's was the best place she could imagine in this moment. They agreed she'd follow Charlie in her car, and Charlie drove reasonably slowly and civilised for a change, considerate of Amy keeping up, even though she knew the way.\n\nWhen they got to Charlie's home, Charlie lifted Jamie out of the car and carried her into the house. Amy followed hesitantly. She'd never gotten further than peeking into the kitchen and this was quite the strange introduction. In her modestly decorated, open plan living room, Charlie created a comfy bed for Jamie out of some pillows and blankets and the dog promptly fell asleep again.\n\nAmy sat down on the sofa and immediately felt her whole body getting heavier. She hadn't realised how completely exhausted she was. She was vaguely aware of Charlie handing her a cup of tea and urging her to lie down on the sofa. The girl also asked her some questions that seemed completely out of place, but Amy thought she managed to answer them. When Charlie asked about her flight details, she pulled up the email with the confirmation on her phone and handed it to Charlie. So many questions, and her eyelids were getting so heavy.\n\nWhen Amy woke up, it took her a moment to realise where she was. It wasn't until she saw Charlie curled up asleep on a blanket next to Jamie that she remembered everything that had happened. She got up quietly and sat next to them. She stroked Jamie's head and looked at the two sleeping figures, feeling nothing but affection.\n\nShe wasn't sure what woke Charlie, but the girl stirred and opened her eyes. Seeing Amy next to her, she sat up and stretched, yawning loudly. Her curly hair stood up on all sides and she reminded Amy most of a baby animal.\n\n\"Hey,\" Charlie said with a smile. \"Did you have a good sleep?\" Amy admitted that she'd been dead to the world. Charlie nodded. \"Me too.\"\n\nThen she seemed to remember something. \"So, your bank card is blocked. I didn't order a new one because it would take longer than two weeks to arrive anyway. I spoke to your landlord. He was very understanding. He's going to get the window replaced and the locks changed. And I've cancelled Jamie's flight.\" A slight frown formed on her face as she mentioned the travel plans, but she recovered quickly, focussing on practicalities. \"They couldn't refund the money but you should have a voucher in your email, which we can use once she can fly again. Oh, and the police called. They are done with their investigation at your place and we can pick up a copy of the police report.\"\n\nAmy looked at her in shock. \"You did all that while I was sleeping?\" Charlie shrugged as if it was nothing, but she must have pulled some serious strings. And impersonated Amy, more than once. \"How are you so good at this?\" She asked then.\n\n\"It's not my first robbery. Or my first gunshot wound. Sadly.\" As usual, she didn't elaborate, but Amy sensed that as much as she sounded casual, robberies and gunshot wounds weren't exactly the order of the day for her either.",
        "\"Anyway, it sounds like your place is ready for you whenever you are,\" Charlie concluded.\n\nShe must have read some of the discomfort that engulfed Amy on her face because she studied her for a moment and then said, \"Unless you'd rather stay here tonight and go back tomorrow? It's already quite late anyway.\"\n\nAmy glanced at the window. Charlie was right: the sun was going down. How long had she slept for? The thought of being in her apartment was less than appealing, especially at night. It made her heart race in fearful anticipation just thinking about it. Staying here, safely, with Charlie sounded like a great idea. But she had already asked so much of Charlie, taken up so much of her time. She hesitated.\n\n\"I can understand if you don't want to be alone right now, that's all,\" Charlie added casually. \"And I think it might be better for Jamie not to be dragged around too much straightaway.\" Somehow it sounded as if Charlie was trying to convince her to stay. Who am I to argue?\n\n\"If you really don't mind, that would be great,\" she said.\n\n\"Only if you take a shower. No offence, but you look like you axe-murdered someone. I wanted to ask you earlier if you wanted to take a shower but you fell asleep before I had the chance,\" Charlie chuckled.\n\nAmy was embarrassed to realise that she was still dressed in her dirty, bloody clothes from last night; the ones she had pulled on quickly instead of her pyjamas. She'd never looked this scruffy in front of Charlie before. She'd probably never looked this scruffy in front of anyone before.\n\nCharlie gave her a change of clothes, even some clean underwear, which made Amy feel weird but was very welcome all the same. She tried not to picture Charlie in the black and orange knickers with the broad waistband. She'd look so cute, Amy just knew it.\n\n\"Much better,\" Charlie concluded when Amy walked into the kitchen after her shower, dressed in a pair of faded denim shorts and a black t-shirt. \"You look great.\"\n\n\"I look like you,\" Amy replied with a grin.\n\n\"My point exactly.\" Charlie winked.\n\nAmy peeked over Charlie's shoulder at the greyish-brown stew she was stirring. It smelled rather bad, like boiled meat. \"What are you making?\" She asked carefully, not wanting to offend her host.\n\n\"It's a special recipe. I hope you're hungry.\"\n\nAmy was hungry but the smell was really off-putting. She was about to lie and say something nice about the lumpy mixture when Charlie burst out laughing. \"It's for the dogs, Amy! God, look at your face. Did you really think I was going to feed you this? I'm not that bad of a cook!\" Amy laughed with relief and asked if she could help with anything.\n\nThey soon settled into a comfortable task division. Charlie went to feed the dogs their horribly-smelling meat stew while Amy started cutting vegetables to make pasta for them. They finished cooking together and, after dinner, took Jamie for a little walk around the training field. She couldn't go far but there was plenty for her to sniff and pee on. It was awkward in the beginning, holding her up with the strap, but Charlie showed Amy how she could hold it with one hand while having the other free. She was stronger than Amy though, and Amy didn't quite manage with one hand.\n\n\"Keep trying. But change sides so that at least you get two big biceps,\" Charlie joked. Big biceps like you, Amy thought, her eyes roaming over the toned arm that was bulging slightly holding up the weight of her dog. She told herself to pull it together. She wasn't here to ogle Charlie's muscles. She was here to have company, to feel safer. Although she was sure that if it came to it, Charlie could put up a hell of a fight. That in itself made her feel much safer.\n\nAfter walking the dogs, Charlie suggested they watch a movie and Amy agreed, provided it was something funny and fluffy.\n\n\"No guns or violence?\" Charlie guessed correctly. They settled on some clich\u00e9 romantic comedy, which really wasn't very good but it was exactly what Amy needed.\n\nSeated on opposite ends of the sofa, with Diego, Paco and one other small vacation dog between them as chaperones, Amy couldn't help but look over at Charlie every now and then. Her eyes were drawn to the girl, whether she wanted to or not. She was surprised at how comfortable being here felt.\n\nShe had to admit, seeing Charlie again after weeks, she was less 'over her' than she'd tried to make herself believe. Her belly still fluttered when Charlie smiled at her and she couldn't stop the recurring thoughts that definitely were outside the friend realm.\n\nYet, there was something serene and familiar about their being together; as if the intense conversation they had last month had never happened. Amy realised she had Charlie to thank for that. The girl had just put aside any tension and unresolved feelings and had stepped up to be a good friend, like she wanted to be in the first place.\n\n\"Charlie,\" she said.\n\n\"Hmmm?\" Charlie replied distractedly, her eyes still on the TV.\n\n\"Thank you for letting me stay here tonight. I really appreciate it. Especially after our last conversion...\"\n\nNow Charlie looked at her. \"This doesn't change anything, though.\" She said it quickly. Too quickly. As if she needed to get it out before either of them changed her mind.\n\nDid I expect it would change anything? Amy wasn't sure, but she certainly wasn't going to admit it to Charlie if she did. She nodded. \"I know. I just appreciate you being there for me and Jamie, that's all.\"\n\n\"Anytime.\" Charlie smiled but the smile didn't last. An internal conflict overshadowed it and faded it as soon as it reached the surface.\n\nWhen the movie ended and they got ready to go to sleep, Charlie proposed that Amy take her bed and she'd sleep on the sofa. \"I'm afraid the spare bedrooms are taken up by dogs that need to be separated at night.\"\n\nAmy protested that she would happily sleep on the sofa but apparently Charlie didn't want to put her through that because Diego snored louder than a drunken guy. Without accepting any further protest, Charlie handed her some pyjamas and ushered her into her bedroom, before promptly leaving again.\n\nAmy chuckled ruefully to herself. Not quite how she had imagined her introduction into Charlie's bedroom. The room was neat, like the rest of the house, and featured a queen-sized bed, which Amy remembered was not shared with the dogs. Clearly the girl liked her space. The linen smelled fresh and clean and Amy wondered when Charlie had had time to change the sheets.\n\nIt wasn't hard to see which side of the bed Charlie slept on: there was a pair of glasses, a small stack of books and an alarm clock on one side and only a plant on the other. Amy snuggled down on Charlie's side of the bed - even though it didn't smell like her - and picked up the glasses. She never knew Charlie wore glasses. She peered through them and surmised that the prescription couldn't be too high. They were probably just for reading. She tried to picture Charlie in glasses but somehow she ended up looking like a hot school teacher in Amy's head. That probably wasn't far off reality.\n\nThe books varied from a historical fiction novel set in WWII to the third Harry Potter book, a popular self-help book on getting what you want in life, and a biography of a local politician Amy had never heard of. Eclectic taste. Suppressing the desire to explore further and look for hidden secrets - such as a stack of dirty magazines or a box of sex toys under the bed - Amy switched off the light and went to sleep.\n\nWhen she woke up, daylight was streaming into the room. She was surprised to find an arm draped over her and a warm body pressed into her back. When she moved her head, curly hair tickled her face and she breathed in the unmistakable sweet scent of Charlie.\n\nAmy's heart skipped a beat. Was she still dreaming? It felt like she was awake, but how could she possibly be when Charlie was spooning her? Trying not to move and wake the other girl, she took in the sensations of the soft body against hers. The curves of Charlie's body following her own, the weight of her arm on Amy's waist, her hand resting just in front of Amy's belly, her breathing rising and falling calmly.\n\nAmy stayed still as long as she could but her arm was going numb and her back was sore. She must have moved involuntarily because Charlie stirred, her hand moving over Amy's waist and then disappearing behind her.\n\n\"Morning,\" Charlie's groggy voice said in her ear. At last, she rolled away from Amy and settled on her back.\n\nAmy turned to face her. \"Good morning?\" She put a questioning tone in, encouraging Charlie to explain her presence in the bed. Not that she was complaining, of course.\n\nFor once, Charlie complied with her request for information. \"You were screaming in your sleep...\"\n\n\"I was?!\" Amy couldn't recall dreaming anything, and she felt so calm now, it was hard to imagine she'd had a nightmare.\n\nCharlie nodded. She rolled over onto her side again and looked at Amy from her pillow. She looked so beautiful with her curly hair messy and her light eyes highlighted by the morning sun.\n\n\"You were waking up the dogs. I'm surprised their barking didn't wake you. You wouldn't stop screaming until I hugged you and held you in my arms. I don't think you even really woke up.\"\n\nAmy was shocked. First the sex dream screams and now this? And this time she didn't even remember dreaming anything. She blushed in embarrassment, but thanked her lucky stars that at least it wasn't a sex dream this time.\n\nCharlie wasn't done. \"You went back to sleep for a bit but then you started up again an hour later. So I just came to sleep here. Seemed to work...\" She said it as if it was all very normal; no big deal at all.\n\n\"Oh my god, I'm so sorry,\" Amy said, mortified that she'd woken up the whole house without even knowing it. \"I'm such a bad house guest.\"\n\nCharlie chuckled. \"A little bit. But I've had dogs come to stay who've done the same.\"\n\n\"And do you curl up next to them and hug them to sleep too?\" Amy asked, already guessing the answer.\n\n\"I do, actually,\" Charlie confirmed, with a smile that made Amy think of nothing else but how much she wanted to kiss her.\n\n\"Way to make a girl feel special,\" she joked, distracting herself from that thought.\n\n\"You're in my bed. That's pretty special. Although if I'd known you'd be this loud I'd have made you sleep outside.\"\n\nAmy threw her pillow at her, grumbling \"asshole,\" under her breath. Charlie laughed.\n\n\"Come on, let's go have some breakfast. And by that I mean coffee, of course.\"\n\nAfter breakfast, Amy had brought up the topic she'd been dreading. Going home. Being here had felt like being in a safe, comfortable bubble and leaving that bubble felt wrong on all fronts. She wasn't ready. She wasn't sure she could even do this. Eventually she had asked Charlie if she'd come with her, embarrassed to admit she needed her support. But Charlie had agreed without questioning or hesitation.\n\nSo now they stood in front of her door. The broken window had already been replaced but her key still worked, luckily. Amy took a deep breath and pushed open the door. She felt Charlie's hand on her back. \"It's okay,\" she said quietly.\n\nApart from the traces of blood - which looked spread out and smudged rather than erased, after an unenthusiastic attempt at cleaning, probably by the landlord - at first glance there was nothing to suggest something had happened here. However, when they walked into the bedroom, Amy saw the details that stood out from her usually tidy ways: her unmade bed, her pyjamas lying in the centre of the room, tossed aside in a rush, the things she'd knocked over scrambling for a belt to strap Jamie's leg, for a towel to wrap her in.\n\nShe sat down heavily on the bed. \"Oh god...,\" she whispered. Memories of the night started rushing back to her.\n\nCharlie sat next to her and put her arm around her shoulder. \"It's not that bad. We can clean this up in no time.\"\n\n\"It's not that... It's...\" Amy's voice faltered and she felt tears forming. \"He was right here,\" she stammered. \"I was right here, sleeping, and he was standing over me. For how long? He could have done anything to me... In my house... He touched my stuff...\" Her words came in short bursts in between sobs as she started crying.\n\nShe was barely coherent but Charlie seemed to understand. She took her in her arms and hugged her tight, stroking her hair and whispering comforting words in her ear.\n\nAmy may not have been able to voice the turmoil of emotions that coursed through her, one thing she knew: she'd never feel safe here again. \"I can't stay here...,\" she said quietly into Charlie's shoulder.\n\n\"I know,\" Charlie said to her surprise. Her matter-of-fact understanding made Amy even more emotional.\n\n\"I'm sorry I'm such a sissy,\" she sniffed. \"I'll find a hotel room or something.\" It might be hard with Jamie but she had heard of places that allowed dogs.\n\n\"I don't like the idea of you being in a hotel on your own right now...,\" Charlie said quietly.\n\n\"Me neither,\" Amy admitted, \"but I feel like I need to be somewhere with security.\"\n\nCharlie propped her off her shoulder gently. Her grey eyes bore into Amy's and were filled with empathy. \"If a dozen or so dogs and one protective lesbian is security enough for you, you're more than welcome to stay with me as long as you need to.\"\n\nAmy took a moment to process what Charlie had said. She had in no way been trying for that, thinking the other girl had already done more than enough for her, but the offer sounded like pure perfection to her. \"Really?\" She asked in a small voice.\n\nCharlie took a moment to reply. A mix of emotions crossed over her face in record-speed as she seemed to be weighing up options faster than a supercomputer. \"Positive,\" she concluded, \"I'd be a terrible friend if I let you go stay in a hotel right now.\" That sounded to Amy like a duty-bound decision, but Charlie composed her face and smiled. It looked genuine when she said: \"Plus, it will be nice to have someone to talk to who actually talks back, roomie.\"\n\nAmy decided to take her at her word and not read more into it, because, quite frankly, she didn't really want to consider what other options she had. She hugged Charlie gratefully and said in her ear: \"You're the best, Charlie.\"\n\n\"Why don't you pack your stuff...?\" Charlie looked around. \"I guess there's not that much left, hah?\" Amy had already gotten rid of stuff she no longer needed and all of the furniture stayed in the apartment. She had shipped a few boxes back to the UK too, but all her leftover stuff fit into one large suitcase. Was she imagining it or did Charlie look a little sad watching her mostly empty apartment? Whether she was sad or not, Amy's leaving remained a tense topic that was swiftly avoided by both of them.\n\nCharlie offered to clean up the blood stains while Amy packed her things. With that task division, it didn't take them long at all and they finished around the same time.\n\n\"Wow....,\" Charlie said when she saw Amy's big suitcase. \"Did you pack the kitchen sink too?\"\n\n\"It's all my stuff,\" Amy said shyly. She had assumed she wasn't going to come back here but she realised now that they hadn't really talked about that. Did Charlie think she was just coming over for a day or two? \"Is it okay?\" She asked ambiguously, suddenly embarrassed about her presumptuous assumption.\n\n\"Of course it is, I just never realised you were such a girl.\" Charlie winked.\n\n\"Yes, you did. That's why you came up to me in the first place. You like it,\" Amy teased.\n\nCharlie grinned, clearly enjoying being challenged. \"I never said I didn't like it. But you're carrying that thing to the car yourself!\"\n\n* * * * *\n\nThe first few days living with Charlie passed very much like the previous one. They settled into a comfortable routine that consisted of divided tasks around the household and the dogs, moments where each of them were doing their own thing, and moments they spent relaxing together: having their meals, chatting, or watching a movie.\n\nAmy enjoyed getting to know more about Charlie's everyday life and what made her tick. Apart from spending a lot of time with the dogs and keeping up with other activities needed to run her business, she read, pretty much every free minute, which to be fair weren't that many. Amy had assumed the stack of books next to her bed was a 'to read one day' stack but Charlie had admitted she was actually reading all four at the same time.\n\nFurthermore, Charlie had an outdoor gym tucked around the side of the house where she spent some time every day. In fact, the time she spent there seemed to increase a bit every day Amy was there, as if she was training for some sports event she'd never mentioned. She worked out at the most random moments too. Such as the time when Amy had just put on her bikini to jump into the pool, while Charlie was reading on the terrace next to it. Amy had thought it would be nice to spend some time in the garden together; perhaps Charlie would even join her in the pool. However, Charlie had jumped up and announced she was going to work out, as soon as she saw Amy in her bathing suit.\n\nThere had of course been some other strange and awkward moments too. Amy couldn't help but think that these were made awkward by the two topics they avoided talking about: Amy's leaving and the once discussed possibility of them being more than friends.\n\nThere was for example the phone call in which Charlie was invited to a barbecue with her friends. She enthusiastically told Amy that she should come along, before realising it was after she was due to leave.\n\nThen there was the moment Amy had left the bathroom in her underwear, thinking Charlie was outside, only to run into her in the hallway. Despite both of them apologising profusely and Charlie averting her eyes and practically running away from her, Amy had not missed the initial moment in which Charlie's gaze had glided over her scarcely clad form and her eyes had widened in appreciation.\n\nMost importantly, they were now sharing the bed every night. It was purely platonic, but Amy couldn't help but notice neither of them were in a big rush to get up in the morning, and untangle themselves from the hugging position they'd invariably wake up in.\n\nThe first night Charlie had slept on the sofa again, but Amy had woken her up with her screaming again and Charlie had had to calm her down once more. The second night Charlie had proposed to skip the 'traumatising moment of waking up to a chorus of Amy's blood-curdling screams and barking dogs' and just get into bed with her in the first place. Amy of course hadn't objected, except briefly due to the fact that Charlie wanted her side of the bed back.\n\nShe had jokily proposed Charlie should hold her while she went to sleep, but Charlie had not fallen for that. Nevertheless, the next morning she'd woken up with the other girl pressed firmly into her. Amy could tell by Charlie's breathing that she was already awake, yet she was still holding Amy in her arms, her face buried in her hair, her hand resting casually on Amy's belly. Needless to say, Amy pretended to be asleep for a bit longer.\n\nWhen she woke up the next morning, Charlie was already up. Amy felt the absence of the warm body pressed into hers as if a small piece of herself was missing, even though she'd only experienced it for a few days. She got up and found Charlie in the gym. She was lying on a bench and was lifting a ridiculously heavy-looking barbell. Amy rushed over to spot her like she'd seen people do in movies. From where she was standing, Amy couldn't help but notice Charlie's muscles bulging every time she pushed the heavy weight up. She was covered in a sheen of perspiration and it was clear she'd been at this for a while.\n\n\"How long have you been out here?\" Amy asked.",
        "\"A while,\" Charlie grunted through her next press. \"I couldn't sleep anymore.\" At that she put the barbell back in its stand and got up. She wiped her face on a towel and grabbed her water bottle.\n\n\"I didn't wake you again, did I? Did I scream again?\"\n\nCharlie didn't look at her. She avoided answering the first question directly but mumbled: \"It wasn't screaming so much this time...\"\n\n\"What do you mean?\" Amy asked as Charlie jumped up to the pull-up bar and proceeded to do some repetitions at a rapid pace. Good diversion. She couldn't really talk while doing this. When she jumped off, she said: \"It doesn't matter. You didn't seem stressed or scared or anything, so I figured you'd be fine on your own.\"\n\nIt was the way she said it, or rather avoided saying it, which brought the memory back in a flash. Amy had been dreaming about Charlie; she had been having dream-sex with Charlie again. Oh god. She narrowly avoided gasping in horror as she realised the likely form her noises would have taken. She felt her face flush as she tried to assess the potential damage. Did she moan? Probably. Did she speak words that made it unmistakable what was happening in her head? Likely. Did she say Charlie's name? Possibly... No, probably. Oh god! What if Charlie had come in to comfort her, not realising the content of her dream, and Amy had groped her inappropriately?\n\nCharlie still wasn't looking at her, now focussed on her leg presses. Suddenly Amy couldn't stand to be around her. It was too embarrassing. She ran off to the house, mumbling something about needing coffee. The rest of the day was the most awkward of her stay yet.\n\nClearly, Amy was doing a lot of her processing of the traumatic event in her sleep - and other events for that matter. Yet every now and then, during the most mundane activities in the daytime, a memory of that night would come back to her and trigger a rush of panic. If Charlie was around when this happened, Amy had a hard time hiding it. The girl was very perceptive. Moreover, she seemed to understand exactly when Amy needed a comforting hug, or some time and space to collect her thoughts.\n\nOne of those moments came when they were watching TV, curled up on the sofa. Thinking she could by now cope with a little bit of non-realistic adventure, Amy had agreed to Charlie's proposal to watch an episode of the new Batwoman series. At first all was well and she enjoyed watching this hot, badass woman kicking ass. It wasn't until someone was shot, deadpan and without emotion, that Amy dropped her empty beer bottle with a loud thud.\n\n\"Are you okay?\" Charlie asked straightaway, concern in her voice. Amy didn't respond, her eyes transfixed on the dead body on the screen.\n\n\"Shit, I'm sorry, Amy. Maybe we should watch something else...,\" Charlie said quickly, looking for the remote.\n\n\"He could have shot me...,\" Amy said, her voice eerily calm.\n\n\"Amy? Please look at me.\" The TV switched off as Charlie had clearly found the remote, the dead body disappearing from the screen but not from Amy's retina.\n\n\"He could have killed me.\" Amy's voice was still calm but there was a slight tremor that suggested it may not be for long.\n\nCharlie was by her side now, her hands on her shoulders, trying to get Amy to focus on her. But Amy was still staring at the blank TV. \"He had his gun on me. I could have died... If he'd wanted to shoot me. Or his finger could have slipped... Oh my god...\" Suddenly the thought was too much and Amy felt a wave of tears engulf her.\n\nCharlie was talking to her but her words couldn't penetrate the blind terror in Amy's brain. It was like she hadn't realised before how closely she'd looked death in the eyes and it had taken the visual of a cold-blooded murder to drive that thought home. The shock of the realisation was overwhelming and for a while Amy could do nothing but sob uncontrollably in Charlie's arms. How the girl wasn't tired yet of having Amy cry all over her was a mystery.\n\n\"I'm sorry,\" Amy said when she'd finally calmed down enough to come out of hiding. \"I'm sorry I'm such a sobbing mess.\"\n\n\"Don't you apologise for that. I'm the one who should be apologising. Vigilante justice? I don't know what I was thinking.\"\n\nCharlie's fingers stroked a rogue strand of hair from Amy's face, her thumb wiping away a tear on her cheek. Her eyes held Amy's and Amy felt herself slipping into the depths of grey. She was drowning, and Charlie's face was so close. Her expression was so full of kindness, full of affection. Her fingers lingered idly on the side of Amy's face.\n\nThe mood had changed so visibly that it didn't even surprise Amy when Charlie leaned in and pressed her lips against Amy's ever so gently. The sensation of finally feeling those lips again overwhelmed Amy and she responded eagerly. Her lips pressed into Charlie's with more urgency; with desire rather than tenderness. She sucked Charlie's lower lip into her mouth and let her tongue meet Charlie's. She was vaguely aware of Charlie's hand moving to the back of her head and pulling her in closer, but there was no need to. Amy was pressing into her harder with every second their tongues were intertwined, riding their passion.\n\nThe kiss didn't last long; Charlie pulled back as suddenly as she'd moved in. Her breath was ragged and it was clear it had taken all her willpower to break the contact.\n\n\"Don't stop...\" Amy's voice was a soft pleading groan.\n\n\"We have to,\" Charlie said quietly, seeming less than convinced herself.\n\n\"Why?\"\n\n\"Because...\" Charlie seemed to be collecting her thoughts for a moment. \"Because it wouldn't just be kissing this time. I don't think I could stop... And if we go further...\" She hesitated, but before Amy could protest she said: \"I'm sorry... I'm sorry for kissing you. For everything. For thinking I could do this...\" She seemed distraught but Amy wasn't sure what she was getting at.\n\n\"Do what?\"\n\n\"Having you stay here, resisting you... I know you needed help, and I've been telling myself I was just being a good friend by bringing you here. But it wasn't just that. I was selfish. I just wanted your company. I've really missed you the past few weeks.\"\n\nA warm glow spread rapidly through Amy's body. Charlie had missed her. Charlie wanted her company. So she hadn't been wrong in thinking the girl liked her.\n\n\"Part of me also thought that by having you around I'd see that you're just a girl and not this perfect creature I'd made you out to be in my head,\" Charlie continued.\n\nBefore Amy could work out if she should be offended by the 'just a girl' part or pleased with the 'perfect creature' part, Charlie continued: \"But you aren't just a girl. Not to me. I'm so into you, it's ridiculous, Amy.\" She paused for a moment and looked at Amy in desperation, as if hers was the worst predicament in the world to be in.\n\nAmy felt a smile spread across her face, which only increased Charlie's exasperation. \"Every time I see you, I want you. And I don't mean physically. I mean, I want that too... When I see you walking around half-naked, in your underwear, in your bikini. When you moan my name in your sleep, while you're dreaming about who knows what... It's driving me up the walls. It's just really hard to resist you. I've been working out like crazy trying to blow off some steam, but it's becoming harder and harder. And I feel like an absolute asshole for it, because you just need me to be a friend right now.\"\n\nCharlie shook her head to snap out of her thoughts, realising she'd gone off track. \"Anyway, it's not just physical. I want to be with you, wake up with you, talk to you, spoil you, live my life with you...\" She sighed deeply. \"But it's just not possible.\"\n\nAmy knew it was coming by the tormented expression on Charlie's face, but the fatalistic statement still made her heart sink. \"Why not?\" She asked. Surely life wasn't really this black and white?\n\n\"Because nothing has changed, Amy.\" Charlie held her gaze and Amy could see her eyes glistening with ill-concealed emotion.\n\n\"Everything has changed, Charlie,\" she countered. \"The last few days, we got a glimpse of what things could be like. Yes, we're still here in a society that doesn't accept us, you still have your business to run, but we've been doing things together. And it's been so wonderful spending time with you, getting to know you, waking up in your arms. We work together, Charlie. You have to admit that.\"\n\n\"We do. But it's not going to stay like this. You're leaving in ten days.\"\n\nCharlie's eyes welled up and Amy realised this was the real crux. She had to admit it wasn't a minor issue but surely it didn't need to be a deal-breaker?\n\n\"It doesn't have to end when I leave...\"\n\nCharlie looked at her dumbstruck. \"What, you want a relationship made up of quick messages and phone sex?\"\n\n\"Well yeah, there's that. But also video calls... I can come back...\" Amy didn't have the complete picture of what it would be like. It would be hard to have a long-distance relationship, but people still did it. Why couldn't they? Plus, the devil on her shoulder reminded her, there was the idea of staying here, which she had scrapped after Charlie had rejected her. Suddenly that seemed much more appealing.\n\n\"It's not enough, Amy. In the beginning maybe, but not in the long run. We'll want to be together, physically, in the same place. Your life is in England; mine is here. I could never leave this; you know that. The dogs need me. I'd feel like I would be abandoning them...\"\n\nThe tears in her eyes told Amy that she had actually imagined herself leaving her life here behind and it had broken her heart. Much as she felt honoured Charlie would even entertain the thought, she could never allow it. The girl had a life goal here; something Amy would only be so lucky to find in life. \"I would never ask you to leave, Charlie,\" she said quietly.\n\n\"And I could never ask you to stay...\"\n\nAmy processed her words. Would she want Charlie to ask her? She tried to put herself in Charlie's shoes and understand her point of view. Charlie had been in this situation before and it hadn't ended well for her.\n\n\"Did you ask her?\" She asked gently, taking Charlie's hand. \"Did you ask Lily?\"\n\nShock and surprise met in Charlie's expression. \"Who told you about Lily?\"\n\n\"Lucas,\" Amy admitted.\n\nCharlie sighed. It was a hurt sigh rather than a frustrated one and it made Amy's heart ache for her. \"Then you probably know what happened. Like I said, with you, it was self-preservation. Well, for both of us. I thought that if we could keep our distance and be friends, this wouldn't happen. But it's too late.\"\n\nAmy nodded. \"We still fell for each other.\"\n\n\"And we've run out of time.\"\n\n\"Time is not up yet, Charlie. We still have ten days. Can't we just enjoy that time together?\"\n\nCharlie didn't answer but looked at her hands, which were still in Amy's. Her eyes were still teary, yet Amy hadn't seen a single tear leave her eyes.\n\n\"We are clearly attracted to each other. We want to be together. We've waited a long time to admit that to each other. I don't know about you but I don't really want to waste any more time,\" Amy continued.\n\n\"I don't want that either, but...,\" Charlie said quietly, her protest clearly running out of steam. Amy ducked down a little, encouraging Charlie to look at her.\n\n\"I'm sorry about what happened with Lily. And I understand you don't want that again, but that doesn't mean we can't enjoy spending time together, does it? Focus on the here and now? And not worry about where we go from there, about what happens when I leave?\" Amy sounded more level-headed than she felt. She wasn't sure she'd be so calm when it was time to walk out of Charlie's life, but she did know that she'd regret it forever if she did not give this a chance.\n\n\"I guess...,\" Charlie said.\n\n\"Because here and now I want to be with you...,\" Amy emphasised needlessly, looking deeply into Charlie's eyes.\n\n\"Me too,\" Charlie admitted, her voice a hoarse whisper. She bit her lip and her eyes flitted to Amy's lips.\n\nAmy didn't need more encouragement than that. She leaned in and kissed Charlie again, meeting an eager yet doubtful reply.\n\n\"Amy...\"\n\nAmy groaned impatiently. Now what?\n\n\"I just don't want to take advantage of you...\"\n\nFor someone who was so selfless and dedicated in getting others what they deserved, Charlie sure seemed reluctant to give herself what she deserved. \"You're not taking advantage of me. Now shut up and kiss me,\" Amy said, more confidently than she felt.\n\nFortunately, it had the desired effect. Charlie's lips came for hers with a vengeance, her tongue finding Amy's again with an unprecedented passion. The pent-up desire was palpable and Amy would almost say it justified having had to wait so long. Almost. She still would have opted to have Charlie's kisses months ago if given the choice.\n\nCharlie's hand found the back of her head again and used it to anchor Amy against her greedy lips. Her other hand now roamed over the front of Amy's shirt, all inhibitions forgotten. As it found Amy's breast, Charlie moaned quietly into Amy's mouth. Clearly, she'd wanted to do this for a long time.\n\nAmy wanted to savour the moment but she was impatient to get Charlie's hands on her. And she desperately wanted to see that look of appreciation in Charlie's eyes when she looked at her. So she grabbed the bottom of her shirt and lifted it over her head.\n\nCharlie's expression was different this time. Where last time she had clearly appreciated the view and had failed to hide it completely; this time her gaze was undisguised lust, as her eyes roamed over Amy's chest.\n\n\"God, you're so sexy,\" she groaned. She took Amy's breasts in both her hands and fondled them eagerly. Her thumbs caressed Amy's hardening nipples through the fabric of her bra as her other fingers applied just enough pressure to let her desire be known without being too rough. Meanwhile, her mouth had left Amy's and buried itself in her neck. Her hot breath and her grazing teeth were driving Amy crazy and she felt the heat radiating through her whole body.\n\n\"Take it off,\" she pleaded, eliciting a wide grin from Charlie. \"Please Charlie!\" She urged when the other girl did not comply immediately.\n\n\"Alright, alright, calm down,\" Charlie chuckled, her hand reaching behind Amy's back, while she lowered her mouth to the top of Amy's breast. As the bra fell off her chest, Charlie's hot lips moved to Amy's nipple, sucking it into her mouth and tracing circles with her tongue around the hardened bud. Her other hand found Amy's other nipple and caressed it so it wouldn't feel neglected. Amy's fingers dug into the back of her head and pulled her closer.\n\n\"Don't you ever stop that,\" Amy sighed, when Charlie moved to her other breast.\n\n\"I have to,\" Charlie mumbled, around a mouthful of breast. \"I have so many other plans with you.\"\n\n\"Hmmmm... Maybe I'll allow it...,\" Amy breathed when Charlie's hand trailed over her belly, \"but first I need this off.\" She pulled Charlie's shirt up and was surprised to see she wasn't wearing a bra. How had she missed that?\n\n\"A little presumptuous, don't you think?\" She said, letting her eyes roam over the perfect teardrops with the dark nipples in their centres. Charlie was so beautiful Amy found it hard to focus.\n\nCharlie smiled. \"I never wear a bra at night when I'm at home. I feel comfortable enough around you not to.\"\n\n\"Fool... Now I may just have to take advantage of you.\" Amy's fingertip traced the soft underside of Charlie's breast, barely touching the skin.\n\nCharlie shivered involuntarily, goose-bumps forming on her skin and her nipples hardening. \"I was hoping you would.\"\n\nAmy's finger traced over her nipple and across the top to the other breast.\n\n\"Lower,\" Charlie sighed.\n\n\"You mean here?\" Amy let her fingers slip over her nipple. She took it between her thumb and index finger, rolling it gently.\n\n\"Lower...\"\n\nAmy dropped her hand to the crease where her breast met her belly.\n\n\"Oh my god, Amy...,\" Charlie's voice pleaded impatiently.\n\n\"What?\" She teased, enjoying finally breaking through the other girl's carefully crafted composure.\n\n\"Put your hand in my pants... Please...\"\n\n\"Ooooh, is that what you want?\" Amy's fingers caressed her belly, slowly inching closer to the edge of her shorts. \"You could have just asked me, you know.\"\n\nCharlie made a sound that could have been a chuckle or a sound of exasperation. \"I guess I deserved that.\"\n\n\"Yeah you did. But you deserve this too.\" She slid her hand into the front of Charlie's shorts. As they were a loose fit, she didn't even need to undo them to be able to reach inside. The fabric of Charlie's knickers was drenched. Charlie gasped when Amy's fingers made contact with her through the saturated cloth. Her lips were swollen and she pushed back against Amy's fingers eagerly. Someone was a little excited.\n\nAmy teased her a bit more through her knickers, gently increasing pressure until Charlie moaned impatiently. When she couldn't wait anymore herself, she pulled her hand out slowly, only to reinsert it one layer of clothing deeper. Charlie's slick wetness coated her fingers and she radiated heat, which was even more intense as Amy let her fingers slide between her lips and explored her folds.\n\n\"Oh my god, Amy, that feels so good,\" Charlie sighed, thrusting her hips gently against Amy's fingers as they stroked the sensitive area around her clit. \"Oh god, yes, there!\"\n\nSmiling with satisfaction, Amy's fingers focussed on the indicated spot and she soon had Charlie breathing heavily. Her eyes were half closed and she was rocking into Amy's hand, making little sounds of encouragement. It was an amazing sight and Amy wanted to give her what she wanted. But not quite so soon. Without taking her fingers away from Charlie's clit, her other hand undid the girl's trousers.\n\n\"Hey, I know those,\" she said when she saw the broad orange waistband on the otherwise black knickers.\n\nCharlie looked down to see what she was talking about. \"I washed them after you wore them, I swear.\"\n\nAmy laughed. \"Well, you seem to have made them dirty again. Better take them off...\"\n\nShe pulled on Charlie's clothing and the girl was more than happy to help her. Amy took a moment to watch her when her full nakedness was finally exposed. She was stunning all the way from her angelic curls to her well-formed legs. But right now Amy wanted to focus on what lay just beneath that neat triangle of curly black hair.\n\n\"Scooch,\" she said, nudging Charlie towards the end of the sofa. Charlie lay back against the armrest and Amy positioned herself halfway down her body, stretching out along the length of the sofa.\n\nShe gently pushed open Charlie's legs, encountering no resistance. Charlie's hands played through her hair in anticipation of what was to come. Amy kissed her inner thighs, wanting to prolong the moment. Yet, the sweet scent emanating from Charlie's pussy, the scent of her arousal, was too much to resist.\n\nAmy lowered her head and let her tongue slip between Charlie's lips. She gasped and twitched when Amy's tongue made contact with her clit.\n\n\"Oh Amy...,\" she sighed, giving into the sensation of Amy's tongue circling her clit. \"Ohhhh yes... Oh my god, yes, there... Oh. Oh. Oh yeah... Just like that.\"\n\nAmy smiled into her pussy. She loved it when a girl gave such clear feedback. While making sure to regularly come back to the spots and motions that made Charlie gasp, she explored a little more, letting her tongue slide further down. She elicited another satisfied groan when she slipped her tongue into Charlie's pussy and slowly moved it in and out. Charlie's hips rocked back and forth matching her movements, her hands on the back of Amy's head getting more frantic.\n\nIt was so hot, Amy was gyrating into the sofa herself, unable to stop her hips from rocking along to Charlie's rhythm. The stiff fabric of her shorts rubbed against her clit and the sensation was turning her on more with every move.",
        "\"Suck my clit,\" Charlie moaned then.\n\nAmy chuckled. Yes, ma'am, she thought. She moved back to Charlie's clit and sucked it into her mouth gently.\n\n\"Harder...\"\n\nAmy sucked a little harder. She knew this technique could get quite sensitive and she didn't want to hurt Charlie. However, pain seemed to be the last thing on Charlie's mind.\n\n\"Harder,\" she urged. Amy complied. Charlie's hands crushed her face into her pussy.\n\n\"Now. Tongue. Again.\" Charlie stammered, gyrating against Amy's face. \"Keep sucking. Ohhhh. Yes. Yes. Yes!\"\n\nCharlie did not need to tell her she was coming. Her whole body tensed and shook, her hands lost control, her legs rose up slightly as her back arched and her head fell back. Then with a violent shudder, she suddenly went limp and Amy felt her warm cum rush over her chin. Charlie whimpered quietly and stroked Amy's hair with trembling fingers.\n\nAmy could barely contain her own horniness at feeling the other girl climax on her face. She reached down and slid her hand underneath her own body, wiggling as she undid her shorts and thrust her hand into her knickers.\n\nHer tongue still on Charlie's clit, she slowly started tracing the beloved circles again. Charlie's whimpers turned into soft little moans again and soon she was slowly swaying her hips against Amy's face.\n\nAmy's fingers rubbed her own clit frantically and she forced herself to slow down and match the pace of the rest of her body. She found her rhythm, rubbing her clit more slowly and pressing down with her hips into the sofa to increase the pressure of her fingers on her clit.\n\nThe slow pace wasn't sustainable for either of them though, and as Amy felt Charlie speed up, she met her pace with her tongue, and with her fingers on her own clit. It reminded her of dancing with Charlie, the other girl setting the pace, calling the shots, orchestrating the moves. She was taking control now too, pressing herself into Amy's mouth, rubbing against her. Amy was more than happy to let her. Charlie's unrestrained arousal was a huge turn on.\n\nWhen Charlie started trembling and tensing up again, Amy had already had to hold back a few times from reaching her own orgasm. Now that Charlie was nearly there, she knew she would be able to come with her.\n\nCharlie's orgasm was more vocal this time. A loud moan escaped her and instead of going limp, she kept rubbing herself into Amy's face, with Amy struggling to focus on her tongue circles, her clit sucking, and her rubbing fingers. The lack of coordination didn't seem to matter much though. The ecstasy in Charlie's moan and thrusts sent her over the edge too and she humped her own hand as her orgasm crashed over her, while Charlie's was still in full force.\n\nWhen Charlie finally stopped riding her face and her own body was calming down, she laid her head on Charlie's thigh and looked up to the girl's heaving chest and overwhelmed facial expression.\n\n\"Oh my god, Amy, that was...\" Charlie's words got stuck in her dry throat. She swallowed a few times and then gave a lazy tug on Amy's shoulder. \"Come here.\"\n\nAmy moved up to face her, while quickly wiping her chin, a bit embarrassed she was such a messy eater. Charlie kissed her, undoubtedly tasting herself on Amy's tongue. Her hands slipped into the back of Amy's shorts, which, due to their being undone, had slipped down slightly when she'd crawled up. Charlie grabbed a full, bare butt cheek in each hand and fondled it appreciatively.\n\nThen, clearly realising that access had been easier than expected, one of her hands made its way out and around Amy's waist, finding her shorts undone. She stopped kissing Amy and gave her an inquisitive look.\n\n\"I may have gotten myself off...,\" Amy admitted.\n\nCharlie chuckled. \"I know. It was really hot watching you... You better have left some for me though.\"\n\nAmy huffed in feigned indignation. \"I could come ten times and there'd still be plenty left for you.\"\n\nCharlie raised her eyebrows with a grin. \"Wanna put that theory to the test? Let's go to the bedroom.\" When Amy started to protest at having to move from this delicious position on top of Charlie's naked body, she added: \"I don't want the dogs to see what I'm planning to do to you.\"\n\nGiggling with eager anticipation, Amy got up, her shorts slipping down even further with nothing to hold them up. She was facing away from Charlie and could feel the girl's eyes on the exposed part of her butt.\n\n\"You can leave those here,\" Charlie said, tugging on her shorts, making them drop to her ankles. She whistled appreciatively between her teeth as Amy stood in front of her in nothing but her black lacy G-string. \"And these too,\" she added, audibly more strained. She hooked her fingers into the thin straps around Amy's hips and pulled the tiny piece of clothing down slowly. Amy felt it lose contact with her skin as if in slow-motion, starting from the top of her buttocks and ending with the little triangle that covered her pussy, which gave a little resistance as it stuck to her wetness.\n\nAs soon as her knickers hit the floor, Amy stepped out of them and walked towards the bedroom, taking care to roll her hips and stick out her ass enticingly.\n\n\"Damn...,\" she heard Charlie's admiring groan, and she looked over her shoulder to see the girl's eyes transfixed on her ass. \"You tease,\" Charlie growled at her before starting her pursuit. Amy squeaked and ran to the bedroom. She had only just made it into the room when Charlie caught up with her and grabbed her from behind.\n\nShe pressed her groin into Amy's left butt cheek while fondling the other one. Her other hand curved around Amy's body and found her breast. Her lips and teeth grazed the side of her neck and sucked her ear lobe.\n\n\"You are so goddamn sexy,\" Charlie whispered in her ear, while her hands roamed Amy's body and her hips pressed into her demandingly. The hand that had been playing with her ass now moved between her thighs from behind, making Amy gasp with surprise. Charlie's fingers grazed the bottom of her swollen lips and Amy's legs invariably opened slightly to give her more space.\n\nAt the same time as her one hand slipped between her lips from the back, her other descended rapidly from her belly to her clit.\n\n\"You are so wet,\" Charlie's quiet voice groaned with satisfaction, as her fingers explore every crease of Amy's hot, swollen pussy.\n\n\"I've been wet for you for months,\" Amy sighed as Charlie rubbed her clit.\n\n\"I know...\"\n\nAmy huffed indignantly but was interrupted by Charlie's finger entering her from behind. Her huff turned into a moan and she pressed her ass back into Charlie to give her better access.\n\n\"Come here,\" Charlie said. Her foot pulled out a plastic storage box with a lid from under the bed. \"Put your foot on here.\"\n\nAmy did as she was told and twisted her hip open so Charlie could easily reach her from both the front and the back. She sighed as Charlie's finger slid deeper inside her and started fucking her. She was a skilled multi-tasker and managed to keep a steady rhythm with both hands, while still having some brain cells left to direct kisses all over Amy's neck and shoulders.\n\nAmy wasn't going to last long in this position. She arched her back and bent back her head, exposing her neck to even more of those mind-numbing kisses.\n\n\"Oh my god, Charlie, I'm coming...,\" she moaned loudly. Her hands gripped the back of Charlie's thighs and pulled her into her. Her body started to tremble.\n\n\"I know...\" Amy could feel Charlie smile against her skin. She was clearly just making a point of saying that now. Amy had to laugh but her orgasm caught her mid-laugh. A mangled squeak escaped her lips, as her breath came out in short bursts. She shuddered in Charlie's arms. Her knees went weak and her legs buckled.\n\nCharlie held her firmly while her orgasm rushed through every inch of her body. As the rush waned, Amy felt incapable of standing, or even hanging in Charlie's arms, any longer, and let herself collapse forward onto the bed.\n\nThe position she landed in on her hands and knees gave her an idea. She crawled to the centre of the bed and arched her back. She looked over her shoulder, giving Charlie an inviting look. Charlie looked at her with pure lust in her eyes and quickly got on the bed behind her.\n\nWith a smooth grab of one leg and one wrist that could only be a martial arts move, she flipped Amy onto her back and settled herself down on top of her.\n\n\"And there I was thinking you were a doggy-style kinda girl,\" Amy teased.\n\nCharlie laughed. \"We have to save something for later. And as much as your ass is glorious, I want to look at your face now.\"\n\nShe wedged Amy's legs open with her knees and settled between them, positioning her pussy against Amy's. The intimacy of that contact made Amy feel closer to her than ever before and she kissed the girl passionately to let her appreciation show. They lay there just pressing into each other and gently moving against each other for a while, neither of them focussing on getting the other off, but enjoying their physical closeness and newfound connection. Amy couldn't remember ever feeling as comfortable and completely safe with a new lover as she did with Charlie.\n\nIt became clear that being pressed into each other couldn't remain all innocent cuddles for either of them when their kisses slowly became wilder, their grinding movements bigger.\n\n\"How do you feel about vibrators?\" Charlie asked quietly in her ear.\n\nAmy let out a surprised chuckle. She had not seen that one coming. \"Big fan...,\" she admitted.\n\nWith a mischievous grin, Charlie lifted her upper body off Amy and scooched to the side of the bed, rummaging in the drawers of her bedside table. Amy smiled with satisfaction. She knew there'd be sex toys hidden somewhere!\n\nCharlie returned holding a bright blue, slightly curved vibrator. She sat up, kneeling between Amy's legs. With that naughty grin still plastered on her face, she switched it on. It produced a pleasant hum and Amy squirmed a little in anticipation.\n\nHowever, Charlie had other plans. She opened her own legs a little and pressed the round end of the vibrator against her clit. She sighed with satisfaction and moved it against herself slowly, as her head tilted back with pleasure. Amy let out a surprised cry.\n\nCharlie looked down at her from her upright position, as if she'd only just remembered Amy was there. \"Oh, I'm sorry, did you want this?\" She teased. She looked at Amy's spread open pussy, clearly contemplating if she was going to give her what she wanted. She took it off her own clit for a moment and moved it towards Amy, almost touching her. Then she seemed to change her mind and brought it back to her own throbbing pussy, continuing her ministrations there with a moan of pleasure.\n\nThat's it, Amy thought, It's on! She made a grab for the vibrator but Charlie moved it out of her reach. She tried to grab Amy's wrists and pin her down but this brought the vibrator back into Amy's reach. They wrestled, partly for possession of the vibrator and partly for control over each other. Amy felt herself getting the upper hand and knew Charlie was letting her win. There was no way she could have overpowered the stronger girl in an even fight.\n\nPanting with exertion, she sat down on top of Charlie's thighs, brandishing the vibrator triumphantly. Now they'd see how much Charlie would enjoy a taste of her own medicine. Amy pressed the vibrator against her clit and started rubbing it up and down. It had a powerful vibration and Amy soon found herself breathing heavily, her heart racing, and her cheeks flushing with excitement. Her mouth opened a little and she uttered little moans as the electronic buzz brought her closer and closer to the edge.\n\nIt was clear that Charlie didn't mind in the slightest that Amy was paying her back in kind. Her eyes flitted back and forth excitedly between Amy's pussy and the action down there, and her face, taking in the ecstasy that was clearly visible there too. Her hands just held onto Amy's ass but didn't in any way attempt to pleasure her or take over. This was Amy's game and Charlie was very much into it.\n\nAmy felt the orgasm approach rapidly. This time she didn't inform Charlie about its imminent arrival. She knew. Amy could see it in her eyes. Amy held Charlie's gaze as the orgasm rippled through her. Charlie's mouth opened slightly with hers and it looked like she was enjoying it as much as Amy was. If it wasn't for the lack of the other inevitable signs - the tensing of the body, dilation of the pupils - she would have thought Charlie was coming with her. She even let out a soft groan that provided a complimentary bass tone to Amy's soprano cries.\n\n\"I have to do everything myself...,\" Amy growled as she eventually eased the vibrator away from her clit.\n\nCharlie snorted indignantly and with another skilful move tipped Amy off her and pinned her wrists onto the bed. She took the vibrator from Amy's hand and again wedged open Amy's legs with her knees. With another 'careful what you wish for' glare, she positioned herself further down Amy's body.\n\nCharlie's fingers carefully probed if Amy was wet enough - how could she possibly not be? - before inserting the still vibrating dildo inside her. It wasn't overly big but the curve hit Amy's g-spot perfectly when Charlie put some pressure.\n\n\"Oh my god...,\" Amy moaned as Charlie moved it in and out of her. At every fifth stroke or so, she'd let it slip out all the way and made a detour via Amy's clit, which made her shiver and squirm every time.\n\n\"You like that?\" Charlie asked.\n\n\"Yes...\" Amy's answer was more sigh than word.\n\n\"You want a bit more there?\"\n\n\"Ohhhh... Yes!\" Charlie had timed her question with another assault on her clit and Amy's answer had been distorted by the sudden added pleasure.\n\nCharlie leaned in and pressed her mouth against Amy's pussy, while reinserting the vibrator. Amy moaned with the sudden sensation of Charlie's tongue on her clit. It was vibrating too, or perhaps her whole pussy was. Whatever it was, it felt overwhelmingly good in combination with the vibrator fucking her harder and faster now.\n\nCharlie certainly knew what she was doing with her tongue, and somehow she used her free hand to press together Amy's lips around her tongue in small pulsing motions. This was a new move to Amy but it was very successful. Whenever her lips were pressed together, Charlie's vibrating tongue was trapped between her throbbing folds, only to be released a moment later and be free to make bigger lapping movements.\n\nAmy's orgasm caught her by surprise. What Charlie was doing felt so good, she would have held off coming if she could. But when the dildo pressed its vibrating head against her g-spot for the umpteenth time and Charlie's tongue seemed to be pressing against it too through her pussy, Amy exploded. Her body thrashed as Charlie continued with just enough pressure to keep the waves of pleasure coming.\n\n\"Oh Charlie... You're so good at that...,\" Amy panted when she could form words again, looking down at her lover. Charlie grinned irresistibly before hitting the control of the vibrator and turning up its intensity. It was overpowering and Amy was about to protest that it was a bit much when Charlie got off her legs and lifted them. Folding Amy in half, she put Amy's calves on her shoulders.\n\n\"What are you doing?\" Amy asked in surprise. Charlie didn't answer but moved a little closer to her exposed ass. Careful not to knock the vibrator that was still inserted in Amy's pussy, Charlie lay down against the back of Amy's legs, positioning herself over the protruding part of the vibrator. She pressed herself into Amy's pussy, her clit making contact with Amy's and the other end of the vibrator settling between her lips, at her entrance.\n\n\"Oh, that feels good...,\" She shivered with appreciation.\n\nThis, too, was a new position for Amy but she had to appreciate its ingenuity. Charlie eased Amy's legs slightly further apart while keeping them solidly planted on her shoulders and leaned between them to kiss her. Then she started moving against Amy in a grinding motion. The intense vibration which had seemed a bit much at first was now shared between them and was making the whole area where they touched tingle and pulse.\n\nStill kissing her, Charlie slowly increased the pace and the pressure with which she humped Amy. Their kisses were spinning out of control as their bodies made the bed creak. Amy's hands tried to get a hold of Charlie to pull her closer into her. She scratched her back desperately before finding traction on Charlie's ass.\n\n\"Faster!\" She urged. \"Oh god, Charlie, give it to me.\"\n\nCharlie complied eagerly. \"I'm almost there, Amy. Almost. Oh... Alm...,\" she stammered.\n\n\"Me too... Harder, harder, harder!\"\n\nCharlie's hips pumped on top of her, their pussies rubbing against each other, creating friction unprecedented in Amy's experience. \"You there?\" Charlie panted, her expression strained.\n\n\"Yes, yes! Come with me, Charlie!\"\n\nThe effect was instant. Charlie's body shook uncontrollably on top of Amy's as she started coming hard against her. With Amy's own orgasm taking control of her, she wasn't sure who was making which noises and who was triggering which movements. All she knew was that this moment, coming together with Charlie, was the best she'd ever felt. She watched her own release reflected in her lover's face. Charlie's climax face was so hot, as she looked down at Amy with pure animal desire. Amy was vaguely aware of her hands pulling Charlie against her with all her might, and of Charlie raining kisses on her wherever she could reach her, while she slowly came back to herself.\n\nThen she heard the barking. It was loud and non-stop, at least four or five dogs, she'd guess. Charlie saw her questioning look and smiled. \"You were screaming again. And here I was thinking I'd cured you from screaming...\"\n\nAmy covered her eyes in embarrassment, but Charlie tenderly pulled her hands away from her face. \"You can scream as much as you want. I don't have neighbours.\"\n\nShe eased herself off Amy, who only now realised her legs had gone numb and her hip flexors were aching. Charlie seemed to anticipate this and helped her legs down slowly. She gently massaged Amy's legs and asked: \"How many was that?\"\n\nAmy didn't need to count. She remembered every orgasm distinctly. \"Five.\"\n\n\"Halfway there...\" Charlie kissed her cheek.\n\nAmy laughed. She may have been overestimating herself, seeing the calibre of orgasm Charlie could give her. \"I may need a cup of tea first...\"\n\nCharlie snickered. \"You Brits and your tea. No battle was ever won with tea.\"\n\nAmy looked at her indignantly. \"Wanna bet?\"\n\nCharlie sighed in mock exasperation. \"I'll go put the kettle on.\"\n\nShe swung her long legs out of bed and sauntered out of the room, giving Amy a great view of her naked body. Amy heard the barking dogs calm down instantly upon hearing her soothing voice, followed by the welcome sound of the kettle heating up. She sighed contently. She could get used to this.\n\nDecember\n\nBy the time Amy had gotten fully used to sharing her life with Charlie - waking up together, sharing meals together, taking care of the dogs and everyday chores together, and of course having mind-blowing, sensational sex every day - it was time for her to leave.\n\nTheir goodbye had been emotional, to say the least. Charlie had taken her to the airport and Amy had waited until the very last moment to go through security, unable to walk away from Charlie until she was actually about to miss her flight. They had cursed their doomed situation, they had cried, they had tried to make light of it, but at the end of the day the fact remained that it simply sucked.\n\nNeither of them had tried to breach the subject of 'what's next?' It felt too final to discuss it and put a verdict on it. After all, what were their options, realistically? They both knew long-distance would be a very meagre alternative to the great times they'd had.",
        "So Amy had gotten on the plane with the devastating likely possibility unspoken; the possibility that she would never see Charlie again. She felt like she had cried throughout the whole twelve hour flight, although she probably had fallen asleep from exhaustion at some point.\n\nShe had managed to blame her red eyes and puffy face on the flight when she landed and her parents picked her up from the airport. She was just not ready to talk about why she was so depressed. They certainly noticed but seemed to think she was just sad to have left a Caribbean paradise behind. Her mum tried to make it better by cooking all her favourite meals. It helped, but only a little.\n\nAmy had only stayed with her parents a few days, before going to stay with Jordan and Megan. The girls had insisted when she had expressed her concerns about moving back in with her parents. She would be looking for a new apartment from January, but in the weeks before Christmas nothing tended to move in the renting world.\n\nIn the past two weeks, Amy had often wondered if the girls had regretted inviting her. She had been anything but pleasant company, being downright grumpy most of the time, overeating on whatever she could find in the snack cupboard, and playing sad love songs and bursting into tears over them. Of course, Megan and Jordan were nothing but understanding, and tried to make her feel better about what they had dubbed her 'Caribbean Candy'. She did not deserve such good friends. At least she was due to go back to her parents for Christmas in a few days. Her friends would get a break from her then.\n\nAdding to her moodiness, work was an absolute mess ever since she'd returned. As it turned out, there had been a significant mismatch in expectations around the state of the project. Although Amy had had regular catch-ups with her manager and had updated him on all the delays, it appeared that the problems had consistently been downplayed by the local management, presumably to save face in the light of what were clearly shortcomings in their organisation.\n\nAs a result, the news that the project wasn't nearly done had come as a bit of a shock to her company's higher management, at the time when it really couldn't be avoided telling the British partners. They were not prepared. The last two weeks had been crisis management and filling out report after report on the 'whys' and 'hows', consequences, and risk mitigation. Working on a solution seemed to only be possible after analysing the situation into the ground first.\n\n\"They still haven't found a replacement!\" Amy ranted when she came home from work on her last day before Christmas.\n\nJordan looked up from her laptop. That girl was always working on her PhD, day and night, even as everyone else was winding down for their Christmas breaks. \"Wine?\" She asked.\n\n\"Yes please! I'll get it.\" Amy grabbed a bottle from the kitchen and poured two glasses. \"Is Meg home?\" She shouted towards the lounge, wondering if she needed a third glass.\n\n\"Yes, she's in the shower. But she's working so she won't have any wine,\" came the answer.\n\nAmy handed Jordan a glass and flopped down on the sofa. \"I'm not looking forward to January,\" Amy said. \"I just know that whoever they bring in, I'll have to teach them everything we've done in the past year, all in the space of a couple of weeks, if I'm lucky.\"\n\nJordan nodded understandingly. This was not the first time Amy had told her friends about the work malarkey. \"I'm sure you'll do great though, Ames. Plus, you've got everything in reports and stuff. They can read, right?\"\n\n\"Yes, but the facts in those reports are only one side of it. There's all the local knowledge, the finesse of doing things there. There are cultural differences that are really important in getting things done, you know? I underestimated that too, but if it hadn't been for Lucas...\" Amy sighed and massaged her temples, feeling a headache come on. \"I've been back in the office for two weeks and I already feel stressed to my core.\"\n\n\"Makes you wish you were back in the Caribbean, hah?\"\n\n\"Don't even joke!\" Amy huffed, taking a gulp of wine.\n\n\"I wasn't...,\" Jordan mumbled, but she was drowned out by Megan who walked into the room and greeted them loudly. Her hair was still wet from her shower but she was already dressed in the black polo shirt she wore to her job as a bartender at the 'Shake 'n' Stir' cocktail bar.\n\n\"Amy was just telling me that they still haven't found someone to go to the island and take over from where she left things,\" Jordan said, \"and how she's going to have to teach them everything she knows when they do find someone.\"\n\n\"Unless... that someone is you...,\" Megan said, taking Jordan's glass and sipping from her wine and looking at Amy.\n\n\"Unless that someone is you...\" Jordan agreed thoughtfully, as if she'd only just thought about this. Amy had seen the two of them play this game too often to fall for the charade. It was obvious they had talked about this before. Amy had seen the thought clear as day on their faces whenever she talked about Charlie, but they'd never spoken the words before.\n\nOf course, the thought had crossed Amy's mind too. Her manager had brought it up a few times but it was clear he didn't feel it was right to ask her outright if she'd go back. He saw it as some sort of sacrifice she had made. Obviously, it had been quite the opposite. Every now and then Amy had even allowed herself to briefly indulge in the fantasy of going back, imagining herself back on the island, back doing the work she'd enjoyed. Most importantly, being with Charlie. Maybe for good.\n\nBut sooner or later, reality had kicked in and she had dismissed the thought. It was crazy after all. She couldn't just up sticks and leave again, she had only just gotten back!\n\nBesides, she and Charlie had never talked about their future, if there even was one. They had enjoyed their time together, however brief, but did that mean they wanted to spend the rest of their lives together, if circumstances would allow it? If Amy could be sure that it did, for both of them, she'd allow herself to think about how she could change those circumstances.\n\nShe knew her friends were thinking along these lines. They were probably wondering why Amy came back to the UK in the first place. But it was more complicated than that. Charlie would never ask her to come back, or to stay, and she'd be worried if Amy came back for her. She didn't believe in that. She didn't believe Amy wouldn't eventually want to leave again. Her past experiences with Lily had seen to that. And if she'd leave again, what was the point?\n\nOf course, Amy couldn't guarantee anything. She was realistic enough to know that she couldn't promise she'd never want anything different in her life. But then, neither could Charlie. Amy was of the opinion that if she only ever tried things that were certain to succeed, she'd never try anything. Of course she understood where Charlie was coming from - she'd been hurt in the past - which is why she respected Charlie's decision not to bring it up. And why she knew not to expect any grand romantic gestures.\n\nHer friends wouldn't understand that. They hadn't seen the hurt in Charlie's eyes when she'd talked about Lily, when she'd talked about why she couldn't be with Amy, even though it was all she wanted. Megan would probably think that what Charlie needed was to be swept off her feet with a surprise intercontinental move, and Jordan would surely come up with a solution for every concern Amy would point out.\n\n\"Guys, it's not going to be me,\" Amy said, annoyed, although she wasn't sure if she was annoyed with her friends or with the fact that it wasn't going to be her.\n\n\"Amy, come on. Think about it!\" Megan said, having another sip of Jordan's wine.\n\n\"Do you want a glass?\" Jordan asked with a chuckle.\n\n\"No, thanks babe. I'm working.\" Another sip. She addressed Amy again: \"It's a no-brainer...\"\n\n\"Oh yeah? How's that?\" Amy grumbled, knowing exactly what arguments they were going to put forward.\n\n\"Let's see...\" Megan pretended to think hard, even though it was supposed to require no brain power. \"Your manager is dying for you to go back, because you're the best person for the job and you already know everything. The local management desperately wants you back. And Lucas has literally been begging you to come back.\" Megan was counting the reasons on her fingers. \"Then there's the sun, the beaches, the cocktails, the sea... Not to mention the fact that your dog is still there...\"\n\n\"That's mean!\" Amy protested. \"You know I can't wait to have her back.\" She had been missing Jamie terribly, which was made worse by the fact that missing Jamie reminded her of Charlie, whom she also missed terribly. Of course, Charlie had kept her up to date about Jamie's every move and the details of her recovery. But that was just it too, their communication had been mostly about Jamie. They had both slipped in the occasional term of endearment and even an 'I miss you' but they had not talked about their feelings or how they saw their relationship.\n\n\"I feel like I'm missing something...,\" Megan continued, unperturbed, tapping the finger that would indicate the next reason tentatively.\n\n\"There's the girl...,\" Jordan offered helpfully.\n\n\"Oh, that's right! There's the fact that the love of your life lives there and you've been moping around miserably ever since you got back because you miss her so much and just want to be with her.\"\n\n\"I haven't been moping...,\" Amy protested, unable to contest the rest of the statement.\n\nJordan and Megan both laughed sceptically. \"Please, you're a love-sick puppy and we all know why!\" Jordan said.\n\n\"You're not seriously suggesting I U-haul my ass across the Atlantic to be with a girl I barely spent two weeks with?\"\n\n\"Of course that's what we're suggesting. When you know, you know, don't you?\" Megan quoted one of her favourite sayings. \"And I think you know.\" Forever the romantic, she had probably started planning Amy's wedding to Charlie, even though it wasn't even legal on the island.\n\n\"Besides, you've known her for much longer than two weeks, even if it took you a while to get together. It took us forever and look at us now,\" Jordan added.\n\n\"We've seen you two together. You two are fireworks, girl,\" Megan agreed. \"Why are you doing this to yourself? Why are you insisting on staying on this cold, wet mud island when you can be with the girl you love in the sunshine? I mean, we'll miss you but we'll come visit again, if you twist our arms.\"\n\nThe girl she loved? A nervous jitter coursed through Amy's body that was halfway between panic and excitement. Did she love Charlie? Of course you do, her heart told her. It's too soon to know, her brain countered.\n\n\"But we haven't even talked about it, Charlie and me. What if she doesn't want me to come back? What if it was just fun while it lasted? What if she's already over me? I told you she has this thing about dating expats... And that's understandable. I mean, what if she doesn't want to take this any further? What if...\" Amy struggled to express the severity of this concern; the depth of Charlie's reluctance to start something with Amy in the first place.\n\nMegan put her hand up impatiently. \"Let me stop you right there. How about you just talk to her and find out what she thinks instead of speculating until your head explodes?\"\n\nNow it was definitely panic she was feeling. How could she possibly bring up that topic of conversation without Charlie thinking - knowing - that Amy considered coming back for her; the one thing she said she'd never ask of Amy?\n\n\"What about my parents? What do I tell them? They're going to kill me if I leave again,\" she distracted her brain with another worry. She knew right away it had been the wrong thing to do. Now her friends thought they had convinced her on the Charlie front and moved on to dismiss her next concern.\n\n\"Tell them you have to follow your dreams, live your own life. They want you to be happy, don't they?\" Jordan said.\n\nAmy didn't answer. Of course they wanted her to be happy but perhaps not 'living thousands of miles away' happy.\n\n\"God, you guys... Even if... All that... I wouldn't even know where to begin arranging all of that,\" she said with a sigh. Was she seriously considering this? If she allowed herself to imagine Charlie would be happy about her coming back, there was certainly a clear layer of excitement and joy underneath the panic she felt about the practicalities.\n\nNow the girls were in their element. Jordan started typing rapidly on her laptop while Megan rattled off: \"Your stuff is still in storage; that's easy to extend. You don't have an apartment yet. Call your boss and tell him you'll happily take his offer. Call Charlie and tell her you're coming back. Tell your parents when you see them over Christmas. Pack your suitcase and get on a plane, ASAP.\"\n\n\"There are still some cheap flights between Christmas and New Year's,\" Jordan reported excitedly.\n\n\"Let me see that,\" Megan said, leaning over her shoulder. \"Wow, that is cheap. We paid almost double!\"\n\nJordan scrutinised the information on her screen, clearly comparing some options. \"You could go on the 28th, fly early in the morning and arrive early afternoon. That gives you a few days to get your jet lag in check and be ready to kick off the New Year with the love of your life.\"\n\nAmy came over to look at the flight information. She couldn't help it. Every part of her now seemed geared towards making this happen, even though she hadn't ironed out any of her concerns about the plan. Seeing the words on the screen - the name of the destination, the exact time she could be with Charlie - drove the reality home for Amy. She could really do this. She could be with Charlie in less than a week. They would work it out. She'd show Charlie that they should give this a shot.\n\nSensing her coming round to the idea, Jordan asked: \"Want me to book it?\" Her cursor hovered meaningfully over the 'Book now' button.\n\nAmy hesitated a moment longer, although she wasn't really thinking about it anymore. \"Yeah, book it,\" she said quietly. Megan let out an excited squeak and hugged her while Jordan kicked off the booking process, grinning from ear to ear.\n\nIt took only moments to change the course of Amy's future and now, with the flight confirmation in her email inbox, she allowed the excitement to come through. \"I'm going back,\" she whispered at first. \"I'm going back!!!\" She exclaimed then, as she threw her hands in the air and made a little jump of joy. It was so out of character that Jordan and Megan laughed and gathered her for a group hug.\n\n\"Yes, you're going back, sweetie. And we'll start saving for our next visit. And speaking of saving, I need to work to do that, and I am running so late! Gotta go. Good luck with the preparations. I want to hear all about it in the morning!\" At that, Megan was out the door, stumbling over the untied laces of her shoes on her way.\n\n\"I better make some phone calls then...,\" Amy said, stalling.\n\nJordan nodded. \"You stay here for that. I need to head upstairs anyway. Good luck. Let me know if you need anything, okay?\"\n\nAmy thought for a moment about who she should call first. She quickly decided on her manager. She should make this a reality, regardless of what Charlie would say. She wasn't going back just for Charlie, after all. Mostly for her, she admitted that, but she couldn't tell Charlie that.\n\nThe phone call to her manager was quick and smooth, as was to be expected. Of course, he had been a bit surprised about Amy calling him on a Friday night, but he had been ecstatic by the news, saying they would start arranging things after Christmas. When Amy told him when she was leaving, he had been audibly shocked but had agreed that they could work out the details while she was already there. It was probably good to get a flying start in the New Year, he had concluded.\n\nNext, Amy called Charlie, waiting nervously for the video call to connect.\n\n\"Hey!\" Charlie's face appeared on her phone screen and from the movement in the background it was clear she was walking.\n\n\"Hey Charlie,\" Amy said, a smile spreading from ear to ear, as it tended to do whenever she saw the other girl. \"What are you up to?\"\n\n\"Oh, I was just about to walk the dogs.\" Charlie spun the camera around so Amy could see a pack of dogs standing around her. She was extra pleased to see Jamie, wagging her tail and standing unsupported on her healing leg. \"You have good timing. Another few minutes and I would have been out of signal.\"\n\n\"How's Jamie?\" Amy asked. She cursed herself for getting into small talk. She had intended to just bust out the news but she was getting more nervous about telling Charlie by the second.\n\n\"She's doing so good! Look at her.\" Charlie aimed the camera at Jamie again. \"Say hi to your momma, Jamie. Say hi.\" Jamie's nose touched the camera as she came in for a sniff, but she didn't seem to understand why Amy's voice was coming out of that little black box.\n\n\"We saw the vet this morning, actually. I was going to call you. He says her leg is looking good and she can fly now.\"\n\n\"Really?\" Amy tried to sound excited. Of course she was excited that her girl was healthy again but she wasn't planning on her flying anytime soon.\n\n\"Yeah,\" Charlie nodded, aiming the camera at herself again and clearly sitting down to continue her conversation. Amy recognised her terrace and longed to be sitting there, right next to her. Soon. \"I haven't looked into flights yet. It might be a bit difficult to find a handler now with Christmas and New Year's but I promise I'll get her back to you as soon as I can.\" Her arm moved up and down outside of the view and it was clear she was stroking Jamie when she said: \"I'm going to miss this happy little girl.\"\n\nPart of Amy wanted to continue the small talk, to avoid the more difficult topic, but she realised that this was her moment. \"Actually, I was thinking I might come over...,\" she started. This didn't quite cover the reality of her plans, but she realised she hadn't prepared for this conversation at all.\n\n\"You are?\" Even through the slightly pixelated video connection, Amy could see the look of surprise on Charlie's face. There was no other visible emotion at first, but her voice sounded slightly strained. \"When?\"\n\nIt wasn't really the confetti and balloons Amy had been hoping for. Here goes nothing. \"The 28th.\"\n\n\"Of December?!\" Now Charlie was definitely shocked and she seemed to be battling to hide an array of complex emotions. When Amy nodded, she squeezed out a grin. \"You miss me that much?\"\n\nCharlie had no idea just how much. \"You know I do,\" Amy replied, really wishing she could just see inside Charlie's head and know what the girl was thinking. Of course it was a lot to take in, they had only just said goodbye and it hadn't been easy. Yet, Amy was really hoping Charlie was at least a little excited about the news. Unable to wait for the other girl to let her emotions show, she burst out: \"Are you happy to hear it?\"\n\n\"Girl, I'm still processing! I can't believe you're coming over. It's just...\" Charlie's head gave a quick dismissive shake, as if her next thought didn't really matter. \"Yes, of course, I'm happy Amy,\" she concluded, with a smile that looked a lot more genuine now. Amy could understand her hesitation. She probably logically assumed Amy was coming over for a holiday and that they'd have to do their emotional goodbye all over again at the end of it.\n\nAmy was about to drop the bombshell that she was planning to stay when it suddenly seemed Charlie realised she hadn't quite shown enough enthusiasm. \"That really is exciting, Amy. I can't wait to see you again. How long for? What brought this on? That will make things so much easier flying back with Jamie.\"",
        "It was Amy's turn to hesitate. Charlie seemed genuinely happy about the prospect of her coming over now. Would she still be so excited if Amy told her about the life-changing decision she'd made? The decision that was potentially, hopefully, life-changing for both of them. Amy got cold feet. Suddenly she was certain that the truth would create so much strain and expectation and would dampen the spirit. Charlie's quick succession of questions and statements made it easier for Amy to avoid springing the truth on her.\n\n\"Yeah, I thought so too,\" she lied. It was better this way. She would just go over there and tell Charlie when she got there. She would casually outline her plan to work out the project - which was currently extended for another year - and to find a local job after that. That way, Charlie would realise she was also coming back for her job, and there would be less pressure. And less chance for her to tell you she doesn't want you to come back for her, the pessimistic side of her brain added. She dismissed the thought, not even wanting to entertain that notion.\n\n\"Anyway, it was just a crazy whim idea,\" she added, not entirely untruthfully.\n\n\"You can have those more often,\" Charlie said, beaming now. After the slow start to her excitement, she was surely making up for it. Amy was relieved. Why did she ever think Charlie may freak out or may not want her to come?\n\n\"I thought maybe we could spend New Year's together,\" Amy said, embracing the idea and allowing ideas to flow in.\n\n\"Absolutely. Maria and Pris are having a party at their house. You should come. My friends will be so happy to see you. Where are you staying, by the way?\"\n\nAmy hadn't considered that. In her head she would go back to Charlie's and pick up where they'd left off. She must have had quite the blank face because Charlie laughed. \"I was hoping you'd say that. You're staying with me then. I've been missing my roomie.\"\n\nAmy hoped that having a roommate wasn't the only thing she had been missing, but asking that came dangerously close to 'do not discuss' territory. \"I miss you too,\" she said simply, leaving the extent of it deliberately vague. \"If you're not too busy, I'd love it if you picked me up from the airport,\" Amy added.\n\n\"Are you kidding? Of course I will. Ping me your flight details and I'll be there with bells on.\"\n\nThey chatted a bit longer about what they might do when Amy was there - of course avoiding anything that wasn't strictly platonic - but it was getting increasingly difficult for Amy to avoid mentioning how long she'd be there for. So when Charlie said she'd better go walk the dogs because they were getting impatient, Amy was relieved to have made it through the call without messing up.\n\n* * * * *\n\nAmy tapped her foot impatiently as she watched the red suitcase roll past again on the luggage belt. It looked exactly like hers, but on its fourth loop around the carousel it still stubbornly refused to be hers. She had never been this impatient to get out of an airport and vowed never to judge people who crowded the luggage belt and jumped queues ever again.\n\nNow that she had made it through the wait of the last few days, the final minutes were pure agony. Of course, the time she'd spent with her parents over Christmas had known its difficult moments too. Such as the tears her mum had shed over the thought of her daughter going away again, the silent nod her father had given her, the hurt visible in his eyes too. The goodbye had been emotional but with every mile the plane had travelled, Amy had felt her excitement growing. She was getting a little bit closer to Charlie every second.\n\nWhen she had finally plucked her suitcase off the luggage belt - naturally it was one of the last to come off the plane - and made it through the additional customs check, she rushed towards the glass doors that led into the arrivals hall. Taking a deep breath - this was the moment - she stepped forward and let them roll open in front of her.\n\nThe usual sea of signs with names greeted her: taxi drivers trying to recruit weary travellers, excited family members, tour operators waiting for their groups of tourists, individuals with flowers and heart balloons, clearly waiting for their partners. But no Charlie. Amy looked around nervously. Where was she?\n\nShe looked at her watch. She was a bit late, but no later than was to be expected given the excruciating speed of immigration here. Charlie would surely have accounted for that. As Amy scanned the faces of the crowd and started walking around the arrivals hall, she was starting to feel more stressed by the minute. What if Charlie had changed her mind? What if she had decided that she didn't want to see Amy after all?\n\nShe really wasn't anywhere in the hall, Amy concluded after a while. She racked her brain for a plan B. Look for a taxi? To take her where? She walked outside while she thought and then stopped in her tracks.\n\nStanding a bit further away in the shade of a tree were Charlie and Jamie. That was why Charlie wasn't inside; because dogs weren't allowed in the arrivals hall. Charlie was wearing a Santa hat and she'd given Jamie a set of reindeer antlers that the dog seemed to be wearing remarkably patiently. Amy's heart swelled when she saw the two of them together. Her family. She knew then beyond a shadow of a doubt that this was where she wanted to be; this was where she belonged, with her family.\n\nIt was clear Charlie hadn't seen her yet, despite her eyes scanning the exits. Amy started walking towards her but her pace got faster as she approached. Then Jamie spotted her and lunged for her, yanking Charlie's arm. Amy was close enough to see Charlie's face split into a broad grin when she saw her.\n\nIt was Jamie who eventually made it to Amy first. Amy made sure to give her lots of cuddles and compliment her on looking so adorable with her antlers. It was clear her dog had missed her, which made Amy feel even better about being back.\n\nAnd then there was Charlie. \"Hey,\" she said with a smile.\n\n\"Hey,\" Amy replied, suddenly feeling shy.\n\n\"Come here.\" Charlie pulled her into a hug. Amy felt tears welling up in her eyes. She had missed this so much. She wrapped her arms around Charlie and squeezed her tight.\n\nCharlie surprised her by kissing her cheek in the hug. When Amy looked up, Charlie's lips found hers and gave her a long and tender kiss. When the kiss ended, Amy looked around furtively. They were in a public place and Charlie had just kissed her. That was so unlike her.\n\n\"I really missed you,\" Charlie said by way of explanation. \"And we're at the airport. People do all sorts of crazy things at the airport.\" At that she kissed Amy again to prove she didn't care who saw her.\n\n\"Do I look cute too, by the way? I couldn't find any bells, but...\" She grinned and flicked the pompom at the end of her Santa hat.\n\nAmy smiled. \"You look adorable. Christmas is over, though.\"\n\n\"I thought we could have a little do-over, you and me. I left your present under the tree.\"\n\n\"You got me a present?\" Amy felt herself welling up again. She had brought a little something for Charlie too - a leather bracelet with a bulky clasp which she thought the girl would really like - but she had never imagined Charlie would have gotten her something in return.\n\n\"Of course. Just a silly thing though, don't get your hopes up too much.\" Charlie grabbed her suitcase and handed her Jamie's lead. She started walking towards the car park, pulling Amy's big suitcase as if it weighed nothing, clearly not caring about Amy's girly habit of over-packing this time. \"I'm parked on the other side.\"\n\n\"How long do I have you for?\" Charlie asked as they got into her truck.\n\nIt sounded like a casual question but Charlie must have realised she had asked a few times and never gotten a reply.\n\nAmy swallowed anxiously. This was it. No point in further delaying the inevitable. Suddenly her plan to casually mention her job seemed contrived and deceptive. That wasn't why she was here. There was only one reason she was here, really.\n\n\"Ask me, Charlie...\"\n\nCharlie gave her a puzzled look. \"Ask you what?\"\n\nAmy paused nervously, but only for a moment.\n\n\"Ask me to stay.\"\n\nA whirlwind of emotions passed over Charlie's face. It was hard to read what the prevalent one was, but it was clear that it was overwhelming her.\n\n\"You're staying?\" She asked, her voice barely more than a whisper, her face still unreadable.\n\n\"If you want me to...\"\n\n\"You better not be joking...\"\n\n\"I'm not.\" Amy looked for a sign of Charlie's feelings. Disbelief appeared to be ruling.\n\nThere was a moment of silence. Charlie's mouth twitched. She started to smile but the smile seemed to lose its way halfway through, as if she was still unsure how to make her face reflect how she was really feeling. \"I love you, Amy,\" she said then.\n\nTears rolled down Amy's cheeks. So many tears she had shed around Charlie, about Charlie, with Charlie, but these were the first tears that were made of nothing but joy. \"I love you too, Charlie.\"\n\nThe kiss they shared after uttering these words felt different than all the ones before, as if their bodies also knew the momentous interchange that had just occurred. Amy wasn't sure how long they held each other, unwilling and unable to let go of each other, even temporarily. More words would undoubtedly have to be exchanged, details ironed out, doubts reassured, but in this moment, this was all they needed.\n\nWhen they did eventually end their embrace, Charlie simply looked at Amy, her eyes full of love; the words on her lips the only ones that could truly start their new chapter together.\n\n\"Let's go home.\""
    ],
    "authorname": "Salandar",
    "tags": [
        "caribbean",
        "dogs",
        "expat",
        "falling in love",
        "interracial",
        "lesbian friendship",
        "lesbian romance",
        "lesbian sex"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-trainer-pt-03"
}