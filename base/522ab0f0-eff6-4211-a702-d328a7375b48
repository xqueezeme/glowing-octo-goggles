{
    "title": "Philanthropy Pt. 03",
    "pages": [
        "Philanthropy Part Three\n\nThe story is getting darker. Peter Chase has blindly entered a world where the bad guys have no limits to what they are willing to do. Can Peter turn to those who are ready to help him? Can he trust them? Can he keep them around despite his attitude?\n\n Philanthropy starts to examine the legal ramifications of dealing with a crime organisation. \n\nThe sex is going to get a little wild in this one... straight sex, lesbian sex, anal sex, and a little inferred incest thrown in to get your juices flowing... The story is a little over the top, but a fun romp. Buckle up and try to enjoy.\n\nYou'll need to read Part One: The Carvers, and Part Two: Building the Case, first. Go on. I'll wait. &lt;author taps foot impatiently...&gt;\n\nConstructive comments always appreciated. And voting. And DMs. \n\nPart Three: Reaction and Action \n\nI had been held in the interrogation room in the police department for more than four hours. They had provided a bottle of water and little else. I was still very shaken. Every time I closed my eyes, I could see Amanda lying before me. Abused sexually and physically. Her drugged form barely breathing. She was another victim of the Carvers and their sociopathic ways. I should have seen it coming. It was me who had introduced the Carver daughter Dana to Amanda, and the Carvers had already expressed their anger toward me. I desperately wanted to go back in time and stop the Carvers from moving into my condo building and stop Dana from meeting Amanda.\n\nNow Amanda was in the hospital, hopefully being taken care of and away from the influence of the Carvers. No one had told me anything about how she was. I had even pleaded with them. I wanted to be by her side. Amanda had always been there for me. Always, I realised. And now I'm stuck in a police station waiting for anyone to come and speak to me. I was prepared to provide evidence, but no one had asked me anything. And yet they were keeping me here, locked in this room with no company except for one worn table and four shitty chairs. They had taken my phone before they had placed me in a police cruiser despite my protests. I had asked repeatedly for a phone call and I had been ignored. I think I knew more about American rights than Canadian ones and I felt more than a little lost.\n\nThe ambulance had arrived right after the police. It had been surreal. Shanti had hidden in her bedroom and I had distracted the police who had swarmed my condo. They entered and immediately had me on the floor and in handcuffs despite my protests and pleading they check on Amanda. They ignored her and I knew right away they weren't interested in her. I had yelled at them to help Amanda, but they had ignored my pleas and one had smacked my head to shut me up. Then the ambulance showed up and the cops were pissed.\n\nThe police on the ground floor had led the paramedics up. They wheeled a gurney past me, and I had yelled at them about what had happened and pointed to the bag of clothes. The police had taken the bag and the paramedics saw to Amanda. I watched the police smile at the bag and it left my condo. I had thanked whatever Gods there were that Shanti had taken samples and hidden them. I doubted the evidence the cops had taken would ever be seen again.\n\nI told the paramedics that I had taken blood samples and injected the naloxone. The paramedics had looked relieved and thanked me saying I had probably saved her life. I thought of Shanti then and decided I needed to do something nice for her. One of the cops cuffed my head with a boot and I faded out for a moment.\n\nA paramedic was dabbing at my head and I warned her quietly that Amanda was in danger and to protect her. And from the cops. She nodded at me and I was suddenly being lifted hard from the ground by two cops and my shoulders screamed in agony. I watched Amanda being taken away in the stretcher and sobbed in relief. Then I was dragged downstairs and thrown into the back of a police car. I looked out the window and saw a plains clothes cop talking outside my door window. I heard the cop mention the front door video surveillance and watched the plains clothes cop go back into the building as I was driven away.\n\nI asked for my lawyer en route and was ignored. I asked for my phone and was ignored. I asked for a hand job and was ignored. It seemed I wasn't getting anything I wanted and slouched back in the backseat and watched the city go by. For a moment, I was worried I was being driven to a forest somewhere for a dirt nap - do they still say that? Dirt naps? - and when I saw the police station headquarters, I relaxed somewhat.\n\nNow I sat in silence in the interrogation room, trying not to breathe in the stench of sour sweat and fear, and worked my sore jaw and rubbed the large lump on the side of my head. Both hurt bad but I was certain it was only superficial. I had been beaten worse. I looked up at the video camera in the corner and saw where the red light, indicating it was recording, was not lit. I am so fucked.\n\nThe door to the room burst open and I made an unmanly sound. Two overweight men in cheap suits entered. They looked tough but soft. Too many donuts and diet cokes, I thought. I recognised one of them from outside the condo. I couldn't help but notice the glares these men were giving me, and warning bells went off in my head. They sat across from me, dwarfing the small chairs, and said nothing. They were staring at me like I was the worst thing they had ever seen.\n\nI wasn't intimated, but I was starting to get annoyed. \"Huey and Dewey. What can I do for you two fat fucks?\" I chirped with a cheeriness I didn't feel. \"How's Amanda? How's my friend?\"\n\nThe men just stared at me. I could see thick veins pulsing along their steroid enhanced thick necks. I picked my nose and wiped what I found on the tabletop. It was a little bloody.\n\n\"Listen, she's my friend. I'm worried about her. She was drugged and assaulted. Have you given the blood samples to the lab? Her clothes? Semen samples? What is going on here?\" I might have faked some sign language at the end.\n\nThe bigger cop, the one I had decided was going to be called Huey, growled, and stood and leaned his weight on his knuckles, pressed hard into the table. He leaned forward, trying to tower over me. I worried about the integrity of the table and slid my knees away from under it.\n\n\"Keto diet. I recommend it. It will do wonders for you,\" I smiled up into the greasy face of Huey.\n\nHuey made a sound and then cocked back a meaty arm. I could see what was coming. The fingers of Huey's right hand closed into a fist and he pulled it back past his head. I could see the muscles bunch in the man's arm and jaw and knew I was about to go down for the count.\n\nThe door burst open once again, startling everyone. Huey, his fist still cocked, looked toward the door with a snarl. Dewey had his head turned and I saw his jaw drop.\n\nImani stood there, dressed in a high-fashion business suit that screamed money. Behind her I saw a uniformed cop being pulled aside and away. Imani had a soft leather valise held in one hand. One of those lawyerly things. They must issue them with the bar. Her other hand held a paper cup carrier with two large drinks in it. They looked like coffee from a wonderful local coffee shop I frequented. I drooled. I drooled at her, and maybe the coffee.\n\n\"Detective Smalls, why does it look like you are about to strike the man who most likely saved the life of my other client, Amanda Bradley?\" She slowly closed the door behind her, but I saw a cop dressed in a uniform bristling with gold and stuff glance in at me before the door closed.\n\nHuey, who I decided would never be Detective Smalls to me, stood and lowered his arm. His legs pushed back the chair he had been sitting on and it fell backward with a wooden clatter.\n\n\"Who the fuck are you and who let you in here?\"\n\nImani smiled and I could have kissed her right then and there. Her Grace Jones looks were giving me ideas and I wondered if I could persuade her in a little professional exploration. For science, I reasoned. Purely for evidence gathering.\n\n\"I'm Peter Chase's lawyer, Imani Jones. I'm a full partner with EMB Cessna, the global law firm. Know it? I also represent Peter's cherished friend Amanda, who's side I just left. She's awake and speaking.\" Imani was laying her British accent out thick. When I heard Amanda was awake and talking, I almost lost it. My emotions surged strong and hard and my throat tightened.\n\nHuey and Dewey exchanged a look and then Huey, the leader of the two it seemed to me, stepped clear of the table, and took a step toward Imani. \"I don't care who the fuck you think you are. This is a private interrogation room. Get the fuck out or I'll throw you out, you fucking British nigger.\"\n\nImani beamed a smile at Huey and I was impressed with her composure. I was vibrating with the need to rise and do something, but I sensed my silence was probably the best idea. I glanced at the camera and was surprised to see the red light was lit up. I glanced at Imani just in time to see her smile at me. I smiled back and relaxed and sat back to enjoy the show. I think Imani needs my special treatment later this evening, I thought.\n\n\"How quaint. Are you allowed to use the 'N' word, Detective Smalls? Can I see your hallway pass? It's quite the racial epithet.\" Imani didn't wait for his response. She walked around the table in four-inch heels, walking like she had been born in them. She put the cup holder down in front of me and placed her attach\u00e9 case down on the table in front of the chair beside me. She sat with poise and then opened her valise.\n\n\"Get the fuck out, you bitch,\" snarled Huey.\n\n\"Oh, I plan on it. Shortly. First, I need to discuss some things with you two... gentlemen. Can I use the word gentlemen? I'm not sure it applies, quite frankly. You've denied my client basic rights. Kept him isolated for hours without anything other than water. You haven't told him he has the right to remain silent, or why he has been detained. That he has the right to counsel. The right to speak to me, his lawyer. It's a good thing I knew he was here, isn't it? His phone is off, and taken from him? Isn't that strange?\n\n\"Further, he has been denied any knowledge of the state of his good friend, Amanda, who has expressed her thanks to him for saving her life. So, please, explain what's happening here, detectives? You are detectives, no? Trained to observe and gather facts?\"\n\nHuey walked around the table toward Imani. Dewey reached out and stopped him. \"Don't,\" was all he said.\n\nHuey glared at Dewey. \"Fuck this bitch, you know what has to happen here.\"\n\nImani laughed and Peter loved the sound of it. \"Oh, please, do tell? What happens here?\"\n\nHuey looked back at Imani and I saw the look on his face. It was the face of a man who loves to hurt people. I have seen it many times in the past and Huey, I could see, got off hard on it. He took one step toward her and Imani simply pointed at the camera hanging up in the corner and then rummaged in her valise.\n\nHuey followed her finger and then blanched.\n\nI had never seen someone actually blanch before. He truly turned white. All the colour left his face and Huey staggered a little. He slunk around the table staring at the little red light and then pulled up his chair and sat and looked at Dewey. Dewey had seen the red light and looked equally white.\n\nImani pulled out notes and started speaking.\n\n\"I've been looking into some of the facts of what happened early this morning. They seem strange to me, perhaps with your expertise you can assist me?' Imani spoke in a tone that I knew well. She was a professional and it oozed from her voice. I also caught the Dom undertones and felt my cock lift a little in my pants. I scooted my chair under the table. Imani continued without looking up.\n\n\"At 2:13 AM a call went to 911 from a man reporting a woman being raped by Peter Chase in the park across from the condo building of all places. The building Peter owns. At 2:15 AM, Amanda is seen on video surveillance entering Peter's building front entrance and calling up to Peter's condo. Strange behaviour for a woman who was just raped by Peter.\"\n\nHuey growled. \"There ain't no video.\"\n\nImani looked up and grinned. \"Cloud storage. It's a wonderful thing. Nothing is truly deleted forever. You are correct that the digital recordings in the security office of the building seem to have lost the recordings. Erased at 3:23AM. Surveillance shows Detective Wainwright here entering the office and deleting them. Interesting, no? Where was I? Right. Surveillance shows an unknown woman at 2:18 AM entering the entrance lobby and carrying an unconscious and drugged Amanda away and then straight up to Peter's condo.\"\n\nDewey suddenly was looking scared and looked at Huey.\n\nShe checked her notes. \"Detectives Smalls and Wainwright arrive at the front lobby at 2:25, some five minutes before the first police cruiser arrived, responding to the 911 call. Remarkable coincidence, isn't it, gentlemen? Being prescient is a wonderful gift. Certainly useful in law enforcement.\"\n\nDewey, who Imani had identified as Detective Wainwright, made a noise. Huey shot him a look. \"Shut up, don't say a word.\"\n\n\"It gets better,\" drawled Imani. \"Did you know that Peter here has full surveillance in his condo? As his lawyer, I've already reviewed that footage. Peter here is clearly the hero. He provided medical first aid to Amanda. He gave her an injection of naloxone to counteract a massive heroin overdose which the doctors say saved her life. He also gathered evidence. He removed clothing, collected sperm samples from her hair, photographed everything, and then handed all that evidence over to the police, who handed it to you, Detective Smalls.\"\n\nHuey was purple now. He had his hands clenched in front of him, and I suddenly had an image of Hanover Fiste in the movie \"Heavy Metal.\" I almost laughed at the image but then felt Imani touch my thigh under the table just below where my cock was extending, excited at watching Imani do her lawyer stuff.\n\nImani kept speaking. She kept her hand on my thigh and I was appreciative. \"That evidence has disappeared between Peter's condo and this police station. Would you care to explain, detectives?\" Imani looked at them for a moment before resuming. \"No, I didn't think so. Thankfully! Thankfully! Peter had taken some of that evidence and placed it in a second bag. It's all caught on video, maintaining the chain of evidence. Isn't that wonderful? I just delivered it to the Police Chief personally. It's being analysed right now! The semen should prove interesting. DNA sequencing should give us the names of the assholes who decided jerking off over my drugged client Amanda was a good thing to do. Oddly enough, Amanda mentions two rather large men. Two fat greasy fucks, she said, in fact. Yup, that's what my notes say.\"\n\nHuey had enough and he rose fast and furious. His chair flew back to strike the back wall and so did the door to the interrogation room. Four police officers in uniform burst in and in moments Detectives Smalls and Wainwright were being carted away, protesting loudly, in handcuffs. Another police office entered and sat down. He was a large black man with white cropped hair, and his uniform was festooned with all sorts of things I didn't recognise. He had been the one I saw standing outside the door.\n\nImani smiled at the newcomer. \"Police Chief Richards, thank you for letting me set the stage here.\"\n\nThe man smiled and shook his head. \"My pleasure. That was fun to watch. I've been after those two for years. As dirty as they come. Tonight, we have all the evidence we need. I expect they will be serving time for a long, long time.\" The Police Chief stuck out his hand toward me. I looked at and refused to take it. \"Mr Chase, I apologise for the theatrics. Your lawyer asked us to play along and I grudgingly did. I am not in the habit of letting innocent men stew in an interrogation room, especially one who saved the life of a helpless woman.\"\n\nImani stroked the tip of my hard cock under the table making me jerk in my seat. \"Peter, you were in no danger. Shanti called me right away and I've been busy securing the evidence.\"\n\nI looked at Imani when she mentioned Shanti.\n\n\"Yes, the Police Chief is aware of Shanti and her role. Don't worry, she's safe and he assures me she will be kept out of everything. Her credentials spoke for themselves.\"\n\nI nodded and then reached out and shook the Police Chief's hand. It was a warm and firm grasp, and I could see the sincerity in the Chief's eyes. \"So, what happens next, Chief?\"\n\nThe chief released my hand. \"Please, call me Darren. Darren Richards. We can take statements from you, but that doesn't have to happen immediately. I'm sure your lawyer can handle that and send it to us. As for the two detectives...\"\n\n\"Huey and Dewey,\" I declared.\n\nThe chief barked a laugh. \"Funny. Not the first time they've been called that. Those two are being arrested and charged right now. They will be refused bail as a flight risk and threat to society. Don't worry about them.\"\n\nI relaxed and felt some weight leave my shoulders. I looked at Imani and then placed my hand over the one she had on my cock. \"Thank you, Darren. Imani, how is Amanda, truly?\"\n\nImani looked sad. \"She's okay, physically. She wasn't raped, thank God.\"\n\nI was immensely relieved. \"Truly?\"\n\n\"Truly. She was meant to die from a heroin overdose. They roughed her up bad and did sexually harass her. Touched her. Jerked off on her. Depraved shit like that. Thankfully, nothing more. Four cops in total. I made up the bit about there being two fat cops involved in that. Their reactions proved me right. Amanda is going to need some psychiatric help and counselling. I've arranged that. Did you know there's a really remarkable talented man guarding her hospital room?\"\n\nPeter nodded and smiled. \"Shanti arrange it.\"\n\nImani looked at Darren. He smiled. \"That explains it,\" he said. \"He already stopped one attempt on her life. An orderly is in intensive care. Turns out he wasn't an orderly with the hospital. Or any hospital. The large man says he's Amanda's bodyguard?\"\n\nI was grinning now. \"Shanti is a wonder.\"\n\nImani chuckled. \"Shanti says Amanda is going to move into your condo.\"\n\nI was surprised and then nodded. \"That actually sounds reasonable.\" It did and wondered why I hadn't considered that.\n\n\"Good,\" chirped Imani. \"It's already being arranged. My law firm knows a good many professionals in the city and I found a nurse willing to attend to Amanda in your condo. She's has great credentials and has knowledge of what Amanda's going through. She knew all about you. She's friends with Betty? That mean anything to you?\"\n\nI felt relief. \"Yeah, Betty was the nurse who nursed me after my beating. She got me through it. If she vouches for this other nurse, then she's golden.\"\n\nImani nodded. \"Great, Amanda will be moved to your place in a couple of days once she's stronger.\"\n\nI counted the number of women in my life on my fingers and then looked up at Imani. \"I am slowly being surrounded and outnumbered by the women in my life.\"\n\nImani leaned in and brushed her lips across my ear lobe. \"And they all want to do is fuck you,\" she whispered. Her hand on my cock under the table squeezed it hard and I moaned. The soft sound of her voice in my ear combined with her hand squeezing my cock had my head spinning with the sensuality of it and the hairs all over my body stood up. I didn't want the moment to end.\n\nDarren coughed and looked embarrassed. \"I can see you two have things to discuss, so I'll leave you here. Imani, thank you for all your help. We've managed to put away two bad detectives and hopefully the two police officers who helped them once we figure out who they are. Thankfully, we have a long list of associates of Huey and Dewey. Many will sing as soon as it gets out their leaders are incarcerated.\"",
        "Darren rose and I realised I couldn't with a raging erection. I stuck out my hand and he shook it. \"Thanks, Darren.\"\n\nDarren nodded. \"It feels good getting the bad guys.\" Darren looked hard at me. \"It's the Carvers you need to be worried about, now. You see that I hope?\"\n\nI nodded. \"I do. I'm taking steps.\"\n\n\"See that you do. Legally, of course,\" chuckled Darren. He nodded at Imani and left the room.\n\nAs soon as the door closed, Imani stood and so did I. We faced each other and she draped her arms over my shoulders. She pulled me closer and then kissed me warmly. Her lips felt like warm and wet cushions to me. Her tongue probed and split my lips and then danced lightly across them. She pressed her body closer to me and then lifted her arms free when I wrapped an arm around her thin waist to hold her there.\n\nI felt her hands grasp my belt buckle with purpose and her kiss grew hungrier.\n\n\"Camera...\" I murmured into her mouth. My tongue brushed hers. My cock was straining in my pants and I wanted it free and inside this woman, but I was not into providing free voyeur material for the men and women in blue.\n\n\"Off,\" growled Imani into my mouth and continued to work my buckle. She pulled the leather tip of my belt out of the buckle and pulled it back hard to get the prong free of the hole.\n\nI twisted my head, keeping my mouth latched onto Imani's, and spied the camera. The red light was off! I grinned and then reached down and grasped Imani's fine ass and squeezed. She moaned and ripped my leather belt completely free of my pants. She tossed it aside and started to work on the pants.\n\nI slapped her ass hard and felt her shudder. \"Faster,\" I ordered her.\n\nImani was driving her tongue deep into my mouth. It was invasive and probing and I could feel her hunger and desire. I felt the same way. With her height I found myself kissing upwards and felt her trying to assert her dominance. Not for long, I thought as I was already planning all the wonderful dirty and depraved things I was going to do to her. I pulled at her skirt and lifted it up over her ass to bunch around her waist. I reached down and felt the glorious naked flesh of her ass. No underwear, I grinned to myself. Easy access.\n\nImani wrenched my cock free of my boxers just as I slipped a hand around to her front and cupped her pussy. My other hand plunged between her gorgeous round ass cheeks. As one, I drove a finger deep into her pussy as my other hand drove a finger deep into her rectum. Her ass accepted my fingers like she had been waiting for it. Her pussy flooded my fingers with her hot, slippery wetness. She was immensely turned on. Her pelvis bucked and thrust against my fingers. She sucked on my lower lip and pulled it away from me hard and I heard her growl.\n\nMy pants dropped to the floor and I stepped out of them. Imani slipped her hands under the back of my boxers and then over my ass cheeks, pulling the underwear with them. A hand slipped between my ass cheeks and her finger brushed my asshole making my cock that much harder. I felt my boxers slip down past my thighs and then her other hand slid around my ass and thigh and found the hard thick shaft of my straining cock and stroked it hard, causing me to hiss in pain. Her other hand swept round and grasped my heavy testicles and tugged them down. Pain and pleasure, I knew them well. My mouth fought hers and once I had her lower lip captured, I bit down and tasted blood.\n\nShe moaned and sucked hard on my mouth. My tongue was sucked into hers and I only just managed to free it before her teeth tried to sink into it. I drove my fingers hard into her pussy and asshole in retaliation.\n\n\"Jesus,\" she moaned.\n\n\"I told you I was going to take both holes,\" I murmured and savoured the metallic taste of her blood in my mouth. I ripped my fingers free of her holes and spun her around and then bent her over the table. I wasn't gentle. I grabbed at her arms and savagely pulled them back behind her with one hand.\n\n\"My safe word is 'buttercup',\" she moaned as she thrust her ass up higher.\n\nI froze. \"Are you using it?\"\n\n\"Fuck no, don't stop, you dick,\" she said and thrust her ass toward me.\n\nI only had a brief moment to enjoy the view of her protruding inner labia and pearled clitoris, accented by her glistening inner pink flesh, surrounded gloriously by her dark, almost black, pussy lips before I drove my cock deep into her pussy. Her pussy was tight but wonderfully self-lubricated and I slid all the way in unimpeded until I was jarred to a stop by my own pelvis. I thudded against her and watched her firm and tone ass ripple with the impact. Her ass cheeks were these alluring globes of firm and succulent flesh. The hot, wet length of her vagina gripped and squeezed me, and my pleasure increased. I adored the feeling of being completely inside a woman in her most sacred place. I was inside and never leaving. I looked down and admired the view. The skin around her puckered asshole was almost black and as I bottomed out her asshole relaxed as she fully accepted and welcomed me, and it opened slightly.\n\nI wet my thumb in mouth and drove in into her asshole.\n\nImani merely moaned. She had expected it and wanted it.\n\nImani pushed her ass back at me.\n\nI pulled back my cock and watched it emerge glistening with her juices; her pussy lips stretched out with it; grasping me and refusing to let go. I growled and drove in hard, thrusting my thumb in her ass with the motion of my cock. I released her straining arms and delivered a loud retort to her ass cheek.\n\nI was lost in the visuals in front of me. I was captivated by the view of my cock and thumb disappearing into this thin, beautiful black woman. Her chocolate skin was flawless, and I wanted to bite off pieces of her and swallow them. The sensations running up my cock were of pure carnal pleasure. I could feel my cum churning and building inside me and I wanted nothing more than to baste this gorgeous sexual creature with it.\n\n\"You're my fucking cunt, you bitch,\" I hissed through my pleasure. Forming words was hard.\n\n\"Fuck you,\" she replied between gasps and pushed back at me.\n\nI carefully let my own spit fall from my mouth, and it landed on my thumb in her ass. I saw my spit was tinged red and didn't know if it was my blood or hers. I lifted my index finger and slid it inside her ass alongside my thumb. She moaned and I watched her asshole stretch and easily accommodate me.\n\n\"Fuck,\" I moaned as my pleasure went up a level. \"I want to fist that ass...\"\n\n\"Later,\" she moaned. \"Just fuck me... harder... fuck me harder, you fucking piece of shit...\"\n\nI growled and thrust harder. Her ass was rippling, and I was more than aroused. I added another finger to her ass and pushed them into her, hard.\n\nJust then the door to the interrogation room opened and Imani and I froze. Shanti slipped inside and closed the door. She turned to us and I could see the excitement and lust in her eyes. Shanti's eyes locked on my fingers deep in Imani's ass. My cock was halfway into her pussy and gleaming.\n\nShanti looked at me and I saw the hunger there. \"Let me watch,\" she pleaded.\n\nImani chuckled. \"Of course, love. Anything for you, you know that.\"\n\nI wasn't so sure. \"Um, Shanti? I thought you said no buddyguard stuff? Seriously, what the fuck?\"\n\nShe growled at me. \"I know. It's too late now. I can't... just... please?\"\n\nShanti kept staring at me and I saw her need and finally I nodded. I was more than excited being inside Imani. I would agree to anything at that point and seeing Shanti had my arousal climbing the walls. Her brown Indian skin, her dark eyes, thick dark lips, her protruding wonderful nose, and her bulging muscles had me screaming for release.\n\nShanti licked her lips. \"Fuck her, Peter.\"\n\nI liked hearing her say my name and I nodded and resumed my pace. I had never had an audience before and it kind of thrilled me. That it was Shanti watching seemed perfect to me.\n\n\"Make her suck your dick,\" she asked.\n\nI didn't hesitate. As soon as she said it, I wanted it too, and I would do anything for Shanti right now. I remembered all too well just how she had taken charge of the situation with Amanda. She had been so firm and calmly in control. I pulled my cock free and slipped my fingers from Imani's ass. \"Suck my cock!\" I ordered Imani.\n\nI saw the look of surprise on Imani's face as she looked back at me and I saw the lust along with it. She got off the table dropped to her knees and without using her hands she had my entire length inside her mouth and throat. She gagged, but refused to give up. She pulled back and then sucked me back in. Her pussy juices coated her lips and gave her lip gloss an extra shine.\n\n\"Taste your cunt on his cock?\" asked Shanti.\n\nImani nodded with my cock still balls deep in her throat.\n\n\"I know how good that tastes. Make her lick your hand, the one from her ass,\" ordered Shanti.\n\nI looked at her. Shanti was aroused. \"Play with yourself, Shanti,\" I ordered her.\n\nShanti snapped her eyes to me.\n\n\"Play with yourself, now!\" I ordered again. \"Show me your pussy. Show me how wet it is.\"\n\nShanti grappled with her tactical pants and unsnapped the wide plastic clip from the front. She was working the zipper when I held my hand up in front of Imani.\n\n\"This hand was in your ass. Deep. Do you want to suck my fingers?\"\n\nImani nodded.\n\n\"Then suck me better. I want to see tears streaming down your face. You aren't even trying,\" I admonished her. Imani picked up the pace. Her tongue extended and lavished my testicles as the head of my cock lodged in her throat. She gagged hard and I grabbed the back of her head and pressed her harder against me. She gagged harder, her mouth gaping, and I saw her tears form. I released her head and she pulled back but only enough to breathe heavily through her nose.\n\n\"Bitch!\" barked Shanti. \"Keep sucking.\"\n\nImani drove her head back down. I looked over and saw Shanti had taken one of the seats and had her knees pulled up with her heels under her ass. She had one hand on her hairy pussy and the other was rubbing her asshole. Her bush was magnificent. So wild and crazy. I wanted to rub my face all over it.\n\nI groaned. I wasn't going to last long. The air in the room smelled like these two women: ass and pussy. I breathed it in deep. Imani was gagging hard and spit ran from her mouth in streams. I scooped some up with the hand that had been in Imani's ass and reached over to Shanti with it.\n\n\"Lube yourself with this,\" I ordered. Shanti wiped her hand across mine and spread the gooey spit over her asshole and across her pussy. \"Good girl,\" I said to her and saw the pleased look that crossed her face. \"You are beautiful, Shanti. So gorgeous. Look at your pussy and ass. Perfection. Show me just how good you can cum for me. Cum, my gorgeous bodyguard, cum for me. Now!\"\n\nOn cue, Shanti came. Tears streaked down her face and her eyes were squeezed shut. When her orgasm hit, her eyes shot open. I felt the volume of my cum reach critical mass and I pulled my cock from Imani's eager mouth, dragging it across her teeth. I turned my body toward Shanti and aimed my cock at her.\n\n\"Yours!\" I managed to grunt and blasted my cum from my cock. My first rope shot with intent and landed right on Shanti's pussy. I was pleased with that. Perfect aim! Her hand was circling her clit hard and suddenly my added cum lubricated it and sent Shanti into a second orgasm or extended the first. It was hard to tell. I moved forward with my hips thrust forward and shot a second rope of cum that fell short onto the floor. I lined up my cock, bent at the knees, and drove it into Shanti's pussy, just as I ejaculated again. This time inside Shanti. She was so tight.\n\nShe seemed to be in a continuous orgasm and the feel of my cock inside her and jerking with my own orgasm had her gasping. She was staring hard as my cock thrust and thrust inside her. I was enjoying the feeling of her pussy squeezing me relentlessly. So tight. My orgasm faded and I pulled out feeling the walls of her vagina caressing me. Suddenly Imani was there and had my cock back in her mouth and she sucked hard. Her tongue swirled on my cockhead as she tried to tease more cum free.\n\n\"Stop!\" I ordered as the pleasure was too much, and she removed her mouth. I spied my spent cum on the floor of the room and I pointed at it. \"Eat!\"\n\nShe fell to her hands and knees and vacuumed up the spilled cum. I watched in awe. I didn't think she would do it. She looked up hungry and I pointed at Shanti's pussy.\n\nShanti smiled. \"Eat his cum, cunt, and clean me up!\" she barked.\n\nImani dove in with a laugh, and I was awestruck by her enthusiasm. Imani lapped at Shanti's entire groin, from asshole to clit. She vacuumed up my cum and sucked what she could from her vagina. I was trying to figure everything out. Imani's a domme. So is Shanti, apparently. Fuck, so am I, I thought. Or domineering. One of the two...\n\n\"Okay, good enough,\" said Shanti. \"Come here.\"\n\nImani rose until her lips were inches from Shanti's.\n\n\"You may kiss me,\" she said quietly.\n\nImani leaned forward and gave Shanti a tender kiss. Shanti was looking at me, looking for a reaction or permission. I smiled at her and she closed her eyes and relaxed. They kissed for a long time. I watched and felt my limp cock start to stir.\n\n\"Can you taste, my cum?\" I asked Shanti. \"Do you like it?\"\n\nShe nodded.\n\n\"Last time, you wiped it off, why?\"\n\nShe broke her kiss with Imani who tried to follow her mouth. Shanti pressed a firm hand across her face and stopped her, pushing her back. \"I dunno.\"\n\n\"But now? What's changed?\"\n\nShanti looked at Imani, her face held in her grip. \"Everything.\"\n\n* * *\n\nImani took me home in her Lexus. I hadn't been in a classy car for a long time and would have enjoyed the ride more if I wasn't stuck in the backseat. Shanti was up front and doing her usual observation things. The sun was bright, but I felt my exhaustion consume me. I lay back and closed my eyes.\n\nI woke when Imani pulled up in front of my condo. Shanti was already outside the car and was looking around. I wiped at my eyes and drew my hand down my haggard face. I was wiped out. Too much had happened that was messing with my head. Plus, the long hours at the police station had me up all night. I'm not one of those people who do well with a lack of sleep.\n\nI looked at the rear-view mirror and saw Imani looking back at me. She was gorgeous and she smiled at me. Her broad smile softened her face and made her irresistible.\n\n\"You really are beautiful,\" I said.\n\nImani nodded at me. \"I know.\"\n\n\"Thanks for today. You really stepped up for me.\"\n\n\"I'm your lawyer. It's my job.\"\n\nI nodded. \"You're good.\"\n\n\"Yes, I am.\"\n\nI could see the sincerity in her eyes. \"That was strange in the interrogation room. What's going on?\"\n\nImani grinned at me and knew what I was referring to. \"Wonderful things. Shanti has never been with a man. Sexually I mean. She vowed never to. She's been the stereotypical dyke and a hardcore one, at that. She has fucked a lot of women. Never a man, until you. Think about that. She spread those legs for you. Be gentle with her, Peter. She's vulnerable right now. Piss her off and she just might hurt you. Physically. Permanently. You don't know who you're dealing with.\"\n\nI watched Shanti go into the lobby and start looking around. \"I don't plan on it. Hey, can we use the word dyke? Won't that offend someone?\"\n\nImani shook her head. \"Depends. It's been reclaimed by the LGBTQ community. Some still consider it homophobic. Depends on the context it's used, I guess. Shanti uses it and has heard it her entire life and she's had a hard life. Surrounded by military guys. She thinks she's ugly. I think she's been told that so many times in her life she truly believes it. So, she's played the hard ass bitch woman in relationships. You know the type. The dyke who swears and wears men's clothes and has her hair cut short. She dominates all the women in her life. Including me.\"\n\nHer last words were said softly, and I looked at her reflection. She seemed amused. \"Yeah, about that? Nothing is making sense to me.\"\n\nShe sighed. \"It's complicated and neither do I, frankly. Shanti and I go way back. Back to London and Paris and some other places. We've always connected. Spiritually, you might say. I control the men in my life, but I've always needed someone to take charge of me in private. Let my hair down. Indulge my fantasies. Shanti did that for me. I would never have guessed in a million years that she has wanted a strong man in her life. She's had so many to choose from in the service. But she never did. She said she found them lacking.\"\n\n\"And now she's fucking me. Wait? Did I take her virginity?\"\n\nI saw the sad look that crossed Imani's face. \"No. I don't think so.\"\n\nI digested that and looked up when Shanti tapped the door window. She glared in at me. \"Are you getting out anytime soon?\"\n\nI looked at Imani. \"Thank you. I'm so glad Amber sent you my way.\"\n\nImani looked away. \"Anytime. Get out. I have things to do. Keep safe. Follow Shanti's orders. And get some sleep. Shower too, you smell.\"\n\n\"How about a goodbye smooch?\"\n\n\"Just fucking get out,\" she sighed.\n\n* * *\n\nI admit that I was afraid I would see the mess that we left in my condo. I didn't think I could handle seeing where Amanda had been so close to death. My feet felt heavy and I struggled to keep my head clear. I was in a fog and I noticed that Shanti was kind of supporting me a little as we walked down the hallway on my floor.\n\nI glared at the Carver door as we passed it. \"Any chance you could just go in there and shoot them?\"\n\nShanti said nothing and steered me to my door. She produced a key card, and, in a moment, we walked in. My eyes went straight to where Amanda had been. The place was cleaned up.\n\n\"I cleaned up,\" said Shanti and pulled her Glock free and put it in the drawer of the table by the door.\n\n\"Thank you,\" I said. I was exhausted and hungry. It was two in the afternoon and the sun was far too bright for my internal clock. I staggered to the kitchen.\n\n\"Where are you going? You need to shower and sleep.\"\n\n\"Must feed woman. Ugga ugga...\" I intoned, projecting my inner neanderthal.\n\n\"No. You need to sleep.\"\n\n\"No. I don't. Besides I need to feed you. It's my only job. Keep you fit and healthy.\"\n\nI staggered when she pulled me around. \"That's bullshit.\"\n\nI looked down at her and was lost in her stern fierce expression.\n\n\"Stop staring at me like that!\"\n\n\"Why?\"\n\n\"I don't like it! That's why!\"\n\n\"Cause you think I don't mean it. I do. Now let me go. Must cook meat for womb man...\"\n\nShe sighed and let me go. I turned and entered my favourite place: the kitchen.\n\nI pulled out chicken from the fridge and sundried tomatoes and cream and soon had a bunch of things cooking. Shanti sat across from me and watched me. She seemed peaceful.\n\n\"I'm sorry about Amanda,\" she said.\n\n\"Yeah, me too. I should have seen that coming. Warned her,\" I said and flipped the browned chicken breasts in the pan.\n\n\"I'm the one trained for this. I didn't think they would act this fast.\"\n\nI removed the chicken and added garlic and mushrooms to the frying pan. \"Imani told me about your man at the hospital. He saved Amanda's life.\"\n\n\"Yeah, that's Brad. He owed me a favour. I called it in. He'll stay with her until she's safe here. Police chief has added a couple of cops, too. She's safe. They already have her statement. The Carvers should leave her alone now.\"\n\n\"Did she tell you what happened?\"\n\n\"She told Imani and Imani told me. She was at a function, dancing or some shit. She said she had a drink and then she remembers nothing other than fragments. She was roofied then, I think. They steered her out, brought her to the park across from you, and then had a little fun. She remembers being groped and then suddenly euphoria. She woke lying in the park. Somehow, she recognised where she was and staggered to the only person she trusted: You. I'm impressed with her. She fought off the roofie and a drug overdose to get inside your lobby AND she somehow managed to buzz you. Remarkable lady.\"",
        "I had stopped cooking listening to the tale. My throat was constricted, and I found it hard to breathe. I kept my face away from Shanti. I had never felt emotions this strong before. I felt helpless and angry and furious and I was ready to kill every single fucking Carver there was. Then I thought about Dana and her idiotic innocence surrounded by so much hate and evil.\n\n\"You were pretty amazing, too, Peter. You did everything right.\"\n\nI found my voice. \"That was all you. I was lost... staring at her and not knowing what to do...\"\n\nI jumped when her hand fell on my lower back. She had snuck up on me again. She rubbed it and I felt safe. \"It takes years of training to react properly in situations like that. Knowing what to do allows you to focus and do the right thing despite your heart screaming at you. I knew what to do. You? You've never seen anything like it. It can be overwhelming.\"\n\nI poured chicken stock into the frying pan and deglazed it. \"The worst part was sitting in that police station knowing nothing. I feared the worse. I imagined her dead... and...\"\n\nShanti turned me around and held me. It was ludicrous. Her head was right below my chin and she was the one comforting me. I rested my chin on her head.\n\n\"You're the perfect woman,\" I said. \"Short with a flat head. Perfect for blow jobs and a place to put my beer.\"\n\n\"Fuck I hate you,\" she said into my chest.\n\n\"Yes, but my cooking! That's worth every moment!\"\n\n\"I liked that in the police station,\" she said when it was clear she wasn't letting go of me.\n\n\"Me too,\" I said and rubbed the strong hard muscles on her back. It was like rubbing a stone. Why was I so attracted to her? Usually my women are small, and delicate. Soft, warm and nurturing. Imani was the exact opposite of that.\n\n\"I know I said no buddyguards but it's too late now. I don't know how to deal with that. But I can't leave now. There's too much danger.\"\n\n\"We deal with it like two human beings full of hormones and ragging adolescent desires to rub ourselves together. Like a lot. Whenever we can.\"\n\n\"So essentially your solution is to fuck like rabbits.\"\n\n\"Exactly! The perfect solution!\"\n\n\"No. We go back to a client-bodyguard relationship.\"\n\nI sighed. \"I was planning on eating your ass out tonight for a few hours. Plus, some pussy licking.\"\n\nI felt her stiffen. \"No.\"\n\nI snorted. \"I bet if I slipped a tongue in your pussy right now you would drown me.\"\n\nShe chuckled and then pulled her head off my chest. \"Probably. But it's still no.\"\n\n\"You gonna go masturbate again in your room? Use the shower nozzle again?\"\n\nHer eyes widened first in surprise and then in amusement. \"You knew that?\"\n\n\"Duh. Now let me finish supper. Or lunch. Or whatever time it is.\"\n\n\"What is it?\"\n\n\"Tuscan chicken...\"\n\n\"Jesus, I like this job.\"\n\nWe ate. It was delicious. I showered. I slept for twelve hours straight.\n\nWhen I woke up it was dark in my bedroom. When my head cleared, I realised Shanti was sleeping next to me. Under the covers.\n\nI slid over and found her naked and proceeded to do to her what I had promised. I went under the covers, pried her legs apart and went to work. It had been so long since I had eaten a hairy pussy. It was wonderful. I knew she had been awake the whole time I struggled to sneak under the covers to get at her juicy bits. She even helped me spread her legs.\n\nI was truly worried at one point she would crush my head with her amazing thighs. I bit her clit and she released me and apologised. She blew me and we lay on the bed looking up at the ceiling.\n\n\"Right,\" I said. \"That's the last time we do that. It's all professional from here on in.\"\n\n\"Correct,\" she said, while holding my hand.\n\n\"Just want to be sure of that. I still have a fantasy of you and I sparring again. This time I win for real and I tie you up and bring Imani over to take turns fucking your ass. Except she has this monstrously huge black strap on. She just ploughs you with it. Really no mercy at all.\"\n\n\"Already did that,\" she murmured and when I looked at her, I could see her grin in the dark. It really stood out against her skin.\n\n\"Thank you, Shanti. For being there for me.\"\n\n\"Did you know you were crying when you were cutting Amanda's hair and clothes? You looked like Skanda, the Hindu God of War, fierce and powerful, but with tears streaming down your face.\"\n\nI had no idea. I had felt powerless and helpless. \"No, I didn't,\" I said softly, revisiting the horror.\n\nShe nodded. \"That's what changed...\" and we went back to sleep.\n\nWe rose early and Shanti headed to my workout room. I looked in at one point and saw she had ALL my weights on the standard lift bar, and she was barely straining. I went online and ordered more weights. And bigger ones.\n\nI was only wearing a pair of blue sweatpants cut into shorts with the letters OBX printed on them. I had a long mental list of things I needed to take care of today. First was taking care of Amanda and then I had to start the Mean Girl Offensive. I had to write a statement for the police and... dammit. I needed a secretary or something... Oh wait, I have one, my Pepper Pots. But she's not. Not really. Amber always called her that because she knew I have a thing for Gwyneth Paltrow as Pepper Pots. I have a thing for her LOOKS. Not her fucking personality. My Pepper Pots works for the company. I've banged her countless times. Sadly, she's pretty vanilla.\n\nI finished cooking a massive British Breakfast for my live-in hard-on maker and called out to her using those exact words. She walked into the living room all sweaty and pumped and stared at me.\n\n\"Don't call me that. It's not nice.\"\n\n\"Fuck that, you are.\" I pulled down my shorts and proudly displayed my hard on. \"See?\"\n\n\"Take em off all the way,\" she said, and I think I might have detected hunger in her voice.\n\nGrinning, I slipped them off and threw them at her and she caught them. I did my best to helicopter my schlong and mostly succeeded. I looked at her and grinned. \"Let's see you do that!\" I boasted.\n\nThere was a knock at my door, and I saw Shanti's eye gleam. She peeked out the peephole and flung the door open. I dove behind the coach and hid.\n\n\"Hi Shanti! How are you? I heard about all the commotion last night. What happened? Is everything okay?\"\n\nThe annoying voice of Dana Carver was the last thing I needed to hear right now.\n\n\"Can I come in?\" she piped.\n\n\"Sure, Dana, why not? Come on in!\"\n\nWhat the actual fuck? I cursed, very aware of my nakedness.\n\n\"Where's Peter? Why are you holding those shorts?\" asked Dana and her voice sounded far too close to me.\n\nShanti, tell her I'm away or something... I prayed.\n\n\"He's hiding naked behind the couch...\"\n\nThat bitch!\n\nDana's squeal was far too loud. I looked up and there she was staring down at me from behind. Part of my mind noticed her glasses were gone and how much more beautiful she looked. Meanwhile I was crouched down flat on my hands and knees in a sort of foetal position. I felt exposed and vulnerable. She can see my ass...\n\n\"Oh my God!\" she gushed. \"I can see his ass! Look at it!\"\n\n\"It's a nice ass,\" laughed Shanti.\n\n\"Shanti, you are so fucking fired...\" I managed to say.\n\n\"Stand up! Stand up!\" squealed Dana. \"I wanna see it!\"\n\nI didn't rise to the bait. I was content to remain in my current position fully aware my ass was exposed. Dana was crouching down and trying to see more.\n\n\"Oh my God! I can see his asshole! And? Is that your ball sack? It's so smooth!\"\n\nI prided myself on my manscaping. No one likes a hairy ball sack. I tried to worm my way away from her. She followed me like a remora. \"Go away, Dana. This isn't funny.\" Shanti was laughing so I guess it was funny for someone.\n\n\"No, it's so fucking hot! A naked man! Let me see it? Please. Just for a moment?\"\n\n\"Will you go away if I do?\" I asked hopefully.\n\n\"Maybe?\"\n\nI sighed. There was no way out of this other than yelling and screaming and I needed Dana to trust us. I had a role for her in the future.\n\n\"Oh my God! He's gonna do it!\"\n\nI closed my eyes and stood. I could feel my erection bobbing and betraying my arousal. This was hot in a strange way. I saw a light flash through my eyelids and opened them to find Dana taking pictures of me. She was crouched down and taking a close up of my junk.\n\nI covered myself, which is hard when it's hard. And long. Wink.\n\n\"Dana! Stop that! No pictures! Delete them!\"\n\nI saw Shanti pissing herself laughing over by the stove. She was eating breakfast while watching this. Bitch.\n\nDana crept forward and grabbed for my hands. I swatted at them and backed away, but the little vixen was quick, and she wrapped one hand around my shaft and held on tight. I froze and immediately her other hand cupped my balls. Here's a good trick, you want a man to stop moving and stay perfectly still? Grab his cock and balls and just hold on.\n\n\"Dana! Let go! Stop that!\"\n\nShe had a glazed look on her face. Her eyes were locked on her own hands holding my dick. \"Wow. I'm holding it! Amanda said it was perfect for a cock and it is! It feels so hot! So hard and yet so soft! Oh my God I've never felt anything so wonderful in my life. Look how the skin slides along it!\"\n\nShe was moving her hand up and down my shaft and dammit it felt wonderful. I gazed at her and took in all the eighteen-year-old perfection of her body and I might have moaned then.\n\n\"What's that sound? Is that good?\" she asked. When I didn't reply, Shanti did.\n\n\"Yup. Means he likes it.\"\n\n\"I'm going to put it in my mouth,\" Dana said and then looked over at Shanti and grinned. \"I'm gonna put it in my mouth!\"\n\nShanti grinned at me. \"He'll like that. I think he admires you.\"\n\nDana looked hopeful at me. \"Really? This is really hot right now. I'm so excited!\"\n\nShe was continuing to stroke me and fondle my balls.\n\n\"Get on your knees,\" smirked Shanti. \"Get closer. Smell it.\"\n\nDana looked wild and overjoyed and she dropped to her knees in front of me. She leaned in and sniffed. Then she sniffed harder.\n\n\"Ooh! It smells wonderful! Exactly like a man should smell! Why don't they bottle this? Smell that?\" She took another deep sniff. I watched her nose approach my cock head and my cock spasmed a little. \"Oh! It moved! In my hand! Shanti, it moves!\"\n\nShanti was red in the face with laughter. She was holding it in, but barely. I grimaced at her and mouthed \"you fucking bitch\" at her.\n\nI should have been watching Dana.\n\n\"Woah!\" I yelled when Dana engulfed the head of my cock in her mouth. I looked down and she had me in her mouth. She was trying to stretch her lips around it and not succeeding. She pulled me toward her, and my hips may have betrayed me and helped.\n\n\"Dana, stop. You can't!\" I pleaded and realised even to me that didn't sound sincere.\n\nShe popped my cock out of her mouth and I was annoyed. I wanted it back in. \"Amanda said to keep trying. Force it in. Suck on it and lick it.\" She smacked her lips. \"It tastes way better than I thought.\" She popped me back into her mouth.\n\nI moaned and thrust a little.\n\nShe took the hint and started moving her head up and down the shaft. Then her teeth connected with my sensitive flesh. \"Argh! No teeth! Jesus!\"\n\nDana popped off my cock and looked up at me in fear. \"I'm so sorry! Sorry! Did I hurt you?\"\n\n\"No. But teeth are bad. Very bad.\" Her braces glinted at me and suddenly they looked like razor wire.\n\n\"Sorry! Amanda warned me. I'm sorry!\"\n\n\"You may as well tell her what to do,\" said Shanti.\n\nDana looked at Shanti with hope. \"Can you help me?\"\n\nShanti's eyes went round.\n\n\"Yeah, Shanti. Come and help her,\" I said. I looked at Dana's hope filled eyes. \"She's really good. She can deep throat this monster like nobody's business. All the way down.\"\n\nDana looked at Shanti with something akin to worship. \"Really? I want to see that! Amanda did it with a dildo a week ago. It was amazing to see! I wanna see it with a real cock!\"\n\nI exchanged a look with Shanti.\n\nDana meanwhile put my cock back in her mouth. She had her mouth open really wide trying to keep her teeth away from my sensitive flesh.\n\n\"Swirl your tongue around the head,\" I instructed, and she obliged.\n\nShe popped me free again and licked at her lips. \"I taste something. Slippery, too.\"\n\nShanti plopped on the coach beside us. \"That's pre-cum.\"\n\nDana's eyes lit up. \"Amanda told me about that! It's delicious! She never said it was so delicious.\"\n\nI was annoyed at that. \"She never said my cum was delicious?\"\n\n\"No.\"\n\nShanti smiled up at me and then at Dana. \"Did Amanda taste delicious, too?\" she asked.\n\n\"Oh yeah. Way better than...\" she froze when she realised what she had admitted. \"I ah....\"\n\nShanti shushed her. \"It's okay. Being attracted to women is normal for some people. People like you and me.\"\n\nDana looked nervous. \"You won't think I'm weird? Queer?\"\n\nShanti smiled and took my cock from Dana. \"No, I don't.\" Shanti buried my cock in her throat and started to give me head. Dana watched amazed. I was, too. Shanti was the best at this. No one had ever deep throated me with as complete abandon as her. It added to the pleasure. Shanti pulled my cock free and gasped \"Easy when you know how. By the way, this is the only cock I've ever had in my mouth.\"\n\nI even blinked at that. \"How is that possible?\" asked Dana.\n\n\"Lots of dildos. Same thing really, except a real cock is actually easier, I think. What did Amanda tell you?\"\n\nDana looked thoughtful and watched Shanti resume sucking of my cock. \"It's so cool to see this up close like this. Amanda said to do what you're doing. To hold the balls, too. Stroke them but always gentle, like two fresh eggs.\" She looked up at me. \"When will he cum and when will you know?\"\n\nShanti popped me free and bent my cock toward Dana. \"Suck it. You'll know by a lot of ways. Just be vigilant. No one cums right away.\" She looked up at me and I remembered blasting the back of her throat the moment she had deep throated me in the gym. \"Most of the time, anyway.\" Shanti grinned up at me and for a moment she was so stunningly beautiful. I was lost in that smile. And my orgasm snuck up on me and blasted out of me.\n\nRight into Dana's face. She panicked and fell back. My cock, free of her mouth, spewed cum and it blasted Dana in the face again. She had her hands up trying to block it, but my cum arced over her hands and splashed on her forehead and into her right eye.\n\n\"Ah! It burns!\" shrieked Dana.\n\nShanti grabbed her. \"Relax!\" Shanti leaned forward and slurped up my cum. That's hot, I thought. She licked it up and then placed her mouth over Dana's eye and held it. Dana seemed to relax a little. Shanti let go. \"Come on, let's wash your eye out, love. Cold water only! Okay? Hot water cooks that shit like eggs.\"\n\nHow did she know that?\n\nThe two women left for the bathroom. I heard Dana chattering the whole way. \"That was so awesome, Shanti! I've been cummed on! And by Peter! I can't wait to tell Amanda. She'll want to hear everything. He was so tasty! Oh my God, you ate some cum didn't you? Can I taste? Is there any left? I've always wondered what it would... Oh my God! You kissed me! Oh! I can taste it!\"\n\nI looked down at my spent cock. Why is my life so fucked up?\n\nI got dressed in track pants and resumed making breakfast. Shanti had eaten all the sausage and bacon. I fried up some eggs and toast and put it on a platter with some small plates. Shanti and Dana emerged from the bathroom and I could see Dana's eye was a little red.\n\nShe proudly showed it to me. \"That was awesome, Peter! Thank you!\"\n\nI nodded and glared at Shanti. She grinned at me and accepted the tea I made her. I pushed the French press over to Dana and said it was time and she gleefully pushed the plunger down.\n\n\"Good girl,\" I said, and she looked so proud.\n\n\"Why does it burn like that?\" asked Dana as I made our coffee.\n\nI had no idea, but Shanti answered. \"Acids and enzymes. But mostly the chlorine. It burns like pool water.\"\n\n\"Oh, I see. Wait chlorine? That's gross!\"\n\n\"And sugars,\" added Shanti with a wink. \"Makes it sweet.\"\n\n\"And how do you know all this?\" I asked her.\n\n\"I spent the better part of my adult life surrounded by full male ego syndrome. What do men talk about all the time? Their dicks. What they want to do with their dicks. Where they want to put their dicks. It never ends.\"\n\n\"Ew,\" said Dana and she accepted the mug of coffee I gave her.\n\n\"Yeah, ew. All men are the same,\" complained Shanti.\n\n\"Except Peter!\" gushed Dana. She was staring at me over her mug. \"Can I see it again? Please?\"\n\n\"No.\"\n\n\"Please?\"\n\n\"No.\"\n\n\"Please?\"\n\n\"Fuck no. Stop asking! You are never gonna see it again!\"\n\n\"Amanda says you fuck really good,\" murmured Dana.\n\n\"Jesus! Dana!\" I shouted and Shanti started roaring in laughter.\n\n'What?\" asked Dana. \"I want to! Please Peter?\"\n\n\"No!\"\n\nOf course, she pouted for the rest of breakfast. Now I couldn't stop thinking about actually fucking Dana. That would be awesome, as Dana said. Also fucking Dana would be like fucking the Carvers and I grinned to myself.\n\nShanti pointed at me. \"See that? He's decided he's gonna fuck you...\"\n\nI stared at her betrayal and then covered my ears when Dana squealed and ran around the kitchen island to jump into my arms. She squirmed and tried to kiss me and Jesus, but it felt wonderful. I had this bundle of energy in my arms with an amazing tight body and gorgeous perky tits pressed up against me. I had my hands on her ass and she was practically grinding on me.\n\n\"How's the ole peter, Peter?\" drawled Shanti.\n\nIt was hard, thank you very much, I thought. Then Dana found my hard cock with her groin and started dry humping me in earnest. I grabbed her ass and peeled her off me.\n\n\"Dana! Stop it! Right now!\"\n\nIt took a lot of coaxing and pleading but she finally relented. She sat back down and squirmed.\n\n\"Stop squirming,\" I said.\n\n\"I can't. My muffin is super tingly, and my panties are soaked.\"\n\nI paused drinking my coffee and closed my eyes against the temptation. \"Finish your coffee and then go home, please. I've had a bad couple of days.\"\n\n\"Oh, right! That's why I came over! Mum and dad won't tell me anything. What happened here last night? There was police and ambulances! I heard it was something here in your place?\"\n\nI sighed. \"It was Amanda, Dana. She's alright now! So, don't freak out. She was attacked in the park across the street. Drugged and sexually assaulted. She made it here and Shanti and I took care of her until the ambulance showed up. And the police. She's coming here to stay with me for a while.\"\n\n\"Oh my God! That's terrible! But she's coming here? That's great! I can tell her all about sucking your cock and making you cum all over me! That was awesome watching it SHOOT out like that! Pew pew!\" She made little pistol motions with her hands.\n\nShanti and I shared another look. Dana was about as sharp as a marble.\n\n\"Hey, can I come over and help take care of her? I know what she likes.\"\n\n\"Sure. Now head on home, okay? I have stuff to do with Shanti.\" I saw her make the wrong connection. \"Work stuff. Now scoot...\"\n\nDana sauntered to the door and then stopped. \"One more time? Please?\"\n\nI sighed and pulled out my cock. It was more than a little semi-hard what with Dana rubbing herself against me.\n\n\"So beautiful,\" she gushed. I put it away and she headed to the door. She stopped and looked back at us. \"She was attacked in the park? Last night?\"\n\nI nodded. \"Yeah, around two in the morning. Four guys. Cops.\"\n\n\"Cops?\" she said and looked thoughtful and then her eyes opened wide. \"Was she at a gala thing?\"\n\nI nodded and Dana held her hand up to her mouth and ran from the apartment.\n\n\"What was that?\" I asked.\n\nShanti looked thoughtful. \"I think she just put two and two together.\"",
        "\"What now?\"\n\nShe took my hand. \"Come fuck me. That was seriously hot. I'm in desperate need of relief and my toys won't cut it anymore.\"\n\n\"Anything you say, buddyguard...\"\n\n\"I have a ten-inch strap-on I've been saving for a special occasion...\"\n\n\"Did I say buddyguard? I meant Shanti, darling.\"\n\n\"Better.\"\n\n* * *\n\nAn hour later, we emerged freshly showered back into my living room. We sat on the couch and I pulled out my tablet and started working on the code to start the Mean Girl Offensive. Shanti spoke to me as I typed.\n\n\"I think you better write out a list of people you care about. Friends, relatives. Anyone that matters to you. They'll be targets.\"\n\nI barely had to think about it. \"Amber.\"\n\n\"And?\"\n\n\"That's it. Amber.\"\n\n\"Friends? Family?\"\n\nI shook my head and then tested my new code. I had friends, many had shown up after I nearly died but if I was honest with myself-which I always am-they were more colleagues. People from work and my team and the like. As for friends I should worry about? I could only think of Amber and Amanda. I frowned at the error that appeared on my tablet and opened up my source code and scanned it.\n\n\"I know you've a reputation as being a complete asshole, but you must have some friends?\"\n\nI didn't. High school had been a nightmare. I had been the geeky little quiet kid that people shunned and imagined coming in one day with a shotgun. I used to glare at them sometimes and then write in a little notepad. That always seemed to work to keep people away from me. And nicer to me.\n\nTruth was high school bored me to tears. I was reading much higher-level stuff. High school felt like grade school. I intentionally did poorly on tests to keep myself out of any limelight. I had completed an online university degree before I received my GED. Computers spoke to me. Not literally, but figuratively. They spoke my language. I could see what I needed to write, and I wrote it. Simple as that.\n\nI'm a billionaire because of this gift, although it doesn't feel like a gift. I honestly don't understand how come everybody can't do what I do. It seems so obvious to me. When most kids were trying to get laid in high school, I was writing code for people all over the world and paid quite handsomely for it.\n\n\"So just Amber?\"\n\nI nodded and then found the error in my code. I was so stupid. I corrected the syntax error and ran the compiler.\n\n\"Okay. Amber's already been taken care of. An associate of mine is guarding her.\"\n\nI looked up at that. \"How many people do you know?\"\n\n\"A lot.\"\n\nI ran my code and it performed flawlessly. I opened up some scripts I had prepared earlier and fed them the new code and ran it. \"Okay, Operation Mean Girls is started.\"\n\n\"The Mean Girl Offensive,\" corrected Shanti.\n\n\"Yeah, that too. Say, Imani said you two go way back. London, Paris and other places. How does a lawyer, even someone from EMB Cessna, know an ex-SAS operative?\"\n\n\"Says the man being targeted by an international crime syndicate and hiring me as a bodyguard...\"\n\n\"Right.\" I looked at her and she was smirking at me. I leaned over and gave her a quick kiss. Her eyes widened and then narrowed. I was starting to enjoy seeing her do that.\n\n\"You have to stop that.\"\n\n\"Why?\"\n\nShe chuffed. \"Because you are distracting me. I have a job to do and I can't when you're like that!\"\n\nI shrugged. \"So, we hire another bodyguard...\"\n\n\"Why would you do that?\"\n\n\"So I can keep kissing you when I want.\"\n\n\"You're an asshole. Anyway, I'm the best. I won't let anyone watch over you but me.\"\n\n\"And in six months? When you leave?\"\n\nShanti jerked a little. Then she frowned and her nose crinkled. I resisted the urge to kiss it. \"Three months and the time is counting down fast.\"\n\n\"Right now, we are safe in my apartment. Nothing can touch us here.\"\n\nShanti snorted and rose. She looked out the window and then pointed at the building a little way off. My condo building had an unobstructed view of the river. I had bought most of the surrounding land to ensure that. However, a quarter mile away was another condo building.\n\n\"See that building over there? I could easily take the shot from there. Easy kill.\"\n\nI looked over. The building seemed too far away for that and I said so.\n\nShe scoffed at me. \"It's only a thousand meters away. Almost anyone could make that shot. The world record is held by a Canadian sniper in Iraq. Over 3,500 metres. That's two miles.\"\n\n\"Wow,\" I said, impressed. I thought I remembered an article in McLeans Magazine about those special forces guys. They had been poorly treated by the Canadian military or something. \"What was the record before that?\"\n\n\"British record. Close to 2,500 metres.\"\n\nI looked at her. \"SAS?\"\n\nShe grinned and pointed at herself and walked away.\n\nI truly didn't believe her.\n\n* * *\n\nLater that night, I proved to myself that Shanti hadn't taken that British shot. It was some dude. I think Shanti was trying to fuck with me in small ways. I grinned. I was really liking her.\n\nI contacted Betty, my former live-in nurse, and asked her about her friend who was going to nurse Amanda. She had a lot of praise for the woman and said she would be perfect for Amanda. I asked if she could come help with Amanda, too, but she declined, saying she had a boyfriend and that I was too big of a temptation. I felt hurt. Not really, but I faked it on the phone call. I missed Betty. She had really been there for me at the lowest point of my life.\n\nThe women in my life were starting to get wise to me. I pondered moving to another country and then watched Shanti snoring in bed beside me. She slept with her mouth wide open and snored loudly. The sheets were down at her waist and I admired her tits for a while. It's strange seeing her hard muscled body with her soft B-cups kind of just perched on her chest like attachments. I admired her hawkish face, strong bones, and the corn rows of her hair. She truly was gorgeous.\n\nWe had fucked pretty awesomely before we slept. I treated her to a full body massage and had her groaning in appreciation. I was firm with my hands and kneaded all her iron-bound muscles until they relaxed like a slab of concrete relaxes in the warm summer sun. It doesn't. My massage turned into something more, due to my bringing her to a gentle orgasm as she lay on her front, by fingering her between her slightly spread legs. She rolled over and we fucked missionary. Slowly and gently. I knew Shanti liked it rough, she was built for it, but tonight I treated her like a princess, and she soaked it up. We came together, snuggled, and her snores in my left ear had me smoothly rolling off her, covering her up to her waist, and letting her sleep.\n\nAmanda would be here in two days. Her room was ready and had its own bathroom and shower. She would be comfortable here I knew. She had lived here so much over the past few years that in some ways I felt this was her place, too. I was worried about her. Worried she would blame me and hate me. It had been my fault. Everything that had happened to her was because of me.\n\nI worried about the overdose and whether she would become addicted. Shanti had snorted at me and told me to google it. I did and felt immense relief. Amanda meant a lot to me. She had always been there for me and understood me probably better than anyone. She respected my need for isolation and gave me my space. She was probably too good for me. And I had rewarded her by getting her involved with the Carvers.\n\nWhich reminded me. I opened up some new code I was writing. I did mention I worked for a software company, didn't I? Our most popular software was used in the business sector and by investment firms. It hasn't made me as much money as my other ventures, but it's a steady paycheque which makes me feel like I'm actually contributing to society, and I have a great team of people working for me. Mostly kids like me who needed a chance to break into the industry. Software engineers are rarely paid well and work in sweat shop conditions with some companies. Not mine. They're all set for life financially. Which pleases me.\n\nI worked on the new code for a couple of hours. Shanti stirred and rolled over and threw an arm and a leg over me. I put my tablet on the bedside table and turned out the lights. I shifted down until my head hit the pillow and closed my eyes. Shanti's hand reached down, still asleep, and cupped my balls. It felt nice and I fell asleep.\n\n* * *\n\nThe next day at eight-why-the-fuck-so-early, Shanti and I were escorted into a rather large boardroom at EDM Cessna's Canadian headquarters downtown. I saw Imani was there with Amber and a few other well-dressed lawyers I had never met before. There was a quiet man, sitting a little away from everyone and typing into a MacBook. There was a large conference phone in front of him.\n\nI hugged Imani and Amber and managed to steal a quick grab of each of their asses rather discretely. Shanti punched my right kidney and I stopped and took my seat. Shanti and I were sitting on one side of the massive boardroom table, and all the suits-and two skirts-sat on the other side.\n\nI swept my gaze over them. \"You'll never make me talk, I tells ya! Never!\"\n\nThe man on the laptop snorted and kept typing.\n\nImani and Amber sighed together.\n\nThe man sitting directly across from me, frowned a tiny bit and leaned forward with his hands clasped in front of him on the table. \"Mr. Chase, thank you...\"\n\n\"Peter, please. Mr. Chase was my dad.\"\n\nHe frowned deeper at the interruption. He clearly wasn't used to that. This was going to be fun. \"Mr. Chase, thank you for stopping by. We wanted to appraise you of some facts and concerns regarding the Carvers. I assure you, before we begin, your client confidentiality with Ms. Jones extends to all partners, associates and employees of EDM.\"\n\n\"How nice,\" I said.\n\n\"We will also require you sign a few non-disclosure agreements. What we have to say must remain confidential.\"\n\n\"Interesting. How about you tell me first and I decide if I want it to remain confidential?\"\n\nThe surprise on his face was worth seeing. He was a middle-aged man, looking very much like a lawyer. His hands were meticulously manicured and flawless. I had never seen hands so useless for actual work before. Everything about him screamed vanity. And he still hadn't introduced his team. They all sat there like pigeons on a park bench.\n\n\"Mr. Chase, it simply doesn't work that way.\"\n\n\"Says who?\"\n\nHis frown deepened and he looked at Imani, who smiled and shrugged. \"I tried to warn you, Mr. Parker.\"\n\n\"Mr. Parker!\" I exclaimed. \"That's who you are. So nice to meet you. I'm Peter Chase, you can call me Peter.\"\n\nAmber turned to look out the window to hide her smirk.\n\nMr. Parker seemed a little flustered now.\n\nI looked at all the other lawyers. Faceless people with no names. \"Listen, Imani asked me here today to talk about the situation with the Carvers. Here I am. I am not signing a damn thing until I know what the hell I'm here for. Save that bullshit for some other stooge.\" I looked at Shanti. \"Nyuk, nyuk, nyuk.\"\n\nShanti shook her head.\n\n\"See here, Mr. Chase, EDM is prepared to invest heavily in this situation with our resources around the globe. NDAs are standard practice in cases like these...\"\n\n\"Case like what?\" I interrupted him.\n\n\"Cases like yours. Dealing with the Carvers and their...\"\n\n\"Their what?\"\n\n\"Mr. Chase, please...\"\n\n\"Please, what?\"\n\n\"Mr. Chase! Enough of the childish behaviour!\"\n\nI looked down at the man on the laptop. I could see the corners of his mouth were curled up. I looked at him closer and he felt me watching him. He looked up at me and I smiled.\n\nI stood up and went over and sat near him and looked back at the others. \"Imani, Shanti and Amber. You stay. The rest? Sashay away...\" I thought it sounded like RuPaul, that was my best attempt.\n\nMr. Parker stood looking flustered and angry. \"Mr. Chase!\"\n\nThe man on the laptop smiled at me and shook my hand. \"Hi, Peter. I'm Phil Monday, the managing partner here at EDM in Canada. Thanks for stopping by. We have a few things to discuss. Bill? You can take your team and leave. We'll talk later.\"\n\nMr. Parker looked deflated, nodded, and ushered the suits out of the room. Imani, Amber and Shanti joined us at our end of the table.\n\n\"Why the charade?\" I asked.\n\nHe shrugged. \"I find it separates the chaff from the wheat. We get so many posers here. All looking for judicial financial rewards. Litigation, money, revenge, all that shit. I did warn Bill it wasn't necessary this time. Imani has explained everything to me in detail, and I looked into you. You come across as an asshole, but you actually are quite the philanthropist, aren't you?\"\n\nI looked at Shanti. \"A philanthropist is a person who likes to promote the welfare of others.\" She blinked at me. \"No need to be embarrassed if you didn't know what the word meant.\"\n\nShanti punched me right where my rib cage ended on my left side. It fucking hurt.\n\n\"Ouch!\"\n\n\"And Imani warned me about your flippancy,\" he chuckled.\n\nI rubbed my side. \"Okay, shoot. What's going on?\"\n\nHe looked at his watch. \"Almost time. The International Criminal Court, the ICC, will be dialling in soon. I wanted to quickly bring you up to speed before they do.\"\n\nI leaned back and so did he. He reached out and lowered his laptop screen. He wore a nice suit, not too expensive, but tasteful. His hands were rough, a nail was split, and they looked like a man who worked with his hands. He saw me looking at them.\n\n\"I own a horse farm outside of the city.\"\n\n\"Horse farm?\"\n\n\"Yes, my wife is a veterinarian and breeds Shire horses.\"\n\n\"Shire?\"\n\nIt was Shanti that answered. \"The Shire is a British breed. A draught horse. Kind of like the Budweiser Clydesdales.\" I looked at her and saw the glint in her eye. She wouldn't forgive me trying to embarrass her anytime soon.\n\nPhil looked pleased at Shanti's knowledge. \"Yes, exactly. Owning a horse farm means lots of chores. Our three strapping boys help out, but it's a lot of work. But we digress, we aren't here to talk about me. We are here to talk about the Carvers.\n\n\"Before the ICC calls in, I want to be sure you understand everything that is happening. There's a lot you don't know and after speaking with Imani I thought it best you be brought into the fold, as it were. First you need to know that there is a large international effort to bring down the crime organisation that the Carvers are involved with. They started out as lawyers with them, defending the scum here in Canada, but they have branched out significantly and have become larger players. You've decided to kick that wasp nest and you've already seen the price. You nearly died from a horrific beating and your friend Amanda almost lost hers.\"\n\nI didn't need the reminder.\n\n\"I won't go into too much detail about what the ICC is doing, but they are very interested in the Carvers. Mostly because they believe the Carvers can lead to other convictions much higher up in the organisation. When Imani told me about you and what had been happening, I looked into you. There's not a lot there about you. And I found that interesting. In time, I recognised it was what I wasn't seeing that said the most about you. You're a very private person. A rough childhood. Losing your parents as a teenager. Abuse at school. All the typical shit that every angry teenager wants to have to justify being angry at society. But not you. It looked like you withdrew from society, but in actual fact you didn't. Not really. What you couldn't hide were all the people who came in contact with you over the years. Every single one of them has benefitted somehow. Bursaries, windfalls, job interviews, surgeries, the list goes on. I wish I had met you early on in life. Every life that touched yours walked away better for it.\"\n\nAmber snorted.\n\nPhil smiled at that and nodded. \"And the women in your life, too. Although it appears you leave them somewhat wanting.\"\n\nShanti murmured under her breath, but we all heard her. \"You don't know the half of it.\"\n\nPhil laughed. \"But that is neither here nor there. The concern, Peter, is based on what I've seen of you, you also have a very vindicative streak. You go for the jugular of those who cross you. Never physical harm, more of a financial one. Suddenly people lose stocks, or investments, or their businesses and houses. Bank accounts disappear. It's all very strange. But you're very good. Nothing, and I mean nothing comes back on you. Did you know the ICC has started a file on you? Like me, they couldn't see you in any of this. But they could see that anyone who came in contact with you suffered financially.\"\n\nI felt calm. I always knew the little things I did would come and land at my feet one day. I also knew there was no way in hell they could stick any of this to me. So, I just nodded \"Interesting,\" was all I said.\n\nOut of the corner of my eye I could see Amber staring at me.\n\nPhil smiled at me. \"Yes. I just wanted you to know that we know. Nothing more. Not a threat. Not anything really, other than to underline that we are absolutely terrified that you fuck up a worldwide effort to bring down a massive crime syndicate and cartel. We've asked you here so we can share with you what we know and hopefully get you to stop whatever it is you are planning. Before it goes too far. And hopefully assure you that we know what we are doing.\"\n\nI sat and thought about what he said. He was being honest with me and sharing details I would never have known otherwise. I was content to listen. I nodded.\n\nPhil smile got a little wider. \"Excellent. Truly, thank you. So, before the ICC calls in here's what's happening. First, we need the Carvers disbarred. Internationally. Canada has tried repeatedly and failed at every attempt. Disbarring can be difficult to achieve. In simple terms, a lawyer can be disbarred for the commission of any act involving moral turpitude, dishonesty, or corruption. This is true whether the same be committed in the course of his or her relations as an attorney or counsellor at law. It can be bloody hard to achieve when the lawyer hasn't committed a felony act, but his client has, and you need to prove the lawyer was somehow involved in that.\n\n\"There are several reasons to disbar an attorney or counsellor. His or her conviction of a felony or misdemeanour involving moral turpitude, in which case the record of conviction shall be conclusive evidence. Or wilful disobedience or violation of an order of the court requiring him or her to do or forbear an act connected with, or in the course of, his or her profession, which he or she ought in good faith to do or forbear. Then there is a violation of his or her oath as an attorney, or of his or her duties as an attorney and counsellor. If they corruptly or wilfully, and without authority, appear as attorney for a party to an action or proceeding. Lending his or her name to be used as attorney and counsellor by another person who is not an attorney and counsellor.\n\n\"For the commission of any act involving moral turpitude, dishonesty, or corruption, whether the same be committed in the course of his or her relations as an attorney or counsellor at law, or otherwise, and whether the same constitute a felony or misdemeanour or not; and if the act constitute a felony or misdemeanour, conviction thereof in a criminal proceeding shall not be a condition precedent to disbarment or suspension from practice therefor. There is misrepresentation or concealment of a material fact made in his or her application for admission or in support thereof.\"\n\nI was really starting to glaze over. His words were hypnotic, and I understood maybe half of it, but Phil was on a roll and just kept talking.\n\n\"Disbarment by a foreign court of competent jurisdiction. Practicing law with or in cooperation with a disbarred or suspended attorney, or maintaining an office for the practice of law in a room or office occupied or used in whole or in part by a disbarred or suspended attorney, or permitting a disbarred or suspended attorney to use his or her name for the practice of law, or practicing law for or on behalf of a disbarred or suspended attorney, or practicing law under any arrangement or understanding for division of fees or compensation of any kind with a disbarred or suspended attorney or with any person not a licensed attorney.",
        "\"A favourite of mine is gross incompetency in the practice of the profession or violation of the ethics of the profession. The two main reasons that I have seen in my many years are dipping into client funds. It's one of the worst things a lawyer can do. An attorney must maintain client funds in a trust account segregated from his/her own money. Apparently, some attorneys think no one will ever know if they use a little client money to bridge their cash flow issues. A lot of attorneys probably get away with it, but I have seen several situations where things did not work out the way the lawyer thought it would and they were not able to get the client funds back in their trust account before they got found out.\n\n\"The other thing I have seen happen is when a lawyer lets their practice get away from him or her and they don't take care of their business then start avoiding client inquiries because they haven't done what they are supposed to, and they don't have a good answer. Things snowball on them and clients start complaining and the lawyer sticks their head in the sand and avoids their problems and ends up getting disbarred over what was probably only a minor issue to begin with.\"\n\nImani spoke up. \"The Bailey Disbarment will likely work as a good example.\"\n\nPhil nodded. \"Are you familiar with that, Peter?\"\n\nI shook my head.\n\n\"You probably are a little. Bailey is none other than F. Lee Bailey, OJ Simpson's lawyer. In 2001, he was disbarred in the state of Florida, with reciprocal disbarment in Massachusetts in 2003. The Florida disbarment was the result of his handling of shares in a pharmaceutical company named Biochem Pharma during his representation of marijuana dealer Claude DuBoc. Bailey had transferred a large portion of DuBoc's assets into his own accounts.\n\n\"The stock, worth about $5.9 million, was supposed to be included in the forfeiture of assets that DuBoc made as part of a plea bargain. It had been held by Bailey because it would be sold immediately if it came into government possession, but it was expected to rise dramatically in value. Bailey later refused to turn it over, saying that it was payment of his legal fees and not part of DuBoc's asset forfeiture. In addition, Bailey said that the stock was collateral for loans that he had received, and so could not be sold until the loans were repaid. These arguments were rejected by the court; the stock rose in value to about $20 million, and Bailey then argued that, if he turned over the stock so that it could be sold, he was entitled to keep the difference between what it was valued at when he received it and its new, higher price. After Bailey was imprisoned for six weeks in 1996 for contempt of court, his brother raised the money that enabled Bailey to turn the stock over to the government, and he was released. He was later found guilty of seven counts of attorney misconduct by the Florida Supreme Court, and in 2001 he was disbarred. Massachusetts disbarred Bailey two years later.\"\n\n\"I see,\" I replied. Not really. I had stopped listening a long time ago. Fucking lawyers and their lawyer talk. I was stifling a yawn.\n\nImani spoke. \"Stay focused, Peter. This is kind of important. The ICC is looking for this type of activity from the Carvers. Disbarring them will lower their value to the syndicate and the cartel. And exposes their financial records. And it opens the door just enough to start being able to pressure them.\"\n\nI looked at her and my eyes were drawn to her succulent lips. They gleamed in the boardroom lights. \"I understand. But none of that has anything to do with me.\"\n\nPhil shifted in his seat and then glanced at his watch. \"That's true. But we need to be able to continue looking into their financial transactions. The ICC is fairly confident they will soon be successful. Your history of fucking with people financially...\" He held up his hand to stall my protest and continued. \"...may undo that effort. We are asking you to wait.\"\n\n\"I'm not saying I've ever done anything remotely like what you think, but how long would someone hypothetically, imagining doing something, you know, pretending, heh, before they could say, hypothetically do something.\" I thought I got that out rather well.\n\n\"Jesus, Peter,\" muttered Amber.\n\n\"That's what the ICC will speak about. This is going to be a rather boring conversation, I'm afraid. Please bear with us, is that alright?\"\n\nI nodded, groaned internally, and the phone rang.\n\nI won't bore you with the details. Thank me later. It was a lot of blah, blah, blah. In the end, I agreed to not do anything because I said I wasn't doing anything anyway. What did interest me was the ICC said they had no concrete evidence. Hypothetically speaking, say I was the kind of guy who could wreck people financially, and then was asked to not do anything because someone else was, and then you heard from them that they had nothing so far? How would you react?\n\nI shook hands with Phil after the call ended and he left with his laptop. Imani thanked me and left with Amber, and Shanti and I were escorted back outside to our car. I started up the Hyundai and pulled into traffic and got on the highway heading west to my condo.\n\nShanti looked at me for a long moment. \"Is all that true?\"\n\n\"Is what true?\" I was distracted by some asshole doing the actual speed limit in front of me. I roared past and yelled at him. \"Learn to drive, you fuck!\"\n\n\"Road rage.\"\n\n\"Canadians are polite as hell but put them behind the wheel of a car? Watch out!\"\n\n\"Is it true?\"\n\nI drove for a bit. I really did not like this exposure. Phil revealed aspects of me that no one knew about. He really pissed me off but, in the boardroom, I recognised what he was doing. He was warning me. I was absolutely on someone's radar. I had become a person of interest.\n\nWhich had me thinking about the Person of Interest television show.\n\nTwo of the women in that show were really fucking hot. First was the character Root, played by Amy Acker. And the second was Sameen Shaw, played by Sarah Shahi. Two highly fuckable women. It was also a terrific show and didn't get nearly enough attention. I should introduce Shanti to that show...\n\n\"You have that faraway look again, which I now recognise as you are thinking something dirty. I used to think you were actually thinking something useful. Now I know it's something useless. Is it true?\"\n\nI nodded my head and drove in silence.\n\n\"Why?\"\n\nI didn't answer her. It didn't matter why. I could and I did. Simple as that.\n\nI started to take my offramp when Shanti told me to take the next one.\n\n\"Why?\"\n\n\"You need to change up your routine. Drive different patterns. Don't think about it, just take odd turns. You need to get smarter. WE need to get smarter.\"\n\nMore James Bond stuff. Neat. I took the next exit and after a few attempts at random turns I headed straight home. \"What does it matter? When they know exactly where I am going?\"\n\n\"Never make it easy for them. Make them work for it.\"\n\nThat I understood. I looked at Shanti. \"I'm totally gonna fuck the Carvers. Fuck this cartel.\"\n\nShanti grinned at me. \"I know. The whole boardroom knew. What are you going to do?\"\n\n\"The same thing I do every night, Pinky. Try to take over the world.\"\n\n\"Pinky and the Brain, really?\"\n\n\"You want a Ren and Stimpy quote, instead?\"\n\n\"No.\"\n\nI pulled into my garage and parked in my spot. Shanti remained sitting and I watched her. I was waiting for her to clear the path to the elevator. \"Um, are you gonna do your James Bond stuff?\"\n\n\"James Bond stuff? What are you talking about?\"\n\n\"Scanning for the enemy, sneaking around corners, listening to doors.\"\n\n\"You really are an idiot, sometimes. No, I want to talk about Amanda. She's coming over tomorrow.\"\n\n\"Yes, I know.\"\n\n\"Imani spoke to Amber. Amber said that if there was anyone in your life you truly cared about it was her. You gonna be okay with her living with you?\"\n\n\"I'm not sure. She'll hate me. I haven't even seen her in the hospital.\"\n\n\"She knows you've opened your condo to her.\"\n\nI nodded.\n\nShanti snorted. \"Jesus, fuck. Grow a pair, will ya?\" She opened her door and got out and checked out the area. I watched her and thought about Amanda. And Shanti. After a moment, I added Dana to the list.\n\nI needed to get out. Hit a bar or something. When I mentioned this to Shanti, she grinned and called up Imani. We suddenly we were all going out on a date that evening.\n\n* * *\n\nI knew my city fairly well. I also knew the industrial area fairly well. What I never imagined was that there was a massive sex club at the far end of the industrial area. A very non-descript warehouse, with a side building sprouting three floors, that offered anything you could imagine.\n\nI was truly pissed I had never known about this place. I walked in with Imani and Shanti, both of them dressed to the nines and hanging off my arms and felt blessed.\n\nI was genuinely surprised when Shanti agreed to coming here. She simply said we couldn't let the Carvers force me into being a hermit. And, she added, no one knew about this place other than those in the know.\n\nThank goodness we were with Imani. With her with us we waltzed right in. We were processed in a receiving room, asked a bunch of questions, and soon we had white wristbands indicating we weren't looking for a hook up, and we sported little blue LED lights that signified we were Doms.\n\nThat generated stares when one man and two gorgeous women walk in arm-in-arm who are all Doms. Walking into the main warehouse was almost overwhelming. The whole floor was one big party. A DJ was rattling my teeth with a heavy sultry bass beat, lights spun and flashed all the colours of the rainbow, bars crowded with thirsty patrons served alcohol on the sides, and the entire floor was covered in bodies in various states of clothing undulated like ripples in a pond.\n\nI immediately spotted some dude getting blown by two women. Over at a small waist high table a woman was getting seriously fucked by some skinny dude. People were groping each other and dry humping all over the place. I smelled sweat, alcohol, pussy and probably spunk. I grimaced. This was erotic but so far over the top I was mostly disgusted.\n\nAnd I had a massive erection already. So did almost all the men I could see. Some clearly were exposed and happy about it. This was a massive sex club. I had never heard of the like.\n\nI had to lean into Imani's ear to get her to hear me. \"What the fuck is this place? This is insane!\"\n\nImani laughed at me and shouted back. \"One day I'll bring you down to Virginia Beach. There's an even better club run there by a good friend of mine!\" She grabbed my hand and I grabbed Shanti's and Imani pulled us through the mob to a set of broad steps leading upstairs to the second level of the side building.\n\nWe pushed through a double set of doors and when they closed the noise dropped to an almost normal level.\n\n\"Oh, thank God,\" I said and looked around. The second level was really just the office space built next to the main warehouse. Except the d\u00e9cor was decadent. A cute girl, about nineteen I figured, was sitting behind an elaborate desk with a computer screen in front of her. She had no top on and her breasts were glorious orbs of flesh with prominent, pierced nipples. Behind her was a large TV monitor with a layout of the second and third floors on it. The rooms were either green or red.\n\nImani approached the desk and Shanti and I went with her. \"Giselle! How are you?\" asked Imani.\n\n\"Mistress! So good to see you! What's your pleasure tonight?\" Giselle asked and stood.\n\nMy eyes went to her perfectly shaved pussy. She had a heart tattooed right over her pubic bone, with the bottom of the heart turning into an arrow pointing down. I now knew the way to her heart and wanted to test my theory.\n\nGiselle saw Shanti and squealed. \"Mistress! It's been so long!\"\n\nShanti nodded at her and looked awkwardly at me for a moment.\n\nImani came around the desk and hugged Giselle. Their height difference had Giselle's head in her small bosom. As I watched she slipped a finger through Giselle's pussy lips and then sucked her finger. \"Yum. Still delicious, baby.\"\n\nGiselle smiled up at her.\n\n\"I need my room, please. All night.\"\n\n\"Green or red?\"\n\n\"Red.\"\n\nGiselle looked disappointed and bent over the keyboard and started typing. I stood on my tiptoes and tried to get a better view of her ass. She was thin and her ass looked lovely. I righted myself when she looked up and grinned at me.\n\n\"Hi!\" she said.\n\n\"Hi, yourself. Peter Chase.\"\n\n\"Giselle. Nice to meet you. Imani, is he with you?\"\n\n\"Yes, dear. And Shanti.\"\n\nI saw the subtle look of surprise on Giselle's face. \"With Shanti?\"\n\n\"Yes, dear.\"\n\n\"Okay, wow.\" She typed a few more things and then stood and selected three plastic key cards and swiped them through an encoding machine. She handed us each one. \"Is your brother joining you?\" she asked Imani and Imani shook her head. \"Okay, have fun, you guys. I'm off in an hour, Imani, in case you need a good sub...\" That's when she noticed we all wore blue LED lights. \"Oh, wow. Three doms... Seriously, Imani, Shanti, please?\"\n\n\"Sorry, hon. Not tonight. This is a special night.\"\n\nGiselle looked at all of us again and bit her lower lip. I could see she was sexually aroused. Her eyes were dilated, and her breasts were lifting and falling. I really wanted to touch them. \"Please, mistress?\"\n\n\"Sorry.\"\n\nShe looked crestfallen but nodded meekly and sat back down with a thump. I was mesmerised by the jiggle of her breasts until Shanti pulled me away.\n\n\"Great,\" muttered Shanti.\n\n\"What's wrong?\" I asked as we followed Imani down the corridor. Along the walls were steel doors leading into what I assumed were the rooms displayed on the screen.\n\n\"Giselle will talk. Everyone will know I'm heading into a room with a man.\"\n\n\"What's wrong with that?\"\n\n\"Nothing, keep walking.\"\n\nI kept my mouth shut. Imani led us up another set of stairs and we entered a floor similar to the one we left. The carpet looked better and walls were tastefully decorated with prints of famous artwork. I sensed we were in the VIP section of the club.\n\nAs we passed a door on our right, it opened and I saw a woman standing there, looking startled to see us. She wore leathers, a mask, and carried a cat o' nine tails. She also wore a strap-on penis. Looking past her, I saw a man on all fours with a gag in his mouth. He had what looked like a horse tail sticking out of his ass. The woman closed the door and walked toward reception, her strap-on waggling back and forth.\n\nWe reached our room in the back corner and Imani keyed the door. We walked in and I saw what looked like a boudoir. Red lighting, a massive canopy bed, red drapes covered the windows, and in the corner, next to a stocked bar, was a massive hot tub with steam rising from it.\n\nImani turned to us. \"Welcome! Ready to have fun?\"\n\nI was more than ready. I was born ready. My cock was starting to hurt in my pants. But... I turned to Shanti.\n\n\"What's going on with you?\"\n\n\"Nothing,\" was her sullen reply.\n\n\"Do I need to spank you?\"\n\nShanti snapped her head toward me and glowered. \"That's not ever going to happen.\"\n\n\"Imani liked it.\"\n\n\"I'm not Imani.\"\n\n\"Seriously, there's something up. All this I hate men and I'm a dyke stuff? It's getting old. You clearly like men and women.\"\n\nImani sidled up to me and started unbuttoning my shirt. \"It's not that simple, Peter.\"\n\n\"Sure it is. Shanti, do you like women? Sexy stuff, I mean.\"\n\n\"Of course I do.\"\n\n\"And do you like men?\"\n\n\"No.\"\n\n\"What? Of course you do!\"\n\nShanti growled. \"No, I don't. You are the exception.\"\n\nI looked at Imani and she shrugged. \"It's true. Shanti has a reputation as being a hard over dyke. A harsh word but oddly fitting for her. Her hooking up with you? Its scandalous. It would be like you suddenly craving dick. In fact, it's almost exactly the same.\"\n\nI looked at Shanti and waited until she looked up at me. I looked into her eyes and then nodded. \"Yeah, she's lying. She loves the dick.\"\n\nShanti's eyes flashed.\n\n\"Shanti, you are bi. Admit it. Get past it.\"\n\nShe turned away and went to the bar. She grabbed the bottle of Macallan and poured a full glass of it. She tilted it back and it disappeared down her throat. \"Can we not talk about this?\"\n\nImani had my shirt off and was working on my belt. I shuffled over to Shanti, making Imani angry, and stood next to her. Imani crouched down and started to pull my belt free. Why do women do that? The belt stays in the loops, but every woman who ever undid my pants pulls the belt free. Life's little mysteries.\n\n\"Shanti, I think you've hidden yourself off from men. Something happened to you. Something that turned you off them. But that's not true is it? You aren't turned off. You just ran away.\"\n\nShanti refilled her glass. I was hoping she would pour me one, but no such luck for me. \"If I tell you will you shut the fuck up about it?\"\n\nI nodded.\n\nShanti took a large gulp of scotch and turned toward me. \"After my mum passed, my da did something to me. I won't say what. It was horrible. I was so helpless. I couldn't defend myself. I vowed never to be overpowered by a man again. I started working out. Building up my strength. Turned out I really enjoyed it. I adore my form. Look at me! Fucking strong as fuck, now. My da tried it again one night, and I snapped his fucking neck and tossed him in the Thames with forty pounds of bricks zap-strapped to him. It was so easy. I thought I would be mortified. I wasn't. I felt vindicated. Stronger.\n\n\"I was asked to join the military. That or gaol. But it seemed like the logical next step for someone like me. I wanted to protect my country.\" She laughed. \"Protect my country. So na\u00efve. I was accepted and rose quickly through the ranks. Tried out for the SAS only because they did not want women in there. I said fuck em and proved them wrong. Over and over again they came at me. I beat them off. Wrong choice of words. I bested them. In time, I gained their grudging respect, but they still called me 'The Ugly Bulldog'. Never to my face. I sent many of them to the infirmary calling me that.\n\n\"Men look at me different from other women. They fear me or are repelled by me. I see it every time. Every glance. Then I noticed a lot of women didn't look at me that way. I experimented. Turns out some women are attracted to someone like me. Wanted me to assert my dominance over them. Give them pleasure. And so, I did.\" She took another gulp of scotch. \"I needed that release. The sex. And I vowed never to let another man touch me that way.\"\n\nI sucked in my breath when Imani took me in her mouth. I looked down and saw she was naked and slowly pulling me deep into her mouth with long sensual strokes. At once I was locked in my pleasure. I adore having a woman pleasure me. As soon as I escaped high school, and made my first serious money, I hired an expensive hooker for a week. I threw money at her and told her to teach me how to be a great lover. She did. She was the first woman who learned that Peter Chase won't commit.\n\nShanti looked down and watched Imani service me. I saw her lick her lips. She wasn't fooling me.\n\n\"Yeah, so wow. Great story. I believe it all, except the part about hating men. You've hated the men in your life so far, but not men in general. I think you've became so used to hearing the fucking retarded, steroid pumped, military goons, who were probably so pissed at you besting them, a five-foot woman, that they made it their mission to fuck with your head if they couldn't fuck your pussy. Mission accomplished.\"\n\n\"You know nothing.\"\n\n\"Jon Snow...\"\n\n\"What?\"\n\n\"Nothing. I know I'm right. Did you not see the men in the club downstairs gawking at you?\"\n\n\"Yeah. Like I said, I see that shit all the time.\"",
        "\"And you think they fear you or are repelled by you?\"\n\n\"Yeah.\"\n\nI laughed then and then stopped when Imani bottomed out on me. \"Jesus. Okay, listen Shanti. I have the entire length of my cock inside Imani's mouth. Her tongue is swirling around my shaft like a dynamo. My cum is flooding my cock and will soon explode into her mouth. This is amazing. I live for this, I swear. Do you think, I'm an honest fellow? Have I ever, and I mean ever, lied to you?\"\n\nShe shook her head.\n\n\"I have from day one since I met you been so completely captivated by your looks. You are stunning. A work of art. One of the most gorgeous women I have ever met. I want to fuck you ALL THE TIME. Jesus, Imani, yeah, just like that. Where was I? Right. Gorgeous. So put aside this self-pity crap and live for today and embrace who you are. Shanti, I want nothing more than to fill every hole in your beautiful, hard, muscley body, with my cum. Over and over again. Ah, Jesus, I'm not gonna last long here.\"\n\nImani pulled my cock free of her mouth and I gasped. She just fucking edged me. I was right on the brink and she stopped it. \"God-dammit, Imani. That's cruel!\"\n\nShe laughed and skipped away from my hands trying to grab her. \"Pour me a drink. I don't care what.\" Imani sidled up to Shanti and kissed her long and hard and then pulled back to stare into her eyes. \"Taste that? That's a cock that wants YOU, love. The gorgeous woman Shanti. I know your cunt is soaked right now. You love the cock. You love Peter's cock in particular. Tonight, we fuck each other's brains out, darling. Nothing is off the menu. Depraved, nasty, cum filled fun. Your own cock to fulfil your every fantasy.\n\n\"He's right you know. I've been telling you this for years! So listen to him! Finish him off and drink down his cum. You crave it. I see what he does to you. How he makes you feel. You need this. He's right there. Woman up and accept it. Or be the Ugly Bulldog dyke your entire life.\"\n\nShanti looked at me and then down to my cock. I handed Imani her gin and tonic and then stepped toward Shanti.\n\n\"That was fun when we sparred that night, remember?\" I waited until Shanti nodded. \"We fought as equals. Man and woman. I told you over and over again just how beautiful you are. We connected that night. You were a woman, a warrior, and my sexual desire. But it just wasn't that night, Shanti. You've been that person everyday I've been with you.\"\n\nShanti stepped forward into my arms and I wrapped them around her. I loved how she felt, so hard and strong. I kissed the top of her head.\n\n\"So, I want to fuck you and have Imani lick my ass and balls while I do. That'll be awesome. Can we start with that?\"\n\nShanti laughed into my chest and nodded.\n\nImani cooed as she wandered over to the bed and opened the drawer of the bedside table and reached in. \"Oh, and then me. Reverse cowboy and Shanti you can lick my clit while he fucks me.\" She pulled something out of the drawer and turned and shook it at me. \"But you, mister. Take one of these. Viagra.\"\n\n\"Viagra? I have no problems getting hard.\"\n\n\"This will keep you hard ALL night long. This is a marathon baby. Stay hydrated!\"\n\n\"It doesn't work that way.\"\n\nImani looked at the bottle in surprise. \"Really?\"\n\n\"Yeah. You'll just have to keep me hard the old-fashioned way.\"\n\nHer eyes flashed. \"Oo, that sounds fun.\" She shook her little tits at me. Nothing moved. At all. Except her shoulders.\n\nShanti looked up at me and whispered. \"Thank you for believing in me.\"\n\nI kissed her. \"No problem. Did you really kill your dad?\"\n\nShe nodded.\n\n\"I know he's an asshole, but are you really okay with that?\"\n\n\"I would bring him back just so I could do it again.\"\n\n\"Ok, wow. So glad you like me.\"\n\nShe chuckled and squeezed me a little, which for her, hurt me a little. \"Just so you know, I am going to peg you tonight.\"\n\n\"Okay.\"\n\n\"What? Really? I was only half-joking. Has anyone done that to you before?\"\n\n\"Yeah, Nurse Betty.\"\n\n\"And?\"\n\nI shrugged. \"It turned her on. That was enough for me.\" It was. I didn't enjoy it, much. She did though. She wouldn't stop bragging about popping my ass cherry.\n\n\"Kiss me. Like you did the other night.\"\n\n\"When we went slow?\"\n\n\"Yeah. I really liked that. Is that okay?\"\n\n\"I thought you liked it hard?\"\n\n\"I do, but...\"\n\n\"But what?\"\n\n\"You make me feel like a woman. I want that again.\"\n\n* * *\n\nWhat I did that night was very memorable and a little private, so I'll just gloss over it. Sorry. Tuck your cock back in or remove those fingers from your pleasure box.\n\nOkay, I'll tell you a little.\n\nOur threesome turned into a foursome when Giselle, the sneaky vixen, snuck in and joined us. I was eating out Shanti who was eating out Imani when my cock disappeared into a mouth that shouldn't be there. I smiled at her and went back to giving Shanti another orgasm.\n\nImani was pissed. So, she tied up the poor girl and whipped her.\n\nYes, she really did that.\n\nGiselle came when she was being whipped.\n\nNot whipped-whipped, but sexy whipping. Which is whipping but not very hard at all. Follow?\n\nGiselle is also a clean-up girl. She kept us all clean and fresh all night. It's like having a maid, but a maid who washes cocks, asses, and cunts. With her mouth. I seriously thought of hiring one. Or her. It was so memorable.\n\nShanti also showed us her strength. She picked poor Giselle up and hoisted her up in the air and ate her out right where her little heart tattoo pointed. I laughed my ass off until Shanti picked me up and blew me like that for a few minutes. I couldn't stop giggling. Fucking memorable.\n\nWhen I fucked Shanti, Giselle could not get enough of it. She was holding onto Imani and crying. She was so pleased for her former Dom. Yup, Giselle had been Shanti's sub for a few months.\n\nI spoke to Giselle about Shanti and made her promise to keep things quiet. She nodded in agreement and went back to licking the head of my cock every time it emerged between her beautiful tits.\n\n* * *\n\nWe staggered out of the club just as the sun was coming up. The rooms had showers and we were refreshed, just bone weary. We went our separate ways and Shanti and I rode in silence. We found a 24-hour diner and had a massive breakfast. Mine was massive. Shanti's was massive-er. We said little. Soon we were back in my car. I reached out and she took my hand.\n\n\"It's going to hurt,\" she said.\n\n\"What is?\"\n\n\"When I leave.\"\n\nI nodded. It would. \"Three months from now.\"\n\n\"Yeah, about that. I've put you back to six months.\"\n\n\"Thanks! How'd I manage that?\"\n\n\"For everything. Don't ask.\"\n\n\"Don't ask, don't tell. Got it.\"\n\nShe squirmed a little in her seat. \"Goddamn my ass hurts.\"\n\n\"Me too.\"\n\nShe laughed and held my hand to mouth and kissed the palm. My breath hitched a little and I concentrated on my driving.\n\n\"What time does Amanda arrive?\" she asked.\n\n\"Noon.\"\n\n\"Can you cuddle with me until then?\"\n\nThat was an odd request. \"I sure can. Have you ever cuddled before?\"\n\n\"Not really. Wasn't my thing. But women do it all the time, right?\"\n\n\"Yeah. It's part of the deal. A rule, I think. Fucking women means you have to cuddle after. And small talk across the pillow. Talk about your day. What your favourite colour is.\"\n\n\"Jesus,\" she said. \"I just fucked my women and kicked them out the door.\"\n\n\"A woman after my own heart,\" I chuckled.\n\nShanti glanced at me and then looked out her window.\n\nThe elevator stopped at the ground floor coming up from the garage and when the doors opened, there were the Carvers. All three of them. Dana was clearly pleased to see us. Her parents not so much. We stood there staring at each other for the longest time. The elevator doors started to close, and I stuck out my hand and stopped it.\n\n\"Get in the fucking elevator,\" I growled.\n\nBrad and Nancy glared at me and then little Dana Carver bounced around them and into the car. \"Hi Peter! Hi Shanti!\"\n\nI kept my eyes on Brad and saw Nancy push him a little. They entered the elevator and stood on the right side as far away from us as possible.\n\nI kept my eyes locked on Brad. I wanted to beat the living shit out of him right at that moment. Shanti, who was between us, how I'm not sure, put one hand behind her on my stomach and pressed. I got the message and calmed myself. Outwardly I calmed myself. Inwardly I was still furious.\n\nI kept my eyes locked on Brad. He was looking anywhere but at us.\n\n\"Hey Bradley,\" I said to him and he flinched a little. \"I have a guest coming to stay with me. Amanda Bradley. Your first name, her last name. She's coming from the hospital. She was drugged and sexually assaulted in the park across from us. Same park I nearly died in. Remember that?\"\n\nBrad said nothing. I could see the fury in his wife's eyes.\n\n\"Can you imagine someone you love being drugged and having four fat fucking cops pull out their little dicks and jerk off all over them? Then injecting them with a heroin overdose? Imagine if it happened to your daughter? Can you imagine that? How would you feel, huh? What would you do after that? Knowing Dana here was sexually assaulted. Cops grabbing her tits and pushing their dirty fingers into her cunt and ass and then jerking off on her? Then jamming some DIRTY FUCKING NEEDLE FULL OF HEROIN INTO HER FUCKING ARM? CAN YOU, YOU FILTHY FUCKING MONSTER? CAN YOU?\"\n\nEverything was red by that point. Shanti had turned and was holding me back against the elevator door. Dana was crying behind her mother, who was screaming at me. Brad was the only person I truly saw. I saw the fear and the hatred there. He was evil. I knew it before, but I saw it now.\n\nIf Shanti had not been there, I would have collapsed his skull into a paste and then started on his wife. I know that. I wish I had. I wish Shanti had not been there.\n\nI had never felt such fury in my life. And it was a righteous fury. There is nothing more intoxicating.\n\nShanti got me into my condo and calmed me down. She slapped me a couple of times. I think I went a little deranged. Not foaming at the mouth, but full red face screaming in anger.\n\nI lost my shit for a time.\n\nWhen I left high school, I did a bunch of things to correct my life. I left the foster care system and struck out on my own with money in my pocket and offshore banking accounts. Foster care for me was pleasant. They weren't mom and dad, but they tried to give me stability. In many ways, I turned out okay and that was thanks to them. I paid off their mortgage and gave them a VIP three-month European vacation. They had always talked about seeing Europe. They thought they'd won a children's hospital lottery. They passed four years ago, two weeks apart. I felt like I became an orphan all over again.\n\nI told you about my makeover, and my sex worker sex instructor. I also started running and doing all sorts of martial arts. It was painful and frustrating, but I excelled. I also took Tai Chi and studied Zen. I still do Tai Chi. It relaxes me and centres my being. Truly. No lies.\n\nShanti knew Tai Chi, and she coerced me to join her. In time, we moved together and flowed through the movements. I felt my peace return and saw our reflections in the glass. We were truly in sync and I had never achieved that before. I watched our movements and suddenly it was too much. I collapsed and Shanti held me and wiped my eyes. She kissed me softly and held me like I remember my mother holding me when I was little.\n\n\"You're gonna make a great mom,\" I said to her lying on the floor in her arms.\n\nShe said nothing but held me a little tighter. She picked me up and lay me in bed and held me until I fell asleep.\n\nShe woke me a little later. I was groggy and exhausted. She was handing me her phone and telling me Imani was on the line. I squinted at it and pushed speaker.\n\n\"Hey, Imani. What's up?\"\n\n\"Well, Shanti just told me about your mental breakdown in the elevator with the Carvers.\"\n\n\"Yeah, sorry about that. I guess I almost lost my cool there.\" A sudden image of Jim Carrey's Grinch crossed my mind.\n\n\"Yeah, well, don't do that again! Shanti says Dana was there? Screaming?\"\n\n\"Ah, yeah, maybe.\"\n\n\"Not so cool. They will sue. I guarantee it.\"\n\n\"Probably.\"\n\n\"Peter, what are we gonna do here? This is fast getting out of control. I need you staying away from them. All of them! Which means no more screwing around with Dana!\"\n\n\"That wasn't me! That was Shanti!\" I looked at Shanti accusingly and she pursed her lips and looked away. Coward, I mouthed at her.\n\n\"Just stay away!\"\n\n\"I'll try. Promise.\"\n\n\"Good. Get some sleep. You sound exhausted.\"\n\n\"I will.\"\n\nShe hung up and I flopped back on the bed. Shanti crawled up beside me and lay on my chest.\n\n\"What are you going to do?\" she asked.\n\nI thought about it. I was already doing things that no one knew about. The Carvers days were numbered. At least financially. I had tweaked things a little and was expecting to gain some significant advantage. I just need to keep my cool.\n\nI thought back on the last couple of days and suddenly something significant popped out.\n\n\"Did Giselle ask if her brother was joining us?\"\n\n\"Ah, shit,\" she muttered.\n\nI struggled to sit up and pushed Shanti off me.\n\n\"Her brother?\"\n\n\"Yes. Imani and her brother have a... relationship.\"\n\n\"Relationship like sticking his incestuous cock into her kind of relationship?\"\n\nShanti nodded.\n\n\"That is fucked up!\"\n\n\"Yes, it is. Let me explain Imani.\"\n\n\"This will be good.\"\n\n\"She's forty-two, and never married, because her and her brother love each other. Totally fucked up. I get it. Her parents and her brother were Nigerian refuges into England. She was born a couple of years later. It was a hard life for them, but better than where they came from. Growing up it was just the four of them. A very close family. Then the father was killed by a bus. Tragic. Then the mother was arrested for stealing, trying to feed her family. Then she arrested again for stealing food from the freezer of the house she cleaned. Then arrested again for stealing money somewhere. They locked her up then. Took her children away, they were only eight and six. Two Nigerian children in London. It was not good, but they managed. Her brother and her clung to each other. Depended on each other. Loved each other. It's wrong, I know, but it happened.\n\n\"Imani never forgot how her mother had been treated by the court system. She started reading law and then grew to love it. She paid for law school as a prostitute. She fucked men and women to make a better life for herself and her brother. She's managed. She was picked up by EDM foremost because she was black. She knew that but didn't care. It set her on the path she's on now. She's formidable and the world is only just starting to get to know her. She's worked some pretty intense legal battles. She always wins.\n\n\"Her brother lives in London but visits her here regularly. If you didn't know he was her brother you would say, what a happy couple. It doesn't faze her when people find out. She loves her brother and would never hide that love. In some ways, it's beautiful.\"\n\n\"And wrong on so many levels.\"\n\n\"Love is fickle but once it catches hold it doesn't let go.\"\n\nI looked at her. That didn't sound like her. \"Do you really believe that?\"\n\n\"I didn't.\" She rose and patted my chest. \"Get washed and dressed. Amanda will be here soon. Talking about love being fickle.\"\n\nI frowned.\n\n\"She loves you, you idiot.\"\n\nI knew that. I nodded.\n\nShanti sighed and left the bedroom.\n\nI finally dragged myself out of bed and showered. I tidied up my bedroom and bathroom and looked at my watch. Amanda would be here soon, and I headed to the kitchen to make a nice lunch for everyone. I opted for a simple charcuterie board and laid it out on the kitchen counter island.\n\nI checked on Amanda's bedroom and saw that Shanti had already prepped it. I stood in the doorway and she joined me. I looked down at her and put my arm around her shoulder and pulled her close.\n\n\"Thanks, Shanti. It's going to be busy here for the next little while. Full house.\"\n\n\"Yes, it will. Plus, we have to factor the live-in nurse you hired. We are going to have to explain to both of them what's happening here.\"\n\n\"You mean you and me screwing each other all the time?\"\n\nShe jabbed my ribs with an elbow. Shanti never hits lightly. I don't think she's capable of anything less. \"No, idiot. Your situation with the Carvers.\"\n\n\"Right. Well, I don't think Amanda will need the nurse long. It's just to help her transition.\"\n\n\"Transition into what?\"\n\nI shrugged. Truth was I had no idea what Amanda needed. I just wanted her near me and safe. I owed her that at least.\n\nJust then my phone buzzed, and I opened the app. Shanti pulled it down so she could see the images from the front lobby. I could see Amanda in a wheelchair being pushed by another woman. A man stood near them dressed in clothes similar to Shanti. I hit speaker and spoke.\n\n\"Hi.\"\n\n\"Oh, hi this is Madison. Madison Malkova. I have Amanda here. Is this Peter?\"\n\n\"Yes, it is. I'll buzz you in. Top floor, end of the hall.\"\n\n\"Okay, super! See you in a bit.\"\n\nI buzzed the door and watched as she one-handed the door and pushed Amanda through with the other. The man at the door watched them until they disappeared from view and left. I assumed it was Amanda's bodyguard. I selected another camera. I watched them get into the elevator and head up.\n\n\"They're here,\" I said.\n\n\"My guy should have come up with them. I'll have words with him later. I'll wait by the door.\"\n\nWe went into the living room and Shanti opened the condo door and half-stepped out in the hallway and I could see her looking down the hallway.\n\nI was exceptionally nervous. The last time I had seen Amanda she had walked out on me because I had read the texts on her phone with Dana. She had been pissed at me and she had never walked out on me before.\n\nI heard voices and Shanti looked over at me. She beckoned me with her head, and I walked over and looked out. Dana was walking down the hallway chatting up a storm. Amanda was looking terrible. I could already see the dark bruises on her face. Madison was about twenty-five, white and tanned with dark blond hair cut in a low bang that covered her eyebrows. She had a beautiful mole on her right check and baby blue eyes with thick eyelashes batted at me. She was slim and sexy. She was looking right at me and sizing me up. I found that odd with Shanti standing beside me. She normally drew the stares. When they drew closer, Amanda looked up right at me. And she smiled.\n\nI exhaled and smiled back.\n\n\"Hey, gorgeous. How are you doing?\" I crouched down to her level and studied her face. Her cheeks and orbital sockets were badly bruised. The colours went from black to orange to yellow. Someone had tried to cover it up, but the damage was too widespread. Amada saw me checking her out and her chin trembled.\n\n\"I'm a fright. Don't stare.\"\n\nI leaned in and gave her a tender kiss. I parted her lips with a light tongue and brushed them. I pulled back keeping my eyes in line with hers and close. \"You are always beautiful, my dear. Always gorgeous. Always sexy. My Amanda.\"\n\n\"Thank you,\" she whispered, and I wiped her eyes. \"I'm sorry I ran out on you.\"\n\n\"I deserved it. And more.\"\n\nShe nodded and I stood and saw Madison and Dana staring at me with a weird expression. Amanda was staring openly at Shanti and it wasn't an expression of dislike or fear. I could see she found Shanti alluring.\n\n\"Madison, welcome to my condo. Thank you for agreeing to do this. This is Shanti, my bodyguard. She was the one who arranged the bodyguard you had in the hospital. She lives with me. In fact, all of you will be.\" I saw Dana smile a little. \"Except for Dana, here.\"\n\nShe pouted.\n\nMadison looked over Shanti and then at me. \"Bodyguard?\"",
        "\"Long story. Come on in. I've fixed you a little something to eat. I'll tell you all about it.\"\n\nAmanda grinned. \"I told you, Madison. Peter is a chef. The food here is amazing!\"\n\nIn moments, Amanda was wheeled in and Madison carefully helped her out of it. Amanda walked with a slight limp and winced with some pain. She assured me she was fine and not to worry. We busied ourselves sorting everyone out. Dana went and made coffee and stole little bits off the charcuterie board. Under the wheelchair were two small carry-on bags and Madison emptied the contents in the dresser and closets of their rooms. I sat Amanda down in the sunroom and placed the charcuterie board and selected some of it for her.\n\n\"Wine?\" I offered.\n\n\"No. I can't take alcohol with my pain meds.\"\n\n\"Oh. Coffee or tea?\"\n\n\"Water would be nice.\"\n\n\"I got it,\" chirped Dana.\n\nMadison came out of her bedroom and told me she was very pleased with her accommodations.\n\n\"Of course, Madison. Make yourself at home. What's mine is yours. You should know I have the main rooms monitored with cameras. But not in the bedrooms or bathrooms. Ha! Can you imagine? So, it's, um, it's a security thing. Everything is stored locally. But, if you decide to wander around naked, I'm going to see it.\"\n\nMadison blinked her eyes in rapid succession and held a hand up between her small A-cups. \"Oh, dear! I would never do that!\"\n\nI could see Shanti walk in and roll her eyes at me. \"Okay, no worries then. Here, let Amanda enjoy her food. I'll show you around and explain the condo.\"\n\nShe nodded and Dana pushed past and handed Amanda a glass of cold water. \"Hi, Amanda. You're looking better than the other day! You're walking fine! The bruises are coming down, too. How are the ribs?\"\n\n\"Still sore. Thank you for the water.\"\n\nDana leaned in and whispered to Amanda. \"I did it! I sucked his cock!\"\n\nAmanda looked up sharply at Madison and I. \"Dana! There's a time and place for conversations like that!\"\n\nDana plunked down beside Amanda and I saw Amanda wince. \"Pfft. Its nuts over here. Sex, sex and more sex. Jesus.\"\n\nI looked at Madison and her eyes were very wide. \"It's not like that, Madison,\" I said.\n\n\"How old are you Dana?\" asked Madison.\n\n\"Eighteen and a half, why?\"\n\n\"Just checking.\"\n\nI shook my head. \"This is off to a great start. Come on, I'll show you around.\" Madison nodded and I explained the condo, the appliances, the voice activation, and had her download the condo app. We were in her bathroom, shared by two of the spare bedrooms, and I asked her what she needed to care for Amanda, and she said not much, she had what she needed. She handed me a small bag of meds she said should be refrigerated.\n\n\"How long do you figure you'll need to stay with her?\"\n\n\"Only a few more days. She's recovering quickly. As soon as you offered for her to stay with you, she started improving. She's pushing herself to get better. She's strong and coping.\"\n\n\"Okay. Stay as long as you need. If you need anything, and I mean anything, just let me know.\"\n\nMadison searched my face. \"Betty spoke to me about you.\"\n\n\"She did? What did she say?\"\n\nMadison smiled at me and I watched her little mole join it. \"That you were a nice man behind a fa\u00e7ade of bullshit.\"\n\n\"Oh. Not what I expected to hear. But that's nice.\"\n\n\"Nice? I want to be clear, I'm not like Betty.\"\n\n\"Okay.\"\n\n\"I'm here for Amanda. That's it.\"\n\n\"Okay.\"\n\n\"What is this place and why do you have a bodyguard?\"\n\n\"It's a long story and I'll share everything, once Dana leaves. You have a right to know if you are staying here. You've met Dana, the next-door neighbour. Her parents are the Carvers. They are very bad people. They were the ones behind the attempt on my life and on Amanda's. For nothing more than mouthing off to them. They are very nasty people. Shanti protects me from them.\"\n\n\"That's terrible!\"\n\n\"Yes, it is. I'm taking steps to remedy the situation, but it will take time. You'll be safe here. Shanti is very good at her job.\"\n\n\"The bodyguard at the hospital spoke a little about her. He held her in high regard.\"\n\n\"I'm not surprised.\"\n\nShe looked thoughtful. \"I saw him take out that orderly. I had no idea what was happening and thought he had just attacked him. It was sudden and violent. I'm not even sure what he did. The orderly was sudden down and out. Thank God, Amanda was asleep at the time. Then this bodyguard just looked calmly at me and said, 'This here bloke needs a little first aid' and started making calls.\n\n\"The hospital security and police showed up and it was so calm. They knew what had happened and why and they left with this guy who turned out wasn't an orderly. The bodyguard stayed and was joined by two more cops. I've never seen anything like it.\"\n\n\"Shanti knows good people.\"\n\n\"She's British like him.\"\n\n\"Yes, seems to be a lot of them around these days.\"\n\nShe looked puzzled.\n\n\"My lawyer is also British. Not a word of any of this to Dana, okay?\"\n\n\"Sure thing.\"\n\nI turned and left the bedroom and spotted Dana coming out of Amanda's bedroom. She hustled down the hall and out into the living room area. I frowned and followed. I found Dana mothering Amanda. She had Amanda's makeup bag and was pulling out coverup or lipstick or some other weird thing women use. Dana saw me and looked away quickly. Great. I'm sure she heard everything.\n\nI went into the kitchen and thought hard. This could be a problem. Dana was my little lynchpin. I needed her on Team Peter. I poured a cup of coffee and looked out to the sunroom. Dana was talking excitedly with Amanda. I saw her hold her hands apart and then giggle. Dana shot me a look and I saw her falter for a moment. Yup, she heard me speaking to Madison. Fuck.\n\n\"Hey, Dana? Can you come here a moment?\"\n\nDana looked up in fright at me.\n\n\"Like right now?\"\n\nShe spoke to Amanda for a second and then slowly got up off the couch and slowly started walking toward me.\n\n\"Faster.\"\n\nShe frowned and walked a little quicker and soon stood next to me in the kitchen looking down at the floor.\n\n\"Look at me, please,\" I asked.\n\nShe looked up and then away.\n\nI grabbed her chin and pulled it toward me. \"What's wrong?\"\n\n\"N-nothing.\"\n\n\"Did you hear Madison and I speaking?\"\n\nI saw the look of confusion cross her face and I released her chin. Whatever was bugging her it wasn't my conversation with Madison. I breathed a sigh of relief. Then it dawned on me.\n\n\"What are you plotting with Amanda?\"\n\nHer expression turned to one not unlike someone getting caught with their hand in the cookie jar. \"Nothing!\" Her demeanour changed and she thrust her shoulders back. \"Just girl talk and none of your business.\"\n\n\"Whatever you are plotting it will not happen, clear?\"\n\nShe looked at me defiantly and then spun around and marched away. She had her little fists down at her sides, with her arms straight, and stomped away. I admired her ass in her Lululemon pants. The pants filled the crack of her ass, and it looked almost naked. Jesus, she was a gorgeous girl. I sipped my coffee and adjusted my cock just as Madison walked in and caught me. She frowned and came over.\n\nI poured her a cup of coffee and watched her fix it. She took a sip, mouthed an exaggerated 'wow', and took a larger sip. She looked at me over the cup before setting it down. I waited and then said, \"Go ahead, ask. Say it.\"\n\n\"What kind of place is this? Betty warned me, but Jesus fuck. The hormones in here are off the chart. As far as I can tell you've had relations with Amanda and Shanti and Betty. And now I'm fairly sure that young, na\u00efve, eighteen-year-old has been with you, too. This is weirding me out, quite frankly.\"\n\n\"All true. Shanti made me let Dana blow me. But that's all! I refuse to do anything else!\"\n\n\"You refuse? What do you mean?\"\n\n\"It's Dana! She hounds me. Tells me she wants me to fuck her! All the time! She's out there right now plotting something with Amanda. Look at them!\"\n\nMadison looked out at the sunroom and caught Dana looking over at us and then whispering to Amanda who laughed. \"Holy shit.\"\n\n\"It's not my fault!\"\n\nMadison grinned up at me. \"No, not your fault. Course not.\" She sipped her coffee. \"What is this stuff?\"\n\n\"Kona.\"\n\n\"Oo, I've heard of that but never had it. It's wonderful.\"\n\nI smiled. Another happy woman in my kitchen. That's my happy place. \"I need to ask you, what do you like to eat? I pride myself on preparing meals that put smiles on women. It can be anything. Anything at all. Just say it and I will deliver it.\"\n\nShe looked shyly at me. She was only a little shorter than me. \"Betty said she gained ten pounds here.\"\n\n\"I also fucked ten pounds off her.\"\n\nMadison gasped and held her hand to her mouth. \"Jesus!\"\n\n\"Believe me, I only flirted with her. She was the one that instigated everything. She's a wonder. I miss her. I really connected with her.\"\n\nMadison searched my face. \"She spoke a lot about you. She loved it here and being with you. She said she had to leave because it was never going to go anywhere. She was pretty messed up emotionally.\"\n\n\"I have that way with women.\"\n\n\"She said you would be all over me.\"\n\n\"Nope.\"\n\n\"No? I'm supposed to believe that?\"\n\n\"Yes. You said no already. That you weren't that kind of girl. I totally respect that. Now, what do you want to eat?\"\n\n\"Anything?\"\n\n\"Absolutely.\"\n\nShe thought for a moment. \"Caviar? I've never had it.\"\n\nI smiled. \"I know where to get some Petrossian.\"\n\n\"I was only joking.\"\n\n\"I know, but you thought of it because you wanted to try it. Don't worry about it, but caviar is an appetizer to me. I'm talking about something you've always wanted to indulge in.\"\n\nShe thought harder. \"I'm not sure. My parents immigrated from Saint Petersburg in 1990, as soon as Gorbachev changed the world. I grew up with common Russian food. Borchst, bliny, kasha...\"\n\n\"It doesn't have to be Russian.\"\n\n\"Can I let you decide? Anything would be fine.\"\n\nI saw Shanti appear and stand nearby. I could see she wanted to speak to Madison. I nodded at Madison. \"Sure. No problem. I'll surprise you. I think Shanti needs to speak to you about security.\"\n\nMadison looked over at Shanti and then back at me. \"She's so... strong. And beautiful, at the same time.\"\n\nI saw Shanti roll her eyes. She has excellent hearing. \"She is.\"\n\nMadison nodded and went over to Shanti and they started speaking. I sat in the kitchen and nursed my coffee. I watched Shanti take her over to the table by the door and show her the Glock and mags. Madison didn't even blink at that, and soon the two of them were chatting up a storm and disappeared in the bedroom area. Madison was touching Shanti's lower back.\n\nThen I got it. Betty had sent Madison to me knowing she was a lesbian. It was her little revenge. I smiled. I missed Betty.\n\nI watched Amanda and Dana laughing out in the sunroom and felt peace descend. I truly adored my solitude, but at that moment, I cherished my full condo. I knew it couldn't last. Sooner or later, I would force them all away so I could go back to my fortress of solitude.\n\n* * *\n\nEverything went quiet for two weeks. Amanda grew stronger and Madison left after a week when she found Amanda making out with Dana. She declared her perfectly fit, mentally sound, hugged us all, kissed Shanti, and left happy, with the remains of the caviar, and weighing ten pounds heavier.\n\nDana came by most days for cooking lessons and Amanda joined in. Even Shanti learned something, and I had her fry up some eggs and she didn't do too bad. On some days, Shanti taught Dana how to work out and gain some strength and stamina after her parents refused to hire someone. I watched until Dana would start to get horny. Working out made her horny and so I stayed away after that.\n\nShanti slept with me every night and I learned everything there was about getting her to orgasm. She loved it gentle, which surprised me. She said she needed to look up into my face, as I buried myself between her legs and she wrapped them around me. I happily obliged.\n\nBut my condo was lovely and quiet. Dana and Amanda were still plotting something but hadn't hatched it yet.\n\nI worked on my new code, updated the corporation version, and sat back and waited.\n\nShanti and I had a terrific laugh one day when Dana announced her parents were getting phone calls and junk mail and porn magazines all the time. Massive amounts of it. One day she came in almost retching as she described the most horrible dog shit smell in her parent's car. Good times.\n\nOne day I caught Amanda being pleasured by Dana in her bedroom. I watched Dana's ass up in the air with her face buried between Amanda's thighs. Dana's ass and her exposed completely hairless asshole and pussy had me hard as a rock. I found Shanti, told her what I had seen, and that I needed to fuck her ass hard. She had her pants off and a tube of lube out in no time. I hadn't fucked Shanti that hard since the gym. Shanti came hard and then made fun of me for getting turned on by an eighteen-and-a-half-year-old girl. I described what I saw in detail and then finger-fucked Shanti and showed her just how wet it made her. She snorted and then made me fuck her proper.\n\nTurns out she comes equally hard with it being hard or gentle. She just comes a lot with me.\n\nFuck, I'm awesome. Or I fuck awesome. Both probably.\n\nDid I say it was too quiet?\n\n* * *\n\nWhen it happened, it happened quickly. Everything went from calm and serene to insane batshit crazy in a heartbeat. I'm not sure of everything that happened. Afterward, I had plenty of time to ponder it. Shanti blames herself, of course. She has no sense of sharing responsibility. She also cursed herself for putting the Glock by the door. In hindsight, it was a pretty stupid place to put it. She said if it had been closer to her, she could have stopped the first bullets. I don't doubt her. Never again will I doubt her.\n\nIt was late evening on a Tuesday. How's that for a start?\n\nI was sitting out on the balcony having a smoke and a toke. And a few scotches. Then my front door blew inward. Right off the hinges in a terrific blast. It landed four feet away from the frame. Then a massive bang went off and thank God I was outside on the balcony. It hurt my ears like crazy and I felt dizzy.\n\nI had covered my ears and lowered my head after the bang and when I looked up, two men wearing balaclavas burst in, walking semi-crouched and with pistols in their hands. They scanned quickly and I sat there watching them.\n\nThen they saw me and started firing. There's a strange fear that grips you when someone points a pistol at you. You can see into the barrel and you know a bullet will fly out of it and kill you. It's paralysing. I watched fingers squeeze triggers and then the glass of my condo shattered between me and them. I was moving without thinking. I dove to the side and something stung my right thigh. And it burned. And then it hurt like nothing I had ever felt before. I knew I had been shot but in the moment fear was making me try and squeeze into a flowerpot on my balcony.\n\nI could hear shots being fired over and over and waited to feel another sting and burn. I was screaming. A lot. Then I heard two sharp pistol shots, and everything went quiet then two more sharp bangs.\n\n\"Peter, stay down out there. Don't move,\" commanded Shanti, and I almost sobbed in relief. \"Can you see the building across the way?\"\n\nI looked but it was hidden from view. \"No.\"\n\n\"Good stay there. Are you hurt?\"\n\n\"Yes, I've been shot in the leg.\"\n\n\"Fuck. How bad?\"\n\n\"I dunno?\"\n\n\"Look at it! Tell me what you see? Is there a lot of blood?\"\n\nI looked and stared at the blood pumping out of my leg. It was like a regular little fountain. \"It's shooting out of my thigh!\"\n\n\"Fuck, fuck, fuck! Clamp your hand over it as hard as you can. Do you know how to tie a tourniquet?\"\n\n\"Tourniquet?\"\n\n\"Yes, tie your belt around your leg four inches above the wound.\"\n\n\"I don't feel so good.\"\n\n\"Stay with me, Peter. Take off your belt with one hand and cinch it tight. I'll be right back.\"\n\n\"Wh-where are you going?\" My head felt dizzy. I felt cold all over. My hands were shaking uncontrollably. When Shanti didn't answer I thought hard about what it was she wanted me to do. My belt, right.\n\nI undid the buckle and then whisked my belt free and then realised why women did it that way, too, and laughed. They were so anxious to get at my cock! I figured it out! Still chuckling I tried to put it around my thigh and tighten it. I couldn't manage and had to use both hands. Blood pumped and I cinched it hard and watched the blood slow to a trickle. I clamped a hand over the wound. I wanted so bad to just close my eyes and sleep. I felt so lethargic.\n\nI heard a noise and looked up alarmed and then saw Shanti with a really big gun. It had a scope and everything. She crawled across the broken glass.\n\n\"Stay awake, Peter. Good job on the tourniquet. Keep your hand there and don't move.\"\n\n\"What are you doing?\"\n\n\"Taking care of the sniper. There has to be one. They fucked this up. The sniper should have taken the first shot. He'll still be there. Watching. He's the damage check. Now stay still and don't move.\"\n\nI watched her carefully position herself. She kept the rifle ahead of her and slowly moved it into position. She sidled up alongside it like a lover crawling into bed and took a quick look through the scope and then moved her head away. She repeated this three times and then settled in behind the scope. She reached up and adjusted something on the rifle and then I watched her finger caress the trigger. She was breathing in a slow fashion. She breathed in, exhaled a little, held it, and the rifle barked, not moving against her.\n\nShe kept watching for a moment longer and then rolled aside and looked at me. \"Got him. I don't think there are any others. Ready to move?\" I saw her eying the large volume of blood on the balcony and soaking my pants.\n\n\"Yeah, where are we going?\"\n\nShe smiled. \"Somewhere safer than here.\"\n\nI remembered something. It was hard to think. \"Amanda?\"\n\n\"She's safe. Hidden in the storeroom under some shit.\"\n\n\"And the two men?\"\n\n\"Down. Double tapped. We need to leave. This place is breached. You need medical care. We aren't taking an ambulance. We are talking your piece of shit Hyundai. I'm driving.\"\n\n\"You look so hot right now.\"\n\nShe did. She wasn't wearing any pants and she was on her back with her legs spread. I was staring at her little piece of heaven.\n\n\"And now I know you're okay,\" she sighed. I noticed she didn't cover herself. She shook her head at me and smiled.\n\nShe rolled over and checked the other building one more time with the scope, and then rose and shouldered me up onto my good leg. She hobbled me into the living room. I spied the two men right away. Both shot once in the chest and once in the head. It was not a sight I would ever forget. Its frightfully real and immediately personal. Thank God the balaclavas hid most of it.\n\nShanti ignored them. \"Amanda? Come out! Now!\"\n\nWe waited a moment and then saw Amanda peek around the corner of the wall. She spied the bodies and shrieked.\n\n\"Amanda! Quiet! Now!\" barked Shanti. Her voice demanded it be obeyed and Amanda did, shutting her mouth with an 'eep'. \"Come here and take Peter off me.\"\n\nAmanda finally saw that I was shot, and she started making noises again. Shanti got her quiet and Amanda replaced Shanti in holding me up. Shanti picked her Glock off the floor and ran to the door and look out cautiously. She grabbed the extra mag and looked back at us, grabbed my car keys off the side table and beckoned to us. \"Come on, coast is clear. Wait, Peter, where's your phone?\"\n\n\"Out on the balcony.\"\n\n\"Great, wait here.\" She ran past us out to the balcony and come back with my phone and handed it to me. \"Unlock it. Check the cameras.\"",
        "I stared at her.\n\n\"Open the fucking app and check the security cameras. Hallway, lobby, and garage.\"\n\nI nodded and did what she said. I could see people looking out their doorways and told her.\n\n\"Anybody looking like these two dead muppets?\"\n\n\"No.\"\n\n\"Okay, let's go.\"\n\nAmanda was the one who noticed. \"Shanti you need pants.\"\n\nShanti looked down, cursed, and ran off and came back pulling her pants up. \"Now we go. Straight down to the garage and out. Amanda, you need to support Peter. I need my hands free. Peter needs immediate medical care. We can't delay. I know where. Ready?\"\n\nI nodded. I was now wondering why Shanti had had no pants on. I looked at Amanda. Ah, I see. I was so proud of Shanti. She was just like me. I giggled.\n\n\"Follow me, stay close, but ten feet behind me. If I say drop throw yourself to the floor like you want to fuck it.\"\n\nShanti moved to the door and looked out. She beckoned and we followed. She was in full James Bond mode and I watched her in admiration. That's my girl, I thought.\n\n\"I'm your girl, too, Peter,\" admonished Amanda.\n\nI swung my head to look at her and found I had to also stop my head from moving. \"You can read my thoughts!'\n\n\"What? No, you just said 'that's my girl'.\"\n\n\"Oh, you are too, Amanda. I love you.\" Shit, I was saying stupid things.\n\n\"I know you do. Just not in the right way.\"\n\n\"What's that supposed to mean?\"\n\n\"Not now, try to help me here. Move your other leg, walk dammit!\"\n\nThe Carver door opened up just as Shanti reached it. Later I would replay it in my head over and over. It was over in a flash. Shanti reached in their doorway and somehow Brad Carver flew across the hallway and crashed headfirst into the opposite wall with a cry. Shanti crouched and placed the Glock at the back of his skull right where it met the neck. It was beautiful.\n\n\"One peep and lights out for you,\" I saw her muscles flex and the Glock pressed harder into his skull. \"Your men are dead. All three of them. Want to join them? Right after you I'm taking out your bitch of a wife and then your fucking daughter.\"\n\nThere was a shriek from the Carver condo. \"Leave him alone!\" screamed Karen Carver.\n\nShanti turned her head to look into the condo. \"Fuck you, bitch. You don't realise this yet. You and this piece of shit with my gun pressed to his empty head are dead. You shot my Peter. There will be consequences. The syndicate can't help you. The cartel can't help you. You can't hide from me ANYWHERE in this FUCKING PLANET that I can't find you. You. Are. Fucking. Dead. You have my promise. Dead.\"\n\nShanti reached down and picked up Brad Carver and threw him back into his condo. I could see the large wet stain at his crotch. I heard the heavy thump. Shanti looked at me and beckoned.\n\n\"Come on. These fucking twats are on borrowed time. Useless cunts.\"\n\nAmanda helped me past the doorway. I looked in and saw Nancy cradling Brad on the floor. He was cradling an arm that was oddly bent. I saw Dana standing behind them. She was crying and had her hands over her mouth. She looked at me with fear and then saw the blood on my leg. I made Amanda stop.\n\n\"Dana. Come with us. Get away from them. They hurt people. Kill people. It was your parents that had me beaten. It was your parents who had Amanda raped and drugged. It was your parents that tried to finish the job at the hospital. It was your parents who just sent two men into my apartment to kill me, Amanda, and Shanti. Oh, and one sniper up on the next building over. They are murderers. They have destroyed countless lives for greed and power. Come with us?\"\n\nShe shook her head. I could see the fear there. Digging in deep.\n\nI sighed.\n\n\"Let's go Amanda.\"\n\nWe joined Shanti in the elevator and the doors closed and we descended.\n\nI woke up after the surgery in a small clinic in the west of the city. The doctor checked my vitals, handed me a few pills, and told me to get out. Shanti met me and we joined Amanda in the waiting room. It was still dark out and I felt groggy.\n\n\"Thanks, Shanti. I owe you again.\"\n\n\"You owe me two pints of blood. And Amanda, too.\"\n\n\"Where now?\"\n\n\"We meet Imani at her place. Then the cops will arrive to question us. With Imani. Then, well we'll see, won't we?\"\n\nI nodded and we left the clinic, with me on crutches, and got in my car. Amanda drove and I lay in the back seat. Shanti gave directions and we pulled up to a high-end condo I knew of. We went in, buzzed her condo and went in and up.\n\nImani met us at the door and ushered us in. I met her brother. A really fucking tall guy, thin like her, and he could have been her twin. They held hands when Shanti outlined everything including threatening the Carvers.\n\nImani just nodded and then picked up her phone. She waited while it rang. I heard it pick up on the other end. \"Hello?\"\n\n\"Hi, Darren? It's Imani... yes, he's here with me and Shanti and Amanda. Peter just had surgery... Yes, he was shot in the right thigh. Nicked his femoral artery. He nearly bled out. Yes, I'll hold.\" Imani looked at me. \"He's going to send uniformed officers here. They'll bring you to the station for questioning and statements. It has to be now. The press are all over this. The Carvers too. They want you and Shanti arrested for the death threats.\"\n\nI nodded. I was expecting this. \"We need to leave Shanti and Amanda out of this.\"\n\n\"It's too late, Peter. The Carvers saw all three of you.\"\n\n\"And the dead guys in my apartment?\"\n\n\"Burglars.\"\n\n\"So, this is going to come down to what can we prove the Carvers did. Meanwhile we threatened them, so we're the bad guys?\"\n\n\"For now.\"\n\nI pulled out my phone and tapped away for a moment. I then handed it to Shanti. \"I need your digital signature on this.\"\n\nShanti stared at the screen and read it. \"This says I'm your employee.\"\n\n\"Yes, it'll be back dated about two months.\"\n\n\"What? Why would I be your employee? I'm your bodyguard.\"\n\n\"So, I can take all this on me. You worked for me. Followed my orders. It will help protect you.\"\n\nShanti laughed and Imani joined her. I didn't get the joke and said so.\n\nImani wiped her eyes. \"Oh, Peter. Time you knew. Shanti isn't a bodyguard for hire. She's still SAS. Always has been. She's a fucking Commander. She works international crime. She's fine. Everything she did tonight is under British rules of engagement and cleared by your federal government. The police chief has already been fully briefed. He was always aware.\n\n\"We need to deal with the press and the Carvers. They moved before this could be contained. Honestly, Shanti I wish you had just killed them.\"\n\n\"Dana was present.\"\n\n\"Ah, I see. Well. There is one bit of good news. By the Carvers saying to the press that you attacked them as a result of the armed robbery in your condo, they have unwittingly attached themselves to it. Why would you attack and accuse them of it if they weren't involved? It's a minor point, but it's a wedge in the door. We'll exploit that. Hold on...\"\n\nShe put the phone back to her ear. \"Uh-huh. They're here now? Okay, they're ready to go. Thanks, Darren. Okay, bye.\"\n\nThere was a buzz at the door and Imani rose and answered it. She came back and announced the police were on their way up. We rose and Imani opened the door to them. It was all very civilised. We were all handcuffed and taken away. I was brought to the hospital for observation, with two cops outside to guard me.\n\nA doctor came and examined my gunshot wound and was impressed a veterinarian could do such a great job. He ordered two weeks bed rest, concerned the artery would open up. I lay back and used my tablet. I checked the data stream coming in and smiled at the ceiling.\n\nDana came and visited me a couple of days after my admittance. I told the cops to let her in and to give us privacy. They agreed and Dana entered and sat in the chair beside my bed. She looked at the monitors and then out the window and then finally at me. I was staring pretty intently at her. I didn't know who I was going to meet. Happy Dana or pissed off and angry Dana.\n\nShe looked me right in the eyes and I could see her determination.\n\n\"Give me the truth. All of it,\" she said.\n\nAnd I did.\n\nAfter I was done, she got up and I thought she was going to leave. She hadn't interrupted me once or made any motion. She moved to the blinds and closed them. Then she shut the door. She turned and looked at me.\n\n\"I'm gonna get in bed with you, okay? I need you to hold me? Okay?\"\n\nI nodded and she moved to my bedside and pulled back the sheets, stared at my hospital gown and the tent I had made, and crawled in to lie against my side with her head on my right shoulder. I wrapped my right arm around her, and then brushed at her hair to get it out of my face. She settled in and said nothing.\n\nYes, I had an erection. I can't control it. All the time I was speaking to her I was seeing her either sucking my cock with those lips and freckled face, or her munching on Amanda with me clearly seeing her perfect ass and pussy.\n\n\"My parents are horrible, aren't they?\"\n\n\"Yes. They are.\"\n\n\"Are they really wanted all over the world?\"\n\n\"Well, as I said, the ICC is involved.\"\n\n\"All those people in the old condo. They did those horrible things to them?\"\n\n\"Yes, Dana. They did.\"\n\n\"I can't go back there. I can't.\"\n\nThis is the moment where I was either the hero or the asshole. I thought about it and decided. \"You need to go back there.\" Yup, asshole all the way.\n\n\"I can't, Peter!\" and the waterworks started.\n\nI held her and comforted her. Eventually she stopped.\n\n\"I can't. Don't ask me. Let me come stay with you? Please?\"\n\n\"No.\"\n\n\"Please?\"\n\n\"Stop it. Time to grow up, Dana. There is no hiding at my place. That's not going to happen. You need to go home. Then I have something I need you to do.\"\n\n\"What?\"\n\nAnd I told her.\n\n \n"
    ],
    "authorname": "Estcher",
    "tags": [
        "canada",
        "crime",
        "erotic coupling",
        "international",
        "lesbian",
        "mob",
        "mystery",
        "rich",
        "threesome"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/philanthropy-pt-03"
}