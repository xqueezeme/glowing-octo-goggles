{
    "title": "Breeding Time at the Hucow Farm Ch. 06",
    "pages": [
        "I slapped a mosquito on my arm. It was so dark I could barely see the way. Campfires crackling in front of tents acted as lights that guided me toward the shower block.\n\nWe had been here for a few days, sweating in the summer heat while my parents praised the joys of camping. We had left the moment school holidays began, piling into the car and driving 4 hours to get here. My sister, Chloe, had complained the whole way, and even after arriving here. Though by the second day she had made friends with some of the kids in the next row of campsites, then pissed them off the next day. One of the parents came to complain that she had squirted a water soaker into their tent. Her only explanation was that it was in retaliation to a prank they had pulled on her. I was told to keep an eye on her from then on.\n\nI sighed. I wanted to go home.\n\nI entered the shower block. It was empty now. The first few nights I had come just after sundown and it had been packed. I had waited at least twenty minutes before there was even a free shower stall for me. Tonight I had waited until it was late before heading over. Now I had my pick of any stall.\n\nI stepped into a stall and closed the door. The lock was sticky, but I finally got it to click. I tied my hair up and pulled my dress and underwear off, dumping them on the little shelf near the door. Voices floated around the shower block as I approached the shower and played with the handles. Some kids shouting loudly. Why were they running around so late?\n\nThe water shot out of the showerhead. Cold as ice. I stepped back, hugging myself until the hot water came through. It felt great to finally step into the warm water and wash away the dirt from the day. I was majorly missing my nice clean room back home and we'd still be out here for another few days.\n\nI turned under the water, washing over my shoulders. As I turned back I froze. A boy was staring back at me as he wedged himself under the stall door. His hand was reached up and grasping my pile of clothes.\n\nI let out a scream, torn between hiding myself and stopping him. He yanked my clothes and towel off the shelf and shouted to someone else. He disappeared back under the door as someone pulled him out. Whooping and hollering followed as footsteps exited the shower block.\n\n'Nooo!'\n\nI wrestled with the lock and eventually pulled the stall door open. The room was empty. I could hear them running away along the dirt road. I definitely heard the word 'Chloe' among their shouting.\n\nI closed the stall door and slumped down onto the now-empty clothes shelf. Tears pooled in my eyes. I didn't know what to do. The timer on the shower expired and the water shut off, leaving me shivering and naked.\n\nI didn't know how to call for mum or dad to come bring me some clothes. Would anyone else be coming for a shower at this time of night? Even if they did, could I describe which tent they would have to go to to get my parents? In the dark as well.\n\nIt was the only hope I had.\n\nI sat and waited, wondering if the kids would maybe bring my clothes back. Ten minutes passed. Fifteen. I heard people over at the toilets. Maybe I could yell to them. Twenty minutes passed. I had hoped that mum and dad would come looking for me, but I had rebuked them questioning me the other night by telling them that the line was long. How long had I been last night? Would they come looking for me around then?\n\nAs the minutes crept by and my tears dried, I came up with a new plan. It had been so dark coming here. Maybe I could sneak back to the tent without anyone seeing me. I could head down to the creek and follow it along to where our tent was, out of sight. It was something. It sure beat sitting here shivering. I was really starting to get cold. I needed to get back to the tent and wrap something warm around me.\n\nI looked down at my naked body. My small budding breasts. My... lower region all exposed. I was already embarrassed at the thought of going out there naked, but I had to do something.\n\nI slowly pushed the stall door open. Okay, first step. I crept out of the stall and stood in the empty room. My heart was beating like mad, but here I was, naked in the open. It wasn't too bad. Walking back to the tent shouldn't be much worse than this, right? It was all in my head.\n\nI steadied my breathing. I was going to kill Chloe when I got back.\n\nI crept over to the doorway and peeked out. There was no one around, but there was another problem that I hadn't thought of. Lights shone around the door of the shower block. I would have to sprint out of here to reach the darkness.\n\nThis was it. I took a deep breath before dashing out of the shower block. I ran, closing my eyes to try and block this whole situation from myself. I headed for the creek. Sharp pain met my feet as I stepped on rocks or spiky weeds, but I didn't stop.\n\nSuddenly my foot slipped out from under me on the wet grass. I slammed down onto the ground with the wind knocked out of me.\n\nI groaned, rolling over. The tears were back.\n\n'Wha- Oh my God!'\n\nMy heart stopped. I blinked up to see a woman walking over to me.\n\n'What are you doing?! Where are your parents?'\n\nThe tears spilled down my cheeks as I tried to cover my nakedness.\n\nNo. No. No. This wasn't happening.\n\nI cried, curled up naked on the grass as more people poked their heads around their tents to see what had caused the commotion. I had never been more embarrassed in my life.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe car jostled, stirring me from my sleep. We were driving through the countryside as the sun hung low in the sky. I hadn't gotten much sleep the night before.\n\nI blinked against the bright light in my eyes. How I had slept with that, I'd never know.\n\nI had been dreaming about that camping trip all those years ago. The painful feeling it brought still lingered after waking up.\n\nI stretched and rubbed my hand over my large, pregnant belly. I mentally reassured my baby that mummy was awake.\n\n'Have a nice sleep?'\n\nChloe smirked at me from the driver seat.\n\n'I should have gotten into the back so I could lay down.'\n\n'You know you weren't supposed to fall asleep at all. What happens if I get lost?'\n\n'I trust you to find your way.'\n\n'I was thinking of finding my way to a truck stop for some afternoon tea, but there's nothing out here.'\n\nThere was a tightness in my chest. I cupped my big udders under my loose dress. They were firm. I'd need to milk myself soon.\n\nChloe noticed.\n\n'I know, I need to milk myself too. We might have to pull over somewhere. We're still an hour or two from the farm.'\n\nChloe had hiked her dress all the way up past her chest, letting her pale belly and udders hang free. In the afternoon sun I could clearly make out all the veins that ran down her udders, hinting at how full she was.\n\n'You shouldn't drive so exposed. What if someone sees you?'\n\n'We've barely passed any cars out here, it's fine.'\n\nI rubbed my sore udders once more.\n\n'I might be able to wait the hour. I don't want to just throw my milk away on the side of the road.'\n\nI was mostly just thinking of the joys of the milking machine when we got back. We had gone to visit our parents for the week. They had bought a small milking machine as a curtesy to us, but it was nowhere near as good as the ones we had at the farm. Mostly due to it just being some milking pumps. Obviously our parents hadn't given any thought to getting one designed for pleasure. Chloe had thought to pack a dildo, so we both had to take turns with it when we milked ourselves. '\n\nI pulled at my dress. I was looking forward to getting this off. A week of trying to be modest had tortured my poor teats and clit with the constant friction of fabric against them. Hucows weren't meant to wear clothes.\n\nChloe leaned over to the radio.\n\n'So now that you're up, what do you want to listen to?'\n\n'I don't care.'\n\n'A lot of the stations are staticky out here, but I'm sure there's something good.'\n\nShe started spinning through the dial and pressing buttons. A loud thunk made me jump. Chloe shot up and grabbed the wheel with both hands.\n\n'What was that?'\n\n'I don't know, what did you do?'\n\n'Me? I didn't do that!'\n\n'You were pressing buttons!'\n\n'Radio buttons! That sounded bigger than that.'\n\nSmoke began to come from under the bonnet. Chloe pulled over onto the side of the road and turned the car off.\n\n'What's wrong with it?'\n\n'I don't know.'\n\nShe tried turning the key to start it back up.\n\n'Stop. Don't break it more.'\n\n'We can't just sit here.'\n\nShe turned the key again, causing the engine to sound like it was rattling around.\n\n'Stop! What if it blows up or something?\n\n'It won't... wait, could it blow up?'\n\n'It could if it's on fire!'\n\n'It's not on fire.'\n\n'But there's smoke!'\n\nWe both got out of the car. Chloe pulled her dress back down over her body. She tried to touch the bonnet, but recoiled, sucking her fingers.\n\n'It's hot!'\n\n'Of course it is.'\n\n'What do we do?'\n\nI looked around. There was a small farmhouse on the hill not far away.\n\n'Let's go ask for help.'\n\n'But... what if they're like... serial killers or something?'\n\n'I doubt that.'\n\n'You never know.'\n\n'Come on. I want to get home as soon as possible to have my milking.'\n\nI rubbed my belly and made my way down the road toward the house. The road was warm beneath my bare feet. I wore a dress for modesty among regular humans, but I could still enjoy the feel of the earth beneath my feet without many strange looks.\n\nWe both approached the driveway and headed down it. It was the longest driveway I had ever seen. Dirt and rocks scratched at my feet as we climbed up it. My udders swung with each laboured step.\n\n'Look, piggies!'\n\nChloe pointed to a paddock next to the driveway. Some of the pigs watched us curiously.\n\nAs we approached the house, a middle aged man in a flannel shirt stepped out of a tool shed and waved to us.\n\n'Hey strangers. Can I help you?'\n\n'Our car broke down just over there.'\n\nI pointed to our car sitting on the side of the road. Even from here, the smoke from the bonnet was visible.\n\n'Oh! Well she doesn't look good, does she?'\n\n'We were wondering if you could help us.'\n\n'Be happy to. Wait here while I bring the car around.'\n\nHe walked back toward the house. A few moments later he drove up to us in a flat back truck.\n\n'Hop in.'\n\nChloe and I climbed up into it and he drove back down the driveway. I hadn't noticed how bumpy it was as we walked up it, but the experience of driving down it was far worse. My udders bounced beneath my dress with every bump. Surprisingly, he barely even seemed to notice them.\n\n'I didn't think it'd be fair to ask you ladies to walk back down when you're both with child. You both hucows?'\n\n'Yes we are.'\n\n'Of course you are. Who could miss that. How long have you been doing that?'\n\n'A few years now.'\n\n'Ah, you're still pretty new to it then. So what brings you out here so far from the city?'\n\n'We were visiting our parents.'\n\n'They live around these parts?'\n\n'No. Further west.'\n\n'Ah. That's a shame. Would have been nice to know of some locals with hucow family. There aren't enough out here.'\n\nHe pulled up in front of our car and we all got out.\n\n'Right, let's see what's wrong with her.'\n\nHe opened the bonnet with a rag and looked inside. After a while of poking around he retrieved a flashlight from his truck and went back to inspecting.\n\n'Oh yeah, I think I see it.'\n\nI leaned over, having to hold my udders back so they didn't swing down into the engine bay. He pointed the flashlight down between two parts.\n\n'See that?'\n\n'What?'\n\n'On the left. See where the metal is sheared off. There should be a bolt there. I bet if you go back up the road half a kilometre you'll find it.'\n\n'So we just need a new bolt?'\n\nHe laughed.\n\n'Yes and no. There's nothing left to attach the bolt to. You'll need a whole new part.'\n\nHe closed the bonnet and walked back around to his truck.\n\n'When did you last get it serviced?'\n\n'I don't know. A while ago. We don't drive much.'\n\n'Well even then, this sort of thing doesn't happen overnight. Next time you see your mechanic, tell him he's a joke.'\n\nHe fiddled with the back of his truck and pulled a cable out.\n\n'I'll tow you back to the house. My mechanic will be open tomorrow. I'll give you a lift into town.'\n\nChloe spoke up.\n\n'So we won't be able to get home tonight?'\n\n'This car's not going anywhere. You'll cook your engine. We've got a spare room you can stay the night in.'\n\nHe secured the tow cable and instructed Chloe to steer the car as he pulled it. I got back into the truck with him and we slowly drove back to the farmhouse. The pressure in my udders was suddenly more prominent with the realisation that I wouldn't get home to my milker.\n\n'I'm sure my missus will be happy to have you two stay for dinner. She'll love having a chance to talk to you two hucows. I'm Arthur, by the way.'\n\n'Jessica.'\n\nThe truck bounced its way back up the uneven driveway. I wondered what it was like for Chloe in our more modern car as my udders bounced around painfully. Surely the suspension was better.\n\nThe sun was beginning to fall behind the mountains, painting the sky a wash of purples and oranges as we got out of the truck and detached the car. Arthur excused himself as he drove the truck back around to the garage.\n\n'Hello, what's this? Car trouble?'\n\nI looked up at the new voice only to be stunned at the speaker.\n\nA naked woman stood there with massive breasts. No, surely not breasts at that size. They had to be udders. Looking down at her crotch confirmed it. Among her mess of pubic hair was the identifiable cherry-sized, hucow clit. It spread the top of her lips apart as it stuck out, swollen and glistening in the fading light. Her curly blonde hair spilled down her shoulders.\n\nWhat was a hucow doing all the way out here?\n\n'Yeah... we... You're a hucow.'\n\nShe smiled.\n\n'I am.'\n\nArthur hurried back around to where we were.\n\n'Ah, good. Sweetie, let me introduce you to Jessica and her sister Chloe. Two hucows from the city. Some city mechanic with not enough grease under his nails thought a bolt about to shear itself off looked fine, so I'll drive them into town tomorrow. Get a real mechanic onto it.'\n\n'My, my. I haven't seen hucows around here for quite a while. What are you two doing wearing those things? Aren't you uncomfortable? Take them off. C'mon, off! This old brute won't mind.'\n\nI hesitated. I did want to get this dress off, but in front of some strangers I'd just met?\n\nChloe didn't have the same apprehension. She whipped the dress over her head and let her udders swing free.\n\n'Ah! That feels so much better!'\n\nThe woman eyed her pregnant belly. She didn't look pregnant herself. I wondered if she had recently given birth. Her mouth seemed to hang open a bit as she gazed at the full and fertile curve of Chloe's belly.\n\nI grabbed the hem of my dress and after a brief pause, pulled it off too. The constant friction of the dress on my teats disappeared and they were greeted with the cool embrace of the evening air. A tingle ran through my clit at the feeling of being naked once more. The thick ring through it stood out prominently under my own pregnant belly.\n\nThe woman smiled at the both of us.\n\n'There, that's much better isn't it? Please, come inside!'\n\nWe followed her into the cool interior of the house. She offered us a seat in the living room while she prepared some tea.\n\nI was grateful to accept. Despite only having been on my feet for so little, they were killing me. Chloe flopped down beside me, looking like she felt the same. My pregnancy was further along than hers, however, I still knew how heavy a belly that size could be.\n\nThe woman returned with a tray and sat down with us. Arthur excused himself, saying he needed a shower after working.\n\nWe were now alone with this strange middle aged hucow. Chloe seemed even more eager than me to find everything out about her.\n\n'How come you're not at a dairy farm?'\n\n'Chloe! Be a little politer!'\n\nThe woman laughed.\n\n'I left my farm a long, long time ago. I preferred living out here.'\n\nShe took a sip of her tea.\n\n'I'm sorry, I forgot to introduce myself. I'm Maybelle.'\n\n'Thank you for letting us stay here. You have a lovely home.'\n\n'The place has become a mess recently, but I do love how picturesque it is out here. That's why I left.'\n\nShe set her teacup down before explaining further.\n\n'I grew up around here. Small town life. After I graduated, I heard about hucow farms becoming a thing and decided to look into it. I'm sure I don't need to explain too much for you girls, as you probably felt the same way, but the prospect of becoming a hucow was too good to pass up. I got my injections and began living at the farm. Once I had become a full hucow, I was bred by a bull and started my new life. However, as my baby grew, I found myself getting homesick.'\n\n'It didn't go away, not even after getting fucked and handed around endlessly by the bulls. As much as I loved that life, I wanted to come back here. I asked if there was a dairy farm nearby, but there wasn't. Still isn't. I think giving birth was the final push for me. I didn't want my baby to go and be raised in the nursery while I was bred again. I wanted to keep him. So I ended my residency at the farm and brought my baby back out here. I met Arthur not long after moving back.'\n\nChloe leaned forward.\n\n'So he's not a bull too?'\n\nMaybelle laughed.\n\n'No. You couldn't tell? I felt like I was good at that back in the day. Now I haven't seen a bull for so long I don't know if I would be able to. But it was always a feeling I got when around one. They said it was the pheromones. Maybe.'\n\nFootsteps came down the stairs. I expected to see Arthur, but another young man appeared.\n\n'This is my son. Joshua, meet Jessica and Chloe. They'll be staying the night with us.'\n\nHe gave a wave to us before excusing himself to the kitchen. I looked between Maybelle and her son. He didn't seem to bat an eye. Once he left, I leaned in to whisper.\n\n'Isn't it awkward for him to see you naked?'\n\nMaybelle laughed.\n\n'Of course not. He's always known that I'm a hucow and what that entails.'\n\nI thought about how after a while mum and dad began to get used to Chloe always being naked after she became a hucow. I guess that hadn't seemed too weird to me. This wasn't much different.\n\n'So do your other children live here too?'\n\nMaybelle looked at me with confusion.\n\n'I don't have any other children.'\n\nI looked at her belly before exchanging glances with Chloe.\n\n'How long ago did you become a hucow?'\n\n'About twenty years ago.'\n\nOur jaws dropped.\n\n'And you've only been bred once in that time?'\n\n'Yes. That must seem alien to you girls, I can guess you're both regularly bred. However, I only have one. Arthur and I have tried for a child, but human sperm is just unable to pierce hucow eggs.'\n\n'B-but what about your heats?'\n\n'Oh, those. I just have a very horny week. I've gotten used to it by now.\n\nChloe was still staring agape.\n\n'Wow... twenty years of heats. How were you able to do that? I can't last one day!'\n\n'Like I said, it's not all celibacy. We just have a lot of sex and eventually the heat goes away. I don't know if trying to be bred by Arthur and being unable to tricks my body to make it easier or harder to get through it.'\n\nChloe was still mouthing wow. Maybelle had moved her hand between her legs and ran a finger up the folds of her pussy lips before tracing over the bulbous shape of her clit.\n\n'I'd better start preparing dinner before all this talk of heats and sex gets me too horny. If you girls want to take your bags up to your room, it's the first door on the left upstairs.'\n\nShe set her teacup down and headed into the kitchen. We finished our tea before bringing our bags up to the room. It was small, but cosy. The window looked out over a field of sheep that stood out like lights in the growing dusk.",
        "~~~~~~~~~~~~~~\n\nMaybelle made an amazing dinner. I had never had a shepherd's pie like it before. She had hand milked her udders into the mashed potatoes which gave it a beautiful taste. We volunteered to help Arthur wash up afterward as thanks, however the longer we helped, the more I wished I had just excused myself to go milk instead. My udders were at bursting point.\n\nWith the last plate dried, we headed back to our room.\n\n'We should take turns in the bathroom. Just milk ourselves while we take a shower.'\n\nChloe scooped up a droplet of milk hanging from her teat.\n\n'Maybelle must have a milking machine around here. We should find her and ask to use it.'\n\n'Where did she go?'\n\n'I don't know. I think she went outside before.'\n\nWe turned around and headed back downstairs. The back door was open. We stepped out into the cool night air. It smelled so fresh out here. Maybe it was whatever they extracted from cows and put into the hucow injection, but I found being in nature more calming than I ever did before.\n\n'The light's on in the barn.'\n\nChloe made a beeline for it. I hurried after her, feeling the aching need in my udders with each step.\n\n'Slow down! You're not as pregnant as me.'\n\nAs we approached the barn, the unmistakable sound of Maybelle moaning met us. She must be milking herself out here. Perfect!\n\nHowever, as we rounded the barn door and saw inside, we were met with something very different.\n\nMaybelle was on her hands and knees on the hay covered floor while Joshua fucked her from behind. His eyes flew open as he saw us enter and he pulled out of his mother and hurriedly pulled his pants back up.\n\nMaybelle's eyes fluttered open at the abrupt end. She looked between us and her son.\n\n'Oh, Joshua. They don't mind. They're hucows too. Get back in me. I was so close to cumming.'\n\nHe grabbed a pail sitting beside her and began to milk her udders into it like nothing had happened.\n\n'I-I was just milking her. I-I just got carried away.'\n\n'They understand, sweetie. They know how much they need to be fucked when getting milked.'\n\nI wasn't sure if it was fair to say we understood. I mean, it seemed stupid to think this wasn't happening now that all the pieces were in place, but my head told me it was wrong despite how flushed my pussy felt.\n\n'Uh, well...'\n\nMaybelle saw my apprehension and changed her tune.\n\n'Joshua and Arthur both take turns milking me. Of course, I get very horny during that, as you know. Arthur would fuck me, and I guess I came to always expect that, so the walls between Joshua and I began to break down over time. Especially whenever I was in heat.'\n\nJoshua continued milking her with his head firmly downcast.\n\nShe gave a sigh.\n\n'Well if you're not going to fuck me again...'\n\nShe reached back between her legs and began to play with her pussy while being milked.\n\n'I know how it might seem to you two girls, but this is how our family has come to be. We're closer because of this. I have needs as a hucow, and my husband and son take care of them. They're doing it for me.'\n\nChloe spoke up, practically interrupting Maybelle.\n\n'Sorry, but where can I find one of those buckets?'\n\nShe held her udders gingerly as milk leaked from her teats.\n\n'Oh, you poor girls. I'm so sorry, I didn't realise how full you were. We have some more over there.'\n\nChloe rushed over and grabbed a pail. She immediately dropped to her knees over it and began to milk herself.\n\n'Ahhhhh... Fuck, that feels better.'\n\nQuestions burned in my mind, but they were being flooded out by an ocean of milk. I too retrieved a pail and set it down beside Chloe to milk myself.\n\nThe release felt as good as Chloe made it seem. All the tension fell away from my udders to instead be replaced by warm pleasure that flowed through me and down to my teats. My milk sprayed against the metal pail, filling the barn with the sound of three hucows milking.\n\nI watched Chloe lean forward, squeezing on her udders; her hips wiggling as if expecting a phantom partner to mount her. I thought about reaching over and playing with her needy pussy. However, the thought caused a realisation. Why did I see Maybelle and Joshua's relationship as something strange when I regularly pleasured my sister? Maybe Maybelle's response was appropriate. The walls between us had broken down long ago when we both became hucows. Perhaps I had underestimated how all-encompassing the raw, sexual urges of hucows were.\n\nI squeezed my udders all the way down to my sensitive teats, letting out all the backed up milk. The waves of pleasure spread from them down to my pussy. My clit began to swell and throb with need, pushing against the rigid shape of my ring. I moved my hand between my legs and rubbed my fingers over the squishy protrusion, pulling on the ring. It sent sparks of pleasure through me, making my pussy even wetter.\n\nSoon any memory of what Maybelle and Joshua were doing was gone from my mind. The only thing left was the feeling in my udders and my clit. I rubbed it harder, pinching it between my fingers as I drew closer and closer to orgasm. It washed over me as I moaned out loud. My milk let down, spraying harder into the pail.\n\nI left my clit behind and inserted three fingers into my sopping pussy. I needed to be fucked. If only we were at the farm tonight. The new bull with the dark beard and fat cock had been checking me out lately. I was hoping to have him mount me tonight. The times when I had seen him mate with the other hucows he had seemed rough. I could almost picture him pulling my hair back as he slammed into my rump. Then there was Mark...\n\nI came again, lost in my own little world. After a few more orgasms, the world seemed to come back into focus. Chloe laid on the hay beside me, fingering her own flushed pussy. To my surprise, Joshua was back at the rear end of Maybelle, fucking her.\n\nMy eyelids felt heavy from cumming so much. Now that I was spent, all I wanted to do was crawl into bed.\n\n~~~~~~~~~~~~~~\n\nI woke the next morning to the sound of a rooster crowing. The bed had been so comfy that I had fallen asleep the moment I crawled into it.\n\nBeside me Chloe snored softly. Her teat made a wet spot on my back.\n\nCradling my udders, I rolled over to face her. Their shifting weight rocked the bed enough to stir her.\n\n'Hmmm? Mmmm.\"\n\nI took her udder and brought the teat to my mouth. It filled my mouth like a cock. It was such a fat teat. I was so proud of my sister for growing such big ones like these. I sucked on it until the taste of her milk filled my mouth. She moaned as I sucked, her eyes cracking open.\n\n'What's that for?'\n\nI let her teat fall from my mouth.\n\n'Just waking you up.'\n\nShe grabbed my hand and brought it to her clit. I could feel the heat radiating from it.\n\n'You better finish it if you're going to do that.'\n\nI let my fingernails trace lightly over the silky skin of her clit. I could feel it twitch and throb beneath them. I pinched them and ran them over the length of it like I was stroking a small cock. Her hand flew to my arm, fingers digging in as she pushed her head back into the pillow.\n\nHer moans rose the more I stroked her clit until a shudder ran through her and she forced my hand hard into her clit.\n\nOnce she relaxed, I pulled away and slid out of bed.\n\n'Aw, no more?'\n\n'Get up, lazy bug.'\n\nI stretched before the window, letting my big belly and bare udders bask in the morning sun. I could see Arthur down in the fields, already at work.\n\nAfter a week of having to wear dresses for mum and dad, it felt great to be able to roll out of bed naked and not put anything on.\n\nMy baby kicked as it too woke for the morning. I rubbed my hand over my belly to soothe it. I remembered what Maybelle had said yesterday when she recounted leaving her farm after her first breeding. I had been close to my babies after my first few breedings, like she was, but over time I began to adapt to a my hucow life. I loved my baby in my belly right now, but once I gave birth, they would have to go away to the nursery so a bull could breed me again. It was my purpose as a hucow to be bred. There were workers in the nursery more skilled at being mothers for my babies.\n\n'I'm going to go milk myself. See you down there.'\n\nAnother disgruntled groan came from Chloe as I left the room.\n\nI headed through the kitchen and out the back door once more. I walked over to the barn naked. The ground was a bit muddy, sticking to my bare feet. I wondered how I would clean them when I went to head back inside.\n\nAs I reached the barn, Maybelle stepped out holding a full pail of her milk. Her teats were still wet.\n\n'Oh, good morning. How'd you sleep?'\n\n'Great. It's so relaxing out here!'\n\n'Now you know why I came out here. The pail you used last night is ready for you. How'd you go milking free hand? I was a bit distracted to check on you girls.'\n\n'Alright I guess. I haven't done it for a while. I'm surprised they milk you by hand.'\n\n'We don't usually. We have a milking machine over there in the corner, but it's been broken for a while.'\n\nI looked over to see something far more like a vacuum with two pumps than the milking tables we had at the farm. Even then, I wished it worked as it would be better than the slow process of milking by hand.\n\n'Just another thing on the list of what needs fixing. Though, I don't mind someone else milking me by hand. If I had to do it myself, Arthur would never hear the end of it remaining broken.'\n\nShe adjusted her grip on the pail.\n\n'Anyway, I better deal with this and then I'll start making some breakfast for y'all.'\n\n'What do you do with it?'\n\nShe beamed at me.\n\n'Everything. We have it. The pigs and chickens have it mixed into their food. I'm the farm's hucow, feeding every living thing here. Leave your pail here when you're done and I'll add you into our little circle of life.'\n\nShe left with a smile, taking the pail of her milk back to the kitchen. Her large rump swayed with each step.\n\nI stepped onto the hay and got down onto my knees. I positioned my udders over the pail and tried milking myself again. Most of it sprayed out of the bucket, but it was at least relieving me.\n\nMy clit began to tingle and swell once again. I needed an extra hand to do this. I instead sat on my ankles and tried to rub my fat clit against my feet. It wasn't great, but it kind of worked. Dragging the ring along my foot seemed to bring the most pleasure to my clit.\n\nAs I milked myself, Joshua entered the barn. He stopped dead as he spotted me.\n\n'Oh, sorry! I didn't know you were in here.'\n\nHe turned to leave.\n\n'Wait! It's fine. I'm a hucow like you're mum, after all.'\n\nHis eyes lingered on my udders for a moment before he strode across the barn to fish out a tool. I took the chance to talk to him.\n\n'Sorry for last night. We didn't mean to walk in on you two.'\n\n'Nah, I'm sorry. It's weird, I know, but it just kind of happened over time.'\n\n'I don't think it's that weird. We all get pretty horny when we're milking.'\n\n'I wouldn't know. We don't get many hucows around these parts. Mum's the only one.'\n\nHe looked out the barn door before launching into a question.\n\n'Mum doesn't talk much about her time at a hucow farm. I overheard a bit yesterday evening. What's it like there?'\n\nI shrugged.\n\n'What have you heard about hucows? All of its probably true. We fuck and breed all day there.'\n\nHe laughed.\n\n'No way. I can see where mum gets her kinky side. So is that how...'\n\nHe motioned to my pregnant belly.\n\n'Yeah, I was bred about eight months ago. My 6th breeding.'\n\n'And what about that piercing?'\n\nI spread my legs to show off the thick ring pierced through my bulbous clit.\n\n'What? My clit ring?'\n\n'Yeah.'\n\n'A lot of hucows get them. They feel really good when mating.'\n\nHe laughed again, shooting me a grin.\n\n'Y'all city folk are crazy. It sounds pretty wild.'\n\n'I could say the same about you country folk.'\n\nHe laughed again.\n\n'Yeah, alright. That's fair. Sorry, I didn't properly introduce myself yesterday. You're Jessica, right?'\n\n'Yep. That's me.'\n\nHe held out his hand and I shook it.\n\n'Nice to properly meet you, Jessica. Hey, do you need a hand milking yourself. I'm a pro with hand milking.'\n\n'I'm fine. You finish up what you were doing.'\n\n'Alright. Offers always open as long as you're our guest here.'\n\nHe picked up his things and left the barn. I went back to milking myself only to remember that I did need a third hand after all.\n\n~~~~~~~~~~\n\nAfter breakfast, Arthur hailed me out the front. He had the truck parked in the driveway.\n\n'Ready to head into town to get that part?'\n\n'Yeah, let me go grab my dress.'\n\n'Nah, you don't need that. Come as you are.'\n\nI hesitated as he got into the truck. He noticed me standing there.\n\n'The locals all know Maybelle. She never wears anything in town either. We know it's a hucow thing. C'mon.'\n\nI tentatively approached the truck door before heaving myself up into the cabin.\n\n'It's a bit of a drive, but Marty will get you a good deal. I know him.'\n\nThe bumps of the driveway bounced my udders even more without the dress holding them down. The seatbelt was the only restraint they had.\n\nIt was a long drive to town. At least half an hour. I stared out the window at the perfect day surrounding us. Only a few clouds drifting in the bright blue sky. Endless rolling hills. Finally, we started to see rooftops between the trees. The town was small. At most it would hold a few hundred people.\n\nArthur found a park on the main street and hopped out.\n\n'That's Marty's over there.'\n\nHe pointed to a mechanic on the corner. I unbuckled my seatbelt and looked out on the street. There were a few people. I suddenly felt nervous to step out. I was always naked at the farm, and had even been naked in a university class, but this felt a bit more public.\n\nI took a deep breath and opened the door.\n\nA few people looked over at me as I got out of the truck, but no one seemed to care. The longer I stood there, the less heads turned my way. I couldn't believe it.\n\n'C'mon, let's go.'\n\nArthur motioned for me to follow him. I held my pregnant belly and hurried after him. It was refreshing to walk naked in the sun. We got a taste of this in the gardens of the farm, but this was different. There was more freedom here. I could go anywhere as I was. It was amazing to experience the world as I should be. I was a hucow, not a normal woman. I should be naked like this, presenting to the world how fertile I was. Forcing a stupid dress over my udders and rump felt like such a silly requirement.\n\nMy pussy grew wet at the thought of how I could push this new found freedom. Could I finger myself in the middle of the footpath? Would people bat an eye if I had to milk myself? And let's not even mention mating in public.\n\nArthur called to the mechanics as he walked into the lot. They all looked me up and down, from my pregnant belly to the ring through my clit.\n\n'Who's this, Arthur?'\n\n'A city girl. Hucow like Maybelle. Her car broke down outside my property.'\n\nHe started explaining what happened to our car to who I presumed was Marty. I could feel the eyes of the others on my naked body, though I felt my embarrassment evaporating the more they stared. Yes, this is my body. I'm a hucow. Deal with it. None of their dicks were good enough to breed me anyway.\n\nMarty called us into the office. I followed Arthur in. Marty picked up the phone and called around. I sat down on one of the chairs against the wall. Even when I was a normal woman, I never understood anything to do with cars. It hadn't improved since only ever having to think about being milked and bred. I barely drove these days either.\n\nMarty hung the phone up.\n\n'Friday's the earliest I can get one sent out.'\n\n'Friday, huh? Yeah, alright, Friday's not bad. Thanks for that, Marty.'\n\n'So do you need us to put it in?'\n\n'Nah, I'll do it. I'll just come and pick it up.'\n\n'See Arthur, this is why you're an old bastard. I do these favours for you and you steal the food off my children's plates.'\n\n'My truck is due for a service soon. You can rip me off again when I bring that in.'\n\n'It better be a big service.'\n\n'How about I bring you some bottles of Maybelle's milk to sweeten the deal?'\n\n'Well Maybelle's milk is the sweetest. Alright Arthur. I'll give you a call when I get it in.'\n\n'Thanks Marty.'\n\n'All good, mate. Miss.'\n\nI followed Arthur back out of the office and into the warm morning sun. I had forgotten how hot the concrete was underfoot while waiting in that office.\n\n'It won't be until the end of the week?'\n\n'Yeah, sorry about that. I had hoped that he'd have one in. I can drive the two of you back to the city if you want. Although if it pleases you, you're welcome to stay until Friday.'\n\n'It wouldn't be an imposition for us to stay?'\n\n'No, not at all. Maybelle had so much to say about you two last night. I think it's good for her to spend some time with other hucows.'\n\n'Then I guess we can stay a bit longer. I think both Chloe and I are enjoying the holiday.'\n\n'Perfect. Then let's pick up some groceries while we're out this way. We should have a big dinner tonight.'\n\n~~~~~~~~~~~~~~~~~~\n\nThat afternoon, Chloe, Maybelle and I sat on the porch, soaking the afternoon sun into our bare skin. A tray of iced tea sat between us.\n\nI had caught Chloe up on the mechanic situation once I arrived home. She seemed a bit disappointed that it would take so long to get back to the farm, but like me, she was enjoying the break in such a quiet part of the world.\n\nMaybelle took a sip of her tea, gazing out on the sun dappled fields as they rolled down into the valley.\n\n'So what are the dairy farms like these days? It's been twenty years since I've been in one. What's new?'\n\n'Um...'\n\nI looked to Chloe.\n\n'I don't know how they were different back then.'\n\nMaybelle sat back.\n\n'Well I guess the more primal element should still be the same. Do you still get a choice in who breeds you or do they control your breeding?'\n\n'We still pick. We just go into the communal rooms when we're in heat and see who's hot.'\n\n'That sounds about the same. Some of the girls who were there with me were very open with it. I remember seeing them mating in the hallways.'\n\n'It's not much different.'\n\nShe laughed. Her hand fell between her legs as she reminisced. Her finger traced along the folds of her lips before running a circle around her swollen clit, parting the thick mess of her pubic hair in the process. Even through the hair, I could see how flushed she was down there. Really flushed, actually. The whole area around her pussy was deep red.\n\n'Seeing you two both so bred bring back many memories for me. I can still remember seeing the father of Joshua during my first heat. He was a strapping bull. A few years older than me. He'd been there for a few too. I can still remember so vividly when he bred me. It was the most wonderful thing. I wonder where he is these days. How many hucows like me has he bred by now?'\n\nHer pace between her legs quickened. It was making my own pussy feel wet. Masturbating with the other hucows back at the farm had become such a great bonding experience for me. I wanted to masturbate with Maybelle. To become like a sister with her.\n\nDriven by the strange instinct, I spread my legs and moved my own hand to my pussy, pulling gently on my clit ring, feeling the nerves deep within my clit cry out in joy.\n\n'That type of jewellery does seem different from my time. Is it common these days?'\n\n'A good few hucows have them at my farm.'\n\n'Does it feel good?'\n\n'Yes. Masturbating. Mating. Anything. I loved feeling a bull's balls slap into it. It's a thrill every time.'\n\nMaybelle sunk her fingers into her flushed pussy.\n\n'Mmmm. That sounds nice.'",
        "I sank my fingers in too, feeling how wet I was. Chloe spread her legs to join in as well, but she was staring more intently at Maybelle's pussy.\n\n'Maybelle, when were you last in heat?'\n\n'Mmmm. Hmm? Oh. I don't know. I guess it's been about a month.'\n\nChloe shuffled over to her and replaced Maybelle's fingers with her own.'\n\n'You're really hot down here. And your pussy looks really flushed. I think you might be going into heat.'\n\nMaybelle didn't seem phased by it.\n\n'That's fine, dear. It's just my second time of the month. I hope you two don't mind that Arthur and Joshua will be satisfying me a lot more over the next few days.'\n\nChloe shuffled back to her spot and spread her legs again. I was closing in on my own orgasm as Maybelle and I fingered ourselves.\n\n'Mmmm! That's okay. We understand.'\n\n'Both of you- Ah! That feels good! Both of you girls are welcome to join us if it gets too much for you.'\n\nShe continued to roughly finger her in-heat pussy as her juices dripped down her ass.\n\n~~~~~~~~~~~~~~\n\nThe next morning I woke up in the same comfy bed. The blankets were so warm. I could barely feel the chill of the old farmhouse through them.\n\nLike the previous morning, Chloe refused to stir.\n\nI got out of bed and headed downstairs naked once more. I needed to milk myself. My udders were full and firm.\n\nI stepped out the back door and headed for the barn. The sound of hip-slapping fucking met me as I drew closer. Maybelle was in there.\n\nTo my surprise, they were all in here. Maybelle was on all fours with Arthur fucking her from behind while she sucked on Joshua's cock. I thought I had better announce myself.\n\n'Good morning.'\n\nThey turned to me. Arthur spoke up with a grunt.\n\n'Morning, Jessica. I hope we're not in the way of your milking.'\n\n'I'll be fine. Sorry to interrupt.'\n\nMaybelle moaned something around her son's cock that sounded like a greeting to me. The poor hucow. I knew how tough heats could be. As ridiculous as the scene appeared, I knew it wasn't enough for her.\n\nI sat down with my pail and began to milk my udders. Soon the family fucking fell from my mind as satiating my own modified primal needs took over and I could only think about my clit. It was tough being a lonely hucow without a bull. This trip had made me realise just how small and helpless I was without one. I needed a bull.\n\nI came back to my senses a while later, laying in the hay. I wasn't sure if I fell asleep or passed out from my orgasm. Either way, Arthur was now standing over me.\n\n'Ah, you're awake. I was asking if you'd be able to give me a hand with some chores today?'\n\n'Wha...?'\n\nHe was still naked from fucking Maybelle. I was looking right at his flaccid dick amid my cum haze.\n\n'You don't have to, but I'd appreciate it. Maybelle won't be able to do much today.'\n\nI looked around him to Joshua milking her while she desperately tried to finger her in-heat pussy. It was a burning red now, even darker than yesterday.\n\n'Um, yeah sure. What can I do?'\n\n'Great! I'll start you off easy. Maybelle starts by feeding the pigs each morning.'\n\nHe offered me a hand and helped me to my feet. My legs felt like jelly. I almost stumbled and knocked over my pail of milk. I didn't even remember filling it up that much.\n\nHe picked up my pail and led me out of the barn. He picked up another bucket of food scraps and led the way to the pigsty.\n\nIt was as we walked that I suddenly realised he hadn't put his clothes back on after fucking his wife. Actually, I hadn't seen any clothes there at all. All he wore were his boots.\n\n'How come you're naked?'\n\n'Is it that strange? You're all naked. Why can't I be?'\n\n'but-'\n\nHe laughed, cutting me off.\n\n'I'm just messing with you. The boy and I usually forgo wearing our kit when Maybelle's in heat. Too much fucking throughout the day. It gets in the way. Plus, I think it helps her to see us like this. She can get herself off easier that way, which saves us some time.'\n\nWe reached the pigsty and he tipped the bucket of foodscraps into their trough.\n\n'Now we usually add Maybelle's milk, but yours can do the honours today.'\n\nHe tipped my milk into the food trough, letting it mix with the scraps. The pigs hurried over and dug their snouts into it. I watched them slurp up their slop, resting my udders on the fence. I found myself experiencing that same feeling Maybelle had described as I watched them drink down my milk.\n\nArthur rested against the fence with me as he continued on from before.\n\n'Maybelle told me that you found the situation with us and the boy strange. I understand that, but look at the situation with Maybelle. Before he was old enough, we had an awful time trying to fuck in private when she was in heat. It was impossible to work around. Bringing him into all this made it easier for Maybelle to get through her heat.'\n\nI picked the buckets up for him while shaking my head.\n\n'I'm sorry. I didn't mean to act so shocked. After I thought about it, I understood. It was mostly just a surprise at first.'\n\nHe gave me a smile.\n\n'Then if you understand, let's get back to work before I have to tend to Maybelle again.\n\n~~~~~~~~~~~~~~\n\nThat evening I helped Maybelle make dinner in the kitchen. I chopped the veggies while she watched the stove. The two men were out in the fields, getting the last few jobs done for the day before returning to deal with Maybelle's heat.\n\nEvery few minutes, she would stop and reach between her legs. She pulled a fat dildo from inside her swollen pussy and gave it a few thrusts. I could hear just how sopping wet she was from the sound of the dildo driving into her. She would push the dildo back into her before returning her attention to cooking.\n\nBy this time in my own heats, I would have been bred, sending signals to my body to slow down the flow of hormones to my pussy driving me to breed. But Maybelle didn't have that. Her body was demanding non-stop for her to find a bull and let him breed her.\n\nThe back door opened and Joshua stepped inside. Maybelle turned to see him enter with an excited look on her face.\n\n'Finished already?'\n\n'Yeah, about. Pa's just doing the last job. I'm going to go have a shower.'\n\n'Hurry up. I'll need you in a bit.'\n\nHe hurried up the stairs as Maybelle turned back to the stove.\n\nAfter a few more thrusts of the dildo, she finally admitted defeat.\n\n'Could you watch the stove for me. I need to sit down and really fuck myself with this.'\n\n'I know I've asked this already, but have you really thought about going back to a farm.'\n\nShe waved me off, her cheeks flushed from her intense horniness.\n\n'No, dear. I'm fine out here with all the men I love.'\n\n'But at a farm you can get a bull to properly breed you and end that heat. Your body's telling you what it needs. It needs to be bred badly.'\n\nShe rubbed her clit between her fingers but still shook her head.\n\n'You have no idea how much I'd love to have a big bull push me down and pin me to the ground under his weight while he forced that huge cock into my pussy, breeding me endlessly until my belly was as big and full of his seed as yours.'\n\nShe caught her breath.\n\n'But I'm happier here than at a farm.'\n\nShe went and laid down on the couch and I heard more of the sopping wet thrusts of the dildo.\n\nWatching her be this deep into a heat was starting to make me feel the effects of it too.\n\nFrom the second floor, I heard footsteps turn away from the stairs and head away. Joshua had been listening.\n\n~~~~~~~~~~~~~~~\n\nWe could hear them fucking in the master bedroom that night.\n\nChloe rolled under the covers. I could feel the heat coming from her.\n\n'Are you horny?'\n\n'Yeah.'\n\nI moved my hand between her legs once again and played with her swollen clit. She moaned into my chest.\n\n'Do you feel like seeing Maybelle in heat has made you... I don't know, antsy?'\n\n'Yeah. I'm getting that feeling. Seeing her like that is reminding me of my own heats. It's like I'm getting a mini heat just from being around her.'\n\nI worked my fingers in circles around the base of her clit. She moaned louder.\n\n'Mmm. I can't imagine not being bred while in heat.'\n\n'Neither. I tried to convince her to come to the farm.'\n\n'She didn't want to?'\n\n'No.'\n\n'Mmmm.'\n\nShe pressed my hand harder into her clit.\n\n'My last breeding was so good. Ah! He was so big. I don't think my pussy has ever been stretched out that wide before. I want to be at the farm right now; being left a gaping mess on the floor again.'\n\nMy own clit was burning. I pulled my hand away from Chloe to tend to it. It sparked at the first touch, sending a wave of satisfaction through me. It wasn't as good as a bull, but any way to tend to my needs was what I needed right now.\n\nI couldn't remember a time before I was such a hyper-sexual beast. I couldn't remember masturbating as much as this when I was a teenager, but I still had urges. It had been so long ago that I couldn't remember why I didn't act on them. My body had taken over now, demanding that I satisfy what it was made to do.\n\nChloe shuffled over and took my teat in her mouth. I had just milked before coming up to bed, but it felt like there was still some milk left in my udders. Milking by hand was never good enough. I missed the milking machines back home.\n\n'God I need to be fucked!'\n\nI closed my eyes, enjoying the feeling of her lips on my stiff teats. Every inch of them felt alive with a thousand nerves. My clit surged in response. I was about to cum. I needed it so badly.\n\nI shuddered and relaxed back into the warm bed. I still wanted more, casually running my fingers along my lips. Chloe let my teat fall from her mouth and propped her head up.\n\n'You could always go join them and get fucked.'\n\nI thought about it before shaking my head.\n\n'I don't know. It just wouldn't be the same as being fucked by a bull.'\n\n'I know what you mean. I haven't been away from bulls for this long, but Maybelle's right about the pheromones. Even after seeing those guys fuck her, I just have no interest in letting them fuck me. You know?'\n\n'Yeah. We're too different from regular humans. Mating with a bull makes me realise how special my body is to be in tune with his.'\n\nI could hear Chloe's fingers working inside her under the covers. I let my own slide inside me to join her. I still had a horny itch to scratch before letting sleep take me for the night.\n\n~~~~~~~~~~~~~~~~\n\nThe next morning Arthur came to find me as I was milking myself in the barn. He was naked like yesterday. His cock looked half deflated after he had undoubtedly just been fucking Maybelle.\n\n'Can I get your help again today? Joshua has gone off somewhere.'\n\n'Where'd he go?'\n\n'I don't know. He was gone this morning. Took the damn truck and everything.'\n\nHe sighed and looked out over the field.\n\n'Someone still has to tend to Maybelle today. Even with your help this is going to be a big day. Damn that boy. What was he thinking?'\n\n'I'll help you. Let me just finish up.'\n\nMy pussy was still gaping from my fist's absence. I could feel it growing increasingly wetter in anticipation of my return.\n\n'I really appreciate it. You can start with the pigs like I showed you yesterday.'\n\nHe gave me a thankful smile before leaving. He looked tired.\n\nMy hand returned to my pussy, finding it just as gaping as I left it. My hand slipped back inside with ease as I tried once more to ease the second hand heat burning within me. Not even the reassurance of my eight-month pregnant belly seemed to dull it.\n\nBut I couldn't stay here masturbating all day. I had promised to help. I decided first to go rouse my lazy little sister. If I was going to help, she would too.\n\n~~~~~~~~~~~~~~~~~~\n\nJoshua didn't return for the rest of the day. Where ever he had gone, he had stayed there overnight.\n\nThat night Maybelle and Arthur had excused themselves early to the bedroom. Maybelle looked even more worked up than the previous day. Whether from her increasing heat, or the lack of Joshua to fuck her.\n\nI found myself incredibly horny in bed once more. It definitely felt like a heat. Why was my body doing this? I had already been bred! I couldn't get any more bred. My clit was more swollen than usual, sticking out between my thighs like a big red button telling the world I needed cock.\n\nIt was angrily red by the next day. It seemed almost too sensitive to touch as I milked myself, but drove me wild every time I did. I really needed a bull to mount me. Just one more day until the mechanic should have the part for us. Then we could head home and finally end this second hand heat.\n\nJoshua still wasn't back, so Chloe and I helped out once more.\n\nAround the middle of the day, I headed inside to help Maybelle make some sandwiches for lunch. She was almost incapable of doing it herself with how deep in heat she was.\n\nAs we worked the sound of a truck outside caught our ears. We went to investigate and found Joshua driving up to the house. Maybelle gave a huff.\n\n'I'm going to have a word with him. How could he leave me when I'm in heat like this! His poor father has been exhausted.'\n\nShe stepped out on the porch with her hands on her hips. Joshua pulled the car up and got out. I suddenly felt my heart jump. Something was different. I couldn't tell what. Maybelle seemed to have the same reaction. She stopped dead in her tracks and watched him with awe.\n\nSuddenly I recognised the feeling. It was like seeing a bull when horny at the farm. Was I really that far gone with this second hand heat? Or....\n\nJoshua approached Maybelle and unbuttoned his pants. It was only then that I noticed the huge bulge in it. He dropped them, letting a thick cock and giant, leathery balls spring free. He was already rock hard at the sight of his in-heat mother.\n\nI couldn't believe it. He was a bull now.\n\nMaybelle's mouth moved as if she wanted to say something, but a glazed look fell over her face as she stared at her son's massive cock. She sunk to the ground before laying on her back and lifting her ankles high.\n\n'I need it... Need you!'\n\nHe got down on top of her, lining his cock up with her pussy. She moaned like a dirty slut as his cock entered her.\n\n'Yes! Yes! Baby!'\n\nI stood mesmerised, watching her flushed lips stretch wider and wider as she took his full cock inside her. His new bull cock that matched her hucow pussy so well. My fingers dug inside my own hucow pussy as I watched, desperate to feel that cock inside me. I wanted to be mounted by him so badly. I needed it. He was a bull. The only thing for me.\n\n'Oh baby! Fuck me right there!'\n\nMaybelle moaned wildly as his cock slid in and out of her, slick with her juices. Her ankles wrapped around his waist. Her fingers dug into his back. I had seen them fuck before, but now they really looked like a hucow and bull mating. It was rough and completely dominated by him. There was a desperate need behind every one of Maybelle's moans.\n\n'I'm going to breed you, mum. I'm going to get rid of that heat. You won't ever be in heat again!'\n\n'Yes baby! Breed me! Breed me like your bull father!'\n\n'I'm going to breed you every time you go into heat.'\n\n'Yes sweetie! It's been so long since I've been bred. So long.'\n\nMy whole fist slid into my pussy as I sat and watched them mate. My other hand flew to my engorged clit, trying to satiate the burning lust within me. I needed it as much as Maybelle. Every slap of his big balls against her ass coursed through me, like a cry to be fucked as hard as she was.\n\nJoshua tensed up and grunted as he unloaded his balls into his mother. She moaned even louder as she felt herself being bred for the first time in decades. I watched with awe at her being bred. It was an amazing thing to see. New life and purpose for a hucow born out of something so primal and rough.\n\nMaybelle and Joshua stayed locked together as the minutes ticked by; her ankles still wrapped tightly around his waist. Just basking in the bliss of mating.\n\nArthur and Chloe came around the side of the house and found Joshua and Maybelle still intertwined. Arthur barked at his son.\n\n'Joshua, what the bloody hell were you thinking taking off like that?!'\n\nMaybelle waved an exhausted hand to shush him.\n\n'Honey, it's fine. He did the right thing by going. I feel wonderful now.'\n\nJoshua pulled his cock out of her, revealing its new size to the new onlookers. She let out a pained moan at the sudden absence of its size within her stretched walls. It slipped out and slapped against her thigh, leaving a messy stain of their juices. Chloe looked excited to see it, while Arthur looked shocked.\n\n'You...?'\n\n'Yeah, pa. Someone needed to be a bull around here for ma.'\n\nArthur looked down at Maybelle. His expression seemed to soften as he saw the blissful haze that had come over her, breaking her heat. She rubbed her gaping pussy as it oozed cum. He put his hands on his son's shoulders.\n\n'You did the right thing, boy. I just wish you let me know beforehand. I've still got a lot of work for you today.'\n\nMaybelle protested.\n\n'The only job he should have today is continuing to breed me. That's the only job he's ever going to have.'\n\n'You know, you should become a bull too, pa. Ma's going to need more than one bull around.'\n\n'We'll see. Once all the work is done then I can think about running off to the city for the night like you.'\n\n~~~~~~~~~~~~~~\n\nTheir mating was even louder that night. Cries from Maybelle commanding Joshua to breed her echoed through the walls. What I had thought was a second hand heat had transformed into a need to be fucked by Joshua. Both burned within me with a similar intensity. I was so close to a bull. To my instinctual desire.\n\nChloe had gotten out of bed and crept over to the door before I chastised her. As much as I too wanted to seek out Joshua, he was Maybelle's bull. After twenty years of denying herself during her heat, it would be cruel to take him away from her to satisfy our own lust. It had only been a week for us without a bull's cock.\n\nThe next day when I came down to milk myself, I found Joshua and Maybelle mating in the kitchen like I wasn't even there. The milk leaking from her teats over the floor told me that she hadn't made it outside to milk herself before falling prey to him. Why couldn't he do the same to me right now? Hold me down and mount me while I begged to go milk myself. Tie me up and keep me there for a month until I gave birth so that he had no competition to breed my fertile pussy.\n\nI left the kitchen with two fingers already inside me, burning up at the images intoxicating my mind. I headed over to the barn and found my pail, desperate to milk myself.\n\nArthur came out and found me once again with my fist buried deep in my pussy. He was wearing his clothes again.\n\n'There you are. Marty gave me the call. Wanna come into town and get that part?'\n\n'Mmmm! Mmmm.. Yeah. Okay.'\n\nFrustrated, I removed my fist and quickly squeezed as much milk from my udders as I could before picking up the pail. I left it by the back door for Maybelle to find whenever she was finished with her mating and followed Arthur around to the truck.\n\nWe drove down the bumpy driveway before pulling out onto the road. Another half hour drive lay ahead of us. The bottles of Maybelle's milk clinked together as they sat by my feet. I rubbed my hand over my pussy, knowing that I should let myself calm down before we arrived, but still horny. I instead decided to chat with Arrthur.\n\n'So are you going to become a bull like Joshua?'\n\nHe scratched his chin.\n\n'When I first met Maybelle, I knew what she was. I knew where she came from. We had talked about me becoming a bull to be with her, but the idea never appealed to me back then.'\n\n'Why wouldn't it? I guess I come from a different world from you, but I love all the raw sex we have back at the farm. Every bull seems to love his life.'",
        "'I don't doubt it. It was just never for me.'\n\nWe drove in silence for a while before he spoke again.\n\n'But now Joshua's one of them. He was right, y'know. She does need a bull. I hate to see her putting up with her heat. Maybe I was being selfish this whole time.'\n\n'She needs more than just Joshua, though. I can tell she loves you. Take it from a hucow, there's a connection between us and our bull. I'm sure she'll want that connection with you now that she has one with Joshua.'\n\n'Yeah. I think you're right.'\n\n'So you'll do it?'\n\nHe gave me a smile.\n\n'Like I said yesterday, whenever there's a break in the work. I'll have nine whole months to get on it while her belly swells with Joshua's baby, then Maybelle and I can finally start a family together. I'm looking forward to that after all these years.'\n\n~~~~~~~~~~~~~~\n\nWe picked up the part, dropped off Maybelle's milk, and drove back to Arthur's place. He popped the bonnet of our car and set about replacing the part.\n\nWhile he worked, I headed over to the barn, expecting to find Maybelle and Joshua in there. As I approached I heard Chloe moaning. What was she doing?\n\nI found her on all fours with Joshua behind her, pounding into her rump. I couldn't help but feel a burning heat within me at the sight of her pussy lips stretched so wide by his huge cock. The thoughts that had invaded my mind this morning returned.\n\n'Chloe!'\n\nHer eyes fluttered open.\n\n'Oh shit.'\n\nMaybelle laughed, watching her son fuck Chloe while she played with her hairy pussy. It looked less flushed than yesterday. Her heat was finally coming to an end as the hormones in her body changed in response to being bred.\n\nI put my hands on my hips.\n\n'I told you to leave these two to themselves.'\n\n'But... ah! I really wanted some cock. And it feels so good!'\n\nJoshua gave me a grin.\n\n'It's fine. I feel like I'm full of stamina now.'\n\n'You're a bull, of course you are.'\n\nChloe squealed and shuddered as she came around his thick cock. He patted her ass and pulled his impressive length from her stretched pussy. I couldn't deny how wet it was making me. That huge cock looked so good.\n\nHe got up and approached me. I felt a shiver run up my spine as I suddenly felt so small beside him. So small and helpless. Helpless to whatever he wished to do to me.\n\n'Would you like to have a turn?'\n\nI stammered to respond. I really shouldn't. I would be a hypocrite. But I couldn't tear my eyes away from the huge cock throbbing before me. He moved closer and I felt his knob press into my pregnant belly. It was so hot. So powerful. It had just bred a hucow yesterday, and now it strained so hard to mate with me until I was fertile again. God, I wished I was in heat and fertile for him!\n\nI felt my legs getting weak as he took me in his arms and lowered me onto the hay. Without thinking, I rolled over and got onto my hands and knees, letting my belly hang beneath me, out of his way. My pussy was drenched before his cock even entered me. His large knob pressed against my lips. The pressure mounted as he pressed in, stretching my pussy out to accommodate his size.\n\nI shamelessly let out a moan as it slid inside me. Inch after inch until I felt like my pussy couldn't take any more. It was completely full. My plump lips stretched wide around his shaft, hurting slightly, but such a satisfying pain. This was the feeling that I had been missing for so long. Almost two weeks without cock.\n\nHe began to withdraw his full length, dragging my stretched lips with it before slamming back in. His big balls slapped against my clit, sending a wave of pleasure around the ring. Through my unfocused eyes, I saw Maybelle watching on as she fingered herself. Watching her son mate with me.\n\nIt felt too good. I was such a hypocrite, but I loved it. I was a bad girl. My slutty hole needed to be stretched out by this huge cock. It was all I needed. All I ever wanted. This brief holiday away had been nice, but as he pounding into my rump, I remembered where I belonged. I was a hucow. I belonged in a farm being bred by huge cocks.\n\nMy voice grew louder and louder as I moaned on the end of his cock. My udders rubbed against the hay floor as our mating grew rough. I pushed my rump back into his thrusts, determined to fit even more of him inside. I needed more.\n\nMy toes curled as my orgasm hit me. Every nerve in my body tingled in the aftershock, leaving my face pressed into the hay in a dreamy bliss. I barely noticed him cumming in me. He filled me up, coating my insides.\n\nHe held my rump tightly as he pulled himself out. I gasped at the sudden absence of his huge cock. My inner walls slowly shrunk back inward at the gaping hole he left. His cum dripped down my stretched lips and onto the hay.\n\nMaybelle laid back and raised her ankles high.\n\n'Come back over here, big guy. I think it's my turn again.'\n\nHe gave his deflating cock a few strokes until it was hard again before getting back on top of her.\n\nI rolled over to lay back in the hay too. The slapping sound of their mating soon filled the barn. My pussy still burned from my own rough fucking, but I was content for the first time since arriving here.\n\n~~~~~~~~~~\n\nArthur came to get us after a while, proudly announcing that our car was fixed. Once we had our energy back, we began packing our bags back into the car.\n\n'Well, I guess this is goodbye.'\n\nMaybelle had torn herself away from fucking for long enough to come send us off. Arthur shook both of our hands.\n\n'You're always welcome to come back and visit if you're in the neighbourhood.'\n\nChloe snorted.\n\n'I don't think anything is in the neighbourhood of out here.'\n\nI elbowed her.\n\n'We'll stop by the next time we're heading out to our parents.'\n\nMaybelle gave us a hug before Joshua followed his father's lead and reached over to give us a handshake. I gave him a smile and pulled him in for a hug. After mating with me, he was closer than a handshake. His hard cock pressed into my belly. I knew he was ready for Maybelle the moment we left.\n\nAs I opened the car door, I remembered something. I was still naked. We were heading back to the city. With a resigned sigh, I pull my bag from the car and retrieved my dress, prompting Chloe to do the same. I hadn't worn it in days. The fabric rubbed over my sensitive teats as I pulled it over my head. Just a few more hours of this until we were home. Before we'd even left, I already missed the freedom of this little country town.\n\nWe got into the car and drove back down the driveway, waving goodbye. I gave the little farmhouse one last look before we turned out onto the road and sped away.\n\nWhenever we next saw them, Maybelle would definitely be showing, finally bred after all those years. It seemed fitting that her son, the result of her rough and primal breeding on the farm, had been the one to use her once more for her purpose as a breeding hucow. It was strange to feel such satisfaction to see her bred, but I was happy for her. Maybe it was part of the second hand heat I felt around her. I wanted to see her bred as much as she did. I rubbed my hand over my belly. I hadn't forgotten my purpose.\n\nI wondered when we would see them next. Would Arthur be a bull by then? Would Maybelle have been bred by him or by Joshua again when we next met?\n\nChloe spoke as she drove.\n\n'Your first was a boy, wasn't he?'\n\nI looked at her.\n\n'Yeah? What about it?'\n\n'Nothing, just wondering if I'll find him breeding you when he grows up.'\n\n'As if. What, am I going to find you doing the same when your second grows up?'\n\n'Who knows. I like to mate a lot. If one of my sons became a bull, I can't promise that I'd be able to resist.'\n\nI rolled my eyes, but could still remember the shift in my mind when I first saw Joshua as a bull. It was such a striking difference, and as I drowned in his pheromones, all I wanted to do was mate with him.\n\n'Just hurry up and get us home before the car breaks down again. I want a proper milking machine tonight.'\n\nWe drove through the hills and valleys toward the city. The sky was that same perfect, endless blue as our first day here. I looked forward to the next time I returned."
    ],
    "authorname": "Heather26",
    "tags": [
        "hucow",
        "pregnant",
        "impregnation",
        "milking",
        "incest",
        "exhibition",
        "big breasts",
        "milk",
        "naked",
        "cow"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/breeding-time-at-the-hucow-farm-ch-06"
}