{
    "title": "Senior Year Memories Ch. 28",
    "pages": [
        "(Usual Disclaimer Time: Even though this story almost entirely takes place in a high school setting, all the characters in this story are 18 years old or older, and since we're living in the wide wonderful world of porno-land here, where clich\u00e9s roam free and things might get a little unrealistic from time to time, please remember it's all in good fun. This story is highly serialized, and though it's not 100% necessary to have read the whole story up until this point to enjoy the content of the chapter, it's definitely advisable to understand some of the ongoing plots.)\n\nPreviously, on Senior Year Memories: After a days-long New Year's orgy with a good chunk of the senior cheer squad, 18-year-old Ryan Collins was ready to spend some time relaxing, however, the lovely ladies of Regan Hills had other plans in mind. Mysterious and beautiful new neighbor, Alice Talbot, borrowed him to show her the sites around town, and as they got to know each other in person for once, Ryan couldn't help but be smitten by her. Their tour was cut short, however, when Ryan's girlfriend Josie Wong, currently away on a family trip in Hawaii, asked him to move some large packages at her house. Ryan took on this chore, only to be surprised by the presence of Josie's gorgeous friend, the track star Fatima Hassan. After a little bit of time getting to know each other, the two of them had steamy sex in Josie's bed. Though exhilarated, with school's return around the corner, Ryan was a little nervous over the fact that he was starting to develop serious feelings for multiple girls, seeking the advice of Rachel McNeil for help.\n\n***\n\nJosie Wong was naked and in my bedroom. Her firm, full tits with the single pierced nipple, her pale skin with her few tattoos, her black hair and makeup... fuck she was beautiful. Ever since she'd left to visit her grandmother in Hawaii right after Christmas, there was nothing I wanted more than to see her like this, even if I hadn't expected her to be back so soon.\n\nThe only problem was, she was pissed.\n\n\"You said you loved me,\" she accused.\n\n\"I do,\" I said.\n\n\"Then what's with them? Why are they here too?\" she asked.\n\nWe weren't alone.\n\n\"I thought we were all, like, fun and games, but that's not how it is, is it? That ain't how I feel now, it ain't how you feel now, and now things are totally fucked up?\" Brooke King asked. Beautiful and petite and blonde and also very naked, I'd never seen her this angry before.\n\nAngry wasn't a look I liked on such a perky friend.\n\n\"I don't know why you roped me in with them. Are you really this confused?\" Alice Talbot asked. My new neighbor, she was as beautiful as any of the others, only wearing much more in the way of clothes. Probably because I hadn't seen her naked (yet), but she shared anger in common with these other girls.\n\nI tried to defend myself lamely, \"It's not like that. It's not like any of this. You've got it all wrong, you've-\"\n\n\"And what about me? I found you first, and all I rank is fourth best, at best? What kind of a nightmare is this?\" Kaitlyn Pruitt accused, her huge bare breasts bouncing angrily as she crossed her arms beneath them.\n\nThis was all so fucked up, everything out of control, everything... wrong.\n\nI looked in the corner of my room, and saw Tori McNeil, naked and laughing and sitting in a chair smoking a joint. She seemed to be having a pretty good time with my discomfort which... well, would've seemed about right whether we were friends or not.\n\n\"This is a dream, isn't it?\" I asked her, some vague imitation of logic finally grasping me.\n\n\"Bingo,\" she replied, blowing out a puff of smoke.\n\n\"Then why are you here? Why are you... with them?\" I asked.\n\n\"Because you loved me once, and that seems to be this dream's confused theme. That's probably why Rachel's lurking around here somewhere in the shadows too, though I think you'd be happier to see her, wouldn't you?\" Tori asked.\n\n\"Rachel's here too?\" I asked, more confused than ever.\n\n\"Not like the others, but, yeah,\" Tori said, her joint suddenly replaced by a bucket of popcorn.\n\n\"What's that for?\" I asked.\n\n\"I'm just looking out for the reviews to see how many people still get angry whenever I show up in a scene,\" she said.\n\n\"What?\" I asked.\n\n\"Just a little fourth wall humor,\" she explained. \"Sort your shit out soon, Ryan; it's not gonna get any better on its own.\"\n\n***\n\nI woke up in my bed, panting and sweating. My heart was beating rapidly, but my room was mercifully empty just this once. It was dark, the middle of the night. Somewhere down the hall Dad was snoring.\n\nIt was just a dream.\n\nJust a dream.\n\nHaving the occasional nightmare the night before school was set to start again was nothing new, but this was a little more on the nose than usual.\n\nRolling back over on my pillow and forcing my eyes shut, I said, \"Fucking back to school.\"\n\n***\n\nIt was bright and early on a Monday morning when I set off toward school. It was a gray and overcast morning, but not one that threatened rain. As usual, I was riding my bike, barely balancing for the weight of my overstuffed backpack.\n\nLess than usual, I wasn't alone this time. Alice Talbot, my new neighbor and recent friend, rode along with me. Unlike me, her clothes were nicer, her bike was newer, and, well, she was fucking gorgeous. Soft dark skin, nice tight body, and a pretty face with an even prettier smile. The bike helmet did little justice to her impressive loose afro of curls she'd tied back, but you wouldn't have thought she was inconvenienced just by looking at her.\n\nWe rode most of the way to school in silence, occasionally shooting a comment or two back and forth as I guided her through a few shortcuts to get there, but once we were a couple blocks away, she told me she wanted to get off and walk the rest of the way to rest a muscle in her leg. This was a lie, but one I understood; I wasn't any more eager to get back to school than she was.\n\nThen again, after last night's dream, being with her was confusing in its own way.\n\n\"You need me to remind you that you can do this? Because I will if I have to,\" I said, trying to make polite conversation and ignore my dream at the same time.\n\nAlice laughed, responding, \"I know I can do this; I've done it more times than I can count, it's just one of those things in life that never gets any easier. And senior year...\"\n\nHer accent, a faint and lovely Australian from a childhood raised abroad (even though her teen years were spent stateside) had a way of hypnotizing me at the most unfortunate moments, and this was one of them. It took a moment for me to shake myself back to now and come up with something close to a response.\n\n\"Well, if there's a place to have your senior year, I think Regan Hills High School is it,\" I said.\n\n\"Really? That's the best you've got?\" she asked.\n\n\"...yes? Sorry, I've never been the motivational speech type,\" I said.\n\nAmused, Alice rolled her eyes. \"At least there's no uniforms at this school.\"\n\nI was back to being hypnotized by Alice, but mostly by the image of her in a naughty schoolgirl uniform. This wasn't exactly helping, well, any of my confusion.\n\n\"You used to wear uniforms?\" I asked.\n\n\"Oh, all the time. Dad was always trying to protect my virtue, almost always kept me in one private religious school or another to help keep me innocent and better than everyone else,\" Alice said.\n\nI laughed. \"Did it work?\"\n\nAlice grinned. \"Partially. I do have a sense of smug superiority about many a thing in life, but innocence... no, that never took. I'm glad for that, really.\"\n\nShe looked into the distance, to some faraway place that I knew wasn't here. \"It let me see a lot of things about people I should've seen sooner. Things I should've known. It ended some things, but it started some new things too... Things I should've...\"\n\nShe shook her head. \"Enough of that. That's then, this is now.\"\n\nThat really didn't seem to be the case. I asked, \"Are you sure?\"\n\n\"Positive.\"\n\nShe didn't seem very positive. She seemed like she was steeling herself against something, something I couldn't ignore.\n\n\"Because if you want to talk about it, you can talk to me. You can talk to me about anything, really, and I've got some experience with bizarre life changes,\" I said.\n\n\"Not like mine,\" Alice said, then amending, \"similar, perhaps, but not the same.\"\n\nNow she really had me intrigued. \"Look, I won't pressure, but if you want to talk-\"\n\n\"-I know where to find you,\" she finished. It was a quick, curt response, but I sensed enough honesty in her voice that I knew she meant it, even if it was difficult to face.\n\nThat wasn't the only difficult thing to face. I said, \"We're here.\"\n\n\"We are,\" Alice said nervously.\n\nTentatively, I reached out to her. I didn't know what kind of contact was appropriate, welcome, or even wanted at a moment like this. I settled for a pat on the shoulder, which seemed to be enough.\n\n\"Come on; life hack of the day: best bike rack's on the other side of the faculty lot, and we're early enough to claim some easy real estate,\" I said, guiding her toward the lot.\n\n\"You and I have very different ideas about what makes an interesting life hack,\" Alice mused.\n\n\"I never said it was interesting, but it is practical,\" I said.\n\n\"I... suppose you're right, actually,\" she said, taking her helmet off.\n\nWe'd gotten to school fairly early. Earlier than most of the students, who were still filtering in, but not earlier than most of the teachers. The faculty lot was packed, but we guided our bikes through the cars, carefully avoiding the few stray teachers pulling into the lot later than the rest.\n\nUnfortunately, that didn't keep us from accidentally stumbling into one of the teachers. Or one of the teachers from stumbling into us. It was often difficult to figure out with Ms. Montague.\n\n\"Oh no, oh silly me, oh dear!\" she exclaimed, dropping some of her armload of art supplies on the ground. Paintbrushes and boxes of charcoal and bottles of paint went spilling onto the parking lot, which was, not altogether an uncommon sight with our school's new art teacher. Ms. Catherine Montague was about as sweet as they came, a mid-twentysomething blonde fresh out of college and eager to teach a lot of kids who had little interest in being taught. Her naivet\u00e9 and optimism were only matched by her klutziness, and stories of what she'd messed up most recently were almost as common as hearing stories about the students catching more of a glimpse of her in her tight blouses and short skirts than she intended.\n\n\"You alright, Ms. Montague?\" I asked, bending over to help her pick up her supplies.\n\n\"Oh yes, just running late, so very, very late,\" she said quickly, bending over to help me.\n\n\"Sounds like you and the White Rabbit have something in common,\" Alice said, joining us.\n\n\"What about rabbits?\" Ms. Montague asked.\n\nI quickly whispered to Alice, \"Best not to confuse her.\"\n\nAlice got my meaning, changing the subject, \"Quite a haul you've got here.\"\n\n\"Oh, thank you, yes, I just wanted to make sure that we had everything ready for the first week back, and...\" she trailed off, probably never to finish that sentence. I hadn't had her this year so far, but was going to be starting an elective with her this semester, which promised to be interesting. Especially with the view I got down her blouse. I wasn't looking on purpose, I swear, but at about half a size too small and not buttoned up all the way, it was hard to miss a good look at the top of her cream-colored bra.\n\nShe didn't catch me staring. Alice did, but when she got a look down Ms. Montague's top, she nodded in understanding.\n\nWe helped her gather up the last of her supplies, though rather than put them into the empty bags hanging around her elbow, Ms. Montague held them balanced in her arms at the same level of precariousness.\n\n\"Are you sure you don't need any help getting those to class?\" Alice asked.\n\n\"Oh, yes, I'm fine! I'm always fine! Thank you, thank you, thank you again for your help! I hope to see you both in my class!\" she yipped, jogging off for school proper while somehow holding onto everything.\n\n\"She's a disaster waiting to happen,\" Alice commented.\n\n\"Tell me about it. You got her on your schedule too?\" I asked.\n\n\"I'm not sure yet; I have to pick up my schedule still, but I'm hopeful. Like many disasters, it should be fun to watch at least,\" Alice said.\n\n\"And which of our esteemed faculty have you two dubbed a disaster?\" a voice asked from behind.\n\nI don't know if Alice's heart jumped into her throat as quickly as mine did, but the look on her face said it was likely. The voice was familiar, but stern. \n\n\"Uh, no one, Mrs. Addams,\" I said, laughing softly to hope I could put it off as a joke as we faced my English teacher. \n\nOn paper, Mrs. Janelle Addams was not an imposing woman. She had a pretty, youthful face that once held a smile for pretty much everyone in school, and at 5'5\" she had to look up to meet most male students' eyes. In her late 30s, she was one of the hotter teachers in school that managed to get the boys' attention, with a tight body, a nice big ass and tits that even put that ass to shame, all topped by a head of beautiful, wavy black hair. This should have been enough to warm any of the sharp edges, but for the past few months she'd lacked much of that warmth. Her bold blue eyes were now steely, her face tired and rarely smiling. Combined with her professional suits (even with how they tightly hugged her body), and she could look very intimidating when she wanted to.\n\nLike now.\n\n\"Are you sure? Because I distinctly heard one of you call someone a disaster,\" she said, eying us both like a hawk. One of her favorite techniques in class was the silent treatment, putting a statement out there and then just staring at the class until someone broke. There's no way Mrs. Addams didn't know that it was Alice that said the comment about Ms. Montague being a disaster, but she wanted one of us to admit it.\n\n\"It was me,\" I said. \"I'm the disaster. I always am after a long break from school. I'm probably gonna be a mess today, but I promise, promise, promise that I won't fall asleep in your class again!\"\n\nLooking me up and down, Mrs. Addams nodded. \"See that you do.\"\n\n\"I will,\" I said. \"Come on, Alice, let's lock up our bikes while we still can.\"\n\n\"Okay!\" Alice said, her voice high and full of false cheer as we walked our bikes over to the rack. Quieter, to me, she said, \"Thank you.\"\n\n\"No problem,\" I replied as I locked up my bike.\n\n\"No, really, thank you; there's probably not a worse way to start at a new school than by angering a teacher,\" Alice said.\n\n\"She's not angry. She's just... stressed. Has been for a while,\" I said.\n\n\"What's going on?\" Alice asked.\n\n\"No idea, and not my place to ask. You headed over to pick up your schedule now?\" I asked.\n\nAlice nodded. \"I'm to pick it up at the office, then seal my fate.\"\n\n\"Aw, it won't be that bad,\" I said.\n\n\"No?\" Alice asked, smiling again.\n\n\"I promise,\" I said.\n\nAlice looked genuinely relieved. \"Good, because I was about to-\"\n\n\"Excuse me, Mr. Collins, a word, please?\" Mrs. Addams called, still standing in the lot.\n\nUh oh.\n\nAlice knew when to cut and run. \"I'll go grab my schedule; hopefully we'll have some classes together!\"\n\n\"Hopefully,\" I said, watching her run off into the school. She was nervous, but I had no doubt that she would fit in here just fine. Even if she didn't, it was only a matter of months before high school was over, so who really cared? Still, I hoped the best for her, and not just because she'd found a way to haunt my dreams.\n\nI walked over to Mrs. Addams. \"Hey, Mrs. Addams, what's up?\"\n\nShe looked me over, her eyes running over me in more than a way a teacher usually would. \"A word of advice?\"\n\n\"Sure,\" I said.\n\nMrs. Addams sighed, \"You're cute when you pull the whole knight in shining armor routine, but don't expect that to always rule the day; be sure to pick your battles. Not every teacher is as forgiving as I am, and even I have my... harsh moments.\"\n\nThe way she put extra emphasis on the word \"harsh\" was curious, and for a moment I was taken with the image of her sitting on a desk, yardstick in hand and ready for some very non-school-friendly punishments.\n\nSurely I was imagining this, right?\n\n\"Do I make myself clear?\" she asked.\n\n\"Crystal,\" I said, gulping.\n\nHer lips curled into a smirk. \"Good. Now, I've got a class to prepare for, and I'm sure you don't want to be late.\"\n\n\"No, being late is bad,\" I said, suddenly quite uncomfortable around her. I'd been carrying my bicycle helmet so far, but brought it down to cover up my growing erection.\n\nHer eyes darted downward, amused.\n\n\"I thought so. I'll see you this afternoon, then!\" Mrs. Addams said, turning on her heels and walking away from me.\n\nMaybe I was reading too much into it, but I could've sworn she put a little extra sway into her walk the way her ass bounced from side to side as she walked away. Maybe I was reading too much into it.\n\nMaybe.\n\nMy phone buzzed with a text. I pulled it from my pocket, found that the number was unrecognized. Since I really did want to get to class, I almost ignored it, but since it carried a picture attachment, I was curious. I opened the message.\n\nOn the screen was a pair of large breasts in a lacy black bra. This was new. Usually I knew the girls who were sending me these pictures. They were impressive, mouth-watering, even, but completely unknown to me. Scrolling past the picture, I saw the simple text beneath.\n\nUnknown: Do you like?\n\nI shook my head in disbelief. \"Fucking back to school, man.\"\n\n***\n\nAs the morning went on, I was more and more convinced that I wasn't reading too much into what was going on. The teachers were behaving differently around me, and though it was strange to take in, all in all I wasn't sure that it was a bad thing.\n\nFirst period Spanish was usually one of the classes I dreaded the most, mostly for my limited understanding of the language, less so for getting to watch Sra. Ana Lopez teach it. Not even clearing five feet tall, she managed an impressively curvy body on her small frame and a sharpness that helped her keep control of even the most rambunctious classes. As an introduction back to school, she called up a few students and asked them to describe to the class in their best Spanish what they did over the Christmas break.\n\nI was the third one called up, and nervously stumbled around in my broken Spanish to make up a few lies about what I'd done over the break. I didn't humiliate myself, too bad, though Sra. Lopez definitely looked amused with some of my clumsier word choices.\n\nWhen my turn was up, she accidentally brushed her hand across her desk and knocked a few papers onto the floor. From my position next to her, I got a good view down her shirt into the deep valley of her cleavage, while she herself darted her eyes up to get a good look at my crotch. Bent down behind the desk like this, I could see her while nobody else could, and I swore I saw her smile and lick her lips.\n\nWalking in the busy hallway between classes (and trying to fight back a massive erection that didn't want to go away), I walked past the drama teacher, Mrs. Wanda Harker. In her late 20s, she was a favorite among the boys of school if just for the simple fact that she had some of the biggest tits in the world as far as we knew (I could swear they were bigger even than Haley's), a lasting gift from her pregnancy she was off most of last year for. She'd regained her body and kept her tits, and all of us felt more fortunate for it.\n\nIt felt like it was my imagination, but as we passed in the hall I could've sworn she also darted her eyes to my bulge and smiled, nodding her head appreciatively.\n\nI was reading too much into this, right?",
        "I only became certain that it wasn't just my imagination when I went to my last class before lunch, science. Mrs. Valerie Chan was always a favorite teacher of mine, not just because she was gorgeous and knew how to fill out a lab coat, but because she always had a sense of irreverent fun that always made her a blast to watch. She called me up in front of the class to help her with an experiment with baking soda, vinegar and a bit of food coloring that got out of hand and blasted all over the front of her white lab coat. The class laughed, she laughed, I ran for some paper towels for her.\n\nHolding the wad of paper towels in my hand, I approached her, meaning to hand them over to her.\n\nIn a low voice that nobody else could hear, she said, \"You want to dry them off yourself? Or would that be better after class?\"\n\nI gulped. I handed the wad of paper towels back to my amused teacher, and I went back to my desk. Alice sat only a few seats away from me, looking on curiously at my discomfort, then at Mrs. Chan, then rolled her eyes and smiled.\n\nThis was fun, don't get me wrong, but I was really hoping to get back into the swing of things with schoolwork; I wasn't really prepared to jump into sexy come-ons with both feet yet.\n\nI didn't need this, not on the first day back.\n\nMy phone buzzed again. It was the fourth time this morning the anonymous number had texted me, and though I didn't open it up, I knew what it would contain. The other two pictures I'd received had added both a camel toe in some very classy lingerie, and then a picture of a nice, big ass only half-covered by that same lingerie, both pictures accompanied by various teasing come-ons. No doubt this text was more of the same, and though I was loving the attention, I was also getting irritated trying to figure out why it all came on at once.\n\nThen it hit me. I knew *exactly* who was to blame.\n\n***\n\n\"Can you really blame me?\" Mrs. Brenda Lynn moaned as I fucked her from behind. Since it was lunchtime, we didn't go as all out as we usually did. My pants were around my ankles, her skirt was pulled up around her waist and panties pushed off to the side. I did get her blouse open and amazing DD tits out, though, which I liked to grab onto while I drilled her bent over her desk.\n\n\"I told you some of my friends needed the attention!\" she yelped as I buried my cock all the way into her pussy with one thrust. She was a moaner, but with the door locked and the shades drawn on the windows, we had enough privacy not to have to worry about any interruptions.\n\n\"I know, you said that...\" I groaned as I pulled back out and kept back at fucking her hard. \"But you said I should talk to you; you didn't say you'd tell your friends... I mean, what about discretion...?\"\n\n\"I want to keep discrete, fuck, but it's...\"\n\n\"You too?\" I asked. She nodded, her light blonde bob bouncing from side to side.\n\n\"Then hold that thought,\" I said, really taking it to her, grabbing her hips and fucking her as hard as I could. Her cries became louder and louder as she approached orgasm, and the only thing I could do to hold them back was put my hand over her mouth. Her eyes darted over to me, annoyed but sensible; what we were doing here was very dangerous, and neither of us wanted to get her in trouble. I liked Mrs. Lynn; she'd been one of my favorite teachers for a long time before we started having sex, and now that we had, things hadn't changed. She was the one who started me tutoring Kaitlyn earlier in the year, the one who accidentally set everything in motion. I wanted to please her more than anything, and when my cock was gripped by her tight cunt, it wasn't that difficult to be motivated to please her.\n\nWith a stifled cry of pleasure, Mrs. Lynn came, her body shuddering against her desk while her pussy clamped down on my cock hard. This set off my own orgasm, filling the depths of her tight pussy with my cum.\n\nI collapsed against her on the desk, both of us breathing heavily. She turned her head slightly, kissing me and smiling. \"Not bad for a three minute fuck.\"\n\n\"No,\" I admitted, laughing. I usually tried for better than that, but with only a narrow window for lunch and both of us pretty well powered by lust, well, we may have hurried things along a little.\n\nThough we could've probably stayed conjoined together for a while, I had promised to meet Alice for lunch and get a few answers. I pulled out of Mrs. Lynn and stuffed my cock back into my pants, while she pulled her panties back into place and dropped her skirt down. Aside from a little smeared makeup and some hair being out of place, both of which she got to work on fixing with a small mirror from her purse, you wouldn't have been able to tell anything was amiss.\n\n\"God, you fired so much cum in me, I might just leak in front of class. *That* should be fun,\" Mrs. Lynn mused.\n\nI let her readjust herself just long enough before asking, \"So? Discretion?\"\n\n\"That? Right,\" she said. \"I thought about that, and I thought about what we'd discussed, but over Christmas break I went to a meeting of my book club (which is less a book club and more an opportunity for a bunch of us neglected moms and housewives to bitch to each other and share tips about sex toys) and we got to talking about who is and isn't getting any. Since most of the ladies were in the *weren't* category, and they're all really good friends and hot ladies... I may have mentioned you and encouraged some of them to look you up and see if you were interested. I know there's a lot you can do for them, and a lot they can do for you, so...\"\n\nWell, that did explain a lot of how my morning had gone, and I didn't have any real problem with being pursued by a bunch of hot MILFs. The surprise was something I needed to deal with, but if this was part of my new normal now, I'd deal with it.\n\n\"...forgive me?\" she asked, smiling sweetly.\n\n\"Of course. I was just surprised, is all,\" I said.\n\nMrs. Lynn asked. \"Don't be surprised now, be surprised by what they can do to you later.\"\n\n\"You're filling me with all sorts of confidence,\" I said.\n\n\"Then let me fill you with something else,\" she said, drumming her fingers on her desk.\n\n\"Oh?\" I asked, nervous.\n\n\"Anticipation! Excitement! Whatever else you want! Because I got your next two tutoring assignments!\" Mrs. Lynn exclaimed, doing her best to sound like she would in front of the class when trying to sell us on something hard.\n\n\"Who?\" I asked.\n\n\"Jessica Garza and Peter Nixon. They're both good kids, but both easily distracted and could use someone to help them focus, and... why do you look like you just saw a ghost?\" she asked.\n\nI looked like I saw a ghost because of one of the names she mentioned. Not Jess Garza, who I knew by reputation as an affable skater and stoner, but Peter Nixon.\n\nPeter Nixon the enormous football player.\n\nBig and black Peter Nixon, one of Kyle Bowman's better friends.\n\nPeter Nixon, whose girlfriend, Sasha Pearl, I'd had sex with repeatedly over New Year's Eve.\n\nPeter Nixon who'd been glaring at me ever since Kyle was expelled.\n\nI couldn't turn down Mrs. Lynn, but I could be a little afraid of what I had in front of me.\n\n\"I'm fine,\" I lied.\n\nShe didn't believe me, but she let me lie this once so we could continue. \"Good. I've arranged for them to meet you after school at the library, and you guys can set up your own tutoring schedule from there. Like I said, they're both good kids who need a little help and motivation, the kind of help and motivation I know you can give them, so, go easy on them and help them out? I don't want to see anyone fail my class this year.\"\n\n\"I'll do what I can,\" I gulped. I'd come to Mrs. Lynn's for lunch to ask about the teachers and pick up my tutoring assignments, but I didn't expect a bombshell like this to be dropped in my lap.\n\nFucking back to school.\n\n***\n\nMy phone vibrated with another picture just as I sat down for lunch with Alice at a table toward the rear of the cafeteria. I didn't look at it, even if it vibrated insistently enough that even she noticed.\n\n\"Aren't you going to pick that up?\" she asked.\n\n\"Later,\" I said.\n\n\"Why, don't want me seeing lust messages from an admirer?\" she teased.\n\n\"No. Yes. Sort of. It's difficult to explain,\" I said.\n\n\"A lot around here is difficult to explain, I'll grant that,\" she said.\n\n\"Is it?\" I asked.\n\nShe nodded. \"The girls around here are uncommonly beautiful, and seem to have bigger than average... endowments, on the average.\"\n\nI nodded in return. \"Yeah, I've noticed. Heard some people say it might be something in the water.\"\n\n\"Really?\" she asked. \"You believe there to be a scientific explanation for the unlikely attributes of the women in this fair town?\n\nI shrugged. \"Who knows for sure. I'm not complaining.\"\n\n\"I'm not either, I was just noting that it was, well, uncommon,\" Alice said, pokinig helplessly at a Jell-O desert that refused to be punctured.\n\n\"Other than noticing uncommon elements, how's Regan Hills High treating you so far? You blending in, or sticking out like new kids do in the movies?\" I asked. \n\n\"Funny,\" she said with a voice that said it was anything but. \"And it hasn't been bad. The teachers appear competent, and the students seem more focused on dealing with senior year shit than the new girl with the accent. If I had to choose how my day could go, this would be it, so, I'm happy.\"\n\n\"Good. Make any new friends?\" I asked.\n\n\"Well...\" she trailed off, her eyes darting behind me.\n\n\"Hey guys!\" a perky, bubbly voice I'd know anywhere enthused as it sat down next to me.\n\n\"Hey, Brooke,\" I said to the tiny, energetic blonde with the cute face and bouncing pigtails. As was her personal trademark at school at school, she wore pretty much all hot pink and the girliest fashion imaginable. On a lot of girls it would be irritating, but since it was all part of the Brooke King experience (and I loved the Brooke King experience), I could easily give her a pass.\n\n\"Hello, Brooke,\" Alice said with a warm smile.\n\n\"You two know each other?\" I asked.\n\n\"Totally,\" Brooke replied. \"I caught her lookin' all, like, confused and lonely in science when it came time to pick lab partners, and, like, that wasn't cool, nobody should be alone especially when they were, like, totally new to a place, so we teamed up. Then I found out she's the one we saw move in next door to you, and, like, we got to talking and I think we're, like, friends now!\"\n\n\"Brooke's rather uncommonly brilliant in the sciences, actually. She's gonna help me catch up to where I ought to be,\" Alice said.\n\n\"Really?\" I asked.\n\n\"Totally,\" Brooke giggled, rolling her eyes as if I'd said the most foolish thing in the world. \"It's easy stuff, honest, but I'll totally help you out, Alice.\"\n\n\"Thank you,\" Alice said.\n\nThis wasn't the most likely pairing of people I imagined, but when I remembered how easy it was for Brooke to make friends with anybody, I dialed down the surprise a little. That didn't change the complication that came from the fact that these were two girls I had some confused feelings over (while my girlfriend was still half an ocean away), and that I was sitting here sharing lunch with them.\n\n\"You know, we should all, like, totally hang out sometime. It'd be fun, show the new girl around, show her how fun Regan Hills can be!\" Brooke said.\n\n\"Oh, I think I understand how fun Regan Hills can be,\" Alice said slyly.\n\n\"You have? Oh, sweet, you told her about all the hot sex?\" Brooke asked me.\n\n\"She, uh, kind of figured it out on her own. We're not exactly subtle,\" I said.\n\n\"We're not?\" Brooke said, stroking her chin thoughtfully. \"Hmmm, come to think of it, we aren't. I get all screamy when I'm horny. Totally no regrets, though.\"\n\n\"You're not terribly subtle, no. Not that I mind. Everybody needs their fun,\" Alice said.\n\n\"Yeah, but if you, like, want to, you should maybe join us sometime? I swear, Ryan and me are, like, totally awesome at sex and we'd be a lot of fun if you wanted to like threesome or just watch us or something,\" Brooke said.\n\nAlice oh so slightly shifted around in her seat uncomfortably. \"Tempting, but I'm... still trying to get my bearings here.\"\n\n\"Oh, yeah, of course, totally,\" Brooke said. \"So, you doin' anything after school, Ryan?\"\n\nThe way Brooke blinked at me, I knew what she meant. Either she wanted to get back to our regular after school habit of working out (\"yoga, pilates and anal\" as she put it), or just cutting out the yoga and pilates entirely.\n\n\"Actually... yeah, I do. I've got some new tutoring assignments I have to sort out, and I don't know how long that'll take,\" I said, my eyes darting mournfully down to Brooke's mouthwatering ass, my cock stirring in my pants as it had been doing for quite a while this morning.\n\n\"Oh... bummer...\" Brooke said, looking genuinely crestfallen.\n\n\"My schedule's positively open,\" Alice said, reaching across the table and patting Brooke's hand. \"I'm not the same kind of fun as Ryan, but if you want to show me around, I think you'd make a lovely guide.\"\n\nBrooke's eyes lit up with the kind of unrestrained joy I was sure only she was capable of. \"Do you like shopping?\"\n\n\"Depends,\" Alice said, looking Brooke up and down. \"This town have any good vintage stores?\"\n\n\"Not exactly my style, so I dunno, but I'll totally ask Rose; she knows all sorts of places like that!\" Brooke said excitedly.\n\nAlice smiled. \"Then, yes, I quite enjoy shopping.\"\n\nBrooke squealed. \"Yay! We're gonna shop and order pizza and do each others' hair and maybe make out and sneak a cheap bottle of Trader Joe's wine. We're gonna have, like, the best girl's night ever!\"\n\nI looked on Alice gratefully, happy that she was happy to hang out with Brooke. She nodded back at me understandingly, but I could tell that even she found Brooke's energy infectious. These two girls getting along like this, and me having to spend some hours after school here...\n\nFucking back to school.\n\n***\n\nThough I really wanted to get caught up on what I needed to get caught up on in school, now that everyone was back, I made an effort to swing by the Puma Press newspaper office during my afternoon break in the hopes of finding out that much wasn't needed of me. I'd dropped off a number of interviews to the editor, Nadia Barclay, before Christmas break and was hoping that bought me some extra time so I could get my footing again.\n\nThis... wasn't meant to be.\n\nThere were only a few people hanging around the offices when I got there, a couple of our graphics design guys messing around on the new computers with Photoshop, and a short-haired brunette that definitively wasn't Nadia.\n\nI was clear. All I had to do was step out the door I'd just opened, head on over to class, and that'd be that.\n\nThe brunette had other ideas. Turning to look at me with her big brown eyes, she saw me and called out, \"Hey, Ryan! You're on my checklist, come here.\"\n\n18-year-old Nica Dubois, our paper's new assistant editor. For someone as slender and cute and innocent-looking as she was, she could be remarkably direct, enough to do battle with Nadia.\n\n\"Your checklist?\" I asked.\n\n\"Of things that need to be done while Nadia's out with flu; she says she's sick, I think she just wishes for a longer holiday,\" Nica said. When she got particularly worked up, the faint traces of her French-Canadian accent popped in, and the way she sounded now I knew she was particularly worked up.\n\n\"Nadia? Faking sick?\" I asked, dubious.\n\n\"Bah, I know it's an impossibility, it's just what it feels like when she leaves this work all to me! I love it and I hate it, 'tis the nature of the media. But I need you for a moment now, a moment later,\" she said.\n\n\"I've got a moment now. Later...\" I trailed off.\n\n\"Later can be negotiated, now, I've questions that need answers. First of all, I should say good work on those interviews you provided. Good, but not great. You've a ways to go with your interview style and formatting, and journalistic ethics would oblige me to tell you fucking your interview subjects into an orgasm-induced stupor is not advised, but, overall you've good material. I would like some time with you soon so we can sculpt it into something that can be used for the paper, something that Nadia would not complain of. Does that follow?\" Nica asked.\n\nHer casual mention of knowing of my sexual exploits didn't even cause the slightest of hiccups in her quickly rattled off speech, something I was grateful for.\n\n\"Definitely,\" I said. \"Let me know when works for you.\"\n\n\"Not today, obviously, but soon; give me your number and I shall text you when might work,\" Nica said.\n\n\"Will do,\" I said, scratching it out on a Post-It and handing it to her.\n\n\"And secondly... this one is more personal, but, you and Josie, you two are still a thing, yes?\" Nica asked.\n\n\"Yeah, why?\" I asked.\n\n\"I was hoping that you had some information on when she might be getting back. She is one of our best photographers, and we are at our best when we have our best people, so as you can tell, right now we are not at our best,\" Nica said.\n\n\"That doesn't sound personal, that just sounds, you know, like paper business,\" I said.\n\n\"Ah yes, but Josie has also been assisting me with a personal project that I have been grateful for her help with, hence, that portion of the question,\" Nica said knowingly.\n\nOkay, that made sense. Curious sense, but also the kind of thing that was between them, so, I shouldn't ask about.\n\n\"Ah. Well, short answer is, I don't know and she doesn't know when she gets back, but, I talk with her almost every day; I can let her know that you're looking forward to her help,\" I said.\n\nNica smiled. It was a broad, warm smile that I very much liked to see.\n\n\"I would be most thankful for that, Ryan,\" she said.\n\n\"My pleasure,\" I said, turning to make my way for the door.\n\n\"That doesn't prevent me from needing your help with the interviews!\" Nica called out to me when I grasped the doorknob.\n\n\"I know,\" I grumbled.\n\n\"Good that you know, because I intend to put you through the wringer on these until they look good!\" Nica taunted.\n\nI grumbled again.\n\nFucking back to school.\n\n***\n\nThe library used to be one of my havens in school, a quiet place where I could hide away from the hustle and bustle of people more popular than me. That had changed since November, however, after I'd had a threesome with the librarian, Mrs. Sullivan, and her slut in training 18-year-old library aide, Marie Halpern, it had taken on more of a haunted house sort of feeling. Not because I had any bad feelings about what happened, no, I had a lot of fun with Mrs. Sullivan and Marie, but because whenever I was in here, I always felt like I was being watched.\n\nUsually, I was right.\n\nMarie had a particular way of stalking the stacks, hiding just out of sight but watching me, ready to pounce. The tiny, platinum blonde girl had the look of a stern librarian most of the time, but when the two of us were on our own she was a freaky, energetic little thing who liked coaxing cum out of my cock almost as much as me making her scream.\n\nAs I sat at my table at the end of the first day back after winter break, waiting on my tutoring subjects, I was quite aware that I was being watched like a hawk. It was entirely possible that if I'd been the only student in here, Marie would already be on me, bent over a table with my cock buried deep up her ass. Since I'd spent much of the day semi-hard (and even sex with Mrs. Lynn could only do so much), this wasn't that bad an image to keep in the back of my mind, but it was one I'd rather have pushed away so I could focus on the task at hand and get the hell out of here.\n\nSchool had ended almost twenty minutes ago, and neither of the two students I was supposed to be tutoring for Mrs. Lynn had showed up. I told myself that I was giving them another fifteen, tops, before heading out and getting Mrs. Lynn up to speed. To tell her I'd tried, and that I'd be happy to tutor students more motivated to actually learn.",
        "Until then... I still had the texts from my Unknown caller. The pictures were enticing, beautiful tits, ass, a fine body in even finer lingerie. She was tantalizingly close to naked, with the fabric sometimes millimeters away from showing something good, but never enough. I couldn't tell who it was, she always kept her face out of it, but if I had to wager, I'd have assumed one of the older book club ladies Mrs. Lynn told me about. Whoever she was, she was hot, and if the texts she sent with the pictures were true, her intentions were pretty clear.\n\nUnknown: Do you like?\n\nUnknown: Imagine these tits wrapped around your cock\n\nUnknown: Want to feel this ass?\n\nUnknown: This ass wants to feel you\n\nUnknown: Think these are cocksucking lips?\n\nUnknown: I can treat you so nice.\n\nUnknown: Why aren't you texting me back?\n\nUnknown: Don't you want to cover me in cum?\n\nI did. I really did, but I hadn't texted back because I wanted to see where this was going. I was so tempted, and she was very distracting, keeping me on edge without ever pushing me over, but if it was what I thought it was, I wanted to play it safe. If it came to anything, however, I knew I'd fuck her as hard as I could.\n\nBut that was all maybes and perhaps and probablies, nothing for sure. She hadn't set up any plan, hadn't done anything beyond teasing, and if that's all it was...\n\nA backpack hit the table in front of me, the chair next to me pulled out as a large man sat down next to me.\n\n\"Hey, man. Sorry I'm late,\" he said.\n\nHalf a head taller and 60 pounds of muscle heavier than me and wearing his football team letterman's jacket, 18-year-old Peter Nixon's mere presence made my heart drop. I thought I could handle him here, I thought I could handle this guy I was pretty sure hated me, but I couldn't. He had plenty of reason to hate me, from getting Kyle expelled to fucking his girlfriend to usurping his position as school's biggest ladies' man (though I was uncertain of the latter). He was handsome and confident and usually had an easy smile, but for me over the past few months, I'd only seen him as the guy who probably wanted to kill me.\n\n\"It's okay. You're, uh, not the latest,\" I stammered.\n\n\"You okay?\" Peter asked. \"You look like you saw a ghost.\"\n\nI really hoped a joke would pull me out of this. \"You know, you're the second person to tell me that today?\"\n\nIt didn't.\n\nPeter laughed. \"Well, when the shoe fits, and let me tell you, it fits on you now. Do you need some water, fresh air, maybe?\"\n\nI felt like I was going to throw up. \"I'm fine.\"\n\n\"You're not fine, you're-\" Peter said, stopping and laughing, then putting his palm to his head. \"You're scared of me?\"\n\n\"A little bit,\" I squeaked.\n\nPeter laughed. \"Is it a jock-nerd thing? A because I'm black thing? Or... ah, it's because of Kyle and Sasha, isn't it?\"\n\nWordlessly, I nodded.\n\nPeter ran a hand through his short-cropped hair. \"That's my fault... sorry. About Kyle, I mean; I hold nothing against you for Sasha, since you showed her a good time and she's got nothing but good stuff to say about ya. Treat my girl right, and I'll treat you right is how I see it. About Kyle, though, that's on me. I might've been pissed at you for a time with him bein' kicked out and all, but that's 'cause I didn't know all about him. I thought him and me were friends, and I had to watch his back because of that. He had different ideas, so I got some perspective on things. With all that and Sasha, I got a different view on you, so... sorry if I ever had you afraid.\"\n\nThis wasn't how I imagined this meeting to go. It didn't fix everything, but it did slow my heart enough that I didn't feel like passing out.\n\n\"That's good to hear,\" I said.\n\n\"Good. I'm glad. And I'm glad you're willing to help me out, even with a good scare,\" Peter laughed.\n\n\"You want the help?\" I asked.\n\n\"Nobody wants to admit they want help, but, yeah, I could use it,\" Peter said. \"School and me... I don't hate it. I really don't. But when I try to read something and the letters all get out of order, it can be... a problem, especially for gettin' on to college.\"\n\n\"Dyslexia?\" I asked.\n\nHe nodded. \"I've been doing therapy for it since I was a kid, but it's not always worked so hot. All my teachers know it and try to help, so I thought you should, too, if we're gonna get into this. We're gonna get into this, right?\"\n\n\"Totally,\" I said.\n\nPeter chuckled. \"You've spent a lot of time around Brooke, haven't you?\"\n\nI laughed. \"Totally.\"\n\n\"She's a cute one. A wildcat in the sack, too,\" he said.\n\n\"Tell me about it,\" I replied. I hadn't expected to have even this much in common with Peter Nixon, so it was about as good a start as any.\n\n\"You want my help?\" I finally asked.\n\n\"If it helps me graduate from more than just my football skills, yeah,\" Peter said.\n\n\"I can't promise you that much, and a lot of it's gonna have to come from you,\" I said.\n\n\"I know,\" Peter replied. \"If you'll try, I'll try.\"\n\nHe had a good attitude about getting tutored, I gave him that. Better than Kaitlyn did when we first started out. I was willing to admit that I'd misjudged Peter early on, and realized that I wanted to make it up to him. I thought about his situation. \"You've memorized plays out on the field, right?\"\n\n\"Yeah,\" Peter said.\n\n\"Then I can help you memorize enough history to get a passing grade,\" I said.\n\n\"Really?\" he asked, hopeful.\n\n\"Really,\" I confirmed.\n\nHe held out his hand for me to shake. \"Thank you, so much, man, I mean it. I need this and... thank you.\"\n\nI shook his hand. \"No problem. Let's you and me work out a schedule, and I'll start helping you out when you're ready.\"\n\n\"Thanks,\" he said, smiling broadly.\n\nI laughed. \"If only the rest of the people I'm tutoring were this dedicated,\" I said.\n\n\"They're not?\" he asked.\n\nI shook my head. \"Jess Garza was supposed to be here too, but I bet she's just off somewhere getting high.\"\n\n\"No, she isn't,\" Peter said. \"I saw her down in the alley by the soccer field, doin' tricks with some of the other skaters.\"\n\n\"Huh,\" I said. A moment ago, I was willing to write both Peter and Jess off, but with Peter showing his dedication, I realized that I probably owed Jess that much of a chance too.\n\nThe day may not have been perfect, but it was starting to turn around; I just hoped that Jess was willing to help turn it around with me.\n\n***\n\nThe alley between our school's disused soccer field and the houses beyond wasn't much of an alley as it was a narrow strip of occasionally paved land that separated Regan Hills High from the outside world. It boasted just enough shade and discarded pieces of furniture from the school to make it a popular place to hang out if you weren't interested in being seen.\n\nI squeezed through a gap in the soccer field's fence and found the crowd I was looking for pretty quickly, a handful of maybe four students either getting high or doing what little they could do in the way of skateboard tricks on some of the old, cracked concrete benches left in the alley.\n\nThe person I was looking for was one of the latter.\n\n\"Jess!\" I called out to her.\n\nThe short skater in the hoodie and knit cap looked at me, then her friends. She laughed, \"Guess who's finally busted? You guys run; I'll catch up.\"\n\nThe others didn't really run so much as they ambled out of there, leaving me and Jess alone in the alley. It felt planned, which made it feel more annoying.\n\n\"We were supposed to meet in the library almost forty-five minutes ago,\" I said.\n\n\"Yeah, I know,\" Jess said, bending over and picking up her board, setting it down on a nearby bench. Though she was a tiny little 18-year-old Latina, she had some decent curves. Her jeans may have been full of holes on the front, but that didn't hide the nice, round and wide ass in the back. Her faded gray hoodie covered most of her upper body, but in the front it was unzipped, giving a nice view of the tight, midriff baring black shirt with a white skull in the center, stretched across a nice pair of DDs. Her smile was lazy but cute, her eyes lively if a little unfocused, and her hair was mostly stuck under an old knit cap, but the few black curls that snuck out from underneath were shiny and pretty.\n\nShe was, for all intents and purposes, kinda hot for a skater girl, but I was so annoyed with her right now I could mostly ignore that.\n\nMostly.\n\n\"Then why didn't you?\" I asked.\n\n\"Because I didn't want to,\" Jess said, matter-of-factly.\n\n\"I don't think Mrs. Lynn's going to appreciate hearing that,\" I said.\n\n\"Who the fuck cares what Mrs. Lynn thinks?\" Jess asked.\n\n\"I do,\" I said.\n\n\"Well, yeah, of course *you* do, you're a teacher's pet. Why should *I* care what Mrs. Lynn thinks?\" Jess asked.\n\n\"Maybe you should because, oh, I dunno, she's in charge of your grade? And if you don't make an effort to make our tutoring sessions, you'll get in trouble?\" I suggested.\n\nJess snorted. \"I've been in trouble before. I'm used to trouble. I can survive more trouble.\"\n\n\"Really? That's all you've got to say about that?\" I asked.\n\n\"Yup,\" she replied. \"But if me being in trouble's stuck on your conscience, you can always, ya know, sign the paper Mrs. Lynn gave me and tell her I've been a good little student?\"\n\nJess tried to say this in a way that sounded half-hearted and casual, but I could tell she was actually hopeful. Alright, if that's how she wanted to play it, two could play that game.\n\n\"Yeah, no, it's not that easy,\" I said.\n\n\"That's not what I hear,\" she said, stepping slightly closer to me.\n\n\"What do you hear?\" I asked.\n\nShe took another step closer, looking down, then up at me. \"That you'll let girls slide for sex.\"\n\n\"That's not how it works,\" I clarified.\n\n\"Oh, no?\" Jess taunted. \"I heard you let a slut cheerleader slide on tutoring in exchange for her fucking you. I call that a fair exchange. I'm good at five things: skating, welding, smoking weed, paintball... and fucking.\"\n\n\"I didn't let her slide. She's still doing the work. She's doing better, too,\" I said.\n\n\"Well, isn't that dandy?\" Jess asked. She hooked her thumbs under the edge of her shirt and began pulling it up her abs. \"Don't be so quick to turn me down, not when you haven't seen these...\"\n\nShe pulled her shirt up over her tits, and the massive breasts popped down. They were round and firm and a true sight to behold, with dark, palm-sized areolas and firm nipples that stood out like bullets.\n\n\"Jess!\" I exclaimed.\n\n\"What?\" she said, closing the distance between us. One of her hands, strong and firm, gripped my cock through my pants and began to rub me, while her other hand took one of mine and brought it between her legs.\n\n\"This isn't how this is supposed to go,\" I said.\n\n\"Yeah, but you're still pretty excited,\" she said, guiding my hand over the waistline of her jeans and pressing it down inside. My fingers grazed warm, moist lips, and she groaned. \"And so am I.\"\n\nGod, this felt good. Good, but wrong. I'd had sexual encounters begin similar to this, why couldn't this one?\n\n\"I can just drop to my knees and give you one hell of a BJ right now, or we could go back to my van and you can fuck me however you want; I do pretty much everything, and I'm really, really good. If you're as good as everyone says, we can make some sweet music, you can pass me past tutoring, and...\"\n\nThat was it. That was what brought me back. I pulled my hand out of her pants and stepped back.\n\n\"I can't do this. Not like this. It has to stop,\" I said.\n\nA little hurt, a little angry, a little confused, Jess pulled down her shirt and said, \"But, I thought you were, you know...\"\n\n\"What? Easy?\" I shot back.\n\nThe word hits her like a slap to the face. \"Well, yeah. You aren't?\"\n\n\"I am. Sometimes. The right times. This isn't a right time. I have sex when it's fun and with someone I want to have sex with, and though you are... achingly hot... and I'd love to have sex with you at a better time, I'm not gonna do it like this,\" I said.\n\n\"I'm confused,\" she said.\n\n\"Me too. This might be a first for me to be in this exact situation, I'm not sure. Whatever it is, though... I can't let you off of this in exchange for sex,\" I said.\n\n\"So that's how it's gonna be, huh? You're just gonna let Mrs. Lynn ride me for the rest of the year and give me a hard time on my grades?\" Jess shot back.\n\n\"That doesn't have to be the case, not if you do the work,\" I said.\n\n\"But I can't do the work,\" Jess said.\n\n\"Why not?\" I asked.\n\nJess groaned in frustration, and not in a good way. \"Because I'm bad at it, okay? Because I suck at this. I meant it when I said I was good at five things. Those are the only five things I'm good at, and I dunno about you, but I didn't hear me say schoolwork. No matter what I do and how I try, I fuck things up, and it just ain't worth trying.\"\n\nMy phone buzzed in my pocket. Despite great temptation, I chose to give my attention now to Jess, who was clearly struggling.\n\n\"Then come to tutoring. I'll help you out however I can. In history... fuck, in whatever other subjects I can. Believe it or not, I want to help.\"\n\n\"And what's in it for you?\" Jess asked.\n\n\"Nothing. Satisfaction that I've helped someone who needs it. That's all, really,\" I said.\n\nJess didn't seem convinced. \"I dunno...\"\n\nShe had doubts in herself. Serious ones. I didn't know what her home life was like, or what her past with learning was like, but I saw someone who'd given up a while ago and just settled into a complacency she saw no reason to get out of. If there was some way I could just motivate her...\n\nAnd this was when I had one of those ideas that was so crazy it might work.\n\n\"Fine. I'll fuck you,\" I said.\n\nHer eyes brightened, a little. \"Yeah?\"\n\n\"If you try,\" I said.\n\n\"If I try?\" Jess said.\n\n\"If you try,\" I repeated. \"Come to tutoring. Let me help you. Do your assignments. Show me some progress. If you make some progress in your homework, on tests, quizzes... I'll fuck you,\" I said.\n\nShe looked dubious. \"That's... I dunno.\"\n\n\"You say you're really, really good at sex?\" I challenged.\n\n\"Yeah,\" she replied.\n\n\"Well, I'm better than that. Chances are I might be the best fuck you'll find in this whole damn school. Every girl I've been with, I've made cum multiple times just because I like making it happen, and if you try, I'll give you the fuck of a lifetime. I'll make you cum so hard you won't know what hit you, and I'll do it as many times as you'd like. However you want my cock, whatever you want to do with it, wherever you want it, I'll do it. You need a new fuck buddy? I can be your guy. All you have to do is let me help you, and make an effort,\" I said.\n\nJess thought about this. She thought about it for a while, actually, enough that the buzzing of my phone reminding me of my newest text was starting to get annoying.\n\n\"Fine. I'll try. For how long?\" Jess asked.\n\n\"Ideally, until you graduate. Other than that, how 'bout we give it a month? You improve your grades by the end of January, and all bets are off hardcore fucking is on the table,\" I said.\n\n\"So this is how you motivate, huh? You're crazy,\" Jess said, smiling and running a hand under her cap. \"You're crazy, but... I like crazy. Fine, we'll do some tutoring, see if you rub off on me.\"\n\nI gave her my phone number so we could set up something more concrete with our schedule, and at that, we went our separate ways. I sincerely hoped that Jess wasn't just trying to pull one over on me and wasn't just going to ghost me when I'd put myself out there for her, because I truly did feel like I could do something for her. I didn't know why, but I believed in her.\n\nI only hoped she was capable of believing in herself.\n\nI slipped back through the gap in the fence and started to make my way back toward my bike. I was looking forward to going home, getting caught up on my own homework, and hopefully chatting with Josie some before bed.\n\nOnce again, my phone buzzed with reminder that I had an unread text.\n\nI pulled it from my pocket, and what do you know, it was from my mysterious Unknown caller again. There was no picture attached to this one, only a simple text message.\n\nUnknown: Bungalow 237. I'll be there for another 30 minutes. Curious?\n\nI paused. The message was sent maybe fifteen minutes ago. How curious was I? Curious enough to follow this trail of sexy breadcrumbs, or not so curious that I wouldn't just go home right now?\n\nI looked over toward the faculty lot near where my bike was parked, then at the bungalows on the disused soccer field, tapping my foot and seriously thinking about what I had to do.\n\n***\n\nAs it turned out, I was curious enough.\n\nBungalow 237 was unlocked when I stepped inside. Though its windows were still blacked out from when it was the Puma Press' haunted house for our school's Halloween Scream, the interior looked completely different. It had been repurposed once again for storage, though was nowhere near as bad as it was when Josie and I first set about clearing it out. There were a few walls of empty filing cabinets, a handful of broken desks, and a single couch on the wall opposite me.\n\nThe couch was not empty.\n\n\"Hello, Mr. Collins,\" she said. \"If you're here for the reason you and I both know you are, I'd ask that you lock the door behind you?\"\n\n\"Of course,\" I said, locking the door, \"Mrs. Addams.\"\n\nMrs. Janelle Addams sat on the couch, a little more tired than I saw her this morning, yet still every bit as gorgeous. Her business-like suit of matching skirt and jacket did little to hide her big ass and bigger tits, while her toned legs looked positively tasty in her stockings. She'd kicked off her heels sometime before I got here, and her gorgeous face was definitely showing the end of a long day, but she still looked unbelievably hot.\n\nI set my backpack by the door and walked over to her.\n\n\"Did you like my pictures?\" she asked.\n\n\"Oh, yes,\" I said.\n\n\"Did they make you hard?\" she asked.\n\n\"Yes. Did taking them make you wet?\" I asked, feeling out what exact game she wanted to play here.\n\n\"Yes,\" she said without the slightest embarrassment. \"You know, next time you can feel free to text back your appreciation. Maybe a nice close-up of that cock Brenda and Lauren keep telling me about.\"\n\nI smiled. \"I was just looking to play it safe, see how interested you were, and make sure you were for real, that I wasn't falling into some kind of trap. Can't be too careful these days, can we?\"\n\n\"Oh, this isn't a trap, and I'm very much for real. Are you?\" she purred.\n\n\"It depends on what you have in mind,\" I returned.\n\nMrs. Addams sighed. \"Listen, Ryan, I'm going to be blunt. I've had one real bitch of a day at the end of a real cunt of a few months and need to let off some serious steam. I know you're considerate, and I know you're a talker, and later some of that will be greatly appreciated, but until then I don't need considerate, and I don't need talk. I don't want to be in any more control today; I want to be fucked and used like a goddamn whore until you make me cum over and over again. I want to be called names and treated roughly and fucked until I can't walk straight. I need your cum... on me, in me, wherever. I just need... release, and I think you're one of the few capable of giving it.\"\n\nShe stood up from the couch and walked in front of me. \"And for you... I'll do anything your sick teenaged mind wants. I know I'm not your first teacher, but I'm sure you've had your fantasies about me too, haven't you? I know the way the boys stare at me, every one of them wanting a glimpse and none of them ever getting it no matter how tempted I am because I'm so prim and proper and following the rules. Wouldn't you love to see what I've got underneath this? Wouldn't you love to feel it? To fuck it?\"\n\nMy short answer to this was, 'God yes, please yes, oh sweet Jesus, thank you, yes!'",
        "The longer answer was a little more complex. To say I'd had my fantasies about Mrs. Addams would be an understatement, but I never thought of anything happening, let alone like this. She was tired and maybe a little sad even, and I wasn't fully sure she was in the best state of mind to be doing something like this. She also, however, seemed confident in the midst of all this, never once wavering in her words or showing any sign of being nervous.\n\n\"I want... all of that, but because you're one of my favorite teachers, and this is a big deal, I just have to make sure that this is exactly what you want,\" I said.\n\nMy statement gave her pause, her seductive fa\u00e7ade fading for just a second in consideration before coming back with greater confidence than before. \"Yes. Yes I do.\"\n\nOkay then, if this was how she wanted it.\n\nCalmly, I knelt down and started taking off my shoes and socks. \"I'm only asking, because once we begin, there's no turning back. I've fucked a lot of girls, a lot of women, a lot of whom really enjoy the slut treatment. I'm good at giving them what they want. The best, maybe. You give me what I want, and I'll give you exactly what you want, am I understanding this correctly?\"\n\nI stood up, looking down into her eyes as she nodded. Huskily, she said, \"Yes.\"\n\nI wrapped an arm around her waist and roughly pulled her in close, pressing her tits up against my chest and grinding my cock against the front of her skirt. She moaned at the sudden harsh treatment, but smiled at me gratefully.\n\n\"Good,\" I said, forcing my mouth onto hers. Her lips were nice and full and very responsive, kissing back with even greater passion than my own. Mrs. Addams' tongue danced against mine, encouraging me but never pushing too far. She wanted to be submissive, I could see that, and I was going to play with that.\n\nRoughly, my hands explored her body, squeezing her ass, then spanking her. Mrs. Addams mewled, looking up at me with lusty eyes.\n\nI reached up and roughly pulled off her jacket, tossing it aside. She gasped, then smiled as I pulled her in close again and continued kissing her. I brought my hands up the sides of her body, grasping her breasts through her blouse. God only knew how many other students wished for this exact opportunity, but now that I was apparently the first one to go for it, I was going to enjoy it. I squeezed them, relishing the feel of her nipples hardening through the thin fabric and pressing up against the palms of my hands.\n\nI needed more than this.\n\nI gripped the fabric of her blouse and tore it open, sending buttons flying. At first, Mrs. Addams looked pissed at this, but once her massive E-cups were exposed to me, held inside of a nice black bra, she smiled at me lustily and kissed me again.\n\n\"The skirt. Take it off, slut,\" I said, playing her game and loving the way it made her groan. She unzipped her skirt and shimmied out of it, tossing it aside. I was then greeted by the lovely sight of Mrs. Janelle Addams, one of the hottest teachers in school, wearing a matching bra, panties and stockings. Every piece of lingerie hugged her amazing curves as if they were painted on. I'd already seen these garments in the pictures she'd been sharing with me today, but they didn't do her any justice.\n\n\"Turn around, I wanna see your ass,\" I commanded.\n\nMrs. Addams obeyed, turning around and showing off her awe-inspiring ass, bisected only by the thinnest piece of fabric from her ass.\n\n\"Bend over the couch,\" I demanded, and putting her hands on the couch's arm, she obeyed, thrusting her big, round ass out at me. I spanked her again, one quick whack to each cheek, enjoying the sharper sound of her nearly naked ass and the squeals of pleasure it brought from her.\n\n\"This is how you've always wanted to see me, isn't it? Half-naked and completely at your mercy?\" Mrs. Addams asked, her voice innocent and submissive.\n\nIt wasn't, but it was definitely a fun fantasy to play with now that I was here. I pulled off my shirt, then my pants and boxers. It was little surprise that my thick, 10-inch-long cock stood out proudly, dripping with precum and ready for her. Pulling my phone from my pants, I vowed to myself that we were both going to have a very, very good time of this.\n\nI stepped behind her, rubbing my bare cock against her ass. She shivered deliciously against me, moaning and arching her back with a kind of hungry desperation that sought penetration now. While it would be fun to have penetration soon, I was going to have fun with this game first.\n\n\"One of many fantasies,\" I said, sliding my cock between her ass cheeks, rubbing it up and down her succulent flesh. \"Has it been one of yours? I'm not talking about me, because I know I'm not the most impressive, but, you're a buttoned up, responsible teacher, will you tell me you've never dreamt of being fucked nice and hard by one of your 18-year-old seniors?\"\n\nShe groaned as I teased her flesh. \"N-n-n-no... not until recently... I was too... fuck... I was too responsible. Too faithful. I never dreamed of anything more.\"\n\n\"And now?\" I hissed.\n\n\"I wish I had. I wished I'd cut loose and shown some of those hot boys and girls what fucking a real woman was like. I'd have gotten down on my knees and sucked all those cocks and eaten all those pussies and let them just fucking destroy me,\" she said, her voice needy and full of lust.\n\nI smiled at that answer. For her sake, I hoped she found some way to live out at least a similar fantasy.\n\nRight now, though, there was something we could do for each other. \"Sounds fun. Why don't we get some practice in with just one? Get down on your knees and start sucking, whore.\"\n\nMrs. Addams' eyes lidded over at that final word, and she looked more than happy to spin around and drop to her knees in front of my cock.\n\n\"Holy... fucking... shit...\" she exclaimed on seeing it up close and personal.\n\n\"I know. Pretty great, huh?\" I said, proudly.\n\n\"Pretty great?\" Mrs. Addams said, apprehensively reaching up and wrapping her hand around the base of my cock. \"This is more than pretty great, this is-\"\n\nShe was cut off when I thrust my hips forward, spearing her lips with my thick cockhead. She looked surprised, at first, and it was that surprised look that I snapped a picture of first.\n\nA strand of drool connecting my cockhead to her lips, she asked, \"What are you-?\"\n\nI thrust forward again, pushing my cock back into her open, waiting lips. There was no surprise this time, and despite a slight squeal of indignation, she started sucking me eagerly, looking up with lusty eyes as I snapped more pictures.\n\n\"You want me to use you and fuck you like a whore, I'm going to use you and fuck you like a whore,\" I said, inelegantly fucking her face as I fed her more and more of my giant cock. \"These pictures are for my eyes only, though. Only I get these memories, slut.\"\n\nI was both trying to set her at ease and set her off at the same time, and it did the trick. Mrs. Addams was instantly more relaxed and turned on, rocking her hips enthusiastically as she feasted on my cock. It was an amazing and wet blowjob, her soft lips and firm tongue expertly playing with my cock as her mouth was stretched to the limit. I ran my free hand through her luscious hair as I fucked in and out of her mouth, listening to her gag but never once complain. It was a painfully erotic sight, one I knew that'd be deliciously burned into my memory.\n\nIt wasn't the only thing I wanted to be delicious, though.\n\n\"Are you wet right now?\" I asked her. With a mouthful of cock, she nodded, humming contentedly.\n\nForcefully, I pulled my cock from her mouth and pulled her up to her feet. I said, \"Pull off your panties, bend over the couch and show me.\"\n\nMrs. Addams groaned, but obeyed, pulling down her panties and showing me her exquisitely shaved pussy. Her lips were full and prominent and utterly glistening, a view I got an even better look at when she bent over the couch. Deep down, what I wanted to do was eat her out and treat her right, see what I could do with full lips to really help her deal with whatever stress she clearly needed my help with, but right now she wanted a particular kind of treatment, and I had every intention of delivering.\n\nI reached between her slightly spread legs and ran two fingers around the folds of her pussy, savoring her moans. I was gentle at first, but then began exploring more vigorously, squeezing her clit between my fingers before thrusting inside of her.\n\n\"Ohgod,\" she groaned, pressing her ass back against me as if trying to pull more of my fingers within her. I kept going, riding her with my fingers.\n\n\"Oh, you like that, don't you my little teacher slut? You like being bent over and fingerfucked like a whore?\" I teased her, fingering her harder.\n\n\"Y-y-yes,\" she moaned, her voice quiet and submissive, a far cry from the powerful woman I knew as a harsh but fair English teacher.\n\n\"You like being at the mercy of one of your students? Dominated by someone you never knew could dominate you?\" I asked.\n\n\"Yes,\" she groaned, her thighs squeezing tightly, desperately trying to get off from my fingering.\n\n\"And you could cum just like this, couldn't you?\" I asked.\n\n\"Yes,\" she said, looking back at me with the most hopeful, horny look on her face.\n\n\"I could do that...\" I said, pulling my fingers from her dripping cunt. She moaned in frustration, pressing back against me, and getting the head of my cock against her lips for her trouble. \"...or I could bury my cock all the way in your pussy and savagely fuck you 'til you scream. I could do that, if you begged for it.\"\n\n\"You'll make me beg? You'll make your poor, tired, English teacher beg?\" she moaned.\n\n\"No, I'll make the whore who wants to be treated like a whore beg,\" I hissed, loving the way it made her almost collapse with pleasure.\n\n\"Please, Ryan... please fuck me. Please shove your cock all the way inside of me, make me fucking scream like a bitch in heat, please...\" she said.\n\nI'd heard better begging, but she was playing by the rules, so I would too. Slowly, I lined my cock up with her entrance and pressed inside.\n\n\"Oh fuck,\" she whispered. \"Oh, fuck fuck fuck.\"\n\nShe dropped her head, groaning and crying out with every inch I forced inside of her. I grabbed a handful of her hair to pull her back up, leaning forward so I could forcibly kiss her while I slowly fed her my cock. I could've just slammed it all home at once, and I doubted she would even mind all that much, but to be on the safe side I wanted to let her get used to my size before I really gave it to her.\n\n\"It's so good, so fucking good, give it to me, none of this weak shit, please, please, please fuck me harder, harder, please,\" Mrs. Addams begged.\n\n\"We're almost there. Just be a good girl and do as you're told,\" I said, sinking the last few inches into her. Her eyes went wide and she almost cried out, but I quieted her with a kiss before finishing, \"And let me do what I do best, okay, slut?\"\n\nShe whimpered. \"Okay.\"\n\nI may have shown her tight, oh so perfect pussy mercy to begin with, but now that we were fully joined, I'd treat her every bit like she wanted to be treated. I treated her like a whore, grabbing a handful of hair and pulling her head back as I fucked her hard. Our bodies slapped together with every thrust, her wild and unrestrained moans music to my ear. It wasn't long before her pussy was taking almost the entire length of my cock with every stroke, and every time I slammed it home she cried out again. The cries were sometimes of pain, sometimes of lust, and sometimes of something beyond all of those regular emotions and sensations and tied to a simple, primal need.\n\nGoing off of what she said, and getting a feeling that it was exactly what she needed, I slowed down just enough to gather enough of her juices on my middle finger, and then pressed it against her tight asshole. It didn't open at first, but with a little pressure and urging from her with her surprised but welcoming moans, I finally broke through and slid it into her asshole.\n\n\"OHMYGOD!\" she yelped, first as my finger settled into her, then as I began to pick up the pace. It wasn't a traditional double-penetration, but it got her going even more, pressing back against me as I began to fuck her hard once more.\n\nI wasn't used to doling out the rough treatment, but it seemed to be exactly what she was looking for. After only a few minutes of this deep, hard penetration, she went rigid, then jerked against me with a long, plaintive wail. A gush of her juices hit my balls, my thighs as she came hard and unrestrained, fucking desperately back against me as she rode out a nice, long orgasm. I'll admit it was a quick fuck, but one that was probably desperately needed on her end. I felt rather pleased with myself that I'd given her this release this quickly, and in a way that seemed to satisfy her so.\n\nStill, just because I'd made her cum, didn't mean that I was ready to give up the game just yet. Though I continued fucking her for a little while longer, I knew I was going to be cumming soon myself. If she wanted to be treated like a whore, I was sure there was one way to end this first round that we'd both enjoy.\n\nOnce her body went limp as rubber, I pulled out of her pussy and ass, turned her around and lay her down on the couch. I climbed on top of her, straddling her chest.\n\n\"What... what are you doing?\" she asked in a submissive voice.\n\n\"I've stared at these tits for a long time. Now, I want them,\" I said, putting my well-lubed cock between her tits and then squeezing them around me. It was a beautiful sight, my cock disappearing into the tight, narrow valley between her breasts, only matched by how amazing it felt to fuck my hot, busty teacher's tits.\n\n\"Oh my god, I can't believe you're doing this. I can't believe you're doing this to me!\" Mrs. Addams said, all of her usual strength long gone and her voice replaced by that of a submissive slut. Her eyes still sparkled with her usual power and tired amusement.\n\n\"What, fucking the tits of a slut with tits worth fucking? Do you have any idea how many boys who've masturbated to these jugs? Do you know how many people would kill to be where I am right now?\" I grunted, feeling the pressure building and fucking her harder.\n\n\"Do you have any idea... how many boys... want to paint you... just... like... THIS!\"\n\nIf I thought she came hard, I wasn't prepared for the power of the orgasm I'd been building during this frantic fuck. When the flood came, the first burst hit her between the cheek and her collarbone, while more subsequent shots coated her neck, her chin, and her open mouth as she angled to catch some. I extricated myself from her tits, allowing my last few, weaker shots to paint those glorious orbs and her nipples, her moans encouraging me for every last drop until I had nothing left in me.\n\nI had enough energy left in me to take one glorious, beautiful picture of this sight, before I climbed off of her and collapsed on the ground, panting.\n\nMrs. Addams laughed. I honestly couldn't have told you the last time I'd heard her laugh, but I liked it.\n\n\"So, how was your first day back at school?\" she asked, amused.\n\n\"Ummm, amazing?\" I replied, laughing myself.\n\n\"Who was more amazing? Me, or Brenda?\" Mrs. Addams asked.\n\nThis was a good time to stay diplomatic, I wagered. \"Do I really have to choose?\"\n\n\"No. But I've had a long day and could really use the ego boost, so-\"\n\n\"Then it was you,\" I said quickly, smiling up at her on the couch. She turned her head to me, smiling down with her cum-coated face, looking like a beautifully perverse angel.\n\n\"Good answer,\" she said with a smile, reaching toward the floor by the base of the couch and pulling out a towel and bottle of water. She began to clean herself off, taking a swig of water and swishing out her mouth before swallowing.\n\n\"You came prepared,\" I said.\n\n\"I know what I want, and what I need to get what I want, so, yes, I came prepared,\" she said, as authoritative as she ever was in front of the class. \"You too; you've got some nice-tasting cum.\"\n\n\"Oh, thanks,\" I said.\n\n\"No, thank you. My husband, he didn't take care of himself and it always tasted... \" Mrs. Addams scrunched up her face in disgust. \"Anyway, yours tastes better. And that thing with my ass... how'd you know?\"\n\nI smiled. \"A friend of mine, she once told me that all uptight girls like it in the ass, and though you're hardly a girl anymore, you seemed uptight, so...\"\n\n\"Your friend's a wise woman,\" Mrs. Addams said.\n\n\"Yeah. Yeah she is,\" I replied, looking on Mrs. Addams' beauty as she set the towel and the bottle of water aside. Regaining some strength, I got up and sat beside her on the couch, equal parts in awe of her beauty and stuck for something to say. She wasn't the first MILF I'd ever fucked, but I didn't know her as well as Mrs. Lynn or Mrs. McNeil, so I was a little stuck for small talk. I didn't even know if she wanted small talk after what we'd done, if she expected me to leave or she'd leave, or...\n\nLatching onto something she'd already said, I said, \"So... how was your first day of school?\"\n\nShe laughed. It wasn't the funny kind of laugh. \"Seventy percent of my students failed the pop quiz I gave on the suggested winter break reading, I got to hear from my husband's divorce attorney that he wants to take my dog in the settlement even though I adopted her for the kids, and someone keyed my fucking car. Maybe a student, maybe my husband's mistress... fuck, I don't know. I don't care. So, if you want an honest answer, I'd say it was shitty. Pretty fucking shitty.\"\n\n\"I'm sorry,\" I said, trying to fully take in how much had just been dropped onto me. \"I mean... fuck. I didn't know you were getting divorced.\"\n\n\"None of my students do, and I'd like to keep it that way. Gossip spreads, and gossip's one of the last things I need right now,\" Mrs. Addams said.\n\nI didn't want to point out to her that she'd just been fucked by one of her students and that was likely to be more dangerous gossip, but it was a bad enough day for her that I didn't want to rub anything else in.\n\n\"I won't say anything,\" I said.\n\n\"Thanks,\" she said, closing her eyes and leaning back into the couch. I wanted to hold her, to offer whatever kind of comfort I could, but after the tone of our last fuck I wasn't sure that was what she wanted. I wasn't sure it was what she didn't want either, though, so I followed my instincts and wrapped an arm around her shoulder. She cuddled up against me pleasantly, leaning her head on my chest. I stroked her luscious hair with my hand.\n\n\"These last months... they've been hell. I need to be strong for my kids, I need to keep an eye on my class, I need to make sure my husband and his bitch don't walk all over me. I need to do so much, but I can't cut loose. I feel like I get so wound up I'm going to explode sometimes, that responsibility is going to crush me. And so, I fantasize. About not being in control. Of being used. Of just submitting and letting someone else I trust be in charge, and when Brenda told me about your... gifts... I couldn't help myself. I'm sorry, if I used you a little,\" she said.\n\nI shrugged. \"I didn't see it that way.\"\n\n\"Okay. Thank you,\" she said.\n\n\"Don't mention it,\" I said, still stroking her hair, enjoying the closeness. It may not have been the best time for a joke, but it was about all I could think of at the moment to try to up her spirits. \"You know, if you want me to break things up between your husband and his mistress, I could always fuck her away from him. I've done it before.\"\n\nI expected a polite smile from Mrs. Addams, not an actual guffaw of laughter this caused.\n\n\"Well, that worked better than expected,\" I said, happy to see her smiling.\n\n\"Sorry, it's just... Lauren told me about what you did for her, and then I tried imagining you with my husband's bitch and... yuck. If you'd seen her, you'd understand,\" Mrs. Addams said, scrunching up her face in disgust.",
        "\"You ladies talk about a lot in your book club,\" I said.\n\nMrs. Addams nodded. \"Sometimes even about books. But mostly we get drunk on champagne and merlot and bitch, let Viola sell us on some of those sex toys she runs as a side hustle, maybe get drunk enough so a couple of us'll stumble off to another room and go down each other for a bit. You know, old lady stuff.\"\n\nThat didn't sound like any old lady stuff I knew, but it was enough to bring some life back to my cock.\n\n\"Sounds like I need to start reading more,\" I said.\n\n\"I doubt that. First off, Mr. Collins, your grade tells me enough that I know you do more than just the assigned reading; don't be so modest about that. And second, if you actually showed your face at a meeting of our book club? I'll be honest, I'm pretty sure you'd get eaten alive,\" Mrs. Addams said confidently.\n\n\"That a fact?\" I asked.\n\n\"Entirely,\" she replied.\n\n\"You're kind of doing a bad job of keeping me away,\" I said.\n\n\"Who said I was trying to keep you away?\" she asked, her eyes and voice full of mischief.\n\nThere she was, the Mrs. Addams I really knew, the strong if stern badass of an unbelievably hot English teacher. Sure, she was more naked than I was used to, but considering how much of the year I'd seen her just looking tired, seeing even this glimmer of her old self was a welcome change.\n\nI leaned in and kissed her. She returned it, eagerly, pressing her body more closely against mine.\n\n\"No one,\" I answered her. \"I was just curious about what you ladies might have in mind for me.\"\n\nShe wrapped one of her dainty hands almost all the way around my cock, slowly stroking it and answering, \"All sorts of things, I'd wager, but what they want to do with you is immaterial. I'm more interested in what you can do for me, right now, because I got you all to myself and wish to keep it that way while I've got you.\"\n\nI slipped a hand between her thighs, rubbing her damp, hot slit with my fingers. Pressing against her clit, I made her groan.\n\n\"I think we can work something out of that,\" I said, leaning in to kiss her more deeply. It was a nice, hot makeout session if I say so myself, both of us kissing long and deep, unhurried after our initial encounter and now looking for some good, old-fashioned fun. Her hands were on my cock, slowly spreading my precum around and feeling really, really fucking amazing. I had a harder time choosing where to put my hands, but between the one between her legs and the one that I had working her tits, I was pretty happy.\n\nSo was she. Now that we were no longer playing her game so she could relax, I got to see the real Janelle Addams, and found her to be a fine companion.\n\n\"Oh that's it, right there, suck my nipples while you finger me,\" she said as I did just that. \"Oh, fuck, you may be a boy, but you've got more than most men, and I'm not just talking about this cock! Fuck, you've got experience, you've got skill, you've got what it really takes to satisfy a woman, don't you?\"\n\n\"It's a good thing you've got plenty to satisfy, then, isn't it?\" I said, taking in the epic size of her tits.\n\nShe admonished me by pressing my face back toward her boobs. \"I do, but keep playing with me. Make me feel nice, make me feel wanted, make me feel... mmmmmmmmm...\"\n\nI knew I could make her feel better than this, and set about doing exactly that. Though it meant giving up her perfect handjob, I pressed her back to where she leaned against the couch and dropped to the floor on my knees. Without any pretense or foreplay, I dove right in to eat her delicious, needy pussy.\n\nShe squealed, though not from surprise, as I did this, squeezing her tits and playing with her erect nipples as she looked down at me. \"Ah, I was wondering when I'd get to feel your mouth on my cunt. I've heard so much about this gift...\"\n\n\"Is it everything you hoped for?\" I asked, unsurprised when she wrapped her legs around my head and pulled me back into your pussy.\n\n\"I'll get back to you on that... yesyesyes, right there...\" she purred, running her fingers through my hair and holding on tight.\n\nHaving already fucked her, I knew that this pussy was amazing, but getting to get in and a good, long taste of her, I found that I'd underestimated just how amazing it actually was. Mrs. Addams was sweet, and she was juicy, and the juices kept on flowing, coating my chin, my lips, my tongue and rolling down her thighs. She wasn't even cumming yet, and this flow was a pretty solid constant that made eating her out exceptionally fun.\n\nWith my tongue running nice, firm circles on her clit, I reached up and slid a finger into her pussy. Then another. And another. Three fingers into her, I twisted them around, thrusting gently in time with my tongue, playing off of her moans to keep her going without ever taking her to where I ultimately wanted her to be. I liked bringing her close, to a precipice where I felt her tremble and quiver and about to let go, only to back off and bring her down, prolonging the buildup as I continued to work her over with my mouth and fingers.\n\nAnd then I stopped. Oh, I kept the pressure, I kept my tongue and fingers in place, but I stopped toying with her, leaving her on the edge as she whined and bucked her hips against me, keeping her from going over the edge no matter how hard she tried to finish the job herself.\n\n\"Oh, you're such a fucking bastard,\" she groaned, looking down at me with angry, lustful eyes.\n\nI took my mouth off her cunt. \"You know, etymologically speaking, that's incorrect; my parents were married when I was born.\"\n\n\"Did you really stop eating my pussy so you could discuss etymology with me?\" Mrs. Addams asked.\n\n\"Yeah. Is it doing anything for you?\" I teased.\n\nShe squeezed her nipples particularly hard, moaning, \"Believe it or not, yes, actually. Not much, but sort of.\"\n\n\"Thought it might,\" I said, taking her off guard when I dove back into furiously eating her out. I'd purposefully stopped to tease her before, but now I was going all in on getting her off. My tongue eagerly circled her clit and played with her lips, while my fingers fucked in and out of her like a piston, curling toward her g-spot with every thrust inward. She was soaked, hell, I was soaked, her juices covering her thighs, my hand, my face, her pungent and intoxicating aroma filling the air.\n\nNeedless to say, Mrs. Addams enjoyed the attention, playing with her tits even more energetically as she rode my face. \"Fucking goddamn, yes! Eat your teacher's pussy! Eat your English teacher's juicy fucking pussy! Make me come all over your fucking face! I'm gonna do it, make you drink it all up, right there, fuck, keep going, keep going... FUCK, GODDAAAAAAAAAAAAAAMNIT!!\"\n\nShe wasn't lying. I was expecting Mrs. Addams to be wet, but when her juices came out in a torrent, it was everything I could do to keep up with them. This room was bound to smell like her cunt for a few months, but at the moment that wasn't really something that worried me. I tried to keep up with her pussy, licking and sucking and drinking everything she had to offer, finding relief only when her orgasm abated.\n\nBreathing heavily, she collapsed fully against the couch, her eyes glazed over and satisfied. \"Okay... okay... I heard it was good... but I didn't know... fuck, Ryan... you're a fucking prodigy.\"\n\nLicking my lips, I got up and sat next to her on the couch. \"Did you use 'fucking' there to indicate emphasis on how much of a prodigy I am, or to say that I'm a prodigy at fucking?\"\n\n\"More English humor?\" she asked.\n\n\"An attempt,\" I admitted. \"Still sort of work?\"\n\n\"Sort of,\" she said, smiling slyly. She leaned over, placing a long, luxurious kiss on the head of my cock. Her tongue peeked through her full, moist lips, circling the head and making me moan. She kept her mouth like this for a while, looking up at me teasingly.\n\n\"This is what I get for taking my time playing around, isn't it?\" I asked.\n\n\"Some of it, definitely. Some of it's also because I love sucking cock,\" she said, dropping down a couple inches. I was in ecstasy, but an ecstasy that only maddened me for how much I needed to cum.\n\n\"Is that the only thing you love?\" I asked, running a hand through her hair.\n\nShe kissed the head of my cock, then smiled at me devilishly. \"Why, Mr. Collins, are you asking me to climb on top of you and ride you like none of the little girls at this school ever could?\"\n\n\"Not in those words, but in that point, yes, I'd really like that,\" I said.\n\n\"You only had to ask,\" Mrs. Addams said, sitting up and swinging a leg over me to straddle my hips. She ground her soaked pussy against the length of my cock, making both of us moan. \"How have you been hiding this all this time?\"\n\n\"I wasn't trying to hide anything, I just naturally stayed below the radar. And then this year... I was discovered,\" I said.\n\nShe reached between her legs, lining my cock up with her entrance before she sat down on me. I hissed with pleasure, while she bit her lip and groaned, as once again my cock burrowed into her tight, hot, slit all the way to the root.\n\n\"I must send a thank you to whatever explorer decided to plant her flag on you first and introduce you to the world. Will you answer if I ask you nicely, or do I have to fuck her name out of you?\" Mrs. Addams asked, squeezing my cock with her pussy muscles.\n\nI groaned, running my hands down and squeezing her ass. \"Asking nicely works. Kaitlyn Pruitt.\"\n\nMrs. Addams leaned into me, pressing her massive tits against my chest and planting a kiss on my neck. \"The slut's improved her tastes. I assume you can take credit for the improvement of her disposition over the past few months?\"\n\n\"Not all of it. She's done a lot of soul-searching this year,\" I said.\n\n\"Haven't we all?\" Mrs. Addams said, rising and falling slowly on my cock. \"Well, I'll think of an appropriate thank you later. Right now, I don't want to talk about Kaitlyn Pruitt or anyone else at this school except you and me. I want to fuck you, and I mean to fuck you hard. I want to fuck you so hard you'll never forget me, until you drain every drop of your thick teen cum into my pussy. Am I understood?\"\n\nThe words were music to my ears. \"Yes, Mrs. Addams.\"\n\nShe cooed, bouncing up and down on me slightly. \"Yes... I like it when you call me that. It reminds me that I'm your teacher... and this is so fucking dirty...\"\n\n\"I will, Mrs. Addams,\" I said mischievously, running my hands up and grabbing her tits, squeezing them and toying with her nipples as she began to fuck me harder. She grabbed me by the face and pulled me in for a kiss, making out intensely as she kept riding me harder and deeper.\n\n\"God, I think we're gonna have to make a habit of this, Ryan. If Brenda isn't monopolizing you and if you don't have some other teenaged slut stealing your time, I want you fucking me. I need this monster inside of me, filling me up, making me feeling fucking alive again... it's been so long, and I've needed it so much,\" she moaned as she rode me, her ass furiously slapping against my thighs as she started taking almost my entire cock with every bounce.\n\nIn the moment, it was a pretty sweet image, getting to fuck Mrs. Addams whenever I had the free time, but with my dance card pretty full as it was and things only bound to get crazier as the year pressed on, I said, \"I'll do what I can.\"\n\n\"Oh? That's a pretty noncommittal answer,\" she said, slowing down and rocking her hips on me slowly, squeezing my cock so exquisitely with her hot cunt.\n\nI didn't want to reject her, not when she'd opened herself up to me about her divorce status and how lonely she sounded, but I had to be honest with her, too, \"I've a... pretty active social life these days, and I can't make any... fuck you're tight... promises about what I can and can't do.\"\n\nShe rolled her eyes at me, slowing almost to a stop. \"Ryan, I know that every bit as much as you know I can't do that with everything I've got in my world now, but let a girl live in her fantasies for a moment, make me some promises we both know neither of us can keep because it's fun to say them when you're lost in a haze of mindblowing sex, while making me an actual promise now that if you've ever got a few minutes and I've got a few minutes and we're both up for it that you'll bend me over my desk and screw my brains out because I could use a good screw?\"\n\nI appreciated her honesty. \"I'll agree to all of that.\"\n\n\"Good,\" she said, kissing me deeply and resuming her near blinding pace of fucking my cock. \"Now promise me everything...\"\n\nI kissed her again, and I promised, punctuating each promise with a kiss and a thrust. \"I promise you this cock... I promise to fuck you whenever and however you need it... I promise to bring you the greatest pleasure you've ever felt... I promise to give you the best school year you've ever had... I promise to make you cum so hard, so often you'll barely be able to walk when you're at school...\"\n\n\"Fuck...\" she groaned, slamming down on me hard. She wasn't my teacher anymore, but a grunting, sweating, rutting beast. The room was filled with the sounds of our labored breathing and moans of pleasure, of the slapping of flesh against flesh and the squeaking of the couch. The air was thick with the scent of her mature pussy and promises that I'd need a long shower after all this was done. She whined, \"I need it... I need it so bad...\"\n\n\"Whatever you want, whatever you need, I promise it to you,\" I said.\n\nMrs. Addams moaned, then kissed me deeply. She leaned against me, crushing her insane tits against me as she rode me, reaching down to finger her clit and whispering in my ear, \"Fill me up. Fill your teacher's cunt with your teenaged cum. I need it, fill me up, cum inside me... do it, Ryan... cum for me...\"\n\nShe didn't need to guide me in doing this, but the permission and the encouragement was welcome. My balls were swollen and ready to burst, her hot body and firm efforts pushing me to the edge and well past it time and time again throughout our encounter. I'd held out for her, wanting to prolong the fun for both of us, but sensing that we were close to an end I allowed myself to be overtaken by the pleasure. I let myself go.\n\n\"Fuuuuuuck...\" I hissed as my orgasm overwhelmed me, filling her tight, wet pussy with cum. I'd thought that it'd be impossible to shoot any more after the load I deposited all over her tits, but as usual there were reserves to call on. Mrs. Addams joined me with one last, good cum; it wasn't as powerful as any of her earlier ones, a simple jolt that set her body shaking as she cooed and groaned and writhed against me, but that didn't make it any less hot.\n\nWe came down together slowly, her pace dropping off as she collapsed against me, panting and sweating and stinking of sex, the two of us kissing and smiling as our hands explored each other. It wasn't how I expected to start the day, but honestly, by this point I really should've been on the lookout for stuff like this to happen.\n\n\"Was that what you were looking for?\" I asked, squeezing her ass playfully.\n\n\"It was nice to feel wanted for a little while. And used, but that's its own kind of fun you need a particularly gifted partner for,\" she said.\n\n\"Thanks,\" I replied.\n\n\"Any time. And I mean it, any time that we're both available, I wouldn't mind doing that again,\" she said.\n\n\"I'll take you up on that,\" I laughed, pinching one of her nipples, loving how hard they still were. She wiggled in my lap, squeezing my softening cock with her cunt.\n\n\"Until then, I should probably start looking for a boyfriend. Someone to really rub in my soon-to-be-ex's face. Maybe get a nice picture of me and half the football team... or the cheer squad...\" she mused.\n\n\"Or your book club?\" I proposed.\n\nMrs. Addams snickered, kissing me again. \"Not a bad idea you've got there.\"\n\n\"I've been known to have them...\" I said, leaning back against the couch with my hands behind my head. \"...from time to time.\"\n\n***\n\nBy the time I got home I was mentally and physically exhausted. I'd fucked a lot of girls, but found that I often got the most drained when I was with a nice, hot MILF. With what Mrs. Lynn was saying, I knew a fair few had their eye on me now, and that wasn't the worst thing ever. I'd have to keep my strength up for whenever one of these encounters popped up, but there were worse sacrifices I could make.\n\nTossing my stuff on my bed, I went into the bathroom and started a hot shower, then back to my bedroom to get undressed. Everything I had still smelled richly of Mrs. Janelle Addams' unique scent, and though I was quite intoxicated by it, it was probably best if I didn't walk around everywhere smelling of my English teacher's pussy.\n\nI hoped she was alright. I was pretty sure she would be. She was going through a rough time that I could sympathize with, even if I hadn't been through nearly as shitty a time as she was dealing with, but she had a new spring in her step on her way out of the bungalow. Combined with the texted picture she sent me of my cum still leaking out of her engorged pussy lips a while later, and I thought she was doing better.\n\nTime would have to tell on that one, of course.\n\nAfter I pulled off my shirt, I felt a buzzing in my pocket. A new text. I opened it up.\n\nBrooke: Look just a teensy bit to your left!! :):):);)\n\nA little bit to my left had me looking out the window toward Alice's house, and more appropriately her bedroom window.\n\nStanding in it was Brooke, wearing little more than a sheet wrapped around her shoulders. She hugged it to her nice, tight, petite frame nicely, leaving just enough open to let me see one of her small, perky, bare breasts.\n\nTo remove absolutely all ambiguity as to what was going on, Alice's dark-skinned arms snaked around Brooke's tight body, her face appearing next to the blonde cheerleader's and smiling mischievously. Playfully, Brooke turned and kissed Alice, but the kiss wasn't playful for long. In fact, it got steamy fast.\n\nJust as it appeared to get good, Alice looked at me, winked, and closed her curtains.\n\nI laughed.\n\n\"Just when you think it can't get any crazier...\" I mused.\n\n***\n\n(Author's Note: Writing this story is something I do in my spare time for fun, so if you're enjoying this, please, please, please drop some stars, reviews or shoot me some feedback, as they really keep me going (and please vote on any earlier chapters you enjoyed if you haven't already!). Though I may not always respond, I do love hearing from all of you and seeing that you're enjoying the series. It motivates me to continue writing more. You've all been wonderful and I can't thank you enough for all of your kind words and encouragement and yes, even the constructive criticisms!)"
    ],
    "authorname": "aimingtomisbehave33",
    "tags": [
        "big breasts",
        "big cock",
        "creampie",
        "facial",
        "high school",
        "slut",
        "student",
        "teacher",
        "titty fuck"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/senior-year-memories-ch-28"
}