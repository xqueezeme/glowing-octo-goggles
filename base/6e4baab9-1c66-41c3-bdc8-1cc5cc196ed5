{
    "title": "Rose Ch. 53-57",
    "pages": [
        "The reaction didn't take long. Gunny sprung forward, grabbing Charlie Stillwater by the throat, and slammed him into the wall. Craig moved next to him, his eyes looking up into Charlie's as Gunny held him about a foot off the ground. \"You killed Maitea. Why would you take my kill?\" \n\nCharlie was strangely calm, like he expected to be choked half to death after what he said. He didn't struggle, his hands stayed at his side. He couldn't talk, so he just looked at Gunny, then back to Craig. \"Let him down, but get more people in here,\" Craig said. Soon there was running in the halls, and Jacob, Josh, Melanie and John Spencer joined them. Jacob had come prepared, and quickly cuffed Charlie's hands behind his back before they set him in a chair. \"You act like you expected this,\" he said. \n\n\"I knew you would react this way, hell, I would too, especially since you have pregnant mates. I just figured your curiosity would keep you from killing me until we had a chance to talk. I was right, at least.\" He relaxed back into the chair as the rest of us watched him carefully; if he made any aggressive move, we would tear him apart. \n\nI set my voice recorder on the table. \"What's your game, Charlie?\" I might as well get him talking. \n\nJust then, Lars broke in, he was watching the front gate. \"Alphas, there is a car here, it's Alpha Ross Nichols of the Thurmont Pack in Maryland. He has his mate with him, she says Rose and Gunny know her.\" \n\n\"Really?\" I didn't know the Thurmont Luna, I didn't have anything to do with werewolves before meeting Gunny. \n\n\"She said her name is Lisa Giovanni. Oh, and he has his sister Patricia along.\" \n\nLISA? Holy shit. Mated to an Alpha? \"I'll be right back,\" I said. I dashed out of the room, I sensed Josh was following me as Gunny had to watch our prisoner. I burst out the front door and ran over to the gate, telling Lars to open it as soon as I recognized her. I was through as soon as it started opening, and we hugged each other as I spun her around. \"By the Goddess, Lisa, you're a wolf!\" Her scent had changed, she was turned and mated, I could smell her scent mixed with his. \n\n\"I was on the run, I had to get off the road, and the Thurmont pack was the closest safe place I could think of. I figured since I'd helped you, maybe they would help me.\" We moved aside so Alpha Ross could pull his car in, then we walked back in as the gate closed. \"Who'd have thought the Alpha was my mate? A few days later and I'm running around the woods with him as a wolf.\" \n\n\"Well, I'm so happy for you! I was so worried after the car bombing and you being made a suspect. I'm glad the surveillance video cleared you since they saw the guy plant it. Are you going back to straighten things out?\" \n\n\"No way, I'm done with that. I've had it with the pressure, the politics, the long hours. I've lived more in the last week than the last year.\" We had reached her car, and her mate and his sister stepped out and hugged me in welcome. \n\nI introduced Josh and the other guys who were out there, then I pulled them all inside with me. \"It's kind of a busy time for us, but it's good that you're here. A guy turned himself in to us and confessed to being the one who killed Maitea in the hospital.\" \n\n\"Really?\" Ross was starting to growl, none of the Alphas were happy that she had been saved from our justice, even though she was just as dead. \n\n\"Alphas, is it all right if I bring Alpha Ross, Lisa and Patricia in to hear what Charlie has to say?\" \n\nI could hear the amusement in Craig's reply. \"May as well, this room is starting to look like a clown car anyway.\" \n\nI led the way, and as we got closer to the room Patricia started to sniff the air, she was acting really nervous. Ross looked towards here, trying to figure out what was happening. \"Are you all right, Sis?\" \n\n\"He's here.\" She started to run ahead of us, following the scent. I ran towards her, reaching her just as she threw open the door to the conference room and looked around. I stood at the doorway, watching for the recognition, and of course it had to be him. \n\nCharlie had turned towards the commotion and his eyes were locked with Patricia's. She ran forward and embraced him, not seeing that he was wearing handcuffs. They both crashed to the floor as people scrambled to get out of their way. They kissed for a moment before Patricia looked up. \"WHY THE HELL IS MY MATE HANDCUFFED,\" she demanded as she looked around the room. \n\n\"MATE?\" Charlie looked at her in a combination of lust and confusion. \"You're beautiful, but mountain lions don't HAVE mates.\" \n\nShe grabbed his shirt and pulled him into another kiss while wrapping her legs around his narrow waist. When she finally came up for air, she slapped him. \"Werewolves have mates, YOU are MY mate, therefore don't be an idiot. Of course, mountain lions have mates.\" \n\nRoss moved in and pulled his sister up, then Gunny helped Charlie back into the seat I righted for them. Patricia immediately sat in his lap, finally understanding what was going on as the emotions crossed her face. Her mate, her future, was one who had worked against them, who had killed the Scrabble Shooter and denied them all true justice. \n\nThe penalty for that was death, and the weight of the realization crushed her. \"You can't take him from me, not when I've just found him,\" she said. \n\n\"We won't do anything until we've heard him out,\" Craig promised. \"If we take the cuffs off, will you behave?\" \n\n\"Of course, Alpha.\" \n\n\"He won't go anywhere,\" Patricia promised. Gunny moved in and took the cuffs off, his arms immediately went around her waist and pulled her close as he smelled her neck. \n\n\"I think we should all just take a breath and do some introductions,\" Craig said. We all sat down eventually, Josh had to go get extra chairs from the hall closet to have enough. \"I'm Alpha Craig Anderson of the Belden Pack, and this is my mate and Alpha, Ella.\" He gestured to me, since I was at Ella's other side. \"I believe you already know the Love Broker, Rose Rodriguez.\" \n\nI glared at him. \"WHAT? Come on, we all know Renee has that title!\" \n\n\"Not in this Pack,\" Gunny chuckled. \"Sorry, but you've only been here a few weeks and people are already touching you for mate luck.\" I elbowed him, next thing he'd be calling me the Angel of Fertility or something. \n\n\"I was saying, I'm Rose, former FBI agent and mate to this big lug, Gunny.\" \n\nRoss, Lisa and Patricia all introduced themselves, then Charlie gave a quick intro because he knew he would be telling his story later. The introductions continued around the room as Josh poured whiskeys for us, with fruit juice for us pregnant females. When we were all settled, Craig looked at Charlie and indicated he should start talking. \"How much do you know about mountain lions,\" he said. \n\nI knew almost nothing, most of the people in the room didn't know much more. \"Most of us aren't from areas where they exist,\" Ella said. \"I have heard that wolves kill them if they find them.\" \n\n\"That's true, and it's one reason we live where we do. Wild cougars are being pushed out of their normal territories or killed. Shifters like us, we adapt by moving closer to the human towns and hunting in areas the wolves avoid. Our home was in the foothills east of San Diego, far from any Pack.\" \n\n\"Did they drive you out,\" Josh asked. \n\n\"No. They would have if they had been in the area; we just can't beat them. Cougars are solitary ambush hunters, like your panthers. We don't have the speed or endurance of a wolf, and we can't communicate mentally like a Pack can. There aren't many of us, either. Before the war, I heard estimates of five hundred. I'd be surprised if there are fifty left.\" \n\n\"So, if you don't have a Pack, how do you live,\" Patricia asked. \n\n\"We have family,\" he said. \"My father died before the war, so I was the main breadwinner. We had a house and some land, with a big mortgage. My mother, my two sisters, and her husband all lived with me. It was too dangerous when the war started for them to leave, so I had to be their provider. I needed something that was off the grid and made good cash, and before I knew it I was working for a drug smuggler.\" \n\nI started to grip the handrests, I didn't like where this was going. \"What did you do?\" \n\n\"I started helping him with smuggling operations, mostly on the logistics side. Getting vehicles modified, securing warehouse spaces, getting tunnels dug, safe houses. I worked hard and moved my way up. I caught the attention of the bosses, as my routes were well planned and had a high success rate. Part of that was that I didn't shortchange the human side. I developed contacts, willing and not, within Customs, the DEA, local law enforcement, judges, anything we needed. When the war ended, I was in charge of North American smuggling for the Socorro cartel.\" \n\nSomething clicked. \"Wait a minute, I read about that. That was the cartel the Gila Pack took down recently.\" \n\nHe nodded. \"They had help from the El Paso pack, but yes. They found the money, they figured out where the safe houses and distribution centers were, and they took it down. What they didn't do, the Gulf and Pacific cartels were quick to pounce on. I barely escaped being killed in the war. I went home and thought I was out; I had enough money hidden to last, and the Cartels took over all the territory.\" \n\nI thought about it for a minute, he was out, he had money... \"Someone found you.\" \n\nHe nodded. \"With the war over, we could move more freely. I was out of town with Mitch and Kelly, they are my younger sister and her husband, and their daughter May. When I was driving home, I sensed something was wrong. I drove past my house and stopped a few blocks away. I could smell humans and wolves, but the scents were old. I went inside and found some blood stains, and a note. They took my mother and my sister, and said they would be all right if I started to work for them. They admired my work, and wanted me to reestablish my routes.\" \n\n\"Who?\" \n\n\"I didn't know at first, I thought it was the Pacific cartel at first. I met them, I didn't have a choice. It was the worst possible group. It was the Zetas.\" \n\nYou could feel the tension in the room. We had all heard of Los Zetas, the incredibly violent, well organized drug cartel that was becoming the dominant cartel in Mexico. Formed by former Mexican special forces soldiers, it was famous for its brutal efficiency. Its leaders were smart and disciplined, and they had all the resources they could need. Their political power rivaled that of their firepower. \"The Zetas are moving in?\" \n\n\"Yes. They wanted my contacts in the government and my smuggling corridors. I had no choice, I joined them because I had to. I was a dead man, along with my entire family, if I defied them.\" \n\n\"How does this get to Maitea,\" Craig asked. \n\n\"Well, the end of the war and the Gila Pack's deal with the Cartels made my old routes impractical. The border state packs became organized, they got autonomy and money. They didn't need to cooperate with the cartels, they became powerful in their own right. The end of the war also allowed the Feds to shift resources from the war to the borders. Squeeze smuggling into narrower channels and put more agents in those areas, and you do a lot better in stopping the product. The solution was to restart the war.\" \n\n\"Those BASTARDS!\" I was fuming. \n\n\"It was a smart play, especially how they did it. We recruited disaffected people within the government, and added them to the people we already owned. We funded Maitea's training, then set her loose to raise havoc. We knew that if we kept poking the bear, he'd eventually fight back. Add into that a public relations campaign to fan the flames, and we could shatter the peace. The military and law enforcement would quickly wipe out the Packs; they know exactly where they are now, and what they are capable of. The border wouldn't be the problem it was, and whatever we did, we could find a way to blame on the wolves. We even had werewolves and some werecats in the Cartel, they have been using them for years.\" \n\nI was tapping the table, letting all this settle into my mind. He was telling the truth, I was sure of that, and it frightened the hell out of me. \"So we've been looking for a deep state source of this, and we were wrong?\" \n\n\"We have plenty of assets in the government, but the shots are called in Mexico,\" he said. \"This is all being run like a guerilla campaign. They are using Americans, nobody is supposed to know where the real power is. That's why they liked using me, I didn't scream 'cartel.' When Maitea was captured, they knew that asset was burned. I was told to kill her and Luis to close the trail. She was easy, a stolen identification and a swipe of a claw across her neck and she was dead. Luis, he was in an FBI building. I was going to get him when he left the office, but you got him first. The bosses were pissed.\" \n\n\"Wait,\" Craig said. \"They told you to kill Luis, but we did it first. Why are you in trouble?\" \n\nHe looked at his mate in his lap, then looked at Craig. \"You got him first, and he might talk. Look, the Zetas haven't given up. They want the war to restart, and if they can't do it by terrorizing the Packs, they will terrorize the humans. I was ordered to start turning outbreaks, using my own family members to attack innocent humans who are in large groups. I, we, we just can't do that.\" \n\nNo one said anything, we all remembered how the attack at the school spread panic and started the Were War. \"What do you need,\" I asked. \n\n\"I need to break my family out of the Cartel prison, and I can't do it alone.\" \n\nCh. 54 \n\nCharlie's bombshell just sat there in the conference room for a moment while we all processed it. He wanted us to go to war with a vicious drug cartel to spring his family? \n\n\"Let's go then,\" Patricia said. \"We've got a few weapons in the car.\" \n\n\"WAIT,\" Charlie said, pulling her back down in his lap. \"We can't just roll in there hot and start shooting. We actually have to PLAN this if we're going to do it.\" \n\nCraig looked over at him, he knew how big a deal this decision was. \"I'm sorry about your family, Charlie, I really am. But, why would I risk my Pack and others to help you against the Zetas?\" \n\n\"I know you don't know me or trust me, and you shouldn't. I wouldn't. If I knew a way to get out of this by myself, I wouldn't be here. I need men, weapons and intelligence, and I'm willing to trade you what you are looking for in order to get it.\" He reached into his pocket and removed a flat memory card, setting it on the table in front of him. \"Everything I know about the Cartel and the people working for them is on this card. Names, contact protocols, payouts, leverage being used against them. Locations of Cartel facilities, maps of smuggling routes. And what you may be interested in most; every person and organization that was used to support and protect Maitea and her brother as they killed our kind.\" \n\nElla leaned forward, she was furious. \"You set this network up, you used it as they traveled the country and killed innocent werewolves, some women and children. One was in OUR pack! You knew what the Cartel was doing, and you actively participated. Give me one reason why I shouldn't tear you to shreds right now.\" \n\nPatricia jumped to her feet, putting herself between the Alphas and her mate. \"I'll kill anyone who tries,\" she said as she glared at Ella. \n\n\"Please, love, sit down.\" Charlie ran his hands along her waist, reaching his hands up to touch the skin on her stomach and pull her back down. \"You are right. I deserve to die, I came here expecting to die, if not here, then I'll die trying to free my family. At least you will have the information you need to stop them, to stop a war from being started again.\" He started nuzzling into Patricia's neck, relaxing her as his teeth scraped the spot his mark would go. \n\n\"Do you know where your family is being held?\" This was a big ask, especially if it was in Mexico, I thought. \n\n\"It's not an international call,\" Charlie replied. \"They are going to call in the morning to get an update. That's another reason I need your help, I don't have the computer savvy to both hide my location and figure out where they are calling from. I demanded to talk to my mother and sister again, and they agreed.\" \n\nCraig looked at the time. \"All right, there is a lot to get done here. Josh, you take the memory card, copy it, and start working through it. Rose, you work with him, start building a list of who we need to go after for the Alpha Council.\" I nodded, it wasn't in the field, so Gunny wouldn't go nuts. \"Gunny, I need you to go to the Gila Pack and see their Alphas and Betas immediately. We can't risk this information getting out, so all communications will be face to face. Ask for their help in breaking out his family; we need access to aircraft, their helicopter, and their warriors and weapons if they'll provide it.\" \n\n\"Here,\" I told him as I turned off the voice recorder. \"Let them listen to his words directly, it will be more effective than relaying our information.\" \n\nElla looked at him, already thinking ahead. \"Josh, give the first copy of that card to Gunny. If anything happens here, the Gila Pack will have the information. John, I need you to go to El Paso,\" she said as she looked at his father. \"Give him the second copy of that card, along with a copy of the voice file from that recorder. Same message and request as Gunny is taking to Robert and Renee. We don't know which Pack will be closer.\" He nodded and the three of them left the room. \"Jacob, we have to assume that someone is tracking Charlie, and knows he is here. I want the house on lockdown, nobody outside unless necessary, and then in three-person teams and armed. Let the children know they won't be going to school until further notice.\" He took the order and left to start setting things up. \n\n\"What about my family,\" Charlie said. \"They're vulnerable out there if someone saw us.\" \n\nCraig saw the danger. \"I'll have them brought here. We're running out of guest rooms, but they can stay in the bunkhouses with the kids or sleep in the theater room.\" He looked over to Al. \"You're the planner for this operation, and will control ops in the field,\" he told him. \"Get the gear you will need together and loaded into one of our SUV's. Talk to Lars Thorssen, start putting together a team for the assault, then get some sleep.\" \n\nPretty soon everyone except the visitors had a job. \"This affects our Pack,\" Ross said. \"All our resources, including us, are available to you.\" \n\n\"And we thank you for it,\" Ella said. \"We have a few political and law enforcement connections, but Lisa, you are the one with access to the President and his cabinet. I'd ask you to work with Rose to sort out the information Charlie brought us. We can't fight the war, but we can point the President in the direction he needs to go to end this threat before war breaks out.\" \n\n\"What can I do,\" Charlie asked. \n\n\"Nothing,\" Craig replied. \"We haven't verified your information and your confession has already identified you as an enemy of the Packs. I'm holding off on doing anything until we can evaluate your intel, but I have a responsibility to our kind here. You'll be locked in our cell unless needed elsewhere, pending a trial by the Alpha Council.\" \n\n\"I understand.\" He kissed Patricia, then moved her off his legs so he could stand up. \"If there is anything else you need from me...\" \n\n\"There is an video link from the cell to our security center. If we have any questions, we can just ask you.\" He nodded and rose to his feet as Craig came to his side to lead him away. \n\n\"Wait, what about me? I'm his MATE, I don't want to be separated from him,\" Patricia said. \n\n\"You can be locked in with him if you prefer.\" She looked at Craig, then at her mate. \"If he's in a cell, I'm with him,\" she said. ",
        "\"If you need anything, there is a call button in the cell. I'll apologize in advance for the conditions, it's going to be a tight fit in there. The cell isn't big, nor is the bed, and it's not the most comfortable accommodations. It was originally built as a safe room for the family.\" \n\n\"Wait,\" Ross said. He pulled Patricia aside. \"You need to think about this, sis. Your mate could be killed in the rescue, if not following his trial. If you mark and mate him, it will make it that much tougher on you if it happens. I don't want to lose you to the madness,\" he pleaded. \n\n\"He's my mate, Ross. He's my chance at happiness, and I would gladly trade a night with my mate for a lifetime of wondering what I had missed out on. I'm sorry, brother, but if he agrees, he'll be mine tonight. It's what we are.\" She gave him a hug, then took Charlie's hand as they walked out the door and headed towards the basement. \n\n\"Drive safe, Gunny,\" I sent to him as I heard his car leaving the garage. \n\n\"Take care of our babies, love. Get some rest, everything doesn't have to be done at once. You need to sleep tonight.\" \n\n\"I promise. Say hello to our friends for me.\" I cut the connection and walked out of the room, heading to the basement room that was Josh's computer center and our security monitoring station. Josh was working through the files on the card, the large monitors full of stuff. I saw Carl on the computer next to him, looking through a series of images. \"You guys kiss and make up?\" \n\n\"Really, Mom?\" He looked at Carl who was just grinning at him. \"We had a talk and came to an understanding.\" \n\n\"What understanding was that?\" \n\n\"He'd treat my sister with respect or I'd beat his ass.\" \n\nCarl just laughed. \"Get your licks in before summer, Josh, because when I get turned I'm going to turn you into my personal chew toy.\" \n\n\"Is the link up to the holding cell?\" Josh nodded and turned it on, then quickly turned it off again. None of us needed to invade their privacy like that; let's just say they didn't wait on mated life for a bigger bed. \"All right then, I think it's best to leave them alone.\" \n\nThe copy center was going full speed as they went through the information and sent it to the printer. Ross and Lisa walked in, escorted by Ella. \"What can we help with,\" Lisa asked. \n\nJosh didn't even look up. \"Sorting,\" he said. \"We're focusing on the people first, getting the files on each printed. As they come out, they need to be sorted by organization, and you should take notes for later. You won't believe how many names, how deep this goes. If I recognized a few, that's something,\" he said. \n\n\"We can do that,\" Ross said. \n\nI started to grab papers before Ella stopped me. \"Rose, look at you, you're exhausted. I want you to get a few hours sleep at least before you start, this will survive without you.\" \n\nLisa came to my side. \"She's right, Rose. Ross and I can get started, then when we get tired you can take over for us. It would be good to have fresh eyes on it.\" \n\nI looked at Josh and Carl. \"What about you guys?\" \n\n\"We're computer hackers, Mom. I've got enough chocolate donuts, beef sticks and Red Bull down here to go for two more days without sleep.\" I looked at him, he wasn't kidding, and with his skills I had to trust him to know his limits. \n\n\"Fine, I'm going to sleep. Lisa, come get me at three, we can split the night.\" I went back to our room, showered and pulled on one of Gunny's Marine Corps T-shirts. Pregnancy was taxing me, and I wasn't even that far along, I couldn't imagine what I'd be like in four or five months. I was asleep as soon as I hit the pillow. \n\nThe light hurt my eyes as I heard my door open and Charlotte calling for me. I looked at the clock, it was just past six in the morning. \"Dammit! She was supposed to wake me up!\" \n\nCharlotte just laughed. \"Josh told me that would be your reaction. If you recall, Ella told you to rest, Lisa told you when they got tired you could take over for them. Well, they are tired now, so get dressed and we can head down there. Marge will send your breakfast down there.\" \n\n\"NO BACON!\" I ducked into the bathroom, she followed me and held my hair back as I prayed at the porcelain altar yet again. \n\n\"Mom, it's hard to envy you for being pregnant when it hits you this hard,\" she said. \"I hope I don't get morning sickness this bad.\" \n\nI rinsed my mouth out and gave her a hug. \"When you get pregnant, which won't be for a while, you won't mind. It's all part of the process, and there are far worse things coming.\" \n\n\"Like what?\" \n\n\"Back pains, kicks to your kidney, a bladder the size of a grape and the pain of childbirth. Enjoy your figure while you still have it,\" I teased. \n\nWhen I was dressed, we both went downstairs. As soon as we entered the room, she ran over and kissed Josh before joining Jane at the table. \"No school today, so we are helping our mates,\" she said. \n\nI gave Ross and Lisa a quick hug, they were dog tired, so to speak. They walked me through the piles of paper on the table, divided by agency and then in alphabetical order. When they handed me the list of Cartel agents, I was shocked. It was almost eight pages long, single spaced. Each line had the full name, organization, title, and whether they had been blackmailed or bought. \n\nMost had been bought. The breadth of their reach was incredible, and it extended well beyond the Customs/Border Patrol and DEA agents. It included local and Federal judges, Sheriffs, FBI, Justice Department, and three sitting US Attorneys. I got to the last page, where she listed Administration officials. Two were highlighted. \n\nThe Secretary of Homeland Security, and the Attorney General. Both bought and paid for, she even included the millions in payouts they had both received. \"I know,\" Lisa said, \"I nearly threw up when I saw that. Both of them were in the meeting when I gave the President the information on the conspiracy within the FBI to sabotage the investigation. We never had a chance, between the two it was going to be pinned on some low-level staffers then swept under the rug.\" \n\n\"The President?\" \n\n\"Not involved, but there are some in his White House staff. These guys make the Russians look like amateurs when it comes to intelligence.\" \n\n\"So, what do we do?\" \n\n\"We put together the information and help the Alpha Council decide how to proceed, Rose. This is WAY above our level.\" I had to agree. \n\nGunny was still gone, and it was going to be a long day. I grabbed an egg and cheese biscuit and some juice and started work. \n\nCh. 55 \n\nI was an hour into my review of the data, and my mind hurt from being blown so many times. The depth of the reach these Zetas had was more than I could have expected. I was especially pissed at the FBI files; I knew some of these people, a few were on my task force. It wasn't just field agents and lawyers, either. They had computer people, analysts, secretaries, hell there were even janitors on the list. \n\nI was so into my review I'd barely eaten, which Marge noticed when she came in to get the dishes from breakfast. \"Rose, you are pregnant, you need to eat often to help them grow strong,\" she said. She left the fruit and other items that didn't have to be hot and cleaned off the rest of the plates from the side table. \"You guys too,\" she said to Josh and Carl. \n\n\"We're good,\" Josh said as he finished off a Red Bull and tossed the can in the garbage. \n\n\"You need to sleep, too,\" she said. \n\n\"Too much going on right now,\" Carl replied. \"Thanks for the breakfast, that was good stuff.\" \n\n\"At least one of you ate my food,\" Marge complained as she walked out. I started to eat the fruit bowl as I looked through the pile for the Drug Enforcement Agency. It and Customs/Border Patrol were the biggest piles, as I would expect for a smuggling operation. I was doing a quick sort, using Post-It tabs to sort them from least important (green) to most (red). \n\nSuddenly, the door opened, and I was pulled from my chair and crushed into a broad chest. I relaxed into the smell of my mate, my cat purring inside at being together again. I didn't like sleeping alone, I needed my big snuggle bunny. \"You're back,\" I purred. \"Why didn't you call?\" \n\n\"We're under a communications blackout, everything has to be face to face. And you know I couldn't stay away from my beautiful mate, love. As soon as the guys had things packed, they drove us back here.\" \n\n\"Guys?\" \n\n\"They are upstairs. Robert and Renee were very upset by the information we shared, and they are worried about our Pack's safety. They sent two teams of warriors with me, a dozen to help with securing this territory against attack, and eight more under Beta Daniel to help us with retrieving Charlie's family. They have training in this type of mission.\" \n\nThat was good, I knew Gunny, Lars and Jacob each had some training, but the others would be rookies at this. At least the Gila warriors had experience with the Cartels. I looked back at another couple, smiling as she broke free and ran over to me. \"Congratulations, Rose, I'm so happy for you guys!\" Maria was hugging me as Caleb came in and shook my hand. \n\n\"What are you guys doing here,\" I said. \n\n\"We were sent along as part of the support team, I'm driving a large van. Wendy is here with the ambulance, and Doc is standing by back at Gila with the helicopter.\" \n\n\"And the Alphas asked me to help with the people we rescue,\" Maria said. \"They thought since I had lived through being a Cartel captive, I might be able to help.\" \n\nMy body stilled as I remembered Maria's story, she had been a toy, a sex slave to the leaders of the Socorro cartel, and many of the leadership had abused her. \"Maria... did Charlie... did he ever...\" \n\nShe shook her head. \"If he had hurt me, Caleb and I would be killing him right now. The Alphas wouldn't take that away from us after what those men did.\" She tucked herself a little more into Caleb's side. \"He was one of the few good ones. He pretended to use me, they forced him to, but he always did it alone and in a room. He would sneak me food when he could, he let me sleep. He was as close to a friend as I had.\" \n\n\"He didn't get you out, though.\" I was still apprehensive about having Charlie around, he'd already betrayed people and I didn't think I could ever trust him. \n\n\"We're going to talk to him now,\" she said. \"Gunny said he found his mate, I'm shocked. Mountain lions are solitary, that's why the Cartel liked to use them and rogue wolves.\" \n\n\"We're bringing Charlie and Patricia to the control room, his phone call should happen in about half an hour.\" Craig sounded tired, I bet he hadn't slept much last night with the threat to our Pack. \n\n\"We're ready,\" Josh replied. \n\n\"May as well sit down, they are bringing them here now.\" Charlie was led in, they had him handcuffed, Patricia at his side. Fresh bites on their shoulders showed they had completed the bond. A few more people followed. \n\n\"Congratulations, Charlie, Patricia,\" I said as Maria rushed up to them. \n\n\"Charlie!\" She quickly stepped back as Patricia started to growl. \"I never got a chance to thank you.\" \n\n\"It's I who should be apologizing,\" he said. \"Patricia, this is Maria. She was held captive by the Socorro cartel when I worked for them.\" She dropped her hostility, the story of the Cartel war against the Gila and El Paso packs was known among the Alphas. \n\nPatricia looked at her as she went back and introduced Caleb. \"Your story reached even to our Pack. Congratulations on finding your mate.\" \n\nCraig looked around, things were getting pretty tight. \"Gunny, Rose, Josh, Carl, Al, Jacob, Daniel, you guys stay with me and Charlie. The rest of you clear out, go freshen up or get some breakfast.\" People started filing out. \n\nPatricia was reluctant to go, but Maria took her hand. \"It's all right, nobody will harm him. Besides, I'm hungry and Marge is a great cook.\" She looked back at Charlie, he nodded, and soon the room was quiet. \n\n\"Josh, how are we protecting us from being located during this phone call?\" \n\n\"Relaying. His cellphone is in downtown Albuquerque right now, in a hotel near the Federal Building. Charlie, if you're asked, you're working with your FBI contacts to identify the best locations for your coordinated turnings. You're looking for schools and malls with weak security that are farthest from law enforcement backup.\" \n\n\"Got it.\" \n\n\"So, his phone will show up if searched to be at a cell tower there, but it's actually slaved to our location digitally. Cell towers won't track it, and we're routing it through a few dozen sites to make it difficult to unravel if someone does detect the traffic.\" He indicated a phone on the table. \"It will come through here. The call will be monitored on headsets,\" he passed them out, \"but they are listen only. We need you to keep them on the line for at least a minute. That will allow our program to hack the phone system and figure out where they are calling from.\" \n\n\"Sounds straightforward. Other than the time, anything I should do?\" \n\n\"Don't piss them off, whatever they tell you, agree with it,\" Craig said. \"As soon as we have their location, we'll start planning and moving people into position.\" \n\nWhile we were waiting, I handed Craig the summary of people and started to go through the questions I had with Charlie. We had barely made a dent in it when the phone rang. \n\nCharlie reached for the phone, Josh nodded and hovered over his computer. I put the headphones on. \n\n\"Hello.\" \n\n\"Good morning, Charlie. Did you have a better night than your mother did?\" I could smell his fear at this. \n\n\"I'm working on it. You said I could talk to her.\" \n\n\"In a moment. The boss wants a progress report, we can't lose the momentum we had.\" I could hear crying in the background, someone was coming. \n\n\"I'm working sources, I need to identify the right targets. Lots of people, preferably children, and far enough from law enforcement we can make a long attack and still get away. My plan is to hit multiple locations at the same time, so response resources are delayed and divided. Then I need to arrange logistics for us to get away, so we can do it again.\" \n\n\"Don't take too long. If you haven't struck by tomorrow at midnight, your sister will pay the price. You remember what Juan used to do to women that he took a fancy to, don't you?\" \n\n\"Yes.\" How could he forget that madman. \n\n\"Well, your sister's fate will make that look like a holiday. Now talk to your mother.\" \n\n\"Charlie? Baby?\" His mom's voice came over, she was crying and broken. \n\n\"Hi Mom.\" \n\n\"Baby, don't do this, not for...\" I heard the sound of a slap and she cried out in pain. \n\n\"Take her back and teach her the folly of not doing what she is told,\" the man said. Her screams got quieter until a door slammed. \"And you, Charlie, you do what YOU are told or your whole family will share that fate.\" The call ended. \n\n\"GOT IT,\" Josh yelled. His computer was pulling up a road map, the program had identified the location of the cell towers that the phone was pinging. Using signal strength at each, he was able to narrow it down to a smaller area. \"In the mountains, to the east of Patagonia, Arizona,\" he said. Carl was already pulling up the location on his computer, the image on a large screen monitor we gathered around. Al, Gunny, Jacob and Danial all got up close. They got lucky, it was far enough out that the houses were spread far apart, tucked into the trees and rocks a thousand feet above the valley floor. \n\nGunny frowned. \"It's remote enough to be defensible, and only one road in and out. No doubt that is monitored closely.\" \n\n\"We can't do this in the day, Gunny. We could set up shop here,\" he pointed to an area in the next canyon, \"and move over the mountains to come in from the back.\" \n\n\"It's an eight-hour drive without traffic,\" Josh chimed in. \"You guys should get going, you go right past the Gila pack anyway.\" \n\n\"We need eyes on it, we need to verify by sight or scent we have the right target,\" Craig said. \"Gunny, you and Lars will scout it for us in cat form. I'll go with you, we'll go to Gila first and pick up the helicopter. Al, your van is set up as a command post?\" He nodded. \"Park it here, at this trailhead parking lot. That's our rally point. Get going now, anything else you need pass on to the Gila members, they can link when they get closer and get it to you.\" They left the room. \n\n\"Wait, what about me,\" Charlie said. \n\nCraig unlocked his cuffs. \"You'll join them in the assault.\" \n\n\"Me too,\" Patricia said. Charlie looked at her pleadingly, but she wouldn't have it. \"I'll join Maria and Caleb in the rescue and transportation, women won't be as stressful to the victims.\" He closed his eyes, then nodded. At least Charlie knew when to give up, I thought. \n\nPatricia closed her eyes, then looked at Craig. \"Ross wants in, but he wants to leave Lisa here to keep working the information we got.\" Craig hesitated, but she was insistent. \"Look, he's my mate's family, that makes it a Pack matter. He won't back down.\" \n\n\"Fine, he can go with Al.\" They all filed out of the room, leaving us with the same problem we started with. \n\nHow do you win against an enemy as resourceful as this? \n\nCh. 56 \n\nThe house was quieter as most of the warriors, and our mates, had left for Patagonia. They would be under strict phone and radio silence during the trip, as we couldn't risk the Cell learning where they were and what they were doing. It sucked, knowing I was going to go another couple days without my Gunny. \n\nMy stomach started flipping in knots, and I ran out of the room to the bathroom again. I was just finishing throwing up when Ella came in, handing me a dixie cup of mouthwash that I took gratefully. \"Wow, that morning sickness is really getting to you,\" she said. \n\n\"Four times the hormones,\" I said. \"Didn't you have trouble with your twins?\" \n\n\"Yes, that's why I brought you this.\" She handed me a glass, it looked like water but smelled funny, I turned my nose away. \"What is THAT?\" \n\n\"Water mixed with a tablespoon of apple cider vinegar and a tablespoon of honey. It isn't pleasant, but it helped me with the headache and nausea.\" \n\nI looked at it, at this point I was desperate. I gulped it down, the honey helping to hide the taste of the vinegar. \"That's not good,\" I said. \n\n\"Give it ten minutes, then try and eat something again. We need to keep your fluids and electrolytes up, we can't do that if you're throwing up all the time.\" \n\nI finished in the bathroom and followed her back to the room, where a glass of water and a glass of juice was waiting for me. I looked over at Josh, he was starting to nod off. \"Josh, how long have you been up now?\" \n\nHe looked at the clock on his computer. \"Maybe thirty hours,\" he said. \n\n\"That's too long, you're losing your focus,\" I scolded him. \"Now that we have the location of their safe house, you need to get some sleep.\" \n\n\"I can't, I have to...\" He stopped when three people walked in. \"Enrique! Anna! What are you guys doing here?\" \n\n\"I couldn't let you have all the fun alone, Josh.\" The two bro-hugged. Enrique was six years older than Josh, had a Masters from MIT, and had worked for the NSA as a human before meeting his mate Anna and being turned. \"I got back from assignment in Utah and Anna went into heat. We spent it at a remote cabin, when we returned this morning, Renee updated us on what was going on and sent me to help.\" \n\n\"Me too,\" Anna said. \"With all the extra people, I figured I could help Marge and Mabel in the kitchen and stay with my mate.\" \n\n\"And I'm here to collect you, Josh,\" Charlotte as she led him away. \"I feel like a nap, and YOU need to hold me.\" He looked like he was going to refuse, even looking at Ella and I for support, but we shook our heads. \n\n\"Three of you now, you work in shifts,\" Ella commanded. \"Josh, you can be back here in six hours. Carl, you can get him familiar with everything, when Josh returns you're taking a break.\" The command in her voice didn't allow for them to argue, and Josh meekly followed his mate out the door. ",
        "Ella made a plate for me and forced me to sit and graze while I filled her in on what we had found so far. I had taken Lisa's notes and added a few of my own. \"So, I can roughly divide the piles in thirds. One group is the true believers. They were recruited because of they want to see us dead and see the war against werewolves started again. They are being paid modestly or not at all. I've gone through and put black tabs on their pages.\" I showed her the pile. \"The next group are the mercenaries; they are being paid to cooperate, some rather well. I put purple tabs on them. Finally, we have a group of people that are being blackmailed into cooperating. The Cartel has dirt on them, is threatening or holding their family, or some other means to get what they want. They have blue tabs.\" \n\nShe looked at the stacks, all the agencies, all the people. \"What do we do about this? Go to the President?\" \n\n\"Maybe. There are a couple problems with that, though. We have one witness who can testify against them, Charlie. If he's dead, we've got probably cause for search warrants, but this isn't enough to convict. You'd have to catch them in the act, find something in the search warrant, get corroborating witnesses. This many people, plus we don't know if there are others that Charlie doesn't know about. My legal opinion, Ella? Best case, a third of these guys get convicted of something, a third lose their jobs or are disciplined, the rest we can't get.\" \n\n\"That won't satisfy the Alphas, Rose. Pack members died, they were plotting the destruction of our kind. They will want blood, and I agree with them.\" \n\nI let out a deep breath as I looked at the folders on the table. \"If we go after them, it could go bad for us quickly. First off, how do you think the Feds will take it if we get caught capturing and killing their people? We'd be killing hundreds to make a dent in this, they would restart the war with us over a dozen,\" I said. \"And that's not the only way it could backfire. The Zetas aren't likely to appreciate us taking out their agents. I know Renee took out one cartel, but the Socorro cartel was a high school football team while the Zetas are like a pro team. They have us outgunned, they have better trained people, more resources, more everything. Plus, they are brutal; if we get into an open war with them, the Government can just sit back and wait for us to be destroyed.\" \n\n\"Combined, all the Packs, we could take them on,\" Ella said. \n\n\"At a very high cost. We just got through a war that killed the majority of our kind, it will take decades for us to recover. Do we really want to go to war over this?\" I tossed the folder I was looking at back on the table. \"Hell, we'd be better off cutting a deal with them, like Robert and Renee did with the Gulf and Pacific cartels. No one would have to die, and they would stop targeting us if we allowed them to move drugs through our territories.\" I couldn't believe I was even suggesting that.  \n\nElla leaned back, her fingers over her pregnant belly. \"I don't want those animals anywhere near us,\" she said. \"They can't be trusted, you'd be making a bargain that would end up ruining your Pack. If we get caught aiding drug smuggling, any political support we might have evaporates.\" She rubbed her temples. \"The whole thing gives me a headache.\" \n\n\"Come on, I need a break,\" I said. Picking up the food tray, we stepped out of the room and walked upstairs. I dropped the stuff off in the kitchen and saw through the windows that the kids were all out in the pool. Armed guards posted around the back yard due to the threat, but the pool itself was hidden by the buildings and rock walls. The kids were safe as long as they stayed in the pool area. \"Want to play with them for a bit?\" \n\nElla smiled, she loved playing with her children and the other kids in the Pack. \"Sure... my cat wants out.\" She pulled her dress over her head as she walked outside, tossing it in a lounge chair before shifting into her black panther. I grabbed a couple towels from the stack and tossed them and my clothes on the adjoining chair. Shifting into my panther form, I shook my fur out and trotted over next to her. We made an intimidating pair, my tan coat with black rosettes and her all black look. I wasn't quite as big or muscled as her, but it was close. The kids hadn't noticed us yet, they were all playing in the shallows. \"Watch this,\" she said. She lifted her head and roared, I joined her a second later. \n\nThe kids had been in human form; hearing and seeing their Alpha caused almost all of them to shift into their wolves or cats. The sound of kiddie howls and roars filled the air as we ran towards them. Ella leaped into the water in front of them, her front paws and chest splashing water over the whole group. I headed into the deeper water, diving in and swimming underwater. I loved being in the pool in cat form, I was a powerful swimmer. I moved along the bottom of the pool, moving into the middle of the group of kids before I stood tall and shook my fur out. There were excited yips, then the ones not play attacking Ella started coming after me. Soon, I had a half-dozen pups and one panther grabbing onto my fur with their little teeth. \n\nIt didn't hurt, and it was good training for the young ones. I walked to the waterfall, letting the rushing water knock them from my body before I turned and laid in the shallow water next to it. The bigger kids kept playing, while the smaller ones climbed on my back and watched. My mind was still chewing through the revelations of the past day, trying to find a way out. I looked around, and it gave me an idea. \"Ella, I think we should have a pool party tomorrow,\" I said to her. \n\n\"What? We're in the middle of all kinds of stuff right now and you want to host a party? Who the hell for?\" \n\n\"The Alphas and Lunas of all the Packs that lost members to the Scrabble Killers.\" I watched her, she stilled, then looked at me with her mouth open. \"I was thinking about what we can do, it's bigger than just our Pack and Gila. People will want blood, but not everyone on this list was involved in the killings. We find the ones who were complicit and divide them among the Packs. I found one DEA agent who was assigned to spy on our Pack and scout shooting locations. We should deliver him justice for his part in killing Lance Albertson.\" She growled as I said his name. \"We deliver the files to the affected packs for justice. For those who provided general support, we divide them up amongst the packs based on who is closest.\" \n\n\"It would make things easier if we had five targets instead of five hundred,\" Ella said. \"It would also appease the families, dividing up one kill wasn't enough for them.\" \n\n\"It's also a good cover for our activities down in Patagonia. If all the phone traffic and cars show us having a party, no one will suspect we're attacking elsewhere.\" I started to move through the water to the foot-deep portion, telling the kids to jump off because I had to leave. I apologized to the ladies supervising pool play for our interruption, but they just laughed as Ella and I left. We shook off, then changed into human form and dried off by our chairs. \"I have to get back down there,\" I said. \"I'll start a list by Pack of who they should go after.\" \n\n\"Eat something,\" Ella nagged as she dried her hair. \"I've got phone calls to make. This pool party has to be better than the LAST one I organized for visiting Alphas,\" she said. \n\nCh. 57 \n\nGunny's POV \n\nOur helicopter took off from its landing spot near the Gila Pack clinic, every seat full and the floor covered with gear. Lars and I were seated by the windows facing the front with Craig in between us; lets just say the seats weren't built for three big dudes like us, so we had to turn our shoulders so we could all fit. Facing us, we had Robert, on his sides were Betas Daniel and Alex. We had brought our weapons with us, selecting the ones most useful for this work. Lars and I each had three; our normal sniper weapons, a M40 in .308 for me, a .338 Lapua Magnum for Lars. We both brought our 'stealth' guns, which were Sig Sauer AR-15's chambered for .300 Whisper with suppressors. The combination of the big bullet, subsonic velocity and the silencer turned the bang into a cough, and they were accurate to 200 yards. The last was a pair of M&amp;P 9mm pistols with suppressors, good for in close work. They were louder than Hollywood made them out to be, but not near as loud as a normal pistol. We both had powerful digital cameras, connected to burner cellphones for transmitting images, and a pack we could hold in our teeth or around our neck. \n\nThe others had brought weapons of their own; they were more focused on intelligence and communications. A secure satellite phone and a laptop able to interpret the scrambled messages sent by Josh were their focus. We weren't going to attack until the rest of the group arrived by land. Robert looked over at me as we started to descend towards a Pack House. \"You guys just stand there and try not to look threatening, let Craig and I do the talking,\" he said. \n\nFine by me, I hated Pack politics. What we were doing was not normal, it could be seen as an act of war for two Alphas and their warriors to appear on another Pack's land without permission. As the helicopter circled looking for a good landing spot, people were pouring out of the house, some with weapons. \"Why no wolves,\" Lars asked. \n\n\"They don't know who is in the helicopter yet,\" Robert said. \"If they knew we were wolves, they would be in wolf form right now.\" As soon as we touched down, they surrounded us. \"Stay here until we motion for you,\" he said as the engines wound down. They opened the door facing where the Alpha was standing with his Betas, and Robert walked out followed by Craig. \"Alpha Delgado, our apologies for arriving without notice,\" Robert said as he approached. \"This is Alpha Craig Anderson of the Belden Pack. Alpha Craig, Alpha Carlos Delgado of the Tucson pack.\" \n\n\"And on the helicopter?\" \n\n\"Our Betas.\" He sent for us to come out, leaving our gear behind. We did so, lining up behind him for introductions. \n\n\"I take it this isn't a social call.\" \n\n\"No, it's quite serious. May we speak in private?\" \n\nI could see the men tensing up, their weapons being raised as our scents reached them. Big cats and wolves normally didn't get along, and it wasn't until I was recognized that things settled. \"That's Gunny Rodriguez, the panther from the task force?\" \n\n\"Yes sir,\" I said. \"My fellow Marine sniper and werecat, Lars Thorssen. He was the one who shot the hand and foot off the Scrabble Killer.\" \n\nThere were smiles all around. \"Cat or not, your reputation precedes you and you are welcome on my lands,\" Carlos said. \"Now come on, we need to talk.\" Robert told his pilots to take a break but keep one person with the helicopter at all times; they were also going to make a call to get aviation fuel for the return trip. \n\nThe six of us walked through the cactus garden and past the pool area to the house. It was built in the southwest style, thick adobe walls and softened corners, white in color. The floors were mainly tile, with woven rugs providing softer places. \"You have a beautiful home,\" Craig said. \n\n\"Thank you. Esmerelda, bring refreshments to the conference room.\" The older woman scrambled away to the kitchen as we entered a large conference room. We sat by rank, the host Alpha at the head of the table, his Betas filling the table down his right. Alpha Robert sat to his left, followed by Alpha Craig, Robert's Betas and us. Carlos leaned forward and looked at us. \"We are not sworn allies, Robert, why would you risk war arriving this way?\" \n\n\"I had no choice, Carlos. The threat to our species is far greater than we suspected. The Scrabble Killer, Agent Luis, both were pawns in a much bigger game. They were being used to drive a wedge between us and the humans, to push us to retaliate so the Were War would start again,\" he said. \n\n\"Who? Who wishes such madness?\" His Pack had suffered greatly, only a fifth had survived the war. \n\n\"Yesterday a man came to us, a mountain lion shifter. He had been employed by the Socorro cartel for years before we took them out. The Zetas found out about him, about his skill and resourcefulness in establishing smuggling routes and gaining protection for them. They kidnapped his mother and sister to force him to work for them instead.\" \n\nCarlos paled. \"Those men are animals, they are dangerous!\" \n\n\"And they are planning to come here. They intend to take over the former Socorro territory, but we border Packs have a deal in place with the Gulf and Pacific cartels to stay out of our land. The Zetas want us out of the way, and they plan to use the US Government to get rid of us. They will push us until we lash out, then their agents in the government will use that to justify the end of the treaty. Of course, this time they know who and where we are, it will be a much quicker fight.\" \n\nThere was anger in the room, not at us, but at the idea of another war. \"This man, what is his name?\" \n\n\"Charlie Stillwater.\" \n\n\"I know him,\" one of Carlos' Betas said. \"He has politicians, law enforcement, everyone in his pocket,\" he said. \"What did he want from you?\" \n\n\"Help breaking out his family,\" Craig said. \"We traced them to a home in the mountains outside Patagonia. We need your permission to bring in people to rescue them and anyone else being held at this safe house.\" \n\nCarlos rubbed his temples. \"These people are on their way?\" Craig nodded. \"And this is a Zeta safe house, on MY territory.\" He nodded again. \"This is not good. I don't want retaliation against my people, the last thing I need is to get on the Zetas shit list.\" \n\n\"We don't need you to participate, Carlos. Stay out, maintain your deniability,\" Robert said. \"We just need to cross your territory, we'll be out as soon as we can.\" \n\n\"Yes, and you'll leave a pile of crap behind for me.\" We discussed the options for a while, but every one resulted in him being stuck with the blame. \n\nThe blame. \"Boss, I have an idea,\" I said. Five minutes later, it was set. I passed a burner phone down the table after recording the number. \"Be ready nearby, and when I text you I'm ready, come on up,\" I said. This was going to be fun. \n\nThe helicopter took off as soon as we removed our equipment, heading for a nearby airport where it could refuel. Carlos' men drove up in three vehicles, the Alphas in one, we were in the trail car with two of his Betas. An hour later, we were at the trailhead parking lot, grouped around a picnic table where we studied the maps. \"You guys ready,\" Craig asked as we stripped down. \n\n\"Hoo-rah,\" I said before I shifted into my panther. Lars shifted right after me, our cats greeted each other before we moved off to gear up. Our rifles had been broken down and wrapped in our Ghillie suits. The bags also contained a pad and pens, canteens of water, and our backup pistols with belt and holster. Craig looped the strap over our neck so the bags hung in front of our chests. \"We'll report every twenty minutes or so by link,\" I sent to Craig. \"Let us know when the guys arrive.\" \n\n\"We won't attack until after dark unless we have to,\" Craig said. \"We'll stage just below the ridge on this side of the mountain, that way we are five minutes away at a hard run.\" \n\n\"Let's get scouting,\" Lars said as he bumped me with his shoulder. \"And don't bang up my rifle.\" \n\nWe set out through the trees and brush, our senses checking for humans. There wasn't much activity in the heat of the day, and we stayed clear of the houses that were set far apart in the wooded hillsides. I was surprised at how much nicer it was up here than the valley floor, a good twenty degrees cooler, but still over ninety. I led the way, Lars followed about thirty yards behind, and in an hour of careful movement we had reached the last hill before the target. Moving until we weren't backlit by the sky, we parted the brush and looked down at it. \n\nIt was a large home, three vehicles were outside, but no one was visible. The blinds were all down, and no activity could be seen inside. There was a large building on the other side of the driveway, no windows, just a large sliding door in the front. It wasn't your typical pole barn I expected from the photos; it looked like solid concrete walls, and the door itself was on heavy-duty rollers and was at least four inches thick. Whatever was inside, they wanted it protected. I took some photos as I relayed the information back to base, they could make notes on the satellite photos. \"What do you think?\" \n\n\"See that ridge over there?\" He pointed to a rise just a hundred yards or so on the back side of the house. \"I'm going to find a hide position there and set up. This area is a good place to hide our help when they arrive, you set up here and between us we've got everything covered.\" \n\nI watched as he moved back down the hill with his gear. When he was out of sight, I shifted and pulled on my Ghillie suit. I broke off vegetation from the area, poking it through the burlap strands that broke up my form. When I was satisfied, I assembled my rifle, put the camera around my neck, and moved into the position I had spotted. It was a tangle of dead limbs and scrub brush just below the ridge line. I took an hour to move into place, timing things with the winds, before I was satisfied with my hide. I had a good field of fire, range was 150 yards, and still no visible sign of people. I could smell scents when the wind was right, at least a dozen, some were terrified. \n\nWe watched as the sun started to fall towards the mountains, casting long shadows over the land. \"Gunny, Lars, we're all here,\" Craig sent. \"We're waiting for sundown then we'll follow your trail to you.\" \n\n\"Start now,\" I sent back. \"Two men just came out of the house, they are carrying food and water. Heading for the shed.\" \n\n\"Be there in ten,\" he said. \n\nI watched as the men moved towards the shed. One guy was big and muscled, the other was a shorter man with a scar on his face. I was following them with my rifle when the bigger man suddenly stopped and started sniffing the air. \n\nShit. The wind had moved and was blowing my scent his way, and he must be Were. \n\nHe looked in my direction and started to reach for his pistol, but he wasn't quick enough to avoid the 30-caliber subsonic round that splattered his head. His confused partner's head splatted the driveway a second later. \"GO GO GO,\" I yelled over the bond, \"They made me.\""
    ],
    "authorname": "partwolf",
    "tags": [
        "pack",
        "werewolf",
        "werecat",
        "panther",
        "cartel",
        "action",
        "mates",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/rose-ch-53-57"
}