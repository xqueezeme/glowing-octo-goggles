{
    "title": "Adoration 01",
    "pages": [
        "When she arrives home late from work, there is a desperate scraping of the key in the lock and a hurried dropping of bags on the floor. I know the sounds, know what they mean. She has been sitting in traffic, increasingly desperate for the toilet. I go to meet her and give her a hug. She shrugs me off saying that she needs to pee, but I hold on to her, kiss her, and start to undress her. She's not unwilling, aroused even by my intent, but the sensations in her bladder are urgent. She tries to push me away, again saying she needs to pee. I tell her that I want her.\n\nI pick her up and carry her into the bathroom where I continue to undress her, slowly, as she shivers and whimpers with need. While she was in the car, her pelvic floor kept her bladder under control, however painful it became. But now she is on brink of the toilet seat, she can wait no longer. As I kneel before her to pull down her leggings, I see a wet patch on the gusset of her white, cotton knickers. It turns the cotton translucent and I see the outline of her labia. I nuzzle my nose and tongue onto the wet material. She jumps with the unexpected contact and more pee jets out. I close my lips over hers and suck. Her eyes go wide with shock. And then her pupils go wide with something else entirely. Unable now to control her bladder, she lets another burst of pee into her knickers and I suck again.\n\nI've been longing for this for a long time, imagining what it would be like, how I could make it happen. I want to know what she tastes like. And I want her to feed me with what she makes in her body. It is salty, a hint of bitterness, and slightly sweet, warm and comforting. I want more. I want it all.\n\nShe stands there, uncertain, held between shyness, embarrassment, a hint of disgust, and aching to give in to whatever is going to happen. \"No, she says, \"no.\" I slide her wet knickers down her legs, hold them to my nose and lips and tongue, and look into her eyes. I see the mixture of emotions: uncertainty, shock, and desire. She's not sure she wants to give me what I'm asking for, not sure she can let herself be vulnerable in this way, expose to me what is always kept private, not wanting to believe that this is what I want, uncertain what she even thinks of me, seeing me in this new light of my desire, to take into myself, to swallow what she thinks of as unclean.\n\nI pull her down to kneeling beside me. I lie down on the cool, white tiles, and lift one of her knees over my head so she is straddling me and looking down into my face. I make her sit back and and I shuffle into position so her vulva comes down onto my mouth.\n\nI am enveloped by her thighs and her genitals. I love everything about this: the feeling of her warm thighs against the side of my face; the curve of the groin between her thighs and her vulva; and the vulva itself, pink and wet and complex and delicious. I love feeling surrounded and immersed in her womanhood. I love the salty taste and the variation of juiciness at different times of her cycle. I love the smooth undulations of her skin in her sex. I love the warm, dark opening of her vagina. I am in awe of the little bud of her clitoris and the feeling of complete control over her when I lick her there. And hidden away in all this is the tiny opening of her urethra. I close my eyes and inhale the heady, musky, saltiness. I could lie here forever.\n\nAnd then I open my eyes and look at her, asking, pleading with my eyes, for what she knows I want but is still hesitant at acceding to. \"No,\" she says again, pleading in her own way. This laying herself open: this is too much. \"No,\" a whispered wail because she doesn't want to and she can't hold herself back any longer. And then she looks into my eyes and lets go.\n\nFor a moment, nothing happens. It is unnatural to her to let go in this circumstance. She has let go with her mind but her body has still to catch up with her intent. Hesitantly, a few drops fall onto my tongue, and then a rush of her urine. I hold her gaze as it floods into my mouth. I drink, thirstily, like I am dying of drought. It is hot, 37\u00b0, the temperature of her body, and I almost cannot bear the exaltation. I am overwhelmed by the heat and the taste and smell. It is beautiful. I swallow deeply, again and again, drowning in ecstasy. I can't take it all into me and some seeps out the side of my mouth and pools on the floor beneath my head.\n\nAs her flow slows, I let my tongue flick up onto her clitoris. She jumps again, her muscles tighten automatically, and she can't continue to pee. I want to give her this gift of my tongue. I feel two kinds of wetness on my tongue, the watery wetness of her pee and the thicker, slippery wetness of her vaginal secretion. Laying herself bare by peeing into my mouth has excited her and she is aroused. I lick around her clitoris and then into the hole of her vagina. She sighs, a deep, shuddering, contented sigh, and settles more firmly onto my face and mouth so I feel even more intimately engulfed by her. I keep licking and swirling and flicking my tongue and lips over her labia and clitoris, the salty taste of her pee masking the more subtle taste of her vaginal juice. Her breath comes deeper and heavier and she starts to moan. I slow down, drawing out the climb up the mountain for as long as we both can manage. Every time she comes close I hold off a little and let her hover there on this plateau.\n\nMy penis is as hard as I can remember. I take it in my hand and hold it. I know I am so close to cumming that it won't take much to fall over the edge. I want to wait. I want us to reach the summit together. So I stoke him gently and feel the semen gathering at the base of my penis.\n\nAnd then she cums with a wail, her body rocking back and forth, her vagina convulsing round my tongue, more of her juice running onto my face. It is heaven. I keep my tongue tenderly on her clitoris, drawing out the full orgasm, until, as she starts to relax, she begins to pee again from where she broke off. She looks back into my eyes with love and gratitude, and I feel she is gifting me with the present of this urine.\n\nI can hold back no longer. I cum and cry out, my hot semen splashing on my belly and up on her back. She keeps gazing at me as I cum, watching my loss of control, the changes in my face, the last trickle of her pee draining out of her and into my mouth. She sits here for a moment, giving herself to a complete relaxation of her bladder muscles, knowing that I will want these last few drops. I hold this in my mouth, savouring the culmination.\n\nHow do you come down from this? How do you shift the atmosphere from having had another layer of civility stripped away to being able to get on with the day in the usual way? She knows what to do. Women know these things better than men. She lifts herself off my face and slides down to lie beside me, her hair in the urine that I was unable to swallow, and kisses me softly on the mouth. We lie like this for a minute or two, holding each other with affection, with a new openness, and then she shuffles round, head to toe, and takes my softening penis into her mouth. I pillow my head on one of her thighs. She looks up at me as she tenderly sucks my penis. I love the feeling of her hot mouth and soft yet slightly rough tongue surrounding me. It is no longer sex. It is just loving and comforting, like sucking your thumb. I have never loved her so much. She works her way up my tummy, licking up the semen and finally coming to kiss me again. All our fluids, saliva, semen, urine, and her vaginal juice, mingle in our mouths, on our tongues, as we share this moment of endearment.\n\nIn the end we get up off the floor. She wipes the floor with a face cloth and then, laughing, wipes my face with the urine-soaked fabric. I kiss her again and we head for the shower where we soap and sponge and wash and dry each other.\n\nAnd then we go about the things of the evening, making supper, eating together, talking about what we have done in the day, and ultimately heading for bed where we spoon, my penis nestled into the cleavage between her buttocks, and slide into the sleep of the night.\n\nI will want this again -- and again."
    ],
    "authorname": "alexovitch58",
    "tags": [
        "pee",
        "piss",
        "watersports",
        "urine",
        "woman's pee",
        "man drinks womans urine",
        "pee drinking",
        "urine drinking",
        "golden showers",
        "woman's urine"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/adoration-01"
}