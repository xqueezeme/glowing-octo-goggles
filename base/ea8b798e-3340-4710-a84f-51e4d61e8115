{
    "title": "A Master's Ring: Book 03",
    "pages": [
        "Book III: Inside The Shuuraku Gates\n\n=====Chapter 41=====\n\nI sat in the papa-san chair staring out the window. Rachel packing that morning stunned everyone in the house. There was a rush into my room, but no one asked any questions after I told them to give Rachel whatever help she needed. The Siblings' return from helping Rachel move her stuff to the sorority house was the only break in the silence for two hours.\n\nMelisa opened my door slowly and peeked inside. She gave me a weak smile and walked in. Closing the door behind her, she climbed into my bed and lay down on her stomach. Her gentle sobbing made me turn towards her.\n\n\"Why did you let her go?\" she whispered brokenly.\n\n\"It's her choice, Melisa.\"\n\n\"You could have made her stay!\"\n\n\"She did not want to,\" I said. \"Rachel does not want me.\"\n\n\"That's bullshit!\" Melisa angrily replied as she sat up facing me.\n\nHer hair was as disarrayed as I had ever seen it. The door opened; Doris Alex entered and slowly approached the bed. As she sat down, Doris Alex gave Melisa a small smile and gently patted her leg.\n\n\"Are you okay?\" Doris Alex asked Melisa softly.\n\n\"David said Rachel left because she didn't want him!\" Melisa said harshly.\n\n\"Why do you think Rachel left?\" Doris Alex whispered.\n\n\"David wouldn't...\" Melisa started to say but shook her head and lay down.\n\nDoris Alex stroked Melisa's back while she cried.\n\n\"I know you wanted Rachel here, baby,\" Doris Alex whispered. \"But this isn't what she wants.\"\n\n\"She wants to be with David,\" Melisa protested. \"I know it!\"\n\n\"That's not the real problem, is it?\" I asked her.\n\n\"David, don't!\" Doris Alex said.\n\n\"What?\" Melisa asked sitting up again.\n\n\"Melisa,\" I replied quietly, \"the problem you have is not that I allowed Rachel to leave, but...\"\n\n\"What are you talking about?\" Melisa interjected angrily before turning nervous eyes towards Doris Alex.\n\n\"...that you are in love with her,\" I continued as if Melisa had not spoken.\n\n\"David!\" Doris Alex hissed.\n\n\"Don't talk to him like that!\" Melisa said viciously, her eyes turning icy at Doris Alex's tone. Their eyes clashed and Doris Alex bowed her head submissively after a few seconds.\n\n\"I'm sorry, David,\" Doris Alex whispered.\n\nMelisa threw herself back on the bed and started crying again. Doris Alex looked at her incredulously; Melisa's mood swings could be dizzying.\n\n\"Go get her!\" Melisa pleaded with me sitting up again.\n\n\"That's not an option,\" I said. \"Like I said, Rachel has made her choice.\"\n\n\"I want her here with me!\" Melisa yelled.\n\n\"That's not going to happen,\" I told her patiently.\n\n\"Why do you have to be so cold?\" she asked crying. \"Rachel left!\"\n\n\"It was her choice to leave, Melisa,\" I said.\n\n\"No one has a choice,\" Melisa said harshly. \"I want her here. Bring her back!\"\n\n\"No,\" I said with finality.\n\n\"But David, I love her,\" Melisa said brokenly. I closed my eyes and took a deep breath.\n\n\"Then go with her, Melisa,\" I said.\n\nDoris Alex gasped, and Melisa's green eyes opened impossibly wide. They stared at each other for a couple of seconds before turning towards me.\n\n\"Rachel made a decision, Melisa,\" I said. \"Follow your heart, if that is what you want to do.\"\n\n\"Bastard!\" Melisa screamed and jumped out of the bed.\n\nShe slammed the door shut behind her and stomped up to her room.\n\n\"That was cruel, David,\" Doris Alex said. \"Rachel is her first love. Her daddy doesn't really count; and you're not very loveable, especially right now.\"\n\n\"Melisa manipulated Rachel into this,\" I said staring out the window again. \"It would have been better had she let it lie where I had it buried.\"\n\n\"Rachel grew up a lot here,\" Doris Alex pointed out. \"She made a lot of good decisions in the last few months. The Rachel I knew would never have been able to leave this place before she lived with you. Melisa manipulates all of us, but she gives back more than she gets.\"\"\n\n\"You're defending her?\" I asked somewhat surprised.\n\n\"No,\" she said. \"But why are you attacking her?\" I smiled and leaned my head back against the chair.\n\n\"How long have you been a Sibling, Doris Alex?\" I asked tiredly.\n\n\"All of my life,\" she said. \"A Brother's arms were the first to hold me.\"\n\n\"All that time, and you do not understand us, or maybe it's just me that you do not understand,\" I said shaking my head.\n\n\"What do you mean?\"\n\n\"I wasn't attacking Melisa; I was clarifying her choices,\" I said. \"Stay here or follow her heart.\"\n\n\"She can't do that!\" Doris Alex said angrily.\n\n\"Why not?\" I asked.\n\n\"The Brotherhood would kill them,\" she insisted. \"Melisa is not indoctrinated; they would never trust her to keep quiet.\"\n\n\"They would be busy trying to survive me,\" I told her.\n\n\"What?!?\"\n\n\"I owe Rachel that much,\" I said. \"I owe Melisa even more.\"\n\n\"You don't owe Rachel your life,\" Doris Alex said.\n\n\"Melisa brought Rachel into this house for me; it puts the onus of her death on my shoulders if the Brotherhood decides it is necessary now that she has left,\" I said. \"Melisa was loyal for ten years before we came together, if Rachel is what she wants then I will do what I can to make it possible.\"\n\n\"You're not that good, David,\" Doris Alex said. \"No one is.\"\n\nI smiled widely at the window.\n\n\"I only have to force a purge,\" I whispered. \"Two lovebirds might be forgotten in that mess.\"\n\n\"They'll kill you for even saying it,\" Doris Alex said anxiously.\n\nI laughed.\n\n\"Like I said, you still don't understand us,\" I told her turning to face her. \"Rachel was allowed to move into a house full of Siblings and a Brother. Is there a dumber fucking way to keep a secret? It was not an accident.\"\n\nDoris Alex shook her head in denial.\n\n\"I met Rachel before I met any of you,\" I said. \"Whatever I... feel... for her existed before the Brotherhood. She had to be brought in or made to refute me. I've never given Rachel a chance to say yes, so she's never had the opportunity to say no. It's done now, and my commitment to her is almost at an end. Melisa choosing to stay even though she loves Rachel would cut the last string between Rachel and me. There would be nothing in my life except the Brotherhood.\"\n\n\"But you said if we told Rachel about the Society you would kill her,\" she said.\n\n\"I would have killed her, Doris Alex,\" I told her quietly. \"The Brotherhood would have preferred it. Melisa could not have stayed with me after that; she would return to her dad, and there would be no reason to keep her un-indoctrinated. Killing Rachel would not have changed your mind about anything, you would still be with me.\"\n\n\"How could you say that you would have killed Rachel, and tell me you will protect them if Melisa ran to her?\" she asked.\n\n\"If you told Rachel about the Brotherhood, it would have imprisoned her in my life; better she die than to have my arms be the bars of her cell,\" I answered. \"Rachel chose freely, and so will Melisa. It is MY decision, not a Sibling's, to allow the girls their choices. The Brotherhood understood the risks bringing me in represented. All brothers fight, in our family blood is shed when we do.\"\n\n\"You can't really be like this,\" Doris Alex said with tears in her eyes.\n\n\"Tell Melisa what I've said, Doris Alex,\" I told her. \"She needs to learn to think about the consequences of her manipulations in case they fail. She would be better served to stick with manipulating her fellow Siblings and me.\"\n\n\"Melisa may run if I tell her Rachel leaving was a part of the Brotherhood's plans,\" Doris Alex whispered but could not quite make it sound convincing. \"She won't like having been manipulated.\"\n\n\"You're a Sibling, Doris Alex,\" I said in hard voice. \"You, who live and breathe for us, should have known that no Sibling really acts except at the will of the Brotherhood. There is no reason for the Brotherhood to manipulate Siblings; you all do a wonderful job of doing exactly what we want. Put the dice in Melisa's hands, let her roll them.\"\n\n\"She won't leave you, David,\" she said angrily. \"Whatever she feels for Rachel, it does not compare with what she needs from you.\"\n\n\"Is that not the Brotherhood's will?\" I asked her.\n\n\"Then how is this a fair test?\" she asked raising her voice.\n\n\"A Brother does not give tests, Sibling,\" I said. \"Melisa was put to a task; the surgical removal of Rachel from my life. She did a commendable job.\"\n\n\"You're breaking Melisa's heart, David,\" she said.\n\n\"You don't understand other Siblings either, do you?\" I asked.\n\n\"What?\"\n\n\"So incredibly intelligent, Doris Alex, and so blind to the world around you,\" I said. \"Melisa will cry, probably a lot. She'll even throw a tantrum or two, but a part of her will celebrate Rachel walking out of my life.\"\n\n\"She's not like that!\" Doris Alex defended loudly. I laughed for a few seconds and looked at her shaking my head.\n\n\"Don't let love blind you, Doris Alex,\" I instructed her. \"We are counting on you.\"\n\n\"Fuck you!\"\n\n\"Go, Doris Alex,\" I commanded. \"I would hate for some other Sibling to offer a shoulder for Melisa to cry on.\"\n\nDoris Alex was halfway to the door before she realized that she was moving. She grasped the door handle before turning to look at me.\n\n\"So is it over between you and Rachel?\" she asked.\n\nI shook my head; at least, Brothers admit they do not understand Siblings.\n\n\"There was no 'Rachel and me',\" I told her.\n\nShe smiled widely.\n\n\"This is the first time I've heard a Brother lie to himself,\" she said raising an eyebrow.\n\n\"Is there a you and me?\" I asked.\n\n\"Yes,\" she replied.\n\n\"Is there a Melisa and me?\"\n\n\"For the last ten years, David,\" she answered.\n\n\"Where does Rachel sleep tonight, Doris Alex?\" I asked turning towards the window.\n\nSilence met my question.\n\n\"Were you surprised Rachel left?\" I asked.\n\n\"No, David,\" she said coolly. \"I wasn't.\"\n\n\"So tell me again that I am lying to myself when I say there was never a 'Rachel and me',\" I said replied softly. \"There was just me.\"\n\n-----\n\nIt was twilight outside before the doors opened again. I had sat staring out the window since Doris Alex left the room. I turned my head to watch Heather close the doors behind her. She leaned against them staring at me. Her lips were touched by a mysterious smile.\n\n\"How are you feeling?\" she asked softly.\n\nI shrugged continuing to study her.\n\n\"Ah... that incredible David stoicism,\" she said walking forward to lean on the bed frame.\n\n\"What do you want, Heather?\" I asked harshly.\n\nShe smiled and posed for me. Her blue jeans were like second skin, and the white button-down shirt struggled to contain her breasts. Heather was teasing me with bounty of her body.\n\n\"It's not what I want that's important, David,\" she said biting her lower lip. \"It is what you, as a Brother, need that is important to me.\"\n\nI stared at her.\n\n\"Melisa is all about her; her; and then some more for her,\" Heather said thoughtfully. \"If you scratch the surface of any of her manipulations, it's always about her.\"\n\nShe traced the bed frame until she stood closer to me.\n\n\"Doris Alex is the same way,\" she continued. \"The Society this... the Society that; everything that girl does is for all of us. I think those two are a little selfish, don't you?\"\n\n\"Aren't you a little selfish also, Heather?\" I asked curiously.\n\n\"Very!\" she said proudly. \"I'm going to enjoy all the Rank that getting you over this hump will gain me; especially the look on Doris Alex and Melisa's face when they realize you needed something, and they didn't immediately give it to you.\"\n\n\"Hmmm,\" I said. \"What do I need, Heather?\"\n\nShe smiled and stood in front of me.\n\n\"Melisa was a fucking idiot,\" she said with feeling. \"Rachel needed the idea of David more than she could ever want you. So what does the stupid bitch that you have for a First do; she brings Rachel here, the worst possible thing she could have done for you. It was fine as long as Rachel was kept at a distance, wasn't it? You could want her, but you didn't have to deal with it. Now, you know what she looks like naked. You've seen the pleasure on her face when she cums. You've been in the room with her desire for you and had to let her walk away.\"\n\nI gritted my teeth and had to relax my jaw before speaking.\n\n\"What's your point, Heather?\" I asked in an ominous voice.\n\n\"I don't have a point, David,\" she said breathlessly. \"I have a need; your need to express all that frustration eating at you from inside.\"\n\n\"You don't want to push this, Heather,\" I warned.\n\nI saw the hand go up; I could have moved but did not. Heather knew how to throw her weight around so the slap hit me with every ounce of power her body could produce. My head snapped to the right and color bled from my vision. Heather took a step back and laughed.\n\n\"You can even blame it on that if you want to,\" she said with the barest hint of fear in her voice. \"Instead of hating that Rachel left.\"\n\nMy hand was closing around her throat as she spoke the last word. I pushed her backwards hard and kept going until she crashed into one of the doors. The sound of glass breaking made me smile. She snarled, and I stared unbelievingly as her left hand rose.\n\nTHE BITCH SLAPPED ME AGAIN!\n\nRed flooded my vision as I grabbed the front of her shirt. I spread my hands ripping the buttons off. My body moved automatically to block the knee heading towards my groin. I let go of her shirt with my right hand and spun her towards the bed. She hit and tried to bounce off, but my knee was on her ass. Heather wrestled to keep the shirt on as I grabbed it. I took a grip on her hair and yanked back. She gasped in pain giving me the time necessary to take her left arm out of the shirt. I adjusted my weight as she struggled to turn around. Her body recognized the window of opportunity, and she managed to get on her back. It made taking her other arm out of the shirt easier. She realized her mistake at the last second and tried to hold on to it. I ripped the shirt out her hands and threw it over my shoulder.\n\nShe was wearing a white tank-top underneath. I grabbed the shoulder strap and pulled. Heather grabbed my wrist, but she was too late to save the strap. She dug her nails into my wrist as I grabbed the other strap. It did not forestall ripping it off. I bunched the cloth between her breasts in my fist to pull her into a sitting position. Her hand came up for another slap but froze at my growl. The hesitation was all I needed to pull the tank-top over her head.\n\nHeather put her hands over her bra-encased breasts and lay down. I grabbed her hands and pushed them over her head. Holding her wrists in one hand, I let her fight the grip. She heaved with her hips, and her eyes widened as I used her motion to place a thigh between her legs. Her thighs gripped my leg tightly trying to prevent the loss of any more ground. I pressed my leg upwards until it was against her pussy. I smiled as she instinctively rubbed against my leg for a second before remembering she was fighting me. She tried to heave again, and it got my other leg between hers. Heather tried to break my grip on her wrists again by pulling them apart but got nowhere.\n\nHer bra had a front-snap that did not survive a hard tug. I let go of her hands, which she immediately used to cover her breasts. The motion got her upper back off the bed letting my hands grab the bra from behind. Heather wrapped her legs around me and tried to turn me to no avail. I wrestled the bra over her head making it easier to remove her arms from it. She surrendered the bra and took advantage of my motion to throw it aside to punch me in the ribs. I pinned her left arm down by putting my right forearm on her bicep. I captured the other arm and brought it over so that I could grab it with my right hand; having her arms trapped with one arm left me a free hand. I palmed her left breast and squeezed. Her hips pushed against me but with nowhere near the force needed to dislodge me.\n\nI leaned my head down and bit her left nipple. She screamed in surprise and shoved at me hard. I released her nipple and switched the arm that I was using to keep her arms immobile. I palmed her right breast and looked at her. The bite had only been hard enough to get a shocked reaction from her. I smiled as I leaned down to her right nipple. She screamed again as I bit with more force.\n\n\"FUCKER!\" she screamed as I sucked her nipple into my mouth hard.\n\nI switched arms pinning her down again and sucked her left nipple hard. I moved my lips up and bit the side of her neck. She craned her neck to the side giving me room so I put my teeth to her twice more. My hand slipped down to the front of her jeans. Heather fought again as she felt my hand undo her belt.\n\nI sucked her nipple into my mouth to distract her. The belt came undone as her body focused on the sensations washing over her. I moved up to her neck and bit the other side. She gave me the room needed to work there, not noticing that I unbuttoned her jeans and pulled the zipper down. I forced my hand into her jeans as I took her lips with mine. Heather was not wearing panties so moistness greeted my fingers' invasion. I could not get enough room to fuck my fingers into her so I propped up. I stepped back from between her legs; she looked confused but recovered quickly. She turned over on her stomach, which was exactly what I wanted. My hands grabbed the waist of her jeans as she got up on her knees. I tugged them over her bountiful ass causing her to gasp as air struck her skin. Heather grabbed on to her jeans but it was too late. I used my hold to put her on her back. I pulled her ass to the edge of the bed and yanked the jeans up her legs. She kicked trying to get them back down. I pushed my crotch into the back of her legs and wrapped an arm around her thighs effectively blocking her efforts. I grabbed a sneaker with my free hand and pulled it off her foot. She tried to kick me in the face, which was too much even for me.\n\nI turned her almost to her side, showed her my open hand, pulled it back, and spanked her ass cheek hard. Her back snapped straight, and she moaned. Heather looked up at me with a sexually angry glint in her eye, closed her hand into a fist, and punched me in the chest. I took a deep breath, turned her almost on to her stomach, and spanked the other ass cheek hard. She tried to get up on her knees, but changed her mind when I spanked each cheek again. Heather grabbed her ass cheeks and turned on to her back. She considered her options momentarily, giving me enough time to take off her other sneaker. She must have decided on a step back because she grabbed her jeans. It might have been an effective defense except I pushed her legs towards her chest and fucked two fingers into her.\n\n\"SHIT!\" she yelled and let go of her jeans.\n\nI tugged them over her feet and dumped them beside the bed. She forced her hips towards me penetrating her pussy deeper with my fingers. I pumped them in and out of her powerfully as I placed each of her legs on either side of me. She looked at me when I pulled the fingers out of her body. I trailed them up her the centerline of her body, colored each nipple with her flavor, and thenput them against her lips. She turned her face away so I grabbed a fistful of her hair. Her eyes glared defiantly as she sucked my fingers. I pulled my shirt over my head tightening my torso for the punch. She got three of them off before I got her hands back under control. I placed her hands by her sides and leaned on them. Heather wrapped her legs around me again and squeezed hard. I wedged myself downwards until I had her nipple in my mouth. Her thighs pulsed against me as I licked a circle around one nipple and bit it. She moaned when I did the same to the other. I let go of her hands and pulled her head back with both my hands in her hair. She groaned when I suckled at her neck. I felt her racing pulse through my teeth as I let her hair go and moved my hands to my pants. She tried to move but the pressure of ivory on her neck held her in place. I undid my pants and pushed them down my hips. She moved experimentally so I took her skin to the breaking point in warning. I kicked my shoes off and worked my pants down my legs until I could kick them off too. I released my hold on her throat and wrapped my arms around her thighs. She pushed against me but I used her momentum to bring her ass to the edge of the bed. I spread her legs and stared into her eyes with my dick pointing to her wet core.",
        "\"Place me!\" I said.\n\nShe shook her head hard.\n\n\"Place me, Sibling,\" I growled. \"Or I'll turn you over, and we'll see how you like having your ass taken in one dry stroke.\"\n\nHeather tilted her head to the side and seemed to think about which she would prefer. I shook my head angrily, pulled her pussy into position by my grip on her legs, and thrust into her. Her pussy opened for my cock and slammed shut with me half inside her. I changed my grip on her legs so that I held her below her knees. I pushed her legs against her chest and fucked into her by dropping all of my weight onto her pussy.\n\n\"FUCK YEAH!!!\" she screamed at the top of her lungs as I hit bottom.\n\nShe grabbed her breasts and squeezed hard as I pulled back and pounded into her. Her pussy flowered for a second and locked me in powerful grip as her body convulsed in orgasm. I forced my dick out of her grip and powered into her again. I dropped my head back and lost myself in the powerful strokes of fucking Heather. My heart pounded with the rhythm that my body beat against the inside of her thighs. Heather arched her back and let out a soul-fucked scream as her body absorbed my power and begged for more.\n\nI grit my teeth and let it all out into the willing receptacle Heather offered. I do not know how long I hammered mercilessly into her body, but it did not seem long enough when I felt the pressure inside me break through a wall. I wrapped my arms around Heather's thighs again and stood straight up. Her weight rested on her upper back, neck and back of her head as I lifted her lower body off the bed. I spread my legs wide, and fucked in and out of her as fast and as hard as I could. Heather spread her arms out wide and screamed my name as I thickened inside of her. It felt like liquid metal was passing through my body when I came. My balls pulled tight against my body, and my chest itched as I pulled my hips back one last time. I fucked into Heather as deep as I could and held the pressure against her body. It poured out of me in waves as her pussy squeezed, released and squeezed again. Her body convulsed as I painted the inside of her pussy with heat.\n\nHeather stared up at me trying to gain control of her breathing when my orgasm passed. I stared back at her with a tiny smile touching my face. I stepped back pulling her almost off the bed. I let her legs go and grabbed her hair. I forced Heather to her knees in front of me. She looked up at me as I pulled her face into my crotch. Her hands came up to hold my aching dick still. She licked the length of me while looking into my eyes. I was still mostly hard, and the hunger for more in her eyes kept me that way as she sucked me into her mouth. I pulled out of her mouth, lifted my dick out the way, and pushed my balls against her lips. Her eyes closed as she inhaled our combined essence. Heather's tongue came out and touched me. She held her head motionless as I moved my hips to use her tongue to soothe the ache. Heather put one hand on my stomach and grabbed my dick at the base with the other. She took me into her mouth and moved her hands to my ass. Her eyes turned up to me and pleaded. I spread my legs apart and fucked into her mouth. Heather's eyes glazed and her hands squeezed the back of my thighs. I took her hands in two fists pulling her face into me. She swallowed while I was deep inside her mouth. I pulled back, and she gasped for breath. Her lips created a seal around my dick head and she sucked hard. Nails were driven into my leg spurring me to take her mouth again. I felt her relax as she gave her mouth over to my pleasure.\n\nI dug my fingers against her scalp and pumped my hips slowly. My dick hardened completely as her tongue massaged me. Her eyes were blissful when they looked up at me again. I stopped my motion to trace her cheekbone with a finger. Her eyes asked a question that I answered with a hard thrust into her mouth. She gagged in surprise, and I pulled back. Heather dug her nails into my legs in payback so I drilled her mouth again. Her teeth touched me threateningly but released when I pulled her hair hard. I gave her mouth another hard stroke using my hands in her hair to keep her still. Her hands stroked my skin as she welcomed the next hard pump into her mouth. I pulled her head against me pushing as much of myself as I could into her. Her fingers gripped my legs as she tried to open her throat to my cock. The mad gyrations of her tongue on the bottom of my cock felt fantastic as I pulled back to let her breathe. I stroked in and out of her mouth for a minute before pulling completely out of her. She looked up at me, angry at having lost her toy. I stood her up by the simple expedient of pulling her hair and turned her around to push her onto the bed on her stomach.\n\nHeather must have remembered her intention of making me fight for every inch because she tried to crawl away. I grabbed her ankles and yanked back hard. She bounced on the bed on her stomach and tried to pull her legs free from my hands. I let go of her and brought my open hand down on her ass again. The sharp taint of sensation froze her giving me enough time to place her body so that her hips cornered the bed. I straddle her legs and pressed my groin against her ass. She pushed back with her lower body trying to dislodge my mount. I grabbed her hair and wrapped it around my fist. I pulled her head back and up until her body was in perfect position.\n\n\"NO!\" she yelled as I fucked into her in one stroke.\n\nShe put her hands on the bed and pushed up to relieve the pressure on her hair. My hips went back and I fucked into her as hard as I could. She let out a gurgling sound like she was drowning in her own saliva, and her ass tightened as she stood on the edge of another orgasm. I brought my hand down on her ass again pushing her closer. She slammed her head into the bed pulling me down by the grip I had on her hair.\n\n\"Oh God!\" she whispered as her hands fisted the bed sheets, and she pulled them towards her body. \"Jesus, please one more!\"\n\n\"NO!\" she screamed when I pulled completely out of her pussy.\n\nHeather tried to turn around, but I held her in place with a hand at the small of her back. I let go of her hair and brought that hand to her clit. I pressed against it and applied circular pressure to get her off.\n\n\"BASTARD!\" she screamed as her body came.\n\nI took my hand away and fucked into her again.\n\n\"Thank you... thank you... thank you,\" she chanted with her pussy palpitating around my cock.\n\nI let my dick soak in her juices as she floated down from the heights of her pleasure. My fingers wrote trails on the skin of her ass then delved into its valley. I pried open her ass cheeks until her rosebud winked at me. I pulled my cock out so that only the head was inside of her and used my fingers to gather the leavings of her orgasm. I fucked into her again causing her to grunt. Her asshole drank the liquids that dripped from my carefully placed fingers. Heather groaned as I touched a fingertip to her anus and pushed it in.\n\n\"You're going to pay for those slaps, Heather,\" I told her penetrating my finger completely into her ass. \"You're going to pay with your ass.\"\n\nHeather put her hands underneath her chest and tried to push up. I pulled my finger out of her ass, and my dick out her pussy.\n\n\"Stay still!\" I commanded in a hard voice.\n\nShe collapsed back on the bed and shivered.\n\n\"Spread your ass for me, Sibling!\"\n\nHer hands went around her body, and she grabbed her ass cheeks to spread them as wide as she could.\n\n-----\n\nI lay on the bed with the morning light pushing the darkness out of my room. Heather was lying with most of her upper body on top of me. The ass-fuck drained both of us, and we fell asleep soon after. She woke up to me wiping her ass with moist towel, which she enjoyed thoroughly. I turned her over, crawled up her body, and fucked her face until I was ready to explode. Her pussy quenched the need long enough for me to fuck her to orgasm. She woke up later with my dick entering her ass for the second time that night. She fought me harder than any other time especially after I was fully lodged inside of her. My hips gave her ass a thorough spanking that produced blood-curdling screams. I heard the door open a couple of times as other Siblings checked to make sure Heather did not need to tag out. Doris Alex even approached the bed, only to be cursed out for interrupting before Heather came the hardest she had the whole night.\n\n\"You broke some of the glass panes,\" Heather said luxuriously.\n\nShe pointed to the right door and counted cracked glass squares.\n\n\"Five, that's pretty good,\" she said triumphantly.\n\n\"Hmm,\" I said lazily.\n\n\"You should tell Melisa to get that fixed; she's real good at that kind of stuff,\" Heather said cattily.\n\nI was almost too tired to bring my hand up and down hard on her ass, but a Brother needs to keep Sibling competition below a certain level of hostility. Heather wiggled and sighed happily after my hand struck her.\n\nI stared toward the window for a few minutes before closing my eyes to let sleep take me.\n\n=====Chapter 42=====\n\nOne of the best things about money is the ability to pay for other people's inconvenience. Prior to the Brotherhood, I had to take classes when the martial arts instructor gave classes; a padded bank account meant I took classes when I had time, even if it was only he and I on the mat.\n\nThe master and I faced each other with bokken in our hands. The emptiness had swallowed me the moment I entered the school. I did not have a single clean kill in nine matches, but the master had died with me each time. His eyes were grave as he stared into my empty ones.\n\nI adjusted my feet offering an opening that he leapt into.\n\nTen simultaneous kills.\n\nWe bowed to each other and raised the wooden swords to our preferred guards. He stood still even after I offered him another trap. I tested his defense only to be rebuffed by his refusal to engage. We danced around each other for five minutes while he declined each offer to die together. Finally, I bowed to his greater skill; I could not sacrifice myself if he would not strike. He motioned for me to kneel and followed suit. We put the bokken in front of our knees. I closed my eyes and let the normal rhythm of breathing return. The master was studying me when I opened them again.\n\n\"Every student teaches an instructor that is willing to learn,\" he said quietly. \"I have students with years more experience than you, but none could have done what you did today. What is it you have to teach me?\"\n\nI tilted my head and thought about his words; thoughts of Rachel, Heather, and Melisa pounded at the walls of emptiness that surrounded me. Jason's voice answered his question; I translated.\n\n\"A samurai poem reads,\" I said.\n\n\"Death poems\n\nare mere delusion\n\n-death is death.\"\n\n\"I've heard it,\" he said quietly. \"I've thought about its meaning.\"\n\n\"You will not die with a sword in your hands,\" I told him.\n\nWe sat quietly with my words between us. Finally, he stood up and invited me to another set of matches. I did not put wood to his body for the rest of my lesson while he killed me five times. He bowed respectfully before walking into his office. It was years before I saw anyone get even a simultaneous kill in a match against him.\n\n-----\n\nThe hardest part was not looking at Rachel when I felt her nearby. Before she said no, my eyes were there to greet her when she turned towards me. My smile would answer her smile instantly. I had to control the urge to turn towards her when I felt her walk by my table in the dining hall to sit with her sisters. Her eyes touched me occasionally, but there was no longer a reason for me to look up from my book.\n\n\"You can look at her, David,\" Alyssa said sitting down next to me. My head went up in time for me to watch Sandra and Emily sit down at my table.\n\n\"Excuse me?\" I said.\n\n\"Rachel,\" Alyssa pointing over her shoulder at Rachel's retreating back. \"You can still look at her; there's no law against that.\"\n\n\"I wouldn't want her to feel weird about what did not happen between us,\" I told her.\n\n\"She should definitely feel stupid though,\" Sandra said forcefully.\n\nI turned to stare at her.\n\n\"Sorry,\" she said with a winsome smile before ducking her eyes away from mine.\n\n\"So your plan is not to look at her from now on?\" Emily asked with a wide smile. \"That's not going to get her back, you know.\"\n\n\"I'm going to smile, say hello, and talk to Rachel when it's appropriate, Emily,\" I answered. \"I do not try to get people back; they leave for good reasons.\"\n\n\"When is it going to be appropriate?\" Alyssa asked curiously.\n\n\"When she smiles, says hello, and talks to me,\" I said opening my book again. They were quiet for a few seconds before Alyssa spoke up again.\n\n\"You're done with all your food!\" she complained.\n\nI pushed my tray out of the way, and without looking pulled hers in front of me.\n\n\"Cool!\" she exclaimed.\n\nI leaned back for a stretch only to have Emily plop into my lap. Emily was something of a lap scavenger, who refused to sit in a chair if there was someone around for her to sit on. She had a marked preference for my lap.\n\n\"Pass my tray over!\" Emily commanded Alyssa.\n\n\"Get it yourself,\" Alyssa snorted.\n\n\"I'll have to eat David's food,\" Emily warned.\n\n\"You would not dare!\" Alyssa replied in a low voice sitting up ramrod straight.\n\nEmily made a threatening motion with her fork at the food in front of me. Alyssa picked up the tray on the other side of her and passed it to Emily, who rearranged the trays so they were both in front me.\n\nI slipped a hand under Emily's shirt and into her sweatpants. The girl must have really hated panties because she rarely wore them in my limited experience with her. My fingers pressed against her clit, and I massaged it gently while focusing on the words on the page.\n\n\"Is that book any good?\" Alyssa asked after a few bites.\n\nI closed it with a sigh; there was no point if the girls wanted my attention.\n\n\"No,\" I told her. \"It was something to do, rather than stare at Rachel.\"\n\n\"There's nothing wrong with looking at her, David,\" Sandra informed me clinically.\n\n\"Would you want a man you just said no to staring at you while you ate?\" I asked patiently.\n\n\"From what I hear, she didn't ACTUALLY say no,\" Sandra said defensively. \"Plus even if she did say no, she definitely didn't mean it.\"\n\nI reached out to capture a lock of her dark hair. Sandra drew closer as I pulled on it. I used her hair to pull her head aside exposing her neck to my lips. My teeth nibbled a line from her shoulder to the hollow behind her earlobe.\n\n\"Would you say no if you did not mean it?\" I whispered to her.\n\n\"Yes!\"\n\nI reared my head back to look at her.\n\n\"You would?\" I asked surprised.\n\n\"No?!?\" she said then stuck out her hand to stop me from replying. \"Do the neck thing again!\"\n\nI smiled and leaned down; instead of using my teeth, I kissed the line. She shivered when I looked into her eyes.\n\n\"So you would say no if you did not mean it?\" I asked seriously.\n\n\"Yes!\" she said in a committed voice.\n\n\"What?!?\"\n\n\"Oh, wrong question!\" she said with a blush and a shake of her upper body. \"Sorry, I was just making sure you understood my answer is 'FUCK, YES!!!'\"\n\n\"We already knew that,\" Emily said crassly.\n\nI pushed two fingers into her and pulsed them against the top of her pussy. Emily gritted her teeth and grabbed my wrist tightly.\n\n\"Be nice!\" I told her holding my fingers still.\n\n\"I promise to be very, very nice if you do the finger thing one more time,\" she gasped.\n\nI rubbed in a small circle instead.\n\n\"FUCK, YES!!!\" she grunted. Emily turned a pretty shade of pink when she came.\n\n\"My hero!\" Sandra said jokingly and unceremoniously shoved Emily off me.\n\nShe took over possession of my lap and lifted her jean skirt a few inches wiggling her eyebrows at me suggestively. Sandra squeezed my fingers as they entered her.\n\n\"Personally, I think the word no should never come out of my mouth around you,\" she told me.\n\n\"That's not a bad way to think, Sandra,\" Doris Alex said sitting down.\n\n\"Yeah, awesome philosophy!\" Michael agreed with a very wide smile as he sat next to Doris Alex. \"Let's put it to the test though. How about you and me meet in your room and fuck like we're the only two rabbits left on the planet so it is our duty to repopulate?\"\n\nBefore Sandra could reply, Michael held up a hand.\n\n\"David is still here,\" Michael pointed out theatrically. \"Tell me that you are not going to live up to the words you just said to him thirty seconds ago.\"\n\nI curled my fingers inside of Sandra. She gasped and latched on to the table while the convulsions of an orgasm overcame her; it took a minute for her breathing to recover. She stared at Michael for another minute after that, before turning towards Doris Alex and Alyssa.\n\n\"Is he better than my plastic?\" she asked the two girls.\n\n\"He's got a very talented tongue,\" Alyssa replied. \"Unless your dildo can lick you, Michael is definitely a couple of steps above plastic. He's also got a clue on how to use his dick.\"\n\n\"Bitch!\" Michael exclaimed.\n\n\"Michael's got his uses,\" Doris Alex espoused lazily. \"David is definitely the chocolate cake; Michael is like the raspberry stuff they use to decorate the plate.\"\n\n\"Double Bitch!\" Michael said dramatically putting his hands on his chest as if they had cast spears into it.\n\n\"Okay,\" Sandra said to Michael. \"I don't think I'm ready for chocolate cake yet, so you'll have to do. God, I need dick!\"\n\n\"My turn,\" Alyssa announced pushing Sandra off my lap.\n\nAfter giving Alyssa what she wanted, my mind wandered as their conversation turned towards the winter formal that Michael's fraternity was hosting.\n\n\"Do you think she was serious?\" Michael asked as the non-Siblings walked away.\n\n\"Who?\" I asked paying attention again.\n\n\"Sandra,\" Michael said. \"Was she serious about hooking up in her room?\"\n\n\"Of course, she was,\" Doris Alex told Michael patiently. Sometimes, Doris Alex treated Michael like he was a fourteen-year-old boy too dumb not to plug his hard-on into a wall socket.\n\n\"You know, David,\" Michael said magnanimously. \"You are my absolutely favorite Brother on the entire planet.\"\n\n\"This I have to hear,\" I told him.\n\n\"Yes, Michael,\" Doris Alex whispered. \"Please explain.\"\n\n\"Well, it's like this,\" Michael said leaning back. \"I've been screwing Alyssa most of the semester; most of my frat brothers think we're dating now.\"\n\nI raised an eyebrow.\n\n\"Then there's Doris Alex, Janet, Malia, Heather, Susan, and Nancy,\" Michael said with a bright smile. \"Tonight, it's Sandra, and I'm sure Emily is not far behind. You do all the work and I do all the fucking. Alyssa, Emily, and Sandra are hot as shit, and you spun their wheels in the middle of the dining hall. You warm them up, and I knock them down; it's the perfect partnership in my opinion.\"\n\n\"Hmm,\" Doris Alex said staring lazily at Michael.\n\n\"I can't touch Melisa, but it's not like she wants anything to do with any guy other than you so no biggie,\" Michael continued not heeding the cold look in Doris Alex's eyes. \"The pussy's so good, I'm even willing to forgive you this whole Rachel fuck up. Man, getting into her pants would have been fierce!\"\n\n\"Michael!\" Doris Alex hissed.\n\n\"What?\" Michael asked innocently without taking his eyes off me.\n\n------\n\nI walked into the house that night to find all the Siblings in the living room. They surrounded an exhausted-looking Heather on the couch. She wore a white bathrobe and was fresh out of the shower. I smiled at her, which she returned with a weak one, playing her concerned audience for all they were worth. There was dark bruising on the left side of her neck I wanted to investigate. I moved to stand behind the couch, reached down, and untied her robe. Heather stretched out so that when I opened the robe her body was fully on display.",
        "Malia gasped at the bruising on Heather's body. I gestured for Heather to turn over. She removed the robe and got on her stomach. I outlined a bite mark on her left ass cheek with a finger.\n\n\"Turn around,\" I told her.\n\nHeather got on her back and looked up at me. She moved to her knees and continued staring into my eyes.\n\nSibling Rank makes sense only to Siblings, but a Brother needs to understand how to affect it to reward a Sibling publicly. It does not take much: a finger tracing a cheekbone and lips, a gentle kiss, and looking at every other Sibling in the room.\n\nHeather's eyes shone sun-bright when I turned back to her.\n\n\"Give her a bath,\" I told the rest of the room. \"A long, hot one.\"\n\n\"She just took a shower!\" Malia protested.\n\nI turned towards her.\n\n\"I did not make a request,\" I said quietly. \"I gave instruction.\"\n\n\"Malia!\" Doris Alex interrupted when Malia opened her mouth to protest again. \n\nDoris Alex looked at me nervously as my knuckles rapped the back of the couch while I stared at Malia.\n\n\"I'm all for a bath,\" Heather said getting off the couch and grabbing her robe.\n\nShe was at the door before she noticed no one was following.\n\n\"Come! Come!\" she said clapping her hands. \"David said I get a bath; a long, hot bath. An orgasm or two isn't out of the question, right, Brother?\"\n\nI smiled at her.\n\n\"I couldn't imagine bathing a woman without a couple of relaxing orgasms to ensure the heat sinks in,\" I said sitting down on the couch.\n\nHeather reveled in lording it over other Siblings so it was almost two hours before everyone trooped back into the living room. They took seats around me waiting expectantly. Rachel had served as a limit to Sibling behavior; they did not hide the fact I was at the center of their lives from her, but the dynamics of the house began to change the second she left. The nervousness in some of the eyes around me said Rachel still cast a shadow, but their insecurity was completely about my reaction to Rachel leaving now.\n\n\"David needs another sacrificial virgin tonight,\" Heather said in a strong voice.\n\nI turned to look at her. Rank had been practiced with a certain amount of subtlety while Rachel resided in the house, but the look of aggression in Heather's eyes after she spoke made clear that Rank could be wielded like a sledgehammer.\n\n\"So you were the sacrificial virgin last night,\" Michael snorted sarcastically. \"More like sacrificial slut!\"\n\n\"I would rest that tongue of yours, Michael,\" Heather said crisply turning towards him. \"You're going to be using it a lot tonight. I heard about your little tryst with Sandra, and I'm tagging along. David pounded the hell out of my body and the combination of Sandra's hands and your tongue sounds divine. You'll get all of Sandra's sweet little pussy that you can handle, just remember to close the door behind you when she and I fall asleep.\"\n\nThere were sledgehammers, and there was Heather with a sledgehammer. Michael nodded as if he expected no less from the Ranking Sibling. I almost smiled wondering what Janet with Rank and no limits on her behavior would be like.\n\n\"Sandra looks like she has a pretty talented mouth,\" he told Heather. \"While I'm busy downstairs, it would be a good idea to have her work on your nipples. They're looking a little mangled. Cute, but mangled!\"\n\nHe dodged Heather's thrown cushion.\n\n\"Don't forget my orgasm wake-up call, and breakfast in bed!\" Heather said sticking her tongue out Michael.\n\n\"I'll do it,\" Malia announced.\n\nI closed my eyes and hoped she meant something else. I opened them and turned towards her to find her eyes looking at me.\n\n\"I'll do everything Heather did last night with you,\" she said in a strong voice.\n\nHer eyes flickered with fear; so many different reasons to be a Sibling, and Malia's had nothing to do with why Heather slapped me. I opened my mouth to say no when a flash of red crossed in front of me.\n\nEvery Sibling jumped at the sound of Doris Alex's open hand striking Malia's face with enough force to drop her. Malia was stunned for a second, but when she turned Doris Alex was standing over her like an Amazon. Malia's eyes filled with fear; much more fear than when she had volunteered to be with me.\n\n\"HOW DARE YOU!!!\" Doris Alex screamed at the top of lungs.\n\nHer hands were tightly fisted, and she raised them as if nothing would make her happier than for Malia to stand up so she could beat her back down.\n\n\"How fucking dare you offer a Brother what you would not freely give!\" Doris Alex whispered with rage filling every cell of her body. \"And for you to do it to this Brother.\"\n\nThe other Siblings were terrified; Susan and Nancy edged behind Stephanie, Melisa stood up slowly and moved so she was standing to my left with her hand on my shoulder, Janet nearly ran to the corner farthest away from Doris Alex, Michael scrambled over and behind his seat only to crash into Heather. The two fought for position trying to place the seat and an extra Sibling body between Doris Alex and them until the redheaded Valkyrie turned her eyes on them. They froze under her glare and tried to disappear by standing still.\n\nDoris Alex turned baleful eyes on every Sibling in the room before looking down at Malia again; for a second, even I was convinced she was going to pound Malia to a pulp.\n\n\"Arrggh!\" Doris Alex grunted loudly spinning in place to turn her back to Malia.\n\nShe was very close to losing control so I stood up and handed her a decorative ashtray figuring maybe something to throw would help calm her. Doris Alex snatched it out of my hand, turned around, and slammed it down next to Malia's head. Malia screamed in fear as broken glass sprayed her face.\n\n\"Doris Alex,\" I said forcefully.\n\nHer green eyes turned towards me, but she dampened the flames before they touched me. Doris Alex closed her eyes and took a very deep breath. Melisa stepped tight against my back and wrapped her arms around my waist. I felt her peeking around my shoulder.\n\n\"My name is Doris Alexandra Smith, a child of the Sibling Bloodline Alexander; I Speak for Siblings,\" Doris Alex intoned loudly. \"First Position.\"\n\nThe reaction to her words was immediate. Malia spun to her stomach, got on her knees with her ass on her ankles, placed one hand on top of the other flat on the ground, and rested her forehead on them. Michael and Heather moved to either side of the seat and assumed the same position. Janet, Susan, and Nancy were already in place when my eyes swept the room. Stephanie was bending her knees, but a look of confusion and shock came over face.\n\nDoris Alex gasped as Stephanie straightened. Melisa's arms tightened around my waist as a new anger flooded Doris Alex's eyes.\n\n\"The indoctrination,\" I said curiously patting Melisa's hands.\n\n\"Melisa's not indoctrinated so she does not react to the control phrases,\" Doris Alex said to me without taking her eyes off Stephanie. She misunderstood my curiosity but I let it slide. Doris Alex took a step towards Stephanie.\n\n\"Doris Alex,\" I warned.\n\nThe redhead turned her body towards me but her eyes still bored into Stephanie.\n\n\"Leave her be,\" I told Doris Alex.\n\n\"David,\" Doris Alex said in a confused voice. \"She's broken the indoctrination. It's not possible! Every Sibling except Melisa is indoctrinated. Brothers would never trust us if the indoctrination could be broken.\"\n\n\"The jury is already in on whether indoctrination can be broken,\" I told her. \"Regardless, Stephanie is my business. Brothers will decide what to do with her.\"\n\n\"She's a Sibling,\" Doris Alex said taking a sideways step to get closer to Stephanie. \"This isn't possible.\"\n\n\"Is this your idea of obedience, Sibling?\" I asked.\n\nHer eyes snapped to mine before she knelt into the same position the other Siblings were in but with her head pointing at me. The motion had been as automatic as the reaction from the Siblings to her words. I nodded slowly as I considered what had seemed a reflex action from her.\n\nI turned in Melisa's embrace until we faced each other. She smiled bravely and closed her eyes when I kissed her forehead. I pulled her away from me turning her to face Stephanie. With a hand on the small of her back, I gently pushed Melisa towards Stephanie.\n\n\"Take her upstairs, Stephanie,\" I instructed. \"This has nothing to do with her.\"\n\nStephanie nodded thankfully while taking Melisa's hand in a tight grip. Melisa pulled out of the hold and walked back to me. She put her hands on either side of my face and stared into my eyes.\n\n\"There is no choice, David,\" she whispered. \"I said I was yours; I meant it; then, now, and forever!\"\n\nShe kissed me hard before turning around and walking out of the room behind Stephanie.\n\nI walked over to stand by Doris Alex's head.\n\n\"Stay there,\" I said down to her before walking out of the room.\n\nIt took about five minutes to drink a bottle of water while I thought about what I had seen. I walked back into the living room to find Doris Alex had oriented her head towards where I would enter. Sitting down on the couch, I studied her.\n\n\"How long would you stay there?\" I asked her.\n\n\"Until you forgave me,\" she said without looking at me.\n\n\"For what?\"\n\n\"You said Stephanie was your business,\" she said. \"I ignored you, Brother.\"\n\nHer voice was painted with abject submission. Doris Alex had come close to disobedience, but not enough to warrant her reaction. I stood up and walked to each Sibling studying their posture. None reacted as I approached them except for Doris Alex. Her positioning was different from the others in that it remained aligned to me, but that was not the only difference.\n\nDoris Alex vibrated with sexual need.\n\nI undid the belt of my pants and pushed them along with my underwear down my legs. Doris Alex tensed and relaxed as I stepped out of my clothes. She was wearing light pink pajama bottoms and a tight mini-t. I put my hand on the waist of her bottoms and pulled them over her ass. Doris Alex lifted her ass off her ankles to make it easier for me; she was not wearing panties. One of the most obvious changes since Rachel's departure was Siblings removing anything that might be impediment to my sexual desire; even Malia's uniform had altered to no bottoms.\n\nMy hands touched the side of Doris Alex's hips, and she lifted them to give me better access. I pushed forward until my dick kissed her moist entrance. Doris Alex sighed and shuddered as I entered her. I hit bottom with her pussy welcoming me with the pulsating pressure of her orgasm. I stroked slowly in and out of her as her entire body shivered in reaction. Doris Alex was easily the Sibling that was the most sexually excited by any contact with me, but from my end it felt like she came the entire time I fucked her, which even from her was not normal. With her pussy squeezing me tightly, releasing and squeezing me again, it was not long before my cum jetted into her. She arched her back and tried to milk the semen out of me for a minute before she relaxed. I pulled out of her and stood by her head. She knelt to take me into her mouth. Her eyes were blissful as she cleaned her juices from me. I sat back down on the couch and looked at her.\n\n\"We're going to have to talk about indoctrination, Doris Alex,\" I told her.\n\n\"Brothers don't get very involved with it, David,\" she said neutrally.\n\n\"Obviously at least one Brother has,\" I replied. \"Your indoctrination is different; I'd like to understand how and why.\"\n\n\"Do not listen,\" Doris Alex intoned to the other Siblings. The tone of her voice was artificially deep, almost like a religious chant.\n\n\"You have a right to know anything you want, David,\" Doris Alex said to me. \"But please, not around other Siblings unless I've taken them in my control.\"\n\nI looked around the room.\n\n\"They can't hear us?\" I asked. \"That's very powerful if it works.\"\n\n\"Physically, they can hear us,\" she corrected. \"Their mind just tunes out the words until I give them another command.\"\n\n\"Very powerful,\" I said softly.\n\n\"It doesn't work on Brothers, David,\" she said quickly.\n\n\"Why not?\" I asked curiously.\n\n\"We don't know,\" she answered.\n\n\"You've tried to put a Brother under this type of control,\" I stated lethally.\n\n\"With full Council approval,\" she volunteered rapidly. \"Some older Brothers agreed to let us try.\"\n\n\"The results surprised you?\" I asked hearing the catch in her voice.\n\n\"Those Brothers were old, David, but they still managed to kill the Sibling trying to indoctrinate them,\" she said with a shudder. \"It wasn't enough for the Council though. At their direct command, we tried to indoctrinate a Brother in training. It seemed to work until the restraints were removed. With three of the Foot in the room, she still managed to kill her indoctrinator. We haven't changed indoctrination very much since so every indoctrinator knows it is a death sentence to try it on a Brother.\"\n\nI nodded slowly.\n\n\"Can you be taken control of in this fashion?\" I asked.\n\n\"No,\" she said. \"I am Bloodline.\"\n\nI nodded as if that made sense, deciding there was no reason to pursue the meaning of her answer yet.\n\n\"Malia isn't worth this... display of power,\" I said gesturing towards the Siblings. \"You could have easily packed her bags and sent her home. I would have preferred someone had done that a while ago; she and I don't mix very well.\"\n\n\"Rachel disrupted the natural order of things,\" she told me. \"Even an Enforcer would have been far more isolated than you have been. Melisa is not a normal First. Everything about you is so different, David, but no Sibling can be allowed to forget that you are a Brother. Michael dared to challenge you even after what happened to Nancy. Enough is enough!\"\n\n\"Isn't that my failure?\" I asked.\n\n\"Not as long as your idea of an example is a dead body,\" she said staring at me.\n\n\"It is a memorable example,\" I told her.\n\n\"Which one of us have you pick out?\" she asked.\n\n\"Except for Michael, most of you backed off after Nancy,\" I said. \"And even he was far from being in my sights.\"\n\n\"Every Sibling believes they are safe near a Brother, David,\" she said anxiously. \"You have no qualms about killing any of us. It's not just being an Enforcer either; Anna hated killing Siblings.\"\n\nI shrugged.\n\n\"Do you have a conscience?\" she asked suddenly.\n\nI smiled thinking about what I had told my sword master.\n\n\"Death is death, Doris Alex,\" I said. \"Your death, Roderigo's death, my death; one death, a thousand; a cockroach, a human; an honorable death, an ignoble one; it's all just death.\"\n\nShe shook in fear before looking away from me.\n\n\"Melisa and I understand,\" she told me. \"But you don't have the two years of isolation that would have made certain signals instinctive. You've come some of the way towards what Siblings are used to, but I won't risk any one of us because the Brothers chose not to isolate you.\"\n\n\"It would take a lot for me to kill one of you,\" I told her. \"I'm far more likely to kill Roderigo than any Sibling here.\"\n\n\"You're very likely to kill Roderigo, David, so the death of one of the Siblings being less likely is hardly a comfort,\" she said looking back at me. \"Trust was built on instant obedience and being the pleasure of Brothers. Every Sibling I lead to your door will know that the difference between other Brothers and you changes nothing. Instant obedience and your pleasure are the laws of this house.\"\n\nWe stared at each other for a couple of minutes before I spoke.\n\n\"Do what you have to do, Doris Alex.\"\n\nShe nodded and stood up. Straightening her pajama bottoms, she looked at the kneeling Siblings.\n\n\"You may listen,\" she intoned. \"Second Position.\"\n\nThe Siblings knelt up with their hands pressed together palms up. They put their foreheads against their wrists.\n\n\"Third Position,\" Doris Alex intoned.\n\nThey sat back on their heels, and the force of their personalities seemed to rush back into their bodies. There was still trepidation on their faces, especially on Michael and Malia's.\n\n\"I will deal with you a little later,\" Doris Alex said pointing at Malia, nearly panicking the girl. \"But you're first, Michael.\"\n\nMichael's face turned white; he had good reason to since Nancy's punishment at Doris Alex's hands still had the psychologist walking a very straight line.\n\n\"What the fuck was that shit in the dining hall, Sibling?\" she asked with her voice rising.\n\nMichael looked at me but like Nancy found that I was not an avenue of escape.\n\n\"I...I...I,\" he got out before Doris Alex raised hand silencing him.\n\n\"Has the thought that maybe David isn't really a Brother been crossing your tiny, little mind?\" Doris Alex said crouching down so that she was face to face with him. \"Or maybe somehow the thought that you are his equal has infected you, Sibling!\"\n\nI was surprised Michael did not keel over in a dizzy spell from shaking his head so hard.\n\n\"No, Michael,\" Doris Alex said viciously. \"I think you have forgotten your place in a Brother's house.\"\n\nMichael shook his head even harder.\n\n\"Lucky for you, there is a centuries old method of ensuring a Sibling understands their location in the grand scheme of things,\" Doris Alex continued. \"And look, plenty of witnesses to remind you what happened here when you get uppity again.\"\n\nTwenty minutes later, Michael had his place in my home drilled into his mind and in the minds of everyone else in the room.\n\n\"You're such a good boy when you behave, Michael,\" Doris Alex said licking his lips. \"Here is what we're going to do to make sure you don't stray again. Every month, I want you to repeat what just happened in front of every Sibling in the house. Okay?\"\n\n\"Be careful, Doris Alex,\" I said staring at the ceiling. \"You are not the Brother in this house.\"\n\n\"Forgive me, David,\" she pleaded. \"May I give this Sibling instruction to ensure he remembers his place as a Sibling from now on?\"\n\n\"You may,\" I said closing my eyes.\n\n\"Every month, Michael,\" Doris Alex repeated. \"In front of every Sibling who lives here or wants to watch.\"\n\n\"Thank you, Speaker,\" Michael replied gratefully.\n\nI opened my eyes to look at him; the gratitude was heartfelt surprised me.\n\n\"You,\" Doris Alex said in a voice that chilled the room after turning to face Malia.\n\nDoris Alex paced slowly towards the terrified girl.\n\n\"Do you have any idea the damage you could have done today?\" she asked rhetorically. \"Melisa spent months making David understand that a Sibling barely knows the meaning of the word no around a Brother. It took an outsider to finally teach him, and the only pride left to us is that she has accepted a white ring.\"\n\n\"I would've done it, Speaker,\" Malia defended herself.\n\nThe words angered Doris Alex even more; her hair almost crackled with emotion. She grabbed a fistful of Malia's hair and pulled up. They struggled as Malia tried to stay on her knees while Doris Alex tried to stand her up. Finally, Doris Alex relaxed her grip.\n\n\"A Sibling is not expected to match up with every Brother, you idiot,\" Doris Alex hissed. \"But you should not have offered, what you did not want to give.\"\n\n\"He would've said no, Speaker,\" Malia cried.\n\nThe slap was like a thunderclap; Malia's head almost snapped around. Doris Alex put her hands behind her back and stared down at Malia.\n\n\"You will not speak again,\" she said calmly.\n\nMalia nodded.\n\n\"This was my mistake, Malia,\" Doris Alex said sadly. \"I should never have brought you here. I misjudged you thinking maybe there was more to you than summer fun. It is the only reason I am going to go easy on you.\"\n\nDoris Alex sighed and looked around the room.\n\n\"You're going to suffer, Malia,\" she said. \"We need David and you almost damaged the Sibling relationship with him. Since this was my fault, I'm going to punish you... gently, until I know for sure that Melisa does not have to re-pave this road. If in the next six months, I even think David might hesitate to take what he wants from one of us, I swear Siblings will scare themselves around campfires with tales of what I do to you.\"",
        "\"How could you fucking show fear during an offer of sex to a Brother?\" Doris Alex asked with frustrating burgeoning out of her voice.\n\n\"Heather said she was afraid, Speaker,\" Malia whispered.\n\nAnother thunderclap.\n\n\"Heather were you afraid?\" Doris Alex asked.\n\n\"Yes, Speaker,\" Heather answered instantly.\n\n\"Why, dear?\"\n\n\"I slapped a Brother, Speaker,\" Heather said. \"I was going to be punished. I wanted him to do it. God, did I want him to do it, but I was still afraid!\"\n\n\"Were you afraid of David?\"\n\n\"Never, Speaker!\"\n\n\"Of the sex, maybe?\" Doris Alex asked.\n\n\"No, Speaker!\"\n\n\"What were you afraid of?\"\n\n\"That I went too far, Speaker,\" Heather whispered.\n\n\"Were you afraid of David, Malia?\" Doris Alex asked.\n\n\"No, Speaker,\" Malia whispered unconvincingly.\n\n\"What were you afraid of?\"\n\n\"That he would say yes, Speaker.\"\n\n\"But you offered him your body anyway.\"\n\n\"I'm sorry, Speaker,\" Malia whispered forlornly.\n\n\"You will be, Malia,\" Doris Alex promised fervently. \"You will be so incredibly fucking sorry, no Sibling will ever make this mistake with David again.\"\n\n\"Fourth Position,\" she intoned after taking a deep breath.\n\nAll the Siblings moved back into the First Position, but there was something more relaxed in their posture as if their personality had not fled with the redhead's command. Doris Alex turned towards me and studied me for a while.\n\n\"Will it disturb you if I begin Malia's punishment here?\" she asked me politely.\n\n\"No,\" I replied.\n\n\"Janet,\" Doris Alex said.\n\n\"Yes, Speaker,\" Janet replied.\n\n\"Are you afraid of David or anything he might do to you tonight?\" Doris Alex asked.\n\n\"That bitch, Heather, tricked me on the way to David's door last night, Speaker,\" Janet grumbled. \"If she didn't have such nice tits, I'd strangle her while she slept.\"\n\nIt was made funnier by the fact her face was barely a couple of inches off the ground muffling her voice.\n\n\"Hey, you're the idiot who fell for the old 'your shoelace is untied' bit,\" Heather defended loudly.\n\nWatching Siblings laugh uproariously while in such a subservient position was interesting.\n\n\"Tonight, it's your turn, Janet,\" Doris Alex said. \"Keep David distracted enough that he doesn't pay too much attention to Malia's screaming.\"\n\n=====Chapter 43=====\n\nThe scream from the living room penetrated into my room making Janet flinch.\n\n\"I'm sorry,\" she said pushing the shorts she was wearing down her legs.\n\n\"Why?\" I asked.\n\nShe pulled her shirt over her head preventing any speech for a moment. Wearing only a small pair of panties, she sat down on the bed. Another scream from Malia made Janet squirm restlessly ,and her plump breasts shook in reaction.\n\n\"I guess I'm actually supposed to distract you,\" I said jokingly.\n\n\"No,\" she said looking down and picking at the bed sheet. \"It's just that I should have done something about Malia before it got this far. You shouldn't have to deal with this in your house.\"\n\n\"What could you have done, Janet?\" I asked.\n\n\"Sent her home,\" she said turning her brown eyes to me.\n\n\"It wasn't your responsibility,\" I said getting closer to the bed.\n\nJanet was sitting on the edge of the bed. Spreading her legs, she reached out to grab my hardening dick. Her hands tugged me forward until I stood between her knees. She stroked me with both hands until I was completely hard. One hand reached underneath to cup my testicles, while the other continued its loving attention on my dick.\n\n\"Yes, it was, David,\" she said looking up at me. \"I'm the one that Doris Alex assigned to make Heather and Malia's transition easier. I was too focused on my own problems and on Heather to be decisive about Malia.\"\n\nI stroked her cheek.\n\n\"I should have noticed that you and her weren't getting along. She spent more time trying to get Michael's attention than yours. Like Doris Alex said, not every Sibling and Brother click but that's ridiculous,\" she said angrily. \"I'm a better Sibling than that.\"\n\nI put my hand behind her head and pulled her forward while taking a step back. She knelt in front of me and opened her mouth to take my dick inside of her mouth. Her eyes closed as she savored the feel of my heat in her mouth. Janet sucked hard and moaned.\n\n\"So what happened that you missed it, Janet?\" I asked when she drew back and released my dick from the wonderful encasement of her mouth.\n\n\"The twining attempt between Heather and Malia was breaking down,\" she said. \"It was hurting Heather so much, especially because it wasn't like most twining failures. Look at Susan and Stephanie, their twining failed, but they came out of it like they were soul mates. Heather and Malia are barely friends, David. Malia doesn't seem to care, but Heather's been crying herself to sleep every night. She's needed me with her. Someone fucked this up so royally!\"\n\n\"They're very different,\" I said.\n\nShe put her hands on my hips and pulled me closer. She dropped her head so that her forehead rested against me. She took a deep breath, turned her face, and rested her cheek on the inside of my hip.\n\n\"Opposites twin all the time, David,\" she said softly.\n\n\"I'm not talking about Heather being a very serious person, and Malia being all beach-party fun, Janet,\" I said stroking her hair.\n\nHer hand grabbed my dick and stood it straight up. I felt the wet touch of her tongue.\n\n\"Heather and Malia need Brothers differently,\" I said as she sucked on the head. \"They don't relate to any of us in the same way. Everything Heather needs scares the hell out of Malia.\"\n\nShe blew on me making me shiver from the coolness.\n\n\"It was also me, David,\" she whispered. \"I was feeling sorry for myself.\"\n\n\"You seemed very happy to me,\" I said pulling her a little away from me so I could look into her eyes.\n\nJanet moved back climbing onto the bed until she could lie down. She extended her legs and took her panties off. Spreading her legs, she played a finger between the lips of her pussy. Her finger was moist when she placed it in her mouth and sucked it dry.\n\n\"Why were you feeling sorry for yourself?\" I asked ignoring the pulse of my dick as she stared at it hungrily.\n\n\"I didn't live here,\" she answered faintly.\n\n\"That was your choice, wasn't it?\"\n\n\"Not living here made it easier to hide when I couldn't be the happy Sibling sex-pot,\" she replied seriously.\n\n\"I didn't expect you to be that all the time,\" I told her. \"Every Sibling here has their moody days. You could have thrown an ashtray or challenged Melisa to a wrestling match on my bed.\"\n\n\"It would have been worse living here, David,\" she said ignoring my attempt at humor.\n\nHer eyes followed me as I walked around to the other side of the bed. She lay back and slithered backwards until her head was almost off the edge of the bed. I placed my dick directly above her face. Her tongue came out to explore my hard-on; she turned onto her stomach, knelt, and tried to swallow my dick. She gagged but kept pushing forward until I pulled away from her. Janet's brown eyes were desperate when she looked at me.\n\n\"Why did you want to be the one in this room last night?\" I asked suddenly. Her eyes widened letting me into her soul.\n\n\"I don't understand,\" she said crawling backwards warily.\n\n\"Heather wanted, needed, to serve as the vessel last night,\" I said freezing her with a glare. \"What did you want that had you running for my bedroom door?\"\n\nShe looked away and shook her head.\n\n\"Janet,\" I said injecting my voice with a tiny amount of menace.\n\n\"I could have gotten what I want from you last night,\" she confessed. \"Rachel leaving would have pushed you to it.\"\n\n\"What do you want, Janet?\"\n\n\"I want everything, David,\" she said staring hard at me. \"I want everything!\"\n\n\"What do you mean, Sibling?\" I asked.\n\n\"Not Sibling, David,\" she insisted. \"Not tonight! It's Janet tonight! Just Janet!\"\n\n\"What do you mean by everything, Janet?\" I asked.\n\n\"Everything, David,\" she repeated. \"When you were spanking us, everyone stood with ears pressed against your bedroom doors listening. They were doing it because they were excited about you spanking them soon; or because you were finished with them, and they wanted more. I was counting, David. I counted every time your hand spanked someone else's ass, and I wanted it to be my ass you were striking. Everything, David! Every time you kiss someone I want it to be me.\"\n\nShe crawled forward and took my dick in her hands. Her eyes blurred with tears.\n\n\"I've hated it when I knew this beautiful part of your body was fucking someone else and not me. I hate even thinking about it. I wanted every look you gave a Sibling that made them know they were doing something wrong to be aimed at me. Everything you feel for Rachel but won't admit, I want you to feel for me. Even the stupidest fucking things, David, like Alyssa eating your food. Every time I see that bitch reach for something on your plate I want to spear her hand with my fork because I should be the only one who can do that. I want everything that has to do with you to be mine. I want you to be mine; ONLY mine!\" \n\nI took a step away from her.\n\n\"Siblings aren't supposed to be this possessive, are they?\" I asked calmly.\n\nShe beat her head against the bed a couple of times before looking up at me. Her answer ignored my question.\n\n\"I hate Melisa!\" she said venomously. \"I can't hate Heather or even Malia, but Melisa I can hate with a passion. I hate that you feel her ten years of loyalty makes her special; I would have been loyal to you. I hate that she's your First and not me. I despise every orgasm she gave herself waiting for you when I wasted mine on boy-band posters. She didn't tell me about you until after you beat up those assholes on the bus. After you rescued me, I told her I wanted you, and she said you were going to be a Brother; that she was going to be your First. She wouldn't let me near you, and Doris Alex fucking backed her. The Brothers backed her. Months I could've been with you, and they wouldn't let me. You would not have gone a day without understanding the word no does not exist in my vocabulary for you had I been your First.\"\n\nShe pounded the bed with her fists for a few seconds before boring her eyes into me.\n\n\"I wouldn't have failed with Rachel. I would have hated every time you touched her, but I would not have failed you. The worst though, is that there's this place inside of you that is only for Melisa.\"\n\n\"There's a place that is only yours, Janet,\" I told her.\n\nHer laugh was almost hysterical.\n\n\"I don't care about that, David,\" she said with a sad shake of her head. \"There's also a place for Heather, and one for Doris Alex, and Susan, and Jason, and fucking every Sibling who enters this house. There's even one for Stephanie. I want each and every one of their places to be mine, too. I want to fill you up until there's no room inside you for anyone but me. I wake up every morning wishing your cum was my breakfast; I go to sleep at night wishing the last thing I heard was your breathing. Melisa could have all of that; you would give it to her. She's your First. She's your new Jason. You would give her anything she wanted, and I hate her for that. I hate her because you would never give those things to me.\"\n\nI took another step back.\n\n\"So what do we do now?\" I asked her.\n\n\"WE do nothing, David,\" she said sounding like she had burned out all of her emotions. \"You do something for me, and I do something for you. Those two things are all I have left.\"\n\n\"What are you going to do, Janet?\"\n\n\"A Sibling only has one choice when they hate every touch a Brother gives another Sibling,\" she told me.\n\n\"What is that?\"\n\nShe shook her head rather than reply.\n\n\"I want you to do something for me,\" she said looking into my eyes.\n\nI nodded carefully.\n\n\"I want you to give me something you would never give Melisa,\" she said. \"I want you to do something to me that you would never do to her.\"\n\n\"What do you want, Janet?\" I said in clipped tones.\n\n\"Hurt me!\" she said fervently.\n\n\"What?\"\n\n\"Why did Heather have to get in my way? It would have been better last night,\" she said. \"I could have pushed you harder than she did. You would have taken my blood; that would make me a part of you forever.\"\n\nHer eyes flashed on the edge of insanity.\n\n\"I can't have that anymore, but I can have this,\" she said ferociously. \"Hurt me, David! You would never do that to Melisa or any other Sibling.\"\n\n\"I could hurt them,\" I told her.\n\n\"You could kill them, David,\" she said. \"You couldn't hurt them though.\"\n\n\"If it were necessary, I would,\" I said in a hard voice.\n\n\"You wouldn't be fucking their ass if it was necessary to hurt them,\" she told me.\n\n\"What?\"\n\n\"That's what I want, David,\" she said. \"You haven't fucked Melisa's pretty little ass yet, that's one thing I'll beat her to. I want you to take me. No foreplay. I want it to hurt because you would never hurt Melisa like that.\"\n\n\"Janet,\" I started to say but she interrupted.\n\n\"Please, David,\" she begged. \"It's the only thing you can give me anymore. The only thing I can have that no other Sibling will ever have. Please, David!\"\n\nI was about to say no when she crawled off the bed. She stalked towards me and knelt to lick my scrotum. Her teeth touched my hard-on then she wet me with her saliva.\n\n\"Please, David,\" she whispered taking me into her mouth and sheathing me. Her eyes were glossy with tears as she pulled me out of her.\n\n\"It's the only thing you can give me,\" she whispered almost to herself as she kissed my shaft. \"Take without thinking about me!\"\n\nI would have still said no, except that she looked at me. Her tears were flowing freely, and I had to look away from what I saw in the depths of her eyes.\n\nI nodded.\n\n\"Thank you,\" she said ardently before releasing my dick.\n\nShe was on the bed when I turned my eyes back to her. I climbed on the bed, and she turned so that she could rest her head on a pillow. Her back was arched giving me her ass.\n\n\"Please,\" she pleaded when I hesitated too long.\n\nI moved closer to her pushing my dick towards her pussy. She blocked the penetration by putting a hand over entrance.\n\n\"No,\" she hissed taking me in her hand.\n\nShe guided me up until the tip of my dick touched her anal opening. Her hips moved back in hard movement that drove the head of my dick into her. She grunted in pain and squeezed me almost painfully tight with her hand. Her head moved from side to side as I put my hands on her hips.\n\n\"NO!\" she cried and pushed back with her hips. \"Fuck me!\"\n\nI tried to move in slowly while using my grip on her hips to prevent her from slamming backwards. She moved from side to side trying to slip my hold and make me take her ass fast.\n\n\"Please, David,\" she begged.\n\nI could almost hear the tears squeezing out of her eyes. She fought my grip even harder, to the point I thought she would do more damage with what she was doing than with what I could do by forcing the issue. I took a tight grip on her hips and forged forward mercilessly. Janet's head snapped up, and she screamed as my cock penetrated halfway into her.\n\n\"YES!\" she cried putting her forehead back on the pillow. \"More.\"\n\nI tried to give her body time to adjust, but she pushed back. I let go of her hips and let her drive the pace. She sank me deeper into her body but without my impetus could not do it as hard as she wanted to.\n\n\"DAMN IT!\" she cursed.\n\nI grabbed her hips and sawed into her before she could try something different.\n\n\"Urghgur!\" she gurgled sounding like she was drowning on her own saliva as I fucked completely into her ass.\n\nI committed myself to what she craved at that point; Janet wanted to hurt more than I did not want to hurt her. The best thing I could do for her was to give her exactly what she wanted to prevent her from doing worse to herself. I slipped my hands from her hips to her asscheeks and spread them. My hips moved back and powered forward, punching my dick into her as hard as possible.\n\nShe yelled in pain, and her upper body slipped onto the bed dropping her hips. I put my weight on her until she was lying flat on her stomach. I pulled my hips up taking most of weight off her body then I let gravity fuck me into her ass. Her hands clawed at the bed sheets as she pulled them towards her chest. She managed to tear into the cloth with her nails.\n\n\"Now, baby,\" she urged around a mouthful of cloth she was biting down on. \"Hard! Take me as hard as you can.\"\n\nHer voice cracked with nearly every word that she spoke. I rested on top of her and began with slow strokes. They hurt her but before she could adjust to the pressure I increased the pace. Her body tried to lock me in a death grip, fighting to keep me still and adjust to the pain. I fought through the hold and fucked her harder.\n\nIt was a race I could not win. Janet was a Sibling; even Malia as afraid as she was would have found pleasure in me taking her hard. Janet wanted to be there, wanted me pounding into her ass. I was lifting my body so that only my dick connected us, and crashing into her ass. The pain could not hold back the pleasure long enough though; Janet's own nature was defeating her desire. She moved underneath me, driving upwards striving to make the physical pain match what she felt inside.\n\nI thickened, and she whimpered in disappointment as her body turned the corner towards pleasure. My hips pounded into her, and I let my weight rest entirely on top of her. I remembered her words and put my teeth on her shoulder beside her neck. She screamed one last time as I bit her: her skin parted and I tasted blood as I came.\n\nThe pain broke something inside of her; Janet began to sob brokenheartedly as I pressed my hips against her ass to empty myself inside of her. I turned us on our sides and wrapped my arms around her neck.\n\n\"Promise me,\" she forced out between sobs. \"Promise me, you'll never hurt Melisa like this. Promise me!\"\n\nI took a deep breath and nodded into her hair.\n\n\"I love you,\" she whispered.\n\nMy arms pulled her closer to me.\n\n\"I love you,\" she said one more time before losing control and crying abjectly.\n\nJanet whispered 'I love you' fifty-seven times before she fell asleep. Her tears burned my skin the entire time she cried.\n\n-----\n\nIt was the last time Janet and I were together.\n\nShe did not have to explain or say goodbye. Melisa did not really matter, nor any other Sibling. If Jason had not been in my life and Janet was the only woman I ever touched, I still could not have given her everything. The day I accepted the black ring, I gave my life to the Brotherhood.\n\nLeaving was the only thing she could do for me, I would have continued hurting her if she stayed.\n\n=====Chapter 44=====\n\nI sat in the overpriced cafe on a Friday afternoon during my first December as a Brother. The air buzzed with the frantic energy of college students trying to do a semester's worth of studying in the last few days before the final exam period began.\n\nAlyssa, Emily, and Sandra let me take them out for a dinner break from studying. Sandra was complaining she had never studied as hard, before she got to know me. I had jokingly offered them a reward, of my choosing, for good grades a couple of weeks before, which they immediately accepted and dove into their studies with impressive determination.\n\nSandra's complaint was a prequel to another attempt by the trio to discover what I would be getting each of them. They promised fairly extravagant sexual favors, some of which I did not think were biologically possible, but I held firm in my silence. \n\nMelisa picked out Sandra and Emily's rewards; Sandra would be getting a shopping spree at her favorite department store, while Emily would be off to Paris for a three-week, all expenses paid vacation. Considering the amount of damage that Sandra could do in a store that had everything for the discerning female shopper, I thought Emily was being shortchanged until my First showed me the hotel brochure. The cost of the room alone would have made buying a new car for Emily cheaper.",
        "\"A new car isn't a new car as soon as you drive it off the lot, but Paris is always Paris,\" Melisa said dismissing my suggestion. I did not ask how she knew that if she had never been to Paris.\n\nTo distract the three girls from their continued assault on my secret-keeping ability, I asked why they took the offer so seriously when it should have been obvious I was joking.\n\n\"You're not going to get us anything?\" Emily asked with a little girl pout. I stared at her until she winked to tell me she was kidding.\n\n\"You bought everyone in your house a new car,\" Sandra said in a voice laced with a noticeable amount of avarice.\n\nI wondered if the credit card company really meant 'no limit'. Sandra, up to her eyebrows in student loans, was sure to test those words. She had quit one of her part-time jobs when the sorority returned all the fees she paid during her time as a sister. The sorority received a lot of financial support from the Brotherhood's entities, and Jeremy whispered the girls' names into the right ear. All of them had been grateful, but Sandra cried with her face buried in my neck. I made a mental note to ensure Sandra did not hit a credit ceiling during her shopping spree.\n\n\"Give Melisa your student loan information,\" I told Sandra.\n\n\"Why?\" she asked surprised.\n\n\"If I told you to get under the table and suck my dick, would you do it?\" I asked her.\n\nAll three girls pushed their chairs back and leaned forward expectantly. I sighed and swore I would never say something so incredibly stupid in public to Sibling candidates again; at times they were more eager to please than Siblings.\n\n\"No,\" I said clearly.\n\nThe chairs were pulled close to the table with grumbles of disappointment. I studied their faces to see if they were serious; I was almost convinced Sandra and Emily would not have done it.\n\n\"If you wouldn't question that,\" I said looking at Sandra. \"Don't question this.\"\n\n\"You're going to pay them off,\" she stated.\n\nI raised an eyebrow at her tone of voice.\n\n\"I'm not being ungrateful, David,\" she said playing with her food. \"And fuck if I'm going to say no, but...\"\n\n\"You like to earn your way,\" I said carefully.\n\nShe nodded, as did the other two girls.\n\n\"Emily's reward for good grades is probably going to cost me more than your loans,\" I said widening three pairs of eyes at the table. \"Believe me, you're going to earn every penny before I, alone, am through with you. In fact, the day will come when you'll have paid back far more than I give you.\"\n\nSandra's eyes were committed when she nodded at me. I had the feeling she was only waiting for Alyssa to step up before she did what was necessary to seal a life with us.\n\n\"So Sandra, what's the total on your student loans?\" Emily asked a couple of minutes later. \"I'd like an idea on how much harder I need to study.\"\n\nThe girls left after another attempt to bribe me to spill my guts. I was almost tempted when they offered a three-woman blowjob in the restroom to tell them at least the grand total of their rewards. Unfortunately, Alyssa's could not be assigned a monetary value. Melisa and Doris Alex had a lot of suggestions about Alyssa's reward, but I had already decided. Melisa was more imaginative then the girls in her attempts to get me to tell her about Alyssa's reward but was hampered by my ability to take whatever she offered. Needless to say, it did not stop her from trying anyway.\n\n\"Working on the replacements already,\" Rachel said sitting down across from me.\n\nIt was the first time she had talked to me since leaving the house.\n\n\"I don't know what you mean,\" I said with a friendly smile.\n\n\"I heard Heather, Malia, and Janet won't be back next semester,\" she said returning the smile.\n\n\"You heard?\" I asked.\n\n\"It's the juiciest piece of sorority gossip right now,\" she told me. \"Normally, their flight would make you look bad, except every one of your girls is making sure we know it has absolutely nothing to do with you.\"\n\n\"It does though,\" I said sitting back.\n\n\"You would say that, and I believe you,\" she answered with a nod. \"I also know it has less to do with you than you think. My sisters aren't stupid either; they can read the writing on the wall.\"\n\n\"So you heard about this through the gossip mill?\" I asked.\n\nShe nodded.\n\n\"They didn't tell you themselves?\" I asked confused, not that anybody had told me. Rachel looked away from me for a minute.\n\n\"We haven't been doing a lot of talking,\" she said finally.\n\n\"Why not?\"\n\n\"You know what happened, David,\" she said biting her lip.\n\n\"You left, so what?\" I demanded. \"It didn't have anything to do with them. There is no reason for all of you not to be talking.\"\n\n\"We just haven't been,\" she said, raising her voice. \"You can't really think we can just go on being friends.\"\n\nI scanned the room and people put their heads back down ignoring us.\n\n\"I think we can choose to go on being whatever we want,\" I told her. \"So the truth is you are not talking to them.\"\n\n\"No!\" she grumbled angrily.\n\n\"So they are not talking to you,\" I said in a menacing voice.\n\n\"No, David,\" she said exasperated. \"We're not talking, just like you and I are not talking.\"\n\n\"You are not talking to me, Rachel,\" I said pointedly. \"I've always been willing to listen.\"\n\nI stared at her for a while.\n\n\"What?\" she asked not able to bear the pressure of my eyes.\n\n\"Nothing happened between us, Rachel,\" I said patiently. \"I don't mean that I didn't want it to happen, nor will I say you didn't want it to happen. I'm saying that nothing happened. Why are you letting nothing stand between you and your friends?\"\n\n\"They're not talking to me,\" she whispered defensively.\n\n\"I'll bring them over to the sorority house tonight,\" I told her. \"Will you talk to them?\"\n\nShe pressed her lips together tightly and looked away again.\n\n\"Do you love Melisa?\" I asked.\n\n\"You know I do,\" she said angrily.\n\n\"But you're letting her go through this alone,\" I pointed out.\n\n\"I..\"\n\n\"She cried in my bed the night you left,\" I told her. \"Cried a lot, Rachel. What you think I felt is nothing compared to what Melisa and you did fee; for each other. Both of you made choices that meant you couldn't be together, but neither of you should call what you had love if it doesn't deserve the respect of staying friends.\"\n\nRachel's eyes turned into blue fire as she stared at me.\n\n\"It might not matter to you though. Maybe you want to get back at Melisa and the other girls thinking they were your friends because of me; I can understand that. The truth is Melisa seduced you for me, but don't lie to yourself, Rachel; you let her because of me,\" I said. \n\nShe leaned forward looking like she was getting ready to jump across the table to go for my throat.\n\n\"You can choose not to be their friends anymore,\" I said hardening my voice. \"But Stephanie has absolutely nothing to do with you and me.\"\n\nThe name flushed the anger from her face.\n\n\"Don't, David,\" she pleaded guiltily.\n\n\"She needs you, Rachel,\" I said. \"You didn't have to help her. You didn't have to become her friend. You didn't have to give her a part of your pain so she would let you carry some of hers when it was poisoning her soul from the inside. You did though, and abandoning her is unforgivable.\"\n\nI sat back and stared at the ceiling.\n\n\"I'm the asshole here, Rachel,\" I said without looking at her. \"I could have stopped this, and I chose not to.\"\n\nI looked around the room before standing up.\n\n\"I've had one friend, Rachel,\" I told her. \"He took the word 'friend' with him from my vocabulary when he died. I will never use that word for anyone in my life again. None of you have what Jason and I had, but these are your friends, your sisters, Rachel. You are giving them up because you think somehow I have more of a right to them than you do. What they have given me, you can never have; what they have given you, I will never accept. I'm not worth losing your friends over, Rachel. What didn't happen between us is not worth a single one of your tears; but being in love with Melisa and losing that part of your relationship is and so is not being there when Stephanie wants to talk to her friend over ice cream at two o'clock in morning.\"\n\nI leaned down until I was as close as the night that we almost kissed.\n\n\"If somewhere behind your eyes is the thought you did something wrong and need to be hurt over it. Don't bother, Rachel. No matter what I wanted or what happened, I never believed we were going to be together.\"\n\nShe was crying when I left.\n\n------\n\n\"Why are they here?\" Melisa asked when my guests for the evening arrived.\n\nWe were sitting in the backyard; it was cold but I liked the biting touch of the winter air. Melisa had joined me outside after a long phone conversation with Rachel. She came out with eyes puffy and red to thank me. The crying started again when she sat in my lap and wrapped her arms around my neck.\n\n\"There's a problem with Alyssa's reward,\" I told her.\n\n\"Oooh,\" she said sitting up.\n\nHer eyes took on a manipulative light as Roderigo, Samantha, and Anna approached the table. The Siblings accompanying each Brother walked a couple of paces behind them. A hulking, baby-faced brute that I guessed was Simon paced behind Samantha; Anna's Leonard walked behind her newly motorized wheelchair; and an athletic Asian woman followed Roderigo.\n\n\"What's wrong with Alyssa's present?\" Melisa asked trying a different angle of approach to get me to talk. I turned her slightly to swat her behind.\n\n\"No!\" I said playfully.\n\n\"Oh, come on, pretty please,\" she said in a soft sexy voice.\n\n\"I'm not going to tell you,\" I replied.\n\n\"I meant another spank,\" she said standing up and sticking her tongue out at me.\n\nI shook my head and rolled my eyes at her.\n\n\"Send Doris Alex out when she's done whatever she's doing,\" I told her.\n\n\"Oh-oh!\" she said. \"Four Brothers and a Sibling; I can't quite decide if that's an orgy or trouble... an orgy of trouble... trouble at an orgy!\"\n\nShe raised an eyebrow when I stared at her.\n\n\"It's about time!\" she said with immense satisfaction putting it together as the Brothers sat down at the table. Their Sibling companions stood directly behind their particular Brother's chair.\n\n\"Go fetch, girl!\" Anna commanded my First.\n\nMelisa leaned down to kiss me and ran into the house.\n\n\"What were your instructions?\" Roderigo asked with a sigh.\n\n\"I said she was to come out here when she's done whatever she is doing,\" I told him.\n\n\"Nice and vague: a fair test,\" Samantha said looking at the backdoor. \"Let's see how far our little redheaded Sibling has strayed.\"\n\nThe Siblings joked with each other over their respective Brother's head until Simon looked at his watch and noticed we had been waiting for fifteen minutes. The Siblings quieted, but their eyes moved from Brother to Brother as time passed. At a half-hour, their eyes locked in a position that stared straight ahead.\n\n\"How long have you been dealing with this?\" Anna asked softly.\n\n\"Since I moved into the house, but it only got this bad after the night with Malia,\" I informed her.\n\n\"Hmmm,\" she said pensively. \"My understanding of that night was that the Bloodline indoctrination worked.\"\n\n\"I don't know what you're talking about,\" I said curiously.\n\n\"Bloodlines get a different indoctrination than a normal Sibling,\" Roderigo said. \"One of the most obvious differences is the command phrases don't work on a Bloodline Sibling as it would be too easy to gain control of other Siblings through them.\"\n\n\"Bloodlines stand at the top of the indoctrination food chain; they have complete access to the command phrases. The use of their power is supposed to make them need to perform an act of absolute submission to a Brother,\" Samantha added. \"Normally, it is a sexual act they key on.\"\n\n\"Brothers rely too much on indoctrination,\" I said.\n\nSimon's eyes flashed, and he leaned towards me. Samantha turned her head at his movement causing him to snap back into position.\n\n\"You were being such a good puppy, Simon,\" she said disappointingly to him. \"Why did you have to ruin it by peeing on the carpet in front of my Brothers? The punishment will be severe considering we are in the middle of discussing another puppy's bad behavior when you did it.\"\n\n\"Bitch,\" Roderigo said angrily. \"We were discussing a disobedient bitch!\"\n\n\"That wouldn't be your disappointment of losing her to David talking, would it, grandson?\" Anna asked with a small smile on her lips. Roderigo waved her question aside as irrelevant.\n\n\"Does she know it wasn't just you waiting for her?\" he asked me pointedly.\n\n\"Not unless Melisa told her,\" I responded.\n\n\"Melisa sounded like she has been expecting something like this meeting,\" Samantha said with a raised eyebrow.\n\n\"Janet put it together for me, but I would bet Melisa has been keeping score on Doris Alex's misdemeanors for a long time,\" I told her.\n\n\"Melisa didn't point them out to you?\" Samantha asked.\n\n\"This is exactly the sort of thing a First allows a new Brother to handle on their own,\" Anna said dismissively.\n\n\"Melisa has to know that Doris might have pushed David past the point of no return,\" Roderigo said.\n\n\"On one side, David's continuing development as a Brother,\" Anna said with an inelegant snort. \"On the other, no Sibling would ever dare think bad thoughts of David again. I'm sure Melisa slept soundly with those being the possible outcomes. Don't let the pretty face fool you; like I said, she's a ruthless little bitch; I'm very proud of the job her daddy did training her.\"\n\nSamantha snickered in response.\n\n\"Is the failure in indoctrination so bad that my tone of voice would trigger a reaction from him?\" I asked Samantha looking at Simon.\n\n\"No,\" Anna told me. \"I don't think it's your tone or words, so much as it's you. Enforcers exude a certain aura of danger, but you're worse than I was. It's more pronounced when you're around Brothers; I think Siblings tied closely to any Brother you encounter will have a similar reaction to Simon.\"\n\n\"Samantha, you're a fucking bitch!\" Roderigo yelled harshly leaning towards her.\n\nSimon did not react in the slightest.\n\n\"I would say Siblings stand with Brothers in their dislike of you,\" Roderigo said amused.\n\n\"I was never a popular person until shit needed to be shoveled,\" I told him.\n\n\"In those cases, I bet you and Jason were the first names on anyone's lips,\" Anna said ironically.\n\n\"Yes, we were,\" I replied. \"We certainly were.\"\n\n\"And so here we are with a Bloodline Sibling shitting all over your backyard,\" Samantha sighed impatiently.\n\n\"I thought indoctrination was supposed to prevent things like this,\" I said to Anna.\n\n\"Where did you get that idea, boy?\" she asked confused. \"Indoctrination is about obedience and trust.\"\n\n\"We're satisfied as long as indoctrination ensures our secrets are kept, and Siblings will heel when we call,\" Samantha told me. \"The rest... well, you've experienced Malia and Janet.\"\n\nI nodded.\n\n\"I'm sure someone like you thinks emotions are a bit chaotic,\" Roderigo said to me. \"But as long as it doesn't turn obsessive, there's nothing wrong with love being a part of our relationships with Siblings.\"\n\nI stared at him for a minute; it felt like he was trying to sell himself. I did not know what the currency I had to pay in was so I nodded in a fashion that committed me to nothing.\n\n\"If this all true, then Brothers definitely rely too much on indoctrination,\" I told them. \"If you can't stop someone from 'shitting in my backyard', why would I ever think they couldn't burn my house down?\"\n\n\"I can't do anything about the fire, but since I didn't like the smell of shit I started training my own Siblings after their indoctrination and Brother tour were complete,\" Anna said. \"Indoctrination is a Sibling creation anyway, and their idea of obedience is not my own.\"\n\nSamantha nodded in complete agreement.\n\nThe backdoor opened and Doris Alex stepped out of the house.\n\n\"Dear Brothers, I give you Sibling obedience,\" I said acerbically. The three Siblings visibly flinched at my words.\n\n\"Forty-five minutes,\" Samantha said tonelessly.\n\n\"Are you sure this is not your fault?\" Roderigo asked. \"You're very lenient with them.\"\n\n\"Do you think this is my fault?\" I returned the question.\n\n\"Melisa is very independent,\" he pointed out.\n\n\"No more than any other crested Sibling,\" Anna countered for me.\n\n\"She doesn't wear his crest,\" Roderigo said defensively. The two female Brothers gave him a matched pair of disappointed looks.\n\n\"You shouldn't talk, Roderigo,\" Anna said. \"I believe your Kiera is among the most spoiled Siblings on the planet.\"\n\nI got the used car salesman's pitch feeling again; Samantha's raised eyebrow told me I was not the only one who noticed. I tried to figure out why Anna would join Roderigo in his efforts to sell himself to me.\n\nDoris Alex did not react to seeing four Brothers waiting for her. She walked towards us like she was walking to a table of her sorority's officers. She pulled the chair we setup for her out, and sat down.\n\n\"You asked for me, David,\" she said facing me.\n\nCare needed to be taken when dealing with Sibling misbehavior. Sometimes disobedience or an unseemly attitude was a sign that they were not getting something they need; Michael was much better behaved after Doris Alex manhandled him. Other times, their behavior was foreplay as with Susan. Real punishment had to be saved for instances that truly displeased a Brother, or it would have been difficult to modify a Sibling's behavior when necessary.\n\n\"I hear that Janet, Malia and Heather will not be returning next semester,\" I said to Doris Alex.\n\n\"Heather wants to return home and be with the Brother that recruited her into the Society,\" Doris Alex informed me. \"Janet confessed what she feels for you and wants to go with Heather. I thought it was a good idea since the breakdown of the twining attempt left Heather hurting badly. Janet has been there for her, and Heather has been there for Janet now that she needs comforting.\"\n\n\"Is it normal that I wouldn't be told about their decisions?\" I asked the assembled Brothers.\n\n\"Forgive me, David,\" Doris Alex said quickly. \"I thought the girls were going to tell you themselves.\"\n\nShe looked around the table nervously as the thought that four Brothers did not sit with a lone Sibling without a reason sank in.\n\n\"Obviously, Malia can't stay here any longer,\" she told me carefully.\n\n\"Make believe, he's a new Brother without the training or information that isolation would have given him,\" Samantha said smartly. \"Explain why Malia cannot stay.\"\n\n\"She's incompatible with you, David,\" Doris Alex informed me. \"It's not uncommon, but most of the time it doesn't matter since the Brother and Sibling would naturally avoid contact. If they did come together, it would be isolated to a brief sexual encounter where the Brother was only seeking immediate relief. Malia's living near you; she has day-to-day contact. Her problems with you could stain your relationship with other Siblings. I can't allow it, so I'm sending her home.\"\n\n\"You can't allow it?\" Roderigo asked innocently.\n\n\"My instructions were to make David's transition into the Society occur as seamlessly as possible,\" Doris Alex said quietly.\n\n\"He's in a collegiate atmosphere,\" Samantha said thoughtfully. \"Jeremy has only had problems with two Siblings since he started teaching here; yet three of David's initial Siblings leave in the first year.\"\n\n\"Like I said, Brother, Malia and David's problem is not uncommon,\" Doris Alex defended. \"Plus many Brothers experience a Janet situation in their life. Heather only recently became aware of how much she wanted to return to her first Brother; she might have stayed though, except I think she wants to give Janet a direction to run. Those two will probably twin as soon as Heather recovers from the failure with Malia.\"",
        "\"You were asked to select the Siblings that would surround our new Brother,\" Anna said pointedly. \"A lot rides on his shoulders, not the least of which is the rebuilding of his Bloodline. I find it annoying that the three Siblings you selected are leaving. The only Siblings staying basically selected themselves.\"\n\n\"Michael's family has attended this University since it's inception; his behavior is also prone to the accommodation of a Brother. Melisa has been imprinted with David for years by her dad, so strictly speaking she is our doing,\" Samantha said forcefully. \"Susan was already teaching here; if she has any problems with David, I'm sure being able to fuck a Brother who is also one of her students would make her blithely ignore them. Then there's you, but the Bloodlines have been waiting for a Brother like David for the last century, haven't they? It seems to me that a problem exists for David only with Siblings you selected.\"\n\n\"One was expected,\" Roderigo said before Doris Alex had a chance to speak. \"Two would not have surprised any of us since this is not a normal situation, but three is a failure, Sibling.\"\n\nDoris Alex opened her mouth to speak, but I interrupted.\n\n\"Why did you bother selecting them?\" I asked the Brothers. \"Or does every Brother get an initial allotment of Siblings?\"\n\nRoderigo laughed at my phrasing.\n\n\"How is their training holding up?\" Anna asked looking at Simon and Roderigo's Asian companion.\n\n\"You trained Kiera personally, Anna,\" Roderigo answered. \"She rarely disappoints me so I only need to perform the maintenance you suggested. To be honest, I think Kiera misbehaves to make it easier for me to do what needs to be done.\"\n\n\"Simon hasn't learned not to pee in the house yet,\" Samantha said with some amusement in her voice. \"But he knows to keep his mouth shut.\"\n\n\"Siblings know about Brothers in the area since they choose to live near us. Most Brothers prefer the pleasure of finding un-crested Siblings on their own, not that it's difficult when the prey cannot help but make itself a noticeable target,\" Anna told me. \"An active Enforcer has his cage gilded.\"\n\n\"Why?\" I asked.\n\n\"Nobody likes the idea of an Enforcer hunting, even if it's just for sexual companionship,\" Roderigo told me. \"We prefer that you stay close to home so Siblings are guided to your door. Enforcers recruit more Siblings than a normal Brother, you already have three on the verge, so they tend to set deep roots in good recruiting ground so there's really no reason for you to range far. The Council agreed with Robert's reasons for not isolating you; it would have been difficult considering your Bloodline. It's not the sort of thing Siblings will keep quiet about and other Brothers deserved to know. Renard's death, especially the way he was killed, meant we needed your skills sooner than expected.\"\n\n\"An isolated Brother's First tends to provide a steady sexual diet of new Siblings once the Brother is ready for them. In your case, it was decided to import Siblings to attend school here rather than make you feel like we were throwing them at you,\" Anna concluded. \"My understanding is that you plan to do your graduate work here. With two Brothers readily available, this will become a University of choice for Siblings, making anything more than an initial effort unnecessary.\"\n\n\"We did not foresee every Sibling that was specifically brought in leaving your side,\" Samantha said looking at Doris Alex.\n\n\"Brother,\" Doris Alex said with a barely perceptible amount of penitence. \"I've never been asked to do this before, and David is an Enforcer. No one told me that Siblings would be more prone to problems with him than a normal Brother.\"\n\n\"Did you ask?\" Roderigo queried, but the gleam in his eyes said he knew the answer.\n\n\"She didn't ask me,\" Anna answered for Doris Alex. \"Since I'm the only ex-Enforcer or active Enforcer she knows, I doubt she did the necessary research. It's not even that big a logical leap; Enforcers are the standard defense against generalizing Brother behavior. It's almost a joke among other Brothers how different we are.\"\n\nDoris Alex pressed her lips together until they turned white.\n\n\"This wasn't my fault,\" she insisted finally.\n\n\"Are you blaming David for three Siblings leaving, even though it was you we told to select them so his new life would have some measure of stability?\" Samantha asked softly.\n\n\"He's in the process of recruiting three new Siblings,\" Doris Alex said changing the subject.\n\nIt would have been better for her to use the standard military answer of 'No excuse, Sir'.\n\n\"I've seen pictures and Nancy's profile of them,\" Roderigo replied. \"Are you planning to indoctrinate them here?\"\n\n\"Only Emily,\" she told him.\n\n\"What about the other one?\" Roderigo asked looking at Doris Alex pointedly. \"She is far more important than Emily.\"\n\n\"She...she...\" Doris Alex said but snapped her mouth shut before anything else came out.\n\n\"Her indoctrination will be time-consuming; six months for a standard Sibling but almost two years for the Bloodline indoctrination,\" Roderigo said. \"You are the only one here that can do it.\"\n\n\"We could always bring in Iane,\" Samantha suggested.\n\n\"No!\" Doris Alex protested too loudly.\n\n\"Then?\" Samantha asked.\n\n\"She's too young to be brought here yet,\" Doris Alex said. \"I will be done with Emily long before SHE ever learns about David.\"\n\nI sat quietly watching them wondering who they were talking about. The last words from Doris Alex debunked my first thought, that they were discussing indoctrinating Melisa. Anna watched me and shook her head slightly before I could ask a question.\n\n\"Our plans have changed; the father and brother are becoming a danger to her. Having those animals damage her in any way is unacceptable,\" Roderigo told Doris Alex seriously. \"Is Emily ready to begin indoctrination tomorrow?\"\n\n\"No,\" Doris Alex whispered.\n\n\"I expect to interfere in our new charge's life within the next six months,\" Roderigo informed her. \"This is the best place for her when we do that. If you can't be done with Emily in six months, then like Alyssa and Sandra, Emily will have to be indoctrinated elsewhere or Iane will need to be brought here.\"\n\n\"Why is Iane's name coming to your lips so readily?\" Doris Alex asked suspiciously.\n\n\"Ian is the other Bloodline that will be allowed to mix with the Ekaterina,\" Samantha said.\n\nDoris Alex's face turned red with fury.\n\n\"Iane does not have sisters like you do,\" Samantha continued cutting into Doris Alex. \"But she has plenty of cousins who can continue the Ian Bloodline. Like you, Iane is the best choice we have from her Bloodline.\"\n\nDoris Alex looked a split-second from losing control; I wondered what about Iane made it so the mere mention of her name set Doris Alex off. I decided to leave that question for after I was done with her though.\n\n\"You don't have a problem with our selection, do you, Sibling?\" Anna asked innocently.\n\nDoris Alex bit her lip but suddenly her vision cleared. She looked at each Brother individually and then at the Siblings. Her gorgeous dark green eyes turned to me, and in them was knowledge that she had been setup.\n\n\"My name is Doris Alexandra Smith, a child of the Sibling...\" she began to intone looking at the Siblings.\n\nI pointed one of the forty-fives Jason had given me at her head, curdling the words in her throat. She turned to look into my eyes, and discovered that her worst fears were true. I would have no problem pulling the trigger.\n\n\"It's different, isn't it?\" I asked in a dead voice. \"You knew in your mind I would kill a Sibling as easily as any Brother; but in your heart, you never believed I could kill you.\"\n\nHer eyes widened as she looked at the other Brothers for a reprieve that did not exist.\n\n\"Why did you feel you needed these Siblings under your control?\" I asked.\n\n\"We're talking about things outside of their knowledge, the mixing of the Bloodlines is ...\"\n\nCocking the gun silenced her.\n\n\"Do not lie to me again, Doris Alex,\" I told her coldly. \"Why did you want them under your control?\"\n\nShe looked at the space between Roderigo and Samantha while biting her cheek. Her head went up proudly, but two tears fell from her eyes speaking volumes about what she felt.\n\n\"I did not want them to hear Brothers talk to me like this,\" she said blankly.\n\n\"You had no problem talking worse than this to a Sibling in front of other Siblings,\" I said. \"You even made it a point that Michael has to abase himself every month to keep his place in my house firmly in mind.\"\n\n\"This is different, Brother,\" Doris Alex replied. \"I have authority with Siblings.\"\n\n\"Someone failed in your training, Doris Alex,\" I told her. \"Responsibility is not authority, slave.\"\n\nShe jerked at the word as if I had lashed her back with a whip. I uncocked the forty-five and put it on the table with the barrel facing her.\n\n\"When you give a command, it is the Brotherhood's voice a Sibling hears, Doris Alex,\" I told her.\n\n\"You are a beautiful woman,\" Roderigo said looking at Doris Alex. \"An intelligent and strong one, too. A Bloodline child of many gifts, but Brothers gave you every one of those gifts. We cared and watched over your parents, and their parents, and their parents; all the way back to Alexander. We did not ask you to repay our care; it was you, who chose the white ring.\"\n\n\"What have I done to deserve this?\" Doris Alex asked wiping the tears from her eyes.\n\n\"Would you have tolerated any Sibling making David wait forty-five minutes when he called?\" Samantha asked.\n\n\"I did not know all of you were out here,\" Doris Alex said near hysterics. \"Melisa didn't tell me!\"\n\n\"Is there a difference between one Brother or four calling for you?\" Anna asked. \"Or is it that you do not believe the least of David's requests deserves your immediate attention?\"\n\n\"I...I...,\" Doris Alex said before snapping her mouth shut so hard her teeth clicked.\n\n\"Your sisters are very proud and arrogant also,\" Samantha said. \"But do you think any of them would behave like this? Even the one who is not a Sibling.\"\n\n\"No, Brother,\" Doris Alex admitted quietly trying to mollify her.\n\n\"You said Janet made you realize there was a problem with this Sibling, David,\" Samantha said without taking her eyes off Doris Alex.\n\n\"She brought things into focus,\" I said. \"There have been noticeable problems, but I put them down to Doris Alex's overweening pride and arrogance.\"\n\nDoris Alex straightened her back looking like she had an unbendable steel bar for a spine.\n\n\"All the Bloodlines are like that,\" Roderigo said sadly.\n\n\"She believes she's better than the rest of the Siblings here,\" I said thoughtfully. \"She is more submissive, but there's something about her submission.\"\n\n\"She holds it over the head of other Siblings,\" Anna said.\n\n\"Yes, that's a good way of putting it,\" I said looking at Doris Alex. \"She holds her heritage and submissiveness as a shining example of virtue over everyone else in the house. Sometimes, I feel like she's holding her Bloodline against me, as if being Ekaterina is somehow an insult to her.\"\n\n\"The Ekaterina was always looked down on by the other Bloodlines,\" Roderigo said. \"It took more work to keep it alive than the other Bloodlines since it is almost a direct line of parent and only child all the way back to Ekaterina. The few times they were fruitful, problems occurred. The children were never as gifted as the others either. I imagine it would burn someone like Doris or Iane that the Ekaterina produced the third Bloodline Brother rather than their own blood.\"\n\n\"Did Doris Alex and this Iane want to be Brothers?\" I asked curiously. Doris Alex wiped her tears again as they continued falling.\n\n\"Neither Iane nor Doris could be, but I'm certain they have dreams of their child being a Brother,\" Roderigo said with a dark smile.\n\n\"I thought Doris Alex's attitude was something she just needed to outgrow,\" I continued from earlier. \"Unfortunately, it seems to be worsening, which creates some troublesome situations for me, like not being told about the three Siblings leaving.\"\n\n\"So what did happen with those three?\" Samantha asked Doris Alex.\n\n\"I had nothing to do with that, Brother,\" Doris Alex defended angrily. \"I chose Siblings I thought David would enjoy having around. I had nothing to do with them leaving!\"\n\n\"Were you unhappy to see them go?\" Anna asked her.\n\n\"I don't understand,\" Doris Alex replied.\n\n\"Yes, you do,\" Anna said in a deadly voice. \"How did you feel when they decided to leave?\"\n\n\"I was not unhappy,\" Doris Alex answered truthfully without meeting Anna's eyes.\n\n\"The disruption of three Siblings leaving a Brother's house, not to mention the loss of a potential Sibling in Rachel,\" Anna said showing her teeth, \"and you were not unhappy!\"\n\n\"Rachel is what really brings us here,\" I said before Doris Alex could reply to Anna.\n\n\"I had absolutely nothing to do with Rachel leaving,\" Doris Alex said righteously turning to look at me.\n\n\"No, you did not, Doris Alex,\" I whispered.\n\nHer green eyes turned fearful as I stared at her.\n\n\"Janet said she would not have failed me when it came to Rachel,\" I told Doris Alex. \"As much as she loved me, she would not have failed if Rachel was what I wanted.\"\n\nDoris Alex looked away and tears streamed down her face.\n\n\"Melisa wanted Rachel for me,\" I said. \"I wanted Rachel so my First set her sights on giving me exactly what I wanted.\"\n\n\"You didn't believe Rachel would take the white ring,\" Doris Alex whispered.\n\n\"No, I didn't,\" I told her. \"But that didn't stop Melisa; I wanted, and she took it upon herself to try and serve me Rachel on a silver platter. Every other Sibling worked with her; Heather who thought it was the worst thing Melisa could have done did what she could; Janet did what she could while hating every second of it. What did you do, Sibling?\"\n\n\"Nothing until it was too late,\" Doris Alex replied not looking at me.\n\n\"Out of curiosity,\" Samantha interrupted. \"What were you doing inside that you made David wait forty-minutes for your illustrious presence?\"\n\n\"Nothing,\" Doris Alex said barely above the audible range.\n\n\"Hmmm,\" Samantha said.\n\n\"Is it really that you did nothing about Rachel, Doris Alex?\" I asked.\n\nShe squeezed her eyes shut and shook her head.\n\n\"You were an obstacle,\" I said. \"Alyssa, your attitude with Melisa, your attitude towards Rachel when she lived here: what didn't you do to stand between what I wanted, and the people trying to give her to me?\"\n\n\"Even if I had helped, Rachel would not have chosen you,\" Doris Alex said shakily.\n\n\"So?\" I asked.\n\nShe did not answer.\n\n\"Why didn't you give Melisa your support?\" I asked her.\n\n\"I didn't think Rachel was good for you,\" she answered honestly. \"I was only doing what I thought was best.\"\n\nI put my hand on the gun and closed my eyes.\n\n\"I want Melisa,\" she added desperately a few seconds later. \"I want to stand as close to you as I can; you are a Bloodline Brother, Rachel would have stood closer. I could not allow that.\"\n\n\"There is that word, allow, again,\" Roderigo whispered. With a nod to him, I took the hand away from the gun.\n\n\"Maybe I'm wrong,\" I said to the three Brothers. \"But it is not a large step from knowing what is best for one Brother to knowing what is best for the Brotherhood.\"\n\n\"No, it is not,\" Roderigo replied dangerously.\n\n\"I don't know a lot of Siblings,\" I said looking at Doris Alex, \"so I have to measure your failure, Doris Alex, by the ones I do know. Melisa could not have been pleased to bring Rachel into my life, but she did her best, even fell in love. Heather thought it was the dumbest thing possible, actually the dumbest fucking thing possible was how she described it, but I think if she had been my First she would have done the same. I almost believe Janet would have succeeded in recruiting Rachel. Then we have you, I believe if you had to choose between something you wanted and something I wanted, you would choose for yourself. Wait! I don't have to believe it, I witnessed it, didn't I?\"\n\nShe nodded slowly; I smiled and put Jason's gift back in its holster. Doris Alex did not relax though, which pleased the rest of the Brothers at the table.\n\n\"You seem to think you're the perfect Sibling,\" I said. \"Every Brother I've met says you're an exceptional one, yet... I don't see it. I see pride when a slave should only be proud of a task done to their master's satisfaction. I see arrogance when every Sibling makes your failures obvious; the very Siblings you look down on believing you are better than them.\"\n\n\"I'm sorry, Brother,\" Doris Alex whispered brokenly.\n\n\"Let me tell you about the standard I hold all Siblings to, Doris Alex,\" I said ignoring her words. \"His name was Jason. He died in my arms after stepping in front of bullets meant for me. I believe with every fiber of my being that if you told him what was going to happen, Jason would have followed me into the military anyway and never said a word about how he would die. If I wanted something and he thought something else was better for me, he sat me down to discuss it but did what I wanted when I made a decision. I do not think any Sibling here could have gotten Rachel to choose a white ring, but I cannot doubt Jason would have found a way.\"\n\nI looked past her into the distance as my eyes lost focus.\n\n\"Every time a Sibling does something for me, I measure it against how Jason would have done it,\" I told her. \"And of every Sibling I have met, you fall farthest from his mark, Doris Alex.\"\n\nA sob broke out from her, but she held back the rest after taking a deep breath.\n\n\"Had a Brother disappointed any of us like you have, he would already be dead,\" I said. \"You life is spared because you are, only, a Sibling.\"\n\nHer hands tightened into fists on the table, and she bit her lip until blood flowed into her mouth and down her chin.\n\n\"Anna tells me your behavior can be corrected,\" I said looking at Doris Alex. \"I have agreed to let her try.\"\n\n\"No, David,\" Anna said. \"Leonard is truly one of the most troublesome Siblings I've ever had to train; I don't have the energy to deal with two irksome children at the same time.\"\n\n\"Ahhh,\" Samantha said looking between Anna and me.\n\n\"I'm sorry, David,\" Anna said apologetically. \"Samantha will have to do this for you.\"\n\nSamantha turned her shark's hungry smile on Doris Alex. The Sibling's face went stark white, and her eyes turned to me.\n\n\"You should...\" she started to say only to realize her monumental error.\n\n\"Sibling,\" Samantha said in steel voice. \"You have already earned the punishment for believing you could tell a Brother what he 'should' do. There is no harm in finishing that sentence, which you should have never thought to speak.\"\n\n\"You should punish me yourself, Brother,\" Doris Alex begged me.\n\nI reached out and put my hand on her cheek. I wiped a falling tear away with my thumb.\n\n\"If I punish you, Doris Alex, you will believe I have forgiven you,\" I said gently. \"Forgiveness is permission to do it again. I do not forgive you coming so close to acting on what you think is best for the Brotherhood. I do not forgive you choosing what you wanted over what I wanted.\"\n\n\"Many Brothers can handle the disciplining of a Sibling; but there are only three Enforcers,\" Anna said. \"And only David can give us back the Bloodlines that we thought were lost.\"\n\n\"Bloodlines?\" Doris Alex asked distracted for a second.\n\n\"Your children with David will not be Alexanders,\" Roderigo informed her. \"Nor will Iane's children with him be Ians. The Sarah and Matthew Bloodlines will be returned to the Brotherhood in the form of the mixed children of the Ekaterina and your Bloodlines. It was important to us that we give those Bloodlines a good rebirth, and we are pleased to have such gifted mothers for the children.\"\n\n\"That's not what we...\" Doris Alex said sitting up."
    ],
    "authorname": "elsol",
    "tags": [
        "mdom",
        "mf"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/a-masters-ring-book-03"
}