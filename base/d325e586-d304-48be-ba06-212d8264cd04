{
    "title": "Mason Ch. 14",
    "pages": [
        "\"Now what?\" Toni asked herself as the realization that she was in love with Mason sunk in. She was scared and happy? Was she happy? She wondered. Scared for sure, \"Ok Toni.\" she said to herself, \"Let's talk about this.\"\n\nShe kicked off her shoes and slipped her feet into the purple bunny slippers wiggling her toes in the softness of them. Deciding that she was hungry, she went to the small apartment sized refrigerator to see what Mason had cooked up for lunch. Sitting on top of each other were two containers each containing what looked like clam chowder. On a hunch, Toni decided to call Mason and see if he was free, it didn't seem fair that she would get lunch and he wouldn't. Mason answered his cell on the first ring. \n\n\"Toni? Is everything alright?\" he asked before he even said hello.\n\n\"It's fine.\" Toni replied. \"Are you still busy?\"\n\n\"It's slowed down enough that I could take a quick lunch break.\" he replied. \"I'll meet you downstairs in five minutes.\"\n\nReluctantly, Toni took off the comfortable bunny slippers and put her shoes back on. She gathered the containers of clam chowder and made her way to the doctor's lounge where Mason was already waiting. As soon as he saw her, he stood up and took the containers of soup from her while greeting her with a smile. They stood by the microwave together and waited for the food to heat.\n\n\"How's your night going?\" Mason asked.\n\n\"Better than yours I imagine.\" Toni replied as she gathered the napkins and spoons for their meal.\n\n\"Well, as I said, things are calming down. Hopefully the rest of the night will be quiet. How's Jamie?\" Mason asked.\n\n\"Good and wondering when he's going to get to read that book with you.\" Toni replied.\n\n\"I know. I talked with him just before my shift started and we made tentative plans for tonight if you're up to it.\" \n\nShe should have been irritated that Mason made plans with Jamie without asking her first but she wasn't, it felt natural, as if this was the way it was supposed to be.\n\n\"What are you thinking about doing?\" she asked as Mason took the chowder out of the microwave and checked to see if it was hot enough.\n\n\"Miniature golf is out but we could go out for ice cream and maybe one of the evening ocean cruises.\" Mason suggested.\n\nToni thought about it, \"That's sounds like a plan, six?\" she asked.\n\nMason's pager went off just as they finished eating. Mason glanced at it and grimaced.\n\n\"I'm sorry but I have to go, I'll see you tonight.\" Mason said touching Toni's hand.\n\nToni cleaned up the trash from their meal and headed back to the sleeping room. Once again she kicked off her shoes and put on the bunny slippers, it was time to finish that conversation that she was having with herself. She made herself comfortable; she had the time since she had already finished her dictation. Toni lay on the cot and looked up at the ceiling and then closed her eyes.\n\n\"Ok Toni.\" she said out loud. \"What's the real issue here?\" she asked herself. \"You're in love with the man, you've admitted that, you don't like the idea of him being with anyone else and there's no one else that's even come close to making you feel the way you used to feel with James. He sincerely likes Josh and your parents and let's not forget that they like him and would be thrilled to no end if you came out with what was happening between you and Mason.\n\nBut really, besides the one date and the kiss what's happening? I mean really Toni, did he say that he wanted more? No he didn't, maybe you're seeing more than what's really there. Antoinette Marie Jacobson, stop trying to fool yourself, the man has ingratiated himself into your life over a three year period so just say what the real issue is!\" she admonished himself.\n\nBut she couldn't, she was too afraid to say the words so she thought them, \"what if he dies? What if we get close and he dies? I can't go through that again; I don't think that I could survive that again. \"Alright Toni, so what are you going to do?\" she asked herself out loud. \"Not see him? If you do that, what are you going to tell Jamie? And what about the fact that you love the man?\" Toni asked herself.\n\nShe was developing a headache, she was over thinking this and she knew it but she couldn't deny that her fear was real. The bottom line was this, they had to talk about whatever this was, she needed to know what he was thinking if for no other reason than Jamie. Maybe tonight after Jamie was in bed, they could talk and start laying their cards out. Toni knew that the whole hospital was abuzz with talk and she was sure that Mike Ellis was now a major contributor and that people would believe him simply because he rarely participated in the rumor mill as he was often the subject of it. Toni sighed; tonight she and Mason were going to have that talk.\n\n*******\n\nAfter he was paged, Mason rushed back to the psych unit cursing the whole way. The patient causing the disturbance was a sixty something year old man who was a frequent flyer. The man had a nurse trapped in his room but she had the presence of mind to run into the bathroom and close the door behind her. The patient was standing in the doorway swinging a chair at whoever got close, the situation had escalated when someone called security and the patient thought that he was under attack.\n\nBy the time Mason made it to the floor, the other patients were in their rooms safely and the patient in question was screaming. There was no way that anyone would be able to get close enough to give the man an injection and not get hurt. \"Fuck.\" Mason swore under his breath. He made a conscious effort not to use compulsion on anyone especially when at work but it looked as though he wasn't going to have too much of a choice.\n\n\"Everyone move away.\" Mason said quietly with his eyes on the agitated and combative patient.\n\n\"But...\" one of the male nurses said.\n\n\"I'll be fine.\" Mason interrupted, \"now go.\"\n\nReluctantly the nurse left Mason alone with the patient but didn't go too far away, the others left as soon a Mason told them to leave. Mason looked at the patient and decided to see if he could calm him down by talking to him.\n\n\"Franklin,\" He said using the patient's first name hoping that the man would see him as a friend. \"Do you know who I am?\" he asked.\n\nThe patient looked at Mason and charged at him.\n\n\"Shit!\" Mason swore as he didn't move as the patient came at him. His dark eyes flashed just once and the patient stopped just a few feet from him.\n\n\"Franklin, my name is Dr. Donahue, do you remember me?\" Mason asked.\n\nThe patient looked confused and tried to move toward Mason. \"I guess not.\" Mason muttered. As much as he wanted to compel the patient to go back to bed, he didn't, things had to appear as normal as possible.\n\n\"I need 2 mg of ativan diluted with normal saline no more than a cc and a 21 gauge needle.\" Mason called out. \n\n\"Got it!\" the male nurse who was the last to leave called out.\n\nWhile he waited, Mason continued to talk to the patient even though he really didn't need to but it was all about appearances.\n\n\"Franklin, I'm going to give you an injection. It might sting a little but afterwards you'll feel better and you'll be able to sleep.\" As he was saying this, he was compelling the patient to cooperate but released enough of his free will so that the patient would struggle just a little. When the male nurse came with the injection, Mason asked him to stay.\n\n\"I'll hold him while you give him the injection.\" Mason said thankful that it was the male nurse that responded.\n\n\"Shouldn't we have another pair of hands?\" the nurse asked.\n\n\"No, it'll just agitate him again, once I get a hold on him, give him the shot and make it quick.\" Mason replied.\n\nFifteen minutes later the patient was in bed. The combination of the ativan and Mason's compulsion made it easy to get him to bed. Mason tapped on the bathroom door and called in, \"You can come out now.\"\n\nThe nurse was still very much shaken when she came out. Mason gave her a few minutes to calm down, he wanted to know how she came to be trapped in the room, any experienced psych nurse knew not to be trapped like that.\n\n\"I don't work this floor, they floated me up from the med surg Unit.\" she replied.\n\n\"Were you ever oriented to this floor?\" Mason asked.\n\n\"No and I told them that I wasn't comfortable with coming here but they said it as my turn to float.\" she replied.\n\nMason nodded at her, he knew that she would never make the same mistake again but what would have happened if he hadn't been here? Someone could have gotten seriously hurt; it was time to talk to someone about this. Joyce had tried and failed; now it was his turn to try. \n\nHe looked at the clock; it was only four, three more hours to go.\n\n********\n\nToni's pager went off only twice more during the shift. Both pages were easily handled by phone and both were about orders that she had written, she really had to work on improving her handwriting. For the rest of the shift, Toni thought about Mason and what it could mean for her and Jamie if she decided to see where their relationship went. She had to admit that Jamie was happier and so was she but she couldn't get around the fear of Mason dying on them. Her mother's advice about staying single because she wanted to and not out of fear ran through Toni's mind and she knew that if she turned Mason away it would be out of fear and nothing else. The question was could she get over that fear?\n\n*******\n\nThe rest of Mason's shift passed quickly. He finished his dictation in record time and then shot off an email to the Director of Medical services about floating nursing with no psych experience to his unit and requested a meeting as soon as possible making sure to include that it had to be in the evening. The last thing he did before leaving was to call Toni.\n\n\"Good morning, how was the rest of your shift?\" He asked when Toni answered.\n\n\"Quiet, nothing major happened.\" Toni replied and then hesitated.\n\n\"What's going on?\" Mason asked sensing her hesitation.\n\n\"Nothing really, I think that we need to talk sooner rather than later about... well anyway we need to talk.\" she said.\n\nMason wasn't sure of how he should respond and proceeded carefully.\n\n\"Sure, would you like to talk tonight after Jamie is in bed?\" \n\n\"That would be good.\" Toni replied.\n\nThey talked for a moment more and just as Toni was about to hang up, Mason called her name.\n\n\"Toni?\"\n\n\"I'm still here.\" she replied.\n\n\"I.... sleep well.\" Mason said and then hung up.\n\n******\n\nHe was not going to tell her that he loved her over the phone; he wanted to see her face the first time that he told her but that wasn't the only reason. He didn't want to scare her off; he knew what she wanted to talk about but wasn't sure of how to prepare for it or even if there was a way to prepare for it.\n\nHe made last rounds making sure to check his orders on the combative patient, checked his work email and headed home. Unable to rest, he sat up watching CNN not really paying attention to what was happening around the world. Now that he had admitted that he loved Toni and Jamie, he was anxious to get this talk over with and to move forward in their lives together. He still hadn't figured out how to tell her that he was a vampire but maybe the best way was just to say it like Ethan had done with Katrina and then deal with the fallout. Then there was Jamie and what they would do about him but there was time for that later he told himself.\n\nBefore he lay down on his bed, he decided to see if Jamie was on his laptop. He had been too busy to read with him before his bedtime.\n\n\"Hi Dr. Mason!\" Jamie said when Mason's face appeared on his laptop after he accepted the call.\n\n\"Hi Jamie, I'm sorry that we didn't get to read together last night, I had a very busy night. How are you feeling?\"\n\n\"Good. Mom says that we're going on a boat ride tonight and then we're going to have ice cream after.\" Jamie said.\n\nMason laughed at Jamie's enthusiasm.\n\n\"That's the plan so make sure that you wear a jacket it might be cool out on the water.\" Mason advised.\n\n\"Ok, are you going to bed now?\" Jamie asked.\n\n\"Soon. Try to be a good boy and let your mom sleep alright?\"\n\n\"I will but I'm at gramma and grandpa's house right now.\" he replied.\n\n\"Oh, ok then be good for them too and I'll see you tonight.\" Mason said and logged off.\n\nMason lay down and was up thirty minutes later, he was nervous. There was a big possibility that Toni would decide not to move forward with him but then they still wouldn't be continuing with their evening plans would they? She told Jamie about the plans after she got home. To pass the time Mason baked chocolate chip cookies which happened to be Toni's favorite. When he was finished baking and packaging up the cookies, he surfed the web looking for nothing in particular just trying to pass the time. \n\nAs he surfed, he allowed his mind to wander, if he and Toni got married, Jamie would be his son. Would she allow him to adopt him? For that matter, would she be interested in having a child? His child? \"Stop it!\" he told himself, that was the future that he wanted, after tonight; he would know whether that future was possible.\n\n******\n\nToni had no better luck at resting than Mason did. She spent the day laying in bed and tying to finish the book that she was more than half way through but she couldn't concentrate. She thought of calling her mother but decided against it, she knew what would happen, Barbara wouldn't and couldn't be impartial. Barbara and Ben had known even before she did or admitted that Mason had feelings for her and she for him. Barbara would try to push her into choosing Mason. Toni realized that this was something that she had to work through alone and that she had better do it soon, it was already noon.\n\nShe could no longer say that she didn't know what James would have wanted her to do, he had told her in the disc and even in her dreams but she still felt tied to him somehow and it just wasn't because of Jamie. Toni lay in bed trying to figure out what she needed to do when she had an idea. She jumped out of bed, threw on a pair of sweats and went to her jewelry box. Sitting on the top of the pile of rarely worn jewelry was her wedding band. \n\nToni looked at it for a long time before she picked it up, was this it? She wondered. Aside from the fear of Mason dying, there was this ring. Although she hadn't worn it for almost three years, was it another thing that she had to let go of? Toni put the ring into the pocket of the sweat pants, grabbed her phone and purse and headed toward the car.\n\nA short time later, she was sitting on the ground in front of James' headstone.\n\n\"Hi sweetie.\" she said not feeling in the least bit stupid. \"I'm sure that you know that Jamie had appendicitis but he's alright now. You would have been so proud of him; he was scared but so brave like you were. I guess you also know about your mom and what she did but James, I won't allow her or anyone else to hurt Jamie. It wasn't her place to tell him where and how you died and to be honest with you, I'm afraid that she's going to tell him that he's adopted before he's ready to hear it. Anyway, I've been seeing Mason Donahue and ... James, I love him. That doesn't mean that I didn't and don't love you and that Jamie and I will forget you, that would be impossible. But here's the thing, what if he dies? I know that there are no guarantees but that's one of the things that stopping me. The other thing has to do with us, I've let you go but there still seems to be something that I need to do.\"\n\nToni took the wedding band out of her pocket and held it tightly in her hand.\n\n\"I think that I need to give this to you. Maybe I'm just being silly but here it is and I want you to know that being married to you was one of the best things that ever happened to me.\"\n\nToni kissed the ring and sat it in front of the headstone and started to leave when she remembered one last thing that she wanted to say or rather ask of James.\n\n\"I'm sure that you know about Tom Myers. He's suffered so much because he misses you and blames himself for your death, if you could, could you find a way to let him know that it wasn't his fault any more than it was mine? Thank you sweetie and I don't mean just for that, I mean for everything.\"\n\nToni left the burial sight feeling a little better; the only thing left was the fear of being with someone and having them die.\n\n*******\n\nJamie was ready to go and playing clock watcher.\n\n\"Mom! He's going to be here soon!\" he called into Toni's room.\n\n\"For crying out loud, I have fifteen minutes!\" Toni called back as she put on her shoes.\n\nShe knew the moment Mason arrived because she could hear Jamie's voice.\n\n\"I told her to hurry.\" he said.\n\nShe stopped just outside of the bedroom door when she heard Mason's response.\n\n\"Never rush a lady, when they take so long it means that she is taking care so that she looks beautiful for us.\" \n\n\"But what if we're late?\" Jamie asked.\n\n\"Then we plan accordingly so that the lady in question isn't hurried.\" Mason replied.\n\nToni could only imagine the confused expression on Jamie's face and smiled.\n\n\"Let's take tonight for example,\" Mason said. \"I am here at six but the boat cannot be boarded before seven, we have plenty of time to get there and I have already purchased the tickets so there is no rush. We can leave as late as six-thirty and still have time to spare. Do you understand?\"\n\nToni could tell by Jamie's voice that he really didn't get it. \n\n\"Hi.\" she said walking into the living room. \"Sorry I'm late.\" \n\n\"No worries.\" Mason said smiling at her. \"We have plenty of time. I was just telling Jamie that I already bought the tickets.\" \n\nMason looked down at Jamie, \"see what I mean? Your mother looks beautiful doesn't she? And it was well worth the wait.\"\n\nToni blushed, she wasn't quite sure of how she felt about Mason saying things like that in front of Jamie but then, what had he said? Nothing, he had paid her a compliment and that was it.\n\n\"Thank you.\" she said nervously.\n\nTwenty minutes later they were waiting to board the ship. Jamie was beside himself with excitement, he had never been on a boat before.\n\n\"If you like it we'll do it again.\" Mason promised.\n\nHe just did it again Toni realized, he had just assumed that there would be a next time for anything. Again, she couldn't bring herself to be angry about it, he fit with them but they still needed to talk.\n\nJamie loved the cruise and was tickled when Mason bought him a sweatshirt and cap as souvenirs. Afterwards they went to a sit down ice cream parlor where the server came to the table. As soon as the server was at the table, Jamie started to tell her what he wanted. Mason gently interrupted him and asked the server for a few more minutes. When she was out of earshot, Mason spoke to Jamie.\n\n\"I know that you love ice cream and that you have been looking forward to this as have I but we'll let your mom order first because she is the lady, if it were just you and I, you would offer to let me go first because I am the elder or the oldest between us. Does that make sense?\" Mason asked. \n\nJamie thought about it and said that he understood.\n\n\"Good, and don't worry if you forget, it took me a long time to learn manners and how to treat a lady.\" Mason said giving Jamie a reassuring smile.\n\nWhen the server came back, she looked at Jamie for his order.\n\n\"Let my mom go first.\" he said.\n\nHe beamed when the server complimented him on his manners.\n\n\"Aren't you just the gentleman?\" she asked and then took Toni's order.\n\n\"Ok handsome, what would you like?\" she asked Jamie who then deferred to Mason who then deferred back to Jamie.\n\n\"You go ahead and order, I think I'll share with you and your mom.\" he replied. \n\nJamie ordered a banana split that he hadn't a hope of eating all of while Toni ordered the same minus the bananas- she hated bananas especially cold ones. After the ice cream they went back to Toni's condo where Jamie insisted on opening her car door for her.",
        "She couldn't deny that Jamie needed a man in his life other than her father and Robert and that Mason was definitely good for him, for them she corrected. The things that Mason was teaching Jamie were things that she never would have thought of in a million years. She was struck again at how old world Mason was, he acted even older than her father and he was close to sixty-six. Mason was thirty-nine but he reminded her of the men in the early 1900's or even the men of an earlier time period in his mannerisms. The feeling that Mason wasn't being completely honest with her resurfaced. And tonight she was going to find out why. If she was thinking about entering into a true relationship with him then there had to be complete honesty. If he couldn't do that, then a relationship was out of the question no matter how she felt about him.\n\nMason watched Toni and knew that tonight was going to be the beginning of their true relationship. The question was whether he would tell her everything tonight or break it down into smaller pieces. He was more than a little apprehensive about her reaction when he told her that he wasn't human and found himself wishing that Jamie was spending the night with her folks. He was concerned enough that he thought about suggesting that they talk another night when that could be arranged but before he could say anything, Jamie was at his side waiting with a book. Maybe he would mention it after Jamie was in bed.\n\nToni could tell that Mason was as nervous as she was. Where he was usually very attentive where Jamie was concerned, now he was distracted but not so much that Jamie noticed. After several stories, Toni sent Jamie to get ready for bed.\n\n\"Can't I stay up just a little longer?\" he begged.\n\n\"Nope, time for little boys to be in bed.\" Toni said affectionately.\n\n\"Please? I want to stay out here with you and Dr. Mason.\" Jamie whined.\n\nMason stood back and watched, for now this was Toni's domain.\n\n\"Jamie, the answer is no.\" Toni said firmly.\n\nJamie looked to Mason for help and when none was forthcoming he turned back to Toni.\n\n\"Mom...\"\n\n\"Bed. Now.\" Toni said in the tone that Jamie knew all too well. \"Now say goodnight to Dr. Mason and I'll be in to say good night to you in a few minutes.\"\n\nJamie went to Mason and gave him hug good night.\n\n\"Thank you for taking us on the boat and the ice cream.\" he said.\n\n\"You're welcome; get some sleep I'll talk to you tomorrow.\" Mason said returning the hug.\n\nWhile Toni went to change into more comfortable clothes, Mason started to make coffee for him and Toni. \"No point in delaying things.\" he muttered as he ground the coffee beans and got the coffee mugs down.\n\nToni watched Mason moved around her kitchen and wondered why he hadn't found someone else after Katrina. It wasn't as if they had a relationship the way she and James had. The only thing that she could come up with was that he had really loved her much the same way that she had loved James. While he made the coffee, Toni went to check on Jamie. He was in bed and obviously not happy about it but he knew better than to ask again. Toni kissed him good night, shut out the light and closed the door.\n\nThe coffee was ready by the time she got back to the kitchen.\n\n\"Five creams and five sugars.\" Mason said handing her the mug of coffee. He noticed that Toni was wearing the bunny slippers that he bought for her.\n\n\"You really like those?\" he asked indicating the slippers.\n\n\"I really like them.\" Toni replied. \"As a matter of fact, I like them so much that I take them to work and put them on when I'm not out on the floor.\" she added as she headed toward the living room. She missed the satisfied smile on Mason's face as he followed her to the living room.\n\nNeither of them spoke for several minutes as they drank their coffee.\n\n\"Fuck it!\" Mason said under his breath. He sat is coffee cup down on the table and sat back, he was going to do this.\n\n\"Toni, I love you.\"\n\nToni sputtered on the sip of coffee that she had just taken. When she didn't say anything, Mason continued.\n\n\"There's a lot that I have to tell you but right now that's the most important thing for you to know that and that I love Jamie too.\"\n\nToni sat on the couch in shock although she didn't know why; she knew that he had feelings for her but for him to actually say it was a surprise.\n\n\"Toni?\" Mason said. \"Did you hear me?\"\n\n\"I heard you and I don't know what to say.\" she replied.\n\n\"Start with how you feel about me and don't you dare try to lie to me and say that you don't feel anything.\" Mason said his expression serious.\n\nIn fact that was exactly was she was going to do but how did he know that? She wondered.\n\n\"Mason, I... look, I'm not going to deny that I'm attracted to you and that I like being with you but...\"\n\n\"Toni, do you love me?\" Mason asked.\n\nShe was caught and she knew it but she didn't reply.\n\n\"You do and you're scared to admit it.\" Mason said. \"Now tell me why.\" he added and then waited. Now that they had started, he was going to sit on her sofa all night if he had to but he wasn't leaving until she at least admitted that she loved him, the rest they could deal with later.\n\n\"You don't understand.\" Toni said softly.\n\n\"Then explain it to me.\" Mason said relieved that she didn't deny that she loved him. \"Is it because you feel guilty?\" he asked after several minutes.\n\n\"At first I felt guilty but I made my peace about that or as much as I could anyway.\" Toni replied.\n\nMason knew what the real issue was but he wanted her to verbalize it, he wanted her to understand that she could trust him with anything so he waited.\n\nToni looked at him and understood why he was so good at his job, the man had patience much the same way James did when he was waiting for her to decide whether she loved him or not and like James, Mason knew that she loved him as well. Toni finally got to the point where she realized that there was no use in denying or fighting what they both knew to be true.\n\n\"Alright, I love you! But that doesn't mean...\"\n\nThe \"I love you\" was all that he needed to hear, before Toni had finished her sentence, Mason was beside her on the couch and had her in his arms kissing her. Toni was caught so off guard that she didn't resist- at first. Toni put her hands on his shoulder and pushed. Mason broke the kiss with a very happy grin on his face.\n\n\"You didn't let me finish.\" Toni said a little breathlessly. \"You wanted to know why I was so scared to say it so I'm going to tell you.\"\n\nMason leaned back taking Toni with him; she was exactly where he wanted her for now. \"Tell me.\" He urged.\n\nToni hesitated and then spoke.\n\n\"After James died, I didn't think that I would want to be with anyone again and it wasn't just because of guilt, it was because I can't go through that again. I don't ever want to hurt like that again, I don't want Jamie to have to go through that again and before you say it , yes I know that we all have to die and that either I'll see him die or he'll see me die but it scares me.\n\nLast night when I wasn't busy, all I could think about was if I entered into a full relationship with you, what would happen if you died? What would happen to Jamie? Because that little boy loves you even if he doesn't recognize the emotion in relationship to you.\"\n\nAs Mason listened to Toni talk, he debated as to whether this was the time to tell her what she needed to know and decided to wait. One thing at a time, knowing that she loved him was enough for now, but on second thought, he decided to tell her about the condo next door.\n\n\"Toni, I have a confession.\" Mason said.\n\nToni tried to sit up sop that she could see his face but he held her in place not ready to let her go. Toni insisted on sitting so that she could see him and reluctantly Mason let her up.\n\n'I'm listening.\" Toni said when she was looking at him.\n\n\"I know who bought the condo next to you.\" he said quietly.\n\n\"You do? Who and how do you know?\" Toni asked.\n\nMason hesitated before he spoke, \"It was me.\"\n\n\"You?\" she asked confused and then she was angry. \"You lied to me. You acted like you didn't know anything and to me that's a lie by omission.\"\n\n\"I had a reason for not telling you.\" Mason said.\n\n\"I'm sure you did, would you care to explain why you bought the condo next to mine and didn't tell me?\" Toni asked her tone icy.\n\nHe couldn't lie to her, she would know so he went with the truth.\n\n\"I didn't want anyone living next to you and I wanted to be able to be close to you and Jamie whenever I could.\" Mason explained.\n\n\"Have you been staying there?\" Toni asked.\n\n\"No, I've been in and out but I actually moved in the week before you moved in here. I didn't want you to think that I was stalking you or crowding you. I wanted you to know how I felt about you before I told you.\" Mason replied.\n\nToni considered his explanation and knew with certainty that he wasn't lying to her. \n\n\"Alright, I can accept that but that really is a little creepy.\" Toni replied much to Mason's relief. \"But you've lied to me before and I want to know why.\" Toni added.\n\n\"Toni, I didn't....\"\n\n\"Yes you did.\" Toni interrupted. \"The first time was when I asked you why you didn't send me a bill for your services when you were treating me. The second time was when I asked you why you hadn't cashed the check that I gave you, the third time was when I asked you why you were practicing in a institutional setting when you had a lucrative private practice but that time you told me a partial lie, the last time was when I asked you how old you were.\n\nHonesty is important to me and if you feel that you have to lie to me about things that in the big picture may not matter, what else are you going to lie to me about? I can't and won't be with someone who doesn't trust me enough to tell me the truth no matter how much I may love them so this is your one chance to come clean. If you can't then ....\"\n\n\"Toni, you don't know what you're asking.\" Mason said.\n\n\"Yes, I do.\" Toni replied. \"I asked a very simple question, why did you lie to me and while I'm at it, how in the hell did I know that you lied?\"\n\nMason floundered, this wasn't the time to do this but he had to give her something. \"Would it suffice if I told you that the fact that you know when I'm lying is an indication that we are meant to be together?\" Mason asked.\n\nAgain Toni listened to Mason's words.\n\n\"You're not lying... How? I don't ... How?\" she asked.\n\n\"Toni, there is so much that I need to tell you but not tonight, do you think that your parents can take care of Jamie for a night? Much of what I have to tell you isn't for little ears and I will need all your attention.\" Mason said.\n\n\"Mason, what aren't you telling me?\" Toni asked.\n\n\"Call your mother and see if they can take Jamie tomorrow night.\" Mason urged.\n\nHe watched as Toni debated whether to push the issue or not and then decided to do things his way. A few minutes later, arrangements for Jamie had been made.\n\n\"Good, I'll come for you at six and dress comfortably.\" Mason said. \"And you can even wear your bunny slippers.\" he added as he pulled Toni into his arms. \n\n\"Mason, what's the big secret?\" Toni asked her curiosity piqued.\n\n\"Tomorrow I promise to tell you everything, there will be no lies or half truths and besides, you would know if I lied to you just as you knew that I lied before. I am going to ask you to do something for me.\" Mason said.\n\n\"You want me to trust you.\" Toni said.\n\n\"That and that you keep an open mind. Do you think that you can do that?\" He asked. \n\nToni tried to imagine what he had to tell her that was so hush-hush but she would have to wait. \n\n\"I can only promise to try to keep an open mind. The fact that I've let you anywhere near Jamie and that I told you that I loved you albeit reluctantly should tell you that I trust you, it's the lies that I don't understand.\" Toni replied.\n\n\"I understand.\" Mason replied \"but tomorrow night, you'll understand everything and we can move forward.\"\n\nMason left around six that morning before Jamie would be getting up. He didn't want Jamie to think that he had spent the night with Toni and realistically, if he knew Toni, that wouldn't happen until they were married or if Jamie was at his grandparents. With any luck, he was hoping that they would end up spending the night in his bed which reminded him that he wanted a new bed in his room. He didn't want Toni sleeping in the same bed that he had shared with another woman. As soon as he was in his car, he would call for the old bed to be removed and a new one brought in.\n\nFor just a brief moment he thought of having Toni come over to the condo next to hers but he changed his mind liking the idea of his house better, after all he was planning on Toni and Jamie moving in with him at some point and she might as well see her new home. He kissed Toni at the door, hating to leave her. This, he thought to himself was how he should have felt the very first time that he laid eyes on her.\n\nToni returned the kiss with no reluctance and was surprised that she felt no guilt or at least very little. She was even more surprised by the fact that she really didn't want Mason to leave. She wasn't frightened but more anxious than anything else.\n\n\"Toni, I am not going to die on you. I promise. Mason assured her wishing that he could stay with her. \"Tell Jamie I'll talk to him later.\"\n\nMason kissed her once more and told her that he loved her before leaving. He had things to do to prepare for tonight.\n\nToni watched Mason walk away and almost called him back. \"Get a grip.\" she mumbled as she closed the door and locked it. She rinsed out the coffee mugs, put them in the dishwasher and put the cream and sugar away before going into her bedroom. Jamie would be up soon wanting breakfast; he would be excited that he was going to his grandparents but upset because he wouldn't get to see Mason unless it was on the computer. Toni's stomach gave a nervous lurch as she tried to think of what could be so terrible that Mason didn't want Jamie to hear it. It gave another nervous lurch when she thought about the kiss and what it meant. It hadn't escaped her notice that Mason was hard when he held her tight against him.\n\n\"Oh god.\" she murmured as she sat down on the bed. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "bbw"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/mason-ch-14"
}