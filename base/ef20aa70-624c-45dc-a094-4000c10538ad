{
    "title": "Culture Shock",
    "pages": [
        "(AUTHOR'S NOTE: Welcome to Culture Shock. By way of introduction, I'd like to explain that this long story was written to fill a niche that is largely unexplored in 'real' BDSM erotica, and that is, 'How does a submissive actually get from online to real life in the world of D/s and BDSM? What kinds of things have to happen? What questions need to be asked and answered?' \n\nMy hope is that you will better understand the journey after reading this story.\n\nThis is not a stroke story, nor is it filled with 'scenes' or moments of piqued sexuality. It is not faultless and I'm sure I've left things out that some wags will bring to my attention. It is a character study; an in-depth look at what it is like for ONE young woman to discover the nuances of D/s and BDSM, and the challenges she faces on the road to her self-actualisation. Ultimately, if you are waiting with held breath for the arrival of 'the weekend', you will be disappointed. \n\nThe story focuses on the process rather than the result, highlighting Elaine's journey up to the moment when she is finally alone with the man she has chosen as her Dominant. That is where the story ends, leaving you, the reader, to imagine what happens next. Some will find an ending like this incredibly frustrating for many reasons, not the least of which is the desire to know what became of them. That is why I am telling you now. What happens at the end of this story, in my humble opinion, is the mystery best left unsolved...)\n\nChapter 01\n\n\"What's this?\" Elaine asked. \n\nShe had been planning another night in. Typically her roommates were on her case about not going out with them, but she rarely felt like it and tonight was no exception. The prospect of study, surfing the net or watching a late movie alone was more alluring than alcohol, crowds and sweat. \n\n\"Um, just something we thought you might need.\" Kendra and Chelsea giggled to each other, apparently trying not to burst out laughing. \n\nElaine stood aghast, paralysed and blushing crimson as the crumpled wrapping paper floated to the floor. Her roommates elbowed each other then apologised haughtily, explaining that their gift was intended to shame Elaine out of the apartment. \n\nAlmost rendered speechless, from somewhere Elaine forced a good-natured laugh before managing to wish the girls a good night and quietly lock the door. Her knees were shaking so badly she had to sit down. Along with a dose of humiliation and thumping adrenaline, her roommates had kindly presented Elaine with a vibrator. Though it appeared to have been given in jest, she had never felt more embarrassed than when she stood with her mouth open and her cheeks burning, an empty box in one hand and a sex toy in the other.\n\nTurning it over in her hands at the kitchen table, she checked it out. It was nice and smooth and had a simple on/off switch and three different speeds. She'd always wanted one. But it was a purchase she doubted she'd ever have the courage to make. The realisation that she now actually owned a vibrator made her tummy flip. After making her way to her bedroom, she slipped it into her bedside drawer and tried to forget about it, dutifully turning to her studies as planned. \n\nBefore long it was late and she went to bed, sleeping fitfully.\n\nThree days of denial followed and her roommates teased her at every opportunity. They latched onto the admission that she 'hadn't tried it yet,' and apparently took great delight in asking her whether she'd christened it. \n\nElaine wanted to sample the mythical ecstasy a vibrator was said to give, but she was scared. She'd never used anything but her fingers, and even then it was rarely.\n\nKendra and Chelsea had insisted it felt 'unbelievable,' and Elaine didn't doubt it. The problem was more complex than simple pleasure. She'd heard people could become addicted to vibrators or they could turn into sex maniacs. The latter, of course, she knew to be ridiculous. Elaine was a smart, centred girl; one who knew where she was going...\n\nBeing 'out of control' was one of her greatest fears. It was the only thing she really didn't like about the whole sex business. When she had an orgasm, she had to grit her teeth and concentrate very hard, just to maintain her composure. If she slipped at all her body would buck around uncontrollably and she'd say all kinds of things she didn't mean. Lately, when she just... needed it, she'd taken to pressing her face into her pillow, or biting down on it.\n\nEven if her roommates were asleep, masturbating while they were at home was out of the question. There was no way she was going to risk waking anyone. She'd heard of girls described as 'screamers', and they were often called 'sluts' in the same breath. Her father had left her mother for one of them. She didn't want to be one of them. She wasn't one of them. She was a good girl. That's what her mother always said.\n\n\"You're a good girl, Elaine.\"\n\nMeaning, 'I never caught you masturbating and I'm pretty sure you still have your virginity.'\n\nShe was right too. Until Elaine had arrived at college, she'd rarely masturbated, and certainly never to orgasm. The two dates she'd endured in high school had been unmitigated disasters. Her mother had chaperoned the first one, even going so far as to tell the young man not to put his arm around Elaine's shoulder.\n\nThe second date occurred soon after Elaine's seventeenth birthday, when she confidently insisted on a date alone with a boy. Everything was going perfectly until he touched her thigh in the darkened movie theatre. For a full minute she turned to stone, unable to move as her date shockingly fondled her bare skin with growing boldness. Aroused from her momentary paralysis, she fled the theatre, freaked out by her physical response. From that moment, she shied away from boys for fear of sexual contact. \n\nAnd anyway, she liked being thought of as untouchable. She was a good girl.\n\nAt college she'd grown up somewhat. She allowed herself to discover the mind-boggling pleasures her fingers could give her, even though the experience itself was frightening. She would never forget the first time she had an orgasm. Until she'd left home, she'd never had the nerve to keep going and find out what it felt like. Once she knew, it was like she was hooked.\n\nOvercome with guilt at her almost constant need, Elaine became convinced she had a medical condition. After reading some articles and books she'd found in the college library, she discovered she was not abnormal. Just rare. She was, as the books described, simply 'highly sexed'.\n\nSomewhat reassured, over the following months Elaine trained herself to remain quiet and to rein in the passion her fingers seemed able to induce. Unfortunately, orgasms thus procured were relatively unsatisfactory, often leaving her even more desperate for release. And so, as became her regular routine, she would wait until her roommates went out before ultimately finding herself biting down on her pillow and screaming her head off. \n\nHaving a vibrator sitting in her bedside drawer was a double-edged sword. She had trouble enough maintaining control. Yet she wanted to know.\n\nEventually both opportunity and curiosity got the better of her. Fortified with a couple of glasses of Merlot, the next time Elaine's roommates went out, she turned off the lights, stripped naked, and slipped between the clean sheets on her bed. For the next three hours she had come and come and come. Zeroing in on her final climax, the damned batteries ran out \n\nIn a blind fit of frustration with her fingers a blur on her numb clitoris, Elaine had hesitated, moaned, then jammed the vibrator full length into herself. The pain of 'becoming a woman' had ignited her best orgasm ever, so strong it floored her, leaving her bucking and gasping for air. \n\nAlmost an hour later she'd woken, sprawled on the floor beside her bed and wondering if she'd somehow knocked herself unconscious.\n\nElaine spent the next few days avoiding her roommates and putting off buying new batteries. She was shaken by the intensity of her experience and again worried that there was something wrong with her. \n\nOver a quiet Sunday dinner a week later, Elaine admitted to her roommates that she had tried the vibrator. For once, Kendra and Chelsea put aside their teasing, and they sat and drank wine, talking about all kinds of things long into the night.\n\nThough Elaine hadn't admitted to breaking her hymen, after talking to Kendra and Chelsea, she realised her experience wasn't all that unusual. Both girls described their first times with a vibrator as mind-blowing and wanting to do it again and again. They said the intensity was caused by the newness of the experience and would be less so in the future. It made sense.\n\nShe went out the very next day and bought more batteries. Stuff it, she thought as she bounded down to the local supermarket with renewed enthusiasm. It wasn't until she'd asked for two long-life batteries that she considered how she looked. Suddenly she wondered whether the sales girl also had a vibrator and recognised the batteries she was buying. Before she knew it, she could feel the heat in her cheeks and her nipples stiffening.\n\nWonderful, she'd thought. Now I even LOOK guilty.\n\nHer pussy was wet all the way home. Just thinking about it made it worse.\n\nShe could hardly wait to try the vibrator again, but that wasn't why she was excited. Elaine already knew that if she blushed from even mild embarrassment, her pussy would moisten. After that, she felt like she was in a perilous, yet intoxicating vicious circle. Elaine feared her weakness might be taken advantage of or used against her by her future lovers. She really didn't know how someone might react. She hoped they never found out.\n\n ***************************** \n\n Every time she needed to buy batteries, Elaine's tummy flipped and she'd start getting nervous. Going through a set almost every session, once she established a routine, she needed to buy quite a few. She couldn't shake the idea that whoever she bought them from knew exactly what she was doing with them. \n\nIn order to appear less obvious, she started buying other unnecessary items as camouflage or going to different stores so no one would recognise her as 'that girl who goes through so many batteries she must be masturbating'.\n\nShe felt her cheeks warming as she made herself a coffee. \n\nOver the last five weeks, she'd used the vibrator almost every chance she'd had. A week ago she'd promised herself she'd avoid using it for seven days, just to prove she wasn't addicted and still had some self-control. A week was a long time and it hadn't been easy. The seventh day had been and gone and Elaine had to wait until the eighth for some time alone.\n\nThat night was tonight.\n\nA month earlier, soon after her first vibrator induced orgasms, Elaine had discovered a free website on the Internet containing literally thousands of erotic stories. Their effect on her had been staggering. Some of the stories had turned her on tremendously and she loved that feeling. There were so many and the choices had been endless. It seemed as though every sex act and every fantasy ever conceived had been covered. Flushed with passion while reading, she had caught herself rubbing her thighs together many, many times. \n\nAfter only rudimentary investigation, Elaine had found the part of the site where the best stories were listed, and she'd read and read, beginning with Romance and First Time and moving on to Erotic Couplings then Loving Wives.\n\nWhenever she had a moment she would read an erotic story, loving how it made her feel. The more debauched the story, the more memorable it had been. Some of the stories in Exhibitionism and Voyeurism had her on edge for days, and some of the offerings from the Group Sex and Mind Control categories had been unforgettable. Daydreaming of a random scenario during lectures or at work had become a regular occurrence.\n\nShe loved the stories and if they were well written, she could become completely immersed in them. \n\nOne day it occurred to her that the stories she enjoyed were becoming more and more 'extreme', particularly in language, and she wondered about it. She rationalised that it was 'merely fantasy' and her sensibilities were changing. It was far less confronting to 'read the words' than have them spoken to her. That only happened in her dreams. And she couldn't control her dreams, so that was okay. And anyway, if she didn't like a story, she could simply choose another one. \n\nElaine liked the Internet. Her favourite things about it were the safety and the anonymity. To be able to disappear into the ether was extremely comforting. She could turn on and turn off on a whim, and she felt like she was in control of her admittedly solitary sexual life. Being 'into' erotic stories was okay. Her anonymity was assured. No one would be any the wiser.\n\nFor now, it would have to do.\n\nBesides, she'd found some stories to be quite educational. One story in the Exhibitionism category prompted her to dance naked in front of the mirror in the bathroom after a shower. To her surprise she realised it turned her on to watch herself. Sometimes when she got out of the shower she would turn sideways and watch intently as she caressed a nipple and watched it grow. She had 'pencil eraser' type nipples and they never ceased to amaze her. They were very sensitive and her nipples hardened regularly, embarrassing her and demanding a thick bra.\n\nIf the truth were told, she quite liked her breasts. In bed she could caress them for twenty minutes and barely notice the time passing. Seeing the reflection of herself plucking and twisting her nipples in the mirror was almost like watching someone else perform for her. Either that or watching herself perform. \n\nWhichever it was, it turned her on. She knew if she ever did dance for a lover, he would be happy with how she looked. Her breasts were full, round and smooth and she often wondered what they were doing on her slim, five-foot-five frame. They were perhaps slightly out of proportion and had embarrassed her when she was younger, but nowadays she covered them with loose fitting clothing and sweatshirts. She was pretty sure no one had any idea whether she had a nice body or not.\n\nOf course, during her 'No Vibe' week, she still had to masturbate. She'd grown quite fond of playing with her body, and not doing it was completely out of the question. The two nights that she was alone, she'd read lots of amazing stories, then later fingered herself to a few unsatisfying orgasms. Whenever she denied herself something, like if she swore off chocolate, the one thing she couldn't get off her mind was chocolate. \n\nBy the end of the week, she was seething with the need to feel that buzzing toy taking her over the edge.\n\nElaine enjoyed her time alone in the apartment. Sometimes she contemplated stripping down to her underwear or even getting naked, just for fun, but she'd never done it. She didn't have the nerve. What if her roommates came home and caught her? It would have been worse than when they'd given her the vibrator, and she would have just died. So instead, she'd get a little dressed up, and occasionally leave out the underwear. The idea of being braless or panty-less was way more exciting than being naked. It felt wicked and naughty. Besides, she'd begun playing with her body while in front of the computer, and less layers meant easier access.\n\nIt was Friday and her horrible week was up. Braving the humiliating task of buying batteries, Elaine had bought extra, just in case. When she arrived back home, it crossed her mind that she had no reason not to use her vibrator right away. Her roommates had left a note saying they'd be out for hours, and Elaine was already hot from thinking about tonight all through her classes. Still, there was an element of delicious torture in holding off for a while. With the whole night ahead of her, for the next hour or so she was happy to stew in her own juices.\n\nThere was something about having hard nipples and a squishy pussy that appealed to Elaine on some animal level. Intellectually, it was a bit of a quandary. She felt 'horny' and 'attractive', as though each went hand in hand. She thought she was prettier, more desirable, and more sensual if her body was aroused. She just felt good. It was as simple as that. She liked the feeling.\n\nOnly just last week, on a whim and desiring some human contact, Elaine had registered a nickname and entered the chat room that was within the erotic stories site. She'd chosen the name Naughtygirl and was immediately bombarded with all kinds of disgusting proposals. Finding it a bit confronting, she'd wondered if all the girls were treated the same way.\n\nJust to escape, she'd tried clicking on a sub-room. It was a Hot Tub room and she'd been disappointed. An argument had been going on and if there was a hot tub, she'd seen no evidence of it. She tried changing rooms and went into a Family Role-play room that was filled with daddies and daughters and uncles and nieces. Someone had immediately accosted her, telling her to, \"Call me Daddy and suck my cock!\" Elaine had been shocked and backed out of the chat rooms without replying.\n\nShe'd sat back for a moment and thought about what had happened. Reminding herself that she was on an adult site, consisting of what were generally considered to be 'pornographic' stories, she wondered if she was being a bit prudish. She shouldn't really have expected manners or good behaviour, should she?\n\nThinking about some of the words different men had used 'right to her face' made Elaine blush. Of course, she'd known she was safe, no matter what anyone had said to her. She'd been at home in front of the computer, and that freed her to be, or accept, anything she chose, as long as she kept any personal details private. It had been kind of exciting. She just had to be prepared for it.\n\nSince then she'd visited the chat rooms every other day. She'd even started to think that chatting online was made for her. If she ignored the dickheads, it was fun and she found it all very new and exciting.\n\nElaine made up a whole 'persona' for Naughtygirl, becoming a free and slutty waitress, slightly air-headed, who worked in New York and was being regularly 'fucked' by her floor manager. She decided Naughtygirl always said 'fucked' and never said 'made love'. The ideas she came up with turned her on. Naughtygirl shaved her pussy, and Naughtygirl never wore panties. \n\nElaine felt safe and separate and was smart enough to make something up if any probing questions were asked. Naughtygirl could also say 'no' when guys asked for her email or her phone number, and she found it easy to refuse dates and meetings.\n\nElaine's vocabulary quickly expanded to include such words and 'dick' and 'cock' and 'pussy'. She rarely even thought to say those words, but typing them made her shiver with arousal. Still, when describing 'herself', words such as 'slut' or 'whore' were completely out of the question. She liked to think of Naughtygirl as either 'sensual' or 'taken advantage of', but never a 'slut'. And she really didn't like the word 'cunt' in any kind of conversation. She certainly wasn't going to type it, and as soon as someone called her pussy a 'cunt', the mood would be spoiled and she'd just click out of the room.\n\nOn a couple of occasions she'd wondered if the frank language was one of the reasons she kept returning. Talking to men in ways she never could in real life was appealing. She found some of the conversations made her very wet, and she'd taken to sitting on a folded towel. Naughtygirl 'sucked cock' and was 'fucked hard', and Elaine learned that it wasn't only in stories than men liked to fuck women in the ass. Of course, she let the men think she was actually doing these things with all kinds of 'big fat dildos', but in fact the most she did was lightly stroke her wet, seething pussy. But she didn't mind.",
        "For once she could be anything. Do anything. She could role-play for fun or pleasure, turning guys on and watching them type out their orgasms. She could pretend to suck them and fuck them. The possibilities seemed endless and it was all very safe. No one asked her if she was really like the persona she projected on-line. They rarely asked probing questions with their hard cocks in their hands.\n\nAbout an hour ago a guy had messaged her as soon as she'd logged on. It was a man she had spoken to before and he liked playing with Naughtygirl. He started telling her she was in a nightclub with him and he was toying with her and telling her to do all kinds of crazy things. Elaine had just giggled and shook her head and typed back, \"Oh yeah, baby!\" The guy was very imaginative and she'd sat back and typed 'Mmmmm, Mmmmmm,\" at all the appropriate moments while he spun his erotic tale. When he finally, 'shot his load deep in her ass, right there in the nightclub, ' she was pretty worked up. She'd been imagining herself reaching orgasm at that moment in the crowded bar and typed back, \"Oh God, yes! I'm cumminggggg!!!\"\n\nAfter waiting the appropriate amount of time to 'recover', she hitched up her skirt and gently stroked her pussy, finding herself to be absolutely soaked and coating her fingers with her juices immediately. \n\nIt was very exciting to read the messages he was sending her, telling her to 'finger her pussy harder' and 'suck her fingers clean'. She couldn't wait to get to bed. She glanced at the time and decided to go and play with her vibrator really soon.\n\nShe didn't want to seem ungrateful, so she thanked her cyber-partner and told him she thought he was really good and hoped they could play again. The guy started asking her questions wanting to know all about her and requested a picture so he could imagine her. This was a question she'd deflected a few times already.\n\nThe two pictures of herself on the computer Elaine didn't like. One had been taken down by the shore last year and showed her long dark hair blowing gently out behind her as she stood on the sand. Unfortunately she had been in a bikini and she wasn't showing that photo to anyone in the chat rooms. \n\nThe other was more recent; a close up of her with a girlfriend from home, tongues poking out, showing off her newly acquired shaggy 'bob-style' haircut. She thought it was a good picture to share with her family, but it was too goofy for Naughtygirl. She'd scanned them and e-mailed them to her cousin who wanted to see her new look.\n\nBut instead of showing them to Eight Inch Adonis, she told him she had to go. He asked her when she might be on again and started telling her when he would return so she could synchronise. By now Elaine was starting to feel awkward and just told him, 'Soon!' and clicked off.\n\n\"Mmmmm, such fun,\" she said to herself happily, switching off the computer and leaving her fantasy world behind. Standing, she smoothed her skirt over her hips and straightened the hem, then headed to the bathroom to wash her hands.\n\nShe shook her head at herself, smiling at her reflection in the bathroom mirror. Thinking it over, she was amazed at the kinds of feelings she was experiencing. Who would have guessed that 'Elaine the Homebody' was Naughtygirl, the girl who sucked and fucked and took dildos up her ass? Elaine knew she should have been out having fun with her roommates or at least studying, instead of playing with herself in front of the computer and goofing off. Or jacking off. Or jilling off, or whatever it was called.\n\n\"Fingering my cunt!\" she said aloud, giggling. Her hand flew to her mouth and she stared wide-eyed at the mirror in shock. She whispered, \"I just said 'cunt',\" and giggled again. \n\nWhat is happening to me? she wondered.\n\nIt was just so... wicked! And so unlike her! Elaine had carefully cultivated an aloofness that was utterly transparent to her roommates, but worked well when keeping strangers at arms length. She avoided going out unless it was either absolutely necessary, or to somewhere she thought was 'her kind of scene'. Like a library, coffee shop, or a small party and, on the odd occasion when she couldn't get out of it, to the dance club in the city.\n\nIn real life, Elaine's manner was naturally defensive and few men had the self-confidence to approach her in the first place. Conversely, she told herself she didn't like the pushy type. On top of that, she 'didn't want to meet the wrong kind of guy'. And yet, she wanted to be swept off her feet. She was intelligent enough to recognise the irony. She felt like she was wound into a tight ball of inaction, and didn't know how to break free.\n\nThe highlight of her female-to-male sex-life had been a drunken, after-hours grope in the supply closet at the office where she worked part-time. The job itself was a mindless mail-sorting one, but the hours were good and it did have its benefits. The supply closet incident alone had been enough to give Elaine masturbation material for half a year.\n\nShe sighed deeply and frowned at her reflection while she dried her hands.\n\nPushing her melancholy thoughts to the back of her mind, Elaine returned to her room, reminding herself that she had fresh batteries and a couple of hours before her roommates returned. Nothing was going to dampen her mood when she'd been waiting all week! As she slipped off her robe and lay on her bed, she blushed as she recalled the guy in the chat room ordering her around. She couldn't believe she almost sucked her juices from her fingers! She giggled. She couldn't even remember his name.\n\n\"I'm such a slut,\" she said aloud, shaking her head. She swallowed as she retrieved her plastic toy and reached for the lamp switch. Her excitement mounted. She chose to leave it on. Then she had a crazy thought. She grabbed her small pocketbook mirror from her bag on the floor. \n\nHow dirty would it be to watch myself while masturbating? \n\nShe threw back the sheet and felt a rush of arousal spread over her body as she held the small mirror to reflect exactly what she was doing.\n\nWow!\n\nGoosebumps broke out on her arms and thighs and her nipples pulsed. She'd never looked at herself like that before. It was strange. It was almost like watching someone else. The thatch of fine dark hair on her pussy grew naturally into a cute little Mohawk, and the lips were almost hairless and tucked in. She had taken to shaving the strays around her pussy a few years ago and it was framed nicely in the reflection of the mirror in her hand.\n\nShe draped her other hand gently over her lips and drew up her fingers, lightly grazing over the warm, soft flesh. Tingles rolled over her skin and her eyes glazed in a fixed stare. Spreading her first and second fingers, she drew apart her outer lips and gasped at how pink and oily the inner lips appeared. Drawing up her feet, she bent her knees and watched in fascination as her pussy flowered open. With her legs at a ninety-degree angle, Elaine could see the wet inner lips nestled between the more pale puffy outer lips. She couldn't think how to describe it. It was kind of pretty, but well... she wasn't sure. It was just fascinating.\n\nShe grabbed the spare pillow and arranged it between her legs so she could lean the small mirror up against it. Folding over her other pillow, she leaned back against it, happy with the result. She smiled wickedly. \n\nNOW I'll finger my cunt! \n\nAs soon as she had the sinful thought, she blushed and reached for her pussy with both hands. Again she parted her lips, this time drawing a deep breath as she spread her knees even wider. A pearl of wetness appeared at the base of her pussy.\n\nThat's my hole, she thought. My cunt.\n\nIn the mirror she guided her shaking index finger down to the bead of moisture and drew it slowly up between her lips, groaning at the sight and feel. With knees widespread and her buttocks clenched, her nether lips parted wetly, showing the glistening hot pink flesh within.\n\nMesmerised by the sight, Elaine slowly caressed her fingertip up and down, back and forth between her lips, feeling herself becoming feverish, her skin crawling with voyeuristic pleasure. She arched her ass upward, spreading herself more lewdly as she pushed her finger slowly into the hot velvety tunnel of her pussy. Releasing her now slick outer lips, her left hand reached up to her chest, grasping her nipple and pinching it firmly, just the way she liked. She groaned, wishing she had a larger mirror so she could see all of herself. The thought evaporated and her mouth gaped as she added a second finger and slid them both all the way in. \n\n\"Ohhh, Goddd...\" she moaned, her eyes rolling back into her head. \n\nWithout her maidenhead, she loved the feeling. She was sliding the fingers over her slick flesh and into herself, stimulating clitoris and vagina simultaneously. Thick honey flowed and a large drip was headed down between the cheeks of her ass. She shivered, watching as each pump of her fingers added a little more moisture to the downward trail.\n\nFinally she could stand it no longer and reached for her vibrator. Turning her head she realised barely ten minutes had passed. She almost laughed, thinking it was going to be a long night. Hurriedly turning it to the highest setting, the toy leapt to life in her hands and she shuddered in anticipation.\n\nElaine got comfortable and slid two fingers back into her pussy, hovering the toy over her clit. As she drew her fingers up and out, she spread them, opening her inner lips widely and unhooding her sensitive little pea. She trembled throughout her body as she watched the toy descend agonisingly slowly toward its target. It seemed like the air crackled around her ears as the vibrator and her little pink bud met. Elaine convulsed, her hips rising off the bed as she fought to draw back the toy. Again and again she tortured herself, touching and withdrawing, building higher and higher.\n\nWith knees so wide they were almost touching the bed, she fingered herself quickly, holding the toy to her clit. She gritted her teeth as the pleasure grew and blossomed across her skin, her inner muscles tightening and fluttering in approach to orgasm. She recognised it and tried to stop, oblivion seconds away. With a mighty effort she pulled the toy away and slowed her fingers, careful not to touch her clit. Her body shuddered and she squirmed in protest, moaning hotly. Elaine knew she was right on the edge. Her body shook with need. She was going insane and wanted it so bad. She needed to be free. She needed to cum and cum hard. \n\nTwisting her head, she bit into the corner of her pillow before turning her eyes back to the incredible sight of herself skewered on her fingers. She straightened the slender digits and started pumping them hard. Her back arched and her body caught fire! The vibrator crashed back into her clit, forcing grunts and squeals out of her mouth and into the soft pillow. She was trying not to cum, revelling in every last excruciating second before release. Her ass was high off the bed, effectively tightening her pussy and tripling the pleasure.\n\nUnable to stop herself, her orgasm burst free, sweeping her away into unconsciousness. \n\nThe last thing she remembered before her eyes rolled back into her head, was the incredible sight of her convulsing pussy, squirting juices right at the mirror and her own anguished voice, muffled by the pillow, crying out, \"Fucking my cunt! Fucking my cunt!\"\n\nShe woke up the next morning with a start, wondering what happened. Looking around, she breathed more easily, noticing nothing out of place. Throwing back the bed sheet and remembering little, she was surprised to see she'd even gone to the trouble of putting her panties back on. She pulled open her bedside drawer, finding her mirror and vibrator. She swallowed, thinking the toy had blood on it. She didn't remember fucking it, and certainly not hard enough to hurt herself. She took it out, her breath catching in her chest.\n\nIn sultry red lipstick, someone had left a kiss right on her toy.\n\nChapter 02\n\nSitting on the side of her bed, Elaine looked at the vibrator and her mind raced. If she cleaned off the lipstick, whoever kissed it would know she'd seen it. Would they check? If she left it how it was, could she pretend she hadn't seen it?\n\nShe quickly put it back in the drawer and shoved it closed, accidentally making a banging noise. She hushed the errant drawer, making herself blush. The walls of the small three-bedroom apartment were paper thin, and she hoped neither of her roommates recognised the sound.\n\nUgh, what am I thinking? This is ridiculous.\n\nShe slid the drawer open again and reached inside. Holding the toy up in front of her, she sniffed it to see if it had been washed. It had. Wondering what difference it made, she admonished herself. \n\nSo I used it. Big deal. It's not as if it's earth-shattering news. Get a grip!\n\nBiting her lip, she reached for a tissue to clean off the lipstick. Before she noticed what she was doing, she found her fist wrapped around the inert toy, separated only by a layer of Kleenex, cleaning it off in a twisting, pseudo-jacking off motion. Memories of last night's festivities turned up the corners of her mouth. She brought the toy up in front of her face to examine it more closely. It was all clean and ready for 'next time' so she put it away again, this time quietly.\n\nHopping up from the bed, Elaine grabbed her robe from a corner chair and drew it around herself. It was soft and thick so she didn't have to bother with a bra. After grabbing a fresh towel from the hall closet, she went to take a shower but the bathroom was occupied. She had to see her roommates sooner or later and decided to face the music and make herself a coffee in the kitchen. \n\nTaking a deep breath, she rounded the corner and found Chelsea groaning and tidying up some spilt sugar. \"Can I help?\" Elaine asked.\n\n\"God. Sorry Elaine. I'm all thumbs. We had a big night last night and I feel like shit,\" Chelsea complained.\n\n\"Here, let me do it,\" Elaine offered, deftly cleaning up the mess.\n\n\"Thanks, Elaine. You're an angel.\"\n\n\"It's okay,\" she said, enjoying the praise. \"I don't mind.\" Things were already going better than she'd hoped. She feared finger pointing and sniggering, but at least she and Chelsea were adults. Either that or it wasn't Chelsea who kissed her vibrator. Hmmmm... Blushing and turning her back on her roommate and filling the kettle with water, Elaine asked, \"Um, I was going to make coffee anyway. Would you like one?\"\n\n\"Could you make one for Kendra too?\" Chelsea pleaded, slumping in the kitchen chair.\n\n\"Sure, just relax. I don't know how you guys can go out every weekend and get smashed like you do.\"\n\n\"We're young. We're supposed to, and besides, it's where the guys are.\" Chelsea was leaning on her elbows, holding her head in her hands. Her robe hung open almost to her navel, exposing the smooth, tanned skin of her chest and the inner swell of each breast. After trailing her eyes down to Chelsea's flat tummy, Elaine realised what she was doing.\n\n\"Th... There you go,\" she stuttered, passing Chelsea's coffee to her and staring at the sugar bowl. \"So um, did you meet any nice ones last night?\"\n\n\"Guys? Naaa. Just the usual bunch of dropkicks. I'm sore all over though. We danced all night.\"\n\n\"Sounds like fun.\"\n\n\"Yeah. I guess. Just once I'd like to meet someone who wasn't a complete wimp. Most of the guys we meet are like lapdogs, following us around, hoping for a taste. Either that or they're overbearing oafs. It'd be nice to meet someone who knew what I liked.\"\n\n\"What are you going on about?\" asked Kendra, entering the kitchen with a towel wrapped around her body and another around her head. \"Is that mine?\" she asked Elaine, sitting down and reaching for the spare cup.\n\nElaine nodded.\n\n\"I was just saying,\" repeated Chelsea. \"That most of the guys we meet are just boys. I'd like to meet a man. A real man.\"\n\n\"What? Someone old and wrinkly?\" Kendra asked, teasing.\n\n\"Nooo! God. I just mean someone who knows how to treat a lady.\"\n\n\"Oh, so you're a lady now, are you? You could have fooled me. You didn't look like much of a lady when I poured you into that taxi last night.\"\n\n\"Oh, stop it. You weren't much better. And anyway, you know what I mean.\"\n\nKendra shook her head with a smile and brought her coffee to her lips. \"Well, my idea of a 'real man' is someone cute, muscly, can cry in movies and brings me flowers every time he picks me up. Haven't found him yet, though.\" She turned her gaze to Elaine. \"What about you, Elaine? What kind of man would you like to meet?\"\n\n\"Hmmm... I'd like to meet someone who impresses me. Someone I can look up to and learn from. Someone I can respect. Someone with substance.\"\n\n\"Someone who isn't plastic?\"\n\n\"Um, yeah. Not plastic. Yeah...\" As Elaine blushed five shades of red, she figured it was safe to assume Kendra had kissed her vibrator and was now teasing her about the use of it. Her nipples started getting hard and she was mortified, pulling her robe closer around herself.\n\n\"I think I'm gonna spew!\" Chelsea gasped, standing and running to the bathroom, her hand covering her mouth.\n\nSeemingly unconcerned, Kendra sipped her coffee, eying Elaine over the edge of a cup with a pussycat on it. \"She's a lightweight,\" she said finally, fixing Elaine with a stare.\n\n\"What do you mean?\"\n\n\"Lightweight! You know.\"\n\n\"You mean like a lush?\"\n\n\"Yeah, like a lush, Miss Ohio, 1958. Jeez... You gotta get out more.\"\n\nElaine sighed. \"Yeah, I know. I just don't like the crush and the drinking. The music's okay, I guess.\"\n\n\"And some of the men are just dreamy.\"\n\n\"Chelsea doesn't seem to think so.\"\n\n\"Chelsea wouldn't know a real man if he bit her on the ass.\"\n\n\"Mmmmm.\" Elaine giggled.\n\n\"Mmmmm.\" Kendra echoed, winking and grinning. When the pleasant moment had passed, Kendra leaned forward a little and whispered, \"I hope you didn't mind that I put you in bed and tidied up a bit last night. I thought it might be a bit embarrassing to wake up like that.\"\n\nElaine didn't know why she took the bait, but she did. \"Like what?\"\n\n\"Like, sprawled over your bed, all the lights on, stark naked with a vibrator in your hand.\"\n\n\"Oh.\" The image made her speechless, and wet. God, she even put panties on me!\n\n\"Just wait till I get the pictures developed!\" Kendra teased. \n\nElaine's eyes went wide, and she was about to squeal. \n\n\"I'm kidding! I'm kidding!\" Kendra insisted. \"Jeez Elaine!\"\n\n\"You're mean,\" Elaine whispered, feeling like she was blushing to the roots of her hair.\n\n\"Oh, c'mon. I'm just having some fun with you. You know you like it.\"\n\n\"I so do not. This isn't fun at all. It's embarrassing. And I'd rather not be um, reminded of this... episode either. I'd like to think I have some privacy here, at least in my room! And I can assure you I don't like you making fun of me.\" Elaine was pleased with her response. She rarely got a word in once Kendra started talking.\n\n\"Riiight... . Then tell me the truth. Are your nipples hard?\"\n\n\"What?\" Elaine gasped incredulously, pulling her robe even more tightly around her body.\n\n\"Go on. Tell me!\"\n\nJust then the toilet flushed and Chelsea stumbled into the kitchen. \"I wouldn't go in there for a while if I were you,\" she said, flopping into the chair in front of her cold coffee.\n\n\"Um, it's okay,\" Elaine said, quickly snatching up her towel and fleeing into the bathroom. She didn't mind what the air in there smelled like. She didn't want to answer any more of Kendra's questions.",
        "************************** \n\nChelsea had already gone out the door and Kendra was holding it open. \"We won't be home till after three A.M., so there's plenty of playtime,\" she said, winking at Elaine who was standing in the kitchen doorway.\n\n\"I might invite the football team over,\" Elaine replied, poking out her tongue. She'd managed to spend most of the day in her room studying.\n\n\"A football team would put you in a coma! I'd stick to vibrators. And if I catch you like I did last night, there will be pictures.\"\n\nWith an open mouth, Elaine blushed mightily as the front door closed. It wasn't so much being unable to adequately defend herself that made her embarrassed. It was also things like the wet kiss Kendra blew to her as she left. And the image of Elaine's vibrator in Kendra's hand as she kissed it, knowing where it had been. And of Kendra pulling her panties up her legs and fitting them to her unconscious body. That had haunted her all day. She was just glad she hadn't woken up when Kendra had put her to bed. She would have been humiliated. She resolved to pretend she was asleep if it ever happened again.\n\nKendra wouldn't really take pictures, would she? Elaine wondered. I'd die if she did. I MUST stay in control of myself when I cum.\n\nTwenty minutes later Elaine was writhing on her bed, twisting a turgid nipple between her forefinger and thumb. Wanting more than just the fingers of her other hand sliding in and out of her clasping pussy, she was mindlessly fumbling for the drawer, desperate for her vibrator. Her slippery fingers finally grasped the handle and pulled it open, blindly searching for her toy. Already having crab-walked halfway up the bed in her ecstasy, her head hung back over the pillow that had bunched up under her shoulder blades. With palpable relief, she found her vibe, immediately turned it on 'high' and pressed it against her throbbing swollen clit.\n\nShe hit the roof.\n\nClenching her teeth to keep herself from screaming, for a split-second she wished she put the pillow in her mouth. But it was too late and in an instant she went over the edge in an explosive climax. Her eyes bulged as she strained to keep them open, willing herself to stay conscious. Shudders wracked her body and she strained, trying to contain them. Unfortunately when she did, the pleasure was drawn out almost endlessly. She even had time to change her attack.\n\nShe slid the vibrator into her hot cunt. Yes, it was a 'hot cunt' now. A writhing, twisting haze of countless nerve endings, all firing in pleasure and rolling out across her abdomen, prickling her buttocks and rolling down her legs making them shake. Into her mind came the image of Kendra, topless and holding a camera, flashes lighting up the room.\n\nOver the top she went again, this time enough to make her oval her lips. A whispered low groan escaped before she heard herself. She clenched her teeth again. Willing her eyes open, she looked past her tortured nipple, distended beyond belief between her fingers, and down to her flailing wrist, driving the white toy incessantly in and out of her clenching pussy.\n\nI have to stop, she thought forlornly. This is how it happened last time. Now I remember. I just couldn't stop. Gradually her hand slowed. I can do this. I can control myself. Tearing her fingers from her throbbing nipple, she reached down to turn off the vibe. She sighed with a mixture of disappointment and relief. She could do it. She could control herself. \n\n\"Oh God! Kendra!\" Elaine's eyes shot open, reality and imagination blending for just a moment. She slumped back onto the bed as her fears were allayed. Blushing madly, she shook her head.\n\nWhy does the idea of being caught, even photographed, turn me on? God, almost everything turns me on!\n\nHeading for the bathroom, she left her robe behind. Being nude made her nipples stand up. Sympathetically she gently rubbed the one she'd been pinching.\n\nDeciding on a whim to sit at her computer naked, Elaine folded a towel and placed it under her ass before booting it up. Connecting to the net and heading for her favourite chat room, she hadn't been there five minutes before someone called MasterServant messaged her.\n\n\"Good evening to you.\"\n\n\"Hello,\" Elaine typed back, thinking this man at least had manners.\n\n\"I've noticed you here before.\"\n\n\"The nickname?\" Elaine glanced an inch to the left where her nickname, Naughtygirl, sat proudly.\n\n\"Yes. It's intriguing.\"\n\n\"I'm really nothing like my nickname,\" Elaine typed, adding a smiley face with its tongue sticking out. She hoped he thought she was being subtle and flirty. For some reason this man made her heart flutter.\n\n\"I know,\" he typed back, halting her in her tracks.\n\n\"What do you mean?\" Elaine asked, suddenly wondering if this man was more dangerous than she had previously assessed.\n\n\"Just that in general, people on the net either describe themselves honestly, or they make things up. Something like a series of wish lists, rather than reality. I'm guessing Naughtygirl is your assumed persona.\"\n\nElaine gulped. Was her profile so obvious? She clicked on it and read it quickly. It looked okay, maybe a little exaggerated. Nothing like her really, but she enjoyed being Naughtygirl and she felt like she was her, in a strange way. So she felt justified when she went on the attack. \"Are you questioning my honesty?\"\n\n\"I am not judging you on that basis. It's something people do. It's a free country, but I like to know if the person I am talking to is a player or a real person. Don't get me wrong, you are allowed to be a player. I'd just like to know. In other words, if you really are blonde, 22, 115 lbs, a 36 C, fun loving, a bit ditzy, and you love all kinds of sex, then I'd like you to tell me so.\"\n\nBy the time she'd finished reading his message, Elaine's heart was beating hard. She couldn't make her hands type. Almost a minute passed by as she read it over and over. Suddenly another message flashed up on the screen.\n\n\"I didn't mean to freak you out. I apologise. I'll go.\"\n\nShe was typing to him, asking him to stay, when he disappeared from her screen. Elaine's jaw dropped.\n\nHow could he so easily see right through me? I should have told him to fuck off.\n\nShe found the conversation unsettling and didn't feel like chatting any more. After turning off the machine, she laid back in her bed, tossing over in her mind whether or not to masturbate. She didn't feel like that either, which was a bit unusual given she had plenty of time. She glanced at the clock then put away her vibrator. Picking up a book from the bedside table, she began reading something by Nietzsche. She wasn't into it.\n\nI could have been ignoring him. Or talking to someone else, she thought, trying to justify her silence and hoping the strange man wouldn't go around blabbing that she was fake. I'm allowed to ignore him if I think he was rude, aren't I?\n\nShe was sure he was being rude, asking questions the way he did. Or at least she was justified in thinking he was, and then ignoring him. Yes, she thought, that's my story.\n\nPutting down the book, she pulled on her nightie and switched out the bedside light. Lying on her back with her head resting on a soft pillow, she stared at the ceiling, wondering if she was cheating herself by separating her real life from her online life. It 'would' be more exciting if someone were interested in ME, rather than some air-headed waitress with big hooters, she thought. She wrinkled her nose. But it was fun being Naughtygirl. It was also underhanded. She was fooling the men she was with. It was certainly no way to start a real relationship. Was she once again subconsciously keeping herself from doing that? She sighed and reminded herself that most of the men in the chat rooms were dickheads anyway.\n\nMasterServant didn't seem like a dickhead though. Maybe he was a bit pushy, and annoying with his clever and incisive words. But what about his name? Was he some kind of an expert servant or something? Like a butler? Yeah right. Elaine realised she hadn't even read his profile.\n\nShe had seen couples in the chat rooms. One girl's profile said she had been with her man for two years and hoped one day to meet him in person. At the time Elaine thought the idea was ridiculous, and definitely not for her. Surely they'd get bored, she imagined. Tossing and turning, sleep seemed to elude her.\n\nMaybe I could make up another nickname. Something closer to the truth... something that I can at least defend vigorously if I'm ever asked questions like that again. It wouldn't hurt. I should give it a whirl. And maybe I'll get less of those vulgar messages Naughtygirl always seemed to get.\n\nShe smiled at the thought, and her eyelids suddenly felt like they weighed a ton. In minutes she was asleep.\n\n****************************** \n\nBeing honest will make you more vulnerable.\n\nElaine's conscience was trying to talk her out of the idea as she booted up her computer and headed for the chat rooms. The other girls had left to go Sunday grocery shopping and she was glad it wasn't her turn. She woke up remembering exactly what she had planned and after a late breakfast she found herself sitting in front of her computer, logged in, and clicking on the link titled, 'Make a New Nickname'.\n\nShe tried lots of combinations, hoping to pick something attractive that suited her. Everything she came up with was either depressing or boring. Or funny, which missed the point of making a new name. She was about to give up when it dawned on her.  \n\nkurious.\n\nThe 'k' made her a bit quirky, which she was, with her weird attraction to candles and sandalwood, not to mention her anti-designer dress sense. Well, except for lingerie. She had a definite liking for anything that made her feel sexy. Concealed lacy underthings certainly did that. Also, she wanted to say she was shy, thus she changed the first letter from a capital to a small one.\n\nAlso kurious spoke of her nature. She was curious. Very curious. About lots of things. She kept her profile simple and to the point. She hoped it sounded sexy enough to at least get her a few nibbles.\n\n'20-year-old college girl, passing time but not wasting it. Not looking for anything specific, just friendly people. Open-minded, a bit shy, and yes, curious. Message me if you are genuine.'\n\nAs she clicked 'Accept', she thought, 'In for a penny, in for a pound'.\n\nWhen she entered the chat rooms under her new name, she was unnoticed by those who usually greeted her. A few people welcomed her and one even asked if she'd been there before. \"Not really,\" Elaine replied. She ignored one idiot who sent her a private message asking her if she was curious about his ten-inch dick. He probably has a cock the size of a thimble, she thought, remembering MasterServant's words.\n\nUntil then, she hadn't given much thought to 'honesty on the net'. For some reason she felt oddly proud of herself. kurious was her. It was kind of liberating, not having to maintain a persona. And much easier to remember what she had said to whom. People seemed much nicer to kurious.\n\nElaine thought she'd had a nice time, just talking to people and ignoring the rude ones. She figured it cut both ways and she blocked people who were out of line. It was a sedate visit, but also satisfying. She felt better about the person she was projecting on the net, and therefore felt better about herself. In less than an hour, all the regulars seemed to like her 'just as she was' and asked her to come back soon. As she was preparing to leave, MasterServant entered the lobby, greeted a couple of people, then slipped into a chat room called The BDSM Room.\n\nStrangely, Elaine's heart raced. She wanted to follow him and talk to him some more. At least this time she could argue that she was exactly like her profile described. But then he'd probably guess it was her. She'd be caught, and he'd be proved right. The scenario didn't appeal to Elaine at all. Maybe he would notice her again some day and she could just start over.\n\nOh well, she thought as she clicked out of the chat rooms and opened a paper she was working on. Her determination didn't last long. She didn't much like the Accountancy class she was in, and soon found she wasn't in the mood to study.\n\nWith a sudden thought, she opened an Internet page and typed in the URL for Google and hitting return. Elaine typed BDSM in the query box and waited a moment for the search to be processed. Her eyes widened as she read the first choice Google had selected for her. She glanced up to the corner of the page and she was shocked to see five and a half million results had been generated. \n\nFive and a half million?\n\nShe swallowed and reread the first 'hit'. \n\n\"Spanking and bondage?\" Elaine asked aloud. \"What the hell?\" The second 'hit' began with a definition, but she only could read a few lines then it stopped mid-sentence. She'd have to click on the link to see the rest. Her cursor hovered over it as she quickly read down the list of results. They all sounded similar.\n\nClick.\n\n************************** \n\nElaine checked her watch and realised she'd been following links and reading voraciously for two hours. So many things had caught her eye. It was amazing. Like a whole new world had opened before her. She never knew any of this even existed. Well that wasn't exactly true, but almost everything she had known was wrong. People didn't just beat on others for a thrill without the others consent. In fact, from what she'd read, very little at all could be done without someone's consent. First of all they'd have to consent to what was going to be done, then it would happen. She hadn't thought there was any structure at all.\n\nElaine knew the terms masochist and sadist. She knew they were names for the 'fetishes' of real people. She just figured that for some sick reason, there were people who actually liked being beaten on, so they sought out people who liked beating. It had all seemed quite unimaginable before she'd begun reading.\n\n'Spanking' had done it though. Well, 'Introduction to Spanking' actually. When the list of articles popped up on her screen and she read down the headings, her jaw dropped and her heart rate accelerated. When she got to the end of the list, her eyes settled on the one titled, 'Introduction to Spanking'. Elaine could feel her cheeks starting to burn as the humiliating image of herself draped over Kendra's lap and receiving a spanking passed across her blurred eyes. Her nipples tingled and screwed into hard little points. Clicking the link and trying to breathe normally, she realised she was wet between her legs.\n\nWith refocussed eyes, Elaine consumed the text and was surprised by the amount of it, the attached advice articles, and the quality of the information. And it was all on a relatively large and apparently respected site.\n\nThere weren't any pictures though, but Elaine didn't mind. The pictures in her mind were enough. \n\nSpanking and bondage, flogging, tickling, foot worship, caning, which she did NOT read about. Limits, contracts, play parties, dominants, submissives. The list was endless. She was fascinated in a voyeuristic kind of way. It was just 'stuff she didn't know'. That's all. Or at least that's how she justified spending two hours reading about it.\n\nAfter all, she was kurious.\n\nChapter 03\n\n Elaine enjoyed being kurious. She could be true to herself. That's what she liked most. The shy, mild-mannered virgin was much closer to her heart than the loud, slutty Naughtygirl. Whereas Naughtygirl 'took it up the ass with glee', kurious was more interested in actually getting to know people.\n\nShe decided to 'retire' Naughtygirl. She didn't think she'd be missed, despite the attentions of Eight Inch Adonis and others. She was right. No one ever asked about her. Being right didn't make Elaine feel good. Just cheap.\n\nThe nature of her relationship with the Internet changed almost overnight. As Naughtygirl, to begin with it was like going to a great big party. Everyone was friendly and welcoming and the guys were hot for her. Now she saw Naughtygirl as one of the girls who 'put out' at a party that happened every week. It just wasn't the same. Briefly contemplating the 'throw-away society', she decided that being a slut, even online, wasn't much fun.\n\n\"Knock, knock!\" Kendra said in a singsong voice, tapping on Elaine's open door with her fingernails and pushing it open. \"We're going now. Are you sure you don't want to come?\"\n\nThe tone of the question convinced Elaine to hold her ground. They made her feel uncomfortable, as though they were putting up with her. Being a glorified taxi driver for giggling roommates was highly overrated. \n\nBut it did make sense. They saved on taxi money. Maybe it was all in her head, but Elaine always felt like a burden when she went out with Kendra and Chelsea. As though she cramped their style. She always seemed to be the one left watching the purses. And by the end of the evening she'd be sitting alone at their chosen table, watching her roommates have 'one last dance' with men at least as drunk as they were. It usually took an hour.\n\nThe worst part was actually trying to leave. Being the designated driver could be incredibly frustrating, and neither of her roommates was sober enough to care. Right in the parking lot Chelsea and Kendra would kiss and cuddle a seemingly endless procession of guys. Elaine could only shake her head watching the sly ones rejoin the end of the queue. Waiting inside the car was safer. She didn't want to be mistaken for a kissing booth attendant. But Chelsea and Kendra didn't seem to mind. As 'regulars', they knew everyone. Even with a headache, Elaine would wait patiently, fucking around with the radio and trying to find something that would distract her at two-thirty in the morning. After two such evenings in a row, Elaine had decided she needed a break from Spotlight, the local nightclub.\n\n\"Thanks, but no. I have a few things I want to do tonight. You guys have fun.\"\n\n\"Oh, we will. Maybe I'll see you later, if you're up... or not,\" Kendra said with a sly wink.\n\nBy the time Elaine realised she was blushing her bedroom door was closed. \n\nThe 'lipstick on the vibrator incident' fortunately hadn't been mentioned during the week. Chelsea seemed oblivious. Conversely, Kendra had apparently begun flashing Elaine. Well, not flashing exactly, although she had seen most of a nipple. It was almost like Kendra was teasing. Elaine had no idea why.\n\nThe words Kendra had chosen were the first referring to Elaine's masturbation session and humiliating discovery. Once her heart had calmed, she was a bit pissed off at her roommate. \n\nCouldn't she just leave it alone?\n\nElaine swallowed, remembering how Kendra had stepped one leg out wide as she stood up from the kitchen table that morning. Her robe had parted clear to the top of her thighs, exposing the stretched white cotton over her bulging mound to Elaine's stunned gaze. \"Oops! Oh, jeez... Elaine,\" Kendra had whispered, a wicked smile playing at the corner of her lips. \"Must you stare?\"\n\n\"Hmmm?\" Chelsea had asked from across the table. Thankfully she'd been blissfully unaware, as usual.\n\n\"I asked Elaine to join our dare,\" Kendra replied cheerfully, betraying herself with a wink.\n",
        "Looking at Elaine, who was blushing fiercely, Chelsea asked, \"So you're going to join us? It's gonna be so fun!\"\n\n\"Um,\" responded Elaine, wondering what crazy stunt the girls were pulling.\n\n\"Yeah, c'mon, Elaine. No panties for a week. You can do it. Or are you too chicken?\"\n\n\"No way. I'm not walking around campus without panties, no way, no how. You guys do what you want, count me out.\"\n\n\"Aw, c'mon, Elaine,\" whimpered Kendra, swinging her left knee side to side. Flashes of white confirmed to Elaine that Kendra was doing it again, but she dared not look. Chelsea couldn't see anything from where she was sitting, and Elaine had no idea what to say.\n\n\"I don't think so,\" she finally croaked, standing and pushing in her chair. She was determined to escape the feeling of being trapped. \"It'd be too embarrassing. I... I gotta take a shower.\" With that, the strangest moment of the week had passed. \n\nLast Wednesday evening Kendra had the nipple slip incident while they were all watching Desperate Housewives, but that it for the flashing. Maybe Elaine was imagining it. She felt sure that Kendra was pushing her buttons, trying to make her react or something. Elaine remembered the question Kendra had put to her last weekend, the morning after the vibrator episode. 'Are your nipples hard?'\n\nElaine sighed. Of course they had been. They were hard on and off most days. That wasn't unusual. What was unusual was Kendra's direct manner. The first semester of living together had been completely uneventful. She'd never put Elaine on the spot like that before, and Elaine hadn't liked it, no matter how hard her nipples were. But what Elaine found most disconcerting, was Kendra's apparent ability to nail her on the humiliation thing. What had she said, Elaine wondered, frowning and trying to remember.\n\n\"Oh, c'mon. I'm just having some fun with you. You know you like it.\"\n\nThe words rang in her ears. \n\nShe sat forward in her computer chair and typed in the URL for the story site she liked. She wondered why she hadn't thought of this before. When the site popped up on her screen, she looked down the list of links, looking for a 'search' function. She found it and clicked, being transported to a page with various alternatives to narrow down her search. At the bottom of the page was a simple 'keywords' search and she typed in 'embarrassment', and pressed return.\n\nHer heart started beating hard when she was presented with no less than one hundred and ninety-one references to 'embarrassment' in the stories posted on the site. It wasn't long before she was naked, leisurely stroking her sex while her turgid nipples ached. Some of the stories were horrible, forcibly humiliating a girl against her wishes. They were... well, mean. And nasty too, some of them.\n\nThe best ones seemed to be in the BDSM category. She came across one story about an older woman, about thirty-five, who wanted to do all kinds of things but couldn't unless she was told. If she were told, she could obey, effectively shifting responsibility for her embarrassment or humiliation to the man who ordered her to obey. She wasn't 'bad', or 'nasty' or 'loose' or 'slutty'. She was just 'obedient'. She just did as she was told. Then she could live with the pleasure such situations gave her. She felt free, unshackled from her tormented past, free from the guilt she had felt when she fantasised about these things.\n\nAnd she had intense orgasms. \n\nElaine could relate. But she couldn't see how she could possibly be surreptitiously masturbated in a museum without causing a riot.\n\n\"Hmmm, no panties,\" Elaine murmured to herself, tracing the lips of her wet pussy with a fingernail. \n\nIn most of the stories the women, as they were almost invariably women, went without underwear. The thought of being the only person in a room without underwear warmed Elaine to the core. Protagonists in the stories answered so many of the questions she had. 'Couldn't anyone tell? Couldn't they smell pussy? Wouldn't her nipples get painfully hard and take ages to go down?'\n\nElaine rolled her pink tongue around her dry mouth and swallowed nervously. Fuck, I'm so horny. She was only half way through the story of the thirty-five year old when she looked up and realised the author was MasterServant.\n\nShe blinked with surprise. Biting her lip, she bookmarked the story in her 'favourites' and clicked on the author's bio page. Ripples of tumult attacked her stomach and her clit throbbed as she crossed her legs. Fingers shaking, Elaine's jaw dropped when he mentioned his hometown. She couldn't believe her eyes. It was two towns over, maybe a thirty to forty-minute drive.\n\nThat was close. She hadn't realised she was squirming. Stilling herself, she opened his submissions page. There were about thirty short stories there, most of which came under the BDSM category. Reopening his bio in a new page, she read every word over and over. His name was Gary. He didn't give his surname. He was thirty-four years old and had been involved in 'the lifestyle' for six years. Speaking honestly, he went on to mention how he had struggled with his role in Dominance and submission, and was seeking a sensual woman who was willing to learn how to please him. He said he was unmarried and currently single, 'but that might change'. He directed those who wished to contact him to use the email link provided.\n\nThere was no way Elaine was going to write to him when he lived that close. He could be crazy, or a psychopath. She giggled nervously. She didn't think he was. He sounded like a Dominant, but she wasn't sure. He hadn't said it straight out. Reading the bio again, she caught the words, 'willing to please me'.\n\nAhh, she thought, a light switching on in her brain. So he IS a Dominant. It was exciting to have a Dominant so close by. And scary.\n\nNo it's not, she thought, clicking his bio page closed, revealing the page underneath listing his stories. I'm safe. I'm anonymous.\n\nShe started at the top of the page and read eight stories that night. By the fourth story, she had to stop and masturbate. By the fifth story, she was almost constantly shaking. After reading the sixth story, about a spanking, she had retrieved her vibe and teased herself with it at her computer. A first for her. By the end of the eighth story, she was masturbating openly while reading, imagining being tied up and toyed with, like the character in the story.\n\nHe was an excellent writer. He described things so well, especially the woman's fears and doubts. In the stories, his men were reassuring and firm, loving and demanding. Elaine liked every word that came from his talented pen, but she liked the men he described the best. They were at times tender and forgiving, and at others so hard and unyielding. And they were lovers. His descriptions made Elaine cream.\n\nAt the climax of the eighth story, where the submissive was being fucked while her arms were bound behind her back, Elaine gritted her teeth. She desperately wanted to finish the story. The girl hadn't been allowed to cum. Elaine was sure she'd be allowed before the end. She had to be. It would be too cruel to deny her after all she'd been through. Besides, Elaine's hungry pussy was spasming in frustration, perspiration dripping down between her breasts. With shaking hands, she continued to tease herself, touching her vibe to her clit in the same way the man in the story was doing. Teasing. Tormenting.\n\nShe was as determined as the girl in the tale. She wouldn't cum until she had permission. Once she had permission, she could cum. She could cum hard. As hard as she wanted. A terrible knot of anxiety would itself around her stomach, her asshole beginning to twitch as she was bearing down on the last few lines of the story.\n\nSurely he won't deny her. Surely!\n\nHer anxiety leapt into her throat as the girl squealed with need against his instructions to be silent, and Elaine almost moaned aloud in frustration.\n\nPlease! Please! Let her cum! Let ME cum!\n\nTwo fingers were pistoning in and out of her flooded and throbbing pussy, her vibrator on high and hovering so close to her clit she could almost feel it. At last she read the words that told her it was all right. It was all right to be turned on beyond anything she'd ever felt. It was all right to wish it were she on the bed, tied up and blindfolded, teased and caressed beyond belief.\n\n'Hold it, hold it... Now cum!' she had read.\n\nElaine's vibrator crashed into her clit as her fingers impaled herself deeply. A moan began in her chest, shattering the silence, sounding like nothing she'd heard from her own lips before. Her hips began bucking as her orgasm consumed her. Throwing back her head, her body went rigid, caught in time, suspended for long seconds before finally the world around her collapsed inward. From far away she could hear herself cursing, her body thrashing like she was having a fit. The last thing she remembered was feeling her belly heave in abject pleasure as another orgasm, much larger than the first, crashed over her. She bore down on her wildly contracting vagina as a clear silky liquid sprayed from her sex. Elaine's eyes had rolled to the back of her head and consciousness was lost.\n\nSomehow she managed to awaken before her roommates returned home. Blinking under the harsh desk light, she was glad she was uncomfortable in her chair, doubting she would have woken had she been in bed. \"Oh my God,\" Elaine exclaimed aloud, remembering the mess she'd made. And the smell! Her bedroom smelled like hot cunt! Elaine giggled, then gasped at the sound of the front door noisily opening and closing. Oh, no! She grabbed her perfume from the top of her chest of drawers, sprayed it quickly around then flicked off the desk lamp before hurriedly throwing herself into bed.\n\nHer heart beat loudly in her chest and her breathing was ragged. Pulling the covers up under her chin, she held her breath, hearing the girls giggling all the way down the hall. Nails tapped quietly on her door and the handle turned.\n\n\"Elaine!\" Kendra whispered as the door pushed open. \"Yoohoo- awwww. She must be asleep.\"\n\n\"Like ddduh,\" said Chelsea, slurring her words. \"The stupid light isn't even on.\"\n\n\"Good work Sherlock,\" said Kendra, both girls giggling again.\n\nElaine was so relieved when the thin sliver of light by the door started to shrink. And she couldn't believe she'd almost been caught playing with herself at her computer. Naked! Adrenaline pounded through her veins. Just then the door stopped closing.\n\n\"Can you smell something?\" asked Kendra.\n\nElaine heard someone sniff loudly.\n\n\"It smell slike pushy,\" said Chelsea drunkenly.\n\n\"Mmmmm,\" said one of them, causing stifled laughter and hushes.\n\nElaine's cheeks burned. How was she going to live this down? When her door finally closed, she reached up and set her alarm for early the next morning. She was not going to be embarrassed again. She would clean and scrub till her hands were raw before either of them arose. Maybe they'd been too drunk to remember. Chelsea sounded like she'd had a big night and she was a 'possible'. Swallowing, Elaine realised Kendra had sounded quite sober, and would no doubt have more comments to make, especially if Elaine failed to air her room and scrub the carpet. How humiliating, she thought, setting the alarm a half hour earlier. She'd do such a good job no one would be able to tell and she could deny everything, saying they imagined it. She wrinkled her nose. It really did reek, even after the perfume.\n\nYou're a squirter, she thought to herself, lying in bed. Remembering something MasterServant had mentioned in one of his stories, she rearranged the thought. 'This girl' is a squirter.\n\nElaine had thought she'd 'squirted' last weekend. There wasn't much evidence. Her bedclothes had a wet patch but she was always juicy, so that wasn't out of the ordinary. She had wondered how much 'cleaning up' Kendra had done. But she hadn't asked her. That would have been, ugh. Yuck.\n\nBut the proof was in the pudding. She'd really done it this time. Just as she'd felt that incredible second orgasm hit, something twisted and seized inside her, clamping down hard. Her fingers had been in her pussy, two of them, deeply. She hadn't had time to be astonished at what happened next. Almost simultaneously her pussy had sprayed its payload in all directions and she'd lost consciousness.\n\nShe'd have to visit that website again; the one that described the sexual/medical conditions, and find out about it. And she wanted to know if it was normal to tighten up as much as she did. Her fingers were still sore.\n\nShe fell asleep.\n\n**************************** \n\nThe next morning was April the twenty-ninth. Elaine had woken with a start, thanks to her shrill alarm clock. She turned it off quickly, but she doubted her hung over roommates would have heard. She bounced out of bed and was a little surprised by how weak her legs felt. Her jaw dropped as she approached her computer, pulling on her robe and tying its sash. There were 'water marks' everywhere. All over the desk, keyboard and monitor. Under and behind her desk was a mess, but she was pleased to see the carpet hadn't stained.\n\nElaine snuck into the hall and down to the kitchen on tiptoes, her heart fluttering. Passing by Kendra's room, she was relieved to hear her blissfully snoring. She retrieved the cleaning products she required and returned soundlessly to her room. As a precaution, she checked that her computer was still functioning. She was pleased to see it was. Unplugging it, she set about cleaning up the mess she'd made.\n\nShe was almost done, just giving the skirting board a final wipe, when she heard someone say something and she jerked, bumping her head on the underside of the desk. \"Owww,\" she complained, rubbing it. \"You startled me!\" Backing out on hands and knees, her robe caught on the leg of the desk and in a second had revealed her ass to whoever was behind her.\n\nIn a flash she'd emptied her hands and made it to her knees, blushing furiously and fixing her robe. Kendra was standing over her. Elaine's nipples tightened on her flushed chest as she pulled at her robe.\n\n\"Nice view,\" said Kendra condescendingly, her hip cocked and arms crossed. \"I just came in to ask if you've seen the Spray 'n Wipe,\" she giggled. \"I can't seem to find it anywhere, and stupid Chelsea didn't make it to the toilet again.\" Elaine couldn't find her voice to respond. \"Ah,\" continued Kendra. \"Here it is.\"\n\nShe leaned down right in front of Elaine to pick up the pump-action bottle, her robe falling away from her chest, revealing more and more of her cleavage. She kept her eyes on Elaine's the whole time, and Elaine couldn't help but glance. When Kendra leaned up and held out her hand, offering to help Elaine from the floor, the kneeling brunette took it gratefully.\n\nBoth on their feet, Kendra held on for a moment, whispering, \"I'm glad you chose to join our dare. It's today till next Friday. First one to buckle has to run the stairs naked at midday on Sunday.\"\n\n\"I... I...\"\n\n\"Yes, I know you're excited. You always are, aren't you Elaine?\" Kendra teased, glancing at Elaine's nipples, made turgid by the rush of humiliation. Holding the bedroom door as she exited, Kendra turned and raised her eyebrow. \"I hope you're not turning lezzie on us.\"\n\n\"No!\" cried Elaine, just a little too forcefully. \"No. I... I'm not.\" Her cheeks were so hot.\n\n\"Okay,\" Kendra sang, winking. \"Just checking.\"\n\nElaine wanted to cry. Kendra seemed to be invading her space and she didn't know how to complain about it. She couldn't find the words, not with her standing there. Not with what she already knew. Grabbing a fresh towel, Elaine ran to the shower and washed quickly. She was glad it wasn't a hair-washing day. Flashing her ass at Kendra seemed worse than last weekend. This time she'd been caught in the act. Her pussy was so wet she couldn't believe it. When she was done, she unhooked the shower rose and pointed it at her stiff little clit while she rolled a rock hard nipple, bringing herself off in less than ninety seconds. She had to. She couldn't have stood the pressure. She didn't think she squirted but she wasn't sure.\n\nStanding in front of her chest of drawers, Elaine had selected a pair of plain hipsters and hesitated, staring at them. As if on autopilot, she returned them to the drawer, picking up her small frilly white bra, hooking it in front of herself before twisting it around and fitting it. She shook her head. \n\nIt won't be hard. It might even be fun. \n\nIf I'm going to do this, I better not pick something that might stain. My black jeans should be okay. God, they're a bit tight though. And it's a bit hot out for them. Oh well. \n\nAdding a navy blue Green Day t-shirt with pink flip-flops, she gelled her hair roughly. Light pink lipstick completed the look. All was well.\n\nShe needed to go get milk and bread. And batteries, she remembered. Pulling her bedroom door closed behind her, one of the girls must have heard and called out, \"Hey, Elaine! Come here!\" The voice came from Chelsea's room down the hall and Elaine followed it. Kendra and Chelsea were sorting through Chelsea's clothes, and Elaine stood in the doorway.\n\n\"We're deciding what we can wear for the rest of the week,\" Kendra said, eying Elaine up and down.\n\n\"We're doing Kendra's next. Do you want to help?\" Chelsea asked.\n\n\"Ah, no. It's okay. Do you guys need anything from the store?\"\n\n\"Oh, c'mon, Elaine. Kendra said you were in on the dare. It'll be fun!\"\n\n\"You are in on the dare, right, Elaine?\" Kendra asked, a glint in her eye.\n\n\"Um, you mean... yeah. Yeah, I'm in.\"\n\n\"So you're not wearing panties, right?\" asked Kendra. Chelsea giggled.\n\n\"Nope,\" stated Elaine confidently.\n\n\"You have to prove it,\" said Chelsea, giggling more and picking up the edge of her summer dress, lifting it to her hips.\n\nElaine averted her eyes and swallowed, trying not to look. \"Just take my word for-\"\n\n\"Checking is allowed at any time,\" stated Kendra firmly. \"And we're picking out clothes. The rule is you have to wear what you normally wear. A full set for the week is chosen, and you can wear them in any order or combination. Cold weather means 'apartment meeting'. Still in?\"\n\n\"Um, okay.\"\n\n\"Cool!\" said Chelsea, returning to her closet.\n\n\"Come on then, unzip and prove it. We haven't got all day.\"\n\nMeekly Elaine stepped into the room, feeling her chest tighten as she reached for the button on her jeans. \"You can't see a panty line,\" she mumbled to herself.\n\nChelsea poked her head out. \"C'mon Elaine, be a sport. It's nothing either of us hasn't seen before!\"\n\nKendra snorted.\n\nElaine tried hard not to hyperventilate. Did Chelsea mean they'd both seen her that night? She unzipped halfway and pulled her jeans waistband out and down at the side while Kendra peered closely. \"Okay, she's legit. It's game on.\" Sighing and tucking in her shirt again, she was mortified when Kendra spoke. \"Don't you want to check me?\"\n\n\"No,\" Elaine almost gasped. \"Ah, it's okay. I believe you.\"\n\n\"I thought you might. Oh, and we voted on a new rule. Loser gets a Brazilian before they do the stairs run.\"\n\n\"Y... You're kidding,\" Elaine managed, her mouth dry.\n\n\"Nope,\" said Chelsea, emerging from her wardrobe with an armful of short skirts and t-shirts. \"We already voted.\"\n\n\"You're on,\" Elaine said, feeling more false bravado than she'd ever had. She had to make sure she didn't lose, but for now she just wanted to get out of there.\n\n\"Cool,\" said Kendra with a wink, handing Elaine a ten dollar note. \"Can you get me some cigarettes while you're at the store?\"",
        "\"You don't smoke!\" Elaine said, immediately realising how childish she sounded.\n\n\"I'm going to mix the tobacco with some pot I have. Chelsea and I have some dates coming to pick us up before we go to the club tonight. I thought I might roll a couple of joints and I don't want the guys getting too high. Okay, Mom?\" Kendra asked, glaring, but with a hint of humour.\n\n\"Uh, yeah. Sure. Sorry.\"\n\n\"And while you're out we'll sort through your clothes. You can check and change anything before you accept your week's wardrobe, but it has to be what you'd normally wear.\"\n\n\"Yeah, sure,\" replied Elaine. \"Whatever.\"\n\nThe short walk down to the local store didn't take long. Elaine's apartment was in a building of sixteen, all of which were identical or mirror images of each other. On one side of the four story building, a wide roughly square concrete and stainless steel staircase wound its way to the ground. The girls lived in a complex of four such buildings, all of which had staircases facing a central courtyard-type area. It was standard 'on campus' living quarters. Elaine didn't like it much but she couldn't afford to move out. Still, it was convenient and central to the bright lights of downtown.\n\nThe 7-11 was only a two-block walk from the apartment, but it wasn't considered safe at night. If it weren't daytime, Elaine wouldn't have risked it alone. Although it had been a year since the last reported incident, there were always rumours. But nothing usually happened.\n\nExcept when she passed the adult shop. As she always did, Elaine wondered what it might be like inside. Thoughts of all the things they must have in there made her nervous and curious. Every time she passed by she dared herself to go in and take a look, but she could never find the courage. Good girls didn't do that.\n\nThe woman at the 7-11 checkout counter smirked. It was the same one from last Wednesday, thought Elaine as she reddened, paying for her groceries. And batteries. God, did I break a mirror or something?\n\nAt least she remembered Kendra's cigarettes.\n\nChapter 04 \n\n Leaving the store, Elaine stepped off the kerb and blinked in surprise. With the added length in her stride as she stepped down from the gutter to cross the road, the seam down the middle of her jeans parted her labia, pressing more firmly against her clit. She hoped she wouldn't chafe. Shorter steps lessened the pressure, but lengthened the walk. She rued the couple of extra pounds on her ass left over from last winter. Her jeans felt like a hand holding her crotch. Combined with the rhythmic undulations of her hips as she walked, she was quickly taken to the next level of sexual arousal. Her breath quickened, her cheeks flushed, and goose flesh broke out on her arms in the warm sun.\n\nShe passed one guy who noticed. His eyes lingered between her legs as he walked in the opposite direction. Elaine hated those unsolicited hungry looks. He mumbled something that sounded like, 'camel toe, ' but she wasn't sure. Whatever it was it didn't make any sense anyway. Without acknowledging him she continued walking straight past, staring petulantly ahead, safe behind her dark sunglasses.\n\nShe glanced over her shoulder and confirmed he wasn't following her. Breathing again, she stopped a moment to catch her breath, her thighs lightly trembling. It was the second time she'd 'stopped for a minute'. When she finally felt ready to face the last hundred yards home, Elaine realised she was only two doors from the Adult Emporium. Hesitating, she quickly glanced up and down the road, then snuck inside as butterflies took flight in her stomach.\n\nOf course it was dingy and lit with fluorescent globes, one of which was flickering. Elaine put her sunglasses on top of her head and wandered around trying to calm herself.\n\nBreathe! Breathe!\n\nShe'd never seen so much porn. Glancing around, it appeared she was alone in the store. There wasn't even anyone behind the counter. As casually as she could, she walked down an aisle, scanning all the lurid titles and covers of pornographic magazines, then videos, and finally DVDs. Within a minute they all looked the same and Elaine wondered how someone picked out something they liked. The thought didn't get the chance to gel before she noticed a large toy cabinet against the back wall. Intrigued, she made her way over and found to her delight that there were two large standing cabinets, and one waist-high display cabinet containing BDSM gear. Elaine leaned down to get a closer look. While turning her head sideways to read the text written on the packaging of one product, someone suddenly materialised before her.\n\n\"Can I help you, dear?\"\n\nElaine's heart jumped. The last thing she expected was a woman in her fifties wearing a smart white button-down blouse over a navy blue straight skirt. She could have been working in a drug store. The jewellery was a little gaudy, certainly not Elaine's style, but with her wide smile and open face, Elaine felt welcome immediately. \"I don't really know,\" she said apologetically, trying to control the desire to take a huge lungful of air.\n\nThe woman grinned, shaking her head, her dyed auburn hair dancing. \"You know, dear. You're the third college girl in here this week fawning over the BDSM stuff. What's the world coming to?\" she asked, winking conspiratorially.\n\nElaine glanced quickly around, confirming to her relief that she was in fact the only person in the store. \"Do, um... Do you know anything about any of this?\"\n\n\"Sure, honey. What would you like to know?\" She had already opened the cabinet and was taking out a whole host of items, placing them on top of the glass cabinet in a row.\n\n\"I'd like to know anything you'd like to tell me,\" Elaine replied honestly.\n\n\"Well, I'm no devotee, but I've got a few tips I can give you...\"\n\nFifteen minutes later Elaine exited the Adult Emporium with a package of concealed goodies hidden deep within the bag of groceries. She hadn't taken three steps before she wondered what the hell she was doing. The heat of the day hit her like a brick, and suddenly her jeans weren't just uncomfortable, they were a health hazard. She almost walked into a car at the next set of lights. She had to concentrate! And she had to get home and hide this stuff!\n\nElaine's heart was pounding by the time she gingerly mounted the last steps of her apartment building. Perspiration had gathered on her top lip and her breathing was laboured. I am not wearing these jeans again this week. I'll wear those new ones Mom gave me, she thought. And the next place I live better have a fucking elevator!\n\nElaine bit her lip as she slid the key into the lock and turned it as quietly as she could. Hurrying down the hallway, she pushed open her bedroom door and was confronted with five neat piles of clothes and a couple of outfits on her bed, still on hangers. Closing her door silently, she rolled her eyes and tossed the grocery bag on the bed next to the clothes. Quickly retrieving her baggy jeans from her dresser, she was just pulling up the zipper when there was a knock on the door.\n\nElaine gasped. \"Just a minute!\"\n\nAlmost jumping out of her skin, in a panic she thrust her hand into the grocery bag, grasped the package she couldn't believe she'd bought, and tossed it under her bed.\n\n\"We need your agreement on your clothes!\" Both of her roommates giggled as her door was pushed open.\n\n\"Come on in,\" Elaine said sarcastically, picking up the grocery bag and swallowing, trying to wet her dry mouth. \"You could have waited until I got back,\" Elaine said, nodding at the pile of clothes then looking at Kendra. She better not have touched my vibe again.\n\n\"Why, Elaine? Got something to hide?\" Kendra's eyebrow rose in challenge.\n\n\"Oh, don't worry about it,\" Elaine replied, exasperated.\n\n\"What are you doing wearing those anyway?\" Kendra asked, pointing at Elaine's baggy jeans.\n\n\"The others were, um... uncomfortable.\"\n\n\"You can't wear them. It's against the rules.\" Kendra's delight was written across her face.\n\n\"I've never seen you wear them before, Elaine,\" Chelsea agreed. \"You can only wear stuff you normally wear. They're the rules, silly.\" Elaine had almost forgotten Chelsea was there.\n\n\"All right. All right. I'll change them in a minute.\"\n\n\"You can choose from what's on the bed,\" said Kendra, apparently back in 'helpful mode'. \"Is there anything you want to add?\"\n\nElaine thought the girls had done a pretty good job actually. Her work clothes were there, her usual t-shirts and the couple of dresses she wore if it was cool out. She had two stretchy black skirts that went to mid-thigh. They didn't ride up and should be all right. Two pairs of shorts, one short-sleeved blouse, a couple of halter tops. Her nightie. Most of her regular stuff looked like it was there. They'd even selected a couple of pairs of socks, two pairs of her black pantyhose, one pair of hold up stockings she often wore, scuffs, Doc Martens and her favourite knee-high boots.\n\n\"This looks fine.\"\n\n\"Are you certain?\"\n\nElaine quickly scanned the piles one more time. \"Yes. It looks good.\"\n\n\"So we're all agreed?\" Kendra asked.\n\nChelsea nodded.\n\n\"Yeah. Whatever,\" Elaine said, just wanting the ordeal over.\n\n\"Okay, cool,\" said Kendra, taking the grocery bag from Elaine's hand. \"I'll put these away for you.\"\n\n\"Um. Thanks,\" Elaine said as Chelsea went out the door giggling.\n\nKendra stopped in the doorway. Turning back to Elaine, she said, \"I didn't realise you usually went braless, Elaine.\"\n\nHorrified, Elaine scanned the bed in a panic. There weren't any bras! \"Wait! You tricked me!\"\n\n\"I did not. I just didn't want to go through your intimate things,\" Kendra said smugly.\n\n\"But!\"\n\n\"I already reminded you about your jeans. One more mistake and you lose, Elaine. Now get those things off and come out and join us. I'm going to have to keep a close eye on you so you don't cheat, aren't I?\" Kendra winked before exiting Elaine's room regally, leaving the door wide open behind her.\n\nI can't fucking believe it. She tricked me. What a dufus.\n\nElaine sighed, walking over to the door and closing it. It wasn't like she'd never gone braless. She sometimes did in winter. But not in summer. And not without panties. She giggled. Well, not in public!\n\nArgh!\n\nTurning back to the bed, she cursed her decent legs, and her failure to usually clad them in long pants. The only other pair she 'usually wore' was her work pants. The black jeans she had on were okay with underwear. She quite liked wearing them actually. She picked up her knee-length, dark green skirt and changed quickly. Lastly she put away her week's clothes in the empty bottom drawer in her dresser, determined to win this stupid bet, not screw up, and laugh at one of the other girls as they streaked naked up and down those damned stairs.\n\nStanding for a moment alone in her bedroom, she shook her head then smiled. Covering her mouth, she almost giggled again. She fell to her knees and reached under the bed, deciding that just about anything would be better than her roommates finding out what she'd bought.\n\nThat's what she had to remind herself. What was it her Dad always said? 'Don't fret the small stuff.'\n\nMaybe the bet and the teasing were small. Maybe she shouldn't fret. Maybe what Kendra, and Chelsea to a lesser extent, were doing was all just 'college girl fun'; the kind that occasionally got you into trouble but was soon forgotten. Elaine wished she knew whether she should just say 'Stop!' Her roommates could be exasperating. Then again, she didn't think she was that different from them. Okay, they had far more experience with men. That was one difference.\n\nWas 'experience' that important? So Elaine was probably just about the only twenty-year-old virgin going around campus with no underwear on. So what? She'd always been adventurous. Just not with boys. Surely getting a cock up her pussy wouldn't exactly change her life. The vibrator was nice, and she was sure a heaving, muscled body thrusting a meaty cock between her thighs would be much better, but wasn't it all to do with who it was attached to? She sighed.\n\nAnyway, her roommates' finding her new toys was out of the question. She'd never live it down.\n\n'Don't fret the small stuff.' Had Daddy been talking about things like this?\n\nElaine decided against putting the brown paper package under her undies in the dresser. That'd be one of the first places they'd check, she thought. Dammit. Under my t-shirts is no good either. The way her roommates had started 'barging in' made her room seem like just another part of the apartment the others frequented. Like the kitchen. \n\nIt couldn't go on.\n\nIt so couldn't go on.\n\nShe had to say something.\n\nElaine nodded to herself, her decision made. I'll tell them just as soon as I find a good spot for this stuff, she thought, her hands beginning to tremble.\n\nWhen she'd finally joined her roommates in the small lounge room, the Monopoly game was all set up on the coffee table and they were waiting for her. The presence of shot glasses and the bottle of Jack Daniels made her wince.\n\nElaine smiled woodenly as she sat down in the single seater, diagonal to the sofa. \"This looks dangerous,\" she said, leaning forward, knees tightly together.\n\nDowning one of the shots she'd just poured, Kendra said, \"We're just getting warmed up. Down a shot to pick your piece.\"\n\n\"I've got the car,\" announced Chelsea, throwing back her shot and banging the glass on the coffee table.\n\n\"I've got the boot,\" confirmed Kendra.\n\n\"Give me the wheelbarrow,\" Elaine said, sighing. Wrinkling her nose, she threw back the shot Kendra handed her. \"I'm not playing for drinks,\" Elaine said firmly.\n\n\"Oh, come on, spoilsport,\" said Kendra. \"We decided you only have to drink if you go to jail. You might go the whole game without another shot. And anyway we don't want to be smashed before the boys even get here.\"\n\n\"Might be fun,\" chimed in Chelsea.\n\nElaine smiled at the thought. Grudgingly she agreed to the rules and the game began. Elaine listened as the two girls talked about the 'hotties' coming over; which one each preferred; what time they'd go out. Things like that. Certainly nothing out of the ordinary. Everything was going fine. They were all talking and giggling. Having fun.\n\nBy the time the topic of 'what they were going to wear' came up, they'd been playing for half an hour and Elaine was on her third trip to jail. She didn't mind so much. She was feeling more relaxed.\n\n\"Elaine,\" Kendra said ominously, filling the shot glass and passing it to her. \"You didn't put panties on before you came out here, did you?\"\n\nSteadying her hand Elaine took the glass, rolled her eyes and downed the shot. She figured she could do six or seven before she'd pass out. She wasn't exactly a novice. Banging the glass on the table, she looked Kendra in the eye and said, \"I'm no chicken. I'll keep pace with you guys this week. I said I'd do this and I will. So there's no need to single me out for checking.\"\n\n\"I wasn't,\" smiled Kendra. \"I already checked Chelsea.\"\n\n\"And I checked her,\" Chelsea agreed.\n\n\"Well I didn't check either of you,\" said Elaine, backing into a corner. \"You could both be cheating and just playing a joke on me.\"\n\nA moment of silence was broken when Kendra looked at Chelsea and said, quite loudly, \"She just wants to see our cunts.\"\n\nChelsea's jaw dropped and a second later she was howling with laughter, falling back on the lounge with her legs flying up in the air and proving to all that she was indeed being faithful to the bet. Elaine couldn't help but laugh too. Kendra landed a stinging spank right on Chelsea's exposed ass a microsecond after her legs went up. Chelsea squealed, immediately realising she'd exposed herself, and all three girls fell about in fitful giggles. They hadn't quite stopped when Kendra did the same thing: flinging herself back on the lounge, holding the pose for seconds, glaring at Chelsea.\n\nChelsea just laughed, then spanked the exposed flesh, the sound ringing around the room. It was much harder than Kendra had spanked Chelsea. It stopped them laughing. Kendra grabbed her ass and rolled sideways, cursing and vowing to get Chelsea back. Elaine thought that if Kendra weren't so obviously in pain, it would have been very funny. She and Chelsea looked at each other and tried not to laugh.\n\nJeez, one smack? thought Elaine. Who's the lightweight now?\n\nA sudden burst of self-confidence was coupled with a flagrant disregard for her dry mouth and the blush that was already rising in her cheeks. Elaine quickly stood up and flashed her roommates, then sat down just as quickly, pulling her skirt back under herself.\n\nChelsea started giggling, making Elaine blush even more before they all joined in. Kendra seemed a bit more subdued than normal and Elaine thought it was interesting. She figured now was as good a time as any to put her foot down.\n\n\"Um, you guys, before we get back into the game, can I bring something up?\"\n\n\"Sure,\" said Kendra.\n\n\"Yeah, sure,\" Chelsea echoed.\n\n\"Okay, thanks. Well, my room is my space, and I'd like you guys to respect it.\"\n\n \"Wha-\"\n\n\"Wait a minute, I haven't finished,\" Elaine said, holding up her hand. \"Don't enter my room without my permission and no more pushing my door open without me saying it's okay. I don't like it, and I wouldn't do it to you.\" She was so proud of herself, and thankful for the shots. She just got on with the game, passing the dice to Chelsea and saying, \"It's your turn.\"\n\nChelsea took the dice and rolled, saying, \"Ah, thanks.\" She moved onto one of Kendra's properties and asked her, \"What do I owe you?\"\n\nKendra said, \"How about 'one ass'? I could do with a new one right about now.\"\n\nThey all cracked up again. By the time they were catching their breaths the mood had definitely thawed. Passing the dice to Elaine at the end of her turn, Kendra poured shots for each of them, saying she thought they were needed.\n\n\"Sorry Elaine,\" she said, holding out her drink like a toast. She downed it and Chelsea mimicked her.\n\nElaine joined them, feeling the burning liquor frying her throat as she swallowed. \"Don't worry about it,\" she said, banging her glass on the table and throwing the dice. \"That's enough Jack for me,\" she said, looking at her watch. \"And you two should keep an eye on the clock if the guys are going to be here at seven.\"\n\nWhen the time came and the girls started getting ready, Elaine retired to her room on the pretext of studying. It was useless of course, as she couldn't concentrate after six shots of hard liquor, even if it was over a three-hour period. She turned on her portable Radio/CD player and lay down, listening to her favourite station.\n\nSome time later the thumping of loud music woke her, interrupting her crazy dreams. Disoriented, she checked the clock beside her bed. Nine thirty-six. For a split second she thought she had slept through the night and it was already the next morning, but one look out her window confirmed the time was P.M.\n\nShe sat up on the side of the bed and realised she needed water, now! Argh! she thought as she walked down the hallway, clapping her hands over her ears. Not Britney Spears again! Her roommates were dancing in the middle of the lounge room, while a couple of guys sat on the sofa, rolling more marijuana cigarettes. Making a beeline for the kitchen, Elaine heard Kendra squeal something at her, but she ignored it. She needed a headache pill and a big glass of water.\n\nSomeone turned down the music.\n\nGabbing Tylenol, a glass and some ice, Elaine thought she could hear muffled talking. As she filled her glass, Kendra came through the kitchen doorway and walked up to Elaine by the sink, rubbing her back comfortingly. Her breath smelled like Jack Daniels and pot. \"You okay?\"",
        "\"Yeah. Just a headache.\"\n\n\"So you won't be coming out with us?\"\n\n\"Yeah, right,\" Elaine said dismissively.\n\n\"Okay. Hey look!\" Kendra stepped back a pace and lifted the front of her miniskirt, baring her shaved mound, right there in the kitchen with two guys in the next room!\n\n\"Put that down!\" shrieked Elaine in a contorted whisper, referring to Kendra's hemline. \"They might see!\"\n\n\"Don't you like it?\"\n\nElaine was mortified, but she could hardly take her eyes away. Swallowing the last of her water, she turned back to the sink and refilled the glass. Anything to get the image out of her mind! \"It's fine! Now please. For God's sake, put your skirt down. Jesus, Kendra. What would someone think?\"\n\n\"Don't be silly. It's just a game. Come on. Now you.\"\n\n\"I don't feel like it right now. And not here. This is ridiculous.\"\n\n\"Okay, then I guess I get the honours of doing the Brazilian. Do you want to be strapped down or will you be a good little girl and lay still? I can't wait to send out invitations to your streaking debut,\" said Kendra, starting to turn on her heels, making for the doorway.\n\n\"Wait!\" hissed Elaine. Kendra stopped, turned and faced her. \"I'll do it. But this game is getting boring.\" With one hand holding her glass of water, Elaine raised her hem slowly with the other, watching Kendra's eyes. Kendra was staring between Elaine's legs. \"Um, enough?\"\n\n\"A bit higher,\" Kendra said, her voice sounding husky. \"Gosh, you're so hairy.\"\n\n\"Am I?\" asked Elaine innocently, looking down and casting a critical eye over her little thatch of black pussy hair. She wasn't really. Realising at once what she was doing, she dropped the hem, smoothed it down and blushed crimson. When she glanced up at Kendra, she almost dropped the glass of iced water. Kendra was smiling smugly with her arms crossed. But that wasn't the worst part. The worst part was the humiliating looks the other three were giving her, leering over Kendra's shoulders. \"Oh my God! You bitch!\" cried Elaine, rushing past them in a panic, leaving their mean laughter behind. Slamming her bedroom door behind her, she dove onto her bed and cried hot tears of anguish.\n\nKendra is a witch!\n\nFive minutes later, Chelsea tapped on Elaine's door, calling out and waiting patiently for a response.\n\n\"Come in,\" Elaine sighed, defeated.\n\nChelsea entered and paused, then walked over and sat on the side of Elaine's bed. \"We're going soon,\" she said softly. \"Don't expect us back tonight. We already decided to fuck them.\" Elaine couldn't think of anything nice to say, so she said nothing. Chelsea filled the void. \"Hey. Don't think for a minute that you're alone, okay?\"\n\nElaine had been facing away from Chelsea, lying on her tummy. \"What do you mean?\" she asked, moving onto her elbows and twisting around, looking up at her blonde roommate.\n\n\"Kendra's been giving me a hard time too, you know. She gets off on it I think.\"\n\n\"I wish she'd just fuck off,\" Elaine said, sniffling.\n\n\"Just pick your moment. Did you see her face when I hesitated before slapping her ass? That was priceless. And boy, was my hand stinging! Imagine what her ass must have felt like. Um, I mean...\"\n\nElaine giggled and so did Chelsea. \"I think it's the first time I've seen Kendra blush!\" Elaine said, a reluctant smile breaking across her face.\n\n\"She probably liked it,\" retorted Chelsea, winking.\n\nElaine didn't know what to say to that. So she asked, \"What did you mean, 'pick your moment'? Do you mean I should get her back?\"\n\n\"It's the only language she knows.\"\n\n\"But I don't know how,\" Elaine whined, thinking she sounded like a little girl.\n\n\"Just leave it to me. I've got lots of ideas.\"\n\n\"I don't know...\"\n\n\"Well, I don't think it's fair. She's just taking advantage of you. I'm gonna get her back, big time.\"\n\n\"Thanks, Chelsea. But...\"\n\n\"Hush,\" said Chelsea, stroking Elaine's back and urging her to lie back down.\n\n\"Mmmm... That feels good,\" Elaine whispered, closing her eyes. It felt so nice she almost fell asleep again.\n\nAlmost.\n\nThe apartment was quiet. Sitting up on the side of her bed, Elaine shook her head. She ventured out briefly, confirming she was blissfully alone. A sigh of relief escaped her lungs. In the lounge room she switched off the murmuring music system and headed back to her room.\n\nWhat's that? she wondered, spying something thin and white under the coffee table. It was joint. She hadn't had one in ages. The last time hadn't been so good, but at least this time she'd be alone. Taking the joint back to her room, she placed it on the desk beside her and turned on her computer, making her way to the College website. The joint was promptly forgotten.\n\nElaine posted eloquent responses to a couple of questions regarding her comment on the virtue of Jean-Paul Sartre's profound and poignant La Naus\u00e9e as 'the birth of Existentialism' rather than the more obtuse and satirical Being and Nothingness.\n\nShe kind of liked Philosophy, but it always exhausted her. Instead of opening her term paper and starting work on it, she closed the open windows and sat back in her chair, rubbing her temples.\n\nI need another pill, she thought, rising and heading for the kitchen.\n\nOne more Tylenol later, she sat back in her chair before the computer, a fresh tall glass of water beside her, half full of ice. Elaine was starting to feel better, but she wasn't in the mood for schoolwork.\n\nShe headed for the chat rooms.\n\nShe wasn't sure why. She hoped it would be nice, quiet, and friendly. It was, and she was having fun. She'd made a couple of friends, and one was there. Simone from Vancouver, who went by the name of 'acquiescent', told her a couple of jokes about George Bush and Elaine found herself giggling out loud.\n\n\"Why don't you come visit in the BDSM room?\" Simone had asked in a private message. Sometimes her English made Elaine smile.\n\n\"I don't think so. Too many weirdos,\" Elaine had sent back.\n\n\"Hey, I resemble that!\" Simone messaged, adding a smiling face.\n\n\"I don't mean you. I didn't know you went there.\"\n\n\"Look at my name.\"\n\n\"I don't even know what your name means!\"\n\n\"It means 'I give in'. I'm not sure about the English. I submit.\"\n\n\"You submit?\"\n\n\"Yes, I am, how you say, submissive.\"\n\n\"You are?\"\n\n\"Yes.\"\n\n\"What is it like?\"\n\n\"What is it like?\"\n\n\"Yes, what is it like?\"\n\n\"It is like nothing. It is everything. It gives me... definition. You know?\"\n\n\"Definition. Okay, yeah. I think I understand.\" Elaine had no idea what she was talking about.\n\n\"Come with me. It is friendly,\" Simone urged.\n\n\"I think it's friendly enough here in the lobby.\"\n\n\"You don't understand. I mean... you will like it. Please?\"\n\nElaine sighed. She was kurious after all. Being honest was her new mantra. \"Okay, I want to go. I've been reading a little. Not much. But if I get accosted, I'm blaming you.\"\n\n\"Really?\"\n\n\"Um, yes. I didn't know what BDSM was.\"\n\n\"Ah. Okay. Well, anyone who accosts you is not a Dom and you have permission to treat them as the fuckwit they are.\"\n\n\"LOL,\" Elaine sent back.\n\n\"True!\" typed Simone. \"Don't take any um, shit! Leave if you don't like it. And don't compromise. Only call someone Sir, or Ma'am, if you feel like it. No one may demand anything. Submission is given, not taken.\"\n\n\"Okay, okay. You've convinced me.\"\n\n\"I'll hold your hand.\"\n\n\"Thanks, Simone.\"\n\n\"You are welcome. Oh, and type people's names exactly as they appear. Names with capitals are the Doms and Dommes. Names with little letters are the subs.\"\n\n\"I could never be a Dom.\"\n\n\"I didn't think so,\" said Simone. \"Come on, I'll protect you.\"\n\nIn moments they had both clicked on the BDSM room link, and people of both genders were flinging greetings at Elaine like she'd never seen before. Almost every person there said hello.\n\n\"This is weird,\" typed Elaine, sending another private message to Simone.\n\n\"Why?\"\n\n\"Well, it's like, too friendly. It feels like a cult. Like everyone's eyes are as big as saucers.\"\n\n\"I don't understand.\"\n\n\"Do you know Amway?\"\n\n\"Non.\"\n\n\"Um, never mind.\"\n\n\"Okay.\"\n\nacquiescent proceeded to introduce kurious to those present and lots of different people asked her friendly and playful questions. One girl called 'Sir Tim's helena', said Elaine was welcome to come anytime, to observe quietly or to participate. Sensible questions were welcome and there was no such thing as a silly one.\n\nElaine thanked her as more of the world of BDSM opened before her eyes.\n\nObserving quietly, Elaine watched as Simone was caught up in the various conversations that evolved in the room. The people with capitals, as a whole, commanded the respect of those without, though a couple of people entered the room and were treated ruthlessly. Not just by one person, but sometimes as a group. At least the subs are respected too, Elaine thought.\n\n\"Having fun?\" Simone messaged, out of the blue.\n\n\"It's fascinating.\"\n\n\"Any questions?\"\n\n\"Hundreds.\"\n\n\"Hehe. Ask me one.\"\n\n\"Well, what's the significance of the capitals?\"\n\n\"Oh let me see. Some would say it shows respect, and reminds one of who they are.\"\n\n\"I don't know what you mean.\"\n\n\"Just a moment.\" Seconds later, Simone had paraphrased Elaine's question and posted it in the room. Elaine sat dumbfounded, blushing despite herself. \"How can I explain the significance of capping?\" Simone had typed.\n\nSir Tim's helena piped up. She seemed to be one of the 'senior' people there. \"It's a practical method of identification, really,\" she typed in the room. \"Doms and Dommes are capped. Subs are not.\"\n\npaper tiger, who Elaine guessed correctly was a male submissive added, \"Some don't subscribe to the 'rule'. It's more a suggestion in the name of clarity, than a prerequisite.\"\n\n\"That's true,\" responded Sir Tim's helena.\n\nHmmm, thought Elaine.\n\n\"Does that answer your question?\" Simone asked privately.\n\n\"Yeah. I guess. How do you know who is telling the truth?\"\n\n\"Hang around long enough and you will know,\" she answered cryptically.\n\nJust then, MasterServant entered the chat room and was dutifully greeted. Elaine said hello as well, holding her breath.\n\n\"This one is for real,\" Simone messaged.\n\n\"How do you know?\" asked Elaine.\n\n\"I met him last year when he came up here skiing. My Dom and I met him for lunch one day. He's yummy.\"\n\n\"You sound like you want him!\"\n\n\"Who says I didn't get him!\"\n\n\"LOL. You're bad.\"\n\n\"You have no idea,\" Simone replied, adding a winking smile.\n\nElaine watched the ebb and flow of the conversation, hanging on every word MasterServant said. He intrigued her and she was surprised to realise she was getting turned on. After a few minutes of squirming in her chair, Elaine glanced over at the clock by her bed and gasped at the time. She sent a private thank you to Simone, then sent a general thank you into the room for being so kind to let her stay and observe.\n\nIn the room a message appeared. \"Please wait, kurious. May I speak with you privately a moment?\" It was from him! MasterServant!\n\nLeave now!\n\nNo, don't run away!\n\nBut he lives two towns over!\n\nC'mon, I'm anonymous!\n\nHolding her breath, somehow her fingers typed a reply.\n\n\"Yes, Sir.\"\n\nChapter 05 \n\nAwkward seconds passed as Elaine waited, unsure of what MasterServant might say. Though she was expecting his reply, she jumped when the private message box popped up on her screen.\n\n\"Welcome to the BDSM room,\" he typed innocently.\n\n\"Thank you,\" Elaine replied, her hands shaking.\n\n\"I should tell you acquiescent suggested I speak with you.\"\n\n\"Why would she do that?\"\n\n\"She's probably matchmaking.\"\n\nElaine swallowed. \"Oh.\"\n\n\"I'm just teasing. I'd say she's looking out for you, making sure you get good information. It's easy to be taken advantage of, or led astray. Her heart's in the right place.\"\n\n\"Yes, it is.\"\n\n\"Are you nervous?\"\n\n\"Yes. Very.\"\n\n\"Why?\"\n\n\"I'm unsure of myself. Afraid a little.\"\n\n\"You don't need to be afraid of me... or of yourself,\" he added. Elaine wanted to ask what he meant, but another message arrived. \"My name is Gary.\"\n\n\"Elaine.\"\n\n\"Nice name.\"\n\n\"Thank you.\"\n\n\"Please call me MS or MasterServant in the room though.\"\n\n\"I will.\"\n\n\"Good girl.\"\n\nElaine blushed.\n\nAnother message came from him almost immediately. \"Sorry. Habit.\"\n\n\"I don't understand.\"\n\n\"I just meant calling someone 'Good girl' is a habit I have. I didn't mean to sound too familiar. It's weird though. I haven't done that in a long time.\"\n\n\"Called someone a 'Good girl'?\"\n\n\"Well, 'called someone a good girl without even thinking about it'. Yes.\"\n\n\"I didn't really notice.\" Dammit, Elaine thought. Already I'm lying. She hurriedly sent a new message. \"Wait. I did notice. I, um, I blushed.\"\n\n\"Thank you for telling me the truth. You made me smile.\"\n\n\"I did?\"\n\n\"Yes. Even when it hurts, telling the truth is always the best option.\"\n\n\"I'll try to remember that.\"\n\n\"I hope you will.\"\n\n\"Um, what if it hurts someone's feelings?\"\n\n\"Small lies don't hurt people's feelings. Big lies do. Big lies follow small ones. If you don't commit the first, then you won't have to commit the second.\"\n\n\"You know, that kind of makes sense.\"\n\n\"It's like saying everything is fine then not turning up for the wedding.\"\n\n\"Sounds like personal experience.\"\n\n\"Am I that transparent?\"\n\nNo, you're a breath of fresh air, Elaine wanted to say.\n\nHe briefly detailed his past and Elaine sat in rapt attention. His fianc\u00e9 had indeed left him at the altar halfway through last year. Elaine said he didn't have to tell her why, but Gary said it was common knowledge and went on to explain the situation. Basically his fianc\u00e9 had not told him of her longstanding love for another Dominant, someone she'd had an affair with a few years before they'd met. When this other man divorced his own wife, Gary was ditched for a pipe dream.\n\n\"That must have been terrible.\"\n\n\"At first it was. Then I was just relieved. It would have been a bad marriage.\"\n\n\"I agree.\"\n\nHe talked about the farm he had struggled to keep and about how he was on top of it now and enjoying life. The way he spoke fascinated Elaine. On the one hand he was just a regular guy. On the other hand, their shared interest in BDSM was an undercurrent throughout their conversation. Like a secret. Like something conveyed with a nod and a wink.\n\nBut there was something else. Something Elaine could not confess.\n\nThe toys.\n\nSitting at the bottom of her wardrobe, they mocked her. They tempted her. At once she was torn by the desire to experiment with them and the need to read the words Gary was sharing with her. She was nervous and excited. He couldn't know how hot he was making her. He wasn't even trying. Was he? If only she could tell him how hard her nipples were. If only she could tell him about the toys.\n\nHe would tell me to use them.\n\nBlushing fiercely at the thought, Elaine concentrated, returning to the conversation she hadn't intended to leave. She wanted it to go on and on, and she wanted to touch herself. With a mighty effort, she refrained.\n\nMentioning she was in college, thankfully Elaine opened a whole new line of enquiry, taking her mind off her physical distractions. He asked how she was doing, and what she wanted from her life. As he listened intently to all she had to say, Elaine found herself opening up to this stranger. He was attentive and interested. What more could a girl want? Eventually she slipped into a relaxed heat, barely noticing the surreptitious caress of a nipple or the squeezing of her thighs. Before long, minutes had become hours.\n\nGlancing at the clock, she realised it was after one A.M. So much for that paper, she thought, smiling. It didn't really bother her. She doubted anyone else in the class would have started it either. What concerned her was she was running out of time to play. And she was as horny as hell. \"I should be getting to bed,\" she typed reluctantly, biting her lip.\n\n\"I think I'll turn in too,\" he replied. \"I really enjoyed talking to you. I hope to see you again soon.\"\n\n\"Me too,\" Elaine typed.\n\n\"Well, good night then.\"\n\n\"Good night.\" Dutifully Elaine said goodbye to everyone in the chat room and she watched as Gary did the same.\n\nIn the room Gary typed, \"Goodnight, kurious.\"\n\n\"Goodnight, MasterServant.\" \n\nSwitching off the computer and sitting back in her chair, Elaine felt her heart pounding in her chest. Was it Gary? Or was it the anticipation of using the toys she'd bought?\n\nShe headed to the bathroom to brush her teeth and use the toilet. After moisturising her hands, she grabbed another glass of iced water from the kitchen and made her way back to the bedroom. Deciding not to take any chances, she locked the door behind herself. Putting the glass on the bedside table, her naked pussy lips slipped warmly with each step she took.\n\nI can't believe how horny I am...\n\nBack in front of the mirror above her chest of drawers, she stared critically at her reflection as she disrobed. Tossing the discarded garments on the one spare chair in her room, the one she called her Laundry Hamper, she stood tall and admired herself, her gaze drawn to her erect nipples, then down to her pussy. Narrowing her eyes and leaning forward, she thought she could see a sheen of moisture at the top of one thigh. Drawing a fingertip between the folds of her pussy, she found her clit and gasped, her knees almost buckling.\n\nWow.\n\nGlancing at her wardrobe, she hurried over and retrieved the hidden package from behind her shoes and under the black sweater she'd untidily tossed on top of it. Her hands were trembling as she knelt beside her bed and tore it open. Five items fell loose and she put one of them, the lube, on her bedside table beside the glass of water. Ripping the colourful plastic off the others, she stuffed the waste into her backpack, resolving to dispose of it somewhere smart.\n\nShe sat back on her heels, swallowing and shaking her head. Laid out on her bed was a pair of adjustable nipple clamps, a dildo, a small butt plug and a ball gag. She and the saleswoman had laughed when Elaine confessed it was going to be hard to keep quiet with the toys. That was when the woman kindly suggested the ball gag.\n\n'Besides, ' the woman had said. 'It'll give the experience some authenticity.'\n\nIt was pink solid rubber with black straps. Elaine picked it up and looked it over, figuring it out. Fitting it between her teeth, her breath rushed through her nose. Her pussy throbbed as she buckled the strap behind her head.\n\nThis is insane. I'm burning up!\n\nReaching across her bed for the lube, she accidentally dragged her nipples over the covering sheet and moaned through her nose. \"Nnnnggg...\" Her eyes fluttered closed and she almost knocked over the water. Back on her knees and swaying unsteadily with barely constrained passion, she opened the small tube and squeezed a dollop of the clear stuff onto the tip of her finger. Swallowing was difficult with the gag in her mouth, but she managed as she reached behind herself uncertainly and touched her fingertip to her asshole.\n\n\"Nnnggg,\" she gasped. Her pussy contracted as she made contact, deliberately moving in circles around the hot, crinkled skin. It felt wicked, bad, and exciting to be lubing her ass. She tried to be clinical and 'do only what was necessary' but it was useless. Fuck, that feels amazing. Before she knew it she was gathering more lubrication on her finger and working it into her asshole.\n\nBy the time she was lubing the strangely shaped toy, her breathing was ragged and her juices were dripping down her thighs. Shaking with a combination of curiosity, anticipation and fear, she remembered the words of the saleslady in the Adult Emporium."
    ],
    "authorname": "Sir_Nathan",
    "tags": [
        "real life bdsm",
        "online bdsm",
        "first time bdsm",
        "cyber bdsm",
        "bdsm novel",
        "bdsm novella"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/culture-shock"
}