{
    "title": "The Cherry Poppers Ch. 18",
    "pages": [
        "Jason made it to Kira and Tessa's room and back in bed without waking anyone else. His head barely hit the pillow and the next thing he remembered was Kira rolling into him and wrapping her arm around him. He opened his eyes slightly and looked at her.\n\n\"Wake up sleepyhead,\" Kira protested amusingly.\n\n\"What time is it?\" Jason asked, looking at his watch as he said it.\n\n\"Ten,\" Kira said before he could look. \"I've been awake staring at you for nearly half-an- hour. Tessa's in the shower. I think she's trying to freshen up, hoping to get lucky again before you leave.\"\n\n\"God, I have to go!\" Jason exclaimed. \"I'm supposed to pick up Jillian in an hour and I'm not even showered or dressed.\"\n\n\"Didn't you tell me she's right upstairs?\"\n\n\"Yeah,\" Jason answered.\n\n\"Well, why don't you shower here and just go straight up to get her. Tessa and I could even go up with you to find her room,\" Kira offered.\n\n\"How can I shower here?\" Jason asked.\n\n\"Other guys have done it before. We'll just tell everyone we have the bathroom for a while,\" Kira explained.\n\n\"We?\" Jason questioned.\n\n\"Well, I wouldn't want to see you shower alone,\" Kira said, hugging him tightly and giggling. She kissed him too.\n\n\"Why were you watching me sleep?\" Jason queried.\n\n\"Well, obviously you realize I haven't woken to find too many men in my bed,\" Kira explained.\n\n\"Oh, sure,\" Jason acknowledged. \"What about Tessa?\" \n\n\"We should hurry so she doesn't have to shower twice. I'm sure she will want to join us also,\" Kira claimed.\n\n\"You two are going to kill me,\" Jason protested.\n\n\"What? You love it,\" Kira boasted.\n\n\"I guess there's worse ways to go,\" Jason ribbed her and for that she poked him.\n\n\"Wait here a sec until I clear the way. I'll get you a towel too,\" Kira stated.\n\nIt was five minutes before Kira returned. She had cleared two other girls from the bathroom under protest, and Tessa had a shower going for them. Jason wrapped a large towel, that Kira gave him, around his waist as Kira donned her robe. She grabbed some toiletries, including a new disposable razor, and they headed out to the shower. A couple of girls were lingering in the hall, and looked at the couple with knowing smiles as they entered the bathroom. One of them was Casey and she blew Jason a not too disguised kiss and then smiled. Fortunately, Kira was in front of him and didn't seem to notice. \n\nThey entered the bathroom and moved to the last shower stall hearing the water running there. Jason and Kira stripped off their respective coverings, placed them on a bench outside the stall near Tessa's robe, and entered. Jason was last in and closed the door behind him. It was definitely tight inside for all three of them but they still had some room to maneuver around. \n\n\"God, I'm going to turn into a prune waiting on you two,\" Tessa complained. \n\n\"Well, since you're washed get out of the way,\" Kira demanded with a smile. \n\nTessa stuck her tongue out at Kira but complied. She slid past both Kira and Jason, giving them access to the water. She winked at Jason as she moved around him. \n\nKira got wet first and then moved aside to allow Jason more room. When he was wet too, they started soaping themselves and Tessa helped wash their backs. Her hands washed more than just Jason's back. She caressed his firm ass cheeks and even slid her fingers through the bare, tight furrow of his ass. He spread his legs for her and she washed all the way down to soap his hanging balls. Jason's cock, which had been semi-hard from just being this close to the two slender women, was now starting to rise.\n\n\"I brought you a razor to shave with,\" Kira said. \"Can you use soap instead of shaving cream?\"\n\n\"Sure, thanks,\" Jason said, taking the razor from her and soaping his face.\n\n\"Rinse off down here first,\" Tessa told Jason, and he turned into the spray to wash away the soap from his lower body. \n\nSatisfied he had rinsed off below, Jason concentrated on shaving. He stood just out of the spray allowing Kira to rinse off too. It looked like she had thoughts of shaving too. \n\nJason had lathered his full face with soap and with eyes closed began to shave his neck. He was into one particular stroke when he felt a hand on his dick. The hand stroked it shortly giving it an even greater stiffness. Seconds later a warm, wet mouth engulfed the head. Jason could feel Kira still splashing water on herself and occasionally lightly bumping into him on his right. If she was still there, that left only Tessa to be sucking his cock. Even without his eyes open, after a few moments, he could tell it was definitely her by her marvelous technique. \n\n\"Oh, god,\" Jason moaned lightly from the delicious sensations on his cock.\n\n\"What?\" Kira questioned and then noticed Tessa. \"You dirty girl, Tessa. Can't get enough dick.\"\n\nJason felt Tessa's mouth temporarily leave his cock and he groaned with protest until he heard Tessa amusingly reply, \"It was looking so hard and needy, I just had to help out.\"\n\n\"Don't get him off till he fucks us,\" Kira implored.\n\n\"Okay,\" Tessa agreed.\n\nJason finished shaving as Tessa renewed sucking his cock. She maintained a slow steady tantalizing pace, just enough to keep Jason simmering. After Jason washed the remaining soap from his shaved face, he noticed Kira trimming around the top of her pussy. She didn't remove much but only trimmed herself.\n\n\"Ever cut it all off?\" Jason asked.\n\n\"No,\" Kira replied and looked up to his face.\n\n\"You should try it some time,\" Jason mentioned.\n\n\"Why?\"\n\n\"It feels wonderful, some girls have told me anyway, guys like it too, and it's easier to eat you then,\" Jason stated.\n\n\"You like it that way?\" Kira asked.\n\n\"Definitely,\" Jason answered and noticed Tessa had slowed her sucking and licking to listen to the conversation.\n\nWhen they were done washing, Tessa stood from her squat position and leaned against the wall presenting her rear and pussy to Jason. He took the hint immediately and got behind her. He eased slowly into her recently virgin pussy, feeling it stretch wonderfully around his cock. She was wet but still very tight.\n\n\"Oh, god,\" Tessa moaned aloud.\n\n\"How's it feel?\" Kira asked.\n\n\"Huge,\" Tessa simply replied.\n\nWhen Jason was buried almost completely in Tessa's tight pussy, he slowly pulled back before fucking back into her. Tessa held the wall as best she could as Jason's cock invaded her lower body. Kira threw warm water on them to keep them from getting cold. \n\nJason reached under Tessa to palm her nice breasts and pinch her erect nipples. She cooed and groaned as he fucked her and played with her tits. Jason picked up speed and fucked Tessa beautifully. His resistance was high given all the sex he'd had recently. His cock felt like a steel pole and he probed her deeply with it.\n\n\"Oh, shit,\" Tessa growled as Jason drove far inside her. \"He's in my belly, Kira.\"\n\n\"God, that's so fuckin' hot watching your big cock enter her,\" Kira answered.\n\n\"She's got a tight pussy,\" Jason offered between gasps of breath as he fucked Tessa.\n\n\"Ahh ...,\" Tessa moaned loudly. \"Ahh ... it feels so good!\"\n\n\"Fuck her harder, Jason,\" Kira encouraged. \"She can take it.\"\n\nJason listened to Kira and increased his speed even more. He was huffing and puffing a little from the sheer exertion of fucking Tessa. She moaned constantly as her body pushed back onto Jason's cock to maximize the pleasure from every stroke. He was hitting places inside her no dildo had ever reached. His cock rubbed against her g-spot and drove her crazy. With his teasing of her nipples accompanying the wonderful sensations of his cock deep inside her, Tessa raced towards her orgasm. \n\nTessa dropped one of her arms to her knee to help support her weight. His thrusts were butting her up against the wall but she didn't care. The only feeling she could concentrate on was the intense one emanating from her pussy. She rapidly approached her climax.\n\nJason grabbed Tessa's slim hips and pounded his cock into her cunt. He was feeling his own orgasm beginning to simmer and knew he had to get Kira off also. He fucked Tessa as hard as he could to push her over the edge quickly before he lost it too. It worked and Tessa yelled with her release.\n\n\"Mmmm ... oh, my god!\" Tessa yelled. \"Oh, fuck, Jason!\"\n\nTessa's cunt clamped down on Jason's invading cock. The tightness made it near impossible for him to move which was a good thing because he was damn close to dropping his cum inside her. He gave her mild little pushes to increase the intensity of her orgasm, but didn't bring himself any closer to cumming. \n\nTessa had stiffened against the wall as the pleasure of her orgasm careened through her body, sparking off what seemed like trillions of little explosions. She groaned deliciously with her release, until finally it began to wane. She dropped both hands to her knees now to support herself from just collapsing on the floor of the shower. Her legs felt incredibly weak and her ragged breathing made her feel like sprawling on the shower floor. Thankfully, Jason held her hips which helped keep her imbedded on his stiff cock and upright. He was still, what seemed like a mile, inside her.\n\n\"Oh, god,\" Tessa finally gasped. \"That was wonderful.\"\n\n\"Incredible,\" Jason moaned as he slowly extracted his cock from inside her. \n\nTessa's cum juices and the way Jason's cock had stretched her cunt made it easy for Jason to just pull back so his cock could drop from inside her. Tessa moaned at the sudden loss of his presence inside her. \n\nJason was turned on beyond belief but he waited with Kira for Tessa to recover. He hoped to lose some of his edge by waiting a little bit. Otherwise he feared he would pound poor Kira wickedly. His stiff cock stuck out in front of him like a lethal weapon. Kira held it as they watched Tessa slowly stand, only to lean against the wall.\n\n\"Whew,\" Tessa finally said. \"That was unbelievable, even better than last night.\"\n\n\"My turn,\" Kira exclaimed, moving in front of Jason.\n\nHe picked up Kira, the smaller of the two, and held her to his chest as he leaned against the end wall of the shower. Kira kissed him as he lowered her until his cock was nudging up against her sex. Tessa saw what he intended and moved to help him. She positioned his cock at Kira's opening and held it there for him to lower her. Kira felt the huge head stretching her pussy hole to gain entrance.\n\n\"Oh, god, it feels huge,\" Kira stated as her eyes widened.\n\n\"Just relax,\" Jason said.\n\n\"That's an easy thing for you to say. You're not the one about to get stuffed full of huge cock,\" Kira chided.\n\n\"No, I'm just the stuffer,\" Jason answered and let her drop a little more.\n\nJason's cockhead popped inside and eased deep into Kira. She had been turned on watching him fuck Tessa and her pussy was ready but even so he was big and she was tight. He let her slip once more allowing another inch or two to invade her tight snatch.\n\n\"Oh, geez,\" Kira gasped. \"You feel gigantic inside me.\"\n\n\"You got a little more to go,\" Jason said letting her drop even further causing a few more inches to burrow inside.\n\n\"Good, god,\" Kira effused.\n\nJason started bouncing her on his lap. His knees and thighs were performing all the work while his strong arms easily held her small frame tight to his body. Jason tried to catch one of Kira's cute small pink nipples in his mouth each time he bounced her up and down. He felt Tessa, standing beside him, with her hand palming his hanging testicles and teasing them. It was extra simulation he loved but didn't need if he hoped to get Kira off before he did.\n\n\"Urgh,\" Jason moaned as Kira's tight pussy gripped his cock like a warm, wet velvet hand. \n\n\"Mmm,\" Kira hummed as the licks of pleasure from each thrust sent her closer and closer to cumming.\n\nTessa kissed Jason's cheek and ear as she continued to play with his nuts. He was sure she could feel them getting tighter against his body as his own orgasm built. She licked his ear again and whispered.\n\n\"Make her scream as you pump her full of your sperm,\" Tessa said wickedly low.\n\n'Oh, my god,' Jason thought to himself. 'Tessa is really getting naughty.'\n\n\"Oh, fuck me, Jason,\" Kira shouted, bringing Jason back to the moment.\n\nJason concentrated on fucking Kira and his legs were starting to grow weary. His arms even began to tire but still he bounced her even harder.\n\n\"I'm going to squeeze your cum right into her from your balls,\" Tessa whispered to him again mischievously as she applied steady pressure to his nuts.\n\n'Motherfucker,' Jason groaned to himself as Tessa continued her dirty talk. \n\nFortunately for Jason, Kira had reached her peak and threw her head back and howled with her release. Her body shook on his imbedded pole as Jason fought to keep fucking her. His arms and legs were on fire now and Tessa's squeezing off his balls added to the exquisite feeling of Kira's incredibly tight pussy. \n\n\"Give it to her,\" Tessa whispered into his ear again, her hot breath adding to all the sensations assaulting his body.\n\n\"Fuck,\" Jason roared and thrust up hard into Kira one last time. \n\nHis cock shot a blast of hot cum deep into Kira's womb. Jason growled with the exquisite bliss as he felt the pressure of Tessa's hand massaging his balls. 'Where did this near virgin learn this stuff?' Jason questioned himself about Tessa as she manipulated his nuts and sent more thick pulses of cum deep inside Kira.\n\nJason held onto Kira as he pumped her full of his seed. He could feel and hear the sloshiness of her cunt now as he filled her to overflowing with his cum. Tessa's hand still milked his balls and she still whispered in his ear.\n\n\"Good, boy. Give it all to her,\" Tessa breathed into his ear. It tickled from the closeness.\n\nJason couldn't believe how sexual and hot Tessa was sounding. He held Kira with her head on his opposite shoulder from where Tessa stood on his right. Her heavy breathing matched his as he felt his dick stop pumping cum and started to go soft inside her. Kira was just finishing her orgasm as well.\n\n\"Shit, Tessa, that was hot,\" Jason growled.\n\nKira heard him mention Tessa and sat back in his arms to look at him questioningly. She wondered why he had said Tessa since he was fucking her. Jason saw her reaction and realized what she must be thinking. He leaned forward and kissed her to make her think he was talking about her, as he finally let her slide down his body.  \n\nJason gave Tessa a quizzical look as they re-showered quickly. They exited the bathroom to a fairly crowded hall. Jason was embarrassed by all the knowingly smiling faces he saw, including Casey's again. This time she stuck her finger in her mouth in a well understood implied motion. \n\nBack in the room, they dressed and Jason waited while the women did their hair. He wished he had fresh clothes but the ones from the day before weren't bad. The girls had promised to go with him to find Jillian on the third floor. It was ten after eleven by the time they were done. \n\nFortunately, when they exited the room the hall was fairly clear. They made the steps without being really noticed and ascended to the third floor. Jason found Jillian's door and knocked. She answered within seconds. \n\n\"I thought you might have forgotten,\" Jillian said and then spotted the other two girls.\n\n\"No, just running a hair late is all,\" Jason replied.\n\n\"That's okay,\" Jillian said, her eyes moving questioningly from Jason to Kira and Tessa.\n\nJason noticed and introduced them, \"Jillian, this is Kira and Tessa. They are friends of mine and live on the second floor. I told them about you and they wanted to meet you.\"\n\n\"Hi,\" Jillian responded.\n\n\"Hi,\" Tessa and Kira said as they entered Jillian's room with Jason. \n\nThe four of them sat in Jillian's room and talked for a little bit. Tessa and Kira asked questions of Jillian and acted friendly towards her. Jillian gave Jason a knowing smile as she knew why he had invited Tessa and Kira. After a little while, they all left and walked down to the second floor. Tessa and Kira showed Jillian their room and told her to stop by anytime. After that, Jason and Jillian left for the mall.\n\nAt the mall, they shopped for swimsuits for Jillian. She was too embarrassed to model them for him, so he basically just sat while she tried several on. They didn't find anything she liked in the first two stores and Jillian kept complaining she was too fat to go swimming and be seen in a suit. Jason just reminded her that was the purpose of the suit in the first place. She needed to exercise and lose weight, starting with the twenty pounds she had put on since the beginning of the school year.\n\nFinally, in the third store Jillian found a one piece suit that she liked and didn't make her look like a horse she said. It surprised her completely when Jason stated that he was going to buy it for her. She appreciated that since money was also another problem she had. Her folks were not rich and could barely scrap together the money for room and board plus tuition and books. She had worked the summer at home but that money had to last her until May. \n\nFrom the mall, they drove back to school and to the Aquatic center to go swimming. Jillian protested the whole way that she still wasn't sure she could handle anyone seeing her in the swimsuit. Jason just told her flatly, too late, as they pulled into the parking lot.\n\nJason showed Jillian where the ladies locker room was, and told her he would meet her by the pool when she was dressed. He ducked into the men's dressing room where his locker was. He was dressed in his suit in three minutes but had to wait ten more for Jillian to appear. She walked tentatively towards him with her arms folded across her stomach. Jason watched her coming towards him with a disarming smile. He noticed she had attractive legs and large breasts from what he could see above her arms. \n\n\"Ready for your first lesson?\" Jason asked, as she approached.\n\nJillian had looked around the pool and was delighted that only one other woman was swimming laps at the moment. She stopped before Jason, still with her arms crossed.\n\n\"I guess so,\" Jillian replied.\n\n\"Okay let's get wet first,\" Jason said and held his hand out for hers. \n\nJillian reluctantly and with near panic in her eyes extended one arm to him while leaving the other trying to block his view of her tummy. Jason took her hand, careful to just look at her face. He pulled her along like a little sister to a swimming lesson by her big brother. He took her right down the ladder into the shallower end of the pool away from the diving boards. \n\nJason watched her descend the ladder from the water and noticed her butt was one of the areas where she had gained a little. Her ass was still shapely though and with toning, he realized would look quite good. Once in the water, despite it being warm, Jillian's nipples protruded from her swimsuit top as if she was cold. \n\n\"Burr,\" Jillian complained.\n\n\"You'll warm up in a minute,\" Jason stated but couldn't help his eyes from dropping again for a quick glance at her nipple protruding breasts. \n\nThey were in about four feet of water right near the ladder. Jillian's arm had gone right back to blocking the view of her tummy once she didn't need it any longer to descend the ladder. Jason held out his hands for both of Jillian's. She reluctantly complied. \n\n\"Now, how much swimming have you actually done?\" Jason asked.\n\n\"Well, I took some lessons as a young girl. I'm not that bad, I think,\" Jillian added.\n\n\"Let me see you kick while I hold your hands,\" Jason instructed. \n\nHe ran Jillian through a series of tests and was glad to see she had some basics of swimming down. Jason had her try freestyle swimming across the pool width wise. Like most novice swimmers, she lacked the ability to breathe properly and just swam with her head up. ",
        "Jason had leisurely breast stroked alongside her as she swam and thus got to the wall on the other side with her. He worked with her for the better part of a half hour on the proper way to breathe while swimming. Jillian remembered some of it from her earlier lessons as well and caught on quick despite the fact it wasn't easy for her. Several times, she breathed in too much water and stopped swimming as she coughed the water from her mouth.  Jason was letting her continue practicing when a familiar face entered the pool in her suit too.\n\n\"Hey, Jason, getting some early practice in?\" Beth joked.\n\n\"Not entirely. I'm teaching Jillian here how to swim for exercise,\" Jason mentioned as Jillian again took in too much water and had to stop to clear her mouth. \n\nBeth looked over at the rookie swimmer and Jason wondered if he saw jealousy or just distain for a poor swimmer from the look on her face. She smiled though when she turned back. \n\n\"Looks like you have your hands full. I hope not too full,\" Beth chided, \"and you're ready for our date later.\"\n\n\"No doubt. I'll pick you up at six,\" Jason stated.\n\n\"Sounds good. Where'd you meet her?\" Beth asked with obvious curiosity glancing back again at Jillian.\n\n\"She came into the infirmary,\" Jason explained. \"She is a freshman here from Kentucky and very lonely. She's gained twenty pounds as a result and I offered to help her learn to swim to work off the weight.\"\n\n\"Aren't you the Good Samaritan,\" Beth proclaimed.\n\n\"That's what Doctor Jenny said too. She told me not to get too involved in the patients.\"\n\n\"Good advice,\" Beth concurred.\n\n\"What are you doing here? A little extra practice?\" Jason queried.\n\n\"Yeah, and I wanted to work out before our date,\" Beth stated.\n\n\"Well, I'll catch you later,\" Jason said as he saw Jillian stop at the other end of the pool and look back. \"I better get back to teaching.\"\n\n\"If you're really good at it maybe you could give me some?\" Beth said jokingly.\n\n\"I'll teach you something alright,\" Jason mused.\n\n\"Good, I'm ready to learn, teacher,\" Beth effused with a giggle before diving into the water and swimming away.\n\nJason had Jillian swim back to him as he watched. Her stroke was not even and she ended up hitting the sidewall before reaching the end. Her attempts at proper breathing were improving though. Jason met her back in the shallow end. \n\n\"You're doing great,\" Jason exclaimed.\n\n\"This breathing is tough,\" Jillian complained. \"And I can't go straight.\"\n\n\"It will all come to you the more you do it,\" Jason instructed.\n\n\"I hope so,\" Jillian professed.\n\n\"You'll see,\" Jason said.\n\n\"Who is the pretty redhead?\" Jillian asked.\n\n\"My date for tonight,\" Jason offered.\n\n\"Oh,\" Jillian replied.\n\n\"She's on the swim team,\" Jason added.\n\n\"You swimmers stick together then?\" Jillian asked amusedly.\n\n\"Not really,\" Jason responded. \"Just worked out like that.\"\n\n\"She's pretty,\" Jillian continued.\n\n\"Yes, she is,\" Jason agreed. \"If you want I'll introduce you?\" Jason asked.\n\n\"Oh, let her do her work out. Some other time maybe,\" Jillian said.\n\n\"Okay, let's get on with your training,\" Jason expressed.\n\nHe stayed with Jillian a little longer, teaching her a few pointers for breathing better. They left before Beth finished her work out and Jason drove Jillian back home once they had dressed.\n\n\"Thanks, Jason,\" Jillian said parked at the curb to her dorm.\n\n\"No problem,\" Jason answered.\n\n\"You've been great to do this for me and I promise I'll continue to work out,\" Jillian said.\n\n\"You better. Your complexion looks better too than the first time I saw you. Is the medicine from Dr. Jenny helping?\"\n\n\"I think so and I'm watching my diet more.\"\n\n\"Good! You can still come to practice early on Monday if you want me to watch you swim some more?\"\n\n\"Yeah, I probably will,\" Jillian said.\n\n\"Okay, see ya,\" Jason stated.\n\n\"Bye and thanks again,\" Jillian declared.\n\nJason drove back to the frat. It was already three so he didn't have much time before his date with Beth. He tried to study but ended up falling asleep and not waking up till five. He studied another few minutes and then showered. He'd had the same clothes on for two days and was glad to put on fresh clothes before his double date with Beth, Haden, Beth's roommate, and her new boy friend from a shared class. \n\nJason picked up Beth at six like he had told her. Haden and her friend were there too and they all piled in Jason's car for the ride to go bowling. Haden's friend from class was Mike. On the ride to the bowling alley, Jason learned that they were in a marketing class together. \n\n'Beth looks beautiful,' Jason thought as he glanced at her in the passenger seat beside him. She was talking to Haden and Mike in the back giving him time to observe her as he concentrated on driving too. Beth had her beautiful long red hair pulled back into a ponytail. She had just a hint of make-up on and her lips looked luscious with some kind of gloss. Her clothes were also cute with a short pair of shorts and a tight tank top. Despite all his recent sex, Jason felt himself getting horny again just watching her talk to the other passengers. \n\nThey arrived at the bowling alley and were fortunate to get the only remaining open lane. They rented shoes and found their balls from the racks. Jason had done a bit of bowling in high school and looked for a good ball he could curve down the alley. Mike chose a lighter weight ball and the girls both found pink ones that fit. \n\nThey bowled three games with the guys competing against the women and spotting them fifty pins each game. The guys lost the first game to the very competitive gals. Beth was really good and they won the first game by five pins much to their delight and friendly ribbing of the guys.\n\nThe second game Jason found his groove and Mike did a little better, and they won the second game by twenty nine pins. Beth had done well with a one forty but Haden held them down despite a slightly better game than the first. \n\nThe third game would determine the winners and the girls won a concession by getting the guys to agree to seventy pins this time as a spot.  Once again, Jason bowled well but fell short of his second game. Beth gleefully bowled a very good game which sealed the guy's fate. Beth and Haden teased the guys as they checked out at the cash register. Mike and Jason split the tab and they agreed to go to the diner for something to eat.\n\nThe conversation was raucous, with plenty of ribbing as they drove the short distance to the diner. Beth and Haden teased the guys that they were owed some prize for winning. The guys replied their prize was not being left at the diner to walk home. The kidding continued a little longer but switched to other things as they talked over burgers and fries. \n\n'Mike was a little quiet,' Jason thought but seemed like a nice guy. Haden was a little reserved too and Beth and Jason carried most of the conversation. They talked about swimming and school among other things. Jason described life in the frat at one point, which interested the others still all living in the dorms. Beth and Haden were being pursued by a sorority where several of the members of the swim team belonged. Beth wasn't sure it was for her though and listened to Jason's opinions on the frat. It had been a good experience for him so far. \n\nAfter they had finished eating, Jason drove them back to the dorm. He was beginning to wonder how things would transpire once he got there so that he and Beth could be alone. Beth handled that smoothly as he pulled into the campus main road. \n\n\"Haden, Jason and I are going to talk a while yet. We'll drop you two at the door and then park the car,\" Beth explained.\n\n\"Okay,\" Haden allowed knowingly.\n\nJason wondered if this had been preplanned but went with it anyway. They dropped Mike and Haden and said their goodbyes. Jason then pulled around the building to the parking lot like Beth had said. On the way, however, Beth had other ideas.\n\n\"Not this parking lot,\" Beth said, indicating the one next to her dorm. \"How about the one back by the stadium?\"\n\nJason looked at the mischievously smiling Beth, \"Okay, sure,\" he replied.\n\n\"Find a dark, quiet spot,\" Beth instructed, still smiling naughtily. \n\n\"What have you got in mind?\" Jason asked, playing along.\n\n\"Oh, you'll see, big boy. You'll see,\" Beth stated amusedly.\n\nJason pulled around the back of the campus to a secluded part of the parking lot he had noticed while running one day. From this spot, Jason hoped any campus security car pulling around to the back of campus would not see them and stop short of coming back to this partially obscured location. Trees blocked the view of the main parking lot from where they stopped in a back corner. \n\n\"This looks good,\" Beth stated as Jason turned the car off. \n\n\"I think we're safe here for a while,\" Jason concluded.\n\n\"Yeah, this field isn't used much at night this time of year, I think,\" Beth said referring to a soccer field behind them.\n\n\"True,\" Jason agreed.\n\n\"Last one in the back is a rotten egg!\" Beth suddenly squealed as she got the jump on Jason by opening the door and bolting out. \n\nJason wiggled out from behind the driver's seat and quickly sprawled between the seats into the back. It wasn't easy with his long body. Beth beat him to being seated but he argued that he was actually in back first. They kidded each other which led to tickling. A little tickling, led to kissing, and more tickling, with Beth trapped underneath Jason. His hips had her legs spread wide open under him. \n\n\"Cheater,\" Beth howled as he tried to get his fingers under her armpit again. \n\n\"Rotten Egg,\" Jason accused as he kept trying to tickle her between kisses.  \n\n\"Stop,\" Beth shouted laughingly. \n\n\"Stop kissing you?\" Jason questioned merrily.\n\n\"No, stop tickling me,\" Beth protested between laughs and wiggling around to get away.\n\nJason did finally stop and the kissing became more serious. Instead of the stolen pecks between laughter, he managed to get her to calm down enough to concentrate on kissing. He delighted in her soft wet mouth and tender lips. Their breath mingled as they kissed and soon Beth's tongue started a new battle for supremacy. \n\nAs the urgency of their kisses increase, Beth's hands began unbuttoning Jason's shirt. His were busy caressing her sides and pushing her tight shirt up to expose her bare skin above her bellybutton. A few more seconds and the shirt rose higher to show the underside of her lacy bra. When Beth pushed him up to get at the last two buttons on his shirt, Jason took the same opportunity to pull her shirt over her breasts and over her head. He dropped it on the floor as she peeled his shirt from his shoulders.\n\nSoon they were back to kissing and bare flesh touched bare flesh as they pressed together. Jason's bare broad chest flattened Beth's bra covered tits. As they kissed, Jason's hands worked behind her until he felt the clasp of her bra. He adeptly opened it and she helped him as she shrugged it off her breasts and shoulders and he removed it completely. \n\nJason looked down at her in the dim light from a half moon on a clear night. Her skin was dappled with light through the car windows. Her pale skin shown exotically and one breast and nipple were bathed in moonlight. The white skin and deliciously pink nipple invited his mouth. He moved down slightly to take her beautiful nipple in his mouth. Beth groaned as he sucked in the sensitive bud and teased it with his tongue. Beth held his head to her breast and enjoyed the wonderful feeling. \n\nJason switched breasts and sucked on the second one. The fingers of his right hand found and played with the already wet and engorged nipple of her left breast. His left hand pinched her firm right tit, pushing more of the nipple and breast into his mouth.\n\n\"Oh, god, that feels good,\" Beth hissed.\n\n\"I love your nipples,\" Jason replied.\n\n\"Thanks,\" Beth answered.\n\nShe let Jason feast on her tits a little longer before pushing him to sit up. He looked at her questioning until her hands went straight to his belt buckle. She opened his belt and popped the button on top of his pants. \n\n\"Sit back,\" Beth said, struggling to get out from under him and push him back.\n\n\"Okay,\" Jason agreed.\n\nHe leaned against the door and watched Beth finish opening his pant. He helped her remove his pants and boxers in a matter of seconds. His cock was already semi-hard from sucking her beautiful tits. When she pushed him back again, it flopped to one side like a droopy trunk.\n\n\"There he is,\" Beth said.\n\n\"There who is,\" Jason joked with her.\n\n\"What I've wanted to see all week,\" Beth stated.\n\n\"You have?\"\n\n\"Yes, I've been thinking about this big guy all week,\" Beth exclaimed, moving her hand to hold it up.\n\n\"Gosh, maybe I should be jealous of him,\" Jason said. \"I would have hoped you had thought about me too.\"\n\n\"Oh, you were always attached to him,\" Beth assured him jokingly.\n\n\"Oh, funny. So all I am to you is his holder,\" Jason complained, acting hurt.\n\n\"Something like that,\" Beth said giggling. \"Now sit back and shut up.\"\n\nAs Beth said that, she wiggled his semi-hard cock back and forth. She liked watching the growing head flop back and forth like a sleeping snake. Her hand movements and the way she looked affectionately at his cock made the sleeping snake come alive more. Beth crawled up between Jason's legs, making him spread them wider. Her hand laid his stiffening cock down pointing towards his navel as she decided to play with his big testicles in their soft sack.\n\nJason looked between her pretty face and her hands on his cock. Beth's hair was still in a ponytail from bowling and the moonlight cast one side of her cute face in dim light. He watched her staring eyes as she looked lovingly at the growing penis in her hand. It was nearly completely hard and the head had flared out to the large, giant mushroom size she remembered. Beth bent down to kiss it.\n\n\"Oh, geez,\" Jason gasped at the tender touch of her soft lips to his cockhead. \n\nThe kisses continued until her tongue snaked out like a serpent and teased along the ridge of the head and around to the sensitive underside. She flicked her tongue back and forth there and moved up to play with the tiny hole in the tip. \n\n\"God, you're driving me nuts,\" Jason pleaded for her to speed up.\n\n\"What's the matter?\" Beth asked gleefully. \"Don't you like it when I go slow and tender?\"\n\n\"No, it's fine,\" Jason groaned with pleasure. \"It's just that you are torturing me with your slow touches.\"\n\n\"Just relax, big boy, and let me play with him for a while,\" Beth chided.\n\n\"Okay, okay, god,\" Jason moaned.\n\nBeth pushed his cock back up onto his belly. The head now reached his navel and then some. She fastened her mouth to the underside of his shaft and sucked along it to his balls and back, like she was eating corn on the cob. Each time she reached his balls, she held them up to her mouth with her hand, and sucked on each ball in turn. By the time she was ready to suck on the head, his cock and balls were wet with her saliva, and a drop of pre-cum had leaked from his tip to connect in a string to his belly. When Beth lifted his cock to suck it, the string caught the moonlight and shone until it stretched too far and broke. \n\nBeth saw that and giggled to herself as she sucked the helmet shaped head into her mouth. She licked at the smooth, yet blood engorged head and drew another moan from Jason and a drop of pre-cum into her mouth. She teased the head and sucked on it before she started bobbing up and down on his dick. Beth simply loved sucking his cock but she only kept it up a few moments longer. Her pussy had waited all week for this and it was screaming at her now for relief. \n\nBeth sat back on her heels and undid her shorts. She pushed those down her legs, revealing her pretty print panties beneath. Jason watched intently as she shed first the shorts and followed those with the panties. He caught fast glimpses of her pink pussy as she moved in and out of the dappled moonlight until she had everything off. \n\nBeth climbed into position above Jason. His stiff boner made her go high to get on top of it. She reached down to guide him into her as she spread her pussy lips too. Beth settled on the spongy head and nestled it into her hole. \n\n\"Oh, god,\" Beth gasped from sheer bliss as the touch of his cockhead to her wet lips began to answer the desperate need she felt.\n\n\"Sit on it, Beth,\" Jason encouraged, his own need evident.\n\n\"Fuck,\" Beth groaned as the first few inches of Jason cock forced open the tight wet entrance to her womanhood. \n\n\"God, damn,\" Jason growled. \"You're tight!\"\n\n\"Oh, you feel so good,\" Beth moaned aloud. \"I love your big cock.\"\n\nJason grabbed her hips to steady her but also to help pull her down onto his lance. Beth settled lower, feeling him stretch her insides deliciously. Her cunt was soaking wet and it was a good thing because his hard huge cock was like a wedge spreading her pussy wide open. The last few inches were like a pleasureful bat inside her.\n\n\"Argh,\" Beth groaned as Jason's cock hit areas deep inside her. \n\n\"Fuck it, babe,\" Jason encouraged, having recovered a little from her great blowjob and feeling ready to pound her tender cunt into submission.\n\n\"Mmm,\" Beth purred as she held still with Jason's cock wedged deep into her core. \n\nThis was the pleasure she had sought all week. The feeling was incredible and she savored the intensity even as her body still craved more. 'Go on, fuck him,' her brain screamed at her, even as she waited to enjoy more of the stuffed feeling of his cock, with over a half foot inside her. Eventually her body won out and she began to move slowly at first. She tried to will herself to go slow and enjoy it but it wasn't to be. Jason's urging hands on her hips and her own desires soon had her fucking him like a bucking bronco. \n\n\"Oh, fuck,\" Beth moaned as she rode him.\n\n\"Cum on my cock, Beth!\" Jason yelled as his hands reached for her firm breasts.\n\n\"Your cock feels wonderful,\" Beth groaned.\n\n\"Your pussy is so fucking tight,\" Jason growled with delight.\n\nBeth came first. The intensity of the week's wait had her body on fire. His fingers pulling her nipples and kneading her breasts, adding even more stimulation to drive her crazy. Her pussy gushed with her juices as she continued to ride him like a jockey halfway through a mile long race. 'So fucking good,' Beth moaned to herself as her orgasm crested and she rode the waves like a tsunami.  \n\nWaves of pleasure coursed through Beth's body as she continued to pound up and down on Jason's steely cock. Her juices leaked from her pussy, down his cock to his balls, which became soaked. She had barely recovered from her first orgasm when she could already feel a mind-blowing one coming on fast. She increased her bouncing on Jason's cock, despite her legs beginning to grow weary. \n\nThey were both in a frenzy now to achieve orgasm. Jason bucked up into Beth's clutching pussy, as she pounced down onto the stiff cock imbedded deep inside her. They rode each other until they were hot and sweaty despite the cooling night air. \n\n\"Oh, shit!\" Beth howled as her climax approached.\n\n\"Ride that dick!\" Jason shouted as he felt his balls pulling tighter to his shaft. \n\n\"Cum inside me, Jason,\" Beth pleaded as she neared her orgasm.\n\n\"Here it comes, babe,\" Jason declared as his cock pulsed and throbbed inside Beth's cunt.\n\n\"God, do it!\" Beth screamed.\n\n\"Now!\" Jason shouted as his cock began to spew cum in thick bolts into Beth's squeezing pussy.\n\n\"Oh, fuck!\" Beth exclaimed as she felt Jason's cum hose her insides with intense heat.\n\nBeth's climax triggered seconds after she felt Jason cumming inside her. Her brain seemed to freeze in an unending state of bliss. Her tired legs barely kept moving as waves of intense pleasure shot through her like pulses of pure energy. Her thighs quivered with the strain despite being in great shape. Her juices exploded in a waterfall of wetness down onto Jason. His cock and balls were completely soaked in their combined fluids and his ass felt wet from the overflow to the seat. ",
        "They rode out the incredibly intense orgasms to their joint ending. Eventually, Beth collapsed onto Jason's sweaty and heaving chest. Her own breathe ragged and her body wet with perspiration. They hugged each other for a long time until both were finally breathing more normal. Finally, Beth moved her head from Jason's shoulder to look him in the eye.\n\n\"Good, god, that was incredible!\" Beth exclaimed.\n\n\"It sure was,\" Jason agreed.\n\n\"I love you,\" Beth said, looking into his eyes.\n\n\"I love you too,\" Jason found himself saying back. \n\n'Oh, my god, what does this mean,' Jason thought as Beth smiled weakly at him in her exhausted state. \n\n'Had they crossed a path? Had they reached a new place?' Jason found himself wondering. Beth's smile told him how happy she was, followed by the tender but passionate kiss she laid on him. He kissed her back but his mind was reeling. 'What was happening? Was this the end of the contest? Had he chosen Beth or had she chosen him? He was a mass of confusion as he reacted to her kisses and looked into her gorgeous and happy face. There was no denying he had strong feelings for her. 'But how strong?' he wondered. \n\nBeth wiggled her hips which moved her cunt on Jason's cock. His deflating member slipped from her stretched and soaked hole like a submarine from its berth. As soon as it parted, a flood of cum raced from her to soak Jason's cock once again. They were both a wet mess and they shifted to look for the tissues Jason kept up front. Beth found them first and pulled several from the box. She stuck a bunch between her legs and handed Jason the box. He took it and grabbed a bunch too. \n\nAfter more kissing, they dressed and climbed back into the front seat. Beth was all smiles and talked about several things like upcoming dances and concerts as they drove back to her dorm. Jason wasn't sure if he should invite her back to his place for the night or not. He pulled in front of her dorm and after more kisses, they parted. He drove to the frat not even remembering how he got there. \n\nHis mind was racing like a freight train. 'Was he done with other girls? Is that what they meant when they said they loved each other? Or was it just a friendship or fuck-buddy kind of love? Were they going together?' he thought as his confusion grew. He barely remembered getting ready for bed. He didn't remember even when he fell asleep.\n\nShowering the next morning, Jason was still in a funk. He couldn't stop thinking about Beth. He did love her but was that it. Was it the real thing? He thought he had loved Lana. No, he was sure he had loved Lana. Right? He must have but now he wasn't sure of anything. He tried to study all day but thoughts of Beth haunted him like a beautiful ghost.  He got little done as his tutoring time with Sheila approached.  "
    ],
    "authorname": "BlewWater69",
    "tags": [
        "virgins",
        "frat",
        "dorm",
        "college",
        "cherry"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-cherry-poppers-ch-18"
}