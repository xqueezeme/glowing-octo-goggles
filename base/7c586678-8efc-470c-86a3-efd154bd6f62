{
    "title": "Oil of Roses Ch. 31",
    "pages": [
        "Thanks to Sammi Scott, aka Titsy McYarn, the Cute at the Heart of the Abyss for her help and valuable critique. Bounteous thanks to Kevin for his incredibly thorough critiquing and voluminous notes. Thanks to Sensual Curves for her help in proofreading.\n\nThanks to my wife for handling the editing duties on this chapter.\n\nAfter you've read this, if you have any inclination at all to comment, please do so, either by email or on the comment board... The best way for me to grow and improve as an author is to hear from the people who read my work. \n\nI welcome constructive critiques and non-abusive comments. I will answer, in at least a semi-prompt manner, any email that comes with an email address. \n\nIf you feel you must respond in a hateful or angry fashion, you may put your head down upon your desk and do so, quietly to yourself, for as long as you feel it necessary. This story may not be copied to other sites without my permission.\n\nIf you have not read the earlier installment(s) of this tale, it would probably help you to make sense of this one if you did so.\n\n             * * * * *       \n\nHarry opened his eyes slowly, at peace with himself and the world. He was home. He was back in the arms of his family. He was where he belonged.\n\nHe looked to his left and saw the beautiful and naked forms of Kelly, Carol and Margo still asleep, all entwined together. It was a sight to make anyone's heart burst with joy.\n\n\"Mornin' bro,\" Nicki whispered from his right side where she was curled up next to him. \n\n\"Morning... what are you doing awake?\"\n\n\"Oh, planning out my day's activities... moving out, stuff like that.\"\n\n\"What?\" he said, much louder than he'd meant to.\n\n\"Quiet, you'll wake the sleeping beauties... yeah, got me an apartment and everything. Carol had Daggett draw up an employment contract for me and between you, me and the bedposts, she's a pretty generous boss. So I'm moving out.\"\n\nHarry rolled over to face her, marveling at the previous night's memories.\n\n\"But why, God knows we've got plenty of room...\"\n\n\"Yes, yes you do... but I had a nice long talk with the three bodacious ones over there and they begrudgingly had to admit that I might be right in what I was thinking... the quickest way for me to wear out my welcome in y'all's bed was to continue to live here. \n\n\"Harry, I love you, and I love them, but I'm not a part of this marriage and never will be... that's too kinky even for me, I think. The four of you are a unit, solid as a rock. I'm just a tasty piece of tail on the side for all of you and I'm blissfully happy with things that way... trust me. Ask Carol, your hoodoo woman; I'm not another Kelly, protesting too much, I'm someone looking for her own fairy tale now... and I believe I'm going to find it or make it for myself.\n\n\"Carol and I will continue to work with each other, courtesy of the internet as well as me spending a lot of time over here during the week. You won't be able to keep me away from parties and family get-togethers... I just won't live here. You understand?\"\n\n\"Yeah, yeah I think I do,\" he said. \"So, where you moving to?\"\n\n\"Oh, just down Trousdale, about eight blocks... still almost in the neighborhood. A guy has renovated an old house into four good-sized apartments. So later today with the help of manly men like Eddy... and Karen... as well as the three Graces over there and Patricia and Tamara, I'll be out of here and into there.\n\n\"I am gonna miss that bathroom though...\"\n\n\"Well, come on sis, who wouldn't?\"\n\n\"Good point...\"\n\n\"And you're always welcome to come over and use it... just as long as I don't see you over here every time you need to go the john,\" he added, smiling.\n\n              * * * * *\n\nThe two of them made a bathroom visit and then lay in bed cuddling and talking softly until signs of life appeared in the pile of bodies next to them.\n\nKelly cracked an eyelid open and muttered, \"Harry... honey... if you're awake, why the fuck don't I smell coffee?\"\n\n\"Didn't want to wake anyone prematurely... the smell of coffee's been known to do that.\"\n\n\"Good point... but I'm awake now... sorta... and if I don't have coffee soon... my love, things could get ugly.\"\n\nChuckling to himself he got up and pulled on a robe. \"Come on Nicki, help me get some coffee and food started for these poor dears... Kelly, can you wake up your wives... gently please.\"\n\n\"Right... gently...\"\n\n              * * * * *\n\nHarry was not at all surprised to see Kelly being carried, kicking and screaming, into the kitchen by Margo and Carol... all three of them naked as the day they were born.\n\n\"Nicki darling, be a dear and get the back door for us,\" Margo asked.\n\n\"NICKI, IF YOU DO I'LL...\"\n\n\"You'll what, oh about-to-be-wet Princess?\" Carol inquired, grinning evilly. \n\n\"I'LL...\"\n\n\"You'll lose coffee privileges for the morning if that sentence goes much further,\" Harry replied calmly.\n\n\"OPEN THE GODDAMN DOOR ALREADY THEN!\"\n\nA few moments later, after a scream and a splash, Margo and Carol came back in, dusting off their hands to signify a job well done. \n\n\"Well, we're off to grab robes and then we'll be back,\" Margo said. \"I hope that coffee's ready.\"\n\n\"It is,\" Harry replied. \"Tickled you?\"\n\n\"Ahyup,\" Carol said, \"shoulda known better.\"\n\n\"Harry!\" came a call from outside. He went to the back door and looked out. \n\n\"Yes?\"\n\n\"Would you be a love and fetch me a towel, please?\" Kelly said, leaning her head on her arms as they rested on the edge of the pool, her beautiful form floating on the water behind.\n\n\"Of course my darling, and there'll be a robe and coffee for you in the kitchen when you get in.\"\n\n\"You are a god... as well as a traitorous scum... but I'll forgive you for that... for now.\"\n\n\"You are too good to me, my love.\"\n\n\"I know.\"\n\nWithin another fifteen minutes everyone was seated at the table, digging into one of Harry's breakfasts and they were almost through the second pot of coffee.\n\n              * * * * *\n\nThe evening at Jessica and Quan's hadn't really ended as of the next morning, even though it'd been interrupted by a few naps. All three of them had decided to call in sick. \n\n\"Oh yes, Jessica loves her little girl... oh... God... that's good,\" Jessica moaned as Wendy fucked her for the fourth or fifth time, no one was really sure anymore.\n\nQuan was curled up next to her, arms wrapped around her waist, mouth firmly attached to her breast. \n\n\"Quan baby, are you sure you don't want to try her? She's very... energetic...\"\n\nQuan shook her head, never breaking suction on Jess' breast. Her needs had been met earlier in the evening both orally and with the help of a strap-on that Jess had driven into her like she was trying to split her in half.\n\n\"Well then, little girl, I guess I'm just going to keep you all to myself,\" Jessica said, pulling Wendy down to kiss her. \n\nAfter the kiss ended, Jess looked down and caressed Quan's face. \"Sweetie, are you sober enough to make a run to the Walgreens? I think this is the last condom in the house and I know I'm gonna need another before too much longer.\"\n\n\"Uh... yeah... I can walk it... I guess I better pick up the economy pack, huh?\"\n\n\"It would probably be a good idea.\" She nuzzled her lover's ear. \"And when you get back, I'm thinking it's time to take the little girl's virginity.\"\n\n\"You mean...\"\n\n\"Oh yeah...\"\n\n              * * * * *\n\nBreakfast finished and the plans for the closet renovations inspected and approved, Harry wrapped himself in a towel and slowly walked out to the pool. Shucking the towel scant millimeters before it would have gotten wet his nude body slipped into the pool and he began to swim laps.\n\nAs he did so, he thought about the physical therapy on his leg that was yet to come.\n\nHe thought about what Dr. Lowry, Helen McReady and he had discussed... what he had asked Mike not to tell anyone else.\n\n              * * * * *\n\nWhen Quan stumbled back in from the drug store, Jessica was in the shower and Wendy was stretched out asleep on the bed. Quan put down the large box of condoms and grabbed the bottle of Jack before making her way to the bathroom.\n\n\"Keep your ass in that shower, bitch, I'll be joinin' you in a minute,\" she said, pulling off her clothes.\n\n\"Not a problem... feels good in here.\"\n\n\"Me and Mr. Daniels about to make it feel a whole lot better.\"\n\nAfter the two naked women shared several mouthfuls of liquor, Quan began soaping her lover's back.\n\n\"So, what's up?\"\n\n\"What do you mean?\"\n\n\"Bitch, don't treat me like I'm some mental defective... everything's slow and there's a whole lot of 'maybes' between you and Wendy... whole lot of 'probably nots' between you and me... then all of a sudden you're more than willing to play Queen Bee in our little hive. Not that I'm complaining,\" she leaned over, kissing Jessica's neck while massaging her breasts, \"but even tired, drunk, well-fucked and still horny, I'm not blind.\"\n\n\"Quan... I... I guess I realized that... there I was, two people, beautiful people, people I find attractive, wanting me... and I was all wrapped up in what I didn't have... and I get this invitation from Harry and the others to a party...\n\n\"For fuck's sake, they're happy, Quan! Not that they shouldn't be but... it really pissed me off. And for awhile I didn't know why, and then it hit me. I was mad because they were going on with their lives... and I couldn't believe I was being that stupid and petty. Why was I sitting there being less than happy, trying to hold on to something that wasn't mine anymore, when the two of you were right here? I figure the chances of the three of us, or either you and I or Wendy and I, working out long term are pretty low... but hell, the four of them are fighting tougher odds and they're still in there swinging and they're really happy. Maybe we can be happy too...\"\n\n\"You mean... this isn't just a 'fuck' thing... you'd like to try something serious?\" Quan asked, her voice trembling ever so slightly.\n\n\"Baby, why not? I wanted to be somebody's 'one and only'... now I'm two peoples' 'one and only'... a lot of folks would agree I should stop my whining and realize how lucky I am.\"\n\n\"Let's get outta this shower, Jess, and you come on to bed with me... taking Wendy's ass can wait till she wakes up on her own. I want some time being held.\"\n\n\"You got it, lover.\"\n\n              * * * * *\n\n\"Bevy, property management says we're two months behind on our rent. Time to deal with the mail. Best two out of three, loser has to handle it!\" Perry said, coming in from the parking lot.\n\nThe two of them settled down on the couch with video game controllers in hand and a short time later, Perry was lugging the garbage can where they dumped their mail over to his chair. \n\n\"I shoulda known better'n to let you choose the game,\" he muttered to a silent and serene Bevy. \"Well, least you can do is get that work done on the webcomic you been putting off!\"\n\nBevy nodded and went to the computer while Perry started wading through several months' worth of mail. \"If the damn apartment complex could do automatic payments outta the account, wouldn't have to worry about this shit... never see the utilities not getting' their money... ever'body that can get paid online never misses their money... all of 'em get paid right promptly... goddamn apartment complex still livin' in the stone age...\"\n\nEnvelopes were ripped open and while ninety per cent of the accumulated mail ended up in another garbage can, one that was being used for its original purpose, there was the remaining ten per cent.\n\n\"Bevy! Your sister had her baby... you got a niece... they named her Bobbie Sue Ellen... letter from my grandma ... says she looked at an ep of 'Dinosaur Ho' on my cousin Clyde's computer... says we're goin' to Hell, but she still loves us... got a couple o' checks here from them oil shares your daddy left ya, put them in the 'take to the bank' pile... got another batch o' solicitations from that televangelist you're fuckin' with, let you handle them... my brother writes, says the chow at Huntsville ain't bad, asks if I can put a little more in his account every month, one o' the guys in his cellblock is shakin' him down fer cigarettes... I figger I will, it's better'n listenin' to him whine about bein' somebody's bitch... again... \n\n\"Hey Bevy... we got us an invite to a party for freaks and weirdoes at Harry's place, last Saturday in September. I'm in if'n you are...\"\n\nBevy's enthusiastic nods had Perry on his computer, sending their acceptance in no time at all.\n\n              * * * * *\n\nJessica and Quan laid in bed together, the sleeping Wendy by their side.\n\n\"So you think Wendy's pretty serious about you?\" Quan asked, her mouth taking a break from nuzzling Jessica's neck.\n\n\"I got that impression from the way she was talking,\" Jessica replied. \"I mean, she's already refusing to consider seeing anyone else... I don't expect that to change now that we've become lovers.\"\n\n\"It won't,\" Wendy replied sleepily. \"Why are you wondering, Quan sweetie?\"\n\n\"Well, I was just thinking... if we're all really serious about this, then we probably want to think about moving my mattress in here with yours so we can all have enough space to sleep.\"\n\nTwo sets of excited squeals let Quan know the idea met with her roommates' approval.\n\n              * * * * *\n\nBy the end of the afternoon, it was done. All of her stuff was out of the house; all that she wanted out of storage was in the apartment as well. Her living room was full of friends and family, tired, from the moving or in her brother's case supervising, eating pizza and relaxing.\n\nAnd Nicki Grimes was in her bathroom, sitting on the toilet, crying. \n\nThere was a knock on the door. \"Anybody in there?\" Tamara asked softly.\n\n\"Uh... yeah, yeah... lemme... gimme a few minutes...\"\n\n\"Nicki, are you okay?\"\n\n\"Yeah... no... no, I'm not.\"\n\n\"Can I come in?\"\n\n\"I guess.\"\n\nTamara closed the door behind her and moved past Nicki to sit on the edge of the tub.\n\n\"So, what's not good right now?\"\n\n\"I... I guess... it's all well and good,\" Nicki finally stammered out, \"to be brave and talk about writing your own fairy tale and making your own life... all that. It's another thing when it's time to actually start doing it. Tonight's going to be the first night since all this went down that I'm gonna be left with just myself... well, me and all the fears and doubts... you know, the insecurities sleep-over I'm evidently having.\"\n\n\"Nicki, you know if you're not ready for this yet, Harry and the family won't raise an eyebrow if you move back in, even if you do it right now, this instant. There'd be some bitching and I'm pretty sure you'd be owing people backrubs and such for quite awhile, but nobody would think less of you. We'd have your stuff packed up and back to the house before you could say... well, something that it'd take awhile to say, but you get the picture. You've made some big changes in your life and it seems to me what you're feeling is perfectly normal.\"\n\n\"I couldn't... I mean, I could, but I can't... I can't let myself.\"\n\n\"Well, would you trust me to go talk to Carol, see what she thinks?\"\n\n\"Yeah... I feel like a fourteen-year-old, but yeah... go see what the hoodoo woman has to say. I'm gonna try to get my shit together and then come out and be sociable.\"\n\n\"Okay... Nicki, the most important thing for you to remember, now and always, is that you're among friends... and that means you never have to sit in the bathroom, crying alone, when you're sad.\"\n\n\"Has anyone told you you're priceless today?\" Nicki said, giving the tiny woman a hug.\n\n\"My master assured me of it not more than an hour ago, but the opinions of others are always welcome,\" Tamara said, hugging her back.\n\n              * * * * *\n\n\"Now, I've got you loosened up,\" Jessica said, sliding three fingers in and out of her lover's butt, lubricant dripping from her hand and pooling around Wendy's ass, \"but there's still probably going to be some pain. Are you ready for this?\"\n\n\"I'm... ready,\" Wendy said, although the quaver in her voice gave the lie to her words.\n\nShe lay across a pile of pillows with her already erect prick bent back towards her feet.\n\n\"Now sweetie, try to let me know when you're going to come... if you give me enough time, I'll pull out and wrap my lips around that pretty cock of yours... this is going to be a load I don't want wasted, not a drop, okay?\"\n\n\"Okay... I'll try.\"\n\nIn the corner of the bed, Quan sat against the wall, a large vibrator buried deep in her cunt. Her eyes were half-closed as she watched her lover prepare to take her roommate's virginity.\n\n\"Now Wendy, as someone who has had both, this isn't exactly like when you slide that pretty cock of yours in and out of my cunt,\" Jessica said as she caressed her lover's back in long, smooth strokes, \"but it's somewhat similar, and as close as you and I can manage... unless you ever decide you want a sex change.\"\n\n\"Umm... no...,\" Wendy replied, reveling in the feel of her lover's skin upon hers, \"I enjoy my prick way too much to get rid of it... feels too good sliding in and out of you.\"\n\n\"Fine with me, darling... I'm not wanting you to lose it... I've grown to love it.\" She pulled her fingers out and cleaned them on the damp towel she'd brought in. \"Now then, relax,\" she said as she brought the tip of her strap-on to Wendy's ass. \"Don't be thinking of this as an invasion, don't clamp down on it like it's something you want to expel... relax around it, accept it... know that I love you.\" And she pushed the head into her lover.\n\nSlowly, pausing from time to time, she inched the shaft into Wendy's bowels, whispering to her the entire time. \"That's my beautiful girl... oh, you're doing so well... mmm, such soft skin you have, my love... just relax, the pain passes, trust me... yes, isn't that better?\"\n\nAnd finally Wendy replied, \"Mmm, yes... you're right... that's... very nice... oh... oh... slowly... please... oooooh... have you ever... tried this... Quan?\"\n\n\"No... but I'm watching your face... put me on the sign-up sheet...\" the dark-haired beauty replied as she quivered on the edge of an orgasm.\n\n\"Oh Wendy baby... I wish you could see the view from back here... this big black shaft, glistening wet, sliding in and out of your beautiful butt... damn... I may not be swallowing that load... I may have to slap a rubber on you...\"\n\nWendy squirmed in pleasure on the bed beneath her large lover. \"Oh baby... break my heart... make me bury myself... in that hot, wet, plump pussy of yours.\"\n\n\"You mind if I went face down in Quan while you did?\"\n\n\"Not at all... I'll just wrap my hands... around that beautiful ass of yours... and think about the day... you let me do you... like this... oh God... we better stop talking... or you'd best get that rubber ready...\"\n\n\"How fast do you think you can recover?\"\n\n\"With you? Pretty... fast...\"\n\nJessica pulled the strap-on out of Wendy's ass and slid down, kissing an ass cheek on the way and wrapped her lips around her lover's cock. Her tongue had barely brushed across the bottom before she felt the spasming begin in Wendy's balls as they bounced against her cheek. She opened her throat, relaxing it as Wendy's prick swelled and began to convulse, pumping out a load that subjectively seemed to go on forever. As Wendy trembled above her, balls jerking up and down, Jessica pulled her back off the pillow, pivoting beneath her so that she wasn't sucking her lover sideways. Wendy tried to hold herself up but her knees were weakening and she slowly sank lower and lower, her cock deflating in the aftermath of her climax, Jessica gently and tentatively sucking on it like it was a pacifier. Periodically an after-shock shuddered through Wendy's body and Jessica smiled around the half-limp dick in her mouth.",
        "\"My... God... Jess... I feel so... empty... front and back...\"\n\nJessica released Wendy's prick and brought her lover down to lie next to her. She smiled at the young woman evilly, then kissed her, swirling the remnants of Wendy's own cum in with her kiss. She felt Wendy stiffen, then relax as she accepted the natural end of the act, tasting herself and her lover together. The two of them lay together peacefully until Quan finished her own lonely, orgasm and crawled over to settle in on the other side of Jessica.\n\n\"Bitch,\" she said as she unstrapped the harness from her lover's plump thighs and waist, \"you better hope Wendy darling there recovers damn fast or you'd better not plan on waiting for her before you start on me.\" Quan's dark skin lay in sharp contrast to Jessica's pale color as Quan draped herself over her lover. She nuzzled Jess' ear and whispered, \"You know, you're going to be one busy woman, taking care of the needs of two lovers... I hope you're up to it.\"\n\nA soft snore, almost lady-like, issued from Wendy.\n\n\"Well,\" Jessica replied, \"I'm in luck that one of you is more male than she wants to admit. Head for the bathroom, I'll join you in a minute.\"\n\n              * * * * *\n\nGalena Pessino was a good girl, everyone in her family told her so. She was projected to graduate with honors, took every AP course the high school offered, worked hard helping her mother clean at Ms. Karen's and Mr. Harry's on those rare occasions she needed help... she was a good girl.\n\nAnd she was desperately tired of hearing everyone tell her so. She was even more tired of hearing how smart she was, how talented, how lucky to have a family that supported her ambition to go to college.\n\nWhat she really wanted were the normal things a eighteen-year old girl wanted... a boyfriend, some measure of popularity, the occasional outrageous night that she could write in her blog about.\n\nIt wasn't that she wasn't pretty, she was... in a quiet way that was even further muffled by the clothes her mother bought for her... the most frumpish, unappealing, form-hiding possible... and the glasses she'd worn since she was seven. Her mother never let her change the style of her glasses too much... variations on black plastic frames guaranteed to scare away any guy who might be even remotely interested in her. \n\n\"You don't need to be worrying about boys, boys will come whether you worry about them or not. You need to worry about your grades.\"\n\nHer mother couldn't understand that even in the AP courses, she didn't really have to worry... or work all that hard. She spent the mandatory study hours her mother dictated pursuing her own interests on the Web, writing boring entries into her LiveJournal that almost no one ever read, and occasionally visiting chat rooms devoted to her academic subjects. She'd visited a few social chat rooms, but she'd felt as out of place there as she felt in any social situation. She'd thought about getting a page on MySpace, but figured why should she enter a whole new arena where she could be ignored?\n\nAn unexpected blessing for Galena from her mother getting fired by Ms. Angie was that it led to her mother agreeing that Galena could take care of Mr. Harry's pool. Galena's mother knew nothing about swimming pools or the maintenance thereof. And since Galena was the 'pool-girl', she had an immense amount of freedom to spend necessary, and unnecessary, time at the Grimes house. Carol and she had become fast friends even though a lot of things about Carol's lifestyle had shocked Galena at first. Carol's tendency to cover her nakedness with only a t-shirt when Galena was over and her sexual predilections, which had come out in a girl-talk conversation that would have had her mother dragging her to church by her hair for confession, had been among them. Despite them all, she had realized that Carol was just about her best friend in the whole world.\n\nSo it was that Saturday night Galena had ridden the bus to the Grimes house, desperate to get away from her family, to 'clean the pool'.\n\nAnd found the house empty. Well, she had her mother's key, and she knew to lock the door behind her.\n\nMaybe it had been the lure of the pool, silent and dark in the night, which had started the whole thing. \n\nGalena had stood by the pool and in a moment of unbelievable daring had undressed, slowly, calmly. First she removed the dress which came down to her knees and covered her arms to just above the elbow (if Galena was honest with herself she understood that her mother's rigid attitude towards her youngest daughter's clothing was formed by the unfortunate ordeal of her older sister, Elena, who at fourteen made their mother a grandmother). Then she took off her shoes and socks, socks which came up to her knees. For a moment Galena had paused, feeling the air tease her exposed skin as she stood by the pool in her bra and panties. Slender with breasts that were still deciding if they would take after her mother's and grow to earthy, sensuous, man-hypnotizing size, or take after her grandmother's and remain rather average; hips and butt that were well on their way to developing the curves that would announce her full-blown womanhood; skin that fairly glowed under the faint moonlight, soft and smooth the way a young woman's skin should be. She threw her head back, stretched her arms out to her sides and twirled in place.\n\nThen, feeling delightfully wicked, she added her bra, panties and glasses to the pile of clothing by the pool and dove in, scarcely disturbing the water as she did so. \n\nSkinny-dipping was something she'd never even considered doing before. She reveled in the freedom of gliding through the water unencumbered by clothing, and decided that if she had her way she'd never swim covered again. She knew she'd have to, but it was wonderful to dream. At last she understood why Carol went around naked, and would only throw on the most minimal of clothing for Galena and her mother, although when her mother was there, Carol did add panties to the ensemble.\n\nAfter a few minutes of getting her nerve up, she climbed out of the pool and, while forcing herself to walk, not run, refusing to give in to her embarrassment, she made her way to the diving board and stood naked on the end of it, out in the open, visible to anyone who could see over the twelve-foot fence. While that fence removed some of the sense of daring, it did make her feel a whole lot safer. Almost dancing on the end of the board, she dove deep into the water, reveling in its sensual caress of her entire body.\n\nAnother fifteen minutes in the pool's embrace and she felt a need of a different sort. She continued her evening of wild adventure by drying herself off as best she could, then going inside and making herself a weak rum and coke. She took it to the 'bathroom of doom', as Carol called it, and positioning herself on one of the bidets, played with the controls until she found just the settings she craved. The warms jets of water gently started her on her way towards an orgasm as she sipped her drink with a Mona Lisa-like grin decorating her face.\n\n              * * * * *\n\n\"Harry, Kelly and I are going to stay over here tonight, help get some things squared away in the apartment,\" Margo said, sometime later.\n\n\"Yeah, help her break in the bedroom,\" Kelly added, chuckling evilly. \"Let you and Baby Girl have some together time.\"\n\nA little puzzled, Harry realized that it was another of those situations in life where the best course of action was to agree and find out what was going on at a later date and time.\n\n\"We'll be back in the morning,\" Margo continued. \"Think you can get Eddie and Tamara to give y'all a ride back to the house?\"\n\n\"Shouldn't be a problem,\" Harry responded. \"HEY EDDIE, you got two riding in the back o' the truck.\"\n\n\"Alright.\"\n\n\"See, no problem. Nicki... there's something you and I need to discuss about Dad and Mom... not tonight, but some evening soon, just you and me, okay?\"\n\n\"Sure... uh, how's tomorrow night sound? I know you're off on Monday, so that'll give us plenty of time to talk, just in case things run long.\"\n\n\"Works for me.\"\n\nAfter another hour or so of visiting, everyone went their separate ways. As they neared the park, Harry had a sudden inspiration.\n\n\"Eddie, stop and let us out at the park, we'll walk from there.\"\n\n\"You sure?\"\n\n\"Yeah... I think I am,\" Harry smiled. \"At least I'm pretty well assured this walk will end better than the last one.\"\n\n\"God I hope so,\" Carol said from where she was snuggled up next to him. \"I could live a long, a very long and fruitful life and never have another evening like that.\"\n\nThey climbed out of the back of the truck, and waved at Eddie and Tamara as the two of them drove slowly off into the night, Eddie watching them in the rearview mirror all the while.\n\n\"Got your cellphone, got your whistle, got your straight razor?\"\n\n\"Damn straight, sir... loaded for bear.\"\n\n\"Let's go then.\"\n\nHand in hand they walked to the swings, took seats and started swinging back and forth slowly.\n\n\"Did you know this place is haunted now?\" Carol asked, a look of pain in her eyes belying the smile on her face.\n\n\"Oh really... by whom?\"\n\n\"You... Nicki and I started taking walks in the evening, heard some kids talking. In the 'neighborhood legend' version of events, you didn't live. That's why you haunt the swing set where you were brutally murdered by a man with a hook.\"\n\n\"Wow... mixing all our urban legends in, I see.\"\n\n\"Oh yeah... I'm surprised you're not mourned by a woman in white.\"\n\n\"Give me a few years, I will be... we haven't really talked about how you're doing, sweetheart. All the attention's been on my recovery, Margo's therapy, Kelly joining the family... Margo told me about the talk the two of you had, but that was pretty close on the heels of the attack. How are you doing?\"\n\nThey swung in silence for awhile, then Carol said, \"You die, two or three nights a week... in my dreams, I mean. Sometimes the two of them follow me back to the house and kill everybody there... sometimes they just catch me and kill me... those are the best of a bad lot, as far as those dreams go. When they kill me, that's where it stops, they can't follow me back to the house. Nobody dies but you and me. If I didn't have the freedom to take naps in the afternoon, I don't know how I'd make it on as little sleep as I get sometimes.\"\n\n\"Why the fuck aren't you getting some help? Little Cunt, there's no reason you can't see a therapist, like Margo's doing... hell, you could probably see the same one!\"\n\n\"I've thought about it a lot, sir... I think maybe a big part of me believes I deserve these dreams... that I failed you and these are my punishment.\"\n\n\"No... no my love... as Margo told you, you didn't fail me, you saved my life. If you'd run a touch slower... well, it wouldn't have been one of my better nights. \n\n\"Besides, Little Cunt, you're not the one who decides if you need punishing. That's a job for the rest of us. So let me tell you what's going to happen Monday. You're going to book an appointment with Dr. Stallings. If you don't like him or don't feel you can trust him and be open with him, then we'll find you someone else and we'll keep looking until you do find someone you can work with. Do you understand me?\"\n\n\"Yes sir.\"\n\n\"Good, now let's go home... it's time for your punishment. Silly Little Cunt, thinking you had the right to decide that you deserved to be punished...\"\n\nOn the way back to the house, Harry and Carol steered clear of the illumination cast by the streetlamps. All anyone would have been able to make out was a pair of lovers, walking along with their arms around each others' waists.\n\nThey would have missed the unbuttoned pants that gave Harry's hand access to an ass cheek that he held with an iron grip as his Little Cunt whimpered happily all the way back to their home.\n\nHarry hid his pain well the entire walk to the house.\n\n              * * * * *\n\n\"Wendy, you rest a bit, Quan and I are going to freshen up a bit, then we'll be back out and I'll be needing that fucking you promised, okay?\"\n\n\"Mm-kay... love you,\" Wendy murmured sleepily before resuming her snoring.\n\n\"Love you too, sweetie.\"\n\nShe padded into the bathroom and started up the shower as Quan sat on the toilet, pissing.\n\n\"Thank God she's resilient,\" Jessica said, adjusting the water temp.\n\n\"You should be thanking God she's able to get by on a lot of cat-naps,\" Quan replied, finishing up and preparing to join Jess in the shower. \"I figure after you spend some loving time between my legs and Wendy does that pile-driver trick you enjoy so much, you should probably help the poor dear clean up some and then we all could use some solid sleep. Now that we've run out of booze, I've run out of anesthesia and I'm starting to feel everything we've done in the past thirty-six hours.\"\n\n\"Good point,\" Jessica said, lovingly soaping Quan's crotch. \"About what you said earlier, I kind of thought the two of you were going to be seeing to my needs.\" She smiled.\n\n\"Oh we will, have no doubts about that,\" Quan said, stroking Jessica's face. \"But you see, I love you, I love your body, I love making love with you... I plan to spend a lot of time doing it... and I've got no doubt Wendy feels the same way... now, while you've got two fulfilling your needs, my little Queen Bee, she and I only have one you to split between us.\n\n\"And I don't know about our little darling in there, but I'm very demanding of my lover,\" Quan continued. \"Whereas I think Wendy might well fall to her knees and become your slave, kind of like that girl 'Carol' you told me about, I'm not the slave type. I've got my own 'Queen Bee Quan' urges.\"\n\nJessica's mouth ran down her lover's chest until her tongue brushed Quan's nipple. Then she bit it.\n\n\"OW!\"\n\n\"Any day you want to be 'Queen Bee', my love, let's fight for it... if you win, I'll gladly take bottom... but don't think I'm going to give it to you on a platter.\" She reached up and gently applied pressure to Quan's neck, her other hand doing the same to Quan's breast. \"I've got a lot of aggression built up and I don't want to hurt you or Wendy... at least, not in any way you won't enjoy. But I'm not going to roll over for anyone, even someone I love as much as I'm coming to love you. Are we clear?\"\n\nQuan stretched her throat and neck out, exposing them while she groped behind Jessica's head. Getting a grip she brought Jessica's mouth to her bared throat.\n\nJessica nipped the beautiful skin in front of her. \"I see we have an understanding.\"\n\n              * * * * *\n\n\"So how did the three of you decide who stayed here and who went home with Harry?\" Nicki asked as she pulled another box of kitchen items up on the counter to unpack.\n\n\"It was really pretty easy,\" Kelly said, unloading a box of pots and pans into one of the lower cupboards. \"We figured that Carol gets more than her share of household duties as it is, and she is the senior wife.\"\n\n\"I thought Margo was senior,\" Nicki replied.\n\n\"I was until we realized this was a group marriage,\" Margo said, breaking down a box. \"If we're all married to each other, then it's pretty obvious that the original relationship is Harry and Carol, then I come in, then Kelly.\"\n\n\"Ah... well, it does make sense for things to work out that way,\" Nicki replied. \"I really do want to thank the two of you for staying over tonight... I feel like such a baby.\"\n\n\n\"Nonsense... reality of the situation is, after all the trauma we've all been through in the last two months, pretty much any emotional reaction any of us have is easy to understand,\" Margo said. \"I'm surprised I'm the only one whose in therapy... this has been a nightmare, in so many ways.\"\n\n\"You can say that again,\" Kelly said, handing her another box to break down. \"I've been thinking about it... therapy I mean... I just don't know if I want to put the family to the expense.\"\n\n\"Do you think you'd benefit from spending some time in therapy?\" Margo asked calmly.\n\n\"Yeah, I think I would, but-\"\n\n\"No 'buts' about it, young lady, we'll make an appointment for you to see Dr. Stallings, and if he doesn't work for you, we'll find you one who does. Affording things is not a problem... and most especially where the mental or physical health of one of our family is concerned.\"\n\n\"Yes ma'am.\"\n\n\"Oh, don't give me that... it's just silly to not get you help because of your paranoia about money... like I told your parents. Harry and I make enough that neither you nor Carol need ever work a day in your lives. We love you, you silly bitch... come to think of it, would you like to see someone, Nicki?\"\n\n\"Uh... I probably should, but I don't know if I'm ready to or not. This has all been so... much... that I feel overwhelmed a lot of the time, but I'm not sure I'm ready to go back into therapy... my last bout with it wasn't too successful.\"\n\n\"If you come to the decision that you need to, don't worry about paying for it, we'll cover it out of family funds,\" Margo said. \"I feel pretty safe speaking for the family on that... you agree, Kelly?\"\n\nKelly had a 'deer-in-the-headlights' look about her. \"Uh... I...\"\n\n\"Kelly, darling... you're our wife; you have a voice in our family's decisions, no matter what they be, financial included.\"\n\n\"Uh... certainly... yes, I agree. The family will cover any costs incurred by Nicki for therapy.\"\n\n\"Very good.\"\n\n\"Well, that's sweet you guys, but I couldn't-\"\n\n\"NICKI!\"\n\n\"Yes ma'am?\"\n\n\"The issue's been resolved.\"\n\n\"Feeling a little Domme tonight, Margo?\" Kelly asked, smiling.\n\n\"Apparently so... I'm sorry,\" Margo said, turning back from the cabinets. \"I just...\"\n\n\nShe was greeted by the sight of Nicki and Kelly, faces down turned and arms crossed at the wrists before them.\n\n\"Yours to command, Madam,\" said Kelly.\n\n\"I live to serve, Madam,\" chimed in Nicki.\n\n\"Well, let's finish up with the kitchen ladies, the bathroom and then the bedroom await!\"\n\n              * * * * *\n\n\"Now then, Little Cunt, I'm going to give you three chances, and only three, to convince me to fuck your ass tonight,\" Harry said as they unlocked the front door and walked in. \"The rest of the time you're going to be gagged. And if you're not very persuasive in those... oh, three minutes per attempt, then there's going to just be a whole lot of spanking without any other happy ass play tonight.\"\n\n\"Sir please I-\"\n\n\"QUIET! Not another word... this is not one of your three chances.\"\n\n              * * * * *\n\nWhile any of her brothers or sisters, especially Elena, would've been much more adept at talking their way out of the situation Galena found herself in, they weren't there and she was. One of her first big 'outrageous' evenings and she found herself trapped in a house where she shouldn't really be, although she knew there'd be no problem if she just called out she was there... well, except for the being naked part, the drinking part, the masturbating on their bidet part. She was pretty sure Carol would laugh it off but she wasn't sure about Harry... he might call her mother and that would be the end of the world.\n\nShe did what any terrified teenager would do. She panicked. She killed the jets and scurried into the bedroom, hoping to somehow sneak past them into the back yard where her clothes were. She'd picked up her glasses... nine years of wearing them every hour she was awake had made that automatic, but her clothes were out back.\n\nIn the living room Harry was stripping the clothes off Carol and throwing them into a corner. Galena peeked around the corner in time to see him remove her underwear.\n\n\"You go in the kitchen, get us some water,\" he said, \"I'm going to go get your gag.\"\n\nAnd then he started walking towards the bedroom, taking his shirt off as he came. Galena crept back away from the door and froze against the wall. If he didn't turn on the lights, she wouldn't be seen... maybe.",
        "Harry walked through the bedroom to the closet where they kept their toys. Finding the ball-gag without any trouble he headed towards the kitchen, never noticing the small crouching, naked woman hiding in the corner.\n\nIn the kitchen, Carol's eyes registered something out by the pool that her mind filed away to be thought about later. Meeting her Master in the kitchen door with two sports bottles full of water and fruit juice, she wriggled and squirmed happily as he gagged her and led her to the bedroom.\n\nHearing them coming, Galena had made a dash for the open closet, and once inside, in the very dim light found herself in a tangle of equipment she had no idea the purpose of.\n\n              * * * * *\n\nAs Harry started rigging up the bedposts, there was a sound from the closet.\n\n\"I probably dislodged something when I got the gag,\" he thought to himself.\n\nCarol heard the noise too and when she went to the bathroom and saw the drink sitting by the bidet, things clicked together in her mind. The 'something' by the pool resolved into a pile of clothes... a dress she recognized. Pouring the drink and ice cubes down the drain she freshened up and hoped the young girl had the sense to sneak out when Carol gave her the chance. Galena was going to get a stern talking-to later in the week. Then Carol giggled to herself... well, a semi-stern talking-to, at least.\n\n              * * * * *\n\nGalena looked through the closet door to the clock by the bed. She had to get her clothes and get to the bus stop in the next forty to forty-five minutes or she'd end up walking home... or having to let Carol and Harry know she was there and get them to give her a ride home. \n\nNeither was an option she wanted to explore.\n\n              * * * * *\n\nCarol came back from the bathroom and motioned that she wanted the gag removed.\n\n\"I don't think so... it's not time yet, Little Cunt. Get up on the bed.\"\n\nCarol hoped that Galena was either ready for what she was about to see, or smart enough not to watch if she wasn't.\n\n              * * * * *\n\nHarry went around the room lighting candles after he'd secured Carol into position. She was bent over a large and very firm pillow; her arms ran beneath the pillow to the manacles and the lengths of chain that fastened them to the matching set on her ankles. More for show than anything else, given the amount of slack in the lines, the D-rings on her collar were secured by chain to bedposts as were her ankle manacles, somewhat more tightly, on the other end. Her legs were held apart by an ankle spreader and were it not for the sixteen-year-old in the closet, Carol would have been in heaven... secured and totally exposed to her husband, about to be punished, with three chances to convince him to give her what she wanted. She knew if she put her mind to it, she'd only need one.\n\nGalena crouched in the closet, hidden in some of Margo's outfits, with a view out the wide crack of the closet door that let her see all of Carol's exposure.\n\nSuddenly the door opened all the way and the light clicked on. Galena froze in terror. Her naked lower body was visible beneath the bottoms of the hanging clothes, her foot and ankle were out in plain sight!\n\nHarry rummaged through the pile of equipment which drew Galena's eyes almost against her will. She'd never seen anything like most of it before, although paddles and whips and such were easy to figure out. He pulled out a pair of paddles and then clicked off the light, leaving the door wide open.\n\nGalena knew she had a choice... she could close her eyes, try not to hear what was about to happen, try not to think about the first adult penis she'd ever seen, the penis that had swung freely within touching distance just a few moments before. \n\nAs her hand went down between her legs, she knew any further thought on the matter was futile.\n\n              * * * * *\n\nHarry started the spanking with a basic flat, leather-wrapped paddle. He shifted from one butt cheek to the other, back and forth, until the smell of Carol's arousal drove him to put the paddle down, bring his nose to her moist cunt, sniff deeply and then mount her from behind. With no prelude or foreplay, he slid into her and found, as he knew he would, that she was more than ready for him.\n\n\"Damn you, you smell so good... I think a few strokes... oh... yeah... oh... will be all... I need... oh God, beautiful, oh...\" He came inside her, riding out the throes of his orgasm while roughly kneading her slightly reddened ass. \"Would I be correct, Little Cunt, in saying that you like being used, just as you like being spanked?\"\n\nCarol nodded vigorously while she prayed that he would continue to fuck her for a bit longer as that was all she needed to go over the edge into her own climax.\n\nBut Harry pulled out, the mixture of both their fluids dripping from his cock and running down from her cunt, hearing her whimpers as he did so.\n\n\"There, that's better... where was I?\" And then he picked up the paddle and returned to spanking her. Steady, measured, firm strokes fell on her ass cheeks, first one, then the other, like he was a machine. The redness rose and the lovely globes of her bottom began to swell.\n\nPeriodically he would stop and ask, \"Is everything alright, my little butt slut?\" After she nodded, he'd continue.\n\n              * * * * * \n\nGalena resisted the urge to bite through her lip as she came yet again. She'd already sank to her knees as they were no longer steady enough to hold her up and it was all she could do not to sprawl out atop the equipment on the closet floor and go at it with both hands. She couldn't believe where she was, what she was seeing and what she was doing. If she were truly the good girl everyone said she was she'd have never swam naked, or made herself that drink, or used the bidet to get herself off... but most of all, if she were the good girl everyone thought she was, she'd turn her face away from what was happening in the bedroom and ignore it. \n\nSo maybe she wasn't such a good girl after all. She couldn't resist watching, she couldn't resist getting herself off. \n\nShe'd done her best to make no sound as she knew she'd die of embarrassment if she was discovered, but it had grown harder and harder with each climax that steamrollered through her young body.\n\n              * * * * *\n\nCarol was lost in a sweaty, hazy sea of sensation. She was being spanked, she was being loved, she was being watched, she was being used... and then she heard the whimpering, coming from the closet.\n\nCarol began to moan, loudly, behind the ball gag.\n\n\"What is it, Little Cunt?\" he said, loosening the ball gag so she could speak.\n\n\"Sir, Sir, please... would you please go upstairs and put some music on? I know it's a lot to ask so I'm offering one of my chances to beg you to fuck my hot... red... swollen ass in exchange for you doing so.\"\n\nHarry smiled at the not-too-subtle attempt to seduce him into further ass play. \"Alright, anything you're particularly in the mood for?\"\n\n\"Well, I got you those CDs you were interested in, the 'Black Tape for a Blue Girl'... they're on the desk in the office. Perhaps you could put them in the player?\"\n\n\"Alright, sounds like a plan... while I'm up I think I'll give Margo a quick call, see how things are going.\"\n\nAnd with that, Harry headed upstairs.\n\n              * * * * *\n\n\"Galena Maria Pessino, get your ass out here right now,\" Carol hissed. \"You've got just a few minutes to get out back, get your clothes and get out the front door before Harry comes back.\"\n\nThe dark-haired woman who came out of the closet with skin so close in shade to Carol's own was blushing almost as redly as Carol's ass was glowing.\n\n\"Now you better be here Tuesday with your mother and while she's cleaning you and I are going to have a talk while you work on the pool... are we clear, young lady?\"\n\n\"Yes ma'am.\"\n\n\"Now hurry!\"\n\nWith that, Galena scurried out the back door, grabbed her clothes, put them on and was out the front door, locking it behind her, even faster than she herself thought possible.\n\n              * * * * *\n\n\"Hey honey, how're things going over there?\" Harry asked when Margo answered her phone.\n\n\"Fine... we're almost through getting the bedroom ready for use and after that, well, Madam Margo has two willing playthings tonight.\"\n\n\"Lucky woman... I'm lucky myself as I have Little Cunt tied down for a pretty severe spanking with no happy-happy-ass-fuck unless she's very persuasive... and she'll only have two three-minute periods to try to persuade me.\"\n\n\"Oh, I like the sound of that... I'm going to have to add that to the repertoire... of course, fair warning, you know Mistress Nicki and the Queen will as well.\"\n\n\"Such is life... a process of give and take. Figured I was going to end up on the receiving end of my own creativity at some point.\"\n\n\"Uh huh... what did our precious one do to earn her spanking?\"\n\n\"Oh, she's been having nightmares associated with the attack and hasn't told anyone or sought help because she thought she deserved them for failing me somehow. I've told her we're making her an appointment with Dr. Stallings on Monday and if he doesn't work out we'll keep looking till we find someone who does.\"\n\n\"Jesus Christ Harry! Talk about great minds... same topic came up over here, Kelly's going to be seeing Dr. Stallings as well, maybe Nicki too. I spoke for the family, and Kelly backed me up, when I told Nicki we'd cover any expenses therapy incurred, should she decide she could benefit from it.\"\n\n\"You spoke true... you know I'll agree and there's no chance that little Miss Kind-Heart-with-the-Glowing-Butt downstairs wouldn't as well. Tell the darlings hello and we love them. Y'all have a good night. I love all of you.\"\n\n\"Same here, most wonderful husband, love from all of us to the two of you. Breakfast at the house tomorrow morning you think?\"\n\n\"Works for me... if I'm not up when y'all get here, wake me.\"\n\n\"Will do... get the crop out of the closet and give her three good slashes with it... one for me, one for Mistress Nicki and one for the Queen, won't you?\"\n\n\"Sure, not a problem... good night love.\"\n\nAfter he hung up he returned to the joys of trying to unwrap CDs.\n\n              * * * * *\n\nOnce they'd gotten home, the two of them had sat naked in the solarium and had a glass of wine while they relaxed. Patricia had been feeling romantic, but Karen had worked hard all day and as soon as she'd rinsed the sweat off in the shower she'd gone face down on the bed and was out like a light.\n\nAs Patricia took her own quick shower, she reflected that she really couldn't blame her lover... Patricia was more than a little weary herself and she hadn't been doing half the heavy lifting.\n\nShe dried off and then curled up in bed next to the sleeping slab of muscle that was Karen. In the darkness she could see the outline of her lover's face, and as her fingertips brushed across it she reflected how very close she'd come to losing Karen. Thankfully Carol and Harry had convinced Karen to find her and make her give Karen a second chance.\n\nShe was more tired than she thought so she settled for an abbreviated form of her nightly prayers, knowing God would understand.\n\n\"Creator, thank you. Thank you, thank you, thank you...\"\n\nShe was still softly murmuring 'thank you' as she drifted off to sleep, spooned up next to her beloved.\n\n              * * * * *\n\nEddie Janak had a secret, one he hadn't even shared with that most divine love of his life, Tamara.\n\nHe and his associates had lost track of Angie. \n\nIt had all started when she'd lost her job, not too long after their meeting at the hospital. Then she'd moved out of her apartment, leaving most of her possessions behind, and Eddie'd been going crazy ever since, trying to pick up her trail.\n\nAs Tamara lay in bed asleep next to him, Eddie wondered if he was in the process of failing his best friend yet again.\n\n              * * * * *\n\nAs 'These Fleeting Moments', the first track on the CD 'A Chaos of Desire' began to play throughout the house, Harry slowly walked back down to the bedroom, his knee bothering him more than he wanted to admit, even to himself.\n\nCarol winced as she saw him come in, his limp evident. \"May I speak, Sir?\"\n\n\"Yes,\" he said, moving to the bed and rolling her on her side. \"Here, before you do, have some water.\"\n\n\"Thank you, Sir.\" She drank deeply as he squirted a stream into her mouth. When he finished she said, \"It seems your knee is bothering you quite a bit. I shouldn't have asked you to go upstairs.\"\n\n\"Nonsense... I knew the job was dangerous when I took it,\" he said with a smile. \"Is there anything else you wish to say?\"\n\n\"Yes sir... I would give up one of my chances to beg if you would get into the hot tub for awhile and let your knee get some rest and hydrotherapy.\"\n\n\"Done... that leaves you with one chance. You'll be joining me... I'll probably need to the support.\"\n\nAs he released her, she said, \"Permission to speak freely while I'm unsecured, Sir?\"\n\n\"Go ahead.\"\n\n\"Harry... love... your knee's not in as good a shape as you've been telling us, is it?\"\n\n\"No...\"\n\nShe went to the closet and pulled out the cane he'd come home with. \"Here Sir, use it!\"\n\nAs they walked out to the hot tub he continued. \"Neither Mike nor Helen was happy with the progress of my therapy... and they both admit it wasn't that I wasn't working hard enough. Mike's hoping that maybe the difference in my mental outlook, being at home instead of being in exile in the hospital, will make a difference.\"\n\n\"And you didn't tell us this why?\"\n\n\"Because, to be brutally frank, I'm tired of being worried about by all of you... I just want to get the fuck on with life, even if it involves some pain.\"\n\n\"You know the others are going to be hurt and pissed that you didn't tell them.\"\n\n\"And you... are you hurt and pissed as well?\"\n\n\"Oh yeah... but I'm dealing with it. Tell me what Margo had to say.\"\n\nAs the hot tub continued to come up to temperature, the two of them lay together and Harry relayed his conversation with their wife.\n\n              * * * * *\n\nGalena caught the last bus of the night and sat prim and proper all the way home. Her mind was still racing from what she'd done, what she'd seen, and her panties were soaked.\n\n              * * * * *\n\n\"Can you breathe alright?\" Mounds asked Bum. \n\nThe guttural 'uh huh' that came from her crewmate's throat brought a smile to her face. She leaned over Bum's face, sniffing at the mixture of rum and pineapple juice that filled her open mouth as she lay on her back. \n\n\"Y'know, Bum, y'make a damn fine goblet fer grog,\" she said before slurping some of the mix out of Bum's mouth. \"Just be rememberin' that if ye have to clear yer mouth, swallow what ye can before spewin' the rest on that there cloth. Ye waste good rum and yer punishment'll last even longer than it will already.\"\n\nShe turned from the Third Mate, wrists tied to opposite ankles across her wet and ready cunt and grasped the their blonde captive by her hair, pulling her up from where she'd laid face down on the bunk. \n\n\"Now you, cunt...\" Their blindfolded prisoner squirmed and her muffled cries filled Mounds' heart with joy. \"You got two choices. I'm gonna ungag ye, let ye crawl yer way over and find the grog. After ye've had a sip to wet yer throat, ye'll be decidin' yer own fate by the next words outta yer mouth. Ye speak to me pleasant and respectful-like, things'll go easier on ye. Ye speak to me like ye did before... and it's a hard night ye're in fer, no doubt about it. I'll even release that malingerin' bitch, Bum, and together we'll use ye ill. So best ye be thinkin' how ye want yer next few hours to go while ye sniff out the grog.\"\n\nAfter she hauled her roughly off the bunk to the floor of the cabin, Mounds removed her gag and watched, chuckling, while the blindfolded prisoner scooted, with bound hands and ankles, across the floor, trying to find Bum by the strong smell of rum coming from her open mouth. Eventually she found the Third Mate, but almost stuck her nose in the wrong end of her.\n\nSecond Mate Mounds laughed. \"That end's wet enough it's true, slut, but I'm hardly thinkin' it'll quench yer thirst... I drunk from that fountain plenty o' times and it always leaves me wantin' more... better try the other end afore I go for more meself and leave ye nothing but a smell.\"\n\nThe blonde beauty they'd abducted snaked her way around to Bum's head and plunged her mouth down upon the Third Mate's. The slurping sounds echoed through the cabin. When she was finished, she slumped over on her side, resting against the black beauty.\n\n\"Now then, you miserable piece of wharf trash, you may do your worst, but this lady will never yield her honor, nor her dignity. You may take, but I shall never give.\"\n\nIn one quick movement Mounds pulled her away from Bum and squatted over her. She grabbed a handful of the shimmering blonde hair and forced the prisoner's mouth to Mounds' wet and aching cunt. \n\n\"Then takin' it'll be... ye stupid slut, we're good at takin'.\"\n\n              * * * * *\n\nHarry lay back in the hot tub, the sharp jagged pains in his knee slowly abating. His beloved sat facing him, straddling his lap, passing him mouthfuls of water and lung-fulls of pot smoke while cuddling him, brushing his erection with her cunt.\n\n\"Just relax, Sir... take it easy and let the hot water and the jets do their job.\"\n\n\"It'd be a lot easier to manage that if you weren't pressing that delectable body of yours against me, Baby Girl.\"\n\n\"Should I move, Sir?\"\n\nHe wrapped his arms around her. \"Nope, won't let you... you're right where I want you.\"\n\n\"Funny thing about that, Sir, I'm right where I want to be.\"\n\n\"Even when you're hurt and furious with me?\"\n\n\"Even then, Sir...\" she fingered one of the scars on his chest, \"because if I'm honest about it, I have so little room to complain about keeping secrets. None of us really has room to talk, I suspect. So I'm working hard to let go of my hurt and my anger... and being close to the man who saved my life always helps with that.\"\n\n\"God, you've paid that debt back a thousand times over-\"\n\n\"No Sir! I haven't even begun... that debt will be repaid the day I say it is... and if I were you, I wouldn't go holding my breath, waiting for that day to arrive.\"\n\n\"Alright, my love, I shan't argue... might I have some more water? Oh my... my cock just slipped inside you! However did that happen?\"\n\n\"Umm, good question... let's just keep it there till we figure that out.\"\n\n              * * * * * \n\n\"Whip the slut's cunt again, she's slowin' down!\" Mounds said, grinding her hairy slit into the prisoner's face. Behind her, Third Mate Bum lashed the blonde's cunt with an improvised cat o' nine made from strips of cloth. The tips of the lash were wet from being drug through the captive's moist and open quim.\n\n\"She still wet as a drunkard's kiss down there?\"\n\n\"Yes'm Mounds, soggy as a widow's hanky she is.\"\n\nThe Second Mate climbed off the prisoner's face and grabbing the mass of hair at the back of their captive's head, pulled her over until their noses were almost touching.\n\n\"Listen you haughty bitch, yer mouth can lie all it wants but your cunny's tellin' us the truth! Ye might as well yield now and save yerself some trouble, cause next it's candle wax an' a whippin' on those soft an' creamy inner thighs o' yers.\"\n\n\"Go to hell, you sea-going whore!\"\n\n\"Bum! Bring me a candle!\"\n\n              * * * * *\n\nThe knocking at the door had Nick up and moving, somewhat slowly but moving just the same, before he realized he was even awake. \n\n\"Izzy, what is it?\" he asked, opening the bedroom door.\n\n\"Sorry to disturb you, Boss. Jimmy C followed up on that intel... Madame Pedachenko had several men picked up from the airport this evening... hard cases... Jimmy figures ex-Spetsnaz. We'll have ID's from the bodies later but he says they got the right tattoos. What do you want done?\"",
        "\"Goddamn, did the bitch think I was fucking joking? Married a boy-buggering bastard like Ivan, I'd have thought she'd be happy to get rid of him... have her hit... somewhere public, very visible. I want it clean, surgical and untraceable. The right people will get the message.\n\n\"Goddamn Izzy, am I going to have to kill every of them?\"\n\n\"I dunno, Boss.\"\n\nNick closed the door and crawled back into bed. Randy rolled over. \"Are you okay, love?\"\n\n\"No...\" Nick said, \"no I'm not.\"\n\n              * * * * *\n\n\"Last chance, milady.\" Mounds held the fat glass jar with the candle in it above the prisoner's belly, tautly stretched between her bound wrists tied to the bunk frame and the enthusiastic Bum holding her legs. \"Ye can yield now, or suffer.\"\n\n\"I'll suffer! I told you I'd never yield, you slut!\"\n\nMargo looked at Nicki, the question plain in her eyes. Nicki smiled reassuringly and nodded.\n\n\"Fine then, wench, prepare for the pain!\"\n\nSlowly Mounds let a thin line of wax flow from the candle to fall down upon their captive's exposed flesh. As the woman began to cry out, Mounds shoved a rag in her mouth. \n\nGradually the line of wax wound its way up her stomach towards her breasts. Dribble by dribble, inch by inch their victim grew more and more agitated until, when the wax line was almost to her breast she began shake her head back and forth. Mounds stopped and removed the rag.\n\n\"I yield... I yield... you foul and unnatural creature... I yield...\" the prisoner cried, tears running down her cheeks. \"I will serve you and your base desires.\"\n\nMounds blew the candle out, put it up on a table and lay down on her side next to their prisoner. \"Bum, quit enjoyin' the view and get to lickin' me, ye worthless scallywag!\" she said as she spread her legs. \"Now, milady fair,\" she continued, \"heave to and prepare to be boarded.\" She began to kiss away the woman's tears, her hand peeling away the cooled and congealed wax and putting it on a towel on the other side of her victim. When all of the wax was removed, and the tears kissed away, she wrapped her hand around the woman's breast, teasing the nipple with her thumb.\n\n\"Now then, what shall we call you, my pretty?\" she wondered aloud.\n\n              * * * * *\n\nThe Pessino house was a small, fourteen hundred square foot four-bedroom to begin with and had gotten smaller when Elena had her baby. That was when Galena and her sisters had all moved into one bedroom, like the boys had been all the time. So then it was four girls in one bedroom, three boys in another, Elena and the baby in a third, Emiliano and Anna in the fourth. And it seemed like there were always cousins and aunts and uncles staying over on the sofa bed in the living room.\n\nGalena had always felt like she was living in a prison... a friendly prison, most of the time, but a prison nonetheless. The only privacy she had was when she closed the curtains she'd hung around her lower bunk bed, put on her headphones and turned the volume up. Even then the sounds and shadows of movement of a houseful of people crept into her tiny bubble of space.\n\nAs she wrote a 'friends only' post in LiveJournal, the first time she'd ever had anything to write that needed to be 'friends only', and recounted the night's events, the faint snoring of her sisters Silvia, Rosa and Marilu could be heard from the bedroom around her. \n\n              * * * * *\n\nOn their return from the hot tub, Harry had securely fastened Carol to an angled spanking bench. \n\nHe looked down at his love, wondering at the sides of himself he'd never known existed. Just a few months before, he'd never have believed that looking at a woman in this position would be the turn-on that it was. Carol was manacled to a bench, her beautiful thighs held in place with wide leather straps, her neck collar fastened down securely on both sides, her forearms secured in the same way as her thighs. When they'd ordered the bench from Madame Cornelius' supplier Carol had asked for additional restraint points to be added so that she could be laced in across the bench 'top' as well, and so she was, the adjustable leather restraints crisscrossing her back from just above her ass to right under her arms.\n\n\"Time for us to finish this, my love... are you going to remain silent, or do I have to gag you?\"\n\n\"I'll hold my tongue, Sir.\"\n\n\"Good.\"\n\nTaking a moment to strap on his brace he got the other paddle he had brought out from the closet, the one covered with blunt studs. And while Carol was facing the other way and unable to see what he was doing, he leaned into the closet and got out a leather riding crop as well.\n\n\"If you find that you must make noise, call out the count. Otherwise be silent.\"\n\n\"Yes sir.\"\n\nHe started out slowly, one cheek and then the other, increasing the force incrementally, enjoying the sight of Carol squirming in her restraints, free to lose control since she was so securely fastened there was no way she could move. She had already been wet by the time he finished strapping her down, but as the spanking continued, once again the smell of her arousal filled the air around him and even if she wasn't his love, even if he didn't find himself turned on by the sight of her in bondage before him, the smell alone would have had him hard, the sweat, tang and sweetness of a woman's desire. \n\nHe realized he'd taken about all that he could, it was time for other things... and then he remembered the crop. He reached down, picked it up off the floor.\n\n\"Madame is as upset by your arrogance as I am.\"\n\nSLAP! The crop came down across her reddened ass and rebounded into his hand. She stifled her cry bravely.\n\n\"The Queen is most angry with you; I doubt you've heard the last of this from her.\"\n\nSLAP! A second line of swollen scarlet crossed her bottom, making a shallow 'x' with the first. The sob that escaped her lips was bitten off, but very audible.\n\n\"Mistress Nicki's ire has been raised as well at such impudence from a servant.\"\n\nSLAP! The third line rose on his love's beautiful ass and he dropped the crop, glad it was over. The soft sound of crying came from his lover's mouth.\n\nHe walked around and, taking the brace off, knelt in front of her. \n\n\"Sweetheart, did I hurt you too badly?\"\n\n\"No... no Sir... I'm just sorry... sorry that I angered all of you... I didn't mean to... I just can't... I just can't understand how I didn't fail... when you were hurt so badly... I just can't...\"\n\n\"Shh, shh my love... you don't have to understand it, but believe us when we tell you that you didn't fail me... we wouldn't lie to you. Please... don't ever bottle up things like that again... are you going to be alright?\" he asked, brushing her tears away.\n\n\"Oh yes sir... that spanking was... well... I'm afraid I came...more than once... that first strike with the... was it a crop?\"\n\n\"Yes, it was the crop.\"\n\n\"Oh... that was... mmm... just what I needed to send me over the edge... again...\"\n\n\"Alright, now that we've determined that you're still a wonderful, glorious little freak of nature,\" he said smiling, \"I'll give you a minute to get your shit together before starting your three minutes to convince me to fuck that luscious ass of yours.\"\n\n\"Oh Sir, I don't need any time... I just need you to bring your ear to my mouth so I can whisper to you.\"\n\nHe bent down until he felt her lips brushing the surface of his ear.\n\n\"Daddy,\" she whispered, \"I'm sorry I upset you and Mommy and my big sisters.\" Her breath moved across his ear, warm and sensual. \"But I've been a good girl and taken my punishment and while you've got my pussy all wet and aching, and I'd love it if you gave me a good fucking, and my little pussy could feel your cock sliding in and out... well Daddy, I've paid for my mistakes, and there'll be plenty of time for you to fuck me later tonight, why you'll be able to fuck me all you want with everybody out of the house, but right now... I really... really... need... my bottom filled.\" And then her tongue caressed his ear, swirling around the lobe before darting back into her mouth.\n\nWithin a few minutes he had her tiny brown rosebud lubed and was sliding into her ass... just like she'd known he would.\n\n              * * * * *\n\nMounds lay on the bunk while Bum continued to use her talented tongue drive her towards yet another climax. The prisoner, now known as 'Blondie', had her tongue buried in the Third Mate's cunt as she showed her willingness to do whatever she was told, so long as she was tortured no more... or at least, not tonight.\n\nBum paused for a moment, caressing her crewmate's thigh and said, \"Mounds, darlin', it ain't fair... she yielded and here she is, suckin' on my cunny like she was born to it and no one's doin' a thing for her.\"\n\n\"Well, she does look mighty tasty...\"\n\nA few moments later, the familiar triangle had appeared on the bed as the three women formed a chain of gentle, soft lovemaking.\n\n              * * * * *\n\n\"Oh yes... Daddy... that's it... oh please... oh... GOD... yes...\"\n\nThe spanking bench ground into the carpet with every thrust as Harry pounded in and out of his darling wife so hard that when his balls slapped against her it actually hurt him... not enough to stop, or even slow down, but the pain was real enough. \n\nHe felt the muscles of her sphincter clamp down on him during a backstroke as she started another orgasm but he tightened his grip on the crossed straps on her back and drove back into her anyway, reveling in the sensation as his cock slid through, squeezed almost more tightly than he'd imagined possible.\n\n\"OH Daddieeeeeeeeeeeee...\" she cried, \"oh... goddamn... that's what I needed... oh... yes... oh... please... come in me... please...\"\n\n\"Sweetie... for that to happen... you're gonna need... to relax a bit more...\"\n\n\"Sorry Daddy...\"\n\nShe relaxed her sphincter and began to swivel her butt in what small range of motion was open to her. \n\n\"Is that better? Is that what you want? Is that... oh... it is!\"\n\nHarry's orgasm was long and draining but she remained relaxed throughout it, feeling his cum inside her and him shudder and shake behind her, hearing him moan.\n\nAs he finished, he pulled out and she moaned in dismay.\n\n\"Sorry my love... I think I've got till the endorphins wear off... to get you unstrapped... then my knee's gonna have words with me...\"\n\n\"Well hurry then, Daddy...\"\n\nHe started with her wrists and then moved down her body. When he was finished she said, \"Alright, let's get you in Hot Tub Jr.\" as she helped him into the bathroom. Helping him to slide his bad leg over the rim into the tub, she got him in and down.\n\n\"Jesus Christ, this tub is cold!\"\n\n\"It won't be for long, let me get you and me both cleaned up before I put us in a tub of water.\" With that she crawled in and used a hose and spray head to rinse off his cock and sluice out around her ass.\n\n\"Now that we're through with that, let's get the hot water going in here, warm up this tub... and you... and let me enjoy having my Daddy all to myself for the night.\"\n\nAfter the tub was filled and she'd made a run for drinks, she got the jets going and then cuddled up next to him.\n\n\"So, I gather you really, really were looking forward to that fantasy last night, huh?\" he asked.\n\n\"Yeah, but I also know from some of our past games that you've got a similar kink as well. I mean, look at all the fun 'Susan' and her daddy 'Ed' have had together... I'm violating the fantasy as it was conceived originally in that we're obviously fucking, but other than that... I'm happy to be your little eighteen-year old.\n\n\"Daddy, my ass is a little sore from you fucking me earlier... would you kiss it and make it better?\"\n\n\"Oh darling, there's nothing I'd like to do more,\" he said, as she stood up in the tub and turned her butt to him.\n\n              * * * * *\n\n\"Edward, I'm tired of pretending to be asleep. If you're going to lay there and brood, may I brood with you?\"\n\nEddie sighed. \"Why do you pretend to sleep?\"\n\n\"Because if I'm awake, you have a tendency to get all put out and that doesn't help you sleep.\"\n\n\"And why are you awake in the first place?\"\n\n\"Because you are, my love... as much as possible, as often as possible, I don't sleep if you're not asleep. It's my duty, it's my privilege to serve you... how can I serve if I'm asleep? Yet you don't need to worry that I'm awake, so I give you the illusion that I'm not... although much to my chagrin it's sometimes not an illusion. I do fall asleep on occasion.\"\n\nEddie reached over and pulled his tiny lover up on top of him.\n\n\"Sometimes,\" he said, \"I think you take this 'slave' thing too far.\"\n\n\"Edward, Sir... that's impossible for me to do... you know that... serving you makes me happy beyond my ability to express.\" She wrapped her arms and legs around as much of him as she could. \"Have I told you lately that I feel completely and utterly safe when I'm with you?\"\n\nHe said nothing and after a time she looked up at his face to find tears rolling down his cheeks.\n\n\"Edward, my love,\" she said, crawling up him slightly and putting her arms around his neck, \"happy or sad?\"\n\n\"Happy, Theresa... happier than I ever dreamed o' bein'.\"\n\n\"Well then, share some of that happiness, if you would be so kind, and make love to me.\"\n\n\"Alright, small one, let's make a baby.\"\n\n              * * * * *\n\nThe three women ended up cuddled together in the bunk, Blondie sandwiched between Mounds and Bum.\n\n\"Oh Bum, just wait till Twat an' the Cap'n get a taste o' this one... it's a cryin' shame she won't be sailin' with us.\"\n\n\"Aye, a damn shame to be leavin' her behind... and her other parts... here in port,\" Bum replied, smiling as she kissed Blondie's neck.\n\n\"But... you will put in here often, won't you?\" Blondie asked, afraid of losing her newfound loves.\n\n\"Oh darlin', once the Cap'n gets a samplin' o' yer charms, I'm thinkin' we'll be droppin' anchor hereabouts more often than we might o' before,\" Bum said, grabbing the blonde's breast and squeezing it.\n\n\"Yeah sweetie,\" Mounds added, \"although next time I'm thinkin' we'll be carryin' ye down to the port and aboard the Free Booty... more room... more toys... more interestin' ways to string ye up.\"\n\nAs the three of them settled in to sleep, Nicki looked at her sisters-in-law... at her lovers... at her friends. \"You people are crazy; you know that, don't you?\"\n\n\"Never doubted it for an instant,\" Kelly replied.\n\n\"Nope, me neither,\" Margo said.\n\n              * * * * *\n\nQuan woke up to motion on the bed. She opened an eye and saw Jessica was on her back and had propped her butt up on some pillows to give Wendy a better angle as the young girl pounded away into Jessica's cunt.\n\n\"How long have you two been awake? How long did I sleep?\"\n\n\"Oh... about... a half hour... for us... you've been out... for about... four hours... I woke up... to this sweetie... licking my cunt... and that left her... with a problem... so after I came... a couple of times... OH... I decided to help her... with it...\"\n\nQuan watched her lover getting fucked by the pretty young girl between her beautiful plump legs and felt a growing tingling in her own cunt. \"Hey QB, feel like hookin' a sistah up?\"\n\n\"Only... if you promise... to never... go urban... on me... again.\"\n\n\"Well, how about I promise not to for awhile?\"\n\n\"Good enough... get that tasty... slit of yours... over here... on my face...\"\n\n\"Yes ma'am, QB.\"\n\n\"Quan... what's 'QB'... mean?\" asked Wendy.\n\n\"Means 'Queen Bee'... or 'Queen Bitch',\" Quan replied, settling her moist cunt over Jessica's mouth.\n\n\"Then can I be 'WB'... for 'Wendy Bitch'... far as most people know... or 'Wanna Be'... between us?\"\n\n\"I got no problem with it,\" Quan said, \"and from the laughter coming from between my legs, I don't think QB has a problem either... you should do that more often... that feels... mmm... nice.\" She settled down on Jessica's face a little more firmly. \"Oh yeah, baby... hmmm... and I wanna be 'Takeout'.\"\n\n\"Why 'Takeout'?\" Wendy asked, already laughing.\n\n\"Because I'm hot, tasty and an hour after you eat me you want me again, isn't that right QB?\"\n\n\"Mmm hmmm.\"\n\nWendy leaned forward, giving Quan a quick kiss on the shoulder. \"Just had to be... different... didn't you?\"\n\n\"Oh... you know me... WB... I'm a trendsetter.\"\n\n              * * * * *\n\nEddie held Theresa in what was his favorite position, curled up in his arms like a somewhat large baby as she lay upon his chest.\n\n\"I don't see how you breathe when I'm like this, Edward,\" she said.\n\n\"My love, you're a feather to some I've had on my chest, both pleasurably and otherwise. So, what would you want to name them tonight?\"\n\n\"Well, 'somethin' Rachel for a girl, 'something' Edward for a boy...\"\n\n\"Yeah, it's the 'something's' I'm wondering about.\"\n\n\"I know... well, I'm thinking Carolyn Rachel tonight, and Harold Edward. What do you think?\"\n\n\"I think you're the best thing that's ever happened to me.\"\n\n\"Likewise Edward, most definitely likewise.\"\n\n\"Something I been meaning to ask you... I know we talked about gettin' married at the same time as Harry and company, but if you turn up pregnant...\"\n\n\"Do I want to hurry up and get married so any baby we might have wouldn't be conceived out of wedlock? Edward, thank you for thinking of that, but to me it really doesn't matter. The child will be born in wedlock, and we'd know, as would he or she later in life, that we didn't marry because I got pregnant, we married because we wanted to and they just happened to be conceived before the scheduled event.\"\n\n\"Okay, just thought I'd check.\"\n\n\"I love you, Edward.\"\n\n\"Thank God you do, Theresa... I love you too.\"\n\n              * * * * *\n\nA few hours later, a thoroughly exhausted Harry lay with his head in Carol's lap.\n\n\"Sweetie?\"\n\n\"Yes Daddy?\"\n\n\"Honey, send the little girl to bed, I need to spend some time with my wife.\"\n\n\"Not a problem, beloved husband, what can I do for you?\"\n\n\"You feel like loading up the little pipes, going out for a float on the pool and looking at the stars for awhile?\"\n\n\"Sure... any particular reason why?\"\n\n\"Because I love you and I'm not ready for this evening to end just yet.\"\n\n\"Damn... good reasons! You start heading towards the pool, I'll get the pipes.\"\n\nA few moments later they drifted beneath the stars in their reclining float chairs, water bottles by their sides, sucking in smoke and holding hands.\n\n              * * * * *\n\nAfter the activities of the previous evening, Margo awoke hungry to an empty bed. Crawling out she found Kelly and Nicki in the kitchen, staring morosely at each other over glasses of pineapple juice.\n\n\"No food in the house, huh?\" she asked.\n\n\"Nope,\" Kelly replied.\n\n\"Not a smidgen,\" Nicki added.\n\n\"Well then, let's head over to the house... Lord knows we've got food there and I imagine we can eat and such without waking up Harry and Carol.\"\n\nA few minutes later they were dressed and out the door.\n\nUpon arriving at the house, they proceeded to the kitchen straight away where Nicki called them to the window. \n\n\"Ladies, come look at this!\"\n\nOut in the pool, shaded from the early morning sun by the trees were Carol and Harry, asleep in their float chairs, still holding hands as they drifted on the water. \n\nMargo and Nicki walked out to the edge of the pool where Margo knelt down and collected the pipes that had been put by the water's edge.\n\n\"They look so peaceful... and it must have been nice, going to sleep out under the stars,\" Nicki said softly.\n\nWith a scream Kelly burst from the house sans clothing, ran to the pool, leapt into the air and tucked into a 'cannonball' position. The resulting explosion of water was most impressive.\n\n\"The bitch has a death wish,\" Margo thought as she watched the water spray everywhere."
    ],
    "authorname": "Fillmore",
    "tags": [],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/oil-of-roses-ch-31"
}