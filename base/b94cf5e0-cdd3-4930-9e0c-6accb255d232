{
    "title": "Come Alive Ch. 26",
    "pages": [
        "Part I\n\nThe weather was still unseasonably warm; even the trees seemed to think so, too. The little park surrounding the marina was almost verdant - and though a few trees had lost their leaves after the storms that had so recently caused so much havoc, the grass was green and most of the shrubbery surrounding the marina was still almost lush. It did not look like December.\n\nClyde walked over to a new favorite patch and circled twice before dropping a load, and after waiting a moment for the most pungent waves of stink to drift away, Henry walked over and picked them up with his pooper-scooper. He bagged the still-warm turds - and like always a shiver of absolute revulsion ran up his spine - then he walked over and dumped the little pink bag in a special receptacle placed there just for dog shit.\n\n\"Jesus...who thinks up stuff like this?\" he said to Edith as she walked along by his side. \"I mean, really, it was someone's job to come up with this thing!\"\n\n\"If you build it, Henry, they will come. Isn't that the way of the world?\" Edith replied, trying not to smile at Henry's nervousness. \"Anyway, having something like this right here is lots better than stepping in a hot fresh one.\"\n\n\"I'll give you that,\" he replied.\n\n\"Speaking from experience, I'm sure.\"\n\n\"Yeah,\" he sighed, \"I've managed to step in my fair share of shit over the years.\"\n\nShe smiled, tried not to laugh at that jab. \"Was it really so bad? You and I?\"\n\nHenry turned and looked at Claire's echo once again, his eyes still not quite able to reconcile the past and the present, let alone all the discordant pain he felt when he looked at Edith. If Claire was alive, he thought, if she hadn't died forty-something years ago, it was impossible not to think that she'd look almost exactly like Edith did right now. They'd always resembled one another, often strikingly so, but the passage of time had simply blurred the lines between the two so much that memory no longer worked. Claire was gone, but if that was true then who was he looking at now?\n\nEdith? Yeah, but what then about her DNA? Where did the expression of traits end in one sibling and arise in another? Because looking at Edith now was like a journey into the looking glass - a kaleidoscope of hopes and dreams, memory and doubt that served only to open the way ahead to more questions than answers.\n\nAnd Tracy had seen it, too. Because, he knew now, she had seen it coming. Because she'd been paying attention during all those little between mother and daughter talks, and who knows, maybe she had because she'd seen this moment unfolding all her life. Maybe Tracy had come to think of herself as a kind of placeholder, holding Henry down until her mother could reach him again...at least until they'd come for her...\n\n\"We were never bad together, Edith. We were just never meant to be.\"\n\n\"I used to believe that, Henry. Even after you went to Seattle.\"\n\n\"We should have never been, Edith. It was wrong.\"\n\n\"Wrong? How could it have been wrong, Henry? I'd wanted you my whole life and suddenly there you were.\"\n\n\"You know, it took years for me to move on, Edith. Years to get over the one-two punch. First Claire, then you. Did you really have no idea?\"\n\n\"Of course I knew, Hank. You didn't fall off the edge of the earth, we had friends in common. They kept me up to date.\"\n\n\"So...why are you here?\"\n\nEdith stepped close and took his hand. \"When Tracy told me about things, about how bad things have gotten, I wanted to see you again. I wanted to touch the skin on the side of your face, look into your eyes again.\"\n\nHe sighed, shook his head. \"I wish you'd stayed home.\"\n\n\"Really? You'd wish for something like that?\"\n\n\"I'm not sure I can deal with...all those feelings right now.\"\n\n\"I don't suppose you realize that what you're saying is an admission of love...?\"\n\nHe turned away - from everything about her. \"And that's the problem, Edith. Exactly. When I look at you I feel love for Claire. How could that be a good thing for any of us?\"\n\n\"Because, Hank, that's all I ever was - the problem that just wouldn't go away. It's all I know now, because I'm lost without you...\"\n\n+++++\n\n\"Well, at least they're talking to each other...\" Tracy said to Anton.\n\n\"I don't know. See how Genry hunched over. Defensive, if ask me. Like he afraid he hit.\"\n\n\"You think I should go get her?\"\n\n\"Better we both go.\"\n\n+++++\n\nHenry walked over to a park bench and sat, feeling light-headed again and wishing he hadn't left the hospital so soon. Clyde came over and hopped up on the bench and laid down next to him, draping his head on Henry's lap; Tracy followed a moment later, leaving Anton to to get Edith back down to Time Bandits.\n\n\"This was a mistake,\" she said as she sat next to Clyde.\n\nHenry crossed his arms over his chest, the reflexive move almost comically protective - at least under present circumstances.\n\n\"How long did she say she was going to stay?\" he asked, his voice a lifeless monotone now.\n\n\"She didn't book a return flight. Want me to work on that?\"\n\nHe turned and looked at her, not quite knowing how to say what he needed to say, but he dove in feet first: \"Nope. I want her to come to terms with herself. I want her to figure this out for herself.\"\n\n\"What if she decides to stay?\"\n\n\"Then she stays.\"\n\n\"Henry, I don't want her to take away from the time you and I have left...\"\n\n\"Then don't let her.\"\n\n\"Wouldn't it be better if I just told her to leave?\"\n\n\"It might be easier, Tracy, but if you do she'll keep turning up and raining on your parade until the day she dies.\"\n\n\"Why...why would you say that?\"\n\n\"Because she enjoys it.\"\n\n+++++\n\nHe took them out to dinner that night, to one of his father's old faves. An Irish pub a block away from the George V that served excellent French grub and even better Irish beer, and the old dark brown interior suited his mood just fine. Besides, he'd invited both Anton and Mike to join the fray and he was looking forward to some fireworks as the evening wore on...\n\nAnd clich\u00e9 of clich\u00e9s, Edith ordered French onion soup and a glass of the house red. How very American, he thought as he ordered his habitual escargot and duck. Not really caring anymore, he slipped a Zofran under his tongue and leaned back, rarely taking his eyes off Edith.\n\n\"So, Mr Lacy...\" she began.\n\n\"Call me Mike, please.\"\n\n\"Okay, Mike. What do you do for a living?\"\n\nMike looked from Edith to Henry then back again, then he simply shrugged. \"I'm a spy.\"\n\n\"Really?\" Edith said, her voice still gay and chipper. \"How very interesting. And who do you spy for?\"\n\n\"You, I guess.\"\n\n\"Me? Whatever do you mean?\"\n\n\"Well, assuming you pay taxes...I work for the navy.\"\n\n\"Oh. I see. And who are you spying on?\"\n\n\"Henry.\"\n\n\"Really. How interesting. I had no idea Henry was so, oh, what is the word...important?\"\n\nMike met that with stony silence, but he kept his eyes focused on Edith's.\n\n\"So, what were you off doing today? Spy-wise, that is?\" she asked.\n\n\"I was at the embassy speaking to our naval attach\u00e9.\"\n\n\"Indeed?\"\n\n\"Indeed.\"\n\n\"And what were you two talking about?\"\n\n\"That Henry is the only human being alive that can fly the ARV the Seattle Working Group built.\"\n\nHenry blinked once, slowly, then turned his head ever so slightly and looked at Captain Lacy.\n\n\"What?\" Tracy said, her voice tinged with hysteria - like he was about to give away the house. \"What are you talking about, Mike?\"\n\n\"Yes, Mike,\" Henry added. \"Just what are you talking about?\"\n\n\"I found the files on your laptop, Henry. It took some digging, but I finally found them...\"\n\nHenry tried not to smile, but it was hard not to. \"I see.\"\n\n\"What files?\" Edith screeched. \"And what is an ARV?\"\n\nMike turned to Tracy and spoke in quick, hushed tones: \"When Henry was in Seattle he worked with Boeing for a while. One of the off the books projects he worked on was to use alien technology, stuff recovered from a crashed vehicle, to make a working craft. And they did, too. But there was just one problem. No one could fly the damn thing because the aliens fly them using some kind of telekinetic bridge, and for years now everyone kind of left it at that...\"\n\n\"Henry?\" Tracy sighed, terrified now. \"What is he talking about?\"\n\nBut Taggart just grinned. \"Go on, Mike. You're on a roll now, aren't you? So do go on.\"\n\n\"I sure am, Taggart, you goddamn sonofabitch. You did it, you got it to work - then you didn't tell anybody. Why? Why'd you do that?\"\n\nHenry kept grinning, his eyes never once leaving Lacy's.\n\n\"The only thing we haven't figured out, Henry, is did you actually fly the thing...?\"\n\n\"That's the only thing, Mike? Really?\"\n\n\"Well, no. But there are a bunch of people in the inner ring really pissed right now, Taggart. Pissed at you. So pissed they want to kill you. And the only thing holding them back? I finally got my hands on those files. I've convinced them that once the new team has the information they'll be able to get the craft operational.\"\n\n\"Good for you, Mike. I'm happy for you. Then what?\"\n\n\"Then we see if it works, Henry. That's what.\"\n\n\"I see.\"\n\n\"Henry?\" Edith groaned. \"What is this man talking about?\"\n\nTaggart turned to her, his face a blank, but he simply shook his head before he turned to face Mike again. \"And if it works, Mike, what's next?\"\n\n\"Boeing will put the craft into serial production.\"\n\nHenry smiled when he heard that, then he laughed - a little. \"Do you and that group of clowns in McLean actually think they'll let things slide that far?\"\n\n\"What makes you think they'll try to stop us, Henry? They'd have to tip their hand, wouldn't they? You really think they're ready to do that?\"\n\n\"Well, let me ask you a question, Mike. Boeing built one, right? But so did Lockheed. And Northrup-Grumman built another one, did they not? Have you, by any chance, seen all three of them?\"\n\n\"No. Why?\"\n\n\"Well, Mike, because they're different. Different technologies and even the basic design parameters are radically different.\"\n\n\"What do you mean?\"\n\nHenry shook his head. \"Man, you guys really haven't thought this thing through, and I'm afraid it's gonna reach out and bite you on the ass big time.\"\n\n\"What are you talking about, Henry?!\"\n\n\"Well, Mike, the craft the Boeing team was working on was designed around occupants about three meters tall. The ship Lockheed was working on had a cockpit about the size of a three drawer file cabinet, yet there were six seats in the original. And the ship out on Long Island? Well, they had to build a special hangar for that one, Mike, because the occupants are fucking huge. I mean, like the size of a house.\"\n\n\"So?\"\n\n\"That's three different races, Mike. Three of them, here. Now. Each with an objective. Maybe even competing objectives, if you get my meaning. And what you're friends in the inner ring might not know yet is that these three civilizations aren't really on speaking terms these days, so if for some reason we happen to show up to the party in a faster than light spacecraft at least two of the parties involved are going to be major-league pissed at the other one.\"\n\n\"Jesus...\"\n\n\"So, yeah, you go right ahead and get to work on that. Tell the boys out in Renton to just pour their hearts and souls into it, okay? But here's the thing, Mike, so be sure to pass it along, willya? We've fucked up the planet. Bad. So bad they can't use it now. And that means they're pulling out of here now, no harm no foul. But...these guys might have second thoughts if we somehow start showing up in their neighborhood in FTL ships.\"\n\n\"Oh, God...\"\n\n\"God ain't gonna help the boys in the inner ring, Mikey. God will more than likely just sit this one out and watch as two civilizations capable of intergalactic travel reduce the earth to rubble.\"\n\n\"Jesus, Henry...\"\n\n\"Oh, and Mike, one last thing. Do you really think I'd be stupid enough to leave a file like that on my laptop?\"\n\n+++++\n\nHe was sitting on the swim platform, his bare feet dangling in the water, listening to the sounds of the city beyond the wall of shrubs as he leaned back just a little, his eyes closed and his mind reaching out, deep into the dome of the night.\n\n'They know,' he said to Pinky when he reached her.\n\n\"I know. And I don't think I was the only one there.\"\n\n\"How far away are they?\"\n\n\"Within a year, perhaps much sooner.\"\n\n\"Is there anything else we can do?\"\n\n\"No, not now. All talk of an alliance has broken down.\"\n\n\"So...this is it. Everything we did...was for naught.\"\n\n\"I'm sorry. Yours was a good plan and you've made many friends, but...\"\n\n\"I know. C'est la vie.\"\n\n\"You saw the doctor this morning? Before you left the hospital?\"\n\n\"I did. Wait - you mean, you weren't there?\"\n\n\"I assumed you'd like some privacy.\"\n\n\"You know, Pinky, I think I'll miss you most of all.\"\n\n\"I would like to have spent this time with you, Mike, but I understand. Do you find yourself thinking about what life might have been like if you'd met her two years ago?\"\n\n\"Yeah. Constantly.\"\n\n\"I never liked Dina. Too brittle. Tracy was the better match.\"\n\n\"Is that why you helped them get back to Bergen?\"\n\n\"Of course.\"\n\n\"Brittle. I never would have thought that.\"\n\n\"The music. You've been humming the same music again.\"\n\n\"I know, I can't get it out of my mind.\"\n\n\"Do you know what it is yet?\"\n\n\"No. I think it's something I heard a few years ago, but I'm not really sure where.\"\n\n\"It seems complex. Unusually so.\"\n\n\"Complex? What do you mean?\"\n\n\"Oh, nothing. Just a thought.\"\n\n\"I know that tone, Pinky. You think it means something, don't you?\"\n\n\"Tracy is coming. I'll talk with you later...\"\n\n+++++\n\n\"I brought you some tea,\" she said as she passed over a mug and sat next to Taggart.\n\n\"Thanks.\"\n\n\"Ginger, honey, and lemon. And I brought your Zofran, just in case.\"\n\n\"Perfect.\"\n\n\"How are you feeling now?\"\n\n\"Better. Humiliated and I don't get along together.\"\n\n\"Humiliated?\"\n\n\"I don't think I've ever barfed on a sidewalk before. Especially not after a meal like that.\"\n\nShe put her arm around him and pulled him close, shocked at how frail he'd grown over just a couple of days. \"I thought you handled it as well as anyone might.\"\n\nHe leaned over a bit and rested his head on her shoulder. \"I love you, kid.\"\n\n\"I love you, Hank.\"\n\n\"Sorry I've got to put you through this.\"\n\n\"I'm glad I'm here, Henry. I feel like I was born for this.\"\n\n\"You're not going to ask me about all that spaceship crap?\"\n\n\"No, why? Did you want me to?\"\n\n\"God, no. I just thought...\"\n\n\"Try not to think too much, Hank. All that stuff just gets in the way, if you get my drift.\" She leaned forward a little and he heard her gasp a little, then point down into the water. \"What's that?\"\n\nHe leaned over and looked down into the water, then he grew very still...and quite afraid.\n\nPart II\n\nHe couldn't tell what it was, even if what he was looking at was alive - or something else.\n\nAs the first rush of fear subsided, as confusion turned to curiosity and as Tracy's shock morphed into a desire to run - anywhere - he tried to hold onto his sense of reality as he stared into what appeared to an eye. A huge eye, true enough, but the thing down there in the water looked just like an eye.\n\n\"Is that what I think it is,\" he whispered.\n\n\"If you think it's your eye you're right on the money.\"\n\n\"My eye? What are you talking about?\"\n\n\"Blink again, but just with your left eye...\"\n\nHe closed his left eye and the eye in the water disappeared, but when he reopened his eye the doppelg\u00e4nger in the water reappeared.\n\n\"Now...try the right,\" she whispered.\n\nHe slowly closed his right eye and held it shut, and once again the eye in the water disappeared. \"Well, that's not something you see every day,\" he sighed. \"Is it real, ya think?\"\n\n\"I have no fucking idea, Hank.\"\n\nHe blinked his right eye several times in rapid succession and they watched as the eye in the water disappeared and reappeared as quickly, then Henry stood on the swim platform and stared at the thing, now at a complete loss...\n\nThen he jumped into the water, hoping to land right in the middle of the eye.\n\n+++++\n\nIt felt as if he had landed in something like cool honey, something not as sticky yet thickly viscous even so. Thick, and exerting an inward force that made it difficult to breathe - then he realized he was awash in overwhelmingly bright light. And it was everywhere - not simply coming from a single point source - and that just didn't make any sense at all. Vertigo hit when he couldn't tell how he was oriented - because in this sudden shift there was simply no longer any up or down - indeed, no reference to any 'external world' at all.\n\nThen upsetting him most of all, he felt some - thing - in his mind. He couldn't understand the feeling, not when it first began, but soon he saw a rapid succession of memories flashing through his mind's eye and he realized this - thing - was going through his mind, apparently searching for a specific memory.\n\nAnd he was powerless to resist.\n\nHe closed his eyes and drifted, trying to ignore the flood of unwanted memory - until he felt a sudden shift -\n\nAnd when he opened his eyes he realized he was hundreds of miles above the earth. Above Paris, if he wasn't mistaken, and now the viscous goo was gone, too.\n\nHe looked around for evidence of some kind of structure - but saw nothing. He reached out - and felt nothing. He tried to walk - but there was nothing underfoot. Yet he was breathing.\n\nHe closed his eyes and leaned his head back and reached out for Pinky and in his mind he saw the moon beyond the earth, yet the eye had taken the moon's place - and when he blinked the moon blinked too.\n\nHe turned his head again, then he looked down. He could see Paris between a mottled deck of clouds, her lights peeking out between low lying clouds just thick enough to obscure the real contours of the city...\n\nSo close. So far away.\n\nHe reached out as if he trying to grab hold of the city and pull himself back through the clouds, then he shook his head as the feeling returned...\n\n'...something is going through my mind, looking for...?'\n\nThere!\n\nInside the mountain. Outside of Seattle. The security gates. Dr. Collins and the rest of the team.\n\nInside the Boeing Group's reconstructed vehicle.\n\nSitting at the panel. Reaching out.\n\nHe closed his eyes and relaxed as best he could.\n\n'Move...up...'\n\nHis body accelerated away from the earth and he grinned.\n\n'Stop.'\n\nNow he was hundreds of thousands of miles beyond the blinking eye of the moon, adrift within fields of dancing asteroids.\n\n'Go back...to the exact same place in orbit.'\n\nThe acceleration and deceleration were almost instantaneous, the distance covered in the time it took to think about it.\n\n'To the marina, just behind the swim platform, a foot above the water.'\n\nTracy was still sitting there, still looking down into the water, when he reappeared - and she screamed when his body seemed to materialize out of nothingness.\n\nAnd he was standing there. A foot above the water.\n\nWhen she realized what she was looking at she stood and moved to the aft deck, shaking through her sidelong glance while she tried to reconcile the dissonant bile rising in her throat.\n\n\"Can you come here, please?\" he asked.\n\n\"What?\"\n\n\"I want to see if something works the way I think it might.\"\n\n\"Henry! You just jumped in the water and a millisecond later you're naked and standing there... What the fuck is going on!\"\n\nThen Clyde was there beside her and he barked once before he ambled down to the swim platform. He walked over to the edge and looked down, saw that the skinny white guy wasn't standing on anything and he barked again.\n\nHenry knelt and reached out and scratched Clyde behind the ears. All resistance melted away and the pup stepped out and settled next to Henry, who looked up expectantly, and a little nervously.",
        "\"Tracy. Come on. I need to try something.\"\n\nShe came down and stood close to the edge of the swim platform and looked past Clyde down into the water.\n\n\"Come on. Give me your hand.\"\n\nShe reached out and took it, then slowly stepped away from Time Bandits.\n\nThen she was by his side, holding on tight, her eyes squeezed shut.\n\n'Back to the same spot in orbit.'\n\nInstantly the three of them were hundreds of miles above the earth.\n\nClyde farted...\n\nTracy sniffed the air, her nose wrinkled in disgust.\n\n\"There's an atmosphere,\" Henry said. \"But...how can that be...?\"\n\nHe looked down and around but he still couldn't see anything that even remotely resembled a structure of any kind.\n\nThen, a leap of faith.\n\n'Show the instrument panel.'\n\nA panel appeared, and dozens of displays as well. They were of unrecognizable function, and he'd never seen anything like them before.\n\n'Show the rest of the ship.'\n\nThe cockpit took shape, and several corridors leading from the cockpit led, presumably, to other parts of the ship. He could feel Tracy shaking all over now, and Clyde had moved even closer and was now sitting on his feet.\n\nHe took a deep breath and held it, then...\n\n'Show the rest of the crew.'\n\nAnd in the next instant, they were in the water behind Time Bandits, thrashing away as their surroundings began to register...\n\n+++++\n\nHe carried Clyde down the companionway steps right to the shower in the head, then, when the water had warmed up a bit he stepped in and held the old boy under the spray until the shivering stopped. Clyde rested his head on Henry's shoulder and moaned once, and Henry massaged Clyde's back, letting the warm water work its magic...\n\n\"Can I get you anything?\" Tracy asked when she arrived.\n\n\"Lay out some towels on the bed, would you? And hand me a couple to use in here.\"\n\n\"Where are they?\"\n\n\"Bottom drawer, just to your left.\"\n\n\"Got it,\" she said. \"How many will you need?\"\n\n\"Call it three or four.\"\n\n\"Right.\"\n\nHe turned off the water and took a towel from her, and he patted Clyde dry then wrapped him in another fresh towel and carried him to the bed. With two more towels wrapped around him, he seemed content. A Golden Retriever burrito, Henry called him...then he looked at his watch.\n\n\"Ten-thirty-seven?\" he said, clearly not believing what he saw on his wrist.\n\n\"That's not right,\" Tracy replied. \"I have one fifteen on mine, and on my phone, too.\"\n\nTaggart went to slip on some clothes then to the chart table; the old mechanical clock there showed one seventeen in the morning, so there was a nine-hour and change discrepancy...\n\n'Which has to be about the amount of time I was stuck in that goo...'\n\nHe walked back to his cabin and found Tracy coiled up on the floor, stark terror in her eyes.\n\nHe followed her eyes until he found what she was looking at...\n\nPinky's pale pink sphere, hovering in the doorway to the head.\n\n\"It's okay,\" he said to Tracy. \"She's a friend.\"\n\n\"A friend? Henry, are you out of your fucking mind!?\"\n\nHe turned to the sphere and spoke to it: \"Go ahead. There's plenty of space on the bed...\"\n\nThen he looked at the sphere again. This one was different. Not Pinky. Probably not even her people.\n\nHe crossed his arms defensively and then waited for it to make the first move...\n\nPart III\n\nHenry thought the sphere might be translucent, but no...the surface was almost mirror-like, though he could make out his stateroom - as well as the two of them standing there - only inside the fisheye-distortion within the orb. And yet standing there he saw something else inside the orb, flickering pulses of sparkling light that almost looked like a thunderstorm was raging inside the sphere. Just beyond the surface reflection, Henry was sure he could see the latent image of an eye, and that bothered him. Yet the orb remained stationary; he reached out pushed on the surface of the orb and all he felt was immutable force permeating the little stateroom. Tracy, however, was back down on the floor, shaking in absolute terror.\n\nHe moved to the edge of the bed and sat next to Clyde, put his hand on the pup's head, and scratched behind his ears - and the sphere seemed to move just a little, almost like something inside was following Henry's movements, tracking his movements around the room.\n\n\"Are you okay?\" he asked Tracy.\n\n\"Physically, yeah. Nothing's happened to me that puking wouldn't fix.\"\n\n\"When did you notice this thing?\"\n\n\"When you went forward...it just appeared in the doorway out of nowhere.\"\n\nHe nodded, then laid down next to Clyde, who opened his eyes - fractionally - for a moment before he closed them again, then Henry put his face next to the pup's - until they were nose-to-nose.\n\n\"I love you, good boy,\" he whispered. \"Just be easy and get warm, okay?\"\n\n\"Henry? Are you going to sleep?\"\n\n\"Probably. Yeah, make that definitely. I think I've just run out of steam.\"\n\n\"But...there's...\"\n\nBut Henry's eyes had closed and he felt himself drifting off...\n\nAnd immediately he felt the same presence in his mind, and even in this drifting state he was aware that whatever was guiding the orb was indexing his memories once again - as if 'they' were searching for something...\n\n+++++\n\nTracy heard her mother coming down the companionway steps and stood. Not knowing what else to do about the orb she draped her fleece jacket over the shimmering globe and moved to intercept Edith before she made it to Henry's stateroom. \n\nBut...she was too late.\n\nEdith walked in and saw Henry crashed on the berth, then her eyes went to the jacket hanging in mid-air by the door to the head - yet she apparently didn't think anything of it. She turned and sat down next to the berth, then put her feet up on the comforter.\n\nBut then she looked at the jacket again.\n\n\"You know, is it just me or is there something weird about that?\"\n\n\"It's just you, Mom.\"\n\n\"Oh. Okay. What's with Henry?\"\n\n\"Exhausted, I think.\"\n\n\"I thought I heard some kind of commotion in the water and then I find you in here with wet hair and your clothes all soaking wet...\"\n\n\"Clyde fell in the water, Mom. No big deal.\"\n\n\"Oh. Now...what about all that malarkey at dinner...?\"\n\n\"Malarkey?\"\n\n\"Aliens and spaceships, Tracy. Don't play coy with me right now, either. I'm not in the mood and that wasn't a part of the deal.\"\n\n\"I really wasn't paying too much attention, mother.\"\n\n\"Don't give me that BS. I saw you, watched how you responded to that navy guy, and it seemed pretty obvious to me that you didn't think it was just crazy talk.\"\n\n\"Okay.\"\n\n\"But the thing is, Tracy, it is nuts, pure and simple. And I don't want you around all this crap anymore. I've made reservations for us to return to LA tomorrow evening, so you need to go over to that floating hovel you found and pack your duffel, or whatever it is you carry these days.\"\n\n\"Why mother...are you annoyed I'm not packing in Gucci saddlebags?\" Tracy said, moving over to her jacket.\n\n\"Don't take that tone with me, Tracy. I was prepared to find all kinds of goings-on when I got here, but not aliens. I would have thought with you being a mental health professional that you would be trying to get Henry into a mental hospital...\"\n\nTracy reached out and pulled her jacket from the orb, revealing the sphere hovering there.\n\nEdith seemed unimpressed. \"And just what the hell is that supposed to be?\"\n\n\"I'm not sure, mother, but it just might be an alien spacecraft.\"\n\n\"Bullshit, Tracy,\" Edith said, standing up and walking over to the orb. \"What is it?!\"\n\n\"Henry said he'd never seen this one before.\"\n\nEdith put her hand on the sphere and when nothing happened she pushed it once, then a second time - only much harder this time. When it didn't budge she turned and looked at Tracy, her eyes wide now - as if she was beginning to realize that something was seriously wrong with this picture.\n\n\"Tracy? What is this thing?\"\n\n\"Mother? I do not know.\"\n\nEdith backed out of the stateroom and Tracy heard her running up the companionway seconds later, followed by Anton and Mike coming down - right after Edith jumped to the dock at a dead sprint. Anton was the first to arrive in Henry's stateroom, and he just about ran into the orb as he shuddered to a halt.\n\n\"What in fuck is this?\" he screeched. \"Not Pinky, I think.\"\n\nThen Mike stumbled in and stopped dead in his tracks when he spied the orb. \"What's this? A new one?\"\n\nTracy shrugged and Mike leaned over and shook Henry.\n\nWho didn't budge.\n\nTracy went to Henry's side and opened an eyelid, then she peered first at one pupil and then the other. \"Fixed pinpoints,\" she sighed. \"We need to get him to the hospital.\"\n\nAnd with that, the orb moved until it was hovering squarely over Henry's face - pushing Tracy out of the way as it moved across the room - the meaning of the orb's shift in position abundantly clear to her.\n\n\"Well, excuse me,\" she sighed.\n\nMike leaned in and tried to push the orb away, and when that achieved nothing Anton joined in and they both pushed. Still nothing happened...and Mike shrugged then sat down next to Henry.\n\nBut just then Mike felt something inside his head - just before he fell asleep.\n\nWithin seconds both Anton and Tracy fluttered down and dropped off into a disturbed sleep, but by that point three more spheres had joined the first, each positioned over the face of a human.\n\nThen a very small humanoid figure appeared on the bed, and the tiny creature walked over to Clyde and stuck a probe into a vein in the pup's forearm. A moment later the creature walked over to Henry and did the same thing to him, then it - and the four spheres - simply disappeared.\n\n+++++\n\nTracy opened her eyes only to find the noon-day sun streaming through the overhead hatch and the room spinning around uncontrollably, and then she realized she was having the worst headache she'd ever had in her life. The deep ache started in her forehead and darted behind her eyes, but then she felt little pinpricks that seemed rooted in her mid-brain and that seemed to be sending little electrical jolts down her spine...\n\n\"I think I'm going to be sick,\" Mike said, trying to sit up then rubbing his forehead.\n\n\"Who want breakfast?\" Anton said, his cast-iron aviator's stomach carrying the day. Mike groaned and ran for the head off the foreword cabin...\n\n...leaving Tracy to turn her attention to Henry.\n\nShe rubbed his forehead gently, then with a little more pressure until he stirred a little before opening an eye. He moved his head a little then rubbed at his eyes. \"Cripes, what the hell hit me?\"\n\n\"Headache?\" she asked.\n\n\"Bad.\"\n\n\"Me too.\"\n\n\"Where's that thing?\"\n\n\"It was gone when we woke up, and that was about ten minutes ago.\"\n\nHe scratched at his forearm and then looked at the spot where the venous probe had entered. \"Feels like an insect bite,\" he muttered, then he looked at Tracy again. \"Did you say 'we'?\"\n\n\"Yup. Mike and Anton were here when I woke up, and they'd been out too. My mother was here for a while but she left before all the fun started. Which reminds me, she thinks she's got me on a plane out of here tonight...\"\n\n\"Sounds like I missed out on all the fun.\"\n\n\"Fun? Not really fun, at least not after she realized the sphere was in here with us.\"\n\n\"See, now that sounds like a lot of fun to me.\"\n\n\"You need a humor transplant, Henry. Well, I'd better go check on her. Be back in a flash...\"\n\nHenry nodded then turned his attention to Clyde, who was breathing gently but otherwise unresponsive. \"Hey buddy? You ready for some fresh salmon?\"\n\nOne eye opened and his tail beat the bed a couple of times.\n\nThen Clyde bent down and began chewing at a spot on his forearm and Henry leaned over to take a look. He saw the same 'insect bite' he'd seen on his own arm, so he went to his first aid kit and got some topical antibiotic ointment and applied some to both their arms, then he popped two Tylenol before he walked up to the galley.\n\nAnton was poaching eggs and making a fresh hollandaise for Henry's favorite smoked salmon eggs Benedict, and as Anton had already diced up a cup of salmon for Clyde, Henry carried the bowl back to his cabin while making all his usual breakfast noises. Clyde sat up and ate a little, but then he slowly laid his head down and closed his eyes - leaving Henry feeling more than a little concerned.\n\nHenry watched the pup breathe for a while then sighed; he went to the galley to help with the English muffins and set the table, then he texted Tracy and told her to come over for breakfast.\n\n\"Should I bring the fire-breathing dragon-lady?\" Tracy replied.\n\n\"Sure. We could all use some fun this morning,\" he added, then he turned to Anton. \"You're beginning to like cooking a little too much, Anton. \"You going to sign up for a cooking school?\"\n\n\"Not bad idea, Genry, but like flying too much.\"\n\n\"No reason you can't do both. If you start flying private jets that skill could be a bonus. Something to think about, anyway.\"\n\n\"I never like before. Now it is new, so kinda fun.\"\n\nEdith came clopping down the companionway in five-inch heels and Henry just shook his head because he knew she knew better. So, she was just egging him on, trying to get a rise out of him...which was par for her course. Tracy followed her mom down the steps and when she caught Henry's eye she saw he was trying his best not to let it bother him. Not too much, anyway.\n\n\"So,\" Henry began, firing the first salvo of the morning, \"I hear you're headed back to LA tonight. Too chilly for you here?\"\n\n\"Yes, and I need Tracy at home so she's coming with me.\"\n\n\"Is she? Well, how nice for you.\"\n\n\"How nice? Why on earth would you say that?\"\n\n\"Don't you just hate traveling alone?\" Henry replied.\n\n\"I haven't given the matter much thought. By the way, Henry, you look like crap this morning.\"\n\n\"Well, I haven't had my morning dose of post-menopausal horse shit just yet, so cut me some slack.\"\n\nTracy rolled her eyes; Edith's face turned a deep crimson. \"My, my, Henry. I had no idea you'd matured into such a misogynist troglodyte. I must say, you wear it very well.\"\n\n\"Thanks, Edith. I knew you'd appreciate the labor involved.\"\n\n\"Can I fix plate for you, Miss Edith?\" Anton asked.\n\n\"Just some toast if you please, young man,\" she said - though a little too obsequiously. It was as if, Henry thought, she was trying to highlight her take on the division of labor on board - in order to fill Tracy with doubt. But...why?\n\n\"Miss Tracy? You ready?\"\n\n\"I'll have two please, Anton. And did you roast potatoes this morning?\"\n\n\"I know you like, so of course. You want lots?\"\n\nShe nodded gleefully and Anton smiled as he passed a plate to her.\n\nSoon everyone was gathered at the table busily ignoring what had transpired in the aft cabin overnight. Everyone, that is, except Edith.\n\n\"So, what did your aliens want last night, Henry?\"\n\nAnton looked at the ceiling and started humming the Russian national anthem.\n\n\"You know, I have no idea,\" Henry said - but only after slowly cutting some salmon and constructing the perfect bite. \"You know, Anton, your Hollandaise is getting better and better.\"\n\n\"I'll say!\" Tracy added, causing Anton to grin again. \"And your potatoes are phenomenal!\"\n\n\"Tracy!\" Edith interrupted. \"You really need to go pack your duffel. I want to head out to the airport on the early side.\"\n\n\"Mom, I told you. I'm not going back with you, so let's just drop it.\"\n\n\"We are not going to drop it, young lady! You're flying home with me tonight!\"\n\n\"Mother? Drop it now, please.\"\n\n\"Tracy,\" Edith wailed, her voice almost a scream now, \"how dare you take that tone with me!\"\n\n\"Edith?\" Henry said gently. \"Are you sure you wouldn't like some estrogen to go with that toast?\"\n\nHer face turned deep red and she started to stutter: \"H-h-hen-hen-ry Tag-tag-gart, if you m-men-mention men-meno-menopause or est-estrogen just one-one more time I'm go-go-going to cut your fu-fu-fucking balls off-off...\"\n\nAnd on hearing that Henry turned to Mike and slapped the table with both hands: \"Your Honor,\" he concluded sardonically, \"the Prosecution rests.\"\n\nTwo hours later Edith followed Mike and Anton to the taxi stand outside the marina gates and they rode out to de Gaulle with her - to make sure she actually got on the airplane, as Tracy had asked nicely - leaving Henry and Tracy alone on the boat for the first time in days.\n\n\"I feel like a teenager again,\" she said, smiling at him as he curled up on the bed next to Clyde. \"Maybe we should run away now, just for fun.\"\n\n\"I'm sorry about your mother. I had no idea she'd be so...\"\n\n\"Deranged?\"\n\n\"I was thinking unpredictable. But deranged works, too.\"\n\n\"She didn't get what she wanted.\"\n\n\"C'est la vie, darlin'...\" Henry sighed. \"That's the same song she's been playin' for years, so I was kinda surprised she hadn't moved on.\"\n\n\"She was always like that?\"\n\n\"Only when she wanted something she knew she couldn't have.\"\n\nTracy nodded. \"It's the old definition of crazy. Do the same thing over and over and somehow expect different results.\"\n\n\"I reckon so.\"\n\n\"Hank? That thing last night? You really don't know who or what it was?\"\n\n\"No clue. My best guess is it has something to do with one of the other groups, only now for some reason they think I'm a threat.\"\n\n\"Why? Because you might be able to fly one of their ships?\"\n\n\"I don't know why they'd think that...\"\n\n\"Unless someone told them,\" Tracy said, smiling innocently. \"Maybe to throw them off the scent?\"\n\nWhat a strange thing to say? - he remembered thinking at the time. Strange...as in...Tracy suddenly seemed to understand more than she should have, at least given the limited information he'd passed along to her.\n\n\"Clyde? You ready to go outside?\" he asked gently.\n\nThe old boy raised his head and farted.\n\nHenry sniffed once then went for the leash...\n\nPart IV\n\nOf course, Edith did not get on her flight back to the City of the Angels.\n\n\"I just can't. Not without my daughter!\"\n\nMike insisted. Anton pleaded. All to no avail. The ride back into the city was hellish.\n\nSo when Henry heard those same five inch spikes clopping across his immaculate teak decks to the companionway ladder he smiled at Tracy. \"See. I told you she wouldn't be that easy to get rid of.\"\n\n\"Funny. I never thought of my mother in quite those terms.\"\n\n\"What? You mean...like a tick burrowed-in up to her neck?\"\n\n\"Thanks so much for planting that image in my mind...\"\n\n\"Hey. I try,\" he managed to get out - just as Edith came marching in. 'Like Santa Ana into San Antonio,' Henry smirked, relishing her inevitable defeat.\n\n\"Henry Taggart! What are you doing with my daughter back here!?\"\n\n\"I just finished cornholing her. You're next.\"\n\n\"You're a filthy beast, Henry! Now, Tra-Tra-cy, ba-ba-back to the bo-boat!\"\n\nClyde raised his head and looked at Edith, then he shook his head and walked to the galley - but not before he raised a leg and dropped another fart.\n\n+++++\n\n\"That woman like some kind Hell-Bitch,\" Anton muttered after Edith and Tracy returned to Karma. \"Genry? You fuck this woman? Really?\"\n\n\"Hey,\" Henry sighed, shrugging. \"We all make mistakes.\"\n\n\"Can't believe she Tracy mothers.\"\n\n\"That's Tracy's mother, Anton.\"\n\n\"Ah.\"\n\n\"Where's Sophie? She afraid to come around anymore?\"\n\n\"No, no, she work this week. Fly DC-10 Paris-Leipzig-Tehran.\"\n\n\"Interesting girl. Does she really think she has a job lined up for you?\"\n\n\"Yes, but need DC-10 or MD-11 type rating.\"\n\n\"Where can you do that?\"\n\n\"Frankfurt is closest.\"\n\n\"And what about the Baron? Is that still a go?\"\n\n\"Yes. For the twenty-first.\"\n\nHenry nodded. \"Well, see if you can sign up for the next class - unless you've decided you want to stay here and cook full time...!\"\n\n\"Genry? Maybe can do both? As long as boat in Paris, maybe?\"\n\n\"Fine with me, Anton, but Rolf will be her new owner soon.\"",
        "\"He too young, Genry. Boy need father.\"\n\nHenry looked up from his \"homework\" at the chart table and sighed. \"I know. That's my biggest regret, Anton.\"\n\n\"Your father must been good guy, Genry. You good father to boy. He need you.\"\n\n\"Thanks.\"\n\n\"Remember Honfleur? Chapel there? Something we suppose see?\"\n\nHenry nodded. \"Yes. On Christmas Eve.\"\n\n\"We go still?\"\n\n\"We go still.\"\n\n+++++\n\n\"Mike, I know I've asked you before, but what are your plans?\"\n\n\"I haven't made any, Henry.\"\n\n\"I can't believe someone like you would be at loose ends.\"\n\n\"It's been a confusing couple of months.\"\n\n\"Confusing?\"\n\n\"Yeah. I for one can't believe you're simply going to close your eyes and just die. It doesn't fit, and the whole thing is keeping me up nights.\"\n\n\"My death is...keeping you up?\"\n\n\"That's just it, Henry. You ain't gonna die, are you? You and Pinky have got something all worked out.\"\n\nHenry smiled. \"You really think that?\"\n\n\"I do. I've seen poker players with the same look you got these days, so I'm not buyin' this whole death thing you got going.\"\n\n\"So, let me see...death is something to be afraid of? So it can't possibly be happening to me? Is that it?\"\n\n\"You're goddam right it is. Closing your eyes with nothing ahead? What could be worse?\"\n\n\"Well, whatever else death might be, Mike, it is certainly a part of life. Human life, in this case. And no, Pinky and I have not planned some scheme to cheat my way out of it.\"\n\n\"Whatever.\"\n\n\"Which leads me to ask the question again, Mike. What about you? You mentioned before wanting to stay aboard and help with Rolf. You still feel that way?\"\n\n\"You really leaving all this to him?\" Mike said, indicating the boat and shaking his head.\n\n\"Yup. Really.\"\n\n\"Seems kind of irresponsible to me, Henry. He's barely a teenager.\"\n\n\"Yeah, I get that, yet it seems to me that there are a bunch of fifty-year-old thieves running around out there, too. And sometimes, Mike, you can just tell who they are.\"\n\n\"Can you, indeed.\"\n\nHenry smiled. \"Yeah. Something in the eyes, ya know? Like a poker player, maybe.\"\n\n\"I see.\"\n\n\"So, where will you be off to? Back to the states?\"\n\n+++++\n\nHenry crawled out of bed in the middle of the night and went to the head; when he looked in the mirror he could see that his briefs were spotted with blood and he scowled. Then he noticed the whites of his eyes were a little more yellow-orange now, and he nodded at the face in the mirror.\n\n\"Well Slim, it looks like liver and kidney failure. What is it now? December nineteenth?\"\n\nHe shook his head as he changed his underwear, breaking out in a sweat after bending over to get his feet in the holes. \n\n\"Well, ain't this fun...?\"\n\nHolding onto the walls he made it back into bed without waking Tracy or Clyde, or so he thought. He turned and saw Tracy looking at him, then she reached out and took his hand.\n\n\"Was that blood I saw?\" she asked.\n\nAnd he nodded. \"My eyes are beginning to look like the Great Pumpkin, too.\"\n\nShe sighed and squeezed his hand. \"Is the weather looking good for the flight?\"\n\n\"Anton thinks so. Anyway, they're still taking off tomorrow at midnight.\"\n\n\"Good.\"\n\n\"So?\"\n\n\"You might make it to Christmas, Henry, but it's going to be close.\"\n\n\"Might?\"\n\n\"I think we should go in first thing and see about getting some more platelets.\"\n\n\"Yippee skippee.\"\n\n\"Is everything settled with your lawyers?\"\n\n\"Yes, and Rolf knows where everything is. Now, what about your mother? Is she still giving you grief?\"\n\n\"No, not really.\"\n\n\"So, she's accepted the fact I'm checking out of this hotel?\"\n\nShe grinned. \"Hotel? Now that's not what I was expecting.\"\n\n\"Sorry.\"\n\n\"But yeah, I think she'd like to mend a few fences if you know what I mean?\"\n\n\"We'll see.\"\n\n\"Okay,\" she whispered knowingly.\n\n\"Milos is coming with some kind of stretched van early in the morning on Christmas Eve. He'll take us up to Honfleur and bring us back.\"\n\n\"So, you decided not to take the train?\"\n\n\"They aren't back to running a full schedule yet - and I don't want to get stuck out there in the boonies. And I'm not sure Clyde could handle a day on the rails.\"\n\n\"Anton told me what you're doing for him, and I think it's great...\"\n\n\"Yeah. Classes start in early January. He should be rated by April.\"\n\n\"And what about this kid?\"\n\n\"Rolf? What about him?\"\n\n\"He can't live here on the boat in the middle of Paris by himself.\"\n\n\"Really?\"\n\n\"Henry, you wouldn't?\"\n\n\"You're right, but we'll see. Things have a way of working out.\"\n\n\"Is that why Mike left?\"\n\n\"Probably.\"\n\n\"I never trusted that guy. He gave me the creeps.\"\n\n\"Creeps? Is that like a technical psychiatric term?\"\n\n\"Yes. Very much so.\"\n\n\"I haven't heard that one in years. Leave it to a shrink...\"\n\n\"What do you think he's going to do?\"\n\n\"Oh, I have a feeling he's still working for them, one way or another.\"\n\n\"Them?\"\n\n\"Oh, you know, the people who still think I can fly that contraption.\"\n\n\"Can't you?\"\n\nHe sighed, looked away. \"It doesn't matter now, Tracy, does it?\"\n\n\"Is there some kind of secret to doing it?\"\n\nHe looked at her again. \"And...who's asking this time, Tracy, because it sure isn't you...\"\n\n\"What do you mean by that?\"\n\n\"It means I've done my homework, Tracy. It means that an almost unheard of private security firm in McLean, Virginia bought your boat, and that they transported it to LeHavre about a month before all the fun started in Amsterdam. And that means our meeting in Honfleur wasn't an accident, and that someone did a really deep background check on me to even know you might have a way to turn me and pull me in.\"\n\nShe sat up and switched on a light, never taking her eyes off him. \n\n\"You see, Tracy, I have people looking after me, too.\"\n\n\"And our meeting up like that was a little too convenient, right?\"\n\n\"Yup.\"\n\n\"I told them it was a bad plan, but they were pretty sure Captain Lacy wasn't going to come through and they were desperate for a backup.\"\n\n\"Well, at least they got that one right.\"\n\n\"So? What do you want me to do? Leave?\"\n\n\"Leave? Now? Why on earth would I do that to you?\"\n\n\"Well, I can think of a few reasons.\"\n\nHis eyes were like lasers now, white-hot and focused: \"I think you and I should have a long talk tomorrow. Before you do anything else stupid.\"\n\nBut she couldn't meet his eyes now and looked away. \"You know, when they contacted me they gave a dossier to read up on, including all the stuff they had on my mom and Aunt Claire. And I thought I had you dialed in, Henry. That I knew where you were coming from...\"\n\n\"Did you really?\"\n\n\"Yeah, I did. Then I met you and realized how completely off-base their information was.\"\n\n\"Kinda makes you wonder, don't it?\"\n\n\"No, not really. At least...not anymore. Ya see, Hank, I made up my mind a few weeks go and there's not a goddam thing anyone can do to change it now.\"\n\n\u00a9 2021 adrian leverk\u00fchn | abw | this is a work of fiction, pure and simple; the next element will drop as soon as the muse cooperates."
    ],
    "authorname": "Adrian Leverkuhn",
    "tags": [],
    "category": "Romance",
    "url": "https://www.literotica.com/s/come-alive-ch-26"
}