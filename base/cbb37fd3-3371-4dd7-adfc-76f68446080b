{
    "title": "There and Back Again Ch. 148",
    "pages": [
        "Chapter One Hundred Forty-Eight: Relocation \n\nThe ride to Soldier's Peak started out fairly easy. We had a large contingent of soldiers accompanying us, enough bodies that the usual dangers of the road \u2013 bandits, wild animals, darkspawn \u2013 left us entirely alone. We had several carts \u2013 some loaded with supplies for the Peak, some with food and tents for the trip, and the last three with Faren, the eluvian, and the Architect. \n\nI rode with the Architect, to my dismay. It made sense \u2013 someone needed to be in the cart to keep a physical eye on him as well as monitor his mana, and I was the most capable of managing it if there was a problem \u2013 but I'd never enjoyed riding in carts. The roads in Ferelden were, as a whole, poorly maintained and bumpy, and shock absorbers didn't really exist in Thedas. There wasn't room at the front to sit with the driver \u2013 and I'd have lost line of sight \u2013 and the bed of the cart was plain, flat wood. By mid-day on the first day of travel, my butt was sore, and it only got worse from there. I couldn't find a comfortable position, couldn't pad the small seating area I had well enough to cushion the bumps, and with no one to talk to and nothing to do, I had nothing to distract me from my physical discomfort. \n\nThe nights weren't much better; with only Alistair and I having any sort of templar abilities, one of us had to be awake at all times to monitor the Architect. Because despite Utha's poison and enough magebane to keep ten mages incapacitated, on the second day of travel, the Architect's mana had begun to recover. He was still comatose, but there was no denying that he would be a risk the moment he awoke \u2013 and he was starting to get restless, twitching and rolling in his sleep. So I spent my uncomfortable days slowly gathering up the mana as it built, keeping the tainted magister from being able to cast if he gained consciousness \u2013 and most of the night, too. I'd catch only a few hours of desperately needed sleep while Alistair held the mana, and it became obvious after a couple of nights that it wasn't going to last; Alistair was capable of locking off perhaps half of the mana that I was able to hold, and we were rapidly approaching the limits of his ability. \n\nThe trip \u2013 slow, as we moved with so many carts \u2013 was expected to take seven days; by the fifth day, we could no longer risk transferring the Architect's mana to Alistair for me to get some sleep. Magebane was no longer working, and only some concoction Zevran had given us kept the creature from being fully awake. The only good thing about being forced to stay awake was that it got me some company \u2013 the others, including Alistair, Avanna, Oghren, Wulf, Alim, Seranni, and Velanna took turns riding in the cart with me, trying to help me keep alert. Justice stayed away, to my relief \u2013 my discomfort with the spirit-possessed Warden wasn't well-hidden, and everyone seemed to agree wordlessly that trapping me in a cart with him would be cruel and unusual punishment. And Sigrun refused to leave Faren's side. I wonder if she's as uncomfortable in that cart as I am in this one. \n\nAs tired as I was, I enjoyed the chance to catch up with some of my friends who I saw frequently but didn't get to speak to in any depth very often anymore, and also to get to know Seranni and Velanna better. Oghren was looking forward to seeing Felsi \u2013 who had agreed to run the tavern at Soldier's Peak once it was ready \u2013 and hadn't had to be reminded to wash in weeks. Wulf was missing Kallian, though he was looking forward to establishing something resembling a normal routine once we were settled. Alim had questions \u2013 about Earth, my abilities, about what I knew of the coming events in Thedas and my impression of what the changes I had wrought would mean. Not that I have many answers! And Seranni and Velanna \u2013 who still knew little of my background \u2013 told me about their clan, about their experiences with humans prior to meeting us, and their thoughts on Nate and the new treaty between the Dalish and Amaranthine. Alistair just held me while we daydreamed about our future together. \n\nBy the time we reached the opening to the mining tunnels that would bring us to the Peak, I was exhausted. I had no choice though \u2013 the tunnels were too narrow for two oxen to draw the carts; we had to unload them as much as possible and hitch just one ox to each \u2013 so I had to walk. As the only one of us who'd been to the Peak in many months, I took the lead, dragging myself up the inclines and adding more layers of clothing as the air grew colder. We ran into a patrol, and they ran ahead to inform Levi that we were on our way up. \n\nThere were places we had to unhitch the carts and pull them by hand up steep inclines and around tight corners; it took twice as long to get through the mines than normal, and I was barely upright by the time we finally exited the tunnels. It was dark outside, and I took a look around to see welcoming bonfires burning in the courtyard and Levi, Mhairi, Bel, Loghain, and Jowan waiting for us on the steps to the Keep, a group of my soldiers standing in formation at the bottom. \n\nThe old wooden structures had been completely torn down and construction on the tavern was underway; it was so cold in the courtyard that I wondered how the workmen got anything done, although I did see several enormous braziers that could be moved around to provide warmth. The chimney from Mikhael's forge puffed thick grey smoke, and torches lined the courtyard to provide more light. All I could smell was smoke, but as stifling as that was, I was still grateful because it did provide noticeable heat compared to the chill inside the mining tunnels. \n\nI tried to pull myself together to acknowledge the people waiting for us, to begin making arrangements, but I was just too tired; I staggered toward them and stopped at the bottom of the stairs, staring up at them vaguely, rubbing my red, dry eyes. Jowan took one look at me and cast some sort of rejuvenation spell; it couldn't take away my fatigue, but it sort of...faded, somehow, felt more distant and unreal than it had, and I felt better able to cope. I smiled at him gratefully and took a deep breath, looking over to where Levi and Loghain stood talking to my husband. \n\nI'd missed Alistair's initial greetings with the folk from the Peak \u2013 from the sympathetic looks I drew, I gathered that he'd made excuses of some sort and I was forgiven for my weary appearance and lack of manners. I smiled tiredly and went over to curl myself under Alistair's arm. Loghain said something about a letter, and I guessed Aedan had written them from the Circle; I was grateful, not only for the confirmation that my brother was safe, but also because it meant we were expected and some arrangements had been made. It hadn't even occurred to me to send a message, because from Amaranthine we'd have arrived shortly behind any courier and it wasn't worth it. I suppose Aedan sent the message by bird \u2013 I've never figured out how those birds work. Someday I'll take the time to learn. \n\nBetween Alistair, Loghain, Levi, and Mhairi, they started calling out orders, and the soldiers began unpacking the supplies off the carts. A stretcher was brought to carry Faren into the Keep, and the eluvian, covered with thick blankets, was lifted and taken in as well. Only once most of the people had dispersed to do their assigned tasks was a second stretcher loaded with the Architect, and Alistair and Loghain carried it inside, me trailing behind them with Jowan at my side. \n\nWe took him up into Avernus' tower; not only would it perpetuate the rumour that he was being kept up there, but it would allow me to stay inside the Keep \u2013 rather than the Deep Roads \u2013 until Aedan arrived, hopefully with help in tow, to build a cell to contain the Architect. We planned to sneak him down into the 'research facility' we'd found inside the Deep Roads once we had everything prepared. In the meantime I'd have Jowan and Avernus, in addition to Alistair, to help me keep an eye on the Architect and ensure he didn't wake up. \n\n\"Sierra?\" Jowan whispered to me, once we were alone and halfway up the tower stairs. \"Are you alright?\" \n\nI sighed. \"Just tired. Have to stay awake to keep from letting go of his mana.\" I wasn't really sure how much Jowan knew about what had happened to me when Faren and I had been captured by the Architect; I thought he might have helped with my rescue, but given that I'd been in a magic-induced sleep for days after we'd been freed, I couldn't be certain. \"I'll live. I've done it before, and Aedan should be here in the next day or two. Thanks for the help, though. I feel much better now.\" \n\nHe grimaced. \"You're going to pay for it later, just so you know. I can't prevent the effects of sleep deprivation, just...delay them a bit. Not even Anders can make it so you don't need to sleep at all.\" \n\n\"I'll sleep when I'm dead,\" I grumbled. Jowan's eyes widened, and I took pity on him. \"It's a joke. Once he's safely contained,\" I corrected. \"Don't worry.\" \n\nWe finally made it to the top of the tower, and the Architect was left tied up on a makeshift bedroll in a small storage closet; Jowan brought me a chair to sit on outside the door, and I collapsed into it gratefully. That's where I was \u2013 with Alistair holding my hand and Loghain eyeing me speculatively \u2013 when Avernus shuffled into the room from his lab. \n\nI was shocked at the ancient mage's appearance when he came through the door. I had known that Avernus was old, but the last I'd seen him, he didn't really look it. His age had been impossible to guess at, with no hair, wrinkled skin, and yet a sense of vitality that radiated from him, but all that had changed in the months since I'd seen him last. His skin looked sallow, his eyes sunken and dull; he didn't seem to have that inner fire anymore, and he stood stooped, holding a cane for support, liver spots on most of his exposed skin. I glanced at Jowan, who watched the old man sadly, and had a sudden insight; Avernus is dying, and Jowan knows it. The younger mage nodded miserably at the look on my face, before seeming to shake himself and go over to offer Avernus his shoulder to lean on. \n\n\"I'm most curious to see this creature you've brought here.\" Even his voice was old, scratchy and weak compared to his previous almost too-loud boom. \"Sierra's told me a bit about it, but I never thought I'd see it with my own eyes.\" \n\n\"Aedan sent us a coded letter telling us about it \u2013 the poison and everything,\" Jowan murmured. \"We've been working on a solution, something to keep it contained.\" \n\n\"Nothing we can do till the templars arrive,\" Avernus scolded Jowan, \"so no use getting their hopes up. But I have some ideas for after.\" \n\nJowan frowned, and I gathered he hadn't shared his ideas with the younger man. That doesn't give me much confidence in his plans! Here's hoping Aedan finds some help at the Circle. \"In the meantime, we can keep it unconscious \u2013 Aedan sent the recipe for the potion Zevran recommended \u2013 and they should be here soon.\" \n\nI sighed and settled more comfortably in my chair. \"I'd give almost anything for a real cup of coffee \u2013 or a coke.\" \n\n\"Can we see it?\" A little bit of the elderly mage's former enthusiasm crept back into his voice, and Jowan smiled fondly down at the old man. \n\nAlistair rolled his eyes and gestured at the door. \"Be my guest.\" \n\nI stayed in the hallway as the two mages went inside; I could hear murmured conversation, though I didn't care enough to pay attention to the specific words. I felt their magic flare as the two probed at the former magister, but chose to ignore it when there was no response from the prisoner. \n\nAlistair knelt at my side. \"I have to go check on things,\" he said, and I knew he meant Faren, the other Wardens, as well as the eluvian, \"but Jowan will stay here with you, okay? And I'll be back in a little while.\" \n\nI smiled and stroked his cheek with my thumb, my fingers cupping his jaw. \"I'm fine. Make my apologies to Levi and the others, would you? I'll have to deal with them and any issues afterwards. I'll be fine here.\" \n\n\"Nonsense,\" Loghain interjected. \"How far away can you be and still maintain...\" he gestured vaguely at the door, \"this?\" \n\n\"Dunno. Never tried being more than a few rooms away.\" \n\n\"Well, you don't have to sit out here in the hallway, at least. I'll help keep watch on the creature; why don't you use that little sitting room for now?\" He nodded at the room where I'd slept when I first came to the Peak and had to wait for the others to arrive. \"We can even have a bath brought up.\" \n\nI almost groaned aloud at the thought of a bath. \"Sounds good.\" \n\n\"Once I'm back, perhaps?\" Alistair suggested. \n\nI raised my eyebrows skeptically. I'm normally pretty easy to convince but if he thinks he's getting lucky while I'm exhausted and having to keep my concentration focused on the bloody Architect, he's got another thing coming. \n\nHe smirked at me, like he'd guessed where my thoughts had gone. \"Just to make sure you don't fall asleep in the tub, love.\" \n\nI sighed and nodded, hauled myself to my feet, and plodded into the little sitting room to collapse on the couch moodily and focus on trying to remain alert. \n\nJowan joined me after a while, and kept me awake by grilling me about everything that had happened \u2013 Seranni and Vander's Joinings, Justice, my capture by the Architect, Faren's health, the fight against the Mother, Utha, and taking the Architect prisoner. He was appalled that Anders and Solona had been captured initially by templars and then by darkspawn \u2013 apparently Aedan had left out those details \u2013 and I could see him stressing about his friends. He and Solona were close, I knew, and I worried what would happen when the blood mage ran into Rolan again \u2013 but that was a problem for later. \n\n\"Avernus isn't well.\" It wasn't really a question; the truth of it was obvious. \n\nJowan sighed. \"No. He denies it, stubborn old coot, but he's getting weaker. You saw.\" His voice cracked slightly, and he looked away, embarrassed. \"He's an odd one, but he's been like a mentor to me. Took me under his wing and taught me a lot of things \u2013 not just blood magic, either. In the Circle, unless you were something of a prodigy \u2013 like Sol, or Anders \u2013 you were more-or-less left to your own devices. Basic classes didn't get you very far, and if you didn't stand out, no one thought to mentor you. Solona had Irving, and Anders had the healers fighting each other to work with him. I didn't have anyone. If I'd had teaching then like I have here...well, things might have turned out differently.\" I knew he was thinking about Lily, but he cleared his throat and changed the subject before I could respond. \"Anyway, I'm going to miss him.\" \n\nI patted his shoulder sympathetically. \"I hope that the changes in the Circle mean more young mages will get the help they need. If they do it right...well, maybe escaping won't be necessary for anyone anymore.\" I looked down, avoiding his eyes. \"For what it's worth...I'm sorry.\" I hoped he knew I meant it for more than just Avernus' impending loss. \n\nHe nodded stoically, and we lapsed into a brief silence. \n\n\"Is Solona really okay?\" \n\nI frowned. I still didn't know what had happened to the poor girl while the Architect had held her, and at night in my dreams, my imagination had been active presenting one horrific scenario after another. \"I don't know. She was still unconscious when we left, and Anders hadn't seen what was done to her. She didn't...look different, and the Wardens said she still felt normal, so...\" \n\nHe smirked at me. \"The 'Wardens' said that, did they?\" \n\nI scowled and he laughed, holding up his hands in surrender. \"Don't worry about it. I know nothing, and I'd never say anyway.\" I believed him, and smiled gratefully. \n\n\"So we really can't kill him?\" he finally asked of the Architect. \n\n\"No. Utha implied that he was similar to an Archdemon \u2013 his soul could skip to the nearest tainted creature, and from what I have guessed about one of the other magisters I'd heard of, Corypheus, it could even be a Warden if their taint was advanced enough \u2013 he'd just take over instead of being destroyed.\" \n\nJowan shuddered. \"So this Corypheus was kept imprisoned using blood magic?\" \n\nI sighed. \"Yeah, and the problem was that it weakened over time, and could be undone by the blood of a close enough relative. Do you know anything about magic like that?\" \n\nHe shook his head. \"What little I know of blood magic I learned from a book \u2013 and I have no intention of making a deal with a demon to learn more. I wouldn't be surprised if Avernus knows something that might help, though. He's not exactly been shy around demons in the past.\" \n\nI nodded. \"Any issues lately?\" \n\n\"No. He's been getting so weak...I'm not sure that doing much in the way of blood magic now wouldn't kill him. But maybe he can teach me and I can do it.\" His expression was worried. \n\nI reached out to squeeze his hand briefly. \"Not if it's bad for you \u2013 even if just mentally. You don't need to put yourself at risk for this. We'll figure something out.\" \n\nHe nodded and lapsed into silence. Alistair arrived \u2013 with a small copper bathtub being dragged behind him, helped by one of the servants Levi had hired but I hadn't met yet. Jowan and the servant left, and as my husband filled the tub, I stripped and climbed in gratefully. \n\n\"There's nothing better than a bath.\" The tub was small, and I huddled in it, enjoying the warmth before reaching for the soap. Alistair carefully washed and rinsed my hair for me, and I piled it on top of my head to just sit in the warm water and relax for a few minutes \u2013 until I felt my eyelids droop. Alistair handed me a warm towel and laid out some comfortable trousers and a warm woven shirt, and I braided my wet hair up. We ate cold meats and cheese for a late supper, and I settled in for a long, tiring wait. \n\nThe next two days, while we waited for Aedan and the others to arrive \u2013 and struggled to keep the Architect sedated and unable to cast \u2013 were horrible. By the end of the third day without sleep, I was so tired that the hallucinations came back; Alistair was usually able to break me out of them, but the feeling of distance from reality was distressing. It isn't as bad as when I was being held by the Architect \u2013 at least I have food and water, and someone to help me through it \u2013 but it's no picnic! Alim and Jowan both tried a variety of rejuvenation and healing spells; they helped keep me from falling asleep, but did nothing to keep me anchored to reality. My stomach rebelled, cramping and leaving me nauseated and unsettled. Alistair barely left my side, often holding me in his lap when he was awake to help me stay calm; he left only to sleep, and then only for as little time as I'd let him get away with. \n\nWhich was probably why he was the first one to notice when something went wrong another day later. \n\n\"Love?\" \n\nI twitched, having been technically awake but completely zoned out and daydreaming wildly in his lap. \"Hmm?\" \n\n\"Why are my pants wet?\" He lifted me, glancing down, and his face blanched whiter than parchment. \"Oh, Maker...Sierra?\" \n\nConfused, I struggled to my feet and looked down to see my husband's lap covered in blood. It took much longer than it should have to make the connection and check my own pants \u2013 yep, also drenched in blood \u2013 and realise that the blood was actually coming from me, not him. \n\nWell, that explains the cramps, then. Although when I thought about it, I hadn't really had any major cramping since I'd been treated for my 'girl problem' by Anders over a year ago \u2013 my periods had been light and painless. Maybe stress? \n\nI flushed belatedly, mortified. \"Oh, Maker, I'm sorry, I wasn't expecting...\" I turned and fled, running into the nearest bathroom \u2013 basically a room with a chamber pot and a window \u2013 which happened to be doubling as my temporary quarters. I stripped off my pants and smalls, grimacing at the amount of blood evident there, and sank onto the chamber pot with a cloth, basin and my showerhead nearby so I could get cleaned up. And after a few moments, I was still sitting there as I was wracked with worsening cramps. ",
        "\"Sierra?\" \n\nI heard Alistair nudge open the door, and embarrassed, I threw a towel over my lap before he could see me. I looked up to see his concerned face peeking through the door; he blanched again when he noticed my destroyed clothes, and came inside, shutting the door carefully behind himself. \n\n\"Are you okay? Is this...normal?\" he asked carefully, obviously afraid I'd be offended by the questions. Not like I haven't been irritable as hell the last few days \u2013 I can't really blame him for being cautious. \n\n\"I don't know,\" I mumbled, groaning as another wave of cramps overtook me. \n\nHe rushed over and knelt in front of me, wrapping his arms around me and pulling my head to rest on his shoulder. I drooped in his embrace, horribly embarrassed but so grateful that he was there and wasn't too disgusted to comfort me. And while he held me, I tried to think. \n\nWhen was my last period, anyway? I considered, and decided that it had happened the last time I was at Soldier's Peak. Which was...I did some rapid math on my fingers, checking the numbers once, and then again, and again. Sonofa...that was seven weeks ago. \n\nSeven. Weeks. \n\nMy period hadn't been a day late in over a year, nor anywhere near this heavy. \n\n\"Uh, Alistair?\" I sat back, lifting the towel to glance down between my legs, shuddering at the amount of blood pooling underneath me. \"How long has it been since Denerim?\" \n\nHe thought about it for a minute. \"Seven, eight weeks? Something like that. Why?\" \n\n\"After we left Denerim...that was the last time I had my monthly. Right after. I remember because the timing seemed so lucky.\" I blushed. \n\nHe smiled, not enough to erase the worry on his handsome face, but enough to crinkle his eyes a little. \"Okay...?\" \n\nI sighed. \"Do you know how far apart periods...uh, I mean, monthlies normally are for most women?\" \n\nThe confused look intensified. It would have been adorable if I hadn't been so scared. At least I'm not at risk of falling asleep any time soon... \n\n\"Um, fo...four? Weeks?\" I nodded, and he contemplated his answer for a moment. I could see the second his confusion turned into something else. \"And this has been...seven?\" \n\nI nodded again. He glanced over at my pile of soiled clothing, then down at the outside of the chamber pot, as though he expected to see something there that would make everything make sense, take away the horrible feeling of wrongness that was palpable in the tiny room. \n\nFinally he met my eyes again, mouth open, face pale with pity and understanding. I nodded miserably, a tear finally overflowing my eye to run down my cheek. \n\n\"I'm pretty sure I am \u2013 uh, was? - pregnant.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance",
        "modern girl in thedas",
        "celebrities"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-148"
}