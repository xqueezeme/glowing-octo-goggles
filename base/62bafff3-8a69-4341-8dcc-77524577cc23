{
    "title": "Not-Valentine's Day",
    "pages": [
        "\"Well, that fucking sucked,\" I muttered.\n\nI was supposed to be eating at a nice restaurant downtown, sitting across from my girlfriend of two years, both of us dressed to impress. We were supposed to be enjoying amazing but overpriced food, staring dreamily into each other's eyes and engaging in witty conversation. We were also supposed to be looking forward to an evening of getting out of those nice clothes and into each other because my roommate, Frank, was out. Except that's not what happened.\n\nInstead I was walking home across campus, dressed in my nice suit, the only suit I had that lived in my closet three-hundred sixty-two days a year, getting the hem of my pants wet. My pants were wet because this is the Pacific Northwest and you don't see sunlight for about three months straight in the winter so instead of enjoying good food and better eye candy I was enjoying forty-degree February air and a sky that was threatening a light drizzle. Instead of looking forward to an evening of debauchery with my long-term girlfriend, I now had no girlfriend and still had to make good on my deal with Frank to do all the vacuuming for a month. Who the fuck vacuums a dorm room? Frank. Now me.\n\nThen I heard the wolf whistle.\n\n\"Looking good, Chucklebutt!\"\n\nI sighed and stopped. I recognized the voice, and besides only one person called me that. Monica Lott. Monica was a friend, but she was also really good at getting under my skin and the nickname was definitely part of that. I took a deep breath, then two, then three and prepared to be as polite as possible. Then I turned. \"Hi, Monica.\"\n\nShe was standing under a copse of trees on the quad with about four other people, giving me a lopsided grin and a thumbs up. I gave her a wave back and something that might have been a smile if you squinted at it through the fog. Then I spun back around and continued my walk of shame towards my ancient dorm building with its creaky walls, finicky radiators, and a room that did not contain a hot naked girlfriend.\n\nI heard voices behind me, Monica saying something to her friends, then one of them shouting \"bye, Mona.\" A few seconds after that there was the slap of jogging footsteps behind me.\n\n\"Hey, wait up!\"\n\nThen Monica came up beside me, slowing her pace until she was walking almost shoulder to shoulder with me. \"Hey, Steve.\"\n\n\"Hey.\"\n\n\"What's up?\"\n\n\"Just going home.\"\n\n\"What's with the suit, then?\"\n\nI sighed, again. Holy crap when did I turn all emo. \"I have... had a date.\"\n\n\"Oh yeah,\" she responded, \"the anniversary thing with Emily. How'd that go?\"\n\nI kicked a rock. What am I, ten? \"It didn't, actually. And now we don't.\"\n\nShe looked at me with a confused expression. \"You don't what?\" Then it clicked. \"Oh. Shit, I'm sorry. On Valentine's Day?\"\n\n\"Yup.\"\n\n\"And did she text you, or... noooo did she do it when you got to her door?\" Monica asked, looking both horrified and entertained.\n\n\"Yup.\"\n\n\"And isn't this your anniversary?\"\n\nFrustration and anger started to boil in my gut. It wasn't Monica's fault, but shit learn some tact. \"Yes, it's our fucking anniversary.\"\n\nShe held up her hands in surrender. \"Sorry, just... getting all the facts. Who breaks up with you on Valentine's Day?\"\n\nEmily, apparently. And on your anniversary. I didn't respond, just walked in silence for a little bit while Monica fidgeted beside me. Then I started to feel bad about it. What a great day.\n\n\"You want to talk about it?\" she finally asked.\n\n\"Not really.\"\n\n\"Then how about we do something else?\" she asked.\n\nI glanced over at her, smiling at me from between the ridiculous wool hat and poofy orange parka she'd been wearing ever since the weather had turned slightly nippy in October. Californians. \"Like what?\"\n\nShe shrugged. \"Something, I don't know, not a Valentine's thing. Not an anti-Valentine's thing either it's not like I'm getting all down on Valentine's Day or anything, just a thing. A Not-Valentine's Day thing. Go hang out. You're all dressed up with nowhere to go, I've just got nowhere to go, and it's Friday.\"\n\nI stared at her. She smiled at me.\n\nThe idea was beginning to grow on me. \"Where?\"\n\nShe shrugged again. \"Uh... my floor's got a communal kitchen and I've got chicken tenders?\"\n\nFuck it, why not. \"Sure.\"\n\n===== Not-Valentine's Day, 2014 =====\n\nMonica and I met back in September in Speech and Communication 110, and after getting stuck in a group together that first week we both realized we'd found a beach of sanity in a sea of freshmen. Seriously, the class was twenty-nine freshmen and us two sophomores and the difference in emotional age was jarring. We'd convinced the teacher to keep us together after that, and had started hanging outside of class too. Friend stuff, not dating stuff; I was in a relationship and she wasn't really my type. She could keep up with me in a conversation, she was fun to be with, but she was confrontational, liked to tease me for little things, and didn't know when to quit. Monica was good in short doses, but there was only so much of her I could take at a time.\n\nNow I was spending Valentine's Day with her, though, in the remarkably clean communal kitchen of Fenton third floor, dressed in my suit while she puttered around in sweats, about to enjoy a fancy dinner of chicken tenders, ginger ale, and garlic bread I picked up at the campus store.\n\n\"Out of the way, Chucklebutt,\" she said, jabbing me with her toe, \"I need in.\"\n\nI scooted out of the way of the oven and she pulled it open, shoving the foil-wrapped garlic bread in alongside the already baking chicken. \n\n\"Would you stop calling me that?\" I asked.\n\n\"No.\"\n\n\"Why not?\"\n\nShe grinned at me. \"Because it annoys you.\"\n\nSee what I mean? It had been the third week of class, our cringiest classmate had told a bad joke, and I'd done that thing you do where you can't decide which thing to say so you just say them both. Or at least I do that, I can't speak for anyone else. Anyway, instead of laughing out loud, or laughing my ass off, I sarcastically informed our group that I was \"laughing out my ass.\" Monica started actually laughing so hard she nearly fell out of her chair, and from then on, when she wanted to get under my skin, I was \"Chucklebutt.\"\n\nThis time, though, I had ammunition of my own.\n\n\"Soooo...\" I began, dragging it out, \"did I hear someone call you Mona?\"\n\nMonica, in the middle of adjusting the timer, froze for a second. \"Yes?\" she answered cautiously.\n\n\"So people call you Mona. Your nickname is Mona.\"\n\nShe sighed.\n\n\"So your name is Mona Lott.\"\n\n\"No, my 'nickname' is Mona Lott.\"\n\n\"So did you earn that nickname, or...\"\n\nShe jabbed me with her toe again, a lot less nicely. \"Debra started calling me Mona about three days after meeting me, I thought she was just shortening things, and it was a few months before I realized she was messing with me but by then it had stuck and I was Mona to all my friends. Debra's kind of a bitch sometimes.\"\n\n\"Isn't she your best friend?\"\n\n\"She can be an amazing person and still a bitch.\"\n\n\"The two of you have a lot in common, then.\"\n\nShe gave me an insincere smile. \"So I'm amazing? Thanks! And hey, if you don't like Chucklebutt I can always call you your real name, Mr. Stephen Glascock.\"\n\nIt was my turn to sigh. Yeah that wasn't better.\n\nMonica opened her mouth to speak and I could hear the \"did you earn that one?\" getting ready to roll off her tongue. It didn't, though; instead she shut her mouth, stared at me for a second, then passed me a ginger ale from the counter before stepping away.\n\n\"Come on,\" she said, \"have a seat. The bread will be about ten minutes. You can tell me all about it.\"\n\n\"I said I don't want to tell you all about it.\"\n\nShe pulled out two chairs and motioned me into one. \"My therapist says it's good for you, and by therapist I mean dad, so too bad, you have to. At least until the bread is done and we can eat, then you can stuff your mouth and pretend your mama taught you not to talk with your mouth full.\"\n\n\"She did.\"\n\n\"It hasn't stopped you before.\"\n\nI thought about making a rude gesture but decided it was too much effort. I pulled up a chair instead and collapsed into it. \"So, what?\"\n\n\"Start at the beginning. Or wherever, doesn't matter.\" She popped the tab on her drink. \"What the hell happened?\"\n\nI leaned back in the chair and it failed to creak ominously. The communal furniture in Fenton was way better. \"Emily and I got together on Valentine's Day, senior year. We'd been sort of hanging out, sort of dating, but that's the day we decided it was actually a date and we were going steady.\"\n\nMonica snorted at \"going steady\" but didn't say anything.\n\n\"Everyone said high school relationships never worked out, or that everything would change once we got to college, but just like I'm pretty sure everyone else before us we figured we'd be the exception. We were going to the same college, after all, it wasn't like it was going to be a long distance relationship. It went pretty well, I guess, we saw each other a lot but we were pretty busy too. It was her idea to make Valentine's Day a thing, it was our anniversary so why not do something big, like have a big date where we got dressed up and went somewhere fancy. We had a lot of fun last year.\"\n\n\"Then this year I showed up at her door and she wasn't even dressed, and she said she's been thinking about it a lot, that she didn't know what to wear, and she'd been fretting about it all week and then this afternoon she realized it wasn't about what to wear, it was about not wanting to go.\"\n\n\"So, what, stressing out over the date made her realize she didn't want to date you anymore?\"\n\n\"Pretty much.\"\n\n\"What did you say?\"\n\n\"Oh, okay.\"\n\n\"That's pretty dumb.\"\n\nYou're pretty dumb. Real mature, Steve. I pushed my ginger ale can around the table. \"Yeah, well, I wasn't at my best. I was still trying to figure out what she was saying. She said a few other things after that, about how she's been feeling tied down like she couldn't do anything, because she always had to think about me, and that wasn't my fault but you know what I don't want to talk about this anymore. Do you have anything else to drink?\"\n\n\"Canada Dry isn't good enough for you?\" she asked, taking a dramatic swig from her drink.\n\n\"My mom always gave me ginger ale when I was sick, so it makes me think of barfing.\"\n\nMonica stared at me, then stared at her can. Then she pushed it away. \"Thanks for that.\"\n\n\"No problem.\"\n\n\"So, were there warning signs, or something?\" Monica asked. Which annoyed me, because I'd just said I didn't want to talk about it. Then I answered her anyway.\n\n\"I guess so. I mean things changed a lot when we got to college. At first it was awesome, we saw each other a lot more than we could at home and sure we had roommates but they were out a lot sooo...\" I let that one trail off. I wasn't going into details. \"We could go out whenever we wanted, too, which was great. Weekday? Weekend? Middle of the day? Didn't matter. It was great. Then the novelty wore off I guess. Then I'd call and she'd say sure, but I have homework to do so you can come over but you'll have to do your own thing. I can't honestly remember the last real date we went on, I was looking forward to this because... I don't know. Shit.\"\n\nShit we had spring break plans. I'd need to see if I could get those tickets refunded. That wasn't really all of it, either. I'd planned that trip, it had been Emily's idea but I'd done all the work and I was beginning to realize that I'd been doing most of the work since we got back from summer and more of that time had been me trying to arrange things and her saying she was too busy. For months. I was having an epiphany and I didn't like it.\n\n\"So, it doesn't sound like it was going too well,\" Monica said, voicing my thoughts.\n\n\"I guess not,\" I snapped, a little too harshly; I wasn't snapping at her, really, but she was downrange. I winced and pulled in my tone. \"And I'm just starting to figure out how much.\"\n\n\"So why'd you stick around if it wasn't any fun?\"\n\n\"Because I didn't think about it, I don't know,\" I said, waving my hand in the air. The oven beeped, saved by the bell I figured but with a glance I saw the timer was just counting down from one minute, now.\n\n\"Sex must've been pretty good,\" she said, a comment I was not in a million years expecting which is probably why I just blurted out the first thing that came to mind.\n\n\"When it happened, I guess, sure.\" I'm not one to kiss and tell, I can count the number of people I've talked about my sex life with on one finger and she and I aren't dating anymore, which is why this conversation was suddenly sailing into uncharted waters.\n\n\"You guess?\"\n\n\"I don't exactly have anything to compare it to.\"\n\n\"Oh.\"\n\n\"And it didn't happen a lot and it, well,\"\n\n\"What?\"\n\n\"Didn't tend to last long.\"\n\nMonica snorted but held her tongue again, which must have been a Herculean feat for her given the ammunition I'd just handed over. My social filter was starting to catch up with my mouth but I found I didn't really care what I'd said, the relationship had been bugging me for months I just hadn't realized it and no matter how embarrassing it just felt good to tell someone about it. Mona, strangely, felt like a safe someone. Or I didn't care.\n\nThe oven beeped three times, though, insisting someone come check the food, and my unexpected burst of self-admission ended with the tone. Well, the tone and the sudden appearance of a couple of disheveled looking dorm dwellers.\n\n\"Is that food?\" one of the girls asked.\n\n\"You can't have any,\" Monica responded.\n\nThe two girls grumbled and moved over to the fridge while Monica pulled our dinner from the oven with a towel. Then she grabbed the chicken off the pan with bare hands, hissing with each one but still going back for more, barely grabbing each piece before tossing it onto a plate. The garlic bread she just broke in half, then in quarters, because no one trusts college students with sharp objects.\n\nThe girls had finished staring at other people's moldy takeout in the near empty fridge and turned their attention back to us, this time skipping over the grumpy brunette with the food and alighting on the spruced up depressant in a suit. The blonde one smiled at me hopefully.\n\n\"Fuck. Off.\" Monica said, very clearly enunciating each word.\n\nThey smiled at me, then glared at her, then did as Monica suggested. They broke into rude muttering before leaving eyeshot and long before leaving earshot; I distinctly heard the word \"bitch.\"\n\nThen Monica tapped me with her foot and I glanced up. She motioned with one paper plate and I cleared the space in front of me so she could set it down.\n\n\"I wouldn't have anything to compare it to, either,\" Monica said out of the blue, not looking at me.\n\n\"What?\"\n\n\"You said you didn't have anything to compare it to. Your, Emily's and your, um\" she made thrusting motions with her hips.\n\nI laughed. \"You won't say it but you'll do that instead?\"\n\nShe broke eye contact even further. \"Shut up I'm trying to be nice.\"\n\n\"By...?\"\n\n\"You share, I share,\" she responded, looking embarrassed. Then she took a bite of her too-hot chicken and pretended to be looking elsewhere.\n\n\"So you haven't?\"\n\n\"No,\" she said, then swallowed. \"Not that there's anything wrong with it, I mean I want to I just haven't dated the right guy, or really any guy actually. Never quite worked out. I've kind of got a lot of social anxiety, believe it or not, I get flustered and don't know what to do and it's a little like kindergartners hitting each other at recess because they don't know how to say I like you. I tend to put people off.\"\n\n\"Really?\" I responded, sarcastically.\n\n\"Oh my god, fuck off and die!\" she wailed, rolling her eyes and head up to the ceiling. I laughed, the first good feeling I'd had since about three seconds after I knocked on Emily's door, and a grin pulled at my cheeks as I felt a kick under the table. I don't know why getting kicked made me happy.\n\n\"Asshole,\" she said, but the tone was affectionate, \"I'm baring my soul here.\"\n\n\"Can dish it out but you can't take it, huh?\"\n\n\"Maybe I'm just not used to people lasting this long.\" She paused. \"Not that you do, I mean, although I admire your bravery; not every guy would admit to being a two-pump chump.\" She glanced over at me, and I couldn't figure out if she was daring me to respond or horrified at what she'd said. Maybe both.\n\nEither way it hurt, it did, and if she'd fired it off two minutes ago I might have snapped back but I was feeling pretty good now, for some reason. That laugh had done a lot. And I was thinking about what she said, about being awkward; so I took the hit instead.\n\n\"Yeah, well, when it only happens every month or two you get pretty worked up. Besides, my average was more like six pumps thank you very much.\"\n\nShe snorted. I laughed. She laughed. We grinned at each other. I guess I said the right thing.\n\n\"I guess you lived up to your name, then, huh?\"\n\nConfusion. \"Chucklebutt?\"\n\n\"Glascock.\"\n\nI stared. She grinned at me and kicked me under the table again, gently. Well shit, now the ball's in my court, except I didn't have anything. Not a single witty retort. I'd probably have a bunch in about five minutes, of course, but five minutes was way too late and it's not like-\n\n\"Stop, you'll strain yourself.\"\n\n\"What?\"\n\nShe leaned forward, putting her elbows on the table and winking at me. \"How about I do it for you? When I finally do have something to compare it to, you hope you're nowhere around so you don't hear me moan a lot. Pretty good?\" She stared at me with a triumphant grin.\n\n\"That was awful,\" I retorted, although I was more upset she beat me to it.\n\n\"So do better. I'm waiting.\"\n\n===== Not-Valentine's Day, 2015 =====\n\n\"Heyyyyy!\" Mona called from the front hall of my tiny apartment, \"what's up, Chucklebutt, Party's here!\"\n\n\"Will you PLEASE stop calling me that?\" I shouted from the kitchen.\n\n\"Sure, about three days after it stops bothering you,\" she called back, lowering her volume as she came into the kitchen. She bumped me with her hip as she went past. \"Hey, Steve.\"\n\n\"Hey, Mona,\" I said back as she set her box on the counter. I glanced over and did a double take.\n\n\"Woah.\"\n\n\"Woah?\"\n\n\"You're wearing a dress.\" I'd never seen Mona in a dress, or a skirt for that matter; she was pretty much jeans and t-shirt, or sweats, all the time. It was a light green casual dress, and while it wasn't tight it did hug her curves and Mona had a lot of curves to hug. It also lacked sleeves, and for some reason Mona's shoulders had me tongue-tied.\n\n\"You like it?\" she asked, stepping back and doing a little twirl. \"I figured you fancied up last year, I might as well this time.\"\n\n\"It's okay,\" I lied.\n\n\"Okay? Hmmph,\" she responded, eyeing my jeans and ratty sweatshirt. \"Better than you. Something on my dress?\"\n\nI snapped my eyes back up to hers, actually to a spot about a foot to the right of her eyes; it's kind of hard to make eye contact right after you've been caught ogling your best friend. \"I've still got the suit. I could put it on.\"\n\n\"I know. You've told me. Fifty years from now you're going to be buried in that cheap piece of shit.\"\n\n\"So I shouldn't put it on?\"\n\n\"No, fuck you, go get it,\" she gave me a few gentle shoves towards my bedroom. \"I put on fucking pantyhose, the least you can do is put on a cheap suit.\"\n\nThe first Not-Valentine's Day we'd stayed up until after midnight, in fact until the RA came out and told us to shut up and fuck off. We'd gone into the evening barely knowing each other, and come out friends. At first we just texted and met for a bite occasionally, but that turned into regular things too: weekly TV nights, improv shows, and for one semester we took Curling together (it's amazing, don't knock it until you've tried it). Now, a year later, I'd call her my best friend.",
        "Doing Not-Valentine's Day again had been my idea, back in December when we were both single and bored, chatting over a plate of greasy french fries. Her response had been \"why the fuck not?\" and we'd decided to make it a regular thing. Within a week she was dating someone, and a week after that I was kind of dating someone, but come February 14th we somehow still managed to keep the plans. \n\n\"Your whatever is boiling over,\" Mona called from the kitchen as I was buttoning up my shirt.\n\n\"Gnocchi.\"\n\n\"Your gnocchi is boiling over.\"\n\n\"So, stir it.\"\n\n\"I'm not your maid.\"\n\n\"Chefs cook, maids clean, and that's your dinner too,\" I responded, rushing to get my jacket on.\n\n\"Okay,\" she griped, and I heard the eye roll and the smile in her tone. There was a soft banging from the kitchen, wooden spoon on metal pot.\n\n\"I stirred,\" Mona said as I came back into the kitchen, making it sound like the worst imposition that could be put upon her. She still looked great.\n\n\"Thank you, historians will make note of your noble sacrifice.\"\n\nShe grinned at me, then eyed me up and down in my cheap suit. She didn't say anything, she didn't need to, I could hear her words in the expression. She'd made her opinion of the suit very obvious, but it was also pretty much the nicest thing I owned by a wide margin.\n\n\"Yeah, well, not all of us can be as gorgeous as you,\" I responded.\n\nMona didn't seem prepared to respond to that one; she just stared at me for a second then turned quickly back to the pot. As I walked over next to her she reached out with a foot and gave me a gentle kick. I'd learned to speak Mona over the last year; kicks were how she said nice things when she couldn't figure out how to say nice things.\n\n\"Hand over the spoon before you stir our poor dinner to death. Go make yourself useful with whatever you've got in that box.\"\n\n\"It's called salad, and it's good for you. Gives you vitamins. Helps you poop. I'll make you a deal: you eat some and I won't call you Chucklebutt again all night.\"\n\n\"Deal,\" I said, which wasn't hard because I liked salad, at least without Kale. Kale is the devil's nose hairs.\n\n\"How are classes?\" she asked, changing the subject.\n\n\"O Chem is kicking my ass.\"\n\n\"You knew it would.\"\n\nI shrugged. \"I knew it would, but it's required. Sometimes I doubt my desire to major in Chemistry, I mean what the hell am I going to do with it?\"\n\n\"Cure cancer?\"\n\nI shrugged, then spooned out a piece of pasta, blew air over it, and took a bite. A few more minutes.\n\n\"You met Shannon in chem lab, right? What's she think of you spending Valentine's Day with another woman?\"\n\nAh, Shannon, current target of my infatuation. Bubbly, friendly, had a habit of squealing when she saw something cute, and sat next to me both last semester and this one in chem class. Also liked tank tops, tight pants, and making out for hours.\n\n\"Last semester, Phys Chem, but yeah. And she's not really a Valentine's Day person. She said something about chains of the patriarchy and told me to go have fun.\" It hadn't been quite that easy, actually. I'd been terrified to bring it up until finally, a couple of weeks ago, I made myself tell her I had Not-Valentine's Day plans with my best friend. She promptly shrugged and told me to have fun. She'd also said the patriarchy thing which I think was a joke, probably; I was still figuring out Shannon.\n\n\"Patriarchy? So she's a lesbian, then?\" my dinner mate joked. \"You do know how to pick 'em.\"\n\nUnlike Mona; Mona I thought I had pretty well figured out.\n\n\"So how does Garrett feel about you spending Valentine's day without him?\" I fired back.\n\nShe snorted. \"Garrett couldn't care less about Valentine's Day, I'm not sure he even knows when it is. Besides, he had band practice tonight.\"\n\n\"Don't girlfriends attend band practice?\"\n\nMona paused her tomato chopping to glance over at me. \"You've never been in a band, have you? Girlfriends are never welcome at band practice, we're a distraction and break up the band, ask The Beatles. Also it's death metal and I value my hearing.\"\n\nGarrett was nice guy, although he and I didn't have a lot in common. Garrett liked music, pot, and Mona, and while he didn't seem to be going a lot of places he was having fun doing it.\n\n\"Plus I make it up to him in other ways,\" she continued, and I could hear the grin.\n\nI glanced over at Mona. She failed to make eye contact and blushed as red as the tomatoes she was cutting.\n\nI got the message. \"Well congratulations, finally got something to compare it to, huh?\"\n\n\"What? Oh, yeah. Hell yeah. A lot to compare it to, a LOT,\"\n\n\"No,\" I interrupted, pointing at her with the spoon, \"stop right there, stop, no more, do not go into details I really don't want.\"\n\n\"I wasn't planning on it,\" she said, sounding extremely pleased with herself. \n\n\"Except maybe one,\" I added.\n\nShe paused and stared at me, suspiciously. \"What... one...?\"\n\n\"Do you?\"\n\nHer eyes slitted further. \"Do I what?\"\n\n\"Moan a lot?\"\n\nShe burst into laughter. \"Oh my god I fucking hate you!\"\n\nI chuckled along with her, at least until she hip-checked me against the stove and nearly splashed boiling, starchy water all over me.\n\n===== Not-Valentine's Day, 2016 =====\n\nI arrived at Mona's apartment slightly after six. I wasn't wearing the suit: I'd bought a nice shirt and slacks just for the occasion, so now my wardrobe consisted of two presentable outfits. The suit was still in my closet, of course, I'd be needing that for job interviews pretty soon. It was the last year of college, so in four months I'd need to go out and get a real job and not just work weekends cleaning glassware at the testing lab downtown.\n\nMona had gotten an apartment this year along with two friends, Debra (still her best friend) and Claire. It was a lot nicer than mine, except for the outdoor staircase. Seriously who puts outdoor staircases on a building in a place where it rains for a quarter of the year? I'd hiked up the two flights of stairs (in a cold drizzle, I might add) and was raising my hand to knock when the door opened under my knuckles.\n\n\"Oh, hey Steve,\" Debra said.\n\n\"Hi. Are you on your way out?\" I asked, stepping to the side. She was dressed up a bit, including having her dark hair up in some sort of bun, and had a very sparkly purse clutched in one hand. Between that and the date I figured going out was a pretty safe bet.\n\n\"Mmhmm,\" she responded, brushing past me. \"Go on in, Monica's here but she's running late, as usual.\"\n\nI glanced at my watch: six-oh-four.\n\nI glanced back up at Mona's chronically late best friend. \"What time's your date?\"\n\n\"Six,\" she responded, refusing to be baited. \"Byeeeeee.\"\n\n\"Have fun. Do stuff I wouldn't do.\"\n\nShe waved to me as she descended. \"That doesn't narrow it down much!\" \n\nI stepped through the doorway, shaking my head. Debra didn't have quite as sharp a tongue as Mona, but she had very thick skin, which meant she tended to hold her own when the insults started flying. Claire, meanwhile, tended to stay out of the way. Insults were a thing you had to get used to if you hung out with Mona. Insults meant she liked you\n\n\"Anyone home?\" I called out while kicking off my shoes.\n\n\"Shit,\" I heard from just past the entryway. \"Hi Steve! Stay there!\"\n\n\"Not the greeting I was expecting,\" I said, coming through into the living room anyway and setting my shopping bag on the passthrough. \"What's up?\"\n\nMona was in the kitchen, looking a little frazzled and banging around some pots and pans. Mostly pans. She had some things that looked really good (they had bacon), but also really uncooked (the bacon was pink), arranged on two baking sheets and was busy laying out a few more beside them. She looked up at me apologetically.\n\n\"I'm sorry, I wanted to try something new and it took way, way longer than I planned on and now dinner's not even in the oven...\"\n\n\"It's okay, we're not in a hurry.\"\n\nShe sighed. \"I know, I've just been at this for over an hour and it was supposed to take thirty minutes.\"\n\n\"Is that why you're underdressed?\" I asked. Mona was in a hoodie and sweatpants, although her hair was up and looked like she'd put some effort into it and... makeup?\n\n\"Yes, sorry, I didn't want to get dressed up before I cooked and,\" she paused and tapped a few buttons while the oven beeped at her.\n\nI decided to let her off the hook. \"It's okay, Mona, breathe.\"\n\nShe did, pausing and taking a couple of loud, deep breaths. Then she gave me the once over.\n\n\"You ditched the suit.\"\n\n\"Yup.\"\n\n\"Did you burn it?\"\n\n\"No.\"\n\n\"Too bad. You look good. Blue's your color.\" A compliment from Mona? \"You still look like your mom cuts your hair, though.\" Ah, there's the Mona I know and love, got to get a jab in there somewhere.\n\n\"Give me thirty more seconds,\" she continued, pushing the oven door down and grabbing the baking sheets. \"I just need to get these in the oven, then get changed, then we can see what you've got in that bag. Good wine, I hope, not that crap you got for my birthday.\"\n\n\"I do not know wine, so make no promises either way,\" I responded as Mona bent down to rearrange things in the oven. When she did her hoodie crept up, her sweatpants slid down, and... huh. Wouldn't have guessed.\n\nShe rose, pushing the oven door closed with a clang and setting the timer. \"Done, now it just needs to bake and... what?\" she asked, seeing my face.\n\n\"Leopard print?\" I asked.\n\n\"What?\" she asked again, looking confused. Then realization dawned and a look that was half blush and half horror crept up her face.\n\n\"Oh my god fuck off!\" she said, turning quickly and tugging up her sweatpants as she retreated for her bedroom.\n\n\"I never figured you for a thong girl,\" I continued.\n\n\"Fuck off and die!\" she shouted back, sounding embarrassed but laughing at the same time as she slammed the door behind her.\n\n\"You okay in there?\" I called after her.\n\n\"I'm changing!\" she shouted back.\n\n\"Want company or should I really fuck off?\" I called out.\n\nThere was a moment of silence, and then: \"Sure, as long as you shut up about my panties. Just tell me about something. Something else. Tell me about your brother, what happened there?\"\n\nI leaned against the wall outside the closed door and turned my head to speak through it. My brother, now there was a long story.\n\n\"He got a little arrested, but he's fine now,\" I responded.\n\n\"How do you get a little arrested?\"\n\n\"He was detained but not actually arrested. For trespassing.\"\n\n\"What's the difference?\" Mona called back, and I heard drawers opening and closing.\n\n\"You don't go to jail, they just hold you for a while.\"\n\n\"What did he do?\"\n\n\"He was doing a delivery and walked onto private property. The way he tells it, the gate was open so he just drove in and parked the truck, started walking around looking for someone to check in with. Apparently wandered straight through two or three areas you normally need a pass to get into and security eventually found him trying doors on an office level. He'd been there for over twenty minutes. They detained him and called the cops, refused to believe he was just there for a delivery.\"\n\n\"Leave it to Ollie to do the absolutely most suspicious thing. Didn't he have paperwork?\"\n\n\"He was at the wrong address.\"\n\n\"Your brother's an idiot.\" Mona said, and I was too busy agreeing with her to hear the setup.\n\n\"Speaking as someone who grew up with him, yes he is,\" I agreed.\n\n\"Must run in the family.\"\n\nGod damn it. I stared at the door as if I could see Mona's goofy grin through it. God damn it I should have seen that one coming.\n\n\"I don't have to take this kind of abuse,\" I retorted, \"I'm the one keeping you company, remember?\"\n\n\"Didn't think your ego was that fragile. Guess it breaks as easily as your glass-\"\n\n\"I'll be in the kitchen when you're done,\" I interrupted her, loudly.\n\n\"Haha, revenge!\"\n\n\"I hate you!\"\n\n\"Hate you back!\"\n\nThat had become a thing lately: when one of us had enough or admitted defeat we'd finish off the banter with an \"I hate you.\" It was normally me; Mona had a wicked tongue, a trait that had gotten under my skin when we'd first met but it had grown on me after a while. Like I said, insults meant Mona liked you.\n\nOf course, getting used to Mona also meant learning to fight back.\n\n\"So I saw Shannon a few days ago,\" I began \n\n\"Oh, yeah? How's Pixie doing?\"\n\nPixie was the nickname Mona had given my then-girlfriend when the two had bonded over a mutual love of Tinkerbell. Don't ask. It had been a term of endearment while Shannon and I had been dating; less so after.\n\n\"Good,\" I responded, \"we bumped into each other outside the physical sciences building. Chatted for a bit.\"\n\n\"Uh-huh.\"\n\n\"Apparently, a couple of days after we broke up, someone TPed Franklin.\"\n\n\"Who's Franklin?\"\n\n\"Her SUV.\"\n\nThe pause was just long enough to be suspicious. \"Huh,\" Mona finally replied.\n\n\"She asked if I'd had something to do with it. She was very apologetic about asking.\"\n\nThere was another long pause.\n\n\"Mona?\"\n\n\"I plead the fifth.\"\n\nI laughed.\n\n\"She dumped you!\" Mona explained.\n\n\"Okay, sure, she initiated it but it was kind of mutual.\"\n\n\"She hurt you,\" Mona replied, her voice coming closer to the door, \"mutual or not you seemed pretty upset and, well, she hurt you. I hit back.\" Then she opened the door. \"It seemed like a pretty good idea at the time.\"\n\nMona had changed to a dress, longer than last year but with a lot more shoulder on display. She'd also touched up her makeup and put on some jewelry, looking like she was getting ready for a night out. Except it wasn't a night out, just a night in with me, and that made me feel almost as good as she looked.\n\n\"You look beautiful,\" I blurted out. My heart was doing funny things.\n\nShe eyed me, waiting for the other shoe to drop. \"And?\"\n\n\"And what? You look amazing in that dress.\"\n\nShe grinned at me, breaking eye contact. Then she wrapped both arms around me and squeezed tight. \"Thanks.\"\n\nHugs were nothing new for us, although kicks were more her style, but this felt like something different. I stood there for a moment, like the idiot she said I was, then slid my arms around her, too. Mona sighed and leaned into me; she was soft, warm, and very comfortable. My heart continued to do funny things.\n\nThe oven beeped and we both startled. I let Mona go and she pushed me away, gently. I took a deep, slow breath, then let it out again far quicker than intended as Mona elbowed me in the ribs.\n\n\"Come on,\" she said, pushing past me, \"I've got to check the chicken, then let's try out this wine you got.\"\n\n\"I make no promises on the quality,\" I repeated, turning to follow. Mona in that dress looked almost as good from behind as she did from the front, and as she walked one leg, sheathed in black nylon, slid in and out of a knee-high slit in the skirt. It was a little distracting.\n\n\"Can't be worse than that beer you drink,\" she fired back\n\n\"Or your cooking,\" I fumbled.\n\n\"Oh my god I hate you!\" She laughed.\n\nI grinned. \"I hate you back.\n\n===== Not-Valentine's Day, 2017 =====\n\n\"You're late,\" Mona called. She was holding the door to my apartment building open as I hurried across the parking lot towards her.\n\n\"There was a line at the restaurant,\" I responded, hefting the two takeout bags as I got closer.\n\n\"Even worse. What slop did you get us this time?\"\n\n\"Indian.\"\n\n\"You're partially forgiven,\" she responded as I got close, \"now get in here before I freeze to death.\n\nMona had a key to my apartment, and therefore building, but had apparently opted to wait in the lobby. I was running twenty minutes late; we'd had a couple of rush jobs come in at the lab on top of the usual Tuesday issues, and stopping to get dinner hadn't saved me as much time as I'd hoped.\n\n\"You look like a raccoon,\" I said, getting my shots in early.\n\nMona glared through her tastefully done makeup. \"It's called eyeliner.\"\n\n\"Eyeliner, not face paint.\"\n\n\"Says the guy dressed like a middle-aged high-school teacher.\"\n\n\"Hey, my dad is a middle-aged high-school teacher,\" I shot back.\n\n\"My point exactly,\" she responded as I pushed past her into the lobby, \"you look like his closet barfed on you.\" Then she ambushed me with a hug.\n\n\"Hey,\" she said, squeezing tight.\n\n\"Hey,\" I responded, giving her a hug back. \"Been a while.\" We hadn't seen as much of each other the last six months; life had gotten in the way. I figured I'd have more free time on my hands when school ended but by the end of most work days I was pooped. Mona was in a similar boat, but she'd also started dating Zack a couple of months ago so was even less available. We still texted back and forth most days, but we were lucky to hang out more than once a week.\n\n\"Mmhmm,\" she replied, then pulled away with a shy grin on her face. \"So how do I really look?\"\n\n\"Fucking amazing,\" I responded. She was wearing the same dress as last year but it somehow looked even better on her now. She also had dangly earrings with something that sparkled on the end that really worked for her, and she smelled... great which is not something I'd really thought of before.\n\n\"Flatterer,\" she murmured.\n\n\"Although you still look like you're ready to rob a bank,\" I added.\n\nThe grin grew bigger. \"I hate you,\" she responded, kicking me in the shin. \"Now come on, the food's getting cold and I'm starving.\"\n\nI followed her to the elevator, then up the three floors to my apartment. I'd moved out of my old one after graduation because living near campus was no longer worth putting up with the flickering lights or ice-cold bathroom. The new place was a lot nicer, although still pretty small, but after growing up with three siblings and an uncle in the house the idea of having a roommate again was not appealing. I'd put up with Frank long enough.\n\n\"Can you get the door? My hands are full.\"\n\n\"Sure,\" she said, her keys already out. \"Got anything in the fridge?\"\n\n\"I have no idea. A few beers maybe? Shoes,\" I said, pushing mine off.\n\nShe rolled her eyes at me, but kicked hers off too. \"Fuck no, not that swill you drink. Got any milk?\"\n\n\"Half gallon in there somewhere,\" I responded, depositing my bags on the table, \"can you get silverware too? And plates?\"\n\n\"I'm not your maid!\"\n\n\"I gotta ditch my stuff,\" I responded, \"and get changed.\"\n\n\"Don't bother,\" she responded, coming out of the kitchen with a jug of milk and two cups, \"just come hang out with me. I'm starving.\"\n\n\"You sure? Tradition.\"\n\n\"Dressing up won't do you much good anyway. At least you shaved the beard. What did you get?\"\n\nI looked good with the beard, damn it. \"Lamb mango curry and chicken jalfrazie.\"\n\n\"Mango,\" she said, heading back into the kitchen.\n\n\"I figured,\" I responded, sliding her meal to the other side of the table. \"They're both no spice, just in case.\"\n\n\"You know how I like it.\"\n\n\"Wimpy and tasteless?\"\n\nShe returned to the room with a couple of plates and almost all the utensils I own (all six of them). \"That's why I hang out with you.\"\n\n\"Why are we still friends?\"\n\nMona grinned and slid into the chair opposite me. I felt her ankle bump mine under the table; I bumped back, and we both left our feet there as we dumped rice into curry. Mona had always been a very touchy person, but over time that had gone from hitting and poking to, well, just touching.\n\nWe ate in companionable mostly-silence for a while (my mother had, after all, taught me not to talk with my mouth full). We did that a bit more when we met these days; we kept up enough with each other over text that there wasn't a lot to talk about when we did meet up. Besides, I was hungry and from the way Mona was shoveling it in she hadn't eaten since breakfast. She probably hadn't, either, Mona tended to forget little things like making a lunch the night before so a lot of the time lunch was a granola bar..\n\n\"I haven't been to your new place much,\" she said, looking around. \"It's a big improvement. Small. Not as small as the last one, though.\"",
        "\"I like it.\"\n\nShe was looking out the window now. It was dark, but this far into the city there were plenty of streetlights. \"You've got a pretty good view, too. I can see the park from here. And the lake. Wow, this place is a steal.\"\n\n\"The view is pretty good,\" I agreed.\n\nShe glanced over at me, then, and probably noted that while I'd agreed with her, I wasn't staring out the window. I'd let my mind, and my eyes, wander a bit.\n\n\"What are you looking at?\" she asked.\n\n\"Sorry,\" I responded, glancing away.\n\n\"Don't be,\" she responded, then surprised me by standing and reaching high, her dress stretching across her curves delightfully. Then she struck a pose, hand on hip, her bare calf extended out of the slitted skirt. She smiled straight at me. I gave her a wolf whistle, and she laughed.\n\n\"So, what were you looking at?\" she asked again.\n\n\"You,\" I said, and suddenly my heart was beating a little faster.\n\n\"I'm getting to like Not-Valentine's Day,\" she responded, smiling in a way that made my heart flip. \"It's a good excuse to wear a dress.\"\n\nMy tongue had, by this point, gotten ahead of my brain. \"When you look that good, who needs an excuse?\"\n\nMona suddenly looked a little embarrassed. \"Me.\"\n\n\"Why?\"\n\n\"It... makes me uncomfortable when people look. When I know people are looking at me. Even if they're probably not looking at me, I feel like they are, so putting on something like this kind of triggers all the social anxiety. So I don't wear, um, things.\" She gave me a quizzical look. \"I've told you this.\"\n\nI shook my head. \"I don't think you have.\" It made sense, though; I'd rarely seen Mona in anything but jeans, sweats, t-shirts and hoodies. I just assumed she liked being comfortable.\n\n\"Okay, well, I don't.\"\n\n\"Except...\" I started.\n\n\"You're different,\" she corrected, \"you looking makes me feel, um...\" she waved her hand, looked away, and trailed off.\n\nI wasn't sure how to respond to that. I really wanted to know how me looking made her feel. I really wanted to know how this conversation made me feel.\n\n\"And Zack,\" she blurted out, \"I don't mind when Zack looks, he just doesn't... doesn't like dresses.\"\n\n\"Then he's an idiot,\" I responded.\n\nWhich was apparently the wrong thing to say, because Mona was suddenly glaring at me.\n\n\"Everyone's entitled to their own opinion.\"\n\nOkay, that escalated quickly. \"That's not what I meant, you-\"\n\nMona interrupted me. \"Can you... not? Again?\"\n\nI'd meant she looked good, not that Zack was an idiot. Mostly. Okay, Zack and I didn't get along. He didn't seem like a bad guy, just a guy who wasn't sure of himself so he had to announce how awesome he was to everyone around him to make up for it. In many cases, especially around Mona it seemed, that meant announcing how much more awesome he was than whoever had just spoken. It bugged me, but I wasn't the one dating him so I'd kept my opinions mostly to myself. Mostly, because they'd slipped out occasionally; there's only so many times you can answer \"so what do you think of Zack?\" with a noncommittal noise before your best friend starts to get suspicious.\n\n\"Okay,\" I conceded.\n\n\"Like you and fucking Country music.\"\n\n\"I get it, I'm sorry!\"\n\nMona dropped back into her seat, her arms and legs pulled in tight like she was protecting herself. Closed off. I wasn't sure what had just happened; we'd been having a moment, then... something. I'd said something wrong, or she'd said something wrong, I don't know.\n\nWe ate in silence again, but this time a lot less friendly. It felt like we were in different rooms despite being five feet away across the table, and there was an uncomfortable something growing between us that was making my skin tingle and my gut clench. Mona forked the food into her mouth slowly, robotically. I didn't feel hungry anymore.\n\nI took a drink.\n\n\"How are things with Jennifer?\" Mona suddenly asked. My gut clenched more; I wasn't sure if she was still angry or extending an olive branch; I hoped for the latter. It sounded like the former.\n\n\"They aren't, sadly,\" I admitted, talking like nothing was wrong. \"Never really were. We tried a few dates, but it didn't work out.\"\n\n\"Oh?\"\n\nI shrugged, pushing my curry around the plate. \"Chemistry. We didn't have it, although she certainly seemed to have a lot with me. She seemed into me, and I realized I wasn't that into her.\"\n\n\"Actually into you and you dumped her?\"\n\nI tried to explain. \"Yes, but it wasn't the kind of into me that's going to last. Apparently, she'd been mooning after me for a while, and had this huge, massive-\"\n\n\"Rack?\" Mona interrupted.\n\n\"What?\"\n\n\"Breasts. Boobs. Funbags. Gazongas.\"\n\nWhat the fuck? \"No! A huge crush on me!\"\n\n\"She does, though, they're like...\" Mona paused and held out her hands like she was cupping a pair of basketballs in front of her, \"she's smuggling puppies under there.\"\n\nMaking fun of people to their face was Mona's thing, behind their back was not, and body shaming really wasn't. She'd said it herself more than once: personalities you could help, but bodies you were stuck with. What the fuck, Mona? This was not the olive branch, this was her trying to piss me off, and it was working.\n\n\"She was nice enough but she just... always wanted to do whatever I wanted to do. She didn't seem to have an opinion, but I think she really just wanted me to like her. I wanted her to be herself, because I'm not into that and it wouldn't have lasted.\"\n\n\"Girl with giant gazongas wants to do whatever you say and you break up with her?\"\n\nI glared at her; I didn't like where this was going.\n\nMona didn't seem to notice, though. \"I mean, sure it wouldn't have lasted but you could have done whatever you wanted for-\"\n\n\"Mona, what the fuck?\" I interrupted, staring at her. This wasn't Mona, that was a very, very un-Mona-like thing to say; taking advantage of someone was definitely not okay with her. Where the hell was this all coming from?\n\nInstead of explaining, though, she gave me a goofy grin. \"Gazongas,\" she said again, stretching the word out as she hefted another pair of imaginary canines.\n\n\"Fucking stop, already.\"\n\n\"I mean, look at your track record: Emily, Jennifer, Lily, Shannon? First girl that comes along who actually wants you and you break up with her so fast it-\"\n\n\"Monica,\" I snapped, \"just because you're dating an asshole doesn't mean you have to be a complete bitch!\"\n\nMona still had her mouth open, and it hung that way for a moment before she snapped it closed. She stared at me, just stared, for the longest ten seconds of my life, then quietly stood and left the room. I heard my bedroom door close, gently.\n\nWell fuck.\n\nI'd meant it. That's what probably shut everything down at that point, the fact I'd meant what I said. Zack was an asshole. Mona was being a bitch. I'd told her how I really felt, and, well, this. I'd never shut Mona down before, but we'd never had a fight like this before. We'd had disagreements, arguments, but this is the first time I'd felt well and truly angry with her. It was like she was trying to hurt me, trying to make me mad, and Mona only lashed out when...\n\nOh.\n\nMona didn't always handle hurt well. I'd hurt her when I insulted Zack, so she lashed out. She'd tried to hurt me back until I bled. This wasn't about Jennifer, she hadn't been attacking Jennifer behind her back she'd been attacking me to my face. I'd hurt her, she hit back, and she'd kept going because she didn't know how not to.\n\nNow if I could figure out why it hurt her so hard.\n\nWell shit\n\nI needed to get out of my head. I couldn't keep sitting here, staring at the walls; I needed something to do. I started packing up the dinners, including the curry we hadn't even bothered to pour out of the takeout bowls, and shuttling it all to the kitchen. I packed both away, mine in the fridge and hers, labeled, near the door. Then I started cleaning dishes. I had a dishwasher, but I needed something for my hands to do so I scrubbed the dirty forks and the basically clean everything else. I filled one sink with hot, soapy water, found a sponge, and got to work.\n\nIt didn't take long, so I started unloading the dishwasher and scrubbing those dishes, too. It had been a couple of days, but there still wasn't much so it didn't take too long to run out, again. So I started over, dumping what looked the least clean in the sink and letting it soak while I scrubbed the rest.\n\nMona came out of the bedroom as I was starting my third scrub. I heard the door open and close, then the sound of bare feet on the hallway carpet. She didn't make eye contact when she came into the living room, didn't say anything, just came around the counter and into the kitchen to stand next to me. She'd borrowed one of my hoodies and had her chin buried in the neck, her hands buried in the pocket. The hood was off, though, and her face was blotchy, the way it got when she was angry. Or crying.\n\nWe stood next to each other, staring out the window at the lights across the park, while I finished the dishes a third time. Just stood, quietly. This was her olive branch; Mona wasn't great with saying the right thing, so she wasn't saying anything but she was trying. I finished the bowl I was working on and set it down. My turn.\n\nI poked her with my foot. \"Sorry,\" I said.\n\nMona was silent for a moment, her face still half buried in the collar of my hoodie, then she poked me back. \"Me too,\" she responded.\n\nWe stood that way for another minute, watching the lights. Then I felt Mona move again, felt her lean over against me, her shoulder against mine, and she said, quietly: \"I hate you.\"\n\nThe knot in my stomach, coiled up tight since Mona had left the table, suddenly released. It let go of my throat, my chest, my gut, and the ripple of release washed out all the way to my fingers and toes. It felt almost as amazing as her shoulder on me.\n\nI leaned over into Mona, each of us supporting the other's weight. \"I hate you back.\"\n\n===== Not Not-Valentine's Day, April 20th, 2017 =====\n\n\"Hey, stranger, been a while.\"\n\nI glanced up to see Mona smiling down at me, the setting sun behind me casting a golden light on her hair and face but making her squint, too. It also cast a golden light on my blue hoodie, the one she'd walked out wearing on Not-Valentine's Day and hadn't given back since.\n\n\"I'm sorry, but this seat's taken,\" I told her, \"I'm waiting for someone, although she's running pretty late.\"\n\nShe kicked my toes. \"Then stand up, she can have the whole thing to herself.\"\n\nI did, and Mona met me with a hug. It was quick but fierce, Mona squeezing me tight while I returned the favor.\n\n\"I missed you,\" I said, surprised when the words came out; it had barely been two weeks.\n\n\"I missed you too,\" she responded, letting go and stepping back.\n\n\"Want to go for a walk?\" I asked, expecting to catch some shit about being old people walking in the park. It was a nice afternoon, though, sunny and in the 60s, and I wasn't going to waste it.\n\n\"Sure,\" she said instead, turning down the path. I took a few quick steps to catch up.\n\nWe walked in silence for a little bit. Mona had set up this get together, calling me last night out of the blue at nearly ten. She wouldn't tell me why, other than it had been a while, but I knew her well enough to know she had something she wanted to tell me. Which was stressing me out a little, especially since she seemed to need to work herself up to it.\n\nThen Mona leaned in and bumped me, shoulder to shoulder. She still didn't say anything, just bumped me, and I suddenly knew it was going to be okay.\n\n\"So um,\" I began, grabbing for something to start her off, \"sorry to hear about you and Zack.\" Which probably wasn't my best choice, I realized, but we hadn't had much chance to talk about it; the two of them had broken up a week ago, but like I said we hadn't seen each other in even longer. It wasn't the kind of thing you discuss in text.\n\n\"No, you aren't.\"\n\n\"No, I'm not,\" I admitted. \"Was it bad?\"\n\n\"I don't really want to talk about it,\" she responded, and then did anyway. \"We didn't really work, we were just into different things. That wasn't all of it; I felt like I had to be someone else around him, and it was someone I didn't really like.\"\n\n\"How'd he take it?\"\n\nShe shrugged. \"He wasn't happy about it. He looked like he wanted to say some things but didn't. I didn't even realize I was going to do it, honestly, until just before I did. I'd asked him something else and when he told me no I just... realized it. A lot of the stuff that had been bugging me snapped into focus.\"\n\n\"What did you ask him?\"\n\nMona didn't answer right away. I glanced over and she wasn't looking at me, she was looking off towards the sunset with an intense expression. Despite my nerves, I let her be while she worked out whatever it was. She'd speak when she was ready.\n\n\"So my dad knows a guy who runs a business in my field,\" she started.\n\n\"What's your field again?\" I asked \n\nShe glared at me. \"He's got a lady who's going on maternity leave, five to six months overall, and he wants to hire a short-term replacement. He could use a temp, but my dad...\" she trailed off.\n\nI waited.\n\nThen I felt her hand slide into mine and her fingers curl gently closed. This was new. This was very new. A tingle shot up my arm and I nearly tripped on a seam in the concrete.\n\n\"It would be good experience, and it would look good on a resume,\" Mona went on, pretending not to notice me being a klutz. \"You know I'm not having any luck, I've been temping for the last two years doing random crap. It would be good. And it would only be five or six months.\"\n\nGod her hand felt amazing. \"Sounds great, but it also sounds like you want something from me. What are you asking? Permission?\"\n\nShe looked frustrated. \"I don't know, yes? I guess? This...\" she flailed her free hand for a moment, looking for words. \"You're my best friend. It's going to be six months.\"\n\n\"You don't need my permission.\"\n\n\"Then maybe I just want you to tell me it will be okay. It's six months.\"\n\n\"Or five,\" I pointed out.\n\n\"Or six,\" she responded, \"and that's a long ass time.\"\n\n\"Are you going to come back after?\" I asked.\n\n\"That's the plan. The girls and I have already talked about subletting my room, so I'll even have a place to come back to. We could probably get more than I'm paying for it and it would still be a steal.\"\n\n\"Then what's the problem? Go!\"\n\n\"Damn it, Steve, the problem is I'd miss you,\" she said, squeezing my hand. \"I feel like we've been... I feel like this last year we've been drifting apart, like I'm losing my best friend. I'm always busy, you're always tired, and then with Zack? I didn't feel like I could bring him around.\"\n\n\"I didn't like him very much,\" I admitted, as if she didn't know that already.\n\n\"The feeling was mutual. When was the last time we had a movie night? Or karaoke?\"\n\n\"Karaoke sucked,\" I reminded her.\n\n\"Shut the fuck up. When's the last time we went curling? Or stayed up until midnight bullshitting? I feel like I've been losing you and if I go away...\" her hand continued to flail but was losing steam rapidly.\n\nI stopped walking, pulling Mona to a stop with me. Then I wrapped my arms around her and dragged her in for a hug. Her arms snaked around me. She was warm, she was comfortable, and she made my heart start a mosh pit with my ribs.\n\n\"I like this,\" she murmured, \"I don't want to not have this.\"\n\n\"How long have we known each other? Four years?\" I asked.\n\n\"I'm bad at math,\" she responded, lacing her fingers together behind me and squeezing. I squeezed back.\n\n\"Four years,\" I said, agreeing with myself. \"We can survive five months.\"\n\n\"Or six,\" she added.\n\n\"Oh, well, I don't know about six. Five I can do, but six? I don't know if I'll make it that long.\"\n\nShe kicked me in the shin, which is quite the feat when you're hugging someone. \"I fucking hate you.\"\n\n\"I hate you back,\" I responded, kissing the top of her head.\n\nI hadn't been planning it, it just sort of happened. We both froze when I did it, then Mona was pushing against me, burrowing her head into my chest. I heard her gasp, then pull in two slow, shuddering breaths.\n\n\"Are you okay?\" I asked. Mona shook her head.\n\nWe didn't speak again for a bit, just held each other while Mona cried quietly in my arms. I still had my lips on her head, my nose buried in her hair. I felt like cheering. I felt like crying. I felt like a lot of things all at once and I didn't know which one was right; something was changing and it wasn't just Mona's living arrangements.\n\nShe smelled amazing.\n\nA pair of joggers split, moving around us, then regrouped on the other side still talking about baseball.\n\nAfter a while she stopped shaking and I loosened my arms. Mona took a few sniffing breaths and stepped back a bit, unwrapping her arms but sliding her hand back into mine.\n\n\"You okay?\" I asked again, not sure if I could answer that question myself.\n\n\"Better,\" she responded.\n\n\"When do you leave?\"\n\n\"In a week. I know, I'm sorry, I've been sitting on it. I just didn't know if I wanted to go!\"\n\n\"You want to go,\" I told her.\n\nShe made a noise at me.\n\n\"Before you do, though,\" I began.\n\n\"What?\"\n\n\"Can I have my sweatshirt back?\" I asked, tugging at it.\n\nMona shook her head. \"No.\"\n\n\"No?\"\n\n\"I look better in it anyway.\"\n\n\"That's true, but it's my favorite one,\" I pointed out.\n\n\"I know. That's why it's mine now.\"\n\nI squeezed her hand. \"Then you'd better bring it back, preferably with you in it.\"\n\n===== Definitely Not Not-Valentine's Day, November 10th, 2017 =====\n\n\"I'm coming,\" I yelled, as if the phone could hear me. I could hear it vibrating its way towards the edge of my dining room table (they always go for the nearest steep drop onto a hard surface). I tossed the towel I'd been holding and grabbed the phone just as it made its last suicidal lunge, but the vibrations stopped as it hit my hand. I swiped at it and put the phone to my ear anyway.\n\n\"Hello?\"\n\nNothing; a glance at the screen showed me one missed call: Monica Lott. Crap. I texted back a reply: \"Sorry I missed you. Call when you can.\" Then I set the phone down and sunk into the chair next to it, because for some reason my heart was trying to pound it's way up my throat.\n\nMona had finished her short-term gig a week ago, and after a week wrapping things up and hanging out with her family she was on her way back north. She'd left this morning, with a plan to lay over in Redding before making the last leg of the trip. I was excited, I was terrified, I was I don't know what.\n\nI'd spent more time at Mona's apartment than I spent at my own the last week of April, either helping her pack her things or just hanging out with her and her roommates. Mostly her. We'd watched TV, movies, badly attempted gourmet recipes, not attempted karaoke, and avoided talking about the fact she was leaving in a matter of days. Mona had always been a touchy person, but that week she'd found any opportunity to poke, kick, brush against, or lean on me. The last night, watching a movie neither of us gave a shit about, she'd climbed into my arms on the couch and we'd stayed up way too late that way, cuddled close and talking about nothing that I can even remember. The next day we didn't bring it up, I didn't know what it meant, and then she left.\n\nWe didn't talk about it while she was away, either, whatever it was that was going on between us. I know, that seems dumb but she never brought it up and I didn't want to force the conversation if it made her uncomfortable. Okay, that's kind of a lie: I was scared. I was scared to bring it up when she was a thousand miles away, I was scared that it hadn't really been about me, or that I was wrong, or things would sour before she got back, or that she'd get offered a position and suddenly never be coming back. I was scared shit would go wrong.",
        "She'd been in California for over six months, and we'd stayed in touch like we used to, texting almost every day and getting together a couple of times a week. It was video chat rather than in person, but we still got together. We talked about almost everything: our day, who we hung out with, what we'd done, the fact her parents had gotten a dog, and she gave me no end of shit the whole time, just like we always had. We had fun, we missed each other, and we signed off each call by touching the screen, which was dumb and it sucked because it wasn't the real thing. Over time the ache didn't fade, but the worry at what we weren't talking about faded a little.\n\nNow she was on her way back, though. She'd left that morning, was staying in a hotel tonight, and tomorrow she'd be back in town. Now what we hadn't talked about was all I could think about.\n\nMy phone vibrated again and I grabbed it up without checking the screen. \"Hello?\"\n\n\"Hey, Steve.\"\n\nMy heart slammed back up into my throat and I smiled like a complete idiot.\n\n\"Hey Mona,\" I responded, trying not to sound as excited as I felt, \"how far north are you? Did you make it to Redding?\"\n\n\"Um, not exactly,\" she said, sounding a little weird.\n\nHuh. \"Not exactly?\"\n\n\"So, um, I kind of lied about when I was leaving.\"\n\n\"What?\" Why would she do that?\n\nSomeone knocked on my apartment door and I glanced up.\n\n\"Answer your door,\" Mona said.\n\n\"How did you hear that?\" I asked, staring at the door. In my defense there were a lot of emotions going on at the time.\n\n\"Just open it!\"\n\n\"Wha-\"\n\nMona sighed, loudly and dramatically. \"It's me, genius! I'm at your door! Way to ruin the surprise.\"\n\n\"You're HERE?\" I asked, continuing to stare.\n\nI heard keys in my lock, and an exasperated \"oh my god, I'll do it myself!\" that came from both my phone and the hallway.\n\nRight. Mona had keys to my place. I probably should have gotten those back before she moved a thousand miles away.\n\nThen she was in my doorway. Then she was in my apartment. Then she crashed into me so hard I almost fell over and we wrapped our arms around each other as Mona buried her face in my chest with a delighted squeal.\n\n\"Hey, Mona,\" I said, because that's about all I could come up with.\n\n\"Hey, Steve,\" she responded into my shirt, \"been a while.\"\n\n\"I saw you two nights ago.\"\n\nShe shook her head, disagreeing with me but not elaborating. In my defense, again, a lot had happened in the last thirty seconds.\n\n\"I missed you,\" I corrected myself, \"a lot.\" She was warm, and soft, and smelled amazing and felt amazing and my heart was pounding hard enough I'm sure she could feel it through her cheek.\n\nMona shifted a little in my arms, standing up straighter so she could look up into my face. Her smile was huge and her eyes were a little wet. \"I missed you too.\"\n\nShe was there, and comfortable, and amazing, and smiling at me, and... you know what? Fuck it.\n\nI kissed her.\n\nMona jumped slightly when our lips met, turning suddenly rigid. It was just a quick peck and I pulled back when I felt her reaction. She was staring up at me, or at least in my direction, eyes wide and her mouth slightly open.\n\n\"Oh,\" she said. That's it, just oh.\n\nShit I just fucked this up.\n\n\"Um,\" I started.\n\n\"Do that again,\" she said.\n\nOh. Um, never mind. I kissed her again.\n\nThis time she returned it, just a quick peck, like mine. Then she leaned up to kiss me again, and this one was longer. Then I leaned down to kiss her again, and this one was a lot longer as she melted against my body, arms starting to slide up my back and into my hair. The one after that... just kind of kept going.\n\nAt some point we had to break for air. When I did, a wave of dizziness hit me and I stumbled back a little, catching myself against the wall and Mona's arms.\n\n\"You okay?\" she asked, grinning like an idiot.\n\n\"Lightheaded,\" I responded. \n\nShe purred at that and smiled up at me. \"Maybe we'd better sit down before you fall down.\"\n\n\"I have a couch?\"\n\n\"Is it a good couch?\"\n\nI debated that for a second, but eventually had to go with \"no.\"\n\n\"You have a bed, too,\" she said, quietly, with a suddenly nervous expression on her face.\n\n\"I have a bed,\" I admitted, because I'm a moron.\n\n\"We could... make out in it?\" Mona recommended.\n\n\"Take off your shoes,\" I told her, because I was still a moron, a moron who was avoiding thinking about how we should really talk about this.\n\n\"You and your fucking carpet,\" she muttered, disentangling herself from me. \"What kind of civilized person doesn't wear shoes around the house?\" She did kick them off, though, flinging them behind her to thump off the door..\n\n\"What kind of civilized person does?\" I responded, reaching out with my hand. She took it, giggling, and I led Mona the few steps towards my bedroom. I flicked the light on as I went past, then felt small, strong hands on my back before Mona shoved me forward. I tripped on the bed and fell face-down on the mattress. Then, with a whoop and a laugh, I felt Mona crash down beside me.\n\n\"Does it meet your approval?\" I asked.\n\n\"It'll do,\" she responded, \"now where were we?\"\n\n\"Kissing,\" I said, sliding my fingers into her hair and pulling her mouth to mine. Mona met me with wet, hungry lips and very, very appreciative noises. Our bodies slid together on the bed, closer and closer, until everything that could be touching was and I could still feel Mona pressing to get even closer as her tongue slid between my lips. My body tingled everywhere, and as I ran one hand over her back Mona writhed delightfully against me.\n\nAfter I don't know how long we broke away again, Mona pushing me back off of her (when had I climbed on top?) and pulling in a deep breath. I sat back on my heels, breathing hard myself, so excited my hands were shaking. Mona was disheveled, red-faced, and wet-lipped in my bed and she looked really, really, really good that way. Parts of me were starting to get other ideas of what I could do with Mona looking really, really good in my bed, and a little voice told me this was moving awfully fast. I told it to shut the fuck up.\n\n\"Done already?\" I teased.\n\n\"Fuck you just let me catch my breath,\" she said, spreading her arms out on the bed. \"It's too fucking hot in here.\"\n\n\"You're the one all bundled up,\" I told her. Mona was dressed the way Mona usually dressed: jeans and a hoodie, the latter slightly too big on her. Of course she was hot. Hey, wait a second...\n\n\"It's cold out there,\" she responded, \"and someone jumped me at the door.\"\n\n\"Is that my hoodie?\"\n\nShe grinned at me. \"Yup.\"\n\n\"Can I have it back?\"\n\nShe started to answer, then paused. The grin transformed into something much more mischievous. \"You want it back? Sure. Come and get it.\"\n\nThe little voice was back again, telling me we should really talk about this. I ignored it and stepped off the bed, coming around to Mona's side. She smiled up at me, but her expression was growing nervous and just for a moment her hands moved to block me. Then they changed direction, reaching up into the sky as she sat up, feet dropping to the floor.\n\n\"What are you waiting for?\" my something-way-more-than-a-best-friend asked. \"You want your shirt back or not?\"\n\nI put my hands on her waist and Mona's breath caught, then released in a whimper as I slid them under her shirt. Her skin was bare underneath. She had nothing on under my hoodie. Fuck, that was... fuck. I curled my fingers into the fabric and lifted, pulling my sweatshirt cleanly up her body, up her arms, and over her head before tossing it away, leaving her in just a simple blue bra.\n\nMona's hands were on my chest as I finished, sliding down to where my shirt tucked into my jeans and tugging it up. Her hands lingered for far longer than they needed to, taking their time pulling at my shirt before diving beneath and tracing over my skin. Parts of me were very acutely aware of exactly how close those hands were. As her fingers wandered my eyes wandered too, across her nearly bare shoulders (yup, her shoulders still really did it for me), down her collarbone, and into the dark valley of cleavage below. I could drown in that cleavage.\n\nThen she was rising to her feet, breaking my view as she pulled my shirt over my head. When it was done she tossed it away just like I had, then flopped back on the bed as things jiggled delightfully. She had one knee raised and stuck the other foot out towards me.\n\n\"I'm still pretty hot,\" she said.\n\n\"Huh?\"\n\nThe mischievous, nervous look was back. She set her foot against my leg. \"Are you going to stop there?\"\n\nYes, said the voice. Talk about this. No, said the rest of me, fuck you. I grabbed Mona by the calves and she laughed, her fingers going to work on the button of her jeans as mine moved to her ankles. She finished with the button and I pulled her jeans down. Mona came with them for a foot or so, laughing as she tugged her way back up the bed. Then I had her pants off and they followed the rest of our clothes onto the floor.\n\n\"Like what you see?\" she asked.\n\nI stared at Mona, lying on my bed, propped up on her elbows, wearing nothing but her underwear and a smile. The answer was a very emphatic yes, but somehow I still found the brainpower to be snarky.\n\n\"Huh,\" I said.\n\n\"What?\" she asked, expression shifting and her arms coming up, slightly, as if to cover herself.\n\n\"I was kind of expecting leopard print.\"\n\nShe stared at me for a moment, then burst out with \"oh my god I fucking hate you!\"\n\nI laughed, she laughed, but hers was a lot more nervous and died after only a moment or two. Mine followed right after it.\n\n\"Um, Steve?\" Mona asked, quietly.\n\n\"Yeah?\"\n\n\"I'm kind of freaking out right now can you not fuck with me?\"\n\nI nodded. \"You're fucking gorgeous,\" I said, and meant it, letting my eyes travel from ankle to neck and back down again. She watched them go and smiled. We were at a pause, now was a great time to take a step back and talk about this...\n\n\"Your pants too,\" she interrupted, her own eyes pausing their appraisal at somewhere below my hips and above my knees, \"and get back here so I can feel you.\"\n\nYeah, fuck it. Talk can wait. Five seconds later I was sliding in next to Mona wearing just my boxers, and immediately felt her hands on my skin and her body pressing up against mine as she climbed halfway on top of me.\n\n\"You feel fucking amazing,\" she moaned into my mouth. \"You're so fucking... ugh I just want to touch you forever.\" Then she was kissing me again.\n\nHer hands were all over me. One of mine was trapped under her body, but I slid the other one up her leg, grazing the bare roundness of her ass before sliding over her thong and up, up the hardness of her hip, the curve of her waist, her side, then up to the shoulder that I couldn't seem to get enough of.\n\n\"Touch me,\" Mona whispered.\n\nMy hand slid down her back, bumping over her bra, and I felt Mona twitch as I ran my fingers down her spine. I tried again, running them up, and Mona whimpered and writhed above me, sliding her leg up further. Her thigh pressed against my cock, hard and throbbing, through my boxers.\n\n\"Fuck it's just right fucking there, isn't it?\" she murmured.\n\nI wanted to say something about that, some response, but only managed a growling noise as I mashed my lips back against hers. I dragged my hand down and up her back again, staying below her bra, and Mona gasped and moaned, pushing her leg hard against my cock one more time before sliding it down a little and coiling it around my thigh.\n\nThen she pulled her lips away from mine again, nibbling my lip as she went. \"It clasps in the back,\" she murmured, rather breathlessly. \"You know how to handle that, right?\"\n\nIt took me a moment to realize she was talking about her bra. \"I'm very good with my hands.\"\n\n\"Mmmm, prove it,\" she responded, and started kissing her way down my jaw to my neck, both her legs tight around my thigh now, ankles crossed as she squeezed me between her legs. Then her hand slid down my chest, down my belly, further, further, oh shit further until... until she dragged it back up.\n\n\"Fuck you're awful and I hate you\" I gasped, shuddering and laughing, and I could feel Mona's happy murmurs through my skin as she kissed my neck. My cock ached, twitching at how near she was. I wanted to tell Mona to touch me. I wanted to tell her to stroke me. I wanted to tell her to suck me until I came. I was pretty sure she would if I asked. I didn't ask. Instead I fumbled at her bra with one hand.\n\nThen her lips found the hollow of my throat and I dissolved into a puddle underneath her.\n\n\"Having some trouble?\" she murmured against my skin, her hips starting to rock against my thigh.\n\nIt took five tries to get her bra undone. Mona had to let up on the kissing before I could focus, but she was still rolling her hips and I could feel her panties, warm and damp, sliding back and forth along my leg.\n\n\"You're really distracting,\" I reprimanded her. Mona giggled.\n\n\"You think so now?\" she asked, starting to move. Instead I put one hand on her shoulder, pushing Mona over onto her back. She went with a delighted yelp and I rolled halfway on top of her before pushing myself up on one arm so I could take her in.\n\n\"If I take this off,\" she asked, nibbling at her lip, \"will you get back on top of me?\" Then, without waiting for an answer, Mona tugged her bra off and tossed it away, staring up at me with the same nervous, mischievous look she'd been wearing half the night. For some reason I couldn't decide if I wanted to stare at her tits or the nibbling; the nibbling was unbelievably hot.\n\n\"Are you just going to stare at them,\" she asked, \"or are you going to play with them?\"\n\nI leaned over and kissed her. She kissed me back, sliding her tongue over my lips, then arching her neck and moaning as I cupped one breast and squeezed.\n\n\"Get your hands on me,\" she moaned, her hips pushing up again to grind against me, \"get your hands all over me, fucking touch me. Rub my back, grab my tits, play with my fu... just... fucking touch me already!\"\n\nI did what she asked, nibbling down her neck, massaging her breast with my hand while she moaned and sighed and writhed beneath me. I moved to rest on my elbow and brought my other hand up, and as I squeezed and rubbed both tits she slid one hand down between her legs, tugging at her thong until I felt her bare, warm, slippery pussy against my leg.\n\n\"Yes, Steve,\" she whispered, pushing her hips up, and I felt my very hard, very ready cock slip out of my boxers and into the groove of her hip alongside her hand.\n\n\"Oh fucking yes,\" Mona, well, moaned.\n\nHere's the thing, though: it had been a while for me, a long while, since noticeably before Mona had gone off to California. When it's been a while and your sexy best friend that you didn't realize you've been crushing over for the past four years is warm, naked, willing, and pressed up against you...\n\n\"Mona,\" I gasped against her neck, \"stop...\"\n\n\"What?\" she asked, sounding confused. I tried to pull my hips away and succeeded a little, but Mona clamped down hard on my leg, still grinding.\n\n\"Stop,\" I repeated, a little desperately.\n\n\"No,\" she said.\n\n\"Please,\" I begged. Fuck oh fuck, what was it think of baseball or something? I don't know anything about baseball!\n\n\"I'm close,\" she begged back, grinding faster, my thigh slippery with her.\n\n\"So am I!\" I gasped, a lot desperately.\n\n\"Oh fuck yes,\" she moaned, her whole body twitching. Then her hand slid from her panties and over my cock, her warm, lithe, wet fingers wrapping around me and stroking twice before...\n\n\"Mona!\" I gasped. Then my gut tightened, my hips bucked, and I erupted in her hand.\n\n\"Yes, oh fuck,\" she murmured, hips grinding faster as I pulsed between her fingers and spurted onto her belly. \"Cum for me oh fuck yes Steve Steve STEVE!\" Then she let out a sharp, loud gasp, her thighs clamped tight, and her hips bucked against me, her whole body vibrating.\n\nI collapsed against her, arms giving way as she continued to shudder against my leg, moaning, and I, spent, slowly softened in her hand. Finally she collapsed too, her body melting underneath me as her orgasm finally ended.\n\nI kissed the nearest thing, which turned out to be the top of her head, and her free hand drifted up to run through my hair as we both came down slowly, tingles shooting through my body everywhere her hot skin touched mine.\n\n\"Holy fuck,\" Mona said, some time later.\n\n\"Yeah,\" I said. \"Welcome back.\"\n\n\"Maybe I should go away more often,\" she responded.\n\nWe lay in silence for a little longer, her hand running through my hair, mine playing over her body as I listened to the quiet, delighted noises she made with each new spot I found. The comedown was bringing with it questions, though, and the clarity of mind not to ignore them. What had just happened had been fucking amazing, but we really, really needed to talk about it.\n\n\"Mona?\" I asked, trying not to let the let's-be-serious tone into my voice and failing.\n\n\"Yeah?\" she responded, and I felt her tense, suddenly on edge.\n\n\"Can we talk about what just happened?\"\n\n\"No.\"\n\n\"What?\" That had not been the answer I was expecting.\n\n\"No,\" she repeated and moved underneath me. I let her, lifting myself a bit.\n\n\"Monica,\" I started, using her full name for... reasons. I don't know.\n\n\"I can think of better things to do with my mouth,\" she interrupted, leaning in to kiss me on the throat. Conscious thought died. It hadn't taken her long to figure out that spot.\n\nShe was deflecting, although this was a new trick in the book and one I liked it was still deflecting. I pushed Mona away, gently. She went without a fight, but now the smile that had only been half on her face fell all the way off.\n\n\"What?\" she asked, petulantly, sliding away from me on the bed.\n\n\"We need to talk about this,\" I responded. \"And probably take a shower.\"\n\nMona glanced down at herself, her eyebrows rising. \"Holy shit, Steve, you made a mess.\"\n\n\"I think you made the mess,\" I tried to joke, but it didn't seem to take. Mona sat up, spinning around to put her feet on the floor.\n\n\"Been a while, huh?\" She continued, back to me. \"You weren't kidding about the whole six pump chump, thing, either, I'd almost forgotten-\"\n\n\"Mona,\" I interrupted. She was avoiding the conversation, throwing insults at it instead to try and hold off something that made her uncomfortable. It stung. A lot. We'd just shared something amazing and I thought it might take us somewhere but then... except I also knew Mona well enough to know that sometimes I needed to take the hit and wait for her to work it out. Even when it fucking hurt.\n\nMona had been silent for a few seconds. \"I need to shower,\" she finally said.\n\n\"Please, what's going on?\"\n\nShe stood up, moving quickly towards the bathroom, not looking at me. \"You want to talk, fine. Talk. But I'm going to take a shower.\"\n\nI watched her go, half of me trying to figure out how to handle this and the other half realizing this was the first time I'd gotten a good look at her from behind and enjoying the smooth curve of her back and her thong-clad ass. Fuck she had a great ass. Then she was through the doorway and gone.\n\nI kicked the covers back and sighed, glancing down at myself. Shit, I was a mess too.\n\n\"Save some hot water,\" I shouted, but the showerhead was already running and I don't think she heard me.\n\nBy the time I got to the bathroom Mona was already in the shower. I could just make out her silhouette through the frosted glass, doing something with the dials while steam started to roll up above the top of the door.\n\n\"Steve?\"\n\n\"Yeah?\"\n\n\"You wanted to talk,\" she snapped, \"so talk.\" She sounded angry. No, not angry: afraid, and that's when I realized I was afraid too. Social situations are scary, she'd told me that on the first Not-Valentine's Day, and I'd helped her through more than one rough one since, as she had me. This was about as scary as they got, though, and there was no one to help her through this one. Except me, I guess. So, what to say?",
        "\"I like you.\"\n\nOkay, that was a start. A good start. No it wasn't it was a shit start, I don't know.\n\n\"I like you a lot,\" I went on, except now I knew I wanted to use a different word that started with L but was chickening out. \"I think I've liked you for a long time. You're my best friend, I like talking to you, and doing things with you, and doing nothing with you and just being around you. I like it when you kick me. Hugging you makes my head spin. Kissing you makes my knees weak. You're the sexiest woman I've ever seen and what we just did I think I've wanted to do for a really long time. While you were away I missed you more than I thought possible, and I never want to miss you that way again.\"\n\nOkay, that was a bit better. Except... except there was a lot of silence from the shower. No, that's okay, give her time to deal with that. Give her time to... I made it about five seconds before I couldn't take it anymore.\n\n\"Mona-\"\n\n\"Fuck, Steve,\" she sobbed.\n\n\"Are you okay?\"\n\nI saw her nod, or shake her head, I couldn't really tell through the glass.\n\n\"Then you don't have to say anything, and if you feel the same way that's great and I don't know, give me a thumbs up or something. And if you don't feel the same way that's... that's okay.\" It wasn't, not really, but I was willing to pretend. \"Just... I guess a thumbs down, then? Just... tell me something.\"\n\n\"You're such a fucking dork,\" she responded, but pressed one hand against the glass, thumb up. Holy shit.\n\n\"So, you like me?\" I asked. Stupidest question ever.\n\n\"No, I don't like you!\" She paused. \"No, I... that's not what I meant, I... fuck you and your like! And fuck you and your girly shampoo!\"\n\n\"Mona-\"\n\n\"No, fuck, shut up a second I'm sorry, I'm sorry, just... give me a second, okay?\"\n\nSo I did, thinking I had some idea what she was trying to say but also having no idea what she was trying to say. There were a lot of mixed up feelings racing through me right then. So I stood, naked, in my slightly chilly bathroom, feeling sticky as our fluids dried on me and staring at Mona's silhouette through the glass as she aggressively shampooed her hair.\n\n\"I don't... I don't know how to say this. The way I feel about you. I try to put it together in my head and it sounds great, then it sounds okay, then I think again and it sounds stupid and wrong and I get scared. I open my mouth and even stupider things come out, or mean things come out, and...\" she paused, taking a breath. \n\n\"Fuck words, it's so much easier not to talk about it and just show you. That's what that was, just now, in your bedroom. That was showing you. That's how a feel about you. That. Then you said you wanted to talk about it and... and what happens? I think yes, fuck yes but instead I insult you for coming on me when holy shit do you know how hot that was? I barely fucking touched you and you fucking came like a rocket do you have any idea how good that made me feel? And then, what, I go and shoot you down because that's what I fucking do.\"\n\n\"Is that true?\"\n\n\"What, that you coming just from touching me made me feel like the sexiest creature on the planet? Yeah, that's true.\"\n\nThe water turned off. Mona shifted around in the shower for a moment, then the door clicked and there she was: flushed, naked, wet, sexy, and a little scared. My heart was pounding again; fuck she looked good.\n\n\"I don't fucking like you, Steve, we're not in sixth grade here. I love you. You're my best friend, I love you, and I have for a long time.\"\n\nI was grinning so hard my cheeks hurt.\n\n\"What?\" she asked.\n\n\"That was a good way to say it.\"\n\n\"Fuck you,\" she said, smiling.\n\n\"I don't fucking like you either, Mona. I love you back.\"\n\n\"You're not just saying that?\"\n\nI shook my head. \"I love you, Monica.\n\n\"Yeah?\"\n\n\"Holy crap Mona how many times do I have to say it? I love you!\" I said, taking a step towards her.\n\n\"Don't!\" she shrieked, laughing at the same time. \"Don't fucking hug me right now you've got fucking jizz all over you and I'll have to shower again!\"\n\n\"Would that be so bad?\" I asked, grinning but stepping to the side.\n\n\"Yes, because I'd rather do other things with my time. Like you.\"\n\n\"How about a kiss, then?\"\n\nShe rolled her eyes but leaned in as she stepped past me. It was just a quick peck, but it was pretty obvious both of us wanted a lot more.\n\n\"Now get in there,\" she said, slapping my ass. \"Get clean so you get on top of me again.\"\n\nI stepped into the shower backwards, watching Mona as she grabbed a towel off the rack. She scrubbed at her hair for a moment, then slid it down her body, rubbing quickly down her arms, making very exciting parts of her jiggle in very exciting ways...\n\n\"Steve,\" she said, sounding grouchy. \"Shower!\"\n\n\"You've got great tits,\" I explained.\n\nShe glanced away from me, and either she was still hot from the shower or she was starting to blush. Blushing, after what we'd just done. God she was adorable.\n\n\"Steve?\"\n\n\"Yes?\"\n\n\"I love you, but if you want to keep kissing me then you need to take a shower, and if you're clean and back in bed in five minutes I'll show you what else I can do with my mouth.\"\n\nI'm not sure I've ever taken a faster shower in my life.\n\nBy the time I left the bathroom, a whole lot less slimy but still pretty wet, Mona was back in bed with the covers pulled up.\n\n\"You made it,\" she observed, not even bothering to glance at the clock. \"I guess that means I owe you something, hmmm?\" Then she pushed the covers down to her waist and stretched languorously.\n\nIt was a little distracting.\n\n\"See something you like?\" She asked. Nervous and mischievous were back, and the combination looked really sexy on her.\n\n\"You,\" I responded.\n\nMona propped herself up on her elbows and shook her shoulders back and forth, laughing at my expression as her tits swayed.\n\n\"How about these?\"\n\n\"Your tits are amazing,\" I responded, and then, because I'm a moron, I had a terrible idea.\n\nShe purred back to me.\n\n\"Or should I say boobs?\" I started.\n\nHer eyes snapped up to mine. \"Don't.\"\n\n\"Funbags?\" I asked.\n\n\"Steve!\"\n\n\"Gazongas?\"\n\n\"Oh my god, fuck off and die!\" she shouted, throwing one pillow at me and covering her face in the other. \"This is what I'm talking about! I get confused and then mean shit starts coming out of my mouth!\"\n\n\"Sorry,\" I said, instantly feeling stupid. \"I was trying to tease you, I didn't mean... I wasn't trying to hurt you.\"\"\n\n\"I know,\" she said, from under the pillow, \"it's okay, you say dumb shit sometimes too. I'm just going to hide under here for a little while, though, if you don't mind.\"\n\nI climbed into bed next to her, and the moment I was under the covers I felt Mona scoot over until her whole left side was against me, warm skin to chillier, wet skin. She didn't seem to care, just pressed her body to mine until I had no choice but to wrap my arm around her shoulder.\n\n\"Hey,\" I said.\n\n\"Hey,\" she responded.\n\n\"I love you.\"\n\n\"I love you back.\"\n\n\"I'm sorry, this is just taking some getting used to. That's what we do, we fuck around with each other, we make fun of each other and roll our eyes, especially when things are going good. Do we still do that?\"\n\nMona tugged the pillow off her face. \"We still do that, just maybe not when I'm offering to suck your cock.\"\n\n\"My timing kind of sucked,\" I admitted, \"but, um, is that still on the table?\"\n\n\"I figured we'd do it on the bed, but if that's what you want...\" she said, fingers starting to run over my chest.\n\n\"Actually,\" I interrupted, gently putting my hands on hers, \"um, this is fucking stupid but can we talk about something else first?\"\n\nMona looked like she had something snarky to say about that but paused instead. I watched the gears turn behind her eyes as she reigned in her inclinations. \"What?\" she said.\n\n\"What happened that night?\" I asked.\n\n\"Which one? Not-Valentine's Day? Gazonga night?\"\n\n\"Yeah. We never talked about that, either. One moment everything was fine, we were talking, and bantering, and yeah I guess flirting too now that I think about it but then suddenly everything wasn't fine at all.\"\n\n\"I think that was maybe when I first started to figure it out,\" she said.\n\n\"Figure what out?\"\n\n\"That I didn't just like you, that I hadn't just liked you for a while. I loved having you around, I loved the way I felt when you were around, and I missed you when you weren't. We bantered, and it was fun, and even when I went too far, or snapped at you, or made fun of your beard-\"\n\n\"I looked good with that beard!\" I had, too, it was a good beard. \n\n\"You looked like a hobo, never grow one again because I want to kiss you and not sandpaper my face off.\"\n\nOkay, that was a good argument.\n\n\"That's what I'm talking about, right there. I can insult you and you just let it roll off. Even Debra has a limit but you, Steve? You just laugh at me and tell me you hate me.\"\n\n\"Because it's fun, and it's just you being you.\"\n\n\"That's my point, I get to be me and you like it. You make me feel like it's okay to be me. I like it when you talk to me and I like it when you look at me, I don't feel self-conscious or like I'm being stared at. I feel like I'm being appreciated.\"\n\n\"That's because you're fucking gorgeous.\"\n\nShe kissed me. \"Thank you.\"\n\n\"You were ahead of me,\" I said, \"I didn't figure any of this out until you left.\"\n\n\"I didn't figure it out that night. No, that night was when I got fucking confused because I realized I was having way more fun with you than the guy I was supposedly dating, and that I'd always had more fun with you than whatever guy I was supposedly dating, and that was scary and confusing. I don't handle scary and confusing all too well.\"\n\n\"I know.\"\n\n\"So I said some stupid shit. I don't know if I was angry with myself or trying to make you go away or just seeing if you would go away; I really don't know, and I've thought a lot about that night and how I fucked it up. Except you just smiled and apologized.\"\n\n\"I didn't,\" I pointed out.\n\nShe squeezed me. \"No, you didn't, you called me a bitch first but I deserved it and I know that's what you were apologizing for. I think that's when I realized I loved you, because no matter if I'm being nice or a bitch or just me, and even when you're angry, you're still here.\" Then she kissed me. \"It just took me a bit longer to figure it out and even longer to figure out how to show you.\"\n\n\"I'd say you did a pretty good job,\" I pointed out, \"consider me shown.\"\n\nMona snuggled against me, purring.\n\n\"Although I'm pretty sure I'll have to apologize to my neighbors,\" I added.\n\n\"What? Why?\"\n\n\"You moan a lot.\"\n\nMona glowered and smacked me across the chest. \"What did we just talk about?\"\n\n\"You're laughing,\" I pointed out.\n\n\"Oh my god I hate you!\"\n\n\"Can dish it out but you can't take it, huh?\" I asked.\n\n\"I'll happily take anything you want to give me,\" she responded.\n\nI opened my mouth to respond and was suddenly at a loss for words, my brain short-circuiting as the full implications of what she'd just said came crashing down on me.\n\nMona propped herself up on one elbow, looking down at me. \"That's all it takes to shut you up?\"\n\n\"I'm... um... thinking about that.\"\n\nShe kept staring.\n\n\"You mean it?\" I asked.\n\nShe nodded. \"I thought I'd been making that obvious, or do I need to show you again?\"\n\nFuck. \"Uh...\"\n\nShe sighed dramatically and started kicking the covers down. \"Show you again it is...\"\n\nMona rose to her hands and knees, turning around on the bed until her knees were by my head, her arms on my legs, her tits on my belly, and her mouth inches from my recovering cock. My eyes traced the line of her ass, up to her waist, along her back and up to her shoulders that why the fuck is that the sexiest part of her body because I've never been into shoulders but god hers were amazing.\n\nMona kissed my cock, and that line of thought evaporated.\n\n\"I love you,\" Mona murmured, just barely loud enough to hear, then she kissed me again, \"and I want you. I want you in my mouth, and then I want you in my pussy.\" Another kiss, and a lick. \"I want to suck you until you're hard, then I want you to fuck me harder.\" Kiss.\n\n\"Or should I be gentle?\" she asked; I could hear the tone in her voice and didn't need to see the smile that accompanied it to know what was coming right after. Oh fuck you Mona. \"With your glass cock?\"\n\nI groaned. \"I fucking hate you!\"\n\nKiss. \"I hate you back.\" Then, before I could respond, she took my half hard cock into her mouth. I groaned.\n\nMona, meanwhile, made contented little noises as she sucked gently. I put my hands on her back and ass, grabbing at any skin I could reach and running my hands over it. Mona's happy noises continued and she squirmed against me, one hand rubbing my inner thigh\n\n\"God, Mona, you feel amazing.\"\n\nI slid one hand down her butt, pushing fingers between her thighs, but Mona squeezed them together, tightly, trapping me. \"Uh-uh,\" she intoned around a growing mouthful of me, then pulled off just a little to speak. \"No distractions, I want you to feel me,\" she whispered against my cock, one hand slipping around it to stroke me lazily while she spoke. \"Concentrate on me, my mouth on your cock, getting you hard. The sooner I get you hard, the sooner I get you in my pussy, and the sooner I get to feel you cum inside me.\"\n\nMy cock jumped; I don't know if her words or the blowjob were getting me harder.\n\n\"I've got condoms-\" I began.\n\n\"Uh-uh,\" she responded. \"In me. I'm on the pill, but no guy's ever done that to me before. Cum in me. You're going to be the first.\" Then she hummed happily as she went down again.\n\nI babbled unintelligible noises as she took half of me in, slurping up and down my very recovered, very hard cock a few times before pulling off. \"Steve?\" she asked.\n\n\"Yeah?\"\n\n\"I want you on top. I want to feel all of you.\"\n\n\"Roll over,\" I told her, starting to sit up.\n\nMona did, rolling onto her back and looking up at me. \"Gonna fuck me now?\" she asked.\n\nI climbed between her legs, then leaned forward, bracing my body above hers. Mona reached one hand down between us, spreading her pussy out while I took my cock in my hand. I was wet and slick from her mouth, and as I slid the head of my cock along the lips of her pussy I could feel that she was even slicker.\n\n\"You're really wet,\" I pointed out.\n\nMona made eye contact with me. \"Don't make me wait,\" she said, \"I've waited long enough.\"\n\nSo I didn't. I kissed her, hard, then slid forward in one smooth motion and buried myself to the hilt. Mona let out a \"yes!\" into my mouth and grabbed at my shoulders, trying to pull me down as I sank into her.\n\n\"God you're tight,\" I hissed as I felt Mona's pussy ripple around me.\n\n\"Shut the fuck up, Steve,\" she moaned, rocking her hips up into me, her body begging me to fuck her. So I did, pulling out a little before pushing back in, moving slowly because she was wet but she was also tight and I was still sensitive from my first orgasm of the night. Then I did it again, and again, and again...\n\n\"Fuck you feel about ten times better than I dreamed,\" Mona mumbled, rocking her hips up against me.\n\n\"You dreamed about me?\" I asked, grabbing her hip with one hand and holding it, controlling our pacing as I started to work into a rhythm.\n\n\"Oh fuck do that,\" she gasped, \"oh fuck almost every fucking night since I left, ever since you kissed me on the couch.\"\n\nI faltered a little. \"I don't remember doing that,\" I admitted sheepishly.\n\nShe made a frustrated noise, hips pushing back up again. \"My imagination may have embellished a little; you nuzzled my neck, same shit ohhh fuck yes right there do that again...\"\n\nI had no idea what I'd done, but I tried to do it again anyway and Mona seemed to appreciate the results. Her legs snaked up around my butt, her ankles crossing, and she tried to pull me deeper inside her.\n\n\"Lie on me,\" she said, \"I want to feel every fucking part of you.\"\n\nSo I did, lowering my body down against hers, feeling her breasts squish against my chest, her belly press to mine, resting my forehead against hers while her arms wrapped around my back and nails dug into my shoulders.\n\n\"Ow,\" I commented.\n\n\"Fucking wimp,\" she said, tilting her head up to bite my lip, then kissing me after like she was trying to make up for it. I still slid into her gently, then halfway out, then back in. Her thighs tightened with each thrust, helping me along, both of us enjoying the sensations and the feel of skin on skin and cock in cunt. We were in no hurry.\n\n\"You last a lot longer the second time\" she murmured appreciatively, looking into my eyes.\n\n\"At least twelve pumps.\"\n\n\"This is a lot more than twelve, lover.\"\n\n\"Lover? I like that.\"\n\n\"Better than Chucklebutt,\" she said with a grin.\n\nI scowled at her and gave an extra hard thrust that made her gasp. \"I thought we were over that.\"\n\n\"Maybe you need a new nickname.\"\n\n\"I liked lover.\"\n\n\"I prefer Monafucker,\" she giggled.\n\n\"Do you ever shut up?\"\n\n\"Why don't you make me?\"\n\nSo I kissed her, letting my tongue out to play with hers, and then we were both giggling too hard to keep it up. Instead we held each other, laughing, as our hips rocked together and her hands dragged down my back.\n\n\"Fuck you're perfect,\" I sighed, my head sliding down next to hers.\n\n\"I love you,\" she responded, whispering into my ear and holding me tight.\n\nWe writhed together on the bed, hands slipping over bodies as I buried myself to the hilt, then drew back, then pushed deep again. Mona made soft, happy sighing noises, murmuring nothings at me as she rocked her own hips up to meet mine. \n\n\"Lover,\" Mona whispered into my ear.\n\n\"Mmmm?\" I grunted back.\n\n\"I'm going to cum.\"\n\nTingles ran through me at those words and I started to thrust faster, but Mona shook her head, squeezing her thighs around me. \"No, just keep doing it like that. Fucking me slow. And hold me, I need to feel you. Hold me.\"\n\nSo I slowed back down, thrusting into Mona while her body started to tighten beneath me, her hips rising up to meet mine. Her pussy squeezed tight and my cock ached gloriously. \n\n\"I love you, Mona,\" I murmured into her ear.\n\n\"I hate you back,\" she responded, then gasped and bucked her hips hard, clawing at my shoulders.\n\n\"Cum for me, Mona,\"\n\n\"Uh!\" was all she managed, the noise short and sharp as she arched her back and writhed beneath me. That was a good noise, I wanted her to make that noise again. It made me want to drive into her, hard, deep, but I fought to keep going at Mona's pace as she gasped again, twitched again, and dug her fingers into my hair. I buried my nose in her neck, kissing along it.\n\n\"Cum for me.\"\n\n\"The fuck do you think I'm doing?\" she hissed, clawing my scalp. Then she made the noise again as I drove in deep, her pussy rippled around me and I moaned along with her. I'd already lasted far longer than expected, but I'd also never tried to get off again so soon and the feeling was a strange combination of ecstasy and discomfort as Mona squeezed tight around me, then released, squeezed and released. My own orgasm, feeling like a distant thing until now, started to creep up.\n\nMona gasped again. \"Fuck your cock!\" she hissed as I pushed in again and I could no longer help myself anymore, I had to fuck her harder, deeper, my own orgasm desperate to get started as Mona's wound down.\n\nMona felt the change. \"Do it,\" Mona murmured into my ear, \"fuck me hard now, lover. Don't hold back.\"\n\nWith an invitation like that, how could I say no? I started to push into her faster, but the position wasn't really working. I went up on my elbows, then my hands, adjusted my legs so I could push harder, deeper. Then I did and Mona made the noise again, loud, sharp, and short, grabbing at my shoulders.\n\n\"Fuck, are you coming again?\"\n\n\"I never stopped!\" she gasped. \"Fucking cum in me, Steve!\"",
        "\"I'm trying,\" I responded, sinking my cock into her loosening pussy and, for some reason, starting to laugh.\n\n\"Hey!\" she said.\n\n\"What?\"\n\n\"No laughing!\" she responded, starting to laugh back.\n\n\"You stop first!\"\n\n\"You're not the boss of me,\" she giggled, running her fingers up into my hair.\n\n\"Fuck you!\"\n\n\"Already doing that!\"\n\nWe laughed, kissing, and when the kissing broke Mona nuzzled against my cheek, murmuring my name. Her legs slid out from around my hips, her whole body melting as she rode off the tail of her orgasm. My own legs started to ache, my belly tensing as my orgasm climbed. It was slow, though, slower than I'd ever felt before, and it was like I was pushing up against a wall and couldn't quite get over. It was simultaneously amazing and frustrating. Fuck I wanted to cum.\n\n\"Cum in me,\" Mona muttered.\n\n\"I'm trying,\" I responded.\n\nHer hands slid down my body, grabbing at my hips, fingers digging into my skin. She pulled, gently, urging me deeper into her each time I thrust. Then she leaned forward, putting her forehead against mine, and our eyes met.\n\n\"Cum in me,\" she said again, staring into me. \"I want you to cum in me. I want to feel you when you do it, spreading and filling my pussy. Be mine. Make me yours.\"\n\n\"Oh fuck,\" I gasped, pounding her hard, feeling myself climbing the wall.\n\n\"Yes!\"\n\n\"Fuck,\" I hissed.\n\n\"Do it.\"\n\n\"Unf,\"\n\n\"Cum in me!\"\n\nI groaned, driving deep as I felt myself release inside her. Mona jumped, eyes going wide. \"Oh fuck!\" she gasped. I pushed in again, spurted again, then pumped into her one more time as my muscles tightened up almost painfully, my cock still pulsing inside her even though I'd already emptied myself. Her hands gripped tight to my hips, pulling herself deeper onto my cock and rolling her own hips gently as she rode my orgasm.\n\n\"Oh fuck,\" I finally gasped. \"Fuck, stop!\"\n\n\"Sensitive?\" she asked, still staring into my eyes and rolling her hips one last time.\n\n\"Argh I hate you!\"\n\n\"Can dish it out but you can't take it?\" she asked, gently releasing my hips and letting her arms fall to the bed. I followed suit, collapsing on top of her as my limbs gave out, and Mona let out another giggle as I squished her underneath me.\n\n\"That was amazing,\" she whispered, \"I felt you, I felt the moment you came. I've never felt that before.\"\n\n\"You're amazing,\" I told her.\n\n\"I love you,\" she said back, hugging me tight.\n\nSome time later we lay in bed, the lights out and the covers pulled up but neither one of us quite asleep yet. Mona was half on top of me, one arm and one leg over me, and it was both a little awkward and the most comfortable way I'd ever slept.\n\n\"Hey,\" I asked, grabbing onto a thought as my mind wandered through it.\n\n\"Yeah?\" Mona responded.\n\n\"Did you have to call Debra? Tell her you weren't coming over tonight?\"\n\n\"She's shit at secrets, she thinks I'm coming in tomorrow, too,\" Mona murmured against my shoulder. \"Besides, my room isn't free for another five days anyway.\"\n\n\"Where were you planning to sleep?\" I asked.\n\n\"Well, I was getting a little stir crazy at my parents and there was kind of this guy I wanted to go see. I didn't really want to wait any longer.\"\n\nI tilted my head to look at her. Mona had her eyes closed but a smile on her lips. \"So you didn't really think that one through?\" I asked.\n\n\"Oh, no,\" she said, \"The apartment has a couch. Or I had plans to steal your bed.\"\n\nI goggled at her. \"You were planning this?\"\n\nThe smile grew wider. \"This? Oh fuck no, I had no idea, I just knew you'd sleep on your own couch before you made me do it.\"\n\nI gave her a gentle slap. \"I hate you.\"\n\n\"I'm pretty sure that doesn't mean I hate you,\" she pointed out.\n\n\"I don't think it ever has,\" I responded.\n\n===== Not-Valentine's Day, 2018 =====\n\n\"Well, that fucking sucked,\" I muttered, setting the phone down.\n\n\"What did you expect?\" Mona said from across the table. \"You waited until the last minute to book a reservation on Valentine's Day. The place was bound to be full.\"\n\n\"I know a guy. I figured John could hook me up.\"\n\n\"See where you thinking gets us?\" Mona asked, stretching back in her chair. My eyes followed her movements, the curve of her arm, of her chest, her hip...\n\n\"See something you like?\" she asked.\n\n\"You. You look good in my shirt.\"\n\n\"Hmmm. Especially when it's the only thing I'm wearing.\"\n\n\"Only thing?\" I asked.\n\nShe glanced down at where the hem rode up dangerously close to the tops of her thighs. \"Mmhmm. Rethinking your plans?\"\n\nI tossed my arms up. \"Maybe! I was hoping to see you in a dress, out at a fancy restaurant for Valentine's Day, but...\" I waved at the phone.\n\n\"Fuck Valentine's Day,\" she responded, standing and pushing in her chair. My shirt barely fell past her ass, and I could not take my eyes off of her; I rarely can. \"Not-Valentine's Day, remember? See me in a dress at home. We'll stay in, make something, and insult each other except this time we'll resolve the sexual tension.\"\n\n\"Can it still be Not-Valentine's Day if we're dating?\" I asked.\n\n\"It can be Not-Valentine's Day if we say it's Not-Valentine's Day. Fuck the patriarchy, they can't tell us what to do.\"\n\n\"Okay, I'm in.\" Not that I needed any convincing. \"I'll even-\"\n\n\"You are not wearing that suit,\" she interrupted.\n\n\"That's not what I was going to say,\" I lied.\n\nShe stared at me. \"Steve?\"\n\n\"Yeah?\"\n\n\"I bought a dress for today. It's blue, it's a halter, it doesn't fall past here, and if you take that suit out and march it to the garbage can right now I will put it on right now and later tonight you can bend me over this table and fuck me in it.\"\n\nI stared at Mona for a second as she somehow managed a smile and a glare at the same time. She was snarky, she was sharp, she was fun and witty and the sexiest creature I'd ever seen.\n\n\"I guess I'm headed to the dumpster, then,\" I responded.\n\nShe grinned. \"Happy Not-Valentine's Day.\""
    ],
    "authorname": "QuietBedlam21",
    "tags": [
        "bareback",
        "flirting",
        "friends",
        "grinding",
        "male pov",
        "mutual attraction",
        "straight sex",
        "touching",
        "unfortunate name",
        "banter"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/not-valentines-day"
}