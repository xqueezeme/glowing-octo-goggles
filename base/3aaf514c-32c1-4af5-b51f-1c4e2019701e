{
    "title": "Caught by the Tide Ch. 10",
    "pages": [
        "When I started this story, I had no idea it would end up as long as this. I rather thought it'd be done in around four or five chapters. The story had other ideas...\n\nMay I just take this opportunity to say a huge thanks to all of you who've followed this story and sent me all those wonderful comments and emails. There's a good chance I might never have got to the end without you all.\n\nAnd while I'm at it, here's a thank you to my very own long-suffering Caitlin (who'll probably never read this, but never mind, LOL) and another thank you to my big bro--without whom, this last chapter may never have been finished. ETMAS, my friend...\n\n*\n\n\"Drive.\"\n\n\"What?\" Luke regarded me with astonishment as I slid into the car beside him, hastily closing the door. \"What happened?\"\n\n\"Just drive.\" I scrabbled for the seatbelt, pulling it around me with trembling fingers, my keys slithering off my lap to the foot well. \"Oh fuck...\"\n\n\"Babe,\" I heard him say as I reached down to retrieve them. \"We're not going anywhere. Not until you tell me--\"\n\n\"Luke, please!\" I begged, straightening up. \"I can't--don't make me explain now. Please? Just--just get me out of here.\"\n\nThere must have been a look of utter desperation in my eyes for without further argument, he started the car, pulling away from the kerb at speed. The inertia pushing me back in my seat, I closed my eyes, aware I was shaking, my heart still thudding wildly in my chest. \n\nGod, I'd been stupid, I'd been such a fool. Why hadn't I guessed? How could I not have known? Daniel's affair hadn't been a holiday romance. It hadn't been an affair at all. He'd been with the girl for years, they'd even had a daughter together...\n\nBut none of it made any sense.\n\nBecause he'd wanted to marry me. It wasn't as though he'd ever appeared to have second thoughts. Far from it. He'd been so involved with everything to do with the wedding, from the booking of the cars to the booking of our reception, from meeting the vicar to organising our honeymoon in the Maldives, checking then re-checking every detail with zeal. Through it all, we'd been close--well, I thought we'd been close. Intimate. Okay, maybe we hadn't made love as often as we had at the start of our relationship, but I'd just assumed that was normal for a couple who'd been together for a while. \n\nBut it hadn't been normal at all, had it? The whole time, he'd been with her too. Doubtless he'd had sex with her too--well, quite obviously he had. And had it not been for the fact he'd accidentally sent that text message to me instead of her on the morning of the wedding, we'd have been married by now. What the hell had he had in mind? Bigamy?\n\n\"No.\" The thought made my stomach churn with a vengeance, waterbrash rapidly flooding my mouth. And oh God, that buzzing noise was back, growing louder and stronger, a surge of heat sweeping over me. \"Oh no,\" I groaned, feeling horribly clammy. \"Luke--I'm going to be--\"\n\nThe next thing I knew, the car was no longer moving and Luke was opening my door, reaching in to scoop me out. \"Don't you dare,\" he said in a tone that would brook no argument, hoisting me up in his arms before nudging the door closed again with his knee. \"D'you hear me? Don't even think about it. I made you that bacon butty with love, Rebecca--and it's staying down, okay?\"\n\nI nodded weakly, trying my hardest to regain control, the fresh air on my face helping, the dizziness already easing away. And as he carried me, I gazed up into his face, stricken by the concern in his eyes. \"Where are we?\" I whispered, managing to raise my head just enough to see we were heading towards a park bench.\n\n\"By the river. S'okay, just ssh.\" Holding me firmly, he lowered us both down to the bench, easing me into a more comfortable position across his lap. And for a minute or two, we sat in silence, Luke gently stroking my hair while I listened to the sound of the breeze rustling the leaves on the trees above us, the distant quacking of ducks somewhere up stream. \"Daniel,\" he said at last, sounding rather grim. \"He was there, wasn't he?\"\n\n\"No.\" I shook my head, watching as the furrows in his brow deepened. \"But she was.\"\n\n\"She was?\"\n\n\"Janine.\" It felt odd to say the name. I hadn't known what it was before.\n\nLuke's arms tightened slightly. \"You mean--?\"\n\n\"--Daniel's other woman,\" I finished for him. \"Yes. And her baby.\" I hesitated. \"Daniel's baby.\"\n\n\"What?\" \n\nI hadn't had a chance to bolt. Within moments of seeing the cherubic-looking child, her mother had emerged from the bathroom, clad in cream satin pyjamas. A tall, thin girl, perhaps a little younger than me, with over-bleached blonde hair, roots sorely in need of a touch up. We'd stood looking at each other for what could only have been seconds but seemed considerably longer.\n\n\"Shit,\" she'd said, her face going pale. \"You're Rebecca, aren't you?\"\n\nI wasn't sure what was worse, that she was there or that she knew who I was. But the strangest calm had descended on me and I heard myself saying, rather sarcastically, \"Well, I don't think we've been formally introduced, but yes, I'm Rebecca. And you are?\"\n\n\"I'm--I'm Janine,\" she'd stammered. \"Look--Daniel's not here. He's just--\"\n\n\"And this is?\" I'd interrupted, pointing at the toddler who was still staring up at me as though mesmerised, those huge brown eyes unblinking.\n\n\"Issie.\" At the sound of her name, the little girl charged to Janine's side, half-hiding behind her mother's leg. \"Short--short for Isabel.\"\n\n\"Hello Issie.\" I softened my tone as I addressed the little girl directly, beginning to get that now familiar feeling I was trapped in a bad dream. \"How old are you, then?\"\n\n\"She's eighteen months,\" Janine answered, looking increasingly uncomfortable. \"Listen--\"\n\n\"And she's Daniel's child, isn't she?\" It hadn't really been a question. Isabel was the spitting image of him, just a miniature female version. But even if I hadn't already been sure, Janine's openly guilty expression would've provided all the confirmation I needed. \"Right,\" I said lightly, at a complete loss as to how I was supposed to feel or what I was supposed to say next. \"Well, there are a few things I need to pick up, so if you don't mind...\"\n\nI'd pushed past mother and daughter and headed into the bathroom, the signs of their occupation everywhere. Janine's toiletries were on the tiled window sill, there were plastic ducks in the bath, nappies and baby wipes stacked on the floor in front of the scales and a changing mat parallel to the bath. But when I opened the mirrored cabinet above the sink, I was taken even further aback to see the other woman's things crammed in next to mine. A cheap supermarket brand of tampons, face cream, perfume, make-up. Just how long had she been staying there?\n\nIn order to retrieve my pills I'd actually had to start removing her things, at first placing them neatly on the ledge above the basin. But after I'd removed half a dozen items, a fit of blind rage suddenly struck. Putting my hand into the cabinet, I'd swept everything out, the entire contents of the shelf clattering down into the sink, boxes of contraceptives and all. And having extracted the boxes, I'd dropped them into my handbag before turning on my heel and marching straight out of the flat, not bothering to direct so much as a glance in Janine's direction.\n\nLuke swore softly as I finished telling the tale then pressed his mouth to the top of my head, dropping kisses into my hair. \"Bastard,\" he murmured furiously. \"Becks, I've had it with this wanker. Give me one reason why I shouldn't slice off his dick with a blunt scalpel.\"\n\n\"Luke!\"\n\n\"I'm serious.\" His fingers moved over my throat, checking my pulse. \"And what kind of woman is she? For heaven's sake, she knew about you? She knew you and Daniel were going to get married and she was happy to go along with it?\"\n\n\"It's pretty weird,\" I conceded, grimacing at him as I grabbed his hand and pulled it away from my neck. \"Stop that, I'm okay now. It was just the--\"\n\n\"Shock,\" he finished tersely, peering into my eyes now. \"Okay, he can keep his dick. Let me just castrate him. Bad enough that he's fathered one child.\"\n\n\"Luke!\" But this time my objection was rather less than half-hearted. I was finding it particularly difficult to deal with the fact that Daniel had a daughter. I'd found it hard enough to cope with the idea that he'd had an affair. To discover that not only had he had an affair, but that it'd been going on for years... \"There must've been signs,\" I murmured, thinking aloud. \"Why didn't I know? How could he have kept this hidden? Surely somebody must've known something.\"\n\n\"Babe--\"\n\n\"Why did he want to marry me?\" Pushing Luke's arms away, I struggled to sit upright, staring at him in bewilderment. \"If he had her, and he had a baby with her, why did he still want to be with me? Even last week, when he brought me home from Cornwall, he was asking if we could make another go of things. Why the hell would he want to do that? Why would he want both of us?\"\n\nHe gazed back at me, once again wearing that expression I couldn't quite read. \"I can't answer that,\" he said at last. \"I think that's something you're going to have to ask him.\"\n\nI stared back at him, puzzled by that look, my mind working furiously to make a connection between all the times I'd ever seen it. And all of a sudden, I knew what it meant, a rush of relief flooding through me, that beacon of light inside me seeming to burn more brightly than ever. \n\n\"Luke, you tosser.\" Leaning forward, I kissed him as passionately as I knew how, my arms curling around his neck. \"It's you I want. Not him.\"\n\nHe gave a startled laugh as I kissed him once more then reciprocated with equal enthusiasm, pulling me down on top of him as he toppled down sideways to the bench, cushioning me with his body. \"Wow,\" he said contentedly when I finally raised my head for air. \"What did I do to deserve that?\"\n\n\"I wanted you to know I love you.\"\n\n\"Yeah, I kind of got that.\" He smiled as I laid my head on his shoulder, reaching up to caress my cheek. \"I love you too.\"\n\n\"You really do, don't you?\" I smiled back, still not quite able to believe it. \"Maybe we should be thanking Daniel for being a bastard. We'd never have met otherwise.\"\n\n\"Hmm.\" He rolled his eyes as he stretched out his other hand, flexing then clenching his fingers meaningfully. \"And I think I know the perfect way to thank him.\"\n\nI looked at him and then at his fist, unsure whether he was serious. \"You wouldn't?\"\n\nLaughing now, he shook his head before dropping another gentle kiss on my lips. \"Feeling better?\"\n\nSlowly he eased me upright again, still holding me close, watching my face as we rose. To my relief, the nausea had completely abated, but I felt oddly weak, as though I hadn't slept for days. Although that wasn't really surprising. It wasn't far so from the truth. \"I'm okay,\" I said lightly, grimacing as his eyebrows lifted in response and knowing he wasn't fooled for a moment. \"Well, I will be. Luke... Please can we go? I really, really need to see Mum now.\" \n\nHe nodded before tucking my head in against his chest, resting his cheek against my hair. \"Come on then,\" he murmured before pulling me to my feet. And slinging an arm around my waist as we walked, he steered me back up the bank towards the car.\n\n\"You're never going to be able to park,\" I said when we finally arrived at the hospital, dismayed to see just how many cars were queuing on the slip road for a space. It was only ten o'clock but already the sign up outside the multi-storey car park read 'FULL'.\n\nLuke shot me an amused look. \"Babe, at what point did you fall asleep last night? It was before we got to my car, right? You were sleep-walking, weren't you? I thought you'd gone a bit quiet.\" And still grinning, he pulled into the other lane and turned off into a road clearly sign-posted 'Staff Car Parking only'.\n\n\"Oh.\" I couldn't remember a thing about going to his car last night. I'd just let him lead me out of the hospital, too strung out by the day's events to notice where we were going. \"Don't tell me, you have a spot with your name on?\"\n\nAlready peering down the long lines of parked cars for a space, he laughed. \"I wish. I'm really not that important in the grand scheme of things, just another consultant. Ah, there we go.\"\n\nLuke pulled the car into what appeared to me to be a very narrow bay before jumping out to help me, holding my door so that it didn't knock against the car besides his. Then taking my hand, he led me back up the hill and in through the main entrance of the hospital.\n\nHe was still holding my hand as we walked on to the Cardiac Intensive Care Unit, Caitlin's eyes widening when we arrived in my mother's room. \"Hi,\" she said, not quite managing to cover her surprise as she stared at me and then Luke, her welcoming smile a little too dazzling. \"I was just telling Gillie that I thought you'd be here soon.\"\n\n\"Mum!\" Pulling away from Luke, I rushed to her side, relief flooding through me as I saw that her eyes were open, smiling as her face brightened in recognition. \"Don't you ever scare us like that again, do you hear me?\"\n\nAs she nodded I became aware of Caitlin behind me. \"Your Mum's doing very well, Becky. She's off the ventilator now and breathing on her own.\"\n\n\"But--\" There was still a tube in Mum's mouth, attached to a thick length of pipe. Not knowing what it was, I gestured towards it rather helplessly.\n\n\"That's a T-piece. That's just oxygen going through there. We don't take the tube out straightaway in case there are any problems but I'll be taking it out in a few minutes. Then she'll be able to talk to us again. Although,\" Caitlin smiled at her, \"you're a bit sleepy, aren't you, Gillie? It's all the pain medication.\"\n\n\"And how are we doing with pain control?\" I heard Luke say as he came up the other side of the bed. \"Have we got it right yet?\"\n\nMum turned towards him, her eyes narrowing slightly before she gave him another brief nod. I knew what that look meant. It meant 'who the hell are do you think you are?'\n\nLuke sent me a grin that told me he knew what that look meant as well. \"Too much analgesia and she'd be too sleepy to breathe deeply, too little and it'd hurt too much to breathe deeply,\" he explained. \"It's not always easy to strike the right balance.\" And then he was looking at Mum again, his expression softening as he touched her hand. \"Good morning,\" he said gently. \"I'm Luke Foster. You can blame me for all of this. I was the one who performed your surgery yesterday.\"\n\nI watched Mum's face brighten again, saw the flash of understanding in her eyes. And as he began to describe what had happened, keeping his explanations simple and to the point, I felt a strange sense of pride as I listened. This was Luke, my Luke. The skilled surgeon who'd known what to do, how to make her better, how to save her life. I wasn't sure I'd ever be able to thank him enough.\n\n\"Anyway,\" he finished at last. \"I realise it's not fair to tell you all this when you can't talk to me so I'll be back to answer any questions you might have when the breathing tube's out. I think that'll be quite soon now.\"\n\n\"Just need to draw up this infusion and then I'm on it,\" the nurse confirmed, busy with a syringe at the end of the bed.\n\n\"Excellent.\" Luke smiled at Mum and then at me. \"That should give me enough time to get something else done then. Caitlin, I need a suture removal kit. Where can I find one?\"\n\n\"Oh no.\" Realising what he was asking for and why he wanted it, I felt my face fall. \"Not now...\"\n\nHe grinned, apparently enjoying the startled looks that both Caitlin and my mother were shooting in his direction. \"Yes, now,\" he said firmly, reaching across to pick up my hand in order to show Mum the long line of stitches in my arm.\n\n\"They're in the treatment room,\" Caitlin said, not even trying to hide her surprise now. \"On the bottom shelf just inside the door. Mr Foster--\" She hesitated, seeming rather perplexed. \"I could take those out for her if you wanted me to.\"\n\n\"Oh, I think I'll manage, thanks.\" Now I wasn't in any doubt at all--Luke was definitely enjoying my discomfort. \"Let's go.\" And still gripping my hand he drew me down the bed. \"We'll be in the pre-admission suite if you need us. Back in a bit,\" he said cheerfully then tugged me out of the room before I could take another glance at my mother.\n\n\"Luke!\" I hissed, mindful of keeping my voice low as we re-entered the main ward area. \"I--I can't believe you just did that.\"\n\nHe chuckled softly, leading me into a small room behind the nurses' desk. There was barely enough time to take in the cupboards and the neat rows of trays on the counter tops containing medical supplies before he retrieved a rectangular package from one of the shelves and waved me back out of the door. And then we were leaving the unit, going back through the double doors, turning right into an empty twin-bedded ward just before the exit to the lifts.\n\n\"Make yourself comfortable,\" he said, gesturing towards the bed nearest the window and pulling the curtain across, effectively dividing the room in two and shielding us from anyone passing by.\n\nI stared at him for a moment in confusion, watching as he moved across to the sink to wash his hands. \"What?\"\n\nHe sent me a grin over his shoulder. \"Lie down, babe.\"\n\n\"But--\" He had to be kidding, right? \"I don't really need to do that, do I? It's not like this isn't going to take long, is it? And it isn't going to--I mean, it won't--\"\n\n\"Hurt?\" Lifting his eyes heavenwards for a moment, Luke came back towards me, kicking a small metal trolley across to the bedside. \"Get on the bed, Rebecca.\" \n\nI perched on the very edge of the bed, watching nervously as he opened the package and spread out its contents across the top of the trolley. \"Is it going to hurt?\" he mocked, shaking his head. \"Yesterday, I cracked open your mother's chest with a saw.\"\n\nDear God...That really hadn't been something I'd wanted to visualise. \"Thanks for that.\"\n\nLaughing softly, he turned to me at last only for the mischief in his eyes to disappear the moment he saw my face. \"Oh, Becks...\" To my surprise, he climbed on to the bed behind me then hauled me up until I was propped against him, sitting between his outstretched legs. \"Not sure how we'll explain this if anyone comes in, but what the hell.\" And planting a kiss on my neck he leaned over to retrieve instruments from the trolley. \"Right,\" he said solemnly, showing me what he was holding. \"Stitch cutter, forceps. Relax. I'm not going to hurt you.\"\n\nReassured by his embrace, I watched as he lifted the knot of the first stitch then sliced through the suture, experiencing only an odd tickling sensation as he pulled the thread back through my skin. \"That's it?\"\n\nI could feel his smile as he brushed his lips against my temple. \"Uh huh. Think you can manage without an anaesthetic?\"\n\nEmbarrassed, I didn't respond to that, smiling reluctantly as he kissed me again. \"Did you really have to use a saw?\"\n\n\"'Fraid so.\" He sounded amused, already removing the next stitch. \"To cut through the sternum. Want me to talk you through the whole procedure?\"\n\n\"Maybe another time,\" I said faintly, repressing a shudder and racking my brains for a change of subject. \"So you saw my mother's breasts, huh?\"\n\nHe gave a startled choke of laughter. \"Occupational hazard, I'm afraid. Why, want to know how you compare?\"\n\n\"Oh, I don't know. Don't they say, 'show me the mother'--\"\n\n\"--'and I'll show you the daughter in twenty to thirty years time'?\" he finished. \"Well, let's just say your prospects look good, babe.\"\n\n\"Luke!\" I tipped my head back to glare at him and was rewarded with another kiss.\n\n\"I'm kidding. It's actually pretty hard to see what a woman's breasts are like when she's lying flat on an operating table. Unless they're fake of course. And then of course, everyone comes to have a look.\"",
        "\"I hope you're still kidding.\" But something about his lack of reply made me rather suspect he wasn't.\n\nWe sat in silence for a while, Luke steadily working his way through the stitches, the tension gradually leaving my shoulders as I settled back against his chest. But then I remembered finding myself at peace the last time we'd sat like this, that evening up on the rocks while we'd waited for the tide to go back out. And revelling in the feel of his arms around me, Luke's breath warm against my ear, I allowed my eyes to drift closed.\n\nSo the familiar beeping sound of someone tapping a number into a mobile phone came as a rather unwelcome surprise. Jerking back to full wakefulness, I twisted around to see Luke grinning. \"Ssh,\" he mouthed, using the forceps to point towards the curtain. \"Someone's out there. Don't say--\"\n\n\"Hi, it's me. I just got your message. What's up?\"\n\nAt the sound of the rather irritated male voice, a cold wash of shock flooded through me. Daniel...\n\n\"You do realise I shouldn't even be speaking to you? You know what they're like about mobile phones in hospitals.\"\n\nOblivious to my dismay, Luke rolled his eyes then nudged my shoulder so that I was facing forward again and began using the forceps to grasp the knot of the next stitch .\n\n\"What?\" If Daniel had sounded irritated before, now I knew he was pissed. \"Please tell me you're joking? She actually came round? When?\"\n\nThe high-pitched voice emitting from the receiver was only just audible but although I couldn't distinguish the words, the caller's distress was obvious. A split second later, so was the identity of the caller.\n\n\"Fucking hell, Janine!\"\n\nLuke tensed behind me. \"Janine?\" he whispered, his mouth so close to my earlobe his lips tickled. \"Isn't that--?\"\n\nI nodded once, equally tense, my shock at hearing Daniel's voice abruptly giving way to blind rage. But when I tried to pull away, Luke's arms tightened around me, holding me in place.\n\n\"Well what the fuck did you say?\" Daniel raged on. \"Does she know who you are? Did she see...? Shit.\"\n\nLivid now and suddenly desperate to confront my ex-fianc\u00e9, I fought against Luke's restraining arms in vain. \"You're staying put,\" he murmured, motioning down at the three remaining sutures in my arm. \"I'm not done.\" And to my utter astonishment, he coolly began working on the next one.\n\n\"Okay... Okay. Calm down.\" All at once, Daniel's tone became much more conciliatory. \"Well, there's not much we can do about it now, I suppose... No, I know...\" There was a longer pause and then he sighed heavily. \"No, they wouldn't let me in to see her. Something about taking out the breathing tube... Yeah.\"\n\nI couldn't believe Luke wouldn't let me go. Daniel was talking about my mother as though he still had a right to see her, a right to care--when in truth he had no right at all. He'd lied to me, he'd lied to us all, for goodness knew how many years...\n\n\"So no, it's not looking promising. It looks like she's out of danger for now. Yeah.\" Much to my bewilderment I could hear deep regret in his tone. \"I know. It could've worked out just fine. Would've solved a lot of problems.\"\n\nWhat could've worked out just fine? Mystified, I tried to look at Luke, only for him to firmly turn me around again, finally working at the one remaining stitch.\n\n\"Well...\" Daniel sounded resigned now. \"It may still work out, who knows? Her heart's working okay for now but how long will that last? My mate's Dad had a bypass operation a couple of years back and he only made it another six months. Chances are, Gillie won't last that long either.\"\n\nSix months? Panic-stricken, I twisted around to gaze at Luke again and found he was shaking his head. \"Bollocks,\" he mouthed, looking exasperated now. \"Grafts can last ten to fifteen years.\"\n\n\"Maybe I'll still be able to blag my way out of this one,\" Daniel carried on. \"Gillie's always liked me, after all. Though I s'pose once Becca tells her about you and Issie...\" He heaved a sigh, as though the consequences of his actions had only just occurred to him. \"Oh well,\" he said, just as Luke pulled the last thread from my forearm. \"Pity this didn't happen yesterday, eh?\" Then he gave a rather bitter laugh. \"I could've pulled out the plug of her life support machine.\"\n\n\"That's enough!\" I gasped, leaping off the bed at the precise moment Luke obligingly opened his arms, charging across to the curtain and wrenching it back. \"You bastard! You utter bastard!\" And before Daniel had a chance to react, I flew at him, barrelling into his chest with a strength I didn't even know I possessed, the mobile phone slipping from his hand as I slammed him against the wall. \"I want you out!\" I spat into his face. \"Do you hear me? I want you--and that tart--and your kid--out of my flat!\"\n\n\"Becca!\" he gulped. \"It's not what you think--it's not what it looks like--\"\n\n\"Not what it looks like?\" I gave a choke of incredulous laughter. \"Fuck, Daniel, it's exactly what it looks like. Just what kind of fool do you think I am? Yes, I've been a fool--my God, I've been a fool--but even I'm not that stupid. I want you out--by this evening.\"\n\n\"You don't understand.\" Daniel gazed at me, looking increasingly desperate. \"They don't have anywhere else to go. She couldn't pay the rent, they were evicted from their place--\"\n\n\"And that's my problem?\" I couldn't believe I was hearing this. \"I don't care! I want you out--all of you!\"\n\n\"Becca, please. We don't have any money. Have a heart--\"\n\n\"'Have a heart'?\" I echoed in disbelief. \"You were just talking about turning Mum's life support machine off and you're telling me to 'have a heart' because you're--\" Then I stopped, grasping in a blinding flash of comprehension what this was all about. \"You're broke,\" I breathed, hardly able to believe I hadn't guessed before. \"That's it, isn't it? My God, that's why you're here.\" And seemingly of its own volition my right hand was swinging upwards, balling into a fist before colliding with his cheek. \"You bastard!\" I screamed, wild with fury. \"You actually wanted her to die, didn't you? Shit--you're in her w-huh!\"\n\nBefore I could finish, Daniel grabbed me by the throat and suddenly it was me that was up against the wall, the back of my head smashing into the plasterboard with a dizzying thwack. \"You don't get it,\" he said, still with that odd note of despair, leaning in until his face was scant inches from mine. \"You can't throw us out, do you hear? It was a one-night stand, you have to believe me. I never thought she'd get pregnant.\"\n\n\"Daniel!\" \n\nI heard my sister's shocked voice but couldn't see where she was, Daniel's hand pressing so tightly against my windpipe, everything was going black. \"And I loved you, not her--not Janine. I just didn't know what to do. I didn't have the money to support them by myself, Becca--\"\n\n\"So you thought you'd use her money instead?\" Wrenching Daniel's hand from my neck Luke shoved him hard in the ribs, sending him sprawling to the floor. The next thing I knew, Daniel was on his back, Luke's foot planted over his chest. \"You gutless fucker, did you never think of telling her the truth? Of course not--you couldn't be a man.\"\n\nGasping for breath I slid down the wall, watching as Daniel peered up at Luke. \"Foster?\" he exclaimed. \"You again? You hit me--I'll have you done for assault!\"\n\n\"Be my guest,\" Luke said, sounding calm. \"But I think you should know someone else witnessed what you just did.\" And as he gestured towards the doorway I saw Sarah at last, her mouth gaping open in horror. \"So go ahead, get the police involved. I'm sure they'd be interested to hear from you. Because if you don't do the honours, I think I just might. In fact,\" he gave a shrug and removed his foot, \"maybe it's time I pressed charges against you myself.\"\n\nDaniel cast a frantic glance at my sister as he struggled upright, suddenly looking rather pale. \"Sarah,\" he faltered as he reached for his phone. \"Believe me--this isn't what it looks like--\"\n\n\"Get out,\" she said coldly, her voice shaking with anger. \"Just go--and never come back.\" And ignoring him as he staggered out of the room, she hurried forward, her huge belly swaying as she ran. \"Becky! Oh God, are you all right?\"\n\nBut Luke was already crouching in front of me, gazing straight into my eyes. \"Nice right hook, babe,\" he murmured under his breath, cupping my cheek with his hand. \"Remind me to never piss you off.\"\n\nAnd letting out a sob, I buried my face into his shoulder.\n\n\"Is she hurt?\" Sarah exclaimed as his arms folded around me. \"She hit her head pretty hard.\"\n\n\"I'm all right,\" I mumbled, sinking into the solid warmth of his embrace, drawing strength from him as though he was a battery. But when I felt his fingers at the back of my head gently parting my hair, I gave a wail of frustration. \"No, don't! Stop fussing--I'm fine--ow-ow-ow!\"\n\nHaving found the sore place, Luke rocked back on his heels and shot me an appraising look. \"How many fingers?\" he asked with a sigh, holding three up in front of me.\n\n\"Five,\" I retorted, being deliberately obtuse. \"Stop it, you tosser, I'm fine.\"\n\n\"Becky!\" Sarah sounded outraged. \"Mr Foster, I'm sorry, I can't believe she just said that. Becky, that was so rude!\"\n\nFor a moment I stared up at her in total confusion then caught Luke's hastily repressed grin. \"That's quite all right,\" he replied, deadpan. \"I'll take that as a good sign.\" Solemnly, he reached down for my right hand, shaking his head when I gasped. \"And I'll take it that hurts,\" he said, examining my already-reddened knuckles. \"I think we'd better find you some ice.\"\n\n\"Thank goodness you were here,\" Sarah breathed, still using that over-polite, rather formal tone, the same tone Mum used when she was on the telephone. \"I don't know what would've happened if you hadn't been here to stop him.\"\n\n\"I didn't quite stop him in time,\" Luke said regretfully, sliding his hands beneath my arms and gently lifting me to my feet, grimacing when I swayed against him.\n\n\"Well, I hurt him first.\" I lifted my hand to look at it more closely, wincing as I flexed my fingers. Having never thumped anyone before, I'd had no idea how painful it would be. It felt rather as though I'd rammed my fist into a wall.\n\nSarah gave a snort of derision. \"Oh believe me, he deserved so much worse than that. But let me get this straight,\" she added, frowning as she rubbed at her lower spine. \"Daniel's going to be a father?\"\n\n\"No, he's already a father,\" I corrected, saying the words without emotion. The truth still hadn't quite sunk in. \"He has a little girl and she's eighteen months old. Her name's Issie and she's living in my flat with her mother.\"\n\n\"What?\"\n\nI bit my lip. \"Where's Graham?\"\n\n\"He had to pop into work--he dropped me off downstairs. He'll be in later. Becky...\" Sarah looked aghast. \"They're actually living in your--?\"\n\n\"Have you seen Mum?\" I interrupted. \"She's off the ventilator. Caitlin was just taking out the tube.\" But when I glanced at Luke I discovered he was gazing at me so tenderly I found myself on the brink of tears. \"Sh-she'll be done by now, won't she?\" I added hurriedly, blinking hard. \"Can we go back and see her?\"\n\nHe nodded then slid an arm around my shoulders, brushing his lips against my temple. Sarah stared, her face a picture of bewilderment. Realising she was struggling to decide whether what she'd just seen was borderline acceptable or entirely inappropriate, I suddenly wanted to laugh instead.\n\n\"I'd completely forgotten about the will,\" she said, still shooting curious glances at the two of us as we headed back down the corridor towards the intensive care unit. \"If Mum had died...\"\n\n\"Daniel's in your mother's will?\" Luke gave me a startled look\n\nI nodded. \"She had a new one drawn up not long after we got engaged. She insisted on naming each of us individually. Sarah and I get forty percent each and Graham and Daniel get ten percent each\"\n\n\"And ten percent is a lot,\" Sarah said, grimacing as she rubbed at her back again. \"Dad left Mum quite a bit of money when he died.\"\n\n\"No wonder Daniel was sticking around.\" Luke shook his head slightly. \"He must be pretty mad at me.\"\n\n\"Wait a minute.\" Sarah slowed to a halt, turning to face me. \"When did you and Daniel get engaged?\"\n\n\"What?\" I pulled a face. \"You know when. December, remember? Not last year, the year before. He made some crack about not having to get me a Christmas present then--and he didn't either, did he? Why?\" I asked, feeling my frown deepen as Sarah and Luke exchanged glances.\n\nMy sister blew out a sigh. \"Eighteen months ago.\"\n\n\"Yes, I suppose--\" And then I understood. \"Oh God.\" He'd asked me to marry him around the time his daughter had been born...\n\n\"Bastard. I don't know how he can live with himself,\" Sarah muttered furiously. \"And this girl--\"\n\n\"Janine,\" I supplied automatically.\n\n\"Janine. You saw her? Did she see you too? She knew who you were?\"\n\nI gave a rather weary nod.\n\n\"So she knew Daniel was going to marry you? What kind of woman would go along with that?\"\n\n\"A desperate one?\" Luke suggested, earning himself a glare from Sarah. \"Well, maybe you should give her the benefit of the doubt for now. She may not have known all along. Daniel lied to Becks. It's not so difficult to believe he lied to Janine as well.\"\n\n\"Sorry?\" Her eyes narrowed. \"Becks?\"\n\nLuke grinned, giving my shoulders one last squeeze as we arrived outside Mum's room. \"You go in. I'll go and get that ice.\"\n\nAs he walked away, Sarah gave me an incredulous look. \"What the hell--?\"\n\nI hastily pushed at the door before she could finish, Caitlin greeting us with another of her characteristic welcoming beams. \"There you are,\" she said cheerfully. \"We were just wondering whether we should send out a search party.\"\n\n\"Yes, well, you can blame Daniel for that,\" my sister said, already moving past me and heading straight towards our mother. \"Thank God you're awake, Mum. You're never going to believe what he's done now.\"\n\n\"Sarah!\" I stared at her and then at Mum, a part of me noting with relief that the tube was gone, her smile visible through the clear plastic of the oxygen mask now covering her face. \"Not now!\"\n\n\"She needs to know.\" Sarah bent to kiss her, her expression softening as she smiled back at her. \"My God, Mum, you had us worried.\"\n\nI saw my mother mouth the word 'Sorry' before turning her head to look directly at me, frowning slightly.\n\nSarah followed her gaze, looking rather grim. \"Becky and Daniel aren't getting back together again, Mum. She only told you that because she thought you were dying.\"\n\n\"Don't!\" Aghast now, I looked to Caitlin in desperation. \"Tell her this isn't the right time.\"\n\n\"There's never going to be a right time,\" Sarah said before the nurse could reply. \"You're always going to be thinking 'I can't say that' or 'I can't tell her this' because you think she's going to have a relapse or another heart attack or something. But let's face it, if that's going to happen, then it's better that it happens here, right? While she's still in hospital surrounded by people who'd know what to do?\"\n\n\"Sarah!\"\n\n\"It's okay.\" I felt Caitlin's hand on my arm. \"This is what you were talking about last night, isn't it? You can tell her, she really isn't as fragile as she looks. And your sister's right, this is as good a time as any.\"\n\n\"Oh God, Mum--I'm so sorry,\" I said, the words coming out in a rush as I moved to her side. \"I didn't know what to do. I didn't mean to lie to you. But it's true, it's over with Daniel.\n\nBut to my surprise, my mother didn't look at all shocked. Instead she stretched out a hand to me, smiling rather apologetically as I took it. \"I know,\" she said, her voice sounding rather croaky.\n\n\"You know?\" I shook my head puzzled. \"But--how? Who told you?\"\n\nShe smiled again, gently squeezing my fingers then said a word I didn't quite catch. It sounded rather like 'wool'.\n\n\"Sorry?\" I frowned, racking my brains for what she might've meant. \"What was that? I didn't hear you.\"\n\nShe rolled her eyes slightly then mouthed the word again. Mystified, I turned to Sarah who was staring at Mum in consternation. \"Cornwall?\" she said, shaking her head slightly. \"What about Cornwall?\"\n\nI regarded Mum with astonishment. \"You heard me last night?\" I ventured disbelievingly. \"You heard what I told you?\"\n\nSarah shot me a withering glance. \"Don't be silly. She couldn't have possibly have heard anything anyone said last night. She was fast asleep. Mum--\" She turned back to our mother, giving her a mollifying smile. \"Becky came back from Cornwall over a week ago, remember? The day after you had your heart attack?\"\n\nMum gave Sarah an equally withering glance. \"I know,\" she whispered before smiling at me again. \"You met someone?\"\n\nIt was Sarah's turn to look astonished. \"You know that Becky met someone in Cornwall?\"\n\n\"What's that about Cornwall?\" I almost jumped out of my skin at the sound of Luke's amused voice right behind me then shrieked as he clapped something cold against the back of my head before reaching around me for my right hand. \"Ice,\" he said with a chuckle, even as I felt him press another bag of the chilly cubes against my knuckles.\n\n\"Mr Foster's just come back from Cornwall,\" Caitlin put in cheerfully. \"Isn't that right? Stag do, wasn't it?\"\n\n\"That's right,\" he agreed, moving nearer until I was effectively standing in the circle of his embrace. \"Turned out to be quite a weekend.\" \n\nAnd suddenly I saw that Sarah was staring at my forearm, a startled expression crossing her face as she looked up at me then Luke then back at me. \"Your stitches are out.\"\n\nIt was difficult to repress a smile. \"Yes.\"\n\n\"Mr Foster took them out,\" Caitlin interjected. \"I offered to, but he insisted on doing the job himself.\"\n\nSarah was staring at Luke now. \"That's why you were there just now? You were taking Becky's stitches out?\"\n\nI felt him nodding, his hair brushing against my cheek. But just as I saw the look of pure astonishment crossing her face and was certain she'd guessed, there was a curious spattering noise, Sarah's gaze dropping abruptly to the floor. \"Oh no,\" she breathed, sounding horrified. \"Oh God!\"\n\n\"Whoa.\" Thrusting both bags of ice into my hand, Luke started moving around the bed, holding out his arm. \"Come over here and sit down.\"\n\n\"What?\" I stared at them in alarm. \"What's wrong?\"\n\nLuke sent me a grin, already guiding her towards one of the chairs just inside the door. \"Your sister's waters just broke.\"\n\n\"But they can't have done,\" Sarah protested, looking in dismay at the puddle she'd left in her wake. \"The baby's not due for another two weeks. Maybe that was just--\" And then she stopped again, her eyes widening in shock as she clutched at her belly, her face contorting with pain.\n\n\"Sarah!\" I gasped, rather frightened now. \"Oh God, Luke--she's--\"\n\n\"In labour,\" he finished gently, holding both her hands as he waited for the contraction to pass before helping her sit down. \"You know, I don't think this baby wants to wait,\" he told her with a smile.\n\nBut having recovered, Sarah was now staring at him, an even odder expression on her face. \"Luke?\" she said, her eyes narrowing. \"Becky just called you Luke?\"\n\n\"Cornwall,\" my mother said unexpectedly, her hoarse voice audible in the sudden silence. \"It's him,\" she added, smiling at me as I turned in astonishment. \"Right?\"\n\nWhen I nodded, Sarah gave a delighted gasp. \"He's the one?\" She gazed at Luke as he straightened up. \"You're the one who rescued her from the beach? You're that surgeon? You're the one who put those stitches in her arm?\" And then her gaze narrowed again, a truly mischievous look in her eyes. \"Oh my God. You're the one who--?\"",
        "\"Sarah!\" I interrupted hastily, now rather wishing I'd left out more of the finer detail. But then I'd thought I'd never see him again...\n\n\"I'll go and call the porters, shall I?\" I heard Caitlin ask, not even trying to conceal her amusement. \"Tell them we have a customer for Maternity?\"\n\n\"That'd be great,\" Luke said as he walked towards me, shooting me a knowing smile. \"Hmm,\" he said, gathering me into his arms. \"I'm the one who what?\" And laughing as the heat rushed into my face, he lowered his mouth over mine.\n\n*\n\nEpilogue\n\n\"So...\" After a lengthy pause, clearly intended to maximise the gravity of her words, the Registrar gave the assembled guests on the terrace of the White Sands Hotel yet another beaming smile. \"I now pronounce you husband and wife.\"\n\nHearing the immediate burst of clapping and wolf whistles that followed that statement, I turned around, laughing as I scanned the rows of delighted faces. There was Mum, looking younger than she had for years, resplendent in a pink suit with matching pink hat, my sister and brother-in-law standing to her left, Sarah holding thirteen-month-old Harry's hands in a vice-like grip. But the majority of the noise was coming from the four guys standing in the second row on the other side of the aisle, all of whom were cheering raucously.\n\n\"Luke?\"\n\nHis sea-blue eyes met mine as the Registrar spoke, the warmth of his smile declaring his love for me far more effectively than words could ever express. \"Yes?\"\n\n\"You may now kiss the bride.\"\n\n\"Oh!\" Laughing now, he placed his hands on my waist and began pulling me forward. But just as I was about to close my eyes, anticipating the pleasure of his mouth on mine, he paused, his gaze narrowing slightly. \"Actually...\"\n\nAnd suddenly, he bent down, making me shriek as he scooped me up into his arms and promptly bore me off down the aisle to the accompaniment of even more whooping and clapping, the Registrar calling after us in tones brimming with mirth. \"Hey! I said you could kiss the bride, not kidnap her!\"\n\n\"Luke!\" I gasped between helpless giggles as he reached the edge of the terrace and began bounding down the steps of the hotel. \"What the hell are you doing?\"\n\n\"I've not had you to myself in forty-eight hours,\" he said with a grin, still holding me tightly as he jogged across the road and headed for the slope that led down to the beach. \"Do you have any idea how hard that's been? If it wasn't your Mum there, it was your sister, if it wasn't your sister, it was mine...\" And pulling up at last, he lowered me down to the sand, his arms folding around me. \"Now I'm going to kiss the bride,\" he said contentedly, smiling into my eyes.\n\nI whimpered helplessly as he captured my mouth, loving the feel of his lips over mine, the way his tongue sought then danced with my own. And for a while almost everything else ceased to exist. There was nothing but Luke and me and the sound of the sea, the waves turning relentlessly against the shore.\n\nSo it wasn't until Luke finally raised his head that I realised exactly where we were, the small sandy cove deserted save for us, the cliffs to the rear sheer granite. \"Hey,\" I said laughing, turning my head to look at the rocks rising to my left, still able to picture the stocky guy in red-board shorts who'd hauled me up them to safety, remembering the scene as though it was yesterday,. \"Did you have this in mind all along?\"\n\nHe grinned, shaking his head. \"It honestly just occurred to me. But hey, we could've got married, right here, couldn't we? I could've worn those shorts and you could've worn that skimpy red bikini.\" And laughing again as I shot him a glare, he turned me around in his arms so that we were both facing out to sea. \"That's not to say that I don't love what you have on. You look stunning in that dress,\" he murmured, planting a kiss on my neck. \"But I can't wait to get it off you either.\"\n\nGiggling again, I leaned back in his arms, relishing the feel of the warm June sunshine on my face, the slight breeze barely disturbing the simple white gown I was wearing, fitted so exactly to my contours it felt rather like a second skin. And as though Luke had been able to read the next thought that crossed my mind, his hand drifted down over my tummy. \n\n\"So,\" he said softly. \"How does it feel to be the first Foster bride in generations not to walk down the aisle with a bun in the oven?\"\n\nThe words were spoken innocently enough. Too innocently...\n\nWith a gasp, I spun around to look at him, seeing from the mischievous glint in his eyes that he knew. \"How?\" I gasped, staring at him in disbelief. \"How on earth could you know about that? Even I didn't know until this morning!\"\n\nHe grinned, cupping my chin in his hands and kissing me triumphantly. \"You sent Sarah out to buy a pregnancy test.\"\n\n\"Yes...\" I gazed at him with suspicion. \"She told you? But I made her promise not to say anything! It was her idea. She put the thought in my head--it hadn't even crossed my mind.\"\n\nLuke looked amused. \"So you didn't think anything of the fact that every night for a fortnight, you've been crashing out on the couch when you got home from work?\"\n\n\"I just thought I was tired. What with all the wedding plans...\"\n\nHe rolled his eyes. \"And it didn't occur to you that the reason you suddenly couldn't stand the smell of coffee anymore might have something to do with us having made a little Tosser-Foster?\"\n\nI couldn't repress a giggle. \"We're definitely going double-barrelled then?\"\n\n\"Well, I thought we might. It's got a certain something, don't you think? Rebecca Tosser-Foster. Luke Tosser-Foster, Consultant Cardiothoracic Surgeon.\"\n\n\"Wait,\" I breathed, staring at him again. \"You knew days ago?\"\n\nHe nodded solemnly. \"Of course I knew. Who do you think put the idea in Sarah's head?\"\n\n\"But why didn't you say anything?\"\n\nHe smiled, lifting a hand to my cheek then gently touching my hair. \"You had quite enough to worry about already. I didn't want you getting stressed about that too. But I wanted you to know today. It's a Foster family tradition, after all.\"\n\nAnd still smiling, Luke pulled me in for another of those wonderful kisses and once again, time seemed to stand still.\n\n\"Hey!\"\n\nThe sound of Tim's voice carrying on the breeze broke us apart at last. He was standing on the low rocks at the very corner of the cove, Luke's nine-month-old niece Maisie--my niece now, I realised with a rush of pleasure--slung across his hip. \"The Registrar wants you to come back and sign the register!\" he shouted. \"Oh, and the photographer wants to know if you still want photos of this joyous occasion?\"\n\nLuke grinned at me then held up a hand to his best man. \"Okay!\" he called back, laughing. \"Tell them we'll be there in a minute.\"\n\n\"You'd better be!\" Even from this distance, I could see Tim looked nervous. \"Are you two crazy?\" And turning slightly he motioned towards the thin band of sand separating the rocks from the rolling waves. \"The sea's on its way in, you know. Do you want to get caught by the tide?\"\n\nLuke and I both glanced up at the rocks before smiling at each other in unison. Then hand in hand, we strolled around to the beach and made our way back up the sand.\n\n*\n\nThank you so much for reading. Your votes and comments are all greatly appreciated\n\nLily\n\n-x-  "
    ],
    "authorname": "evanslily",
    "tags": [
        "tide",
        "surgeon",
        "hospital",
        "wedding",
        "romance novella",
        "drama"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/caught-by-the-tide-ch-10"
}