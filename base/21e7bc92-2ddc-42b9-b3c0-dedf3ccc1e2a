{
    "title": "Mom Will Do Anything! Ch. 02",
    "pages": [
        "Author's Note: I'd like to thank everyone who voted and commented and faved, Mom will do Anything, Ch 1. The story went over much better than I expected. So, okay, whereas the first part of this tale was long on buildup and a little short on the erotica...I think this chapter is going to more than make up for it as Vicky is more than ready to give good old Uncle Malcolm a show he'll never forget. Enjoy. LC68\n\n*****\n\n\"Awfully quiet.\" Mom said as we drove down ninety five, heading for downtown and the Biltmore.\n\n\"Yeah.\" I shrugged, \"I really don't know what to say.\"\n\n\"Don't blame you, not exactly a normal topic of conversation.\"\n\nI looked over at her and for the tenth time since she had come downstairs from getting dressed after breakfast, wondered what she was wearing. Despite it being a mild day, Mom was wearing a long black dress coat that only left her legs visible from the knees down, revealing white stockings and a pair of plain red flat shoes. Mom had a bag next to her and I figured it contained shoes more suitable to the occasion.\n\n\"You can say that again.\" I said softly as I looked out the window, watching the traffic.\n\nMy stomach was in knots and two thoughts kept running through my mind. The first was I was a half hour away from having sex with my mother. The second was I had to admit if it did not involve my uncle watching I wasn't sure I minded the first part. I'd stayed awake for a long time last night, holding my mother close and at times thinking how amazing she felt, how nice it was to hold her so sweetly. \n\nBut a good part of the time all I was thinking about was how wet her pussy had been and how hard she made me cum. I'd been with a handful of girls between high school and college and they had been fun, but the way mom had just come in and took over. How confident she was and how she knew just what she wanted and how to get it. Those words echoed what my Uncle said and I thought about how he had mentioned it wasn't just pure lust for his mother, but the emotional bond as well.\n\n\"The best of both worlds\" he'd pretty much said, a mother who could be your whore or your sweet lover. I'd spent half the night hard as a rock, the other part yelling at myself for being that way.\n\nMy mother was heartbroken, exhausted and desperate. She wasn't thinking straight and I should have refused her, but I couldn't. I told myself she was right; that I couldn't tell her no because I was never supposed to. But that was a cop out, last night wasn't a normal situation and I should have told her to leave. Instead I let her just...pretty much have her way with me.\n\nI'd fallen asleep and then awoke at five when mom had sat up. She kissed me on the cheek and said she was going to slip into her room so the girls wouldn't see her coming out of mine. I'd fallen asleep until seven then got up to have breakfast with mom and the girls before she took them to school. During the meal mom and I barely looked at each other, but when our eyes met I saw the same guilt in her eyes that I was feeling. \n\nYet on a couple of other occasions I saw her looking at me oddly and wondered if she, like I did, had some mixed feelings about last night, she did say she came for real after all. After she'd taken the girls to school I'd showered then went online for awhile. On a whim I went to one of my favorite free porn sites and searched mother/son. \n\nPages of videos came up, but pretty much all step mother, but with the step son calling her mom. I watched three ten minute clips and thought my cock was going to explode in my pants because I kept seeing my mother as the women in the videos. I had hoped this might help me for later, but it was getting frustrating to not be able to get off while watching and shut the lap top down.\n\nI dressed as mom had asked me too in a pair of skin tight jeans she used to yell at me for wearing because she could 'see everything' as she's once told me, and to not wear underwear, making the jeans more awkward to wear, but it's what she wanted. Then a black sleeveless t-shirt that showed off my well tanned arms. I really didn't think it mattered what I wore, Uncle certainly had no interest in me.\n\nWhat he did have interest in was mom. He could claim all he wanted was to watch us, but he'd wanted mom for a long time and was going to enjoy watching her for more than just his oedipal fantasies. I hoped to hell he wasn't going to be talking the entire time through and...\n\n\"Hey, come back to Earth.\" Mom said, \"We're just about there.\"\n\nI was surprised to see we had taken the exit and the Biltmore was coming up on our right.\n\n\"You, okay, honey?\"\n\n\"Um, I...I don't know.\"\n\n\"It will be fine, you were fine last night.\"\n\n\"That...Uncle wasn't there and we're going to do a lot more.\"\n\n\"We are and it will be okay. He'll be there, but off in a corner, you just look at me and focus on me.\" She looked over and winked, \"I'll try to hold your interest.\"\n\nMom pulled up to the valet and a feeling of the surreal came over me as we exited the car and mom handed him the key. As we walked through the glass doors and into the foyer it dawned on me this was the point of no return. Either I went through with this and made mom happy or I backed down and we would be looking for a place to live and killing ourselves for the next few months. \n\nBecause mom had offered this there was no way Uncle would agree to help otherwise. Mom took my hand and squeezed it as we entered the elevator. Fortunately we were alone and mom put her arm around my shoulders.\n\n\"I love you, Ryan.\"\n\n\"Love you too, mom.\"\n\n\"I mean it.\" She turned me to face her and took my face in her hands. \"No matter what happens in that room, know that I love you with all my heart and that is why we're doing this. I hate to say think of the girls during something like this, so just think of family. Family does whatever they have to, okay?\"\n\n\"Yes.\" I hugged her pulling her close to me, \"I do love you mom.\"\n\n\"I know, I felt it last night when you held me. The first part was wrong, but lying there with you felt pretty damn right.\" She kissed my cheek, \"But that's not what today will be. Today I'm your slut mommy and you're my horny son who wants to fuck his hot mother. That's what we are for the next hour or so and after that, back to normal.\"\n\n\"That might not be easy.\" I said.\n\n\"We'll worry about that later, right now.\" The elevator doors opened to a long carpeted hallway. \"It's time to find sixty thousand reasons to not worry about the future.\"\n\nMom gave me another quick kiss on the cheek and walked ahead of me down the hallway. I stared at the back of her jacket, again wondering what was under it. She still had the bag with her and even as my butterflies increased I felt a twitch between my legs at the thought of my mother in some slutty outfit.\n\nUncle must have been waiting by the door because before we had even reached it, he opened it.\n\n\"Vicky!\" he smiled, kissing her cheek, \"I have to admit I wasn't sure you'd actually show up.\"\n\n\"I admit I thought about it.\" She said as she passed him and entered the room.\n\n\"Ryan.\" Uncle put his hand on my arm. \"I know you're not happy about this, but.\" He leaned over and whispered in my ear, \"You will thank me later, trust me.\"\n\n\"Yeah...sure.\" I nodded entering the room.\n\nI released a long breath as I heard the door close behind us. Uncle walked past me over to a large armchair in the corner and putting his hand on it, asked, \"How about a drink? You know take the...\"\n\n\"Absolutely.\" Mom said before he could finish. \"If you have Jack, I'll take shot, maybe two.\"\n\n\"Coming right up. Ryan, would you...\"\n\n\"He'll have the same.\"\n\n\"I..will?\"\n\n\"Yes.\" Mom said standing over near the huge king sized bed that dominated the room. \"Don't argue about it, how many mothers would tell their son to do a shot?\"\n\n\"More than would tell him to lick her pussy, that's for sure.\" Uncle laughed from the bar in the corner as he filled the shot glasses he had lined up.\n\n\"Malcolm, let's talk about the rules for this.\" Mom said as she walked around the bed and sat on the side of it that faced away from us.\n\nShe put the bag down on the floor and leaned over. Uncle waved me over and handed me a shot glass that was filled close to overflowing.\n\n\"I'm sure this is the first shot you've ever had.\" He winked.\n\n\"Of course.\" I winked back.\n\nUncle gently tapped his glass to mine, \"Bottom's up.\" He tipped it back downing the shot in a long swallow.\n\nI did the same, wincing as the whiskey burned down my throat, damn that was strong! I blinked and saw Uncle grinning at me. \"Want another one?\"\n\n\"I...don't...\"\n\n\"Give him another one.\" Mom spoke while coming back around the bed.\n\nAs Uncle slipped the glass from my hand, I looked down and saw she was wearing red stiletto heels that had a strip of leather running up the top of her foot that wrapped around her ankle. The heels were high enough to make her my height and our eyes met as she came over to stand next to me. She looked completely serious and my stomach tightened again, it was almost time. \n\n\"Here you go kid.\" Uncle handed me the refilled glass and passed one to mom.\n\nHe held his glass up and the three of us tapped glasses as he began to down his, Mom said, \"My bottom's up.\" And downed the shot. \n\n\"I...shit Vicky!\" Uncle choked, \"Don't do that while I'm drinking!\" he coughed, but it turned into a laugh, \"That was a good one.\"\n\n\"That's what this is about right?\" Mom asked while I turned my head so they wouldn't see my eyes watering from the second shot. A couple of more and I wouldn't remember a damn thing. \n\n\"Not just me and Ryan, but you finally getting to see me the way you've always wanted to.\"\n\n\"I won't deny that.\" He grinned when Mom held her glass out and he refilled it as well as his own, he glanced at me and shook his head, \"I need you awake, kiddo.\"\n\nHe and Mom tapped glasses again and I noticed she barely blinked, neither did uncle and that was his third one.\n\n\"Okay, let's see what we came here for.\" He said.\n\n\"When I see what we came here for first.\" Mom handed him the empty glass.\n\n\"Fair enough.\" Uncle reached into his back pocket and removed a thick envelope and opened it to mom, \"You want to count it?\"\n\n\"Damn.\" I whistled seeing the thick stack of hundreds.\n\n\"I trust you.\" Mom took the money and slipped it into the pocket of the overcoat.\n\n\"The check.\" Uncle produced it and held it up for her to see. I noticed it was drawn on his personal account not under Stone Cold Productions.\n\n\"Come on, no write off?\" Mom smirked; noticing as well as she took it from him \"This is a porn shoot, right?\"\n\n\"A personal one.\"\n\nMom looked around the room and he said,\n\n\"Six cameras all installed at different angles. Tonight I'll edit them all down to the best possible footage.\" He smiled, \"I'll send you a copy if you want it.\"\n\n\"No need. We'll be putting this behind us when we walk out the door.\"\n\n\"Cute you think that.\" He grinned.\n\n\"What the hell does that mean?\" Mom asked.\n\n\"Nothing.\" He waved his hand.\n\n\"Rules.\" Mom said.\n\n\"I sit here.\" He tapped the chair, \"But I might move to see better, but I won't get too close and my hands stay to myself.\"\n\n\"You don't degrade me.\" Mom told him firmly. \"It's your money and your show, if you want to suggest something, fine, but no, \"Look at you, you fucking whore.\"\n\n\"I...I wouldn't say that.\" He actually looked put off, \"Really.\"\n\n\"Good. Keep it in your pants; you have the rest of your life to jerk off to it.\"\n\n\"Yes, ma'am.\" He laughed, \"I want a souvenir other than the movie, leave me something.\"\n\n\"Tell you what, you can have my damn thong and you can sniff it while you whack off.\" She smiled, \"I'm sure Ryan is going to get his slutty mother nice and wet you'll be able to get a nice whiff of my pussy.\"\n\n\"Oh.\" he whistled, \"I don't think I'll have to suggest much.\" He looked over at me, \"Can I have a word with Ryan?\"\n\nMom hesitated, then nodded, \"Make it quick, oh and Malcolm?\"\n\n\"What is it?\"\n\n\"I am not taking it in the ass.\"\n\n\"I...I didn't want you to.\" He shrugged, \"Sort of ruin it, I think.\" He seemed to be mulling it over.\n\n\"Forget I said it. Go ahead.\"\n\nUncle gestured for me to follow him and walked a few feet away. I followed and putting his heavy arm around me he said, \"Ryan, I know you think I'm sick and you might hate me for this right now, but you will thank me later, seriously.\"\n\n\"Whatever.\" I rolled my eyes.\n\n\"Just relax and enjoy this Ryan, this is...it seems wrong, but its special Ryan and you'll see how special later.\"\n\n\"What do you mean?\"\n\n\"You'll see.\" He smiled, \"Lucky boy, Ryan. Very few sons get to experience their mother as a woman.\"\n\n\"Let's just get this over with.\" I told him and without waiting for an answer walked back over to mom who was standing by a chair next to the bed, the coat still on.\n\n\"Okay.\" Uncle sat back in the large chair, and then laughed, \"Time's money.\"\n\nMom took my face in her hands and looking me in the eye whispered, \"I love you, Ryan.\"\n\n\"Love you too,\" I said softly. I could feel her fingers trembling on my face, but her voice was steady when she continued to whisper.\n\n\"Now trust me, follow my lead and say and act the way he would want you to, it's okay, you're not going to upset me, just think of all those dirty movies you watch.\"\n\n\"Just me?' I forced a grin.\n\nShe smiled back.\"What can I say, I like porn.\"\n\nMom's smile faded when uncle cleared his throat and releasing my face, mom grabbed the ties to her coat. \"Just play along.\" She opened the coat and slipped it off.\n\n\"Wow, what a long night at the club.\" Mom declared, tossing the coat onto the floor. \n\nMy eyes widened when I saw mom was wearing the school girl outfit; the white thigh high stockings and the barely ass length plaid skirt. The top however was very different and what had really caught my eyes. Her white button shirt was sleeveless and tied between her tits leaving her flat stomach exposed.\n\nHer stomach wasn't the only thing displayed as the shirt was tied tight enough to show she wasn't wearing a bra and her dark nipples were visible through the white material. Her nipples were already erect and it certainly wasn't cold in here. Mom had already gotten herself visibly turned on, even with uncle here which meant she was into this, she had to be, or could she fake it to this degree.\n\n\"Something wrong, honey?\" Mom asked, \"You're staring at me?\"\n\n\"Oh, uh...I...\"\n\n\"Ryan, are you staring at your mother's tits?\" she asked her hands on her hips.\n\n\"I like that.\" Uncle said from behind the chair as he sat back sipping the drink he'd poured himself.\n\nI started to look over to him, but mom put her hand on my cheek and made me look at her.\n\n\"I'm talking to you, Ryan.\" Her eyes bored into mine, \"Answer the question, are you staring at your mom's tits?\"\n\n\"I...yes.\" I said softly and feeling embarrassed at saying it started to lower my head.\n\n\"Perfect,\" Uncle said quietly, \"Just perfect.\" There was no mockery in his tone and for the first time I thought of what this must actually mean to him in the way of how he had spent years fantasizing about how it would have been with his own mother.\n\n\"Then look at them.\" Mom again, directed my face to her, \"Go ahead and stare, you do all the time anyway, don't you?\"\n\n\"I...\"\n\n\"Don't even try to lie to me.\" Mom let my face go and put her hands on my arms as she spoke. \"I see you looking, Ryan, every night I come home from work you can't take your eyes off me.\"\n\n\"No, I...really I don't.\" True up until last night anyway.\n\n\"Not just my tits either, but all of me. My legs, my ass,\" Mom stepped back and spread her arms, \"You like this look don't you, Ryan? You like me dressed like a slut.\"\n\n\"I don't like them.\" I shook my head, \"I don't like those guys looking at you.\"\n\n\"But you like to look.\" She laughed, \"It's okay if my son looks at my ass? Well here, take a look.\" Mom turned around and flipped her skirt up exposing her ass.\n\nThe thong was nothing more than a red string between the cheeks of her ass with a little red bow at the top of it. Mom gave it a playful shake and to my amazement my cock stirred. Her ass was incredible her cheeks firm and round and I found myself wanting to reach out and fondle them, to get on my knees and kiss her cheeks. \n\nWhether it was the booze, the embarrassment of my uncle watching, lust or a mixture of all those things, I felt my face grow hot and my ears were burning. As mom turned back around to face me, my eyes locked onto her nipples and I saw she was breathing hard and my cock was now swelling, straining against the tight jeans.\n\n\"You like that, you like mommy's ass?\" She asked me, \"You think about that ass in the air for you, Ryan?\"\n\n\"No.\" I shook my head, \"Mom, I would...\"\n\n\"Bullshit.\" She pointed at me, \"I know you want me, I've seen all that mother son porn on your computer, you love me dressing slutty because you want me to be your slut, don't you?\"\n\n\"That...that wouldn't be right.\" That wasn't a lie.\n\n\"I'm not talking about right; I'm talking about what you want. Now tell me what you want.\"\n\n\"I...don't know what I want.\" \n\n\"Yes you do.\" Mom grabbed the knotted shirt. \"You want to see mommy's tits.\"\n\n\"I...\"\n\n\"Tell me and I'll show them to you.\" She pulled on the not causing the shirt to loosen and fall away from the inside of her breasts.\n\nStaring at the curve of her breasts, I would be lying if I said I didn't want to see them, but here and with Uncle watching and paying it seemed more wrong than ever.\n\n\"Go ahead, baby.\" Mom said more softly, \"Tell your mother how bad you want to see what you're not supposed to.\" She gave me a wink that Uncle wouldn't be able to see and taking a deep breath I blurted out,\n\n\"Mom, please show me your tits!\"\n\n\"Oh, and with manners.\" She sighed, \"Someone raised you right.\"\n\nI ignored Uncle's laugh and watched as Mom pulled the shirt open and let it fall away.\n\n\"Oh, damn.\" I whispered at the sight of my mother's breasts.\n\nThey were a little bigger than I had imagined, still not big, but perfectly round and sitting up proudly on her chest. Her rose colored nipples were hard and pointing directly at me. \n\n\"You like?\" she cupped her breasts and stroked them with her nails, \"They look as good as you thought they would?\"\n\n\"They're perfect.\" I said, unable to take my eyes from her nipples.\n\n\"Yes they are.\" Uncle muttered, \"Lucky bastard.\"\n\nMom released her tits and slid the shirt off so she was completely topless. Stepping up to me, she grabbed the bottom of my shirt and tugged it from my jeans, \"My turn, if I'm not wearing a top you shouldn't be either.\"\n\nI raised my arms robotically, my eyes locked onto her tits as the bounced fetchingly while she stepped forward and pulled my shirt over my head, she tossed it away and ran her hands up and down my chest and stomach.\n\n\"Mmm, my baby's not a little boy anymore is he?\" She saw where my eyes were fixed and smiling, grabbed my wrists as she had last night, \"Go ahead, honey, I didn't show them to you to tease.\"\n\nI hesitated, trying not to think of uncle next to us and with smile, she pulled my hands up and placed them over her tits.\n\n\"Oh.\" I gasped as I felt her hard nipples pressing into my palms.\n\n\"Hmm.\" Mom moaned as she slipped her hands over mine and moved them up and down, sliding them across her firm warm flesh. \"Yes, go ahead, baby, play with mommy's tits, keep those nipples nice and hard.\"\n\nHer hands went back to caressing my chest, this time running her nails lightly over my skin while I fondled her tits. I cupped them as she had done, giving them a squeeze and stroking her nipples with my thumbs. \n\n\"Oh yeah.\" Mom released a sexy groan that had my cock straining to break free of my pants. \"Look at you, you bad boy, playing with your mother's titties.\"\n\nShe leaned in and kissed my neck causing a soft moan to escape me and out of the corner of my eye I saw Uncle lean forward in his chair, his elbows on his knees, staring intently at us. Mom kissed me again and this time let her lips slide along my neck and up to my ear where she flicked her tongue playfully, while moaning, \"Oh, that feels good, honey.\"",
        "\"Like playing with your mother's tits, Ryan.\" Uncle asked. I nodded, dumbly and he said, \"Then tell her, don't be shy Ryan tell her how much you want her.\"\n\n\"I hope you do.\" Mom purred as she kissed the other side of my neck, \"Because I want you. Hmm you might be a bad boy, but I'm being a bad mother, letting you touch me.\" She shook form side to side, working her tits across my hands, \"But I like it, I like being your bad mommy, your...slut mommy.\"\n\nShe was breathing even heavier, her tits heaving beneath my touch, \"That's what you want isn't it baby? You're trying to be nice, but what you really want is your mother to be a dirty fucking whore for you isn't it?\"\n\n\"I...\"\n\n\"You want me to take off my clothes and get on my knees and suck my son's cock don't you? You want to cum in your mother's mouth and then suck her pussy and fuck her like the little pig she is, don't you?\"\n\n\"Mom, \"I began, trying to form the words, \"I want...oh!\"\n\n\"Oh yes you do!\" Mom cried as she grabbed my hard throbbing cock through my jeans and rubbed it, \"Fuck you're hard, you bad boy! You can't lie when you have this big hard cock in your pants, can you?\"\n\n\"Damn look at that.\" Uncle whispered, \"He's soaking through his jeans.\"\n\n\"That's because my bad little boy isn't weaning any underwear is he?\"\n\n'No.\" I moaned as she rubbed my cock while once again kissing my neck.\n\n\"This cock wants out, doesn't it baby?\" Wants to find its way into your mother's slutty mouth and her tight wet pussy, doesn't it?\"\n\n\"Yes.\" I said softly\n\n\"Louder.\" She squeezed my cock. \"Don't be a little boy Ryan, be a man, a man who wants to fuck his mother like the slut she is. I want to be your whore Ryan, all you have to do is be a good son and tell mommy how bad you want her!\"\n\nI started to speak, but she continued, ramping herself up and sending shivers through me, \n\n\"I want you too, baby. I want you so bad. That's why I stay dressed when I come home from work. I love watching you trying not to look at me. I love you staring at my tits and ass. That's why I ask you to rub my feet! I lay there with my pussy dripping wishing your hands would work up my legs and slide under my skirt and see how wet I am.\"\n\n\"Jesus.\" I said, \"Mom, I...\"\n\nI stopped when she pulled my hands from her tits and slipping her arms around me pulled me against her. Her nipples poked into my chest and her tits squashed pleasantly against me as she held me close while staring me in the eye, our lips only inches apart.\n\n\"Remember last time Ryan? I opened my legs and gave you a peek, let you see my thong, but you were a good boy and looked away! I went upstairs and stroked my clit and came to the thought of you getting on your knees, pulling that thong over and licking my pussy the way I know you want to!\"\n\n\"Then I thought about sucking that young hard cock, wondering what it would be like as a mother to have her son hard and helpless in her mouth moaning, begging, twitching, telling me how to suck him and then feeling him let go and having my mouth filled with my son's cum.\"\n\n\"Fuck me.\" Uncle said. \"Christ Vicky...Jesus Ryan what the hell are you waiting for kid?\"\n\nWhat was I waiting for? Mom was moving side to side, her nipples caressing my chest and she had dropped her hand back down between us and was rubbing my aching dick.\n\n\"Just tell me Ryan.\" Mom said, \"Just tell mommy you want her and I'll be your slut, right here, right now, everything you've ever wanted from me and everything I've always wanted to do to you. Just tell me.\" She ran her pink tongue across her red lips, \"I want you so bad, baby, please tell your mother you want her.\" \n\nThe playful smile left her face and her eyes softened, leaning in and placing her lips in my ear she whispered, \"Tell me you want me, baby, please? I want to hear you say it.\" Her words were soft and had an odd tone to them. She punctuated her sentence by giving me a soft sweet kiss on my lips, \"Please.\"\n\n\"Mom, I...I want you to be my little...\" I paused then said, \"Screw it\" and grabbing her face in my hands kissed her hard.\n\nMom gasped in surprise as my lips devoured hers and my hands slipped around so they were in her hair. I kissed her deeply and passionately and after a moment of surprise, mom's lips parted and worked eagerly against mine.\n\n\"Look at that.\" I heard uncle say and again with no hint of anything other than excitement in his voice.\n\nMom opened her mouth and unlike last night when I had tried to hold back, my tongue plunged into her warm mouth and I moaned when it was met with hers. Her hand was fumbling with my jeans and as we kissed my hands slid down from her hair and caressed the soft smooth skin of her back. \n\nMom moaned into my mouth as our tongues danced across each other and her lips were driving hard into mine. She was rocking back and forth and when my hand reached the small of her back she thrust her hips hard into me and raised up on her toes, telling me to go lower. I worked my hands downward and cupped her ass through the skirt. Mom whimpered and worked her ass into my hands. \n\nMy fingers found the hem of the skirt and pulling it upwards, grabbed the bare cheeks of her ass. She moaned when I squeezed them and spread them open. My jeans popped open and mom's hand pushed into them. I gasped when she found my cock and rubbed her fingers along the shaft. Mom removed her lips from mine and lifting her head shoved my face into her neck. \n\nI sucked hard on the soft skin between her neck and shoulder and she moaned loudly, \"Oh, someone does want his mommy!\"\n\nI was kneading the firm cheeks of her ass and whimpering softly into her neck as she teased my cock which was bent awkwardly in my pants. \n\n\"God, that's a fine ass.\" Uncle whistled. \n\nEven hearing him and knowing he was there was not dampening my desire. My mother was moaning and writhing against me like a porn star, a total slut in heat and I was responding in kind. I slipped my fingers inside the string between her ass cheeks and slid them down the curve of her ass. Mom stiffened against me and opened her legs further for me. \n\nThat move caused a wave of lust to flow through me and I shoved my hand down between her legs and moaned when my fingers found her sopping wet pussy.\n\n\"Oh!\" Mom gasped in my ear \"That...feels good!\"\n\nI rubbed my fingers through her slick slit, wishing I could see her pussy, but her lips were on my neck, her nipples in my chest and she was teasing my cock with her fingers, so it wasn't a bad thing being where I was right now. \n\nMom's fingers were running through my hair and she was working her ass so my fingers were sliding up and down her pussy. She gasped each time they came in contact with her.\n\n\"Christ I can see how wet you are from here.\" Uncle breathed.\n\nMy hand worked the length of mom's pussy and she whispered, \"Stop.\"\n\nI froze where I was and mom eased herself up and then down, my fingers sank an inch or so into her pussy and mom pushed down harder and cried out as my fingers penetrated deeper into her wet heat.\n\n\"Fuck\" she groaned and worked her hips up and down. \"How's mommy's pussy feel baby?\" she wiggled her hips moving my fingers inside her, \"Bad boy, fingering your mother!\"\n\nI kissed her neck as my fingers worked as far in as they could at the awkward angle and whimpered when she managed to work her fingers around my shaft and pump my cock a few inches.\n\n\"That's so hard.\" She purred, \"And my pussies, so fucking wet for you, but this is a tease.\"\n\nShe pulled back and my fingers slid out from inside her. Mom gave me a hard push that sent me sitting down onto the chair in front of her and immediately climbed onto me, resting her knees on my thighs and putting her hands on my shoulders. This put her tits directly in front of my face and seeing her nipple that close, I couldn't resist.\n\n\"Fuck yeah!\" Mom called out as my lips wrapped around her nipple.\n\nWe moaned as I sucked her swollen flesh into my mouth and grabbing the back of my head, she wrapped her fingers in my hair, arched her back and shoved her tit into my mouth. I opened wide, not just taking in her nipple, but as much of her tit as I could into my eager mouth.\n\n\"Suck that tit!\" Mom called out, her nails digging into my scalp, \"Look at you sucking on your mommy's tit!\" she turned to the side offering me her other nipple which I gladly accepted. \"Look at me letting you!\" she moaned, \"That's right, baby, I'm a slut for my son, my young sexy son who's going to make his mommy very happy with his nice big dick!\"\n\nMom leaned over and whispered in my ear, \"Spread my ass open, give him a good look at my pussy.\" She sighed as my hands worked their way down to her ass and opened her up, \"That's your pussy he's looking at Ryan, mommy's pussy is your pussy and I can't wait for you to make it yours.\"\n\n\"But first.\" She said so Uncle could hear, \"I want to see what my naughty son has for his slutty mom.\"\n\nMom slipped off my knees, grabbed the sides of my jeans and pulled. I had a brief moment of awkwardness at realizing I would be naked in front of my uncle, but once more, my eyes found my mother's tits and focusing on those rosy nipples, that were now glistening from her son's tongue, I lifted up and let her pull my jeans down.\n\n\"Hmm, oh, honey, look at that beautiful cock!\" Mom cooed as she yanked my jeans down to my knees then to the floor causing my throbbing cock to spring free.\n\n\"Runs in the family.\" Uncle laughed, and then said, \"You can't fake that, Ryan, you want mom's pussy and you know it.\"\n\n\"And he's going to get it.\" Mom said as she slipped my shoes off, \"He's going to taste it and fuck it all he wants,\" she pulled my pants and socks off and pushed them aside, \"But not before I taste that amazing cock.\"\n\nMom put her hands on my thighs and leaning over my cock licked her lips, \"My son's nice and hard for his mommy isn't he?\"\n\n\"Yes.\" I breathed as I watched her mouth inches from my yearning cock.\n\n\"You want mommy to suck your cock, baby? Want me to give you that blow job you've been dreaming of?\"\n\nShe lowered her mouth and breath on my cock. Just the feeling of her hot breath caused it to twitch and I moaned, \"Please, please mom.\"\n\n\"Please mom what?\" she looked up at me and her big brown eyes were filled with lust.\n\nThat's when it struck me this couldn't just be an act, it couldn't be. My mother was really into this. I was as well; if I didn't want this my cock wouldn't be ready to pop. Had all this come from last night's little rehearsal or was Uncle's theory right? That all sons and mothers had a deep seeded attraction for each other?\n\n\"Well?\" Mom blew on my cock again.\n\n\"Tell her what you want Ryan.\" Uncle called out, then softening his voice added, \"Please.\"\n\nAs much as I wanted it, I didn't share my mother's motivation of dirty talking. I recalled the porn I'd watched earlier and staring at my mother's inviting red lips got the words out in a rush.\n\n\"I want my slut of a mother to suck her son's fucking cock.\"\n\n\"Goddamn.\" Uncle blurted out, \"That's my nephew!\"\n\nMom winked at me and placed a soft kiss on the tip of my cock. She raised her head and a thin trail of precum followed her lips and hung between her face and my cock. \n\n\"Hold her hair Ryan, I can't see.\"\n\nMom reached up and gathering her long hair handed the end of it to me. My fingers trembling, I took it and wrapping it around my hand placed it on the back of her head. Mom slurped the sticky line of precum back to its source and this time wrapped her lips around the head.\n\nShe sucked hard, her cheeks hollowing with the effort and I cried out in pleasure and surprise at the feeling of the precum being sucked from my cock. Mom opened her mouth and let the pre cum drool out and onto my cock. Grabbing it, she pumped it slowly in her hand and I groaned as her now slick hand slid along my hard shaft. \n\n\"Like how this nice long cock looks in my hand?\" \n\n\"I...I bet it would look better in your mouth.\" My reply surprised me, not just the words, but that they had come so easily. \n\nMom smiled and it seemed as if she relaxed a little, \"You telling me to stop teasing and blow you? Oh, you are a bad boy.\"\n\n\"And you're nasty slut.\" I replied, my eyes on her as she had told me to do before we'd started, \"Who wants to suck her son's cock\" I smiled, \"And I was raised to never tell my mother no.\"\n\n\"Priceless!\" Uncle clapped his hands.\n\n\"And I always reward my son when he's a good boy.\"\n\nMom licked her lips and opened wide took my cock deep into her mouth. \n\n\"Oh!\" I moaned at the feeling of my mothers, yes my mother's mouth surrounding my cock.\n\nMom opened wider and worked my cock all the way down to the base of my shaft. As she did, she sank to her knees between my legs and slowly shook her head back and forth, swirling her tongue around my cock before slipping it out and caressing my balls with it.\n\n\"Wow,\" Uncle said, \"Damn I knew you'd be a hell of a cock sucker.\"\n\n\"Keep it to the show.\" I said, without thinking. \n\n\"I..sorry.\" Uncle said softly.\n\nMom blinked her eyes at me as if saying thank you. Not that she needed to, my cock buried in her mouth was pretty much making everything seem pretty damn good. Mom's eyes were on mine and she teasingly worked her mouth back up my cock, her tongue dancing around my shaft, before releasing it with a loud wet popping sound.\n\nSome spit ran down her chin and wiping at her mouth she sighed, \"I do love sloppy blow jobs.\" She then shocked me by spitting on my cock and stroking it with her hand. She opened her mouth once more and this time let a long trail of saliva mixed with precum drool out onto me. Mom quickly took me back into her mouth and bobbed her head rapidly.\n\n\"Oh fuck.\" I moaned, my hand tightening in her hair.\n\nMom was making loud slurping noises and moaning like a goddamn porn star as she was sucking me and I noticed her hips moving, grinding in circles totally turned on while blowing her son. Her mouth felt amazing, but at the moment there was so much spit it was teasing me. She slowed down and began taking me all the way down to my balls each time, causing me to moan and add for Uncle's benefit.\n\n\"My slut mommy really knows how to suck her son's cock.\"\n\nUncle's benefit? Who was I kidding? That sounded damn good and mom's loud moan following my words and the look in her eyes told me she was enjoying it as well. Mom removed my cock from her mouth amidst another trail of spit.\n\n\"That's because a mother has to take good care of her son.\" She pumped my cock for emphasis, \"Am I taking good care of my baby?\"\n\nMy reply turned into a started moan when she pushed my cock against my stomach, lowered her head and sucked my balls into her mouth.\n\n\"Oh, mom!\" I groaned like an idiot as she swirled her tongue around my swollen balls. She was slowly stroking me as she sucked on first one of my balls, then the next. She alternated sucking with tonguing them and I was squirming and whimpering in the chair as my mother continued to bathe my balls with her mouth. \n\nMom sucked both my testicles into her mouth and looked up at me, her eyes wide and bright, she rocked her head back and forth, gently tugging on my balls with her mouth, while her tongue caressed them.\n\n\"Jesus.\" I moaned, I'd never had a girl even lick my balls before, let alone put on a show like this. \n\nSpeaking of shows, I took a quick look in Uncles direction and saw him staring intently at us. I noticed his left hand was on his crotch, rubbing his cock through his black jeans. There was a look of absolute desire on his face, but something else a look of...delight. He looked like a kid on Christmas who had just opened the gift he'd wanted all year. \n\nMy eyes quickly went back to the gift I was getting, the gift of a mother giving her son a mind blowing blow job. Mom ran her tongue up my balls then along the length of my shaft, before rubbing my dripping cock along her soft cheek.\n\n\"How's your cock look in Mommy's face, baby? You like that? Your nice hard dick making my face a sticky mess?\"\n\n\"You love it.\" I told her a she turned her head, and slid the tip of my cock along her face, \"You love your son's cock.\"\n\n\"I love everything about my son.\" She kissed my cock affectionately, \"Especially his beautiful cock.\"\n\nShe resumed sucking on me and I sighed in appreciation as she took her time, bobbing her head in a slow steady rhythm. My legs were shaking and my balls were tightening as she worked my cock with her hand and mouth. I was getting close and trying to hold off stopped watching the lust inspiring sight of my cock working in and out of my mother's mouth and looked down her back. \n\nI took in the white thigh highs and fuck me heels before looking down at the soft skin of her back. Her skirt was still on, but I could see the cheeks of her ass and had a vivid image of fucking her doggy style, mom on her knees that fine ass in the air, her dark hair across her back. My cock twitched and I whimpered softly.\n\n\"Aww, someone wants to come for his mommy doesn't he?\"\n\n\"I...oh yes.\" I groaned as she pumped my cock while fluttering her tongue.\n\n\"Hmm, you want to come in mommy's mouth or all over her slutty face?\"\n\n\"I...\" I envisioned spraying my come all over my mother's face, but also the feeling of my cock squirting into her mouth.\n\nAs I sat there trying to picture which taboo experience would be better. Mom continued to swirl her tongue around the head of my cock and rubbing it against her soft red lips. Some of that red was smeared all over my cock and seeing her lovingly tease my cock caused my balls to contract and I moaned, \"Whatever, my mommy wants.\"\n\nTo my surprise she turned to face, Uncle, \"Well, Malcolm, your show, what do you want?\"\n\nAs she spoke she continued to rub my cock in her face and my Uncle stared at her totally speechless.\n\n\"Come on, mister porn.\" Mom sucked my head into her mouth for a moment, before releasing it, \"Where did you want it when you thought of your mother? Would she have swallowed for you? Would she have let you paint her face like a whore?\"\n\n\"I...oh God Vicky.\" He whispered, \"This is...so...anyway you want it. I want it to be how you want it.\"\n\n\"Cop out.\" Mom put her free hand on my balls and fondled them.\n\nI whined in frustration and she laughed, \"Poor, baby. Okay how about...you come in my mouth now and I'll make a little show of it, then you come all over my face after you fuck me?\"\n\n\"Just... Mom, please suck it!\"\n\n\"Ohh, is that any way to talk to your mother?\" She shrugged, \"Well, I guess seeing I'm being such a nasty little pig I can't say too much, but I'm not going to suck it.\"\n\n\"You...?'\n\n\"Nope, I'm going to take you in my mouth and keep still and you're going to fuck your slut mother's mouth until you come!\"\n\nShe took me deep into her mouth and as she had said, held me there, an expectant look in her eyes. I was so eager to come I didn't hesitate and thrust my hips hard and fast. My cock plunged in and out of her mouth and mom moaned loudly around it as I fucked her face. I sensed movement and saw Uncle had stood up and come a little closer, before kneeling down on the floor so he was facing mom better.\n\nMom's eyes shifted his way and she winked at him as she opened wider and let her spit run down my pumping cock. She began making wet gagging sounds, but when I slowed down she squeezed my balls and moved her head to encourage me. I resumed fucking her mouth and grabbing my wrist she pushed up and down on the hand I had on her head.\n\nTaking her meaning I pushed down and pulled up, using her hair as a handle and guiding her mouth along my cock. My legs were shaking violently and I was moaning continuously. Mom was groaning and making wet sucking sounds and as my hips started to lose control she rubbed my balls and bobbed her head in time with my thrusting. \n\nI felt the come racing through my cock and shoving my mother's mouth all the way down on my cock, cried out and exploded in her mouth.",
        "Mom squealed around my shaft, but continued to suck. \n\n\"Fuck, fuck!\" I gasped, as my cock squirted..\n\n\"Hmm!\" Mom moaned her eyes rolling back as my balls emptied into my mother's eager mouth.\n\nI let go of her head so I wouldn't pull her hair and whimpered pathetically as she sucked every drop from my spent cock. \n\n\"Oh God.\" I moaned, slumping back into the chair, my heart pounding.\n\nMom slipped my cock from her mouth and lifting her head, turned her face towards uncle, opened her mouth and let my cum spill down her chin and all over my cock.\n\n\"Holy shit.\" Uncle and I said simultaneously.\n\nMy eyes felt as if they were bugging out of their head as I watched my cum dripping down mom's face and down my still hard cock. Mom licked the white cream from her lips then staring directly at uncle took my cum coated cock into her mouth and sucked on it. \n\nI moaned as she bobbed her head, slurping the cum from me. She released my cock and proceeded to run her tongue along my shaft scooping up what was left then noisily smacking her lips as she swallowed it.\n\n\"Damn I love the taste of cum.\" She sighed, \"Even better when it's my sons.\"\n\nShe stared down at my cock and smiled, \"Ah youth and enthusiasm. I think it's time Mommy came for her son, don't you?\"\n\n\"Y...yes.\" I said still trying to recover from my orgasm as well as the shock of mom's playing with my cum.\n\nMom stood up, put her back to me and unzipped the skirt, letting it fall to the floor. She hooked her fingers into her thong and with a sexy shimmy of her hips worked it part way down her thighs. When it was at her knees, she bent over and I licked my lips at the sight of her pink smooth pussy winking out from between her thighs. Goddamn I was staring at my mother's pussy!\n\nMom turned to face me, now naked except for the thigh highs and shoes. Opening her legs she slid her hand down and spreading her lips stroked her clit.\n\n\"How's mommy's pussy look, baby?\"\n\n\"I...damn good.\" I said, \"Beautiful.\"\n\n\"Aw, you think mommy has a pretty pussy? How sweet!\"\n\nShe looked back down at my cock which was still close to completely hard and smiled, \"Hmm,\" to my surprise she stepped away from the chair and to where Uncle was kneeling. Lifting her leg she put her foot in front of his face, \"Take my shoe off dear brother in law.\"\n\n\"I...yes ma'am.\" He said softly and holding mom's leg in one of his huge hands unbuckled her shoe and removed it. \n\n\"Lick my foot.\" She told him.\n\n\"Mom, I...\" she put her hand up and I stopped\n\nUncle stared at her for a moment then lifting her foot higher ran his tongue along the stocking sole of her foot.\n\n\"Good boy.\" She said, \"I figured since you were paying so much I would give you a thrill.\" She put her foot down and offered the other. \n\nUncle quickly removed her other shoe and she held her foot still allowing him to lick that one as well. I saw his eyes fixed on her pussy and started to worry, but he made no attempt to touch her.\n\n\"Stockings on or off for the rest of the show?\" she asked.\n\n\"Off.\" He told her, \"I want you completely naked.\"\n\n\"Fair enough, stay still, you move, we leave.\"\n\nMom turned her back to him and bent over directly in his face as she rolled her stocking down her leg. The look of lust on Uncle's face was...a turn on. Seeing this guy who had, and most likely still was having, sex with porn stars, some of the hottest women in the world and here he was looking like a horny teen ager doing anything my mother wanted.\n\nSeeing that caused my cock to become fully hard again. My mother was one hell of a sexy woman and an object of lust to men and that thought followed by the one that I was experiencing her as none of them ever could, sent a thrill through me. Mom turned and putting her other foot on his shoulder took her time rolling down the other stocking, leaving his face inches from her pussy.\n\n\"Jesus, Vicky.\" He said softly.\n\nMom got the stocking to her foot held it up for him to pull off. As she did I stared at her ass and absently stroked my swollen cock in anticipation of getting a piece of it. A piece of my mother's ass, damn this had come a little too easily to me.\n\n\"Keep them, and the shoes.\" Mom said and now completely naked she walked over to my chair.\n\n\"Well, baby, how does mommy look?\" she raised her arms over her head, bringing her tits up to a sexier angle.\n\n\"Fucking amazing.\" I told her, \"You're the hottest woman I've ever seen.\"\n\n\"I don't know about that, but my pussy's pretty hot right now, want to see?\"\n\nMom stepped between my legs and turning around put her back to me. She leaned back until her back was against my chest and lifting her legs put her bare feet on my knees so she was sitting back against me. I moaned when my cock slid through the lips of her pussy and she rocked back and forth working my once again aching cock through her wet hot flesh. Mom grabbed my cock and pushed the tip against her clit.\n\n\"Oh, so hard still!\" Mom cooed, \"I guess I didn't do my job, my baby is still all worked up for his mommy!\"\n\nI had slipped my arms around her waist and she grabbed my hands and put them on her tits. As I had before I teased her nipples between my fingers and she moaned softly while leaning her head onto my shoulder, \"That's nice, baby.\"\n\nUncle moved into my line of sight coming around to sit on edge of the bed in front of us. Mom worked her hips faster, her pussy pushing against my cock. My heart was pounding at the idea I was right there! Mom put her hand between my legs and rubbed my balls as she teased me with her pussy.\n\n\"Yeah, Malcolm, is this what you've been waiting for?\"\n\n\"Do it.\" He said quietly, \"Let him have you.\"\n\n\"It's your show,\" Mom said.\n\nShe lifted up higher, grabbed my cock to steady it and with no warning let her weight go, driving my cock deep inside her. \n\n\"Fuck!\" Mom cried out, \"Oh, God that's deep!\"\n\nMom squirmed on my lap and moaned, \"Don't move yet, let mommy get used to that big dick, its...its been awhile.\"\n\nI remained where I was stunned by the pleasure of being inside the one pussy that was supposed to be forbidden to me. Mom's pussy was hot, wet and damn tight. She was moving her hips slightly working up and down, but barely moving me. I continued to play with her tits, squeezing and fondling her firm flesh and her hard nipples.\n\nMom moved up and down, this time enough so that she was riding me and I moaned at the feeling of her soft pussy stroking my cock.\n\n\"Yes.\" Uncle nodded, \"Oh, yes.\"\n\n\"How's it feel to fuck your mommy, baby?\" she sighed, \"I know my son's cock feels pretty good inside me.\"\n\nShe moved faster, thrusting down harder on me and I was grateful she had sucked me off because her pussy felt so good I probably would have come in under a minute. Mom took my right and pulled it down between her legs.\n\n\"Play with mommy's clit, honey, make her come all over her son's big dick.\"\n\nMy fingers found her clit and rubbed in small hard circles and mom moaned loudly in my ear. Reaching back over her head she wrapped her arm around me and turning her head, pulled me down into a long deep kiss. I moaned as her tongue found mine while her pussy massaged my throbbing cock. \n\nMom was moving side to side now, slowly and sensually riding me rather than fucking me. I had to strain not to thrust my hips and fuck her, but wanted to wait for her to tell me I could. Mom must have sensed my thoughts as she whispered in my ear, \"Soon, baby, you can fuck me long and hard, but nice and easy right now, I want to enjoy cumming on my son's cock.\"\n\nShe resumed kissing me and out her hand over mine as I stroked her clit. Her fingers were trembling and like last night she was starting to make little high pitched sounds at the end of her moans. Her hips moved faster, working her pussy more rapidly along my cock and her tit heaved in my hand as her breathing picked up.\n\nMom's toes curled into my legs and she groaned, \"Faster, rub that clit harder, baby! Oh...oh, please, please make mommy cum for you! Oh...\"\n\n\"Come on Vicky.\" Uncle said, \"Let it go, come hard for your son show him how bad you really want him!\"\n\n\"Oh, right there!\" Mom whimpered, \"Just like that, baby! Oh, Ryan...oh, I...Oh fuck yeah!\"\n\nMom released a long loud wail that made last night seem like a whisper and bucked wildly on top of me. She was thrusting her pussy hard into my cock sending me balls deep every time she came down on me. I continued to stroke her clit and cried out myself as her pussy contracted tightly around my cock.\n\n\"Fuck me!\" she yelled in my ear, \"Fuck me while I come for you!\"\n\nI immediately moved my hips as much as I could, timing my thrusts so I was raising up as she came down. Mom was making loud sharp little squealing sound as her pussy convulsed around my plunging cock and her hand moved over mine, keeping it moving on her clit. Mom's pussy quivered around my cock once more and with a long soft sigh, mom slumped back against me.\n\n\"Oh, baby.\" She whispered, \"Damn I came hard!\"\n\n\"Don't stop fucking her Ryan.\" Uncle told me, \"She just came, fuck that pussy it'll never be hotter!\"\n\nMom pushed herself off me and quickly reversing herself, climbed back onto my legs, this time facing me. She once again guided my cock to her entrance and slammed down on me. I would have cried out, but it was cut off by mom shoving her nipple in my mouth.\n\n\"Fuck me!' she called out, Fuck me as hard as you can, baby!\"\n\nI put my arms around her waist, pinning her against me and thrust my hips as hard and fast as my position would allow. Mom yelped with every hard thrust awhile working her tits back and forth so I could suck on both of them. Mom put her hands on my shoulders and began bouncing wildly on my cock, riding me like I was a prize bull in a rodeo.\n\nShe was squealing and yelping, her tits were bouncing in my face and her long hair was flying about. Mom's eyes were closed, but her lips were parted as she moaned and whimpered as she rode her son. She looked so fucking sexy I strained to fuck her harder. But the chair was soft and I was sinking into it and despite the fact she was fucking me, I needed more. \n\nI was so caught up in my lust for my mother that I was no longer even seeing my Uncle sitting there. All I cared about was my mother who was riding me like a slut in heat. Leaning forward, I pushed up with my legs and stood up while holding mom pinned against me.\n\n\"Oh fuck!\" Mom yelped in surprise, but quickly wrapped her legs around my waist.\n\nI stood there for a moment holding her while she continued to bounce on my cock and at that point could not resist looking at Uncle who was sitting there with his mouth open as I fucked my mother in a standing position.\n\n\"Seeing me looking he laughed, \"Kid you sure you don't want a job?\"\n\n\"I only want to fuck my mother.\" I told him and turning to the side took two quick steps and dumped mom onto the side of the bed.\n\nShe laughed and as I stared down at her she smiled at me; a real smile, one that touched her big brown eyes, \"You really do want me, don't you baby?\" There was something in that question, as if she were really asking me and not just posing for Uncle.\n\n\"More than any woman I've ever met.\" I leaned over the bed and kissed her.\n\nMom threw her arms around my shoulders and squeezed her legs around me as we kissed while I continued to fuck her standing next to the bed. Mom broke the kiss and moaned in my ear, \"Give it to, Ryan, give your mother what she needs, what she's needed for a long time.\"\n\n\"R...really?\" I asked, wondering if we were on the same page.\n\n\"Fuck me and not just for him, but for me.\" she said softly. \"I need this.\" Before I could respond she said loudly, \"Don't make love to me, Ryan, save that for a girlfriend, your mother wants to get fucked!\"\n\nOur eyes met and she whispered, \"With love, honey, but fuck me for real.\"\n\nI stood up and grabbing her legs pulled them from my waist. I caught her ankles in my hands and lifting her legs, spread them open and slammed my cock into her pussy hard enough to cause my balls to slap against her ass. \n\n\"Fuck yeah!\" Mom cried out as I fucked her with long hard strokes.\n\nMom grabbed her tits and played with her nipples as I pounded away on her, fucking her as hard as I could. I opened her legs as far as I could reach and she squealed as I resumed fucking her. \n\n\"That's it, fuck your slut mother! Fuck her the way you wanted to all those nights I came home dressed like a whore! Those nights you lay there and jerked off instead, you should have taken my, Ryan, you should have come into my room and just fucked me, made me act like the slut I am! Oh God!\" \n\nMom screamed when I put her legs together and lifted her up off the bed so her ass was in the air and I was driving even deeper insides her. I shook the sweat from my eyes and watched hers roll back as her son tore into her like she was just some slut I'd hooked up with. Holding her ankles together, her feet were in front of my face and on a whim I sucked her toes into my mouth.\n\n\"Ohh, I...like that!\"\n\nThere was a yelp in between each word and I as I repeatedly thrust into her I played around licking and sucking her red painted toes. Mom wiggled them and giggled in between her cries of pleasure and I found it turned me on to do it. I recalled how much she enjoyed the foot rubs I gave her and wondered if she had a fetish and had she really liked it when I touched her?\n\nI stopped licking her toes and putting her ankles against my shoulder I leaned forward over the bed so mom was almost bent in half. Bracing my hands on the bed to hold her down I pulled my cock all the way out then drove it home into her hot pussy.\n\n\"Fuck fuck fuck!\" she cried over and over. \n\nI saw Uncle come around the other side of the bed and stare down at my cock plunging in and out of my mother. His hand was again rubbing the huge bulge in his jeans and he was sweating as much as we were. \n\n\"Oh, God you're fucking me so hard!\" Mom yelled, \"Oh, honey, you wanted mommy's pussy didn't you?\"\n\n\"Yes!\" I moaned as I slammed her. \"I want you, Mom I want to fuck you and make you cum and...\" I trailed off as my eyes focused on my glistening cock sliding in and out of Mom's pink pussy lips.\n\nHer clit was swollen and knowing this was supposed to be the only time I would have with her, I slid my cock from inside her, dropped to my knees and buried my face in her pussy.\n\n\"Oh, bad boy!\" Mom moaned, then squealed when I slipped my tongue inside of her. \"What a good son you are, look at you licking mommy's pussy!\"\n\nI swirled my tongue around inside her, my eyes rolling back at the taste of her and not caring some of the sticky mess was probably mine as well. That thought turned me on and I sucked hard, getting her to cry out and filling my mouth with her juices. I was still holding her legs back and putting my forearm across them. Removing my tongue I used my free hand to plunge two fingers inside of her.\n\n\"Oh...oh, Ryan! Honey you know how to take care of your mommy, don't you?\"\n\nI worked a third finger in causing mom to squeal and finding her clit, took it between my lips and sucked hard on it. \n\n\"Yes, baby!\" She moaned, \"Suck that clit! Oh, mommy wants to cum in her son's face so fucking bad!\"\n\nI pumped my fingers in as hard as I dared and swirled my tongue in wet circles around her throbbing button. Mom's hips were moving as she strained to work her pussy into my face. I moved my arm and she immediately put her feet on my shoulders and ground her pussy into my fingers and tongue. I looked up while I sucked her clit and saw her playing with her nipples, tugging on them and groaning and whimpering for her release.\n\n\"Baby...oh, yes, lick that pussy, lick your mother! Oh...I am going to come so hard for you! Then you're going to fuck me some more, aren't you?\"\n\n\"Hmm-mmm\" agreed into her quivering flesh.\n\n\"Going to fuck me long and hard and cum for me! Going to cum all over mommy's slutty face! I...oh...\"\n\nMom whimpered and her hips moved desperately as I sucked her clit in time with my fingers. Mom pushed with her feet, her ass lifting off the bed and her thighs were trembling around my face.\n\n\"So close.!\" She groaned, then shocked me, \"Shove your finger in my ass!\" I didn't right away and she cried out, \"Put your finger in your mother's tight little ass!\"\n\nI shoved my finger quickly into her ass and as I marveled at how tight it was, Mom threw her head back and released a noise that could only be described as a howl. It was so loud I wondered if there were people in the next room and if they would call the front desk on us. Mom's legs clamped around my head, pinning my face to her hot wet pussy and bucked her hips against me as she howled again and again. \n\n\"Jesus Christ Vicky!\" I heard Uncle exclaim. \n\nMom writhed on the bed, wailing away as her orgasm tore through her and between my legs my cock ached painfully with the need to be back inside the pussy was quivering against my face and contracting around my fingers. \n\n\"Oh that...oh...\" Mom sighed and let her legs fall away from me. \"So hard, I came so hard.\"\n\nI all but leapt to my feet and once again drove my cock into my mother's amazing pussy. Mom moaned and lifting her legs placed her feet on my chest as I slammed her as hard as before. Mom was laying there with her arms by her side, her tits bouncing wildly as I fucked her. She was moaning softly and had a dazed look on her face. Her cheeks were flushed and her hair plastered to her sweat slicked cheeks. \n\nShe still had that look of lust in her eyes, but seemed too stunned from her orgasm to move. That was fine with me as I hammered away on her sopping pussy. I could hear mu cock squishing in and out of her and my thighs were soaked from her juices. \n\n\"Stop.\" Mom pushed against me with her feet. \"Let's give our host what he wants.\" She giggled, \"Okay, what I want.\"\n\nI stepped back and mom sat up and caused me to moan when she took me into her mouth and bobbed her head, slowly sucking me, \"Oh, you bad boy!\" she laughed \"You taste like mommy's pussy!\" she took me back in her mouth and sucked me down to my balls before releasing me and standing up.\n\nMom turned, bent over the bed and opening her legs pushed her ass in the air, \"Go ahead, baby, take me like this, garb my hips and fuck your mother from behind, give it to me as hard as you can!\"\n\nI grabbed her hips and plunging into her began to fuck her as hard as she said she wanted it.\n\n\"Yes!\" she screamed her arms out stretched on the bed and her fingers curling into the sheets, \"Fuck me!\"\n\nUncle came around so he could face mom, \"How does it feel Vicky, how does it feel getting fucked by your son?\"\n\n\"How does it look?\" Mom moaned, \"Does it look like I'm loving it?\"\n\n\"Yes.\"\n\n\"Because I do! Oh fuck he's giving it to me so good! My son knows just what his mommy fucking needs!\" she lifted her head to stare at him, \"How's it look, Malcolm? You seeing us or you seeing you fucking your mother? Is this what you wanted? Did you want to fuck her like a whore, make her swallow your cum, bend her over?\"\n\n\"I...at some point, yes.\" \n\n\"Oh...yes Ryan! Harder!\"\n\nI squeezed her hips, reared back and thrust into her so hard it hurt when my balls struck her pussy. \n\n\"Put your finger back in my ass, feel yourself fucking your mother!\"\n\nThis time I didn't think twice, but slipped a finger into her tight rosebud and as she had said, could feel my cock sliding against it through the thin skin between her ass and pussy. \n\n\"That's it! Fuck me, fuck your nasty mother, the woman who just sucked her son off, the one who came in his face, the slut that is going to let you cum all over her face like the fucking pig she is!\"\n\n\"Oh man.\" I gasped as my knees trembled and my cock jumped inside her.\n\nI was breathing hard and the sweat was stinging my eyes, but I fought for every thrust. When I came it would be over and mom said we would never talk about it again. This experience I had thought was sick had turned into the most unforgettable day of my life. I looked down at my finger in mom's ass and my long thick cock plundering her pussy.",
        "I could smell her on my face, hell the entire room smelled like sex, mom pushed back into me forcing my cock and finger even deeper and moaned, \"Cum for me! Cum for mommy, baby! Give me every fucking drop all over my slutty face!\"\n\nI moaned and fucked her faster, my balls constricting as they prepared to explode.\n\n\"It's your pussy isn't it?\" Mom moaned, \"Your mother's pussy is your pussy, baby, now come on and take it, claim mommy's pussy! Make it yours, Make...\"\n\n\"Oh my God!\" I cried out and giving her several more hard thrusts, I whipped my cock out, squeezing it at the base.\n\nMom slid off the bed, onto her knees, lifted her head and moaned, \"Cum all over my face, baby!\" she opened her mouth and waggling her tongue at me, grabbed my balls and squeezed them.\n\nI released my cock and a long thick stream of cum erupted and splattered against mom's lips and tongue, it oozed down her chin and the next spurt hit her on the right cheek. Mom moaned and turned her head so some cum would hit that side as well. I pumped my cock furiously coaxing everything I could and putting every drop all over my mother's face and tongue. \n\nWhen I had no more to give, I let my cock go then whimpered when mom took it into her mouth and sucked a couple of more drops from me. I groaned and my knees suddenly weak, I slumped to the floor next to mom. She slid her legs out from under her so she was sitting on the floor with her legs stretched out and her back against the bed. \n\nMy cum was dripping down her face and onto her heaving tits and she had a stunned look on her red sweaty face.\n\n\"Oh my God,\" she whispered, \"I...oh My God, I can't believe what we just did.\"\n\n\"Here,\" I jumped as I had been so caught up in the moment I hadn't realized Uncle had knelt down in front of us. \n\nHe was holding out a towel to me, \"Help your mom clean up.\"\n\nI took the towel and noted it was cool and damp. I gently placed it over mom's face and wiped the cum from it then cleaned her tits. \n\n\"That feels nice.\" She said, still trying to catch her breath.\n\n\"Mom, let's cover you up,\" I started to pull the sheet from the bed, but she waved her hand at me, \"Please, he just watched me fuck my son for an hour, he can look a little longer.\"\n\n\"Vicky that was...fucking amazing!\" Uncle declared, taking mom's hand he brought it to his lips and kissed it, \"Just amazing, thank you!\"\n\n\"Yeah, sure.\" She nodded.\n\n\"Ryan.\" Uncle smiled at me and suddenly self conscious of my nakedness I grabbed a pillow and put it over my cock. \"Modestly, now?\" he laughed, \"Kid I'm telling you, you have a future in this...\"\n\n\"He will never do anything like this again with anyone.\" Moms said softly.\n\n\"Okay well, kid, that was something, I told you yesterday it would come naturally! The two of you, goddamn! So...how did it feel was it...\"\n\n\"Malcolm you got what you wanted.\" Mom said, \"I think we...delivered better than you could have thought and you have the rest of your life to jerk off to it. For us this ended the second I couldn't suck any more cum from his cock.\"\n\n\"Okay.\" He nodded, \"I understand, well listen there's a huge bathroom here, big tub, nice shower, why don't you go soak and relax and take your time.\" He grinned, \"Maybe you could shower together?\"\n\n\"Malcom...\"\n\n\"Another five grand if you shower together? Maybe...\"\n\n\"Its over.\" She said, her head down, \"You got what you wanted, I got what I needed. We'll just get dressed in a few minutes and go home. I...I have to pick the girls up.\"\n\n\"Sure, well I have to use the bathroom, I'll be right out.\"\n\nAs he hurried across the room, mom sighed, \"He's going to jerk off, can't even wait.\"\n\n\"Mom, you okay?\"\n\n\"I...Ryan that is not what I wanted.\"\n\n\"You...you did this.\" I pointed out. \"You wanted this and...\"\n\n\"I did what I had to. So did you and I thank you for it.\"\n\n\"But...\" I felt a wave of disappointment flow through me, then again what did I expect; that mom and I were going to have sex again? \n\n\"Ryan this was...it just wasn't what I wanted and neither was last night.\"\n\n\"So this...all an act?\" I shook my head, \"You... you said you needed it for real.\"\n\n\"I...I did. I needed to ...to be with someone. Haven't been since dad and...I don't even know where to start. I don't want to date, I don't want another man around the girls I...but I needed something and...I guess this was about more than the money Ryan, I needed to feel like a woman again. But...you're my son and it was wrong.\"\n\n\"But not if you felt...\"\n\n\"What did you feel?\" She looked up at me, \"You think this was more than sex, honey? You think that you and I...we could be together?\"\n\n\"Well...\" hearing her say it, I lowered my head, \"I...I guess not, but...I don't know what I think.\"\n\n\"And no one would know, this was a fucked up thing we did, but we did it for each other and the girls and that's what counts.\" She reached over and picking up the white shirt slid it on and this time buttoned it rather than tying it. \"We never talk about this again, okay?\"\n\n\"Yeah.\" I forced a smile, \"Talk about what?\"\n\n\"Ryan I love you.\" She went to kiss me and not thinking I pushed my lips out to meet hers, but she kissed me on the cheek, \"We will have some good news for the girls tonight.\"\n\n\"Right,\" I stood up and taking mom's hand helped her to her feet. As she stood she looked down at me and smiled, \"You're a good looking man, Ryan.\"\n\n\"And you're a hot ass cougar.\" I told her, \"And you can't try to deny that.\"\n\n\"Thank you, baby.\" She bent over to grab her skirt and I stared longingly at her ass as she slipped it on.\n\nUncle came out of the bathroom and grabbing her shoes from the other side of the bed and her overcoat mom said, \"I'll be right out.\"\n\nI nodded and seeing Uncle was back, quickly slid my jeans on and as I sat and put my socks and shoes on he said, \"Hell of a time, no, kid?\"\n\n\"I...I guess.\"\n\n\"Please, you know it was and it was more than sex, Ryan. It's not over.\"\n\n\"What do you mean?\"\n\n\"What I just said. Your mother was putting on some extra dirty action for me, but she...she wanted you Ryan, I saw it.\"\n\n\"Saw what you wanted.\" I told him although unlike yesterday I wished I could believe him. \n\n\"And what you wanted.\" He put his hand on my shoulder, \"Don't let this rest, Ryan; go to her tonight.\"\n\n\"She...\" I glanced towards the bathroom door, \"She just said we never bring it up again.\"\n\n\"Ah, so you do want her!\" he laughed.\n\n\"I...got me.\" I put my head down, \"You...You were right I...damn; she was just...\"\n\n\"I know I'm right, but hey as far as what she said? Ryan, she was speaking as your mother, she has to say let it go, she can't say come be my lover.\"\n\n\"You think she...\"\n\n\"But if you go to her and show this is what you want she will come around, but she can't make the first move, got it?\"\n\n\"I think so.\"\n\n\"So tonight you go to her room and you...you tell her how much you love her and see what happens. I think you'll be happy you did and so will she.\"\n\n\"I...maybe.\"\n\n\"Make me a promise.\" He said.\n\n\"What's that?\"\n\n\"I want you to call me tonight, even if it's late or early morning tomorrow, I want you to tell me two things.\"\n\n\"What's that?\"\n\n\"One, if your mom is okay. This was a lot and on the off chance I'm wrong and she didn't really enjoy this I want to make sure she is alright.\"\n\n\"Okay, what's the other?\"\n\nHe smiled, \"You tell me whose bed you just left to call me.\"\n\n*****\n\nI lay awake in my bed staring at the ceiling with my head spinning. On one hand I knew I needed to put today behind me as my mother so obviously wanted to. I should close my eyes, relax and be happy, because there was plenty to be happy about tonight. \n\nBut Uncle's words stuck with me and for every time I told myself to go to sleep and wake up like today never happened, another part of me rebelled. What I should do was what he said; get up, go to my mother's room and tell her how much I enjoyed what we had done and that I wanted more. \n\nWhen I let that option run through my mind, there were two different outcomes. One, the desired one, was mom being thrilled I had come to her and accepting me as not just a son, but...but what? Her lover? The other, and more realistic option I figured, was we would at least talk about today and how we felt about it. Arguments were things that could easily be put behind you, but having torrid sex with your mother was a little different.\n\nAs hardcore as our little show was, I felt more than just lust for my mother, I felt a closeness that surprised me. I also had no issue wanting her that was for sure. At times I swore I felt the same from her and when she had said that she had really needed me...but at the end it was as if she had flipped a switch and it had all been for Uncle. \n\nSure she'd come like a damn wildcat, but that was just her letting her body go and enjoy what we were doing, it was her mind or more importantly her heart into it at all? I needed to know, but was afraid of not just feeling like a fool, but upsetting her. If mom felt I couldn't put this behind us she would feel as if she had done something wrong to me and blame herself.\n\nI rubbed my eyes and sighed in frustration. I was exhausted, but no way could I sleep. I decided to let my mind drift in hopes either I would reach a decision or sleep would sneak up on me. I replayed the rest of the day after we'd left Uncles hotel room and had to smile at what, for the most part was a very good night. \n\nIt didn't start off too well. Mom was silent the entire ride home. Even when I tried to make small talk she seemed distant and I noticed she wouldn't look over at me. With a sinking feeling that things were not going to be okay after this, I looked out the window and tried not to keep replaying the wild scene in front of Uncle. \n\nEasier said than done because even as I knew Mom was upset, I could shake the images of her naked body, her mouth on my cock, her smooth pink pussy, and her ass in the air as I fucked her like she was the slut she was pretending to be. I had glanced over at her then quickly looked away when all I could picture was my cum all over her face.\n\nTo my dismay my cock stirred and it dawned on me that if just thinking of what we had done had this reaction on me I would end up stroking it to my mother just as I'm sure Uncle was doing just now. I frowned at the thought that I was now always going to see my mother in a sexual way and with her saying it ended today I was going to end up a frustrated mess longing for my mother if I didn't find a way to get past this.\n\nWhen we got home, mom entered the house, said she was going to take a bath and vanished into the large bathroom that connected her room to the girls. Originally their room had been the spare bedroom, but when dad had first passed the girls had so many nightmares, mom had moved them into that one to be close to them.\n\nI had gone into the small bathroom that was located off the living room and took a long hot shower during which I had to force myself not to jerk off to those visions of fucking my mother. I hung around in the living room hoping mom would come out and talk, but when she did appear it was only to ask me to go pick the girls up at school.\n\nWhen I brought them home however, things took on a much better tone. Katie and Sarah were thrilled to see mom home and even happier when she announced that we were all going to Chucky Cheese for pizza. Katie asked mom if she had to work and with a big smile, mom told them she had called the club and quit.\n\nThe sight of my sisters running excitedly over to my mother and hugging her made everything seem better and when mom put her arms around them , hugging them both close to her there were tears running down her cheeks. \n\nWhen she saw me looking she gave me a big smiled and beckoned for me to come over. The four of us shared a group hug that a few months ago my sisters and I would have made fun of, but today we were all thrilled to just be together.\n\nMom then told them we weren't going to be moving, ever and this time when they hugged her I felt the tears in my eyes. As the girls rushed out the door, mom put her arm around me, kissed me on the cheek and whispered, \"We're going to be okay, Ryan all of us.\" She paused and added, \"The two of us will be too, today was for love and I love you more than ever, honey, never forget that.\"\n\nWe had a great time at dinner, mom and I had been stressed for so long that it was amazing to just be relaxed, laugh and have a good time. By the time we'd come home, it was time for the girls to shower and go to bed and mom and I took turns reading pages of Harry Potter to them. We all laughed when mom demonstrated a worse British accent than mine and once we left their room, mom had told me she was exhausted and going to bed.\n\nThat was two hours ago and I was still awake. Giving up, I sat up and swinging my legs onto the floor sat there trying to convince myself to be a man. Get up; go to my mother and...what? Mom let's give this a try? Mom can we have sex again? Hey, mom I really liked how...\"\n\nI stopped on that last partially formed thought. Looking down at my bed I remembered how good mom felt curled up next to me. How amazing it was to hold her and feel her heartbeat against me and her warm breath on my neck. \n\nHow it felt to hold her the way she had me for so many years when I was younger. Sleeping with her in a way had been better than the crude sex we'd had today. Any two people could fuck, but to have that connection, that closeness that we had last night?\n\nI stood up and slipping a pair of sweat pants on, started to grab my shirt and thought who cared? Mom had seen all of me earlier and I wouldn't mind seeing her look at me in that way, that is if she felt as I did. I went over to my door opened it and flinched back when I came face to face with mom who had her hand raised ready to knock on my door.\n\n\"Jeez!\" Mom exclaimed as she took a surprised step back, then laughed, \"Couldn't time that batter if we tried.\"\n\n\"Yeah, \" I nodded, \"So what's up?\" I tried to sound casual. Seeing she was here, I didn't want to look as if I had been heading out to see her.\n\n\"We are.\" She said, \"I can't sleep and you look wide awake.\" She cocked her eyebrows, \"Where were you going?\"\n\n\"Oh, I had to use...\" I shook my head, \"No, I...I was going to talk to you.\"\n\n\"Good, because that's why I finally convinced myself to do after lying awake.\" She stepped past me into my room and closed the door behind her, \"Honey, we do need to talk.\"\n\n\"Sure I...\" I trailed off when I saw her thumb the lock on the door, then walk over to my bed.\n\nMom was wearing a short red robe that there wasn't anything particularly sexy about except that she was in it, but my heart skipped a beat when she sat down on my bed and crossed her long legs. \n\n\"Come over here.\" She tapped the bed and grinned, \"I don't bite, trust me you'd know if I did by now.\"\n\nI walked over to sit next to her, noticing that her robe was properly tied and her hair pulled back in a pony tail. Unlike earlier today and last night she wasn't wearing any make up and all in all didn't look as if she were dressed to seduce. \n\nBut in a way I found her even more attractive like this. This was my mother, a natural beauty who didn't need to slut herself up to be attractive. This, not the woman in the school girl fantasy outfit was how I truly pictured my mom.\n\n\"You okay, Ryan?\"\n\n\"Are you?\" I asked.\n\n\"I...I will be.\" She nodded. \"Honey, I...I need to tell you a couple of things. Confessions might be the proper word. But before I do...\" she put her hand over mine where it was resting in my lap, \"I have to ask you something.\"\n\n\"What's that?\"\n\n\"Ryan, did you...\" she paused, \"Did you...enjoy what we did?\"\n\nOh, shit moment of truth and she's put the damn ball in my court! What if I said yes and that's not what she wanted to hear? What if she said no and she did want me and I blew it? I thought about what Uncle had said. Never in a million years would I have thought to use him for any type of guidance, but he had been right about how I would feel and seemed convinced that mom...\n\n\"If you don't feel comfortable answering I understand.\"\n\n\"No, I...I did, but um...\" I recalled thinking about holding her and took the chance. \"I think I liked last night better in a way, you know, us just being close after we, you know...\"\n\nMom gave me a big smile and squeezed my hand. \"I like that answer, Ryan, I really do.\"\n\n\"Yeah?\"\n\n\"Yes, because it's how I felt too. Today...I...when I said it wasn't what I wanted...\" She stopped and took a deep breath. \"I need to just talk and start from the beginning, okay?\"\n\n\"Sure.\"\n\nMom drew her leg up onto the bed and turned to the side to face me. She had let my hand go and once she had slipped her leg behind me she took my hand and placed it on her leg, sending a thrill though me. I found myself trying to look up her robe, but quickly faced her, not wanting to read more into her gesture.\n\n\"First I mislead you with Uncle.\"\n\n\"What do you mean?\"\n\n\"I...I didn't do it on purpose, well not at first. If you recall I didn't want you to go, but the reason was more than I didn't want you to stop me if I wanted to give in to an offer from him.\"\n\n\"Then why not?\" \n\n\"Because...look, I lied when we were in there with him, I knew about his thing for his mother.\"\n\n\"You did?\"\n\n\"Your father told me about it years ago after I had made a comment about all of his step mother movies and the ones that were supposed to be real mother son. I joked that he probably paid people to pretend to be his mom. Your dad told the story that Malcolm did yesterday.\"\n\n\"Okay, so what?\"\n\n\"So what is there was a part of me that knew if you came with me and he saw us together and knew how desperate I was he would offer what he did. I...I feel like I set you up for it.\"\n\n\"No, I caught you trying to see him without me.\"\n\nMom sighed, \"Ryan, no one knows a man like his mother. You don't think I figured you would think I was going to go without you? You're very protective of me I knew you would be there. I...I also could have made you leave, but I didn't because...I...I wanted him to offer. I used you to lead him right where I wanted him, to give me what we needed by showing him what he wanted so badly, a son with his mother.\"\n\n\"It's okay.\" I shrugged, \"You did it for the same reason you would have done something with him alone if I wasn't there, for the money and the girls and...\"\n\n\"And for me.\" She took my chin in her hand so I was looking directly at her, \"Ryan, I...I'd been thinking about you in ways I shouldn't have been before we talked to your Uncle.\"\n\n\"You...you what?\"\n\n\"You heard me.\" Mom lowered her head, \"I...when I started thinking about asking Uncle for money, which was a couple of months ago I told myself how sick he was and not to get involved, especially because your father wouldn't want me to.\"\n\n\"But when I thought of him his mother complex was one of the first things I thought of and...see there was a part your uncle didn't mention, I think because maybe he never figured it out.\"\n\n\"What's that?\" I really couldn't care less, I wanted her to get back to her explain what she meant about thinking about me, but knew she needed to come to it in her way. \n\n\"Dad said he knew his mother said okay to Malcolm. He said he felt it was because his father was a cheat, a total dog, screwed everything that moved and she knew it, but put up with it for her sons and because, well women put up with that back then, some women anyway.\"\n\n\" Point is she was lonely, neglected and wanted someone to want her. Malcolm wanted her and...I can see now he wanted her with love, not just lust. She would have been with him to feel like a woman as much to make him happy.\"\n\n\"How do you know he loved her and didn't want to just, you know...\"\n\n\"Because I...I felt it from you last night and as raunchy as today was could see it in your eyes.\"",
        "\"You could? Mom I...\"\n\n\"Let me finish, because after this I don't want to bring it up again, we just move forward okay?\"\n\n\"Okay.\" That could be good or bad, the way she had said that.\n\n\"So I put going to him out of my mind, figured something would pan out one of the banks. But what I couldn't ignore was that I was a woman and...a lonely woman. I miss your dad, honey and he will always have a huge place in my heart, but I...needed something.\"\n\n\"There's plenty of guys who would be interested in you, mom, you're beautiful and...\"\n\n\"Ryan I know I'm a decent person and I am aware I'm attractive. I could have either gotten just laid from the club or I am sure could have found a decent man looking for someone to be good to. But every time I thought about...I couldn't do it.\"\n\n\"There were nights I went to the club horny as hell. All those guys looking at me, wanting me. I told myself a few times I would stay after my shift let someone buy me a few drinks and just have a good time. But I would always get nervous and leave.\"\n\n\"I'm glad you did.\"\n\n\"Me too. Then on the other end I had friends trying to fix me up, I looked at dating sites even put up a profile but I would never go out or reply to messages, just to...I don't know, nervous. Your dad and I had been together since just after college so long with one man and such a sweet one.\"\n\n\"But,\" she gave me an embarrassed grin, \"A little too sweet. Your dad was a gentleman even when I didn't want him to be. The total opposite of Malcolm, your dad was...kind of a dud. A sweet lover, but not one to just...give me what I needed so I had a lot of years of pent up frustration and fantasies and it...it had been close to a year since we had done anything I needed it Ryan, so bad. But just couldn't then...\"\n\n\"Then I was doing what I'd been doing two or three times a night for months, watching porn and getting off and I ended up on one of those dumb step fantasies, but a decent one,,\" she laughed, \"One of Stone Cold productions Family Affairs movies. It had some acting and a story and the mother was alone and the son was trying to seduce her.\"\n\n\"That was a movie though, they're kind of well they're fantasy.\" I said feeling it's what I should say even though I was having that fantasy right here and now as I stared longingly at my mother as she sat on my bed.\n\n\"True, but it got me thinking in ways I shouldn't. I started looking at you differently, as a man, not a son. We've gotten so close and...and you take care of me, you're sweet to me, you try to protect me, you've become the man of the house and I started wondering what you would be like as...as a man.\"\n\n\"I started having dreams of you coming into my room and telling me you loved me and wanted me and we would make love and you would be amazing.\"\n\n\"You...you could have said something.\"\n\n\"Could I? Ryan before last night you wouldn't have.\"\n\n\"Well,\" she was right I hadn't had any thoughts like that until Uncle's office and her seducing me last night\n\n\"No, well I know.\" She smiled, \"My son is a good man. Know how I know?\"\n\n\"No.\"\n\n\"Well once those thoughts were in my head, I couldn't stop them. I wanted to. I was so disgusted with myself as a mother, but as a woman? I was lusting for you. I...I would watch those movies and wish it was you and I doing those things, crossing that line and...not just fucking like they did, but loving and...I started trying to get you to look at me.\"\n\n\"You wanted me to look?\"\n\n\"I did. I would keep my work outfits on to see if you would look at me as more than mom. I...I always asked you to rub my feet because I hoped maybe one night your hands would keep moving up my leg and...\" she sighed,\n\n\"Ryan, every time you rubbed my feet I would go upstairs and play with myself in the shower, I would think of us on the couch, me finally just coming on to you. But I could never do that.\" She shook her head, \"God if you didn't want me that could have ruined our relationship.\"\n\n\"Mom, nothing would ever make me not love you.\" I took her hand in mine, \"Nothing.\"\n\n\"You are a sweetheart.\" She leaned over and kissed my cheek. \"But I figured if I could entice you. But as I said you're a good boy. Honey the other night when I was on the couch and opened my legs? I did that on purpose. I so wanted you to look! What did you do? You told me to fix my skirt.\" She laughed, \"I thought why the hell did I raise such a respectful kid?\"\n\n\"Then when it got to where I had to approach Uncle and you came and sure enough he offered I saw it as an excuse. A way to not just save the house, but to have my time with you. To get what I needed and to maybe see if there would be an interest from you once we did what we had to.\"\n\n\"So you weren't faking anything?\"\n\n\"No, and how do you think I got so carried away so easy talking dirty about us in his office? Because I'd thought about it, just like it was easy for me to just lose control and fuck like a damn animal today because I...I'd wanted you and this was my chance to show you how good it was how much fun I could be, how I would do anything for my son in hopes that you...look honey, I know I'm not just your mom, but I'm older and you have those cute young girls all over you at school and...\"\n\n\"Hey.\" I lifted her hand and kissed the back of it. \"Mom, you're the most beautiful, sexy woman I know. You're not a girl, you're a woman.\" I winked \"A hot cougar!\"\n\n\"You say the sweetest thing!\" she smiled, \"But today...I thought what I wanted was that wild fuck, that throw caution to the wind and act like I was a slut from one of your uncle's movies. I used his fantasy to get money and have a reason to try to...well to try to get you hooked. I wanted to be the best you ever had so you would want more.\"\n\nMom took a deep breath and looking me in the eye asked softly, \"Ryan, do you want more?\"\n\n\"More?\" I fought back a smile so she wouldn't think I was making fun of her.\n\n\"Yes, more a lot more. Like all the time more.\"\n\n\"You mean like we...we're together?\"\n\n\"Yes.\" She nodded, \"If...if you don't want to, or you need time to think we can...\"\n\nMom stopped talking when I leaned over, took her face in my hands and kissed her softly.\n\n\"I don't have to think.\" I said, \"I...I want more of today and I want more of last night,\" I smiled, \"A lot of last night, you...you felt like you belonged with me.\"\n\n\"Honey, we are going to take such good care of each other! But I have to say one more thing. Earlier I think I upset you at the hotel when I said, 'this wasn't what I wanted.'\"\n\n\"A little.\" I admitted, not that I cared at the moment.\n\n\"I didn't mean it that way, see Ryan, as much as I needed that and as much as I enjoyed and...plan on enjoying it a lot more. That's not how I would have wanted our first time.\"\n\n\"No?\"\n\n\"No, honey, how I wanted our first time was like this.\"\n\nMom slipped her arms around my neck and kissed me gently. I moaned as her lips lightly teased across my lips and she drew me into her embrace. Unlike thro ugh kisses of earlier this one was slow, soft and sensual and as mom playfully flicked her tongue across my lips, I felt my body responding to her. \n\nBy the way her nipples were pressing into my chest through her thin robe mom was responding as well and I put my arms around her waist, hugging her tighter to me. Her fingers ran through my ear and sliding her lips from mine she lifted her head giving me access to the smooth skin of her neck. I eagerly kissed her there, sucking gently and enjoying her soft sigh of pleasure. \n\nMom slipped her hand between us and I groaned as she put her hand into my pants, encircling my cock with her slender fingers. She stroked it lightly while pulling the tie of her robe open to expose her breasts, I lowered my head and she purred as my lips found her nipple. She arched her back and held me close as I swirled my tongue around her pink flesh. \n\nMom pulled away from me and said, \"Stand up.\"\n\nI stood at the foot of the bed and pulling my pants down, mom took my cock into her mouth and slowly bobbed her head. I fondled her tits as she sucked on me, rolling her nipples between my fingers. Her mouth still working up and down my shaft, she reached back and undid her ponytail letting her long hair flow forward and against my stomach. \n\nMom kissed the tip of my cock and slid back onto the bed until her head was resting on the pillows. With a sexy smile she opened her robe all the way to show she was wearing nothing beneath it and slowly spreading her legs, beckoned to me.\n\n\"Come love you mother, baby.\"\n\nI crawled onto the bed, up and between her legs and as she pulled me down into a long slow kiss, I slipped into her forbidden heat. Unlike earlier I entered her slowly, enjoying the feeling of her soft wet flesh spreading around me and she sighed in my ear when I was buried deep inside her. I moved my hips slowly, and putting her arms around my shoulders, mom whispered, \"You feel so good, honey, so good!\"\n\nI kissed her neck and with a satisfied purr mom let her head fall back on the pillow allowing me access to her neck. I placed a trail of soft kisses up and down each side of her neck and she made a sexy little whimpering noise after each one. I was still pumping her slowly and rather than the tease I thought it would be, I found I was enjoying the sensation of feeling every inch each time I moved within.\n\nMom wrapped her legs around my waist and moved her hips in time with mine. I moaned in her ear at how incredible it felt to be engulfed by her welcoming heat as well as having our bodies entwined together. Her nipples were pressing into my chest and she was working her hips up and down each time I entered her, moaning as her clit rubbed against me.\n\n\"Yes,\" she whispered, \"Just like that, Ryan, make love to me, we have plenty of time for all the fun nasty stuff, but right now hmmm, I just want to love you.\"\n\n\"I want to love you,\" I said in her ear, \"Every night in every way.\"\n\n\"Oh, honey.\" Mom moaned and moved her hips harder, \"That feels so good! Just like that, just like that.\"\n\nMom's thighs were trembling against me and her breathing was becoming quicker. Her fingers dug into my shoulders and at the thought she was going to cum from my making love to her I became aware of my own body nearing its climax. I had to fight not tot thrust faster as my cock twitched inside of her seeking its release.\n\n\"Oh, a little more, Ryan.\" She moaned, \"I...oh, I want to come with you inside me, I...I want you to come inside me. Oh...\"\n\nMom's body tensed beneath me and arching her back, her tits pressing against me, she tightened her legs around my waist. Mom released a long moan and turning her head, buried her face in my neck and squealed in delight as she came. The moment her pussy contracted around me I gasped and still fighting to move slowly I whimpered as my body shook.\n\n\"Let it go, baby, cum with me.\" Mom whispered.\n\nI pushed into her and moaned in her ear as my cock erupted inside her.\n\n\"Ohhh.\" Mom purred as I continued to thrust, each movement ending in another long spurt.\n\nMom's pussy was quivering and her hips were grinding, milking her son's cock as it filled her\n\n\"Oh so good.\" She pumped her hips into me, squeezing herself around me, her body working for every drop.\n\nI moaned and let my weight go, resting against her and she whispered, \"I love you Ryan.\"\n\n\"I love you too, mom.\" I started to move, but she held me to her. \"Stay here, honey, let me hold you.\"\n\nI relaxed and nuzzled my face into her neck. Mom caressed my back with her nails and I moaned at the sensation of my cock growing soft inside her.\n\n\"That was so nice,\" she said in my ear.\n\n\"It was.\" I told her.\n\n\"Going to be the best of both worlds honey, you'll be my sweet love when I want it and I'll be your dirty girl whenever you want.\"\n\n\"I might want that a lot.\" I laughed,\n\n\"And you'll get it. Hmm,\" She sighed, \"You know the girls are going to a sleep over Friday, we'll have to play in the shower.\"\n\n\"The girls.\" I frowned, \"Mom what are we going to...\"\n\n\"We don't tell them of course. They won't know, we'll be careful. Speaking of them though...this weekend you're switching bedrooms with them.\"\n\n\"Why,\" I asked, still enjoying her embrace, and the feeling of my now soft cock still nestled inside her. \"I thought you wanted them closer to you.\"\n\n\"At the time I did, but they've seemed to have gotten over their nightmares and right now I want you closer to me.\" She giggled, \"Remember that one has the adjoining bathroom, this way we lock our doors and you just come on in.\"\n\n\"Hey. That's a good idea.\" I kissed her, \"I'd really like that.\"\n\n\"That's what I'm here for honey,\" she arched her back, pushing her tits into my chest, \"To make my baby happy.\"\n\n*****\n\nI opened my eyes and smiled at the smell of my mother's hair and the feeling of her nude body nestled into mine. We were on our sides, with my arm around her just under her breasts and her back was against me. She was asleep, and I lay there listening to her slow steady breathing and thinking how good she felt. Her breasts rose and fell against my arm and I was aware of her bare ass pressing into my cock.\n\nAs soon as I focused on that sensation, my cock began to swell. The fact that in addition to her hair, I could faintly smell her pussy on my face had me hard and throbbing against her in seconds. I thought about waking her, but frowned when I realized I had to go to the bathroom. Jeez, this shit didn't happen in the movies. \n\nI tried to fall back asleep, but kept thinking of the fun we'd had before we'd finally fallen asleep. We talked for awhile and the entire time I had kept touching her; caressing her thighs, her stomach, playing with her hair and unable to take it anymore, had grown bold enough to push her onto her back and starting sucking on her nipples.\n\nMom's reaction to that was to tell me that if I were in the mood to lick, I could find a better place and shoved my head towards her pussy. Unlike earlier, I took my time, teasing, licking and sucking, making her whimper and moan before making her come so hard she had to put the pillow over her face so she wouldn't wake the girls. \n\nAfter that we went around the world, trying every position we could think of and laughing and playing the entire time. We'd finished as we lay now; on our sides, with mom's back against me while I held her leg up and fucked her, while stroking her cit until she came. I followed suit, emptying what little come I had left into her equally spent pussy. \n\nWe'd barely muttered good night before I fell into a deep blissful sleep. Now it was one am and I didn't think I could go back to sleep until I went to the bathroom and maybe...mom might wake up. I carefully slid away from her and rolling onto her stomach, she murmured, \"You okay, honey?\"\n\n\"Sure just have to go to the bathroom.\"\n\n\"Okay, be quiet, I don't want the girls waking up.\" She put her head up and looked at the clock. \"I should go into my room. Sometimes Sarah peeks in; to make sure I'm okay.\"\n\nAs she spoke I took in the smooth creamy skin of her exposed back and let my gaze wander down the length of her right leg which was protruding from the covers. Her dark hair was fanned out across the pillow and I was overwhelmed with the thought of just how sexy my mother was. Leaning over I placed a soft kiss in the middle of her back.\n\n\"Hmm, that's nice.\" She sighed.\n\nI repeated the kiss then slowly worked my way down her back, leaving a trail of soft kisses as I made my way to the curve of her ass.\n\n\"I like that,\" she told me, \"Honey, you make me feel so good. You really make me feel like a woman.\"\n\n\"Because you are one, a beautiful one.\" I told her, then sliding the covers down to expose her ass I began kissing her round cheeks.\n\n\"Kissing my ass in every way, huh?\" she laughed softly, then groaned when I spread her cheeks and my next kiss was directly on her ass. \"Ohhh, bad boy.\" She then purred when the next kiss was on her moister lips.\n\n\"Um...you know you should go to the bathroom and hurry back, I think maybe I could stay here a little longer, just to you know, keep you company.\"\n\n\"I'll be right back.\" I stood up and when she saw my erection she licked her lips, \"Make it quick, honey, you keep me waiting I might start without you.\"\n\n\"Really?\" I grinned, \"Maybe I'll take my time, I wouldn't mind coming in to that.\"\n\n\"Okay.\" Mom rolled onto her back, kicked the covers off and spread her legs.\n\nReaching down she opened her pussy and stroking her clit moaned, \"Oh, Ryan, oh baby, oh yes, lick mommy's pussy...ohh\" she moaned long and loud while slipping her fingers in her pussy, before removing them and sucking them into her mouth.\n\n\"Damn mom.\" I said, stunned.\n\n\"I like that look.\" She smiled, \"Honey, I have years of fantasies and dirty thoughts to make up for, you better think about that, because I'm going to be pretty damn needy in bed.\"\n\n\"And I promised you I would always take care of you. I leaned over and kissed her, \"I mean as man of the house and all I should...\"\n\n\"Ryan.\" She said, the smile leaving her face as she took my hand.\n\n\"Um, what, you okay?\"\n\n\"Ryan, thank you for loving me in every way and being so good to me and I don't mean tonight in bed, but through all of this.\"\n\n\"We're here for each other. I love you mom.\"\n\n\"Love you to.\" She gave my cock a quick squeeze, \"But there's a whole lot of lust mixed in with that love so go and get back here.\"\n\n\"Yes ma'am!\" I told her and as she rolled back over on her stomach-obviously telling me she wanted me to pick up where I had left off when I came back, I slipped my pants on.\n\nI started for the door when I saw my phone and noticed I had received a text. Grabbing the phone I left the bedroom and quietly padded down the hallway to the small bathroom rather than risk waking my sisters. I had to stand there pushing thoughts of my mother waiting naked in my bed so I could get my cock to go down enough to pee, then after brushing my teeth. Cheked the text, it was from Uncle about an hour ago.\n\n\"Hey, Ryan! Just checking in to see how things are going. Please let me know.\"\n\nI stared at the phone thinking I should just let it go. We got what we needed, uncle got what he wanted and we didn't need to deal with him anymore. But holding the phone it dawned on me that my mother wouldn't be in my bed right now without him. Not only in my bed, but the two of us professing our mutual forbidden love as well as lust for each other. As sleazy as Uncle could be I was in the middle of the best night of my life and mom hadn't looked this happy since...\n\nDad. I hadn't even thought of him during this. He would be rolling in his grave right now, his wife and son in bed together. Then again he had told me to take care of her and that's what I was doing right? I was giving her everything she needed and all he had said he wanted was for her to end up with a man who would treat her well. Who could be better to mom, than me?\n\n\"Way to justify you perv.\" I muttered.\n\nI took a breath and dialed Uncle who answered before the second ring.\n\n\"Ryan, is everything okay?\"\n\n\"Just getting back to you.\"\n\n\"And...how are things?\"\n\n\"I...Uncle you were right.\" I told him.\n\n\"Really? You...the two of you...\"\n\nI wondered if I should be saying this, but then remembered he had a tape of us fucking so what would this hurt? If anything it would give him a thrill and I did feel like I owed him for this. \n\n\"Yeah, we...let's just say the answer to your question is my bed.\"\n\n\"I knew it.\" He sounded genuinely happy. \"Good for you two, I mean that, no ball busting at all. I saw it in her eyes and then in yours. So...you two are going to you know, try it?\"\n\n\"That's the plan, just I don't know...\"\n\n\"No one would ever suspect it Ryan. It might seem weird you have no girlfriend, but most people don't think like I do.\"",
        "\"That's the truth.\" I said and he laughed\n\n\"Too true, but I had this one dead to rights, you take care of her Ryan. Your mother is a hell of a woman and you need to treat her that way.\"\n\n\"I will.\"\n\n\"And I'm not just talking sex.\"\n\n\"Neither am I.\"\n\n\"Good.\"\n\n\"Uncle...I'm sorry you never got the chance with your mom. My mother told me why she thinks your mother would have and that's too bad.\"\n\n\"My father was a prick. My brother was a good man in spite of him not because of him, and for me? I play the field, but I have never broken a heart. Make sure you never do either, especially your mother's. You can make me feel better about my missed chance by making the most of yours, deal?\"\n\n\"Deal and um, maybe we could get together here and there and hang out?\"\n\n\"I'd like that, Ryan, how about the girls?\"\n\n\"Sure. We can all go to Chuckie Cheese.\"\n\n\"Umm...sure why the hell not?\" Uncle laughed again. \"Well for something so forbidden this seems to have worked out for everyone. So I will let you go back to your...mommy girlfriend there.\" He laughed again and I smiled at the absurdity of what he had said. \"Thanks for telling me, I appreciate it.\"\n\n\"No problem.\"\n\n\"Good night, Ryan I'll...\"\n\n\"Hey Uncle?\" I cut in. \"There's another reason I called you. I need to tell you something.\"\n\n\"Oh, what is it?\"\n\n\"Thank you.\" \n\n*****\n\nAuthor's Note Hope you enjoyed the wrap up to Mom will do Anything. Just goes to show what I have always believed...who is society, religion or Government to tell us who we should and shouldn't love. As Crowley so eloquently said it, \"Do as thou wilt is the sum of the law\". Thank you again to all who voted and commented on chapter one and I hope you will do so again here. Going to be putting up another mother/son piece shortly, just trying to decide which one I want to post next. As always, thank you for reading and supporting my writing. LC68"
    ],
    "authorname": "lovecraft68",
    "tags": [
        "mother son incest",
        "mother son sex",
        "mother son romance",
        "porn shoot",
        "taboo erotica",
        "mother seducing son",
        "mother son lust",
        "oral sex",
        "incest romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/mom-will-do-anything-ch-02"
}