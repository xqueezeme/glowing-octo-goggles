{
    "title": "Work The Problem Ch. 07",
    "pages": [
        "Tags for This Story: Furry, Anal, Rimming\n\n<p align=\"center\">_____________________________</p>\n\nJust as Arnold had predicted, the 'few months' needed to upgrade the portal's power sources was compressed down into a few weeks thanks to a truly unbelievable amount of resources that the entire world threw at the problem. Somehow the notion of humans trapped in another dimension made old political differences much less important. The entire Earth was united under the idea of 'our people are in trouble, and we're going to get them back'.\n\nIt still made no difference. Grace sat and clutched her hands together as the assembled staff and VIPs sat through another interminable charging sequence in Main Operations. There was another horribly long moment while they charged everything up and...still saw nothing. She didn't see so much as the tiniest spark from the center of the great machine.\n\nAfter John and Arnold had gone through their various mutterings and pointing at graphs, General Gossett stepped up onto the dais next to the controls. As bad as Grace felt, General Gossett looked even worse. The soldier was still impeccably groomed, but the bags under his eyes betrayed the pressure he was under. After another whispered consultation with the two scientists, he turned and surveyed them all.\n\n\"We're still collating our data. There's an all-hands meeting in six hours.\"\n\n<p align=\"center\">_____________________________</p>\n\nPrivate Jack Rockatansky took the rifle from the rabbit-dude and eyed it with something close to lust while the furry guy talked.\n\n\"Now, what we've done is take some of your remaining 'fifty-cal' ammunition and reproduced it. We don't have that many ammunition factories, so we're having to re-tool one before we can really produce large quantities. But in the meantime we wanted a test weapon to fire our version of your ammo before we test them out in your machine guns.\"\n\n\"Makes sense,\" said Rockatansky distantly. He was used to getting handed weapons that were well-made but also clearly mass-produced. But this...the gun in his hands could only be described as art, with flowing clean lines and a meticulously crafted stock. It looked like a bespoke large hunting rifle. \"You sized this for us?\"\n\nThe cheerful rabbit-guy's name was Gunthar Smallburrow, and he was a gunsmith and machinist. He was the first lagomorph that Rockatansky had seen with actual muscles in his arms. Gunthar nodded at the private's question. \"I figured it would be easier for you monkey-boys to test. I tried out an earlier test-article and, well...\" He rubbed his furry shoulder as if in memory of a painful injury. \"Now for this one I used our standard rifle template and made it larger to fit both you and the larger round. It's a bolt-action only, like our rifles. But I figured it would be better to just change one thing at a time.\"\n\nRockatansky looked up at the distant target. The two of them were at the firing range that had been set up near the defenses around Hadley's Farm, and they had set up their test at the longest range. At this distance, the man-sized card looked like a small white fleck. And this rifle only had iron sights and no scope, so even hitting the damn thing would take some doing.\n\nThe Ranger smiled. He was well-acknowledged to be the best shot in the platoon, so if he could get this to work he'd have bragging rights for months. He looked down and levered open the bolt. \"There's no magazine, right?\"\n\nThe gunsmith shook his head, his big eyes apologetic. \"Like I said, I only wanted to test one thing at a time.\"\n\nRockatansky nodded and held out a hand. Gunthar put what looked like a perfectly cromulent fifty-caliber round into his hand. The private held the cartridge up and gave it a quick once-over. Apart from the lack of markings on its back, he'd be hard-pressed to tell that it came from somewhere other than a factory back home. He nodded his approval and loaded the round. He closed the bolt; its lever was just the right size, and the movement was smooth as silk. He got down into a prone shooter's position and placed the rifle barrel on the rest they'd set up. The rifle's metal was cool against his cheek as he set up the shot; he could just see the target's center. It was a small black dot that seemed to dance in the heat waves thrown up by the ground. Today was more-or-less windless, so at least he had that going for him.\n\nThe Ranger let out a breath and squeezed. The trigger action was as lovely as the rest of the weapon, with the 'glass rod breaking' feel that was so desired. He loaded and shot three more times, then they safed the rifle and trouped downrange to see how they'd done.\n\nRockatansky began chortling as they got close to the target. He could see four neat holes punched right around the center, grouped tight enough to lay a playing card over them. As Gunthar made notes the private looked down at the weapon.\n\n\"Oh, baby, where have you been all my life?\" With a good scope on it this thing would give any sniper rifle back home a run for its money. \"How much for it?\"\n\nGunthar looked up from his note-taking. \"Eh? Oh, you can keep using that if you like. I'll let them know the prototype rounds work well, and we can also see about making some mounted weapons in that caliber that our people can use.\"\n\nRockatansky was stunned at the gift. \"No, wait, I gotta pay you for this. When our portal gets re-opened, I got a good chunk of change saved up.\"\n\nThe gunsmith laughed. \"You're money's no good here, literally.\"\n\nAs the pair headed back to the other side of the range, Rockatansky saw a few of the new militia walk down from one of the berms. These guys were dressed in green/black and blue/black outfits, which meant they were from the cities of Hingbrook and Ecklam, respectively.\n\n\"Mornin', folks,\" he said to them pleasantly.\n\nMost of them returned his friendly wave with an equally pleasant greeting, although there were a few in both militia that just gave curt nods in reply. It was the first really standoffish response that the Ranger had encountered, but he just shrugged it off. After all, they were still probably getting used to dealing with giant monkey-boys.\n\n<p align=\"center\">_____________________________</p>\n\nThe weeks passed in a whirl for Ned. He'd been tasked with continuing to manufacture explosives 'just in case' the terror-birds tried something again. That took most of his time during the day, and at night he returned to the barracks and Holly's enthusiastic greeting. She'd been given her old job back, although a lot of her own time was getting eaten up in interviews with various reporters from all over the planet.\n\nEventually they decided that the barracks were not quite 'homey' enough. After her disappearance, Holly was declared 'missing, presumed dead', which meant her apartment had been let out to someone else. Fortunately Emma had moved her things into storage. It took some searching, but finally Holly and Ned found an apartment with ceilings tall enough to keep Ned from hitting his head everywhere. Unfortunately that apartment was on the top floor of its building, which in turn meant that they had to haul all of her stuff up four flights of stairs.\n\n'They' turned out to be mostly 'Ned'. He couldn't resist it when Holly batted her big blue eyes and asked him to carry the heavy items. He was so strong, after all. Ned knew he was being manipulated but went through with it anyway. She didn't have that much furniture.\n\nBut now he was regretting his decision. He lay flat on the carpeted floor of their living room and felt the ache from his tired back muscles. Holly hummed happily as she unboxed some pictures and set them out. Eventually she came and stood over him with folded arms and a cheeky smile.\n\n\"Oh, come on. I thought you were supposed to be this big strong guy.\"\n\n\"Yeah, but I haven't had a decent workout in a few weeks. I've been too busy running around making stuff that goes boom. Plus I recall somebody short and furry saying something about having 'only a few boxes to carry'.\"\n\nHolly rolled her eyes. \"All right. Shirt off, turn over.\"\n\n\"What?\"\n\nShe made an imperious twirling motion with one finger. \"Take your shirt off and turn over.\"\n\nNed raised an eyebrow but went ahead and did so. As he turned over he felt her big feet step up onto his back. Holly pressed one foot hard into one of his lats and then stepped up fully onto him before she started walking up and down his back. He had to admit that it felt pretty nice.\n\n\"Thanks. You know, there are massage places back home that charge extra for this,\" he mumbled into the carpet.\n\n\"I'll bet,\" she replied. \"What other sorts of things do they charge for?\"\n\n\"Heh, well if the place is disreputable they might also offer, well, you know.\"\n\nHer voice was amused as she kept treading up and down his back. \"Oh, but I don't know. Tell me.\"\n\nHe felt his face redden. Why the hell was he feeling so embarrassed all of a sudden? \"They offer physical release.\"\n\n\"Ah, I see. How do they achieve that?\"\n\nHe knew his ears were beet-red by now. \"I've only heard about it, you know.\"\n\n\"Of course,\" she purred. Her toes began to knead his back. \"But I'm just trying to learn more about you monkey-boys and your mysterious ways. What do these places offer, exactly?\"\n\nNed sagged into the carpet in defeat. \"They use their hands. Or sometimes their mouth, or their, um, breasts.\"\n\n\"I see. Now that I think about it, I should massage your front as well.\" There was a brief rustle, and then off to Ned's left he saw out of the corner of his eye Holly's dress fall to the floor. \"Turn over, if you please.\"\n\nShe stepped off of him as he complied. Her now-naked form stepped up onto his abs, making him give a little gasp. She smirked and turned away, presenting him with the sight of her wonderfully pert ass and little powder-puff tail. It was a view he never got tired of. Her feet first kneaded his abs and then she stepped up to his pecs. He could now look straight up between her legs; her puffy little lower lips were already glistening with her excitement.\n\n\"Yes, you seem very tense, sir,\" said Holly as her strong toes clenched and relaxed. She brought one foot down to rest on his still-clothed crotch. \"Especially here.\"\n\nNed began to reach down to undo his belt.\n\n\"Oh, no, sir,\" said Holly. \"Allow me. You're so tired, after all.\"\n\nShe knelt on his chest and quickly unlaced his belt. Ned stroked her thighs, and in response Holly spread them and abruptly sat on his face. Ned took a deep breath in, reveling in her familiar musky scent before beginning to lap at her folds.\n\nHolly shivered while she finished unbuttoning his fly and pulling him out. Her wonderfully soft paws stroked him once, then the furry little temptress pulled up her legs so that they were lying along Ned's chest and stomach. His mouth was now pinched between her thighs, and he could just barely reach her cunny. She shifted so that his mouth pulled away from her lower lips and his face was pressed right into her asscheeks.\n\n\"Don't worry about pleasing me for now,\" she said in the low voice that meant she was getting really randy. \"I want to try something.\"\n\nNed gasped as he felt the velvety-soft touch of her feet on his member. Her strong toes gripped at each side of his shaft before she slowly stroked her feet up and down. Her footpads were smoother than he expected, and the combination of soft skin and softer fur on his cock made for an exquisite sensation.\n\n\"Do any of those 'disreputable' places do this?\" Holly asked with a giggle. Ned moaned as she really got to work on him. With every up-stroke she brought her feet up to the very top and gave his cock-head a gentle squeeze before stroking back down. It was a slow, tortuous, and wonderful pumping that left Ned short of breath.\n\nIn a daze he brought his hands up to stroke her hips. He couldn't quite reach her cunny, but her crinkled rear entrance was pressing right against his nose so he tilted his head up and began to lick.\n\nHolly gave a satisfied hum. \"Mmmm. Very disreputable, sir. I like it.\" She began to move her feet fractionally faster.\n\nThus encouraged, Ned began licking harder. He felt her rear pucker spasm as he teased all around it, coating the sensitive skin with plenty of saliva before poking at the very center.\n\nHolly gasped at the press of his tongue, and her foot-job picked up the pace. He felt her rectum quiver around him as his questing organ sank ever so slowly into her.\n\nNed stopped stroking her hips and instead reached up to grab her tits. Her nipples were hard under his palms as he used the leverage from his grip to press her down onto him. Holly whimpered as her feet pumped him ever faster. Ned's hips bucked a little as he instinctively thrust up into her feet. He was getting so close...\n\nHolly's feet dropped away, making Ned moan into her ass.\n\n\"Don't worry, sir, I'll take care of you,\" said Holly. Ned took in a deep breath as she leaned forward and pulled herself off of his tongue. Before he could take another breath she had spun herself around and was pressing his swollen cock-head up against her spit-covered rear. Her vulva gaped lewdly at him as she panted and began to force herself downward. He stroked her shins in a daze, then realized what she was attempting.\n\n\"Holly, are you sure-' began Ned, then he threw his head back and cried out at the sensation of her tight sphincter opening around him. He gripped the carpet with his hands as he felt his glans sink slowly into her before finally popping past her anal ring and into her ass.\n\nShe paused as Ned tried to draw breath. Holly's vagina was always on the tight side, even after she'd gotten fully used to him. But her rectum was like a wonderfully soft vise clamped cruelly around the top of his shaft.\n\nThe rabbit patted his chest with one trembling paw. \"You see, sir? We're full service.\" She began to move downward, inch by inch, slowly at first then faster as her rear became adjusted to his intruding pole. Ned stroked along her thighs towards her glistening vulva. Holly put a hand over herself and blocked his attempted touching.\n\n\"Relax, sir, I've got it.\" she said in a joyful tone.\n\n\"Just...ahh...just be careful,\" he gasped as her wonderful inner flesh stroked along him. He settled for resting a hand on each of her thighs as she sank ever downward. It felt like she would never reach bottom, and right now Ned wasn't sure if he wanted her to.\n\nEver so gently, her asscheeks settled onto his groin. He felt her little cotton-puff tail brush against his scrotum as Holly gave a satisfied moan. She put her hands on his thighs as she pushed herself back up, again with that same delicious slowness. She paused at the top, then thumped back down into Ned's groin with sudden speed. She smiled at Ned's grunt of surprise and then began to ride him.\n\nNed took advantage of her moving her hands to once more reach for her. This time she didn't stop him; as she rode, her face became more and more slack with lust as her guts were plowed by his organ. Her tongue hung out of one side of her mouth and dangled a little bit of drool.\n\nHolly moaned as he stroked her cunny's lips and sought out her clit with a practiced thumb. His other thumb parted her lips and pressed into her. Her channel squeezed his thumb in the same way her rear squeezed his cock. Ned's brain was almost unraveling from her relentless assault. He was getting close again, and Holly's moaning was getting faster as well. Ned sought out her g-spot and pressed up, his other thumb stroking firmly over her clit.\n\nShe thrust down, literally bottoming out on him, just as she cried out and shook with her climax. The feel of her ass spasming around his cock was enough to give Ned the extra bit of sensation he needed, and he added his cries to hers as he spurted deep in her.\n\nAfter a long, lovely moment, Holly's shaking subsided.\n\n\"You...okay?\" asked Ned in between his own gasps. He felt like he'd been milked by a machine.\n\n\"I'm very good, sir,\" replied Holly. Her usual happy grin was back on her face.\n\n<p align=\"center\">_____________________________</p>\n\nConrad's foot jittered while he smiled at one of the blue-and-black-clad members of the Ecklam City militia. The militia member was an older, gruffer male with the alliterative name of Theobald Townsend.\n\n\"So, ah, you're also guarding the farm now?\" Conrad asked in a voice that he hoped sounded bright and cheerful.\n\n\"Yeah,\" replied Theobald. He shifted his rifle in front of him in a way that made it clear that Conrad was to not even think about going past him.\n\nConrad took a peek over the bigger rabbit's shoulder. He saw the now-familiar forms of the giant monkey-boys moving around the various berms and gun emplacements surrounding Hadley's Farm. But now there were also additional people, his people, clad in the uniforms of various city militias. It was quite a colorful-looking crowd, thought Conrad.\n\nHe then looked up at the large horn-like sirens mounted on poles around the farm. They were now everywhere, even in the city, and intended to give warning in case a portal was sighted. The powers-that-be had done a test or two, and Conrad shivered as he remembered the sirens' mournful wail that seemed designed to unsettle. Apparently the noise was based on something the monkey-boys called an 'air raid warning'.\n\nHis musing was interrupted by Theobald's unamused voice. \"Why are you here?\"\n\n\"Just waiting for someone,\" Conrad replied. \"One of the newcomers, actually. She asked me to meet her here when she gets off duty.\"\n\n\"Newcomers?\" Theobald's eyebrow rose. \"You mean one of...them?\"\n\nConrad let Theobald's insulting tone slide. \"Yeah, her name's Marlene. Nice girl. I was gonna take her out tonight.\"\n\n\"Really.\"\n\n\"Yeah, see, we met when...\" Conrad saw a familiar muscular figure climb the berm towards them. \"Ah, there she is! Hi, honey!\"\n\nEven though Marlene was short for a monkey-person, she still towered over Theobald as she walked past him. She gave the militia member a casual nod of greeting, one he returned with a neutral nod of his own. Then her face split into a happy smile as she turned to Conrad.\n\n\"Great, you made it!\" Before Conrad could blink she'd grabbed him up in a big hug. The Ranger began to nibble playfully at his neck. \"Grrr, you are too damned adorable, sweetie. I could eat you up right here and now.\"\n\nConrad's feet dangled as he returned her hug. He looked over and give Theobald a wink, which made the older rabbit's other eyebrow rise as well.\n\n\"So what'll it be?\" asked Marlene cheerfully. She gave his ass a completely gratuitous squeeze before setting him back down.\n\n\"I know you wanted to hear our music, and there's a big outdoor concert in the town center tonight. No chance of bonking your head, either.\"\n\nMarlene laughed. \"I'd be down for that. We just gotta stop by the barracks so I can shower and change into my civvies. See ya, Theo.\"\n\nConrad gave Theobald a nod of his own as he took Marlene's hand.\n\n<p align=\"center\">_____________________________</p>\n\nGeneral Gossett stood at the podium and grasped it like it was the one thing keeping him upright. The entire science team of the base had managed to squeeze into the small auditorium that they'd hastily set up for the press. The latter, of course, were not attending this meeting.\n\n\"We need to make sure you're all in the loop on this,\" he said, and looked them all in the eye in turn. \"We're looking for ideas. This room holds the world's best and brightest, and if we're going to have any chance of reopening that damn portal we need options. So first up is Arnold and John.\"\n\nThe two men wheeled a whiteboard onto the stage and proceeded to talk while filling it with what looked like fancy spaghetti to Grace's eyes. While they filled it, they talked about barrier potentials between branes and other such terminology. Grace refrained from commenting on any of it; she knew just enough of the science behind it to realize how little she knew.",
        "Arnold finished one equation and tapped a symbol that looked like a pitchfork. \"That's the big unknown variable. The energy barrier between dimensions. We have an idea of both the lower and upper range that this could be, and today's attempt was made assuming the lower value.\"\n\n\"But we can't just pile on more power,\" added John Dengar. \"Right now we're stretching the limits of both our capacitor and superconducting cable technology. If we make 'em much bigger, we won't be able to chill everything sufficiently when carrying such huge currents.\"\n\nOne of the scientists, a Russian nuclear expert named Dimitri, raised a hand. \"The terror-birds managed it, though.\"\n\nArnold nodded. \"And that's what we all need to go over. We have a small amount of video from the lagomorph's dimension that shows the attackers. We know that their energy storage technology must be a lot better than ours since they carried portable beam weapons. Maybe their energy-generation tech is better as well. It's not much, but it's all we've got.\"\n\nDimitri persisted. \"Are you sure that today's test did nothing at all?\"\n\nJohn shrugged. \"Maybe it did? We did see a slight fluctuation that indicated the start of portal formation. But there was nothing visible, so whatever gate we were able to open was microscopic in size.\"\n\n\"We did see a little UV radiation as well,\" added Arthur. \"That also indicates we did open a very small portal. We'll need to do another attempt with more sensors. If we also see a big pulse of microwaves, then we'll know for certain that at least we're making a tiny portal. But you wouldn't be able to fit anything through it. Well, I guess you could fit through some bacteria.\"\n\nThe words made something go click in Grace's head. \"The mystery bug!\" she yelled, then blushed as she realized that she'd spoken aloud. Every eye in the place turned to her, and Grace managed to control her nervousness as she stood and addressed the general. \"Sir, you remember that strange bacterium we found in the soil samples from Holly's world? We're still trying to culture it. That was why we asked for Dr. Harold Gilbreath from Oxford to help us out.\"\n\nThe general crossed his arms. \"Yes, I remember the requisition. You still have had no success?\"\n\nShakti now got to her feet as well. The soil expert made it mercifully brief as she detailed her discovery of the mystery bacterium. \"My attempts at culturing were a failure,\" she said without a hint of embarrassment. \"And so we hoped that Dr. Gilbreath could help us. He's the world's foremost expert in exotic bacteria.\"\n\nA corpulent man with a ruddy face stood up. Grace had never met with Harold until he'd arrived in Nevada. He was a refreshingly unassuming and cheerful professor who talked like a coal miner but had a mind like a steel trap.\n\n\"We tried the normal growth media, of course,\" he said. \"And we wound up with plenty of bacterial colonies, but none of them were our mystery beastie. So I figured that it must require additional environmental conditions apart from warmth and food in order to grow. We first tried the standard spectrum from infrared up to UV. It does seem to respond better under UV exposure. We've also found that it requires a growth media with iron and a few other trace metals. But what cultures we have are still very small. Not enough to get any real data on them.\"\n\nArnold already had his usual thousand-yard-stare as his mind worked through the implications. \"You think this mystery bug is a creation of the terror-birds?\"\n\n\"It must be,\" said Grace with firmness. Now that they were discussing the details, her earlier nervousness had evaporated. \"I never saw any trace of such a bug in any of Holly's tissue samples. But from our soil samples it looked to be everywhere in that area of her world. It doesn't appear to be harmful, it just...sits there, mostly. It certainly can't multiply in living organisms.\"\n\nJohn's face had now assumed the same distant gaze as Arnold. \"If it responds to UV, then maybe it's only supposed to multiply when a portal opens. We should test it with both UV and microwaves...\" He trailed off as he tapped a finger on his chin.\n\nGossett swept a finger across the standing scientists. \"You three, come with me.\" He jabbed the same finger at Arthur and John. \"And you two as well. We've got some tests to do.\"\n\n<p align=\"center\">_____________________________</p>\n\nMarlene was by far the tallest person present among the huge crowd of furry forms that filled the grassy bowl of the amphitheater. To keep from blocking anybody's view, she stood at the back wall. Unfortunately, Conrad was on the shorter side even for a lagomorph. She made up for that by letting him ride on her shoulders. Marlene took the opportunity to caress his furry digitgrade feet as Conrad whooped in enthusiasm for the band currently taking the stage.\n\n\"This is The Lakerville Quintet!\" he yelled. \"They're awesome!\"\n\nMarlene smiled and patted one of his feet. She'd liked pretty much everything that they'd heard. Her fear was that their hosts would have completely different musical traditions and that everything would sound weird and atonal to her ears. But so far everything had at least sounded like something she would call 'music'.\n\nAfter a bit of tuning and tweaking, the five rabbit-people on stage began to play. Marlene had to admit that she really liked it. The music itself was vaguely Celtic in tone, but with a almost jazz-like beat to it.\n\nShe grinned and bounced along to the music, ignoring the curious stares from the other lagomorphs nearby. Conrad was clearly equally as happy as her, and gave her scalp a nice caress with one paw while he waved the other in the air. That seemed to be a rabbit-person thing; the huge space in front of Marlene was a swaying forest of upraised arms and long ears.\n\nThen she felt something press against the back of her head. Conrad was too busy whooping it up and didn't realize that his excitement was reaching below his belt. Marlene smiled wider and moved her hands higher to grab his dangling ankles. She gently pulled forward and pushed her head back to grind it into his still-clothed crotch.\n\nMarlene felt Conrad shudder, and the paw stroking her head suddenly clutched at her short hair. It was quickly joined by his other paw. She just heard him gasp over the sound of the music as she reached back with one hand to grab his butt and press him even more firmly into the back of her head.\n\nHis clothed erection pressed into her skull as she smiled smugly and slowly ground against his crotch. The band onstage want through a pretty lengthy set, and she took full advantage of that to tease her little lover mercilessly. By the time the quintet had taken their bows and left the stage, Conrad's body was nearly vibrating with his desire. He brought his lips down to her ear.\n\n\"I need to pee,\" he said quietly. \"And so do you.\"\n\n\"Is that an order?\" Marlene asked with a smile.\n\n\"More like a suggestion,\" he replied as he caressed her cheek. \"There's a little secluded area along the river that I know of.\"\n\n\"I just bet you do, you horny little bastard.\" Marlene patted his foot and began strolling for one of the amphitheater's exits with Conrad still perched on her shoulders.\n\n<p align=\"center\">_____________________________</p>\n\nThey easily found Conrad's 'secluded area', a little patch of turf surrounded by high bushes and overhung by many trees. The lagomorph didn't waste any time in pulling her shirt up and reverently kissing her stomach. Marlene leaned her head back against a tree and gave a little shiver as he gently reached up and pulled down her bra. As her breasts were exposed he carefully licked at one nipple.\n\n\"No, be rough,\" she whispered.\n\nHis flat teeth scraped against her aureola as he began to nibble on one nipple while squeezing and mashing her other breast with one paw. His other paw began to unbuckle her pants with quick, jerky motions. It was clear Conrad was as ready to go as she was\n\nMarlene whimpered in delight and reached down herself to grab at Conrad's waistband. Her fingers fumbled open his fly and reached in to grasp his rock-hard member. He moaned around her nipple as she gently squeezed him.\n\nShe pushed him back and reached down to push down her pants just past her knees. By now she was so horny she didn't want to bother with taking off her boots. Marlene turned away and knelt, then spread her legs as much as she could. Her sex glistened in the dim light as she pressed her chest into the ground and presented herself to Conrad.\n\n\"Hard. Fast,\" she moaned. Her breath was taken away as Conrad stepped forward and speared into her with unerring accuracy. His paws gripped her hips as he began to piston himself inside her.\n\nMarlene clutched at the ground and grunted in ecstasy as he fucked her. His own gasps sounded loud in the little wooded alcove. His pointed cock pressed heavily on her g-spot with each of his forceful thrusts, and the Ranger knew she was going to get off in record time. Just before her own orgasm hit, Conrad pressed into her with one final thrust and began quivering. She felt the warm spurting of his cum inside her, which in turn sent her over the edge. All she could do was press her bottom back against him while he grunted and pulled at her hips like he was trying to drive himself through her. His cock kept spurting thick gobs of his essence, and she could feel it oozing out of her stuffed cunny.\n\nThe Ranger reached between her legs to give his crotch a good long fondle as his spurting finally subsided. One of his paws let go of her hip and patted her lower back, and in response she gave his pecker a good hard squeeze with her pelvic muscles before gently pulling off of him.\n\nMarlene managed to turn herself over, even though her pants were still tangled around her legs. Conrad all but collapsed on top of her half-naked body, and she hugged him fiercely to her chest. As she kissed the top of his head she was surprised to hear him sniffle.\n\n\"Hey, what's with that?\" she asked softly.\n\n\"I'm so selfish,\" he murmured.\n\nMarlene gave the back of his head a gentle scratching. \"Are you kidding? You got me off just fine and dandy.\"\n\n\"No, not that. It's horrible, but deep down I kind of hope that your world's portal doesn't open again.\"\n\nMarlene blinked in surprise, then realized what he was afraid of. \"You mean, if it does then I'd have to leave.\"\n\n\"Yeah. I'd miss you, that's all,\" he said as he returned her hug with equal fervor. His ears were tucked behind his head, a sure sign of his distress.\n\nMarlene laughed. \"What makes you think I'm going anywhere?\"\n\nHe looked up at her with surprise in his big eyes. \"Well, even if you wanted to stay you're still in your militia, right? They'll make you go back home.\"\n\nShe leaned down to kiss his nose. \"First off, chances are they'll assign us here anyway since we have the most experience.\"\n\nHis ears rose back up. \"Really?\"\n\n\"Yep. And even if they don't I've only got about six months left.\" She pulled him up so that they were face-to-face and gave him a long, ravishing kiss that made his eyes half-close in bliss. \"So the worst case is we have to wait six months before I move back here,\" she said after she broke the kiss. \"Although I may go home after that to get a burger now and then.\"\n\nConrad chuckled. \"I guess I could allow that.\" He leaned in and kissed her back, and this time it was a lot more gentle and langorous affair. The lagomorph then broke the kiss with an apologetic expression.\n\n\"I really do need to pee now,\" he said.\n\nMarlene caressed the back of his fuzzy head. \"That's fine,\" she replied, then looked down at herself. Fortunately his emission was oozing into the ground instead of onto her pants, but her crotch was still a gloriously sticky mess. \"I gotta clean up anyway.\"\n\n\"Do you need me to get you something?\" Conrad asked as he stood and tucked himself back into his pants.\n\n\"Nah, I brought some wipes.\" She grinned up at him. \"I had a sneaking feeling I might need some. Ya horndog.\"\n\n<p align=\"center\">_____________________________</p>\n\nThe general and his trailing gaggle of scientists found a microwave oven in the nearest breakroom. They promptly removed it from its rightful place on the counter and handed a puzzled technician the half-frozen entree from inside it before marching the purloined appliance off to the biolab.\n\nA bit of frenzied and creative engineering resulted in a microwave oven with a UV lamp stuck into it. \"This violates about fifty different safety regs, I think,\" said John Dengar. He regarded the kluged-together monstrosity that now sat on the lab bench and shook his head.\n\nGeneral Gossett snorted. \"I don't give a good goddamn right now. Just get on with it.\"\n\nJohn shrugged. \"Okay, then. Can I have one of the samples?\"\n\nHarold brought over a covered petri dish. The white growth medium inside had a few little barely-visible black specks. \"This is the most 'pure' sample we have available,\" he said. \"Just be bloody careful with it.\"\n\nJohn took the dish with a little bow and set it inside the oven. \"I think we should be elsewhere when this thing turns on. I can plug it in with a timer to turn it on and off. We should wait outside while it's on.\"\n\nIt was kind of frustrating to Grace. She wanted to see this thing work. But she realized that getting a faceful of microwaves was probably not the healthiest thing, and so she trouped out of the lab with the others. They waited in the hallway; most of the scientists fidgeted in one way or another, while General Gossett just leaned against the wall with a stoic expression.\n\n\"It doesn't make sense,\" said Arnold. \"Why should these bacteria have anything to do with portal formation?\"\n\n\"It probably doesn't,\" replied the general with a calm that matched his expression. \"But right now I'm grasping at straws.\"\n\nAfter an interminable five minutes, they all trouped back into the lab. John peeked around the corner of the lab bench that held their 'incubation chamber'. \"It's off,\" he said, and they all clustered around the oven as he opened the door.\n\nThe petri dish inside was absolutely overflowing with black goo.\n\nHarold smacked a fist into his palm. \"Bloody brilliant! Now we have enough to do some proper testing! We'll find out what this beastie is, don't you worry.\"\n\nAfter a whirlwind couple of hours, however, the little group was still just as puzzled.\n\nThe six of them gathered around a work table covered with printouts. Harold sighed and pointed at one of them. \"Roight. The mass-spec shows that the iron in the growth media is indeed getting taken up by our mystery bacteria.\" He moved a finger to the next printout. \"But here things get really strange. We ran the standard DNA assays on it and...we had no results. No bloody results at all.\"\n\nThe room was silent for a bit until Arnold spoke up. \"Wait, so this thing has no DNA?\"\n\nGrace nodded. \"I did the usual amino acid assays as well. Nothing, not a bit of it. This thing also has no proteins.\"\n\n\"That's impossible!\" said Shakti. Her usually calm face was troubled. \"No enzymes? It can't function!\"\n\nHarold sighed. \"I agree. I'll be buggered if I can see how this damn thing works.\"\n\nGrace rubbed her forehead. They'd gained a little victory only to run into more mysteries. Somehow this was a form of life that did not use any of the normal metabolic or reproductive mechanisms, but it still reproduced. She growled in irritation.\n\nAnd then, just like that, the answer dropped into her head. \"It's not a lifeform,\" she said aloud.\n\nThey all turned to look at her as Grace laughed. \"We all assumed it was, because it looks like bacteria that we're familiar with. But what if it's not? What if it's some kind of nanotechnology?\"\n\n\"For what purpose?\" asked Harold. But his face was thoughtful. \"It does not seem to have any other purpose other than to multiply. It's inert to organic beings, so it's not some kind of bioweapon.\"\n\nShakti looked similarly thoughtful. \"It takes in iron. Maybe it's some kind of mining nanotechnology?\"\n\n\"But it needs such a unique environment to grow,\" said John Dengar. \"It's clearly designed to multiply right when a portal gets opened. If it's a construct, then it must have some purpose. But what could that be?\"\n\nThe resulting long silence was broken by Arnold's whisper.\n\n\"Resonance.\"\n\nHis dark-skinned face suddenly sported a huge grin as shoved both fists into the air and yelled \"Resonance!\" They all reared back from him in alarm, then Arnold tore out of the lab with another happy yell of \"RESONAAAAANCE!\" echoing behind him.\n\nThey all stared in surprise at each other for a second, then Arnold's fainter yell came through the lab's open door.\n\n\"BRING THE GOO! COME OOOOON!\"\n\nGeneral Gossett looked at the shocked faces around him and shrugged. \"Meeting adjourned, I guess. Now let's go see what our resident madman has figured out.\"\n\n<p align=\"center\">_____________________________</p>\n\nConrad Underlake hummed as he made his way back from the restroom. The moonlight shone down onto the paved path through the surrounding trees and created abstract shadows. He could hear the distant music from the festival. He smiled as he looked up into the starry expanse overhead. It was a beautifully clear night, and Conrad had a bounce in his step that made him feel like he could jump over the moon.\n\nMarlene was staying. His wonderful warrior-woman was staying for him. He made a solemn promise to himself to do his very best to make her feel happy and loved every day.\n\nHis pleased musing was cut short when a larger furred form stepped out of the bushes in front of him and blocked his way. Conrad was pretty sure he was one of the Ecklam city militia he'd seen earlier, but if so he was just wearing street clothes now. \"What are you doing?\"\n\nConrad looked around in puzzlement. \"I'm...walking?\"\n\nThe larger lagomorph glowered at him. \"Smart ass. I mean what are you doing with that monkey-girl?\"\n\nBefore Conrad could respond another equally large lagomorph emerged and stood behind him. \"I think he's some kinda freak,\" said the newcomer. \"Probably gets off on thinking about getting eaten.\"\n\nConrad rolled his eyes. \"Come on! She's perfectly nice and no, I don't want her to eat me.\" He gave a little chuckle. \"At least not for food. As for the other way, I have to confess she's eaten me plenty of times.\" He gave the one in front a friendly little wink as he hoped the joke would defuse things.\n\nHis accoster was not amused. \"What, your own kind isn't good enough for you?\" He thumped Conrad in his chest, shoving him back. The one behind him gave him a push back in the other direction.\n\nConrad rolled with the push and danced off to the side of them. He faced his two assailants while holding up his paws. \"Hey, now, no need for that.\"\n\nThe two larger forms began to move towards him with ominous glowers on their faces. Conrad's heart sank as he saw even more of them emerge from the shrubbery. There were at least six of them, perhaps more. He didn't waste time in trying to plead his case; instead, he turned to run.\n\nHe got about two steps when one of them grabbed his foot. Conrad went down hard on his face. His eyes were streaming from the pain in his nose as he rolled over, and his vision was blurry from getting his head smacked into the ground.\n\nThe first attacker stood over him, and Conrad could see the others gathering behind him. \"Freak,\" spat the one in the lead. \"I think we need to make an example of you.\" He drew back a foot and made ready to kick at the still half-dazed Conrad.\n\n\"HEY!\"\n\nThe shout made the group of attackers turn just in time to receive PFC Marlene Riley's furious charge.\n\nThe one in the lead got an elbow to the face in a huge blow that snapped his head back and sent his furry body flying. The others received similar beat-downs; a few tried to get in attacks of their own, only to have their attacks blocked and responded to with brutal efficiency. The last one standing got in a decent feint and actually landed a kick right into the Ranger's ribs. Marlene gave a grunt as his foot slammed home, and she bent over as the attacker danced back with a hopeful look on his face.",
        "She straightened back up and smiled evilly. \"Nice kick, asshole. I almost felt that.\"\n\nHe gave a panicked yelp and turned to run, only for her to leap onto his back and drive him into the ground. The tackle was followed with a few swift punches.\n\nMarlene stood and surveyed the prone bodies around her. A few were groaning, but most were simply out cold. Less than ten seconds had passed since her initial shout.\n\nConrad blinked as Marlene's worried face appeared above him. \"Honey? Are you okay?\" She gently lifted his head and peered closely at his eyes.\n\n\"I tink I hurd my node,\" he said faintly.\n\n\"Just don't move, okay? I'll get somebody.\" She stood and looked around in a panic before starting to yell. \"HEY! ANYBODY! I NEED SOME HELP HERE!\"\n\n<p align=\"center\">_____________________________</p>\n\nThe town hall of Sullivan City was again filled with shouting. This time the ruckus had a definite stressful edge to it. There was a lot of raised hands and pointing fingers. Mayor Lightfoot waved his hands and tried to bring some order to the chaos. He glanced behind him at Ned and Sergeant Cal Forrester, who stood glumly on the stage. The sergeant finally shrugged and stepped forward. Before, he'd had to shout to get their attention. Today his mere movement was enough to cause a wave of quiet to spread out over the assembled politicians.\n\n\"Please,\" Cal said quietly. \"Let's be calm about this, okay?\"\n\nMayor Bunce levered himself upright with his cane. \"Easy for you to say!\" he spat. \"I have eight of my highly-trained militia in the hospital. Eight! And they were put there by only one of your kind, one of your smallest I might add, using only her bare hands.\" Bunce shook his head. \"Truly terrifying.\"\n\nCal's face was impassive. \"And you've got her sitting in a cell. I could get insistent about letting her go, but right now I wanna figure this whole mess out. She claims your boys were right in the middle of kicking the hell out of her beau. And he's one of you guys, I might add. So don't get any ideas about claiming prejudice on her part.\"\n\n\"She overreacted!\" yelled the gaunt mayor. \"There may have been some heated words exchanged, but nothing that warranted such behavior.\"\n\nNed stepped forward. \"Conrad's in the hospital with a severe concussion. That sure as hell doesn't sound like heated words.\"\n\n\"He was accidentally injured by her during her violent attack,\" said Bunce. He glared at the two humans as if daring them to call him a liar.\n\nNed took that challenge. \"Bullshit.\"\n\nThe mayor got a supremely offended look on his face and waved his hand dismissively at Ned. \"It's clear you will protect your own. This debate is pointless.\" Bunce turned to address the others. \"It's as I warned you. These strangers are violent in a way we are not accustomed to. We need to keep them isolated, for everyone's safety. Including theirs.\"\n\n\"And how do you propose to do that, exactly?\" asked Ned. He folded his thick arms and tried very hard not to visualize throttling the little bastard.\n\nBunce grasped his lapels. \"We can set up temporary housing at Hadley's Farm, tents or the like. Those will have to do until we can construct more permanent housing.\"\n\nCal's impassive face split into a grimace. But his tone was silky. \"Permanent, eh? Like a fenced-in camp, maybe?\"\n\nThe gaunt mayor shrugged. \"Er, yes, something like that.\"\n\n\"No way,\" replied the sergeant. \"We have a little bit of what ya might call a 'history' with people getting shoved into such camps.\" He stepped forward with clenched fists. \"So if you wanna put us in one yer gonna have a fight on yer hands. Now when am I gettin' my soldier back?\"\n\nMayor Lightfoot looked more than a little panicked now. He held up a placating hand to the huge man. \"We still need to have a formal inquiry as to what happened. It will be fast, don't worry.\"\n\nBunce snorted. \"What happened is clear to anyone. It's all because of these monsters with their innate thirst for death-\"\n\nHe was interrupted by a familiar female voice from the back of the hall.\n\n\"No, no, no. It's not their innate thirst for death, it's your innate thirst for death.\"\n\nThe assembled mayors turned in surprise. Ned looked up and saw Holly standing in the large double-doors at the entrance. She was flanked by two of the Rangers, Morillo and Rockatansky. Rockatansky had a carbine and was pointing it at the ground for now, while Morillo casually held a lagomporph by the throat with one hand. The unfortunate rabbit-person was clad in the blue and black of the Ecklam militia, and he feebly clawed at the hand that was kinda-sorta strangling him.\n\nThe doors had been guarded by militia from the various cities, and those guards now stood in a circle facing the intruders. Holly looked pissed enough to chew nails as she looked through them and met Ned's worried gaze. Her furious expression relaxed, and she gave him a wink.\n\n\"Pronoun trouble,\" she added.\n\nBunce got so red in the face that Ned could see it through his fur. \"What are you doing with my man! Let him go at once!\"\n\nHolly ignored him and shifted her gaze to Mayor Lightfoot. \"Mayor, we have some information that must be told to everyone here. May we enter?\"\n\nWhile Bunce spluttered in rage, Lightfoot wearily nodded. The militia parted to let the new group enter.\n\n\"Conrad regained consciousness an hour ago,\" said Holly as they walked forward. \"I talked with him, and he told me a couple of interesting things. First, he was injured by his attackers while trying to run away. Marlene was coming to his defense.\"\n\n\"Of course he would say that-\" began Bunce.\n\n\"Shut the fuck up,\" said Holly in an eerily even tone, then turned back to address Lightfoot. \"Second, he just so happened to mention where he and Marlene were going while in earshot of a certain Theobald Townsend.\"\n\nShe pointed a furry thumb over her shoulder at the gurgling lagomorph held in Morillo's mitt. \"That's Mr. Townsend. After talking with Conrad I smelled a big fat rat, as the monkey-boys like to say. So I collected Rockatansky and Morillo and we paid Mr. Townsend a little visit, and then we had ourselves a little chat.\"\n\nHolly crossed her arms. \"Bottom line, it was a setup. Townsend talked to Bunce, who sent a bunch of his guys sent out to accost Conrad and get Marlene to react. Then Mayor Bunce could use that reaction to claim that the monkey-boys are all dangerous.\" She gave a little grin. \"It seems the Ecklam goons figured they could handle Marlene since she was smaller. Guess they didn't figure on winding up in the hospital.\"\n\nBefore Bunce could respond, another of the mayors rose. Tavia Hedgehopper glared at the old rabbit. \"You bastard!\" she shouted.\n\nBunce's indignant look fell away to one of total shock.\n\nShe turned to the other mayors. \"Bunce tried to get me to agree to attack the newcomers by surprise and kill them.\"\n\nBoth Ned and Cal gave indignant shouts at the same time.\n\n\"I refused,\" continued Tavia, \"And so he suggested we get some of our militia here 'just in case'.\"\n\nShe turned back to Bunce and looked at him like something she'd found on the bottom of her shoe. \"You just couldn't wait and see, could you? You were so sure that they were dangerous that you had to try and invent some controversy.\"\n\nMayor Lightfoot jumped off of the stage. His usually cheerful face was somber. \"Mayor Bunce started to hint at something similar a few weeks ago, and I told him to stop being paranoid before he could really say anything conclusive. I never dreamed...\"\n\nThe other mayors parted to let Lightfoot through as he stalked towards Bunce. He wasn't quite as tall as the Ecklam mayor, but somehow still gave the impression of looming over the gaunt lagomorph.\n\n\"Mayor Bunce,\" he said quietly. \"You are no longer welcome in my city. Take your people and leave.\"\n\nBunce finally found his voice. \"This is madness!\" He pointed a shaking paw at the humans up on the stage. \"You would trust them?\"\n\nLightfoot's tone was still quiet. \"I hope you are playing to the crowd to set yourself up as a leader in...whatever unified 'thing' comes out of this whole mess. Because the alternative is that you really are paranoid and stupid.\" He sighed. \"It makes no difference. You will leave, or I will have you thrown out.\"\n\n\"I will not be denied my say!\" yelled Bunce. \"I have every right to be here! You fools are getting ready to barter our world away to these dangerous predators...\"\n\nHis rant was cut off by an hideous, ululating wail that made Ned's blood run cold. It was a sound from his childhood, when there had been the chance of his world ending in a nuclear fireball. \"Portal siren,\" he said aloud.\n\nSergeant Forrester jumped off of the stage and ran towards Morillo. The corporal dropped the unfortunate Townsend at the start of that unearthly racket and was now standing with a finger to his earpiece.\n\n\"Is it ours or theirs?\" said Cal. He had to shout to be heard over the siren's wail. The mayors were utterly silent and staring around with big, fearful eyes. Ned felt a warm furry pressure against his side and looked down to see Holly hugging him hard and pressing her face into him as if she was trying to climb inside of his body. He stroked her back.\n\n\"Don't worry, babe,\" he murmured.\n\nMorillo shook his head. \"Nothing's going on at Hadley's. No portal at all.\"\n\nLightfoot now looked pissed. \"If somebody set off the damn alarm by accident, I swear I'll string 'em up by their ears!\"\n\nRockatansky pressed a finger to his own ear and blanched. \"Sarge! Nowak's reporting in! The portal's forming right in the center of town! It's right in the goddamn amphitheater!\"\n\n<p align=\"center\">_____________________________</p>\n\nIt just figured, thought Leslie. After 'The Marlene Incident' they'd been confined to quarters while the whole mess got sorted out. She'd been going a little stir-crazy anyway, and this new imposition didn't help. After a bit of self-justification, the corporal figured she was about the least dangerous-looking of them all, what with the crutch-and-half-leg situation. It would be fine to take a quick stroll to get some fresh air and stretch her good leg. But she wasn't completely stupid; she'd grabbed a radio 'just in case' and was now very glad of that.\n\nLeslie propped herself on her crutch as she peered up and over the low wall surrounding the amphitheater. The swirling hole in its center had stabilized into the now-familiar form of a dimensional portal. A few of the rabbit-dudes had been strolling through the grassy center, but they were long gone. One of them must have set off the siren. Her angle was bad, and she couldn't quite see into the portal to tell whose it was. The corporal tried to tell herself it was a fifty-fifty chance that this was a portal back home. Maybe the eggheads had gotten their targeting a little wonky?\n\nAny rising hope was crushed when she saw a familiar spindle-like shape begin to emerge slowly and carefully from the portal. She ducked back down and clicked on her radio.\n\n\"Nowak here. It's the bad guys. They're not fuckin' around with infantry this time, they're bringing out one of those floaty-tank things right away.\"\n\n\"Get your ass back here, Corporal,\" said Forrester's voice. \"That way I can properly chew it off.\"\n\n\"Don't have to tell me twice, Sarge,\" she replied. Leslie then set a world land-speed record for a one-footed woman with a crutch.\n\n<p align=\"center\">_____________________________</p>\n\nMarigold and Cal bent over a map that was spread out on the grass. Next to them, Leslie sat with a remote control panel on her thighs. Both of the leaders kept checking the screen while corporal flew one of their few remaining drones in a complicated pattern over the amphitheater. She was trying to avoid getting into line-of-sight of one of the terror-bird's beam weapons. The sergeant looked up at the distant wall of the amphitheater. It was a little too close for comfort, but he wanted to see the ground with his own eyes.\n\nHe looked up at the buildings surrounding the park. There were a few taller ones, not quite skyscraper-sized but definitely tall enough to get a vantage point on the enemy portal.\n\n\"Okay, Nowak,\" said Cal finally. \"Get that thing out of there.\" He looked down at his marked-up map. The enemy's overall strategy appeared to be the same; establishing a 'beachhead' with supplies on this side of the portal in preparation for an advance. But now the terror-birds were ringed with the long and floating vehicles that they'd taken to calling 'spindle-tanks' for want of a better word. A few very foolhardy militia members had tried to get close and let loose with one of the prototype fifty-cal weapons. The spindle-tanks had armor good enough to shrug the rounds off, plus they also sported larger beam weapons that had nearly cut the militia members in two.\n\nMarigold pointed at the map, indicating a few street intersections surrounding the town center. \"We're getting the new fify-cal weapons set up here, here, and here. That should slow them down when they do make their push.\"\n\nThe sergeant growled. \"I really, really wish we had some missiles left. Even a coupla damn RPGs.\"\n\n\"We do have some throwin' grenades, Sarge,\" said Leslie. \"Maybe we can set up some booby-traps?\"\n\nCal shook his head. \"Probably wouldn't do much against their armored vehicles. But we do have that ANFO that Ned's been making.\" He looked over at Marigold. \"Of course, that would really start wrecking stuff around here.\"\n\n\"Don't care,\" replied Marigold. \"The Mayor told me to get them out of this world, and that's what we're going to do.\"\n\nCal sighed. \"Right. I'm going to detail my people to yours, one of us for each group of yours. They'll show you how to set up the explosives.\"\n\nHis radio crackled. \"In position, sarge,\" said Rockatansky's voice.\n\n<p align=\"center\">_____________________________</p>\n\nAfter being gifted his new pride and joy, Rockatansky had taken the optics from his carbine and after a bit of fiddling by Gunthar they'd managed to mount the scope to the rifle. That fiddling now paid off as he lay flat on the roof of the tallest building around and peered through the scope at the distant moving feathered forms as they moved back and forth in front of the portal.\n\n\"Not a lot of 'em out yet,\" he radioed. \"They're ringed in by those spinde-tanks, and it looks like they're building something.\"\n\n\"Can you tell what it is?\" asked the sarge's voice.\n\nHe scanned carefully over the scene. \"It looks like some sort of chassis, kinda shaped like a four-leaf clover. Maybe it's a different kind of tank?\" Then he felt a chill in his gut as a more familiar shape rolled its way out of the portal. \"Shit.\"\n\n\"Dammit, son, talk to me!\"\n\n\"Sorry, sarge. They just brought a propeller-type doohickey out off the portal. I think they're building an aircraft.\"\n\n\"Aw, fuck,\" said Cal's voice.\n\nRockatansky took a bead on one of the birds working on the craft. \"Got a good sight on 'em, sarge. I just can keep an eye on 'em or whack a coupla of 'em. Which do you want?\"\n\nThere was a long pause while the sergeant deliberated. \"We need to make 'em keep their heads down. Take the shot and get out of there. No more than one shot, got it?\"\n\n\"Got it,\" replied the private, then he took a deep breath. He was about to paint a very big target on his back, and the beams from those spindle-tanks could probably cut this building in half. But he'd been practicing with his new rifle, and he was sure that he could get in at least a couple of shots before they could react. In the scope he sighted in turn each of the birds working on the aircraft while he tried to figure out which one would be the best.\n\n\"Eeeny...meeny...miney...yeah, you.\"\n\nAnother deep breath, then an exhale. Then the squeeze and the feel of a glass rod snapping.\n\nThe helmeted head of his chosen target sprayed a gout of blood over one of his compatriots, then its body fell unceremoniously to the ground.\n\nThe private had several rounds laid beside him, and in one smooth motion he ejected his old round and put in another. But as he did so he could see through the scope several beaked heads snap around in his direction.\n\nHe fired again, feeling a little rushed, and made what he would have called a terrible shot. Instead of hitting dead center, the round ricocheted off of the side of his target's helmet. The terror-birds dove for cover as Rockatansky decided it was time to run like hell.\n\nRockatansky wriggled back from the edge, then stood up into a crouch and scuttled for the stairs that led down from the roof. Behind him, a ravening red beam sliced into the ledge he'd just been occupying. The beam rapidly cut its way towards the fleeing Ranger.\n\n<p align=\"center\">_____________________________</p>\n\nCal watched with a churning in his gut as a red beam stabbed out from the amphitheater and sliced into the edge of the building. The beam moved in and around, carving a neat slice out of the building. The sliced portion tumbled into the street below with a distant thump and a geyser of dust.\n\n\"Rockatansky! Report!\"\n\n\"Kinda busy, sarge,\" came the gasping reply.\n\nCal sagged in relief. \"You get to another vantage point and just observe, got it? If you die I'm following you into hell and kicking your ass myself.\"\n\n\"Roger,\" said Rockatansky.\n\nMarigold turned her worried gaze up to Cal. \"The terror-bird's aircraft will certainly have weapons. We can't hold against that.\"\n\n\"Not unless we can cobble together a missile,\" said the sergeant. \"Do you have any armed aircraft?\"\n\nThe militia leader shook her head. \"Nothing right now. In some past fights we've made jury-rigged fighter aircraft, but that would take too much time.\"\n\nCal rubbed his jaw. \"Maybe we could do a repeat of what we did the last time, but using an aircraft.\"\n\n\"Fill it with explosives and dive-bomb 'em?\" asked Leslie. \"It would take a while to set up a remote control. Unless we can get a volunteer to fly it.\"\n\nCal shook his head. That was not a path he wanted to go down...not yet. \"Let's fall back,\" he said aloud. \"We're a little too close for comfort here.\"\n\nTheir retreat from the park went a little more slowly than Cal would have liked due to Nowak's limited speed. But they got into one of the side streets all right, passing a hastily-erected barricade as they did so. The snout of a couple of the larger new guns poked out from the piled-up sandbags, and Cal saw determined furry faces behind those guns as he passed.\n\nDetermination was all well and good, but right now he would have given everything he had for some decent long-range weaponry. The platoon's mortars had maybe five rounds left...not enough for any sort of effective bombardment. This was going to be a nasty, street-by-street fight once the enemy made their move.\n\nAssuming, of course, that the birds didn't use their bullshit rayguns to just level the town as they advanced.\n\nHe and Marigold set up a little 'command center' just past that barricade and began to coordinate the laying of some truly nasty 'booby traps' utilizing Ned's explosives.\n\nTheir planning was interrupted by Rockatansky's voice.\n\n\"Got me a new position, sarge. They're putting some kinda armor plating on the thing, and what looks like a coupla them rayguns in front. Lemme know if you want me to do any mischief.\"\n\n\"No way,\" said Cal. \"You just keep an eye on 'em. See if you can figure out how close they are to finishing it.\"\n\n\"Will do.\"\n\nAfter another fifteen minutes or so, the Ranger got back to them. \"I'm guessing thirty minutes from now, tops. They're putting a canopy on. It looks like a single-seater.\" Rockatansky paused. \"You know, I could try to take out the pilot when it lifts off. That canopy might not be armored enough for a fifty-cal.\"\n\nCal sagged a bit. Rockatansky had already survived one beam attack. If he fired again, they might just cut the whole building down to make sure they got him. On the other hand, crashing their aircraft would certainly slow the enemy down.",
        "\"Okay,\" he said with a bit of dread settling in his stomach. \"If you get the chance, take the shot.\"\n\nCal turned back to the map and hoped like hell he hadn't just signed the death warrant for one of his men.\n\n<p align=\"center\">_____________________________</p>\n\nForty minutes later, Rockatansky called in again. \"Lots of armed birdies coming out now, and one of 'em is getting settled into the aircraft. I think this is it, guys.\"\n\n\"Good luck,\" said Cal. He looked around at the lagomorphs assembled around him and Marigold. \"We delay them, got it? Hit and move, don't stand around and trade shots with 'em.\"\n\nThere was a lot of very determined nodding as a slowly-increasing whine began to be heard from the park. Cal jogged forward and peered over the barricade at the distant amphitheater. A black, glossy shape began to rise above the wall, and Cal saw a spark on the front of it followed quickly by the crack of Rockatansky's rifle.\n\nIn response the craft shot upward and slewed around to face one of the buildings. The thing looked a little like a quad-copter drone blown up to huge size and then festooned with armor and guns. Two of those guns began unleashing a barrage of red beams into its target building, throwing out huge gouts of dust, broken concrete, and glass.\n\nCal gritted his teeth as the building was quickly reduced to rubble. There was no way Rockatansky could have survived that, not to mention it looked like the aircraft was proof against fifty-cal. He felt Marigold's paw slide into his hand and give it a squeeze.\n\nCal looked down at her and smiled sadly. \"I'm sorry, darlin'. Don't think we can hold 'em. But I'll do my best.\"\n\nAnother furry paw slid into his other hand and gripped it tight. \"We will do our best,\" said Arabella.\n\nThe sergeant nodded and watched the distant aircraft slew back around. Its beams blew out a huge chunk of the amphitheater wall, and through that gap floated the forms of the spindle-tanks. Behind those Cal could see a lot of armored and feathered infantry. The group started heading in his direction. As they advanced, the black insectoid aircraft floating over the oncoming group with a menacing whine.\n\nCal unslung his carbine and checked it for the last time. He felt oddly at peace. If he was to die, this was as good a place as any. And he certainly couldn't ask for better company. He gave each of his furry lovers a pat on their respective heads and readied his weapon. He centered his sights on the aircraft and made ready. If he could hit a vital spot, maybe he could deny them air support.\n\nAs his finger tightened on the trigger, a white plume flew overhead from behind his position. It smacked into the oncoming enemy aircraft and made quite an impressive fireball. Cal stared in wonder as the flaming wreckage pancaked into one of the spindle-tanks below and set it on fire as well.\n\nThe advancing enemy began milling around in confusion as Cal spun. Further up the street stood Yuri, wearing his armored vest and with the still-smoking launcher for an RPG carried casually on one shoulder. The Russian had a cheeky smile on his face.\n\n\"How you say...cavalry is here!\" he called out.\n\nFrom behind the big bearlike man came a stream of camouflaged and armored figures carrying still more RPGs. And those figures were definitely not sporting long ears.\n\n<p align=\"center\">_____________________________</p>\n\nAfter that, it was really just a matter of shooting missles at everything feathered. Somewhere in the middle of the carnage somebody managed to put a Javelin through the portal to close it.\n\nNone of the terror-birds allowed themselves to be taken alive. They fought to the bitter end until the last one was cut down.\n\n<p align=\"center\">_____________________________</p>\n\nConrad came to again. His head didn't throb quite so painfully this time. The fluorescent lights of his hospital room seemed to stab into his eyes, giving him a little spike of fresh pain. But as his blurred vision focused, he saw something that made him feel a lot better.\n\nMarlene sat slumped in a chair next to his bed and snored. A thin line of drool ran from one corner of her mouth. He reached over and wiped it up with one furry finger, making the woman mumble something incoherent.\n\n\"Hey,\" he said softly.\n\nIn an eye-blink she'd woken and all but hug-tackled him into his bed. He gave a little grunt of surprise.\n\nShe began peppering his face with kisses. \"Oh, honey! Are you okay?\"\n\n\"Never better,\" he replied with a happy smile. \"They let you out of jail, I see.\"\n\n\"Yeah, turned out that those guys who attacked you was part of some bullshit conspiracy. Plus the terror-birds opened a portal right in the middle of town, so it was kind of an 'all hands on deck' situation.\"\n\n\"What?\" Conrad looked around in a panic. \"Where are they now?\"\n\nShe caressed his shoulder soothingly. \"It's okay, dear. They're all dead.\" She leaned forward and kissed him softly on the lips. \"And I have a question for you.\" Marlene had a truly epic grin on her face.\n\nConrad looked at her askance. \"Okay, go ahead.\"\n\n\"How'd you like to come back to my place?\"\n\n\"The barracks? I thought you liked it more private than that...\" Conrad's eyes widened as the penny dropped. \"Oh. Your place back on your world, you mean.\"\n\n\"You're smart,\" said Marlene. \"I think I'll keep you.\"\n\n<p align=\"center\">_____________________________</p>\n\nRockatansky felt like he'd been beaten with bats and then thrown into a rock tumbler. But hey, he had to be alive to feel pain, right? At least that's what he tried to tell himself as he kept drifting into and out of consciousness. He was bandaged, that much he knew. But he couldn't tell how 'whole' he actually was.\n\nDuring one of his more lucid periods he tried to speak. \"Er?\" he croaked.\n\nA big hand gently patted his shoulder. \"Rest easy, son,\" said the sergeant's voice. \"Seems like you're just too damn stubborn to die.\"\n\nHe wetted his lips. \"How bad?\"\n\nThere was a long pause. \"Ya lost part of your right foot. Plus your left shoulder is pretty messed up. And your face...\"\n\nRockatansky waited with mounting fear until Cal spoke again. \"Well, I'm afraid your face is just as ugly as ever.\"\n\nThe private laughed, even though it hurt to do so. \"Fuck you, sarge.\"\n\n\"That's the spirit. Now get some rest, ya crazy bastard. Brenda should be here shortly.\"\n\nThe simple statement would have floored him if he wasn't already prone. \"Brenda? You mean my Brenda?\"\n\n\"Yeah. I guess the eggheads back home managed to pull a miracle out of their ass.\"\n\n<p align=\"center\">_____________________________</p>\n\nArnold stepped through the portal and looked around at what was once a peaceful farm. Ned and Holly waited to receive him along with a goodly contingent of rabbit-folk. Arnold's face split into a big grin.\n\n\"My man!\" yelled Arnold as he and Ned hugged. \"You ain't dead!\"\n\n\"Not last I checked,\" replied Ned. He looked behind Arnold and saw Daisy come trotting through the portal as well. She panted happily as the lagomorphs around the portal shrank back in fear. The pittie made a beeline for Holly and flopped on her side right next to Holly's feet.\n\n\"I see she's still the same,\" said Holly as she bent and gave the dog a nice petting.\n\nSeeing Holly's example, the others curiously approached the dog. Daisy soon found herself in doggy heaven as they also began showering affection on her.\n\nNed gestured at the portal. \"So you finally got it open again, eh?\"\n\nArnold nodded. \"Yep. We had a bit of a breakthrough. It turns out that the terror-birds create micro-portals to 'seed' the other side with nanotech that multiplies in the target dimension. That nanotech then creates a resonance with the initial portal, and makes the energy requirement a lot lower.\"\n\nNed blinked. \"I have no fucking idea what half of you just said even means.\"\n\n\"Don't worry, we'll get you caught up.\" Arnold looked over at Daisy, whose tongue lolled out of her head while she was fussed over. \"Better yet, I think I can figure out a way to disrupt that resonance. It should keep those feathered bastards out of our hair.\"\n\n<p align=\"center\">_____________________________</p>\n\nLeslie squared her shoulders and thumped her way through the portal and back into Main Operations. Grace should be there, but now the corporal regretted not telling her about losing a good part of her leg. It was stupid, but for some reason Leslie was convinced that if she told Grace about her injury the doctor would just up and leave.\n\nShe heard a gasp as she stepped along the dais next to the portal. Grace was mounting the stairs, and now had a hand to her mouth. Her eyes were wide with shock.\n\nLeslie came lurching up and gave her a sad little smile. \"Hey, nerd. Good to see you.\"\n\nTears began to form in Grace's eyes, but she said nothing.\n\nLeslie scratched her neck awkwardly. \"Look, if me havin' only one good leg is too much for you, I'll understhuurk-\"\n\nGrace wrapped her arms around Leslie's neck in a fierce hug. \"I am never letting you out of my sight ever again,\" she whispered in Leslie's ear.\n\nThe corporal relaxed against her. \"Okay,\" she whispered back, then sniffled. Damn it, she had a reputation as a hard-ass to maintain. The corporal promised herself that she was not going to cry.\n\nAnd she managed to keep that promise for all of thirty seconds. The pair sobbed with happiness into each other's necks as they embraced.\n\n<p align=\"center\">_____________________________</p>\n\nNed fidgeted and tugged at his collar. He wasn't used to wearing a suit and tie.\n\n\"Stop twitching,\" murmured Holly. \"We're on the home stretch now.\"\n\nIt was now several years since the portal home had been re-opened. The area that had once been Hadley's farm was now home to a large and very impressive-looking granite obelisk. The obelisk was chiseled with the names of those who had fallen in the battle, and it was now in the process of being officially dedicated.\n\nUnfortunately, that process involved a lot of politicians getting the chance to show off their oratory. Right now the American President was getting the chance to speak and was finally winding down.\n\n\"To paraphrase my illustrious predecessor,\" she concluded, \"I believe that this monument does indeed show the good will and honesty that exists on both sides. It shows it more than any words can convey. I thank you all for the opportunity to be here at such a historic occasion.\"\n\nThere was the usual polite applause, then Ned groaned internally as he saw the new mayor of Ecklam step forward. At least it wasn't that bastard Bunce. The disgraced politician had been the target of what only could be called a 'palace coup' a few days after the final battle. This new mayor was a lot more chill.\n\nAfter a few more speeches, it was mercifully over. There was a round of hobnobbing that followed, which was something that Ned actually looked forward to. Several old friends had come back for the ceremony, including Leslie and Grace. The corporal had long ago given up her crutch for a proper artificial leg.\n\n\"Although I still break that damn crutch out for Halloween,\" she said with a laugh. \"I do a killer Long John Silver impression.\"\n\nGrace rolled her eyes, but smiled while she did it.\n\n\"How's Arnold?\" asked Holly.\n\n\"Still brilliant,\" replied Grace. \"And still nuts. He's been spending most of his time trying to suss out an improved nanotech based on those portal-bugs. He's trying to make something that can construct any desired structure instead of only little spheres. He'll probably come along any day now with some breakthrough and really disrupt things.\"\n\nNed thought that things had already been pretty well disrupted. Reverse-engineering the terror-bird's technology had proven revolutionary in several fields including energy storage and aviation. The enemy even had some method to change gravity at a local level. That last one had caused some physicists to go mad and others to invent whole new theories.\n\nAfter a bit more chatting, they said goodbye to Leslie and Grace and moved on. They managed to get through another hour of mingling before they finally begged off and headed back to their apartment for a quiet night in.\n\n<p align=\"center\">_____________________________</p>\n\nHolly sat on his lap and snuggled back into his chest as she regarded her glass of scotch. \"You know, I sometimes wonder what would have happened if I'd broken into someone else's garage. How different would things be now?\"\n\n\"I think you would have still been okay,\" replied Ned. He stroked a hand along her thigh. \"It's not like you would have wound up in a cage or something. Of course, you would have had to get by without my world-class lovin'.\" He grinned at her.\n\nHolly snorted in reply. \"Yeah, I guess I'd have had to live without it.\" She raised one leg and slowly brought it up, over, and around so that now she straddled him. She took a sip of her drink and eyed him in a definite challenge. \"But since I don't have to, how about you show me just how 'world class' you can be?\"\n\n<p align=\"center\">_____________________________</p>\n\nThe End. Thanks to everyone for reading!"
    ],
    "authorname": "Mr_Shoggoth",
    "tags": [
        "furry",
        "anal",
        "rimming"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/work-the-problem-ch-07"
}