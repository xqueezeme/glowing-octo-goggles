{
    "title": "The Woman in White",
    "pages": [
        "Strains of late-night radio station techno played softly as Evan drove along the highway, twenty minutes from home. There were few other cars on the road; he could not help but feel a certain solidarity whenever one showed up, that brief kinship ending when said car would continue out of sight.\n\nHe had spent the day helping Jack and Shirley move into their new house. The couple had more possessions than he had imagined, and although there had been other people pitching in, it had taken the whole afternoon and part of the night to get them settled in. They had provided pizza and beer afterwards, and although some who had helped had left right after dinner, he had stayed behind with other friends to hang out.\n\nThe company had whiled away the time until well past midnight.\n\nJack and Shirley had invited him to sleep in their guest room, but he had turned down the offer, confident in his ability to drive home after only two beers, their effects on him diluted by the greasy pizza, and always preferring to sleep in his own bed when possible.\n\nThis route was not one that he could remember taking before, but his phone's GPS has selected it for him.\n\nThe stretch of highway he was currently on was hemmed in on both sides by woods, the trees tall and gnarled, no signs of wildlife anywhere. The scarcity of other drivers and the late-night stillness lent the area an eerie atmosphere, the surprisingly spaced-out lights not helping that matter, leaving pockets of space darker than he was comfortable with, one of which he was currently in.\n\nWait, what the hell is that?\n\nHis attention was drawn up ahead, to where a figure in white was walking along the side of the road.\n\nHe slowed and pulled up alongside it.\n\nHis mind went to urban legends he had heard of, telling of ghosts creeping along dark highways, vengeful spirits who sought to harm anyone who might cross their path.\n\nBut as he came up behind it, it crossed into one of the lit-up portions of the highway, giving him a better look at it.\n\nAt her.\n\nThe first indication that the figure was female was the wedding dress. The delicate material was torn here and there, and the hem was stained with dirt, but the dress practically glowed under the stark highway lighting.\n\nThe second indication that the figure was female was her figure, which was accentuated by the dress. He could not help but appreciate her wide hips and shapely ass, and as he nudged his car slightly ahead of her, his eyes took in her large breasts, the neckline of the dress showing off lush cleavage.\n\nShe did not notice him, even as he crept ahead of her. Her head was bowed, face hidden under a veil, and her shuffling gait meant that she was not moving very quickly. A bouquet of vibrantly red flowers was clutched in one hand, in the other a pair of white high-heeled shoes.\n\nLooks too real to be a ghost.\n\nHe brought the car to a stop and opened the passenger seat window.\n\n\"Ma'am, are you alright?\"\n\nShe did not answer, instead continuing along slowly.\n\n\"Ma'am?\"\n\nStill, she kept walking.\n\n\"Ma'am?!\"\n\nShe stopped suddenly.\n\nHis heart beat a bit faster, and he thought back to those urban legends of highway-walking ghosts.\n\nShe slowly looked over to him. In the several seconds it took her to do so, he contemplated driving off.\n\nBut the halting sobs he could hear coming from underneath the veil led him to decide to at least check if she was alright.\n\nIf she's a ghost, maybe she won't hurt me because I'm being nice and checking on her. And if she isn't, then I'm helping someone out.\n\nFinally, her gaze was fully on him.\n\n\"Are you alright?\" he asked.\n\nShe shuffled over to the window and leaned over. His eyes almost flickered to her cleavage, on display before him, but he managed to restrain himself.\n\n\"Do you need help?\"\n\nShe flipped her veil back, letting it settle on her hair, the dark brown done up in a complicated combination of braids.\n\nDefinitely looks too real to be a ghost.\n\nThis mystery bride was pale, but not unnaturally so. Her eye makeup was ruined by tears, with black tracks running down both cheeks. Even with that ruination, he could see that she was quite pretty, with a round face, full lips, and pleasantly blue eyes.\n\nBut those pretty features were drawn in an expression of anguish.\n\nGood thing I stopped and checked on her.\n\n\"Are you alright, ma'am?\" he asked again.\n\nShe sniffled, and then shook her head.\n\n\"No,\" she said quietly, her voice thin and fraught.\n\nHe hesitated.\n\nProbably shouldn't ask about the dress or anything. Looks like it did not go well.\n\n\"Do you...do you need a ride somewhere?\"\n\nShe glanced down the road in the direction she had come from, and then at him.\n\n\"Maybe.\"\n\n\"Well, get in then. I can take you wherever you need to go.\"\n\nShe glanced now at the stretch of highway ahead of them, and then back at him.\n\n\"I probably shouldn't get into a car with a strange man.\"\n\n\"That's smart. But would you rather keep walking around out here? It's dark, and who knows what could happen to you. There aren't many cars out right now, and I don't think there're many Uber drivers willing to come out here, so you don't really have many options.\"\n\nShe nodded, her anguished expression settling slightly into a more neutral one.\n\n\"You're right, I guess.\"\n\nThere was still a definite caution in her posture and demeanor as she looked back down the road and then ahead again.\n\n\"I'm Evan,\" he introduced himself, holding out his hand.\n\nShe shifted the flowers and the shoes to one hand and shook his daintily. Like her face, her hand was pale, but it was also cold, not unnaturally so but enough to be noticeable.\n\n\"I'm Annie,\" she said softly, \"nice to meet you.\"\n\n\"Hi, Annie. Can I give you a ride somewhere?\"\n\nShe took a few seconds to think, during which he gave in and glanced quickly at her cleavage, the swells of her breasts just as pale as the amount of her he had already seen.\n\n\"Okay,\" she finally replied, opening the door.\n\nAs she hiked up her dress to get in, he saw her feet, their skin caked with dirt. Inwardly, he cringed at the mess she would inevitably leave on the floor mat, but then he scolded himself for that self-centered reaction, especially in the face of her anguish.\n\nHe noticed a shiver run over her, and despite his brief fear that his hand would pass through her and she would be revealed as a ghost, he reached out to touch her shoulder.\n\nHis hand met solid flesh through the wedding dress.\n\nThat flesh was cold, and another shiver ran over her as she regarded his hand with a neutral expression.\n\nHe grabbed his jacket off the back of the passenger seat.\n\n\"You must be freezing. Put this on.\"\n\n\"Thank you,\" she said, smiling gratefully.\n\nThe smile highlighted her pretty features, and he snuck a good look at her face as she put the flowers and high heels in her lap so she could put on his jacket.\n\n\"Seat belt,\" he told her pointedly.\n\nShe nodded, as if remembering that such a thing existed, and then reached back for the shoulder-strap belt.\n\nHer breasts were pushed out by the movement, his eyes drawn there mindlessly. Another shiver made them ripple, and he turned on the heat.\n\nOnce the click of the seat belt sounded, he drove off.\n\n\"Thank you,\" Annie said quietly after a few seconds of near silence, the techno music still playing faintly. \"No one has stopped for me before.\"\n\n\"You're very welcome. I guess some people just can't be bothered.\"\n\n\"I guess so.\"\n\n\"So, where's home?\"\n\nShe glanced over at him.\n\n\"I don't want to go home yet.\"\n\n\"Okay. Is there somewhere I can drop you off?\"\n\nShe thought before answering, now looking straight ahead through the windshield.\n\n\"Where are you going?\"\n\n\"Home.\"\n\n\"Where is that?\"\n\n\"Like twenty minutes away or so.\"\n\nShe was still looking through the windshield.\n\n\"I guess I'll go there then.\"\n\n\"To my place?\"\n\nSuddenly, it hit him that she might be crazy, and would be capable of hurting him even if she were not a ghost.\n\n\"You're right,\" she said then, finally glancing back over, \"I shouldn't stay on a strange man's couch.\"\n\n\"I thought we were past the 'strange man' phase,\" he said jokingly. \"I introduced myself and everything.\"\n\n\"Just because I know your name doesn't mean you're not a serial killer.\"\n\nLook who's talking.\n\n\"True. So, is there a place I can drop you off?\"\n\n\"I don't want to go home yet.\"\n\n\"So, then how about I take you back to my place, and you can call someone when we get there? And they can pick you up.\"\n\nHer hesitation was obvious.\n\n\"You don't have to come inside. You can just sit in the car and wait for them.\"\n\nAfter a brief hesitation, she nodded.\n\n\"Thank you. You're very nice.\"\n\n\"I'm just trying to help out.\"\n\n\"And I appreciate it. You're the first who stopped.\"\n\nShe could be a maniac, and you're bringing her back to your place?\n\nHe ignored that voice.\n\nSilence fell for the next few minutes. He kept stealing glances at Annie, who was looking through the windshield, her gaze fixed forward without wavering. The anguish in her features had diminished further, and a small smile even tugged at the corners of her mouth. That smile was pleasing to see, as it showed that he had provided her with at least some happiness. It also drew him to sneak more glances at her, intrigued but still unwilling to ask about her situation. His eyes occasionally flitted to her cleavage, and every time they did, he felt a surge of guilt.\n\nWhile one part of him was busy appreciating her physically, another was thinking about the possibility of her being a maniac.\n\nThere could be a hairpin in the bouquet, and when we get to my place, she'll stab me. Or she'll try to claw my eyes out. Or she'll grab my hand and try to drive us off the road.\n\nThe silence was broken by Annie.\n\n\"Aren't you going to ask me?\"\n\nHe looked over at her. In place of her smile was an expectant look, her eyebrows arched, her head cocked.\n\n\"Ask you what?\"\n\n\"About my wedding dress.\"\n\n\"Oh. I...didn't want to pry.\"\n\nShe frowned in confusion.\n\n\"You're not curious?\"\n\n\"Well, I thought it'd be rude to ask. You might not want to talk about it.\"\n\n\"Maybe I want to,\" she told him, the confusion now irritation. \"Maybe I haven't been able to tell anyone about it for a long time.\"\n\nHe thought intently, trying to tread carefully with his answer, lest she snap and try to gouge his eyes out with the heels of her shoes.\n\nCome on, don't think that. She obviously just wants to get this off her chest.\n\nHe fought the urge to look at her cleavage.\n\n\"Do you want to tell me about it? I was trying to be polite, but I'd be lying if I said I wasn't curious. If you want to talk about it, I'm all ears.\"\n\nHer irritation turned into satisfaction.\n\n\"My fianc\u00e9 left me at the altar.\"\n\nI kind of figured. But what the fuck do I say to that?\n\n\"I'm sorry to hear that.\"\n\nThe previous anguish resurfaced, albeit muted.\n\n\"I was so excited. I thought Brett and I would live happily ever after. I picked out the perfect dress, the perfect venue for the reception, even had the perfect first dance song.\"\n\nEvan felt his pity for her increase as she looked down at her hands, clutching so tightly to the flowers and shoes that her knuckles grew even paler.\n\n\"But he never showed up at the church. When I realized he wasn't coming, it hurt so much. He ran away instead of marrying me. It made me feel so worthless.\"\n\n\"Hey,\" he told her, reaching out to squeeze at her shoulder, \"you're not worthless. Brett just didn't appreciate you. Or maybe he freaked out, and tomorrow he'll call and beg you to forgive him.\"\n\nShe looked at him, her gaze intensely blue, an inscrutable expression on her face.\n\nYou're going to attack me now, aren't you? \n\nAs he ignored the voice in his head, she smiled suddenly.\n\n\"You're too sweet.\"\n\nThe smile disappeared as quickly as it had appeared.\n\n\"But I'm never going to see him again.\"\n\nBecause you murdered him?\n\nHe ignored the voice again.\n\n\"Why not? What if he calls you tomorrow?\"\n\n\"He's probably forgotten about me already.\"\n\nHe took a few seconds to think of a response.\n\n\"So, you wouldn't want to get back together with him? What if he panicked and knows now that he made a huge mistake?\"\n\nWhen she scowled, the voice in his head spoke up.\n\nWay to play devil's advocate. She's going to attack you for sure.\n\n\"We'll never be together again. It's his fault. If he hadn't run off, I wouldn't have run off, and everything would be okay.\"\n\n\"Everything can still be okay,\" he told her carefully.\n\nShe glanced back over at him, but her anger softened.\n\n\"You're too sweet. Are you single?\"\n\n\"Uh...yes,\" he answered, again carefully.\n\nBut I don't date jilted brides who murder their fianc\u00e9s.\n\nShe raised her eyebrows in surprise.\n\n\"Usually the good ones are already taken or gay.\"\n\n\"How do you know I'm not gay?\" he asked her teasingly.\n\n\"Because you keep checking out my tits.\"\n\nOh crap.\n\nShe giggled at the look of nervous surprise that crossed his face.\n\n\"Don't worry, I'm not offended. My tits look great in this dress. I'd be offended if you didn't check them out.\"\n\nHe laughed, shaking his head in relieved amusement.\n\n\"Anyway,\" she continued, her smile fading, \"I tried to put on a brave face. And everything was non-refundable, so we went to the venue, and had food and danced. I tried to be strong, but I couldn't for long, so I ran off. Told people I was going to the bathroom, but I ran.\"\n\n\"Well, I don't blame you, and I don't think anybody would. That's a tough situation to be in.\"\n\nShe nodded.\n\n\"I was trying to get back home. I just wanted to lay in bed and cry. But no one would stop for me.\"\n\nBecause you look insane. You're either a ghost, which I don't think you are, or insane. I'm not entirely sure you're not insane.\n\nAs she looked back sullenly through the windshield, he felt a mix of pity for her, and guilt over his internal monologue being so judgmental.\n\nShe's had plenty of opportunity and possible provocation but hasn't attacked me yet.\n\n\"So, what's your story?\" she asked him then.\n\nThe rest of the ride home was spent telling her about his much less stressful day, explaining who Jack and Shirley were, who the others who had helped them move were, and answering every follow-up question she asked. The conversation, and her gradually increasing spirits, helped to make him feel surer that she was just a normal woman driven to despondency by extenuating circumstances.\n\nReally can't blame her for freaking out and running off after her fianc\u00e9 just up and didn't show.\n\nHe also stole more appreciative glances of her face and her breasts. Even with her approval of those glances, they were quick and furtive, stolen when she was looking elsewhere.\n\nMaybe I'll invite her up to my apartment. She might need some consoling...\n\nThe thought brought on more guilt. As much as he tried to ignore other, similar thoughts, much like he had with the thoughts of her insanity, they popped up quite regularly.\n\nShe'd probably fuck me out of gratitude. I mean, the only person to offer help when she's at her lowest? Come on.\n\nAlong with those thoughts came images of what she might look like naked.\n\nAlthough maybe she'll keep the dress on, like a fuck you to Brett. How many other guys could say they fucked someone else's bride on her wedding night in her wedding dress? \n\nBefore he knew it, they were in the parking lot of his apartment building.\n\nShe sat quietly as he pulled into a space at the back of the lot. Her smile had returned.\n\n\"This is me,\" he announced unnecessarily, turning the car off.\n\n\"Thank you.\"\n\nBefore he could react, she leaned over and kissed him on the cheek.\n\nIt was a grateful peck, but then she drew back and studied his face.\n\n\"You're sweet,\" she finally said, \"and cute.\"\n\nHe stared back at her, unsure how to proceed.\n\nAnd then she kissed him on the lips.\n\nHer lips, like the rest of her, were cold.\n\nBut they were also soft and moved eagerly against his.\n\nHe let her kiss him, still not entirely sure how to handle the situation.\n\nThis feels good...and she obviously wants it.\n\nShe tossed the flowers and high heels onto the floor, and shifted closer to him, her hand brushing against his forearm.\n\nHer excitement was flattering, and he quickly gave in, kissing back, reaching up to stroke along her cheek, his warm hand meeting her cool flesh. His cock jumped, uncaring of the situation beyond the fact that he was kissing a pretty and obviously eager woman.\n\nBut when her hand landed in his lap, he drew back, hit with a sudden surge of guilt.\n\nShe's obviously emotionally messed up, and if you do anything, you're taking advantage of her.\n\nShe stared blankly at him.\n\n\"We...maybe we shouldn't do this,\" he said lamely.\n\n\"Why not?\"\n\nHe hesitated, noticing her blank expression changing into one of petulance.\n\n\"You don't find me attractive?\"\n\n\"No, I do, I do!\" he replied hurriedly. \"I just don't want to take advantage of you.\"\n\n\"You're not.\"\n\nHer hand had not left his lap. His cock was reacting to its presence, swelling towards full size.\n\n\"But you're obviously hurting. You might not be thinking straight. I don't want to take advantage of you.\"\n\nShe pouted, her eyebrows knitting together in an expression of annoyance.\n\n\"Maybe I want to be taken advantage of. Maybe I want to feel something. Do you know how long it's been since I felt something?\"\n\nThe question diminished his guilt. Desire surged, but it was mixed with pity.\n\nIf she wants it, who am I to say no?\n\nHis cock, uncaring of anything besides her hand on his lap, swelled further.\n\nHe kissed her.\n\nHer happy coo was muffled by his mouth, but he heard it nonetheless, and felt his guilt disappear. The mix of desire and pity filled him, the former increasing from her hand now stroking along the bulge in his jeans, the latter thankfully having no effect on the former.\n\nShe squirmed closer, nuzzling against him, her breasts rubbing at his shoulder.\n\nHis cock was soon straining at his jeans, her hand teasing over its bulge as they kissed, their tongues tangling.\n\nWhen she finally pulled back, her eyes were bright with excitement. She bit her lip as she unzipped his jeans and delved through the fly to free his cock. Her cold fingers met its warm flesh, that strangely pleasant sensation sending a shudder over him. She eased it out into the open, purring eagerly, and leaned over.\n\nThose lips closing around the head of his length offered another strangely pleasant sensation. The lack of warmth was only slightly off-putting, and he forgot about it immediately as she began to suck. He groaned, another shudder running over him.\n\nThe veil fell forward, briefly obscuring her face and his cock, but she ripped it off, and tossed it into the backseat.\n\nWith the car off, there was no noise other than her purrs, and the soft sucking of her lips. She squirmed restlessly, her breasts jiggling to those idle movements, their abundance peeking from his jacket. His eyes were drawn to them, the ample cleavage looking so wonderful, the succulent swells of flesh seriously competing with the blow job for his attention.\n\nShe's got your dick in her mouth. Just play with them if you want to.\n\nHe had kept his hands off her, but the voice encouraged him further, so he let a hand settle on one of her breasts.\n\nShe cooed and came off his cock to smile at him.\n\n\"You like my tits, huh?\"\n\nHe nodded, and squeezed gently at his handful, drawing another coo from her.\n\nHer smile widening, she leaned back, briefly abandoning his cock, and took his jacket off. He took it from her and slung it back over the passenger seat while she extricated her arms from her long, lacy sleeves. The front of the dress slumped down around her waist once both arms were out, and the strapless bra underneath was quickly taken off and discarded like the veil.",
        "He took in the glorious sight of those naked breasts. His cock twitched, and he imagined plunging it in between them. She stayed still as he reached out and caressed along the luscious mounds, appreciating their weight, enough to create a downwards sag, and their softness, the supple flesh easily dimpled by his fingers. Her nipples were thick and stiff, and he brushed his thumb over one, making her purr.\n\nAs his hands roamed, she returned to his cock, stroking lazily. He felt her gaze on him and pulled his eyes from her breasts to look at her. Desire reigned in that gaze, her earlier despondence entirely gone.\n\n\"I haven't felt like this in a long time,\" she told him sincerely.\n\nHe hesitated, unsure of how to answer.\n\nThankfully, she did not seem to need an answer, as she turned her attention back to his cock. So, he contented himself with playing with her breasts, alternating how he treated them. Sometimes he kneaded at their swells, Annie moaning at how his palms pressed into that flesh, other times he rubbed at her nipples, her moans growing huskier from that treatment, occasionally he slapped lightly to watch the mounds jiggle, giggles replacing those moans then.\n\nHis cock twitched from her steady stroking. She made sure to go from base to tip each time, the lack of warmth in her fingers and palm no obstacle to pleasure.\n\nAnd then she drew back, her breasts slipping from his hands.\n\n\"I think I want this...\" she said, nodding to his cock.\n\nAs he watched, rapt, she took firm hold of her breasts, and then leaned down.\n\n\"...in between these,\" she finished, squeezing them around it.\n\nHe gasped, his hips jutting up, his eyes going wide as he was surrounded by sleek, exquisite, cool softness, the dark pink of his straining shaft contrasting with the ivory-white of her heavy mounds, the head poking up from the valley of creamy flesh.\n\nShe giggled at the look on his face.\n\n\"Fuck, that feels good,\" he said breathlessly.\n\nShe giggled again.\n\n\"Your tits are amazing.\"\n\n\"Thank you,\" she replied coquettishly.\n\nThey slid up the shaft, until the head was trapped between them.\n\nAnd then they slipped down, until it was again poking out.\n\nHe groaned, one of his hands resting on the steering wheel, the other on the complicated braids of her hair, making sure not to disturb them.\n\n\"It's so warm,\" she murmured, sliding her breasts back up again.\n\nHis answer was another groan, and then a grunt of satisfaction when she brought them down again, this time a bit quicker and harder.\n\nShe bit her lip, and glanced down at the head, peeking from her cleavage.\n\nHer hands squeezed at that abundance, and then slid it along his length. He let out another grunt as it glided up, treating inch after inch of him to such wondrous lusciousness, until it surrounded the head.\n\nIt began to descend after a few seconds, the supple skin oozing around his length.\n\nHe kept his eyes fixed on the lewd spectacle, shuddering from the sensations.\n\nHer breasts continued to move up and down, the rhythm slow and steady. His groans were answered by her purrs, his pleasure her delight.\n\n\"Fuck, that's incredible...\"\n\nShe giggled, her fingers dimpling those generous swells as she guided them along.\n\nThe rhythm picked up a bit. She began to massage the head when she was surrounding it, adding more pleasure to the equation. Every time she came back down, she slapped her breasts against the base, creating a lewd whack, the ample flesh jiggling from the impact.\n\nMore shudders ran over him, sweat building on his forehead.\n\nShe stared down at the head as it appeared between her breasts and then was swallowed up by them.\n\n\"It's so warm,\" she repeated absentmindedly.\n\nHis cock twitched.\n\n\"I want it inside me,\" she murmured, fixing him with a needy gaze. \"Can I have it inside me?\"\n\nHis cock twitched again.\n\n\"Fuck yes.\"\n\nShe moved away briefly.\n\nHe took a good look at her face again, appreciating the delight all over it.\n\nI have to thank Jack and Shirley for this. And my GPS.\n\n\"Ooh, you made a mess,\" she scolded playfully, lifting her breasts to show him the sheen of pre-cum glazing their inside and underside of their cleavage.\n\nWith a saucy smile, she swiped her fingers over both mounds, gathering that slickness, and brought them to her mouth.\n\nHe gaped at her as she sucked eagerly, her tongue swirling around each digit, the display making him quiver. Her eyes were fixed on him, that saucy smile still across her lips.\n\n\"Mm, tastes good.\"\n\nHis cock jumped, and he quickly brought the seat back to give her space.\n\nShe cooed excitedly, her breasts jiggling as she hurriedly straddled him.\n\nHer dress covered his cock, hiding it from sight. She reached under the dress, one hand taking hold of his cock, the other rooting around.\n\n\"I need you to warm me up,\" she told him sultrily.\n\nHe waited patiently, his hands returning to her breasts, sinking into their luxuriousness.\n\nA thought managed to sneak past his lust, warning him that he should put on a condom, but he ignored it.\n\nI can pull out. And she's engaged. I doubt she would have anything to give me.\n\nHer hips lifted. Wetness found the head of his length, dispelling those thoughts.\n\nShe drove down, taking him deep, and cried out softly.\n\nEven her pussy is a little cold...\n\nThere was a moment of disassociation for him, as he stared up at her, marveling at his luck.\n\nAnd then the sensations hit him, the tight embrace of her channel, the slick juices dappling his length, the strange yet wonderful coolness smothering it.\n\nHe groaned, his hips bucking, a shudder running down his spine.\n\nThe pleasure seemed stronger for Annie, who was swaying unsteadily atop him, her head thrown back, a look of pure bliss across her face. Her eyes were wide and unfocused, her mouth open in a near-perfect circle, her nose scrunched up quite adorably.\n\nSeeing that bliss delighted him. There was no sadness now, none of that anguish he had seen so vividly, only a joyous desire. She was undeniably beautiful, the ruined makeup still caking her face unable to affect that gorgeousness. Her pale flesh even seemed to glow as she wallowed in her own sensations, not a ruddy blush so much as a faint, silvery radiance.\n\nHe kept stroking and squeezing at her breasts, trying not to move his hips so she could recover from her spell of overwhelmed silence.\n\nWhen she did, she bit her lip, looking embarrassed.\n\n\"You're the first man I've been with in a long time,\" she told him shyly.\n\nHis delight dimmed.\n\nSo, it's not that I'm that good, it's just that you haven't had any in a while.\n\nShe smiled, sensing that dip in delight.\n\n\"Your dick feels good, though. Not just 'first dick in a while' good, but 'good' good.\"\n\nHe felt himself blush at her assurance.\n\nShe began to move, her dress rustling as she ground down against him, her hands settling on his chest.\n\nAs she rode his cock, he found himself thinking of her fianc\u00e9.\n\nLeft her at the altar, and wasn't even fucking her much, if at all, from the sound of it. Doesn't know what he's missing. Well, his loss is my gain, I guess.\n\nThose thoughts were interrupted as she caressed at his cheek, looking down at him with a lustful smile. She leaned over, keeping her hips going, and kissed him.\n\nBy now used to her coolness, he kissed back. Her breasts were squished against his chest, so he let his hands roam elsewhere, one sliding down her back to grab her ass through the dress, the other returning the affectionate caress, his thumb gliding over her cheek.\n\nThe grinding of her hips grew more assertive as they made out. Despite her voluptuous figure, she felt light atop him, making it easier for him to lay there and let her move however she wanted.\n\nThe sweat built up on him, but she remained pristinely cool. He squeezed at her ass, the flesh dimpling under his insistence.\n\nHer hips paused then. She broke the kiss to bury her face in the crook of his neck, letting out a weak cry. A tremor ran over her, and her channel spasmed around his shaft.\n\nA surge of pride came over him as she groaned, her hands taking up fistfuls of his shirt. Dimming that pride just a bit was the thought that she had not had sex in a while.\n\nShe shifted after a few seconds and kissed her way up his neck.\n\nSoon, they were making out again, her tongue wriggling eagerly against his.\n\nHer hips built back up to that previous rhythm, and then sped past it.\n\nShe leaned back off him, one hand steadying herself on his chest, the other splayed against the window, her hips driving down with an increased effort. His eyes were drawn immediately to her breasts, those succulent mounds bouncing wildly.\n\nThe car was filled with their moans, hers soft and delicate, his lewd and guttural. His cock throbbed, that slick channel clutching at it. She rode him energetically, doing the lion's share of the work, his only contribution the firm grip he took of her hips to help keep her anchored atop him. The delirious passion on her face thrilled him, and the radiant glow emanating from her had not dimmed at all.\n\nHe raked his gaze over her breasts again, and reached up to stroke at one, the pad of his thumb rubbing over the nipple.\n\nThe caress made her giggle, her smile widening.\n\nHe let his fingers sink into the ample flesh, interrupting its jiggling, that giggle turning into a coo.\n\nSuddenly struck by the desire to get his mouth there, he sat up.\n\nHis sudden movement surprised her, but he ignored her yelp, and closed his lips around her nipple. That yelp became a purr when the surprised faded and the pleasure took its place. The hand that had been on his chest grabbed a fistful of his hair, and her back arched, both actions ensuring that his face was pressed to the luxurious mound. His tongue lashed at the nipple while his lips sucked at it. Growling around his mouthful, he reached over and treated the other breast to its own stimulation.\n\nHer hips continued to crash down onto him, his straining shaft bathed by the juices streaming from her sex. She squealed loudly and shamelessly, her pleasure building quickly, her shuddering growing stronger.\n\nHe switched over to the other nipple, sucking it in between his lips, his hand switching as well, trading places to make sure both breasts got insistent attention.\n\nThe hand that had grabbed at his hair pushed on the back of his head, squishing his face against her breast. A lewd cry spilled from her; her hips bucked and her channel spasmed. He sucked harder at her nipple, that cry turning into a grunt of satisfaction as an orgasm washed over her, those stronger shudders running along her figure. His cock throbbed powerfully, the first twinges of his own orgasm making themselves known down in his core. The thought of pulling out had stayed in the back of his mind, but he found himself enthralled by how desperately her channel clutched at him and unwilling to leave its snug confines.\n\nThose strong shudders died down. Even during her orgasm, she had not stopped working her hips against him.\n\nHe took his lips off her nipple, and looked up at her, the utter bliss plastered across her face sending another surge of pride bursting over him.\n\n\"I'm close,\" he told her, \"should I pull out?\"\n\nPlease say no.\n\nHer eyes widened, and she moaned softly.\n\n\"No,\" came her quiet murmur, \"please, I want to feel it, please...\"\n\nHe groaned at her neediness.\n\nThe hand in his hair guided him back to her breast.\n\n\"Just don't stop sucking there please,\" she told him, \"it feels so good...your mouth is so warm...\"\n\nHis lips quickly locked back around her nipple.\n\nThose first twinges of orgasm grew into a coalescing pressure down in his balls. She rode him harder, her hips pumping vigorously, her breasts bouncing from the effort, her arm wrapping around his back to better secure herself.\n\n\"Please,\" she whimpered, \"I want to feel it, I need to feel it, it's been too long, please...\"\n\nHe groaned again, his tongue lashing at her nipple, drawing a lurid squeal from her.\n\nThe pressure down in his balls fired up his shaft. He bucked at the imminent arrival of his orgasm, meeting her next downward thrust halfway.\n\nThe first spurt fired out into her depths. He growled around her nipple as more followed, the formidable pleasure suffusing every inch of him, leaving him trembling. Her frantic riding stopped suddenly.\n\n\"Ooh, so warm...\" she cooed, \"it's so warm...\"\n\nAnother orgasm hit her, and she shuddered in his lap.\n\nHis lips worked at her nipple through both their ecstasies. The feeling of that stiff bud in his mouth was too wonderful for him to let it go so soon.\n\nEven when he finally did, he did not leave her breasts right away, kissing all over them, watching them ripple from the impacts of his lips.\n\n\"It's been too long since I've felt like this,\" she murmured, her hips lifting to let his cock slip from her.\n\n\"Glad I could help,\" he said, giving one of her nipples a kiss.\n\nShe giggled.\n\nThe look on her face made him feel guilty that he had ever thought she might be a vengeful ghost or insane murderer. Her smile was bright and genuine, her eyes shining with affection.\n\n\"Thank you.\"\n\nHe smiled back.\n\n\"Like I said, glad I could help.\"\n\nShe kissed him, her arms wrapping around him, bringing him in closer, her breasts squishing against his chest.\n\nThey made out for a few more minutes. The lustfulness had ebbed, so there was no urgency, only a calm tenderness. Her cool weight felt good on his lap, her contented purrs music to his ears.\n\nBut he soon reluctantly pulled back from her.\n\n\"We should go upstairs.\"\n\nHer smile sagged into a sad expression, and he was suddenly reminded of her situation.\n\nI probably shouldn't have assumed she wants to spend the night. She probably wants to call her family, let them know she's okay, see if one of them can pick her up.\n\n\"Unless there's someone you want to call who can pick you up.\"\n\nShe shook her head.\n\n\"There's no one I can call. Thank you though.\"\n\n\"So,\" he began, trying to not sound too hopeful, \"do you want to come upstairs?\"\n\nThe look she fixed on him was the opposite of the blissful one he had been lucky enough to see only minutes ago.\n\nThere was no happiness, only a forlorn misery. The affection was still there, but it was tinged with sadness. She opened her mouth but hesitated.\n\nI get the feeling you want to tell me something.\n\n\"You don't have to if you don't want to,\" he told her gently.\n\n\"I want to,\" came her quiet reply.\n\n\"Okay then. Why don't you get your dress back on, and we'll head upstairs?\"\n\nShe slunk off his lap and slipped her sleeves on, depriving him of the majestic view of her naked breasts.\n\n\"What about your bra?\"\n\n\"Don't worry about it.\"\n\nOkay then.\n\nHe grabbed his jacket off the back of the passenger seat.\n\n\"Maybe put this on. It's a short walk to my building, but it's a little chilly.\"\n\nA small smile tugged at the corners of her lips. She took the jacket and shrugged it on.\n\nHe fixed his jeans and got out of the car.\n\nWhat a night. \n\nAs he came around the front of the car, he stopped short.\n\nAnnie was not in the passenger seat, but the car door was closed.\n\nAnd I didn't hear it open or close.\n\nHe looked around, but she was nowhere to be seen.\n\nOkay...where did she go? \n\nHe opened the door. His jacket was draped over the back of the passenger seat, and as he reached in to grab it, he stopped short again.\n\nA chill hung in the space above the seat. Swallowing nervously, he patted the seat, and then his jacket, finding both cold.\n\nOh god.\n\nHe glanced down.\n\nThe floormat was clean, no signs of a mess, no mud, no dirt, no flowers, no high heels.\n\nHe glanced into the backseat and saw neither a bra nor a veil.\n\nA shudder ran along his spine, a different sort than what he had felt not so long ago.\n\nShe was nowhere in the parking lot that he could see, and when he crouched to inspect underneath his car, sure that he would not find her but curious enough to look, she was not there either.\n\nSo...was she a ghost? \n\nAfter a few more minutes spent looking around the parking lot, he trudged up to his apartment, suddenly very tired.\n\nShe felt too real to be a ghost though. I mean...I came inside her and everything.\n\nHe went straight to bed, still working over the possibilities in his mind.\n\nAs he drifted off to sleep, he thought of Annie.\n\nThe way his cock twitched at the thought of her troubled him, but it was easy to ignore it as sleep beckoned.\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\nEvan put the car in park.\n\nIt was near the same time it had been when he had encountered Annie last night. Much like then, very few cars were out.\n\nThe idea to revisit this spot had come to him earlier in the day. He was not entirely sure why he had decided to return, apart from the heat that flowed through him whenever he thought about last night.\n\nAfter he had woken up and eaten breakfast, he had set about to trying to figure out who or what he had encountered.\n\nA few Google searches had been fruitful.\n\nThe combination of the name of the highway, the location of the encounter, and a mention of a woman in a wedding dress had yielded several results.\n\nOne such result had been a blog post, where someone recounted seeing a woman in a wedding dress on the same highway, near the same spot, around the same time. Like Evan, he had slowed down, but unlike Evan, uneasiness had gotten the better of him, so he had driven on.\n\nThe top comment on the post had clarified the situation: [It's Annie Burgess. She was hit by a car on that highway a few years ago. Her fiance left her at the altar, and she couldn't handle it, so she just ran off.].\n\nA comment on that comment had added more detail: [i was at that wedding. she tried to act like she was fine, but we all knew she was hurting. we were all at the venue, and she just disappeared. some of us went out to look for her, but it wasnt until a few hours later that her parents got the call. i drove along there once, cuz i heard rumors of her ghost, and i saw her. its her. i recognized the dress, the flowers, everything. its her. dont know why shes there or what she wants, but i wouldnt stop for her. just keep driving if you see her.]\n\nHorror had swept over him while he had read those comments, but he also could not help but remember the pity he had felt for her, and the affection and gratefulness she had seemed to feel for him.\n\nSo, he was at that same spot now, waiting.\n\nThis might be the stupidest thing I've ever done. She's a ghost.\n\nAfter a few more minutes, he saw, through the rearview mirror, a figure in white scuffling along the side of the road.\n\nHe shivered but felt a rush of pity at her miserable gait.\n\nShe can't be a vengeful or murderous spirit. She didn't hurt me.\n\nHe opened the passenger side window as she shuffled by.\n\n\"Ma'am?\"\n\nShe kept walking.\n\n\"Ma'am?\" he said louder. \"Do you need help?\"\n\nShe kept walking.\n\n\"Ma'am!?\"\n\nShe stopped suddenly, and he contemplated driving off.\n\nI didn't yesterday, so why should I today?\n\n\"Do you need help?\"\n\nHer head turned slowly in his direction.\n\n\"Do you need help?\"\n\nHe watched as she began to shuffle over to the car. His heart was beating faster, but his cock jumped.\n\nWhen she reached the car, she leaned over, showing off her cleavage. His cock jumped again as he remembered that abundant softness surrounding it.\n\nShe flipped the veil back, revealing that pretty face, streaked with ruined makeup.\n\nThe expression of pure anguish he had seen last night was there again.\n\nBut then it disappeared, replaced surprisingly swiftly by a wide smile.",
        "\"Oh, it's you!\"\n\nHe nodded numbly, taken aback by the recognition.\n\n\"Uh, yeah...\"\n\n\"Back for more?\"\n\n\"Uh...\"\n\nHe thought about telling her that he had read about her, that he knew her story, that he was sorry that her life had ended so tragically.\n\nBut the smile that had turned her anguish to glee was too pretty and adorable to disturb.\n\nBesides, she's still a ghost. If I bring up her past before she does, maybe she'll get mad.\n\n\"Yeah,\" he finally admitted. \"Back for more.\"\n\nShe giggled.\n\n\"So, do you need a ride?\"\n\nShe bit her lip.\n\n\"I probably shouldn't get into a car with a strange man. You might try to take advantage of me.\"\n\nAfter another giggle, she tossed the flowers and heels to the ground, opened the door, and slipped inside.\n\nEvan drove off.\n\n \n"
    ],
    "authorname": "majicman21",
    "tags": [
        "blow job",
        "car sex",
        "ghost",
        "titfuck",
        "wedding dress"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-woman-in-white-2"
}