{
    "title": "Rock and Water Ch. 07",
    "pages": [
        "This is a revised edition of my original chapter... Wonderful feedback from a few valued readers made me realize the scene in the restaurant was not consistent with the continuity of the story or Patrick and Corrine's relationship. Concerns of disregard towards her hard limits were valid and very constructive. I hope the new scene pleases you as much as it pleases me!\n\nThank you to FA_JF and Lindseymarsh for your original edits, along with voicing your own concerns for the original scene. Thank you to Masterfuljim for taking the time to give your stamp of approval for the new scene since it was your comment that initially brought the concerns to light! \n\n***\n\nLike most couples, certain patterns begin to emerge. Since our first night together in the cabin, once we've come down from the high of our orgasms and the intensity of our power exchange, we go back to laughing and debating on essentially equal terms. However, on this evening, after he has plugged my ass and trapped his seed inside of me, the energy between us has shifted. As we step into the shower, instead of walking in and immediately reaching for the soap, I just stand there. Passive. He seems to expect this, and quite naturally and casually begins to bathe me with a soap-lathered cloth.\n\nWith no words between us, he appears almost clinically detached as he sets about cleaning my body. Beginning with gentle caresses to my face and neck with the washcloth, he moves on to my breasts and torso using firm circular strokes. Individually lifting each wrist high above me, he cleans under my arms before carefully lowering them back to my sides. Lower still; he washes between my legs and ass cheeks, careful not to displace the plug that holds his seed inside of me, before finishing with my legs and feet. While it feels a little odd to surrender this ritual to him, the simple act of bathing myself, it also feels right that he should bathe his toy. For that's what this weekend is about. I'm his to fuck and control, to impart his will and satisfy his needs; but I am also his to take care of, to keep safe and to cherish. In this moment, I feel coveted.\n\nMy eyes remain downcast as he bathes me; my mind numb to everything but the water crashing down and the cloth against my skin. It barely registers when his hands gently but firmly move me under the shower's stream, facing me outwards towards him. I feel the soap on my body cascade down to the shower floor.\n\nAs if waking from a dream my eyes slowly rise to meet his, briefly pausing on his impossibly hard cock that belies his otherwise calm demeanor. When my eyes reach his, I jerk backwards as if shocked by a jolt of electricity. The intensity of his gaze shoots through me and straight down to my cunt.\n\nPatrick moves on to washing his own body with what seems the same mechanical detachment as he had mine, except for the brief moment his eyes slowly close and his breath slips from his open mouth as he washes his cock and balls. He strokes his thick cock with a soapy hand, rinses, then continues to stroke himself with an unhurried rhythm. Eventually he releases himself to finish cleaning the rest of his body, his eyes returning to their study of me. His unattended cock remains rigid, moving slightly up and down seeking his hand again. His scrotum is tight against his body. His control fascinates me.\n\nUnder his scrutiny, I feel raw and exposed as if he can see every thought, experience, and emotion, both dark and light, which make up who I am. It's almost too much and I have to look away. I allow my eyes to break contact with his and lower them to take in his body. Rivulets of water cascade down his slim torso, over his tight chest and core. Beads of water cling to his tattoos, causing them to glisten in the light. The ice-blue eyes of the serpent almost shimmer with malevolent intent. The grey hairs, interspersed with the light brown on his head and chest only add to his raw strength and sexuality.\n\nPatrick's thumb and forefinger firmly grasp my chin and draw me back to his eyes. His tone is stern, but his eyes are shining brightly now.\n\n\"What's in your ass Corrine?\"\n\n\"Your cum, Patrick.\"\n\nHis eyes widen briefly in question.\n\n\"Your cum, Sir.\"\n\n\"How does that make you feel?\" \n\nClosing my eyes, I think for a moment. \"Claimed...marked. Owned.\"\n\nBrushing my wet hair off of my face, he smiles, then leans down and kisses my forehead gently.\n\n\"Good.\"\n\nTurning off the water, he leads me to the center of his bathroom and dries me with his towel. He steps away, leaving me to stand alone on the soft bathmat as he dries himself. The warm, summer evening keeps me from developing a chill, yet I tremble just a bit anyway.\n\nHis sperm still deep in my ass, not a drop lost due to the thick, unrelenting plug. Although I've just showered, I feel so very dirty; so naughty. My tight ring still tingles with the memory of his thick cock stretching it; it's rigid length pulling on the virgin tissue as he stroked in and out of me for the first time.\n\nWith his cum trapped inside of me until he wishes otherwise, I revel in the feeling of being a receptacle for him; a vessel. My accomplishments, my profession, my family... In this moment they are safely tucked away. I belong to him, body and soul; reduced down to the purist form of submission I can give him. Yet...I don't feel subjugated. I feel lifted; elevated to a higher plane of acceptance of who I am and what I need. Patrick seems to know my needs even before I am aware of them; tapping into them at a slow but purposeful pace. \n\nI feel my mind drifting; looking inwards. I think back to the days before we met, when my eyes sought him out at the gym. I recall the way my body reacted to his as he pressed himself against mine at the lockers, and then the electricity that shivered through me the first time his hand took mine. I think my body knew, before my conscious mind, that there was a restrained yet potent power inside of him; a strength that could not only match my own, but control and subdue the crashing waves inside of me.\n\nI imagine him as the strong and silent rock, while I'm the current of water that flows around him, guided by his unmovable force. At times, the rock within him creates a barrier, a dam of some sort, which quells my flow until I become a placid, serene lake. At other times, he allows my waters to rage and crash against him; creating a blinding energy between us. I can almost hear the crash of a waterfall around me...\n\n\"Corrine.\"\n\n\"CORRINE!\"\n\nI feel his warm hands grip my upper arms and give me a slight jostle. \"I need you to come back to me now...\"\n\nIt takes me a moment to focus, and I realize how dazed I must have looked during my reflection. I give him a slight smile and blush. \"Sorry....Sir. I just feel so relaxed...I think I drifted pretty deep inside my head.\"\n\nHe pulls me into his arms, my cheeks tickled by the soft hairs on his chest. \"From what I could see, you've been dipping in and out of subspace since we got into the shower.\" He pauses. \"It's a beautiful sight to see. Your features are so soft, so pliant. It makes me think there isn't anything you wouldn't do for me.\" Although it's a statement, there is a hint of question in his tone.\n\nI think before I respond. I pull back and look up at him. His warm eyes caress over my body. My trust for him runs deep. I trust him with my body. I trust him with my heart. I recall a print from my parent's bedroom that said something along the lines of, \"you hold in your hand my fragile heart; do not make a fist\". I smile as I realize how vulnerable I feel, yet how much faith I have in his strength and adoration for me. My heart feels safe in the cradle of his strong hands.\n\nI rest my head back onto his chest. \"Yes Sir. I would do anything for you.\"\n\n\"Why?\" he whispers. His tone is questioning; almost...hopeful?\n\nI take a deep breath. \"Because I trust you... I care for you... I love you Sir.\"\n\nI hear his throat briefly catch as his arms pull me even tighter towards his body; his head tucked into my shoulder. Our two naked forms cling to each other quietly. With my head on his chest, I can hear the slow regular rhythm of his heart, which quickens after my declaration.\n\nPatrick steps back, his firm hands holding me at arm's length. \"Look at me Corrine.\"\n\nI look up and see his eyes searching mine, as if he wants to make sure I'm of sound mind and not still drifting in subspace. Although I still feel a little otherworldly, I know I'm thinking clearly and have no misgivings for saying what I have, even if he doesn't reciprocate.\n\nHe gives a little nod, as if confirming to himself that my words were not born out of misdirected lust or servitude; that they are truthful and from my heart.\n\n\"Say it again... Use my name.\" His eyes are shining brighter than I've ever seen them before as he holds his breath waiting for me to speak.\n\n\"I love you, Patrick.\"\n\nHe slowly lets out his breath, briefly closing his eyes, as if he were savoring the words.\n\nOpening them, he looks down at me with such warmth and sincerity I could burst. \"I love you too, Corrine...with all of my heart. I've fallen for you so fucking hard it hurts.\"\n\nBefore I know it, he reaches down and lifts me from just under my ass cheeks, and throws me over his shoulder. I squeal, \"What the hell?\" as he carries me with long strides into the bedroom; tossing me on the bed before climbing on top of and straddling my hips.\n\nPatrick looks down on me with a huge, cocky grin across his face. \"You do realize this changes everything, don't you?\"\n\nI look up in confusion; a little worry laces my voice. \"What do you mean it changes everything? What does it change?\"\n\n\"How can I possibly tie up, spank, paddle, and sodomize a woman that I love so much? How can I call a woman who is so strong and independent, whom I respect with every fiber of my being, my cunt and whore?\" \n\nNow I look up in horror... This can't be happening. I practically sputter as I try to find my words. \"What do you mean? Of course you can... SIR! Loving each other doesn't change any of that! PLEASE!!\"\n\nIn a split second I suddenly find myself flipped over, one of his hands pinning my wrists above my head while the other gives my ass three hard and rapid spanks, directly over both cheeks. I squeal from the sudden pain penetrating my tender skin; from the force of the slaps pushing the plug even deeper inside my abused ass. My body responds to his assault with a burst of fire inside of me.\n\nLeaning over my back until I can feel his hot breath tickling my ear, his hand on my neck, not tightly but still a clear sign of his control, he growls \"That's right my little slut...my love...it changes nothing. If anything, loving each other allows us to go deeper, and darker, into your dirty little fantasies, and into mine. It deepens our commitment to each other. It allows us to expose every desire and depravity with a safe and trusted partner.\" He leans down and kisses the spot just behind my ear. \"Oh.....\" he lets out with a guttural moan, \"I've got so many ways for you to serve me; so many ways to pleasure you...\"\n\nThe promise in his voice sends a shudder through my body. This is everything I've wanted, but can I handle it? He seems so assured and confident. Why am I suddenly unsure? As if sensing the anxiety that's beginning to creep through my veins, Patrick gently rolls me over onto my side, caressing my cheek.\n\nHis expression is warm and compassionate. He idly brushes an errant hair off of my forehead and behind my ear, sending a shiver through me. \"It's been a crazy night, hasn't it sweetheart?\" \n\n\"It has...but...it's been incredible for me; so special. Thank you.\" I pause a moment trying to collect my thoughts, to try and figure out why I'm a little uneasy. \"Is this really possible Patrick...shit, sorry, Sir?\" He lets out a little chuckle at my slip. \"How do we do this? How are we going to balance everything... time for each other, the sex, our careers, Addie...?\"\n\nPulling me closer, until my head rests in the crook of his shoulder, he gently caresses my head and quells my nerves with a quiet \"shhhhh...\" and murmurs of \"it's okay, sweetheart... we'll figure it all out...we'll be ok.\" Against my normal nature, I believe him.\n\nI lift myself up to kiss him, but my eyes glance over the bedside clock. \"Oh shit Patrick! I think we've missed the dinner reservations!\"\n\nCalmly, Patrick begins to kiss and nibble on my earlobe; his hot breath sending shivers through me. \"No worries...I'll just give Gil a call and let him know we're running late.\"\n\n\"Gil? Who's Gil?\" I'm suddenly on high alert. I think I already know.\n\n\"Gil's the chef and owner of 'The Market', and an old friend. His wife Vanessa runs the front of the restaurant.\"\n\n\"Oh fuck,\" I think to myself. The northwest has become well known to foodies around the country for its sustainable cuisine, both rustic and refined; with many of the local chefs having attained celebrity status, including Gil Hartland. I should know. I interviewed him and Vanessa three months ago for my show.\n\n\"I've, um... met Gil and Vanessa. I interviewed them a few months ago.\"\n\nPatrick moves his body off of mine and helps me sit up. \"I know,\" he says with a big smile. \"They loved you.\"\n\nLetting out a huge groan, I grab a pillow and cover my face with it. \"I made a total ass of myself that night! They must have thought I was a total drunk!\" My interview had involved indulging in their Spring tasting menu, which was a five course meal, each accompanied by a local wine or spirit. The interview went great; we had so much fun talking about the local food and music scene, I almost forgot I was on a job.\n\nAfter the interview was over, they'd invited me to stay. The three of us, along with their young, cute bartender, stayed up until after one o'clock in the morning drinking and sharing stories. At the end of the night, the bartender, a good eleven or twelve years younger than me, drove me home and we made out and groped each other like giggling teenagers in front of my house. Addie was inside, so there was never any question of him coming in. He'd asked if I'd like to get together another time, but understood when I declined, citing a busy schedule.\n\nGil and Vanessa had given me their home number and told me to call them anytime to hang out again, but I was too shy, and a little embarrassed, to call them. We spoke once more, just before the interview aired, and once again Vanessa invited me to come by the restaurant any time, but I never did. I have no idea whether the bartender, Marc, had told them about our kiss; I don't want to know...\n\n\"As I said, they love you. When I told them we were dating, they were ecstatic and have been begging me to bring you by.\"\n\nI look at him questioningly. \"Why didn't you tell me you knew them? That you knew about my interview with them?\"\n\nPatrick looks a little impish when he answers. \"Well, it's not as sinister as it seems. I knew they'd been interviewed by someone local, but admittedly after reading a trough load of articles and hearing multiple radio and television interviews over the years I have to admit I don't follow them much anymore. When I told them about you, after our weekend in the gorge, they told me about your evening together. Honestly, I'd meant to say something but kept forgetting. When I decided we'd go to their place tonight, I thought it might be fun to surprise you. No?\"\n\n\"It's just that... I pride myself on my professionalism, but that night I'd had so much fun I let myself get a little crazy.\" I look at him a little pensively. \"Did they mention anything else about that evening?\"\n\nIt's his turn to look questioningly at me. \"Should they have?\"\n\n\"Um....no....not really. I had to get a ride home that night because I was too drunk to drive.\" I realize it's only a half-truth.\n\n\"No worries, baby. It happens to the best of us sometimes.\"\n\nI decide in that moment that it's probably best to leave it at that. No reason to bring up kissing Marc when it was really no big deal to begin with. Patrick and I hadn't even met yet at that point anyway, and maybe Marc wouldn't even be there tonight.\n\nPatrick hands me my Jade dress to wear; thankfully he allows me to wear panties so I feel more secure that the butt plug won't slip out by accident at any point during the evening. I'd brought a strapless bra to wear with the dress, but he quickly nixes it.\n\nI brush my hair out, leaving it loose around my shoulders, and apply a little light makeup before we head out the door. The restaurant is across the river in the revived industrial district. I ask if we can take his motorcycle, but Patrick declines.\n\n\"I won't have you wearing dresses and sandals on the back of my bike, Corrine, even for short rides. I don't want to take any chances like that. Not everyone is looking out for motorcycles and although I'm cautious when driving in the city, you never know.\"\n\nI appreciate his concern for safety, and get up on my toes to quickly kiss him on the cheek.\n\nThe night is warm but breezy, and despite the plug holding his seed inside of me, I feel a giddy nervousness as if we're going out on our first date. He parks the Bronco near the river, about six blocks from The Market. Usually I wouldn't mind, but after two blocks I start to feel the plug shifting inside of me with each stride. Excitement quickly builds and I feel my pussy respond by becoming swollen and wet. I stop and look up at him in panic as wetness begins to seep into my panties.\n\nWith a knowing look, his gaze travels to between my legs, currently squeezed closed as I shift back and forth from one leg to the other.\n\n\"Need me to carry you?\" he asks with a mischievous grin.\n\nI weigh out my option, trying to figure out which would be the least humiliating, and it's a draw. With resolute determination, I begin to walk again, carefully trying to create the least amount of stimulation as possible. I'm only marginally successful and by the time we reach the restaurant I can almost smell my own arousal. My nipples are erect and easily seen under the thin material of my dress. We both know the flush on my cheeks has little to do with the warm summer evening.\n\nBefore we walk in Patrick pulls me off to the side a little, and leans down close. \"Honestly, I wasn't trying to set you up... Do you need a moment to come down a little?\"\n\n\"Maybe a moment, please, if that's okay Sir.\"\n\nAdmittedly I feel a little overwhelmed knowing his cum is still plugged inside of my ass. It's having a powerful effect on me; taking my submission to him to a much deeper level than I've ever felt. Coupled with our exchanges of love, I feel utterly consumed by him, in only the best way, but I need my head to be little more focused before seeing his friends.\n\nTo help distract me, he shows me the fa\u00e7ade and sign on the front of the building which he had made for Gil when The Market had opened four years ago. It turns out they've known each other for double that. Both are kayak and rafting enthusiasts, and since meeting Patrick has introduced Gil to his love of motorcycles, specifically BMWs, and the two regularly go for rides together.\n\n\"Ok, Sir. I think I'm ready now.\" We walk in, his arm comfortably around my shoulders. For the moment I feel as composed as I possibly can, until I see Marc behind the bar chatting with Vanessa. They both look up at the same time and when they see us huge smiles appear on their faces. Vanessa walks over with arms extended. A petite woman, also in her early-forties, with auburn hair and a style that could only be called vintage punk; Vanessa has an energy that a woman in her twenties would be jealous of.\n\n\"Corinne! How amazing is this?\" She embraces me in a huge hug before pulling back. \"When Patrick told us the two of you were seeing each other, I nearly jumped up and tackled him!\"",
        "\"Vanessa, Hi! I know! This city definitely feels like a small town sometimes.\" This sentiment is validated when I briefly look up to see Marc still watching us, a slight smile playing across his face. I immediately give Vanessa my full attention again.\n\n\"I'm sorry for being so lame about getting in touch with you and Gil after the interview. I have to admit I was a little embarrassed for getting so drunk that night. I can hardly remember what we were talking about towards the end.\" \n\n\"No worries, Corrine. I totally get it, and I also know you're a busy woman. Not to mention I know this guy's been keeping you busy for the past weeks...\" She gives Patrick's arm a squeeze and a good shake.\n\nLeaning closer to me, out of Patrick's earshot, she whispers, \"As far as that night goes, you were cracking the three of us up with your hysterical online dating disasters; including the guy who put your hand on his dick under the restaurant table fifteen minutes into your date.\"\n\nI let out a groan as the two of us laugh over the date I wish I could forget; Patrick watches on in quiet bemusement.\n\nVanessa links her arm in mine. \"I've got your table right over here. I made it a four-top so Gil and I can join a little later. Hope that's ok?\"\n\n\"I love it.\" I realize I really would. Seeing her again reminds me of how much we all clicked that night.\n\nThe table is right under the large plate-glass window near the door, affording us a view of downtown on a Saturday night. We choose, however, to sit facing the restaurant though, so we can take in the scene. Patrick pulls out my chair, then chooses the chair just around the table's corner and pulls in close so our knees are touching. It's only then that I realize we're sitting in direct view of the bar, and of course, Marc. Inwardly I role my eyes and realize I'm making a big deal out of a little kissing and groping.\n\nIt's only after we sit that I become acutely aware of the plug again. It wasn't the largest in his collection, but the base is wide enough that every movement I make causes the sensitive nerves to be stimulated and my arousal repeatedly brought to the surface over and over. I try to make a mental note to sit as still as I can, otherwise intelligent conversation will be out the window for the night.\n\nMenus are brought over by our server, but Patrick stops me as I reach for one.\n\n\"I hope its ok, but Gil was hoping he could just send out some samples from his current menu.\" He looks at me with eyebrows raised, authentically caring for my approval.\n\n\"It sounds great. If it's anything like his spring menu, I won't be eating again for the rest of the weekend.\"\n\n\"No worries there.\" He says with a little chuckle. \"I'm sure I can find ways for us to burn it off in due time.\"\n\nHe hands me the cocktail menu; I look down and am happy to see the gin and ginger cocktail that I'd enjoyed so much during the interview. I look up to see Marc is standing over us. Almost as tall as Patrick, but just a bit lankier, his trimmed dark hair, full dark brows and hazel eyes would be hard for almost any woman to resist; however, it was his ever present smile and sweet flirtation that won me over so many months ago.\n\n\"Hello Corrine and Patrick! Two of my favorite people here together.\" He leans down and surprises me with a quick peck on my cheek. Nothing inappropriate at all, but I feel myself blush a little. As soon as he kisses me, Patrick's left hand gently, but firmly, takes possession of my mid-thigh; his thumb slowly rubbing the skin just where the flesh curves inwards.\n\n\"It's good to see you again, Marc.\" I try to hide the mild anxiety in my voice.\n\n\"Marc, how are you?\" Patrick reaches out with his right arm and the two men shake hands.\n\n\"Doing good, my man...doing good. It's a small world, isn't it? How did you meet this beautiful woman?\" Marc looks at me appreciatively and I feel my face and chest flush.\n\n\"I met her at the gym, if you must know,\" Patrick goads. \"You should try going some time, it would do you good.\"\n\nThey both let out an easy laugh and I can tell they're playing with each other.\n\n\"Marc pretty much runs marathons in his spare time, and when he's not doing that he's surfing at the coast.\" A flash of our night in the car together brings back a memory of an invitation to go to the coast with him sometime for a surfing lesson... Inwardly I cringe.\n\n\"Um...yeah,\" I brilliantly comment. \"I remember you mentioned something about the coast...\"\n\n\"I did... and the invitation for a lesson is still open if I can steal you away from Patrick some time.\" My mouth drops a little when he says this, until he adds \"I've offered lessons to him, but he seems to be stuck on those kayaks for some reason. You should see him on those waves some time. It's amazing to watch.\"\n\nI smile at Patrick. I knew he kayaked rivers but didn't know he also surf kayaked.\n\nMarc attempts to look stern, but it's obvious he's holding back a smile. \"Be good to me man, or I'll tell her about your close call with the rocks last year...\" I don't like the sounds of that.\n\nPatrick shoots him a look, that while friendly, warns Marc off of the topic. \"Don't you worry yourself about that, I'll tell her myself.\" He clearly likes Marc, which is making me feel awkward as hell for not saying something earlier. He then adds, \"Who do you need to blow around here for a drink?\" This time it's my turn to laugh.\n\nMarc gives me a wink and asks if I'd like the Gin-ger cocktail again. How the hell did he remember that after so many months? I suppose that's what makes him a good bartender. I blush, once again, and say yes. He walks away without asking Patrick what he would like.\n\n\"He didn't take your order, Patrick. What's that about?\" I'm relieved that Marc's moved away from the table, with no need for him to come back any time soon. I don't think my face could get any hotter.\n\n\"He knows how I like to start my night.\"\n\nI start to squirm in my seat a little, until I realize it only serves to turn me on again. Abruptly, I become still again with a slight sigh. It's going to be a long night.\n\nI know what I need to do. \"Patrick... in the spirit of transparency and honesty, I think I should tell you something... about Marc.\"\n\nHis smile drops as he removes his hand from my leg and he briefly runs it through his hair. Shaking his head a little, he asks, \"Oh shit... do I want to know?\"\n\nQuickly wanting to dispel what he might be imagining, I blurt out, \"We didn't sleep together!\" I feel like I shouted it loud enough for the whole restaurant to hear, but no one seems to have noticed. He just continues to stare at me, needing more information. No judgment, but definitely on alert.\n\n\"He drove me home the night of the interview because I'd had too much to drink, and we made out in front of my house. We were a little touchy-feely but all clothes stayed on and I haven't seen him since.\"\n\nPatrick looks a little concerned. \"You were drunk. Did he take advantage of you?\"\n\n\"No,\" I laugh a little, shaking my head. \"Not in the least.\"\n\n\"Okay. Good.\"\n\nWe sit quietly; his hand has returned to my thigh, tracing the same lazy pattern with his thumb again. I want to say more, to reassure him that I have no interest in Marc whatsoever, or anyone else for that matter, but it seems best to let him process this on his own.\n\nOur quiet thoughts are interrupted by Marc himself, returning with our drinks. Patrick's eyes are on him in a flash, and a slight smile appears on the corner of his lips.\n\n\"So Marc... you fooled around with my girl here.\" His tone is calm, but there's an undercurrent of both amusement and possessiveness. I hold my breath waiting for Marc to respond.\n\nTo his credit, instead of being defensive, Marc smiles and replies honestly, \"Damn straight I did, can you blame me? Besides, she wasn't yours at the time.\"\n\nI can't believe this conversation is even happening, let alone in front of me as if I wasn't here. I can't decide whether to laugh, hide my face in my napkin, or get pissed off. In lieu of all three, all I can manage to do is just sit there with my mouth slightly open.\n\nPatrick lets out a big sigh. \"No...she wasn't, so I can't....and don't really have a problem with it. Let's just all be thankful the two of you didn't end up in bed together. That's one image I'd have to burn out of my memory.\"\n\nI relax and release the tension I've been feeling since we walked in to the restaurant tonight. Under the table, I put my hand over his and give it a squeeze. He responds by gripping my thigh even harder, sending a warm thrill through my body.\n\nMarc looks visibly relieved too, then realizes he still has our drinks in hand. He sets down my drink first, then Patrick's. \"For you Corrine, I've got my original Gin-ger, with a little extra ginger muddled in just how you like it; and for you my friend, your Basil Hayden.\" He sets down a glass of amber liquor.\n\nPatrick answers my unspoken interest. \"Kentucky Bourbon Whiskey.\" \"Marc has schooled me on the distinctions between the whiskeys, and this is the one I keep coming home to.\"\n\nDespite the difference in their ages, these two men obviously have a strong friendship and I'm relieved there doesn't seem to be any discomfort between them. Marc returns to the bar, leaving Patrick and I to wait for our first plates. Patrick's hand has moved a little further up my thigh, but continues to alternate between gently rubbing with his thumb and being still. He removes it to gently run his knuckles over my cheek. I lean into his touch gratefully.\n\n\"Thank you Patrick for understanding, and not making me feel more awkward than I already did. I wish I'd have been as mature and accepting when I'd learned about you and Kym.\" I remember the way I behaved when I first met the young trainer and my ongoing avoidance of her.\n\nHe sits up a bit straighter and looks at me intently. \"What came down between us about Kym had more to do with her behavior towards you than outright jealousy on your part. I'd like to believe if she hadn't been such a bitch towards you, that you would have had an easier time seeing it for what it was.\"\n\nI have to be honest. \"I'd like to believe that too, but I know some of my hang-ups with her also had to do with her age, and her looks...\" I let out a sigh as I look down at the table, my eyes avoiding his.\n\nWe're briefly interrupted as our waiter drops off some bread, olives, and what appear to be purplish deviled eggs. He tells us they are beet-pickled deviled eggs before walking away. We dig into the starters; the eggs are surprisingly delicious.\n\n\"Is that why you've been avoiding the gym?\" I look up; startled. I hadn't realized he'd noticed my absence; we hadn't really discussed it.\n\n\"I'm a little embarrassed to admit this even to myself, but yes, I think it might be.\"\n\nHe takes my hands in his. \"We're going Monday morning, together, and we're going to talk to her.\" My stomach twists a little when he says this, but his hands are warm and strong on mine, bolstering my resolve to work through this lingering issue between us. Admittedly, I'm still pretty angry that I can't go to my own gym without worrying that this young woman is going to be glaring at me the whole time.\n\n\"Okay Patrick. I think that's a good idea. I'm in.\" I say with a smile.\n\nHis look becomes a little stern. \"I'm glad for that, but it wasn't up for discussion, regardless. You'd do well to remember that I make the decisions through Monday morning. As far as I'm concerned that means you're mine until 11:59 a.m.\"\n\nI look at him with an \"oh, really\" face, and he breaks into a laugh.\n\n\"Fine... I have to meet with your contractor, Pete, at eleven anyway so you're off the hook; unless you want to kneel at my feet while we go over the plans.\" I can see from his expression that he's picturing just that in his mind's eye, and enjoying it very much. \n\nBefore I can shoot off my reply, we're interrupted by Vanessa bringing us two separate salads, both simply prepared with vegetables and fruits from their own garden plot just out of town. They're almost too beautiful to eat.\n\nShe beams, and asks to join us. We eat and drink as if reunited old friends. Occasionally, Marc comes over to check on our drinks, staying to chat a little before returning to the bar. After our initial cocktail, both Patrick and I nurse one glass of wine each through dinner; an unspoken agreement between us to keep clear heads this weekend. The whole vibe feels laid back, and all of my earlier tensions have dissipated. \n\nThe dinner continues as small plates of locally grown and simply prepared foods adorn our table. The flavors are amazing, and by the time Gil finally emerges from the kitchen with a raspberry panna cotta and flourless chocolate cake we're all feeling full and happy. Marc drops off some cappuccinos before returning to the bar.\n\nWhereas Patrick is tall and lean, Gil is a few inches shorter and very well-muscled. Clean shaven with spikey, tousled black hair and dark brown eyes, his presence is just as imposing as Patrick's, but the almost constant smile on his face softens him. The sleeves of his chef's coat are rolled showing the ends of vibrantly colored tattoo sleeves, while another tattoo of a rising Phoenix peeks out of his collar along the side of his neck. A silver ring pierces his eyebrow.\n\nI remember that he is a good five to six years younger than Vanessa, and seeing the two of them together calms my nerves a little regarding the smaller age difference between Patrick and me. The two make a beautiful couple and it was obvious on the first night I met them how much they loved each other. They have two sweet boys, five and seven, who were briefly present during the interview before going home for the night with their grandmother. \n\nOnce he sets down the desserts, Gil practically lifts me out of my chair for a huge hug. \"Corrine, so good to see you again!\" As he squeezes me, I can actually feel the plug in my ass begin to slip and I have to clench my cheeks tightly to keep it in. Spikes of pleasure shoot through my body; I gasp from the sudden sensation and my body suddenly feels scorching hot. He sets me down in my chair and I see Patrick give me a smoldering look. He knows I just got turned on, and why.\n\nI vaguely hear Patrick and Gil talking about a ride they have planned, but I'm so caught up in the sensations I'm feeling, I barely catch a word until I hear my named called.\n\nAs Gil is talking, Patrick is looking at him, but his hand is steadily moving up my inner thigh and pulling the leg aside so he can rest his fingers on the outside of my panties, cupping my pussy. I'm grateful for the tablecloth, but still feel incredibly exposed. He's walking a thin line with my hard limit on public play, but I'm also curious where this is going, and find myself wanting to explore my own boundaries.\n\nAs I'd explained to Patrick one night, my fear of public play lies mostly in protecting my public persona, but here in the intimacy of the restaurant and guarded by the tablecloth, I'm a little excited that he's pushing me. I find myself opening my legs a little more, and subtly inching my hips forward. \n\nThe tip of his middle finger begins to run up and down my panties with increasing pressure, just over my pussy lips causing the material to slip between my wet folds. I'm holding my breath as I try to listen to Gil tell me more about the band, when I feel Patrick's finger slip under the seam of my panties then slide easily inside my cunt. His thumb begins a rhythmic pattern over the hood of my sensitive clit as I feel every muscle in my body turn to liquid, every nerve begin to tingle. My gaze slowly turns to Patrick, only to see that his expression has remained unchanged. He appears fully engaged towards listening to Gil.\n\nOrgasm control has continued to be a challenge for me, and as I quickly approach the edge I begin to panic. I've kept myself outwardly calm, but I'm not sure I'll be able to if I orgasm. I quickly realize I may be over my head this time.\n\nI move to close my legs in a quiet plea for him to stop. Initially he pauses, slowly turning his even gaze towards mine, then squeezes a little harder, his finger penetrating a little deeper. He doesn't look upset, but it's clear he knows I'm challenging his authority. He's expecting me to control my orgasm, but once again I can feel myself slipping. Damn it. It's almost like a game of \"chicken\" as we both wait for the other to pull away.\n\nI nearly jump out of my skin when Gil turns his attention towards me. \"So Corrine, I'm trying to convince Patrick for you two to stay out tonight and go with us to hear a friend's band play, but he's wussing out. Help me convince him and I promise I'll have you home by one...\"\n\nRelief sweeps through me as Patrick removes his thumb from my clit, but he continues to torture me by adding a second finger to my cunt and fucking me slowly and deeply. He asks, \"What do you think, sweetheart? I'm a little wiped out, but if you'd like to go....\"\n\nIn a rush I say, \"Gil, the music sounds great, but I have to agree with Patrick that I'm also in for an early night. Excuse me just a sec...\" \n\nI can't take anymore, and in my first act of defiance towards Patrick, I rise from my chair and push away from the table. Patrick pulls his hand out from under the tablecloth, and with his ice-blue eyes hard on mine, takes his wet finger and briefly sucks the tip of it before using his napkin to wipe it clean. Gil and Vanessa have turned their attention to a server, so our actions go unnoticed, yet I feel my face flush a deep red.\n\nWalking quickly to the bathroom, conflicting emotions battle inside of me. I go in, lock the door, turn around and lean against it.\n\nShit! Feelings of inadequacy shake through me as I begin to doubt myself. What made me think at my age that I could be a good sub? I promised him that I was his for the weekend, that I would submit fully, and I've already fucked up. A part of me is also frustrated with him. How could he have not seen how close I was? Would he have stopped? I just don't know. Regardless, I suspect I'll have some penance to pay.\n\nI walk back towards the table, but find everyone standing by the bar chatting with Marc. I approach Patrick and up on my toes whisper a quick apology to him. He responds by putting his arm around me, giving me a warm smile and a comforting squeeze.\n\nUsing his fingers to gently brush my hair to the side, he leans down and gives my neck the sweetest kiss before whispering in my ear, \"No need to apologize, sweetheart. Your little act of defiance is going to give me so much pleasure tonight.\"\n\nI slowly suck in my breath as the promise of punishment resonates through me, leaving me feeling soft and compliant. It feels so natural now, to bend to his will; to submit to his desires even if that desire is to cause me pain.\n\nI want to take the pain for him, I crave it really. The intense connection it generates between us; the trust. He knows when to push me, to push my limits, and when, just before the pain surpasses the pleasure, to pull back. He knows the names to call me, the ones that make me pant and blush. Cunt. Whore. Slut. Names, which in proper society offend, but for me open my mind and body to the delicious freedom they bring; the freedom to explore all of my dark desires.\n\nVanessa comes over and steals me away from Patrick. \"You two are so hot together Corrine. The way he was looking at you...holy shit. You two have some crazy chemistry going on.\"\n\nShe comes closer and whispers in my ear. \"He wasn't the same you know. Those last few years with Maureen just killed him. We were so happy that he had the cabin to work on; it was the only thing that got him through it all. Since she split he's definitely come back to life, but seeing him here with you tonight is the first time I've seen the light in his eyes again. Outside of Gil, he's one of the greatest guys I know and I really, really hope you feel the same way...about him...that he feels for you.\"",
        "I give her petite frame a big hug and whisper back to her. \"I do, Vanessa... big time. I've got it pretty bad for him.\"\n\nConspiratorially, she adds, \"Just don't let him railroad you. He can be pretty controlling sometimes; Drives Gil crazy.\"\n\nMy half gasp-half laugh comes out louder than I'd hoped and all three men turn their attention to us.\n\n\"I was just telling Corrine what a control freak you are Patrick. Go easy on her...\"\n\nHe turns to me, his sexy eyes and easy smile make my knees week. \"Do you want me to go easy on you Corrine?\"\n\nUsing a playful tone that could be taken in any way, I answer, \"No, Sir.\n\nWith the same casual tone, he softly replies, \"Good girl.\"\n\nAnyone listening to the conversation may have heard playful flirting, but to us the air spanning the distance between us begins to crackle with the heat of our words and I can't believe that everyone in the restaurant can't feel it. \n\nIn two strides he's next to me, his arm slung low around my waist pulling me close to his side. \"I think it's time for us to head out. Gil, I'll see you Tuesday night for the game. We can plan a ride then.\" Letting go of me, he gives Gil a quick hug and leans in to say goodnight to Vanessa and gives her a peck on the cheek.\n\nIn a move that could only be called 'caveman', Patrick pulls me close once again before shaking Marc's hand goodnight. Marc gives a little laugh and just shakes his head at the obvious message being passed on to him. I'm a little surprised by Patrick's possessiveness, but I can't deny that it makes me love him even more.\n\nThe last 'goodnights' are shared while Vanessa and I exchange phone numbers. We're finally out the door and walking back to the car when Patrick guides me into the recessed doorway of a closed storefront and backs me against the brick wall with his body. His hands grasp my upper arms, effectively trapping me; adrenaline and lust shoot through my body as his lips collide with mine and the events of the evening crash down on me.\n\nOne of his hands reaches behind my head as his fingers tangle into my hair; my scalp tingles as his grip tightens. My head is swimming from endorphins as they cascade through my body, then just before my lungs rebel against the pressure of his body against mine and his lips stealing my breath, he steps back and I start to suck in air while attempting to lean forward to capture his lips again. His hand still tight in my hair, I find myself unable to move from the wall.\n\n\"Sir...please.\"\n\n\"Please what, my little slut?\" His head leans down and begins to lightly suck and bite at my exposed neck. Coherent thought is lost on me as a deep ache begins to spread from my core through every nerve of my body.\n\n\"Please take me home,\" I say between gasps. \"I need you.\"\n\nHis hand slips between my legs, firmly cupping my pussy as the tips of his fingers push firmly against the plug. I begin to grind my clit against his palm with abandon. He doesn't move his hand at all; allowing me to masturbate myself against him as my orgasm rapidly builds inside of me.\n\n\"Oh look at you...so full of need, so sweet. It's almost as if you think I'm going to allow you to cum.\" There's no condescension in his voice, no mockery at all. He says it evenly, as if it's just a matter of fact.\n\n\"You're...you're not?\" I slow down, then stop my movements altogether. I attempt to step backwards to lessen the pressure of his hand on my swollen and now very wet pussy and clit, but the doorway keeps me from retreating, while his hand pushes against me, holds me against the wall.\n\n\"Who gets to cum Corrine...good girls or bad girls?\"\n\nHis question resonates inside of me. I'm a professional, respected woman in this city, but in this moment I'm Patrick's bad girl.\n\nIn a choking whisper, I look down and answer, \"Good girls get to cum.\"\n\nHe gives my hair a quick tug. \"Look at me.\"\n\nMy eyes shoot up to his. There's fire in them tonight.\n\n\"...and are you a good girl or a bad girl?\" His other hand remains firmly against my hot and wet pussy.\n\nI lick my now dry lips. \"I'm a bad girl Sir.\"\n\n\"Tell me.'\n\n\"I... I denied you access to my p... to my cunt.\"\n\n\"What else?\"\n\nOh shit. \"I didn't tell you that I'd kissed Marc, before we left for the restaurant tonight.\"\n\n\"No, you didn't...\" He takes a step back, releasing my pussy and my hair at the same time. Raising his palm that is wet from my juices, he holds it to his face, inhaling the scent deeply. \"...but I'm not sure I can entirely fault you for that.\"\n\nI can't help my surprise. I didn't expect him to understand my hesitance.\n\nHe goes on. \"One, you didn't know he and I were friends. Two, it happened months before we met and it never amounted to more that some adolescent fun in a car.\" He stops to cup my face in his hand. \"Lastly, I imagine it caught you off guard tonight that we were going to the restaurant, not to mention that I was friends with Gil and Vanessa. It wasn't quite fair of me to throw that at you when I did; when you were just coming out of a pretty deep subspace. You didn't really have any time to wrap your head around it. In the end you handled it all beautifully though. Thank you.\"\n\nI'm so grateful for his understanding that I attempt to embrace him, only to have his hand drop from my face to grip my breast, HARD. I gasp at the shock of pain that radiates through my chest before transforming to acute pleasure in my core.\n\n\"That doesn't change that you've been a bad girl who denied me her cunt. I know you very well, my love. I know you were close to orgasm, and I know how to pull you back, which had been my intention. You doubted me and my ability to protect you; you challenged my authority. My question to you is, do you feel that my actions at the table warranted a safeword, had you been able to convey one?\"\n\nI think long and hard before answering, and voice the only honest conclusion I can come to. \"No.\"\n\nPatrick pauses briefly, and the air is silent except for our breaths. \"You do realize there's only one way to make this right, don't you?\"\n\n\"Punishment.\"\n\n\"Yes.\"\n\n***\n\nThe drive home is a blur. We're greeted at the door by Griffin and Guinness, the latter of which already has a leash clutched in his mouth. Patrick instructs me to take them for a ten minute walk while he sets things up for what's to come. His deliberate ambiguity sets me on edge, anticipation building within me.\n\nAlthough I should be used to it, walking with the butt plug only serves to excite me beyond reason. As I become more hyperaware of the plug, I realize it's been inside of me for a little over three hours. His cum is still surrounding it, making it unbearably slippery and constantly on the verge of slipping out unless I'm vigilant. The night so far has been a constant stream of sensations and emotions; my earth-crashing orgasm as he fucked my ass, going deep inside my head during the shower that followed, my anxiety about seeing Gil, Vanessa, and Marc again, my defiance...and now, facing my punishment.\n\nIn truth, I'm feeling a little fragile and more than a little tired, but I know if we were to lighten or skip the punishment tonight, that it would set a precedent for our days to come. I agreed to submit to him for the weekend, and while he stayed within the boundaries of my limits, and I still defied him. I know, once my punishment is over, the slate will be clean between us and we can move on.\n\nI also know that I've fantasized about being punished for years now, not by my own hands through orders on a telephone, but to truly be at the mercy of another; someone whom I trust to keep me safe, but will also push me to take the pain and humiliation punishment may bring. I look at the time on my phone and see he expects me in two minutes. With renewed excitement, I drag the dogs home, prematurely ending their pissing war.\n\nWalking into the house, I unhook the dogs and hang their leashes on a hook by the door. Patrick calls to me from the kitchen, and after removing my sandals, I walk through the living room, now lit only by a few pillar candles. As I pass through the archway of the sliding French door that divides the living and dining room, I shiver as I notice soft, brown leather straps with attached O-rings hanging from each corner. On the table are coils of hemp rope....and the flogger.\n\nInside the kitchen, Patrick is pouring hot water into a teapot, then sets it aside to steep. I stand in the doorway and watch his easy and calm movements. His height and presence fill the kitchen and I suddenly feel very small. My breath intakes sharply as a shudder courses through my body. In three strides he's enveloping me into a snug embrace.\n\n\"Are you ok, sweetheart?\"\n\n\"Yes. I'm fine. Really. It's just that so much has happened tonight already...\"\n\nHe pulls his head back a little and looks down on me, studying my face. \"I'm going to give you a choice Corrine...punishment tonight or tomorrow? The punishment will be the same regardless, no penalties for waiting until the morning.\"\n\n\"No. Not tomorrow. Please punish me tonight, Sir.\"\n\nHe studies me for a moment, then gives a little nod. \"Ok, I agree... but there's a few things we need to discuss first, not just for tonight but your future, punishments as well.\"\n\nThat wakes me up a little bit...that punishment will be a regular part of our relationship dictated by my compliance and obedience, or lack thereof.\n\n\"You need to assure me that you'll use your safeword if it gets to be too much. The punishments I chose will generally match the infraction. They will not push any of your hard limits or cause you any lasting pain or visible marks. With that in mind, you should know that if you do safeword, it only postpones your punishment. This means that if I plan on flogging you for ten minutes, which is my intention for tonight, and we only get through two....we will have eight more minutes to go at a later time. Whether it's completed all at once or it takes eight days we WILL complete your punishments as planned. Until we do finish a punishment, there will be no orgasms for you. Do you understand?\"\n\nAs excited as I'm getting, I eagerly nod and assure him with a \"Yes, Sir!\"\n\nHe chuckles briefly at my enthusiasm before leading me into the dining room. In one swift motion my dress is pulled up and off my body and tossed to the other side of the table, leaving me standing in my bikini panties. Scanning my body, he almost appears surprised to see them, before they too are removed and tossed next to my dress.\n\nSoon, he's all business. Rope is weaved around my right arm, from just above my elbow down to my wrist. The pattern is intricate and beautiful. The pressure is evenly distributed with no actual tension on any one area. It's mesmerizing to watch, his actions so precise and assured. He repeats the same pattern on my left arm. I notice a small loop of rope, nestled against the tops of each wrist, just as he attaches a carabiner to each.\n\nHe walks me over to the French doorway, and quickly attaches each carabiner to a corresponding O-ring so that my arms are outstretched and spread above my head. I look up, trying to see how the leather straps are attached.\n\n\"There are hooks that the leather slips into, just above the moulding, not visible from the ground. No worries though, they're very secure. You won't do any damage when you pull on them.\" I notice he says \"when\", and not \"if\".\n\nTwo leather cuffs that I had not noticed, also attached to brown leather straps are hooked into the base of the doorway on either side. Again, I can't quite see the hardware that the leather is attached to, but I can feel their strength as my ankles are buckled into the cuffs, and the adjustable leather straps are tightened until my legs are spread wide but my feet still remain flat on the ground. I can feel my wet pussy lips open from the stretch, and cool air kiss my sensitive hole.\n\nSecured as I am, I'm surprised by my own body's reaction. No panic, no rebellion; just pure and stark desire crash through me. My hips begin to rock as my ass clenches on the plug. My nipples are instantly hard; rosy peaks aching for his touch.\n\nFacing the living room, the light of the candles soothes my frayed nerves. My breathing has become slow and even by the time Patrick approaches me from behind. His warm body briefly comes into contact with mine, and I can feel he's removed his shirt. The soft hairs on his chest tickle my back as his breath caresses my neck. Just as soon as I begin to revel in our contact, he pulls away and I feel the flogger's heavy tendrils come to rest on my right shoulder. I look over at them; the strands are at least one-quarter inch thick, with each one capped by a single knot. Inhaling deeply, I take in the smell of new leather.\n\nThe straps of leather slowly are pulled up and over my shoulder, leaving a trail of sensitized skin in their wake. He repeats the same motion over my left shoulder, letting the heavy weight of them slip slowly behind me and down my upper back. I hear him take another step or two back, then feel a very light sting cross my upper back, just below my shoulders. My first kiss with the flogger surprises me but I lean back just a little, seeking to feel it again. It's then that he begins to alternate back and forth, left to right along my upper back and underarms until the skin is so hot and sensitive that each stroke begins to feel like hot oil being sprayed on me.\n\nI can't help myself; I start to bounce a little on my toes, rising up with each stinging slap.\n\n\"Stay down, slut.\" His abrupt command causes my heels to crash solidly to the floor even before my mind takes in what he's said.\n\nA crisscross pattern begins to evolve, both in range and strength. The tendrils are now slapping across and down my back from one shoulder to the opposite hip, then back up to the other shoulder and down again to the other hip. Over and over again they come down; my mouth is open in a permanent \"Oh\" but no sound comes out. All I can feel is pain, yet as the pain is absorbed deep into my skin, I feel a ball of pressure building inside of me, expanding and pushing back at the pain until they are one and the same.\n\nMy mind is at war as the words 'stop' and 'harder' battle each other to escape my mouth. I will myself to stay quiet. At no time do I consider saying \"yellow\" or \"red\".\n\nLower even still; the sting of the flogger is now centered on my ass in rapid succession. On this sensitive skin, I can feel each knot as it lands with a thud against the soft and pliant flesh. Occasionally, the ends land perfectly against the base of the plug and the sound of the contact varies just slightly as leather hits rubber.\n\nIt takes all of my strength to keep my feet flat on the floor. I'm still bouncing just slightly with each strike. My ass is on fire and my cunt is swollen and coated in juices that are now sliding down my inner thighs. Tears form in the corners of my eyes, but not from the pain. I feel an incredible cathartic release building inside of me and the tears are just the beginning.\n\nI cry out when the flogging stops and Patrick's hot breath against my burning ass cheeks. His lips makes contact with one cheek, and I let out an agonized moan as he uses his wet tongue on the burning flesh over and over again until both cheeks are damp with his saliva. I hold my breath as I next feel him gently blowing cool air against my tortured ass. With a quick lick around the base of the plug, he ducks under my outstretched arm and is now in front of me.\n\nThe expression on his face is almost indescribable; lust, power, need, love. It's all there. His chest is heaving with his own exertion and excitement; his cock straining against the confines of his jeans. \n\n\"Three minutes to go, love. Can you do this?\"\n\nI nod rapidly, to consumed by pain and lust to speak.\n\n\"Words!! I need words, Corrine.\"\n\n\"Y-yes Sir!! Please don't stop.\" I arch my body towards him, relying on my restraints to hold me up. \"God I love you woman...\"\n\nMy eyes stay trained on the flogger; his wrist begins a pattern of upwards and downwards motions as the flogger begins a beautiful dance resembling the sign for infinity just in front of me. He steps closer and the first contact of heavy fronds and knots smack against the pale outer flesh of my left breast before quickly coming down on the right. Reflexively, I suck in my breath in an attempt to pull my breasts away from their torment, but before he can reprimand me I grit my teeth and push myself outwards once more.\n\nThe pressure inside of me begins to build once more. It's not quite the same pressure as the approach of an orgasm; it's almost more powerful than that. Flashes of sting and burn erupt on my breasts and nipples, and with each strike I'm crying out an anguished \"ah\". Tears are now steadily streaking down the sides of my face, the salt water kissing my dry lips.\n\nThe flogger continues its pattern lower and lower, until the skin of my soft belly becomes streaked in red. It's not quite as painful as when he was flogging my breasts, but my breathing becomes more and more irregular as I anticipate where he will be striking next. If he continues the same crashing rhythm and intensity on my pussy and thighs, I fear I may pass out.\n\nInstead, I feel him pull the flogger away as he steps back and takes me in. We're both breathing erratically, but I can see he is still in full control of himself. He steps forward and uses his feet to nudge mine even wider, then leans down and adjusts the straps to remove the slack. My inner thighs are stretched uncomfortably, but not unreasonably, and a burn quickly begins to build in my muscles. More of my weight is now being carried by my arms, but I find that the even distribution of the rope along my arms has prevented any loss of circulation.\n\nPatrick cups my pussy and groans at the wetness he finds. The walls are swollen and my pussy lips and clit are engorged. My juices are coating the entirety of my cunt, with rivulets dripping down my inner thighs. A few drops are scattered on the floor below me. Reaching farther back, he grips the base of the butt plug and for a moment I fear he's going to remove it right here and now, but instead he begins to twist and pull on it in an agonizingly slow rhythm until every nerve in my body begins to scream for release. This makes him smile.\n\nHe pulls back once more, but still standing close, begins to flick his wrist upwards gently, causing the fronds of the flogger to hit my pussy with a dull thud, but nothing that conjures any pain. I arch outwards, inviting increased contact, and I see a slight smile play across his face before the strength and intensity of his assault begins to increase. Again a pattern of upward strikes begins to develop.\n\nHeat begins to radiate from my exposed and tender flesh, but there is no true sting or pain and I surprise us both when I scream out, \"MAKE IT HURT! PLEASE SIR!!\"\n\nWithout missing a beat, he stands back, raises his arm above his head and strikes down with the flogger so that the knotted ends make sharp contact directly on my pink and swollen tissue. I scream out again in pain and pleasure and feel three more strikes in rapid succession rain down on me until I feel my knees buckle and hear the flogger crash to the floor.\n\nPatrick drops to his knees in front of me and uses his strong hands to support my hips until my feet find purchase with the ground again. As soon as they do his mouth is upon my battered pussy, his fingers pulling the lips apart giving his tongue access to my swollen folds and clit.\n\nAll I can do is mutter \"oh fuck oh fuck oh fuck\" over and over again as he takes my clit between his lips and teeth, clamps down, and begins sucking as two fingers from one hand penetrate my wet lips and begin to fuck me hard and fast. Wet, smacking sounds fill the room, mingling with my incoherent gasps until lights flash in my brain and my body explodes in a series of climaxes that have me jerking in my bonds. My tears transform into pure elation as my mind and body dance together in cathartic release.",
        "Hanging from the leather straps, I watch as if in a dream as Patrick roughly pushes his jeans and boxers down below his hips, licks his palm until its wet and begins to jerk himself off so quickly that his hand is a blur. The head of his cock is almost purple and pre-cum is steadily flowing from the slit. In less than thirty seconds cum begins to fly out from his cock in powerful spurts, landing on my belly, pussy and thighs before slowly dripping down my body in thick rivulets.\n\nHe stands mesmerized in front of me, cock still in hand, watching the path of his cum trace down my legs and puddle on the floor next to my juices. He discards his jeans and boxers behind him, unlatches my ankle cuffs, helps me adjust my stance, then takes me into his arms. My skin is still alive with a lingering burn from the flogger, but the contact feels wonderful. His mouth comes down on mine and we kiss with passion and love.\n\nMoving from my lips, he kisses some tears off of my face before reaching up and unhooking one carabiner. Before he releases the other, he ensures that his arm is snug around my waist. My head swims a little as he releases my other arm and walks me over to a dining room chair. The wood feels cool against my still smoldering ass cheeks, but mostly it feels good to be sitting. He quickly removes the rope bindings from my arms and inspects my skin closely for discoloration other than the expected red marks from the ropes.\n\nHe tells me to wait there before walking naked into the kitchen and returning quickly with the teapot and two mugs. As he pours, an herbal blend of mint and chamomile infuse my senses. He sits down and pulls in close to me.\n\nCupping my cheek in his palm, he gives me a warm smile. \"How are you, love?\"\n\nI give him a shy smile back. \"I think I'm good. Yes...I'm good.\"\n\n\"You surprised me a little over there. I thought I knew what you could take; but you wanted more.\"\n\nMy heart tightens a little and my face flushes. Looking down I almost whisper, \"I hope....I hope that was ok.\" Slowly I look up at him. \"Was that wrong of me....to ask to be hurt more?\"\n\n\"Absolutely not, sweetheart!\" He looks truly shocked that I would even ask. \"It was amazing. You truly blew my mind a little. Watching you lose yourself to the pain...it was an amazing transformation to watch; such a privilege to be the one to give it to you. Thank you...truly.\"\n\nI close my eyes and feel a single tear slide down my face, only to be caught by the back of Patrick's finger as he gently wipes it from my cheek. This time though, the tear is from the overwhelming love and connection that I feel for him; for the safety and sense of home that is developing between us.\n\n\"Ok sweetheart, first a shower, then off to bed.\"\n\nI can only nod in response.\n\nPatrick offers privacy if I would like it, to remove the plug that has been present in my ass for hours now. Although admittedly I feel some shame and anxiety about what may come out of me along with his cum, I decide to let go of my inhibitions and allow him to remove the plug while we are in the shower together. I can tell this pleases him and I know I made the right decision, even though I know he would support me either way.\n\nAs we step into the spray of water, instead of the sting and hurt I was anticipating the warm water feels soothing. Using a soapy lather, Patrick lubricates around my asshole and begins to gently turn the plug side to side a little, then in and out until in one smooth move he removes it completely. I can feel his warm, thick seed move down my leg to be quickly washed away by the warm water. Relief floods me when I see that it's only his white cum that is swirling down the drain.\n\n\"It would have been okay otherwise too, sweetheart; I hope you know that.\" It's obvious he sensed my concern.\n\n\"Yes. I do know. Thank you.\" In my mind, I think back to my shyness of peeing in front of him not too long ago.\n\nOnce again on this evening, I find myself being bathed by Patrick. I can't believe it's only been one night when so much has already passed between us and we still have the weekend to go. This shower is a little quicker, and in no time we're out and drying off.\n\nI look at my reflection as he towels me off. Despite the extensive flogging, my skin has faded already to a light pink, with just a few dark small slashes of red marking my skin. I love seeing them; a tinge of pride hums through me, and I wish that there were more. I can see now that he was careful to avoid my shoulders, arms and legs so that even in my summer clothes the marks will be discreet.\n\nHe uses a gentle, soothing lotion over my body before we snuggle into bed. I feel myself drifting as he's telling me about the rest of our plans for the weekend...something about a motorcycle ride and some live music in a park on Sunday with Luka, his \"little brother\". The last thing I remember before fading to black is a light kiss on my forehead and his whispers of love. "
    ],
    "authorname": "jhollander",
    "tags": [
        "bdsm",
        "mdom",
        "fsub",
        "buttplug",
        "flogger"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/rock-and-water-ch-07"
}