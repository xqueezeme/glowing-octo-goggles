{
    "title": "The Sisterhood of the Smiling Penis",
    "pages": [
        "\"I'm just curious. Are you a student here at the college?\"\n\n\"Look, missy, let's just keep this on an impersonal, cash basis---okay?\"\n\n\"I'm sorry; I should have guessed that anyone who wears a mask when he is working---and will only meet in the dark---probably wasn't interested in getting chatty.\"\n\n\"Just pay me up front per our previous agreement and give me the originals---not the copies---of the consent forms. Remember: no refunds for dropouts. You contract for four, only three go through with it, I get paid for four.\"\n\n\"Sure, here you go. We've never had a dropout since you started working for us.\"\n\n\"Seven of them this time? And you expect me to take care of all of them in one night?\"\n\n\"I always assumed you took medicine or whatever.\"\n\n\"That's not the issue. And no, I don't take medicine. It's just damned hard---or to be more specific, difficult to keep it hard---to ensure you get your money's worth.\" \n\n\"Last semester you did four. If you don't take some sort of...performance enhancement drug, how do you...?\"\n\n\"Keep it up? Evidently my body naturally produces not only an abundance of testosterone but also other substances not unlike those found in those little blue pills. Additionally I studied Eastern meditation techniques a few years ago. I had to, since an erection---at least in my situation---at an inopportune time could be very embarrassing. Four is not seven. Look, cut me some slack here. At least break it into two segments, maybe an early shift and a late shift separated by a couple of hours. You can do whatever else it is you do to them while I'm grabbing a bite to eat and catching a cat nap.\"\n\n\"Okay, we can do that. We'll start a little earlier, say seven, and then the second wave at eleven? You also seem to have an amazing level of stamina...you don't seem to...\"\n\n\"Cum prematurely? While learning to control my erection I also seem to have learned to control my...ejaculation. I also eat healthy and work out.\"\n\n\"Your, ah, penis\u2014I'm told---it's as if it is...smiling?\"\n\n\"It's just a birthmark. Splitting them into two groups should work out just fine.\"\n\n\"You must enjoy your work.\"\n\n\"Yeah, that's what everyone assumes---and it does have its moments. It can also be a curse.\"\n\n\"Look, buddy, this sorority only pledges the most attractive girls in each freshmen class; usually four in each semester. And every year---twice a year---for the past three years you came here and had sex with them---and got paid for it---even for the ones that backed out. By the way...do you ever...ah...take on any private...ah, clients?\"\n\n\"Let's get real here. You girls hire me because I've got a very big cock and exceptional...staying power.\"\n\n\"Really, really hard, too.\"\n\n\"Oh, don't tell me---of course! This is my fourth year, you're probable an officer, you're a senior...you were in the first pledge class I ever...did.\"\n\n\"Uh, huh...and from the comment cards you've...gotten even better.\"\n\n\"Maturity and experience, I suppose. Additionally I've spent a great deal of time studying female sexual response in order to improve the, ah...product. Look! I think this whole Greek society hazing thing is just a little weird. Still, who am I to judge? It's your life, I suppose. I'm just trying to make a living; thanks to the fact that you and a few of the other sorority houses think this shit is fun---it's a pretty good living. On the other hand, the idea of dating or whatever some girl with whom I had oral, vaginal and anal sex as part of some kinky pledge ritual---that would be even more weird. Sorry, I don't mix business and my personal life.\"\n\nHe'd delivered his little rant in his best Darth Vader voice; he'd learned to do voices in high school when he thought he might be an entertainer someday. Then again, he was an entertainer. Just not the kind he'd been thinking of.\n\n\"What a shame. Can't blame a girl for trying.\"\n\n***\n\nAs he left the night deposit window at his bank, he thought back to his earlier conversation. Becky Hundsucker. He'd known who she was since the first time they had done it when she had pledged. She was undoubtedly the most beautiful girl on this or any other campus. Shit, he'd dreamt about her since his---and her---freshmen year. She been in the first group he'd ever \"done.\" She had been one astoundingly nasty little freshman. If memory served him correctly, she'd taken him all the way down her throat and given him the best BJ he'd ever had.\n\nMost of these pretty little bitches probably couldn't suck a regular size dick worth a shit---let alone his, which measured over nine inches. Well, he was being modest; it was just a hair under ten inches. He was pretty sure that half of them didn't even enjoy sex that much. He knew damn well that most of them were not pleased when he fucked 'em in the ass, but then they'd made the choice to join one of these fucked-up sororities.\n\nHe'd worn a mask since day one; over the last three years, so had the girls, which was just as good since he probably had a class with more than one of them and would have had a hard time not breaking out in laughter if he'd recognized one of them. It wasn't that big a college and seventy-nine percent female. All were from excellent bloodlines with very wealthy parents. And while he'd fucked the cream of the crop, he couldn't have gotten a date with one of them to save his soul---certainly not Becky Hundsucker.\n\nHe remembered well the demonstrations and taunts when he had first arrived on campus. The Board of Regents or whatever they were called had mandated the admission of a certain number of males in each class. His had been the first such class. Lots of parents, alumnae and students were furious. Virtually none of the rich bitches would even speak to him the first year. At least the faculty had taken pity on guys like him and had universally worked to ensure that they were fairly treated in the classroom. Why had he chosen this fucked up place?\n\nEasy: money. He didn't have any, the administration was under tremendous pressure to demonstrate that they were actively seeking male admissions and the publicity and angry diatribes from the \"women only\" crowd had scared away most male applicants. Several guys who accepted their admissions letter received packages in the mail with selected, severed animal parts and little notes that would make any male uncomfortable. As more and more prospective freshmen men took a pass, the private university kept upping the ante to the remaining applicants. In the end, they were more than paying for all of his expenses to attend one of the top twenty academic institutions in the country---they were paying him more than twice the cost just to show up.\n\nAfter the police got to the bottom of the small group of wacko, radical, fem-fascists who were carrying out the threat campaign, the silent treatment started. The bitches---or at last 99% of them---wouldn't speak to a male student---let alone go out with him. It had gotten a little better each year he had been there. At least now they'd speak to him for the most part but they still wouldn't go out on a date with any of the male students, preferring the predominantly male university fifty miles away.\n\nThey were a private school; why buck the alumnae? The single largest endowment source---without which they couldn't keep their doors open---mandated it. It was part of the will of an alumna with millions to be left to the school on one condition---they admit men. Rumor had it that the old bat blamed the college's policies for turning her into a lesbian and late in life decided that single sex schools were unhealthy.\n\nBack to Becky Hundsucker. He was damn sure she had been the only one that first semester who started to salivate when she saw his cock. Too often over the years he'd have some poor crying little cunt who, in her heart wanted to back out but whose pride wouldn't let her. He'd always been kind to them, certainly never treated them rough and, on more than one occasion, pretended to cum so that they would believe that their \"ordeal\" was over.\n\nSlightly less than half of them were damn nice little fucks who got into the whole thing in the spirit of sisterhood or whatever. Becky Hundsucker had been a different matter entirely. She had been a tiger. He'd never forget her. In the dim light when her mask had slipped he had recognized her. Evidently superior night vision was another physical benefit of his...condition.\n\nHe'd dated normal girls before and certainly ended up in the sack with them. He'd had more than one express shock at the length and girth of his organ and at least one back out, calling him a freak. That had stung. In point of fact, the majority of the pledges probably looked on him as little more than a circus freak. But not Becky Hundsucker. In addition to sucking him off for all he was worth, when it came to phase two she had brazenly grabbed his cock, centered her sweet blond muff over it and just ridden it all the way down to the root.\n\n\"It's about damn time! Now that's what I call a fucking cock!\" she had intoned.\n\nLooking back it was the best sex he'd ever had. Becky Hundsucker loved to fuck and was as talented at it as any woman North of the Equator, not to mention just fun in the sack. While all of the girls submitted to anal training by their big sisters, the anal part of the initiation could get a little dicey and on more than one occasion he'd cut it short---both in duration and depth---before the poor little thing passed out from fear. Not Becky Hundsucker.\n\nHe could take or leave anal sex---certainly leave it when it came to a woman who didn't really want to be getting poked in the butt. Becky Hundsucker absolutely loved it up the ass. She was certainly the only one who had taken the initiative and essentially fucked herself on his hard cock, whimpering and whispering, \"oh, that's really nice\" for the entire time---and it had been a very long time.\n\nSo why hadn't he taken her up on her offer for a \"private client\" encounter?\n\nThey were both seniors. They were in three classes together. They were lab partners in one and had drawn each other's names in a psych class that would involve each of them interviewing and evaluating the other. While Becky Hundsucker had made it clear over three years prior that she would never date a student at the college, she had at least not been rude about it. She'd taken an oath and that was that. What had he been thinking anyway; she was the heir to a fortune. He was the son of two lifelong schoolteachers---hardly landed gentry.\n\nIt has started out as just a Chippendale kind of thing. He'd been a jock in high school, had worked out for as long as he could remember and had a chiseled physique. The girls at the college had more money than sense. Hiring a stripper for a best friend's engagement or birthday was no big deal. He'd answered a want ad. Ultimately he'd run his own ad and for the first semester had all the business he could possibly handle. And then Becky Hundsucker's sorority had hired him as a stripper/dancer for some function and the former president had asked him if he'd 'do more than dance'. He'd had propositions of sorts before but this was different.\n\n\"I'll dance, I'll certainly be as provocative and touchy as you want---and get as naked as you want---but you're talking prostitution here.\" He still wasn't sure how she had talked him into it. Oh, that's right, total anonymity and $1,000 per pledge. They'd wanted to have it so they could watch. He'd drawn the line on that one. No witnesses except the participant and she signed a waver---and since she wasn't actually paying, it really wasn't illegal, he had rationalized.\n\nWhile he would never remotely be as rich as Becky Hundsucker, he had a substantial nest egg as the final semester of his senior year began to wind down. He had more money in the bank than his folks made in five years---combined. His work money plus the excess paid by the college to get him to attend was all in interest bearing instruments and some modest real estate holdings. He'd graduate Summa. He already had some job inquiries.\n\nHe laughed again as he thought about Becky Hundsucker. He knew she was engaged to some prick at the exclusive men's university fifty miles away. He'd seen the two carrot rock on her finger. She came across in public as almost virginal. He swore he had heard her tell one of her girl friends in a class that Mr. Right wasn't going to get any until after the wedding---although they had enjoyed oral sex. Lucky guy. What a crock!\n\nOn returning to his apartment and checking his answering machine, there was a call from some corporate recruiter he had met a week earlier at a campus job fair. He sounded very anxious to speak to him, telling him to call on a private number at any hour. It wasn't that late. What the fuck.\n\n\"This is Mike Simmons. I'm returning Mr. Lander's call---he said call any time.\"\n\n\"Mike! Thanks for getting back to me so quickly. This is Fred Landers. Have you got a few minutes to chat?\"\n\n\"Absolutely.\" Damn, it would be great to nail down a job sooner rather than later.\n\n\"Mike, we'd really like to get you up to company HQ to meet everyone. Those of us who interviewed you on campus were very impressed. You may recall that as part of the interview process we asked each applicant to propose a product idea, write a marketing plan and include a cost study. Sadly, a few folks decided it was just too much trouble. Most of the plans that were submitted were, in all honesty, sophomoric. Your plan was not remotely sophomoric. A lot of people want to talk to you about it.\"\n\n\"It is intellectual property, fully protected under this country's copyright laws. And the product idea is under patent.\"\n\n\"Absolutely! And I commend you for indicating those facts in your submission. Did you submit this to anyone else?\"\n\n\"I submitted a couple of similar ones, but each company had its own specific product niche; the one I submitted to you would have been unique. Mr. Landers---Fred---I apologize. I don't have my notes where I can get to them quickly. Which company do you represent?\"\n\n\"We are in essence an out-source company with a very select list of clients so we are essentially interviewing for several companies at any given time. Those companies don't like to come out of the shadows until they're prepared to schedule follow-up interviews on their turf. Hundsucker Industries is very excited about the prospect of meeting you.\"\n\n\"Do tell.\"\n\n\"How soon could we get you up there?\"\n\n\"I have to work tonight and tomorrow night and I have a couple of jobs over the weekend. All of my classes meet Monday-Wednesday-Friday early. I could leave anytime after one on Monday and need to be back Tuesday night.\"\n\n\"I think we can make that work. We'll get airplane tickets and such overnight to you. I'd like to meet you at the airport and drive you up to their offices. I can give you some tips and advice on the way. How's that sound?\"\n\n\"Great.\"\n\nSmall world. Hundsucker Industries. Becky Hundsucker. He knew that because he had seen their corporate logo on her gym bag. \n\nNot completely trusting the clients, Mike performed all of his initiation duties at a small house several miles from campus just past the edge of town. Said house represented an investment: he owned it. It was not in a development or close to other houses. It had almost an acre of land. As growth had moved in that direction, the land had certainly appreciated if not the dated house. The lot was fenced and the long driveway was gated. You couldn't see the house from the road.\n\nHe'd rented it out numerous times for sorority parties. The rentals easily paid the mortgage. He'd even fixed it up and decorated it in sort of a Goth/S&M theme. The girls in the small sorority who were not in the pledge ritual would gather in the spacious great room which he had created by knocking out some walls to combine what had once been two small rooms. They'd drink and party while waiting to welcome their new sisters into the order.\n\nUpstairs there were two bedrooms. Actually there was a third, normal bedroom where he often slept. In one, the girls to be initiated would be brought in blindfolded. They would be stripped, oiled, lubed and have to endure some decidedly lesbian attention from the pledge committee as part of their 'training'. Assuming that they didn't chicken out, after their session with Mike they would join the already initiated downstairs, recite some mumbo jumbo, don some sort of ceremonial robe and be welcomed into the sisterhood.\n\nAs each girl's turn arrived, she would pass through a door to the other bedroom. She would be completely naked and wearing a mask to hide her identity. The lights would be dim; Mike would be dressed in some sort of ridiculous leather and metal S&M garb. He'd affect his best Vader voice, telling her to sit on a small stool and present herself. \n\nOr at least that was the way it was supposed to work. It had been more fun back when he had started. It had gotten old. The first girl came through the door. She was an absolutely stunning, tall brunette with letter-perfect tits that were definitely her own and a tightly cropped brown bush. She stood proudly in front of him in all her naked beauty. No man would have needed any medication to get erect in her presence.\n\nThe ordeal was very simple. She had to make him cum. She didn't get all night; he could stop her at any point and move on to the next phase or orifice. If she could do it with her mouth, she could opt out of the later stages---only one initiate had gotten him to cum in phase one: Becky Hundsucker---and she had gone for the full program with no hesitation.\n\nThen the pledge had to make him cum with her pussy, assuming she had failed with her mouth. If that didn't work, he'd fuck her in the ass until he came---or faked it because he felt sorry for her, which happened more often than not. Hell, they were so lubed up no one would be the wiser. Just to be sure he'd squirt a healthy dose of an opaque lube up their sweet little butts that had the consistency of cum. He didn't recognize this one; she was probably a freshman and not in any of his classes.\n\n\"Hi! For convenience, you can call me Simon and you are?\"\n\nShe would not give her real name but a pseudonym which was to become her secret sorority sister name.\n\n\"Pandora.\"\n\n\"Pandora. Fine. Nice to meet you, Pandora. You do understand that nothing that occurs in this room leaves this room per the consent agreement you signed?\"\n\n\"Yes, Simon,\" she said, bowing her head.\n\n\"Do you have any questions on the rules---what is suppose to occur here?\"\n\n\"No questions, Simon. I am to make you cum with my mouth, cunt or ass.\"\n\n\"Pandora, I've been the fixture, so to speak in these rituals for four years. In the past, I tried to make them theatrical and authentic to the best of my ability. I'm retiring after your pledge class. My rules now, or at least as they have evolved. Once you had the nerve to walk through that door, you passed the test as far as I'm concerned, but some rules are inviolate. If at any point you don't want to continue whatever activity we're engaged in---that is between you and me and no one else, with one caveat: you must make me cum or I would not being doing my duty to the sorority who had employed me. \n\n\"When you go downstairs, you will be asked if you made me cum. Your answer has to be yes or you are out. Then you will be asked how. I am required to confirm your answer; before you walk out that door, let's be damn sure we know how you made me cum. There have never been any failures on my watch but a couple of times we had to get creative. Any questions?\"\n\n\"Your cock; may I see it now, master Simon?\"\n\n\"Ah, yes! The main attraction!\" he said, sweeping his cape from his body with a flourish. He was bone hard and extended at a forty-five degree angle and his equipment would have challenged a Jimmy Dean sausage roll in girth.",
        "Pandora's eyes widened as she gazed at the main attraction. \"Mother-fucker!\" she exclaimed falling out of pledge character. \"May I?\" she inquired reaching out to confirm that her eyes were not deceiving her. She looked up at him through her mask and grinned. \"I'd heard but didn't believe it. It's smiling at me. Does that mask ever come off?\" she whispered lasciviously.\n\n\"I've had a couple of people try, but it is well attached with theatrical adhesive. If you try, it's going to hurt like hell and that's going to really piss me off.\"\n\n\"Mine isn't that well attached and frankly, I don't give a shit if you recognize me some place. I'm taking it off. I can't fuck with a mask on.\" And she did so. She was an absolutely stunning woman.\n\n\"It's Katie, not Pandora, and I'm sure you're not named Simon but I can live with it. Simon, there is no fucking way I'm going to get that Power Ranger in my mouth---at least not in any way you're going to enjoy. I would love to feel that puppy in my pussy though but you need to know...\"\n\n\"Yes, Pandora---I'm sorry---Katie?\"\n\n\"I am one serious anal freak. Before we're done I need that bad boy up the butt and if I have anything to say about it, that's where I need you to cum. I'm first on the dance card so I'm expecting a nice load. I intend to walk down stairs with your sauce positively dripping out of my ass hole---because I know most of 'em haven't got the stomach for it---or the ass.\"\n\n\"Our time is somewhat constrained, Katie. How much foreplay do you...require?\"\n\n\"I'm sure you're a great kisser and that fucking body of yours has me even wetter than I was when I walked in here---if that's possible. Let's just go to the mat and get this party on.\"\n\nMike had a talented mouth and fingers and expert technique; he gave Katie her money's worth in abbreviated foreplay. She wanted cock. She wanted to ride said cock. She came riding said cock; Mike didn't, but as talented as that sweet little pussy was, it took every ounce of his training, willpower and concentration.\n\n\"Jesus! You are fucking amazing---how the hell do you do that? I have never failed to make a man cum---generally too damn quickly---with that little maneuver.\"\n\n\"I'm a professional; don't try it at home.\" That made her laugh. They both started laughing. He kissed her; she responded.\n\n\"You're too good to be true. Look, bubba, fuck the rules. I'd love to spend the night with you in the real world.\"\n\n\"The rules are to protect us both.\"\n\n\"Yeah, I know. Time's getting tight; bone this little backdoor bitch up the ass, stud Simon. How do you want me?\"\n\n\"Your call.\"\n\n\"From the front. I want to watch your eyes when my rectum grabs on to your cock. I will win this round---trust me. You will cum!\"\n\n\"I like you, Katie. You're a rare treat. Let's just enjoy the ass fuck and keep it real.\"\n\nEven when not working at it, Mike had well above average staying power. He was damn sure he lasted in that furnace hot, excruciatingly tight and astoundingly talented ass longer than anyone else had. She in fact confirmed the record-breaking performance. He was off the clock the whole time; he was having more fun that he had ever had in these rituals before---well, except for that first semester with Becky Hundsucker. No part of his performance when he came deep in the hot brunette's tail was acting. She came within seconds of feeling the splash of his hot fluid on her inner walls. They actually held each other and kissed.\n\n\"Thank you, Simon.\"\n\n\"Thank you, Katie. I feel as if the sorority deserves a refund on that episode. That was...very nice.\"\n\n\"Well, hate to fuck and run, but you dumped a huge fucking load in there and I want it dipping down my leg downstairs, not up here, so I'd better scoot.\"\n\nHe walked her to the designated exit door. To his surprise, she turned and kissed him. She said one word.\n\n\"Hundsucker.\"\n\n\"Pardon me?\"\n\n\"Hundsucker. Katie Hundsucker. I'm in the book. Call me.\" And then she was gone.\n\nThe next three initiates were certainly all absurdly attractive. One of them was even a pretty fine fuck. The other two were just okay. He ended up faking two orgasms but they still got some cock up the butt just so they had a story to tell their peers. The third girl---the pretty fine fuck---had a tight, talented little cunt so he dumped his load in that receptacle. She seemed relieved not to have to go to phase three. It was break time. There was a knock on the door. It was Becky Hundsucker. Even though he had recently cum, his dick still was longer and fatter than any she had ever seen erect.\n\n\"Well! You're in prime form this evening! Nothing but rave reviews---particularly from Pandora. Jesus, her ass hole was still hanging open when she came down stairs and she was leaking cum all over the place. No need for confirmation on that one! That little slut!\"\n\n\"I hope you know this isn't always fun so on those occasions when it is, I feel the need to comment. She was a blast and an astounding fuck. I'm usually pretty detached about all this and my responses are an act. Have to be in view of the volume but that was just plain fun.\"\n\nIn spite of the mask, Becky had a strange look on her face. Jealousy? Something else?\n\n\"Well, take your nap or whatever. You've got a couple of hours.\"\n\nThe first one on the eleven o'clock shift seemed to be going through the motions. It was as if she had accepted her fate, wasn't going to cry or fight it but never really seemed to get into it. She got it in the butt along with a faked orgasm. He fucked her ass a little longer than he thought she would have liked. She left wordlessly.\n\nThe next one was so damn scared she was shaking. He tried to calm her down.\n\n\"I don't think I can do this...I...\"\n\n\"Monique---you aren't a virgin, are you?\" He had a rule---he didn't do virgins. It wasn't supposed to be an issue because the sorority didn't pledge virgins.\n\n\"No...no...not the regular way....but...anally...yes...and my mouth is too small...if I can't make you cum with my...pussy...I'm so afraid...\"\n\n\"What's your name? Your real name?\"\"\n\n\"Carol.\"\n\n\"Come on over and sit down. Do you want a drink?\"\n\n\"What? Oh, yes...maybe that would help. Yes...thank you.\"\n\n\"Mojitos. Do you like Mojitos?\"\n\n\"Yes, why I love them...where...?\"\n\n\"I love Mojitos, Carol---I really enjoy making them. I have fresh mint, limes, simple syrup, ice, soda---everything we need.\" He proceeded to produce the ingredients and assemble the confection.\n\nHe handed her a glass; she sipped and smiled. \"This is outstanding! I've had them from a mix but never like this---from scratch---wow!\"\n\n\"Good! You're smiling. That's a start. Now tell me, Carol, what made you decide to pick this particular sorority? I confess to total ignorance as to how you ladies make such a choice.\"\n\n\"I'm a legacy. My mother and both of my sisters. It was preordained. I don't even really give a damn about the whole Greek thing. I came to college to get an education. I didn't even want to go here. Legacy again...preordained. How did you get into this...ah...\"\n\n\"Line of work?\" He gave Carol a brief synopsis of what had brought him to this point in his life.\n\n\"Are you a student here?\"\n\n\"I always duck that question. Then again this is my last time and you're my second to last...yes, I am.\"\n\n\"Last, I think. The seventh girl bagged out on it---which is what I should have done.\"\n\n\"Well, that's a welcome relief. Seven in one night is stretching the limits.\"\n\n\"Do you ever go out with girls...normally...?\n\n\"Not at this college! You must have already heard the rules. Boys who go to school here are not to be dated by girls who go here---that's what the big men's university fifty miles up the road is for.\"\n\n\"What year are you?\"\n\n\"I'm a senior. I'm out of here in a few weeks.\"\n\n\"May I take this mask off? It's silly. I don't care if you recognize me---hell, you're leaving soon anyway.\"\n\n\"If you like.\"\n\n\"You're not gay, or bi or something, are you---because I've heard there are gay guys that do it in porn movies with girls...\"\n\n\"Nope. Not remotely...not that there is anything wrong with that.\"\n\n\"Of course not.\"\n\n\"It has nothing to do with you---you've been really sweet. Although that cock of yours is more than a little intimidating and it's smiling...I just don't care enough about this to go through with it...no offense.\"\n\n\"None taken---although you will be my first failure in four years. Look, this is the power sorority on campus; its members occupy the key student government positions and help make policy. You seem to have a good head on your shoulders. It would be nice to see the atmosphere here change---not that it'll do me any good. Carol, I'm done with this foolishness---although it has been far more financially rewarding than selling shoes. You know the rules: what happens in this room stays here---with the exception of the fact that we have to agree on where I came. We can finish our drinks, you can choose your orifice, I'll confirm the deposit and you can live happily ever after. You'll be in; if you decide at sometime to be out, at least you'll have the option.\"\n\n\"You'd do that for me?\"\n\n\"What are they going to do, Carol---fire me?\"\n\n\"Look, maybe the alcohol is helping---God knows you're cute...and you're kind. Could we maybe just kiss...make out a little...see how things go and...\"\n\n\"Are you sure?\"\n\n\"Yeah...I'm sure. I think you may be hypnotizing me with that damn cock. I mean, I'm sure I'll never see one that big again for the rest of my life...my last boyfriend---let's not go there. Kiss me.\"\n\nPheromones? The fact that it had been too long since he'd just kissed and made out with a gorgeous young woman? She never blew him. He never fucked her in the ass. They didn't really fuck. As absurd as it might sound, they made love. And as their collective hormones raged and as Carol began to climb another peak, she whispered to him.\n\n\"I'm going to cum...I'm going to cum...please...who are you? I've never cum like this before...my first...I have to know! Tell me your real name...I won't tell...please...\"\n\n\"Mike.\" He'd never done that before.\n\n\"Mike! Oh, Mike...oh, baby...so good...so sweet...so...ohhhhhhhhh!\"\n\nHis orgasm was even more cosmic than hers had been. If he'd had a ring, he would have proposed on the spot. He was floating on a cloud somewhere...with her...with Carol...with his Carol. They snuggled together for some time.\n\n\"I guess we don't have to engage in a canard after all?\" she whispered softly.\n\n\"Thank you, Carol...from the bottom of my heart. That was very special. You're a sweet girl. That was the most real thing I've done since I came to this crazy college.\"\n\nA few minutes later, he escorted Carol to the door. They kissed and held each other.\n\n\"Don't forget me, Mike. I know this is crazy but I felt something...call me. I'm in the book. Carol. Carol Hundsucker. You're a really sweet guy.\"\n\nWhen the knock came on the door, he assumed it was Becky Hundsucker telling him he was done for the evening. It was Becky. He wasn't done for the evening.\n\nBecky told him about the one who had bagged it. \"But we did pay for seven and if you're up for it we'd really like to send one more girl in.\"\n\n\"Okay, whatever. Give me a few minutes.\"\n\n\"Do you remember me at all from when you and I...when I was a pledge? Look, I lied; there is no other girl. I was thinking you and I could maybe...you know...for old time's sake?\"\n\n\"Yes, Becky---how could I forget you? You are an astonishingly beautiful woman. You are playful and uninhibited when it comes to sex. Up until tonight\u2014you were without a doubt the most fun of any of them. I've had many wonderful dreams about that evening.\"\n\n\"You called me by name.\"\n\n\"It wouldn't have been that hard to figure out who was the sorority president and put two and two together. Look. How long are the rest of the girls going to be partying downstairs?\"\n\n\"It's about over; they're cleaning up. I know you---don't I?\"\n\n\"Sure. Tell you what. You hustle off the rest of the girls, I'm going to get this shit off my face and take a shower. Then, you and I will sit down and chat.\"\n\n\"I rode with someone else...I...\"\n\n\"If you want a ride home, I'll drive you. If you want to fuck me, we can do that too. If you don't but you want to sleep here---alone---there is a free bedroom. I'll be down after I clean up and after the last car is gone. If you're still here...we'll do whatever.\"\n\nHalf an hour later, Mike descended the stairs. The light was still very dim. She hadn't put two and two together yet, it would appear.\n\n\"Becky, I'm not that fond of this room. Let's go to the study?\"\n\n\"What? What study? Where's the door?\"\n\n\"Sorry. Let's see if this helps.\" He hit a button on the small remote on his key ring. The bookcase swung away, Mike motioned for her to precede him. He hit the light switch. She turned to face him. Her eyes widened.\n\n\"Mike?\"\n\n\"Becky. Care for a drink? You look like you need one. What's your pleasure?\"\n\n\"Strong, neat, single malt if you have it.\"\n\n\"That'll work.\"\n\n\"How long have you known...\"\n\n\"Since you went through the silly ceremony and we fucked our brains out. Your mask slipped off. It was very dark but I have excellent night vision.\"\n\n\"You never said anything...we've been in classes together...labs...study groups...\"\n\n\"It wouldn't have been good for business to let the cat out of the bag.\"\n\n\"Look, Mike you're a really nice guy...\"\n\n\"A really nice guy that you didn't speak to the first year I was here---and hardly do now considering you and your friends seem to be attempting to continue the shunning policy.\"\n\n\"Tradition dies hard.\"\n\n\"Good enough to fuck---not good enough to talk to? Not fair. If you'd known who I was, you'd have never wanted me to fuck you.\"\n\n\"Well, not entirely true; once I'd seen---and experienced---that cock and your...stamina...you'd have gotten lucky.\"\n\n\"You're almost a married woman; shame on you.\"\n\n\"I don't want to talk about that.\"\n\n\"Do you want to talk about your two sisters?\"\n\n\"What? How did you know?\"\n\n\"No matter. What's the age breakdown?\"\n\n\"I'm the oldest; Katie is one year younger---she's not a freshman, she transferred. Carol is the youngest---one year younger than Katie. She's a freshman---technically. She did a couple of years in the Peace Corps before college.\"\n\n\"Well, you all share a common trait---you're all adorable. Carol is the sweetest, Katie is the nastiest and you're somewhere in between. Not that any of it matters. You're Hundsuckers---you're filthy rich. I'm the poor, only child of schoolteachers so there couldn't possibly be a future for me in your world. I've enjoyed knowing---and fucking all three of you. Well, not Carol, we didn't really fuck. I could fall head over heels for her if life had dealt me different cards. So what do you want to do, Becky? If you want me to drive you home---say so before I finish this drink. If you want to spend the night without fornication, I'll show you to your room. If you want to just sit up and talk---that's fine.\"\n\n\"You didn't fuck Carol?\"\n\n\"No, not remotely. We made passionate love in spite of our social barriers. It was the perfect final episode in my tawdry existence. My only thought afterward was that if I'd had a ring I would have proposed on the spot. Silly me. Forgot my station.\"\n\n\"Are you trying to tell me you've got a 'thing' for Carol?\"\n\n\"Oh, hell, who knows? This whole experience has been bizarre.\"\n\n\"We Hundsuckers are not as bad as you think we are.\"\n\n\"I didn't say you were. We're from very different backgrounds; let's just leave it at that.\"\n\n\"Well, I guess you don't want to fuck me then; it'd be too much like cheating on Carol.\"\n\n\"Cheating on Carol? Oh, hell, yes, I could fall head over heels in love with her---or you, or Katie---but there isn't any future in it---is there?\"\n\n\"So finish your drink, Mike. I'm still not sure if I'm getting a sense that you want to fuck me.\"\n\n\"I've wanted to fuck you for four years---without the cape and the chains.\"\n\n\"Good. Let's go to bed.\"\n\n***\n\nThree days later, Mike sat in his final interview of the day with the CEO of Hundsucker Industries, George Hundsucker.\n\n\"Mike, I have three daughters going to the same college you attend; maybe you know them?\"\n\n\"I have actually met them; I'm even in several classes with you're oldest daughter, Becky.\"\n\n\"What in the world possessed you to go there?\"\n\n\"It was all about money, sir.\" Mike gave him his saga.\n\n\"It had to be tough.\"\n\n\"Intensely irritating at times\u2014but in the end I got a great education and learned how lepers must feel. It had its high points.\"\n\n\"Do you want to go to work for me?\"\n\n\"From what I've seen, I'm leaning that way.\"\n\n\"We're more alike than you would think, Mike. I built this company---I didn't inherit it. My parents never had two dimes to rub together. I married well above my station. I actually met the girls' mother when I was attending that all male university fifty miles up the road from where you go to school. She was very into all that Greek crap. Silly stuff. Anyway, I spent a lot of time over there---more than I should have.\"\n\n\"It's a new generation. Perhaps it will change with this one.\"\n\n\"Let's hope! Anyway, here's what I'd like to offer you.\"\n\nMike read over the offer. Only a fool would have said no. It was the offer of the century for a brand new college graduate.\n\nMike got a call from Becky Hundsucker only days before he was preparing to leave campus. In the preceding weeks he had spent time with and had further carnal knowledge of all three Hundsucker girls---although not at the same time. It had been a great few weeks. They had said to give 'em a call; he'd done so.\n\n\"We need to talk. Where are you?\"\n\n\"I'm out at the house you girls used, just cleaning up some last minute stuff.\"\n\n\"Thirty minutes?\"\n\n\"Fine.\"\n\nThey arrived in the same car---all three of them.\n\n\"You're going to work for daddy?\" Becky exclaimed as she entered the house with her sisters in tow.\n\n\"So it would seem. Small world?\"\n\n\"So you're leaving; where does that leave us?\"\n\n\"Us? Ladies, it's been wonderful. Only wish we could have gotten to know each other over the last four years---at least in your case, Becky. But, I'm just a poor kid who just accepted a junior position in your dad's company. There never was more to this than...sex...was there?\"\n\n\"Not so damn junior from what I've been told. This is not fair. Which of us do you like the best?\"\n\n\"I like all of you...you each have very distinctive...qualities. It's not like I'm picking my future wife, girls.\"\n\n\"Yes, it is; we made a pact. You have to marry one of us---and whoever you choose agrees to share you on occasion---nothing too excessive, maybe once a month? Alternate holidays?\"\n\n\"Ladies, when I get married it'll be because I'm in love and I doubt that my bride will be excited about...sharing me.\"\n\n\"You're in love with Carol---aren't you?\" Katie said.\n\nMike turned and looked at Carol. Sweet, precious, adorable, lovable, melt-his-heart, turn his brain to mush, bring tears to his eyes...Carol. He knew the answer.\n\n\"Yes. I am. Of course I am. I'm in love with Carol.\"\n\n\"Which of us gives the best head?\"\n\n\"What? Oh, fine. I'll play your game. Becky. Becky, you are the best cock sucker.\"\n\n\"And butt fucking?\"\n\n\"I think we all know that answer,\" replied Katie before Mike could answer.\n\n\"See, Mike, it's perfect. You're in love with Carol. She's head over heels in love with you. All men cheat. In this case it won't really be cheating---because she will know and agree. She doesn't enjoy BJs nor is she particularly anal. Katie would rather have a dick in her ass than breathe. You know I give the best head in the hemisphere. It's perfect. We all agree.\"\n\n\"Carol?\" Mike said to the one of the three that he knew he couldn't live without.\n\n\"It's a little odd but it does have its advantages. There's no sense fighting over you. We're family. I love you, Mike; they don't love you---just your cock. Well, I love your cock too...but you know I love you...don't you?\"",
        "\"Yep. I think I do.\"\n\n\"Great! Then it's settled. As soon as you propose, we can get to planning a wedding.\"\n\n\"Propose? I don't even have a ring!\"\n\n\"You can buy one with the signing bonus daddy is giving you. Rings are just formal symbols. Hurry up. Propose.\"\n\n\"Okay. Give me a minute. Alright---I've got it!\"\n\nMike proposed; Carol accepted. The other two girls cheered and applauded.\n\n\"We need to have an engagement party, sis!\" said Katie.\n\n\"Where should we go?\" Becky inquired.\n\n\"That nice king size bed upstairs?\" said Carol, already peeling off her panty-hose.\n\n\"Who gets to go first? We could draw straws, or there's that thing they do with a baseball bat when they're choosing up sides.\"\n\n\"We don't have a baseball bat.\"\n\n\"Damn near!\"\n\n\"Oh, you do have a point there.\"\n\nA few minutes later, upstairs, Katie screamed: \"Knobs! I win.\"\n\nFortunately there was plenty of Mike to go around. For his part, he was looking forward to meeting his future mother-in-law. Maybe it ran in the family.\n\nEdited by Techsan"
    ],
    "authorname": "Dinsmore",
    "tags": [
        "oral",
        "anal"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-sisterhood-of-the-smiling-penis"
}