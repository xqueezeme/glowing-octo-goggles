{
    "title": "The Investigation",
    "pages": [
        "This story is a work of fiction. Any similarities to any real person are entirely coincidental and unintended. \n\n*****\n\nI was more than a little uncomfortable sitting in the anteroom for the suite of senior offices. I was waiting for the Agency's Assistant Deputy Chief of Operations. It was a new experience to be in the main office in Arlington. The closest I had come before was five months of training at the \"Academy\" at Quantico. I was intensely curious why I had been summoned to Northern Virginia. With only three years in as an agent assigned to a field office in Indiana, I had assumed that no one this far up the food chain had noticed me.\n\nI was not alone in the anteroom. Sitting in a chair on the other side of the room was a woman who looked to be roughly my age. Partially because I had nothing else to do and partially because I had been trained to observe people, I looked at her as closely as I could without being obvious about it. The woman had shoulder-length brown hair. Her face reminded me of the actress Karen Allen from Raiders of the Lost Ark. From what little I could tell, I speculated that her conservative business suit covered a reasonably attractive body. Of course, I'd never find out. I was sure that she had nothing to do with me.\n\nAfter a few minutes wait, a middle-aged woman came into the anteroom.\n\n\"Agents Carden and Stone?\" she asked. \n\nThe woman who had been sitting across from me and I both stood up.\n\n\"Mr. Foley can see you now,\" the middle-aged woman said. \"Please follow me.\"\n\nWe followed the woman out of the anteroom, and down a hallway until she gestured into an open doorway. \"In here, please.\"\n\nAs I followed the younger woman into the conference room, a compact man with short grey hair stood up and extended his hand.\n\n\"Good morning. I'm Peter Foley, Assistant Deputy Chief of Operations. You two have not met before?\"\n\nThe young woman and I both shook our heads.\n\nTurning to the young woman while gesturing at me , Mr. Foley said, \"Agent Carden, meet Special Agent Harry Stone from Indianapolis.\" Mr. Foley turned to me and said, \"Agent Stone, this is Special Agent Liz Carden from Buffalo.\"\n\nI shook hands with Agent Carden. Mr. Foley said, \"Please, be seated.\" We sat at one end of a long rectangular conference table. Mr. Foley was, of course, at the head of the table. I sat to his right. Agent Carden sat across from me on Mr. Foley's left.\n\nMr. Foley handed us each an 8 \u00bd x 11 color photograph. It was a picture of a man, in his fifties I'd guess. \"This is John Smith,\" Mr. Foley said.\n\nI smiled. \"John Smith\" was a name we frequently used when we didn't know a person's real name. Mr. Foley obviously saw my smile. \n\n\"No,\" Mr. Foley said, \"John Smith really is his name. He was born in Asheville, North Carolina in 1963. He has a business degree from UNC-Wilmington. After he graduated, he became a boat salesman in Wilmington. He did very well and now owns several boat dealerships around the Southeast, selling everything from pontoon boats for the lake to sailboats for cruising the Caribbean. We also think that he's the kingpin of a distribution network supplying much of the heroin in the Carolinas, North Georgia, Southwest Virginia, East Tennessee, and Eastern Kentucky. \"\n\nMr. Foley paused to let that sink in. After a moment, he resumed. \"While we're fairly certain that Smith is dirty in a big way, and we've been trying to get him for a couple of years, we have nowhere near enough to make an arrest. In fact, we don't have enough directly tying Smith to justify a wire-tap or search warrant. This investigation has caught the attention of some of the new people at main Justice. They want us to run an intel gathering operation on Smith that will lead us to some real evidence.\"\n\nMr. Foley paused. \"Would either of you like coffee?\" he asked. Agent Carden and I both said \"no.\" Mr. Foley pressed a button on a phone on the table. Into the phone he said, \"Carol, would you please bring me coffee in the conference room?\" Looking between the two of us, Mr. Foley asked, \"Sure that you don't want any?\" Agent Carden and I both shook our heads. Mr. Foley said into the phone, \"Just one for me. Thanks.\"\n\nWe waited quietly for the three or four minutes that it took Carol to bring Mr. Foley his cup of coffee. Once he had it, he took a long sip. Setting his cup back into its saucer, Mr. Foley resumed.\n\n\"About eight months ago, Smith sold one of his dealerships in North Carolina. It looks like he did very well in that sale. Shortly afterwards, he bought a dealership in the Tampa Bay area that mainly sells larger power and sailboats. The kind of things you see on the Florida Gulf Coast. About two months later, Smith sold his house in Wilmington. He and his partner, Karen Lewis, bought a house in a walled and gated community near Tampa. That community is a nudist resort, pretty high-end I'm told. Here's a picture of Karen Lewis. She and Smith now live in this nudist resort.\"\n\nMr. Foley handed out two more pictures. The picture showed a woman whom I'd place in her mid to late forties with streaky blonde hair and a very tan face. Her expression in the photo was of someone entirely content with her life.\n\nAfter Agent Carden and I had studied Lewis's picture for a moment, Mr. Foley picked up again. He seemed slightly uncomfortable. \"Anyway, the idea is to put a couple of agents into that resort to get close to Smith and see if he doesn't give away something that will lead us somewhere.\"\n\nI could see where this was going and was not at all happy about it. Apparently, Agent Carden had made the same realization. She was blushing. \"You want us to go into that nudist resort and befriend Smith?\" she asked.\n\nMr. Foley fidgeted and said, \"yes.\"\n\nAgent Carden blushed more deeply. \"And you want us to go naked?\"\n\nMr. Foley fidgeted more. \"That is my understanding of what people do in nudist resorts, yes. I think that you would look very odd and suspicious if you stayed clothed.\"\n\nAgent Carden looked as if she might get sick.\n\n\"Why us?\" I asked.\n\nMr. Foley relaxed a bit. This was a question that he was prepared to handle. \"Several reasons. First, neither of you has been assigned anywhere in the area in which Smith operates. You haven't worked on any investigations that would have brought you into contact with any of Smith's people. Second, you are both relatively new agents so neither of you are known to the dealer community. These guys do talk to each other about whom to watch out for. Third, neither of you have gotten your names in the paper so an Internet search isn't going to turn up an article saying that you are Federal agents. Finally, you are both single and, according to your SACs, not in any serious relationships. This assignment would be difficult for someone with a spouse or 'significant other.'\"\n\n\"Why try to approach Smith through the resort?\" I asked.\n\nMr. Foley sighed. \"The thinking on that is twofold. One, we assume that Smith won't be expecting to encounter Federal agents naked in a nudist resort. Two, the resort is that this is a place where people let their hair down, so to speak; the usual rules don't apply so we hope that he may be more voluble and open in such an environment. We don't expect him to admit that he's a drug dealer. What we do hope is to get information that will lead us to evidence proving that he is a drug dealer.\"\n\nShit. The reasoning made at least a little sense.\n\n\"Can we decline this assignment?\" Carden asked.\n\n\"Of course,' Mr. Foley replied.\n\n\"But,\" I asked, \"if we decline, that will be a career black mark?\"\n\n\"The Agency looks for team players,\" Mr. Foley replied. \"Career advancement comes to those people who put the mission of the Agency above their personal considerations.\" Well, that message was clear: you can turn this down but your career will be fucked.\n\n\"If we do this,\" Agent Carden asked, obviously having difficulty with even considering it, \"will the details of the operation go into our personnel files. In other words, will I always be branded as agent bare-ass?\"\n\n\"No,\" Mr. Foley said firmly. \"All your field offices have been told is that you are being considered for long-term undercover assignments. That is what will go into your files. No details. You will be supervised from Arlington. No one in any field office will know what you are doing.\"\n\n\"Do we have any real choice?\" I asked, just to make Foley say it.\n\nMr. Foley decided to level with us. \"Yes, you can resign.\"\n\nAgent Carden and I looked at each other across the table. She had a look a little like a trapped animal.\n\n\"Look,\" Mr. Foley said, \"this is an intelligence gathering operation, not evidence gathering. We don't expect you to ever take the stand and testify to something Smith told you and then be cross-examined about how you were both naked when he said it. Law enforcement officers have to do distasteful things in the line of duty. You both knew that, at least, by the time you finished training. Maybe this isn't what you expected, but it is part of the job. You will play a key role in putting away someone who is helping people OD all over the upper South.\"\n\nAgent Carden put her face in her hands. After a minute, she looked up at me. I shrugged. I didn't like this either, but I liked the idea of sacrificing my career even less. I suppose that Carden saw it the same way. After several minutes of silence, Agent Carden said, in a very small voice, \"Ok. I'm in.\"\n\nMr. Foley looked at me. In a weak gesture of independence, I said, \"I really don't appreciate the Agency putting me in this position, but I don't see any choice. I'm in.\"\n\nMr. Foley ignored my protest because he knew that it was meaningless. Instead, Mr. Foley punched four numbers on the phone. After a moment he said, \"Would you come up to the executive conference room to meet with the agents for Operation Tarpon?\" Putting down the phone. Mr. Foley said to us, Special Agent Kate Howley is coming up. She is in charge of this operation. You will report to her.\"\n\nAgent Howley was a stern-looking woman whom I guessed at 45. Mr. Foley left the conference room as she walked in carrying a file. After introductions, Agent Howley said, \"So, you've both agreed to do it?\" Seeing the looks on our faces, she added, \"Shit. He didn't give you any choice, did he?\"\n\nHowley sat down in a chair to my right. \"One thing that you need to understand is that this operation came down from main Justice. You will recall that, during the campaign a year ago, the President was saying that Federal law enforcement was inept, unimaginative, and incapable of catching the really bad guys. After he took office, the President put a few political appointees in at Justice and Homeland Security specifically to remedy that problem. One of them came up with this idea. I suppose that it could work, but no one here thought that it was a good idea.\"\n\nAgent Howley went on, \"I'm sure whatever Foley told you about why you were selected is true. I'm guessing that he didn't tell you that no one wanted to dump this on more senior agents or that you were both picked because you are both physically attractive.\" At least Howley seemed to be a straight-shooter.\n\nHowley took us through the fairly elaborate cover-story, or \"legend,\" that the Agency was creating for us. In short, I was one of a group that had started a tech company in Cleveland. I was the guy bringing in new capital, which I could fake well enough. I had fallen out with the other founders and had been bought out for $5 million. That explained why I was obviously unemployed at a young age and not too worried about it. Agent Carden was to be my wife. She had quit her job at a small accounting firm in Cleveland when I was bought out. We were both looking around, trying new things, trying to decide where to go next in our lives.\n\n\"That explains how you will appear at the resort,\" Howley said. \"I'm assuming that neither of you spend much time sunbathing nude so you will have tan lines. You are trying out social nudism for the first time to see if you like it. By the way, I've done some research on the resort and it looks like it is a pretty nice place except, of course, that no one wears clothes. We're seeing this as a long-term operation. We'll review progress at the end of a year. If you can get close to Smith, the Agency is prepared to buy a condo unit at the resort and put you in full-time.\" \n\nAgent Carden put her face in her hands again. The prospect of going naked for a year and actually living in a nudist resort did not seem very appealing to her.\n\nHowley's briefing went on for a couple more hours. Then, we were dismissed to go home, transfer our files, and make whatever personal arrangements we needed to make to be gone for an extended time. The Agency had rented a house, through a front company, in a Cleveland suburb in Geauga County. This would be our official address and base for the operation. The story was to be that we leased the house after selling a luxury condo downtown near the lake. The house had the advantage of being well off of the street and three sides were screened by foliage. I was to meet Agent Carden there in ten days. We needed to become familiar enough with each other to act like we had been married to each other for four or five years.\n\nWhile I usually travel very light, the potential duration of this assignment led me to show up in Cleveland with two large bags. I was a little embarrassed when Agent Carden showed up with one suitcase and a shoulder bag.\n\nAgent Carden smiled at me. \"I figured that I'd buy a small new wardrobe before we go south. If the Agency wants me to run around naked, it can at least buy me some new clothes. I've done some research on this resort and there are some things which I think that we will need.\"\n\nAgent Carden and I spent a week at the house getting to know each other. No, I don't mean sexually. We slept in separate bedrooms. Instead, we learned each others' backgrounds, which were as much our true life stories as the legend permitted. I learned that Carden had been a diver at a Division II school in upstate New York, and fairly good. She had actually gotten a degree in accounting, but joined the Agency because it sounded more exciting. I explained that I had played football at college in the Midwest. Fortunately, for this purpose, I never played enough to get mentioned in the media, but a four-year scholarship helped a lot.\n\nIn addition to our backgrounds, we had to learn each others' habits and quirks, and what each other really meant with our tones of voice and body language. We had to be able to pick up on all of those non-verbal cues that are passed between a married couple. We needed to know what the other person liked and disliked. It was essentially the learning process which you go through while dating and then marrying someone. We had to get it done in a week or so.\n\nAs the week progressed, we went from \"Agent Carden\" and \"Agent Stone\" to \"Liz\" and \"Harry.\" Liz was an impressive person. She was very smart, very observant, and could be very funny. She was kind and slow to get angry. She was, and is, very beautiful. Liz didn't get in your face with her beauty. Her attitude seemed to be more 'if you figure out that I'm beautiful, great; if not, that's ok.' I'd rather not know what Liz learned about me.\n\nIn addition to preparing for our role as a married couple, we spent a great deal of time discussing ways to approach Smith and various contingencies which might arise. The one subject which we had silently agreed to put off limits was the prospect of being naked together.\n\nI let Liz call the resort to make our reservation. I assumed that the resort would be more receptive to a woman than a man. With Howley's approval, we had decided that our first trip to the resort would be for a week. We would have to come back to Cleveland in order to look like a normal couple on a vacation. How quickly we went back to the resort, how often, and for how long depended on how the assignment went.\n\nLiz arranged for us to go to the resort starting on a Thursday. We'd fly out of Cleveland, through Atlanta, early that morning, arriving in Tampa around noon. Our thinking was that the resort would be less crowded on a Thursday, which would be easier for us initially and offer a better chance to meet Smith our first day in. \n\nLiz made several shopping trips in the days before our departure. However, that Wednesday night, she had packed only the one suitcase and her carry-on shoulder bag. I had pared myself down to a small suitcase and a small canvass briefcase. We checked to make sure that we were carrying no Agency ID, that our guns were securely stored (they stayed in Cleveland), and that we both had all of our new, fake, ID. Then we went to our separate bedrooms.\n\nWe were both nervous by the time we got to Hopkins Airport the next morning. Being at the airport, it started to sink in that, before the day was over, we really would be naked in front of each other and a lot of other people. We were getting better at the married couple act. I knew without asking that Liz wanted Starbucks while we waited to board the first leg of our flight and I knew what she wanted.\n\nThe rental car counter at Tampa airport was the first test of our new ID. Our ID passed with no question at all. Liz navigated as I drove north into Pasco County towards the resort. Just before 2:00 p.m., we turned off of the main road onto the entrance road for the resort. Following the signs, we bore right and parked outside the main office. We were checked in by a very pleasant young lady who was, thankfully, clothed. \n\nThe young lady at the office obviously picked up on our nervousness, which had been growing as we drove closer to the resort. \"Is this your first time at a clothing-optional resort?\" she asked brightly.\n\n\"Yes,\" Liz answered.\n\nThe young lady smiled. \"You'll be fine. Most of our first-timers have some anxiety, but it goes away quickly. You'll love it. Everyone does.\"\n\nBack in the car driving towards the parking lot for the hotel, Liz mimicked the lady at the desk. \"'Your anxiety will go away quickly.' Yeah, right. Mine isn't. Mine's getting worse.\"\n\nWe took a long time getting our bags out of the car, finding our room, and putting our stuff away. Finally, we got up the courage to walk out onto the balcony of our room. Immediately below us were two sand volleyball courts, empty in the heat of a Florida June afternoon. A bit farther away to our right was a huge pool. There were people around the pool and two nearby smaller pools. There were also people at the beach bar beyond the pool. Except for hats or shoes, all of those people were obviously naked! I felt Liz grip my hand very tightly\n\nWe did useless things in the room, fully clothed, for another hour. Finally, Liz stopped, let out a deep breath, and said, \"Staying in the room with our clothes on isn't what we're being paid to do.\"\n\nLiz reached down and pulled the tail of the polo shirt she was wearing out of her slacks. She started to pull the shirt over her head, but then let in fall back into place. \"No, I can't just strip naked in front of you. Not the first time.\" Liz turned, went into the bathroom, and shut the door.\n\nI walked back over to the sliding glass door between the room and the balcony. It actually looked like people were having fun out there. I knew that I couldn't go out there with clothes on. And, as Liz had pointed out, we had a job to do. I let out a deep breath and kicked off my shoes. Here goes.\n\nSeveral minutes later, I had all of my clothes off. I was standing with my back to the room looking out the sliding glass door. I heard the bathroom door open behind me and barely heard Liz's bare feet on the carpet. Finally, Liz said, \"Harry, turn around.\"\n\nI turned, giving Liz her first full-frontal nude of me. Liz was standing there wrapped in a large towel. She had her arms crossed in front of her, holding the towel to her body. Liz looked at me without saying anything for long enough that I got uncomfortable. Finally, the tension in her arms lessened. She took an edge of the towel in each hand, unwrapped herself, and let the towel drop to the floor.",
        "Liz Carden was, and still is, very beautiful naked. Before I could catch myself, I blurted, \"God, Liz, you're stunning.\" I immediately thought that I had made a huge mistake. Liz stood there, naked and silent for a moment before a smile crept onto her face.\n\n\"You really think so?\" she asked. I nodded affirmatively. \"Thank you,\" Liz said. \"You look pretty good naked too.\"\n\nWe stood looking at each other for another minute or so. Liz really did look incredibly good with nothing on. \"Well,\" Liz said, \"if we're going out there, we need to get ready.\" She reached into case and pulled out two bottles of sunscreen. She handed me one and said, \"Don't forget the parts that don't usually get sun. A burn there could really hurt and I doubt that you'd want to submit a disability claim for it.\"\n\nWe proceeded to rub sunscreen on ourselves. Finally, Liz said, \"Please do my back and then I'll get yours.\" She turned and stood with her back to me. I've always been attracted to women's backs and Liz's was splendid. Just below, and paler than, her back was a truly gorgeous tight ass. I started spreading sunscreen on Liz's shoulders and worked my way down her back. I had never before touched Liz except to shake hands. Her skin was soft and smooth, and her taut muscles were appealing. When I had covered her to a point just above her hips, she said, very pleasantly, \"You can stop there.\"\n\nI turned around and let Liz put sunscreen on my back. I had obviously already put it on my own ass, so that was not an issue. Liz's hand on my bare skin felt, well, very nice.\n\nFinished with the sunscreen, Liz pulled a canvass beach bag out of her case and dropped a bottle in. The she pulled out a pair of flip-flops and handed them to me. \"Size 11, correct?\" Liz asked. I nodded, took the flips, and put them on. \n\nAfter putting on her own flip-flops, Liz said, \"We need towels. According to my research, any time you sit down nude in one of these places, you must sit on a towel. Forgetting your towel is a major faux pas. I'll use the one I brought out. I think that there's another towel in the bathroom.\"\n\nI found another large towel and brought it out draped over my forearm. Liz grabbed a keycard for the room and put it in an outside pocket of her bag. \"Are you ready for this?\" Liz asked me. I nodded uncertainly. \"Ok, shit, let's go.\"\n\nI opened the room door and held it for Liz. After I made sure that the door was properly locked, we walked along the outside walkway to the steps. It felt very strange to be walking naked outside. I felt like I was doing something naughty. Also, I couldn't help stare at Liz's bare ass walking in front of me.\n\nWhen we reached ground level, Liz said, \"We're supposed to be lovingly married. I think that means that we should hold hands when we're walking naked in public.\" \n\nI took Liz's hand and we walked side-by-side towards the pool. I noticed a fair number of the people already out were looking at us. I'm not sure why, but I actually felt good about that.\n\nAs we walked, Liz said, \"I feel like I'm doing something terribly naughty, but it is also pretty exciting.\" I looked at her. Liz smiled.\n\nLiz was right. It was exciting. I could feel the sun and breeze on my bare ass and my bare dick. That was a new experience and a nice one.\n\nWe found a couple of chaises near the big pool, but slightly away from anyone else. We spread out our towels and lay down. I was on my back. Liz was lying on her front with her head towards the pool. I think that Liz was still nervous because she was talking a lot about nothing. At one point, she softly but distinctly said, \"Boy, you really see all types here.\"\n\nI had, of course, been looking around. However, Liz's comment caused me to look again, thinking about what she had said. There were a few magazine-model quality women and a few very fit men, all deeply tan. There were also a very few people who were obese or bordering on it. Most of the people appeared \"average\" and it struck me that they were probably more physically attractive naked than if they had been dressed. That was certainly the case with Liz, although she was way above \"average.\" In fact, she was, by a substantial margin, the most beautiful woman around the pool; at least in my opinion.\n\nAfter we had sat in the sun for a time, I was getting thirsty. I also noticed that we were about the only people without drinks. Not wanting to stand out, I asked Liz, \"Do you want something from the bar?\"\n\nLiz rolled onto her side, giving me another, very beautiful, full frontal. After thinking about it for a moment, she said, \"Yeah. A pina colada please.\"\n\nWalking to the beach bar was another experience. There were a number of people sitting between us and the bar and, as it was getting to be late afternoon, a number of nude people sitting at the bar. There I was, striding up, completely uncovered, with my dick and ass on full view for everyone. I passed a few people walking back from the bar carrying their drinks to their chairs. To a man and woman, they smiled at me and said \"good afternoon\" or something similar.\n\nThe bar stools were all full. In many ways, it was like any bar with people laughing and some talking too loud. A few men were trying to impress women and some women were trying to impress men. The difference from a normal bar was that everyone was naked. More interesting still, they were all acting like it was perfectly normal to be in a bar naked.\n\nThe woman working behind the bar was topless, wore a tiny pair of shorts, and was very attractive. I ordered our drinks and charged them to the room with a larger than usual tip just because she was so attractive, and topless. I took Liz's pina colada, a Red Stripe for me, and two plastic cups of ice water back to our chairs. \n\nAs I handed Liz her drink, she said, \"You over-tipped her, didn't you?\"\n\nI nodded a bit sheepishly. \"How did you know?\"\n\n\"Bare tits tend to have that effect on guys.\"\n\nWe each ended up having a second drink. While I never forgot that I was naked, I was surprised at how relaxing it was to be sitting in the sun completely nude. Rather than being embarrassing, the fact that other people could see my bare body was somehow gratifying.\n\nWe still had not seen Smith or Lewis by 5:00 p.m., Liz said, \"If I stay here, I'm going to want another drink. That's not a good idea. I need to go up to the room and sober up a bit before dinner.\"\n\nIn fact, Liz did not seem the least bit drunk. I can usually tell when alcohol is starting to have an effect on me, and I wasn't feeling that yet. Nonetheless, I gathered my towel, put on my flips, and followed Liz back to the room. Once we were inside with the door closed so that, presumably, no one could hear us, Liz said, \"I'm sorry to make you come in. I was starting to enjoy lying out there naked, and that isn't right.\"\n\n\"We're going to be spending a lot of time naked on this assignment,\" I replied. \"We might as well decide to enjoy it. It's going to be an even tougher assignment otherwise.\"\n\nLiz stood there for a time just looking at me. A slight smile appeared on her face. \"Maybe you're right. Anyway, I need a shower.\" Into the bathroom she went, shutting the door behind her.\n\nI needed a shower too, but I wasn't in a hurry to get dressed. I assumed that Liz would be in the bathroom for some time, so I went out onto the balcony and sat down. Although the sun was much lower in the sky, there will still a fair number of people around the pool. Two couples (I assume they were couples) were on one of the sand courts below our room desultorily volleying a ball back and forth over the net. Every person whom I could see was naked. No one seemed at all troubled by that. To the contrary, they all seemed to enjoy being naked. I had to admit that it had felt pretty good. A bit farther off, I noticed two people jogging on a path.\n\nI don't know how long I was out there musing on this naked world I was glimpsing. I came back into the moment when I heard Liz opening the sliding door. Her hair was wet but she was wrapped up in her big towel again.\n\n\"Still haven't put your clothes on?\" Liz asked teasingly. \"I think that you like running around naked.\"\n\n\"You don't?\" I asked.\n\nLiz smiled. \"We'll see. Now, get your shower while I get dressed. It is after six and I'm getting hungry.\"\n\nI went into the bathroom and started my shower. I made a point of leaving the bathroom door open. I decided that it would probably be more convenient to shave now than in the morning. By the time I was finished and went back into the main room, Liz was already dressed in a khaki skirt and white polo. She was working on her hair with a blow-dryer. I could tell that she was wearing a bra. I was disappointed at myself for being disappointed.\n\nI put on shorts and a shirt that nearly matched Liz's outfit. We walked over to the more casual restaurant in the resort, thinking that the taxpayers probably shouldn't subsidize us for fine dining. There were only two or three couples in the restaurant when we entered. As we slowly had drinks and ate our meal, it started filling up. \n\nOne couple there when we came in was dressed normally. As the restaurant filled up, we became a small, overdressed minority. While most of the customers wore something, most of the men and many of the women were bare-chested. What clothes they did wear were very sheer and revealing. Some of the looks we received suggested that our fully clothed look, perfectly normal outside the resort, was not universally appreciated here.\n\nWe finished our meal and walked out. \"Do you want to check out the night club?\" I asked Liz.\n\n\"No. I felt like some kind of prudish leper in the restaurant. I'm not going in the night club dressed like this. But, I'm going to have to work up to going in there wearing less.\"\n\nWe walked back to our room past the pool and in-ground Jacuzzis. There were people in all of them. What had been a hot day had turned into a very pleasant semi-tropical evening. Suddenly, Liz stopped me. She leaned up and gave me a quick kiss. \"We're supposed to be married, remember?\" she said. I'd swear that there was a gleam in her eye.\n\nThe air conditioning in the room was not as pleasant as the outside air. Liz said, \"I'm going to sit on the balcony\" and started towards the sliding door.\n\n\"Dressed?\" I asked.\n\nLiz turned and looked at me. \"Yeah. But, you can go naked if you want. I've seen it now.\"\n\n\"What the hell,\" I thought. I took off my clothes and walked out after her.\n\nAs we sat on the balcony, Liz dressed and me nude, Liz asked, \"What are we going to do about a work out?\"\n\n\"Well,\" I said, \"the resort brochure mentions a fitness center although, if it is like the few resorts I've been to, it won't be very good. While you were showering, I saw some people jogging on that path the runs between the pools and the lake. I don't know where that goes or how far.\"\n\n\"Were the joggers nude?\" Liz asked.\n\n\"Yes,\" I answered.\n\nLiz thought for a moment. \"You brought running shoes, didn't you?\"\n\n\"Yes.\" I answered.\n\n\"Ok. That's it. We run tomorrow morning,\" Liz declared.\n\nI didn't ask whether we would run naked or clothed. Instead, I asked, \"Before your morning coffee?\"\n\n\"Yup,\" Liz answered, \"otherwise I'll need to pee.\"\n\nNot much later, Liz yawned. \"I'm beat,\" she said, \"I'm going to bed.\"\n\nLiz had booked a room with one queen size bed. We thought that it would look very odd for a married couple to have separate beds in a hotel. Through the glass door, I watched Liz go into the bathroom. She shut the door most of the way, but not all the way. I was curious to see what she would wear to bed. I was disappointed again when she came out of the bathroom in pajamas.\n\nIt was not very late, but I was tired too. There was no telling what might happen tomorrow so I thought that sleep was probably a good idea. I went inside. In deference to Liz, I put on a clean pair of shorts before I went to bed.\n\nLiz was already up, still in her PJs, when I awoke Friday morning. My first instinct was to get up and go to the john. I didn't even think about my morning hard-on tenting my shorts. I got out of bed, stretched, and said \"good morning\" to Liz. In response, she said, pointing towards my groin, \"What is that?\"\n\n\"The colloquial phrase is 'morning wood.' Most guys get it. Haven't you seen this before on your boyfriends?\"\n\nLiz smiled. \"Well, yeah, but not like that. Jeez!\"\n\nI took my morning leak and came back into the room. Liz said, \"Get your running shoes on. We need exercise.\"\n\n\"Are we running naked or clothed?\"\n\n\"You are running naked. I haven't decided about me yet.\"\n\nI stripped off and put my running shoes on. Liz opened the door to the room and held it. \"You stay out there while I get ready.\" \n\nI stepped outside and Liz shut the door. I wasn't entirely thrilled to be standing outside, naked but for my shoes, without a key to get back in the room. But, I thought that I could probably trust Liz.\n\nAs I was starting to get fidgety, the door opened and Liz came out. She had pulled her hair back into a short pony tail. Liz was naked except for her shoes and something like a very small fanny pack around her waist. \n\nPointing at the pouch which was on her abdomen almost directly above her triangle, Liz said \"Key.\" She paused. Gesturing down her bare body with her hand, Liz said, \"Are you happy?\" Liz looked very beautiful, but I thought that I was better off not answering that question. After a moment's silence, she added, \"I decided that I'd better get with the program or I'd blow our cover.\"\n\nThe sun was up, but still fairly low in the east. However, it was already quite warm out. We walked past the empty pool area. When we got to the path that formed a sort of boundary between the pool area and a small lakefront beach, Liz stopped and started stretching. I found a tree I could lean against to stretch my calves and still see Liz. I hate to say it, but there was something erotic about watching her naked, lithe body as she went through her stretches.\n\nWhen Liz finished stretching, she stood straight and faced me. \"Finished perving?\" she asked. I would have feared that she was upset, but she was smiling as she said it. I nodded affirmatively. \"Ok,\" Liz said. \"Let's run.\"\n\nI let Liz lead so that she could set whatever pace she liked and, of course, she I could watch her marvelous tight ass. Liz started off slowly. After, I'm guessing, a quarter mile, she increased the pace. We went across a bridge over an arm of the lake, through a small grove of trees, and into an area of houses. It was still early enough that not many people were out. Liz, called out \"sprint\" and took off.\n\nLiz sprinting was, of course, a challenge to my masculinity and athleticism. I sprinted up beside her and held her pace. I glanced over at her and smiled. I also enjoyed watching her bare tits bounce. After a couple of minutes running side-by-side, Liz increased the pace again. I stayed right with her. We maintained a fairly ridiculous pace around the south end of the lake, through some condos, and back into the pool area. I'm guessing we had run about a mile and a half, mostly at a sprint.\n\nWhen we reached the place we had started, Liz slowed to a jog. \"Ok,\" she said, \"I can't run you into the ground.\" We jogged on, starting a second lap. As we crossed the bridge for a second time, Liz said, \"I like this running naked. It is too bad that I can't do it at home.\"\n\nPeople were coming outside during our second lap. Given our more sedate pace, I wasn't worried about bowling someone over. People smiled and waved as we passed.\n\nWhen we reached the pool area the second time, Liz said \"That should be about three.\" She slowed to a walk. It was warm and we were both sweating heavily. As we walked back towards the room, we walked past an outdoor shower. Liz stopped and looked at the shower for a moment. She shook her head and said, softly, \"not yet.\" As we started to walk on, we met an older woman walking the other way carrying two coffees.\n\nApparently, the woman had seen Liz looking at the shower, and it was obvious that we both needed a shower. \"There are towels in that wooden bin,\" the woman said, gesturing carefully with a coffee. \"If you haven't tried it before, nothing beats an outdoor shower.\" The woman walked on.\n\nLiz stopped again. She stood still for a moment before she said \"what the hell.\" She walked back to the outdoor shower. She took off her mini-fanny pack and draped it over a tree branch. I hadn't moved. Liz turned, looked at me, smiled, and asked \"Wash my back?\"\n\nI came over and Liz turned the water on us both. We took liquid soap from a dispenser and washed our own fronts. Then, Liz said, \"Ok, my back\" and turned her back to me. I got more soap and started washing her just at her shoulders. More people were coming out. It was odd, and oddly nice, to be standing naked under a shower washing Liz's bare back while people walked by, mostly looking at us, a few feet away. I drew washing Liz's back out as long as I could because it felt so great to be touching her. I also strayed a little lower than I had with the sunscreen the day before.\n\nWhen I finished, Liz turned around, reached up, and kissed me squarely on the lips. \"Married, remember?\" she said. Again, I thought that I saw a gleam in her eyes. \"Now, turn around,\" Liz instructed. She took a long time on my back. She also went all the way down over my ass. I wasn't complaining. When she finished, I turned to face her. \"Nice ass,\" she said. I bent down slightly, hugged her, and kissed her on the lips.\n\nWhen I pulled back, Liz had an angry look on her face. I thought \"oh shit, I went too far.\" I said, \"Married, remember?\" Liz broke into a smile.\n\nLiz led me to the towel bin. She pulled out a towel, handed it to me, and said, \"dry me.\" I took the towel and very gently dried her hair. I went slowly up and down her back. Through the towel, I cupped both of her cheeks in my hands. Then, I crouched down and wrapped the towel around her left thigh so that I had one hand on the outside of her thigh and the other on the inside. Liz spread her legs slightly to give me more room. I slowly drew the towel down her thigh and her calf. She raised her leg up so that I could dry her foot. I then walked around to face Liz, and crouched down again, nodding towards her right foot. Liz raised her right foot and I dried it off. When she put her foot back down, I wrapped the towel around her calf, with a hand on each side of her leg and drew the towel up. As I did so, I looked up at Liz's gorgeous face. She was looking down at me, smiling. As I reached the top of her thigh, I kept looking up at her face so that I could claim an accident when my right hand, through the towel, brushed over her vulva. Liz tilted her head to one side, but didn't say anything and didn't stop smiling. \n\nI stood as I ran the towel up Liz's sides and across her belly. I stopped my toweled hands just below her breasts. \"Go ahead,\" she said. I gently toweled off her breasts, rubbing each nipple especially carefully. Liz's breasts weren't huge, but they were in perfect proportion to the rest of her and perfectly shaped. When I finished, Liz leaned forward and kissed me again.\n\nLiz took the towel out of my hands, went to the bin, dropped it in one side, and pulled a fresh towel out of the other. Stepping behind me, she rather roughly toweled off my back and ass, running a hand between my cheeks. From behind, Liz toweled the backs of both of my thighs and calves. She walked around in front of me and toweled my face, which the sun had already dried. She toweled off my chest with a swirling motion, stopping at my waist. She squatted down and ran the towel up the front of each leg, stopping just above mid-thigh. Done with that, Liz stood up and came very close to me. With the towel wrapped around her hand, she reached between my legs drew her hand from behind my balls, over them, to the base of my dick. She switched the towel to her other hand, grasped my dick with the hand, and slowly ran the towel from my base to my head. She let go, stepped back, looked at me, stepped forward again, bent down, and rubbed the towel very gently on the head on my dick.",
        "Done with my dick, Liz straightened up, looked me in the eye, and said, \"Nice package, Mister.\" I stepped towards her and hugged and kissed her again. This time, she hugged me back.\n\nWe had totally forgotten that we were outside and that other people were walking past until I heard a third person say \"Nice.\" Liz and I broke our embrace and turned to see an older couple standing about ten feet away. Apparently, they had watched us dry each other. I could see Liz blush a little. She hurriedly grabbed her fanny pack, took my hand, and led me back to the room.\n\nAs we entered the room, I did have hopes. However, Liz turned to face me, grinned, and said, \"That was fun. Now, I think that we need to get back to work. We haven't seen Smith or Lewis yet. First, you need to go get me coffee.\"\n\nI went back downstairs to the coffee/pastry counter by the pool. Fortunately, they did coffee the way Liz likes it. I dutifully took her coffee back to the room. When I knocked on our door, Liz opened it and I handed her the coffee. She gave me a peck on the cheek and said \"Thanks. You're a dear.\" I was unreasonably gratified by that.\n\nWe went out onto the balcony while Liz drank her coffee. Picking up on her business tone, I asked, \"What are you thinking about finding Smith?\"\n\nAfter a sip of coffee, Liz replied, \"I think that we spend another day by the pool and keep an eye on the bar. Two reasons: First, I don't have any better idea. Second, he's his own boss. I expect that he starts his weekend early. I'm also guessing that they will come to the pool area or the tiki bar. That seems to be the center of activity here during the daytime. They live here. Why would you live here unless you want to socialize naked?\"\n\nWhat Liz said made sense, but I couldn't help smiling at how she said it. \"So, we wait to see if they show up at the bar and give us an opportunity to socialize naked with them?\"\n\nLiz smiled. \"Yup. I'm just showing off my tits, ass, and pussy in the service of my government.\"\n\n\"How are you doing with the nudity?\" I asked.\n\nLiz gave that some thought. Finally, she said, \"When we were first told about this assignment in Arlington, I was mortified. I said to myself that there was no way I was going to run around naked with other people. But, I realized that saying no meant giving up my job. I was pissed that I'd been put in this position. While we were prepping in Cleveland, I just put it out of my mind. You were great. You didn't mention nudity once. When we got here yesterday and I had to confront taking my clothes off, well, you know what I went through.\"\n\nLiz took another sip of her coffee. \"Yesterday and this morning, I've really surprised myself. I'm enjoying going naked. I know people around the pool looking at us yesterday, while we ran this morning and,\" Liz giggled, \"and while we were showering. I actually enjoyed that. Can you believe it? I actually like the fact that complete strangers are seeing me completely naked. What about you?\"\n\nI thought about my answer. The truth was that I had reached the point where I'd do just about anything to spend time with Liz Carden naked. Saying that would be a mistake. I tried to craft a truthful answer that didn't sound crafted.\n\n\"I had pretty much the same reaction as you when we were in Arlington. I had never thought much about nudists. I mean, I knew that nudists existed, but I just dismissed them as wacky or perverts. The people here don't seem wacky or perverted to me. I have to concede their point: it does feel better to be outside with no clothes on. Like you, I'm enjoying the fact that people are seeing me naked. Maybe it is easier because I don't know these people. Of course, it helps that I have a really great person as my partner on this.\"\n\n\"Great person?\" Liz asked rhetorically. She stood up and cocked a hip. \"Doesn't this killer body mean anything to you?\" she asked, grinning.\n\nI smiled. \"Well, of course, I'm enjoying being naked with the most beautiful woman I've ever met.\"\n\nThat seemed to catch Liz off guard. She sat down and looked into my eyes. I wished that I knew what she was thinking. I really didn't want to screw up with this woman. Finally, in a very soft voice, Liz asked, \"Do you mean that?\"\n\nI held her gaze. \"Yes, I do.\" Liz smiled.\n\nAfter a moment, Liz broke the mood and said, jokingly, \"Well, I guess we're just a pair of latent exhibitionists. Do you think that the Agency will fire us if it finds out? I suppose I could go work in a strip club, but I'm not sure what you'd do.\"\n\nI consciously took a risk. \"Grow old showing off with you?\"\n\nLiz looked at me again, hard. Then she smiled again. After a couple of minutes of us looking into each others' eyes, Liz said, \"Ok. We've got a hard day ahead lounging naked by the pool. I need food.\"\n\nThe place that sold coffee, really a counter on the side of the building housing the more casual restaurant, also served some short-order food items. There were a few tables and chairs set up, fairly far away from the pool, where you could eat al fresco. We put on sunscreen and went down there. Again, I was impressed by how pleasant it was to be sitting naked in the sun, listening to the birds, eating our breakfast. As people walked by, they would all say \"good morning\" or \"how are you?\" or \"nice day.\" I was beginning to think that people get a lot friendlier when they take their clothes off.\n\nWe went back up to the room to get ready for the pool. I pulled a rather dense new book on 20th century German history out of my briefcase. \"What's that? Liz asked.\n\n\"If we're going to spend most of the day by the pool, I thought it would look more natural if I'm reading a book.\"\n\n\"Why that one?\"\n\n\"European history was my major in undergrad, so if someone asks, I can talk somewhat intelligently about it. And, I thought that I might actually put a dent in this.\"\n\n\"So, you're not content just staring at my naked body?\"\n\n\"I'll do that too, if I have your permission.\"\n\nLiz gave me a broad smile. \"Permission granted on condition that I have permission to stare at you.\"\n\nI smiled at Liz. \"Permission granted.\" I meant that too.\n\nWe got to the pool and found a couple of chaises that afforded us a pretty broad field of view. It was a little after 11:00 a.m. By 1:00 p.m., I was getting frustrated and antsy that we hadn't seen Smith or Lewis. I was trying hard to think up a \"Plan B\" when Liz said, very softly, \"Harry, to your left!\"\n\nI looked to my left towards where the path which we had run that morning came out of the condo area. A tall woman with dirty blonde hair was striding confidently, nude and alone. You could tell that she was older, maybe 50, but her body was firm and completely tan. Her breasts sagged and bounced just enough to suggest that they were real. A look at her face confirmed for me that she was Karen Lewis.\n\nLiz said softly, \"Damn. I hope that I look that good at her age.\"\n\n\"You will look much better,\" I replied.\n\nWe watched, unnoticed we hoped, as Lewis stopped and talked to some people lounging by the pool. After a short conversation, Lewis walked over to the tiki bar, grabbed a towel from a stack, spread it over a stool, and plopped her bare ass down. We waited to see if Smith would join her. If he didn't, we'd have to take our chances trying to work on Lewis alone.\n\nAbout twenty minutes later, a nude man came along the path from the same direction as Lewis. He was also completely tan with graying hair. It was John Smith, but his face wasn't the first thing that I noticed or anyone else would notice. I had studiously avoided looking at other men's dicks, but you couldn't miss Smith's. It was freakishly long, but very slender.\n\n\"Jesus,\" I said.\n\nLiz knew what I meant. She laid a hand on my bare hip. \"He's long, but you're a lot thicker,\" she said.\n\nWe watched as Smith went to the bar and sat down next to Lewis. Obviously, we didn't want to hop right up and run over as soon as he showed. We gave them the better part of a half hour. Just as Smith and Lewis were ordering their second drinks, two stools immediately to Lewis's left came open. I quietly said to Liz, \"We need a drink.\" We picked up our towels and walked to the bar.\n\nI let Liz take the lead on the theory that a woman is less threatening. Liz went up to Lewis. \"Excuse me, are these stools taken?\"\n\nLewis turned to Liz and pleasantly said, \"No. Please take them.\" Lewis turned back to Smith and then did a double-take. To Liz, she said, \"We you guys running on the path this morning?\"\n\nLiz answered, \"Yes.\"\n\nLewis said, \"I saw you two. Most people just jog. You two were busting ass and kept it up for as long as I watched you.\"\n\nSmith joined the conversation, \"She came up saying, John, I just saw a couple flat-out sprinting the path.\"\n\nLewis asked, \"Is that your normal workout?\"\n\nLiz responded, \"We try to push ourselves. It is challenging when you're on vacation.\"\n\nSmith asked, \"Are you guys athletes?\"\n\n\"Ex-athletes,\" Liz said. \"I used to dive and Harry played football.\"\n\nLewis leaned back on her stool, like she was trying to get a broader focus on us. \"You both look pretty athletic.\"\n\n\"Thank you,\" Liz said.\n\nSmith asked me, \"Did you play in the NFL?\"\n\nI laughed. \"No. Not even close. I played college ball and managed to go completely unnoticed.\"\n\n\"Where did you play?\" Smith asked. I told him. \"That's a great school, but I think of it more for academics than football.\"\n\n\"We try to excel at both,\" I replied.\n\nLewis said, \"I'm sorry. You came in here for a drink. Please sit down.\"\n\nWe sat. Liz asked Lewis, \"Where did you see us running?\"\n\n\"As you came through the single family houses. We have a place here.\"\n\n\"You have a house? Do you live here full time?\"\n\nLewis answered, \"yes.\"\n\n\"That must be interesting,\" Liz said.\n\n\"It is wonderful,\" Lewis responded. \"I can go whole weeks and never put anything on.\"\n\nSmith asked, \"Are you first-timers?\" I knew enough to know that he was asking whether this was our first nudist experience.\n\n\"Yes,\" I said.\n\nSmith smiled. \"I thought so.\" Liz made a look like she didn't understand. Smith elaborated, \"Your asses and pubes are paler than the rest of your bodies.\"\n\nLewis laughed. \"Don't mind him. He likes to look at bare asses and pussies. How are you liking going nude?\"\n\nLiz answered, \"I'm really enjoying it. I'm sorry that we didn't try this sooner.\" Damn, she sounded sincere.\n\n\"What got you here now?\" Lewis asked.\n\nLiz explained, \"We've had some fairly life-changing events. We are trying to decide where we go next. We thought this was a good time to try some things we've never done before.\"\n\n\"Why nudism?\" Lewis asked.\n\nLiz replied, \"It has been in the back of my mind since college. I had some friends then who skinny-dipped a lot. They invited me, but I never went with them. As I got older, I wondered whether I'd missed out on something. Going naked with other people sounded a little naughty but like it could be fun.\" Liz had done that on the fly. I was impressed.\n\nSmith asked Liz, \"So you were the one who wanted to come here?\" Liz nodded.\n\nLewis said, \"That's a bit unusual. Usually it is the guy who wants to try nudism and has to persuade the woman.\" Lewis leaned past Liz and looked at me. I was still standing, facing her. To Liz, Lewis said, \"I'm glad that you persuaded him. He's not bad.\"\n\nSmith took a longer look at Liz and said, \"I'm glad that you persuaded yourself. You are very beautiful.\"\n\nLiz actually blushed. \"Thank you.\"\n\nWe sat down and ordered our drinks. Liz asked Smith and Lewis, \"What got you into nudism?\"\n\nSmith smiled. \"We're like you two. She got me into it.\"\n\nLewis took up the story. \"I had a roommate in college who was part of a nudist family. She invited me to go with them to their resort. I did, loved it, and kept going. Then, I got married and moved to North Carolina. My husband absolutely would not consider trying nude recreation. He got pissed off if I even mentioned it. That's one of the reasons we divorced, not the only one, but a signficant one.\"\n\nSmith said, \"Karen started coming to the gym I belonged to at the time in Wilmington. I thought she was pretty hot and hit on her. Instead of telling me to take a hike, she agreed to go out with me. We figured out that we liked each other and kept going out. About the fifth or sixth date, she asked me if I would go to a nude swim with her and some group she belonged to. I thought 'what the hell' and said yes. It was a great experience. The people were very friendly and I got to look at her naked. That was worth letting people see my dick.\"\n\nLewis laughed. \"He's not really that crude. It's an act. Anyway, I wanted to go to Club Orient on St. Martin and needed someone to go with me, so I asked John.\"\n\nLiz asked, \"What is Club Orient?\"\n\nLewis replied, \"It is a clothing optional, but mostly nude, resort right on the Beach on Orient Bay. It is really a great place.\"\n\nSmith picked up the story again. \"So, we go down there. No one is wearing clothes anywhere 24/7. There's a little bar and restaurant right on the beach. Except for the staff, everyone's naked there too. Two or three times a week, a big group of folks from a cruise ship docked at Phillipsburg would show up on the beach. It was fun to see which of them would strip off. Some of the women on those cruise ships are damned attractive.\"\n\nLewis interjected, \"It was a great time.\"\n\nSmith, not to be diverted, went on, \"I'll tell you, you spend all day naked with her naked and everyone else around you naked; well we'd both be horny as hell. We'd have to leave the beach two or three times a day to go back to the chalet and fuck. It was great for our sex life.\"\n\nThe cute, topless young woman working behind the bar had come up to see if we wanted more drinks. She laughed at Smith's comment. \"John,,\" she said in a very southern accent, \"they're nubie-nudes. You're not supposed to tell them that part. AANR will be unhappy with you.\"\n\nAll four of us ordered more drinks. We moved off of nudism to the usual topics you talk about with people you've just met: Where are you from? What do you do? How long are you here? For drug dealers, Smith and Lewis seemed unusually open and friendly. Before we realized it, we'd been talking for two hours.\n\nFinally, Smith glanced at a clock. \"I probably ought to go back to the house and check my messages before I get too potted. Hey, why don't you two have dinner with us here?\" He named the upscale restaurant on the resort.\n\nLiz laughed. \"Why is that funny?\" Smith asked.\n\nLiz replied, \"Well, we ate at the casual restaurant last night. It was clear that we were over-dressed.\" She went on to tell the story of the previous night's dinner.\n\nLewis and Smith laughed when Liz finished. Lewis said, \"Yes, you were overdressed and you'd be a bit overdressed for tonight too.\"\n\nLiz responded, \"I really didn't bring anything I can wear that fits in. I guess I thought that it would be all or nothing here.\"\n\nLewis thought for a moment. \"Well, there is a little boutique here that has things that will work. It has nice things but it is over-priced. I'll take you if you don't mind spending money.\"\n\nLiz looked at me. I nodded my head once. Liz told Lewis, \"I'd love that. Thank you.\"\n\nLewis stood up. \"Come on then.\" To Smith she said, \"you boys stay here till we get back. Talk about fishing or something.\" Liz stood and picked up her beach bag. Inside the bag was her wallet with the credit cards we'd been issued, the ones paid by the US Government. Smith and I watched Lewis and Liz walk away. Both women looked very good from behind.\n\nSmith turned back to the bar. \"You're in trouble now,\" he said. \"Karen's good at spending other people's money. No, I shouldn't say that. She's a very good woman. But, she does spend money.\"\n\nSmith sipped the last of his drink. \"I was going back to the house to check my messages and e-mail. I guess I'm staying here now.\" He waved a hand at the young woman behind the bar. \"Trish, another of these plus whatever he's drinking.\" To me, Smith said, \"If there wasn't booze and fish, I'm not sure anyone would come to Florida.\"\n\nTrish heard him. \"Now, John, that's not true. People would still come to see me.\"\n\nSmith was smiling as he replied, \"Only if you take off those damned shorts.\"\n\nTrish was smiling as she volleyed back: \"You know I have to wear them when I'm on duty.\" Trish looked at the clock. \"Jenn will be here in another hour to take over. Once I'm off duty you can see me in all my glory.\"\n\nSmith and I talked. He told me a lot about his boat business. I told him a lot my fictitious start-up and buy-out. I wasn't aware of the time until a topless brunette wearing small shorts came behind the bar. I assumed that she was Jenn. Jenn and Trish spent a few minutes closing out Trish's till and opening Jenn's. Trish walked off carrying her cash drawer. \n\nTrish walked back a very few minutes later completely nude. She sat down on a stool on the other side of Smith. \"Happy now John?\" she asked. Jenn placed a drink on the bar in front of Trish.\n\nTo Trish, Smith said, \"Honey, you know that you are more beautiful naked.\"\n\nTrish took a sip of her drink. \"Yeah, I guess I do.\" She sipped her drink. \"Thank god I'm not working tonight after putting up with you guys all afternoon.\"\n\nThe three of us were the only remaining customers at the bar. We talked, but I noticed that Smith stayed away from talking about his business with Trish there. He had told me a lot but, thinking back, I realized that he had said most of it when Trish was on the other side of the bar. I started wondering where the hell Liz had gone.\n\nAlmost two hours after they had walked away, I saw Liz and Lewis walking back towards the bar. Both women looked very good from the front too. In addition to her beach bag, Liz was carrying a large plastic shopping bag that looked nearly full.\n\nLewis walked up to the bar. To Trish she said, \"Off duty at last?\" The two women hugged. Lewis turned to Smith and me. \"Are you boys too drunk to go to dinner?\"\n\nSmith and I both affirmed that we were not too drunk. To Liz and me, Lewis said, \"Things start a little later here on Fridays and Saturdays. Why don't you meet us at the restaurant at eight thirty? I need to take him home for a little while.\"\n\nSmith paid our tab. To me, he said, \"can you get the tip?\" I gave a twenty to each of Trish and Jenn. I gathered my things and followed Liz back across the pool area and up to our room. Inside the room, I asked Liz, \"Why were you gone so long?\"\n\n\"Karen had me try a lot of things at the boutique. Those were tough choices. Then she wanted to show me the spa. It's pretty nice. There weren't any customers and Karen knows the spa manger. They got talking. The manager offered us glasses of wine, so we drank and talked.\" Liz giggled. \"Some of the things they talked about, uh, I'll tell you later.\"\n\n\"Did you hear anything that the Agency would be interested in?\"\n\nLiz's smile faded some. \"No. Nothing. And Karen gave the impression of being pretty open, very open in fact. What about Smith?\"\n\n\"I heard a ton about his business. All clean as can be. I didn't get the feeling that he was lying or holding back either. The only thing I noticed that was odd was that Smith didn't say much about his business when Trish the bartender was in earshot.\"\n\nLiz said, \"That is a little odd, but I don't see how that leads to evidence that he's a drug dealer. Maybe he's afraid that someone might break into his place if the staff thinks that he's wealthy.\"\n\n\"So, what have we got so far?\" I asked.\n\n\"We don't have jack shit. Still, we seem to have gotten close to them, at least in an 'on vacation at the resort' sense. We just have to give it time. Maybe we'll learn something.\"\n\n\"Maybe? Are you thinking that Smith is really just what he says he is?\"\n\nLiz said, \"We've only spent a few hours with them, but my intuition says that they are exactly what they claim to be. I think that the Agency may have gotten bad info. We both know that happens. Still, as the Brits say, 'it's still early days.' I could be dead wrong.\"",
        "\"How do you know what the Brits say?\"\n\nLiz smiled. \"Because I spent a year at Oxford after undergrad. So there!\"\n\nWe talked work for another 45 minutes but didn't accomplish anything. Finally, Liz said, \"I need to start getting ready for dinner. Karen showed me how to do this, but it may take me a few tries to get it right.\"\n\n\"What is 'this?'\" I asked.\n\nLiz giggled. \"It's a surprise. I'm going in the bathroom and shutting the door. I'll let you see when I get it right. I hope that you'll like it.\"\n\nLiz was in the bathroom another 45 minutes. I heard the shower briefly, but there was mostly silence. I did hear a a muffled \"shit!\"once. Liz finally stepped out of the bathroom. She was wearing a dress-like thing that was tied over her left shoulder. The material came down to just above mid-thigh and was a very sheer orange and red print, suggesting a sunset. She had done something with her hair. It was obvious that she was wearing nothing under the sheer fabric. She looked incredible.\n\nLiz spun around once which showed that the dress would open under her left shoulder revealing part of her bare body. \"Do you like it?\"\n\n\"Liz, you look more beautiful than I know how to say. What is the dress?\"\n\n\"It isn't really a dress. It's a pareo. It's a single piece of cloth. The trick is wrapping it so that you're mostly covered and tying it so that it stays in place. Depending on how you wrap it and tie it, you can show relatively little or a whole lot.\"\n\n\"The way you have it is absolutely wonderful,\" I said. Then an idea hit me. \"Wait a second,\" I said. I went to the door. \"Let me back in as soon as I knock.\" Slightly confused, Liz nodded her head.\n\nI remembered some sort of flowering plant bordering the parking lot. Assuming that the resort wouldn't appreciate me stealing a flower, I went downstairs and across the parking lot more stealthily than necessary, carefully pinched a mature bloom, and silently ran back upstairs. When Liz opened the door, I put the bloom behind her right ear.\n\nLiz walked over to the mirror. \"Perfect,\" she said. \"Thank you. Now, get your shower and shave quickly. I've got something for you to wear.\"\n\nMy curiosity was piqued. I showered and shaved quickly and walked back into the main room nude. Liz pulled a smaller piece of sheer cloth out of her shopping bag. This one was a print of dark blue and white. Liz wrapped it around my waist and tied it on my left hip. The lower hem of the material reached lust above my mid-thigh. Liz had tied it so that there was a slight gap of bare skin showing all the way up my hip to the knot. Liz gently waved her hand against the vertical edge of the material on the front side of the gap. The light material flew up exposing my dick and balls.\n\n\"I love that,\" Liz said. \"Are you ok with it?\"\n\n\"I'm ok with it if you like it. Is this a pareo or a loincloth? Won't I need a shirt to get into the restaurant?\"\n\n\"Oh shit,\" Liz said. \"I forgot about a shirt.\" She rummaged in the closet a moment and pulled out my white polo shirt. She sniffed it and then handed it to me. \"It isn't perfect, but it goes well enough with the material.\" I put the shirt and some sandals on. Liz grabbed a clutch purse with our keys and credit cards. As we walked out for the restaurant, Liz said, \"I guess it's a loincloth.\"\n\nLewis and Smith walked in the restaurant just as we did. Lewis was dressed in a pareo much like Liz's, only with a different print. Lewis looked good, but Liz looked a whole lot better. Smith wore a polo shirt and fairly nice shorts.\n\nLewis looked at me and then turned to Liz. \"I thought that would look good on him. I like how you tied it.\" To Smith, Lewis said, \"I should have put one of those on you.\"\n\nSmith replied, \"I'm not as young or muscular as he is.\" To Liz, he said, \"You look very beautiful.\" \n\nI swiftly returned the compliment to Lewis. I had to be careful to use her first name. We had not exchanged last names yet.\n\nAn attractive hostess in a tight dress with obviously little on underneath took us to a table. Once we sat down, Smith said, \"Karen chided me at home that I had been a little rude to you.\" I had no idea what he meant. Smith extended his hand. \"I'm John Smith and this is my partner Karen Lewis.\"\n\nI shook Smith's hand and formally introduced us. \"I'm Harry Stone. This is my wife Liz Carden.\"\n\n\"Second thing,\" Smith said. \"You probably noticed at the bar that I shut up about my business when Trish came around?\"\n\n\"I can't say that I did,\" I replied.\n\n\"You did. You seem pretty observant,\" Smith said. \"Trish is cute and sexy as hell and she's a good bartender. But, I know that she goes out sometimes with a guy who sells for my main competitor in the Tampa Bay area. I don't want anything about my business getting to them, so I keep quiet about it around Trish. Also, I'm weak-willed when it comes to sexy women. I don't want her hitting on me because she thinks that I've got money and tempting me to screw up what I've got with Karen. We let her think that Karen has all the money.\"\n\nKaren laughed. \"That's ironic,\" she said, \"because the exact opposite is true. I thought that my ex and I had some money when we were married. But, come divorce time, I found out that he owed about twice as much as we were worth. He never told me. I'm lucky to have become a kept woman.\"\n\nLiz said, \"That's how it is with us. Harry got a nice buyout. It won't last forever, but it will keep us very comfortably until we decide what to do next. I was just an accountant making $45,000 a year. I left voluntarily so I received no severance.\" Liz looked at me and added, \"But, I feel safe because I don't see us getting divorced.\"\n\nLooking at Liz, I added \"There's no way that I'd let you go.\" \n\nThe meal was very good, if over-priced. We also managed to go through three bottles of wine. Smith and Lewis were very engaging people: observant, informed, a bit bawdy, and often quite funny.\n\nThe dishes had been removed, I had paid the bill, and we were finishing our wine when Karen said, \"John said that he's weak-willed around sexy women. That's not entirely true. There are times here that there are a lot of sexy women really putting it on display. John's very faithful. If you want to see what I mean, come with us to the nightclub.\"\n\nLiz gently kicked my foot under the table. I let her take the lead. She squeezed my arm, smiled a sort of naughty smile, and said, \"Thank you, but not tonight. I really want to go back to the room.\"\n\nJohn and Karen both smiled. They assumed that we were going back to make love. I rather doubted that would be the case.\n\nJohn said, \"That's ok. Tomorrow night is the lingerie party. That will be a better show. Tell you what, do you guys like barbecue?\"\n\nI nodded my head enthusiastically and truthfully.\n\n\"Ok. There's a great barbecue place about six miles from here. It means getting dressed, but it's worth it. The party won't get going until eleven or so. What if we pick you up outside your room at eight? We can eat and be back in time to change for the party.\"\n\nLiz said, \"That's great, but I didn't bring any lingerie to be seen in, only my usual bra and panties.\"\n\nKaren said, \"You can wear what you have on tonight. Just tie it so that it is higher up on you. You want to flash your ass and cunt when you dance.\"\n\nThat was a little blunt. I looked at Liz to see her reaction. That gleam was back in her eyes.\n\n\"That works,\" I said and told John and Karen our room number. Liz and I got up and walked out holding hands. As we walked through the pool area, there were a few people in the pool and in the Jacuzzis, but none close enough to hear us.\n\n\"We certainly are getting close to the targets,\" Liz said.\n\n\"It is almost too easy,\" I responded.\n\n\"No,\" Liz said. \"I think that is how they really are. Also, we've completely exposed ourselves to them. That probably makes us seem trustworthy.\" That last sentence made me feel a bit embarrassed. John and Karen were being very nice to us and we were deceiving them. Yes, it was our job and we had a good reason, we thought, but it still gave me pause.\n\nWhen we got to the room, I pulled my shirt off and followed Liz onto the balcony. We stood facing each other. We hadn't turned on the room lights, but the light from the pool area below partially illuminated her face. Liz looked very, very beautiful and incredibly sexy. \n\nLiz giggled. \"You remember that I said that Karen had been very open this afternoon?\"\n\n\"Yes,\" I replied.\n\n\"Well, when we had wine with the spa manager, Karen started talking about what she and John like to do, sexually I mean. I guess that she was a little buzzed. Then the spa manager started talking about what she and her husband do. After that, they obviously expected me to talk about what you and I do. I just blanked. I couldn't make up anything, so I played it embarrassed and a little coy.\"\n\nLiz stepped closer to me. She reached to my hip and untied my loincloth. It fell to the balcony floor. Liz cupped my balls in her hand. As she looked into my eyes, she said, \"I think that we need to fuck. Just to preserve our cover you understand.\"\n\nI reached up and untied Liz's pareo. It fell away from her body. \"I understand completely,\" I said. I pulled her to me and we kissed, hard and wet. Liz had moved her hand up to my dick and was softly stroking me. Her other hand was rubbing my bare ass. I worked a hand between us and between her legs. Liz was already wet when I started rubbing her clit.\n\nWe went in and onto the bed, forgetting to close the balcony door. Our first time was standard missionary position. I was gentle but persistent. I was also very scared that I'd disappoint her. When I felt myself about to come, I started to back out. Liz clamped her legs around me, hard. \"No, in me\" she said. Liz was a strong girl and I couldn't back out anyway. I came in her, hard. Just after I came, Liz either came or had an Oscar-winning fake orgasm.\n\nAfter I rolled off of her, Liz kissed me again. Finally, she said, \"Don't worry. Howley insisted that I get an IUD for this assignment.\"\n\nThat's odd, \" I said.\n\n\"Pretty smart though,\" Liz said. \"I think Howley expected this. She thinks that you're pretty handsome.\"\n\nI wasn't sure how to take that. I kissed Liz some more and fell asleep on top of the bedding. Liz woke me up sometime in the middle of the night. She got me hard again and pushed me onto my back. Then she mounted me and rode me cowgirl-style. I came in her again. I was pretty sure that Liz came this time. She collapsed on top of me breathing very hard.\n\nWe slept until the sun and sounds through the open balcony door woke us. As Liz started to get out of bed, I pulled her back down and gently pushed her onto her back. I moved down the bed, spread her thighs apart, got between her legs, and started eating her. I guess I did something right because Liz started moaning. I moved my tongue a bit deeper inside of her and she yelled, \"Oh shit, Harry!\" I took that as encouragement and stayed right there. With more diligent effort, I produced a screaming orgasm. I knew people heard her outside.\n\nI crawled back up the bed. When Liz stopped panting, she kissed me. \"You are bad,\" she said.\n\n\"You are very, very good, and tasty,\" I replied.\n\n\"Ok, we're not meeting John and Karen until eight tonight. What do we do until them?\"\n\n\"First, I'd like to check out the fitness room.\"\n\nWithout showering, we pulled on our running shoes. Liz stuck a keycard in her mini-fanny pack and strapped it around her bare waist. As we walked through the pool area, a few people looked at us and smiled. One couple, out on the chaises early, gave us the thumbs up. People had heard her. On the way back from the fitness room, I remembered to get Liz's coffee.\n\nWe planned to spend the day just lounging by the pool. We'd been sitting maybe an hour when a couple came up, the same couple who'd given us the thumbs up earlier. \"We need two more for water volleyball,\" the woman said. \"Will you guys play?\"\n\nI looked at Liz, who said \"Sure, why not.\" \n\nLiz started to pick up her beach bag. The woman said, \"Oh, don't worry, you're stuff will be safe. Everyone's in the same situation so everyone watches out.\"\n\nWe followed the woman (who had a slightly wide ass) and her partner to a smaller pool with a net across it. A mix of men and women were already in the pool. Someone called to us, \"You're on this side.\"\n\nLiz and I are both pretty competitive people. So were some of the other players. We played six games. We were trying so hard to win that I completely forgot that I was naked. The games finally ended. Liz and I boosted ourselves out of the pool. The couple who had invited us to play walked over and handed us towels. The man said, \"Thanks. You guys are pretty good. I'm Jack. This is Tracey.\"\n\nTracey looked at me. \"From what we heard earlier, volleyball isn't all that you're good at.\" She and Jack both smiled.\n\nLiz laughed and said, \"Thank you. He is good.\"\n\nJack and Tracey walked away. As Liz and I toweled off, Liz said, \"When we were playing, I totally forgot that I'm nude. Now that I remember, I don't want to be any other way. I don't want to wear clothes.\" I kissed Liz.\n\nWe spent the rest of the day by the pool until it was time to get dressed for dinner. I had wondered whether giving John our room number would result in anything happening, like someone searching our room. I had left several little indicators of a search in places where the cleaning staff was unlikely to disturb them. Although our room was made up, all of my indicators were still in place.\n\nOur second dinner with Karen and John was another very pleasant experience. They dropped us back at the room around ten. Before they drove off, Karen gave us some instructions for the party. \"Harry, you don't need a shirt. Don't wear one. Just your loincloth. Liz, remember to tie the pareo high enough so that you're exposed when you dance.\" Karen smiled and they drove off.\n\nBack in the room, Liz said, \"This will be interesting.\" After we stripped down, we hugged each other for a long time before Liz broke off to get dressed. I don't know how she did it, but Liz tied the pareo on herself so that the hem was just below her ass and the overlap between the two ends of the sheet was more towards her front. That meant that it tended to fly open more and expose her. She tied the loincloth on me so that the hem was right at the base of my ass. The gap on my left side was wider. If I took too long a stride, the gap opened, showing off my dick and balls. Liz looked absolutely gorgeous again, and I told her so.\n\nWe walked through an empty pool area to the nightclub. Liz had strapped her mini-fanny pack around her waist under her pareo with our keycard in it. That was wise because we had to swipe the card to gain entry to the night club. Inside, the music was loud, the room was warm, and there were a lot of people in various stages of undress. Fortunately,iIt wasn't so crowded that we couldn't move. I got us drinks while Liz found a vacant table as for from the speakers as possible.\n\nWe sat, sipped our drinks, and watched the display. It was something new to both of us, but it was sexy. After a few minutes, Liz was waving her arm over her head. I turned my face towards the door to see Karen and John walk in. They saw us, got their drinks, and came over to the table.\n\nKaren was wearing a very sheer bra that had openings for each of her nipples. Below she was wearing a garter belt with garters holding up fishnet stockings. She finished the outfit with spike heels. She was wearing clothes but was totally exposed. John was nude except for a transparent g-string pouch into which he had stuffed his lengthy dick. Karen demonstrated that the top of the pouch was secured by Velcro so she could undo it and let John flop out.\n\nKaren saw someone they knew and waved them over. Walking towards our table was a blonde woman, shorter and more soft and curvy that Liz or Karen, with a cute, rather than beautiful face. She was nude except for long white gloves than went above her elbows, patent leather boots that went just above her knees, and a string of pearls tied around her waist. The man with her was very thin but very wiry, like a college wrestler in one of the lightest weight classes. He was completely nude and barefoot but wore a leather collar around his neck with a metal loop attached in front.\n\nKaren introduced the couple as Steph and Bill. They were from St. Pete but spent most weekends at the resort. Karen added, \"Sometimes Bill likes to play as Steph's slave. That is why he has the collar.\"\n\nSteph, who had a beautiful voice, said, \"Hey, why are you sitting around. Let's dance.\" Liz, Karen, John, and I all shrugged and followed Steph and Bill onto the dance floor. The dance floor was crowded, but there was space for us. The music was much louder there. Karen screamed into my ear, \"The dance floor is fun. You rub up against the most interesting parts of interesting people.\"\n\nSteph, Bill, and Karen were already nude or effectively so. John kept his pouch closed. With the very up tempo music, Liz and I were pretty usually exposed from the waist down. I was having fun. I think that Liz was too. She was constantly smiling and kissed me every time I got close.\n\nAfter about four songs, we were sweaty, thirsty, and winded. We came off of the dance floor for a couple of songs to sip our drinks. Karen wandered off for little while but came back. I caught her and John sharing a knowing smile, but I had no idea what about.\n\nSteph and Bill regained their wind first, just as a slow song was starting. Steph looked at Liz and said, \"May I dance with your husband?\"\n\n\"Sure,\" Liz smiled.\n\nBill asked me, \"May I dance with Liz?\"\n\n\"If she wishes,\" I responded. Liz took Bill's hand and led him out as Steph led me.\n\nIt was a slow song. Steph held me very tight. Her hard nipples were rubbing against my chest and, covered only by the thin loincloth, my dick was rubbing against her close-cropped pubic hair. Steph put one hand around my back and the other through the gap on my loincloth onto my bare ass. I had one arm around her back and the other on her ass. During the dance, I started softly rubbing a finger on that had at the very top of her ass cleavage. Steph bit my earlobe and whispered, \"That's nice.\"\n\nWhen the song finished, I walked off of the dance floor with a noticeable tent. Liz saw it and laughed. \"Did you have fun?\" she asked teasingly.\n\nThe fast songs started again. Steph and Bill left to dance with some other people they knew. Another woman Karen and John knew, mildly attractive, came over and asked John to dance. When she got him out of the floor, she unhooked his pouch and the danced with John's penis hanging out.\n\nI don't know how long we had been there, but it had been a while. I had gone back a couple of times to get more drinks for us and for Karen and John. Trish was working behind the bar but tonight she was totally nude. I asked her about that during a break in the music. Trish answered, \"Yeah, I'm supposed to wear bottoms, but liquor control won't come in here tonight. I prefer to work nude.\"\n\nI was actually getting a bit tired when the music completely stopped. The DJ announced, \"Ladies, gentlemen, and others, it is time for our special dance. If you've been here before, you know that the special dance is for only one couple. Members of the resort can nominate a couple. Tonight's special couple are first time visitors to our resort and, I'm told, first time nudists.\" Everyone applauded the couple, whoever they were. \n\n\"I've seen them already and they are two very attractive people,\" the DJ went on. \"Unfortunately, I'm told that they are very happily married to each other and don't swing, at least not yet.\" That brought a mix of applause and calls of \"boring.\"\n\nThe DJ paused, I guess to try to build anticipation. Finally, he announced, \"Would Liz Carden and Harry Stone please come onto the dance floor?\"",
        "The dance floor was completely empty. Holding hands, Liz and I tentatively stepped onto the floor. \"Please move to the center of the floor,\" the DJ said. We did. The light level in the room had been low, but we were suddenly illuminated by some sort of spotlight. The DJ said, \"There's just one more thing. Our special couple has to dance completely nude.\" That brought applause.\n\nLiz smiled broadly at me and then bent down and pulled off her sandals. From the side of the floor, Karen called \"here\" and Liz tossed the sandals to her. I did the same. Liz came up very close to me, still smiling, and kissed me quickly. Then, she undid the knot on my loincloth and whipped it off. That brought another round of applause. I was standing completely nude under a spotlight on a dance floor in the center of, maybe, a hundred to a hundred and fifty people. This was great!\n\nI reached out to Liz's shoulder and untied her pareo. It fell to the floor amidst a fourth round of applause and whistles. Liz undid her little waist pack, bent down to gather the pareo, and tossed them both to Karen. Folks were still applauding, so Liz took my hand and we did a slow turn so that everyone could see us nude, front and back.\n\nThe music started. I honestly don't remember the song except that it was something very slow and meant to be romantic. Liz and I held each other very tight. We were kissing most of the time. About mid-way through the song, Liz reached a hand down and grasped my dick. I put a hand between her legs and began fingering her gently. I guess a few people saw us because there was more applause. Finally, unfortunately, the song ended.\n\nImmediately at the end of the song, the DJ came on again and said, \"Let's have another round of applause for our special couple, Liz Carden and Harry Stone.\" There was more applause. Then, the DJ said, \"Oh, kids, the special couple has to stay nude for the rest of the night.\"\n\nLiz leaned to me and said gleefully, \"No problem.\"\n\nWe were starting to leave the floor when Trish walked out holding two huge martini glasses full of something. She handed a glass to Liz and one to me. \"The special couple gets a mega drink on the house,\" she explained. She kissed Liz and then kissed me. We sort of chugged our drinks, which were some sort of potent martini, and walked off of the floor.\n\nKaren handed us a plastic bag. \"Well done! Your stuff is in there. Remember, you have to stay nude.\"\n\nLiz responded, \"I'm so horny if I stay, I'll fuck him right on the dance floor. I think I need to go back to the room.\"\n\nJohn interjected, \"Don't be rash. It isn't official resort policy, but that is what the jaccuzzis are used for on Saturday night.\"\n\nKaren said, \"Come on, well join you.\"\n\nAs we worked our way out of the nightclub, Karen saw Steph and Bill. To them she said, \"Come on, we're going to the Jacuzzi.\" Steph's face lit. They followed us out.\n\nThere were two in-ground Jacuzzis in the pool area. One had people in it who, by the sound of it, were fucking. The other was empty. John went to turn on the jets while Steph and Karen took off what little they were wearing. John came back and peeled off his pouch.\n\nKaren announced, \"Steph and Bill know this, but for Liz and Harry, women get their men hard out here on the deck, then we go into the Jacuzzi.\" \n\nKaren began stroking Harry's long thin dick. Steph started on Bill. Liz came over to me and started stroking until I was semi-hard. Then she knelt down in front of me and took me in her mouth. Karen called out, \"Liz has the spirit!\"\n\nWhen we were all very hard, the girls led us into the Jacuzzi by our dicks. Karen led John to the side opposite the steps and gently pushed him down into a sitting position. Steph put Bill very close to John's right. Following the other girls, Liz put me into a sitting position almost touching John to his left. Liz straddled me, reached into the water, grabbed my dick, and guided it into her as she sat on my lap.\n\nWe were so close I could hear Karen and John and Steph and Bill fucking. I could have looked over and watched either girl riding her man. I didn't. I kept my eyes locked with Liz's eyes. Liz was riding me hard and I was thrusting into her. Suddenly, I saw the most beautiful look ever come onto her face. Just after that, she screamed and collapsed onto me. As she did, I came into her again.\n\nLiz lay on me panting for a few moments. I have no idea what the other couples were doing. Finally, Liz said softly in my ear, \"I love you Harry.\"\n\nI immediately responded, with all my heart, \"I love you Liz.\" At that moment, I didn't give a shit what the Agency might think."
    ],
    "authorname": "HStoner",
    "tags": [
        "public sex",
        "exhibition"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-investigation-2"
}