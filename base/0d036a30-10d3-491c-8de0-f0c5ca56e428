{
    "title": "The Last Shewolf Ch. 34-39",
    "pages": [
        "Snake's POV \n\n\"He's late,\" Dagger said as we started looking over the IHOP lunch menu. We'd been here for four hours already, he should have been back in under two. \n\n\"He's still not answering his phone,\" Stain said as he walked in and set my Nokia cell phone on the table. \"Goes right to message.\" \n\n\"That doesn't mean anything, you know coverage is shit away from the freeway,\" I said. \"Still, he should have checked in.\" \n\n\"I'm going to check back home,\" I said. Grabbing the phone, I walked outside the building where I could get a decent signal. We had been rotating people to the parking lot the whole morning, just in case. I dialed the clubhouse, listening to it ring a couple times before someone picked up. \n\n\"Northwoods Riders, Teri speaking,\" she said. \n\n\"Teri, it's Snake. Have you heard from Carson this morning?\" \n\n\"Not that I've heard of, but I can ask around. Why?\" \n\n\"He went to pick up the blood this morning and hasn't returned.\" \n\n\"Shit.\" I could hear the phone being set down and a moment later Viper picked it up. \"He hasn't come back from the Pack?\" \n\n\"No, nothing.\" \n\nHe thought for a moment. \"One of you stay there, the other two do a driveby. Get as close as you can, take pictures, make them nervous. I'll talk to Vivian and see what she thinks.\" \n\n\"How's my old lady doing?\" \n\n\"Busy. Jessica started having pains this morning in her chest and stomach, she's got her in the clinic trying to keep her calm. She said it isn't labor, but she can't have her panicking and triggering labor early.\" That wasn't good. \n\n\"And how is Kelly doing?\" \n\n\"Bored as hell and taking it out on me,\" he said with a chuckle. \"I'll call you back if I hear anything, but you call me back in two hours and update me.\" \n\n\"Got it, Viper.\" I hung up the phone and walked back in. I looked at the guys, they were just about to order. \"I'm going to stay here in case he comes back. I want you two to do a drive by of the turnoff to their Pack House. Drive as far in as you can, if they ask, tell them you're looking for your buddy. Let them know we know he's there.\" \n\n\"Strapped?\" Stain was nervous, I could tell. \n\n\"Hell yes,\" I said. \"And don't be afraid to let them see it. They can smell the silver, that might scare them a little.\" I tossed money on the table and we walked out to our bikes. I screened them from the customers as they pulled the pistols out of their bags and holstered them. Silver knives were stuck into their boots, extra magazines in their pockets. When they were ready, I sat on my bike as they rode off to find him. \n\nVivian's POV \n\nI held her shoulders down to the examining table as she screamed in pain, her forehead red and creased with the effort as she tried to breathe through it. It took fifteen seconds or so before it passed. \"Vivian, it feels like my leg is burning up,\" she said. \n\nI pretended to examine her, but I already knew these pains weren't real. They weren't her body, she was feeling something bad happen to her mate. The door opened, and Teri came in with a bowl of ice water and some cloths. \"Doc, Viper needs to ask you something if you have time.\" \n\nI nodded, the pains weren't regularly spaced. \"Can you stay with her?\" She nodded as she wrung out a washcloth in the cool water. \"Keep her calm, and don't let her up. She needs to rest.\" I walked out, closing the door and walking towards the stairway. Viper was waiting for me at the bottom. \"He's captured, isn't he.\" \n\nViper pulled me into his arms. \"I got a call from Snake, he never came back from the blood pickup. They are driving by the entry road, but you know they'll never get close.\" It was true, the Packs used private property rights to keep humans away. The road was gated and guarded. \n\n\"How did they know?\" \n\n\"I don't know,\" he said. \"He's been gone since breakfast, even being sociable there's something off.\" \n\n\"No, he's being beaten,\" I said. \"What is happening to Jessica, she is feeling her mate's pain. Her arms are sore, her chest, stomach and legs all get pains. They've got him strung up and they are working him over. He's still alive, though, and not talking.\" \n\n\"How do you know?\" \n\n\"As long as they are beating him, he isn't cooperating. And if he dies... her mark will start to disappear. To a mated wolf, it feels like it is burning off from the inside. Very painful.\" I thought back to my two-minute mated life, it hurt like hell, even compared to all the wounds I had suffered in the fight and the rape. I couldn't imagine what it would be like for Jessica, who had been mated for six years and loved Carson deeply. I heard a scream from behind the door. \"I have to get back upstairs. If they have him in their cells, you'll never get him back. Bring the guys back before they find them.\" \n\nI took the stairs two at a time, my gut was twisting as I processed everything. Carson was a Pack Warrior, he was tough, and he was protecting his mate. He would die before he did anything to endanger her. \n\nI opened the door, Jessica was crying, her hand over her ribs on her left side. I rushed to her side to Teri's relief. \"Can't you give her anything for the pain,\" she asked. \n\n\"I have done what I can, we can't risk the baby's vitals being depressed further,\" I said. \"Can you massage her legs for me? They get cramps easily.\" It really wouldn't change anything, the pain she was feeling was not her own, but it would take both of their minds off it for a while. I checked her blood pressure, it was high, but not dangerously so. \n\nAfter an hour more of the seemingly random pain, Teri had left, and Jessica grabbed my hand. \"It's Carson, isn't it.\" \n\nI couldn't look her in the eyes and lie, no matter how much I wanted to. \"Snake called and said he hadn't returned from the Pack House, they haven't heard from him since he left Sheridan. The guys are checking, but they won't find anything.\" \n\nHer head fell back on the pillow, tears flowing from her eyes. \"They're torturing him, aren't they.\" \n\n\"Probably. I'm so sorry, Jessica. I never should have sent him for the blood, it was too much of a red flag to ask for it.\" \n\nI sat next to her, holding her hand until she fell asleep. Teri came in, holding a couple plates. \"I brought you lunch,\" she said as she handed me the sandwiches and chips. \"How long has she been out?\" \n\n\"Twenty minutes.\" \n\n\"Viper told me to tell you the guys didn't find him, they are coming home.\" Shit. \n\nSnake's POV \n\n\"Viper says to come home,\" I said as I hung up the phone. It was now almost dark, and still no sign of Carson. \n\n\"I can't leave a brother here, not like this,\" Stain said. \n\n\"I said that to him, he talked to Vivian.\" I really didn't want to say this now. \"She said he is being tortured, when they beat him, Jessica feels it.\" \n\n\"Fuck this, let's go get him,\" Dagger said. \n\n\"We'd be dead before we went a hundred yards past the gate,\" I said. \"They have too many people, it's suicide. We need some leverage, something to get the Alpha out in public where they can't wolf out.\" We sat on our bikes, trying to figure something out. A smile came to my face. \"I have to make a phone call.\" \n\nI moved into the lot, finding a quiet place with three bars of signal. I called the number for the Alpha. \"Josh,\" a gruff voice answered. \n\n\"Put Alpha Stanton on the line, boy.\" I heard a growl. \"Cut the attitude and get him. Tell him Alpha Killen wants to know where his blood is.\" \n\n\"Yes sir.\" The phone was put on hold, and two minutes later a gruff voice answered. \"This is Stanton, who the hell is this?\" \n\n\"Alpha Todd Killen. I paid you four grand for blood and I don't have it. Why.\" \n\nHe thought quickly. \"The man who came to pick it up, he was a relative of my Luna,\" he said smoothly. \"He decided to stay here for a day or two. He said the delivery wasn't urgent or anything.\" \n\n\"You LIE.\" \n\n\"So why do you care?\" \n\n\"The man is in my Pack and is mated to my sister. I will not be pleased if he is harmed in any way. Release him immediately, give him the blood he paid for, and we will be on our way.\" \n\n\"I can't do that.\" He started to laugh. \"You have some balls, Alpha, thinking YOU can threaten ME. No, I've got a different deal for you. Bring me Doctor Vivian DelMara, and you can have your man back. You have twenty-four hours.\" He hung up before I could say anything. \n\nI dropped the phone on the pavement, crushing it with my boot. Picking up the pieces, I tossed them in a garbage can before going back inside. \"Well, that didn't go as I had hoped,\" I said as I tossed some bills on the table. \"Drain it fast, we leave in two minutes.\" \n\nThe guys were up immediately. \"What's going on,\" Stain asked as we walked for the bathroom. \n\n\"They've got him, but they want DeWalt in return,\" I said. \"We've got twenty-four hours. Oh, and since we called from a cell phone, they might be able to figure out what neighborhood we're in.\" \n\n\"Shit,\" Dagger said. \n\n\"I know.\" \n\n\"No, I have to take a shit. It might be more than two minutes for me.\" I just laughed as I washed up. Stain and I had our bikes started when he came out after us. We pulled out onto the road; we would need to sleep, but we wouldn't do that anywhere near Sheridan. \n\nVivian's POV \n\nThe last hour had been tough on Jessica, the men were working on his back and ribs. She lifted her back off the table, breathing hard, before she dropped back down. When she did, I smelled blood. \"HELP!! TERI, ANYONE!\" I yelled through the closed door, hoping they would hear. \n\nThis was bad, we both smelled it, we both knew what it meant. I lifted the blanket, it was stained in blood, her underwear soaked in it already. \"Vivian... remember your promise. Save the baby. Name her Eve, care for her as your own.\" \n\n\"I will,\" I said as I pulled the tray over. The bleeding was getting worse, I had no time to do anything else. She screamed as I cut her stomach open with the scalpel. \n\n\"Tell Carson... I love him... I'm sorry,\" she said before she passed out. \n\n\"You'll tell him yourself,\" I said as I frantically worked to expose her uterus. I cut through, delivering her girl, clamping the cord in two places and cutting between it. I ran over to the incubator, placing her inside and turning it on. I opened the oxygen cylinder that fed the CPAP machine, getting the air flow started that would allow her to breathe. \n\nI'd keep an eye on her as I worked. \n\nGoing back to Jessica, I quickly clamped all the arteries leading to her uterus. The placenta was already detaching, I pulled it out and went to work. Teri rushed in. \"Oh God...\" \n\n\"Grab those bags of blood out of the fridge and hang them,\" I said. I kept clamping, using the suction to find the bleeders. I got a bag going, but it was too late. I looked over at the incubator, the baby was in distress. \n\nI dropped the clamps and went to the incubator instead. \"Teri, hold her hand, be with her,\" I said as I opened up the cover to get at Eve. She was struggling to breathe, I cleared her mouth and throat again, adjusting the settings to force a little more air in. Her chest wasn't that strong, it couldn't expand easily, and the machine helped with that. Once she was breathing better and her color improved, I wiped the blood and other fluids from her skin and connected the monitors I would need. By the time I was done, I knew Jessica was gone. \n\nTeri was sobbing loudly, her face next to Jessica's. I pulled off my gloves, walking over I closed her eyes and leaned over to kiss her forehead. \"Eve is beautiful,\" I told her, \"and she will be loved. I'm sorry I couldn't save you both,\" I said as I pulled the sheet over her. \n\nTeri was clinging to me, her clothes soaked with blood. \"Viper needs to know. Change out of those, extra scrubs are in the cabinet by the door, and go tell him.\" She nodded, leaving a minute later. I busied myself in cleaning up the mess, knowing that if I stopped doing something, I'd break down completely. \n\nI used towels to get most of the blood, putting them in a garbage bag from under the sink. I cleaned her body as best I could, placing her placenta back inside. I stitched her up quickly, just enough to hold everything until she could be burned. \n\nThere was a knock on the door, Viper asked to come in. He came to hug me, but I held him off. \"I'm a mess,\" I said. \"We need to clean her before anyone else sees her.\" \n\nWhile he went to the sink, I pulled off my scrubs and went into the small bathroom attached to the clinic. I quickly showered, the water red with her blood as I washed arterial spray out of my hair and face. My tears ran down with the colored water, my emotions threatening to crush me. I pushed them aside for now. Stepping out and quickly dressing in scrubs and canvas shoes, I walked back into the room. Viper had wiped down her body and was removing the soiled sheet from under her. I took out a mop, quickly cleaning the floor and washing the blood down the drain. When we were both ready, I opened a body bag on the floor and we set her into it. \n\n\"She didn't deserve this,\" I said as I zipped it up. \"I failed her.\" \n\nWe moved her back up onto the table, then Viper pulled me into a hug. \"You did what you could in a difficult circumstance, Vivian. You saved her child, just like she asked you to. Now, you care for her.\" \n\n\"Eve,\" I said. \"She named her Eve.\" \n\n\"She's beautiful,\" he said. \"Just like her mother.\" \n\nCh. 35 \n\nCarson's POV \n\nI focused on the drop of blood as it slowly moved down my nose. Starting from between my eyes where the men had hit me with a brass knuckle, it took twenty-two seconds for the drop to make it to the end of my nose. From there, as my head hung forward, it took another nine seconds before it dropped to the floor. \n\nI was rocking slowly back and forth, watching the pool of blood a foot below my bare toes. The last round of beatings had been a doozy, they had worked my legs and stomach with a baseball bat. My right leg was heavily bruised, the kneecap cracked. My left leg wasn't much better. All they wanted to know was where DeWalt was, they wanted her like a man in the desert wants water. I could smell their fear, their desperation, and I fed off it. There was no way in hell I was going to give them an answer that could lead back to my mate. \n\nI closed my eyes, remembering better times. The night she agreed to be my mate. Our first time making love. Watching her walk out of the surf in her bikini, the setting sun setting her blonde hair afire. I lost myself in the memories, ignoring the pain of my shoulders and legs as I thanked Luna for having her as my mate. \n\nThe moment was broken when the men came back in. \"Ready to talk yet?\" The Beta, a hulking and scarred man in his forties, came to stand in front of me. He grabbed my hair, pulling my head up to look at him. \n\nI'd saved the blood and spit in my mouth, and the stream hit him in the cheek. \"I'll talk about how I'm going to kill you,\" I said. \n\nHe wiped the pinkish slime from his face, a grin coming to his face. \"I was hoping you would say that,\" he said. One of his goons went to the winch on the wall, pressing a button to lower me until my toes just scraped the ground. \"Your legs and back workout is done, I thought we'd move on to chest and arms now,\" he said. \n\n\"I only work chest and arms on even days, you don't build muscle unless you give them time to recover. You'd think a steroid-rage, acne infested freak like you would know these things,\" I teased. \n\nHe wrapped his fists with tape, clearly enjoying this. \"The boss said we can't kill you yet, but we can make you wish for it,\" he said. He tossed the tape to the other goons. \"Just tell us where Doctor DelMara is at, and the pain ends.\" \n\n\"She's dead, she died six years ago when her clinic was attacked and firebombed.\" \n\n\"Don't lie.\" He started to work my exposed ribs, like a boxer working the bag. The heavy blows made it difficult to breathe, and I could feel the cracks as ribs broke under the assault. When the Beta tired, one of his men took over. They laughed as I was knocked around, taking their time, looking for spots that hadn't been hit yet, so they could hear new cracks. I grunted and grit my teeth, not willing to give them the satisfaction of knowing how much it hurt. \n\nI had just taken a shot to the kidneys, I think one of my vertebrae cracked from the hit, and I was swinging from the impact. Suddenly, I felt a sharp pain in my groin. I screamed in agony, trying to raise my legs, anything to ease the pain. \"What did you do,\" the Beta asked the man who was working me over. \n\n\"Nothing, I hadn't even hit him!\" \n\nThe pain went on for what seemed like forever, but probably was only a few minutes. The men who had been working me over stood back watching, wondering what it was that finally got me to scream in agony. When it was over, I slumped in the shackles, breathing painfully with my broken ribs, and sobbing. \n\n\"Ready to talk yet, Carson?\" \n\nMy head hung down, sweat and blood dripping down my face. \"Fuck you.\" \n\n\"I don't swing that way, but I'll ask around. With so few women left, it's becoming kind of popular.\" He walked out laughing, clapping the shoulders of one of the guys before the door closed and locked. They left me in the darkness, naked, bleeding, bones broken, hanging from my wrists. I prayed to Luna like I never had before. I prayed for my daughter, for her to be kept safe from Packs like this. I prayed for Vivian, that she would never become the mate of a vile man like this Beta. I prayed for Jessica, that she would be strong enough for our daughter when I don't return. Finally, I prayed for the strength to resist them and to die honorably. \n\nThe pain was intense, my neck and shoulder felt like it was on fire all of the sudden. I screamed in agony as it moved from deep inside, setting every nerve ending alight. I'd seen it before, I knew exactly what it was as I screamed my loss to the Moon herself. \n\nMy beloved Jessica was gone. \n\nDenise's POV \n\nI couldn't do anything without permission and an escort. \n\nAlpha Philip Stanton had me guarded like a prisoner with an escape record, even though with the mark and the baby belly there was no chance at that. I hated my life, but I loved the child within me. My baby was innocent of all this, he or she would kill me, but I would gladly die if he or she could live. \n\nI had been his mate for two years now. When our Pack was taken over, I and the other females were brought back to Wyoming to be \"redistributed\" as war spoils. My Charlie somehow escaped the battle, sparing me the indignity of being put onstage with the others to be picked from by the senior unmated in the group. \n\nInstead, I was forced into sexual service of the lower ranks, those who had no chance to have their own mate. I spent the first four years with a chain on my leg in a room with a shower, toilet and bed, the silver preventing me from fighting back. \n\nThen my Charlie died, my mark disappeared, and I was up for bidding. With my Beta blood, the Alpha took me as his next mate despite my age. Our first year I hadn't become pregnant, this year I had. \n\nNone of the males in this pack learned a damn thing year to year. Heats would come, they would get their women pregnant, the women would die. Instead of keeping their dicks in their pants, they would shuffle the deck- capture more women or kill mates of lower ranking women and take them- then start the whole thing over the next spring. And medical care? You'd think a Pack with people and resources would have doctors, nurses, lab staff and researchers devoted to finding a cure. They'd reach out to other Packs, creating a network of information exchange, an atmosphere of cooperation towards a common goal- finding a cure for this plague of death that threatens us all. \n\nNo, instead they killed the medical staff in a rage over lost mates, attacked other Packs, and then wondered why none of the women survived. I may be force mated, I may have hated the man before he took me as his, but I was no idiot. We were circling the toilet like a floating turd, soon to disappear from the world. ",
        "\"Good morning, Luna, how did you sleep?\" \n\n\"It was good, Lisandra.\" She was a sweet girl, twelve years old, and had been with me for the past year. A war prize, she was still too young to be mated, but that didn't mean the men weren't already jockeying for her when she became of age. She was a slip of a girl with brown curly hair and emerald eyes. \n\n\"The Alpha wants to see you at breakfast, Luna.\" She was already pulling out clothes from my closet, ones that had probably been used by the last three women he'd had in this bedroom. When they only last a year, not much of a point in having a big wardrobe. The dress was loose enough my belly was not obvious, I was twenty-three weeks along and already in the danger zone. She helped me get ready, then stayed to clean the bedroom and bathroom. \n\nI moved down the stairway carefully, making my way to the dining table where the senior members and their mates were already eating. \"Good morning, Denise,\" he said as he smiled at me. My insides flipped, the mate bond pulling me to be next to him even as my mind wanted to avoid it. \n\n\"Good morning, Alpha,\" I said as I sat next to him. His hand moved to my belly, rubbing it gently as the baby kicked back. \"Ow, that was a good one.\" \n\nHe smiled and made up a plate for me, making sure I had enough food for us both. \"My love, you remember Carson Patterson, don't you?\" \n\nMy heart sank as I nodded. \"Yes Alpha, he left our Pack with our medical assistant, Jessica, to go with Doctor DelMara and try to save our females.\" I looked at my plate. \"None of the women made it.\" \n\n\"No, no mothers survived, but the baby did. She survived until an idiot left her behind. That was six years ago, and if DelMara is still around, she probably knows more. That's why when a request for a specific blood type came along, from her old Internet ID, we had to act. Carson was the one who came to pick up the blood. I'm certain he knows where the Doctor is, and that she was the one needing the blood.\" I had kept quiet, but the news that the Alpha's daughter had survived childbirth had spread like wildfire in the Pack. \n\nHope started to spring up inside me, if I could talk Vivian into helping me, our baby had a chance. \"That's wonderful! Maybe we can do the same deal my old Pack did! Our women go with her, and she gives us medical care and a chance.\" \n\n\"That's not the deal. She's got, oh, twelve hours to turn herself over to us or Carson dies.\" \n\nI looked at the table. \"He won't do it, sir. Is he mate marked?\" The Beta nodded. \"Then Jessica is still alive, the blood is for her. Giving up Doctor DelMara is giving up on his mate and child. He'll gladly die first.\" \n\nThe Alpha's hand on my knee squeezed down until it was painful, he felt it and backed off. \"What do you suggest?\" \n\n\"Let me talk to him alone,\" I said. \"I've known him since he was a baby, he will trust me. More importantly, he will want me, my child to live. He may not tell you where she is, but he might take me with him. It's the only chance for you to have an heir, a future.\" \n\n\"I don't like it.\" \n\n\"You don't have to like it, but it's the only way. Let me at least talk to him.\" \n\nHe looked at his Beta, who shrugged his shoulders. \"She can't do any worse than we have, we've gotten nothing from him.\" \n\nHe stared his Beta down. \"Fine, but you and your men make sure he can't hurt her, and be right outside the room.\" \n\nThirty minutes later, I was following three very large men down a stairway to the cells. I was thankful I had put on warmer clothes, the cells were only about fifty degrees, same as the surrounding rock. They came to a stop in front of a door, the Beta entered and left the others with me. A few minutes later he was back out. \"He's strung up, his legs are shackled, and they are silver, so he can't hurt you. We'll be right outside, yell if you need help.\" \n\n\"He's a friend, he won't hurt me,\" I said. I walked past them, closing the door behind me. My stomach retched at the smell of blood, piss and sweat. The room was dimly lit. I could see him hanging from the ceiling, his toes barely touching the floor. His feet were shackled together by a short chain. \"Carson, it's Denise.\" I walked until I was right in front of him. \n\nHe took a sniff, then his head raised up. His face was swollen and bloody, his body no better. \"Beta Denise. Or should I say Luna, you've moved up in the world. Congratulations on your pregnancy.\" \n\n\"Pregnancy hasn't been congratulated since this plague started, Carson. It's a death sentence for mother and baby, unless Vivian is there to help.\" \n\nHe laughed. \"Vivian's dead,\" he said. \n\n\"No, she's not. She's with Jessica right now, she's the one who needs the blood. You need blood, I need her help. We can work a deal.\" \n\nHis eyes closed, he took a breath. All of the sudden, his legs kicked up, wrapping the chain around my neck as I was pulled to the floor. I couldn't talk, I couldn't warn anyone, the silver in the chain took away my ability to link. His legs wouldn't move, I didn't have the strength to move them aside. \"I'm sorry, Denise, but if your Alpha had given me the blood my Jessica might still be alive. He killed my mate, I'm killing his.\" \n\nI said a prayer to Luna, my burning fingers clutching at the chain that was choking the life out of me. I felt my body fight for air, my vision started to dim, then all turned black. \n\nCh. 36 \n\nI hovered over the incubator as the men came in to take Jessica's body away. She was cleaned, the CPAP machine was set to help her breathe and her vitals were in the normal range. She weighed just under a pound, her arms and legs skinny, her head so big for her body. The incubator kept her warm enough not to need a blanket, and the tubes and wires surrounded her tiny body. I was setting up to put a feeding tube in place, using a pediatric endoscope. \n\nI looked over at Viper as the men carried her out, and the tears started falling again. He pulled me into a hug as I pulled off the gloves and sand to the floor, he sat with me and held me as I fell apart. \"Jess...\" \n\n\"We will take care of her, burn her body tomorrow,\" he said. \"We have to get permits, Moose has a family farm that is remote enough to do it.\" \n\n\"I can't go,\" I said. Just to drive home the point, the alarm on the monitor for her vitals started going off. I stood to my feet, acknowledging the beep before washing my hands and putting gloves on again. \"The first 48 hours are the most dangerous, I have to be here.\" \n\n\"I know,\" he said as he kissed my forehead. \"I'll send help.\" \n\nHelp came in the form of the women of the club. They came through the door, working around me to finish cleaning and disinfecting the room after what had happened. They mostly let me concentrate, an occasional hug or a glance down at Eve as they worked. Teri knew what I needed, she had seen it before at the clinic with baby Jennifer. \"I'm setting up a rotation for an assistant,\" she said as she hugged me from behind, so I wouldn't have to look away from Eve. \"The exam table is set up for you to sleep on, one of us will always be here. You'll have to teach us, but you need your sleep too.\" \n\n\"Thank you,\" I said. The first time I had done this, Jessica was there, and I barely slept for three days. The girls all hugged me, telling me they would take care of Kelly, and help in any way they could. \n\nThe ones who stayed were Teri and her daughter Meghan, who had just turned twelve. She was a bright girl, well ahead of her level in school and eager to learn. She had started hanging around with me when we returned from Grenada. She reminded me a lot of Jessica in how she absorbed what I could teach her. She had been helping twice a week, and outside the clinic had completed her certification in CPR and First Aid through her Girl Scout troop. She wanted to be a doctor, to save people, to be an angel just like she had seen me after I saved her father on that back road, and I had promised to help her. \n\nI had already given baby Eve a course of antibiotics, infection being a real danger in a birth at this age. \"I need your help with a procedure, Meghan,\" I said as I went to the cabinet and removed the equipment I would need. \"We have to insert a feeding tube through the wall of her stomach. This will keep her mouth and nose clear, which helps with her breathing.\" \n\n\"A percutaneous endoscopic gastrosnomy?\" \n\nI just smiled. \"Someone has been studying.\" She nodded, smiling to herself that I had noticed. \"Scrub up, you are assisting. Teri, let's go over your part.\" I was going to be busy with the surgical procedure, so I gave Teri what she needed to know about the equipment monitoring her vitals and the CPAP machine. I had alarms set already and showed her how to adjust things if needed. \"Monitor only, if you see something deviating let me know.\" \n\nMeghan had put on a scrub top and was scrubbing up to her elbows in the sink, rinsing from the fingers to the elbow as I had taught her. After she dried on a sterile towel, I helped her put gloves on before I took her place. When we were both gloved up, I uncovered the tray of instruments and supplies we would be using. The endoscope was already set up, and everything was ready. \"Teri, I'm going to put her under for this.\" \n\n\"She's already asleep,\" Meghan said as she looked over. \n\n\"True, but I can't have her waking up.\" I pushed the sedative into her IV, watching her vitals carefully. When I was satisfied, I inserted the flexible endoscope through her mouth, working it down into her stomach as I watched on the monitor. \n\n\"Why this and not a normal feeding tube, and why now?\" \n\n\"She will need this long term, and this method leaves her mouth free of tubes that could interfere with her breathing. When she is stronger, nothing is in the way of her sucking motion as she learns to feed normally,\" I said as I reached the desired point. \"She needs the nutrients to grow, so doing it early is best. Teri, turn off the lights please.\" With things dimmed, the tiny light in the endoscope made it easy to see the point where Eve's stomach was closest to the skin, on her left side. I marked the point with a marker. \"Lights on.\" \n\nI took a hollow needle and carefully advanced it through the skin and into her stomach, watching as it came through. I moved it close to the camera, making sure the gripper wire on the endoscope was around the needle's end. \"Now for the wire,\" I said. I took the thin wire and passed it through the needle until the bent tip was visible. \"Meghan, tighten the grabber wire while I hold this in place.\" We watched as she caught the loop. \n\n\"Got it,\" she said. \n\n\"Carefully pull back the endoscope while I feed the wire. Don't pull, you ease it past any obstructions,\" I said. I watched as she pulled it back through the esophagus and out. Letting go of the wire, I picked up the feeding tube. A thin tube, it had a soft round bumper on the end. I hooked the wire through holes on the narrow end of the tube, twisting it and wrapping it with surgical tape. \"Now for the fun part. Guide the tube into her mouth until it disappears.\" She helped guide it as I went down to the needle, pulling gently on the wire to bring the tube down. When I felt the tube hit the needle, I increased the pressure, pulling the tube through the opening in her stomach wall and out the incision. When the bumper was seated against her stomach wall, I clamped then cut off the end of the tube and slipped on a bumper, rolling it until it was against her skin. I covered the whole area with a sterile bandage. \"Done!\" \n\n\"That was SO cool!\" Meghan was beaming, she loved it when she got to see things up close. I smiled as her mother hugged her from behind, she was proud of her. I had told her several times she had the interest and aptitude to be a doctor someday, and she was seeing it. \n\n\"Teri, I need eight ounces of formula prepared and put in the machine. The formula is on the counter over there.\" The two fixed it up, then loaded it into the feeding machine. I flushed the tubing before attaching it to the tube we had just installed. I set the feed rate, it would give her a continuous supply of food that wouldn't challenge her small stomach. Her vitals were good, the sedative already starting to wear off. \n\nThe days started to blur as we went through her first few weeks of life. I rarely left the room, sleeping on the exam table, showering in the attached bathroom. Snake became my primary backup, relieved by Teri, Meghan, Katie or Taser, always one of them in the room with me. The longest I was gone was when I was giving Kelly her checks in the room down the hall, and even then, I was nervous. I used a baby monitor to hear any problems immediately. She was doing well, her blood pressure was under control and between Viper and the girls, she was kept company. She even came in to see Eve once, in a wheelchair to her protests. \n\nThat little girl had the whole club behind her as she fought to live and grow. \n\nSnake was amazing, as always. He made sure I was fed, forced me to take naps, and quickly learned how to care for the premature baby Jessica had asked us to raise for her. She still couldn't leave the incubator, but that didn't stop him from being a doting father. He would hold her hand and talk to her when she was awake and tell her stories of her brave parents. \n\nCarson was dead, and we never got to give him a proper goodbye. Snake and the boys had returned, and after Church discussion, we decided retribution was too dangerous. Instead, we had Snake drive down to Chicago and call from a pay phone in the Geno's East pizzeria while he was waiting for our huge take-out order of deep dish. He reprised his Alpha routine, telling him that we would not meet his terms, and we would remember what he did to Carson. I was too busy to worry about revenge right now, and we had to focus on Eve. \n\nIt was eight weeks before she was strong enough to leave the incubator for a short time. I had a rocker brought in and put it next to the incubator. \"Shirt off,\" I told Snake as I opened the side access panel. His grandparents, Viper and Kelly, were in the room, a very pregnant Kelly in a wheelchair. \n\nEve had just been changed and was awake and active. I could smell how nervous Snake was as I carefully lifted her, Meghan next to me making sure the tubes and wires didn't get tangled. \n\nI had made Snake shower, so he smelled clean and fresh. His face showed his love and amazement as I moved her to his chest, rotating so her tummy was against his skin and her head was on his shoulder. He held her with one hand under her diaper, the other curled around her back as he gently rocked the chair. She snuggled in to his warmth as I covered them with a blanket, and he sung to her softly until she fell asleep. I was in tears, I couldn't ask for a better father. Meghan took some photos, along with a proud Grandpa. \n\n\"She's so beautiful,\" he said as I took her back from him and set her back in the incubator. There wasn't a dry eye in the house, and Kelly's hands were over her belly bump as her boy kicked her strongly. \n\n\"Tomorrow it's Grandma's turn,\" I said. Kelly only had four weeks left to reach thirty-eight, which was considered a full term. With her blood pressure starting to become difficult to control, her obstetrician wanted to perform a C-section at that point to be safe. Viper was crying more than anyone, the tough biker President persona crumbled when his tiny granddaughter looked at him with those big eyes. \n\n\"How long until the breathing mask goes away,\" Kelly asked. \n\n\"Another week or two, I've been reducing the overpressure as her chest gets stronger. We're also starting to work on oral feeding. If she continues her improvement, she'll be in a crib soon.\" \n\n\"Can I breastfeed her?\" \n\n\"After the first few days, when your milk comes in. Your body will adjust to the demand of feeding both children.\" She wasn't a werewolf, but human breast milk was better for Eve than formula. Kelly was insistent on raising the two babies together, and I was happy to have the help. \n\nWe talked a little longer, then Viper wheeled his wife out of the room. I sat in Snake's lap, letting him rock me as I kissed his chest. \"I love you,\" I said. \n\n\"I love you too. You're an amazing mother and doctor, Vivian.\" He kissed my hair. \"Sleep, I'll watch her.\" \n\nSo I did. \n\nCh. 37 \n\nOne month later \n\nViper's POV \n\nI held Kelly's hand as we sat in the doctor's examining room, her hand on her rounded belly. Doctor Catherine was looking through the examination notes we had brought, the files Vivian compiled in her daily monitoring were very complete. \"It must be nice having a Doctor as a daughter,\" she said as she looked over the notes. \"I'm glad you were monitored so closely, because the trend is clear. Tomorrow, you will hold your son.\" \n\nI started to tear up. \"Everything is good with him?\" \n\n\"The ultrasound results look good, I'm more concerned with the mother's blood pressure. The baby is fully developed, it's lower risk to deliver now than to risk complications for her. We can schedule a C-section first thing in the morning. The nurse will be in here after me, she will get you pre-registered and give you instructions for tonight.\" \n\nThe day was here, our boy was coming. I held her hand, smiling like a fool. \"We'll be there,\" I said. She left the room and Kelly looked at me, a little fear in her eyes. \"It's going to be fine,\" I told her as I pulled her to my chest. \n\n\"I'm scared.\" I kissed her hair. \"I'm scared something will go wrong. I'm scared I'm too old. I'm scared I won't be a good Mom. I'm...\" \n\n\"Going to be fine,\" I said. \"I love you, you're amazing, and our boy is the luckiest boy ever because of it. Now, I think we need to get you home and make sure you get a good night sleep.\" \n\n\"Yeah, like THAT will happen,\" she grumbled as I helped her up. \n\n\"There won't be much sleep after tonight, so let's give it a shot,\" I said. I helped her waddle out of the room. \"Keep wiggling your ass like that and you won't get much sleep,\" I teased. \n\n\"I'm heavily pregnant, my ankles are swollen, I've gained almost forty pounds and I'm hormonal,\" she said with a glare. \"How the hell does that get you excited?\" \n\n\"You forgot that the boobie fairie came.\" She smacked my shoulder. \"Fifty years from now, we'll be rocking on the front porch, teeth in jars by us, your boobs down by your lap, and you'll still be sexy as hell to me.\" \n\n\"Let's just get home, Viper.\" The elevator door opened and we got in. \"Fucking bikers.\" \n\n\"That's what got you pregnant, baby.\" \n\nSnake's POV \n\nI finished up the lunch prep for the day care and the Club members who were here. I turned everything off and did a quick cleanup. I had made up three plates in the warmer, today was sloppy joe's and chips with pickle wedges. I put them on a tray with some milk and carried it up the stairs to our room. I knocked on the door, and Meghan opened up. \"Done with school already?\" \n\n\"Of course, this homeschooling thing rocks. I'm a grade ahead of my peers, and I can get the whole week done by Wednesday. Mom said I could take another shift, so I gave Katie a break.\" \n\n\"How's my girl?\" \n\n\"She's sleeping,\" Vivian said from the rocking chair. I set the food down on the desk after Meghan moved her study materials and went over to see them. She pulled the blanket down a little, enough so I could see her face. She was on her bare chest, head just under her neck. \"She finished her bottle and was asleep as soon as I got the diaper changed.\" She was so much bigger now, still not as strong as if she had gone full term, but she no longer needed the assistance of machines. We had moved her into our room two weeks ago. \"You guys eat, then we'll trade off.\" \n\nI sat at the desk with Meghan. \"How is the studying?\" \n\n\"Good, I'm working my way through Freshman Chemistry now.\" Not high school chemistry, College. \"Having all of Jessica's books and notes is a big help.\" ",
        "\"I bet. Keep this up and you'll be attending college by your junior year in high school.\" She was such a gifted and hardworking student that she would meet high school graduation requirements in two years. The school district would then allow her to take college courses at their expense, which she fully intended to take advantage of. \n\n\"It's going to save me a lot of money on my pre-med courses,\" she said. \"Plus, having Doc here to help me is making it much easier.\" \n\n\"I'm thinking about becoming an assistant professor at a school here, work a deal where we can get Meghan free tuition in exchange for me teaching a class,\" Vivian said. \"I enjoyed teaching in Grenada.\" We finished our meals, and Meghan took the plates downstairs while I washed up. \n\nVivian passed Eve to me, and I took her place on the rocker before settling her against my chest. \"I got word from Viper, they are scheduling Kelly's C-section for the morning.\" \n\nVivian nodded, already thinking. \"She should be able to have visitors by dinnertime, then.\" \n\n\"We should go.\" She started to hesitate. \"We'll take a few Club members with, you'll be fine.\" \n\n\"I don't want to leave Eve, and I don't want to risk her being exposed to germs in the hospital either,\" she said. \"You go, I'll stay.\" \n\n\"I'll go in the afternoon, and you go after dinner,\" I said. \"I'll stay with Eve, and you can go with Hammer and Teri.\" \n\n\"I don't know if it's safe.\" \n\n\"We'll have a couple prospects drive you, they aren't going to be in a human hospital,\" I countered. \"You're her daughter, she'll want you to visit.\" \n\n\"FINE.\" Oh shit, the F-word feared by all married males. \"But I'm not going to stay long.\" \n\n\"We'll get you back here as soon as you're ready.\" I rocked my daughter as Vivian ate, enjoying every moment. \n\nThe next morning, I was setting up for lunch when a cheer went up in the bar area. I poked my head out, catching Teri's eye. \"Baby boy, named Andrew Carson, seven pounds two ounces, twenty-one inches, born at 8:14,\" she said with a smile. \n\n\"GREAT,\" I smiled, \"Can you tell Vivian for me?\" She nodded and went up the stairs while one of the prospects was lining up shots. What the hell, it was five o'clock somewhere. We toasted our President and his lady and slammed the tequila down. \n\nTeri came back down. \"It's all arranged, you go at 3:30 and when you get back, Hammer and I and the kids are going. We'll take DeWalt with us.\" \n\n\"And at least one other member, and have the prospects drive you,\" I said. \"She needs to feel safe or she'll never leave.\" She hadn't left the clubhouse, hell, she'd barely come downstairs since Eve was born. She needed to get out for her own sanity, and what better excuse than to meet her new little brother? \n\nVivian's POV \n\nTeri and the girls had stopped in through the day, showing me photos of baby Andrew and his parents. I was excited to go visit, but nervous to be leaving my baby behind. \"Go,\" Snake said as he changed her. \"We'll be fine.\" \n\nI leaned down and kissed her as he finished snapping up the outfit, it was my favorite with little wolves and sheep on it. \"Love you, little Eve,\" I said as she looked wide-eyed at me. I kissed Snake and walked out. \n\n\"Come ON, visiting hours start in twenty minutes!\" Teri was almost bouncing with excitement. Hammer poked his head in the door to say they were ready, and she gathered Meghan, Connor and Cash around her. \"Behave tonight, and we'll get a treat on the way home,\" she said as they filed out. I followed, Tiny behind me as he volunteered to be my bodyguard. Nobody was stupid enough to fuck with me with Tiny at my back. \n\nWe loaded into the SUV for the short ride to the hospital, and soon we were in the waiting room. Only two could go in at a time, so Teri and I went first. Kelly was sitting up in bed, Viper at her side, and little Andrew was feeding from her left breast. \"Oh my GOD he is cute!\" Teri rushed over, leaning down to see the little guy. \n\n\"Congratulations, Gramps,\" I said as I went on the other side of the bed and sat in his lap. \"He's beautiful.\" \n\n\"I'm blessed with a great family,\" he said as he gave me a hug. \n\nWhen Andrew was fed and burped, she handed him off to Viper. \"He needs to get used to this,\" she said as I leaned in to give her a hug. \"I'm doing good, he's doing good. I'm so glad I had you two around to help me through this.\" \n\n\"I'm happy too,\" I said. \"Our little babies get to grow up together.\" \n\n\"Yeah, and he'll beat the shit out of anyone who even looks at her funny,\" Viper said as he changed the diaper. \"Oh my GOD, what has he been eating?\" The smell was damn near driving me out of the room, and my wolf liked to roll around in deer poop and lick her own butt, so it was BAD. \n\n\"Boobie milk, it's good for you,\" she laughed. \"I read the book, I knew what was coming,\" she giggled. \n\n\"Jesus, it's like black tar.\" We carried on, talking about the C-section and what it felt like to have him in her arms. \n\nAll of the sudden, Tiny burst into the room. \"DeWalt, OUT NOW,\" he said as he pulled me out of the room. We were almost running out of the hospital, taking the stairs instead of waiting for the elevator. The prospect was waiting at the curb, Tiny damn near tossed me into the back and jumped in before we peeled out. The prospect in the passenger seat had his gun out, and Tiny had his hand on his. \n\nBefore we got halfway home, three Club members pulled U-turns, two escorting us from the front and one behind. We took random turns, cutting across lanes without warning, anything to throw off a tail. When they were satisfied, we pulled into the clubhouse garage, the door closing instantly. I almost ran up to our room, surprising Snake who was sleeping in the chair with Eve. \"What's going on?\" \n\nTiny knocked and came in, a piece of paper in his hand. \"Sheri had this guy in her bar, big dude, good looking. He was asking around if people had seen this person, said there was a ten-thousand-dollar reward if they could help him find her.\" He handed Snake the flyer as I looked over his shoulder. It was the portrait I had taken when I worked at the clinics up on the North Shore six years ago, with my old name. \n\nI brought the paper close to my nose, sniffing deeply. \"Werewolf.\" \n\nCh. 38 \n\nVivian's POV \n\n\"Church, ten minutes,\" Tiny said as he walked out of the room. \n\n\"We both need to be there,\" Snake said. \n\n\"I'll get the bag,\" I said as I moved over to the dresser where her stuff was. We had gotten the diaper bag as a gift, and so far hadn't used it because I was too nervous to leave our room. With everything she went through as a preemie, I hated the idea of placing her at risk for cold, germs or anything else. I made sure it had diaper supplies and a changing pad, just in case. \"When did she last feed?\" \n\n\"She had a bottle a half hour ago,\" he said as he picked her up. Setting her on the changing table, he swaddled her like a burrito before holding her in his left arm, tucked into the soft leather of his cut. He was an expert baby handler by now, and I smiled as I watched the macho biker turn into the doting papa. \"Ready?\" I nodded, pulling on my cut as we went out into the hallway, making our way downstairs. \n\nFor most motorcycle clubs, Church would only be for the patched members, not their old ladies or girlfriends. The Northwoods Riders were a little different, not holding to the outlaw culture some clubs stuck with. Patching in women was the first difference, if you could ride you could become a member, and have full voting rights. If you didn't ride, you still got a cut for being an Old Lady, but no vote. \n\nThis danger affected everyone, so two of the teen daughters took the kids into the theater room upstairs to watch a movie while all the adults stayed upstairs. As soon as we sat down, Rocket and Taser sat by us. Taser begged to hold Eve for a bit, and the look she gave Rocket while holding her was telling. That boy better make a baby with her soon. \n\nThe doors were locked, prospects ran around serving beer and drinks, and as soon as everyone was settled, Tiny was the Vice President, with the President and the Master at Arms at the hospital still, he called the meeting to order. \"As always, no one outside this room hears a bit of this,\" he started. \"Lives are at stake here.\" \n\nHis wife Katie passed around copies of the reward flyer that Sheri had been given at her bar. \"Alpha Stanton apparently does not believe that Vivian died six years ago in the attack on the clinic, and Carson died without giving him any information on her. If he had, they'd be at our door already.\" \n\nTiny picked it up. \"They must have figured out that she is hiding among humans, and so they are using humans to help them out. The only advantage we have is that Vivian hasn't left the clubhouse since she returned from Grenada. The fact that they still use her old name tells us her cover is holding for now. There's no telling how long that lasts, a simple internet search will find her marriage license.\" He looked over at me. \"DeWalt, tell us what this means.\" \n\n\"The paper had a werewolf's scent, so they have sent people here looking for me,\" I said. \"Probably pack warriors, with a Beta in charge. No telling if it is a couple of dozens, but I'd lean towards the latter. It would take way too long in a city this size with just a few people.\" \n\n\"So what will they do,\" Taser asked as she rocked Eve. \n\n\"Ask around like they are doing, hoping someone can point them in the right directions. Eventually, they'll just start patrolling the neighborhoods looking for my smell.\" \n\n\"But they don't know you,\" Moose said. \n\n\"No, but the know what a female smells like, and I'm the only one.\" Snake pulled me into his lap. \"In the werewolf world, there's a huge bounty on me. I have no doubt they'll do anything to get me, even if that means going through you to get me. My presence here puts you all in danger, your children...\" I buried my face in Snake's chest. \n\n\"We won't give you up,\" Moose said. \"You're family.\" \n\n\"I know,\" Snake said, \"But we have to be smart. There's people around, she's not safe here, Eve isn't safe here. Do you have any idea what will happen if they find out there is a female werewolf baby that has been born alive and lived? She'll be taken, Doc will be taken. There's no price they wouldn't pay if they think she can save their precious heirs.\" \n\n\"Where would be safe? Is there anywhere?\" \n\nI shook my head. \"I don't know,\" I said. \"Grenada was good because there weren't wolves there, six years we never smelled another.\" \n\n\"Well, go there,\" Crash said. \"We need you safe.\" \n\n\"That may not work,\" Tiny said. \"If they find out your name, it's too easy to track you there. In a small place like that, with no protection?\" \n\n\"I have no protection with Carson gone,\" I said. \"It's like it was down in Hilton Head. By the time I smelled the males, they already smelled me. The difference is that this time I'll have a baby with me. I can't fight, I can't run.\" \n\n\"So, the best thing is to hide out, somewhere remote enough they can't find you, but close enough so we can protect you?\" \n\nSnake nodded. \"Out of sight, out of smell. Private property, monitored, and a defensible position with clear fields of fire.\" I squeezed his hand on my waist, he always though clearly when facing danger. \"Outside the Metro area, no more than two hours away though. And the fewer people that know about it the better.\" \n\n\"So here's what we are going to do,\" Tiny said. \"We're going to get these two packed and their stuff loaded in one of the trucks. By the time we're done, I want a place to send them to. Everyone think about it, write it down, talk to relatives, whatever you need. Get the details to me and I'll pick the best idea.\" \n\nCrash and Viking, one of the members patched in after we had fled to Grenada, were the two picked to escort us to our new hideout. Viking's aunt and uncle ran a game farm on a thousand acres near Welch, just southeast of the Metro area. He made a call, the guest house was available and they were willing to help. \n\nElias and Agnes were a delightful older couple, and I instantly liked them. Viking trusted them, and they were let in on my secret because it was important they understand the risks. My shift shocked them, but they weren't scared of me, they were fascinated. \n\nThe house was small, two-bedroom with a single bath, but it was comfortable. The best part was the half mile to the nearest public road- and that was on the other side of a double 10-foot fence and locked gates. Viking stayed at the main house with his relatives, while Crash crashed with us in the second bedroom. \n\nThree days into our exile, I heard motorcycles coming up the long driveway to the house. I looked out, seeing the familiar faces of Hammer and Viper, behind them was Shakes, with Viking following them in his ATV. \"They're here,\" I told Snake as he came out of the bedroom with Eve. \n\n\"Good, I'm tired of hiding,\" he said. \n\n\"It's been three days, we were gone six years last time,\" I laughed as I went to the door. \n\nViper was first in, he picked me up and spun me as he hugged me tight. \"My girl,\" he said. \"I missed you, and Kelly misses you, and Andrew misses his aunt.\" \n\n\"He saw me once!\" \n\n\"What can I say, you made an impression,\" he said as I laughed. \n\n\"Hi Hammer,\" I said as I gave him a hug. \"Welcome Shakes.\" Shakes had been patched in last year. He was prior Army, Explosive Ordnance, tall and thin with a shaved head. He spent two tours in Iraq defusing roadside bombs before he developed a nervous twitch that ended his career. Sudden movements don't go well with improvised explosive devices. \"Have a seat, guys.\" I went to the fridge and grabbed beers for everyone before I was pulled down in Snake's lap. \n\n\"We've talked about the threat, guys.\" Viper looked at his hands before looking up at me. \"More guys are in town, we got a half-dozen calls from people who remember you from when you were riding with us. Doc DeWalt left an impression,\" he said with a smile. \"They aren't going away, they're getting closer. We've removed your stuff, cleaned your rooms, laundered your sheets and curtains, everything we can think of to remove your scent from the clubhouse, but we don't know if it's enough if they get close.\" \n\nHammer sat up a little. \"We think it's time to take the offensive here. If we play defense, they can go forever.\" \n\n\"What do you have in mind,\" Snake said. \n\n\"Ambush,\" Shakes said. \"We answer the pamphlet, give them a location and take them out when they go after you. We figure they will pull everyone in town together to go get you. We take them all out at once, teach them not to fuck with you.\" \n\nI thought about it for a while. \"They are wolves, they hunt by smell more than sight. Even if you use my clothes, they will scent all of you around. You can't ambush them if they know you are there. Plus, they won't come near unless they know I am there.\" \n\n\"I know,\" Viper said, \"That's why you'll be there.\" \n\n\"THE HELL SHE WILL!\" Snake jumped to his feet, his yell waking Eve up who started crying. I went into the bedroom to get her out of the crib, calming her down as I walked back in. I glared at Snake, who reached for her to calm her down. \"I mean, I don't think that is a good idea.\" \n\n\"I don't like it either, I don't want to put my daughter in danger, but Shake's plan depends on us bringing them all in close,\" Viper said. \n\n\"They have to see you, move in on your position,\" Shakes said. \"We'll set up cameras a few days ahead of time, long enough for our scent to dissipate. We'll be far enough away to come in behind them and make sure they don't escape.\" \n\n\"Wait a minute,\" I said. \"You are coming in after?\" \n\n\"Yes,\" Shakes said. \"I'll have a nice surprise for them.\" \n\nSheri's POV \n\nThree Days Later \n\nThe dinner rush was over, and we were catching up on cleaning and stocking before the night rush started. It was a decent crowd for a Thursday night, the Wild were in town and that helped with the late crowds. I was wiping down the bar when I saw Mr. Tall, Dark and Handsome walk in. He took a seat in a booth, and I went out and sat across from him. \"You have information for me?\" \n\nI nodded. \"Ten grand, and it's yours.\" \n\nHe laughed. \"I can't give you ten grand until I know the information is good.\" \n\n\"It's good. One of my girls recognized her, she's staying at a rental cabin out near Turtle Lake. Her mother owns the cabin, says she never leaves, she pays her extra to bring her groceries every week.\" I leaned forward. \"What did she do? Kill someone? Steal money?\" \n\n\"No, she ran away from her responsibilities, and my boss wants her back.\" \n\n\"So how do we do this?\" He shrugged. \"I have an idea. You follow me out to the land and verify she's there. You give me the cash, I take off, I never saw you and you were never here.\" \n\n\"Let's go then.\" \n\n\"Tomorrow morning, meet me outside at ten.\" He shook my hand and got up. I slumped in the booth after he walked out, glad it was over. \n\nFor now. \n\nCh. 39 \n\nSheri's POV \n\nI walked out of the back door of the bar, locking the door behind me at ten in the morning. I didn't know if they were following me, so I didn't go home last night. The couch in my office was good for more than quickies with Moose when I was working late. \n\nI turned around and almost bumped off of the big guy from last night, a matching goon like him on each side. \"Shit, you scared me,\" I said. I wasn't lying, they weren't here when I looked out the video camera and I didn't hear them approach while I was locking up. Moose would have been pissed, he was always after me to pay attention. He worried about someone attacking me in the late nights that I ran my bar. Of course, he was nowhere close now. \n\n\"Sorry, I didn't mean to frighten you,\" Mr. Tall, Dark and Handsome said. \"Are you ready?\" \n\n\"Let's see the cash first,\" I said. He pulled a bank envelope out of his pocket and showed it to me; it was a $10,000 bundle of hundreds. I flipped through them to make sure it was legit, then he put it back in his pocket. \"So how do we do this?\"  \n\n\"I'll ride with you, and these two will ride behind me. Once we verify she's where you say she is, I give you the envelope and you drive away.\" \n\n\"And we both forget we ever saw each other,\" I said. \"I don't need this getting back to me, my girl doesn't need to know I sold her Mom out. Try not to break anything, her Mom is nice, and I don't want to hear cops are looking into it. She needs to think Vivian just left.\" \n\nHe smiled as we reached my car, his buddies already gone. I was glad he didn't search me, I had a couple surprises for them if they decided to back out on the deal. I had a baby Glock 9mm in a Flashbang holster under my boobs, the loose button-up blouse easily covering it. I had full-size Glock in a holster under the seat, a pepper spray in my purse, and bear spray in my door. All my ammunition had a silver core; Moose had modified existing rounds and coated the silver with a layer of lead so even Vivian couldn't smell it. She told us the bullets would work as normal, with the added effect on werewolves that the silver would retard healing and prevent shifting. I didn't really want to test it. \n\nWe got on the road, driving east on I-94 into Wisconsin. We were in rolling forests, heading north on 63 towards Turtle Lake. He didn't say anything to me and I didn't feel like talking, so I just left the radio on KQRS and drove. His buddies were behind us, and I could have sworn I saw more than just them. I was a little nervous as we turned onto the county road that led to the remote cabin. \n\nThe cabin belonged to Hammer's cousin, and had been chosen because it wasn't your normal cabin. His cousin had been a masonry contractor, so the home was built of poured concrete with applied river rock facing. The roof was steel, as were both of the entry doors, and to prevent it from burning in a fire the windows all had steel shutters that could be locked in place from the inside. It was the very definition of a defensible position, sitting atop a small rise above a large pond, the forest no closer than fifty yards away from the garden. \"This is the driveway leading to the cabin,\" I said as we passed the fire sign. This area was well away from the lakes and rivers, so there weren't neighbors on the dirt and crushed rock trail leading in. I kept driving another half mile, then pulled over, the trail car stopping behind me. \"There is an ATV trail here that goes fairly close to the house.\" ",
        "He nodded and got out, going to talk to the other guys. One of them took off down the trail at a jog. \"He's going to verify she's here, if she is, we're done.\" \n\nI turned off the car and got out, making a show of stretching my body. He and the remaining guy were standing by the trail car while I walked around. We only waited ten minutes before the runner returned. \"She's there,\" he said. \"I saw her in the kitchen.\" \n\n\"Then our business is done,\" I said. He nodded, pulling the envelope out he handed it to me. I quickly checked it, then tossed it in the passenger seat of my car. \"Pleasure, boys. Don't ever stop in my bar again.\" I got in and drove away. \n\nI hope to hell my guys are ready for what's coming. \n\nSnake's POV \n\nI didn't like this, not one bit. \n\nWe were set up in a neighbor's cabin we had gotten permission to use. Twenty club members, all heavily armed with ATV's and vehicles, were standing by while we watched the cameras on the television. Mitch, a prospect who started the process two months ago after a few years as a hang-around, had set it all up. His day job was to set up alarm and surveillance systems for a local company, and had access to the latest wireless cameras. Sixteen of them were set up from the road all the way to the four sides of the cabin. \n\n\"Food's here,\" Crash said as he opened the door. Two of the prospects came in, carrying stacks of pizza boxes. The table was soon covered with them, and bottled water and Cokes were brought out of the fridge. I stared at the television in between times walking back and forth in the living room, watching the three men by the side of the road where Sheri had left them. \n\nMoose had met her outside town, taking her to lunch so she could settle down. She'd done what she needed to do, leading them to us. We had been here since early yesterday morning, and I was already sick of the wait. \"Eat some food,\" Viper yelled to everyone, \"And get some rest if you can. They might come in ten minutes, ten hours or ten days, and we need to be ready.\" He walked over to me and pulled me towards the table. \"You too. Vivian is fine, we've got a camera in there and Mitch has eyes on. A mouse can't move out there without being seen on camera.\" \n\n\"I'm not hungry,\" I said. \n\n\"I don't care, boy. Have some pizza, dammit, you're wearing a path in the damn floor.\" \n\nI nodded and walked over, taking a couple pieces of sausage and mushroom and a Coke. I sat next to Mitch, where I could see his computer screen with the sixteen cameras all on split screen. \"How do you know what to watch?\" \n\n\"I keep four screens up on the main screen all the time. The road where the men are, the front of the house, the back of the house, and the last one is set for any camera sensing motion.\" \n\nI chewed on the pizza, not really enjoying anything right now. I was feeling the same as I did in the Sandbox when we were waiting for the call to go into Kuwait; the knowledge of danger combined with the boredom of the unknown. I was just about done with the second piece when I saw motion on the camera. \"Cars approaching,\" I said out loud. \n\nThe noise stopped, and everyone gathered around the monitor. Four SUV's had pulled in behind the three men waiting. Mitch made the camera full screen as we watched. \"Too bad we don't have sound,\" Viper said. The doors opened, and I counted another sixteen men. \"Jesus, these guys aren't taking chances. Nineteen guys to bring back one female?\" \n\n\"Never go out in less than platoon strength,\" I said. \"Let's get her out of there.\" \n\n\"Too late,\" Mitch said. I looked back at the screen, the guys were tossing their clothes into the cars and shifting. Twenty seconds later, a pack of wolves was assembled at the edge of the road. They split into three squads, one moving back down the road towards the driveway, one to the ATV trail, and one cutting through the woods straight for the house. \n\nI grabbed the walkie-talkie. \"Vivian, they are coming. We counted nineteen, all in wolf form. Close it up and wait for the Calvary,\" I said. \n\n\"Got it.\" I watched the camera inside the house, she was going around closing and locking all the shutters and windows. The front and back doors had been left closed, sliding deadbolts in three places secured to keep them from being kicked in with werewolf strength. \n\n\"Load up, boys, we're going in behind them.\" Three men took off in a Jeep, heading for the vehicles they had left on the side of the road. They would disable them, which should be easy since the guys left the keys in there. \n\nThe cabin we were in was about a quarter mile away from Vivian's, and the wind was in our faces. We spread out, we were going to encircle them at a distance of about three hundred yards. We didn't want a fair fight, we wanted a bloodbath. Our hunting rifles and AR's were more than capable of putting down these mangy mutts. \n\n\"They are breaking into the clearing,\" Mitch said over the walkie-talkies. Viper, Hammer and I each had one, with an earpiece and microphone, so he could keep us up to date. \"They've stopped at the treeline, they are taking up positions to surround the house.\" \n\nI passed word along to the guys with me. \"Keep it quiet, we don't want to spook them until they get their surprise.\" I couldn't wait, Shakes couldn't either. He had laid out the charges yesterday, hiding them in flowerbeds at the base of the home. The eight charges were a marvel of improvised explosive engineering. Created from a foot-wide, eight-inch-high piece of curved steel plate, he had coated the convex side with a thin layer of homemade plastique explosive. Then he pressed real silver beads and buckshot, a small fortune worth, into the surface. Add a blasting cap, a thousand feet of wire and a handheld detonator, and he was a happy man. He explained that by putting a charge at each corner of the house, angled slightly up and out, he would catch anyone close to the house in a hailstorm of death. \n\nHe seemed so happy when he talked that way, he was a little different, but I'm glad he was on my side. We moved into position, the wolves well ahead of us had moved closer to the house. Shakes moved to his hide where his detonators were placed, and I crouched next to him. \"Close enough yet?\" \n\n\"No, they need to be between ten and thirty feet away from the house for maximum effect,\" he said. \n\nI pulled out my portable binoculars and scanned through the trees. The wolves were circled around the house, making escape impossible. The leader, the same one who had talked to Sheri, shifted to his human form and walked forward towards the cabin. \"Doctor DelMara, we know you're in there,\" he said. \"Come out quietly and you won't get hurt.\" \n\n\"Fuck you,\" she said. \"I'm not going anywhere with you.\" \n\n\"Fucking you is the whole idea,\" he laughed. \"You have been promised to me, and I fully intend to take you. Come quietly and we can do it in private, I'll make it nice for you. Resist and I'll claim you and fuck you on the picnic table in front of my men.\" \n\nI didn't know If I could wait. \"Can we do it now?\" \n\n\"No, the explosives will spread out too much at that distance. They need to be closer,\" Shakes said. \n\nThe other wolves stayed in place while the naked asshole walked to the door. Knocking three times, he stood there with his arms crossed. \"I'm starting to lose patience with you, dear. Surely you don't want to spend your honeymoon bent over a picnic table being spitroasted by me and one of my buddies.\" \n\n\"I don't do mercy fucks, and don't call me Shirley,\" she answered from inside. \n\nHe shook the door, finding it locked he stepped back and gave it a kick. That was a mistake, he must have damn near broken something. \"Damn, that's one good door,\" Mitch said over the radio. He backed up a few steps, running into it with his shoulder to no avail. He waved to someone, two wolves shifted to human form and walked up. Both were big and muscled, and they started taking turns trying to break down the door. The thuds of their impacts echoed through the woods, but so far it was holding. \n\n\"I don't know how much longer we can wait,\" I said. \"The door is strong, but it's already bending.\" \n\n\"Something is happening,\" Mitch said over the radio. \"Thirty, maybe forty wolves are coming in at high speed from the north.\" \n\n\"Stay back,\" Viper said, \"let's get them in close so Shakes can take them out.\" \n\nI watched as the wolves thundered into the clearing, taking the waiting wolves by surprise. The newly arriving wolves tore into the others with ferocity and skill, and soon the woods were filled with the sounds of injured and dying wolves. I kept my eyes on the three at the door, closest to my wife, as they shifted and joined the fray. Eight wolves quickly surrounded them and tore them to shreds. \"What the fuck,\" I said to Shakes. \"Be ready.\" \n\n\"I was born for this, Snake. They aren't close enough.\" \n\nThe howls and sounds of combat ceased, and a quiet came over the clearing again. We watched as the new wolves lined up a good thirty yards from the front porch, sitting down with their tongues lolling out. Their leader, the biggest wolf, was jet black. He shifted into human form, turning into a man of about thirty, looked like an NFL linebacker. He walked until he was about ten feet from the front door, then went down on one knee, his right fist over his heart. When he did, all his wolves laid on the ground with their heads bowed. \n\n\"Blessed One,\" he said, \"I am Gabriel, my men and I are at your service. These men, they are Alpha Stanton's?\" \n\n\"Yes,\" Vivian said from behind the door. \"They killed my sister's mate when he went to pick up blood from their Pack. He has no honor.\" \n\n\"Few do these days, Blessed One. His threats will be dealt with, harshly. If we can be of service to you again, just let us know.\" He drew something in the dirt. \"We thank Luna for your daughter, the Promised One. The Knights of the Moon have taken a sacred vow to protect you both. We will never be far away.\" With that, he shifted back into his wolf and howled into the sky. He started to trot back the way he came, his men all following him. \n\n\"Do I blow it?\" \n\n\"No... they aren't hostile,\" I told him. \n\n\"Dammit, Snake, I never get to have my fun.\" \n\nThe leader stopped, turning his head looking right at me. I froze, my hand gripping my rifle. He lowered his head, almost in a bow, then ran off into the wolves. A few seconds later, we were alone. \n\n\"What the HELL just happened?\" Viper's question was exactly what I was thinking, and I had no idea."
    ],
    "authorname": "partwolf",
    "tags": [
        "were",
        "werewolf",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-last-shewolf-ch-34-39"
}