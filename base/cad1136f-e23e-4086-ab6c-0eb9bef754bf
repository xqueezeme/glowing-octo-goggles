{
    "title": "Lilith's Emporium Pt. 05: Shadow of Nature",
    "pages": [
        "This story is the sequel to Love of Nature, however, reading some of the other Liliths Emporium stories could help you get an idea of what has changed in the shop since that chapter, including the introduction of Shadow who is an important part of this story chapter. Her origins can be found in the Night with Nessira series and also cameo appearances in others. Enjoy!\n\n*****\n\nIt had been months since everything that had happened with Joshua. Everyone was doing well and Shadow had developed beautifully and taken a human form of an attractive blonde girl so she could show herself in public more often.\n\nNessira was noticing how nice of a day it was when she decided to put out a beautiful little plant that she had been nursing for a while now. It had grown into full bloom and figured it was time to put it out and see what happened. She had it in a container for a while so its aroma would not leak out and cause any problems but she figured putting out for a few hours might get it sold.\n\nShe had been holding on to it since she had sold a similar plant to a young man named Kevin a while ago. His ashes had been used to make this one so she was curious as to what would come of this plant after finding a mate for it as she had very little experience with forest nymphs other than her daughter. Shadow, however, she had been corrupted by the sperm of an ancient dark creature which is what made her so different from normal forest Nymphs. She could kill someone easily just by making them cum which made her worried that she would have a very lonely life which is why Nessira began studying forest nymphs seeing if she could find a solution for her.\n\nThe scent coming from it was very arousing even for a succubus as she put it out in a little table near the front of the store. The flower looked beautiful but there was something inside it that was hard and ready to sprout out.\n\nShe didn't care at the time she had sold the first plant but things had changed a lot for Nessira since then. When Kevin had been sucked dry to bring life to that little Nymph she felt it was for the greater good but nowadays she was more about bringing people together. In her day someone dying in the thrawls of intense pleasure was considered a merciful act but since she now had Patrick and Shadow her heart felt differently about these matters. \n\nAs she studied the forest nymphs and their ways she had discovered something interesting about them. She wasn't sure what would happen but she was excited to sell this plant to someone to see what it would do to a female as she still enjoyed using human for sexual experiments as they usually enjoyed it despite how strange things got. Sometimes she would even try them on Patrick which he didn't argue with most of the time.\n\nShe stepped away and let the aroma of the flower fill the shop before she opened the front door and left it open letting the scent travel. She hoped it would attract a woman which as this plant was male and patiently waited for it to work as the smell was getting her a little hot and bothered herself. She sat there for a little while but the aroma was starting to get a little too strong for her.\n\nNessira stood there behind the counter almost getting annoyed that the scent hadn't attracted anyone yet and soon she couldn't contain herself much longer. She ran over and shut the door locking it and turning the sign to \"closed\" before she walked back over and began speaking a strange language before a portal opened up in front of her. She reached through and pulled something through which just so happened to be Patrick who was a bit confused by what had just happened.\n\n\"What the hell?\" He said looking around before he added: \"Ness, you can't just pull me away from work whenever you feel like it, and what the hell is that smell.\" He said referring to the aroma emanating from the plant. \"It stinks in here.\"\n\n\"I need you to fuck me right now!\"\n\n\"Oh, well okay then.\" He said as she took his hand and led him upstairs to her bedroom shutting the door behind her.\n\nNessira threw him down on the bed before climbing on top of him and pulling his clothes off frantically. Patrick wasn't sure what had gotten into her but he wasn't complaining as she snapped her fingers making her own clothes disappear before pressing her warm body against his. Her lips met his for a moment before she smiled and laid down on the bed next to him.\n\n\"Fuck me!\"\n\n\"Yes Ma'am,\" he said climbing on top of her.\n\n\"I want you to overpower me and fuck me hard, forget what I am and what you are and just fucking ravage me!\" She said in a loud voice.\n\nPatrick was a little confused but was definitely going to try his best. He grabbed her and slid her towards him before rolling her over. He positioned his throbbing cock behind her feeling her slit and teasing her a little. Without warning, he jammed his cock inside her before he grabbed her red hair and pulled her towards him. She let out a gasp before moaning a little as if she was enjoying how rough he was being.\n\n\"That's more like it.\" She said before he began to thrust his cock into her as hard as he could while she moaned out louder and louder.\n\nShe bent back down grabbing on to the metal headboard as he continued to fuck her from behind. The whole bed began to shake as it banged against the wall. He smacked her ass hard leaving his handprint on it as she yelled out her pleasure. He grabbed her hair again whipping her head back up against him as he reached around with his free hand and squeezed her breast harder than usual.\n\n\"Oh Fuck... YES!\" she yelled out.\n\n----\n\nShadow heard the commotion upstairs as she stepped out from the back room curious. She noticed the front door shut and locked with the sign turned to \"closed\" so she was wondering what had happened when she caught the aroma of the strange flower at the front of the store. She stepped out to get a closer look at the plant that was making her very horny at the moment as she turned and heard Nessira and Patrick upstairs moaning as they had their way with each other.\n\nShadow smiled to herself as she liked Patrick and enjoyed seeing Nessira so happy with him but her attention soon went back towards the plant and the scent it was giving off. As she got closer the smell got stronger and she started biting her lip as she was becoming more and more aroused the closer she got. The scent was strong and Shadow was having trouble controlling her urges before she opened the door and ran out into the woods near the shop.\n\nA few miles away a man named Jason was hiking along a path in the woods as he enjoyed it. He was very familiar with this trail and walked it often as he was a very active person and liked to stay in shape. \n\nShadow ran into the woods as she suddenly got Jason scent. She didn't like doing this but she needed to despite what her mother told her. It was his she survived and she would try to make sure Nessira didn't find it but it didn't always work out. The scent of that plant had driven her hormones crazy and she needed a mate right now.\n\nShe finally spotted Jason along the trail. He hadn't seen or heard her but she was good at that as hunting prey was second nature to her. She followed for a while hiding in the trees above until he got further into the forest. There was nobody around for miles and she knew this was the perfect time to strike as she jumped down and walked out if the bushes in front of him.\n\n\"Oh, hello there Miss. Are you alright?\" He said seeing this young woman standing there in a sundress and no shoes on. \"What happened to your shoes?\"\n\nShadow smiled as she walked closer to him breathing him in. She was already starting to affect him as she could see his cock grow in against his jeans. She loved the smell of erect penises and precum as she had an arousing effect on men that just made her happy. She didn't say anything before she slid her dress off her shoulders letting it fall to the ground as she stood there naked in front of him.\n\n\"Oh um, I uh...\" He said suddenly very nervous as she stepped towards him. \"Look, I uh.. I don't know what's going on here but um...\" He stopped as he suddenly was against a tree and she was pressed up against him.\n\n\"Do you not find me attractive?\"\n\n\"I do, it's just, this is a bit odd and...\"\n\n\"Stop thinking, just let it happen.\" She said as she pressed her lips to his for a moment taking in his flavor.\n\nMoments later she grabbed him and threw him to the ground before ripping his pants open and climbing onto his throbbing cock. He wasn't sure how this small girl was able to overpower him but he didn't care.his head became a bit fuzzy as this beautiful blonde woman was milking his cock between her legs. \n\nShadow liked to enjoy herself feeling as much pleasure as she could before she took what she needed from them. Unlike other forest nymphs, she didn't just take their fluids but their energy as well. She didn't really know what she was just that sex was a predatory thing for her and whomever she had she would take everything from them savoring every bit of them. Her innocent look was always key to her prey as they would immediately fall for her even though she had the ability to overpower them and take what she needed. The few who resisted would meet with a similar fate as those guards who attacked her the night she helped Nessira rescue Patrick.\n\nShadow could no longer hear the moans of her victim as she reached her climax quickly. There was a yell that caught her attention as she looked down and saw him squirming as her veins began to turn a glowing red color before spreading through him as well making his cock erupt inside her giving her all of his fluids and all of his vital energy until he dissolved completely feeling nothing but intense pleasure until the very end.\n\nShadow sat on the ground savoring her meal before a sadness came over her. Knowing what she was and what she did she still wanted a mate for herself. She looked at Patrick and Nessira and despite how much she loved them both she was always sad she would never have that kind of connection in her own life. She was dangerous and the pleasure she could give to any man or woman was fatal and she was struggling as she learned to live with that.\n\n------\n\nBack at the shop as Nessira and Patrick were laying in her bed both covered in sweat as pieces of clothing were scattered all about. Patrick laid there with Nessira laying her head against his stomach with blankets and sheets half on the floor and partially covering him and her as his cock twitched from multiple orgasms she had given him.\n\n\"Well... That was unexpected!\" He said between breaths.\n\n\"Sorry to pull you away from work.\"\n\n\"That's uh... Okay, family emergency I'll tell em.\"\n\n\"Well, I guess it was a bit of an emergency.\"\n\n\"Ha, so what brought this on? I'm not complaining but that was... Just wow!\"\n\n\"I was trying to sell a plant, but I think I underestimated how strong it's pollen was.\"\n\n\"I see, well maybe we should get more of them.\"\n\nShe leaned up and looked at him raising an eyebrow before she said: \"trust me, there are plenty of other ways for me to rock your world.\"\n\n\"Just you being you is all I need.\" He said leaning forward and kissing her.\n\nNessira was enjoying the taste of Patrick's lips when she heard the front door open downstairs. \"Shit! I thought I... Wait here.\" She said rolling out of bed and snapping her fingers before her red dress formed around her. \n\nWhen she got to the bottom of the steps she saw Shadow locking the door behind her before turning around a freezing as she saw Nessira there looking at her. Nessira suddenly realized she shouldn't have left the plant out with the door shut like that. She assumed the scent affected Shadow as well and felt stupid for not realizing that sooner.\n\n\"Did you feed?\" Nessira asked as Shadow dropped her head in shame.\n\n\"I'm sorry Mother.\"\n\nNessira walked over and wrapped her arms around her holding her for a moment. \"It's not your fault, I should have known better.\" She said pointing at the plant and creating a glass jar to cover it and suppress the scent. \"Why don't you go get yourself cleaned up okay?\"\n\n\"Yes, Mother.\" She said walking towards the back room.\n\n\"Shadow.\" \n\n\"Yes, Mother?\"\n\n\"I'm not angry with you.\"\n\nShadow let out a little smile before turning and continuing to the back. Nessira looked at the plant and felt so stupid think she should have known it would have effect Shadow the way it did. She looked over and saw Patrick coming down the stairs after he had gotten dressed again.\n\n\"Everything alright?\" He asked looking at Nessira.\n\n\"Yeah, just a foolish mistake that may have cost someone their life.\"\n\n\"Still no luck finding a way to help her?\"\n\n\"No, and it's getting frustrating, she has become so strong that every man she touches dies, mind you it's an amazing death but no spell I have can protect them anymore, she deserves better than that.\"\n\n\"You'll figure it out, I mean you've already done so many amazing things.\"\n\n\"Thank you, but the problem is I don't exactly know what she is, I mean I know what she was made from but the dark energy used in her creation is ancient and powerful so I don't know what she is really capable of, I don't even think she knows either.\"\n\n\"What about that friend of yours, the woman who gave her to you?\"\n\n\"I would rather keep her out of this, Shadow is my responsibility, she's my daughter and I will do whatever I have to do keep her safe.\"\n\n-------\n\nLater that evening Shadow was in her room which was much bigger and nicer than a bed in the back room of the shop. Nessira had used a spell to create a pocket universe in order to give Shadow her own space and a more normal life, or at least as normal as she could provide for her.\n\nNessira walked in to see Shadow laying on her bed wearing headphones. She walked over and sat down on the bed next to her as she opened her eyes and sat up a little surprised to see Nessira sitting there. Shadow liked to listen to music to detract her from the outside world. Her senses were so sharp she could hear things from miles away sometimes and she liked to have some peace which came in the form of music.\n\n\"How are you feeling?\" Nessira asked.\n\n\"I'm fine, just trying to block things out.\"\n\n\"Any bad dreams lately?\"\n\n\"Not since you made my new room.\"\n\n\"That's good, so who was he?\"\n\n\"Just some hiker.\"\n\n\"People go missing in the woods all the time, don't let it bother you.\"\n\n\"I try, they just taste and feel so good, I don't want to kill them but I can't help myself.\"\n\n\"I know, I should have been smarter but...\"\n\n\"I heard you and Patrick upstairs, that's what caught my attention.\"\n\n\"I'm sorry about that.\"\n\n\"Don't be, I like Patrick and how happy he makes you, what is it like?\"\n\n\"What do you mean?\"\n\n\"Having someone to love?\"\n\n\"It's, amazing, better than anything I deserve anyway.\"\n\n\"You aren't a bad person, you deserve to be happy Mother.\"\n\n\"And so do you, my dear, probably even more than me.\"\n\n\"I wish I could, but I am a predator.\"\n\n\"So am I though.\"\n\n\"But you found a way around it, you made those condoms and can fuck Patrick as much as you want\"\n\n\"Hey, language young lady!\"\n\n\"I'm sorry Mother, but I want a partner, I want someone who I can get close to without having to worry about killing them. I remember the faces of all of them, even those guards who tried hurt you, they haunt me.\"\n\n\"Shadow, I have more of a body count than you can imagine, and like you I remember them all, I have hurt many people in my life and I have had to learn to live with that, unfortunately you will have to as well but feeling that remorse is what makes you different from me, I learned it in time but you have always felt like this, that makes you a good-hearted person.\"\n\n\"Maybe it would be easier if I wasn't.\"\n\n\"Don't say that, don't ever think the darkness is the way, it only leads to more pain and suffering.\"\n\n\"I'm just, I'm lonely.\"\n\n\"I know you are, I am doing my best to find a way but we need to be patient,\"\n\n\"I know you are trying and I love you for that, but it would be easier if I knew just what the hell I am.\"\n\nNessira paused for a moment after hearing that remark before she said: \"You are my daughter, that's the only thing that matters to me.\" Nessira said before she kissed Shadow on the forehead. \"I love you, and I promise you we will figure this out someday.\"\n\n\"I know you will, I love you too.\"\n\n\"Now, get some sleep,\" Nessira said heading for the door.\n\n\"Mom?\"\n\n\"Yes?\"\n\n\"Who's Kevin?\"\n\n\"Excuse me?\"\n\n\"That plant, when I got close to it I heard a name, it was strange like it was in my head.\"\n\n\"Well, you know how forest nymphs are born right?\"\n\n\"Yes, by draining the fluids of a human.\"\n\n\"Kevin was one of my first customers a few years ago and, well he was killed in order to bring a forest nymph to life.\"\n\n\"So that plant?\"\n\n\"His ashes were used to fertilize it, his essence may still be in there but he is gone, it's the cycle of life for these creatures.\"\n\n\"I see...\" She said as she thought for a moment. \"Do you regret it?\"\n\n\"That one is hard because his death meant life for someone else, however, I did trick him so the guilt is still there, that is why I try to be more careful, but sometimes people need to die so that we can live.\"\n\n\"I understand that, all too well.\"\n\n\"Good night Shadow, sweet dreams,\" Nessira said shutting the door behind her.\n\nShadow laid in bed thinking about that name she had heard. She found it strange she would be able to read the flower like that and it didn't make much sense to her. If this Kevin was dead then how could she have heard his name?\n\nAfter a few hours she still couldn't sleep so she got out of bed and opened the door. The place was empty as Nessira was staying at Patrick's for the night which she did occasionally. Shadow didn't mind as it made her feel that Nessira trusted her to be alone which made her also feel a little guilty about what she was doing at the moment.\n\nShe looked around the storage room and saw the red flower under a glass jar in the corner. Nessira had taken it off the sales floor until she could find a way to either tone down its pollen output or at least make it so it didn't send them both into a horny frenzy again.\n\nAs she approached the flower she could sense anything but she assumed it had to do with the glass jar that surrounded it. Nessira was good with her magic so she knew it had to be pretty foolproof but she had a few tricks up her sleeve that she wanted to try. She had felt something very strange when she had encountered this plant earlier and she needed to know what it was.\n\nShe extended one of her claws sliding it under the base of the jar. She used her power to lift it as she seemed to be able to counter much of Nessiras spells with ease though she usually didn't out of respect for her mother. The scent was strong as it entered her nostrils but she tried to resist it as she examined the flower more. She heard that name again in her mind almost like a whisper which just seemed strange to her as she didn't understand why. She had met forest nymphs before but she had never seen one of their flowers before birth, especially a male one.\n\nShe reached her hand out to touch it when something strange began to happen. As she touched it her hand darkened returning to her natural state as the veins in her arm began to glow red again. It was a strange feeling but not unpleasant as she saw images in her mind. She saw a female forest nymph through the eyes of who she assumed was Kevin as she milked his cock sucking the life from him. She could feel the pleasure he had felt up until the moment he died and then she felt a strange feeling as the flower began to open up and extend a long stem out that looked similar to a certain male organ.\n\nShadow kept her hand on it for a moment feeling the warm shaft in her hand before she let go falling to the floor. She looked at the long green penis sticking out of the plant as the peddles had fallen away. It had started to turn black as the veins on it turned red similar to her. She stood back up watching it start to grow and expand even more as the pot it was in shattered and the base of the plant began to transform. The cock staid the same size but there seemed to be a body growing around it as it got larger and larger until there was a man standing there in front of her with dark skin just like her.",
        "He let out a yell of pain and confusion before falling to his knees with his hands around his head. She watched as his skin began to turn a more normal shade looking more human as he transformed into a regular looking male. She was confused and curious about what had just happened as he didn't look like a normal forest nymph before she reached out to place her hand on his shoulder.\n\n\"Ahh, what the, who... Where?\" He suddenly said sitting on the floor as he backed away from her confused and seemingly scared. \"Who are you, where am I?\"\n\n\"Please calm down, My name is Shadow, are you Kevin?\"\n\n\"Shadow? Where am I?\"\n\n\"You are in the storage room of Lilith's Emporium.\"\n\n\"Lilith's?\" He said as he looked around at all the strange artifacts \"This is where I bought that plant! Get away from me!\" He said standing up but stumbling back down to the floor.\n\n\"Please, I won't hurt you.\"\n\n\"That woman, she sold me a flower that changed into some sort of beautiful temptress before sucked me dry and killed me! How am I even here?\"\n\n\"I... Well, I think I brought you back to life somehow.\"\n\n\"What? This doesn't make any sense!\"\n\n\"Please try to relax, it's okay.\"\n\nKevin was still freaking out a bit but he tried to calm himself down. He took a deep breath as he looked over at the attractive blonde girl in the room with him. He was wondering how he got there and also why he was naked sitting on a cold floor.\n\n\"That's it, just relax,\" Shadow said moving a little closer to him.\n\n\"You said your name was Shadow?\" He asked still confused.\n\n\"Yes, and you are Kevin right?\"\n\n\"I uh, Yeah.\"\n\n\"Come with me Kevin,\" she said holding her hand out. \"I'll get you a blanket.\n\nKevin was still confused and a little panicked but he took this woman's hand as she helped him up and led him into her bedroom. He looked around at everything as she seemed to have a lot of strange artifacts in there. The only things that seemed normal were the bed and the Television on her dresser.\n\n\"Here you go,\" she said wrapping a large blanket around him. \"Please sit.\"\n\nKevin sat down on the bed as Shadow sat down next to him. The blanket was soft and warmed him up nicely but he was still in shock about everything that had happened and on top of everything he had an erection that was difficult to hide and didn't seem to want to go away.\n\n\"So um, How did a lovely woman like you end up with a name like Shadow?\"\n\n\"Do you not like my name?\"\n\n\"No no, its just a Shadow's are dark and you seem bright and um...\"\n\nShadow tilted her head wondering what he was thinking but when she realized he wasn't going to say more she said: \"What kind of a name is Kevin?\"\n\n\"Oh, I was named after my Grandfather.\"\n\n\"I see, I was named by my mother Nessira, and I like my name.\"\n\n\"That's fine, just never met someone named Shadow before but I like it.\"\n\n\"Thank you.\"\n\n\"So can you tell me what happened to me?\"\n\n\"I don't know, you had been used to birth a forest nymph and should have just been ashes with nothing of your former self attached to them, but I could feel your presence still inside, when I touched the plant it seemed to react to me before it grew and you appeared.\"\n\n\"This is all a little strange to me, I thought I was dead.\"\n\n\"You were, but do you wish you still were?\"\n\n\"No, I guess I am happy to be back just, I feel strange.\"\n\n\"How so?\"\n\n\"I'm not sure, I just don't feel quite myself.\"\n\n\"You don't smell human, and you don't smell like a normal forest nymph either.\"\n\n\"Great, so what am I?\"\n\n\"I don't know exactly but, I will help you find out if you want?\"\n\n\"I honestly don't know what I want, I don't know what I am or even how long I've been gone.\"\n\n\"I believe it's been a few years,\"\n\n\"Great, so now I have no home, no job, I don't know what to do!\" He said as the gravity of the situation hit him.\n\nShadow placed her hand in his trying to comfort him. He felt strange to her and she wasn't exactly sure why. She didn't look at him as if he was prey like most men. He was different and special and she wondered if she had somehow transferred her powers to the plant making him what he was. Another thought crossed her mind as well as she noticed the erection sticking out from the blanket.\n\nKevin noticed her looking down at his cock as he quickly covered it with the blanket and said: \"Oh, ah sorry, doesn't seem to want to stop.\" As he felt embarrassed.\n\n\"Maybe I can help if you want?\" She said as her hand slid under the blanket and she gently stroke his penis. \n\nKevin enjoyed it for a moment before he pulled away getting off the bed and saying: \"Woah Woah, wait a minute, this is just um... Just give me a moment.\"\n\n\"What's wrong, do you not want me?\"\n\n\"No, I do, I mean you are very... it's just I... The last time I was with a beautiful woman I sort of died so I'm just a little um...\"\n\nShadow stood up and removed her nighty letting it fall to the floor. Kevin looked her up and down and couldn't help but find her extremely attractive. She was petite but not in an unhealthy looking way, her breasts seemed plump and nicely shaped and her skin seemed milky without a blemish he could see.\n\n\"Well, you do make a persuasive argument.\" He said as she stepped forward and kissed him again.\n\n\"I um, but may I ask why?\"\n\n\"What do you mean?\"\n\n\"I mean um... Do you always want to have sex with people you accidentally bring back to life?\"\n\n\"You are the first.\"\n\n\"I see, well I guess I'm honored?\" He said before she pressed her lips.\n\nKevin couldn't help himself as she wiggled her tongue into his mouth. She tasted sweet as his hands grabbed her waist feeling her very soft skin. She wrapped her arms around his neck pulling him closer before they fell onto her bed. She wrapped her legs around him as they continued to taste each other.\n\nShadow could sense something about him that attracted her. She had this feeling deep down that he would not suffer the same fate as the others as he seemed to be similar to her. She began to wonder if she was more or less hoping but soon her instincts began to kick in and shouldn't couldn't have stopped even if she wanted to.\n\nKevin was so confused by everything and not even sure if this was all real. He began to wonder if he was in heaven or maybe even hell but there was this beautiful yet strange woman here helping him and now wanted to have sex with him. He was nervous thinking he would suffer the same fate that he had before but he also realized that he had been dead for a while so would it really matter if he died again?\n\nHe opened his eyes and looked down at the beautiful woman beneath him as she smiled and rolled him over. She was stronger than she looked and had an innocent look to her that seemed to hide something more sinister underneath. She began to rub herself against his throbbing erection as he felt her juices start to drip down along his shaft getting him lubricated before lowering herself on to him.\n\nShadow let out a shocked gasp as she had never had a cock this thick inside her before. She smiled and bit her bottom lip before she began to move her hips gently milking him. Kevin pulled himself towards her kissing her neck before working his way down to her breasts. Her skin tasted amazing as he sucked on her nipples and ran his hand along her back feeling her warmth. \n\nThe pleasure they were experiencing together was intense as it grew between them. They both felt a connection to each other as the continued to fuck. There was some sort of invisible or even magical force that was surrounding them that made him want her even more despite knowing nothing about her or even what she was. This same sensation made her feel closer to him as well as she moved her hips harder enjoying every part of this experience.\n\nBoth of them began to feel a little strange as the veins in their bodies began to glow bright red. Whatever she had done to bring him back to life had done what she thought it had. She looked him over as his eyes began to change turning a yellowish color and she knew he was now like her, maybe the only one in existence which just got her even more excited.\n\nKevin saw the strange things happening to him but he didn't care. The only thing on his mind was Shadow and the pleasure they were sharing as she moved faster letting out little whines as their lips met again. Their skin began to darkened and he began to look like he did when he first emerged. Shadow also shed her human form as the two of them continued to fuck each other like wild animals making the bed shake violently banging against the wall. Both of them grew two long horns as they occasionally clicked together before she noticed his curled back as hers were more straight.\n\nShadow was one of a kind and had somehow made herself a mate from the ashes of a forest nymph victim. She began to question her own powers and what she was truly capable of. Deep down it even frightened her a little but she was too caught up in the moment to let it bother her even for a second. \n\nHer tail curled around towards him as she was going to wrap it around the base of his cock until she noticed he had a tail as well. She wiggled it towards him and he did the same as they wrapped around each other before a light appeared at the base of both their spines traveling down towards the tips. Shadow had used this before as she had the ability to make men cum by wrapping her tail around their cock and using this energy to suck the life from them. As their energies met they both let out a yell as their bodies were rocked by an explosion of ecstasy at the same time.\n\nShadow dug her claws into his back before shrieking into the air as she felt his cock swell before exploding inside her sending her into an orgasmic frenzy that was stronger than anything she had felt before. Kevin held her tightly as his cock squirted harder than he thought possible not caring about what they had both changed into as the pleasure rocked their bodies. He let out his own scream as they clenched each other holding themselves together before the sensation finally calmed down.\n\nKevin rested his head against her chest as he could hear her heartbeat while she struggled to catch her breath. Shadow was holding him against her as a tear rolled down her cheek. She was so happy that this man was able to survive her and it filled her with hope. She had found someone whom she was able to share an amazing sexual experience with without the guilt of destroying them. She held him tight and didn't want to let go.\n\n\"I like you.\" She said still hugging his head holding him against her chest as they both started to return to there human forms.\n\n\"I... I don't know what I am, or what I've become, but whatever it is, I think there's some sort of connection between us.\" \n\n\"I think you're right, can I keep you?\"\n\n\"I have no place to go anyway, but even if I did, I don't want to be away from you.\" He said looking up at her as she pressed her lips to his before they both fell back against the mattress together still in a loving embrace before they closed their eyes and fell asleep."
    ],
    "authorname": "maestro84",
    "tags": [
        "plant",
        "succubus",
        "forest nymph",
        "sucking",
        "draining fluids",
        "magic",
        "plant penis",
        "transformation"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-love-of-nature-ch-02"
}