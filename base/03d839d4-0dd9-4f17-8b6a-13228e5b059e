{
    "title": "Hermaphrodite Ch. 02",
    "pages": [
        "Hermaphrodite Ch 02\n\nBy TxRad\n\nJanet had the washer started when the phone rang. She hurried into the living room and answered it. \"Hello,\" she said.\n\n\"Good morning, good looking,\" she heard Luke say.\n\n\"I'm sorry sir but you have the wrong number. There is no good looking here,\" she shot back.\n\nLuke chuckled and said, \"In my mind, you are running around naked in all your glory.\"\n\nJanet sighed. \"I just put our shorts in the wash.\"\n\n\"But are you naked?\" Luke asked. \"My mom left for work a few minutes ago and I'm laid up on the couch with everything hanging out.\"\n\nJanet laughed. \"I'm hanging out also.\"\n\n\"Alright!\" Luke said and then asked, \"When are we going shopping for you a bikini?\"\n\nJanet sighed and said, \"I asked my mom about swimsuits last night and she gave me the lifted eyebrow look.\"\n\n\"Ah yes, I know that look very well,\" Luke replied. \"I got it from my mom when I mentioned teaching you to swim.\" He paused a moment and then asked, \"What did your mom have to say?\"\n\n\"She gave me the name and address of a shop that specializes in swimwear for women with dicks.\"\n\n\"Uh, what?\" Luke said in confusion.\n\nJanet laughed and replied, \"You are so sheltered, it's not funny.\"\n\nWhen he didn't say anything, she sighed and said, \"Pick me up in about an hour.\"\n\n\"That sounds good to me,\" Luke said.\n\n*****\n\nJanet was grinning as she watched Luke back out of his driveway and drive the hundred feet to pull into hers. She let him come to a stop before she opened the front door and went outside. She could see him sitting behind the wheel with his eyes wide and his mouth hanging open.\n\nAs she opened the passenger door, she asked, \"What's your problem?\"\n\nHe shook his head and groaned. \"You're wearing a dress.\"\n\n\"Actually it is a skirt and blouse,\" she replied. \"Anyway, why shouldn't I wear a dress, I'm a girl.\"\n\n\"Yeah, but I've never seen you in one.\"\n\nJanet took her time getting in the car. She let the skirt ride up more than she normally would just to tease Luke. As she got settled, she pulled the skirt down and buckled her seatbelt. \"I'm ready when you are,\" she said smiling at her best friend.\n\n\"Uh, yeah,\" Luke replied as he pulled his eyes away from Janet's legs and looked around as he prepared to back out of the driveway. \"This is weird,\" he whispered as the car moved backwards.\n\n\"What's weird about a guy and his girl going shopping?\" Janet asked.\n\n\"Seeing you in a dress instead of sloppy sweat shirts and pants or shorts, for one and knowing what's under that skirt for another,\" he replied as he stopped and put the car in forward.\n\n\"What's weird about me having a bra and panties on under this outfit?\" Janet asked with a grin.\n\nLuke glanced her way and groaned. He looked back at the road and sighed deeply. \"You damned well know what I mean.\"\n\nJanet chuckled. \"So you're starting to come to grips with my problem.\"\n\n\"Grips for both of us is a good way to put it after that shower yesterday.\"\n\n\"Yeah, that opened my eyes to just how good other peoples hands can feel.\"\n\nLuke grinned. \"Not to mention tongues.\"\n\nJanet groaned and nodded as her mind ran over the feelings his tongue on her sensitive spot had given her. \"Talk about your mind blowing moments.\"\n\nLuke chewed on the inside of his cheek for a second as he stopped at the stop sign at the end of the street. \"Uh, I have a question. I got to thinking back over things last night and realized you don't have balls.\"\n\nJanet sighed and said, \"But I do, they are just small and inside.\"\n\n\"Oh, that makes sense, I guess,\" I said and then looked her way. \"Where to?\" He asked.\n\n\"Oh yeah, the old mall on the south side of town.\"\n\n\"Your wish is my command,\" Luke said with a wink as he pulled away from the stop sign.\n\n*****\n\nThe sign above the door said, 'Gay Apparel.'\n\n\"Transgender?\" Luke said.\n\n\"And cross dressers, from what mom said.\"\n\n\"Cross dressers?\" Luke said but Janet was going into the shop. He quickly followed her inside.\n\n\"Welcome, I'm Jenny, how can I help you?\" The tall brunet behind a counter said cordially as she looked back and forth between the two young people.\n\nJanet took a deep breath and asked, \"Do you have bikinis for ladies with, uh, extra equipment?\"\n\nJenny smiled and said, \"We have everything for a lady with extras and most everything for men who want to be ladies.\" At the end, her eyes went to Luke. \"You could be such a cutie.\"\n\n\"I, uh, I,\" Luke stammered and Janet shook her head.\n\n\"He's just fine the way he is,\" she said with a wink.\n\n\"Yes, he is,\" Jenny said with a wink back as she turned to walk to the end of the counter. \"Bikinis and underwear in general are back here,\" she added as she started across the room.\n\nJanet followed her and Luke brought up the rear. He was watching Jenny very closely. She had on a beautiful light blue pantsuit but something seemed odd to him. As they stopped next to a rack of bikinis, he realized it was her gait. It was manly.\n\nHe wanted to ask Janet about Jenny but he didn't want Jenny to hear the question. She was standing right next to Janet as Janet looked through the rack of swimsuits.\n\nJanet held one up and looked it over. To Luke, it looked like any other bikini and then he noted that the front of the bottoms seemed to have more material in the front. Most bikinis he had seen on display at stores were flat in front.\n\n\"What do you think?\" Janet asked looking around at him.\n\n\"Black is a good color,\" he replied.\n\n\"Black has a tendency to hide things,\" Jenny said with a grin. \"It has to do with shadows and depth perception.\"\n\nLuke's eyes went to the cleavage showing at the top of Jenny's shirt, which was about eye level with him. \"Depth perception,\" he muttered to himself.\n\nJanet gave him a funny look as she turned to see what he was staring at. She grinned as she reached out and turned his head toward her. \"It is not polite to stare,\" she whispered.\n\nJenny chuckled. \"I was finding his staring quite, uh, interesting.\"\n\n\"Lets just say, he is not all that educated about transgender and cross dressers.\"\n\nJenny grinned at Luke and said, \"I'm transgender. I have breasts and I have a dick but one day, I hope to be able to get rid of it.\"\n\nLuke's eyes grew wide. \"Get rid of it,\" he said and shivered hard.\n\nJenny laughed. \"A very common reaction from a true male.\"\n\n\"Tell him what you want to replace it with,\" Janet prompted.\n\n\"A pussy,\" Jenny said with a wink at Luke.\n\n\"Then you would be a girl,\" Luke said quickly.\n\n\"As far as I'm concerned, I'm a girl already. In my mind anyway and that's what counts to me,\" Jenny replied.\n\n\"Okay,\" Luke said and looked at Janet. \"More things to wrap my mind around.\"\n\nJenny looked at Janet. \"I thought you were trans?\"\n\nJanet shook her head. \"I'm even more complicated. I'm a Hermaphrodite.\"\n\nNow it was time for Jenny's eyes to grow wide and her mouth dropped open. Her mouth moved but nothing came out for several seconds. Finally she got out, \"Hermaphrodite? Darling, you are the unicorn of the trans world.\"\n\nJanet laughed. \"I hadn't thought of it that way.\"\n\nJenny sighed and whispered, \"What if everyone was like you. It would solve so many problems. No problems with gender identity. No problems of having the wrong equipment.\"\n\n\"If you knew half the problems it had caused her, you might not say that,\" Luke said quickly.\n\n\"Point of view,\" Janet told him. \"Jenny has her own set of problems.\"\n\n\"I think I understand that but....\" He paused and sighed. \"Yeah, I can understand that. I experienced the bullying back in school so I know how people are when a person is different.\"\n\nJanet patted Luke on the arm. \"I've gotten you into a world that you are not familiar with.\"\n\nLuke chuckled. \"I'm learning fast.\"\n\nJenny said, \"There is a changing room over in the corner if you want to try the suit on.\"\n\n\"Yes I would,\" Janet replied and looked at Luke. \"You behave while I'm gone.\"\n\n\"Who me?\" Luke said with a grin as he glanced at Jenny.\n\n\"Don't look at me,\" Jenny said. \"You're taken and I have my boundaries.\"\n\nJanet winked at Jenny before she headed for the dressing room.\n\n*****\n\nTwo customers came in and Jenny went to see to them. Luke wandered over next to the dressing room. \"How does it fit?\" He asked through the curtain.\n\n\"The top is a little small and the bottoms covers everything but....\" Janet replied and then sighed as she opened the curtain.\n\nLuke let out a soft wolf whistle and grinned. \"Beautiful, just beautiful.\"\n\nAn older man looking through a rack of skirts behind Luke looked at Janet and grinned. \"Yes, she is.\"\n\nJenny walked over, had Janet turn around, and then had her face forward again. \"Maybe a size larger for the top and you need to do a tuck on bottom. Otherwise it looks good on you.\"\n\n\"Uh, a tuck?\" Janet asked.\n\n\"The dangly bits are pulled down between you upper thighs,\" the older man said.\n\n\"I, uh, had never thought about that,\" Janet said as she hurried back into the changing room and closed the curtain.\n\n\"With a good tuck, she might be able to wear a regular bikini,\" Jenny said to Luke.\n\nThe older man sighed, as he looked a skirt over. \"My balls are much to big to tuck very well.\"\n\n\"She doesn't have that problem,\" Luke said and then groaned softly. It wasn't his place to let information like that out.\n\nJanet opened the curtain and stepped out. There was a bunch of loose material in the front of the suit. \"This feels weird but,\" Janet said as she wiggled her hips from side to side.\n\nJenny went over to the bikini rack and came back with a bigger top and a bottom with a smaller front. \"Here, try these.\"\n\nJanet disappeared back into the changing room.\n\n\"That tuck thing won't hurt anything will it?\" Luke asked.\n\nJenny chuckled. \"With balls it can get painful if you squeeze things too hard but in her case that is not a problem.\"\n\nThe older man looked confused and asked, \"Uh, what happened to her balls.\"\n\nJenny looked at him and lifted her eyebrows. \"You will have to ask her. You know how things work.\"\n\n\"Uh, sorry,\" the man said and held the skirt out toward Jenny. \"I think I want this one.\"\n\n\"You don't want to try it on?\" Jenny asked.\n\n\"I have two just like it but in different colors.\"\n\nJenny nodded as she took the skirt and they went to the register.\n\nLuke watched them out of the corner of his eye as the man paid for the skirt and Jenny came back over to stand next to him. He looked up at her and said, \"I, uh, have a question but I don't know the etiquette about asking one.\"\n\nJenny smiled. \"Ask and I'll either answer or tell you it is none of your business. We're a rather tight community among the straights but fairly open among ourselves. Since you're with Janet, I'm assuming you are part of us.\"\n\nJanet opened the curtain and stepped out. \"What kind of trouble is he starting now?\"\n\nJenny grinned and nodded. \"So much better,\" she said and then answered her question. \"He's curious and had a question.\"\n\nJanet shook her head. \"If you only knew some of the questions he's come up with.\"\n\nLuke was standing there with his mouth slightly open. A moment later, her whispered, \"Holy shit, you look better in a bikini than anyone I've ever seen.\"\n\n\"She has the figure for it,\" Jenny said softly.\n\n\"You guys are going to make me blush,\" Janet said with a grin.\n\n\"Yeah, right,\" Luke said, returning her grin.\n\n\"What's your question?\" Jenny prompted.\n\n\"Uh, the guy with the skirt. Is he a cross dresser?\"\n\nJenny smiled. \"Yes, he is and so is his significant other.\"\n\n\"Significant other? Another guy?\" Luke asked.\n\nJenny chuckled. \"No, his wife, who is female. She loves to dress up in his clothes. They make a cute couple either way.\"\n\n\"Strange,\" Luke whispered.\n\nJanet shook her head. \"Not strange, just different. Everyone has their own ideas of what they like and theirs is cross dressing.\"\n\nJenny nodded at what Janet said and asked, \"Can I help you with anything else.\"\n\n\"This is all I need at the present,\" she replied and then winked at Jenny. \"But Luke might want to look around.\"\n\nJenny gave Luke a questioning look and he shook his head quickly. \"I'm good, believe me.\"\n\nJanet chuckled. \"Yes, he is good but that's something else all together.\"\n\nJenny smiled and said, \"Bring the bikini up to the counter when you get changed or just wear it home. The stares you'll get will warm your heart among other things.\"\n\nJanet groaned and shivered hard. \"Tempting, very tempting,\" she whispered but hurried over and entered the changing room. She stopped with the curtain in her hand and whispered to Luke, \"Get your ass over here.\"\n\n\"What?\" Luke said but she had closed the curtain.\n\nA few moments later, the curtain opened a crack and Janet whispered, \"Come closer.\"\n\nLuke walked over to stand next to the curtain. It opened wider and he let out a deep groan. Janet was standing facing him and all she had on were panties. She must have had her dick tucked away because the panties fit perfectly. His eyes ran over her body from head to toes. When Janet groaned softly he whispered, \"Holy shit!\"\n\n\"You two behave back there,\" Jenny called out from the front and then laughed as Janet jerked the curtain closed.\n\n*****\n\nBack in the car, Luke said, \"You know you could wear a normal bikini. With that tuck thing, even those white panties look normal.\"\n\nJanet turned in the seat and grinned at him. She pulled her left knee up onto the seat but left her right foot on the floor. As her knees spread wider, her skirt rode up until he could see the white panties in question.\n\nHe groaned softly and his eyes grew wide. Her dick was outlined in the thin white material. His mouth worked a couple of times and then he cleared his throat. \"Uh, you, uh, un-tucked things.\"\n\n\"That tuck thing will take a little getting used to,\" she whispered as she moved her foot back to the floor.\n\nLuke looked to the front and sighed. \"A whole lot of things are taking a little getting used to.\"\n\nJanet looked at his face and shivered. \"Are you rethinking us dating, among other things?\"\n\nLuke shook his head. Then he took a deep breath and let it out slowly. When it was all out, he turned and looked at his friend. \"Nope, you're stuck with me and vice versa.\"\n\nJanet grinned and shook her head. \"I'm built bisexual. You on the other hand....\"\n\n\"Yeah,\" Luke said as he started the car. Looking her way, he grinned and asked, \"Should I cruise by the book store?\"\n\n\"What if I said yes?\" Janet asked as she turned in the seat again.\n\n\"I, uh, could learn so much if you let me watch,\" Luke replied with a grin.\n\nJanet grinned back at him and whispered, \"Think of what all you could learn if you joined in.\"\n\nLuke groaned loudly and shivered hard. \"Be still my heart,\" he whispered a moment later.\n\nJanet chuckled and said, \"Head for the house and no detours.\"\n\nLuke had a pouting look on his face as he pulled out onto the street. \"You are mean, so mean.\"\n\n\"You're the one who pointed out the book store,\" Janet replied as she slid over next to him and cuddled up.\n\n*****\n\nAs they pulled into Janet's driveway, Luke asked, \"Are you coming over for a swimming lesson?\"\n\nJanet grinned. \"Nope, I just bought that bikini to tease you.\"\n\nLuke did a double take and then shook his head. \"Yeah, you would, wouldn't you.\"\n\nWith a laugh, Janet leaned closer and kissed him lightly on the cheek. Leaning back, she whispered, \"No, I wouldn't do that.\"\n\nLuke looked her way and started to say something. Her lips on his stopped him dead in his tracks. Well, talking anyway. He groaned softly as he kissed her in return.\n\nJanet broke the kiss and grinned. \"Take your car home and come back over.\"\n\n\"Uh, okay,\" Luke replied and then asked, \"Uh, what's going on?\"\n\nJanet shivered and whispered, \"Flashing you in that store and wearing that bikini with people around kind of got me horny in a big way.\"\n\nLuke grinned, started the car, and licked his lips. \"Such a deal I have for you.\"\n\nJanet chuckled as she opened the door. \"Don't run on the way back. We don't need people asking questions.\"\n\n\"Keep the white panties on,\" Luke said softly.\n\nJanet shivered and nodded.\n\n*****\n\nFifteen minutes later, Luke knocked on the front door at Janet's house. He had changed into his normal shorts and t-shirt. Janet stayed behind the door as she opened it to let him inside.\n\nAs she closed the door, he groaned deeply as he saw what she was wearing. The panties were white but not the same ones. These were thin, lacy, and a g-string. Her ass looked completely bare. Her breasts were covered with a thin folded sheer white scarf. It was tied above her breasts with the points hanging down.\n\n\"Wow!\" He said softly a moment later, his eyes running up and down her body.\n\nJanet shivered as she took a deep breath. \"Tucking doesn't work with these type panties.\"\n\nLuke nodded as he looked at the head of her hard dick sticking out above the left corner of the front panel. \"Uh, yeah,\" he whispered. \"Mine is as hard as yours.\"\n\nShe looked at the tent in the front of his shorts. \"Come on up to my room. As you said before, such a deal I have for you.\"\n\n\"Lead and I'll follow,\" Luke said with a grin.\n\n\"You just want to look at my ass,\" Janet said returning his grin.\n\n\"And the problem is?\"\n\nJanet laughed as she headed for the stairs. \"None that I know of.\"\n\n*****\n\nAt the top of the stairs, Janet stopped and bent at the waist until her hands were on her ankles. She looked at Luke from between her knees and grinned. His face was at eye level with her sex peeking out from between her thighs. There was a small sting trying to cover her opening and ass hole but not blocking anything.\n\nWhen Luke groaned deeply, Janet laughed and straightened up. \"That was a tease for both of us.\"\n\n\"Uh, yeah,\" Luke whispered as he reached for her hips.\n\nWith another laugh, Janet danced away. \"There is something I want you to do before we get sidetracked.\"\n\n\"And what is that?\"\n\n\"Go in my room and check out what is on my bed,\" she whispered as she moved away from him farther.\n\nLuke gave her a questioning look and then shook his head as he went down the hall to the first door. He looked inside at her bed and frowned. \"I, uh, I,\" he stammered and then groaned as Janet grinned at him.\n\n\"If you like me in these white panties, think what those will make me feel like. Go on inside and put them on. I'll wait out here.\"\n\nLuke looked in the room and then looked at Janet. His eyes roamed up and down her body. With a groan, he entered her room. \"I, I, I,\" he stammered and then went quiet.\n\n*****\n\nJanet shifted her weight from one foot to the other as she waited for Luke to come out of her room.\n\nA few moments later, his head appeared around the edge of the doorframe. \"Are you, uh, sure about this?\" When she nodded her head quickly, he took a deep breath and stepped out into the hallway.\n\nJanet groaned loudly as her eyes took in the bright red g-string he had on. The head and several inches of his dick were showing above the elastic at the waist. \"That, that looks even sexier than I imagined it would,\" she whispered as she stepped closer to him.\n\n\"It might look sexy but it feels weird, especially that sting running up the crack of my ass,\" Luke said as he shifted his hips from side to side.\n\nJanet grinned. \"Moving like that will make it slip all the way in. Not to mention tickling somewhere that doesn't normally get tickled.\"\n\nLuke shivered and nodded. \"So I'm finding out.\"\n\nWith a chuckle, Janet whispered, \"Stay around me for very long and you will learn a lot of girl secrets.\"\n\n\"I ain't trying on a bra,\" Luke said quickly.\n\nJanet laughed and winked at him. \"I have an old training bra in my bottom drawer.\"\n\nLuke's eyes grew wide as he asked, \"Uh, is this how cross dressers start out?\"\n\nJanet grinned and shrugged. \"I really don't know. I guess it all depends on how much you like wearing my clothes.\" Her eyes dropped back to his hard dick. \"Or how much you like hanging out of them.\"",
        "Luke looked down at Janet's hard dick and grinned. \"I'm not the only one doing the hanging out thing.\"\n\nWith a shivery breathe, Janet whispered, \"Neither of us are hanging anywhere. Just the opposite in fact.\"\n\nI, uh, yeah,\" Luke whispered in reply.\n\nJanet took Luke's hand and turned to lead him toward the stairs. \"Where are we going?\" He asked softly.\n\n\"Over to your house,\" Janet said quickly and then laughed as Luke stopped dead in his tracks. \"I'm joking. I was thinking about down stairs in the living room.\"\n\n\"When is your mother due home?\" Luke asked quickly.\n\nJanet pulled on his hand as she started down the stairs. \"Don't worry, I don't think it would be a good idea for mom to catch either of us dressed this way together.\"\n\nLuke followed Janet down the stairs. As they reached the bottom step, he asked, \"How do you normally dress around your mom?\"\n\n\"Probably the same way you dress around yours,\" Janet replied as she stopped and turned around. Her eyes jumped from his face to his dick and back again. She shivered hard and let go of his hand. His dick was just below eye level.\n\nWith a lick of her lips, she reached out and rolled the thin elastic of the waistband of the g-string down. More of his dick came into sight. She licked her lips again. \"The panties look good but you look even better completely bare,\" she whispered as she used both hands to pulled the panties down to his mid thigh.\n\n\"Take a step up,\" Janet said softly and grinned up at Luke as he did. His mouth worked but no sound came out. His eyes were jumping back and forth between her face and his dick, which were now at the same level.\n\nShe leaned forward and rolled the panties farther down. Her face was now only inches from the head of his dick. \"You remember the last time I was this close to your dick, don't you?\"\n\n\"Oh yeah,\" Luke whispered with a groan mixed in.\n\n\"After the licking you gave me....\" Janet whispered before she sucked the head of his dick into her mouth.\n\nLuke groaned even louder than before. \"You, you need to be careful.\"\n\nJanet lifted her head and looked up at his face. \"And why is that?\"\n\n\"The, uh, last time you did that I had the edge off, shall we say? This time....\" The groan he made as she sucked the head of his dick back into her mouth was deep and full.\n\nJanet swirled her tongue around the head and sucked even more of him into her mouth. A soft groan escaped her throat. She'd had the edge off last time also. She felt her vagina and her dick both tighten up and release suddenly. That was a new feeling. Usually it was just her vagina.\n\nWhen she started to bob her head slowly, Luke's hands found her head and tried to stop her. \"You're going to make a mess,\" he said sharply.\n\nWith an even louder groan, Janet nodded her head quickly. He was talking about his orgasm and she was thinking about hers. He was trying to pull her mouth away from his dick but she wasn't having any of it. She just kept on swallowing more and more of his dick as her orgasm loomed larger and larger.\n\nLuke's hands slipped off the sides of her face and her head went down even farther. She felt the hair around the base of his dick brushing her nose and that was all she wrote. Her orgasm washed over her. Luke let out a yell and he was coming in her mouth.\n\n*****\n\nJanet swam up out of the afterglow of her slowly subsiding orgasm. She was on her knees but now her head was on Luke's thigh, his slowly softening dick still in her mouth. That's when she realized he was sitting down. For some reason that thought made her giggle.\n\n\"What, what's so funny?\" He asked with a breathy catch in his voice.\n\nJanet held suction on his soft dick as she slowly raised her head. His dick stretched out and then popped out of her mouth with a slurping sound. \"I just knocked you on your ass,\" she said softly and then sighed. \"Not to mention the mess I have running down each thigh.\"\n\n\"You came too?\" Luke asked quickly.\n\n\"Well duh, I didn't have the edge off either.\"\n\n\"I, uh, didn't know women could come from sucking a dick,\" he whispered.\n\nJanet chuckled. \"I didn't either.\"\n\n\"Live and learn,\" Luke said with a big grin.\n\nJanet sighed and looked at Luke's face. \"I have an idea that this two person sex thing is going to be a big learning curve for sure.\"\n\nLuke licked his lips and asked, \"What about me cleaning up that mess of yours?\"\n\nJanet grinned and shook her head. \"My body isn't in any hurry to move right now.\"\n\n\"If you can raise up a little so I can move, then I can take care of it where you are.\"\n\nJanet groaned softly as she thought about the position she was in and him behind her. \"You would end up having to carry me up to bed,\" she whispered softly.\n\n\"And the problem is?\" Luke asked with a laugh. \"Think of it as a payback for knocking me on my ass.\"\n\n\"I was hoping we could spend more time together, if you know what I mean.\"\n\nLuke chuckled and replied, \"Yeah, I do but I wasn't the one getting all greedy and stuff.\"\n\n\"Kids and new toys,\" Janet whispered more to herself than him.\n\n\"I understand the feeling,\" Luke replied.\n\nWith a deep sigh, Janet sat up and grinned at her best friend. \"I had planned on us sitting on the couch and you sucking and licking on a couple of my toys.\"\n\nLuke's eyes dropped to her breasts covered with the thin gauzy scarf. \"We can still do that,\" he whispered as his eyes slowly came up to her face.\n\n\"Yeah, we could but I wanted to know what it felt like to start there.\"\n\nLuke chuckled. \"And then you got greedy.\"\n\n\"Is there such a thing as an oral fixation?\"\n\n\"Probably. I know thoughts of licking you have dominated my daydreams.\"\n\nJanet looked thoughtful for a moment. \"I hadn't even thought about sucking your dick until I was standing there pretty much eye to eye with it.\"\n\nLuke took a deep breath and whispered, \"Stand up.\"\n\n\"Uh, why?\" Janet asked as she got to her feet. Her legs were a little wobbly so she held onto the handrail. Her eyes were on Luke's face and his eyes were on her dick. She looked down to find it semi soft and leaning forward over the top of the little g-string.\n\nShe gasped loudly as her eyes jumped back to Luke's face. \"You, you wouldn't,\" she said quickly.\n\nLuke groaned softly as he reached up and wrapped his fingers around her shaft. \"I, I, I,\" he stammered and then quickly leaned his head forward and licked the spongy head. He groaned even louder as he sucked the head into his mouth and swirled his tongue around it.\n\nJanet gasped loudly. She had never felt anything like what he was doing before. Her hips rocked forward and then jerked back. She had no reference and wasn't sure what to do. As his tongue continued to swirl around the head, she groaned long and loud.\n\nLuke lifted his head as he held suction on the head. It came out of his mouth with a slurping sound. Janet's hips gave a big jerk. He grinned up at her and whispered, \"I know that feeling very well.\"\n\n\"I, I, I,\" Janet stammered and then groaned deeply.\n\nLuke grinned and whispered, \"Maybe I shouldn't have done that.\"\n\n\"I, I, can't believe you did that,\" Janet whispered in return.\n\nWith a crooked grin on his face, Luke asked, \"Does sucking a girls dick make a guy gay?\"\n\n\"I, uh,\" Janet said and then shivered hard. \"I, uh,\" she said again and then groaned. \"Now my sex is messing with both our heads.\"\n\nLuke grinned and asked, \"The little ones or the big ones?\"\n\nJanet laughed and moved down a step. \"Both actually.\"\n\nLuke let go of her dick and used both hands to pull himself to his feet. \"So, what did you think of your first semi blowjob?\"\n\n\"Startling to say the least,\" Janet whispered. \"The feelings were so different than what I expected and then there was the fact that you were doing it.\"\n\n\"It was different from my side of things also. Not just the act but the feel and taste.\" He paused with a funny look on his face. \"Your dick kind of tastes like your pussy.\"\n\nJanet did a double take and whispered, \"Uh, interconnected plumbing.\"\n\nLuke grinned. \"How does a tongue on the head of your dick compare to a tongue on your rough spot?\"\n\nJanet looked at her friend with a funny look and said, \"I can't believe you're asking that question.\"\n\n\"Uh, is there something wrong with the question?\" He asked in confusion.\n\nJanet smiled and shook her head. \"No, there is nothing wrong with the question. I guess it's more in my head. I had never really thought about how they feel different.\"\n\nLuke grinned and said, \"We'll have to get that little book store girl over here so we can do a simultaneous test.\"\n\nJanet's mouth dropped open and her eyes grew wide as the thought of a mouth on her dick and a tongue in her pussy flashed across her mind. She groaned deeply as her hips flexed back and forth several times.\n\nLuke chuckled. \"I think that mental picture just about put you over the top.\"\n\nWith a groan, Janet reached behind her back and untied the scarf. A moment later, she let go of it and it fluttered down away from her breasts to land on the steps. Her panties were down below her knees a few seconds later.\n\nLuke groaned softly and whispered, \"Just beautiful, just beautiful.\"\n\nJanet shivered and said, \"Get your ass up those stairs.\"\n\n\"I, uh,\" he said as he stood up and turned to head up the steps. The red g-string was tangled around his feet. He quickly stepped out of them.\n\nJanet stepped out of her panties and followed him up the stairs.\n\n*****\n\nAs he entered Janet's room, she said, \"Get you ass on the bed.\"\n\nLuke grinned at her over his shoulder and climbed on the bed. \"Are you always this bossy when you get horny?\"\n\nJanet laughed. \"Nope, I'm just saving you the trouble of carrying my unconscious ass up the stairs.\"\n\nLuke gave her a wide eyed look as she climbed on the bed. A moment later, he had a wild woman in his arms as she knocked him over backwards. She was kissing him wildly as her hips rubbed from side to side. Her dick was rubbing his, which made both of them groan.\n\nA few minutes later, Luke rolled them over until he was on top. He broke the kiss and moved down just enough so he could lick and kiss her nipples. Janet groaned and flexed her hips. Her dick rubbed on his belly and she moaned softly.\n\nJanet couldn't stay still with his tongue and mouth on her nipples. Short sharp jolts of pleasure shot straight down to her sex. The feel of her dick rubbing on his belly added fuel to her growing fire. Somewhere in the back of her mind, she wondered where his dick was.\n\nLuke lifted his head and looked at Janet's face. Her eyes were tightly shut and her mouth was slightly open as she breathed heavily. He wiggled forward to kiss her. Suddenly the head of his dick touched something burning hot and wet feeling.\n\nJanet's eyes flew open and then she gasped loudly as the head of Luke's dick squeezed into her opening an inch or so. \"No!\" She yelled loudly and quickly.\n\nLuke froze and then groaned as he realized where the head of his dick was. He quickly lifted his hips and moved backwards. He ended up on his knees straddling Janet's feet. \"I, I, I.\" He stammered quickly and then groaned again. \"An accident.\"\n\nJanet shivered and squirmed on the bed. Her eyes were wide and her mouth worked but no sound came out. \"You, we, I, us,\" escaped her lips a moment later.\n\n\"I'm so sorry,\" Luke said quickly.\n\nSuddenly, Janet giggled and then she was laughing wildly.\n\nLuke looked at her as if she was crazy. \"There is nothing funny about that,\" he said a moment later. \"No birth control remember.\"\n\nJanet sobered quickly and took several deep breaths. \"Oh I remember alright. What hit me as funny is that neither of us are virgins now.\"\n\nLuke's eyes went wide and then he groaned softly. \"I'm just glad I had the edge off, if you know what I mean.\"\n\nJanet shivered and lifted her feet. Her toes tickled his balls as she eyed the shiny head of his dick. She shivered again as she pulled her feet back and spread her legs wide. \"I'm having a very kinky thought,\" she whispered with her eyes still on the head of his dick.\n\n\"And what is that?\" Luke asked.\n\nJanet grinned and said, \"Stand up and find out.\"\n\nAs Luke stood up, Janet sat up. The next thing he knew, she had the head of his dick in her mouth and was running her tongue all over and around it. Luke's eyes grew wide. \"That was just in your....\" He stopped talking with a loud moan as Janet swallowed his whole dick.\n\nShe held suction on his shaft as she slowly lifted her head. She paused at the head and swirled her tongue around it. She popped it out of her mouth and groaned deeply. \"Like I said, kinky. My juices on the head of your dick.\"\n\nLuke just looked at her with his eyes wide and his mouth hanging open. Janet laughed as she fell backward on the bed. \"Now I'm wondering about our juices mixed together.\"\n\nWith a deep groan at the vision of his dick buried in her pussy as he came, flashed across his mind's eye. \"I, uh, we,\" he said as he came down to his knees.\n\n\"There is plenty of time to explore that later,\" Janet whispered as she raised her legs straight up in the air and then spread them wide. \"Right now, I have such a deal for you.\"\n\nLuke looked down at her dick, the rough pink spot below it, and her opening even lower. With a grin, he backed up and came down on his elbows, his head right above her dick. \"Decisions, decisions, decisions,\" he whispered as he lowered his head and gave her shaft a long, slow, solid lick.\n\nJanet had expected him to go for her rough spot. The lick on her shaft made her hips twitch and jerk. Janet groaned softly as he used one hand to lift her dick straight up in the air. His tongue swirling around the head made her hips twitch and jerk again.\n\nAs his mouth closed over the head of her dick, a finger stirred the opening to her vagina. She gasped loudly as her hips jerked and lifted. More of her dick went into his mouth as more of his finger went into her vagina. She let out a soft yell and flexed her hips.\n\nThe thought that she was fucking his mouth and herself on his finger flashed across Janet's mind. Her hands jumped to her breasts and massaged them wildly. Feelings were everywhere and climbing in intensity. She was close to out of control. Not a feeling she was used to.\n\nLuke was watching Janet's face. Her eyes were tightly shut and her mouth was open in a round circle. Her hands were massaging her breasts wildly. He was trying to transfer what her mouth felt like on his dick to what he was doing to hers.\n\nHis finger in her wet slippery pussy was an interesting feeling. She had felt so tight and hot around the head of his dick. On impulse, he extended a second finger and felt it slip inside as she moved her hips. She let out a soft yell and flexed her hips faster. He moved his fingers forward and she came unglued.\n\nJanet yelled long and loud as the second finger in her vaginas transferred itself to the head of his dick earlier. When it went even deeper, the monster orgasm that had been hiding from her, exploded over her mind and body. She was coming for all she was worth and then some.\n\n*****\n\nLuke raised his head and allowed Janet's softening dick to slip out of his mouth. He had a big grin on his face as he backed up, pulling the fingers out of her pulsing pussy. It kept trying to grab them. He found that very interesting as he slowly pushed them back in again.\n\nJanet groaned and flexed her hips. Luke's dick in her pussy was the dream in her floating mind. Her vagina grabbed it tightly. As it slowly slipped out, she kept trying to grab it. It was too slippery to hold onto.\n\nThen it was gone. Janet made a soft whimpering sound as her eyes fluttered open. It took her a moment to focus and when she did, she grinned as she saw Luke sitting at the end of the bed with two fingers stuffed in his mouth.\n\nHe returned her grin around the two fingers and then slowly pulled them out of his mouth. They came free with a soft slurping sound. \"Tasty, very taste,\" he whispered as he winked at his girlfriend.\n\nJanet sighed and nodded her head. She sighed again as she snuggled down in the bed more. \"I, I feel a nap coming on.\"\n\nLuke climbed off the bed. He picked up a soft blanket off the chair in the corner and covered her up. Janet was already asleep. He smiled as he gathered up his clothes.\n\n*****\n\nDressed, Luke left Janet's room and closed her door. He stopped on the stairs and gathered up the two thongs and the scarf. He returned to Janet's room and hung the thongs on her inside doorknob. The scarf, he laid on the foot of her bed.\n\n\"Tomorrow my love, there is always tomorrow,\" he whispered as he turned and left the room.\n\n \n"
    ],
    "authorname": "TxRad",
    "tags": [
        "educational",
        "hermaphrodite",
        "oral",
        "tucking"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/hermaphrodite-ch-02"
}