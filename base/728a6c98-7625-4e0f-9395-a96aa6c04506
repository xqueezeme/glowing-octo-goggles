{
    "title": "Saturday Night School Ch. 09",
    "pages": [
        "\"Do you really think I should make this film?\" Charlie asked Ronni at lunch the next day. \n\nRonni considered the question. \"I think it's a good script,\" she said. \"And you're thinking about a career in film, right? I think it would be a good experience for you. Why? Are you thinking about dropping it?\"\n\nThey sat at a table at the far side of the cafeteria. Ronni had been waiting outside his 4th period class when he emerged after the lunch bell rang. She asked if he wanted to get lunch, and he agreed. He had a few questions he wanted to ask her. In particular, he wondered how much of the night before Nick had described to her.\n\nCharlie hadn't seen Michelle at all that morning. He was getting close to sending her a text and asking her if she had skipped school. Not that it mattered; he wanted to give her some space at school anyway, so having lunch with her wasn't an option for him even if she was there. Although he did want to ask her what she planned to do over the weekend.\n\n\"Yeah, I am,\" he told Ronni. \"I keep thinking about what I need to do to make the film, and I already see all these problems that I'm going to have to solve.\" \n\n\"We're going to have to solve,\" Ronni corrected. \"Producer, remember?\"\n\n\"Right. We're going to have to solve. Our location is a garden where we can only film after 11 PM on weekdays. So, we need three actors who can be available late at night. I can't even be sure that Michelle is going to commit to that; she had to lie to her parents to be there last night, and afterwards she had to sneak into her house at three in the morning. On top of that, if I'm going to film it as written, with the nudity, I'll need the actors playing Max and Ingrid to be discrete. I don't want them coming to school and blabbing about the nude scene.\"\n\n\"Yes, we definitely have some hurdles to work around.\"\n\n\"There's also the possibility the movie will never be shown to anyone. I told Michelle that if she decided she was uncomfortable with her scene, we would never show anyone the film. Which is fine for her, but how do I convince the other two actors to commit to a film that might not even be shown to anyone?\"\n\n\"And to do it for free, of course.\" Ronni grinned. \"We don't have a budget to pay anyone. Although Nick might let them swipe drinks and chips from the snack bar.\"\n\n\"I mean, what do you think? Is the film good enough to be worth all this trouble?\" Charlie stirred his mashed potatoes with his fork. \"Or is it a lot of effort for nothing?\"\n\n\"We'll never know how good it can be unless we try and make it,\" Ronni said. \"It's a good script. Original idea, good dialogue. So we'll try to film it how you've written it. If we run into problems, we'll figure out how to work around them. I'm pretty sure that's how filmmaking is supposed to go.\"\n\n\"You really think it's a good enough script?\"\n\n\"Sure. Even Nick liked it. He read the copy you gave him. He said he couldn't stop thinking about it.\"\n\n\"Really?\"\n\n\"Yeah. He said so this morning. He wanted to talk to me about it and he kept asking what I thought the film was about. He said that if he'd read the script before he met Michelle, he would have interpreted it one way, but meeting Michelle made him think about it in a completely different way.\" Ronni leaned against the table. \"Let's just think about who would be good to play Max and Ingrid. We can talk to them, tell them when and where we want to film, and maybe they'll say no, maybe they'll say yes. One thing I know about theater kids is they like to get cast in things. We're asking them to be the stars of this film. They might go for it, no matter if it's late at night. Have you heard anything from that Apex film program you interviewed for?\"\n\n\"No, nothing yet.\"\n\n\"Doesn't matter. When we talk to our Max and Ingrid, you make it clear to them that this isn't a Pine Hills school project. You tell them it's a project for Jefferson University. It'll make it seem next-level. It'll also remove any expectations they might have that the film will be shown to anyone at this school.\"\n\nCharlie nodded. \"Good idea. I could see them accepting that.\"\n\n\"As for discretion... I don't know think we can ever be 100% sure that our Max and Ingrid aren't going to come to school and talk about Michelle doing a nude scene. That's just a risk she's going to have to accept, if she's going to do it. She either has to be okay with people knowing, or she has to be ready to deny it.\" Ronni shrugged. \"Let's face it, she took the same risk with me. I haven't told anyone I saw her walking around naked last night. And if we're dealing with theater kids, they probably won't be as inclined to talk about it as others might. They would know how to separate an actress from her role.\"\n\nBehind Ronni, towards the middle of the cafeteria, Charlie saw Vampire Vanessa sitting down at a table with several other girls. Charlie peered at the group of them, trying to pick out Michelle.\n\nRonni noticed his distraction and shot a quick glance over her shoulder. \"If you're looking for Michelle, I don't think she came in today.\"\n\n\"You don't think so? How do you know?\"\n\n\"My locker's not far from hers. I see her sometimes between classes. But I haven't seen her today at all.\"\n\n\"Just a sec.\" Charlie pulled out his phone. He found Michelle's name and sent her a quick text: \"You in school today?\"\n\nA minute later, his phone buzzed. He read the message: \"Home sick. I'll tell you later.\"\n\n\"She says she's home sick,\" Charlie told Ronni. \"You think she's really sick? Or just tired?\"\n\n\"You could ask her.\"\n\n\"No. She said she'd talk to me later. I don't want to say too much in a text. Anyone could read it.\" Charlie leaned over his phone. He sent a quick message: \"Feel better!\" A few seconds later, he received another message from her. No words, just a pink heart emoji.\n\n\"You're worried her parents will find out about last night?\"\n\nCharlie nodded. \"She told them she was at Vanessa's house. Honestly, I don't think they even know I exist.\"\n\n\"Seriously?\"\n\n\"Seriously. I think Michelle has lied to her parents every time she's been to see me. She's always told them she's doing something else.\"\n\n\"That's kind of weird.\"\n\n\"Yeah. I have to admit, I never thought I'd be anyone's secret boyfriend.\" Charlie grimaced. \"Actually, that reminds me of something I have to do tonight.\"\n\n\"What?\"\n\n\"My mom really wants to read my script. So I need to write a clean version of it. No nudity.\"\n\n\"How are you going to do that?\" Ronni asked. \n\n\"I'll just switch it so that Gwen is wearing conservative clothes at the beginning of the film, and as Max and Ingrid get to know each other, Gwen will switch to brighter colors and shorter dresses. Same basic concept, really. Just less drastic.\" He frowned as Ronni started to laugh. \"Is that funny?\"\n\n\"It's just not quite as interesting to do it that way, is it?\" Ronni tried unsuccessfully to suppress her grin. \"Sorry... I'm just thinking about last night. I definitely had to change some of my preconceptions about Michelle. It's one thing for you to tell me stories about her... but my gosh, she didn't hold back last night, did she?\" \n\n\"No, I guess she didn't.\"\n\n\"My brother wanted to look at my yearbook from last year, to see her picture. He said he didn't see her wearing anything, the whole night. She came in naked and she left naked. He was pretty amazed by the whole thing.\"\n\n\"Yeah. She got dressed in the parking lot before we left.\"\n\nRonni leaned forward. \"The first time I read your script, I was skeptical. I thought, is this just his way of getting her to be nude on camera? But after last night, I really think she's not going to have a problem doing those scenes. In fact, I think she's going to be amazing in them. Do you think she can act?\"\n\n\"Well... she's pretty good at lying to her parents, apparently.\"\n\nRonni grinned. \"That's true.\"\n\n\"When I finish writing a clean version of the script, I'll give you a copy. In case your parents want to see it.\" \n\nRonni shook her head. \"That's okay. I don't have a problem showing them the real script, if they want to read it. But they probably won't even ask.\"\n\n\"No?\"\n\n\"We agreed my title is producer, right? I don't think my parents have any idea what a producer does. They just know I'm not writing, directing or acting. To them, that means I'm not really doing anything, just helping you out on your project. I told them I'll be going to Greenholt late at night to help with the filming, but it's not such a big deal for me, because Nick works there. I'm just hanging out with my brother while he's at work.\"\n\nCharlie's thoughts strayed towards the adventures of the previous night. The garden paths, the starry sky, Michelle's body in the moonlight. \"When do you think Nick will be cool about us coming by again?\" he asked, trying to sound nonchalant.\n\nRonni leaned against the table, stirring her drink with her straw so that the ice clinked together. \"How about we find some actors first?\" she suggested. \"Let's make our wish list. Who do you want to talk about first - Max or Ingrid?\"\n\n***\n\nAs soon as he came home, Charlie went upstairs and started working on the clean version of the script. He knew his mom would ask to read it that evening, and he didn't want to be scrambling to finish it.\n\nHe kept his phone by his computer as he worked, glancing at it frequently to see if Michelle had sent him a text. The rewrite didn't take very long, and he didn't need to change very much. The fact that none of the characters acknowledged Gwen's nudity worked in his favor. Aside from altering a few descriptions of Gwen, he didn't need to change much of the dialogue.\n\nHe saved the finished document and glanced at his phone again. Friday night. It was Friday night, he had a girlfriend, and yet he was all alone, with no idea what she was doing. He picked up his phone and wrote a quick text to Michelle: \"Whatcha up to?\"\n\nHe put the phone down and looked out the window at the sky. His phone rang a minute later. He picked it up and answered. \"Hey.\"\n\n\"I'm just at home,\" Michelle said. \"What about you?\"\n\n\"At home. I just finished writing a clean version of my script. My mom wants to read it and I don't want to show her a version with nudity in it.\"\n\n\"You took out the nudity?\"\n\n\"Yeah. In this version, you start off wearing a conservative dark-colored dress that covers your arms and legs. With each new scene, your dresses become shorter and the colors become brighter. By the time it reaches the last scene, you're not nude, you're just in a short sexy dress. Here, let me read it to you.\" Charlie turned to his computer and clicked down to the beginning of the last scene. He read, \"Gwen is wearing a short, tight dress that clings to her body. The dress is bright pink.\"\n\n\"Bright pink?\"\n\n\"Yeah. That's what I wrote.\" He gazed at the line on the screen, tempted to change the color of the dress to yellow, but then he shook his head dismissively. \"Anyways, it doesn't matter. It's just to show my mom. It's not like you have to run out and buy a new dress just for this scene. \"\n\n\"I know,\" she said matter-of-factly. \"Because in the actual script, I'm naked.\"\n\n\"Ah. Right.\"\n\n\"Are you done with that clean version?\" she asked. \"Can you send it to me?\"\n\n\"Yeah, sure. I can send it. I'll send it right now.\" \n\n\"Thanks.\"\n\nCharlie opened up his e-mail and created a new message to Michelle. \"You weren't in school today?\" he asked, as he looked for the document to attach to the message.\n\n\"No. It's kind of funny, actually. You know how I told you I was going to sneak into my house last night, and if my mom or dad caught me, I would tell them I was at Vanessa's house and had to leave because I wasn't feeling well?\"\n\n\"Yeah.\"\n\n\"Well, they caught me. That is, my mom did. She was wide awake when I came home, sitting in the kitchen. So I told her my stomach hurt and that's why I came home. She believed me, but I guess I overdid it because the next morning she insisted I had to stay home from school. To be honest, I was tired from last night anyway, so I didn't give her much of an argument. But since I stayed home from school, now I'm stuck at home tonight. My mom doesn't want me to go out.\"\n\n\"You had plans tonight?\"\n\n\"Uh huh. The cheer team is making an appearance at the spring alumni dinner. I had to tell Vanessa I couldn't make it. And that was an awkward conversation, because I couldn't tell her why I was pretending to be sick, so I had to tell her I really was sick. I felt so bad lying to her. She was so concerned and wanted to take care of me and I felt like the worst friend ever.\"\n\n\"Maybe you could tell her that you felt sick last night, but it passed quickly, it's just your mom is being cautious...\"\n\n\"That's pretty much what I said. I kept reassuring her. No, no, I feel fine now. No, no, it's just my mom. She won't let me go out. Stay home from school on Friday, stay home Friday night, that's the rule, right? But still, Vanessa was trying to give me all this advice about how to feel better.\"\n\n\"It's not like you could tell her the truth.\"\n\n\"No. I never could. But I hate having to lie to everyone. And I hate sitting at home perfectly healthy instead of being with the cheer team like I'm supposed to.\"\n\n\"Are you doing anything tomorrow?\"\n\n\"Tomorrow night?\"\n\n\"Yeah.\"\n\n\"Nothing too important,\" Michelle said. \"Why?\"\n\n\"Let's go out. Let's do something.\"\n\nFor a moment, Charlie heard silence in his ear, and the sound of his own breathing. \"Okay,\" Michelle finally answered. \"What did you have in mind?\"\n\nCharlie realized he didn't have anything in mind. If he was honest with himself, he hadn't really expected her to say yes. Where would he take her? He didn't have much experience with actual dating. \"Let's get out of Pine Hills,\" he suggested. \"We'll just get in my car and drive north for a while. You know how there's all those little towns you pass through. We'll go for a while, and then look for someplace to get dinner, in one of those towns.\"\n\n\"So, no particular place in mind? We're just going to drive until we get tired of driving?\"\n\n\"Yeah,\" Charlie said. \"Drive until we're someplace where no one knows us.\"\n\nMichelle didn't speak for a moment, and Charlie knew that she understood the significance of his words. Someplace where no one would recognize them. That way, they wouldn't be seen by anyone from the high school, and no one would spread rumors about them being together.\n\nAnd if Michelle felt like doing something risky, she could do so with the knowledge that no one would know who she was.\n\n\"It'd be nice to get out of this town for a bit,\" she said.\n\n\"Yeah, it will.\" Charlie leaned back in his chair, gazing out the window at the darkening sky. We'll drive until we get tired of driving, he thought to himself, and maybe we'll never get tired of driving. We'll drive and drive through the night and we'll just leave this place far behind. \n\n\"When should I pick you up?\" he asked.\n\n\"How about 6:30? Just pick me up at the school.\"\n\n\"The school?\"\n\n\"Yeah. That's where I'll be. I have some spirit squad stuff to do in the athletic center. Are you going to do any editing in the AV room?\"\n\n\"Huh... you know what's funny? I haven't even thought about going to work in the editing bay this weekend.\"\n\n\"Is that funny?\"\n\n\"Yeah! For me, it is, anyway. I'm always in there on the weekend. There's always something I need to work on.\" He considered what footage he had on the editing bay computer. \"Yeah, I'll be there editing.\"\n\n\"You will? So maybe at 6:30, I can just meet you at your car?\"\n\n\"Sure. That'll work.\" He paused. \"I'll have my window rolled up this time.\"\n\n\"What?\"\n\n\"You know... when I left my window open? And you put your clothes through the opening?\"\n\n\"Oh...\" Michelle sounded embarrassed. She spoke quickly, \"I wasn't going to...\"\n\n\"Yeah, I know, I didn't really mean...\"\n\n\"It was just kind of an impulsive thing that time...\"\n\n\"I know. I know. Just a joke. Sorry.\"\n\nShe laughed nervously. \"Okay.\"\n\n\"6:30, then.\"\n\n\"6:30,\" she confirmed.\n\nHe expected that to be the end of the conversation, but it wasn't. Michelle was stuck at home with nothing to do, and Charlie was alone in his house with nothing to do, and they talked on the phone until the sky turned dark and moon rose high above the trees.\n\n***\n\nDaryl stopped by the editing bay the next day. \"Did you hear back from that film program at Jefferson?\" the security guard asked.\n\n\"Not yet,\" Charlie said.\n\n\"Got my fingers crossed for you. So, you let me know when you hear, okay?\" Daryl grinned. \"I just walked through the athletic center. Saw your girl in there. She's painting signs with a few of the other cheerleaders.\"\n\n\"Yeah, she told me she'd be here. We're going out later.\"\n\n\"You're taking her out? Where you going?\"\n\n\"I don't know. Dinner. We'll find someplace.\"\n\n\"Someplace?\" Daryl looked at him sternly. \"Treat her right, Charlie. Don't take that one for granted.\"\n\n\"I won't.\" \n\nDaryl went on his way and Charlie turned back to the editing computer. He tried to focus on what he was doing, but the clock in the corner of the screen frequently drew his attention. Charlie knew he had a tendency to lose track of time while he was working, and he didn't want it to happen this time. He watched the numbers on the clock count up slowly to 4:00 PM, then to 5:00 PM.\n\nDaryl came by shortly after 5:00 PM. \"You still here, Charlie?\"\n\n\"Yeah. Still working.\"\n\n\"I thought you and Michelle would leave together.\"\n\n\"Yeah, that's what we planned.\" Charlie frowned. \"Why?\"\n\n\"I went by the athletic center and it's all quiet now. All the cheerleaders are gone.\"\n\n\"Really?\" Charlie checked the clock again. He still had more than an hour until 6:30. \"Is her car still here?\"\n\n\"I don't know, I didn't look. I don't know if I remember which is hers, anyway. A bunch of cars are still here.\"\n\n\"We're supposed to meet at 6:30.\"\n\n\"Oh.\" Daryl shrugged. \"I guess she's somewhere, then. Or she left and she'll be back.\"\n\n\"Probably.\" But Charlie felt anxious. He wanted to get up from his seat and check the parking lot, to see if her car was still there. But what would that say to Daryl? That Charlie thought Michelle might not show up for their date?\n\n6:30 was more than an hour away anyway. Charlie told himself he would focus on his work. He would keep doing what he was doing, and he would keep checking the clock. At 6:30, he would go outside to his car, and Michelle would be there.\n\nOr maybe she wouldn't. Maybe he would find a heart drawn on a paper, sitting in the front seat.\n\nEither way, he didn't need to worry about it until 6:30.\n\n***\n\nAt 6:15, he started saving his work and closing the windows on his computer. At 6:20, he shut down the computer. He leaned back in his chair and stared at his phone, gazing at the numbers on the display, waiting for them to say 6:30.\n\nAt 6:25, he got up and walked outside.\n\nMichelle waited for him, leaning against his car. She wore a dark jacket with the sleeves rolled up to her elbows, and underneath, a loose grey shirt that flared around her hips. Tight black leggings accentuated her long legs, and she wore open-toed tan heels that wrapped around her ankles.\n\n\"Wow,\" he said. \"You look amazing.\"\n\nShe smiled. \"So do you!\"\n\n\"Me? I look the same as always.\"\n\n\"No.\" Michelle glanced at his button-up shirt and dark jeans, nodding in approval. \"I can tell. You spent some time getting ready for tonight.\"\n\n\"Well...\" Charlie didn't know what to say. He might've put on slightly nicer clothes than usual, but Michelle looked like she was about to stroll down the runway at a fashion show. He wondered if that's where she had disappeared to for the last hour. Maybe she wanted to find someplace to get dressed.\n\nMichelle walked around the back of the car to the passenger side. \"Let's leave this town behind,\" she said. \"If we don't go now, we might be stuck here forever.\"",
        "\"We better go then.\" Charlie unlocked the car and they both climbed in. He put his key in the ignition, but then took a moment to lean over and kiss her. \"Have I told you that I love the way you smell?\" he murmured.\n\nShe laughed. \"I smell?\"\n\n\"Are you wearing a perfume?\"\n\n\"Yes. Do you like it?\"\n\n\"Yeah,\" he said. \"The scent reminds me of you.\"\n\n\"Victoria's Secret. Breathless. That's the name of the perfume.\" She put her hand on his shoulder, nudging him back into his seat. \"Come on. Start the car. Let's get going before our old friend Daryl comes walking by and wonders what we're doing.\"\n\nCharlie turned the key, and his car rumbled to life. He reversed out of the parking space much faster than he normally did, and had to jam his foot on the brake just in time to keep them from hitting the wall of the school. Michelle laughed. Charlie put the car in drive and swerved out, cutting through a row of parking spaces and curving around the side of the school. Michelle turned on the radio to a top 40 station. Charlie recognize the song that started to play, but he didn't know the title or the artist. \n\nThey left the school and turned right. Charlie picked a winding path through the neighborhood until finally reaching Benham Road. From there, they just needed to drive straight, following the road north until it took them out of Pine Hills.\n\nThe neighborhood gave way to a commercial area. They drove past several blocks of enormous stores, flat rectangles like gigantic fallen monoliths, surrounded by lines of parking spaces that radiated out like spokes. The buildings all looked identical, the only difference being the glowing store names attached to the top. Target. Sports Chalet. Home Depot. Charlie noticed Macy's on their left and pointed it out. \"Isn't that where your sister works?\" he asked.\n\n\"Uh huh. My older sister Mirella.\"\n\n\"Maybe she's working there right now.\"\n\n\"I think she is, actually,\" Michelle said. \"She's had trouble getting people to work Saturday nights. She usually works mornings, but I think she had to go in tonight, because they were short-staffed. She was mad. She already had plans with her friends and she had to cancel on them.\"\n\n\"That's too bad. No one wants to work Saturday night, huh?\"\n\n\"No,\" Michelle said quietly. \"It's all right. In a few months, I'll be there, too. I'll help her on Saturdays.\"\n\nThey passed more and more empty stretches of land as they continued north, and the road shrank from three lanes in each direction to two. Charlie didn't know when they officially passed the line that marked the city limits of Pine Hills. The road became darker and stoplights became rare. They passed few buildings now, and instead to either side the headlights illuminated rolling hills covered in tall grass.\n\nA Chainsmokers song played on the radio, and Michelle sang along to it softly, trying to keep her voice hidden below the singers. \"I need you, I need you, I need you right now... I need you right now... so don't let me, don't let me, don't let me down...\" She reached down and turned the volume higher, and Charlie watched her out of the corner of his eye as she swayed in her seat to the music.\n\nThey passed a sign that said, \"Welcome to Pebelton\", and soon after stopped at the first red light they'd seen in miles. Pebelton was not a large place, just a few intersections, with a strip mall that seemed to be the center of commerce for the town. Charlie pointed out the few restaurants he could see, but Michelle shook her head. \"Not yet,\" she said. \"Let's keep going.\" \n\nThey kept going. They passed out of Pebelton, then followed the road to Harlatheria, or as Michelle called it, \"Hardly-There-ia.\" A song came on the radio as they entered the city limits, and the song was only halfway done when they emerged out the other side. Past Harlatheria, they drove through six or seven miles of emptiness, finally reaching the city of Duckrock.\n\n\"Oh! I know that place!\" Michelle pointed out the left window at a large neon sign that read \"HAPS BBQ\". \"Have you ever been there?\"\n\n\"No,\" Charlie said. \"Have you?\"\n\n\"A couple times. When we'd drive out this way, my mom and dad liked to stop there.\"\n\n\"Is it good?\"\n\n\"I loved it when I was a kid. Do you like barbecue food?\"\n\n\"Sure. Barbecue sounds good. Is that where we want to have dinner?\"\n\nMichelle just smiled, which Charlie interpreted to mean that she approved of the choice. He moved into the turn lane and turned left into the parking lot. Haps shared the same parking lot with several other stores and restaurants, but the majority of the cars in the lot were gathered near the BBQ restaurant's front door. Most of the stores looked closed. Charlie kept driving past the other parked cars, deeper into the lot, until he found a space in a dark corner, not so far from the other cars to be conspicuous, but far enough to give them some privacy.\n\nThe headlights illuminated a field of carefully-groomed green grass that neighbored the parking lot, almost like a small golf course, or a well-managed city park. Charlie turned off the headlights, letting the darkness envelop them. He turned to Michelle, his eyes quickly adjusting to the dimness. He could see her profile, barely illuminated by the glow of the headlights passing on the highway. \"Well,\" he said, \"here we are.\"\n\nHe leaned towards her to steal another kiss before they headed into the restaurant. This time, she rose to meet him, her lips pressing against his, her mouth opening for his tongue. Her hand slid behind his shoulder, pulling herself towards him.\n\nCharlie's cock felt like a steel rod in his pants. He hadn't even realized he was getting erect until it was already straining insistently against the fabric. His heart beat rapidly in his chest as Michelle's presence overwhelmed his senses. The scent of her, the feel of her body under his hands, the taste of her in his mouth. He was surprised at the nervous anticipation that suddenly took hold of him, but it didn't take him very long to realize where it came from.\n\nMaybe he had told himself that he wanted to get Michelle out of town to avoid any unexpected run-ins with her circle of friends, or that it would be a spontaneous adventure to head north without a particular destination in mind, just driving until they found a place that they liked. But now that they found themselves in a dark parking lot, thirty miles away from anyone they knew, Charlie could feel that Bonnie-and-Clyde tension thrumming between them. She was expecting him to challenge her, to push her past her limits out here where nobody knew them, and she was clearly excited by the thought of it.\n\nHe was excited by it, too. His erection made that pretty obvious.\n\nWe could forget the restaurant, he thought. Stay in the car and fuck instead. Fuck until they steamed up the car windows. He didn't know if she would, but maybe if he got a hand inside her panties, pushed those leggings down her thighs. He could just keep going and see if she stopped him.\n\nYet that seemed a crude way to start their evening. He didn't bring Michelle all the way out to Duckrock to fuck her in a parked car. He wanted to spend time with her. To talk to her. \n\nHe gave her another kiss and then shifted away from her, reaching to unlock his door. \"Ready?\" he asked, with his hand on the door handle.\n\nShe smiled. \"Sure.\" She took a moment to check herself in the visor mirror, which gave Charlie enough time to walk around and open her door for her. She stepped out of the car and took hold of his arm as he closed the car door behind her. They began walking to the restaurant.\n\n\"What do you think this is?\" Charlie asked, nodding towards the green field next to the parking lot. \"It looks like a park, but where do those stairs go?\" He pointed at a set of wide stairs on the other side of the field, leading up the hillside. A lamppost illuminated the bottom of the stairs, and he could see more lampposts following the stairs as they curved up.\n\n\"You've never stopped in Duckrock before?\" Michelle asked.\n\n\"Not that I can remember. We've driven through it a few times...\"\n\n\"So you've never actually seen the Duck Rock?\"\n\n\"The Duck Rock?\"\n\nMichelle laughed. \"Why do you think the city is called Duckrock? It's named after an actual giant rock that looks like a duck. That's where those stairs go. This is Duckrock Park and up that hill, you can get a view of the rock.\"\n\n\"You're kidding.\"\n\n\"No, it's true! It's a great big rock.\"\n\n\"Does it really look like a duck?\"\n\n\"It does! It looks like a duck.\" Michelle pulled on his arm, tugging him to the side. \"Come on. We're not in a rush. Let's go look.\"\n\n\"Are we allowed to? Maybe the park is closed.\" Charlie peered at the empty stretch of green and the stairs in the distance.\n\n\"You need to see the Duck Rock,\" Michelle said. \"Come on.\" She stepped over the small wall that separated the parking lot from the park, and Charlie followed her.\n\nThey strolled over the grass, walking straight toward the stairs. Charlie could make out another smaller parking lot right next to the main road, undoubtedly Duckrock Park's dedicated lot. He could also see that this smaller parking lot was empty and closed off with a chain, which increased his anxiety that the park was closed. He kept his misgivings to himself, but kept an eye out for any authority figures.\n\nJust before they reached the bottom of the stairs, they heard voices and laughter coming from above them. Charlie slowed and pulled Michelle to the side. He watched the stairs, waiting to see who would descend. \n\nAfter less than a minute, a boy and two girls came walking down, laughing and joking with each other. They looked like they were in their early teens, eighth or ninth grade maybe, and clearly they weren't worried about getting caught in the park after closing. Maybe it was just one of the things to do in Duckrock on a Saturday night, to climb up the stairs, look down at the lights of the city, and maybe take another look at the peculiar rock that gave this place its silly name.\n\nMichelle took Charlie's arm and tugged him towards the stairs. The three kids noticed them and glanced in their direction as they passed. The two girls dismissed their presence almost immediately, while the boy took a lingering look at Michelle before turning away. As Charlie and Michelle started up the stairs, they could hear the loud laughter of the trio echoing through the park. \n\n\"How far does it go up?\" Charlie asked as they took their time ascending the steps. The city of Duckrock occupied a long valley, and the sides of the valley rose up to a fair height.\n\n\"Not far at all,\" Michelle said. They passed another descending couple, this time a man and a woman in their thirties. The width of the steps had narrowed so Charlie slowed and moved behind Michelle to give the other couple room to pass. The man and the woman smiled and said \"Hi!\" as they walked by. Charlie got the impression they were also on a date. The woman wore a pretty burgundy dress that fluttered around her feet as she came down the stairs. The man wore dark slacks and a leather jacket over a crisp blue shirt. \n\nRight after passing the junior high kids, Charlie felt very much like an adult. He had a beautiful girl on his arm, they were out on a date, he would take her to a restaurant to have dinner that he would pay for himself. But after passing the man and woman in their thirties, he abruptly felt like a kid again. \n\nHe didn't immediately increase his pace to resume his spot beside Michelle, instead taking the opportunity to gaze at her legs as she ascended the steps in front of him. Her black leggings clung to her like a second skin and the open toes of her heels allowed him to see dark red nail polish on her toes. \"I like those shoes you're wearing,\" he said.\n\n\"Thanks!\"\n\n\"Actually, I like everything you're wearing. You look really beautiful tonight.\"\n\nShe smiled at him over her shoulder. \"Thanks. You're sweet.\"\n\n\"Sorry if I'm underdressed. I haven't had much of a need to dress up in my life, so I don't have a lot of those kind of clothes. Like ninety percent of my clothes are jeans and t-shirts.\"\n\n\"You look fine. Why do you think you're underdressed?\"\n\n\"Oh... I don't know. That couple we just passed, I guess.\" Charlie increased his pace so he was walking beside Michelle again.\n\n\"They did look nice,\" she said. \"I loved her dress. Oh, here it is!\"\n\nThe stairs ended and they stepped onto a dirt path that circled a flat hilltop. They appeared to be alone. The center of the hilltop contained a flat field of the same short grass as in the park below. Charlie could see lampposts along the perimeter of the circle and benches to their left where visitors could sit and admire the view of the city and highway. However, Charlie couldn't see any rocks on the hilltop, duck-shaped or otherwise. \n\n\"Where's the rock?\" he asked.\n\n\"Over there. See the railing?\" Michelle pointed at stretch of black railing along the back side of the hilltop. Charlie and Michelle followed the path around until they reached the railing. Charlie leaned against it, looking down the hill. He could see the rock now. It was a chunk of dark rock about the size of a double-decker bus, nestled at the bottom of a shallow valley. The rock had been rigged with landscape lighting, directed beams of light which illuminated portions of the stony surface.\n\n\"Well?\" asked Michelle.\n\n\"I can see it,\" Charlie said. \"Yeah. There's the head, kind of looking down... there's the wings, and the tail feathers. It looks like a duck, all right.\"\n\n\"Told you.\"\n\nThey gazed at the enormous rock for a few minutes, then continued around the path until they reached the view of the city. They sat on one of the benches and looked down at the cars driving back and forth on the highway.\n\n\"I've never been up here at night before,\" Michelle said. \"I think I like the view from this side better than the view of the Duck.\"\n\n\"It's nice,\" Charlie said. He looked down at the highway, tracing the path they had followed as they entered the town. He could see the Mcdonald's they had passed, and a few blocks further, the 7-11. Right below them, he found the left turn they had made to reach Haps BBQ. He could see the dark parking lot and even picked out his car sitting by itself.\n\nHe glanced at Michelle, admiring her profile. The breeze played with her hair, making the strands dance around her ear. She had pendent earrings that resembled tiny wind chimes. \n\nHe looked down at her dark jacket and her grey shirt. The neckline was cut just low enough that he could see the initial swell of her breasts. He didn't know much about clothing brands but what she wore looked expensive. \"Is that a shirt?\" he asked. \"Or is it considered a dress?\"\n\n\"Hmm? Oh, this? It's a shirt. It's just long.\"\n\n\"Is that what you were wearing today at the school?\"\n\nShe giggled. \"No, I wasn't wearing this! I was painting signs at the school. I wouldn't paint in this.\" She looked down at herself. \"I changed. I drove home in between and changed.\"\n\n\"Oh, okay.\" Charlie watched a semi-truck on the highway below as it drove through the town. He could hear the sound of its motor echoing through the valley, a low rumble. \"I didn't change. I was wearing this while I was editing. I came to the editing bay around two and worked for a few hours. Actually, right up until I came out to meet you.\"\n\nShe turned to look at him. \"You look fine. Do you still feel like you're underdressed?\"\n\n\"Nah...it's fine. I'm just talking.\"\n\n\"Or maybe it's not that you're underdressed,\" she said coyly. \"Maybe it's that you think I'm overdressed?\" She held his eyes for a moment, smiling, then bent over and fiddled with a strap on her heel. She undid the strap and pulled the shoe from her foot, then removed her other shoe the same way. She put both shoes to the side, setting them on the ground next to each other, then touched her bare feet to the ground. \"Is that better? Do we match now?\"\n\nHe doubted they could ever truly match. He was a teenager in a rumpled shirt and jeans, and she still looked like a super-model. Just now she was a super-model with her shoes off. \"We're closer to matching,\" he told her. \"But you shouldn't walk around barefoot. You might step on something sharp.\"\n\nShe nodded. \"Good point. I should probably keep my shoes.\" She stood up in front of the bench. \"Something else, then.\" She hiked up the bottom of her shirt until she found the top of her leggings. Without hesitating, she pushed the leggings down her hips and to her knees. She sat back down on the bench and peeled the leggings off her legs, pulling one foot free and then the other. Charlie could see a thin line of blue fabric tangled with the bunched-up fabric in her hand, and he understood she had removed her panties along with the leggings.\n\nShe set the ball of fabric between them on the bench and leaned over to put her shoes back on. She slid her right foot back into place followed by her left foot, then leaned over further to fasten the straps around her ankles. Charlie glanced over his shoulder, scanning the hilltop to make sure that they were still alone. Probably Michelle had done the same thing, a few minutes before, without him noticing. She would have checked for strangers before starting to undress. Wouldn't she?\n\n\"Is that better? Are we at the same level of dress now?\" Michelle leaned against the bench, carelessly leaving her grey shirt hiked up in the front and her legs slightly apart, so that Charlie could see strands of her pubic hair visible just under the edge of the shirt. He could tell that she was aware of the city stretching out below them, and the cars passing back and forth on the highway. He could see by the excitement in her eyes that she felt like she was showing her pussy to the entire city.\n\nIt wasn't exactly true. They were high enough up that anyone looking at them would need a telescope to make out any details. Besides that, they sat in the shadows between the light posts, obscured by the night. It was very unlikely that anyone below could see anything. Nevertheless, Charlie felt himself becoming aroused by her display.\n\n\"I don't know,\" he said, pretending to examine her critically.\n\n\"Oh?\"\n\nHe shook his head. \"I can't be sure... but I think you might still be a little overdressed.\"\n\n\"I see.\" Michelle looked down at her shirt. \"You think so?\"\n\n\"Maybe. I'm not sure.\"\n\nShe stood up. \"Okay.\" Michelle slipped off her black jacket, carefully folded it and set it on the bench. Turning to face Charlie, she looked down at him as her fingers caught the bottom of her shirt. She held his gaze as she tugged the flimsy garment up her body and over her head. \n\nHer shirt dangled from her hand as she stood naked in front of him, wearing only her heels. It didn't surprise him that she wasn't wearing a bra; he had already guessed that much by the way her chest had shifted under her shirt when she breathed. Even in the dim light, her skin glowed against the dark night, the lights of the city twinkling behind her. \"What about now?\" she breathed, swinging her shirt back and forth in her hand. \"Am I dressed casually enough to match you now?\"\n\n\"Hmm,\" he said, gazing at her nude body while he pretended to consider the question. \"You know, I'm still not sure. I might have to think about it for a bit.\"\n\n\"Of course,\" she said, tilting her head. \"Take your time.\" She stood patiently in front of him, as if she would wait there quietly until he allowed her to move. He enjoyed the view she presented, but also knew that anyone coming up the stairway would immediately see her when they reached the hilltop.\n\n\"Why don't you sit down again?\" he suggested.\n\n\"Okay.\" Michelle took a moment to lean forward and carefully drape her shirt over the back of the bench. Her breasts swayed close enough to Charlie that he could have easily caught them in his palms, but he resisted the temptation. Michelle turned and lowered herself back onto the bench, grimacing slightly when her bare skin touched the cold wood. ",
        "She sat more forward than before, perched on the front of the bench with her back straight. Her hands clutched the front edge of the bench, holding it as if she was in danger of falling off. She left her legs apart, and Charlie leaned forward to witness the deliberate view of her pussy that she offered the world below them. \n\nThey sat there, as if simply enjoying the night air. Charlie took a quick glance toward the stairs, confirming that no one was walking up who might catch Michelle in her vulnerable state. They were all alone for the moment, but the fact that they'd seen five people coming down the stairs while they were walking up gave a clear indication that the Duck Rock had its share of visitors after dark. The longer Michelle remained naked, the greater the chance that someone would catch her.\n\nCharlie looked at Michelle, and he could tell that she was affecting an air of nonchalance. She stretched, bringing her arms up to comb her hair back from her face, calmly looking down at the city. She acted as if she would be perfectly comfortable sitting in that same position for the rest of the evening, with her legs apart and her pussy lewdly exposed to the city.\n\nDespite her calm facade, he could tell that she was filled with nervous excitement. He could see the way her breasts quivered with her uneven breathing, and the way her fingers couldn't keep still, tracing tiny circles on her thighs. With every second that passed as they sat silently looking down at the city, the chance that someone would come up the stairs and see her became more and more likely. Charlie knew he could call an end to it at any time. He could ask her to put her shirt \n\nCharlie frowned. Over the steady drone of traffic coming from the highway and the rustle of the wind through the trees, he thought he heard the sound of voices, a faint tickle of sound that he suspected might be in his imagination. The more he listened for it, the more the sound eluded him. He decided he was manufacturing phantom voices out of the ambient sounds of the hills, just his tension combining with the power of suggestion.\n\nThen he thought he heard laughter. A man's laughter. Then a higher voice, a woman's voice, saying something indiscernible, and now the woman laughed. Voices from a distance. Charlie peered down towards the park and the shopping center, looking for a group of walking figures. Maybe a group coming out of the BBQ restaurant, walking to their car, their voices echoing over the hillside. He scanned the parking lot but didn't see anyone.\n\nMichelle looked anxiously over her shoulder at the top of the stairs. The voices were becoming louder, clearer. Charlie could make out the back and forth of a conversation. He picked out three distinct voices, a man and two women. No, now he heard a fourth voice, another man. At least four people, talking loudly, and they were all coming up the stairs.\n\n\"I really haven't come up here for so long,\" a woman said. \n\n\"A lot more stairs than I remember,\" a man complained, and the group laughed.\n\nMichelle turned to glance nervously at Charlie, her bottom lip caught between her teeth. He knew that the group of visitors would reach the top of the hill in a few minutes, and Michelle didn't have much time to put her shirt back on. Yet she still waited for him, continuing to play their game where they pretended her complete nudity was at the same level of dress as his button-up shirt and jeans. She didn't even dare to close her legs, remaining in that same vulnerable position with her feet apart and her pussy clearly exposed.\n\nCharlie looked past her, towards the stairs. No one had yet reached the top, but he could hear the voices coming closer and closer. He turned to Michelle and she met his eyes expectantly, anticipating that he would speak. But instead, Charlie found himself reaching for her, sliding one arm behind her back, bringing his other hand to her breast as he leaned forward to kiss her. Michelle whimpered helplessly as she opened her mouth to his kiss, caught between her fear of being seen by the approaching strangers and her excitement at the risk they were taking.\n\n\"Almost there,\" one of the women said.\n\n\"Thank god,\" said the complaining man, to more laughter.\n\n\"I can see the top,\" said the other man, whose voice was a baritone to the complaining man's tenor.\n\nMichelle gasped softly as Charlie squeezed her breast. He tugged on her nipple, pulling on the tip, rolling it between his fingers. Her skin felt so soft and smooth under his hands and the scent of her filled his senses. He kissed her again and she returned his kiss fiercely. The erection in his jeans felt enormous; he wanted to take her hand and put it there, to let her feel how turned on he was. \n\n\"Finally!\" The complaining man's voice came from the top of the stairs.\n\n\"It looks nicer,\" the first woman said. \"They're taking better care of it.\"\n\n\"Where's the duck?\" asked the complaining man.\n\n\"I thought you'd been here before!\"\n\n\"Not in a while. Is it over there?\"\n\n\"No, it's on the other side,\" said the second woman. \"See the railing?\"\n\nCharlie reached down and pressed his hand between Michelle's legs. He traced his fingers up and down her slit and felt her trembling in his arms. Out of the corner of his eye, he could see four figures strolling from the top of the stairs to the view of the giant stone duck. How far away were they? Fifty feet? Charlie wondered if they would come to see the view of the city after they saw the duck. \n\nHe slid his finger into Michelle's pussy.\n\n\"Where?\" asked the man.\n\n\"Down there!\" said the woman. \"You don't see it? It's right there!\"\n\n\"You know what?\" Charlie murmured to Michelle, moving his finger inside her. \"I don't feel underdressed anymore, so that's good. But I'm not sure if you should go to the restaurant looking like this.\"\n\n\"No?\"\n\n\"No. They might have one of those 'No Shirt No Service' policies. You know?\"\n\n\"Ohhh. Uh-huh. Do you think so?\"\n\n\"Maybe. I think you should put your dress back on. You know. Just in case.\"\n\n\"It's not a dress. It's a long shirt.\"\n\n\"Right. Then you should put your long shirt back on.\"\n\nMichelle nodded. \"Okay. If you think so.\"\n\nCharlie cupped her pussy a last time before extracting his hand. Despite the close proximity of the strangers who were audibly discussing the Duck Rock behind them, Michelle didn't rush. She reached back and plucked her shirt from the bench, then pulled it over her head. It didn't take long for her to wiggle into it. She tugged it down over her hips. \n\nThe shirt was long enough to make a satisfactory dress, although it exposed a good amount of her long legs. Charlie suspected that Michelle had anticipated removing her leggings at some point in the evening and had dressed with that in mind. \"Ready?\" he asked.\n\nMichelle picked up her discarded leggings and pushed them into her purse. \"Yeah,\" she said. \"Let's head back down.\" She stood and Charlie stood a moment later. He glanced at the four strangers over by the railing while Michelle put on her jacket.\n\nTwo men, two women. Maybe in their mid-twenties. All of them leaned against the back railing, looking down at the duck-shaped rock and idly chatting. Charlie wondered if any of them had noticed the couple kissing on the far bench. It didn't seem like any of them had.\n\nAs he and Michelle walked along the path towards the stairs, one of the men saw them passing. The man smiled affably and waved at them. Both Charlie and Michelle returned the wave. \n\n\"I don't think they saw anything,\" Charlie murmured to Michelle as they descended the stairs. \"They just wanted to see the duck.\"\n\n\"Uh-huh. I think you're right.\"\n\n\"We were on the other side, sitting on a bench away from the light. I don't think they noticed us.\"\n\n\"Uh-huh.\"\n\n\"We got away with it!\"\n\nThat made Michelle laugh. \"Another bank robbed, eh, Clyde?\"\n\n\"Yep. Good job, Bonnie!\"\n\nShe laughed again.\n\nThey had almost reached the bottom of the stairs. Charlie felt like he was flying down them. \"Wow,\" he said to Michelle. \"I'm on such a high right now.\"\n\nShe grinned. \"I know. The rush... I feel it, too.\"\n\n\"It's not just the almost-getting-caught.\" He knew he was talking fast. \"It's everything! Saturday night... being with you... and it's such a beautiful night! Isn't it? Doesn't everything seem really perfect right now?\"\n\nShe just laughed and took hold of his arm. \"You're cute,\" she said. They walked through the park, towards the lights of the restaurant. \n\n\"Remember what you said, the other night?\" Charlie asked. \"About the door?\"\n\nMichelle shook her head. \"What did I say?\"\n\n\"After the Gardens. You talked about if you were standing naked in front of a door, just about to walk into a crowded room. You said you would wait until the last second to put your dress on, just before the door opened. Then you thought about it, and you said, no, you would open the door first and then put your dress on.\"\n\n\"I said that?\"\n\n\"Yeah.\"\n\n\"I don't remember. I don't think I was talking about real life. I'm not sure what I meant.\"\n\nCharlie glanced at her. I know what you meant, he almost said. I know what you meant, because we just did it. The door started to open, and instead of letting you get dressed, I reached for your body, and it was amazing.\n\nHe almost said it, but he didn't. Maybe he was overthinking things. Maybe trying to explain why it was amazing only made it less amazing. If Michelle didn't remember what she'd said about the door, she probably wouldn't understand how he was trying to connect the two things. It would just sound like he was babbling.\n\nInstead, he said, \"I'm having fun. Are you?\"\n\nThat earned him a smile. \"Yeah, Charlie. That was pretty crazy.\"\n\nCharlie let his eyes wander down her body, reminded of the fact that she wore nothing underneath her short dress. He thought he could see the poke of her nipples against the fabric of her shirt. \"Hey,\" he said, suddenly concerned. \"Do you think that guy could see I had a hard-on?\"\n\nMichelle laughed. \"You mean the guy who waved at us?\"\n\n\"Yeah. We left pretty fast. It didn't have time to go down. I'm pretty sure I was at least ninety percent hard when we walked by him.\"\n\nMichelle glanced at the front of his pants. \"Well,\" she said slyly. \"It's pretty easy to tell you're hard right now.\"\n\nCharlie stopped to check. She was right. He had a clear bulge in the front of his jeans. A second later, Michelle's hand was there, her fingers lightly stroking the outline of his cock. \n\n\"That's not going to make it go down,\" Charlie murmured.\n\n\"No, I suppose not,\" Michelle murmured back, smiling up at him with a teasing glint in her eyes. \"Do you want to give it a few minutes? Before we go in the restaurant?\"\n\n\"A few minutes to do what?\"\n\nShe grinned and gave him a final squeeze before pulling her hand away. \"A few minutes for you to think about whatever it is guys think about when they want it to go down.\"\n\nCharlie had no idea what he was supposed to think about. Maybe just the fear of walking into the restaurant with a visible erection was enough. \"Let's just go,\" he told her. \"It'll go down while we're walking.\" \n\n\"Are you sure?\"\n\n\"Yeah. Let's go.\"\n\nThey continued on their path towards the restaurant. Charlie's prediction was at least partially correct. By the time they stepped onto the asphalt of the parking lot, he could feel his erection starting to wane, and it continued to soften as they approached the restaurant. Nevertheless, he felt like he was still at least fifty percent hard when they pushed open the large wood doors at the entrance to Hap's BBQ. Charlie snuck a look down, hoping that the lump at the front of his pants wasn't as noticeable as it seemed.\n\nHe glanced at Michelle, and found even more to worry about. Outside, her shirt had seemed to be a daring but adequate dress. But in the bright interior of the restaurant, where he could get a better look, the shirt-dress seemed scandalously short. She looked like she could expose herself just by lifting her arms in the air. On top of that, he could clearly see the tiny bumps where the shirt fell against her nipples. \n\nEveryone's going to know she's naked under there, he thought. Or would they? Was it only obvious to him because he already knew?\n\n\"You've never been here, right?\" Michelle asked.\n\n\"No. Never.\"\n\n\"It's just like a cafeteria,\" she said. \"You pick whatever table you want. Then you stand in the line and get your food, you pay for it, and then you bring it to your table. There's no waiters or waitresses.\"\n\n\"Okay,\" Charlie said. \"Well, want to find a place to sit first? I'll come back and get our food. Do you know what you want?\"\n\n\"Just get a bunch of things and we'll share.\"\n\n\"Do you want anything in particular?\"\n\n\"No,\" she said. \"You pick. Anything you want.\"\n\nThe food lines and cashier filled the space in the middle of the restaurant, with dining areas to either the left or right. Neither direction seemed any better than the other, so they picked left. The interior of the restaurant was surprisingly vast, and Charlie had to resist his impulse to stop and stare at the sprawl of tables that seemed to be laid out with a disdain for symmetry. He took hold of Michelle's hand and they plunged purposefully through the tables, walking as if they knew where they were going. \n\nThey could see smaller rectangular sections split off from the main room by half-walls decorated with cowboy memorabilia. Charlie turned into a section which looked half-filled, only to find an opening to another space that that was even emptier. He led them to a circular booth in the corner. It looked like it was meant to hold a party of six, or even eight, but Charlie took it anyway. He liked that it allowed them to sit next to each other. \"Is this good?\"\n\n\"Perfect,\" Michelle said as she slid into the seat. The tables had white tablecloths with a sheet of paper covering the top of the table. Charlie supposed the paper helped to keep spills from getting on the tablecloths. Their round table had a round sheet of paper covering it, and Charlie wondered if they had a supply of paper covers to match every shape of table in the restaurant.\n\n\"I'll go stand in the line,\" Charlie said. \"Do you want anything to drink?\"\n\n\"Just water.\" Michelle already had her phone out and was reading a message someone had sent her. \n\n\"Ok... be right back.\" Charlie started back towards the barbecue lines. Just before he turned the corner, he glanced back at Michelle, catching her as she was stretching out of her seat to slip off her black jacket. Her shirt pulled against her front, momentarily molding itself against her breasts like a second skin. Charlie felt his erection stirring again and he quickly turned away.\n\nHe followed the same path in reverse to get back to the front of the restaurant, where he discovered he had his choice of two lines to stand in. Both of them stretched nearly to the front door of the restaurant. One curved to the left and one curved to the right, so he picked the one that curved to the left, even though it was slightly longer. As he waited, he thought about sending a message to Michelle's phone. He pulled out his own phone and considered what to say. \n\n\"I looked back at you as I was leaving,\" he typed. \"I can't believe how beautiful you are. You're so perfect.\" He gazed at the words on his screen. Then he added, \"Why are you even with me?\" He read the message, then found the delete key and quickly erased it. No, he wasn't going to send her that.\n\nHe gazed at the screen for a moment. His finger picked out a new message, almost moving by itself. \"I love you, Michelle.\" He stared at the words on the screen, wondering how he could have dared to write them. He felt jittery just having them typed and ready to send, almost certain that his finger would slip and touch the send button by mistake. He found the delete key and watched the words disappear.\n\nInstead, he sent the message, \"Long line.\"\n\nA few seconds passed. Then her response came, a sad-face emoji followed by, \"Is it moving at least?\"\n\nHe typed back, \"Yes.\" The line was moving at a good pace. It seemed like the employees had an efficient system of getting orders together which kept things moving. He typed, \"Five people in front of me and then I'll be able to order.\"\n\nShe sent back a smiling emoji.\n\n\"All good there?\" he typed.\n\n\"Yes. Just trying to look busy. Like I'm texting my boyfriend.\" She followed this with another smiling emoji.\n\nHe couldn't decide how to respond to that, and still hadn't sent anything back when the line moved up enough for him to put in his order. He put his phone back in his pocket and ordered something called the \"three meat family meal\" which came with three meat choices and two sides, plus bread. He picked the chicken, pulled pork and tri-tip, figuring Michelle must like at least one of those. For the sides, he picked steamed vegetables and potato salad. His choices were methodically put on plates and added to his tray as he moved down the line.\n\nThe cashier totaled up the order, then asked if he wanted anything to drink. He ordered a water for Michelle and a Sprite for himself. The water came as a bottled water, but the Sprite came as an empty cup which he would have to fill himself.\n\nCharlie absently handed the cashier two twenty-dollar bills as he considered Michelle's text. Texting her boyfriend. That's what she'd said. But she hadn't said he was her boyfriend. She said she was trying to look \"like\" she was texting her boyfriend. As if she was just pretending he was her boyfriend when she was texting him. So what did that make him?\n\nCharlie lifted up his tray. \"Your change, sir!\" the cashier reminded him. Charlie muttered an apology as he set the tray back down and took his change from the cashier. He was still thinking about Michelle as he went to the drink station and filled his cup with Sprite. \n\nMichelle smiled when he came into view, bearing the tray of food. He set the tray down. \"I just picked one of their family meals,\" he said. \"Hope it's okay...\"\n\n\"It looks great,\" she said. \"Come sit down.\"\n\nCharlie slid into the seat. As he shifted to be closer to Michelle, a flash of bare skin caught his eye and he glanced down towards the seat. Michelle's shirt was now carelessly bunched up around her waist, leaving her bottom half nude. \"Michelle...\" he breathed, shocked but instinctively keeping his voice low. \n\n\"What's wrong?\" she asked, feigning innocence as she turned slightly and propped one knee up on the seat, giving him a clear view of her pussy. Charlie stared down at it for a moment, then swiftly looked around to make sure no one had noticed them. \n\nFortunately, the tablecloth was long enough that Michelle's lower half was blocked from view. Unless someone stood right in front of their table and leaned forward, they wouldn't have an angle to view her nudity. Charlie checked the nearby tables. Two booths were occupied; an elderly woman sat in one, facing the opposite direction, and the other held three teenagers dressed all in black, a boy and two girls. One of the girls had really short hair while the other had really long hair. The boy was somewhere in the middle. The girls had multiple piercings in their ears and the boy had black gauges stretching quarter-sized holes in his lobes. They seemed absorbed by their food and conversation.\n\nCharlie turned back to Michelle. \"Nothing's wrong,\" he said, leaning forward to kiss her. He reached between her legs and slid his hand against her pussy as she sighed into his kiss. He could feel her wetness on his fingers. She moved her legs further apart, opening herself to his touch. Her hand slid behind his neck, pulling him close.\n\nCharlie kissed his way along her jaw, taking the opportunity to flick his eyes to the side and double-check that no one watched them. The old woman still had her back to them, and the three goths were all looking at something on one of their phones. No one paid Charlie and Michelle any attention. Charlie's cock had sprung back to full length and he shifted in his seat, adjusting it so it went down the leg of his jeans. ",
        "He kissed her again, his need for her palpable, drawing him towards her. In a restaurant filled with patrons, her long shirt was hiked up to her waist and he had his fingers moving in and out of her wet pussy. The daring of it gave him such a rush that he found himself wondering how far they could take it. What if he put his hand under her shirt and fondled her bare breast? Would anyone notice? Would anyone care? He could free his cock from the tight confines of his jeans and let her stroke it under the table. Or even have her lie down on the curved seat so he could make love to her, moving his cock in and out of her, forgetting everything but their own desire.\n\nNothing seemed impossible. He had a reckless moment where it seemed like they could do anything and everything, free of any laws or rules. As if the world around them was just a dream and they were the lucid dreamers, doing whatever they liked before dawn woke them up. \n\nHe took another quick look at the nearby tables. The three goths, check. They were still looking at their phones. And really, only the long-haired girl sat in a seat with an angle to see them. The octogenarian, check. She was leaning over her food, absorbed in her careful tiny bites of chicken.\n\nThen Charlie noticed two employees, a man and a woman, coming into view on the other side of the seating section. Both of them wore the magenta shirt/black pants uniforms of Hap's BBQ. The female employee, probably in her early twenties, looked in their direction. She pointed at them. \n\n\"Shit,\" Charlie swore, swiftly pulling away from Michelle.\n\n\"What?\" Michelle asked, but Charlie didn't need to answer. Michelle followed his eyes and saw the male employee, who was walking grimly towards them. She quickly brought her legs back together and tried to smooth her shirt back over her thighs. \"Did someone complain?\" she murmured.\n\n\"Maybe. I don't know.\" Charlie pretended like he hadn't noticed the approach of the male employee. He casually lifted his drink and sipped from the straw.\n\n\"Excuse me, sir.\" The man was standing right next to their table, looming over them.\n\nCharlie looked up. \"Hi.\"\n\n\"Hi.\" The man's eyes flickered quickly towards Michelle, and Charlie had to fight the impulse to check on her and see how much skin she was showing. The man returned his eyes to meet Charlie's. \"Sir, I've brought you a new cup.\"\n\n\"What?\" Charlie blinked.\n\n\"A new cup.\" The man held out a plastic cup. \"You took the wrong cup, sir. This is the cup for your drink.\"\n\nCharlie stared at the cup in the man's hand, then looked at the cup he had just been sipping from. \"What's wrong with the cup I have?\" he asked.\n\n\"You took the wrong cup,\" the man repeated. He pointed at Charlie's cup. \"Sorry, sir. You accidentally took our tip cup. That's the cup by the register that we use for tips.\"\n\n\"I did?\" Charlie turned the cup on the table. Now he could see a bright red sign taped to the cup he'd been drinking out of, a sign that read \"TIP PLEASE THANK YOU\". He popped the top off his cup and peeked in. At the bottom of the cup, he could see a dark layer of quarters, nickels and pennies, swimming underneath the Sprite.\n\n\"I can fill your new cup for you, if you like, sir,\" the man said. \"Is it Sprite you're drinking?\"\n\n\"Yeah.\" Charlie felt light-headed and vaguely nauseous as he realized he'd been sipping out of a cup filled with dirty change. \"I mean, no. I can fill it up myself.\"\n\nThe man plucked the tip cup off the table and left the empty cup in its place. \"Very sorry, sir. Please let me know if there's anything else I can do for you.\"\n\n\"Right. I mean... sorry. I guess I wasn't paying attention and grabbed the wrong cup...\"\n\n\"Sure. It's no problem.\" The man nodded to them. \"Enjoy your meal.\" He turned and walked away.\n\n\"Oh my god!\" Michelle said, as soon as the man was out of earshot. \"You stole their tip cup!\"\n\nCharlie breathed out slowly. He looked at her, checking her shirt. She had pulled the edge of the tablecloth towards her to cover her lap, but hadn't been able to tuck the back of her shirt underneath her, and Charlie could still see a triangle of bare thigh above the red seat cushion. To him, it looked obvious that she had her bare bottom touching the cushion. Maybe it only looked that way to him because he knew it was true.\n\nHe reached over and tickled her bit of exposed skin with his finger. \"I can't believe I put soda in their tip cup.\" He shook his head, grimacing. \"And drank out of it. What the hell is wrong with me?\"\n\n\"They looked kind of alike. Same shape. Different color though. You never noticed the big sign taped to it?\"\n\n\"No. I should have. But I didn't.\"\n\nShe giggled. \"At least that's all it was. I thought we were getting kicked out for public indecency.\"\n\n\"Me, too.\" He made a face. \"I'm going to go fill my new cup. I need to wash this taste out of my mouth.\"\n\n\"Okay.\" Even though they had just nearly been caught, Michelle was already tugging her shirt back above her waist. \"Don't steal anything else. Next time they come over looking for you, I'm not going to bother covering up.\"\n\n\"Okay, Bonnie.\" He could hear her giggling as he walked away.\n\nCharlie ventured back to the middle of the restaurant and filled the new cup with more Sprite. Michelle was already eating when he returned. She had a forkful of chicken and smiled as she slipped it in her mouth.\n\n\"I started without you,\" she said. \"Don't worry. I saved you some of everything.\"\n\n\"Thanks.\" Charlie set down his drink and slid back into the seat. Michelle immediately reached for the cup and turned it in a circle.\n\n\"No thievery this time,\" she said. \"Good! Maybe they won't bother us anymore.\"\n\n\"At least not for stealing.\" Charlie reached under the table and stroked her leg. \"There's still the public indecency though.\"\n\nShe shook her head dismissively. \"Oh, I'm not worried about that. No one can really see anything. The benefit of long tablecloths.\" \n\n\"That's true.\" Charlie looked at the tablecloth thoughtfully. Michelle had removed the plates of food from the tray and had them arranged around the table. She had even made a place setting for him, with a knife and fork sitting on a paper napkin.\n\n\"Eat something.\" She pushed the plate of food closer to him.\n\n\"Okay.\" Charlie took a quick look around to make sure no one was watching. Then he leaned away from her, lifting the edge of the tablecloth and ducking underneath it. He slid down, crouching, and his shoulder bumped against her leg. He could see the bottom of the table, the whole thing supported by one central cylinder that was bolted to the floor.\n\n\"Charlie? What are you...\" Michelle abruptly fell silent as she must have realized what he intended. Charlie double-checked the length of the tablecloth, making sure that he was hidden underneath the table. The tablecloth didn't quite touch the floor, but it was long enough that he doubted anyone could see him. He shifted his position over slightly so he had a line of sight directly between Michelle's knees. He could see the line of her pussy, right in front of him, just under the edge of the tablecloth. \n\nHe decided to play a game, to see how close he could get his finger to her pussy without touching either leg. He slowly moved his hand forward, keeping it in that space between her legs, until finally the space became too narrow and he grazed her inner thigh. He kept his hand moving forward anyway, until his finger encountered the soft wetness of her pussy. He pushed his finger into her, sliding it in and out a few times. She didn't make a sound but her legs moved restlessly as he fingered her.\n\nHe brought his hand back down to her knee, pushing on it gently, and Michelle obediently opened her legs wider, sliding forward on her seat. He kissed her right knee, then her left knee. Slowly, he kissed his way up the inside of her left thigh, working his way up her leg. Michelle squirmed in anticipation as he came closer and closer to the place where her legs met. She slid even further down in her seat.\n\nHe reached her pussy and pressed a long kiss against it. Her legs clinched around his head as he pushed his tongue into her, tasting the tang of her arousal. Her hand touched the top of his head, stroking his hair as he licked her slowly from bottom to top. He could hear her uneven breathing as the tip of his tongue teased the area around her clit.\n\nHer legs trembled as she opened them wider, granting him more access between them. Her upper body leaned forward against the table, and she lifted one hand above the table while the other remained tangled in his hair. It turned him on immensely to realize that she feigned normal behavior for the benefit of the other patrons, most likely continuing to eat little bites of food, while below the waist she was completely naked, her legs splayed apart and her pussy served to him like his own personal dish to taste and savor.\n\nIt became his goal to disrupt her facade. He swirled his tongue over her clit in a particular way that made her legs tremble and just above his head, Michelle's fork clattered on the table. It pleased him immensely to know that he had just caused her to drop her fork. He could picture her in his mind, as if he sat at a nearby table watching her. Methodically eating her food, acting as if nothing was out of the ordinary, only every now and then she would freeze, or tense up, or maybe her eyes would close and her mouth would hang open for a moment. Maybe she would bite her lip to keep from making a noise. He wanted to make her betray herself, to give her such an intensity of pleasure that she would be unable to control her reaction. \n\nHe slid his hand up the front of her shirt, finding her breast and caressing it. Her nipple was hard between his fingers. He wondered if anyone was looking at that moment. Could they see the movement under her shirt, the outline of his fingers against the fabric as they squeezed her soft mound? \n\nHe wanted to make her moan. He wanted her body to shake with an orgasm in the middle of the restaurant. The thought of it made him fiercely hard. \n\nShe rose up, unconsciously pushing her hips towards him, pressing herself against his face while his tongue toyed mercilessly with her sensitive little button. He remembered watching her use her vibrator, the one she called Hoppity, and he tried to think of himself as a living Hoppity, a tool for her pleasure. His mouth was her personal sex toy, and he would get her off or stay under the table all night trying.\n\nSuddenly she was pushing him away. \"Come back up,\" she whispered. \"No one's looking right now.\"\n\n\"I want to make you cum,\" he said.\n\n\"You already did. I just came.\"\n\n\"You did?\"\n\n\"Yes! Just now. I had to be quiet about it. But it was a good one.\" She took a slow breath. \"Come back up. No one's watching.\"\n\n\"Pass me a fork,\" he said.\n\n\"What?\"\n\n\"A fork. If anyone sees me coming out from under the table, I'll pretend I just dropped a fork and went under to get it.\"\n\n\"Oh my god. You're silly.\" But she passed him the fork anyway. He managed to turn around under the table and climbed back through the narrow gap into his seat. He looked around quickly, but didn't need to use the fork excuse. No one had noticed.\n\nMichelle pushed food towards him. \"Time to eat for real,\" she said. \"It's getting cold.\"\n\nCharlie took a moment to wipe his face with a napkin. He picked up his fork and poked a slice of tri-tip. It was still sufficiently warm, and tasted delicious. \"It's good,\" he told her between bites.\n\n\"Better than me?\"\n\n\"Heh. No, not that good.\"\n\nMichelle smiled. \"We used to always come here, when we drove through. The food was always good.\"\n\nCharlie realized he was hungrier than he thought. Michelle ate as well, but barely took one bite to his two. They talked about Michelle missing school the previous day, and Charlie's lunch with Ronni. He tried to summarize the conversation he had with Ronni about the movie. \n\n\"Have you asked anyone to do the other roles yet?\" Michelle wanted to know.\n\n\"No. I have an idea who I'm going to ask. You know Allison Hayes?\"\n\n\"Charlie...\" Michelle spoke hesitantly. \"Can I ask you for a favor?\"\n\n\"Of course.\"\n\n\"When you try to get other actors... and they want to read the script... can you give them that new version you just wrote? The version without the nude scene?\"\n\n\"Umm... yeah. I guess I could.\"\n\n\"Charlie... I'm sorry. I just don't know if I can do it. The scene, I mean.\"\n\n\"Really?\" Charlie was surprised.\n\n\"If it was just you, I'd be fine,\" she said. \"I think Nick is all right, and Ronni, too. But I don't know about any of the others. I don't know if they're going to keep it a secret. They might tell anyone at school who'll listen that I'm naked in a film, and can you imagine what people would say? I don't know if I can handle that being all over the school.\"\n\n\"Right.\" Charlie shrugged. \"Sure, Michelle. Whatever you want. We can do the other version. It's no problem at all.\" He paused, considering the script. \"Did you notice the different clothes you're supposed to wear for each scene, in the clean version? It doesn't have to be exactly what I wrote, but...\"\n\n\"Oh, I can take care of the outfits.\" She waved dismissively. \"Don't worry about that part of it.\"\n\n\"Cool.\" Charlie watched a group of four women turn the corner carrying trays of food. The women slid into the booth on the other side of the goths.\n\nMichelle watched them as well. \"I know it won't be exactly how you pictured the movie. But it'll still be all right, won't it?\"\n\n\"Sure, it'll be fine.\" \n\n\"You still want to make the movie, right?\"\n\nDid he? It was like an echo of the conversation he'd had with Ronni the day before. \"Yeah,\" he said. \"I still want to.\"\n\n\"Good.\" She smiled. \"Do you think we could go back to the Gardens again? Sometime this week?\"\n\n\"Sure. We just have to ask Ronni and Nick. What will you tell your parents?\"\n\n\"I can tell them the truth now. I've been asked to be an actress in a movie, and it films late at night. I'll show them the script if they want to see it. The PG script. No nude scene, right? So they'll be fine with it. If they have any questions, I'll have them talk to Ronni. She'll vouch for the movie.\"\n\n\"Yeah. I'm sure she will.\"\n\n\"Just let me know what day we can go.\" Michelle picked up her water and took a sip, glancing at the table of four women. She seemed preoccupied with them; Charlie noticed she was frequently glancing in that direction. Her shirt had drifted lower while they ate and now the bottom of it fell over her lap, so she wasn't quite as exposed as before. Not that it mattered; none of the four women appeared to be looking in their direction, and Michelle's lower half was blocked by the table. Charlie wasn't quite sure what was making her so anxious. \n\nThe realization hit him a moment later that Michelle had to be planning something. She wasn't looking at the other tables because of what she was doing. She was looking at them thinking about what she intended to do. Maybe she was waiting for the right opportunity, the open window when no one was looking. \n\nHe should have suspected that Michelle would be looking for an opportunity to reciprocate his previous escapade under the table. Nevertheless, it surprised him when she suddenly dropped down and slid under the tablecloth. He had enough experience with Michelle that he knew to keep quiet, careful to avoid calling any attention to her sudden descent. He glanced around, to see if anyone had noticed, but Michelle had picked the perfect moment to disappear.\n\nA minute later and her hand slipped out from under the tablecloth, setting her folded-up shirt next to him. So now she was naked under the table, and he felt her fingers on the front of his jeans. Much easier for him to flip up the bottom of her shirt than for her to undo the snap and zipper of his jeans, yet she still somehow managed to tug his boxers down and pull out his erect cock.\n\nNow it was his turn to pretend like nothing was happening, poking at the remaining barbecue food with his fork while below the table Michelle's tongue was licking up and down his shaft. He wondered if she had felt the same mix of excitement and fear that he was feeling. Her mouth enveloped the head of his cock while her fingers toyed with his balls, gently cupping them. She fell into a rhythm as she sucked on him, her lips sliding back and forth on his shaft, her head bobbing up and down in his lap. Did she intend to take him all the way? Would he fill her mouth with his cum? Could he really have an orgasm in the middle of a restaurant, with a bunch of strangers sitting less than twenty feet away? That seemed like Michelle's intention.\n\nAfter a couple minutes of her hot mouth kissing and sucking on his cock, Charlie knew the answer was a definite yes. Michelle was quite capable of making him climax in the middle of a crowded restaurant. He couldn't always tell what she was doing under there but it was driving him wild. He'd feel something soft, wet, her lips maybe, or her tongue, running along the bottom of his cock or exploring the swollen head. Then her mouth would envelop him and her lips would slide up and down his shaft, urging him to erupt. \n\nIn her enthusiasm, she bobbed to the end of his cock and the top of her head banged loudly against the bottom of the table, hard enough that all of the plates and silverware on the table rattled. Charlie's eyes widened as suddenly everyone in the near vicinity turned to look in his direction, checking to see what had caused the sound. Even the old lady turned around in her seat to peer at him.\n\nCharlie was mortified. A sea of eyes, all staring right at him, and how many of them could tell that just below the tablecloth his jeans were undone and his erect cock was sitting in his girlfriend's mouth? Did they notice that Michelle was conspicuously missing? \"Dropped a plate,\" he said. \"Don't worry. Nothing broke.\" He tried to force a smile, but only succeeded in looking guiltier. It didn't help that he could hear Michelle under the table trying to control her giggling. He prayed that no one else could hear her.\n\nThe eyes started to turn away, to his relief. Probably they had only been staring at him for a few seconds, but it felt like an eternity. His erection was fading, a victim of his anxiety, and he tucked it back into his boxer shorts before Michelle could reach for it again. With one hand below the table, he gestured for her to come back up.\n\nHe could feel her bump his knees, and guessed that she was trying to put her shirt back on. He put his hand under the table and held it flat, a warning for her to wait for his signal. He watched the other customers, waiting for an opportunity. Finally, he found a moment when no one seemed to be looking at them, and urgently flapped his hand to beckon Michelle back up.\n\nShe understood his signal and slipped out from under the tablecloth. He was glad to see she was successful in putting her shirt back on, although it looked a little crooked around her shoulders. She held a fork in her hand. \"Found my fork!\" she announced. \"The one I dropped!\" She grinned at Charlie. \n\n\"Oh.\" He looked at the fork. \"Uh... great.\" \n\nMichelle slid in close to him, her body pressing against his side. \"I'm sad,\" she purred. \"I wanted to make you cum.\"\n\nHe shook his head, his eyes still watching the other tables. \"I don't think I can,\" he whispered. \"Not after that.\"\n\n\"Aww.\" She pouted. \"It would have been so naughty.\"\n\n\"Maybe next time,\" he said. \"Should we get out of here? Are we done eating?\"\n\n\"Of course not!\" she grinned. \"Dessert! This time it's my treat.\" She picked up her purse and slid out of the seat. Charlie watched her walk away, the bottom of her shirt just barely covering her ass. He knew she was going to attract some looks.\n\nHe waited for her return, and the longer she took, the more convinced he became that her departing words had been a sexual innuendo, foreshadowing a scandalous act to come. Dessert? Her treat? What did that mean? Would she return wearing something even more revealing? A transparent dress? A silk slip? A body stocking? Would she drop into his lap and announce that she was his dessert?",
        "When she turned the corner, still in her grey shirt and now carrying a giant hot fudge sundae, he wasn't sure if he was relieved or disappointed. She brought two spoons and offered him one before she set the sundae down on the table. She slid into the seat, moving until she was close enough that he could smell her perfume, moving still closer until her side touched his. \n\nSharing an ice cream sundae. It was almost a clich\u00e9. A Norman Rockwell painting. Young love, taking turns spooning scoops of ice cream. Am I your boyfriend? He sent the thought in her direction, unable to speak it out loud. Are we together? Is this love? And if it isn't, then what is it?\n\nHe couldn't speak the words. Maybe it didn't matter. Just as long as she was with him. He took another spoonful of ice cream."
    ],
    "authorname": "jessica_tang_vonharper",
    "tags": [
        "voyeur",
        "exhibitionism",
        "cmnf",
        "public nudity",
        "public sex"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/saturday-night-school-ch-09"
}