{
    "title": "14 Hours Pt. 04",
    "pages": [
        "-Will-\n\nKori is in my room and we're in full detective mode now. First things first, build the timeline. I bought a large dry erase board that we have drawn fourteen separate sections on. Each one an hour from seven p.m. to nine a.m. the next morning. \n\nWe have pictures of suspects stuck to the board with magnets from my fridge which are in the shape of letters and numbers. I literally cut out a picture of Samantha North from the yearbook last year. Lili I cropped out her face from her nude spread wide shot. \n\nWe're assuming I went straight to the bar after seven, however I still need to know where I got the fake ID from. I met Lili at the 'Sink' where I apparently stood on the bar and danced liked a 1920s flapper. I went to Lili's house where I lost my virginity. I presume, sense I've been wrong before. Twice actually. \n\nFrom Lili's I went to the 'Oh My Books' poetry read where I engaged in some wacky poetry and met Kori. Somehow in that darkness I escaped with her, ditching Lili and going to Kori's house. At around eleven I left, and ten hours later I woke up under a bridge. \n\nOur clues were in a shoe box on my desk before we aligned them with the timeline. The book with notes that I got from Lili. Chapstick that's not my chapstick. A hundred dollar bill with a lipstick stain on it. The fake ID. I placed them all on the marker tray under their assumed time of acquisition. \n\n\"So talking to Lili again is out of the question?\" Kori asks and I nod.\n\n\"She immediately stripped naked and tried to seduce me, so not happening. I think we have all we could have from her anyway,\" I say and place the fake ID at the beginning of the timeline. I told Kori immediately what Lili tried doing. I'm sticking with my policy of full and immediate disclosure. \n\n\"What about Samantha?\" Kori asks, looking at her picture in a box drawn on the board with a question mark above it. \n\n\"I haven't talked to her since the day after we...um...\" I struggle to find a euphemism.\n\n\"I'm a big girl, you can say sex.\"\n\n\"The only reason I was giving her lessons in the bathroom was because it would hurt her reputation to be seen with me in public. Not sure how we start the conversation.\"\n\n\"She's kind of prissy,\" Kori says and sits on my bed, \"I have english with her, I'll see what I can do.\"\n\n\"Any theories on the fake ID?\" I ask, Kori looking at me with her eyebrows raised. \"The boring girl wouldn't know anything about that?\"\n\n\"No I wouldn't,\" Kori confirm before reaching over and grabbing the hundred dollar bill, \"This is the most concerning clue.\"\n\n\"Why?\" I ask. The fake ID is the only crime. \n\n\"You blacked out and woke up with money. Basic economics, you provided a good or service. What did you take again?\" Kori asks, and I opened my desk drawer and removed the pen tray, a baggy with two more pills still remaining underneath it.\n\n\"Adderall,\" I answer and hand her the pills. She looks at them and opens her phone, and a minute later she's shaking her head after searching it. \"What?\"\n\n\"This isn't Adderall, it's Ativan,\" Kori says, and I don't even know what that is, \"I was wondering because memory loss usually isn't associated with Adderall. Yes, I researched it. Ativan on the other hand, that's a side effect. You got duped.\"\n\n\"Well damn,\" I say and take the pills back, \"I got a dealer to talk to.\"\n\n\"Call me crazy, but would a drug dealer know where to get a fake ID?\" Kori asks and I hide my pills. I think about it for a second and take them out again. I'm going to need those when I talk to a drug dealer.\n\n\"I think that's a good start, I'll work the dealer, you work Samantha?\" I ask, Kori nodding. Plan is in motion. \n\n\"With that settled, you got a girl in your room,\" Kori says then kisses me. I kiss her back and lay on top of her, \"Got something in mind?\"\n\nI stop kissing her, her looking up at me, ready for the answer she assumes is coming. As much as I want to, I want our relationship to be more than that. \n\n\"We haven't had a real date,\" I say, her tilting her head in curiosity. \"Dinner?\"\n\nKori's lips slowly form a smile before she finally nods.\n\n\"Okay.\"\n\n---\n\nThe next morning I'm looking for Patrick Dean, AKA the pharmacist. He's not the only drug dealer in the school, far from it, but he's amongst the few who deals in legalish pharmaceuticals. Vicodin, Oxy, Adderall, he's got pills. He apparently has Ativan as well. Jackass.\n\nWhen I find him he's in his usual deal spot; behind the stage of the drama department. Patrick is like most of the students at this school; spoiled rich kid who deals more for fun than profit. It's about looking cool. He's in tan khakis with a long sleeved white button shirt and our tan school jacket. \n\n\"Long time no see, need another Adderall run?\" Patrick asks as he sees me approaching.\n\n\"Adderall huh?\" I ask then hand him the pills he sold me. He looks at them and then looks back me, and he knows I know. \n\n\"No refunds,\" Patrick says and flicks them back at me, the bag hitting my chest before tumbling to the floor.\n\n\"I don't care about that, but if I needed to get a fake ID, where would I go?\" I ask, Patrick laughing.\n\n\"Did you forget...Ativan, that's very possible. Chloe Matson makes them. You didn't hear that from me,\" Patrick says and walks passed me, \"Adderall is harder to get, my stash was low, you understand?\"\n\n\"Fuck you,\" is all I say as he exits into the hall.\n\n---\n\n-Kori-\n\nMy phone vibrates during passing hour immediately before my English class with Samantha North. It's a text message from Will, telling me he probably got the fake ID from Chloe Matson. The head of the yearbook and photography clubs, who'd guess that girl is committing a crime that in some instances was a felony. Yes I researched it. \n\nSamantha is surrounded by her gaggling entourage when I enter the classroom. Rebecca Smith, Nina Mahoney, Andrea Berger, and Monica Fletcher are all around her. All of them seniors or juniors, and all of them cheerleaders. In short, none of them will talk to me and all of them will stop me from talking to her. I'm just the cancer girl who works at a bookstore her parents own after all.\n\nI take my seat, in the front row, Samantha sitting far left column, second to last row, fully surrounded by her friends. I'd have to wait till after class, there no way I'm getting in there. \n\nWe're currently reading 'I am Legend' by Richard Matheson. I think about Will coming in to buy that book, and I smile without realizing it. \n\nThe teacher calls on Samantha three times during the class, and she has no idea. I felt she really understood the 'Great Gatsby' but this one was alluding her. Then I remembered Will was the reason why. Suddenly I had an in with her. \n\nI exit the class and quickly pull out my phone and text Will.\n\n'Samantha isn't grasping Matheson, ask her if she needs help with that one too.' \n\n'K' is his reply. He abbreviates his text messages and I write proper sentences.\n\n---\n\n-Will-\n\nI send Samantha a text asking her if she need anymore help in english. This was her reply. I have altered nothing. \n\n'Hoooooooooooly fuq is this shit boring! Can u make it make since? Like whut da fuq is goin on!!!!!! He kills them, he's finding a cure! They can't brek his door down but in the movie there like super strong and shit!'\n\nThat was the first message.\n\n'So yeah, tots need help with this book. Then may b a qkey, I need a fat one today. Same place during lunch?'\n\nI suddenly really appreciate Kori's texting etiquette. \n\nKori is in my lunch before we have chemistry together, so we both meet in the bathroom in the basement and wait for her. I lean against the frame between two stalls while Kori sits on the sink kicking her feet. The door opens a minute later and Samantha steps in but sees Kori before she sees me.\n\n\"You waiting for someone?\" Samantha asks then turns and sees me, \"I'm all for a threesome but I need a little warning first.\"\n\n\"Not looking for that,\" I say and Samantha looks back and forth before tossing her bag on the sink, \"I got a few questions actually.\"\n\n\"Me first, so they're like actual old school vampires. Sun, cross, garlic, and that kind of shit, right?\" Samantha asks.\n\n\"Yeah and mirrors too.\" Kori says.\n\n\"I'm sorry, who the fuck is she?\" Samantha asks. \n\n\"I'm his girlfriend,\" Kori says, Samantha instantly laughing.\n\n\"Where did we meet?\" I asked, Samantha turning to me, her face shifting to confusion, \"Yes I don't remember, I was on some bad pills.\"\n\n\"You were near my house, my real one. It was like two in morning, I was on my porch smoking while trying to read that book. You asked for a cigarette, and we talked. I asked for help, you offered it.\"\n\n\"I smoked?\" I ask, Samantha nodding.\n\n\"You smoked it like a coughing little bitch but yeah.\"\n\n\"Do you know where I came from or where I went?\" I ask, Samantha looking up at the ceiling and thinking. \n\n\"Not sure where you went, but I'm pretty sure you came from a club or something, and the women there loved you. You had red lipstick all over your face so I let you wash it off at my house,\" Samantha says and I see Kori's eyes shift to me. As if they were saying 'another one?'\n\n\"Thanks,\" I say and start to leave but she steps in front of me, \"What?\"\n\n\"Still need help with this vampire shit.\"\n\n\"Oh, right,\" I say and Kori shrugs.\n\n\"Quicky a no, or what?\" Samantha asks and looks at Kori who looks at me, \"I don't mind an audience. Haven't had a chick in a while.\"\n\n\"What?\" Kori asks as Samantha placed her hands on her knees and parted her legs to step closer to her. \"Stop.\" Kori says and pushed her away to no avail, Samantha kissing her neck. \n\n\"Not sure if I can, just realized how cute you are,\" Samantha says and starts sliding a hand up her skirt. Kori catches her wrist but the hand glided up with virtually no resistance. Her other hand pull down Kori's collar to kiss her shoulder to reveal her scar. \"Gnarly, what's that from?\"\n\n\"Nothing,\" Kori says, finally pushing back hard enough to shove her away. Samantha wobbled back and I caught her, Kori jumping off the sink and storming out of the bathroom.\n\n\"Someone's sensitive,\" Samantha says, \"Do you know what that scar's from?\"\n\n\"She had cancer removed,\" I say and run after my girlfriend. \n\n\"You fucking serious?\"\n\n\"Yes, Kori!\" I shout as I run out of the bathroom after her. When I find her she's on the stairwell crying, but evidently trying her best not to. \n\n\"I think I've been really patient, and understanding, and forgiving, but I don't know how much further into your rabbit hole I can go. She is unbelievable,\" Kori says and sees Samantha coming from behind me.\n\n\"I've been called worse,\" Samantha says and sits on the stairs next to her, \"I'm sorry, I really am. Cancer is a motherfucker. Are you in remission?\"\n\n\"Mine was treatable,\" Kori says and pulls on her collar a little, like she's trying to hide it deeper.\n\n\"Don't hide that, it's proof you won. Wear it,\" Samantha says and moved her hand away and pulled her collar down. I never really looked at it myself, but her scar is like a valley in front of her shoulder that runs along it and down her side next to her breast for nearly six inches. Samantha ran her finger along every bit of it.\n\n\"I was already self conscious before,\" Kori said nervously as Samantha traced her finger along the scar.\n\n\"Don't be, and this is nothing to be self conscious about,\" Samantha said with a smile, and I realize there is a lot more to this girl than I originally assumed. Of all of the people to calm Kori down and make her feel good about anything, the last person I'd guess to do that would be Samantha North."
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "love",
        "threesome",
        "relationship",
        "high school",
        "memory",
        "mystery",
        "humor"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/14-hours-pt-04"
}