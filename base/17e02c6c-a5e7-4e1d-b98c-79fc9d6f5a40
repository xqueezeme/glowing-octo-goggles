{
    "title": "Something about Me and You Pt. 02",
    "pages": [
        "Sorry for the long wait everyone! Being that the first part of this story was so well received, I decidedly had to continue the story. Going forward I have to say it will be slower paced that the first portion. I am really enjoying writing these characters, and hope to fully explore their passions with you. I hope you all enjoy what I've come up with, and as always let me know what you think! \n\nThis is the second part of the story, Something About You and Me. I would highly recommend that you read part one first. \n\nStory so far: Michael, our main character, is an assistant professor of Economics at the Montreal University Mcgill. He recently experienced the loss of his mother; and was meeting with his therapist to help soothe the emotional wounds sustained as a consequence. She suggested that Michael try new things to help gather his thoughts and he took up hiking. On these hikes is where Michael met Sam, a beautiful red haired trans woman with a rather intimidating appendage. He began to have feelings for her and found himself sucking her dick rather suddenly. \n\n** All characters are fictitious in nature, and any resemblance to real people or events is purely coincidental. In addition, all characters are over the age of 18 and are consenting adults. ** \n\nCheers, \n\nDr. Masterfield \n\nChapter Five \n\nI woke from a troubled sleep, brought about by a sharp breath. No dim light bled through my darkening curtains; I knew it was still in the early morning hours... I would be lying if I were to say that this was a new occurrence, even before my mother died, my thoughts often strayed too far from the realm of sleep. I was, again awakened as a consequence. \n\nAs a child I would often lay awake in these early mornings and think about my family, love, or my life generally. In fact, the vast majority of the material for my doctoral thesis was amalgamated during these periods of emanation. Unfortunately for me the last few mornings have been spent thinking about that night in the bathroom, it had been a week since I last spoke to Sam, not for a lack of initiative on her part. I had come to the conclusion that between her forward advances and my weakened sense of self were what caused my feelings for her. I knew I wasn't gay, I mean I had done experiments in the last few days, where I would attempt to watch typical porn, then would switch over to a tab with only gay porn, and it would immediately end my arousal. It was clear then, to me at least I wasn't really into men, and Sam wasn't technically a man so my attractions were born of a mere misunderstanding. \n\nThe only problem with my method was that every time I thought about her, I would immediately get hard. It was becoming a real endeavor to make it through the day without, well you know... relieving myself. In a few hours I had another appointment with my therapist, and was hoping that maybe she could shed some light into my current predicament. I had always respected Charon for her honesty and thought this should be no different. \n\n**** \n\nI was early to my appointment, as was my norm. I drummed my fingers against the maple armrest of the chair, until the receptionist, a large black woman; shot me what my black friends call the \"Look\". I took her at her word and stopped my needless cacophony. It was at that moment Charon walked into the room, she looked radiant. Her long dirty blonde hair swaying with her hips as she walked into the room, she wore a light grey cardigan above an egg white blouse, with black capris. \n\n\"Michael, I didn't expect to see you already!\" She asked almost pointedly while gesturing that I could follow her to her office. \n\n\"Right,\" she said putting her expensive looking handbag on her chair; \n\n\"Do you want a cup of coffee?\" \n\n\"I would love a cup of coffee\" I said exacerbated. It hadn't dawned on me that, being up several hours before everyone else, gave me plenty of time to make myself a cup of coffee, but I digress. \n\nWe waited in relative silence watching with disquietude as our black vise dripped elegantly from the stainless-steel monstrosity, she had declared was Italian. \n\n\"You're quiet Michael, that's not like you at all.\" \n\nI took an indrawn breath, and exhaled through my nose. \"I just don't know where to start.\" I declared. \n\nA thick blanket of tension eased itself into the room, and almost as though sensing it Charon passed me my cup of coffee with a shallow smile, though enough to form her smile lines next to her right eye. \n\nShe set about making her cup of coffee and asked: \"why don't you start with what you've been doing to find yourself, what we had discussed last time?\" \n\n\"Well, I had been going hiking.\" \n\n\"You had?\" she inquired. \n\n\"Yeah, I met this person hiking, and it's kind of soured the experience.\" \n\nI did not think for a moment that Charon would leave it at that, which was unfortunate. Because she did in fact, not leave it at that. \n\n\"So you met someone; and that causes you to halt what you trust will make you better, and that you enjoy; on account of -someone-... Mike, I've known you a long while, and I know you're not telling me everything.\" \n\nThe look on her face all but screamed \"Gotchya!\" \n\nWith a grumble, I told her the lengthy story of Sam and myself. \n\n... \n\nCharon sat intently in the back of her chair with her leg up jotting down details into her notepad. \n\n\"I think what's happened here Michael is that you actually have discovered yourself.\" \n\n\"What the hell do you mean?!\" I exclaimed. \n\n\"Look, you said it yourself, you are clearly attracted to this woman, what is there that suggests that her *ahem* added value, is even a negative?\" \n\n\"I-I... I don't know!? It feels like it is.\" \n\n\"What it seems like you're experiencing is latent homophobic tendencies, it's no consequence of your own, but rather is typically related to upbringing.\" \n\n\"But I don't even dislike her, how can I be homophobic?\" I asked throwing my hands into the air like a child. \n\n\"It all comes down to a point of reference, you don't disdain her for being trans per se, because you have experience to draw upon, perhaps a transgendered student, or something of the like.\" \n\nI sank into the back of the chair, crossed my arms and looked at her flatly. \n\nShe gave me the same thin smile and blinked her eyes slowly. \n\n\"As a result of having no preconceived idea of what had happened with Sam, you defaulted to an older schema, an older frame of thinking to put it more simply.\" \n\nI stroked my face with my palm, \"So let me see if I follow you here, you think because I had never considered having sex with a trans woman, is why I'm experiencing this level of anxiety related to it?\" \n\n\"Actually, that's a very astute analysis Michael.\" She says squinting her eyes slightly. Implying a recognition of my effort. \n\n\"Alright, then that leaves one question; what the fuck do I do now?\" \n\n\"Michael, you're already making good progress, issues such as these take time, and more importantly, experimentation; to come to terms with your issues.\" \n\n\"Experimentation?\" \n\n\"Exactly, try things out, and for God's sake, don't keep punishing yourself for what you know you enjoy. It's unhealthy. '' She smiled, showing her smile lines. Though stern, her cadence and tone were also endearing. \n\nI smiled too, less because of her message and more because I felt I should. \n\n\"How can you be so sure this is what I like?\" \n\n\"Michael, listen, it's patently obvious to me that you're in need of a more receptive style of relationship. Let go of the reigns sometime.\" \n\nThat last comment had taken me aback some, I'm what most people might call a control freak. Everything I do is calculated, exacted with precision. Allowing myself to be led for a change, perhaps could be a good thing. \n\n\"What should I do then?\" I asked more relaxed than I had before. \n\n\"I can't tell you what to do, but I can tell you that you would be remiss to let such an opportunity fall through your hands.\" \n\nChapter Six \n\nMy office was quiet, more quiet than usual. \n\nHave you ever considered what silence sounds like? I could hear even the slightest motion from the office next to mine, the minute hum of the lightbulb in the light fixture above my head. While I looked at my screen filled to the brim with open tabs, sticky notes reminding me of things I needed to get done; all I could think about was Sam. Her presence in my mind providing even more noise than the endless compendium of responsibilities in front of me. \n\nIt's not that I didn't want to get my work done and to keep ahead of the curve, I just couldn't. \n\nEach keystroke I made, felt more arduous than the last. I imagined her silky-smooth hands running through my hair while we watched a film, or the scent of her neck when I approached her from behind and kissed her neck. Was I really ready to give up the chance at that, because I'm afraid? \n\nI drummed my fingers into my desk, I knew Dr. Schnider next door could hear me, but I couldn't care less. Finally, I reached for my phone, opened contacts, and pressed call. \n\nBrrrrr... \n\nBrrrrr... \n\nBrrrrr... \n\nThe dread was building, my stomach turning in suspense, I felt nauseated. \n\n\"Hello?\" \n\nMy heart was beating in my chest so hard I could feel my shirt move as a consequence, I suddenly realized I forgot the convention of a phone call. \n\n\"Hellooo? Mike are you there?\" \n\n\"Oh uhg... Hey Sam...\" cool as a cucumber, as usual. \n\n\"Is, uh, Is everything okay?\" \n\nI opined that she was becoming impatient, and therefore I figured I would cut to the chase. \n\n\"Yup.\" Annnnnnd Home run for Michael. \n\n\"Oh well that's good.\" I could hear her foot tapping in the background. \n\nThere was a silence over the phone, I could swear I could hear the hum of the fluorescent lights in the rest of the building. \n\nSam broke the silence in a way customary of her, \"Look Mike, I'm sorry about the other night.\" \n\nI sighed in both, desperation, and in relief. \n\n\"It's not that I didn't like what we... you did, but I really don't do that kind of thing often...\" She continued. \n\n\"Sam, it's okay. I was honestly pretty shaken up by the whole endeavor, but I think I've come to terms with it.\" \n\n\"You have?\" She questioned, almost sounding shocked. \n\n\"Yes, honestly.\" I smiled into the phone. \n\n\"All I've been able to think about the last few days is you, and if I'm honest, it scared me at first.\" \n\n\"Mike, I understand, if you don't want to see me any...\" \n\n\"No.\" I cut her off. \n\n\"I do want to see you, that's the thing.\" \n\nOur conversation continued for a while longer, we had made plans to get dinner and a movie that night... I was both anxious and nervous and... something else. I'm not sure how to describe it, but it felt... Right, somehow. \n\nChapter Seven \n\nI left the office at around 4:00, which gave me two hours before I had to go pick her up at her apartment. In the meantime, I had been to the florist and grabbed one of their pre-made bouquets, this one consisted of mainly roses and tulips. I thought the white of the tulips contrasted well with the pink and reds of the roses. Afterwards, I had gone home, showered and changed. \n\nNow I don't want to seem out of touch with the bulk of the population, but being in my position of intellectual authority, had removed me slightly from the social concepts like suitable attire for a dinner and a movie. I had arrived at her apartment wearing my Charcoal grey Burberry, vested, with a off-white shirt. She opened the door wearing grey Roots sweatpants, and a jacket. \n\nWe both stared at each other in disbelief as to what we were seeing, and both burst out laughing. \n\n\"When was the last time you've been to dinner and a movie?!\" She barked out between hearty laughs. \n\n\"You look like you're on your way to court!\" \n\n\"Speak for yourself! You look like you live in your mother's basement!\" \n\nWe continued to laugh and tease each other the walk to my car about a block away. (Montreal parking let me tell you). \n\nIt was decided mutually, that we should stop at my flat so I could change. I threw on a pair of jeans and a double-breasted cardigan instead of my \"courthouse\" clothes. \n\n**** \n\nWhen I left my bedroom, I found Sam snooping through my shelves, that wasn't so much the issue. I found her reading the framed obituary I had written for my mother. \n\n\"Michael... why didn't you say anything?\" \n\n\"I didn't really want to bring you down with it, we hardly knew each other, I mean in some sense we still don't.\" \n\nSam walked over to me and gave me a warm hug, I was startled at first, but slowly melted into her grasp. I rested my head on her neck, her scent was all I had imagined it to be. Warm, and flowery, but not overwhelming. We stood like that for several long moments, I was fighting back tears when I let go of her, we backed up slightly my hands resting on her hips, hers on mine. \n\nI stared into her eyes, and I leaned in and kissed her. It had been some time that I hadn't felt the pillowy lips of another person, she leaned into my arms, and my hand ran up her back resting on the back of her head. \n\nThe kiss went on for what felt like an eternity, though I paid it no mind, when she pulled back slightly and looked into my eyes, she had the look of passion emanating from her eyris. \n\n\"We should get going soon,\" I said. \n\n\"We have a reservation to keep.\" I continued. \n\n**** \n\nDinner was good, we had gone to a small pizza parlor on Mount Royal hill at the center of the city. Unfortunately, it had begun to rain pretty heavily, and we decided to head in for the night. I had suggested since I lived only a ten-minute drive from there, we should just watch a movie at my place. She agreed, noting how my place was much cleaner than hers, and that I don't have roommates. \n\nWe had arrived to my place around 9:00, when we did, I took off my cardigan and was left in a grey polo. She sat on my sofa and curled her legs up into her chest, leaning on the armrest of the couch. I rifled around in the drawer next to my TV and found the remote. I sat at the other end of the couch and made myself comfortable. \n\nSam looked at me and smiled, and I moved over to rest my head on her shoulder. She extended her arm around my shoulder. It was very comfortable. \n\n\"What did you want to watch?\" I asked, rather timidly. \n\n\"Hmm\" she hummed as she scrolled through Netflix, and picked a generic looking rom-com. I had expected her to pick something more exciting given her outgoing and bubbly demeanor. \n\nAs the movie went on, it became clear that the writer of this screenplay was a hack, it was the classic Girl likes Boy, but is too shy to say anything, and Boy likes girl but is too popular for her. I had thought we were over this since Mean Girls? But I digress, becoming bored with the film I had started to tease Sam a little. I began by rubbing my finger nails up the length of her thigh, it was obviously having the desired effect. \n\nA small bulge had begun to emerge from her crotch, however frustratingly she paid no mind... She continued to watch the film, a smirk appearing in the corners of her mouth. Obviously, she was enjoying this I reasoned. I scooched down from her shoulder to rest my head on her hip. In response, she stretched out her legs and groaned lightly under her breath. I could make out the outline of her cock in this position. \n\nI had forgotten how large it was, I remembered it was big, but I had forgotten the feeling of emasculation that coupled with it. \n\nShe brushed the side of my head with the back of her hand. And ran her nails through my hair, it felt exhilarating. \n\nHer scent had gone from soft and flowery to the unmistakable scent of lust, her grey sweatpants had developed a small wet spot at the tip of her cock. I gently ran my fingers over the length of it through her pants. \n\nShe moaned lightly, resting back into the couch. Obviously, I was on the right track, I began to play with her waistband, teasingly lifting it. Hooking it with my thumbs, while rubbing around the base of her cock. \n\nShe finally looked down at me, \"You're such a tease!\" I smiled back up at her and grabbed the outline of her cock. Rubbing her through her pants. \n\nFinally, as she was getting flustered and red in the face, I grabbed at the button on the first clasp of her pants. I fished her cock out of her pants and stroked the wet tip, making the shaft slick. She sighed in bliss letting the waves of pleasure run from her cock through her body. \n\nI stroked her cock slowly, up and down. The lewd sound of a lubricated surface filled the room. Coupled with her relentless sighs and moans, I hastened my pace slightly, as a consequence, she placed her hand on the back of my head. Pushing lightly, suggesting that while the handjob was nice, she would much prefer the next base. \n\nWhile she was guiding me I remembered what Charon had told me, let myself go with the flow of things... I'm not sure this is necessarily what she meant but I couldn't help but feel she was right. I didn't feel as though she was forcing me, it was a guide that suggested what she would like me to do I reasoned. I parted my lips and gently reached my tongue of my mouth, just brushing the tip of her swollen glands. She removed her hand, and placed it on my side. \n\nThe flavor was salty, but not bad. It tasted like a strong brie, the flavor exploded into my mouth as I lowered my parted lips over the sensitive head of her cock. The immense heat emanating from her cock was palpable. I took my fingers and ran them over her taught balls, her sac was tight, almost unusually so, and very smooth. I continued to rub her balls while taking her cock into my mouth. It was at my own pace, and I knew what I was doing. \n\nStrangely as I imagined this would feel emasculating, it well... didn't. I framed my mind in a way that seemed to have made sense. It was no different than cunnilingus I reasoned, so what if she came in a different way than other women? The only thing that mattered to me at that moment was that she in fact, did cum. I remembered the feeling of it when she came last time, the slow pulsations in my mouth, followed by the sudden pressure of her large seminal load. \n\nHer cock now rock hard in my mouth, I ditched her balls and grabbed the shaft and began to pump it up and down in rhythm with my suckling mouth. I wanted her seed and badly, the sensation of her cock how it was both hard and soft at the same time, coupled with the intense flavor, and scent were making me crazy. My cock, now hard in my jeans struggled against my waistband. \n\nSam stayed where she was, looking down at me wanton desire taking over her senses. While I continued my love, I couldn't help but moan into her cock. It was extraordinary, I didn't think it was possible to pleasure myself in such a way while servicing the needs of another. \n\nEvery pump with my hands forced a few milliliters of pre cum from her, sending a wave of pleasure which was born from the taste that overwhelmed my senses. I let wave after wave of such pleasure roll through me, my cock aching and struggling in my pants and soft undergarments. \n\nSam's fingers running through my hair once more, grateting over my scalp, sent me over the edge. I felt my cock spasm and unload in my pants. All while moaning into her delicious penis. \n\nI looked up at her embarrassed, unsure of what had just happened. She looked bemused, and... puzzled really. \n\n\"Did you just?\" She inquired. \n\nI took her cock out of my mouth for a mere moment, and already I missed its delicious texture and flavor. \n\n\"I think I just came in my pants.\" I said like an imbecile. \n\nSam let out a hearty laugh, then turned her attention back to me. \n\n\"That's so fucking hot baby\". \n\nShe gently guided me to her cock again, and in skipping many of the pleasantries; I happily obliged. ",
        "At first the experience felt embarrassed, and I felt ashamed of myself. But seeing her, a beautiful woman, so driven by lust made the shame worthwhile. I gave away all other manner of social recluse, and slobbered that pole clean. Soon my redoubled efforts had brought her close to climax, but I wanted to go the extra mile this time. I got off of the couch and onto my knees in front of her. Her legs spread, and her cock resting straight forward at my face. I rested her shaft on my face while I lowered myself to lick, and kiss her cock from base to the tip. When I would reach the tip, I slowly slobbered my way back down the shaft. Her expression heavenly. \n\nIt was before long she was close to climax again, and admittedly I was too. I took my cock out from the front of my jeans, and started stroking it while sucking the cock of the woman of my dreams. Her legs tensed, and her spare hand gripped the armrest of the couch furiously, I knew she was going to cum. I took her out of my mouth and began to stroke it with haste pointed over my face. I'd seen similar things in porn, and I knew I would love to do that to a woman. Vicariously I assumed Sam would too. \n\n\"Uhhnnnng\" Sam grunted in ecstasy; when the first rope of semen fled her cock, it landed directly onto the bridge of my nose, her second larger shot splattered over my brow, I angled her cock towards my mouth for the last two shots, even though it was less than half her load it still filled my mouth as though I had taken a bite of food. \n\nI continued to stroke her cock, placing the head on the end of my tongue, sucking out any of the remaining semen. She relished this, stretching out her legs and sighing in bliss while I sucked on her overly sensitive glans. Before long it had become too sensitive and I climbed back up onto the couch. She had taken some wet naps from out of her purse and handed them to me. I cleaned my face and around my mouth of the drool and cum that not was beginning to crust over. I snuggled my face into her arm and shoulder and she obliged by laying her arm over my chest gently rubbing me. \n\n\"That was so amazing baby, you sure know how to treat a lady to a good time.\" \n\nI sighed and said nothing, just enjoying the moment of comfort and warmth under her arm. She kissed my neck. \n\n\"You know, most people don't ejaculate into their pants sucking their girlfriends' cock\" I heard her sly demeanor in her tone. \n\n\"It turns out there's more to me than meets the eye, if I'm honest, I actually loved it.\" \n\n\"Looks like I've found myself a keeper\" \n\nWe both shared a laugh, and cuddled like that for the next while. \n\n\"Does this mean we're going steady?\" I asked, somewhat seriously. \n\n\"I would be happy to be your girlfriend Michael.\" \n\nWe kissed passionately, the world seemed to melt away and wrap us in a warm embrace. \n\nChapter Eight. \n\nI woke the next day, feeling like I was a new man. I felt amazing, like superman or something. I had gone to the office and powered through several projects sending them out like I was mad. It had been positively ages since I last felt this good. I had accomplished what I wanted to for the week, in the space of a few hours. I was on cloud nine. I felt so good, I actually decided to take a walk around the campus. I didn't do this often, mostly because I felt I never had time. I spent some time looking at the art in the halls, and in so doing bumped into Charon. \n\n\"Hello Michael! Nice to see you too\" she smiled at me. \n\n\"I'm so sorry, Charon are you okay?\" \n\n\"I'm fine, how are you doing? Mike you look great?! What happened yesterday? last I saw you; you were a bundle of nerves.\" \n\n\"Honestly Charon, you could not have been more correct, I spent the night with Sam and well... I feel great!\" \n\n\"That's great to hear, Mike, we can discuss it at greater length in our next session, in the meantime, I have to go to a meeting with the head of our department.\" \n\n\"Heh. Lucky you\" I quipped. \n\n\"Oh, ever so lucky... Have a nice day Michael\". \n\nWith that, Charon strut her way down the hall. \n\nWhen I looked around, I noticed that I was near the graduate room, a small space for grad students to get their work done away from the other undergraduate students. It was around 11:30 at the time, so I figured I would see if Sam wanted to take some time to have lunch. I had never actually been in the grad lounge, since I was only an assistant professor, I didn't have the option to take on grad students. It was actually rather nice, compared to the cave at University of Manitoba. I saw Sam skimming through a pile of books against the far wall. I walked up behind her and noticed she had earbuds in, so I approached and kissed her neck. She jumped in fright, before realizing it was me. \n\n\"Mike; Jesus Christ! You scared the crap out of me!\" \n\n\"Sorry, thought I would surprise you.\" I smiled at her. She was sitting on a chair and I stood behind it, caressing her shoulders. \n\n\"Feel like grabbing some lunch?\" I asked, beaming. \n\nSam's stomach grumbled in response, she smiled. \n\n\"Does that answer your question?\" \n\nWe had opted for McConnell Cafe, an Italian joint on campus. Mostly because it was close to the Grad lounge. \n\nI had ordered a vegetarian pizza, while Sam had ordered spaghetti and meatballs. The plates were delicious as usual. But the company, while also delicious, was very pleasant. \n\n\"You know, I could probably appeal to get you your own office.\" I told Sam, she looked at me cross. \n\n\"Really? Are you even allowed to do that? Isn't that a conflict of interest or something?\" \n\n\"It's no problem, the office next to mine is vacant almost perpetually, you are teaching a class, right?\" \n\n\"Yeah, I'm teaching intro psychology next semester.\" \n\n\"So, it's no problem at all, I can put in the request to have you fill the vacancy. I mean, the psychology department is nowhere near the economics department, but there shouldn't be an issue\". \n\nShe squinted slightly, \"I think you're just looking for a distraction while at work.\" \n\nI laughed, and leaned in closer to her. \n\n\"Imagine, I might hide under your desk and suck that great cock of yours,\" I whispered. \n\nHer face became red, though not from embarrassment I wagered. \n\nShe put her hand on mine and we kissed for a moment. \n\n\"Careful tiger, talking like that I might be so inclined to take you up on it.\" She said breaking the kiss. Clicking her teeth together. Playfully squeezing my hand. \n\n**** \n\nI paid for the bill, and we both went our separate ways, she went back to the grad lounge and I went to the Registrar's office, to suggest Sam should get her own office. The rest of the day seemed to fly by and before I knew it, there was a knock on my office door. Sam was there with a banker's box full of knickknacks. \n\n\"So... I got this email from the registrar.\" She said smiling biting her lower lip. \"Might you have had something to do with that Sir.\" \n\n\"Nothing at all.\" I smiled back at her. \n\n\"Which office did they give you?\" \n\n\"The one right next to yours. Care to keep me company while they clean it?\" Sam asked basically pushing me through the door. \n\n\"With a lovely young woman such as yourself? I must've died and gone to heaven.\" Sam pushed me onto my desk, and we held each other for a short while, I gazed into her eyes and she into mine. I felt her fiddle with my belt some, and before long my pants were being lowered. \n\nMy cock was already hard, before she started grinding her front into me. She rubbed my cock through my undergarments. \n\n\"After that loving you gave me last night, I can't help but return the favor Michael...\" \n\nIt was strange, while I loved the feeling of her jerking my cock, I couldn't help but want to please her. Even when I watched her drop to her knees in front of me and my erection, I wanted to be the one on her end. I didn't complain, in fact, I didn't exactly have the initiative because she made short order of gobbling my cock up. \n\nEmbarrassingly, I came pretty much immediately. Soiling her mouth with my cum. She looked surprised. To say the least. She swallowed, and rose to her feet in front of my softening cock. \n\nHer black skirt pitching quite the tent between us. \n\n\"Well that was a good appetizer,\" she said, raising her left eyebrow. She swiftly kissed me, breaking the silence following. I tentatively reached out and grabbed her cock under her skirt. Gave it a few strokes and then we swapped places. She leaned on my desk, while I slowly descended kissing her the long of the way down. \n\nI actually liked when she wore a skirt like this, all I had to do was climb up underneath to get to my prize. Rather than that tricky business of fiddling with clasps or buttons. I was amused to see that she was wearing Hello Kitty panties, Her huge cock protruding from them like a branch on a great tree. I continued stroking her cock while I sucked one of her smooth balls into my mouth, slobbering all over it, really making a mess of both her testicles and of my face. I heard her moan from above me, I stayed the course taking the second ball into my mouth. Licking, sucking, and slobbering all over it. \n\nThe sounds I was making were so lewd that I worried Dr. Schnider might hear us next door. At this moment though all I cared about was making this gorgeous woman in front of me feel good. Her pleasure paramount. Her needs, placed above all others. I stroked with both hands as I pulled her into my mouth, totally enveloping her large cock. I pulled in hard, and gagged on her big dick. I was stroking furiously, while she moaned like a pornstar above me, \n\nShe came hard, and without warning. Blast after blast of cum jettisoned into my gullet from her thick and raging cock. Her red hair splayed all over the place, and her smooth skin clammy from the exertion. I swallowed it all attentively, I made a loud gulping noise to make sure she knew that I had. \n\nI thought about how amazing it would be to have full access to this wonderful outlet, I had never felt more fulfilled in my life as I had when I sucked her dick. But a grim thought came to me, what if she gets tired of just having my mouth whenever she wanted it... What if she wanted more? \n\nWas I ready to give that to her? Was she expecting that I do? How do I feel about it? Will she let me do it that way to her? Huh... perhaps I was too hasty in my assessment of the situation. She patted my head gently, indicating that she was done. I rose to my feet slowly, considering the thought I just had. \n\nI wasn't about to lose everything on account of my insecurity, but I knew it was going to be a hard conversation to have... Maybe I should speak with Charon first..."
    ],
    "authorname": "Erichmasterfield",
    "tags": [
        "dominant shemale",
        "romance",
        "oral",
        "trans",
        "trans-dom",
        "transgender",
        "romantic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/something-about-me-and-you-pt-02"
}