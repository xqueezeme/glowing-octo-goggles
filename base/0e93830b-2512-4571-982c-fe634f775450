{
    "title": "Starlight Gleaming Ch. 20",
    "pages": [
        "Chapter 20 \n\nPaying the Devil His Due with Interest \n\nby T. J. Skywind \u00a9 \n\nTo the curious, when I write I listen to several artists. Among them Jean Michel Jarre, Medwyn Goodall, Johnny Clegg, David &amp; Diane Arkenstone, Lindsey Stirling, and a recent addition are Two Steps From Hell. Sometimes I rock out on classics from the 1920s to current hits, but I prefer instrumentally as I have a tendency to sing along, and that pulls me out of my writing space. Music allows us to reach closer to the divine than with words alone. \n\nI should note here that I made a mistake in my calendar counting in chapter 18; the time allotted for Ranji to complete his task was just less than ninety days, not sixty. I needed to see the time line, so using a spreadsheet, I recreated the Incan and Mayan annual calendars to match up with our modern one, and when I was done the error was right there, plain as day. A wince-worthy WTF moment. \n\nNOTE: In this chapter, there is a scene in this story that describes the graphic and brutal murders of some good friends. It's marked, allowing you to skip ahead if you so wish. It was tough to write because I liked both of them. \n\nThis chapter begins Book 5 (and page 1435 of Starlight Gleaming!). After some reflection, I have grouped the chapters into books as follows: \n\nBook 1 -- Janetta, chapters 1 through 10 \n\nBook 2 -- High Guard, chapters 11 through 14 \n\nBook 3 -- Descent, chapters 15 through 17 \n\nBook 4 -- Command, chapters 18 and 19 \n\nBook 5 -- Atlantis Rising, chapters 20 through 22 \n\nWith this story, Atlantis begins applying pressure to High Guard War Base. This particular tale begins ten days after the end of Chapter 19. \n\nThanks to TerrytheTraveler for lending a hand with catching errors. For my past beta readers, ThatEditorGuy and gyfurune, a shout out to you. Slaint\u00e9, and I hope life is treating you well. Any gaffs, typos, dropped words, usage errors, omissions, commissions, permissions, WTFs and OMGs are totally my fault. Enjoy! \n\nSummary \n\nThis story is told from the viewpoint of Field Commander Ranji Kandikan, an officer in the Imperial Air Service, currently posted to High Guard War Base, and recently assigned command of the 602 Air Security Regiment. \n\nLiving with Ranji are Captain Janetta Tlacotli, a fighter pilot assigned to the 233rd Interceptor Group and her ground crew: Second Sergeant Zinja Ba'lanchicotl, aircraft mechanic and crew chief; Sergeant Cholan Yakalme, E-man; and Corporal Ixma Ba'lanchicotl, Zinja's daughter, and general labor. Janetta is the Mistress of Ranji's household, but Ranji's Personal Servant, Calia, manages the day-to-day details. Living with them are Zinja and Ranji's adopted daughter, Sisi, nearly six, and Ixma and Ranji's adopted daughter, Mina, who's turning four. All five adult women share Ranji as their lover. \n\nRanji's growing household includes two new young servant girls, Salvia and Tarragon (sometimes shortened to Terra). Ranji's aide, Sergeant Sowitwee also lives in the house, along with his very pregnant wife, Nariya, and his recently arrived father, Daydo Bancorri. \n\nLiving in a small cottage across the war base are Sowitwee's two sisters, Ramilla and Leetsi, the latter whom is pregnant. Sowitwee rescued them from the living in the slums, drug addiction, and a life of prostitution. In another cottage are Cholan's sisters, the widow Tanti and the recently divorced Breena. With them are Breena's nanny, Zeezu, and Breena's three children, Aarpo (6) and Sachi (4), and a newborn daughter, Si\u00e9nte. Both families fled from Cop\u00e1n for the safety of High Guard War Base under Ranji's protection, all recounted in chapter 19. \n\nPending is the arrival of the Air Marshal's inspection of the 602 with Ranji as its CO, as well as a review of High Guard War Base. Hanging on the Air Marshal's assessment is Ranji's career and the future of his Protection Orders. \n\nIn addition to his future career, there are several matters also demanding Ranji's attention. Calia's growing psychic abilities -- are they safe? Spreading the Protection Order to places outside of High Guard. The growing threat from Atlantis and the increased attacks against military aircraft by their alien allies, the Greys. The murderer Charunt Tsagoya still remains at large. Has he fled? Or is he planning to carry out his threats against Ranji's family? Will the draconians make further attempts against Ranji and his father? And the most dangerous threat of all is Supay, Minister of Imperial Security. Reputedly the second-most powerful man in the Empire after the Emperor, he is a man obsessed with accumulating power and wealth by any means, fair or foul -- with a tendency to choose foul. The Minister has become aware that his power has been eroded and some of his lucrative moneymaking operations have been curtailed several times by Ranji Kandikan and his allies -- both at High Guard and at Cop\u00e1n. \n\n* * * * * \n\nBook 5 -- Atlantis Rising \n\nPart 1 -- Family Time \n\n* * * * * \n\n\"And so, after many days travel, the great god Inti returned home atop the majestic mountain peaks. Behind him were the animals and plants that had seen him during his great quest to see the world, and they had followed him to the gates of his mountain palace.\" \n\nI paused in my reading, turning the large picture book so the others gathered around could see the large colorful drawings. Ixma sat with little Mina on my left. Sisi was wedged between me and Zinja on my right. Janetta lay stretched out in a recliner brought in from the front room, trying to rest her injured hip on pillows, listening as she nursed her second full tumbler of metl juice. At my feet were Cholan and Calia, while parked right behind them were the two servant girls, Tarragon and Salvia. \n\nCuddling on a nearby love-seat were Sowitwee and Nariya. Sowitwee's father Daydo was away for the night, visiting his daughters in their small cottage. While their medical needs had been dealt with, the sisters were not warming up to either their father or their brother very quickly -- and their response to Nariya had surprisingly been rather cold. Ramilla had been caught soliciting near the enlisted club for money and drugs, seemingly determined to continue the destruction of her life they had just been rescued from. I didn't care about the sex for money, but Sowitwee and I did have a long talk with both sisters about trying to get drugs, warning them that future attempts would have consequences. \n\nWhen the book was once again on my lap, my girls leaned against me, peering to look at the new picture as I turned the page. \n\nI pointed at one of the animals, turning it so Sisi and the servant girls could see, too. \"What kind of animal is that, Mina?\" \n\n\"Bear!\" \n\n\"Very good. And that one?\" \n\n\"Llama!\" \n\n\"Good job, Mina! Sisi, why do you think the animals and plants followed Inti home?\" \n\n\"Because he's a god?\" \n\n\"Let's look at the picture for a clue. See what the artist has done here? All the animals and plants close to Inti are in bright colors, but the ones further away are in shadow. What happens when the sun goes down?\" \n\n\"It gets dark out!\" she announced with a smile. \n\n\"What else do we get from the sun? What happens when we go outside in the summertime?\" \n\n\"It gets hot outside!\" \n\nI delighted in watching her face as connections were made. \n\n\"Yes, that's right. The sun gives us energy in the form of light and heat. So, based on the clue from the artist and what you know about the sun, why do you think the animals and plants are following Inti?\" \n\nRealization crossed her face and she grinned at me. \"They want to remain in the light! And to stay warm!\" \n\n\"What do you think, Mina? Is Sisi right?\" \n\nHer face serious, Mina looked intently at Sisi, then to me, then back to Sisi again before nodding slowly, her face grave. \n\n\"Well, let's see if both of you are right.\" I turned the page and read the next paragraph. \"The bear stood up and cried out, 'Oh, mighty Inti, please don't leave us! We need your light to see by! All the plants need your light to grow. \n\n'Without your light, the plants suffer. Without plants, there is no food for the guinea pigs, the mice, the sheep, the llamas, or the insects that crawl. Without insects, seeds, or fruit, the bats and the birds go hungry. Without guinea pigs and mice, the foxes and wolves go hungry. Without sheep or llamas, the jaguars, lions, and saber cats go hungry. Even the giant sloths and mastodons starve. Without your heat and your light, the world grows cold and glaciers advance across the land, crushing everything under the ice. Please don't hide from us!' The animals and plants added their cries to the bear's plea.\" \n\nAs I showed the pictures to the others gathered around, Sisi beamed in delight as she put her hand onto my shoulder. \"Tenant, I was right!\" \n\n\"Yes, you were,\" I proudly told her. \"Good job!\" \n\nMina beamed at her. Zinja leaned down, nuzzling into Sisi's hair. \"Such a smart girl,\" she murmured. Sisi grinned as she basked in the praise. \n\nAfter showing the picture, I turned the page and read on. \"Inti turned to them, wishing to help them, yet not willing to give up his exploration of the world. 'I wish to rest awhile,' he told all those gathered around him. 'After I rest, there are more wonders yet for me to see and to learn about. If I leave kay pacha, this world of animals and growing things and return to my house in the sky, to hanan pacha, I can see everything, but I can't speak to those I see, and I will be alone again.'\" \n\nAfter I showed the illustrations, I resumed the tale. \"The animals and plants debated the problem, but they had no answer to Inti's dilemma. They wanted him to return to the heavens, to drive away the continuous darkness, and to bring back the sun's life-giving warmth, so no more of them perished. But they also wanted to make Inti happy, and they feared Inti would not return to the sky until he had seen all he wanted to see. If they forced him to return when he wasn't ready, they could make him angry, and he might withhold the rains or make the days too hot.\" \n\nThen it was a single sentence for each full-page illustration. \"Many plants were already sad and their leaves began to droop, hungry for lack of sunlight. In the darkness, tapirs had a harder time running away from the jaguars. Sheep and llamas had trouble traveling the narrow mountain trails without falling. What, oh what could they do?\" \n\nNext was a double-page illustration, showing a woman in a silvery dress and white hair floating above the ground. \"All the animals and birds turned to her, and they bowed, recognizing her divine presence. She called out, 'Mighty Inti, do you know who I am?' \n\nAnother double-page illustration. \"Inti heard her sweet voice and became curious to meet the speaker. Who, he wondered, could have such a wonderful voice? Inti approached her and was taken by her beauty. 'You remind me of someone I once knew. Who are you?' he cried out. \n\nI wasn't sure who was more excited about the story -- Sisi, Mina, or the two servant girls. \n\n\"'I have followed your adventures all my life,' she answered. 'The birds and fishes and serpents all tell me of your mighty deeds. Even the wind whispers about the great Inti and his bravery. You have defeated many terrible demons during your visit to ukhu pacha, the underworld lands beneath the earth. You have sailed the seas and traveled across many lands of kay pacha. Mountain dragons have been tamed and evil defeated. You have grown strong and are the finest warrior in all the heavens, yet you are also wise in the ways of the gods.' \n\n\"Inti approached her. 'You are most beautiful to look upon. Who are you? Fair maiden, I must know your name and more about you!'\" \n\nThe next picture was a portrait, showing them clasping hands as they faced each other. \"She smiled at him. 'I am your sister, Mama Killa,' she told him. \n\n\"'I remember you now,' Inti said, happy at her words. 'I have traveled so far and for so long, I had forgotten my dearest companion from my childhood. Little sister, you have grown and changed so wondrously since last I saw you.' \n\n\"She said to him, 'The world needs your light and warmth back in hanan pacha, Inti, where it can shine high up above even the tallest mountains, so that as the world spins, it will have both day and night in their proper turn, and the seasons for planting, growth, harvest, and winter. Sunshine for growing, and night for rest. All the world needs you high in the sky, showing us your splendor.'\" \n\nI paused, looking at my girls. \"What do you do you think the word splendor means?\" \n\nMina shrugged, looking to Sisi for the answer. \n\nSisi frowned. \"I don't know, Tenant. Something good?\" \n\n\"Just so. It's another way to say beautiful,\" I said. \"But it also implies fancy and even something that has been crafted or fashioned to look pretty. Let me give you an example. You know that Ixma is beautiful.\" Startled to be the focus, Ixma suddenly blushed even as she gave me a look of love. \"But when Ixma is holding Mina, and you can see how much she loves Mina, well, that's not just beautiful, but splendorous. A beauty that's above normal, something that's rare and exceptional. Do you understand?\" \n\nIxma mouthed I love you at me before snuggling Mina and giving her daughter kisses as she wriggled. \"No, Mama. Story!\" \n\nSisi nodded thoughtfully at me. \"Yes, I understand, Tenant. Like when Mama Zinja holds me and tells me she loves me, she's spend-or-us, too.\" \n\nZinja almost melted as she looked at her youngest daughter. \n\nI slowly repeated the word splendorous and she said it with me three times. Then I said, \"That's perfect, Sisi.\" \n\nI resumed reading the story. \"Mama Killa said, 'When you ascend into your rightful place in the sky, into hanan pacha, mighty Inti, I promise that you will not be alone. I, Mama Killa, will keep you company. I will care for you and keep your house, and love you all the rest of our days.' \n\n\"'Mama Killa, you will become my wife?' he asked. \n\n\"'Yes, and you will become my husband,' she told him. 'And we will live in your palace in heaven.' \n\n\"'You are the answer to what my questing heart was seeking. Come, Mama Killa, let us return home to hanan pacha.' \n\n\"And holding their hands together, they rose up higher and higher, sun and moon in the sky together, the light of Inti becoming brighter and brighter until it outshone everything else. When at last they reached their home. Inti was happy. Mama Killa was happy. And all the plants and animals of the world were happy, too. During the day, Inti watches over us, wishing us well while sending us his light and warmth. Mama Killa is a good and loving wife, and she has given mighty Inti several sons and daughters. A kind goddess, she watches over the world, keeping track of what's happening and keeping her husband informed, for she, too, wants what's best for everything and everyone under Inti's holy light. The end.' So what did you think of the story?\" \n\nSisi looked at me, puzzled. \"They got married and had babies?\" \n\n\"That's right,\" I answered. \n\n\"Aren't Inti and Mama Killa brother and sister?\" \n\nI nodded. \"That's what I'm told.\" \n\n\"So brothers are supposed to marry sisters?\" \n\nJanetta snorted rather loudly. From the safety of her chair, she raised her eyebrows at me. The other women gathered around me were also perversely curious as to how I would answer my daughter's perfectly legitimate question. \n\nSo how to answer a five-year-old girl going on six so she could understand? \n\n\"It's a good question, Sisi,\" I began. \"Family are supposed to love and support each other. But brothers and sisters getting married and having babies together isn't a good idea. The gods have magic, and can do things that are sometimes bad for people like you and I to do. Inti had younger brothers and sisters, but there were no other women for him to marry outside of his family. I think it's a rule that gods can only marry goddesses, but I'm not positive about that.\" \n\n\"What about the Jade Goddess?\" Sisi asked. \"She's a goddess. He could have married her!\" \n\nCalia looked impressed at Sisi's reasoning, while Cholan pondered the implications of cross-tribal intermarriage among the gods. \n\nI shook my head. \"Inti and Mama Killa are stories told by the Queschuan people, the rulers of the Empire of Chimorro. But the Empire is made up of thousands of different tribes. Each tribe has its own language, and many of them believe in different gods. Inti is the name of the god of the sun for the Queschua. The Captain's people are Nahuatl. Janetta, what is the name of the Nahuatl sun god?\" \n\n\"Tonatiuh is the god of the sun and ruler of heaven,\" Janetta answered. \n\n\"Sowitwee's people are Mayan. Wit, please tell Sisi the name of the sun god of your people.\" \n\n\"He is called Ah Kin, god of the sun, the bringer of doubt, and he is the protector against evil.\" \n\n\"Nariya's people are Tlacan. Nariya? What do your people call the sun god?\" \n\n\"They call him Kiniuch-opu.\" \n\n\"Cholan, by what name do your people call the sun god?\" \n\n\"They call him Miqui.\" \n\nSisi looked confused. \n\n\"Your idea is a good one, my dear Sisi. However, Inti and the Jade Goddess don't know about each other. It is very rare that stories about the gods mention the gods of other people. The stories of the Queschua people only talk about the gods of the Queschua. The stories of the Nahua only talk about the gods and goddesses of the Nahua, and so on. \n\n\"But that doesn't answer your question about brothers and sisters. Brothers and sisters should love and protect each other. But when they grow up, it's not a good idea to marry or have babies together. If you are too closely related, it makes it harder to have a healthy baby. If the baby is too sick when it's born, it can die. And yes, babies that are born sick can go to the hospital to get better. However, most people don't have the money to do that, so the baby dies. Some people ignore that and a brother may marry a sister, and in some parts of the Empire, it's allowed, just as some places in other parts of the world allow it. But overall, it's not a good idea. The chances of having sick babies that don't live gets higher each generation that does it.\" \n\n\"What's a generation?\" she asked, standing on the couch and leaning against me. \n\nMy arm went around her. \"To generate means to give birth to, or to create. A generation can also mean a group of people of the same approximate age. Mama Zinja is one generation. Her daughter Ixma is the next or second generation. Mina is Ixma's baby, so that makes her the third generation.\" \n\n\"Am I the same generation as Mina?\" \n\nI nodded at her. \"I would say so. Do you understand my answer about brothers and sisters?\" \n\n\"I think so. I still miss my little brother Tishtin, but I wouldn't marry him. Should Mina be calling me aunty?\" \n\nBefore I could answer, Mina sat up and declared, \"No! Not aunty! That's aunty,\" and pointed at Cholan. \"You are Sisi!\" \n\nThere were several chuckles at Mina's words, but Sisi frowned thoughtfully. \n\n\"It's okay, Sisi,\" I told her. \"You are her aunt, but you two act more like sisters. When she gets older, Mina will understand. Just like you will understand more things as you grow older. Think about this, Sisi. All of us in this room are from different tribes and states, yet we all work together to serve the Empire. The Empire made it possible for all of us to meet and make a family together. We are here in this room gathered together. We all love each other, and we all love you and Mina.\" ",
        "Sisi embraced me, her little arms hugging me tight. \"I love you, Tenant.\" \n\n\"I love you, too, baby,\" I murmured as I hugged her back. \"So very, very much.\" \n\nWhen she let go, she climbed over and gave Mina a hug. After they hugged, they got off the couch and went around the room, saying goodnight to everyone. \n\nAt the beginning of our story times, Tarragon and Salvia had stayed at the edge of the room, eager -- no, rather they were desperate to hear the stories as the other women were, both for the sharing together as a family and for the entertainment. While still shy, the young girls were adapting quickly. Participating in the family exercises, Calia was also giving them supplemental academic instruction -- teaching them to read, write, and count with Sisi and Mina in the afternoons. To go along with that, both had been gifted with learning tablets, and Sisi sometimes helped them navigate the menus. Calia had quietly laughed while the servant girls had surprised me one afternoon, greeting me with tearful gratitude after receiving their gifts. To their credit, the girls worked hard, scrubbing bathrooms and floors, doing laundry and dishes, and whatever else Calia needed help with. \n\nAs the story was over, the two servant girls rose slowly, bowed respectfully first to me and then to Janetta before heading to the kitchen to wash the dishes and clean the kitchen. What surprised them both was that Sisi called out to them, \"Terra, Salvia, wait!\" \n\nWhile they paused, unsure what was happening, Sisi went up to them, holding out her arms. \n\nThe sisters knelt down. Tarragon said, \"You need something, Little Mistress?\" \n\n\"Everyone here is family. Tenant said so.\" Sisi hugged them in turn, and the young women hugged her right back, obviously touched by Sisi's gesture, then left to attend their duties. \n\nZinja gave me a shoulder bump and a sidelong glance as she muttered, \"That's our girl.\" \n\nReaching over, I took Zinja's hand and gave it a squeeze, and bumped her back. \"Yes, she's our girl.\" \n\nMy warrior winced as she moved her recliner into a seated position. After a calming breath, she nodded to Sisi. \"All right, Sisi. What's the status? Is everyone safe and sound and accounted for?\" \n\nSisi looked around the room, then standing straight, she nodded. \"Yes, Captain. Everyone is safe and sound.\" \n\n\"Excellent report. Thank you, Sisi. Sleep well.\" \n\nInstead of leaving as she usually did, my daughter remained where she was. \n\nJanetta raised her eyebrows. \"Is there something else, Sisi?\" \n\nHer face serious, she said, \"Yes, Captain.\" \n\n\"Go on, then. Spit it out.\" \n\n\"Tenant says we are all family. And Mama Zinja says everyone needs love. 'Specially family.\" \n\n\" And?\" Janetta prompted, looking puzzled. \"What's your point, Sisi?\" \n\n\"You should have a magic hug, too, Captain. To help keep you safe.\" \n\nJanetta raised her eyebrows. \"You think I need a hug?\" \n\nSisi nodded, her face serious. \"Mama Zinja says you help Tenant keep us safe and take care of us. You also give us cookies.\" \n\nYou could have heard a pin drop. \n\nJanetta paused, then nodded thoughtfully, keeping her eyes locked on Sisi. \"You're right. Sharing cookies is a big deal. I would be honored to have one of your magic hugs.\" \n\nAs she leaned down, Sisi threw her arms around my perfect, beautiful warrior, giving her a good squeeze and a kiss on the cheek. Jenetta held the hug an extra second or two, then let go with an affectionate pat on the back. \"Thank you, Sisi.\" \n\n\"You're welcome, Captain.\" Then she took Zinja's hand, and us four adults trooped upstairs to help the girls get ready for bed. After the brushing of teeth and last trips to the bathroom, Ixma and I stood off to the side. She was snuggled in my arms, and her head against my chest as my arms moved gently across her back. \n\nCalia came in as Zinja helped the girls climb to their place in the middle. Ixma shifted, and Calia joined us in a three-way hug -- one woman wrapped each in each arm. Calia leaned up for a kiss, and we enjoyed a short, yet leisurely kiss. \n\nI love you so much, she said, her thoughts coming clearly into my mind. \n\nShe'd done this to me several times before and I was becoming used to hearing her speaking directly into my mind. I took my time and finished the kiss. \"I love you, too, Calia.\" \n\nShe smiled, then said, \"Your turn, Ixma.\" \n\nIxma tilted her head, and we savored a kiss. \n\nOh, Ranji, I love and want you so much! Her right hand squeezed my butt, and she rubbed her belly against me. \n\nIxma? How--? Startled, I broke the kiss. \n\nThen both of them giggled, delighted by the look on my face. \n\nI told you it would work, Calia thought to me. \n\nYou're right! This is amazing, came Ixma's thought. \n\nAt my own astonished thoughts, they giggled again. \n\n\"You can do it, too?\" \n\n\"No, Ranji,\" Ixma assured me quietly. \"I needed Calia's help to do that.\" \n\nThen both disentangled themselves and crawled into bed. \n\nZinja, standing on the other side of the bed, watched me with amusement. \"Must have been some kiss, Commander.\" \n\nI just nodded, taking in the impact of what had just been revealed. \n\nAs Zinja started to head out, Sisi called to her. \"Mama Zinja, wait!\" \n\n\"Wait for what, Sisi? I gave you a goodnight kiss already and it's time for sleep.\" \n\n\"Aren't you going to hug, Calia?\" \n\nRaising her eyebrows, the tall Oexecan woman put her hands on her hips. \"I'm sure she doesn't need one from me.\" \n\n\"But Mama Zinja, she needs your hugs, too. Ixma says your hugs are magic, just like mine are. Ixma is my sister, and she says Calia is her sister, so that makes you her mama, too.\" \n\nZinja looked at Calia. \"Well, isn't this awkward.\" \n\nSurprise had flashed across Calia's face, but then she gave a gentle smile to Zinja. \"I won't say anything if you don't want me to, but I would love a hug from you. I promise it won't hurt, Mama Zinja.\" \n\nIxma snuggled Mina as she looked at her. \"Please, Mama?\" \n\n\"Fine.\" She moved back around the bed to where Calia lay. Calia sat up and Zinja leaned down for a brief hug. \n\nIxma prompted, \"Okay, what do say when you get what you want?\" \n\nThree voices chimed out, \"Thank you, Mama Zinja,\" and a belated, sleepy, \"Thank you, Gamma Zinja.\" \n\n\"Is this going to be a regular thing?\" Zinja asked, raising her eyebrows. \n\n\"Would that be such a bad thing, Mama?\" Ixma asked in return. \n\nHer face softened. \"No, baby girl, I guess not. Good night.\" And she strode out the door. \n\nImmensely pleased with her success, Sisi settled down next to Mina and the two girls embraced, closing their eyes. \"Love you, Mina.\" \n\n\"Love you, Sisi,\" was Mina's mumbled reply. \n\nTurning off the light, I closed the door. I stopped by the bathroom again to say goodnight to Cholan, who had just finished her own nightly ablutions. After sharing a couple of kisses and a long hug, she was delighted that I tucked her in, with a few extra kisses. \n\nThen I walked down the hall and entered the master bedroom. I could hear Zinja brushing her teeth in the bathroom. \n\nMy naked warrior moved stiffly to the bed. Janetta had taken a fall from a wet floor earlier in the day and badly bruised her hip. Once she was on the bed, I checked the Nu-skin patch, which was fine, and then gently rubbed in some of that pungent yet effective ointment provided by Calia into my lover's achy muscles. Janetta winced as I worked, but sighed in gratitude when I was done. \n\n\"If it's this sore in the morning, I suggest you take some sick time,\" I told her. \"Maybe get it confirmed it's just a bruise at the clinic. You might have fractured it.\" \n\n\"It's much better than it was,\" she replied, shifting slowly to the center of the bed. \n\nZinja brought her a glass of water and a pair of pain blockers. As all of us were tired, Janetta spooned Zinja, and I snuggled up behind my injured warrior and closed my eyes. \n\n* * * * * \n\nPart 2 -- Premonitions and Ghosts \n\n* * * * * \n\nIt was Calia's terrified scream that woke up everyone. \n\nZinja vaulted out of bed, flying out of the room and across the hall. \n\nJanetta grabbed her father's Chon 44 and I snagged my Talon and followed right after. \n\nBy the time we got there, Zinja was sitting on the edge of the bed, comforting a worried Sisi. Ixma held Mina. \n\nLooking up at me from the couch, Calia wiped at her eyes, apologetic. \"I'm sorry I woke everyone. It was just a bad dream.\" \n\nJanetta and I both set the safeties on our weapons. Then she looked at the clock and grumbled. It was just after zero-two hundred hours. Holding out her hand, I handed her my weapon and she limped back to our bedroom. \n\nHer scream must have been loud, but I'd heard it clearly, through two closed doors. Then I blinked. I wasn't so sure I hadn't heard her terrified cry in my mind. If so, that meant she no longer needed touch to communicate with her mind. \n\nIn the meantime, she needed comforting. Sitting beside her, I pulled her into my lap. \"I don't recall you ever having a bad dream before.\" \n\nZinja and Ixma gave me incredulous looks. \n\n\"Ranji!\" Ixma exclaimed, \"During the time they were hurting you, Calia had bad dreams all the time! Calia even had to move back to the basement so the girls could sleep, and one of us traded off to keep her company. When the dreams stopped the first time, we all breathed a sigh of relief. But when they started hurting you again, her nightmares restarted. And she seemed to know when you were badly injured, too.\" \n\n\"I'm so sorry,\" Calia repeated morosely. \n\nIxma gave her an emotional smile. \"It's all right. Everyone's here and safe. Ranji's here and obviously all right. Maybe you should talk about it.\" \n\nCalia looked at me. Cholan and Sowitwee appeared at the door. Cholan, in her nightie, held a foot-long screwdriver, and Wit, in a pair of shorts, carried the shotgun, ready to do mayhem. \n\nThe bedroom Wit shared with his wife and father was at the other end of the house. With the soundproofing, it shouldn't have carried that far. Yet there he was. \n\n\"Everything okay, sir?\" Wit asked me. \n\n\"Seems it was just a bad dream,\" I assured them. \n\nInstead of comforting them, my words caused Cholan and Sowitwee to focus on Calia with concern. \n\n\"Come on, Calia,\" Ixma urged. \"Tell us about it. Maybe it'll help.\" \n\nCalia shook her head, getting off my lap. \"I will, downstairs, but not here. The girls need their sleep.\" \n\n\"All right,\" I said. \"Let's go downstairs then. Maybe brew you some tea.\" \n\n\"Did you have a nightmare, Calia?\" a worried Sisi asked Calia. \n\nShe nodded to my girl. \"It's nothing for you to worry over. I'll talk to your Tenant, and it'll be better. I'm okay now. You should go back to sleep.\" \n\nMina, not understanding, rolled over and closed her eyes. \n\nSisi got out of bed. Calia kneeled and they shared a quick hug, then Sisi returned to bed. I could see Ixma wanted to come with us, but instead she laid back down with the girls. Zinja gave the three of them a quick kiss and a murmured goodnight.  \n\nAfter closing the door, Zinja told me she was returning to bed. \"You'll let us know what's going on in the morning, sir?\" \n\n\"Sure.\" I put my arm around Calia as we walked down the hall. Cholan and Sowitwee quietly walked behind us. \n\nWe gathered downstairs at the table, and Calia put a kettle with fresh water on to boil. Wit reassured a worried Nariya, her hands rubbing nervously around her round belly. He gave her another kiss, and escorted her back to bed, then sans weapon, he returned to the table. Cholan sat on the other side of me. \n\nWhen the four of us were settled, with hot tea steaming in cups, I said, \"Tell me what happened. What did you dream about?\" \n\nBoth her hands around the steaming cup, she nodded. \"The dream was good at first. We were at the school, at the First of Summer Festival. The cafeteria was packed. Everyone was happy and laughing. The children had just finished their play, and all the parents were clapping and congratulating them.\" \n\nCalia used the sleeve of her nightshirt and wiped at her face. \"Ixma, Mina, and Sisi were there with me. Even Sowitwee and Nariya were there, too, congratulating Sisi and Mina for their parts in the children's program. Then we moved to the cafeteria for lunch. People were smiling and talking, lining up to get food, when suddenly...\" \n\nShe gave a shuddering breath before continuing. \"It was like the whole world fell apart, Ranji. My ears rang, and I was knocked off my feet. When I landed, I couldn't see at first from the dust. I tried to move, but couldn't. I thought at first I was trapped, but I reached down, and I saw my legs were torn to shreds, and blood covered my hand. Then the pain started, and it hurt so much!\" She looked away, tears spilling down her cheeks. \n\n\"Beside... beside me were your girls, Ranji. I saw Sisi first. She was crumpled amid broken debris. She wouldn't wake up, no matter how I called to her or shook her. Ixma... was half-buried with rubble, and... and all I could see was Mina's little hand. The rest of her was covered by huge blocks of concrete. Dust and smoke was everywhere, making it hard to breathe. Then, in the distance began to hear many sirens. It was awful, Ranji! I was so scared they were all dead! That's when I screamed.\" \n\nMoving over to her, I pulled her up and drew her in. She buried her face into my chest and sobbed. \n\nThe First of Summer celebration was in two days, coinciding with inspection by the Air Marshal's team. \n\nOnce upon a time I would just dismissed it as stress or a bad meal. But not now. Not with Calia. \n\nShe had known when I was being tortured, and every adult in this home knew it. I'm convinced she was there when Deedee said goodbye to me. I had thought it a dream, but that no longer felt true. And there was the duel against the general when I'd been poisoned. I had no doubt whatsoever that Calia had reached out across the war base to save me, leaving her weak and exhausted for two days. \n\nHer psychic abilities seemed to be growing. Could this be some sort of foretelling? My job was the security and safety of this war base. I couldn't ignore her dream. \n\nCholan got up and turned off the stove. Distraught, Calia had forgotten to do that. When she turned around again, there was real worry on Cholan's face. Sowitwee, too, looked troubled. It was clear they didn't see this as a figment of her imagination either. \n\n\"All right,\" I told Calia, rubbing her back with one hand. \"So you think there's a bomb at the school. All right then. We'll check it out.\" \n\nShe shuddered as she looked at me, then closing her eyes, she nodded. \"Thank you, Ranji.\" \n\n\"Nothing to thank me for, Calia. I sincerely hope you're wrong. But somehow you know things. If we find something, well, with your warning, we will save a lot of lives.\" Guiding her to a chair, Calia sat down, and I pulled my chair closer. Cholan and Sowitwee moved closer as well. \n\nSowitwee looked at me. \"Are you waiting until morning, Commander?\" \n\n\"No. Doing a thorough search of the school will take hours. I'll get dressed and head in now. If there's nothing there, we won't alarm the parents and staff unnecessarily. If we find something, we'll be able to keep everyone out.\" I took one of Calia's hands and kissed the back of it. \"Drink some tea. It'll help you relax.\" \n\nI stood up, and Sowitwee did as well. \n\n\"Wait for me, sir. I'll get dressed and join you.\" He left the dining room. \n\nCholan handed me a hand towel, and I used it to wipe Calia's face. At my encouragement, she blew her nose, mumbling about it needing to be washed anyway. As I leaned over, she accepted my kiss. \n\n\"Cholan, you keep her company, but both of you should head back to bed soon.\" \n\nI thought everything was settled, but Calia suddenly gasped, and with both her hands shaking, she knocked over her hot tea. She stared toward the entryway, her face ashen. \n\nCholan hopped up and grabbed another towel to sop up the steaming liquid. \n\nPulling her close, I said, \"Calia! What's wrong?\" \n\n\"It's Stimmi,\" she whispered, laying her head back against my chest, her voice full of anguish. \"He's here. He's naked and covered in blood, and... by the gods, there's a huge hole in his chest! He says... someone took 'Mara. He says she's in great danger and he's pleading with me. He wants us to save her.\" She looked up at me, fresh tears spilling down. \"Sergeant Stimmi's dead, Ranji. They cut out his heart!\" \n\nThen she began to sob. \n\n* * * * * \n\nPart 3 -- Searching for Answers \n\n* * * * * \n\nWhile Cholan comforted Calia, Sowitwee and I got dressed for work. \n\nJanetta woke back up as I gathered things, so I quickly told her what had happened. \n\n\"You actually think she sees ghosts?\" \n\n\"I do. Sisi and Mina saw the same ghosts at one of the houses we looked at before we picked this one. With everything else she can do, why is seeing the dead so farfetched?\" I slipped my shoes on and stood, reaching into the closet for my weapons and vest. \n\nWincing, Janetta got out of bed and Zinja joined her. I pulled her in for a hug and a kiss, then held out my other arm out for Zinja. \n\n\"Be careful, ground support,\" Janetta said. \"Bombs are nothing to fuck around with. Let us know what's going on, will you? I honestly hope it's just part of that same dream. As for the other? I like Yalcamara and Stimmi. They're good warriors. It would piss me off if something happened to them.\" \n\nI nodded in agreement. \"I may be tied up for a long time, so if you have a moment and you haven't heard from me, feel free to give me a call. In the meantime, try to get a bit more sleep, will you? Both of you.\" \n\n\"Yeah, yeah,\" Janetta grumbled. \"Might as well go take a long hot shower and then go in early.\" \n\n\"Get your hip looked at, Janetta. As bad as you've been moving, you're in no shape to fly.\" \n\nShe grumbled at me as she headed into the bathroom. \n\nZinja gave me a quick hug before letting me go. \"I'll see she gets looked at, sir.\" \n\nA quick goodbye to the ladies downstairs, and Sowitwee and I went outside to the Air Security cruiser. Once we were buckled in, I started it up. The power lights lit up the dash. I flipped on the outside lights and headed for work. \n\n\"AI, contact Air Security Dispatch, please.\" \n\n\"Voice print confirmed. Greetings, Commander. Processing command.\" \n\nThere was a short pause, then, \"This is Air Security Dispatch. What is the nature of your call?\" \n\n\"This is Commander Kandikan. Please let the Shift Commander know I'm coming in. When I get there, I want to confer with him. ETA six minutes. That's all.\" \n\n\"Confirmed, Commander. CO inbound. Notify Shift Commander. ETA six minutes. Dispatch clear.\" \n\n\"When we get in, Wit, check the boards to see which of those special dog units are on duty down at the airfield. I know they usually work in pairs, but call one of them in. I want at least one of those dog teams helping us search the school.\" \n\n\"Yes, sir.\" He paused a moment, then said, \"I thought I heard Calia say Stimmi's dead?\" \n\n\"That's what she said. And that Lieutenant Tchanoonka was kidnapped.\" \n\n\"By all the gods, I hope not,\" Wit said, worried. \"I'll put in a request for a safety check for them both. Do you think it's because of what happened at Cop\u00e1n?\" \n\n\"I don't know, Sergeant. Like you, I hope they are both okay. If someone did hurt them, I will do my best to put whoever did it into the ground.\" \n\nHe glanced at me. \"Llam nuqan, sir.\" \n\n\"Llam nuqan.\" \n\nI pulled into my parking slot and we headed inside. Per my instructions, Sowitwee headed for Dispatch to locate the dog teams on duty and request a patrol cruiser check by Yalcamara and Stimmi's cottage. To my knowledge, they were taking a few days of well-deserved time off. ",
        "Finding Jay in his office, I explained to him why I was there. However, to keep Calia's abilities secret, I just said told him that I'd had a reliable tip. \n\nAfter glancing at me and then his watch, he raised his eyebrows. I just looked at him and he stood up, reaching for his gear. All the security units across the war base were on heightened alert, working hard to make sure there were no acts of sabotage or unaccounted for strangers during our upcoming VIP visit. For most of the day, Ground Service would be running extra AHH-17 Kites on patrols, checking rooftops and aerial approach to the war base. \n\nWithin two hours, at zero-four-thirty, two full platoons of Air Security with e-sniffers and one trained handler and his dog descended on the primary school. \n\nI went in with the dog team, staying well back from those doing the initial scouting. At my instruction, we checked out the school cafeteria first. Within ten minutes, we had a positive hit from both the dogs and the e-sniffers, centered on the each of the ten support columns. \n\nAs soon as we had confirmation, they proceeded to determine if any other areas were dangerous. I started making phone calls and waking people up. The other teams did a full sweep, and an hour later, we knew the building's underground utility section was also compromised. \n\nAn intruder was discovered on site, but when challenged he tried to escape. Jay and I ran to the scene as troopers fired stunners, but the man was too far out of range. Corporal Ingan and his dog, Kartook, proved themselves. The dog rapidly closed the distance, catching the man, then standing guard, growling at him. The corporal and four other troopers moved to cover and secure him. By the time we arrived, however, the man was dead, bleeding from his nose and mouth, his chest a mushy mess. \n\nI swore at the implications. Jay wasn't happy either. A moment of shared meaningful silence, then we finished setting up in a cleared classroom. More off-duty troopers were called in and assigned e-sniffers, and Jay and his staff worked on checking off what was cleared and was still needed to be checked. \n\nAt just before zero-six hundred hours, I called the Media Office, and told them the primary school was closed due to the discovery of a nest of poisonous snakes within the grounds, and that until the building was declared safe, neither staff nor students would be allowed on the premises. Then Dispatch routed me to the principal and to the bus service, notifying them of the closure. They could pass it along to others. \n\nJay, in the meantime, coordinated with Ground Service Bomb Disposal, and they began working on removing the explosives. Around the school, a full platoon of Air Security worked on traffic control, and were soon joined by another platoon from Ground Security. With over three thousand students and the many adult staff needed to teach and run the school, we couldn't depend on everyone getting notice about the closure from the official radio broadcast. \n\nAt just after zero-seven twenty, my phone went off. \"Kandikan here.\" \n\n\"Sowitwee, sir. We have a call from a Detective Sergeant Crazy Wolf of the Capisco Police Department, Seventh Precinct. He says it's urgent that he speak to you, Commander.\" \n\n\"All right, patch him through. And record it.\" \n\n\"Confirmed, Commander. Recording now. Hello, Detective Sergeant Crazy Wolf? Here he is, sir.\" \n\nThere was a pause, then, \"Who am I speaking to now? If it's another messenger boy, I'm going to hang up. I don't have time to play with you Imperials and your damned games.\" \n\n\"This is Commander Kandikan, commander of the Air Security regiment at High Guard War Base, Detective Sergeant. For the record, I don't play games, nor do I have time for them, either. What can I do for you at this early hour?\" \n\n\"Ah, at last. Well, Commander, I think we have one of your people here. His identification says his name is -- or was -- Sergeant Stimmi Parletl. He was murdered and rather brutally so. I'd like someone to come down to confirm his identity and to answer some questions.\" \n\nSeven hells! My heart sank. I had no doubt that it really was Stimmi they'd found. \n\n\"What of the woman who was with him, Sergeant? Have you found her?\" \n\n\"She is missing at this time. We already have a BOLO for her.\" \n\nMy heart sank. \"All right. Where are you located?\" \n\n\"I'll be back at my office at the Seventh Precinct in about an hour. The morgue is nearby. Will you be coming, Commander? Or will you be sending someone else?\" \n\n\"He's one of mine. I'll be there personally, Detective Sergeant.\" \n\n\"Perfect.\" And he hung up. \n\nJay walked up to me. \"What's going on?\" \n\n\"Capisco Police just called. They say they have Stimmi's body. I'm going to go identify whether it's him or not. That means you're in charge here.\" \n\n\"What? No, that's not possible! They told us the day before yesterday they were going to work on unpacking their home.\" \n\nI raised my eyebrows. \"Us, who?\" \n\n\"Doyya, Chita, and myself. I'd come in early. Yalcamara was working to get some paperwork cleared off her desk before they left shift the night before. There may have been a few other troopers nearby who would have overheard us talking about it.\" \n\nI nodded, clapping him on the shoulder. \"Pen comes on shift in an hour, Jay. You finish up the rest of the sweeps. I want a status report on the situation here before you hand it over at zero-six hundred, understand? General Rikoletsi wants an update as well. You have more practical experience than any of us, so if you have any recommendations, speak up.\" \n\n\"You think the body they found is really Stimmi?\" \n\n\"Unfortunately, I do. Dispatch sent a patrol team to their quarters and they weren't there. On site eval is they had packed quickly and left, and the main gate records them leaving High Guard yesterday, just before midnight.\" \n\n\"Holy gods. Yalcamara is Doyya's Second. This'll hit her hard.\" \n\n\"I'm going to call Garnet and have her send a CID team over to do a more thorough on- site at their place. They were planning on staying home, yet they somehow ended up in Capisco. Stimmi's dead and Yalcamara's whereabouts are unknown.\" I paused. \"It's not confirmed yet, but I'm told they took his heart.\" \n\n\"What? That's priest work. Or draconians.\" He looked grim, and lowered his voice. \"Do you think Supay is involved?\" \n\n\"What do you think? That suspect we chased and ended up with the mushy chest implies it's his handiwork. Autopsy will confirm, but I've seen the results of a nano-heart bomb before, at Cop\u00e1n.\" \n\n\"Commander... Ranji, don't go into Capisco alone. Take an escort. At least two teams.\" \n\n\"I'll take an escort. Watch yourself, Jay. You keep your own security team close. Talk to you later.\" \n\n\"Safe flight and safe return, Commander.\" Jay whistled, and pointed at two troopers, then at me. \"Stay with the Commander.\" \n\nAs I got in my vehicle, I thought about the situation. \n\nBilan had chastised me for having Yalcamara impersonate Commander Orchid, saying it had been foolish. On reflection, I realized he had been right. I'd been an arrogant fool with that stunt. Pretending to be Orchid had been a deliberate thumbing of our noses at the Minister. I only hoped we would be able to find and get back Yalcamara. But the fact that she was missing did not bode well. \n\nWhatever happened, the Minister may have killed him, but I'd put Stimmi into harm's way. His blood was on my hands, too. \n\nThe school also had the Minister's hallmarks, yet I couldn't see a motive for that. Unless it was just to spread fear? Or to discredit me as the commanding officer of High Guard's Air Security? More likely, it would be easy for him to find out my girls attended the school, and he was willing to kill thousands of innocents for the chance to kill them for my insult to his authority, amoral though it may be. \n\nAfter the beach incident and killing his own men afterward? Yeah, I could see that evil bastard doing that. \n\nI was loyal to Itznacoco and what he stood for. Imperial Security's goals should be to preserve the Empire, to protect its citizens from encroachment by foreign and often hostile powers. Instead, it was often the personal army of a maniac.  \n\nThe more I thought about it, the more I realized the man was a real detriment to the Empire. Kidnapping citizens, murdering some and enslaving others; selling them in other parts of the Empire, and probably to foreign shores, too. Instead of stopping criminal gangs, he was the likely the leader of the largest criminal gang in the Empire. Illegal drugs. Selling children to draconians for food. Ordering the murder of hundreds of security forces during a rage. The near escapes by Melannee as well as Bilan and his squad. \n\nAnd Sparantzlo. That was ultimately the Minister's doing as well. \n\nAs much as I wanted the Protection Order to spread and become law throughout the Empire, maybe I needed to shift focus, and do the Empire a favor by sending a fifty-caliber letter of cancellation by air mail to the Minister of Imperial Security. \n\nSuch was my mood when I checked in at Air Security C&amp;C. \n\nAs I went into my office, both Chita and her admin, Sunahee, watched me, their faces full of questions. Because it was before zero-eight hundred, my own admin, Sergeant Hanami, wasn't in yet. \n\nI paused for half a second. Chita usually came in at ten hundred hours and worked later, to overlap some with Doyya's shift. That she was here at zero-six hundred meant someone must have called her. Since they were roommates, it was likely that Doyya, too, would be in early. \n\nSeven hells, I thought. \n\nInside my office, Sowitwee was seated in one of the guest chairs. He looked up as I came in. Closing the door behind me, I went to my chair behind my desk and sat down. \n\nWit's face was an almost unreadable mix of emotions. \"I'd like to go with you into Capisco, Commander. Stimmi was a good man. And a good friend.\" \n\n\"They may not release the body right away,\" I replied. \n\nHis jaw worked a moment, then he frowned. \"Yes, sir.\" \n\n\"Have you eaten anything yet?\" \n\nHe shook his head. \"Not terribly hungry right now.\" \n\nI nodded back. \"We both should. But I feel the same way. And you're right. Stimmi was both a good man and a good friend.\" \n\n\"Commander? May I ask a question?\" \n\nI gave him a sad smile. \"Sure.\" \n\n\"Your Personal Servant, Calia... she's more than she seems.\" \n\nThat got my attention. \"What do you mean?\" \n\n\"She sees ghosts and knows when you are hurt. And the bombs this morning. She knew about them, too.\" \n\n\"You have a question in there somewhere, Wit?\" \n\n\"Among my people, well, they would treat her as a holy woman. Someone touched by the gods. She's full of kindness and a great healer, too.\" \n\n\"Yet she's a Personal Servant. A slave,\" I acknowledged. \"I offered her her freedom once. She refused it because she didn't want to be separated from me. Of course, then, I couldn't fully emancipate her. I could free her to Guild level at the cost of wiping out my fortune and repudiating her. Both the thought of leaving me, and that I would have to cast her away, asserting she had been a poor bondswoman was more than she could bear. She begged me, Wit, not to free her. At the time, I had to agree. Now, however, things have changed. I have a lot more funds available, so I can free her and help her get her many skills certified.\" \n\n\"She loves you deeply, Commander. Women can get funny about their men. If you freed her without talking to her first, she would no longer be part of House Kandikan, and she could easily take it as your rejection of her.\" \n\n\"Yes, well, I seem to be hurting Calia's feelings a lot of late. Wit, you should know that talking about her abilities to other people -- well, it's not safe for her.\" \n\n\"I understand, Commander. On a related matter, Nariya's time is approaching. She's told me she wants Calia to midwife her. I know she's not licensed, but Nariya knows Calia and trusts her.\" \n\nI relaxed, sitting back. \"If that's what Nariya wants and Calia's agreeable, I'm fine with it. Has Nariya asked Calia?\" \n\n\"Calia said that as your bondswoman, her first priority must be to you, so I needed to get your permission first.\" \n\n\"Did she now. This is the sort of thing I'm talking about. She shouldn't have to ask my permission for every little thing. Whatever you and Nariya want and if Calia's willing is fine with me. Will we be getting to hear some of her singing any time soon?\" \n\nHe gave a rueful smile. \"She loves it when we gather around to hear the stories you read. You are the lord of the House, Commander. She's afraid to take any of that from you, and the time you spend with your daughters.\" \n\n\"With the right motivation, a literate person comes to love books and reading. Likewise, I imagine that someone who has made their living at music would feel bereft at the loss of her voice. Now that she can speak again, it would please me that she be able to express herself musically. I think if she started singing during the day, Calia and the servants would appreciate it, and so would my girls. Does she play an instrument?\" \n\n\"A guitar. Hers was destroyed when she was attacked. We've never had the opportunity to replace it.\" \n\n\"Did she enjoy singing?\" \n\nHappy memories washed over his face. \"Oh, yes, sir. Even when she wasn't working, she was always humming or singing something. She's always humming while she's rubbing her belly.\" \n\n\"That's what I thought. My task for you, Wit, is to find her a good quality instrument. If there is any justice in the world, the gods will punish whoever took her voice away, for surely the gods must have a special love those who lift their voices in song.\" \n\n\"You've already done so much for me and my family, my lord.\" \n\n\"This isn't for you. This is for Nariya. I want to see the choices by the end of this week. Pick a quality instrument, Wit. Browse around. Ask her what she'd like, as if money were no object.\" \n\n\"She will be overwhelmed by your kindness.\" \n\n\"I'd rather she enjoy playing the instrument.\" \n\n\"Yes, sir. I'll do as you ask.\" \n\nWe lapsed then into silence. I should have been working. Checking my work email. Something. But my thoughts kept coming back to three indisputable facts. Stimmi was dead. Yalcamara was missing, and likely in mortal danger. And it was my fault. \n\nJust then there was a rap at the door. Pen opened it and stepped in. \"Is it true? About Stimmi and 'Mara?\" \n\nI gave him a grim nod. \"Yes. I need you to go to the primary school and coordinate with Jay. He'll fill you in with what we found, and you and he will need to coordinate with the Bomb Disposal unit about removing the explosive devices. Make sure the support columns haven't been compromised, too. There's also several units from Ground Security on site to assist us. They're taking their lead from us, since we found the bombs. Oh, and General Rikoletsi will want a written status report just before lunch time. Make sure you send a copy to me as well.\" \n\n\"All right, Commander,\" he replied. \"My Second will remain on site here to over see things.\" \n\n\"How's she working out? Your Second? I can't recall her name.\" \n\n\"Sublieutenant Tsutsunin. A bit green yet, but she's doing fine.\" He blinked, then shook his head. \"All right. You going to be here, Commander?\" \n\n\"No. I'm heading in to Capisco in a short while to deal with Stimmi's murder, find out what I can, and hopefully bring his body home. I was mostly waiting for the shift change before I left.\" \n\nPen looked Sowitwee. \"Sergeant, you make sure he wears his helmet when he is out of doors.\" \n\n\"Yes, sir, Lieutenant.\" \n\n\"After I arrange for your escort, Commander, I'll head to the school.\" Pen closed the door. \n\nBefore it latched all the way, Chita came to the door. \"Commander? I've taken the liberty of ordering some food from the Commissary Diner for you and Sowitwee. I... I know you won't feel like it, but you need to eat to keep up your strength. So you can catch the rotten bastards who killed our Stimmi. And find our Yalcamara.\" \n\nI saw her wipe at her eyes, but before I could say anything, she'd already left, closing the door behind her. \n\nOver the next half hour, Wit and I sat in silence. When I was notified my escort was ready, I got up and went outside the office. Sowitwee grabbed both our helmets and followed. \n\nStopping by Chita's office, I told her we were headed to Capisco, and that Sowitwee and I would eat whatever she selected for us after we returned. She just nodded. \n\nA type-M, machine-gun ChoCac led the way across the war base, followed by an Air Security cruiser. My vehicle took third position, while a second type-M vehicle was on rear guard. The sky, already cloudy, darkened further, and then it began to rain in a steady downpour. It was as if the mood of the gods reflected our own, the sky weeping tears at the loss of a fine warrior. With each minute that passed without hearing the whereabouts of Yalcamara, my hope for her faded. \n\nBecause of our escort, Capisco Police Department met us at the border and provided an escort of their own. Six vehicles -- four in the lead and two at the rear -- flashing lights and sirens to clear the way through traffic. \n\nMy escort of four troopers didn't carry rifles -- those remained stowed in the vehicles. However, they did carry short swords as well as side arms and belt knives. All of us also wore our combat vests and helmets. \n\nNaturally, as expected, my armed escort and I were provided an armed escort of local uniformed police as we entered the building. All very polite, attentive, with some guarded wariness. Both sets of escorts waited by the detective's desk, causing a lot of stir as curious heads turned to gawk at us. \n\nI followed a detective to the interrogation room, Sowitwee behind me. Having the same type of setup ourselves -- a single table, some chairs and set up with the one-way glass. I knew whatever was going to be discussed also going to be filmed. It's what I'd do. \n\nBecause we weren't at the lead detective's desk, this told me this was to be a formal inquiry and they wanted anything I said on record. \n\nThe other detective was already there, a cup of something hot in front of him -- it smelled of straight coffee -- and a full file folder under his hands in front of him. He half-rose, holding out his hand. Crazy Wolf looked to be in his mid-thirties or early forties. Short hair, hooked nose, sharp eyes, with a tired face. His partner was at least a decade younger, sporting a crew cut and glasses. He glanced at Sowitwee, but my aide took station flanking the chair I was to sit in, standing at ease. The two detectives looked at each other, and decided to ignore him. \n\nThe older man began speaking Queschuan. \n\n\"Commander Ranji Kandikan? I'm Detective Sergeant Jon Crazy Wolf. This is my partner, Detective Aranan Thunder Cloud.\" \n\nI shook each of their hands in turn, and we three sat down. \n\nHe continued speaking. \"As this is a murder investigation, we are informing you that we are recording these proceedings.\" \n\n\"I've no objections, Detective Sergeant.\" \n\n\"Thank you, Commander. That helps a great deal. All right, let's begin, shall we? \n\n\"According to witness reports, an altercation began at the Peaceful Shores Motel on 223 West Alder Drive within unit 216 at approximately 2:14 am this morning. Witnesses report sounds of fighting and yelling, then screams from both a man and a woman. Then a shout from several men, described as a cheer or an exultation. Most of the men wore what was described as priest regalia. Do you know anything about that? No? All right. They were seen by several witnesses dragging a naked woman in restraints down the stairs between them. The woman might have been either unconscious or weeping. Accounts vary. The men entered a white panel van with their prisoner and drove off. Police were called at 2:18 am, and the first unit arrived on scene at 2:20 am.\" ",
        "Seven hells, all three hot, all three cold, and the one in between. This is what I had feared. But to hear it was to endure my worry for her safety anew. \n\nThe sergeant opened the folder, flipping through several pages of reports and pulled out a head shot. It was Stimmi. He was lying on the bed, his glazed eyes partially open, his mouth frozen mid-scream. \n\nCrazy Wolf resumed speaking. \"Items found on scene indicate that this is Sergeant Stimmi Parletl, Imperial Air Service, assigned to the 602 Air Security Regiment. You are the commanding officer of that regiment. Can you confirm this your man, Commander?\" \n\nI closed my eyes briefly. \"Yes, that's Sergeant Stimmi Parletl. I also want you to know that he was a good man and a good cop. Look, Detective Sergeant, I'd be grateful for any information you wish to share with us. Many of us are also greatly concerned about the woman who was taken. Her name is Sublieutenant Yalcamara Tchanoonka, and she is a Deputy Shift Commander in my regiment.\" \n\n\"They were intimate?\" \n\n\"Yes, though I hardly see how that's pertinent,\" I answered. \"It merely explains why they were together. They came into my command as partners. Their being lovers never interfered with their professionalism. They were a good team, and they worked well together. If anything, I was happy for them.\" \n\n\"We've identified the men at the scene as priests of Mictlantecuhtli, the Nahua god of death and the underworld. The presence of priests implies this wasn't just a murder but a human sacrifice, Commander. We don't allow that sort of atrocity here in the Seven Nations! I assure you, our press will have a field day at your expense if there are more of these religious killings.\" \n\n\"They're not religious, I assure you. The priests were probably along because they like killing. This was political, Detective Sergeant.\" \n\n\"Huh.\" He sat back in his chair, looking thoughtful. \n\nI looked at my watch, then I leaned forward, trying my best to convey both sincerity and urgency. \"They already have six hours head start. What can I do to convince you that her life is in imminent danger, and that the longer we wait, the greater the chance she will die, too? Detective Sergeant, Yalcamara isn't just my subordinate, she's my friend. If there's anything at all we can do to help rescue her, just tell me. If you need manpower to help search, I can get two hundred trained troopers here inside two hours, and by my orders, they will follow whatever rules and direction you require.\" \n\nThe detective sergeant sat back in his chair, his eyes measuring me. \"I'll make you a deal, Commander. I have an open case from last year. Another motel. The bodies of two humans and we think one alien, possibly draconian. The third body was, to put it bluntly, an organic mess. We have no idea who the two men are, but we identified the blood from the bathroom as that of Doyya Lovyanchiti, Imperial Air Service, whom I'm told was recently promoted to captain and is currently your second in command. Both the murdered man and the missing woman work for her. The blood from the bed is that of a female Atlantean, possibly Atlantean-Aesir mix, identity unknown. Coincidence? Don't believe in them. I tell you, Commander, more than coincidences, I hate open cases, and this has been on my desk for a year now. Open cases, they twist up my stomach and leave it in knots, and I become very cranky.\" \n\nHis partner nodded solemnly, and actually said with a straight face, \"No one gets crankier than him about open cases.\" \n\nI sighed. \"Fair enough. I'll share what I can.\" \n\n\"Talk to me then. You tell what you know, and if I'm satisfied, I'll share what I can with you. What happened last year, at 7:20 pm, on the third day of Big Winds Moon?\" \n\n\"Captain Lovyanchiti was providing protection detail for the woman in question. She was leaving both High Guard and the Seven Nations. The captain said they were resting when two men and the draconian broke into the room and immediately started firing their weapons. Apparently the draconian was in disguise, appearing as a human, and using standard weapons. They were a hit team, attempting to assassinate the Atlantean woman. The Atlantean woman identified them as members of Imperial Security.\" \n\nBoth detectives blinked at that admission. \n\nI continued. \"The women killed all three assailants. However, both of them were wounded in the firefight, and for security reasons, fled the scene. Captain Lovyanchiti was seriously wounded and soon passed out while the Atlantean woman drove them away. The captain was given a Nu-skin patch and dropped off at an empty warehouse while the other woman continued on alone. I've heard nothing further on her whereabouts, or even whether she's still alive. I hope so. She was a good friend. The warehouse in question was located at 1520 Potawatomie Street. My team and I were only there the one time. Satellite tracking revealed the captain's location.\" \n\n\"Your team?\" \n\n\"Two Air Security were with me when we recovered Captain Lovyanchiti. The two Air Security troopers who accompanied me were Sergeant Stimmi Parletl and Lieutenant Yalcamara Tchanoonka. At the time, he was a private and she was a sergeant.\" \n\n\"Another remarkable coincidence, Commander,\" the older man observed. \"What is the name of the second woman, Commander?\" \n\n\"That will have to remain a mystery, Sergeant. Her identity is classified.\" \n\n\"One of your spies, perhaps? I don't understand that, I really don't. How could an Atlantean work for you people? That would make her a traitor to her own people! And you? You are full-blooded Vedan according to our records. Yet you wear the uniform of the Empire of Chimorro. Commander, how do you feel about betraying your own people, the Vedans?\" \n\nSowitwee stiffened behind me, snarling out, \"Do not insult my officer!\" \n\nI held up my hand, and he stopped moving. Either this detective sergeant was an idiot or he was trying to get me to lose my temper. \n\n\"You are pretty loose with your accusations about who is and who isn't a traitor. You assume birth determines loyalty, which is a particularly simplistic and ignorant assumption. I am an Imperial citizen, Detective Sergeant. I am also a warrior officer in the service of the Emperor. I wear the uniform of the Air Service, and I have freely given my oath to defend the Empire from all her enemies, whatever their nation, creed, or under what flag they fight, even if such defense require the cost of my own life. Likewise, we accord respect to those who are on friendly terms with the Empire of Chimorro. Like the Seven Nations. If you continue to insult me I will consider this interview over, and I will file a protest with your government over your baseless and inflammatory accusations.\" \n\nShifting in his chair, he glanced at his partner speculatively. \"There was a lot of weird things going on about that same time. All those bodies from your war base, dozens of them ending up on our beaches, Commander. Mostly women and children. And then all those women visiting family health clinics for abortions. Aren't abortions illegal in the Empire, Commander?\" \n\n\"Your point, Detective Sergeant?\" \n\n\"You mentioned satellite tracking. Oh, yes. I heard that you chip your people and keep track of them, like a farmer does to his livestock. Are you and your men chipped, Commander?\" \n\n\"I say again, do you have a point, Sergeant?\" \n\n\"We already know about those tracking chips. Whenever Imperial citizens die within the Seven Nations, we look for that chip. It helps us confirm their identity. Yet Sergeant Parletl did not have any such chip on him. Our pathologist looked for it and it wasn't there.\" \n\nCivilians were chipped, too? Oh. The vaccinations. Of course. A tracking chip given to anyone leaving the Empire. Almost as interesting as the fact that the Seven Nations had cracked the code on the chips. \n\nI looked at the detective. \"That's correct. On my orders, Stimmi had his chip removed. As did Yalcamara Tchanoonka.\" \n\nHe scowled. \"So what were those two women doing at that motel room, Commander?\" \n\n\"As I already explained, they were resting,\" I replied. \"The Atlantean woman had been awake for days and was exhausted. Captain Lovyanchiti was there solely to provide protection.\" \n\n\"What were their plans?\" \n\n\"Again, I already provided that information. Once the Atlantean woman was sufficiently rested, her plans were to leave the Seven Nations as discreetly as possible. The fact that an attempt was made on her life shows that having Captain Lovyanchiti there as protection was justified. The whole incident was instigated by agents hostile to the Empire, and I daresay, hostile to the Seven Nations as well. Those men attacked the women with murderous intent, and the women simply defended themselves. End of story.\" \n\n\"Hostile to the Seven Nations? Why would you say that?\" \n\n\"Because I don't believe it's your policy to murder foreign nationals out of hand. Like the Empire, you have a legal system for handling someone who breaks the law.\" Then I smiled at the sergeant and his partner. \n\n\"This isn't a game, Commander! People are dead!\" \n\nDropping the smile, I leaned forward. \"On that point we quite agree. Stimmi was a sergeant in my command. He was both a trusted and valued member of my team. His direct superior, also highly valued, is now missing and presumed to be in mortal danger. When my people are threatened or killed, I assure you, I take that very seriously. Do you have any leads on her whereabouts or not?\" \n\n\"What do you intend to do if you find them?\" \n\n\"My priority is to rescue my officer and see that she is afforded the best medical care available. If you want the murderers, I will acknowledge your authority here. However, I will gladly take them off your hands if that would help. I make no promises if during the rescue whether some or all are killed, The safety of my people comes first. Now is she still within the Seven Nations?\" \n\nLeaning back in his chair, his hostility dropped considerably. \"No. Our computer specialists went to work right away. Through traffic cameras, we tracked the van to the airport. All nine passengers boarded a chartered aircraft to Tellemgu, and after refueling, proceeded on to Boganaway, which you Imperials like to call Sugarland. The Sayandok authorities report the suspects and your officer deplaned and almost immediately boarded a diplomatic aircraft. They departed the Seven Nations about four hours ago, presumably for Imperial territory. From what we could see on the video, she appeared either unconscious or drugged. They didn't even try to hide her presence.\" \n\nShe was back in the Empire? I slumped. All my hopes for Yalcamara vanished. \n\n\"I take it that's not good news?\" \n\nSeven hells! All three hot, all three cold, and the one in between! \n\nSadness seemed to wash over me like a wave. \"If she's back within the Empire, I probably can't save her, and I'd endure much to make it otherwise. If you would be so kind as to provide any additional information about the case, it would be greatly appreciated.\" \n\nCrazy Wolf stared at me, like he was pondering things. \n\n\"Look, we're both cops,\" I said. \"My predecessor was a bad cop. As dirty as they come. Didn't you get anything good from the information we sent you three months ago? About the slavers and the kidnapping rings?\" \n\nThey glanced at each other, then the detective sergeant said, \"Actually, it was remarkably helpful. Three long-time criminal leaders were taken down. Dozens were arrested, and two major cartels were seriously impacted for the worse.\" \n\n\"It was very big news,\" his partner confirmed. \"And a very good day for us.\" \n\n\"I've been as cooperative as I'm able to be about the incident from last year. Stimmi and Yalcamara were good cops. They were proud of what they did. They caught bad guys and helped protect those who couldn't protect themselves. You deal with what's in your jurisdiction. You already know that the men who did this are long gone. Share what you have with me, and maybe I can track down the bastards and get some justice for my people.\" \n\n\"You assume she's dead, then?\" \n\nI glared at him. \"The alternative is not something I would wish on anyone. They will not let her die easy.\" \n\n\"These are your people. This must really gall you.\" \n\n\"Yes, of course it does! At this time, I have no interest in pursuing any leads that point to the Seven Nations, and if that changes, you have my word that I will tell you so. My interest is solely on those within the Empire who did this. Those that I can bring to justice, I will do so. But letting good cops get killed with impunity sets a bad precedent. A very bad precedent.\" \n\nThe detective sergeant looked at me. A glance at his partner, before he said, \"Give us a few minutes, Commander. We need to discuss things.\" \n\nSitting back in my chair, I nodded. \"Sure. Take your time.\" \n\nAfter they left, I realized they'd left the folder with their reports. I didn't have my laptop, but I did have my tablet. At a glance from me, Sowitwee went to the door and listened for their return. Opening the folder, I activated the camera and rapidly began taking pictures. There were several photos of the murder scene. Stimmi's blood everywhere on the bed. The great gaping hole where his heart had been. I found the ones of the van, and what shots they had of the assailants. The two men in plain clothes wore masks, but the priests had openly worn their regalia. There were some good shots of their arrival and departure, Stimmi's blood on some of them. I focused on getting pictures of the men. In their arrogance, they hadn't bothered to hide from any cameras. \n\nThe priests might outrank the warrior caste, but I vowed that they were going to learn that attacking members of the warrior caste had consequences. They would pay blood for blood, and if I had anything to do with it, payback would be a nasty bitch. \n\nI worked as quickly as I could, then put the folder back into place on the table. Powering down my tablet, I secured it back inside my vest. Sowitwee carefully resumed his previous position behind me, this time standing at attention. I had no doubt that Detective Sergeant Crazy Wolf and his partner had watched everything from the observation room, and had clandestinely given me as much help as he could. \n\nWithin moments of the folder being put back, the two detectives returned. \n\n\"Sorry, Commander. I must inform you that this murder investigation is the sole jurisdiction of the Seven Nations. If you have any more information for us, we ask that you please share it with us. In the meantime, this remains an open homicide investigation, and any interference from you or other agents of the Empire will not be tolerated.\" \n\nRising to my feet, I nodded. \"I understand. If we don't respect the sovereign rights of other nations, then how can we expect them to respect ours? I will share with you whatever I can. In return, if you find out anything further, anything at all, please let me know.\" Pulling out my wallet, I handed both of them my card with my name and contact information. \n\nThe detective sergeant gave me his own card. He offered his hand, and we shook. As they led us back to the main precinct offices where my escort waited, the detective sergeant received a phone call as we walked. \n\n\"Crazy Wolf here. Oh? I'm sure they will appreciate the news. Thank you for working so fast. Bye.\" \n\nWe reached his desk, and he put the folder into a drawer in his desk and locked it. \"That was the Medical Examiner's Office, Commander. As a courtesy to you and your government, they have finished with their examination of your man's body and are ready to release it into your custody.\" \n\n\"That's very generous of you. Thank you.\" \n\n\"A pair of our uniforms will escort you to the morgue and see that you get safely back to your war base.\" \n\nWith that, we left. \n\nWhen we stepped outside, it was grey and drizzily, but within moments it began to rain harder. Like spring rains in many places, it came down in sheets of water for several minutes, then settled into a consistent drenching of the landscape. We followed the Capisco cruiser to another public service building a few blocks away. \n\nAnd, with due ceremony, we collected the body bag holding our fallen warrior. Room had been prepared inside the second M-type ChoCac, and his body was carefully and reverently placed in the space allocated. \n\nAfter loading up into our vehicles, we turned around and drove back to the base. \n\nSowitwee looked at me intently. \n\n\"Not here, Sergeant. Later, when we're in private,\" I said. \"I promise you that I will do my best to get whoever did this, Wit.\" \n\n\"Commander, with all due respect, sir, we're hurting, too. Let us help.\" \n\nSergeant Yelts, my driver, glanced at me in the rearview mirror. Corporal Cooma, half-turned in the front seat. \"Stimmi was well liked. Llam nuqan, Commander. For the honor of the 602, let us help you get the bad guys.\" \n\nI remembered that day outside the Dependent's Office, when the Guard sergeant thanked Commander Orchid for allowing him to help take the child slavers down. \"It was the reason why he'd joined the service,\" he'd said to her. \n\nGiving her a tired smile, I said, \"Point taken. I will discuss this with your officers. We'll figure something out.\" \n\n* * * * * \n\nPart 4 -- Aftermath \n\n* * * * * \n\nWe took Stimmi's body to the morgue. While four vied for the honor to be his litter bearer, and I ended up choosing Sowitwee, Yelts, and two other sergeants. The rest of us marched as his escort. Once inside the morgue, I had them open the body bag to personally verify it was him. With that grisly detail confirmed, I signed the paperwork to have him cremated after our own people did their own verifications. Then we saluted our fallen brother warrior, calling out \"Air Service\" for him three times. \n\nAfterward, the heavy weapons units returned to the motor pool, while the second cruiser checked in before going out on its assigned patrol. \n\nOutside, the sky continued pouring water everywhere. Drains struggled to take away the deluge. People hurried about or hid under the eaves, some looking in desperation for a break before obligations forced them to dash away regardless. \n\nLieutenant Laroks from CID was waiting for me in my office when I returned to my office. I handed Sowitwee my tablet, and he went to his desk next to that of my admin to extract the files. \"Send me the digital files. I want a hard copy, too, Wit.\" \n\n\"Yes, sir.\" \n\nI unlocked and opened my office door. \"What can I do for you, Lieutenant?\" \n\n\"I have the initial report from our search of the living quarters of Lieutenant Tchanoonka and Sergeant Stimmi, sir.\" \n\n\"All right, go in and have a seat.\" I turned to my admin. \"Sergeant Hanami, has Shift Commander Fortri returned from the school, yet?\" \n\nMy admin pushed her wire-frames up her nose before speaking. \"No, sir. He and Lieutenant Raltikon were here a little bit ago to update their boards. They're at the Commissary Diner if you need to speak with them. They said they expected to return to the school and be there for the remainder of the shift today.\" \n\n\"Jay didn't go off duty?\" \n\n\"No, Commander.\" \n\n\"Thank you.\" Closing the door, I motioned for him to have a seat. \"Please, proceed with your report.\" \n\nHe laid his tablet on my desk, briefly checking his notes first. \"A quick scan by the IT Forensics team examining both their personal computers revealed three days ago they received some promotional material indicating they had won a free two-day stay at the Peaceful Shores Motel. Included in the package was a free spa visit as well as a discounted dinner at an upscale restaurant the following evening. His browser history shows that he checked out reviews of the restaurant. According to the rating system he looked at, it has a good reputation. ",
        "\"We checked with the various businesses indicated on our own. The spa and restaurant confirm there had indeed been reservations, but they were cancelled early this morning, minus a small processing fee. The motel confirmed the second day was cancelled and an attempt was made to collect a refund on the unused portion of the stay. As of this morning, the motel has refused to refund the balance.\" \n\n\"Parsimonious bastards.\" I sat back in my chair. \"So they were lured there. Anything else?\" \n\n\"There are a few more things, which I'll leave at your discretion, Commander.\" \n\n\"At my discretion?\" I scowled at him. \"I expect everyone in this regiment to do their duty according to regulations, Lieutenant.\" \n\nHe winced. \"I meant no disrespect, Commander. It's just that this information might be less than favorable to them -- and to others -- were it to become common knowledge, and has no bearing on the case itself.\" \n\n\"Explain yourself, Lieutenant Laroks.\" \n\n\"It's easier to show you, sir.\" He pulled a document out of a binder and slid it across my desk. It was a marriage certificate, dated a week ago. The two witnesses were listed as Doyya Lovyanchiti and Chita Wanwari. It sure looked like their signatures, too. \n\nWomen in the military aren't allowed to be married. Laroks was correct. If this got out and became an official part of their record, it would tarnish Yalcamara's reputation, with a sanction for Conduct Unbecoming an Officer, ending her career on a bad note. Worse, it could lead to JAG inquires for both Doyya and Chita for not only not reporting it, but also for participating. A court martial would probably result in official reprimands with possible reductions in rank. \n\nI unlocked my secure drawer and put the certificate inside. \"Thank you. I'm sorry, Lieutenant. I jumped on you, and you didn't deserve it. And you're right. This has no bearing on the case. I assume this is the same place they stayed at during their previous outing?\" \n\n\"For privacy's sake, I looked into the time period in question. It was the same place. So it's true he's been murdered?\" \n\n\"We just returned from dropping his body off at the morgue. Officially, the Capisco Police say the homicide is their business, and if they find out anything or catch anyone, they'll let us know. Unofficially, they shared what they had, which was a lot. Based on what you just told me, it's clear they were lured into town by the offers, and no doubt being newlyweds, they jumped at the chance for some shared pampering. You know better than I do how bad it got here. Gods know they deserved it. Both of them have worked like dogs since I took over here. Seven hells, they probably even thought some of us had paid for it. \n\n\"Here's what we know so far. At least nine men broke in while they were sleeping, killed him, took his heart, and kidnapped her. Then they immediately drove to the airport, got onto a transport, flew across the Seven Nations with one stop to refuel, and transferred to a diplomatic transport at Sugarland. Within three hours, they were out of the country, headed for somewhere in the Empire. The use of the diplomatic transport means someone with power did this. The changes we've made here and have begun elsewhere have no doubt angered those invested in continuing their criminal activities. I have no hope that we can save her. And while it may sound cruel, I actually hope her end is quick. The alternative does not bear thinking about.\" \n\nIf Marvak Prison, the Sixth Hell, was anything like my time at Sparantzlo -- well, I wouldn't wish that on anyone. \n\nLaroks nodded grimly. \"Your predecessor used to brag about his relationship with the Minister of Imperial Security. It's a damn shame, Commander. I didn't know her well, but by all accounts, both of them were first rate security troopers.\" \n\n\"Sergeant Sowitwee is making copies of the reports and photos provided by the Capisco Police Department. You should add that to the case file you've started, but mark the case as Restricted. I'm keeping a separate copy with me. Would you be so good as to find out where that diplomatic shuttle went? The Capisco Police have the departure time and the aircraft's registry number in their records. Lieutenant, be sure you affix my name to any inquiries, not your own.\" \n\nPutting away his tablet, he stood, preparing to leave. \"Yes, sir. I'll let you know what I find out, Commander.\" \n\n\"You implied there was something else, Lieutenant.\" \n\n\"Oh! Yes, there was.\" He looked apologetic. \"I found this among their personal effects. It's also not relevant to this investigation, but it does need to be addressed soon.\" \n\nHe took out a sealed envelope from his folder and handed it over. The letter was addressed to me. It was also already opened. I couldn't find fault with that, since at the time I'd already heard that Stimmi was dead. Inside the envelope was another envelope, still sealed and showing a stamp from the Air Service JAG Office. Outside the second envelope was the phrase Final Disposition. \n\nA will. Considering what I'd just learned about their personal lives, likely a joint one. \n\nBreaking the seal and opening it up, I scanned through it. I was named sole executor of whatever possessions they owned. A few described items to go to friends. A note that neither one of them had any close surviving family. A safety deposit box at Finance. A few other miscellaneous items. \n\nAs he was the lead investigator, I let Laroks look it over. He read through it and handed it back to me, saying nothing. \n\n\"I appreciate your discretion with Lieutenant Tchanoonka's record. Remember, Lieutenant, your report and your investigation are Restricted. You, me, your CO, and any Shift Commander only. If anyone else requests access, you are to notify me before releasing that information. Am I clear? Also, if you have any questions or if any additional information becomes available, we update each other in person.\" \n\n\"Yes, sir. You seem to know who took her, Commander.\" \n\n\"Though I have no proof at this point in time, I believe this operation was sanctioned by Minister Supay. Anything else?\" \n\n\"No, sir.\" His face troubled, he saluted and departed. \n\nTaking a breath, I called home. \n\nSomeone picked up on the third ring. \"Hello, Ranji.\" \n\n\"Ixma? I thought you'd be at work.\" \n\n\"The Captain said I should stay here and help. Nariya is getting close to her delivery date, and shouldn't have a lot of emotional stress. Daydo hasn't returned yet, so I guess he must still be visiting his daughters. Terra and Salvia are doing their best to try and cheer everyone up. Terra tried to read aloud one of Mina's books to distract them. Sisi helped her read it, and she praised Terra for her efforts. She's just turning six and she's so smart!\" \n\nHer voice dropped lower, and she added, her voice hitching as she spoke. \"Calia said Yalcamara's ghost was here. Calia said her eyes were gouged out and her heart cut out... just like Stimmi. Then... she said they both changed, looking good as new, dressed in fancy civilian clothing. Calia said it looked like a wedding dress, Ranji. They said they were sorry they won't be here to help in the days ahead. The way she described it, they held hands and just faded away. That was about four hours after you left this morning, somewhere around zero-seven-forty.\" \n\n\"I see. That... helps, actually. I was afraid for her life, but I was more afraid they would keep her and torture her. At least she isn't suffering now.\" \n\nShe sniffed before responding. \"I didn't know them very well, Ranji, but I liked them both. They were always checking up on us while you were gone. I have the feeling Calia knew them better than I did. I think Calia's finally sleeping now. The girls are with me on the couch, taking an extra nap.\" \n\n\"They were really good people, Ixma. Fine warriors and good friends. How are my girls doing?\" \n\n\"Sisi missed going to school and seeing her friends. Mina is getting used to school, but she was happy getting some extra time with me. They are sad for Calia, and they want to help her feel better.\" She took a moment to blow her nose. \"We heard the school was closed. Cholan told us what Calia said before they left. Was it --?\" \n\n\"Not over the phone, Ixma. I'll tell you when I get home tonight.\" \n\n\"I understand. All right, then. I love you, Ranji.\" \n\n\"I love you, too, Ixma. Tell Calia and my girls, I love them as well. Give them hugs from me. I'm not sure if I'll be home at my usual time, but I'll definitely be home for dinner.\" \n\n\"We'll miss you until you come home. Please be safe.\" Then she hung up. \n\nI sighed. So Yalcamara was dead, too. \n\nI should be working, but instead I wanted to destroy something. I'd missed my morning workout with Jay because of the bombs. Maybe a trip down to the shooting range. \n\nThere was a knock at the door. \n\nI barked out, \"Enter!\" \n\nSowitwee came in, carrying a cooler. \"You should eat something, Commander.\" \n\n\"Not hungry, Wit.\" \n\nThe food Chita had procured earlier was still in their boxes next to the cahault-maker. The sandwiches were still reasonably fresh. \n\nHe carried his load to the small table, setting it beside the cahault maker on the opposite side with the food containers. Opening the cooler, he lifted out two millet beers. Setting them both onto my desk, he said, \"Permission to raise a toast to the honored dead, Commander?\" \n\nI got up and passed by him, glancing into the cooler. Looked like two dozen beers chilling in there. Opening up the door, I scanned the busy office. It was just noon, and I happened to see Doyya coming in almost two hours early. Her shift didn't start until fourteen hundred, yet here she was. \n\nDoyya dropped her gear just inside her office and then headed directly to me and my office, her face full of questions and a riot of emotions. And she looked worn out. \n\nI poked my head around the corner, to the office adjacent to mine. \"Sergeant Chita, I need to see you in my office, please.\" \n\nShe looked at me, then to the three enlisted she was talking to, telling them, \"We'll continue this later.\" Then as she started to rise, said, \"I'll be right there, Commander.\" \n\nMy admin looked to me as well. My schedule had gone to the crapper this morning, and even with the rush to prepare for the inspection, she'd had the sense to not try and bother me with reports and sundry. \n\n\"Hanami, in my office, please. Bring your chair, too.\" \n\n\"Yes, sir.\" \n\nI waited for Doyya to get closer, then standing aside, said, \"In my office, Captain.\" \n\nChita and Hanami came in right after Doyya. \n\nI closed the door, then went to my desk. Digging into my bottom left drawer I pulled out the jammer that Kestral had given me. \"Pass out the beer, Sowitwee.\" I grabbed one of the beers and popped the cap off. \n\n\"First off, there are things I'm going to say, and they don't leave this room. Am I clear?\" \n\n\"Yes, sir,\" came the echoes around the room. \n\nDoyya was holding it together, but her hands shook. Chita directed her to a chair, then stood behind her, her hands rubbing her shoulders to comfort her. \n\n\"All right, some of you know I went to Capisco this morning to recover the body of Sergeant Stimmi Parletl. The morgue still has to do its own confirmations, but I saw his body, and yes, Stimmi is dead.\" \n\nThen I summarized what I learned from Laroks and from the Capisco Police Department. When I described that Yalcamara had been taken back to the Empire by diplomatic transport, Doyya gasped. \n\nI paused, then said, \"I have reliable information that Yalcamara died sometime around seven-hundred-forty hours this morning.\" \n\nFaces looked at me, still trying to absorb what I'd just told them. Doyya's second in command and friend was gone. \n\n\"How do you know, Commander?\" Chita asked. Doyya's hand moved up to Chita's, and they clasped. \n\n\"My Personal Servant, Calia. She sees ghosts. Stimmi's ghost arrived at my house early this morning. That's why Sergeant Sowitwee began making inquiries about them both shortly after we arrived early this morning. While we were in Capisco, collecting Stimmi's body, Yalcamara's ghost showed up, and they departed together.\" \n\nHanami looked puzzled. \"This Calia, your Personal Servant -- she's some sort of seer?\" \n\n\"Yes,\" Sowitwee answered. \"She's both a seer and a healer.\" \n\nHanami turned to me. \"Do you believe she has abilities, Commander?\" \n\n\"Calia's the one who warned us about the bombs at the school. We looked and found them, right where she described we would. If she tells me something, I'll verify it, but I will act on it, too. We need to deal in hard facts and evidence, but there's no escaping her abilities. She has been right about so many things -- things she could have had no way of knowing anything about.\" \n\nHanami looked around, then followed up. \"Do we know why they were murdered?\" \n\nI tried my best not to look guilty. Not sure if I pulled it off. \"I believe Sowitwee's father was falsely accused and convicted for selling counterfeit jewelry. I believe they did it to destroy his business and force him into indenture. Barring any other information, I believe they did it to his family solely out of greed, so they could have his skilled labor at a cheap cost. \n\n\"Last year, the company holding his contract fraudulently amended the debt, adding fees and interest charges they weren't entitled to without his signature. They didn't even bother because the men who did this didn't fear the court challenging them on it. What they did violated Imperial law. Each month they added more charges, again violating Imperial law. That was a big part of our trip to Cop\u00e1n. While there, we learned the workers in the office holding the contract were not Guildsmen but slaves, again violating Imperial law against unfair trade practices, using slaves to conduct financial transactions. I paid off the fraudulent contract, to clear the debt and free both Sowitwee and his father. Then I secured all the slaves and arrested the manager.\" \n\nI frowned. \"Most of the slaves told us a startling story, and several of those stories were confirmed as true by Captain Korreem, the Imperial Security chief stationed at Cop\u00e1n War Base. They or their family were approached to either sell out or take on a silent partner -- who would get a large share of the profits without any investment. Having refused, they were kidnapped, family members separated, and presumably sold into slavery like those we rescued. Based on their testimony, we learned nearly a dozen others falsely enslaved were at the home of their owners -- two brothers with strong criminal connections. These brothers have powerful allies in the state government, and one Imperial ally of infamous reputation. \n\n\"Lieutenant Tchanoonka and our contact there in Cop\u00e1n recommended I leave the situation as it was. Instead, I discussed it with her, and both she and Stimmi volunteered to lead the night raid to rescue the other falsely enslaved citizens. Note that all the slaves were controlled by a nano-bomb, injected into the host. Disobey, and they simply spoke the phrase, 'You are free' in Queschuan, and the bombs go off, blowing apart their heart. This is technology favored by one person in particular. Minister Supay.\" \n\nHanami gasped, paling, but remained where she was. \n\nLooking across the room, I said, \"Knowing what I know now, I don't know if it was worth losing Yalcamara and Stimmi.\" \n\nDoyya, her face suddenly furious, blurted out, \"Stop it!\" \n\nI blinked. \"Stop what?\" \n\n\"She told me what they did, Commander! Rescued another nine slaves and five children from unjust slavery. Those men broke the Emperor's laws! Yes, Yalcamara was initially cautious, and rightly so, but she and Stimmi were both proud of what they did. Proud! You reminded them of who we are, and what these uniforms we wear represent. They enforced the law and rescued civilians wrongfully enslaved. As you often remind us, sir, each of us took oaths to defend the Empire from all enemies, foreign and domestic, even if it cost us our lives to uphold that oath. That includes resisting powerful bastards who illegally enslave Imperial citizens and who murder our friends and fellow warriors.\" \n\nI leaned back in my chair. \n\nShe chugged the rest of her beer and took a calming breath. \"I want you to know that I really admire you, Commander. You have a strong sense of honor and justice, and you do your best to be fair and to protect others. I still have that blood-stained uniform from my first day on the job working for you. It has its own special place in my closet. I've had a lot of my own personal doubts along the way, but I have to say, hearing you voice them right here and now is terribly unsettling. Especially when it involves you questioning your resolve and your determination to do the right thing. We're warriors. We know the risks that come with the uniform, sir.\" \n\n\"Doyya, despite the rumors, I'm human, too. Even if there is no other choice, I know I might have to send men and women to their deaths, and it's going to weigh upon me. I made a promise to everyone in the 602 that I would not spend anyone's life foolishly or callously, that I would do everything in my power to keep my people as safe as I possibly can. May the gods strike me down if it ever gets easy to send people to their deaths.\" \n\nHer angry face faded, and she nodded at me. \n\nI continued. \"I will do my best to learn from my mistakes. Unfortunately, I made more than my fair share at Cop\u00e1n. Taking on Cholan's ex-brother-in-law nearly got me, Cholan, and my protection detail killed. I'm chastising myself for what happened with the slave rescue, not them. I was and remain proud of what Yalcamara and Stimmi accomplished. However, because I authorised the action, their deaths are on me. More, I think the manner of the action provoked the Minister. We did our best to hide their identities, but somehow that information got out.\" \n\n\"If I may be blunt, Commander?\" Doyya said. \n\nBeing new, the best that Hanami managed was a discreet grin behind her hand. The others simply laughed. Doyya shot them a scowl, then snapped her face back toward me. \n\nI raised my eyebrows. \"This is all off the record. Go for it.\" \n\n\"You've been a thorn in the Minister's arse since you arrived. You found the discrepancies in the supply orders and reported it. High Guard has been hemorrhaging money and equipment for decades, but after the work by Commander Orchid and by you, that's stopped. Yes, it's cost a lot to get us back to where we need to be. But emergency shelters actually have supplies in them, and those discovered unsafe have been repaired and brought up to code. We've caught several people trying to re-establish smuggling rings on the base. The Minister chooses to enrich himself at the cost of the Empire, and he leaves fear and shattered lives in his wake. You choose to serve the Empire, and leave behind hope. Being a security trooper -- an honest one -- is dangerous at the best of times. The more I learn about that evil man, the more the depths of his corruption are revealed. He should be our ally, serving the Empire!\" \n\n\"The point is, he's not our ally, and he is not to be taken lightly,\" I warned sharply. \"He is extremely dangerous, with access to a lot of resources and manpower. During our search for bombs at the school, an intruder was discovered. Before he could be questioned, he died, and it appears he was killed by one of those nano-bombs to the heart so that he couldn't talk.\" \n\n\"Doesn't change a thing, sir,\" she asserted. \"We do our jobs the best we can. By all the gods above, the reason we are here is to stand in their way, whether it's to protect our fellow warriors or the citizens of the Empire. It just means that we have three enemies. Atlantis, Aesir-Veda, and the Minister of Imperial Security.\" ",
        "Hanami blanched, paling even more. \n\nI shook my head. \"Yes, well, I have good reason to blame myself. It's one thing to do what was right, but I rubbed his nose in what we did.\" At her look, I decided to come clean. \"Yalcamara did the raid dressed as Commander Orchid. Did she tell you that? And during the raid, one of the brothers tried armed resistance. Yalcamara shot and killed him. Those two brothers I mentioned are the sons of Pren Bayloks'mec, the so-called Hero of Ventac Two.\" \n\nSowitwee just pursed his mouth. Wide eyes from Chita and even bigger ones from Hanami. I wasn't sure if my admin was going to faint or not. She sure looked like it. \n\nMy Second simply said, \"Shit.\" \n\n\"My thoughts exactly. I had a Ground Service JAG tell me that if I had tried to challenge Sowitwee's case in Chohinze, I'd lose, even with documentation of their bald-faced criminal violations. Like I said, I will do my best to learn from this mistake. The cost in losing two fine warriors was damned high enough.\" \n\n\"Commander, there's no one else I'd rather serve with than you. I'll take my chances with your mistakes than someone else's conviction.\" Doyya tried to take a drink from her empty beer bottle, then set it back down. \n\nSowitwee offered her another, but she shook her head. \"Shouldn't drink alcohol while on duty,\" she muttered. \"One beer to honor my friends. A second would be to ease my own grief, and that needs to wait until later.\" \n\nI turned to Doyya. \"To quell any rumors, we should tell your command first the news about Yalcamara and Stimmi's deaths right away. Do you want to tell them or would you like me to do it?\" \n\n\"No, I... I'll do it, Commander.\" \n\n\"As you wish. I'll be there to give support.\" Reaching into my desk, I took out the marriage certificate and set it in front of her. \"I think our friends would like it if you kept this.\" \n\nChita saw it, surprise flashed across her face, then she hurriedly scooped it up, sliding it under some papers on her clipboard. \n\nThere were two sharp raps at the door, then it popped open. A tired Jay stuck his head in. \"Hey, I'm getting ready to head home, and I wanted to tell you... Uh, what's going on here?\" \n\n\"Come in. Close the door behind you.\" \n\nI repeated the highlights for him. Including the visit to Capisco and Yalcamara's passing. \n\nJay scowled at me, and started to speak, but I held up my hand. \"Wait. First grab a beer. Sowitwee suggested this, and I think it's appropriate. Warriors have fallen today, and we need to acknowledge their passing. Doyya, grab another bottle. I'll help you finish it, but you need to drink with us.\" \n\nThe tradition was that the drink lifted in tribute to the dead wasn't complete until the glass, tankard, whatever, was emptied. To not finish was considered a sign of disrespect. \n\nAs one, we lifted our bottles. \"To our honored dead! May we always be worthy of their sacrifice, and as true when our own time comes.\" \n\n\"Air Service,\" they said, then drank down hefty swallows. After the first set by Doyya, I held out my hand and she passed the bottle over. I still had my own bottle, half full. Sowitwee scooted around and took the one I'd started, then up-ended it, quickly downing it. When he was done, he gave me a sharp nod and returned to his seat. \n\nAs Janetta says, I'm a mere beginner when it comes to alcohol -- though her phrase is more colorful -- and apparently Wit knows it. \n\n\"Can I speak now, Commander?\" Jay asked. \n\n\"Go for it.\" \n\n\"First I want to say, fuck! He not only kills two of our own, he tries to kill thousands of kids! Well, I'm telling you right now, you going off on your own isn't going to happen. I know you're thinking about it, but no. I don't think there's a one of us here who wouldn't like to get armored and loaded up with as much killing power as we can carry and start shooting. Considering our opponent, it will also be a quick way to get killed.\" \n\nDoyya nodded, and the others watched for my reaction. \n\n\"I admit, I thought about it,\" I replied. \"I'm a decent sniper, but I don't have the experience navigating the urban landscape, and I've very little actual experience in the field. Besides, Cop\u00e1n belongs to Supay. \n\n\"But this morning, I was reminded that we are a regiment of warriors, that we have a motto. Llam nuqan. We work together. So I am open to suggestions on what needs to happen. No court, military or civilian will touch this. That's not going to stop me. I want payback. We might not know the identities of the Imperial Security agents who were involved, but we have photos of the priests. I want their names, and then I want each of them to eat a bullet for what they did.\" \n\nI turned my focus to Doyya. \"Yes, we are warriors, sworn to the Emperor's service and to defend the Empire from all her enemies. The priests can talk about the gods, but when they attack us in defiance of the law and while breaking the Emperor's peace? When you kill those who enforce the law, expect to pay in blood for the privilege.\" \n\nJay set the empty bottle down. \"You know Pen and I will follow you, whatever you decide, Commander. Pen, myself, and the captain here -- we'll discuss this turn of events over the next few days and let you know what we come up with.\" He set his hand briefly onto her shoulder, and she smiled gratefully at him. \n\n\"However, tomorrow, we have the inspection, and that takes precedence,\" Jay said. \"We want to impress the Air Marshal so we get to keep our commander.\" \n\nI looked at Doyya. Her hands were steady again. \"What do you have to say about this, Captain?\" \n\n\"I'm afraid it's true, sir,\" she dead-panned. \"We want to keep you.\" \n\nChita snorted loudly and even Sowitwee chuckled. Jay just grinned at me. \n\nI chuckled. \"All right, you scoundrels. We'll table this until next week. I appreciate all of you, your loyalty to the Emperor, to the Air Service, and to me. Are you going to be okay driving home, Jay? Oh, and what was it you were going to tell me? You obviously had something on your mind when you opened the door.\" \n\n\"Yeah, I have a ride.\" He gave a sad grin. \"Seems sort of trite now, but... well, Pen met a girl --\" there were sharp intakes from Hanami, Chita, and Doyya at that -- \"and it was like instant attraction for them both. There could have been a riot next to them and neither one would have seen it. She's agreed to have lunch with him tomorrow, and he couldn't stop grinning after she left. I tell you, he's got it bad. Every time I looked at him, he'd start grinning again.\" \n\nI wasn't alone in smiling at the news. In the midst of our grief at the loss of two friends, another one of us might possibly be finding love. Or so I hoped. \n\n\"Come on, Lieutenant,\" Doyya urged. \"You can't leave it at that. Details, man. We want more details. \n\n\"Just so you can gossip about his love life,\" Jay chided. \"Ah, well. He's a big boy. He can take it. Apparently this woman he met just started working at the school a couple of days ago. Her name's Tanti Yakalme.\" Then he raised his eyebrows thoughtfully as he mulled over his own words. \"Say, that name sounds familiar. Isn't that the same House name as one of your women, Commander?\" \n\nPen and Tanti? \n\n\"It is,\" I replied, leaning back in my chair, vastly amused. Zinja once said she thought the gods of chaos had a hard-on for Janetta. It appeared they liked me, too. \n\nJay rubbed his chin a moment. \"Hunh. There are dozens of Raltikons on Tacana State, and more in Je State. Coincidence about the House names, Commander?\" \n\n\"Nope. Tanti is Cholan's older sister. She came back with us from Cop\u00e1n, along with her sister Breena and Breena's three kids.\" \n\n\"Should I--?\" Jay began. \n\nI chuckled. \"Not a word to him. I have no objections and I doubt Cholan will either. Tanti's been a widow for more than a year, and if she's ready to move on, more power to her. If they're both smitten like you say, let them enjoy it. There's not enough happiness in the world as it is.\" \n\nNarrowing my gaze at my admin, I said, \"Hanami, you don't seem as intrigued by this news. Something I should know?\" \n\nStartled, she lowered her gaze. \"No, Commander. Lieutenant Fortri is a very handsome man. No, I'm... just concerned about what you said earlier. Are you sure it was Minister Supay who killed Stimmi and the lieutenant?\" \n\n\"Hanami, if you're scared, then good. Supay is a very, very dangerous man. Most people agree the only man more powerful is the Emperor himself. The Minister is a man most would be rightfully afraid to challenge. Last year, Commander Orchid came and foiled the Drug Plot. Commander Orchid is not one person but as many as four women scattered across the Empire. She made arrangements for the women who wanted to stay in the military to have abortions at family planning clinics within the Seven Nations, and to allow them to re-test for pregnancy, and have the second test be the official test of record. For those women who could not bear to have an abortion, they were given the option to emigrate to the Seven Nations with an honorable discharge and a cash-out for their time served. \n\n\"Aside from the Drug Plot, there were several extortion, embezzlement, and theft-rings, all stealing from the Empire. Commander Orchid put a stop to those, and helped stop a child trafficking ring in the bargain. Unfortunately, the Minister's lover arrived, assumed the role of Commander Orchid, and tried to murder almost two thousand women, children, and servants of the men who were caught and executed for committing crimes. The Commander Orchid who was here first fought the Minister's lover and killed the fake Orchid. I consider the woman who won to be the real and only Commander Orchid. \n\n\"In retaliation, the Minister ordered the death of all the Imperial Security forces present where his lover died, as well as blowing up a Condor transport that killed everyone aboard. Over three hundred men and women dead, on his say-so alone, because of his rage. No appeal, no chance to explain. Nothing. Not everyone who works for Imperial Security is an enemy. Indeed, I consider Commander Orchid to be my personal friend. \n\n\"The Minister then put out a warrant to apprehend Orchid with extreme sanction. In case you didn't know, Hanami, that means shoot on sight. I helped arrange Commander Orchid's escape, and I assigned Captain Lovyanchiti here to guard her. She took a bullet while guarding her charge in Capisco and nearly died. As far as I know, the Commander Orchid who helped clean up this war base and saved the military careers of a few thousand women is alive somewhere, still working in the service of the Empire, even while having a death sentence on her head. If all this is too much for you, Hanami, I need to know now.\" \n\nShe looked at the others, and Chita spoke up. \"If it helps, Hanami, I'm scared, too. But I believe in Commander Kandikan. What we have at High Guard is better than much of the rest of the Empire because we also have the Protection Order. We have the right to say no to sex. These days, if a woman is bent over a desk with her trousers at her ankles, chances are it's because she wants it that way. When I was with the Ground Service after the Commander left, I never had to have sex with anyone I didn't want to -- because they had adopted the Commander's Protection Order. It's okay to be scared because there's real danger involved here. The murders of our friends, Stimmi and Lieutenant Tchanoonka, are proof of that. But this is a fight worth fighting for.\" \n\n\"If either one of them are doing it over a desk, it better be on their lunch time or after their duty shift,\" I grumbled. \n\n\"So noted, Commander,\" Chita commented drily. \n\nDoyya snorted at that, then said, \"Hanami, you see a lot of the Commander's confidential information. If this is too much for you, you need to let us know now, so we can find a replacement for you.\" \n\n\"Commander?\" Hanami looked at me, her face worried. \n\n\"If you want to leave, now is better than later,\" I told her. \"I want committed volunteers in the 602. We do a dangerous but necessary job for the Air Service and the Empire. There'll be no punishment and no retaliation if you want to leave. You have my word on that.\" \n\nShe gave a loud exhale and then smiled grimly. \"I'm scared -- terrified actually, but I'll stay. Count me in.\" \n\n\"Good,\" Jay said. \"Because the rest of you should know something else important. Some of you are bright students and have probably figured this out, but I think it's time for this to be above board. The Commander, Lieutenant Fortri, and myself are also members of Imperial Security. Pen and I met the Commander at that training. Not all Imperial Security agents are corrupt. The difference -- and there are many more like us -- is that we serve the Emperor and the Empire -- and not Minister Supay.\" \n\nI think the only one who was surprised at the revelation was Sergeant Hanami. And glancing around, she quickly realized that fact. I had already known that Doyya, Chita, and Sowitwee were pretty tough cookies. They were also proving to be pretty sharp, too. \n\nDoyya caught me looking at her, and shrugged. \"After that firefight at Chitolpo, it was an open secret. Meeting your brother, Commander, more or less confirmed it. Sergeant Sowitwee was with me at that little dust-up. And, I might have shared that information with Sergeant Chita when I got back.\" \n\nI saw Jay closing his eyes briefly as he leaned against the wall. \"Jay, I'll talk to Pen about the status of the school before he goes off shift this afternoon -- which is only an hour from now. You can let me know tomorrow morning whether the school stays closed tomorrow or not. In the meantime, take off and get some rack time. And that's not a request.\" \n\nGiving a sleepy salute, he quietly exited, closing the door behind him. As the meeting seemed to be over, I turned off the jammer and dropped it back into the drawer and secured it. After a yawn, I finished Doyya's second beer. \n\nDoyya and Chita also got up to leave, Doyya saying she wanted to work on what she was going to tell her troopers at roll call. \n\nSowitwee stood up. \"We need to eat, sir. We both had a short night. Neither of us had breakfast, and if we skip lunch, we'll be lucky if we don't fall asleep at dinner. I'm going to see if these sandwiches can be warmed up. Hanami, do you want me to get you something while I'm out?\" \n\n\"I have my lunch at my desk.\" \n\n\"Are you sure about that?\" He raised his eyebrows at her. \"The Diner has stir-fry and barbecue pork on special today. I can also pick up some fried shrimp. I understand you're partial to sweet chili sauce.\" \n\nShe bit her lower lip, then nodded. \"All right, you talked me into it. Thank you.\" \n\nAfter Wit left, Hanami closed up the cooler with the beer, and when she realized the cahault-maker was empty, set about filling it and setting it to brew. Once that was done, I knew I needed to take a nap. Tired, I moved to my couch and lay down, telling Hanami to wake me when Sowitwee returned. She nodded as she turned down the lights and left, closing the door behind her. \n\nIt seemed I had just closed my eyes when she was shaking me awake. Standing up, I stretched. Twenty minutes wasn't a lot, but it would have to do. Sowitwee laid out fare for the three of us. The smell told me that I really was hungry after all. \n\nWe quickly demolished the meal, Wit and I eating like ravenous hounds. Both of us were hungry enough that we looked at the sandwiches Chita had purchased earlier, and to the amazement of Hanami, decided they were serviceable, so we polished them off, too. \n\nIn the meantime, we worked until start of shift changeover. I stepped into the private toilet and shaved off the morning shadow, straightened my uniform, and then accompanied Doyya and her XO, Lieutenant Minhawee to the shift briefing room. \n\nAs expected, the news about Yalcamara and Stimmi made for a somber meeting. There was no getting around the fact that both of them were well-liked and respected. When questions began to come up, Doyya glanced at me, and with my nod, she stepped back from the podium. \n\nI cleared my throat before speaking. \"First off, I want to assure you that we're working closely with the Capisco Police Department on this matter. They have already shared some crucial information with us, and we are following all leads and avenues of action. As we learn more information that we can share, we will share it with you. \n\n\"As Captain Lovyanchiti has said, Lieutenant Tchanoonka and Sergeant Stimmi will be greatly missed. They weren't just security troopers in my command. They were my friends. Their valor, expertise, professionalism, and loyalty to their fellow troopers, to the Empire, to the Air Service, and to Air Security are hallmarks that the rest of us can measure our own success by. They were warriors, and they were part of the 602. Their service has added to our regiment's honor. Their service record reflects the best traditions of the Air Service. Lieutenant Tchanoonka taught me that every field trooper has a partner. That partnership is a team that must work together to be effective, and to avoid accidents or death. \n\n\"When you attend your duties, be mindful and be careful for yourself and your partner as well as your fellow troopers. When we work together toward a shared purpose, we increase both our strength and our ability to accomplish great things. Our motto, llam nuqan, isn't a silly catch-phrase. It's a way of approaching our duty as warriors. As your commanding officer, all of you are mine. When any one of you are attacked or injured, it matters to me. It matters to Captain Lovyanchiti. It matters to your officers. Rest assured, your officers and I will do everything in our power to make things right. \n\n\"However, there's no escaping the fact we are warriors. We wear the uniform of Air Security. We are pledged by our oaths to serve the Emperor and the Empire, even at the cost of our lives if need be. As Sublieutenant Yalcamara Tchanoonka and Sergeant Stimmi Parletl have given theirs. A moment of silence, please, to honor our fallen fellow warriors.\" \n\nFor the most part, heads bowed respectfully, and I stepped back. At the end of a minute, Doyya lifted her head and snapped out, \"Air Service!\" \n\n\"Air Service!\" they echoed back. \n\n\"Air Service!\" \n\nThe reply was louder still. \n\n\"Air Service!\" \n\nThe third cry was nearly a shout that vibrated off the walls. \n\nDoyya and I exchanged nods, and as I turned to go, she went on with the duty assignments for swing shift. \"First platoon, you are covering the airfield today. Lieutenant Minhawee, please make sure that all the troopers get time working with Sergeant Paolto and his trained dogs. Second platoon, sections one and two, you are on gate duty, and the rest of the platoon is at C&amp;C. Third and fourth platoons, you are in classes until eighteen hundred hours, and then you will switch out with Fifth and Sixth platoons, who are on roving patrols until...\" \n\nAs I walked out of the room, I knew that many of the men and women were working as hard as I was. Besides the regular shifts, many of them were taking advantage of the training bonuses to earn extra pay. These were in addition to the class time to become certified and trained as Air Security troopers. \n\nI'd already told Hanami to handle anything she could, but that I was available for emergencies. She was a skilled admin and she was getting good at handling things. As we approached my office, I told Wit, \"Let's pack it in for today. Tomorrow will be an even longer day.\" \n\nWhile he turned off the freshly filled cahault-maker, I gathered my things and flipped off the lights. As I locked up my office and told Chita good night, he grabbed his gear from his desk next to Hanami's. \n\n* * * * * \n\nPart 5 - Surprise Visit \n\n* * * * * \n\nI saw them at the same time as Wit did and we both froze. "
    ],
    "authorname": "TJSkywind",
    "tags": [
        "aliens",
        "alt history",
        "atlantis",
        "consensual",
        "early earth",
        "military",
        "native",
        "poly"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/starlight-gleaming-ch-20"
}