{
    "title": "Riders Wanted",
    "pages": [
        "As I twisted at its end, the device suddenly come came to life. Its quiet hum seemed awkward against the dark and candle-lit setting. Touching it against her skin, she let out a quiet yelp and pulled away. Approaching slower, I worked my way inside her folds to nestle the toy up against her clitoris. Moments later, the oscillating pleasure had taken over her body as she moaned and shook her way through an orgasm.\n\nAnd so that's how the first experience with a sex toy went for Caitlin and me. It was certainly a titillating adventure for the both of us. While I knew she certainly enjoyed what she felt, Caitlin was usually very shy about such things. So as I got dressed and prepared to leave, I questioned her, and was a little surprised by her response.\n\n\"So, what did you think?\" I inquired.\n\n\"That was GOOD, like really good.\"\n\n\"How good?\" I asked back.\n\n\"Like, 'I wish you would hurry up and leave so I can do it again' good - that was the strongest orgasm I've ever had.\"\n\n\"That's exactly what I was afraid of,\" I murmured, \"I'm probably never going to get laid again\" as I managed to give a puppy dog frown.\n\nCaitlin came over and hugged me assuring me that \"it's just different\" and there was nothing that could compare to my warmth and the feeling of me against her skin. It was a desperate attempt to cover up that she just had the time of her life, in a way, I, or no other man could give her.\n\nUnfortunately, I had to go, or I probably would have stayed to give her a second round. I kissed her goodnight, cautioned her against vibrating her clitoris numb, and went on my merry way...\n\n*\n\n...To say that Caitlin and I were shy and innocent at the time would have been an understatement. The mere act of walking in the adult video store to buy the vibrator for her on that Valentine's Day 2000 was undoubtedly the most fearful and embarrassing moment of my life. My only solace was that I didn't see a soul I knew, and she seemed really impressed with my gift \"for her.\"\n\nCaitlin and I met in high school when we were juniors, but nothing really happened at the time because I had a girlfriend. We talked some, and I kind of kept her \"in reserve\" in case anything happened. When I ended up going to a different college than my previous girlfriend, Caitlin quickly appeared on the scene.\n\nSince I was going away to college we agreed our \"relationship\" should be primarily physical as a means to prevent heartbreak at the end of the summer. It quickly became just the opposite, within two weeks we were dating, and by summer's end we had agreed to try a long distance relationship.\n\nNow that first summer before college was quite the experience. I had only had one serious girlfriend previous to Caitlin. She was zealously religious and needless to say, I received only minimal sexual attention. I found some comfort in the fact Caitlin was as inexperienced as me. She had only kissed another boy before, and it was exciting to open the doors to new experiences together.\n\nThat summer, we certainly did ALOT. But the emphasis was on quantity more than experimentation. This was all fine with me, after all, Caitlin was still very conservative. She didn't like the lights being on, was uncomfortable with me going down on her, and wasn't very open to new locations. I didn't care much at all, for the first time in my life I was getting laid, to an attractive girl, at that.\n\nCaitlin was a small girl, about 5'4\" with a slender build. She was a brunette with these large brown eyes. More than anything, she had that \"girl-next-door\" cuteness to her. She wasn't the type of girl you'd see in a magazine or as a model. She had an average body, but a shapely face and tiny little mouth that was undeniably \"cute.\"\n\nSince Caitlin was so conservative, the success of our first tryst into toys came as a bit of a surprise. I knew that slim pink vibrator had to rock her world for her to be so forthcoming about how she felt. I was afraid I had created some kind of addict. It turned out, however, that she didn't end up using it that much. Only when I wasn't around or in situations of extreme horniness would the toy come out to play. What she never denied, however, was the fantastic way it made her feel.\n\nAs that first summer ended, so did the first real chapter of my sexual life. Unfortunately, we were both still virgins. You see, Caitlin had a \"hymen of steel\" as we joked; it was a genetic thing whereby her hymen was just too strong to be broken naturally. At just 18 years old, Caitlin wasn't about to ask her parents to get the medical procedure done to enable her to have sex. But that's a whole different story...\n\nOur first summer was one of incredible hook-ups. Unfortunately, the vibrator never came back out in my presence again, despite my pestering. That was just her nature, and it's something I learned to begrudgingly love and accept...\n\n*\n\n... And so here we are now, five years removed from that first rendezvous. Caitlin and I got engaged, have rented our first apartment, and settled down in a rural part of North Carolina. And this is where our story really begins.\n\nAt 23 years old our sex lives remained plentiful, but admittedly in a rut. We had been doing the same thing for five years, and both Caitlin and I acknowledged that things were in need of improvement. \n\nWe had brainstorming sessions in the past to think of things to try, but because of a lack of creativity or an unwillingness to admit to our secret desires, things never really changed. I'll admit, there were certainly things I thought about that I never suggested, but I certainly didn't want to expose any fantasies to Caitlin she wouldn't approve of. I was in a constant battle to find something that was hot and innovative, but also within the bounds of what was possible.\n\nMy genius idea finally struck late one night. Katie had to work the night shift at her job on a Friday, leaving me all alone at the apartment. All my friends were out of town on vacation, so I showered early and took a bit of a pajama night since Katie wasn't expected home until about 2:00 AM. \n\nAround midnight while flipping through the channels I stumbled on some soft-core late-night Cinemax porno. The poor dialogues, attempts at a plot, and cheesy music aren't exactly my cup of tea, but the visuals certainly did create a little twitch in my pants. I flipped off the television and went into the computer room for some more hardcore enjoyment.\n\nI pulled up the Internet and went browsing through one of my site, watching some videos as I stripped down. As I watched video after next, there was one that caught my attention; A petite little girl atop a Sybian machine. \n\nNow, the Sybian machine wasn't a new concept to me at all. I had seen videos of the device in action since I was a young teenager. Sybian machines and toys in general had always been a weakness of mine. There was something very hot about a girl getting herself off without some sweaty guy grunting and pounding away at her. Watching videos like that was one of the few times in the porno industry you could be assured that the girl was actually enjoying herself and not faking orgasms. \n\nAfter all, these toys were unselfishness machines that could vibrate, thrust, and stimulate thousands of times per second. At such rates of speed, the machines could contort faces, create screams, and generate orgasms like no man. It was incredibly arousing just for me to watch the girls at it; I can't imagine how it has to feel for them!\n\nYet, these Sybian experiences also seemed to have an innocent nature about them. The girls do little more than sit atop the device and enjoy the ride with their eyes closed. It wasn't like the double penetrations or anal sex that also appeared so appealing. \n\nEven after I had finished the \"task at hand\" to the videos on screen, it was that same idea of innocence that kept crossing my mind. More specifically, I saw the opportunity for it to fill the void that Caitlin and I had in our sex life. I found it extremely arousing, and it comes across as kind of innocent. After all, if she loved the little pink vibrator, what wouldn't be too like about the most luxurious of all sex toys? Now, the challenge would be convincing her of that fact...\n\n*\n\n... Right on schedule Caitlin arrived home at about 1:55 AM to find me half asleep on the couch, waiting up for her. I drug myself to bed, as she put on a pair of pajama pants, turned off the lights and snuggled underneath the covers with me. After about a minute of lying there spooning her with her eyes clothes, she rolled over and looked right at me.\n\n\"You beat off tonight, didn't you?\"\n\nI kind of rolled up into a ball against her and said \"Who?? Me??\"\n\n\"Yes you, silly. I can tell you're guilty from the look on your face.\"\n\n\"Now what makes you think that,\" I snapped back.\n\n\"Well, we've been laying here for more than 30 seconds and you haven't humped me or tried to get sex tonight. So I know what you've been up to...\" she explained. \"Now what did you use when you did it?\"\n\n\"Nothing honey, I just laid here in bed and imagined being with you.\" I half-sarcastically responded.\n\n\"Mmmhmm. Sure. At least you just admitted to what you did. Now do I need to go check the computer history or are you going to fess up?\"\n\n\"OKAY-OKAY,\" I quickly and emphatically shot back, \"Girls. I looked at girls.\"\n\n\"Mmmhmm, and what type of activity were these girls involved in?\"\n\n\"Toys,\" I found it safest to stick to non-descriptive one-word answers.\n\n\"Mmmhmm, what type of toys?\" her predictable interrogation continued.\n\n\"Sybians\" I figured if I was going to sit here and get grilled on the topic, I might as well see if I could cleverly work in my ideas from earlier. Caitlin herself was no stranger to the Sybian. I had described the device to her back in our teenage years. In her naivety she was clueless as to what thing did, and I happily obliged to provide a sexual history lesson.\n\n\"And does that turn you on?\" Now, Caitlin is usually really laid-back, but she never hesitated to humiliate me in situations like these. It's like she almost got some kind of satisfaction from getting me into an uncomfortable situation. \n\n\"Yep it sure does\" I responded in an overly-proud tone of voice. \"But you know it would be much hotter if you would do something like that for me.\"\n\n\"Whelp, you never ask, maybe you could get things like that if you were bold and took some initiative.\" Admittedly, I was a bit shy, but so was she. In reality, this was just some attempt to look bold and try to pinpoint me as the cause of all problems.\n\n\"Fine then, consider this me asking.\" I retorted back.\n\n\"Haha. Okay. Well you better go find a second job, the things only cost like $2000. But if the things cost that much, it HAS to be worth it. So if you love me enough to go get me one, then sure, I'll be happy too...\" she remarked with a big shit-eating grin.\n\n\"It's a deal then,\" as I extended my hand. She shook it.\n\nNow the only reason she could act so confident was because she doubted that I would call her bluff. Now, I had a mission...\n\n*\n\n... I wasn't about to go out and spend $2000 on some sex toy that costs just as much as her engagement ring (Although, undoubtedly, it would make me happier). So I prepared to get creative in obtaining a Sybian for her to try.\n\nBut where in the world do you look for a thing like that? It's not the type of thing that grandma sells at a yard sale when cleaning her attic. Neither will you find one stolen somewhere on the streets of New York. A slightly more hopeful, but similarly dismal search of eBay didn't find a one. This was going to be slightly harder than I originally expected.\n\nAfter doing some research on the Internet, I did find some hope. Online, I found groups of Sybian owners who rented or permitted usage of their machine to people they called \"riders.\" I was hopeful to find someone near our area that would let us rent a machine to try in the comfort of our own home.\n\nHowever, it turned out there were no such \"renters\" within a 250 mile radius of our home. I didn't think convincing the misses to take a 4-hour haul just for some toy would be too successful, so I dropped that idea.\n\nThere is, however, another similar group of Sybian owners who let people use their machines. They come to your house with the machine, or vice versa. And, for free of charge, they will let you use the machine - the stipulation being that they are allowed to watch.\n\nNow, scrolling through the list of individuals who participated in this program. I have to admit, I was FAR LESS than impressed. Reading the profiles and descriptions it seemed like nothing more than a bunch of middle-aged perverts who bought the machines as a way to seduce women. Needless to say, the idea of some 60 year old beating off while watching my wife get off didn't set well with me.\n\nNear the bottom of the page was the one listing that caught my eye; A Sybian that was owned by a lesbian female in her mid-30's. Now the idea of a lesbian looking on might not appeal to my wife, her profile was professional and comforting. The female, \"Anne,\" as she called herself was a sex therapist who owned the machine through her business. After hours, she would let the Sybian curious try the machine, provided she could watch. Despite her attraction to the fairer sex, she promised to be discrete, provide no interference, and simply watch. Furthermore, everything could be done in the relative safety of her office.\n\nI sent Anne an e-mail to see if she really existed, and discuss the details of a possibly exciting experience. I knew the bigger challenge laid in convincing my fianc\u00e9...\n\n*\n\n... Meanwhile, Caitlin knew I was up to no good when I came gleefully skipping through the front door, laid a big kiss on her and said, \"Good evening honey!\"\n\n\"What are you so excited about?\" she questioned.\n\n\"Well, remember that deal we made a few days back...\" and then I just smiled.\n\n\"What?! You went to the bank and took out a loan?\" she joked \"What did you tell the lender you needed the money for? But no, seriously, what did you do? Win the lottery?\"\n\n\"I found a machine... now a deal is a deal, *right*?\" And I carefully scrutinized her face as she went from scared, to nervous, back to scared again. \"Come on, I finally took some initiative, now it's your turn to hold up your end of the agreement.\" And I think that statement struck a chord with her. She realized if she rejected me, then somehow she could be to blame for a lack of adventurousness.\n\n\"Sure, a deal is a deal, but I promise you it won't be as good as what you expect,\" she reluctantly responded trying to but a damper on my success. \n\nOver the next several minutes, I hashed out some of the details to her, and they were met with continual criticism. Her lowly attitude made me question how bad I wanted to go through with this. Whenever I hit a potential snag, like the fact we'd have to go downtown to someone's office to have the experience, I always played the \"come on, be adventurous\" card and she begrudgingly came into agreement. So it was settled, now to arrange the meeting...\n\n*\n\n...Turns out, Anne did exist and she was more than accommodating with her \"services.\" Through our brief email exchange she seemed to be a rather well-spoken individual whom we could trust. In our subsequent emails we arranged a Wednesday evening to be our time of meeting, and she gave us directions to her office. I was excited; I just wished Caitlin would feel the same way.\n\nIn actuality, with her negative attitude, I would have probably given up on something like this a long time ago. However, it was such a fantasy of mine; I was almost determined to see it through...\n\n*\n\n...Later that evening, just two days before we were to meet Anne I managed to corner Caitlin and inform her of the plans and discuss with her feelings towards all of it...\n\n\"Honey, I just don't understand how you can be so supportive of trying new things, and then have such a negative attitude when such an opportunity comes about,\" I prodded. \"You agreed that things had been a little dull, I am just trying to spice things up a bit.\"\n\n\"I don't know.\"\n\n\"Yes you do know; now tell me what's wrong! On the rare occasions we do something adventurous, it always turns out great, but you're in such a hurry to crawl back into your shell.\"\n\nAnd so continued my prodding and questioning for about fifteen minutes, until she finally gave in with an adequate response.\n\n\"OKAY - OKAY, you really want to know why?\"\n\n\"Yes, please\"\n\n\"Well first of all, I am scared. It's not often we try new things, and every time we do I am scared that I won't perform to your expectations or I won't be able to go through with them. Secondly, I don't want to be thought of as a whore. Lastly, I hate how much this turns into a competition sometimes. I just wish these things could come more naturally.\"\n\nOne by one I answered to each of these fears, and in a persuasive, yet heartfelt way was able to calm them. By conversation's end I felt a lot better about where we stood.\n\n\"You want to know something else?\" she asked.\n\n\"Sure\"\n\n\"I am actually really excited about Wednesday. Really really nervous, but also excited. Part of me was too proud to admit that to you, and the other part too embarrassed.\"\n\nThis brightened my mood, and that night before bed we had some very passionate sex. Ironically, it was in the missionary position, but I wasn't complaining...\n\n*\n\n... And so rolled around Wednesday. All throughout work I was practically counting down the hours in my head. Truthfully, as 8:00 got closer and closer, I was even getting nervous. As 4:00 rolled around, I grabbed my briefcase, sprinted for the door, and hurriedly drove home.\n\nCailtlin's nervousness was evident as we were both getting ready a few hours later.\n\n\"What should a girl wear to a thing like this?\" she asked. \"Do I wear comfortable clothes, I mean, c'mon, they are going to come off anyways. No, maybe I should wear something nicer; I don't want to come off as a piece of white trash...\"\n\n\"Clean underwear,\" I interrupted her. \"Put on clean underwear, you know, in case we would get in a wreck or something,\" and I smiled.\n\nThe nervousness only built on the short 6-mile drive into town, and it gave me some time to think things over...\n\n*\n\n...I should probably mention at this point there were a few key details that I neglected to tell my fianc\u00e9e. First, I didn't make it at all clear that Anne intended to watch the proceedings. I hoped that I could dismiss such concerns by assuring Caitlin was a professional, and did this type of thing all the time, and was just watching to help us. If that failed, I just hoped she enjoy the feelings so much, she really wouldn't care what was going on. \n\nSecondly, I didn't mention the fact that Anne was a lesbian. Caitlin would probably be a little apprehensive about all of this if she knew it. However, in our discussions Anne promised to be \"discrete\" and \"watch unless told otherwise\" so I was confident she was being honest with us...\n\n*\n\n...And so after about ten minutes of driving, we had arrived in the vicinity of Anne's office. It was kind of eerie, with the usually busy streets of the business district dead. Empty parking meter after parking meter lined the long streets. Anne had sent us careful directions, and we easily found her building\n\nParked right in front us was a nice little red Mercedes, I assumed it belonged to Anne, as there were no cars around for hundreds of feet. I thought to myself \"at least she is doing well for herself, so she must be legitimate.\" Caitlin wasn't about to be the first one out of the car and lead the way inside, instead she just sat in the passenger side and anxiously looked towards me.\n\nI got out and opened the door for her. She followed as we walked inside the building and up the first flight of stairs. We followed the directions on the name placards in the wall to her office, but we could have simply followed the lit hallways, as the remainder of the building was pitch dark. Reading the names on the doors, I finally read one reading \"Anne Haddox.\" Looking back to make sure Caitlin was still behind me, I told her \"Looks like this is it,\" and gave her a peck on her already blushed cheek. I gave a short knock and pushed open the opaque door. ",
        "Inside, Anne was sitting in a reception area watching TV. It appeared as if she had been waiting on us. She was an average looking woman, probably in her mid-to-late 30's. She had curly black hair, and averagely proportioned. She certainly didn't look the part of your typical lesbian. I noticed she was dressed in rather comfortable clothes, and didn't exude the medical type atmosphere I had expected.\n\nAs we walked inside, she quickly bounced to her feet to introduce herself. \n\n\"Nervous?\" she asked Caitlin\n\nAll Caitlin could manage was an affirmative nod. But Anne's positive demeanor and understanding of the situation seemed to but her a bit more at easy.\n\n\"I bet you are, I know I was the first time,\" Anne responded. \"But come on and follow me, and I'll show you back to the room...\"\n\nShe led us down a small hallway. \"This is my office,\" as she pointed it out, \"and there are some of the consultation rooms... And here is what we call the 'activity room' and she opened up the door and allowed us inside...\n\n*\n\n... What we saw inside is what I would describe as a nice mix of functionality and warmth. There was plenty of wide open space on the mat covered floors, windows with the blinds pulled tightly shut, but also a few couches and lamps around the room. On one of the floor mats sat the Sybian, kind of awkward on the floor all by itself.\n\nAnne locked the door shut behind her, and motioned for us to come sit next to her on one of the couches. When we did, Anne pulled out one of the attachments from a bag on the side of the couch and handed it to me. It was kind of firm, and not especially flesh feeling. It was about 4.5 inches in length. She instructed me over to a sink to wash it off, and then into an adjacent room for a condom and lubrication. It seemed very odd that someone was being so blatant and upfront with me about something I usually held so private, but hey, she was a sex therapist\n\nAs I walked across the room, the reason I was sent on my chores became quite obvious. As Anne scooted nearer to Caitlin on the couch, I was afraid she was going to make a pass at her. However, from the little dialogue I heard over the next few moments, I was put at ease. \n\nCatching bits an pieces of the dialogue like \"It's okay to be nervous, that's a completely natural feeling,\" and \"I only do this because I know how the Sybian changed my life\" I realized it was just Anne trying to put my fianc\u00e9e at ease. \"Wow,\" I thought \"this woman really is a professional.\"\n\nI kind of gave the girls their distance as they continued their conversation.\n\nThen Anne spoke \"Come on over Lance, Caitlin seems ready and *excited * to get started.\"\n\nAnne pulled me over to the side of the machine and gave me a quick demonstration of how to control the Sybian; \"This first knob controls the strength of the rotation\" she pointed out, \"and this second one the speed of the rotation.\" \"Be careful,\" she cautioned \"if you turn it up too high it can be painful, and remember TAKE YOUR TIME.\" I promised to do my best.\n\n\"Alright, go for it guys, have fun!\" Anne said, \"And if you need anything, I'll be right back here.\"\n\nCaitlin's eyes shot at me with a look of death. I could read the words \"she is going to watch?!?!\" all across her face. But before she had the chance to speak, I put my hands behind her neck and pulled her towards me for a kiss.\n\nOur kissing continued, but Caitlin still seemed a little uptight. As my tongue made my way into her mouth, I could feel the nervousness starting to give way to the passion. Caitlin freely admitted to me that kissing was one thing that excited her and I was determined to make her forget her frightfulness. I slowed things down, taking my time, slowly exploring her mouth. Occasionally I would suck or bite at her lip. \n\nAfter about five minutes, I began to pick the pace back up. I knew I was in good shape when I thrust my tongue against hers and I could hear her give off the slightest moan and noticed her eyes tightly closed. Placing my hands beneath her butt, I slowly picked her up and sat her on my lap.\n\nAs we continue kissing, I allowed my hands to move across her. At first I rubbed at her neck and back as I way to relax her, but progressed to gently pulling her hair and grabbing at her tight butt.\n\nFrom there I took a finger and gently lifted her neck, where I gently sucked and bit at it. I would just barely get the area moist, and then back off and gently blow on the area. As I continued I could feel my own excitement starting to build, and cautioned myself against going to fast. As a result, I moved back up to her mouth and resumed kissing her. In the meantime, my hands slowly undid the buttons on her blouse, and once undone, I pulled it off and tossed it aside.\n\nCaitlin always wore padded bras, and always made fun of me as I tried to feel her up through them. \"I can't feel a thing,\" she always joked with me. So in combination with my anxiousness, this logic led to me removing her bra shortly thereafter. \n\nI took Caitlin and gently laid her against the ground where I could get at her more easily. Still kissing, I allowed my hands to cup underneath her breasts, and trace circles along their outlines. Meanwhile, I continued kissing down her neck, until my chin rested on her chest.\n\nStimulating her right breast with my hand, I moved my mouth towards her left nipple. Just when it looked as if I was about to take it in my mouth, I stopped and let my warm breath covered it. And so I continued my game for several minutes; licking and massaging every part of her boobs, but purposely avoiding her nipples.\n\nAs Caitlin's nipples began to become more and more erect, she took he hands and began to run them through my hair. After a few more minutes, the scalp message became more suggestive as she pulled downwards, begging me to give her nipples some attention.\n\nAfter just a little teasing, I finally gave in. I twisted my tongue around her hard nipple, gently biting and sucking at it, with my hand, I roller her other hard nipple through my fingers. My actions were met with approval as she pushed my head harder into her chest, and she let out a few unconscious sounds of pleasure.\n\nAfter a few moments, I switched sides of her body, allowing her other breast to be serviced by my tongue. In crossing her body, I took in the full beauty of her chest. Caitlin wore a 34B or 34C, depending on what part of the month you measured, her boobs were pear-shaped, and topped by short pink nipples. While average in size, her breasts were ripe, firm, and proportional to her body. \n\nMy repositioning allowed me to regain some coordination, and with my free right hand I began to trace my way past her belly button and against the waist band of her skirt. Almost immediately as I reached it, I felt Caitlin reach behind herself, undo the zipper, and pull the skirt away. Since she was showing no signs of hesitation, I decided to do the same.\n\nReaching inside her panties, I could feel her smooth pubic area. Caitlin always shaved her nether region, but I could tell she had just shaved that day by the lack of stubble. Continuing my way down, I could feel her lips. Tracing my way past them, I probed inside her folds for her wetness. \n\nFinding her entrance, I gently teased around it. Feeling her moistness gather on my fingers, I made my way back up her lips, and applied some of her own juices around her clit. Just as she had taught me so many years ago, I placed my finger just to the side of her clitoris and began to make a slow and deliberate circular motion.\n\nAfter just a few seconds, Caitlin stopped and said \"C'mon, enough foreplay, let's get to the fun part already.\" I was in no position to complain.\n\nAs she peeled off her panties, she looked at me in all my clothes and gave a disapproving look. \"Fair is fair,\" she said. So wasting no time, I stripped off my shirt and pants, and stood only in my black boxer briefs. \n\n\"Better?\" she asked as she cupped my balls through the fabric. I gave an approving nod. \n\nI applied more lube to the attachment as she began to straddle overtop it, and then spreading her lips, settled right atop the device. The attachment wasn't large at all, so I was confident she quickly acclimated to it.\n\n\"Everything alright in there?\" I asked. She nodded in approval. I scooted over to the little control module, where I took each of the knobs and turned them between an eighth and a quarter of the way to full power, and then anxiously looked on.\n\nAlmost immediately I noticed her get this glazed over 'deer in the headlights' looked about her. I thought to myself \"wow, these things must be amazing; we're getting one of these!\" Then I realized she wasn't fixated on her pleasure, but had snapped back to the realization there was someone else in the room.\n\nI quickly moved over to her, and sat to obstruct the view between Anne and herself. I resumed kissing and gently caressing her, as the machine quietly hummed beneath us. After about five minutes she had relaxed, closed her eyes, and was starting to get into the rhythm of the machine.\n\nMoving back to the controls, I turned them up another eighth of a notch and began to intensely watch Caitlin and her reactions. She first leaned over and supported most of her weight on her hands placed on either side of the front of the machine. This effect was two-fold. Leaning over caused her clitoral region to come more into contact with the vibrating pad and with her weight supported she was able to gently thrust against the machine. \n\nSecondly, her hips moved in a rhythm with the attachment moving inside her, her butt moving back and forth ever so slightly just over top the saddle of the device. It was quite an erotic side to see her not just sitting there, but interacting with the Sybian. \n\nThen, her legs slowly began shaking as she let out a quite moan. This peaceful look came across her face and the trembling in her thighs subsided. Now Caitlin's legs shaking were almost always a sure sign she had an orgasm, but this one seemed so silent and tranquil. I didn't bother myself too much with the details, as I was confident of bigger things to come.\n\nAfter what was about of minute of downtime, Caitlin was again closing her eyes and bucking against the machine. Sexily throwing her hair back, she looked me right in the eyes and moved her lips to the motions of the word \"faster.\"\n\nI was obedient and gave the rotation \"g-spot\" knob another quarter turn. This time, there was an almost immediate effect. She stopped her gyrating motion and sat firmly atop the machine, almost as if she was trying to force it to penetrate her deeper. Placing her hands at her hips, she felt her whole body up, stopping to give her tits a firm squeeze.\n\n\"Mmmm\" she let out what sounded like her first intentional and clearly audible moan. \"Oh fuck, Anne, this feels good.\"\n\nTo this point, I had been pretty oblivious as to that third person in the room. I was so intensely focused on Caitlin, I had almost forgotten about Anne. Shooting my glance towards the back of the room at her I found her with her skirt hiked up a bit and her panties visible.\n\n\"There you go, honey,\" she responded \"just don't stop, come like a little freight train for me.\" I hardly noticed I had been sitting there rubbing my foreskin with the presence of someone else in the room. \n\nAs Caitlin appeared to be building towards another crescendo, she looked at me again and said \"hold me.\" Pushing the controls aside I sat face to face with her and tried to maximize the body contact. I wrapped my arms around her waist and held onto her lovingly.\n\n\"NO! Hold me like this,\" she said as she reached around behind me took my hands into hers and placed them right overtop her breasts. \"Just squeeze and pinch,\" she remarked, \"none of that cute stuff.\"\n\nAnd after that statement she appeared to drift off into another state of climatic bliss. Her body became tense and rigid; she thrust her self into my hands. Rather than just a light tremble, her legs began to spasm and she gripped onto the machine and then against my back.\n\nHer speech was limited to a \"ugh... yes... yes... YES YES YES\", this time around as her orgasm seemed to last a lot longer as she slowly removed her nails from my back.\n\nShe again seemed to enter a bit of a refractory period again as she let out a deep breath and a smile. As the machine continued to work at the same pace, she used her finger to signal me to stand up in front of her. Once, I did I found my boxer-briefs at my knees and my penis in one hand, and my testicles in the other.\n\nWhile normally deliberate and meticulous in her actions. She moved with an almost animalistic fury about her work. Using her left hands to alternatively cup my balls and rub up underneath of them, her other hand steadied the base of my penis as she brought her mouth over the head and shaft.\n\n\"Oh god, that's hot,\" I heard from the back of the room. Clearly it was Anne. Looking over my shoulder I could see her as she proudly had her fingers beneath her panties and was rapidly moving them back and forth.\n\n\"You can come closer and watch, if you want,\" my fianc\u00e9e offered. This was something not even I expected. As Anna obliged and sat down just a few feet away, my mind began to drift off to fantasies of a threesome with Anna and Caitlin. I was quickly brought back to reality by the incredible things Caitlin was doing for me.\n\nFor about two minutes, I received the best blowjob I ever had in my life. That is, until the waves of pleasure started to possess Caitlin's body again. As her back arched, and what were once light moans turned to grunt's, her attention to me certainly faded. \n\nHer breathing became quick and swallow, I was beginning to sense the wave of orgasms that was about to overtake her. She fumbled awkwardly with my dick in her hand. She had a start stop motion; almost as if she would pause to reflect in her own pleasure, forget about the task at hand and resume it, and then repeat the whole process just a second later.\n\nBecause of her earlier performance, I was already close to the edge when her difficulty began, pushing me to a point of frustration. At her pleasure built, she continued having more and more difficulties bringing me to the edge. \n\nEventually she just uttered \"Cum on my tits, just do it yourself... I'm so close, cum on my tits.\" Somewhere in the back of my mind I interpreted this boldness as being a means to cover up her difficulties, and the fact she was so focused on her self. Meanwhile, the front of mind didn't care a bit. This was an opportunity I had never had, and to hear Caitlin talk like that sent tingles up my spine. \n\nAs she cupped her breasts I took my cock in my own hand. After no more than ten full strokes I could feel the familiar tightness build as I shot stream after stream of warm cum onto her chest. More importantly, as the final drops leaked from my dick, I sense that Caitlin was about to get off in an even bigger way.\n\nStill basking in the warm afterglow of my own orgasm, I positioned myself behind Caitlin and took her breasts into my hand gently kneading and tugging at them, my hands massaging my still warm cum into her skin. I was able to reach over to the control module and shift both the knobs to about 3/4 strength, a considerable increase in the strength of the vibration.\n\nReaching across her smooth pubic area I felt for the top of her vagina, taking a lip on each of my fingers I spread her vagina as wide as my fingers would allow. This exposed her clit and wetness. Taking my free hand, I pushed her body forward, somewhere in-between her straddling the machine and a doggy style position. This had the effect of placing her clit directly on the vibrating pad.\n\nUpon contact, she squealed and a shudder went through her body. With the slightest hip adjustment she seemed adjusted to the faster vibrations. With her bent over in such a vulnerable position, I could see her pink little ass. For a second, I considered stimulating it, but figured it wasn't worth the chance of ruining this situation.\n\nGrowing anxious, Caitlin started to become a little more agitated in her speech and actions.\n\n\"Oh shit, Oh shit.... mmmm..... God it's so good... \"\n\nDuring the lulls in Caitlin's vocal parade I could here the wet sounds of Anne going at herself. Glancing over I could see her neat pubic hair trimmed into a triangle with her panties pulled to the side and her clutching at her breasts through her top. Anne wasn't the focus of my attention, however...\n\nCaitlin was pressing so firmly against the machine, driving the attachment deeper inside her, that the little rubber feet could be heard squeaking against the floor.\n\n\"Come on baby, I want you to cum hard for me,\" I encouraged her.\n\nThen a look washed across her face that looked like a cross between an \"O\"-face and a laugh. I felt her back arch and become rigid. I playfully gave her ass a firm smack\n\n\"Fuuuckk... I am cummin - Ahhhhhhhhhh,\" she belted. And it wasn't your average scream she let out. She would have woken up the neighbors if there were any. It was a high-pitched shrill that told me she was enjoying herself and wasn't afraid to express it. Taking a breast in each hand, she squeezed and pinched as hard as she could and leaned over giving her clit the full vibration. \n\nFor what seemed like the next minute, I experienced the most erotic site of my entire life. Caitlin's eyes nearly bulged from their sockets as she tried to comprehend the feelings sweeping over. Her face was a flushed pale as her mouth shifted between a wide open face of pleasure and gritting her teeth as she pushed against the machine. Her hair was disheveled as it was tossed back and forth. \n\nHer breasts and nipples were red from their stretching, as she tried to stimulate every last nerve end. The vinyl of the machine was covered in a combination of her sweat and wetness as she rode it into oblivion. From my vantage point I could see as her the lips of her vagina and pink ass clenched down as the throes of passion went through her. Her legs trembled as she held them tightly to the side of the Sybian, trying to anchor herself in place. \n\nMeanwhile, she emitted noises that sounded like stuttering moans and little yelps as she lost control of her own buddy. Random cuss words and sexual innuendo flew from her mouth. And so for two minutes, wave after wave shook her body, each one seeming to hit harder and somewhere deeper within. \n\nThen, almost as quick as the chain of events began, her body slowly began limp. The intense vibrations were too much for her overly sensitive clit and she quickly removed herself from the machine. Still almost too exhausted to move, she sat there and straddled behind the still moving attachment.\n\nI came over and took her in my arms, picking her up and gently and laid her down on the mats beneath us. I gave her a kiss on the cheek. I laid beside as her chest heaved up and down in still heavy breathing. From the corner of my eye I could notice Anne adjusting her clothes back into place.\n\n\"So guys, same time next week?\" she said with a chuckle.\n\nStill exhausted on the floor, Caitlin nodded and her head and cracked a little smile. \"Sounds good, she said, but I was thinking more like tomorrow.\" "
    ],
    "authorname": "LanceSapikowski",
    "tags": [
        "sybian",
        "masturbation",
        "vibrator",
        "therapist",
        "toys",
        "fucking machines"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/riders-wanted"
}