{
    "title": "Surefoot 01: Ch. 05",
    "pages": [
        "USS Surefoot, Deck 5, Brig:\n\n\"Not very palatial in here, is it?\"\n\nGiles had been lying in his bunk in the brig, staring at the blank wall opposite. Now, at the sight of Captain Hrelle standing on the other side of the force field door, he rose to attention.\n\n\"At ease.\" As Giles relaxed a little, Hrelle nodded to the Security Officer at the brig control panel nearby, who turned off the energy screen long enough to allow the Captain to step inside. \"Leave the screen down and go get yourself a coffee, Mr Gorman.\"\n\nThe crewman, a fresh-faced, ginger-haired Terran not much older than the cadet he was now supervising, blanched. \"Sir? Um, the prisoner-\"\n\n\"He's formidable, I know, but I think I can handle him. I'll call you when I want you back.\" As the crewman nodded and departed, Hrelle examined the stark interior, trying the retractable sink and toilet. \"I don't think this brig was ever used. The ship was built sixty years ago, originally named the USS Martin Fettman and did mostly planetary surveys, but I think you might actually be the first occupant in here.\" As he stared, his nose picked up the fact that Giles still wore the clothes he'd wet after his accident at the party. The boy was probably too proud to ask for replacements.\n\nGiles flinched. \"Sir, I- I wanted to apologise for my remarks, both in the cargo bay and then later. They were offensive and uncalled for.\"\n\n\"Yes, they were,\" Hrelle agreed, facing the boy, his own hands clasped behind his back as if mirroring him. \"You do realise how seriously Starfleet takes racist attitudes, in light of the nature of the Federation and the role we play within it? Now, admittedly I've let some people make jokes about Caitians over the years, but those people have been family and close friends - and you're definitely neither of those. As for the remarks about my time with the Bel-Zon-\"\n\n\"Sir, I didn't mean to-\"\n\n\"Of course you did, and the fact that you did it twice, the second time knowing full well that your Captain and First Officer could hear you, strikes you as being immature, reckless, stupid, or a combination of all three.\"\n\nGiles was sweating now. \"Sir, with all due respect, I said I was sorry-\"\n\n\"Apologies do not automatically earn forgiveness. Hasn't anyone taught you that? Apologies are not the end of a matter, but the beginning. Especially when it seems like you've only apologised because you've been confronted with what you've done.\" He paused, watching the boy begin to tremble. \"I've spoken with Commander T'Varik. It is her recommendation that you be returned to the Starfleet Academy Annex, removed from the Program and have the Article 89 Violation a permanent mark on your record.\n\nOf course, your family's combined influence may overturn all that; it happens, despite efforts by Starfleet to maintain a meritocracy...\" He looked at Giles. \"Do you like that?\"\n\n\"Sir?\"\n\n\"Do you like going through life knowing that your family will pull you out of whatever trouble you get yourself into, that your connections will get you what you want, without honestly earning it yourself? Because you don't seem the type. You seem more like a decent young man who takes pride in his own achievements.\" He paused and asked. \"Am I right?\"\n\nGiles swallowed, looking as if he was afraid he was being tricked in some way. But then he nodded slightly and replied, \"Yes, Sir. I am.\"\n\nHrelle's eyes narrowed. \"Then I have a deal to offer you. I will persuade my First Officer to drop the charges and start over.\"\n\nThe boy frowned. \"You'd- You'd do that? Why?\"\n\n\"T'Varik asked the same question. She doesn't believe it's logical to give you a second chance - or in this case, a third, since she was never a fan of the Naughty Step. Fortunately for you, I have been called many things in my life, but logical was rarely one of them.\"\n\nNow he was confused. \"But you- you hate my family.\"\n\nThe Caitian's expression furrowed. \"Hate? I wouldn't say that. I mean, yes, your grandfather Jeffrey took an instant dislike to me when I was your age at the Academy, without ever telling me why. And he had your father and your uncles and aunts bully me during my time there. And your older brother accused me of treason and then harassed my child. And then you repeatedly insulted me.\" He smirked. \"Well, I'm sure you have some distant second cousin somewhere I might almost like. But I'm not here about them, I'm here about you. Are you interested?\"\n\nNow it was Giles' turn to frown. \"What do I have to do?\"\n\n\"You have to look, and you have to listen.\"\n\n\"Look? Listen? To what?\"\n\n\"You have to look at me. You have to listen to my story. Not what you might have heard from your family, or the sensationalist media channels. My story.\"\n\nThe boy blinked. \"And that's it? That's all I have to do?\"\n\nHrelle's gaze darkened. \"It may not be as easy as you think. Sit down.\"\n\nHe did, his hands gripping the side of the bunk. Then he tensed as he watched Hrelle undress, running his fingertip along the fastener to the back of his uniform. \"Um, Sir... what are you doing?\"\n\nHrelle grunted. \"Relax, Giles, nothing inappropriate is going to happen between us; you're definitely not my type. You're not going to get to see all of your Commanding Officer. Just enough.\" He slid his uniform off his shoulders, removed his arms from the sleeves and let the material drape over the lower half of his body like a makeshift apron, before straightening up. \"My people are casual about nudity; we do wear fur, after all. In fact, if you visit Cait on the hottest months, you'll see most of us running around with nothing on but belts. But lately, I've grown... reluctant to disrobe in front of others.\"\n\nGiles looked at him, and paled, eyes wide and yet focused. Hrelle had seen that look before, on older, more professional people who had examined him. He understood it. The thin coating of fur on his upper body was threadbare where there were scars.\n\nAnd there were scars everywhere: his chest, abdomen, biceps, forearms -- and when he turned around, he displayed the ones on his shoulders, and back, the scars all of many sizes and shapes, scars from cuts and scars from burns.\n\n\"They extend all over me,\" Hrelle informed him. \"The worst is around the base of my spine, where my tail had been cut off and the wound crudely cauterised.\" He slipped back into his uniform quickly. \"I trust I don't have to show that much?\"\n\nThe boy shook his head; he looked like he was going to faint.\n\nOnce he was dressed again, Hrelle moved to the place on the wall where the retractable sink was hidden, drew it out, and filled up a paper cup with water from the tap, handing it to him. Then he tugged at his uniform. \"The older uniform design was much better; I am going to miss the jackets and trousers.\"\n\nGiles sat there, holding the cup by his fingertips as if it was hot, unable to look up.\n\nHrelle walked over and sat down on the bunk beside the boy. \"Not very pretty, am I? I used to be considered quite attractive when I was your age.\"\n\nThey went silent. Hrelle looked around, wondering if it would hurt to put in some colours in these cells. Beige was so soul-destroying.\n\nEnough delays... \"Seven years ago, I left my family in the middle of Sasha's tenth birthday and flew off in the Furyk in response to a distress call from a research station on Banaris IX; ours was the only ship in the area at the time. Along the way, we found what appeared to be the wreckage of a starship. Within the wreckage were spatial charges, disrupting our engines and shields. We tried to call for help, but local subspace was being jammed.\n\nThen the ships came, launching aceton assimilators that attached themselves to the hull, draining our power, including life support, even from our hand phasers, and converting it all into hard radiation directed back at us. I was on the bridge, trying to move the crew to the centre of the ship, as far from the radiation bursts as possible, urging them to pick up blades, improvised clubs, anything to help repel boarders.\n\nBut boarders weren't coming...\"\n\n*\n\nSeven Years Ago, Banaris Sector:\n\nHrelle's eyes and ears filled with an orange-yellow transporter beam, and he could feel himself being pulled out of his chair on the bridge of the Furyk. It was unexpected, but he knew he would be ready for it.\n\nUntil he found himself materialising in mid-air.\n\nHis eyes adjusted quickly enough to realise he was some three metres above the ground, panic making him flail about for a moment as gravity reasserted itself and dragged him down. But he recovered enough to twist about - memories of bad cat jokes about always landing on his feet returning - and draw his limbs and tail into himself, protecting his head and neck at the expense of-\n\nIt was like a spike was driven through his right foot as he struck and rolled on a cold, hard metal floor. He cried out, but unfurled his arms and legs in an effort to rise and face their attackers-\n\nScreams filled the thin, cool air.\n\nBodies were hitting the floor around him.\n\nIt was dark, dark enough to make even his senses strain, but he knew who was here: his First Officer Labine, Communications Officer O'Reilly, Navigator Shekrev, Tactical Officer Ellerton, Science Officer Rabin.\n\nBut there were others, too: strange scents, heavy boots, rapid approach. He started to call out, \"Ellerton, there's eight of them, three near you-\"\n\nAn electric jolt shot through Hrelle, sending him sprawling backwards. He heard more jolts around him, more cries from his crew. Hrelle fought with his numbed, trembling body, but he couldn't move, couldn't speak, could do nothing but listen. And scent the attackers: human, maybe Terrans, Klingons, Yridians, Orions, Nausicaans... this was no foreign power, but some terrorist or criminal organisation. But there had been no recent reports from Starfleet Intelligence about this threat...\n\nA male spoke first, the accent definitely Terran. \"What's this one?\"\n\nA pause, then someone else replied with an unknown accent. \"Her name's Rabin. Abigail Rabin-\"\n\n\"I want her position, not her name.\"\n\n\"Oh... Science Officer.\"\n\n\"We don't need her.\"\n\nAn energy blast. A Klingon disruptor, set on maximum.\n\nNo.\n\n\"And this one?\"\n\n\"Tactical Officer.\"\n\n\"Take him along.\"\n\n\"And this one?\"\n\n\"Navigator.\"\n\n\"We don't need him.\"\n\nMother's Cubs, no- no, please-\n\nAnother disruptor blast.\n\nHrelle struggled to rise, to speak, to plead, to distract them from their work. He had to stop them! He had to do something!\n\n\"And this pretty thing?\"\n\n\"Mmm... Communications Officer.\"\n\nA pause. \"Take her along.\"\n\n\"And him?\"\n\n\"He's dead, whoever he is. Neck's broken.\"\n\nLabine.\n\nA strangled gasp escaped Hrelle. Labine... Seven Hells, Labine was getting married later this year. And Rabin just had a child. And Shekrev was planning on returning to Andor and running his own iceship business.\n\nHe was staring upwards, and the attackers had to step around him for him to see: a slim, pale-skinned Terran male with a bald head, ashen beard and a sober black suit; a tall, burly Klingon male with a disruptor in hand; and an unknown sentient, a tall, gaunt, pale-skinned, white-haired humanoid with pronounced bulges on the side of its skull.\n\nThe Unknown sentient tilted its head. \"This one is-\"\n\nThe Terran regarded Hrelle. \"No need. I know who he is and what he is. Take him along.\"\n\n*\n\n\"They spared you,\" Giles noted, clearly distraught but unable to resist wanting to hear more.\n\n\"And my Tactical and Communication Officers. We had the information they needed about Salem Four's security systems, to steal the trilithium being stored there - though they never told me that at the time.\" Hrelle wouldn't take his gaze from the cell wall opposite. \"The rest of the crew weren't... useful to them.\" He leaned back. He had told the story, many times before, in debriefings and during his court martial. It should grow easier with each new retelling. It didn't. \"I never saw Ellerton or O'Reilly again.\" He averted his eyes. \"I like to hope that they didn't suffer too much, for too long. But that was a slim hope at best...\"\n\n*\n\n\"There is no such thing as a harmless setting on an energy weapon,\" his Academy arms instructor, a squat but formidable-looking Rigellian, once taught him. \"Even the lowest setting of one of our phasers causes cellular and neural disruption. And multiple bursts over a short period of time accumulate, and can end up being as lethal as a point blank Klingon disruptor blast.\"\n\nShe was right. Hrelle had been hit when he first arrived among his captors. He had been hit again when they began stripping him, and he used his claws to open the carotid artery of some fool who got too close and too careless. He awoke hours later in a cell, naked... and the tips of his fingers bleeding after they had forcibly removed his claws. Mother's Cubs... to take a Caitian's claws from them like that was...\n\nThe next time a beam hit him was when his captors visited: the Terran, the Klingon and the Unknown sentient. He had pretended to still be groggy, until he attacked. But the Klingon was ready for him with a painstick, and used it liberally. When he woke after that, he was alone again, nursing a tremor that wouldn't leave, and an inability to rise to his feet without getting dizzy.\n\nHe really had to avoid another one of those any time soon.\n\nHis cell was freezing, constantly lit, and the silence was randomly broken by high-pitched sonics that made him howl in pain. He could only measure time by how hungry he was. He was exhausted.\n\nWhen the trio returned, he stayed on the ground, his back against the wall, glaring up at them, trying to gain some clue as to who they were and what they wanted with him. No doubt they would begin his interrogation in earnest; that was fine by him, because he could learn almost as much from their questions as they would from his answers - that is, if he was of a mind to give them any.\n\nFor now, he just had to hold out until help came, and give them only what was expected. \"Name: Esek Hrelle. Rank: Captain. Serial Number: FSN 066-44-7789. Birthdate: Stardate 8479.51.\"\n\nThe Terran nodded at this, then asked genially, \"What's the best restaurant on Salem Four, Captain? I've heard it was the sushi place on the Lower Promenade, but there have also been good reviews of the Tellarite Grill on the Upper Promenade, Section 3. Have you and Hannah and Sasha eaten at either of them?\"\n\nHrelle started, and not just because he mentioned his wife and stepdaughter. What was the point of asking him that, except to possibly put him at ease? If so, it was a wasted effort, after all they've done to his crew and himself. \"Name: Esek Hrelle. Rank: Captain. Serial-\"\n\n\"I read that there was an infestation of leopard spiders in the Operations Centre last year.\" the Terran continued, smiling slightly as Hrelle stopped his rote. \"They would accidentally drop down on people in Security, in Stores, even in the Vaults where the trilithium resin was stored. Can you imagine the look on people's faces when they're going along, doing their jobs or visiting their possessions, and suddenly a spider the size of their hand lands on their heads?\"\n\nHrelle tensed. What was he doing? What was the point of these questions? His teeth clenched and bared, he repeated, \"Name: Esek Hrelle-\"\n\n\"Speaking of which, how many Romulans does it take to clear the trilithium resin from a warp core? Two: one to do the work, the other to kill him and assume the praise.\"\n\nHrelle looked up. He was telling jokes? What the hell was going on?\n\nThen he looked up to see the Terran and the Unknown exchange expressions, before both departed, leaving the Klingon behind.\n\nThen the Klingon was upon him, punching and kicking him...\n\n*\n\n\"That's it?\" Giles asked. \"They just left you to get beat up?\"\n\nHrelle grunted. \"That sounds so... cute: 'beat up'. Funny, it didn't feel so cute at the time. I figured they had changed tactics, from the psychological to the physical, in order to get the information they needed.\"\n\nHe looked at Giles again. \"The problem was... they never came out and asked me anything of importance. Certainly nothing warranting all the death and pain they'd committed to get me there...\"\n\n*\n\nHrelle had never felt such pain. He couldn't move anything without feeling it. Not even just lying there on the cell floor relieved him of it. Some bones were broken, or just fractured; he tried to count them, but couldn't get past a dozen. Even in his tail, which hung limp against his leg after a Nausicaan repeatedly stamped on it.\n\nAnd where he hadn't been broken, he'd been beaten, burned... assaulted in places best left untouched. They had injected him with drugs that made him feel like he was suffocating, and drugs that induced terrible hallucinations. One eye was sealed shut. His lips were cracked; he'd had no food in a long time, though at least his stomach had stopped rumbling, and what little liquids they fed him tasted like they had passed through someone already. If Hannah saw him now...\n\nHannah...\n\nHe would never see her again. He knew this. He would never see her, smell her hair and skin, hold her in his arms, make love with her.\n\nAnd Sasha... he would never see her grow up, become the remarkable young woman he knew she as destined to be. Maybe she would join Starfleet, maybe not, but regardless, she would be amazing at everything she did.\n\nAgony shot through him, as the Terran activated the pain implants they put in places along his spine. He spasmed and howled incoherently, as it felt like spikes were driven into him. Mother's Cubs, he couldn't bear it!\n\nBut he had to. He had no choice. But he did have a chance. He was still alive, which meant that they hadn't broken him yet, they hadn't obtained the information they wanted. He could hold out. He could hold out as long as necessary. There was probably a ship on its way here now to rescue him. Any hour now, he'd be beamed away-\n\n\"You've resisted quite well, Captain,\" the Terran taunted. \"I wonder where your strength lies. It wasn't in your claws, since we removed them. Your fangs? Perhaps we shall remove them next.\"\n\n\"F-F-F-Fuc-\" Hrelle screamed again from another wave of pain, biting down and drawing blood from his tongue and inner cheek, coughing and sputtering, his stomach twisting so hard, wanting to bring up contents that weren't there. His brain was on fire, his eyes veiled with red.\n\nThe pain stopped, but the pounding in his ears continued. Dimly he became aware of the Terran rising and approaching, dropping to one knee, offering a smile that never reflected in his eyes. \"Your tail, perhaps? I understand it helps with your balance, but maybe it's more? Let's see, shall we?\"\n\nNo. NO.\n\nSeveral Nausicaans who had been standing nearby, witnessing the torture, approached, pinning him face down. Hrelle looked up to see the Klingon brandishing a mek'leth, one of his people's shorter blade weapons, and shook his head. \"N-No- No, please, no-\"\n\nThe Terran drew back. \"Make sure someone has a heat beam to cauterise the wound, we don't want him bleeding to death.\"\n\nHrelle felt one of the Nausicaans grabbing his tail and roughly holding it up. He cried out, his cracked, ragged voice even more pitiful. \"No! Please! I'll tell you anything! Anything!\"\n\nThe Terran regarded him now, looking coldly amused now. \"And what do you think we would want from you that we haven't already taken, Captain?\" He leaned in again, as if to make sure Hrelle understood. \"We accomplished that days ago. What we're doing now is for someone else.\n\nA year ago, the Furyk fought and destroyed a smuggler ship owned by the Orion Syndicate. The father of the captain of that ship never forgot what you did, and was wealthy enough to employ us for revenge. He wanted your ship and crew dead - but not you. You are meant to stay alive as long as possible, and to make you suffer for as long as possible. And the Bel-Zon always honour a contract.\" He nodded to the Klingon. \"Do it.\"",
        "Hrelle was screaming, and kept screaming when he felt the blade at the base of his tail, cutting into his flesh...\n\n*\n\nHrelle found himself gripping the sides of Giles' bunk, shaking, and fought to control it.\n\n\"I- I-\" Giles couldn't finish whatever he wanted to say.\n\nHrelle left him at that. He wouldn't know what to say either. Being mutilated by having his claws removed had been bad enough, but to remove a Caitian's tail... he knew it didn't serve a vital purpose, as he had obviously survived all these years without it. But it was still such an significant part of his people's identity...\n\n\"I... I don't understand,\" Giles finally admitted, confused. \"What did they mean, Sir? That they already got what they wanted from you?\"\n\nHrelle breathed out, realising he had tensed up with the memory of that day, as if he was ready to spring from the bunk and run away. \"The third alien that always accompanied the other two, the one I didn't recognise. I learned later that he was an Ullian.\"\n\n\"An... Ullian? I don't know them.\"\n\n\"I'm not surprised, with all the known sentient species out there. They're mnemopaths, able to read not other people's thoughts but their memories. I'm told that they go out into the Galaxy to collect interesting, powerful memories for sharing with their race, and that the majority of their people are peaceful, and would never forcibly extract memories.\n\nThe Ullian who worked for the Bel-Zon, however, was not so ethical, and his methods proved quicker and more efficacious than drugs or assault. The Terran who asked those strange questions about the station, and made the joke, triggered my own memories, allowing the Ullian to reach in and gain the security codes and other information needed to raid Salem Four. I suspect my Tactical and Communications Officer was given the same treatment, and then... killed.\"\n\nGiles looked to him, paled by the realisation. \"There wasn't... You couldn't have helped them. And you couldn't have stopped the Bel-Zon from taking the information.\"\n\nHrelle nodded. \"That was also the finding of the second court martial when I returned.\"\n\n\"But- But why wasn't this made more clear when the findings were released?\"\n\n\"That aspect was deliberately downplayed. There has always been a general unease regarding telepathy within the Federation, and how secure our own thoughts are against those who possess the ability. But the telepathic races we know about - the Vulcans, Betazoids, Melkotians, among others - tend to be regulated by ethics and morality, or at the very least an isolationism from the rest of us. Starfleet didn't want an unwarranted fear of telepaths to spread - or for other organisations like the Bel-Zon to be inspired to exploit them in similar crimes.\"\n\nGiles looked to him. \"You didn't do anything, Sir. You weren't guilty.\"\n\nHe stared ahead breathing out deliberately slowly. \"Oh, but I was guilty. I am guilty.\"\n\n\"What? I don't-\"\n\nHrelle fought to end his trembling, barely able to look at Giles. \"Have you ever felt pain, Giles? I mean, actual, enduring pain?\"\n\nThe young man's face furrowed in thought, though it seemed as if he already had an answer for him. \"Once, when I was in my solar yacht, on a solo voyage. One of the mechanical moorings had jammed, and I was going off-course.\" He opened his right hand in his lap, stared down at it blankly. \"The mechanisms tended to jam because of the constant shifts in temperature between light and shadow, even with the carbon aramid materials used. I needed to free it, quickly, and didn't want to waste time looking for the extension tool. So...\" \n\nHis fingers curled around a memory, making him wince. \"I was stupid. It was so hot... I only held onto it for a few seconds... they repaired the burns fully, of course, but...\"\n\n\"But you still remember the pain.\" Hrelle nodded. \"Now, imagine someone holding down your hand, preventing you from letting go. The pain shoots through you, ongoing, for a minute. Then an hour. A day. Your whole body is protesting, demanding, pleading with you: Do something! Do anything! Just make it stop!\n\nI was... I was at the end of my proverbial tether. I was sobbing. Sobbing like a cub. Begging them not to cut off my tail. All the bravado I had shown when I had first been captured had been brutally, systematically ripped from me. Thoughts of being a hero had fled at Warp Ten. I had been broken. They had imbrutened me, reduced me to the level of an animal driven by self-preservation.\n\nI know that they had taken what they wanted from me without my even knowing it. But... if they had asked me for the security codes for Salem Four then, I would have given them up. I would have betrayed Starfleet, the Federation... my family. Anything. That I didn't actually end up doing that is immaterial to my guilt. And now, every time I look at my lovely, wonderful daughter, a little voice inside me reminds me of how far I would have gone, just to stop the pain.\"\n\nAfter a moment of heavy silence, he continued. \"They let me live, as planned, sold me into slavery, first mining pergium on an asteroid somewhere for the Breen, then onboard a Corvallen ship keeping the theta waste systems clear. And I kept myself alive - not out of any sense of heroism, but only because I didn't deserve the release of a quick death. I needed to suffer, just like they wanted me to suffer.\"\n\nThe cell grew quiet again, until Giles asked, \"You... you don't feel that way now, do you, Sir?\"\n\nHrelle considered his answer before replying. \"No. With time, and the help of counseling, I learned to accept that what happened to me was a dark, terrible chapter in my life. But that's all it was: a chapter. It wasn't my life.\n\nYour brother Matthew attended my last hearing, and there he stated for the record that I was no hero. I agreed with him. I avoided giving interviews or compiling accounts of my so-called heroism. I did nothing heroic; survival is not heroism.\n\nA part of me will never forgive myself for all those who died because of my actions. But that part of me is small now and usually sits in the corner and behaves itself, because the Bel-Zon took too much of me already, it doesn't need any more.\"\n\nHe looked to the boy. \"When I left Salem Four, my wife and I were working towards having a child of our own, a baby brother for Sasha. But as the old saying goes, 'Sometimes the Universe Has Other Plans'. I could be bitter about that. But that would be a waste. \n\nI'm alive, Giles - even if I've lost a lot of years off the back end of it because of what I went through. My daughter lives, and has grown up to be a remarkable young woman, one whom I couldn't be more proud of if you put a phaser to my head.\"\n\nGiles offered a slight smile. \"You... You have... a right to be proud of her, Sir.\"\n\n\"Thank you. And of course, I'm captaining a ship again, the one thing I've always wanted to do. You'll get that chance too someday.\"\n\n\"Sir, why-\" Giles started, frowning, then stopped himself.\n\n\"Go on,\" Hrelle urged. \"At this stage, I think you can ask anything.\"\n\n\"Why- Sir, you can have your tail regrown now, your claws, you can get rid of the scars-\"\n\n\"Yes, I can. So why don't I?\" His gaze narrowed. \"Because that would be too easy, like pressing a button to reset the status quo. I don't want to forget what happened to me. And I don't want others to forget. I don't want them to forget that we live in a Universe where things like this can happen. The slave trafficking network was aided and abetted not only by those who profited from it, but those who refused to believe something terrible like that could exist in their midst. Our lives are mostly good, Giles, as are the people we'll encounter. But we cannot forget what can happen.\"\n\nHrelle rose, walked about the cell, stretching his legs. \"This is a rotten place to spend your first night on your first starship. Get up.\" He faced Giles again as the boy returned to his feet. \"If you still want to leave and find another posting after you've heard my story, I'll persuade Commander T'Varik to make the appropriate arrangements. However, if you decide to stay, we can start fresh, again, and I promise you'll still be on your way to Command. I'll even teach you things you won't read about in your books.\"\n\nHe held out his hand to Giles.\n\nGiles looked to him, and took it.\n\n\"Thank you, Sir. I'd be honoured to stay.\"\n\nThat pleased Hrelle, more than he imagined.\n\n*\n\nAlpha Squad were still awake, sitting in chairs or on the floor of the living area, exhausted from talking about the events of the evening but unwilling to finally go to bed, when the door chime sounded. Startled, Sasha called out, \"Come.\"\n\nEveryone rose to their feet when Hrelle entered, followed by Giles. \"At ease.\"\n\nSasha relaxed, but only a little, unable to take her eyes off of a red-faced Giles even as she addressed the Captain. \"Sir, is everything okay?\"\n\nHrelle put his hands behind his back, adopting an equally formal tone. \"Crewman Hrelle, I am here to let you and Alpha Squad know that as far as this evening's events are concerned, the incident between Mr Arrington and myself has been settled amicably. You and the others are not to question him about what was said, or treat him differently in any way because of it. Is that understood?\"\n\nClearly it wasn't, to judge from her expression, but she went taut and replied, \"Yes, Sir.\"\n\n\"Mr Arrington has agreed to stay onboard the Surefoot for the time being, and will serve in the capacity expected of him. And I expect him to receive the same courtesy you would give to any other member of our crew. Is that understood as well?\"\n\n\"Yes, Sir.\"\n\n\"Good.\" Hrelle nodded, looking at the others - and the glasses of alcohol and snacks strewn about, suddenly feeling nostalgic for his own days when he was their age, a thousand years ago. Then he caught the collective scent of multi-species adolescent body odours, and thought again. \"It's 0130 hours! What the hell are you all doing still awake? You have a shift starting at 0800. Get to bed.\"\n\n\"Yes, Sir, we will.\"\n\nHrelle started to depart, but then stopped and asked, \"Do any of you need a bedtime story? I think I still remember some of the Flotter ones Sasha liked, though she always got scared whenever I told the one about Flotter and the Red Ogre.\"\n\nSasha's face reddened. \"No, Sir. No story is necessary.\"\n\n\"I could do with one, Sir,\" Neraxis confessed, grinning at the look Sasha shot her.\n\nHrelle smirked, nodding to each of them in turn. \"Another time, maybe. Good night, Alpha Squad. And... Welcome aboard.\"\n\nHe departed, feeling much lighter than he expected given the events of the evening.\n\nHe hoped it would last...\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... IMBARRAZZO"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "science fiction",
        "space",
        "federation",
        "caitian",
        "starfleet",
        "fanfic"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-ch-05-show-and-tell"
}