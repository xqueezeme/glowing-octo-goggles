{
    "title": "Slightly, Once Ch. 01",
    "pages": [
        "No worries, we're all 18 in this story. She came to me in a dream, especially the shorts, which in the dream were even more risqu\u00e9, exposing nearly half her delightful cheeks. The vision was pressing her up against the wall and cupping those cheeks in the shorts. Maybe in a later episode. Those shorts would have gotten her tossed out, so I tamed it a little bit. Not that any of this is at all credible.\n\nShe rattled around for a long time in my head, wanting to come out on paper. Well, on the screen, at least. Somehow I keep inventing female characters that I fall completely in love with. Kim is no exception. Straight from a dream, however. I only sort of played basketball in high school, and I only knew one six-foot girl. Enjoy, I hope.\n\n\n\n\nFall registration. Hot August day. My senior year in high school, 1972. Long lines in the gymnasium as we mostly stood around waiting to get our classes. Easier for seniors, and very easy for me, since I'd sacrificed study halls in my first three years to end up with a light schedule my last year.\n\nThen, I saw her. Kim. I had seen her when we were both in summer basketball camp. An even six feet of lithe athleticism, she had been All-State her junior year. I had heard a rumor that her parents had moved into town, and she was transferring to my school. Guess so. There she was.\n\nAnd was she there. Long blonde hair, parted in the middle, falling loosely halfway down her back. Bright blue eyes, a quick smile, and a ready laugh. She was radiant. But today, it was her shorts. Denim cutoffs so short that her cute, firm cheeks peeked out from below. A plaid shirt, sleeves rolled up, completed a look that was together, and sexy without seeming to try.   Sneakers with rolled-down socks made me smile.\n\nShe pinned the Adorable Meter. I had watched her at camp. Quick, graceful, extremely talented, surprisingly tough and aggressive without seeming so, yet unaffected by her stardom. She was nice to everyone, sweet, and always happy-go-lucky. I was too intimidated to even talk to her for two weeks. But she had an underlying, subtle sophistication, a maturity. We had, at that time, what we called \"the cheerleader mentality,\" ultimately responsible for that horrible, shallow comment \"Have a nice day!\" that is spoken all the time now, but never meant. Kim wasn't that, at all. If she wished you well, it was with those deep blue eyes looking right at you. No way would you refuse to comply, and your heart leapt that she would bestow such a blessing. Call it a pleasant intensity. She was a star, as a basketball player, and as a person.\n\nSmitten? Me? I was a nerd before the term was ever applied. A loner, more or less. Quiet. A top student, an average athlete. Painfully shy and insecure. Girls, more or less, terrified me, even as I admired them. Yeah, smitten applied, but fat chance that I would ever even remotely act on it.\n\nShe looked over and saw me. With a squeal she left the line and ran over to me...and almost ran me over. It wasn't so much a hug as it was almost a tackle. Totally unprepared, I almost went over backwards.\n\n\"Dave! I'm so happy to see someone I know,\" she exclaimed, as I tried to keep my balance.\n\n\"You know my name?\" I asked, truly surprised.\n\n\"Of course, silly!\" she said, backing off her hug enough to look in my face. \"I remember you from camp. You have no idea how great it is to know someone here.\" She hugged me again, tight. She bounced up and down a little, bending the needle of the Adorable Meter.\n\n\"Kim, I didn't even talk to you at camp,\" I said. \"How do you even know my name?\"\n\nShe backed off again, and her eyes twinkled as she looked in mine. \"Research,\" she said simply. The smile behind the twinkle was warm. I felt like a stick of butter in 110 degree heat.\n\n\"Can you come home with me for lunch?\" It almost sounded like a plea. \"Please? Mom will be so excited that I met someone I know. And besides, you're so tall!\"\n\nTrue enough. I was 6'6\". But as far as basketball went, I wasn't in her class. I was tall, and solid, but slow, not very quick, and nowhere near as instinctively talented. Nor was I nearly as handsome as she was adorable.\n\n\"Please?\" How did she make her eyes beg, too? And what chance did I have to resist? The needle bent more.\n\n\"I'll meet you by the door when we're through,\" I stammered. At that time, bewilderment was a common state of being for me.\n\n\"Great!\" She even sounded like she meant it.\n\nWe finished registration just before lunchtime, and met up by the door. \"We only live a couple blocks away,\" she said, looking right at me with that smile. \"Let's walk!\" And with that, she took off. I was left to catch up, but watching her incredible, tight rear end peeking out from under those cutoffs, mounted upon the longest, loveliest legs I'd ever seen put me in no real hurry to catch up. And the grace she had on the basketball court translated into a motion as she walked that was mesmerizing. Her body just flowed.\n\nFinally, she noticed, stopped and turned around. \"Are you sneaking a peek at my butt?\" she asked with a wicked smile.\n\n\"Uh, you caught me,\" I said glumly as I walked up to her.\n\nShe stroked the underside of my chin, almost as if I were a puppy. \"I'll just have to take it as a compliment!\" she said, her eyes turning gentle. How did she do that? The needle broke.\n\nLunch was, well, cute. Her dad had taken a new job nearby. Her mom was really nice, asking a lot of questions about the town, stores, restaurants, the school, people. She also gently probed me for who I was, about my family, my school career. She was subtle, and good. I felt completely comfortable and after a while was concerned that I was babbling. Kim was quiet, just watching me, all the time with this little smile on her face. Her eyes curious. How did she do that?\n\nMom excused herself to go grocery shopping. Kim laughed. \"I think she likes you.\"\n\n\"Doesn't she usually like the boys you bring home?\"\n\n\"I wouldn't know,\" she said lightly, \"I never have...before now.\"\n\n\"Then why me?\"\n\n\"Why not? Would you have preferred that I didn't?\" The smile was genuine. She was teasing.\n\n\"No, not at all,\" I said, \"But I just don't understand why.\"\n\n\"Because I know you from camp. Because you're the only person I know in a new place. Because you're tall. Because I want to get to know you.\" \n\nI had no idea how to respond. \"Well, uh, I guess I'll be going,\" I said.\n\n\"Are you good at math?\" she asked.\n\n\"Um, yeah, I guess,\" I said.\n\n\"Will you help me? I'm terrible at it.\"\n\n\"Sure. Anytime.\"\n\n\"And can we play one-on-one? I'd love to have someone big like you who can help me work on my moves.\"\n\n\"You mean, basketball?\"\n\nHer eyes went wide in surprise, and then she laughed a full, throaty laugh, throwing her head back, and hugging me. I was confused. \"Yes, silly. Basketball! What did you think I meant?\" Then it struck her. \"Oh, my!\" she wagged a finger at me. \"Naughty boy! Well, we'll see about the other.\"\n\nI blushed about as deeply as anyone could blush, and hung my head. She looked at me hard. When I met her eyes, I only blushed more. My face was burning up. Her eyes took on a softness, but she was enjoying herself, more, maybe, than just a little bit. \"Dave! I'll take that as a compliment, too. I'm flattered.\" My blush deepened. \"And,\" she said lightly, \"I didn't say No. See you at school!\"\n\nI left, or more should say, floated, out of the house. \n\nThe whole school quickly fell in love with Kim. Always bright and cheerful, she was able to befriend everyone with her open manner, ability to listen, sharp memory, and constant, genuine smile. I saw her daily, and we would chat a little bit. She always had a ready smile and nice things to say. But they never rang false. She was sensitive and perceptive.\n\nShe and I started practicing together, playing mostly one-on-one. It gave her the chance to work on her inside moves and rebounding against someone much bigger. She was good. I worked hard to counter her quickness. She, on the other hand, was creative and inventive. I'm embarrassed to say it, but we were evenly matched. But well, to be honest, it was often hard to concentrate. She was gorgeous even with, and maybe especially with, sweat on her face.\n\nAnd she pulled stuff she'd never pull otherwise. Dribbling, she'd back into me, planting that delicious butt right into my crotch and rubbing it, just a little bit. Just as I was contemplating committing a very personal foul, she would sense my distraction, spin past me and go in for an easy layup. She would laugh at me as she passed me the ball, her eyes just a little wicked. How did she do that?\n\nAll the guys at school fell in love with her that fall. She was always surrounded by the most popular guys in the halls. But as weeks passed, I never heard of anyone actually taking her out which, for one thing, kept her from being universally hated by all the girls for stealing the men. Somehow, she was able to stay in everyone's good graces. Finally, I asked her about dating.\n\n\"No one has asked me out that I'm really interested in,\" she said simply. \"They're nice guys, but...\" She shrugged. The sparkle had left her eyes. That was a first.\n\n\"Does that mean you don't want to go out?\" I asked.\n\n\"No, just that the guy I want to ask me out hasn't yet,\" she replied. \"And to be honest, it's getting pretty annoying.\"\n\nThat's the first time I'd ever heard her say anything even slightly negative. \"You mean there is somebody you'd want to go out with?\"\n\n\"Yup,\" she said simply.\n\n\"Who's that? Maybe I can help?\" I said.\n\nShe just looked at me, unsmiling. The look became a stare. She wouldn't break eye contact. Slowly, an idea formed in my thick brain. She saw it form. That smile crept into her face and those eyes started to twinkle again.\n\n\"Me?\" I asked meekly. \n\nThe smile grew just a little, and she nodded slightly, just once. I panicked. She saw it and laughed out loud.\n\n\"Oh, Dave, I don't bite!\"\n\n\"But why me?\"\n\n\"Because you're sweet. Because I can wear heels if we go out.\" She moved closer; we were almost nose-to-nose. \"Because I'll have to go up on tippy-toes to kiss you!\" She was inches away, her eyes staring straight into mine, with a huge smile. Remember the Adorable Meter? Good thing it was already broken.\n\nNonplussed doesn't cover it. I couldn't even speak. She, on the other hand, was completely enjoying my discomfort.\n\n\"Well?\" she asked, eyebrows raised. There was a long, thick silence while I mustered every bit of courage I could.\n\n\"Uh, Kim,\" I stammered. \"Would you do me the honor of going to the Homecoming dance with me?\" There. I did it! I have no idea how. I'd never been so terrified in my life.\n\nShe clapped and bounced. \"Oh, yes! I'd love to go with you!\" She threw her arms around my shoulders in a big hug. \"I have to go buy a dress!\" She ran away, skipping. Gracefully, long hair bouncing.\n\nI was stunned. I had a date, a real date, with Kim!\n\nHomecoming was two weeks away, and couldn't come soon enough. I had never gone before. I had barely dated before, and they could barely be called dates. Painfully shy. Inexperienced. In every way. \n\nWe made it a weekend, going to the football game together (and making quite a scene \u2013 Kim on a date! I, on the other hand, felt invisible, for which I was grateful). We sat in the stands on a chilly evening, and she held my hand. I thought I might die in bliss. She took my arm as we walked out, and I sensed, just a little, that she was establishing territory, sending a message to the other girls. Not that she needed to. Not that any other girls had designs on me. Not that I wanted to be anywhere else. It was so sweet I almost cried. I took her home and shook her hand at the door. The thought of kissing made my blood run cold. She was graceful enough not to make fun of me, and told me what a great time she'd had.\n\nI had made dinner reservations for before the dance, and arrived to get her at the appointed time with a corsage, tie straight and blazer unbuttoned. Her father met me at the door and let me in. Almost immediately, Kim came down the stairs, and I felt like I'd been punched in the gut \u2013 all the air left me. A spaghetti-strap, pale yellow plain mini-dress clung to her curves in the most delicate way. It exposed a little cleavage \u2013 she didn't have big breasts, but enough to fill out the dress quite nicely, thank you.\n\nEnding what seemed like several feet above her knees, her toned, long legs descended the stairs, slightly shiny with her stockings. White spike heels \u2013 I had expected heels \u2013 put her at about 6'3\". She wore her long blonde hair loose, a simple string of pearls around her neck, with matching bangle earrings. Light makeup took her natural beauty up several notches. I had never seen her eyes so blue. I had never seen her so radiant, and that was saying something.\n\n\"You look amazing,\" I said, gulping. Yes, I actually gulped.\n\nHer smile seemed only for me. \"Thank you,\" she said gently.\n\n\"Here,\" I said, handing her the corsage box. She opened it and gasped. It was a white orchid.\n\n\"Oh, David, it's beautiful! No one has ever given me flowers before!\" There was just a trace of a tear. She held it out to me. \"You have to pin it on!\"\n\nPin it on? On a spaghetti-strap dress? I looked at her, dumbly.\n\n\"Oh look! It has a strap! I can wear it on my wrist!\" She put out her wrist and I put it on her, breathing a sigh of relief that the florist had been so thoughtful.\n\nMom to the rescue, with a huge smile. \"Time to be off, kids! Dinner won't wait.\" She clearly was happy for her. Mom and Dad hugged her. Dad shook my hand and told me to take care of his little girl. \n\nI helped her with her coat. Kim took my arm and led me out the door. Dad called after us to have a good time.\n\nI opened the car door for her, and she got in, immediately moving over to the middle of the bench seat. I stifled my surprise, and went around to get in the driver's side.\n\nKim nestled in against me., hugging my arm. \"You're nervous,\" she said.\n\n\"Truth be told, I'm terrified,\" I replied.\n\n\"Terrified? Why?\"\n\n\"Because you are just so incredibly beautiful, and I'm scared to act like a jerk.\"\n\nShe laughed out loud. \"Nothing you could do would make me think you're a jerk. Not gonna happen.\" She squeezed my arm.\n\n\"Really?\"\n\n\"Tell you what. Can we get something out of the way?\"\n\n\"Sure. What?\"\n\n\"Kiss me.\" She was staring right at me. Unsmiling. Serious.\n\n\"WHAT!\"\n\n\"Kiss me. Let's get our first kiss over with!\"\n\n\"You mean, you want to kiss me?\"\n\n\"One look at the corsage, and you're lucky you didn't get kissed in front of my folks! No one has ever given me flowers before.\" Her eyes misted, just a little.\n\nI just gaped at her. \"I, uh, I've never really kissed a girl before.\"\n\n\"Never?\" She looked surprised. \"Well, no matter. I've never kissed a boy before. So, we might as well get it over with!\" She took my face in both her hands and turned me to her. Our lips met so, so gently. It was brief, but beautiful.\n\n\"Hmm,\" she said, licking her lips. Smiling now. \"Nice, but not enough. This time, let's put a little more into it.\" With that, her lips moved to mine and we pressed them together a bit harder. My hand moved to the back of her head. Her tongue tickled my lips, and my teeth. I opened a little and my tongue met hers, and they danced. I felt electricity coursing through my body. We ended our kiss, and both sighed. She looked at me from inches away. \"More later. I'm hungry.\"\n\nDinner was delightful. Good food and Kim's light conversation. She was excited about the basketball season. Our girls team was already good, and adding Kim made us a state contender.  She thanked me for working out with her, claiming that it was making a difference. I didn't ask her if backing her butt into her female opponents had the same effect on them as it did on me. We didn't drink, but her laugh was intoxicating. I had never had such a pleasant meal. I felt so light that I worried I might float away. We talked about dating. Me: inexperienced. Her: uninterested, but hotly pursued by just about every male in sight. So she hadn't dated, either, focusing instead on a basketball career destined to earn a college scholarship, which was rare at that time for girls I felt completely inadequate, but thrilled to be enjoying her company. She, in turn, seemed to be completely happy.\n\nThe dance was magical. Kim was radiant all night long. Other guys asked her to dance, and she would look at me as if to ask permission. Of course I let her. But she insisted on dancing all the really slow dances with me, putting her arms around my neck and pressing close, nuzzling into my neck. I couldn't help it, and developed an erection each time. I'm sure that she couldn't help but notice, pressed that tightly, but she didn't say anything or make fun of me. Fortunately, the faculty wasn't going around with rulers keeping people apart. I could hide my boner that way, pressed against her. I was glad to be wearing a blazer that also hid my arousal.\n\nIt was late when I drove her home. I parked in the driveway. There was a light on the porch, but the house was dark.\n\n\"My parents have gone to bed,\" she said. \"Good! Can we spend some time here?\" She spun around to face me, tucking her legs under her on the seat, and immediately put her arms around my neck. \"Please kiss me,\" she said, and didn't wait for an answer.\n\nWe necked for the next half hour, enjoying the sweetest of kisses. Then, I escorted her to the front door, and was rewarded with one last, memorable kiss, her body melting into mine.\n\n\"I had a wonderful time with you tonight, Dave,\" she said. \"When can we do this again?\"\n\n\"Really?\"\n\n\"Yes, Dave, really,\" she said, arms around me. \"For one thing, with heels on tonight I don't need to go up on tippy-toes. See?\" She kissed me lightly again. \"We need to go on a more casual date so I can wear sneakers!\" She laughed, and held me tight. I felt light-headed.\n\nWe made a date. And then another. And more. We became a couple. My shyness decreased, a little. She was so easy to be with.\n\nOne night, a few weeks later, while we were characteristically kissing in my car, she pulled back and looked at me. \n\n\"When are you going to touch my breasts?\"\n\nNot that I hadn't thought about it, but I was still intimidated by this beautiful woman, and afraid I'd do something to screw things up. I said as much. She laughed. \"You have been the most wonderful, sweetest gentleman a girl could ever ask for, and I'm deeply grateful that you treat me so well. I love to kiss you, and am grateful that we find so much time to practice it. But could you maybe, please, be a little bit less of a gentleman?\" She smiled, tilting her head in the most fetching manner.\n\nI kissed her again. My hand moved inside her jacket and covered her breast over her shirt, the same plaid one she had worn at registration. Her breast felt so smooth. It was an ample handful, and I squeezed it gently. She sighed and arched her back, moving herself into my hand. She reached and undid a button. Looking at me, she said softly, \"Take the hint.\"\n\nI clumsily unbuttoned the rest of the buttons to where the shirt tucked into her jeans. My hand went inside to find her again, gently caressing the firm flesh. I felt her nipple poking at the fabric of her bra. Her breathing came harder. We kissed, tongues deeply entwined. We broke for a second. \"It clasps in front,\" she breathed. I found the clasp, groped at it, struggled, and finally succeeded in unhooking it. She giggled, but followed the giggle by attacking my tongue with renewed fervor.\n\nA thought crept in. I pulled back. \"Did you wear this shirt and bra on purpose?\"\n\nHer eyes were on fire. How did she do that? \"A girl doesn't kiss and tell.\" She moved in to kiss me.\n\nMy hand moved the fabric away, and I touched the bare skin of my first breast. I cupped it and held it firm, feeling the erect nipple in my palm. I caressed it, squeezed it, felt it all over, wanting to memorize every contour. \"Pinch my nipple,\" she whispered. I took it between my thumb and index finger and squeezed, rolling it. She moaned and pressed into me. I kissed her cheek, her neck, her shoulder, slowly working my way down, completely unsure of what I was doing, but getting what sounded like encouraging sighs and moans from Kim.",
        "I cupped the bottom of her breast, nipple poking out. I softly kissed it, and Kim groaned and pulled my head closer. I took it into my mouth and sucked, and she cried out. I licked her nipple with the tip of my tongue. I swirled my tongue around it, then I sucked it deep again.\n\n\"Oh, that feels so good! Don't stop!\"\n\nI was pleased to obey, continuing my sucking. I took more of her into my mouth. I kissed and licked her entire breast \u2013 the top, the underside. I moved to give equal treatment to the other one.\n\n\"I can't believe how good you make me feel!\" she cried. She pulled my head to her chest, begging for more.\n\nWe continued for a while, but it was early December, and the car was getting chilly. I kissed her lips and gave one last full massage to both her breasts, and then struggled, successful finally, to rebutton her shirt. Kim watched me struggle, amused.\n\n\"Time to go,\" I said.\n\nHer eyes pouted. \"I suppose so,\" she said sadly. \"When can we do this again?\" She asked brightly.\n\n\"Not soon enough. I'll call you.\"\n\n\"OK. Thanks for a wonderful evening of new experiences,\" she said.\n\n\"Thank you, sweet lady,\" I replied, remembering how good she tasted. At the door, she went up on tippy-toes for one last kiss.\n\nChristmas was upon us. I shopped and shopped for the perfect gift. I spent more money than I could afford, but I was completely smitten, and wanted our first Christmas to be special.\n\nWe were on the phone. \"Can you come over Christmas Eve? My parents will be gone until after the midnight service and I want to make you dinner.\"\n\n\"Sure. I'd love to. Can we give presents?\"\n\n\"Yeah. Sounds good. Be here by six?\"\n\n\"A date.\"\n\nI arrived on time, roses and presents in hand. She squealed when she saw the roses, and took them into the kitchen to put them in a vase. Dinner was lovely \u2013 she was a promising cook, valuing fresh ingredients, not easy to find in Midwestern grocery stores in the winter of 1972-73. She wore a simple teal v-necked sweater and jeans, and furry slippers. From her poking nipples I could tell she wore no bra. Her hair was tied back. No makeup that I could discern, but she never really needed any. She was elegant and lovely, as always.\n\nAfter dinner, we settled in on the sofa with tea. She opened my presents \u2013 a necklace, matching earrings, and perfume. She cried. She actually cried. \"Oh, Dave, they're beautiful! Help me put on the necklace!\" She turned, holding it behind her head so I could fasten the clasp. She swapped her earrings for my pair. Then she sampled the perfume, spraying a little on her wrist and taking a light sniff. \"It's lovely,\" she said, tears running down her cheek. \"Will you find it irresistible?\"\n\n\"You don't need perfume to be irresistible,\" I said. She wiped the tears and blew her nose.\n\n\"We have a long evening together ahead of us,\" she said.\n\n\"I want it to be special.\"\n\n\"Me, too. Dave?\" She almost looked uncomfortable.\n\n\"What, Kim?\"\n\n\"Dave, would you be interested in being even less of a gentleman tonight?\" She faced me on the sofa, legs tucked and her head leaning on her hand. Her smile carried mischief. She toyed with the necklace.\n\n\"Uh, what did you have in mind?\" I stuttered. She could still make me nervous at the drop of a word.\n\nI thought I saw just a little disappointment. \"Oh, never mind,\" she said dismissively. She inched closer and kissed me softly. I took her in my arms and responded. We kissed and kissed, tongues getting a happy workout. She was so beautiful.\n\nJust as I was going to move my hand to her breast, her hand came off my neck and slowly started to travel down my chest, to my belt. My breathing almost stopped. Was she doing what I think she was? Her hand continued to travel southward until it came to rest on one very hard cock. She squeezed it gently and began to rub its length through my jeans. I could feel her smiling with my lips as we kissed. For my part, I moaned.\n\n\"I remember the Homecoming dance,\" she whispered in my ear. I could hear the smile. \"All those slow dances pressed up against you, feeling this.\"\n\n\"I'm so embarrassed,\" I said, lowering my gaze.\n\n\"Don't be. I took it as a compliment. I've also taken it as a compliment that as long as we have dated, you've never tried to push your advantage. You have always treated me with so much respect. That means a lot to me.\"\n\n\"Kim, you have come to mean a lot to me. At the same time, you intimidate me, and I'm afraid to screw things up and lose you. It would break my heart.\"\n\n\"It would be completely impossible,\" she said.\n\n\"Thank you for saying that,\" I said.\n\n\"Well, then, now that we have that out of the way, can we pick up where we left off?\" She raised her eyebrows as she looked deeply into my eyes. She was still stroking my rod. Her hand went to my belt, and a little clumsily she loosened it, which caused her to giggle. She unsnapped my pants, and slowly pulled down the zipper. Her eyes started to, well, smolder is the only way I can describe it. She was staring at me while she lowered the zipper. I was just focusing on the feeling, and the incredibly sexy sound my zipper seemed to make.\n\nAdmitting, finally, that I knew where this was going in the short term, I took my hand that wasn't around her, spread my jeans, and pulled down my underwear, exposing my cock to the cool air. Immediately, her hand wrapped around it and I almost came. From basketball, her hands weren't soft, but her fingers were long and thin, and her touch was gentle. She wrapped around me just below the helmet, and firmed her grip just a little. I moaned and slouched a little. Her grip loosened and she began to feel my cock all over \u2013 the head, the length of the shaft, my ball sac. Her light touch of exploration felt so wonderful. We resumed kissing while she explored. I was breathing hard.\n\n\"Tell me what feels good,\" she whispered. \"I've never held one before. I'm not sure what you'd like.\"\n\n\"Mmm,\" I said. It was almost a purr. \"Stroke me full length, grip me firmly below the head and stroke. It all feels good. I've never had anyone do this to me.\"\n\nShe did what I described, stroking my length with long, soft strokes. She gave me short, firm strokes. It was all so incredibly exciting. Being 18, the inevitable came sooner than I would have liked. It was good that she held me vertically, as ropes of sperm jetted almost a foot in the air. She screamed, giggled, and squeezed me.\n\n\"Kim, that was the most incredible thing that's ever happened to me,\" I said.\n\n\"You're welcome,\" she said, eyes bright.\n\n\"Um, well. I'm not quite sure how to ask this, but what, um, can I do for you?\"\n\n\"I thought you'd never ask,\" she said. With that, she stood up, and in one motion pulled the sweater over her head to expose her lovely breasts. She then quickly stripped off her jeans and panties. She ditched the slippers as the jeans came off. She was completely naked. She sat down beside me. The cool air and her arousal had her nipples hard. Her tummy was flat, with little ripples of her abs. I could see her trimmed pubic hair. Her legs were so long, so beautiful.\n\n\"I want to feel your hands and your lips all over me. I want you to caress every inch of my body.\"\n\nStunned, nevertheless I went to work, starting with some deep, deep kissing. My hand roamed to her shoulders and down to her breasts. I fondled them, caressed them, squeezed them. I rubbed her nipples and squeezed them. She moaned and squirmed and kissed me harder.\n\nMy hands worked down to the side of her tummy. She had the most wonderful tummy in the world \u2013 firm, well-muscled, without an inch of jiggle. I tickled her navel. She giggled, and proceeded to plant an incredible kiss on my lips, tongue practically ramming down my throat. Her breathing was rough. My hands moved to her hips, down her thighs.\n\nShe broke our kiss. \"Take off all your clothes and lie here with me. I want to feel your skin against my skin.\"\n\nI stood and took off my shirt while she pulled my pants, already partway down, the rest of the way. I stepped out of my shoes and pants. I was naked except for my socks. Kim lay back on the sofa and beckoned me with her arms. She stole a peek at my cock, which was hard again.\n\nI tucked in, putting an arm under her neck, and held her close. I could feel her soft, cool skin against me. Feel her taut nipples against my chest. She wrapped her top leg around me, and I found my hard cock resting against her stomach. She put her arms around my neck, pulled me even closer, and we resumed some delightful kissing.\n\nI moved a hand to her head, and caressed her. I kissed her jaw line, and tongued her ear. She shivered. \"Look at me,\" she laughed. \"You gave me goose bumps!\"\n\n\"Sorry!\"\n\n\"No,\" she said mischievously, \"I like it.\"\n\nMy hand roamed down her side, stopping to rub her shoulder a little, then to feel the side of her breast, then to feel her waist and where her hip intersected with it. One long stroke took me down the outside of her leg, all the way to her knee, and then back up again. We kept kissing. I spent some time caressing her breast, pinching her nipple, which made her sigh and wriggle against me. She moved her hips, rubbing my cock against her belly. My hand worked down her side again. This time, when I reached her knee, she lifted up her leg, bending it at the knee.\n\nShe looked at me. \"Take the hint,\" she whispered.\n\nI moved my hand to the inside of her thigh behind her knee and, slowly, ever so slowly, brought my hand up, stopping to caress and squeeze the muscle that now stood out with her leg raised. Soon, I was poised very near her pussy, hesitating, not quite sure what to do next. I never had a chance. Without warning, she scootched down, and my hand suddenly cupped her, my fingers between her legs on her outer lips. She sighed.\n\n\"Rub me there, please.\"\n\nI pressed my hand. I rubbed my fingers on her outer lips. I could feel wetness. I stroked her, and she moved her hips against me. We kissed passionately. She worked her tongue deep inside my mouth. I established a rhythm of rubbing, and she rocked harder against me. Her hand came down and gripped my shaft. She started stroking me in the same rhythm as she was rubbing against my hand.\n\n\"Oh, oh, Dave, that feels so good!\"\n\n\"Kim, I can't believe this.\"\n\nMy finger found its way between her lips, and I stuck it in as deeply as I could, pretending that it was a cock fucking her. Her breathing came harder, and she bucked faster.\n\n\"Oh, Dave, that's so good!\"\n\nWe rubbed and stroked. Suddenly, Kim arched her back, pressing my finger even deeper, and she cried out. She bucked and bucked in a hard orgasm. After a minute, she came down.\n\n\"Whew!\" she said, as she looked at me, eyes gentle. \"I've never felt anything like that before!\"\n\n\"I've never done anything like that before,\" I said. \"Did you like it?\"\n\n\"Now that,\" she said, interrupting herself by kissing my nose. \"Is the silliest question I've ever heard.\" She kissed me on the lips, but kept her tongue to herself. Then she kissed my neck, and then my chest, and slowly worked her way down my stomach with a multitude of light, soft kisses. She took my cock in her hand, and softly kissed the tip. Her tongue came out, and she started at the base and licked the entire length. When she got to the top, she took my purple head into her mouth. I felt her tongue on the underside, where, I learned quickly, I was most sensitive. Her cheeks sucked in as she sucked, closing her mouth's flesh, conforming to the shape of my penis. She came off with a pop.\n\n\"I don't really know what to do,\" she said, with a passing concern moving across her face. \"I'm just imagining how it would feel to you, and what would feel good.\"\n\n\"It feels incredible,\" I said.\n\n\"Good! Well, back to it!\" And her mouth engulfed me, taking almost half my length in one swift move. She started to pump me with her mouth, holding the base of my shaft, making sure her tongue had firm contact with my flesh.\n\nShe moved to take me deeper, and I watched my cock slowly disappear into her mouth. She came off and panted. \"I think I know what to do!\" And she dropped down, took my cock all the way, nose tickling my pubic hair. She rose up and came off, and did it again. She set up a rhythm of slowly taking me all the way into her mouth and coming off. She was fucking me with her mouth slowly, intensely, passionately. I couldn't believe how it felt.\n\nAfter a few minutes, she held my head in her mouth, and circled my shaft with her thumb and index finger. With firm pressure, she stroked me with her hand while holding me in her mouth. The feeling was incredible, and it took me over the top, sperm bubbling up from my balls.\n\n\"Kim, I'm going to cum!\" I cried.\n\nShe held firm, and squeezed me tighter with her fingers as she stroked. This time, I arched off the sofa and exploded into her mouth. As I spurted, she continued her stroking, and I felt her tongue caressing me, felt her lips on my shaft, felt myself filling her mouth with jism.\n\nFinally, I finished spurting. Kim came off my cock and licked her lips. She smiled brightly. \"Pretty good with the gag reflex, huh?\"\n\n\"Thank you, Kim\" was all I could muster.\n\n\"Cuddle me,\" she said, nestling into me, and holding me close.\n\nWe must have dozed for a little while. I awoke, happy now, in retrospect, that I was 18. I was hard again. Kim felt me hard against her tummy, and purred.\n\n\"Come here,\" she said, moving a leg under me and pulling me on top of her. I found myself on top of her, between her legs, my dick resting on her stomach. Her arms were around my neck.\n\n\"Make love to me,\" she said, looking deeply into my eyes.\n\n\"Are you sure?\" I said, once again nervous at the drop of a word.\n\nShe looked at me, a tear forming in the corner of her eye, and nodded once.\n\n\"Um, not quite yet,\" I stammered. \"There's something I want to try.\"\n\n\"What's that?\"\n\n\"I'll show you.\" With that, I kissed her, no tongue, and then began to slowly kiss my way down her body. Her neck, shoulders, the tops of her breasts. I spent a long time kissing her nipples, sucking them, biting them ever-so-gently with my teeth.\n\nThen, further down to kiss her magnificent tummy. \"Kim, I'm just trying to imagine, like you before, what would feel good to you,\" I said.\n\nShe purred. \"So far, you're doing just fine. It feels wonderful and you're turning me on so much!\" She put her hands on my head and pulled me back to her tummy.\n\nWith that, I tongued her navel and she wriggled and giggled. \"No fair! I compliment you and you tickle me?\"\n\n\"Sorry. Your belly-button was just too irresistible.\" I resumed kissing, and ran my tongue around her tummy.\n\n\"Umm, that's more like it!\"\n\nI continued slowly, painfully slowly, to work my way down. Finally, I could bury my lips in her fur. I nestled my lips into her pubic hair, and kissed. I spread her legs and put them up on my shoulders as I made one last move down. Her glistening pussy was now right I front of my face. I wrapped my arms around her legs and massaged the tops of her thighs. I kissed and nipped the inside of her legs, and inhaled the scent of her arousal. She started to writhe just a little, as my lips continued to tease her.\n\n\"Please, Dave,\" she said breathlessly. \"Stop torturing me!\" She put her hands on either side of my head and moved me forward. I stuck out my tongue and made contact with her lips. I burrowed my face into her snatch.\n\n\"Aaaaiiiiyeee!\" she screamed. \"Oh, yes, Dave! Oh yes!\" She ground her hips into my face.\n\nI discovered that I really liked oral sex. I set to work licking and nipping her lips. I stuck my tongue out and pretended that it was a penis, thrusting it in and out between her lips, loving the taste. Kim responded to my motions and pulled me closer. I flattened my tongue and licked up, attacking her clit. Kim screamed, arched her back, and covered my face with her moistness as she came hard. \n\n\"Oh, God, Dave, that's so good!\" \n\nI raised my head. \"Would you like more? This is really fun!\" I said.\n\nShe laughed a deep, throaty laugh. \"Don't let me stop you!\"\n\nI resumed eating her out. I kissed her thighs, I licked and sucked and nibbled. I sucked her clit, and was rewarded with another huge orgasm.\n\n\"I don't think I can take much more,\" she moaned.\n\n\"But I don't want to stop!\" I said, and dove to lick her lips again.\n\nShe pulled my head in. \"Then don't!\"\n\nI moved my hands up to cover her breasts, squeezing and pinching her nipples. This caused her to moan and writhe with renewed fervor.\n\n\"Dave! Dave! I'm cummmmming!\" She pressed her pussy into my face and again I was rewarded with a flow of orgasmic juices. My face was soaked, but I didn't care.\n\nShe held out her arms. \"Come here. Hold me.\" I moved up, my torso between her legs, which she wrapped around me, ankles on the backs of my knees. My incredibly hard cock pinned between our tummies.\n\nKim said, \"I need to kiss you!\"\n\n\"I'm a wet mess.\" I replied.\n\n\"I don't care.\" She pulled me to her and her tongue attacked my mouth. We kissed passionately, not breaking for a long time.\n\n\"I never believed I could feel this way!\" Kim exclaimed. \"I feel like I'm on fire! And every time you made me come, I thought the fire would be put out, but instead, it just felt hotter!\" She kissed me deeply again. \n\nShe looked at me deeply. \"Make love to me, Dave. Make me your woman. Complete me.\"\n\nI don't know where my presence of mind came from. Yes I do. Fear. \"Is it safe?\"\n\nHer smile was warm. \"Yes, to make a long story short. It's safe. I shouldn't even bleed, and we won't make a baby.\"\n\n\"Are you sure this is what you want?\" I asked. Still nervous.\n\nHer eyes sparkled. She reached between us and took my shaft, guiding it to her opening. I felt my helmet against the moistness of her lips, parting them just slightly. She scootched and my head was inside, wet and warm. It was a heavenly feeling.\n\nHer arms held me tight. \"Don't make me do all the work.\"\n\nObligingly, I moved forward and my cock penetrated her about half way. I pulled back to where just the head was inside, and moved forward, burying myself a little deeper. Back out, and then back in, all the way, my entire length filling her up. Her legs wrapped up high around my waist, and she moved her hips against me. I responded and we set up a rhythm of slow strokes. We kissed and she was almost an animal, her passion expressing itself with her tongue.\n\nAnd with her hips. I was stroking firmly, but she was giving as good as she was getting. Her breathing started to come hard, and matched her movements. She was fast climbing towards a powerful orgasm. We bucked. I thrust, she thrust back. Our bodies worked together as if we had been doing this all our lives. Our kissed were deep. Our tongues wrestled. We held each other close.\n\nShe broke our kiss. She came. She arched her back and screamed, almost bucking me off the couch. Her body spasmed, and I could feel her pussy as it contracted around my cock, squeezing me tightly with her muscles. I couldn't believe how it felt. She was out of control, writhing in ecstasy as her climax rippled through her. She hugged me tight, and I felt her sobbing.\n\n\"What's wrong?\" I asked, looking down at her.\n\nShe smiled through tears. \"I never expected the first time I made love to be so wonderful, so exciting.\" She kissed me, with a big smack. And she laughed brightly. I looked down at her, long hair disheveled, sweaty. Radiant.\n\nI smiled, happy that I could make this beautiful woman happy. But I was hard as a rock, and truth be told, almost a little uncomfortable being so aroused. \"Thank you. But are we done?\"\n\nHer eyes went all gentle, her arms wrapped around my neck. She shook her head, once, wrapped her legs tighter around my waist, and slowly started to move against my cock.\n\nI matched her movements. We were slow, now. My strokes were long, and I could feel every inch of my cock working in and out of her. We held each other close, and I nuzzled her ear with my nose. I tongued her ear, and she giggled. \"Goosebumps!\" she cried. I smiled and kept on doing it. Her movements became more urgent. Her breathing ragged.",
        "\"You like that,\" I said, smiling. She nodded, once, and picked up her rhythm, her hips rocking against me. She was building towards another climax.\n\nI raised up on straight arms. I looked down to see her elegant body, breasts jiggling slightly with her movements, the washboard ripples of her abs. And I watched my cock move in and out of her as we thrust. I pulled back, and saw just the bottom of my head peek out, then I thrust forward and watched it all disappear inside her. She moaned and tried to pick up the pace.\n\n\"Slow down,\" I whispered. \"Let's do this slowly. Let me feel every stroke in and out of you.\" She purred, and slowed, but it was clear she wanted to go faster. \"Slowly,\" I said. \"Let me fill you and empty you slowly, until I can't hold back. It's sooo sexy to watch us make love! I want to see me move in and out of you. She craned, and watched too.\n\nWe went on that way for what felt like a long time. \"Um, you're right,\" she said as she watched us fuck. \"It turns me on to see you and feel you fill me up. I love the way you feel when you're deep inside me.\" She moved, trying to go faster.\n\nThen, I felt it start to well up from deep in my balls. \"Kim, I'm going to cum soon.\"\n\n\"Tell me,\" she gasped. \"Tell me when so I can come with you.\"\n\n\"Slowly, my lady. Slowly.\" I slowed, which increased the intensity of the feeling. I came down and pulled her close, arms under her shoulders. She put her hands on my ass and tried to pull me in deeper.\n\n\"Deeper! Deeper! Bury that cock inside me,\" she said in my ear.\n\nWe rocked and rocked, and I felt it well up. I was close now, real close. Then, I went over the top and there was no going back. \"Kim,\" I said. \"Now.\" I stuck my tongue deep into her ear, knowing it would drive her over the top, too.\n\nShe cried out and arched again, as I exploded into her, gently pushing as deeply into her as I could and holding myself inside her as I pulsed jet after jet of cum. We came together, we were blinded, we almost passed out. I almost felt like I was out of my body, looking down at myself entwined with a beautiful lady, giving her my seed. Slowly, oh, so slowly, we came down, and held each other tight, cuddling in the afterglow. I was still inside her, going only slightly soft. But there was no motion now. We were spent, and just wanted to be close. I focused on feeling every inch of her body against mine. Of feeling my cock as it went limp, still enjoying the incredible wetness of her insides. I nuzzled her neck, getting a mouthful of long blonde hair. I didn't care. She made little moaning sounds and nuzzled back.\n\nAfter a few minutes, Kim went to clean herself up. She brought me a damp towel to wipe my face and crotch. We put on our clothes and resumed cuddling, not wanting to take a chance of having her folks catch us naked. Her folks found us fast asleep, holding each other tight. We awoke, giggled, and said a sleepy good-night.\n\n\"Come over tomorrow,\" she said, yawning. \"And spend some time with me. I didn't give you your present.\"\n\n\"Beautiful lady, you most certainly gave me the best present I will ever get,\" I said. \"Merry Christmas, Kim.\"\n\n\"Merry Christmas,\" she said, blue eyes full of affection, and another tear. \"Thank you for the best Christmas I will ever have.\"\n\n\"Not if I have anything to say about it.\" \n\nI was rewarded with a tight, body-melting hug.\n\n\n\n\n\nWay too much in love with Kim, Part 2 is already written, and will follow soon. Thanks for reading."
    ],
    "authorname": "Balrog",
    "tags": [
        "shy man"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/slightly-once-ch-01"
}