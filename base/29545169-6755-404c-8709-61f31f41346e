{
    "title": "Mixed Double",
    "pages": [
        "London 1980s\n\nIan\n\nIan Collins had done the prescribed amount of life-drawing on foundation, less at art-school and then later, more regularly in evening classes: mainly because his girlfriend at the time had been the tutor. They had modelled for each other, and he had learned to keep still for extended periods of time, He had crucially also learnt what positions not to try!\n\nCombined with a bottle or three of cheap wine, a joint, and then adventurous sex, it had made for an exciting evening. They had occasionally even produced reasonable drawings.\n\nThe idea of modelling on a more professional basis had intrigued him but he lacked the self-confidence for it to be any more than a titillating fantasy. He remembered all too well the day when on foundation the model hadn't turned up. The tutor had asked for volunteers from the class, and he had come so close to stepping forward. Butterflies had done aerobatics in his stomach; some hidden exhibitionist deep in the dark corners of his libido had risen to the challenge. It hadn't happened though. A geeky girl with glasses who he'd quite fancied from the first week of the course obviously had a more decisive hidden exhibitionist, and had jumped up and volunteered immediately. She had disappeared behind a screen, and appeared a few minutes later, completely naked, and nervously excited, had embarked on a series of awkward poses with a twitchy intensity. This unfortunately had made drawing her a nightmare. The awkward sex they'd had later had also not been a complete success.\n\nHe'd visited strip clubs and like the life-drawing classes, could always spot the nervous new girl, on stage for the first time. Something about that hesitant initial reveal always set his heart racing and he just knew he'd get an even greater adrenaline fix if it were him getting naked instead.\n\nNow, several years later, He was twenty-six. He was single, living in a squat and on the dole. He was always short of money. He was, however in the best physical shape of his life. The benefit system gave him concessionary rates at the local council swimming pool and at various evening classes around London. He swam every day and attended several life-drawing classes in the evenings. He often considered modelling but invariably chickened out, despite the attraction of the money and his nagging desire. He certainly had the opportunity, although his motives he realised were a bit suspect.\n\nVarious people who did do modelling work tried to convince him; London was full of Art-schools they cajoled, he lived within walking distance of all the big art colleges, there was any number of evening classes and small art groups constantly looking for models and it was all 'cash in hand,' unseen by the benefits office. Generous breaks made it not exactly hard work; in many cases, colleges provided showers and separate rooms for their models to change, and the money was good.\n\nHis past girlfriend had been almost fanatically opposed to any idea of sexual overtones polluting her life drawing classes and had watched very carefully any student who she suspected of being there just for titillation, it was, as far as she was concerned a purely artistic pursuit of line and form, that just happened to involve naked human bodies. She would have been appalled and outraged by his secret unfulfilled, exhibitionist fetish. Ian felt thrillingly guilty that he found the idea of being naked in front of a bunch of strangers so exciting and had almost convinced himself that he must be some sort of frustrated flasher. He'd even toyed briefly with the idea of stripping, but to be honest he had nowhere near the self-confidence or indeed the equipment to carry that off. Life modelling, if not quite within his comfort zone, was at least comfortably in his skill set.\n\nIt was time, he concluded, to at least give it a go. So finally, he took the plunge and got himself a booking as a life model for one of the big London art schools.\n\nOn the day, he showered and dressed in his favourite 1930s suit: complete with waistcoat and braces. He'd got it for next to nothing from a charity shop and knew he looked good in it. He continued the theme with a cotton collarless shirt, and black brogues. Over his shoulder he slung an old army bag. He'd wanted to dress stylishly in an attempt to bolster his confidence, even though he realised with mixed feelings, that he wouldn't be dressed at all for most of the day!\n\nHis carefully constructed confidence quickly evaporated however as he found himself, with pounding heart and churning stomach, walking through the imposing entrance of the art-school, and walking up to the reception,\n\n\"Hi! I'm here to model for the art class. Ian Collins.\" He announced timidly to the young woman behind the desk.\n\n\"Portrait, fashion or... nude?\" Her eyes bored into him, and he could sense her assessing him for each in turn.\n\n\"Er, nude.\" Ian gulped, hoping he hadn't blushed.\n\n\"First time?\" She asked, smiling with a look that let him know she'd already guessed his last answer.\n\n\"Er, yeah, I'm a bit nervous...\" Ian stuttered, this time definitely feeling the heat on his cheeks.\n\n\"No, I meant here, it's easy to get lost. The life studio is on the top floor and in the far corner of the building. We can't have people just wandering into the wrong room naked!\"\n\n\"Oh, I see. Of course, thanks.\" He tried to compose himself as she leafed through lists on a clipboard, found his name and handed him a nametag.\n\n\"Just pin that somewhere it can be easily seen. You'll need it to access the rest of the building. The canteen etc.\" She smiled again. Then adding just in case, it hadn't occurred to him.\n\n\"When you get dressed again at the lunch break, obviously\"\n\nIan suspected she was enjoying his discomfort.\n\n\"I might have to pop up later just to check you found the right room!\" She gave him a little wink and Ian wriggled with embarrassment.\n\nHe nervously negotiated the staircases and corridors, entering eventually a large life drawing studio with a tutor and a handful of students. He identified himself to the tutor, painfully aware of the appraisal of the students, who looked frighteningly young, and predominantly female. The tutor indicated a small door to the left, where Ian found a compact shower cubicle and a small changing area, with a table and full-length mirror.\n\nStill totally at a loss to rationalise why exactly this was stirring up such a mix of sensations, he pulled off his black brogues, took off his jacket, waist coat, unhooked the braces and lowered his trousers, shirt and underwear and stood trembling and naked in front of the mirror. He'd seen so many models awash with self-confidence and with genitalia that drew whispered comments of admiration. One male model had been referred to as the fireman, naively Ian had initially believed the reference was to his regular job.\n\nWhat he saw in the mirror now was a confused, terrified little waif.\n\nThe mirror crushed any self-confidence he had tried to conjure up. He wasn't very tall and despite his slim physique, well defined muscles, and flat stomach he just didn't look, well, very masculine. He wasn't bad looking he supposed, but in a slightly androgenous way that made some people assume he was gay. His pale skin had only the faintest trace of the tan he had worked so hard on during the summer, his floppy fair hair needed a haircut, and he had only a few wispy pale strands of hair on his torso apart from the more slightly ginger patch between his legs. His flaccid penis hung straight down pathetically. It was, he told himself optimistically, at least average but, On the plus side, it did seem quite thick and was more impressive when erect. He had heard the turn 'show or grow' and was definitely a grower. Pity he thought, he wasn't going to be able to do any growing today! He toyed with the idea of sliding the foreskin back, giving his penis a little extra length and revealing its crowning glory, a well-defined and sculptural glans, (he wasn't too keen on what he thought were crude slang terms; helmet or bell end). He realised however how exposed it would make him feel and decided against it.\n\nHe contemplated just dressing, making some excuse, and making a run for it.\n\nA knock and a voice at the door made him jump.\n\n\"OK in there?\" The Tutor's voice came through the door, sounding impatient.\n\n\"Just a minute.\" He lowered the tone in his voice and tried to make himself sound decisive.\n\nHe'd almost talked himself out of the whole humiliating idea, but he realised he was finding the imminent prospect of exposing his nakedness to the scrutiny of this art class, being posed at their demand into revealing and vulnerable positions, deliciously intoxicating. Plus, the money would be extremely useful.\n\nHe didn't have a robe to change into, but instead put the long, white cotton, collarless shirt back on. It hung to just above his knees and the crisp fabric was reassuringly comforting. He gave his penis a last-minute tweak, took a deep breath and with heart pounding walked out, trembling into the studio.\n\nIan should have remembered the poor timekeeping of art students, from his own days at college! The room had now filled, and the number of students had grown to nearly two dozen; still mainly female, aged probably between eighteen and twenty-one. Most were busy sharpening pencils and adjusting easels or just lounging about in a manner they imagined suitably Bohemian. Some were setting up a couch: chair, footstool, cushions, various none too clean throws, old curtains, and verminous scraps of cloth on a wooden platform in the nearest corner of the room under the direction of the tutor. The floor of the studio was ingrained with decades of graphite, chalk and charcoal dust and was covered with outlines of model's feet, reference crosses in masking tape and random faded patches of spilled paint. Ian could already feel the soles of his feet getting filthy.\n\nThe students had dragged easels, scraped chairs across the room and stacked drawing boards into the places they hoped would give them the best view, whilst all the time chatting animatedly to each other. The noisy buzz of conversation eased as they spotted Ian's hesitant emergence from the changing room and with his stomach turning somersaults and his cowardly penis, shrinking away into his pubic hair by the second, he turned to the tutor. The tutor raised a hand and those eyes that weren't inspecting almost fibre by fibre Ian's shirt turned to him in expectation.\n\n\"Hopefully, this is all of you?\" The tutor's intolerance of late arrivals was well known.\n\n\"I know most of you haven't done life drawing before and probably some of you are wondering why you have to do it at all!\"\n\nThe Tutor was at pains to explain why he felt life drawing was an important discipline. He did it every year, to each fresh intake of students and by now he knew his speech off by heart.\n\n\"The naked human form is the most challenging subject you will ever face as an artist.\" He began pompously.\n\n\"The human face and body are the first things we learn to recognise, the first things we can distinguish and differentiate, the first things we see and learn to read as infants. Then as we grow older, we become visually lazy. We think we know what we are seeing, and so draw what we know. but we also instinctively recognise the smallest inaccuracy, the tiniest deviation. and so...\" He added with what he hoped was a crowd-pleasing flourish.\n\n\"We need to learn to SEE!\"\n\nSeveral students were eyeing Ian speculatively and he squirmed under their gaze.\n\n\"Stripped of the artifice of clothing, the human body is an extremely complex series of curves and planes that we understand instinctively. Every human being is different, to capture that on paper you are going to have to look, and look again, do not be afraid of spending most of today just looking!\"\n\nIan's squirming intensified.\n\n\"Ian is a professional model, he won't mind your scrutiny. If you need to move in closer, and measure, just remember you might be blocking the view of other students who will also be concentrating on the same area you are measuring...\"\n\nSheer terror coupled with an exquisite sensual pleasure flooded Ian's body. He had no explanation for it. It just seemed like some weird hunger, finally being fed small scraps of sustenance\n\nWith that the tutor moved over to Ian\n\n\"Shall we start?\" He inquired imperiously of Ian, who realised he was finally going to have to remove the last barrier between his naked body and all those searching eyes.\n\nIan took a deep breath, and desperately avoiding looking down unbuttoned his shirt and decisively slid it off his shoulders. The warm air from a fan heater, that had thoughtfully been placed to warm the model's platform, wafted across his lower body gently caressing his pubic hair and he struggled to ignore it.\n\nHe was Naked!\n\nNo Gasps. No laughter. In fact, for Ian's hunger, nothing...Total anti-climax. Ian turned, remembering that at least his ex-girlfriend had said he had a nice bottom. He risked a glance below. His penis was like an attentive puppy, sensing that someone had just thrown a ball and contemplating chasing it... Ian took a deep breath, and exhaled slowly. The puppy just fell asleep.\n\nDeciding against the nasty looking tubular chair with its grubby vinyl seat and backrest, Ian pushed it away. He shunted the accompanying, naff looking footstool underneath with his foot and then arranged a grimy pile of cushions on the couch and started his pose. The pose wasn't particularly difficult or hard to keep. He stretched - draped on his back with his stomach arched over the cushions. With his lower body gratifyingly taut his penis flopped over to one side, where out of his line of sight it started to send conflicting signals of imminent arousal or humiliating retreat.\n\nOne of the biggest fears, pretty much the only one in fact for a male life-model is the dreaded prospect of an erection! Immediately turning the whole situation blatantly sexual and guaranteeing instant notoriety, blacklisting from future modelling work, anywhere, and instant pervert status.\n\nCertain positions and situations are also problematic for the model, causing serious shrinkage, where the penis, bereft of the force of gravity, and neglected of its rightful blood supply, will retreat to a remnant of even its default state. Cold is the worst culprit, causing countless male swimmers on nudist beaches to pause for a quick tweak before leaving the water.\n\nJoanne\n\nMore late students trickled in and the draft from the door opening and closing played subtly across Ian's body in a disconcertingly arousing way.\n\nAfter the first few minutes had passed however, Ian relaxed and retreated into his thoughts, steering well clear of anything that might cause problems, which turned out to be almost everything.\n\nSuddenly the door opened, and a powerful draft of air washed over him. A breathless female voice floated towards him.\n\n\"Sorry I'm a bit late, is this the right room?\"\n\n\"What room were you looking for?\" Ian heard the voice of the tutor sounding confused and slightly annoyed.\n\n\"The life class, I'm booked to...\" she paused, noticing Ian listening intently in naked anguish on the platform.\n\n\"... model, er, for it. I'm Joanne Thompson\" Her voice tailed off.\n\nThe tutor testily announced an impromptu break and Ian rose, hurriedly pulled on his shirt, and turned, jealously curious to inspect the interloper.\n\nThe tutor was consulting a clipboard, whilst a feisty looking, stunningly pretty, bright eyed girl with a boyish, tangle of dishevelled red curls stood uncertainly and nervously in front of him. Every male eye in the room, and quite few female's were turned to her as she confronted the confused tutor.\n\nThe tutor announced in a voice that betrayed his indecision.\n\n\"Apparently we have two models booked for today!\" He conceded with a condescending nod to the annoyingly expectant redhead.\n\nThey both approached Ian and the tutor explained with exasperation:\n\n\"Ian, apparently there's been a bit of a mix up. Joanne says she was booked and obviously so were you. We do get double bookings occasionally, but this one is a little different.\"\n\n\"I'm not sure of the legalities, but I think there are some college guidelines or regulations that say we're not supposed to have a male and female model together in the same room, er... nude. It's a bit of a grey area, but to be safe we need have the consent of both the whole class and the models concerned if we want to go ahead. Of course, if Joanne wishes to reschedule, I'm sure we could arrange some compensatory payment for today's cancelled booking?\"\n\nThe tutor looked almost pleadingly at Joanne, who paused, looked uncertain and then came to a decision.\n\n\"I'd prefer to stay,\" she said quietly. There was a sense in her tone that suggested that it had taken all her courage to build herself up for this moment and that if she backed away now, she probably wouldn't return.\n\nThe tutor looked trapped and with a small shrug of resignation, reluctantly put the idea to the class who, agog at this new development, all consented eagerly. He hesitated and with obvious trepidation, turned to Joanne and Ian.\n\n\"Well, the students seem ok with it, so just to be sure, do you consent?\"\n\nJoanne looked Ian up and down, he gave a little nod and a relieved smile played across her lips and looking straight into his eyes she said decisively.\n\n\"Yes, I'm Ok with it. I consent.\"\n\n\"Yeah, fine by me, yes, er, I consent.\" Ian smiled wanly at the newcomer, intrigued, but inwardly a little peeved that she had diluted his long-awaited moment.\n\nThe tutor indicated the changing room and with a rustle of her voluminous skirts and a determined toss of her head Joanne bounced over to the door.\n\nJoanne closed the door behind her and as it clicked shut waves of panic flooded over her. She stood in front of the mirror and took deep breaths, whilst with trembling fingers she slipped off her jacket, skirts and top. She had deliberately selected the ridiculously expensive panties. They had been a reward to herself for finally plucking up the courage to approach the college for modelling work a week earlier. They were, she now realised irrelevant.\n\nShe had spent much of the summer sitting and subtly practising poses on the beach and slowly winding herself up into a fervour as she fantasized about the prospect of modelling. She had even tried a few poses out, naked in the privacy of her bedroom at home whilst watching TV. Even that had been horribly nerve wracking, and the practice was quickly dropped after her near heart attack when her father had knocked on the door! The idea had practically reached the level of obsession by the time she had boarded the train up to London, nervously entered the art school and approached the person in charge of booking the models.\n\nShe had been told by her friend in London that the colleges quite often booked over a month in advance. She might not get a day at once and that it might not be for a couple of months. Joanne was quite relieved, she wanted to take this slowly.\n\nShe had therefore been terrified when the college told her she could do a day in a week's time. Impetuously she had made the booking and it had taken three glasses of sparkling wine in a local wine bar to calm the shaking. The panties had been a mad wanton extravagance, a celebration of her wicked naughtiness and completely out of her normal comfort zone.\n\nHow quickly that week had passed.\n\nAs she stood in the changing room dressed now only in the panties, she forlornly thought how incongruous they looked. She realised they didn't even cover her untanned areas! The stray strands of bright orange pubic hair escaping out the sides were just so wrong. I look like an orangutan at a fetish party, she thought, smiling to herself weakly at this exaggerated image, desperately trying to cheer herself up.",
        "As she reached to lower them, her thoughts turned to the other model, Ian? He was cute and from what she had seen, he had quite a nice little cock. He's probably been doing this for years and has a gaggle of pretty, silly, girlie art students with a crush on him she thought petulantly as she peeled off the panties and surveyed the reflection of her sorry sparse little bush.\n\nAnd now they were all going to see her naked!\n\nA long five minutes passed slowly as everyone waited expectantly, and just as the tutor's patience was about to run out Joanne peered nervously round the door, and she emerged in a faded kimono style dressing gown. She paused, and then decisively marched over to the tutor.\n\nHe indicated the chair which Ian had banished to five feet to the left of his platform, and she walked over to it, and after stopping to consider it for a second, fished out the small footstool from underneath. She shrugged out of the gown with a nervous wriggle, and then with a flourish of bravado threw it over to where Ian's shirt lay. With her back still to Ian she leaned slightly to move the chair closer to the platform and slid onto it, placing one bent leg onto the footstool, and resting her arm on the knee.\n\nIan had done a quick survey of the new model and was quite impressed. Joanne had a pale golden tan with well-defined tan lines that indicated time spent on a sunny beach rather than sunbed. The natural skin tone was delicately pale and the whole effect gave the illusion that she was wearing a surprisingly modest bikini.\n\nIan removed his shirt and positioned himself back on the couch, changing his position slightly so he could peripherally watch the newcomer, savouring the brief view of her beautifully rounded, white creamy bottom, before it flattened unflatteringly on the vinyl seat of the chair.\n\nThat's going to stick! he thought wickedly as she wriggled to try and reposition herself.\n\nHe tried not to dwell on the pale soft, well-rounded breast with its small pink nipple and pale areola that was only partially visible to him and focused instead on an altogether less arousing paint mark on the wall just beyond her.\n\nIt was an uninspiring pair of poses.\n\nForty-five minutes later the Tutor announced the break and Joanne peeled herself uncomfortably off the chair with an obvious degree of distaste, whilst Ian rolled languidly off the sofa. They both stood, stretched and, as they moved to their clothes, found themselves facing each other. Desperately trying not to appear overly interested in each other's bodies they timidly grabbed for their respective robes.\n\n.\n\nThey acknowledged each other briefly, and self-consciously, all but ignoring each other for the duration of the short break, and then got into the next series of poses; a cliched series of short poses set up by the tutor.\n\nFinishing a particularly unimaginative ten-minute pose, they again threw on their respective robes and with a fifteen-minute break in hand they independently set off round the room.\n\nAfter a quick circuit of the easels and drawing boards with their apprehensive owners standing to one side, they both returned to the couch and primly sitting a couple of feet apart, legs pressed together, turned, and shyly inquired in the same breath.\n\n\"Done this before?\"\n\nIan replied, \"Only for an old girlfriend a few times!\"\n\n\"Same here, but only girlfriends!\" Joanne lied\n\n\"It makes me feel... quite odd.\" She admitted, suddenly vulnerable\n\n\"Me too\" Ian mumbled\"\n\nVery few boys had ever seen her naked before she confessed\n\n\"I don't even have the courage to sunbathe topless\"\n\n\"I had noticed!\" he teased, and she blushed\n\n\"Nervous?\" He tentatively asked.\n\n\"Scared shitless, but also quite excited!\" She let slip\n\nHe choked and, in the end, mumbled a pitiful\n\n\"Yeah, me too\"\n\nHe did try to explain, expand on the reasons he had suddenly decided to model but the words just tumbled out in the wrong order.\n\nShe put her finger to her lip, smiled comfortingly and staring straight into his eyes, quietly said.\n\n\"Me too!\"\n\nAfter a pause, they both relaxed a bit, chatted about this new experience, what the rest of the day might entail and what it felt like to see yourself drawn from so many different angles and with such varying degrees of ability.\n\nThe walk round the students' work had been revealing, the students had seemed quite intimidated to have the naked subject of their hour-long scrutiny stand next to them and see exactly what they had been focused on! Some had tried to capture both models and had either run off the side of the paper or only managed sketchy indistinct figures forming an altogether unsatisfactory composition. In many drawings the whole pose looked as though it were two separate drawings. A few had zoomed in on either Ian's or Joanne's nether regions; Ian had been slightly taken aback by a flattering depiction of his penis, painstakingly detailed in red cont\u00e9 crayon. The artist had been absent at the time and Ian was intrigued to find out which one was responsible. Joanne was mortified to find her wispy pubic hair had featured in several drawings. The artists had guessed a little too accurately as to what lay beneath! A few of the students had hurriedly put fresh paper on their boards or simply turned them face down.\n\n\"God they're so young|!\" Joanne exclaimed, although to Ian she didn't look a hell of a lot older than them.\n\n\"They seem more scared of us than we are of them!\" He observed\n\n\"Load of virgins!\" Ian had heard the tutor's speech and knew this was the first time these students had done life-drawing. He realised suddenly Joanne didn't realise this.\n\n\"I bet I can tell which ones!\" Joanne answered unexpectedly after studying them.\n\n\"Can you write me a list later?\" Ian surprised himself by saying.\n\n\"You're BAD!\" She reached over and with an embarrassingly impetuous familiarity slapped his thigh lightly.\n\nIan blushed and was quietly relieved when the break ended, and the class resumed.\n\nUnited by the novelty of the situation and with the beginnings of a sense of camaraderie they both smiled quietly at each other and stripped off in unison as the class resumed.\n\nSlowly they relaxed and with the absence of any purposeful guidance from the tutor they were left to make up their own poses. They moved closer together, instinctively realising that was what the students wanted. They took notice of what the other was doing and tried to complement it with their own poses. They were starting to work as a team.\n\nThe next break saw them much more relaxed, and they both admitted they were enjoying it.\n\n\"That was brilliant that thing you did with your legs, brave too, you were kind of out there for a while!\" Joanne complemented Ian.\n\n\"Out there?\" queried Ian.\n\n\"You know, your, er, cock sticking up!\" Joanne was a straight talker Ian realised.\n\n\"Oh, I hadn't realised, I liked quite a few of your poses too, specially the one...\" Ian started.\n\n\"Yeah, I think know the one you mean! I didn't intend to have my legs quite so far apart, but the cushion slipped!\"\n\n\"I hadn't noticed.\" Ian lied and she gave a cheeky laugh of disbelief.\n\nWith a back-to-back series of short fifteen minutes poses taking them up to the lunch break and with a growing sense of empowerment and a slowly burgeoning confidence Joanne and Ian placed themselves into poses, which as they slowly edged closer, became more coordinated, and increasingly more intimate.\n\nWithout any preconceived notions of what might be considered inappropriate they also started to outbid each other in a race to find increasingly convoluted poses that on one occasion caused them both to collapse into a fit of giggles. By the end of the session, they had become totally in tune with each other and were forming compositions which the students were finding increasingly inspiring to draw. Their naked bodies were actually touching on occasions, which made the already flustered tutor extremely nervous.\n\nThey did make a good pair. Joanne was a few inches shorter than Ian and had an extrovert and almost boyish energy. Ian complemented this with a slightly more introverted and almost feminine grace and their build, age and colouring coupled with their intuitive sense of form gave the session a natural vibrancy.\n\nAs they broke for lunch, the tutor, by now desperate to regain some semblance of control, approached them. The students were producing much better drawings. The two models were working well together and the whole class had been imbued with a creative chemistry that he had never felt in any of his life drawing classes before. Some of the positions had sailed a little near the knuckle but the rules were fuzzy and weren't they all supposed to be open minded artists! With an eye to complaints and to loopholes in the rules, he walked over to Ian and Joanne.\n\n\"This afternoon I want to try something different.\" He said.\n\n\"I want you to do a series of poses that that are like the storyboard of a film; short ten-minute poses, frozen moments in a sequence.\" He paused.\n\n\"If you could wear an item of clothing that you consider uniquely masculine and uniquely feminine?\" he added, turning to Ian and Joanne in turn.\n\nThey nodded and as he walked away Joanne turned to Ian and said mischievously.\n\n\"You'd think he would have spotted the difference by now!\"\n\nThey got dressed and spent lunch together in the canteen. It now felt odd to be fully clothed! A couple of students approached their table and said how much they had enjoyed the class and one commented on how interesting it was to have a couple modelling.\n\n\"You obviously know each other so well!\" She'd commented.\n\nThey looked at each other trying to read each other's thoughts and then spontaneously burst out laughing to the total confusion and embarrassment of the student who scuttled back to her table.\n\nThey chatted naturally about themselves. Both had been to Art school; Ian was a tad piqued to discover Joanne had achieved a marginally better degree. Her parents lived in a small coastal town and yes, she had spent much of the summer on the beach, reading. There was a local nudist beach, but she was much too shy to go there and was even uncomfortable with people she might know seeing her in her bikini. She was currently sleeping on a friend's sofa in London and desperately needed ready cash. She also had found the prospect of modelling, \"A bit naughty,\" and she confessed, \"a bit of a turn on.\" She felt more secure trying it for the first time in the anonymity of London.\n\nThey tentatively explored the thrill it gave them both, but the subject became slightly uncomfortable, and it was quietly dropped.\n\nBy now they had plenty of opportunity to study each other naked from every angle and at very close quarters. There was the one pose in which Ian had turned his head to unexpectedly find his eyes on the same level with Joanne's wispy patch of fine orange pubic hair a mere eighteen inches away. That had etched itself into his memory. The beautifully sculptured dome of her porcelain white pubic mound, delicately threaded with curly orange strands and that barely obscured vertical slit had almost caused an unthinkable reaction.\n\nHe also remembered how her gorgeously delicate strawberry-coloured nipples had stiffened so quickly when they had accidentality swung against him as they were setting up a pose and, of course, that magic moment, when, with the class dispersing, she had innocently bent to pick up her gown in front of him and her legs had briefly opened to present him with a fleeting flash of succulent pink.\n\nFor her part Joanne remembered how she had smiled and looked up as he had climbed to perch above her and she had momentarily caught her arm with his penis, the way it slowly started to swell at the contact and the panic in his eyes. She particularly savoured the pose where, with her hand lying across the seat behind him she been able to subtly trace the contours of his buttocks, with her fingers, unseen by the class.\n\nAn efficient team they might well be, but they were also rivals, gently teasing and flirting with each other naked in the thrillingly risky arena of a crowded art class full of exploring eyes. Daring each other to take that step too far.\n\nIt was strange for them both now, sitting fully clothed, relaxed, comfortable and yet with this barely acknowledged private bond, eating lunch surrounded by people who had so shortly before seen them both completely naked and in quite revealing positions.\n\nThe Afternoon\n\nThey climbed up to the studio and were slightly alarmed to see the class had grown considerably. Students from other years including a coterie of what Ian assumed to be postgraduates had obviously heard about the unprecedented 'mixed double' class. Some wag had coined the phrase and it had spread exponentially down through the floors of the college.\n\nIan and Joanne disappeared into the changing room and chose the required item of clothing. Ian had agonised over his choice and in the end, Joanne had insisted he wear his waistcoat, which made Ian feel slightly ridiculous.\n\n\"The waistcoat just looks silly on its own!\" he complained\n\n\"No sillier than you do without it!\" She teased and then without thinking hooked her forefinger under his drooping penis and flipped it up playfully. Ian was completely taken aback at her casual familiarity, and he hurriedly struggled into the shirt. She handed him the waistcoat.\n\nTurning away she decided on her garment and when he looked, she had slipped quietly into a pair of the smallest silk panties Ian had ever seen. With their miniscule front and tiny back still revealing acres of untanned skin, these panties were a record of the receding tide of Joanne's inhibitions and the emergence of a scarily assertive new self-confidence. Wonderfully tight, cream coloured silk cupped her front and back, the thin shiny fabric embossed with the crushed pubic hair trapped beneath. The fantastically impractical garment barely covered her pubic mound and did a spectacularly unsuccessful job of preventing errant strands of finely spun orange copper from escaping the sides. She stood in front of him, legs slightly apart as he simply stood and stared, mesmerized.\n\nStill slightly confused, aroused, and still smarting from her earlier action he responded tactlessly:\n\n\"You are going to need a trim!\"\n\nJoanne paused, and gave him a slightly shocked look, that made him curse himself for saying something so crass. With a mischievous grin she reached up under his shirt and, finding his dangling penis, grabbed it. It immediately started to swell in her hand, the foreskin slid back, she glanced down, then grinned noticing the sudden shock on his face and pulled him to the door.\n\n\"Now we're even?\" She asked, with one hand on the handle of the door. He gulped and nodded, and she released his captive member. She then gave him a peck on the cheek and let him settle down before they both re-entered the studio.\n\nIt occurred to both of them that they had inadvertently stumbled on each other's pet insecurity. Joanne agonised over her patchy pubic hair and Ian was worried about his penis. Well Joanne thought, aren't all men? Ian's was so cute and yet grew so splendidly. It dawned on her that Ian didn't see it like that and it wasn't as if she couldn't do something about her pubic hair.\n\nIan had been both conflicted and elated by Joanne's attention to his penis, the comment had dented his pride a little, but he now realised, looking down, she was right, he did look silly. It hadn't seemed to bother her though and the ease with which she had appropriated his penis was quite thrilling.\n\nThe class, which by the time they re-emerged from the changing room, had swelled to over thirty-five, crowded in on the shrinking platform area, with the nearest students barely four feet away, squatting cross legged on the floor with small sketchbooks to avoid blocking the view of the students behind, who in turn sat on stools with small drawing boards to prevent blocking the ring of easels behind them. The atmosphere in the studio buzzed with anticipation. Ian felt like a prize-fighter or gladiator and turned to Joanne, who winked reassuringly, and he felt comfortable again.\n\n\"Showtime!\" She whispered to him in barely concealed exuberance.\n\nAny hope the tutor was harbouring that the item of clothing ploy would slow things down soon evaporated that afternoon. They started posing and within a brief time had completely overshadowed the morning's session. Any last remaining awkwardness had disappeared, and the whole mood had become playfully sensual. By mid-afternoon they were just shamelessly exhibitionist. Almost oblivious to the students, they slid across each other; over each other and under each other, cradled each other and lay draped across each other, or just disappeared into a giggling bundle of entangled limbs.\n\nSlowly they accumulated a patina of charcoal, coloured chalks, and graphite, and shone with sweat; No one had thought to turn the heaters off, despite the increased number of people in the room.\n\nBreaks were ignored, they moved when they wanted with the fluidity of warm honey. Joanne's panties, by now a pale silver from accumulated dust, crept inexorably inward, fulfilling no conceivable purpose other than to accentuate that which they were designed to conceal. Her nipples were like light switches and when she turned to climb to the back of the couch her legs parted to reveal a tightly wrapped silk bulge that caused the clatter of several dropped drawing boards in the front row.\n\nIan's waistcoat had somehow got torn, lost buttons and was covered in dust. The sparring in the changing room had left him totally in awe of Joanne and completely bewitched. For two hours Ian's penis teetered precariously on the brink of no return. For a nerve wracking ten minutes it had throbbed fully erect, deliciously pressed up against Joanne's sweat soaked back. She'd pressed back enthusiastically and then smiled and widened her eyes theatrically when he had to peel it off her when they changed position. He'd managed to quickly hide it from the students and deftly bury it in a cushion whilst Joanne climbed onto his back, flattening herself across him, her pubic hair pressing through and around the suspiciously wet panties and into his buttocks.\n\nNo one had seen his lapse of control he was sure, but the fact she knew and had felt him against her, filled him with an uncontrollable ache.\n\nThe Tutor called the end of the session and Joanne and Ian slowly disentangled themselves and crouched on the floor breathing heavily, hair dishevelled, smeared with the detritus of the studio, and sweat, unsure of what to do next. Both had grown to secretly dread the end of the day arriving and the return to their separate, clothed lives. Neither of them wanted this to end. The class slowly emerged from the spell and started to mill about murmuring excitedly.\n\nThe tutor hurried over and passed them both small, brown envelopes. He thanked them briefly and having fulfilled his obligations, gave them a relieved smile, and shuffled away.\n\nThey stood and looked at each other, neither sure of what to say, and both desperately trying to imagine scenarios in which they could prolong the day.\n\nOne of the late arrival older students cautiously approached the grubby pair of semi naked urchins. She smiled and introduced herself as Amanda, Amanda Smits.\n\n\"Have either of you got anything on later?\" she asked\n\nIan and Joanne looked at each other, burst out laughing and chorused.\n\n\"We haven't had anything on all day!\"\n\nAmanda explained that a small group of the postgraduate students and some professional artists organised an untutored advanced life class which was held in a smaller room downstairs, and would they be interested in modelling for it? She added nervously and intriguingly that as it was a private select group, the college had no responsibility for it and no rules or restrictions were therefore applicable. \"Not that that would seem to bother you two!\" She smilingly added pausing nervously when she realised that had sounded a tad over judgemental.",
        "Ian looked at Joanne. They were both slowly coming down from a riotous afternoon and despite the aching muscles and covering of dirt were desperate for it not to end.\n\n\"Well, I'm definitely up for it\" He paused, suddenly realising how that might be interpreted and hoping that it didn't sound to them like it sounded to him.\n\n\"Oh yes! Me too!\" Answered Joanne who had immediately latched onto Ian's inadvertent innuendo and was hoping to God he would be!\n\nIan smiled at her with obvious relief. He really didn't want to lose her now.\n\n\"Good, that's great, it's room ninety-five, downstairs, along a side corridor. We aim to start around seven, but there'll be people in there from just after six. It's open ended, so stay as long as you like. We have an arrangement with the college caretaker to let us out afterwards. The showers are open here until eight if you want to freshen up.\"\n\nThey retreated to the changing room where Joanne did a quick wipe down with a flannel, dragged a brush through her hair, stripped off her panties, and washed them in the sink, hanging them over the top of the mirror to dry; an act of domesticity that Ian found totally endearing. Naked under her skirts she threw on her t-shirt, threw on her battered leather jacket, and announced decisively.\n\n\"I'll grab a proper shower later, need to do some shopping. See you up here just after six?\"\n\nHe nodded, reluctant to be left alone.\n\nIt was now 5.20pm\n\nShe gave him a peck on the cheek, a curious smile and with a determined look, left the room.\n\nIan showered using the mean soap bar supplied by the College, dried himself as best he could with the hand towel from the rail, took a long lustful look at the dripping panties, resisted the temptation to run his fingers over them and went downstairs.\n\nOutside normal people, clothed people, went about their business and Ian started to imagine he'd dreamt the entire day. He quickly visited a nearby off-license, and with a sizeable proportion of the crumpled notes in his envelope bought a bottle of Champagne, returning to the college as the clock edged toward 6.20pm. He climbed the stairs with a growing dread he would find the panties gone, a note and just an empty changing room and a gloomy deserted studio.\n\nShe was emerging from the shower and was wrapping herself in a large white bath towel as he entered. Her hair had exploded into a wild bouquet of curls and magnified by the water droplets he noticed all the freckles on her face and the wide, oh so bright green eyes.\n\n\"New towel!\" He exclaimed, savouring the smell of her damp freshly showered body.\n\n\"Lots of new things!\" She laughed walking over to a carrier bag from which she produced: a tube of toothpaste, lipstick, two toothbrushes, a bottle of baby oil, and... a razor.\n\n\"You've thought of everything,\" he said, shrugging out of his clothes, grabbing a toothbrush, and squeezing out a thumbnail of toothpaste.\n\nHe looked in the mirror and said quizzically.\n\n\"Do I really need a shave?\" He said confused, as he started brushing his teeth.\n\n\"No, but I did!\" she said triumphantly, and she dropped the towel\n\nHe spluttered as toothpaste went up his nose.\n\nWhat had been partially hidden now was revealed.\n\nThe slit between her legs was as clear as if it had been chiselled across a smooth hill of pure alabaster, rising vertically from between the tanned thighs and ending in a secret little keyhole with a delicious promise of hidden treasure inside.\n\n\"You like it?\" she teased and shifted her weight on to one leg causing a small salmon pink sliver of labia to peek out shyly from between her legs.\n\n.\n\nHis penis sprang rigidly upright, quivering towards her while the toothbrush wobbled ridiculously in his mouth.\n\n\"I'll take that as a YES! she laughed\n\n\"My turn!\"\n\nShe reached forward and splashing baby oil on her hand, slowly slid it down his shaft before returning to the tip. She slid his foreskin exquisitely back to tease the taut maroon head to a point where sensitivity forces pleasure and discomfort to fuse.\n\n\"Did I mention you had a gorgeous bell end?\" She smiled seductively.\n\nFrustratingly she removed her hand from his erect penis, and he spluttered pathetically as she turned away and reached in her bag.\n\n\"Red, White or Black\" she asked presenting him a sealed multi pack of shiny, Lycra rich polyester panties.\n\n\"Red please\" He groaned.\n\n\"Good choice!\" She approved.\n\n\"Wrong size but all they had,\" She continued with a smile.\n\nShe slipped into the panties which, being a size too small fitted like a second skin and still didn't come close to covering the tan line bikini. The white untanned border round the scarlet incongruously reminded Ian of fake snow.\n\nShe laughed when he told her she looked like a Christmas pin up girl.\n\n\"Miss December! I should have got some stockings!\" She joked.\n\n\"Now come on, it's late!\" She immediately took control again.\n\nThey dressed, gathered up their belongings, bundled the still damp silk panties into the carrier bag and hurried downstairs to room ninety-five.\n\nThe Evening\n\nEight students were waiting for them, three men, Amanda, and four other women. Ian realised suddenly that he and Joanne were the youngest in the room.\n\nA small table had been laid out with a bottle of champagne and two glasses. Ian realised that the small room was in fact a photographic studio. A white cloth backdrop hung from a roll high on the wall at the back of the room and curved across the floor. Ian noticed the unlit lights on heavy stands strategically placed around the room, like brooding alien machines out of The War of the Worlds. Ian ticked them off in his head; Backlight, key-light and spotlight; yes, it was a photographic studio!\n\nNo sign of any cameras, or tripods, but unmistakeably the set-up of a professional photo studio.\n\nThe earlier exuberance suddenly ebbed away. Their first day of modelling and they had signed up for what exactly? It was with a growing sense of trepidation that they approached Amanda, who was directing the positioning of lights and dispersal of props.\n\nJoanne looked decidedly uneasy. Ian put an arm around her, but she immediately stiffened. She put voice to the anxiety they both shared.\n\n\"I'm not doing fucking porn!\" she hissed in his ear\n\n\"No. me neither. This isn't right!\" He whispered back, trying to comfort her but now feeling distinctly uncomfortable himself.\n\nWith a sudden jolt Ian remembered the bottle in his shoulder bag and groaned inwardly that it might look like he was part of whatever this was; the fucking label was even the same as the one on the table.\n\nTheir newfound confidence was evaporating by the second, replaced by a growing edginess that threatened to move in between them and shatter their fragile rapport.\n\nAmanda met them and apologised.\n\n\"Sorry if it all looks a bit scary! I keep forgetting this is your first day\"\n\n\"What the fuck is this?\" Blurted Joanne, the tension making her voice brittle and antagonistic.\n\n\"We don't agree to be photographed, No way!\" Ian stormed.\n\n\"It's not what it admittedly, appears to be\" Amanda tried to explain.\n\n\"It's a bloody photographic studio!\" Ian all but shouted, desperate to protect Joanne.\n\n\"Yes, we wanted a good set of lights, they do make it all a bit stagey, but no-one has cameras, and nothing is recorded. It's just drawing, hands making marks, like upstairs. I'm sorry. I just didn't explain it properly. Sue:\"\n\nShe indicated a woman in her thirties, busy stacking a large pile of cushions in the corner of the room,\n\n\"Is going for her doctorate. Jeff:\"\n\nWho, upon hearing his name turned and waved,\n\n\"Is a lecturer at another college, Jenny and Paul are both post-grad students here. The others are all professional artists.\n\n\"And... I am:\"\n\nShe sheepishly admitted.\n\n\"A professor at The Royal College\"\n\nSuddenly a brief, elusive flash of recognition sparked in Ian's head.\n\nHe gave a nod of tentative reassurance to Joanne, who queried the older woman.\n\n\"But why us? This is our first day. Surely you have hundreds of models to choose from?\"\n\nAmanda chose her words carefully.\n\n\"True, but models very quickly become, well, jaded, same old poses etc. After the first few bookings they stick to poses they know they can do without effort, they get a bit lazy, mentally planning shopping lists, trying to remember the name of that actor they recognised on TV last night and dozing off half the time. Honestly, I know I've been there\"\n\nThey looked her up and down with a hint of mild distaste crossing their faces\n\nAmanda read the look.\n\n\"I wasn't always a professor, and I was young, once. So, yes I've done my fair bit of modelling.\" She said not a little miffed.\n\nYeah, back during the war! Joanne thought and smiled to herself smugly.\n\nAmanda turned to Ian.\n\n\"After a few weeks you won't notice that pretty girl in the front row staring at your cock or have to keep taking deep breaths all the time to hold down your imminent erection! In short you will just be bored...\" she paused, \"...Limp!\"\n\nJoanne smirked whilst Ian looked chastened.\n\n\"And Joanne!\" Joanne flinched\n\n\"You'll soon know to avoid opening your legs too wide, your nipples will no longer explode when a good-looking boy draws your breasts! The thrill of being naked in a room full of strangers will evaporate: no more danger of that embarrassing damp patch on the cushion where you've been sitting!\" She concluded with a flourish.\n\nJoanne turned bright red and looked for support from Ian, who went an even brighter red and studied the floor intently. and then put a reassuring arm round her.\n\n\"So, it's because we're new, fresh meat?\" Ian asked instead, looking at Joanne and grimacing.\n\n\"Partly\" Amanda admitted and then elaborated with an explosion of enthusiasm.\n\n\"Yes, you're new, and it's obvious you've never done this before, it's all a bit naughty, arousing even, and you don't know the rules, nobody told you what you can't do. The sheer chemistry you unleashed in that room was inspiring. You're both young, attracted to each other and, Naked! You completely fazed that tutor; you had him squirming, miles outside his comfort zone! Christ! I've been drawing life models for thirty years and I'll admit it also made me a bit...\" She drew a sharp breath, looked pointedly at Joanne, lowered her voice, and whispered.\n\n\"Wet!\"\n\nIan looked at Joanne horrified, almost wanting to cover her ears like a protective brother. Joanne however was merely smirking to herself curiously.\n\nThey had both wriggled and avoided each other's eyes at the mention of a mutual attraction they had not officially acknowledged, flushed warmly with the realization she might be right and tingled pruriently with that addition of the word Naked!\n\n\"Look\" Amanda pulled herself together.\n\n\"What you have in this room is the cream of London's next wave of artistic talent. They've drawn every model in town, screwed a few of them I wouldn't wonder, and your uninhibited naivete blew the cobwebs off their drawing boards\"\n\nIan started to remember where he had come across Amanda Smits's name before. Suddenly it came back to him: A mixed student and tutor show at the Royal College a few years back, dramatic drawings and paintings similar in style to Egon Schiele's erotic nudes. He also remembered the prices! Come to think of it, some of the other faces looked vaguely familiar from exhibition catalogues.\n\n\"Relax, take your time, chat to the others, have a glass of fizz.\" She indicated the table with the bottle of champagne.\n\n\"No rush, start when you want, stop when you want and set your own poses. This is just a drawing class, with no tutor, just serious artists. Have fun! We want you to relax, ignore we are here at all. Just be yourselves or,\"\n\nShe added with a smile.\n\n\"Anyone you want to be!\"\n\n\"There's a small storeroom behind the backdrop where you can change, or just hide from us for a while! There's a bathroom down the corridor. We are the last people on this floor, probably even the whole building, so you won't bump into anyone else\"\n\nIan looked at Joanne and she gave him a nod and they went up to the table and poured themselves two glasses of champagne.\n\nGlasses in hand, Ian steered Joanne 'backstage' and explained what he remembered about Amanda and the others.\n\n\"She does erotic nude drawings and paintings, bloody good ones too from what I remember. I think the others work in a similar style. They seem pretty keen to draw us, are you Ok with that?\" Ian tentatively asked her.\n\n\"Yeah, that's cool. why not? I just didn't want to be photographed. It's been such a fun day; I've felt so naughty!\" She beamed at him.\n\n\"Me too!\" He beamed back.\n\nHe promised her that at the first sign of anything she wasn't happy with they could dress and leave. He also realised the cushion comment had struck a nerve, Joanne was rising to some secret challenge, and he wondered what he'd missed.\n\nThey explored behind the backdrop to find it created a four-foot-wide corridor in front of the wall which had in it an open door into the store cupboard. The bespectacled Jeff gave them a friendly smile as he dragged a white leather chaise longue out of the door, pushing the backdrop to one side as he manoeuvred it out into the centre of the room. He was followed by a flustered looking Paul, weighed down with a teetering pile of cushions buried under a large gold velvet curtain.\n\nThe backdrop swung back into position, and they went into the store cupboard. It was lined down one side with shelving, on which were stacked a bizarre selection of props, fabrics, and bolsters.\n\nJoanne swept a clear space on the shelving, and they dumped their belongings.\n\nJoanne closed the door, stripped down to her panties and stood deep in thought taking mouthfuls of champagne. She threw on the gown, slipping the small bottle of baby oil into the pocket. Ian undressed, leaving on his shirt. He noticed a slight change in her mood and was concerned. \"I think I'm going to keep the panties on for a little while.\" She told him displaying a fragility he hadn't seen before.\n\nShe indicated downwards, \"It's all a bit new, a bit revealing. I feel so exposed\"\n\nIan hugged her \"I'm so sorry, when I said trim earlier, I didn't mean...\"\n\n\"No! It's just I've never shaved it all off before, it was so exciting when I did it, I sort of got the feeling you'd like it but now I'm not quite sure I can face them out there knowing they can see everything so clearly!\"\n\nShe was starting to sound less confident.\n\n\"I know it's not quite the same,'' said Ian but I feel a bit like that about my...\"\n\n\"Bell end?\" She perked up immediately and lifted his shirt to inspect him. His penis started to swell with the attention and again she gently slid the foreskin back and admired it.\n\n\"But It's lovely! Like some ripe juicy exotic fruit, it makes me just want to...\"\n\n\"God, I love it that you've shaved!\" Ian blurted, desperately pushing his shirt back down. He had to stop her before she said something that would reduce him to just a puddle on the floor.\n\n\"I've never seen any girl shaved before. It's, you... just so... perfect.\" His face reddened, \"I couldn't stop thinking about what you'd look like without... I mean about how the feel of... I wanted to touch you, feel your smooth skin and.... it just scrambled my brain and when you touched me, those panties...and... Oh shit,... that comment just tripped off my tongue, I never dreamed you would. Its lovely\"\n\nHe lamely ended his incoherent ramble and flamed bright red.\n\nShe smiled at him and with a deliberation he'd learned to love, kissed him.\n\n\"And why do you think Amanda made those comments about wet cushions you idiot, I was thinking about you and your... exotic fruit and the warm feel of your cock swelling up my back. I guess she must have spotted... a little leakage!\" She confessed matching him for redness.\n\nThey looked at each other with a growing understanding and resolve and drained their Champagne glasses.\n\nSo, let's have some more of the dirty old cow's booze then!\" She said with a more characteristic tone of rebellion.\n\n\"Hang on, I'll just pop to the bathroom.\" He announced suddenly. He fished in the bag and wrapped the white bath towel around his waist under the shirt.\n\n\"I'll be waiting and then, we'll plan our campaign with the aid of champagne!\" Joanne was now back in control.\n\nWhen he came back after a noticeably long time, Joanne was waiting for him.\n\nShe'd obviously been thinking hard about their next moves.\n\n\"We are going to tell a story!\" She had decided, and he listened with admiration as she sketched out her ideas and then threw in a few of his own. He suspected they were both keeping a few surprises back and the idea excited him.\n\n\"Ditch the shirt and keep the towel\" She ordered.\n\nIan did as she said and removed the shirt and stood with only the towel wrapped around him. She folded up the now filthy shirt and placed it on the shelf. She looked him up and down, nodded with satisfaction, reached in her bag, and pulled out a small mirror and applied a deep red layer of lipstick. He watched her, entranced as she pouted in the mirror seductively and fluffed up her hair.\n\n\"Fuck it, let's do this!\" She gripped his arm and led him out of the storeroom.\n\nAs they closed the door, the backdrop suddenly blazed with light and grotesque figures moved in silhouette across it as people moved into position.\n\nThey emerged as if on to a stage, blinded to anything but each other, peering into the rest of the room where a small constellation of battery-operated lights twinkled above unseen drawing boards. In the centre of the room was the chaise longue surrounded by a sea of cushions and the huge gold velvet curtain.\n\nJoanne marched past it all, hand in hand with Ian up to the drinks table, poured two fresh glasses of champagne with a flourish and strode to the chaise longue. They clinked their glasses with melodramatic bravado.\n\n\"Show time, darling!\" she vamped tossing her head back theatrically.\n\nIan was totally enraptured by her heady mix of fragility, vulnerability, and resilient rebelliousness. The setup in the studio, not to mention the champagne had brought out a thrilling spirit of burlesque in her!\n\nJoanne reclined on the chaise longue, resting one arm languidly across the back. With one leg on the floor, she straightened the other along the seat and pulled the tie of the gown to let it gape open. Ian sat down and eased off the towel, draping it modestly into his lap.\n\nHe lifted her leg out of the way and draped it across the back of the seat. Her legs were pulled apart, and the shiny red fabric of her panties stretched tightly across the gap. He then edged sideways towards Joanne and pushed his bottom into the back of the seat.\n\nShe gave him a playful little kick with her heel as way of protest at the manhandling of her leg and he smacked her inner thigh lightly which brought a little squeal and a pout. He leaned towards her, slowly running his hand up her thigh. Joanne stretched to the glass of fizz on the floor and playfully fed him a mouthful.\n\nFor several minutes they remained frozen in this tableau.\n\nAmanda, watching from her easel further back in the room, smiled quietly. she hadn't been sure her ploy would work, but they were responding to her provocation, and she was eager to see how this progressed.\n\nJoanne suddenly withdrew her leg from Ian's back, throwing it over his head, and sitting back upright. Firmly she pushed him back sideways along the chaise longue. She shrugged off the gown which tumbled to the floor at her feet and gave him a long thoughtful look. Suddenly she plunged her head into the towel in his lap and swung her legs back on to the seat, where lying on her front she appeared to doze, whilst Ian ran his fingers down her spine, frustratingly not being able to reach to slide them under the waistband of her panties. They froze again.",
        "The audience, because that is what they had now become, were hushed. Only the sounds of pencils or charcoals scratching on cartridge paper and the little involuntary grunts of people concentrating hard, gave any idea that there were others in the room. Unseen by them, Joanne was slowly nudging the folds in the towel out of the way with her mouth and was nibbling her way inexorably towards Ian's penis which was rising in tremulous anticipation.\n\nSuddenly after what had seemed an eternity to Ian, Joanne flicked her legs to the floor and stood upright facing him. Her nipples were fully erect and lusciously edible: two raspberry red fingers pointing at him firmly out of the ice cream pink areolae. Her breasts swung seductively as she reached down to him. With a lightning flourish, she whipped away the towel. A momentary flicker of total surprise caused her eyes to widen, and she raised them to investigate his. A happy smile of acknowledgement crossed her face, and he winked Conspiratorially.\n\nHe rose from the seat and quickly embraced her to press the hard warm flesh of his erect penis against her lower stomach. They kissed and his hand strayed between her legs, pushing the now damp fabric of her panties into her wet widening slit. Her hands reached for his buttocks and hungry fingers clawed him closer. They stayed frozen as one, for several minutes.\n\nShe pushed him back and sank to her knees in front of him. With surprising strength and determination, she wrenched his legs apart, and inspected with satisfaction his erect penis only inches away from her face. It rose out of pale, freshly shaved skin. Not a single hair marred the soft surface! Only a small speck of blood remained a on the flat smooth flesh. She gently moved aside the stiff penis and pressed her face to the little cut behind it and planted a kiss, sealing it with lipstick and leaving the red print of her lips.\n\nShe turned to reach for the pocket of her gown and pulled out the small bottle of baby oil, squirting it down his abdomen. She closed a hand tightly around his penis and as the oil dribbled down, she scooped it up with her free hand and gently coated him. Slowly she massaged his erection until it quivered and jumped in her hand.\n\nInexorably she slid the foreskin down until it sprang over the ridge of his glans and then further down, exposing the tightly stretched band that joined it to the glossy dark red mushroom above, and the puffy raw flesh that swelled up between them. With only the thin film of oil separating the exquisite movement of her hand from the most sensitive part of his anatomy, Ian's eyes closed, and his body started to sag. Her other hand cupped his balls and gently started to knead them.\n\nIan melted back into the seat and just before the point where he was sure he was going to ejaculate he hastily managed to push her away.\n\nWith a gesture of theatrical annoyance Ian rose, his starkly erect penis and his hairless groin now finally exposed by the bright studio lights, its shiny glans pulsing with desire and with a small tear of precum glistening on its tip. He managed to pull her to her feet, loosen the slippery hand still tightly gripping him and wrest it out of her control. He grabbed the discarded oil bottle, and none too gently spun her around. With a firm arm across her breasts, he pulled her back onto him and squirted a generous quantity of oil down her front. Relaxing his grip, he slowly spread baby oil across her nipples, breasts, and stomach, whilst her hands reached back and her nails bit into his buttocks. She leaned backward into him as his hand crept downwards to reach the waistband of her panties.\n\nThey froze, the only movement being the gentle movement of his fingers stroking just above her waistband, and the unseen pulsing of his penis pressed into her back.\n\nSuddenly he reached down, and his fingers moved eagerly over the surface of her panties. Rubbing the already oil-soaked fabric into her pubic mound he became acutely aware of her swollen outer labia and started eagerly to part them. He lifted the waistband and as his fingers explored under the fabric and between her legs, he started to discover and tease the small fleshy jewels they found there.\n\nWith a manly authority he wasn't sure he could carry off, and hoped she wouldn't take too seriously, he gruffly stage whispered.\n\n\"Right, bitch, you've shown them mine, now let's show them yours!\"\n\nHis hands took each side of her panties' waistband and with a spray of Lycra propelled oil droplets yanked them unceremoniously down to her feet. She stepped out of them, and his hands parted her legs. For long minutes they stood there. Then her head tilted back, and she half turned to kiss him. Her tongue tasted of champagne and as it chased his around his mouth, his fingers slowly peeled apart the butterfly wings of her inner labia and gently caressed the swollen little bean of her clitoris.\n\nHis penis glided unseen up and down the crack between her buttocks with a hungry jealousy of his fingers.\n\nThey sank lower and with each millimetre her legs spread further apart until nothing was left unseen, the spotlight searching out every tiny detail, illuminating every glistening pink layer of her genitalia. his fingers probed the opening of her vagina which had grown impatient waiting for the trickle of baby oil and was slippery with its own alternative.\n\n\"Well, I don't know about you, but I fancy more fizz!\" She suddenly exclaimed, gently removing his hand, and turning with a bright smile to bend and kiss the end of his penis.\n\nShe marched up to the drinks table in a line of little oily footprints, grabbed the bottle by its neck, took a long swig. Pausing only to wipe the back of her hand across her mouth and giving a surprisingly unladylike burp, she passed the bottle to Ian who had meekly followed her lead and as he tilted the bottle back and discovered it empty, petulantly announced.\n\n\"Bugger all left!\"\n\nShe looked around demandingly for Amanda.\n\nThe softer main lights came on and the photo lights slowly faded, the heat from the dimming bulbs shimmering in the air above them. The clock read 9.30pm.\n\nAmanda saw Joanne's look and approached with an uncharacteristic air of humility.\n\nIn a pleading tone she said.\n\n\"Please stay as long as you can. We are totally at your mercy.\" She indicated the piles of drawings spread across the floor. Pencils and charcoal were still racing across paper, unblinking eyes were still boring into Ian and Joanne. \"Anything you want, anything at all... You two are absolutely brilliant and the work being produced is amazing\"\n\n\"Another bottle of fizz would be nice!\" Joanne chipped in.\n\nIan told her about the lunchtime bottle he had stashed in his shoulder bag.\n\n\"Darling! You are a fucking genius! I think I love you!\" She gleefully pronounced and darted off to the store cupboard before Ian's stunned brain could process her words.\n\nThey popped the cork and whilst passing it backwards and forwards, drinking from the neck they wandered, still naked and flushed with arousal, around the room like conquering generals surveying a cowed enemy. As they examined the work scattered about their feet, Ian marvelled at the unbridled arrogance they were displaying, as the artists scattered before their inspection.\n\n\"She's right, these are stunning\" Ian exclaimed\n\n\"God did I really do THAT!\" Joanne briefly dipped back into her shyness\n\n\"I vaguely remember something along those lines\" Ian teased, and then spotting another drawing, added shocked; \"We didn't actually...\"\n\n\"Not yet...\" said Joanne, quietly, leaving him studying her face whilst she stroked his.\n\nA gloriously captured charcoal sketch of his fingers deftly exploring between her legs further fuelled his aching erection and Joanne was entranced by an expertly rendered portrayal of his baby oil covered penis glistening proudly as her fingers tormented it.\n\n\"I want THAT!\" she said decisively. The statement was left hanging ambiguously in the air, but Ian felt his groin's acknowledgement.\n\nEnd game\n\nThey sat at either end of the chaise longue in the subdued light, legs together with their hands on their knees, staring ahead, like Egyptian statues, not moving, not speaking, The Champagne bottle stood between them. The photographic lights warmed, and then blazed in a harsh white light, throwing the scene into a starkly detailed, three-dimensional relief. For several minutes nothing happened, the sound of scratching pencils and scraping charcoal floated around the room.\n\nJoanne's hand crept slowly across to the Champagne bottle, and she snatched it with a triumphant flourish, took a deep swig and placed it back down in the middle but noticeably nearer to her. Ian edged towards her and reached for the bottle and just as his hand touched it, Joanne's snaked out and slapped it. It quickly pulled back, and Joanne turned and stuck her tongue out at him. Ian's hand darted back in and before she could stop him, he had moved it over, taken a swig and placed it over at his end of the couch.\n\nJoanne stretched forward for it, her breasts bouncing first over his right thigh, dropping between his thighs, brushing his penis, and finally rolling over his left thigh. As she wriggled on towards the bottle, he kept moving it tantalisingly out of reach and as he finally placed it on the floor to the side, her legs straightened to push her forward and her bottom lifted onto Ian's lap. With a flourish she stretched to grab the bottle and lifted her head to drink, her buttocks tensing temptingly across Ian's lap as she reached to replace the bottle.\n\nSMACK! The sound cracked like a firecracker in the small room\n\nA vivid scarlet handprint bloomed on the delicate untanned flesh\n\nShe squealed and then defiantly raised and clenched her bottom turning her head to challenge him.\n\nSMACK! A red hand appeared on the other cheek.\n\nShe dropped her head and reached back to rub her bottom.\n\nIan held her arms and rolled her towards him, gently bending forward to kiss each red mark in turn before releasing her arms.\n\nJoanne climbed off onto the floor and kneeled in front of him. Fixing her eyes fiercely on his face, she slowly and firmly spread his thighs, lowered her head, and wrapped her mouth around his penis, pushing down on it with her lips to engulf him. Warmth, pleasure, and an overwhelming feeling of contentment swamped his nervous system as his entire consciousness coalesced into that one small part of his body and floated in the gently eddying currents of saliva washed over it by her tongue.\n\nHe groaned as her tongue circled his glans and his shaft slowly disappeared into her mouth. He pushed forward as she started rhythmically moving her head up and down, his glans pushing against her cheek. Saliva dribbled onto his balls. Unable to endure another second of torment, Ian's frustrated penis finally rebelled against the hours of restraint. It suddenly spasmed, shuddered and with a loud groan of exquisite relief Ian ejaculated. Joanne was swamped with a warm gush of hot cum. She looked up at him and with an astonished, but happy expression, noisily started swallowing the thick creamy liquid.\n\nJoanne lifted her head, drizzling saliva diluted cum warmly down his thigh. Contentedly she smiled at him, a thin string of saliva connecting him to her lips as she moved back and lay looking at him expectantly. Slowly she wiped her hand across her mouth and licked her lips like a contented cat.\n\nShe lifted one leg each side of him and wriggled forward spreading them apart in hungry invitation. He knelt and leaned over her, teasing her nipples with his tongue before moving slowly down her stomach, and circling her belly button. She tensed and arched her back to lift her hips to his mouth. Her legs draped over his shoulders and pulled him in. His tongue explored the soft smooth mound between her legs, probing its wet gash, and teasing the delicately succulent slices of wet labia as they swelled to greet him, unpeeling to embrace his tongue.\n\nSloppily he sucked each of her labia in turn before easing the hood above her clitoris back, vibrating the tip of his tongue against the exposed swollen nub beneath. Joanne moaned and gripped the back of his head, threading her fingers through his hair. She flooded afresh and he tasted the delicately fragrant lemony tang of her wetness. He lapped at it, probing with his fingers deep into her vagina to scoop out more. Desperately she pulled him in harder and started to quiver as he sucked her clitoris between his lips and his fingers began sliding in and out of her vagina with increasing urgency. She juddered, arched, spasmed uncontrollably, gave a shrill cry and clamped her thighs together, trapping Ian's head as wave after wave of slowly diminishing aftershocks vibrated through his crushed ears.\n\nThey slowly disentangled only to recombine in each other's arms. The bright warm glow of Ian's ears echoed the colour around the more intimate areas of Joanne's body.\n\nThey lay exhausted on the floor beneath the Chaise longue.\n\nAfter what seemed like eternity and with the clock reaching 11.30pm, a couple of the artists started to make tentative signs of packing up. Ian's hand reached out to the side and long pale fingers felt for the nearest corner of the velvet curtain. As it reached her Joanne found another corner and the curtain crept over them in a slow tide of shimmering gold.\n\nSmall movements, muffled giggling, and the odd, dreamy sigh from underneath, indicated that the couple had not yet succumbed to sleep.\n\nAmanda crept round stealthily and dimmed the studio lights to the level of an intimate restaurant. She indicated silently that artistic activity should cease and signalled the artists to spread out their work. Moving silently among them she expertly selected two works from each artist including herself and mimed the act of signing them.\n\nThe artists slowly drifted off until Amanda was left alone with the couple under the velvet curtain, which was now moving around, undulating rhythmically, punctuated by moans, groans and sighs that left little doubt over what was happening beneath.\n\nAmanda started sorting through the drawings only to be jolted out of her task by a juddering upheaval of the curtain and a loud animal cry and deep shuddering groan. The day reaches its climax! she thought enviously, and she turned to the table.\n\nAmanda separated the heap of drawings she had selected into two piles and rolled them up into tubes secured with an elastic band. Next to it she placed two small piles of banknotes. she paused, looked at them and frowned. Reaching into her pocket she pulled out a bigger wad of notes, started peeling them off and dealing them out onto the two piles. She counted each pile separately, made a minor adjustment, and rolled a band around each, satisfied they were equal.\n\nShe felt slightly shameful, sordid, and exploitative now, but they would be grateful for the cash. And as she flicked through the drawings, she speculated how those drawings might one day be worth a tidy sum, should Ian and Joanne ever find the courage to show them! Course they would! It certainly would be something to tell their grandchildren... with a quick flash of inspiration she started appending a small note to each of the sixteen drawings adding it and her own signature, beneath the artist's signature:\n\n'For Ian and Joanne, the two most inspiring and natural models I have ever had the pleasure to work with. Many grateful thanks for an incredible evening. Amanda Smits RCA'\n\nShe sat for a long time deep in thought, and on noticing the clock edging past twelve-thirty, reluctantly moved over to the velvet pile, from which came the gentle rhythmic sounds of heavy breathing punctuated by the odd snuffly snore. She tentatively reached out and found a bare shoulder, giving it a gentle shake.\n\n\"Time to go home.\" she said quietly.\n\nJoanne's red hair and sleep rumpled face emerged blinking. She looked around confused and then at Ian and her face lit up with a huge, contented beam. She pulled him close, he grunted and flopped out of her releasing a substantial gush of warm liquid that ran down her thigh and puddled on the cushion beneath her.\n\nShe paused as something crossed her still befuddled thoughts and with a huge grin, she lifted the curtain and the sodden cushion emerged to be pushed decisively in Amanda's direction with an air of presentation.\n\n\"WET!\" She said with a childlike pride and triumph. Amanda conceded the reference with a humble smile.\n\nIan emerged and on seeing Joanne immediately wrapped her in his arms and kissed her.\n\n\"Get dressed you two, and I'll call a taxi.\" Amanda interrupted maternally, adding.\n\n\"Where do you two want to go?\"\n\nJoanne looked intently into Ian's face and gave a slight nod in answer to an unasked question.\n\nIan turned and with a smile said..."
    ],
    "authorname": "LewDaxx",
    "tags": [
        "art school",
        "art model",
        "model",
        "pose",
        "exhibitionist",
        "nude",
        "naked",
        "drawing",
        "life class",
        "british"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/mixed-double"
}