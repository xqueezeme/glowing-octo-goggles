{
    "title": "Learning to Love Myself Ch. 01",
    "pages": [
        "Dear Elain,\n\nWell the birth control pills that Mom insisted I get seem to have done the trick. I've been on them for two cycles now and it really seems to have smoothed out my period. I don't cramp as much either, so that's good. The Doc says he thinks I'll outgrow needing them when I finish puberty, but they're a good thing to have while my body finishes developing. \n\nHe also says that I still need to gain some weight (UGH!). Apparently my body fat is so low that it's interfering with my normal development and menstrual stuff. On top of the counseling they're still making me go to for bulimia... OK, OK, I get the message. At least Dad isn't making eat spoonfuls of peanut butter before going to bed anymore.\n\nWhy do I have to be so ugly? Why is being a teenager so hard? The world may never know. Ah well, enough for today. Good night sweet princess. I hate myself.\n\nElain\n\nPS -- I think my boobs are growing for some reason. I wonder if it's the pills. \n\nThat was how it started. That was when it started.\n\nIt was the twenty-first of June almost sixteen years ago. I know this because that's the date I wrote at the top of the diary entry in purple ink. It was my birthday. I had turned fourteen that day, and life really sucked.\n\nWell, \"sucked\" is a relative term when you don't have any bills, a job, or any real responsibilities other than to get good grades and to not kill yourself. It was the latter I was having a hard time with.\n\nIn retrospect, I think it was just the growing pains that every young girl goes through, but I was just particularly susceptible to the drama of it. Some people make mountains out of mole hills. My strategy was to bring myself so low that they just looked that way.\n\nI was depressed, bulimic, suicidal, an underage smoker, pale, weak, insomniacal, etc., etc. -- all the cheerful things you can do to yourself when you're too antisocial to know people who can get you into real drugs. Fortunately for me I was that kind of antisocial and managed to avoid that particular battle.\n\nYeah, I guess life really did suck back then. Of course with only the slightest amount of perspective, it's easy to see why. It sucked because I made it suck. I made the choices that kept me miserable. Why is that so hard to see when you're in the middle of it?\n\nAnyway, enough of the doom and gloom. You surely didn't start reading this to depress yourself right? I apologize for any dryness or flaccidness you may be experiencing as a result of my psychotic ramblings. The story will improve shortly.\n\nOh, and I guess I should introduce myself. My name is Elain, and I'm much better now.\n\n*****\n\nThings in general are much better now. Of course life isn't perfect, but I can truly say, \"Hi, I'm Elain. I'm 29 years old, and I love myself.\"\n\nThis is your cue to say, \"Hi Elain\" in 12-Step Program style. I can't hear you... ...c'mon say it... ...ahh that's better. Thanks for playing along.\n\nIf you have never been in a Your-Preference-Anonymous support group, or any other kind of support group, let me explain it. I've been in my fair share on the road to digging myself out of the holes I've dug myself into. \n\nThey exist to provide you with a certain amount of accountability, encouragement, and a certain sense of tribal belonging. It's your job to not do what your not supposed to do, and it's their job to look you in the eye make you confess to not doing it. Get it? Then you have cake and Kool-aid.\n\nThese groups never worked for me. They work for a lot of people, but not me. \n\nThe solution for me was not for someone to tell me why I shouldn't or couldn't throw-up all my meals, or take that handful of sleeping pills, or smoke two packs of Lucky Strikes a day. Hell no! That would have involved me making hard choices that I didn't really want to make if I was honest with myself.\n\nWhat did work for me was eventually finding methods to improve my life in ways that made slowly killing myself less attractive. I had to find specific ways to make the choice to live the obvious, logical, and natural choice -- not just the default one. It worked too. I'm still here.\n\nMeanwhile back at the point...so why is that diary entry so important? It's the postscript. That's the day I first noticed my breasts were coming to life. It turned out that in spite of my general ill health, I had an immediate hormonal reaction to the birth control pills. On one hand it smoothed out my menstrual cycle. On the other, it jump-started my breasts. These breasts saved my life.\n\nWithin three months I legitimately filled out an A cup. Five months later I was up to B. Six more found me at C. There seemed to be no stopping them, and you'd think I'd be ecstatic. What I was though, was the same scrawny, ill, pale girl -- with nice ripe breasts. \n\nImagine a bony ribcage with these swollen perky tits on top. I looked like I had implants. It was disgusting and did nothing positive for my self image. However, since my breasts seemed to have an agenda of their own, I decided I'd try to fit them better and see if I could get healthier at the same time. So I made some lifestyle changes.\n\nThe first thing I did was quit smoking when I started my junior year of high school. You see, several things happen when you quit smoking. Notably, you stop poisoning your body. What this means in concrete terms is that your circulation improves because your heart doesn't have to fight for survival every twenty minutes. Your lungs stop taking a beating, and you automatically get healthier.\n\nYou also have to figure out a way to satisfy the oral addiction, which is why a lot of people turn to food and gain a lot of weight. Did I mention I already had weight issues? Yeah, tell me you didn't see this coming.\n\nSo anyway I started nervous compulsive eating, relapsed into my bulimia, and the shit hit the fan. After a brief stay in a clinic and a lot of support from my parents, I got that sorted out and was able to keep things under control. I put on a little weight because I \"needed to\", and my ribs stopped poking out. That little bit of extra weight, increased circulation, and general better health gained me a D cup.\n\nSince I could breath better and I still had a serious complex about gaining weight, I figured I'd try exercising. Exercising is hard -- don't let anyone try to tell you differently. I don't care what the infomercials say. \n\nYou see, several things happen when you start exercising. Notably, your body reconfigures itself for the physical stress. What this means in concrete terms is that your metabolism and hormonal systems adapt to change your physical structure. You also feel better because of all the endorphins you release and the strengthening effect the exercise has on your immune system. Go figure.\n\nSo anyway, exercising... Even though my name comes from the Welsh word for little deer (see no \"e\" on \"Elain\"), I was no good at running or the aerobics that were fashionable at the time. It's hard to run and bounce around when you're carrying D-cup breasts. I did find out that I could swim pretty well though. \n\nSwimming is a great muscle and aerobic workout, and it helped me undo a lot of the damage I'd done to my lungs over the years. I could never have competed because my breasts were too big to be streamlined, but I did enjoy the solitude of the indoor pool, the feeling of the water, and the excellent exercise.\n\nOkay, follow me here. Exercise boosts your metabolism, so I ended up actually eating more but it turned to muscle and my body tightened up unbelievably. You'd have thought I won a Nobel Prize by the way my parents reacted to my new habits. Exercise also boosts your hormonal cycle, and swimming in particular really works your upper body. So in addition to getting healthier and stronger, I got an E cup. No kidding.\n\nThe summer before college I grew a little taller and also really pushed myself at the pool to lean myself down a little. I was still nowhere near a competitive level swimmer, but I was admittedly in fantastic shape. I settled back down to a DD cup, and there I have remained.\n\nSo... let's reflect. I was no longer \"scrawny\" or \"ill\". \"Pale\" I couldn't do anything about. Along with the Welsh name, my heritage showed through in my super pale skin, green eyes, and bright red hair. I don't tan -- I just burn. It's not pretty.\n\nI still had the nice ripe breasts, but they were absolutely huge compared to they way they were when I first started to turn my life around. The fact that they were high-mounts made them look even bigger. If you don't know what I mean, let me explain. Some big breasted girls have low mounted breasts that have a gentle slope to them and sway when they move. Some big breasted girls have high mounted breasts that are more round and jiggle rather than sway. It all has to do with where on your chest your breasts connect. I'm in the high mount camp. It's just the way I'm put together. It gives me a great hourglass figure though, especially in a swimsuit.\n\nI didn't really think of my breasts in a positive way at the time though. I felt freakish and odd. I also felt like I had to be careful what I wore so it didn't look like they were shoved up under my chin all the time. I'm sure that the male side of the species noticed me (or them rather), but I still didn't feel particularly pretty or feminine. I was just focused on the exercise as a way to combat my depression and my eating disorder.\n\nStill if it weren't for the initial growth spurt of these bouncy beauties, I would probably not have had the initiative to turn my life around. Yup, these breasts saved my life.\n\nIronically though, it was the bright red hair that proved to be the next catalyst. It also got me into the first and only fight I've ever been in.\n\n*****\n\nI didn't really have any friends at that point in my life. I'd spent years hating myself, and normal people don't like to be around a person like that. Actually at the time I think I just didn't like people in general, so I never went out of my way to be around anyone who wasn't family. \n\nPoint being, I had never been with a boy. That's it -- period. I'd never been on a date, never been to a dance, never been kissed, certainly never had sex. I had never masturbated either. In fact I never even really thought about sex, because it was a completely foreign concept for me to think of myself in a sexual way. With my curves you would think that it would have been natural, but my head just wasn't in that place.\n\nAnyway, swimming is a great way to get good exercise without having to play on a team or really interact with anyone, so I managed to mostly maintain my solitude during my transformation. Mostly that is. \n\nThat summer before college when I doubled up on my pool time, it was inevitable that I'd cross paths with some people. As it was, the local community college swim teams ran a camp for kids during the day at the same indoor pool I used, and I overlapped some of their staff time. I tried to keep to myself to myself, but people kept trying to talk to me.\n\nI wasn't interested in talking to anyone, so I didn't further any conversation past brief salutations or farewells. I was kind of a mean bitch back then, if you couldn't tell. Anyway, nobody knew my name, but they quickly came up with a nickname for me: \"Moses\". I only ever heard them calling me that behind my back, though. I guessed it was because I kept to myself or because I parted the water widely or something.\n\nOne day though one of the college boys made a mistake and got in my face when I refused to talk to him. In retrospect I know he was just trying to be friendly or pick me up and figured I was playing hard to get. Still, I'm not a friendly kind of girl.\n\n\"C'mon Moses! Why are you so unfriendly? Do I stink or something?\" he said.\n\nIt was the first time any of them had called me that to my face, so I felt obligated to find out what the deal was. \"Moses?\" I asked. \"Why am I Moses?\"\n\n\"Nothing,\" he said. I don't think he meant to say the nickname out loud.\n\n\"'Nothing' doesn't answer the question. Why am I Moses?\"\n\nI guess felt threatened, so he smirked. \"Because we draw inspiration from your mountains!\" he said pointing at my breasts. Then he lowered is finger to point at my crotch, \"And because you have a flaming bush!\"\n\nI could feel myself turning crimson. Red mist began to creep in at the edges of my vision.\n\n\"You really should trim that bush back -- ha, ha -- it's always fuzzing out around the edges of --\"\n\nBut that's all he was able to get out before my right fist caught him in the diaphragm. He had just enough time to suck wind and double over before the left fist caught him under the chin and lifted him backward into the shallow end of the pool.\n\nI'd never hit another person before. It felt good. I was stronger than I would have thought I was. \n\nHis friends helped him out of the pool and revived him with extravagant apologies to my departing back. I guess he was okay. I never saw him again.\n\nThat night as I sat on my bed in my underwear with my left hand swollen and sitting on a ice pack, I saw what he meant. My pubes did fuzz out around the edges of my panties. Imagine my embarrassment. It never really occurred to me that was happening with my swimsuit. You'd think with as damaged as my self image was, I would have had a better sense of body consciousness. That's what occurred to me anyway as I stepped out of my panties in front of the full length mirror on the bedroom door.\n\nI guess I should pay more attention to myself. I shucked off the heavy spandex sports bra I had on, wincing as I had to use my left hand, and looked at myself naked in the mirror. It was as if I was looking at a stranger. There's something seriously wrong with that.\n\n\"You're not who I last remember seeing here,\" I said to that curvy stranger in the mirror. My God, I had changed, and I felt the first inklings of what I would later learn was an acceptance of myself. I wouldn't have admitted it at the time, but I looked damn good.\n\nI dug a hand mirror out of a drawer, opened my legs slightly, and reflected my nether regions in it. I supposed I could trim my pubes a little to save me the embarrassment of showing them off while in my suit.\n\nI kept turning this way and that to catch the light and aim it between my legs. You know I think that was the first time I'd ever really taken a good look at myself down there? I was nineteen years old and felt like I was looking at my pussy for the first time.\n\n*****\n\nI didn't do anything that night, but the following morning found me in the bathroom with the same hand mirror and a pair of scissors. I sat naked on the edge of the tub and carefully slid the scissors into the natural crease between my right inner thigh and beginnings of my mons. What I remember most is how cold the scissors were next to my skin.\n\nBeing very careful not to pinch myself with the blades, I slowly squeezed the handles together and listened as the hair audibly sliced off. The orange curls floated down onto the grey/blue tiles of the bathroom floor. They looked so surreal, and I thought, \"That used to be a part of me. Now it's a vibrant dead thing on the floor. How strange. How strange and liberating.\"\n\nI turned around so my feet were in the tub and did the left side. This time the hair fell into the tub and didn't look so shocking against the white enamel. I used the mirror and also snipped the hair short on my outer lips. I'm right handed, so I had a hard time getting things symmetrical. I kept having to trim a little here and a little there to get everything to match (not that anyone was going to see it, but it was the principle of the thing), and eventually my lips were just barely covered with downy hair. I now looked a bit mismatched between up top and down below, so I went ahead and just trimmed the rest of my pubic hair short.\n\nThere was now a small orange pile of casualties in the tub. I used a hand towel to brush myself off completely and also swept up my first trimmings from the tile and dropped them into the tub with the rest. I planned to wash it all down the drain when I showered so there wouldn't be a collection of pubic hair in the garbage for anybody to find.\n\nExamining myself in the mirror again, I was surprised at how much of a difference it made. I could really see the details of my pussy now. My lips were clearly visible through the sparse hair that remained and seemed to pout outward a little. I looked different...maybe...maybe good...sexy?\n\nI reached down with my free hand and stroked my fingers over my new haircut. It felt a little bristly but not too much. Watching myself in the mirror, I absently caressed myself for a number of minutes, and I just kind of spaced out on how good it felt. Finally I started suddenly and jerked my hand away.\n\nI looked into my reflection's eyes and read shame and embarrassment there. I had just caught myself playing with myself, and was momentarily mortified. I was so repressed it was ridiculous, don't you think?\n\n\"Lighten up girl,\" I told myself. \"You're self-absorbed enough without developing another complex.\"\n\nWith that I climbed into the shower and took my time getting clean. I did take a little conditioner and rub it on my new haircut though, to soften it. The conditioner was cold and very slippery. I rubbed it in really well just to make sure it did some good.\n\n*****\n\nSure enough when I put clean underwear on after my shower my bikini line was free of little red wisps. I looked good, I thought. I finished getting dressed and marveled at how different the fabric felt against my pussy.\n\nThat whole day at my crap summer job it seemed like I was constantly concentrating on it...my pussy that is (I didn't have to concentrate on my crap summer job). My attention kept returning to how it felt when I walked, how it looked in the mirror, how it felt when I touched it, etc., to the point of complete distraction. \n\nBy the time I made it to the pool that evening for a late swimming workout, I had dampened my panties so many times during the day that I really had to peel them off to put my swimsuit on. At first I thought that I was just sweating more due to not having a furry buffer between pussy and panty, but my mons and outer lips weren't the damp part.\n\nTentatively I slid my finger between my moist inner lips and felt the slickness of my continuous arousal. I gave a momentary shudder as the unfamiliar feeling washed over me, and I moaned involuntarily as my fingertips brushed past my clit.\n\nMy moan reverberated a little too loudly in the cement and tile locker room, and I glanced around sharply. I was alone, but I still hurried into my suit and rushed out to the pool.\n\nI had a very good swim. I tried to burn out my confusion and embarrassment with intense physical activity, and pushed myself really hard. I succeeded in exhausting myself and really getting my arms and legs to burn, but I failed miserably at clearing my mind.\n\nAs soon as I was back in the locker room and in the hot shower, I had my hands back between my legs. The showers were deserted thank goodness, because there was no disguising what I was doing. I still clearly remember the steam boiling up around me as I worked both hands between my legs, rubbing my pussy furiously and clumsily with my fingers -- my arms tucked in squeezing my big breasts forward so that the shower drummed on my nipples -- heat upon heat upon heat -- until my knees buckled, and I had to hold onto the wall to keep from passing out.\n\n\"Get a hold of yourself Elain,\" I said aloud, and even smiled at the irony of the statement as I made it. I turned the water on excruciatingly cold (just the far side of \"ridiculously cold\" but not as far as \"insanely cold\") and finished up my shower under the shock of it. I dried off, got dressed, drove home, and tried not to think about my pussy again.",
        "*****\n\nThat night I woke up twice squeezing my damp thighs together and caressing my own nipples. I became convinced that I was going through some kind of new unhealthy phase.\n\n*****\n\n\"What's new this month?\" Dr. Lester said at my healthy-check therapist meeting the next week. I was down to only going once a month to touch base with her about my eating disorder and other unhealthy issues.\n\n\"I think something's wrong with me,\" I told her.\n\n\"Honey, you've been coming to see me for -- what -- over five years now? That's the first time you've ever said that out loud.\"\n\n\"Yeah, well this is something completely different,\" I told her.\n\nDr. Lester looked exactly like you'd expect an old hippy to look, right down to the Grateful Dead tapestries in her office -- which is kind of morbid if you think about all the suicide attempters she counseled -- ancient sandals on her feet and incense in a little Ganesh burner on her coffee table. She leaned in toward me to look over her orange tinted glasses and said, \"Whatcha got babe?\"\n\n\"Well this past week I've been... ...touching myself... ...intimately.\"\n\nIt's in the nature of counseling to do a lot of listening, and Dr. Lester is very good; however, even she broke after two minutes of silence and said, \"And?\"\n\n\"And nothing! I just never have before, and I've done it compulsively a couple of times now.\"\n\n\"Child, it's not encouraged for those of us in professional counseling to offer judgmental opinions on things revealed to us during session, but if I may break with the rules just this once?\"\n\n\"Sure.\"\n\n\"If you've never masturbated before, it's about damned time you tried it! You have always had issues about being good to yourself, and masturbation is an excellent way to be excellent to yourself. Hell, if this lumpy old hippy had your body, I'd probably spend all my time touching myself. Of course if I did have your body, Mr. Lester wouldn't leave me alone long enough to do it.\"\n\nI would have freaked out if it had been anybody but Dr. Lester who said it, but she was as close to a sexless person as I've ever met -- just kind of a big nurturing bean-bag of a human. I just laughed, and she continued. \n\n\"You work hard on your body, so let yourself enjoy it. The only advice I'll give you is: don't rub yourself raw, don't put anything in yourself that could can't get back out, and don't touch yourself with anything that is harmful to sensitive skin or isn't clean. In short, be gentle and sensible with your body and don't overdo it.\"\n\n\"What about orgasm, Dr. Lester?\"\n\n\"What about it?\"\n\n\"I know what one is, but I've never had one.\"\n\n\"Don't worry about it child. It's nothing to be afraid of -- can't hurt you at all -- can't do it wrong. You'll know it when it happens.\"\n\nI nodded.\n\n\"You're nineteen and hot stuff. Accept it and enjoy it. Be careful and be good to yourself. Now... get the hell out of my office, babe. I'll see you next month.\"\n\n*****\n\nI didn't jump right into exploration as you might expect. I had to \"debrief\" with my parents when I got home from my session with Dr. Lester. It was part of the requirements for my continued counseling to talk to my parents about every session. I didn't have to tell them what exactly I talked about once I turned 18, but I did have to report how it went. They were as involved in my life as possible, and that was a very positive thing for me.\n\nAnyway, I just told them that we talked about further healing on some of my self-image issues. They accepted that, but it did kind of cool my fires for a while. It's hard to imagine coming out of a conversation with your folks and immediately wanting to masturbate. Then we had dinner, and before long it was late.\n\nThe next morning, however, found me in the shower with my fingers stroking my pussy tentatively as the hot water pounded on the back of my neck. Oh, it felt good. I remembered my earlier experience and dabbed a little conditioner on my fingers. Quickly it lathered my lips and short tufty bush and gave me a wonderful slipperiness.\n\nMy fingers flew and fluttered up and down the slit and strummed across my clit. I wasn't doing anything that Dr. Lester warned me not to do, so I figured there were no other rules. I could do anything I wanted, so I did.\n\nI also lost track of time and almost overheated while I was wrapped up in my own pussy. It felt so good that I didn't want to stop, even when I started to get dizzy and hyperventilate. I ended up holding myself up with my forehead pressed against the wall and gasping, just like when I was in the showers at the gym.\n\nI felt like I had been close, so after I finished my shower I raced back to my room with a towel wrapped around me and locked myself in. I lay back on my bed and opened my legs wide for easier access to my very wet pussy, and my heavy breasts rose and fell rapidly as I panted with excitement. I'll let you pause on that image for a minute... enjoy it... okay, moving on.\n\nAs I started to massage myself again I caught sight of myself in the full length mirror on the door. It was directly opposite the foot my bed so I was staring straight up the crotch of this lust mad, redheaded, big breasted girl as she shamelessly worked her dripping pussy.\n\n\"Look at you, you sexy whore,\" I told my reflection. \n\nI was under doctor's orders to not degrade myself. It was all part of my healing. I was supposed to say nurturing and empowering things about myself.\n\nI was too far gone into the moment to check myself for the self deprecation though, so instead I rolled with it. I would be a sexy whore for myself. I kept my eyes on the mirror as wave after wave of lust and heat bloomed in my body. My fingers made wet sounds and my senses were filled with the scent of my frenzy. \n\nI also kept up the monologue of insults to my reflection to work through the personal barriers of shame and degradation I'd built up over the years until they began to actually dissolve into encouraging and empowering things.\n\n\"Work it Elain. Work that sexy body. You can do it. You can love yourself,\" became my litany. It sounds silly -- hell, it was silly -- but it was what I needed right then to feel good.\n\nMy breasts were swollen and the nipples knotted up, so I pinched and pulled on them with my wet fingers and added that exquisite dimension to my pleasure. I licked my fingers and tasted my pussy for the first time. It was good, so I did it again and told myself about it, \"Oh you taste good Elain, you sweet sexy girl.\"\n\nForty minutes of massaging my pussy, tugging my nipples, and sucking my pussy slick fingers exhausted me. It was too intense to keep going, and I was starting to dry out a little. I was also going to be late for my crap summer job.\n\nI didn't reach orgasm that day, but I was very encouraged. I felt good while doing it; I felt good after doing it; and I felt good about trying it again. It was as if Dr. Lester had given me permission -- I was normal. This was good thing and I should do it. It was helping to heal me.\n\n*****\n\nTwo days later I broke my hymen with my fingers. It was a sudden thing, and I cried for an hour afterward from the pain and the self doubt. Should I have done it? What did it mean? The rationale that I dried my tears with was: my pussy -- my choice -- my decision -- my terms. If it was going to happen, then I chose the time, place, and method. I was okay -- nobody took anything away from me.\n\nThe day after that I discovered that if I really worked at it, I could lick my own nipples. It wasn't a comfortable position to stay in for long, but it was wildly entertaining and felt really, really good while I was able to keep it up.\n\nThe day after that I tore my hymen a little more and hurt myself again, but I managed to get three fingers in my pussy. It was an incredible feeling of fullness despite the initial pain.\n\nThe day after that I discovered the joy of fingering myself while lying on my stomach. You wouldn't think it would make a big difference, but if you've never tried it you'll be pleasantly surprised when you do... and I do hope you will!\n\nThe day after that, I finally made it -- my first orgasm! I had stopped talking to myself (having given over to more natural moaning and groaning sorts of sounds), but still preferred to masturbate in front of a mirror. What can I say? It just really turned me on to watch myself pleasure myself. In fact it still does.\n\nSo anyway there I was, completely relaxed with the fingers of my right hand going to town on my pussy and the fingers of my left hand rolling my nipples around. I watched through half lidded eyes as one, two, or three fingers disappeared inside me -- my pussy dripping moisture steadily onto the towel I was lying on -- occasionally sucking on my wet fingers to taste my salty sweetness -- making hot circles on my clitoris -- and then it just happened.\n\nIt began like dropping a large stone in a clear pool, only in reverse. It was as if ripples of energy from all over my body moved inward in succession and filled up a well in the center. It kept filling and filling and filling and the potential energy of it was great and terrible. Then finally it exploded outward, and my whole body seemed to tighten up as if I curled in on myself. My breasts strained upward and felt like they were going to burst; my abs pulled in; my ass clenched up; and my pussy viced down on my fingers. Everything blurred into slow motion ecstasy, and the stone fell back into the pool. The ripples of energy burst back outward at high speed, and I thrashed around on the bed like a mad animal. The blood was pounding so hard in my ears that I could only hear my heartbeat, but I know I must have cried out.\n\nAfter convulsing (there's no other word for it) for several seconds, I rolled over onto my side, pulled a blanket over me, and wept at the beauty and intensity of the experience. I felt so incredibly empty and disconnected, and all I wanted in the world was to be wrapped up and held. Dr. Lester was right -- I knew it when it happened.\n\nThere was a knock at the door. It was Mom.\n\n\"Elain honey, are you okay? I heard you scream!\"\n\n\"Yeah Mom,\" I said between sobs. \"I just woke up from a very long bad dream.\"\n\nMom poked her head in the room and said, \"May I come in.\"\n\n\"Please,\" I said before my brain caught up with my mouth. I was still naked and wet under the blanket, and it seemed like the whole room smelled like pussy.\n\n\"What were you doing sleeping?\" Mom asked.\n\n\"I got out of the shower and was reading for a while. I must have dropped off.\"\n\nMom sat on the bed next to me and put her arms around me, hugging me close. I'm sure she must have smelled the sex, but she didn't say a word. She didn't even ask me what the alleged nightmare was about or question the fact that there wasn't a book anywhere near me. She just held me and told me she loved me until I calmed down. Then she kissed me on the forehead and left me alone. \n\nI think I have the best Mom in the world. She's warm, kind, caring, observant, firm in her convictions, compassionate, smart, nurturing -- all the things a mother is supposed to be, but she also always let me be myself as long as it wasn't hurting me. Dad was always a bit more \"this is the way things should be\", but Mom always said \"let the girl be herself and breathe\".\n\nSo I breathed, and when I had caught my breath I did it again. The second orgasm was smaller, gentler, and not as much of a shock. I also tried really hard to be quiet, and mostly succeeded. I took my time and managed a third orgasm a little while later before I was too tired to do any more. It was also different, but no less pleasurable. It was also easier. I was finding my triggers, so to speak.\n\n*****\n\nThat was it. I was addicted to cumming. Over the next week I probably had six orgasms a day. I found out that I could make myself have a little cum in under three minutes, or I could take my time and have a big one. I masturbated in the shower, in front of the TV, in the bathroom when I had a spare moment, in the otherwise deserted locker room at the pool, once actually in the pool (just to see if I could), and of course on my bed in front of the mirror. I loved cumming in front of the mirror.\n\nI'd like to think I was making up for years of lost time of not masturbating, but I'll admit I was overdoing it in my quest to become expert at it. I sometimes walked a little funny by the end of the day, and I still had a hard time being quiet when I came. These facts were confirmed when I had another brief exchange with the coolest Mom in the world, and found out that she knew I was masturbating all the time.\n\nThat particular evening my crap summer job had me home after dinner, but Mom sat with me while I ate so we could catch up on the day's events with each other. I had an hour to kill after eating before I could go for my late swim, so I was going to head off to my room for a while and you know... take care of things. As I got up from the table, Mom pulled a taped paper bag out of a hidden spot and put it in my hand. She mouthed the words, \"Open this in private and go easy with it.\" Then she put her finger too her lips in a \"shhhhh\" gesture and winked.\n\nThen she shooed me out away from the table and went on about her business. For my own part I dashed back to my room, shut the door, and tore open the bag. Inside, as you might have guessed, was my very own vibrator and a package of batteries. \n\nIt was a small, white, plastic, phallus-shaped device -- only about five inches long, with a smooth tip, and ribs down the length. It was still in the plastic manufacturer's package, which was emblazoned with a full color picture of a naked woman rubbing one nipple with the vibrator and a bright orange For Novelty Use Only sticker over where her pussy would be. I sat there in shock for a couple of minutes and just looked at the thing in my hands. My Mom had just given me a sex toy!\n\nI couldn't quite wrap my head around that, but I couldn't get the package open fast enough either. It only took a couple of seconds to figure out that you had to unscrew the base and load it like a flashlight, so I quickly popped in the batteries. It only had an ON/OFF switch on the base, which I tentatively set to ON, and the little devil began to quietly but powerfully hum in my hand.\n\nI switched it off and quickly shucked off my clothes. I also thought far enough ahead to lock the door and turn on my little stereo for some cover noise. As quiet as the little vibe was, I didn't want to be indiscreet about using it. It never hurts to be careful. I was rapidly moistening with excitement while I was taking care of these little details though. \"Go easy,\" Mom had said. That would be a challenge as excited as I was.\n\nI flopped back on the bed (in front of the mirror, of course) and opened my legs. My pussy lips parted with a small wet smack, and I wasted no time in turning on the vibe and trying to force it inside myself.\n\nBad idea -- it hurt -- a lot. Fingers are one thing. Actually using a solid object that you have no feeling in is something entirely different. \n\nI must have had the angle all wrong, wasn't as wet or open as I thought I was, tried to go too fast, or some combination of all of those. What happened was that it felt just as uncomfortable as the language implied when I described it as trying to \"force it inside myself\".\n\nSo I sat back and just slowed way down. I rubbed my pussy gently with my fingers to make sure I hadn't hurt myself for real. Everything seemed okay, so I settled right into a leisurely masturbation rhythm.\n\nEmulating the vibrator package, I started to tease my nipples with the little humming guy. It felt incredible, but was just a bit too much to do for very long. This was going to be harder than I thought. I flipped the switch back to \"off\" and figured I would just take it one step at time.\n\nI started by gently rubbing the length of the vibe up and down the full length of my pussy lips. I quickly learned how much pressure felt good and how much was too much. I tried twisting it slightly as I stroked it up and down. The little ribs bumped over my clit in a great way, so I kept doing it.\n\nSuddenly realizing where I was, I quickly glanced up at myself in the mirror. Damn! I looked hot. There was just something so nasty about seeing that white plastic toy slide up and down my folds. It instantly made me twice as wet and the vibrator shined with the moisture.\n\nI kept my eyes on my pussy and lifted my knees to my chest, rocking my hips up and causing myself to open. Now I could see what I was doing, so I angled the vibe toward my opening and felt around with the tip. It was a briefly baffling experience watching everything in reverse in the mirror, able to feel my pussy but not the vibrator, and trying to find the way in. \n\nAfter a moment I got lucky and the tip slid right in about an inch. It felt odd but good. The plastic had warmed up by this point, so though it was hard and inflexible, it wasn't uncomfortable. I was encouraged, so I pushed a little more, and the toy slid smoothly inside me all the way to the base.\n\nThe ribs felt incredible as they bumped along the tight entrance to my body. I slowly withdrew the vibe and just as smoothly slid it back in. It went easy, so I kept doing it. The show in the mirror was fascinating. My pussy would grasp at the plastic shaft as it slid out and seemed to clench it back home as it slid back in. After a few more practice thrusts, I began to build up a rhythm and to grunt softly as I pumped the toy into myself.\n\nI started to give it little twists to make further use of the ribs as well, and that worked like a charm. My grunts turned to gasps, and I just had to start massaging my clit with my other hand. My excitement increased, and I began to clench on the toy as an orgasm started to build quickly.\n\n\"Must time this just right,\" I thought as I watched my busy pussy in the mirror. My clit massaging elevated to frantic rubbing, and I was able to press my left breast upward enough with my arm to flick my tongue across the nipple once or twice.\n\nI felt myself summiting the crest of orgasm and at the last possible second I flipped the vibe switch on...\n\nLanguage fails utterly to describe that first vibrator orgasm experience. I had never had an orgasm quite like that one, nor have I ever again. I don't believe that the surprise and incredibly fortunate timing can ever be repeated. Ah well, I will at least try to wrap some words around the physical components of what happened. \n\n...flipped the vibe switch on, and it felt like a high-voltage current seized me from the bellybutton to some point mid-thigh. All my muscles locked in contraction and crunched my body up like a sit-up. My pussy viced down so hard on the vibrator that it stopped the motion of my hand, and my ass clenched so tight that felt like it was drawing in on itself.\n\nInstead of washing over me in waves like a normal orgasm, cumming this way was very (for lack of a better way to put it) tightly localized on my lower belly, pussy, hips, and ass. Everything in that region clenched and unclenched very rapidly for many moments as the orgasm machine-gunned through me. Fortunately I wasn't breathing at the time or I would have screamed. As it was, I only managed a raspy growl in the back of my throat.\n\nThen as quickly as it began, everything released and I uncurled suddenly on the bed. This forcibly withdrew the vibrator from my pussy and skittered it across the bed to rest against my right ankle. I sucked a great breath of air and just lay there with my pussy spasming for several minutes. I didn't feel like I was in my right mind at all, kind of like getting nitrous gas at the dentist. I was in the room, but only vaguely.\n\nEventually the humming toy resting against my ankle bone tickled too much to be ignored any longer. I came back to myself, reached down to turn it off, and made the mistake of trying to stand up. Balance just wasn't there yet, so I fell back on the bed and just rested.",
        "I looked at the clock after a while and was amazed to see that only 45 minutes had passed since dinner and my conversation with Mom. I felt like I'd been on the bed for hours. That meant that I still had time to go for my late swim.\n\nI forced myself up, staggered around, gathered my gear, stashed the vibrator in a suitable hiding spot in the bottom of my underwear drawer, hid the packaging it came in, and threw on some clothes to go to the pool. As I left I passed Mom sitting in her chair reading a book.\n\nShe looked up and I mouthed \"THANK YOU!\" to her as I passed. She just winked and blew me a kiss.\n\n****\n\nThe swim that night was completely invigorating, and I made myself cum again in the locker room shower afterward. It was just with my fingers, but just because I had a new toy didn't mean that the manual ways were any less pleasurable or effective.\n\nIf anything the addition of the vibrator, with which I quickly became an expert, only furthered my addiction to masturbating. I couldn't see how it was hurting anything, so I didn't bother to check it. I followed Dr. Lester's advice and always stopped when I was sore and never touched myself with anything dangerous or dirty.\n\nI did become increasingly creative and reckless though. I drove to work a number of times with my vibrator buzzing inside me the whole way. I also began to regularly make myself cum in the locker room shower after my nightly swims. \n\nI found out that I could fit a medium sized cucumber in my pussy (washed before and after of course). I found out that I don't like having anything penetrate my ass, but I had to try at least once. \n\nI masturbated while talking on the phone. I masturbated in my sleep. \n\nI made myself cum in the bathroom at work on many occasions, also the receptionist's desk and my boss's office chair once just for the thrill. It was stupidly risky, but fortunately I knew where the security cameras were. \n\nI regularly sneaked off to my car at lunch and fingered myself or used my vibe. I came in dressing rooms at the mall. I came in an examining room while waiting for the physician. I came in the back seat of my parents' car on the long trip to the big state college orientation (that was scary reckless).\n\nI was one mad masturbating girl!\n\n*****\n\nI was due to leave for college in three weeks, so for fun I established a \"countdown of cum\", during which I wanted to masturbate in a few very specific places before I left town. I didn't know when or if I would ever really return home other than to visit, so I wanted to \"say my goodbyes\" so to speak.\n\nSome of my ideas were silly. For example, I went out early one morning and vibed myself to six orgasms on the fifty yard line of my old high-school football field and then one more in the endzone for the \"extra point\". There were numerous silly things like this.\n\nOne goal, however, proved to be a challenge. One night after my late swim I sneaked into the men's locker room at the pool and scouted around. I found a locker all the way down at the far end of the locker wall, from which you could see into the shower and the rest of the changing area. I examined the latch and verified that I could work it from the inside -- check one. Then I verified that I could hold the latch closed from the inside -- check two. I climbed inside and verified that I could fit fully inside and get the door closed -- check three. Lastly I peered out the vent slats in the door and verified that I could see into the shower (mostly) and the changing area (entirely) -- final check. It was a little claustrophobic inside, but there was enough room to squat down and brace myself into the space. \n\nAs Montgomery Burns on The Simpsons would say, \"Exxxcellent.\" I'm sure you can see where this is going.\n\n*****\n\nThe following day I went to the pool early and sure enough there were other people there. Training swimmers tend to come and go in waves (no pun intended), so I swam until there was a significant gap in the number of people arriving, and everyone I knew to be in the building was already in the pool.\n\nI got out, dried off, and made my way back to the locker rooms -- dodging at the last possible second into the men's room rather than my own. I listened carefully, but there was no sound within. I quickly and quietly dashed to the end locker I had scouted out, and fortunately nobody was using it. I wrapped my towel over my shoulders, climbed in, and clamped the latch shut from the inside with a small C-clamp I had hidden in the front of my suit. Don't ask where it was stashed -- I think you can guess. Then I just settled in and waited.\n\nAfter about ten minutes, two significant flaws in my plan became apparent. I had no idea how long it would be before anybody came in, and I started to need to go to the bathroom. Five minutes later I was ready to give up and climb out, but then I heard voices coming into the changing area. Three guys from the local community college walked in, wet from the pool. They were vaguely familiar, but none of them were the guy I had punched. My heart started to pound, because I knew that they had come from the pool. That meant that they would probably shower and change instead of just the latter.\n\nIt turned out I didn't have long to wait. Almost as soon as the guys came in they peeled off their tiny little swimsuits. They were facing away from me while they gathered their shower materials, so my first voyeuristic thrill was of three really tight asses.\n\nI grinned alone in my dark locker and snaked my hand down my body to my pussy. I pulled aside the crotch of my swimsuit and began to lightly massage myself in anticipation.\n\nThen, as one, all three guys turned around and I saw the first penises I had ever seen in real life. To be brutally honest, I was terribly disappointed. They were all really small and shriveled looking -- not impressive at all or very sexy looking for that matter. With the benefit of hindsight, I know that they were like that from just spending an hour or so in a fairly cold swimming pool and tight swimsuits. At time though, it was enough to make me pause on my pussy and frown in disappointment. I had seen male genitals before on late-night satellite TV, and these guys didn't look like that.\n\nStill the guys were well-built otherwise, and they did have those tight asses. I shrugged to myself and resumed masturbating. Then I had to stifle a moment's panic as they all started walking right toward my locker. Of course they would have to pass directly in front of it to get into the shower, but I was so nervous that I almost squeaked in fear.\n\nThey walked right by me completely unaware thankfully, and I was treated with a close-up look at their packages. I noticed as they walked that they seemed to be loosening up a bit since they were freed from their swimsuits. Maybe there was hope for a better show after all.\n\nI quickened my fingers as they turned on three adjacent showers within my field of view and stepped into the warm spray. It was mesmerizing watching the water and soap cascade off their tight bodies. Also, much to my delight, they all grew substantially larger in the hot water and careful washing they performed. Shortly they were all hanging much more impressively, and I was much hotter and wetter myself. \"Yeah,\" I thought to myself, \"that's what a cock and balls are supposed to look like.\"\n\nThe three guys were chatting non-stop, but I was so consumed with ogling their sex equipment and rubbing my own that I had tuned out their conversation completely. I did stop and listen when I caught that one of them said \"Moses\", though.\n\n\"Aw c'mon!\" said the guy at the shower head closest to me. \"Don't talk about her. You know what that does to me!\"\n\nThe guy at the farthest shower head responded, \"All I said was that it had been a while since we'd seen her hot body here. I missed those tits!\"\n\n\"I'd love to see a lot more of them!\" said the guy in the middle. \"I'd especially like to see them wrapped around my dick!\" he continued and mimed holding something with his hands and thrusting his hips.\n\n\"Yeah, you do that, and I'll nail her from behind!\" said the farthest guy, and mimed like he was riding a horse. \"She is some hot piece of ass!\"\n\nMy face burned, but I wasn't angry. It felt really weird to talked about (albeit crude locker room talk) as a sexual person, even more so as an object of lust. I wasn't sure how to feel about it, but at that moment my face wasn't the only thing that was burning. I was really working on my pussy and watching what was happening to the guy closest to me.\n\n\"C'mon guys!\" he said. \"You're making me embarrass myself.\" He pointed at his cock, which was standing stiffly at attention. I had not seen it rise, but it stood out big and proud now, and the water danced off its length.\n\nThe other two guys laughed and the one in the middle said, \"We're just hackin' on ya. We know she gets to you, man.\"\n\nThe far guy added in, \"Yeah, besides you don't have anything to be embarrassed about with that big pussy poker you've got. I'm not so lucky.\" He pointed at his own cock, which was in the midst of hardening. It wasn't as big as the one closest to me, but it was fascinating to watch it grow and distend.\n\n\"Aw hell,\" said the guy in the middle. He lathered his hands with soap and started stroking his own cock. It quickly hardened as well, and as he rinsed the soap off I saw that it looked pretty much like the far guy's. \"There,\" middle guy said to the close guy, \"yours is biggest. You happy now?\"\n\n\"Not until I whack off tonight thinking about Moses,\" the closest guy laughed. \"I can't stop thinking about how fuckable she is. Those tits are just incredible. Of course if she heard me say that, she'd probably punch my teeth out the back of my head.\" \n\n\"Yeah!\" said the far guy, \"she's a tough girl all right.\"\n\nThey all laughed and finished their showers, but I noticed that their cocks stayed hard the whole time. Meanwhile I was biting my lip and trying not to cum as I furiously rubbed my clit and pumped my fingers in and out of my wet pussy.\n\nI was fortunate that the guy closest to me dried off almost right in front my locker and pulled on his cock a few times when he thought the other guys weren't looking. I was certainly looking though. Until that night I had never even seen a real cock, but now a big one (by all accounts) was less than ten feet away, pointed at straight at me, and being surreptitiously masturbated. \n\nI loved the way his balls swung when he pulled on it. The head of it was swollen and red and seemed to beat with a pulse. Suddenly, and with great effort to remain silent, I came hard on my hand as I fixated on this stranger's beautiful cock. The locker was filled with the scent of my pussy, and seemed unbearably hot and close on my body. I dared not make a sound though.\n\nFinally the three guys squeezed their bodies back into regular clothes and left the locker room. I listened for a couple minutes and then released myself from my locker. I left the locker room area as quickly and unobtrusively as I could, but the pool was deserted except for one other girl who was still swimming laps.\n\nI dashed back into the women's room to pee since I still had to. Then I jumped back into the pool and pushed myself through a few laps as well. By the time I finished, I was alone. \n\nI had another long, slow, wonderful masturbation session in the shower, but not before I checked all the lockers. I was just paranoid enough to believe that I needed to. It wasn't enough to make me keep my fingers out of myself, but I couldn't shake the feeling that I was being watched. I had spooked myself with my own voyeurism. \n\nIt was extremely stimulating to think that the guy with the biggest cock might be at home right now pumping it in his fist and thinking of me, as I worked my fingers into myself and though of him. It was just what I wanted from that experience. Two weeks to go and I'd be off at school exploring even more opportunity.\n\n***** I spent the rest of those two weeks winding up my crap summer job, packing my stuff for college, and checking the last few items off my countdown of cum. That included straddling and humping a bedpost in our guest bedroom. I don't recommend that by the way. It was way too big for me to have tried to fit it inside myself. \n\nIt also included fully inserting a cucumber in my pussy... in the grocery store... and putting it back in the bin. I know it sounds nasty, but it was a great thrill. I won't go into details on how I did it, but it makes you wonder where the food that you buy has been doesn't it?\n\nOther than that, I kept up my nightly swims and masturbation in the locker room shower. I never repeated my locker stunt though. As exciting as it was, I was too scared to try my luck a second time.\n\n*****\n\nThe night before I left for school, I walked out of the shower room for what I imagined would be the last time for a long time and nearly tripped over a naked girl sitting on the tile in the shower entrance. I nearly jumped out of my skin! It took me a second to overcome my shock, but I recognized her as one of the swim camp instructors from the community college. \n\nShe was about as tall as I am, much smaller breasts, short hair, and apparently shaved all over. The reason I noticed this last fact in particular was that she had two fingers buried in her shaved pussy. It looked for all the world like I had just stumbled on her as she had an orgasm.\n\n\"Who the hell are you?\" I demanded.\n\n\"I'm Jodi,\" she gasped, completely flushed and breathing hard.\n\n\"How long have you been there? Were you watching me?\"\n\n\"I've been here every night for two weeks, and I can't get enough of watching you,\" she said softly, beginning to catch her breath but no losing her flush. \"I came out from using one of the stalls that first night and saw you touching yourself in the shower. It... it made me touch myself too. I couldn't help it.\"\n\nWe just stared at each other silently for a long moment. She slowly relaxed her fingers and withdrew them from her pussy with a small wet pop.\n\nSo someone had been watching me. I stared at her pussy for several seconds. It looked like it was still clenching from her orgasm. I could see the wetness on her lips and the pulsing of her bare clit from where I stood. She looked absolutely amazing. \n\n\"I'm going away... to college... for a while,\" I stammered at her, not knowing why. Even though I had just cum for the second time in as many hours and probably the fifth time that day, I was embarrassed to find the blood rushing to my clit and my nipples tightening up.\n\n\"I know,\" she said, with her eyes fixed on my body. \"I'll miss you. I just wanted to say that before you went. I...I just wanted you to see me too...see me touch myself.\"\n\n\"You're beautiful,\" was all I could say.\n\nShe looked like she wanted to reach out and touch my leg, but I lost my nerve. I dashed past her, threw on my clothes, and drove home without a backward look. It was time to get out of town.\n\nTo be continued...\n\n*****\n\nAs usual, please vote here at the end if you like what you've just read and send me feedback if you are so inclined. I like to hear if people enjoy what I'm turning out. -- MR"
    ],
    "authorname": "Mountain Rider",
    "tags": [
        "busty",
        "big tits",
        "vibrator",
        "fingering",
        "taste my pussy",
        "shower",
        "locker room",
        "swimming"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/learning-to-love-myself-ch-01"
}