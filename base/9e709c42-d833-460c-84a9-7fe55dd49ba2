{
    "title": "Breaking My Own Rules Ch. 03",
    "pages": [
        "I awoke as sore as if I had worked out all night long. Every joint ached. Extra time in the shower was called for. I noticed with chagrin that there were faint red rope burns around my wrists and ankles. It wasn't until I emerged from the shower and saw my neck in the mirror that I seriously considered calling in sick. Hickeys? Really! How very high school. It was too warm for any of my turtlenecks, but in the back of my closet I did find a blouse with a stand-up mandarin collar and long sleeves. Some judicious application of makeup helped, too. I had Chinese and Tylenol for breakfast and ran for work. Late again. \n\nWhen I slunk past Blondie's cubicle, she reached out and grabbed my hand. \"What's up with you?\" she demanded. She was squinting at me. She needed glasses, but refused to admit it.\n\n\"What do you mean?\" I asked innocently.\n\n\"You're never late, except when you've been screwing all night.\" Suddenly her eyes went wide. \"Ohmygod, you saw him again, didn't you?\" I rolled my eyes, but she jumped up and peered at my neck myopically. My makeup job must not have sufficed. Then she grabbed the collar of my blouse and pulled it aside. That had the effect of also revealing the bruised, tooth-marked shadow at the base of my neck.\n\n\"Hey!\" I objected, but too late.\n\n\"Ohmygod, ohmygod! Was it just as good? How many times did you come?\"\n\n\"Jeez, give me a break!\" I exclaimed, disentangling her hands from their grip on me. \"I gotta get to my desk before the boss sees.\" When I went to back away from her, I saw Office Cut-up, who'd been standing behind us listening.\n\n\"Did you get his name this time?\" he asked.\n\nLet me just explain that my brain does not work fast, and especially in the morning before coffee. The snappiest comeback I could come up with was \"Shit!\" I turned for my cubicle, but he was hard on my heels. \"There's no story here,\" I called over my shoulder. \n\n\"When are you going to see him again? Does he do threesomes, because I'm free on Thursday?\"\n\nI slid into my chair and buried my head in my hands. \"Would you please just go away,\" I said in a whiny begging tone. He chuckled, but moved on. I typed in my password on the keyboard, then put my purse away as the computer logged me in. My fingers rested on the keys to call up the data entry screen, but paused. I glanced furtively around the office. Boss's door was closed. Nobody was roaming randomly about the cubicle farm.\n\nTap - internet window opened. Mouse click - Google screen popped up. Another furtive glance, then my fingers, of their own will, typed in \"orgasm denial.\" I was holding my breath as I looked down the list Google had thoughtfully provided. I was pretty sure our prudish network watchdog wouldn't let any of them open. I was also pretty sure it wasn't anywhere I wanted to go. Been nice knowing you, Tom or Tim or whatever your name is. When he left last night - after untying me, thankfully - he had said when we met next, he would mete out my punishment for coming without permission. Kinky sex was one thing, but kinky non-orgasmic sex didn't sound like any fun at all.\n\nI spent the next couple of days dodging an imaginary stalker, leaving through a rear door in the office building, even taking a different bus home so I could scope things out as I neared my apartment. I had no special reason to think he was stalking me. I mean, the Chinese restaurant was near the bar where we first met. He could have been there in a very coincidental way, but he had come equipped with the rope he had used to tie me to the bed, which he had also left in place, like he was daring me to remove it. Which I hadn't. But, you know, housework day was on Saturdays, so...\n\nUnfortunately, I had agreed to go out with the girls on Wednesday night and there was no way they were going to let me out of that commitment. They were dying to know my latest adventures with 'him' and I could only hold them at arm's length so long. They did agree to go to our second favorite bar (rather than the one I met him in,) and because they wanted to hear the juicy gossip, we took a far corner booth. Once again, I told them the barest minimum that they would let me get away with, but it still had them drooling and snickering through the appetizers we'd ordered. I didn't get it. They all had way more active sex lives than I did. Why were they so anxious to hear mine, like they were living vicariously off the bones I threw them? Exotic, my drop-dead gorgeous, mixed race friend said it was because all of their hookups were way too vanilla. I had to admit that Tom or Tim or whatever his name was, in no way resembled vanilla anything. I also picked their brains on my paranoia du jour concerning his - just maybe - stalking me somehow. They gave me tons of feedback, none of which was useful.\n\nIn fact, even as Blondie was pooh-poohing my fears, he walked in the bar. I sank as far back in the booth as I could. \"He's here,\" I whispered, because I was pretty sure he would be able to hear me from 80 feet away.\n\n\"What, who?\" they said in unison, which gives you some idea of their attention span.\n\n\"I going to pretend that I'm going to the can, then sneak out the alley door,\" I explained, speaking slowly so they could process. \"I'll leave my coat and my drink. If he comes over here, just tell him I'm in the can.\"\n\nAt this point only Blondie was still lost, but Brunette and Exotic hushed her and gave me the thumbs up. They had totally bought into all the cloak and dagger. I figured they'd stand firm on my story just as long as he didn't kiss them. Or touch them anywhere. Or speak to them with that late night radio voice. Damn. I didn't stand a chance. But I made a dash for the bathrooms, then hung a left and out the alley door. I all but ran home, made it in one piece, not even stopping for my mail, and used locks on my door I'd never bothered with before. Still, it took a couple of hours to fall asleep that night.\n\nCome Friday, it all bubbled up again. We had, had, had to go out again. I stood firm and said I wasn't going out to any bars for the rest of my life, or at least until next month. So then they wanted to go to a club. Exotic knew a bouncer at Jamocha and could get us in without waiting on line. (I was pretty sure she could get us into any club in town with a wink of her eye but I didn't say so.) Clubs weren't really my scene, but I was doubly sure they wouldn't be 'his.' I figured I could endure it for an hour or two then sneak off as soon as they started hooking up. What else were friends for? Clubs also weren't a place for street wear and certainly not office wear, so that bought me an extra day. We agreed to meet up on Saturday night near Jamocha.\n\nOn Saturday, I tore half of my hole-in-the-wall closet apart looking for something to wear. It wasn't that I was looking to dress to the nines; I just didn't want to endure their teasing for the rest of the year if I showed up in anything that didn't reveal more of some portion of my body than I wanted. I finally settled on a stretchy knit number after I cut four inches off the bottom and rehemmed it. I knew damn well I was going to spend most of the night tugging the hem down, but small price to pay, right?\n\nCome ten o'clock, I walked the six blocks to the club in my modest heels. (I don't allow anything over three inches in my closet.) Blondie almost bowled me over when I was within half a block. \"Ohmygod ohmygod, this is going to be so fun! You're going to dance all night,\" she assured me. That wasn't exactly at the top of my bucket list, but I let it go. Exotic was there already, looking like someone who should be out with the Kardashians, in a sparkly silver thing that was almost blinding. Brunette slunk up a few minutes later, trying to look like Mata Hari - dark and devious. Okay, maybe that was just my take, but I have to admit I was kinda getting into things. True to her word, Exotic got us straight into the club. The music was pounding, and the bass shot right to my groin and refused to leave. I was trying to remember why we didn't do this more often. When we got some drinks and I heard the prices, I remembered. To add insult to injury, the minute our drinks arrived at a standing-only tiny, high table, Blondie and Exotic were dragging me onto the dance floor. There was no way I was going to drink from that glass after leaving it sit on that table, even if Brunette swore she'd stand guard.\n\nThe girls sandwiched me between them, and we gyrated to the music. Their hands were on the sides of my body, then holding on to each other with me trapped in between. My hands were in the air, when they probably should have been tugging my hem down, but I really was enjoying myself and feeling free of worry in the crowded, pleasure-seeking club. What could go wrong? Blondie and Exotic eventually drifted off, and I found myself bumping and grinding against anonymous bodies until thirst took over. I made my way to the bar to get a glass of water - at five bucks, no refills allowed. I muttered something about highway robbery, but the bartender acted like he'd heard it all before.\n\nWith the safe, sturdy bar at my back, I turned to watch the crowd. It really was a fun night and I was glad I'd let my friends talk me into it, even if it wasn't my 'scene.' I caught glimpses of them and they seemed happily in their element. About the time I finished my expensive water, Blondie showed up and pulled me back to the dance floor. There was more bumping and grinding, some a little too close for comfort or hands a little too low, but I found I could swirl away through the crowd, having the advantage of greater sobriety than most of the people on the dance floor. At one point, a man close to my age (as opposed to barely legal) came up and actually leaned toward my ear and asked to dance with me. I was flattered and agreed; he put his hands loosely at my back, as opposed to on my ass, and we danced through several songs.\n\nI finally shook my head at him and explained I needed to hit the can. He laughed at my euphemism and offered to take me to an office restroom that wouldn't have a long line. Since my bladder was sending rather frantic signals, that seemed like a good idea at the time. He led me down a dark hall, around a corner, then opened a door and hit a light switch. It was a generic bathroom perfectly suited to my needs and I thanked him profusely, half expecting him to have disappeared by the time that I emerged. But he hadn't. He was there, waiting patiently for me. \n\nI started back in the direction we had come but he reached out and pulled me against him, not tight or in a threatening way. More like a, 'let's take advantage of this moment alone.' I bought into it, and when he moved to kiss me, I responded. He'd been so polite and thoughtful, like what I'd been taught to expect from men. But then, I'd been brought up in rural Wisconsin, not in the big city. When he said \"I want to show you something,\" I figured it was something as innocuous as a generic bathroom. I followed as he moved to the next door in the hall. He hit a light switch, and I saw a supply closet. My brain was just going to the \"oh, oh\" phase as he yanked me inside and shoved me up against the wall.\n\nHe had one hand over my mouth and another tight on my throat. My hands were pushing against his chest but he was built like a Green Bay linebacker. I couldn't move him, I couldn't knee him in the balls because he was pushing his legs between my thighs. I couldn't slam my heel down on his instep. All the things that my daddy had taught me weren't going to work, so I went with what my little brother had taught me. I bit. I clamped down as hard as I could on the fingers that were covering my mouth. That might not have been the best idea, because he swore and slapped me with the bitten hand, leaving a trail of blood as he bruised my cheek.\n\nHis other hand tightened around my throat. Blackness was flooding into my field of vision. I was floating somewhere, lost between consciousness that was demanding I struggle for survival, and unconsciousness from the hard slap and lack of oxygen. Consciousness won, and I wasn't entirely thrilled about it. It brought pain with it, and fear, and guilt for putting myself in a position of such vulnerability. Consciousness had a lot of baggage. His hand suddenly disappeared from my throat. There was a wall at my back and I slid down it. I was searching for that fetal position, but something was preventing me from fully embracing my helplessness. Someone was calling my name, my full name - Skylar, not the nickname I gave everybody. I never liked that name. Then, when they began to shake me, I got really pissed. I tried to strike out but my wrists were taken captive and I was being pulled to my feet.\n\nFinally, reluctantly, I gave up on sweet escape. I blinked hard trying to clear my vision. 'He' was there in front of me. I kicked out until he pinned me against the wall in self defense. \"Let go of me,\" I spat at him. \"Don't touch me.\" The bitterness in my voice could not be mistaken, but still he held on, preventing me from hurting him but also from escaping. I looked around for my original assailant. I could see him scrambling to his feet out in the hall. Had my mystery man thrown him out there? I mean, come on! That was like a quarterback taking on a defensive lineman. When I saw the asshole take off, I sucked in a deep breath and tried to get control of myself.\n\n\"You can let go of me, now. I am fine,\" I said as calmly as I could.\n\nHe lifted my chin and glanced my cheek. \"No, you are not. I will take you to the hospital.\"\n\n\"I said I'm fine. Thank you for coming to my rescue but you can leave now.\"\n\n\"Then I will take you to the police to file a report.\"\n\n\"And tell them what? Some asshole didn't rape me tonight?\"\n\nHe sighed heavily. \"Then at least let me take you home.\"\n\n\"What, so you can rape me? I just want to be left alone.\"\n\nThere was a very long silence, then, \"I never did anything to you without your consent.\"\n\nI raised my hands in surrender. \"I'm sorry. You're right. It was fun at the time, but it's just too intense for me. Please. Let go of me.\"\n\n\"I will follow you,\" he warned. \"You should not be alone.\"\n\n\"Fine. Whatever.\" When he moved a step back finally, I turned away and headed out into the hall. True to his word, he followed, leaving enough space to be non-threatening, like he had in the past. It also left me just enough space to spin into the bathroom and slam the door shut, twisting the lock.\n\nHe sighed so loudly, I could hear it through the door. \"Skylar, let me in.\" He knocked patiently on the door.\n\n\"No. Go away. I want to be alone.\" I backed up and sat on the toilet. Then I started shaking uncontrollably. I pressed the heels of my hands against my eyes, trying to hold back the tears. God I was so weak.\n\nThere was silence for a few minutes, and I dared hope he had given up and left, but then the door knob rattled. He knocked again. \"Skylar, I'm coming in.\"\n\n\"It's locked. Go away.\"\n\n\"It's a bathroom door knob,\" he replied opening the door. \"You just need to poke something in the hole.\" He tossed a straightened paperclip into the waste basket, then looked over at me. \"Jesus,\" he muttered.\n\nI clutched at myself with my arms, trying to control my shaking. He shrugged out of his suit jacket and laid it over my shoulders. Taking a handkerchief from his back pocket, he wet it at the sink and squatted in front of me to dab gently at my cheek. \"Where is the blood from?\"\n\n\"It's his,\" I said, incongruously feeling proud and crying at the same time.\n\n\"You're in shock. You need to go to the hospital.\"\n\n\"No!\" Had I been standing, I would have stomped my foot.\n\n\"Then I will take you home.\" I shook my head so furiously that he had to pause his work on my cheek.\n\n\"You're being childish,\" he said sternly.\n\n\"You're being stalker-ish,\" I countered. \"Did you set this all up so you could rush to my rescue?\"\n\n\"God, no!\"\n\n\"Then how did you happen to just show up? Huh? I'm not stupid,\" I was starting to feel better as I let my anger replace my fear. Amazing how that works.\n\nHe went back to work on my cheek. \"I put an app on your phone. It lets me know where you are. Like for parents to keep track of their kids.\"\n\n\"You what!\" I didn't know if I was more offended that he had messed with my phone, or that he had equated me to a kid. I shoved hard at his shoulders, but despite the fact that he was squatting, I couldn't budge him. He simply put one knee down and looked at me patiently.\n\n\"Here's what's going to happen. I am going to take you home. I am going to put you to bed. I am going to stay with you during the night to be sure you are okay.\"\n\n\"Oh, hell no!\"\n\n\"You can walk with me, or I will carry you over my shoulder. Your choice.\" His gaze fell to my lap and I suddenly realized my dress had hiked up to expose my panties. \"You might want to consider the view you will be giving everybody.\"\n\n\"You can't carry me that far,\" I challenged, tugging my hem down.\n\nHe gave that sigh again. \"I have my car.\" He suddenly stood and pulled me to my feet. \"Enough arguing.\"\n\nAs he was pulling me along, I caught a glimpse of my face in the mirror. \"Oh.\" It came out more as a squeak. A dark blue bruise was forming over my cheek bone and my mascara had smeared and run pretty much everywhere. I found I couldn't hide my face and resist his firm grip on my arm at the same time. Before I knew it, we were at a car and he was holding the passenger door open even as he pushed firmly at the small of my back. I slid into the seat, secretly grateful. I had gone from scared witless, to furious, but now I was just plain exhausted. I wasn't sure I could have walked the six blocks home. I leaned my head back and closed my eyes.\n\nI could feel him studying me as he slid into the driver's seat. Maybe I looked atrocious enough that he would give up on his infatuation, or obsession or whatever it was that kept him from leaving me alone. After a moment, he started the car and drove the short distance to my apartment. He even found a parking space near the door. Lucky bastard. Before I could sit forward to find the door handle, he was there, opening the door and offering me a hand out of the low slung car. I looked at his hand, but I could not make up my mind whether to accept it or not. He reached down and took my hand, pulling me up and out. Decision made.\n\nMy doorman was horrified at my appearance and eyed my erstwhile friend with suspicion as he demanded to know what had happened. I waved him off with a promise to explain later. I prayed we wouldn't run into any neighbors as we rode the elevator up. Once in the apartment, I headed for the couch, but he took hold of my shoulders and steered me into the bedroom. \"Do I need to undress you?\" he asked.\n\n\"No,\" I answered quickly. I didn't want to think where that might lead. I pulled out the tank top and shorts that I slept in to reassure him that I was behaving. He went into my bathroom while I made quick work of changing and jumped into the bed. When he emerged moments later, I said, \"See, I'm in bed. You don't need to stay. I'll be fine.\"\n\n\"I'll be the judge of that.\" I realized he was holding one of the towelettes I use to remove makeup. I tried to take it from him but he held it out of my reach. When I gave up, he sat on the edge of the bed and went to work on my mascara mess. He was painstakingly gentle with my bruised cheek. After a few minutes, he studied his work and apparently found it acceptable. He tossed the towelette and went into the other room, returning with a kitchen towel. He laid that against my cheek and I realized it was full of ice.\n\n\"Owww! Hey,\" I exclaimed. My cheek had begun to seriously throb on the car ride over, but I was trying not to let him know. There was no way I was going to spend the night in the emergency room only to be told that I had a bruise.",
        "\"It's swollen,\" he said by way of explanation. \"Keep that there.\" I complied, again because the alternative would certainly be less pleasant. He went back into the outer room. This time when he returned he had my bottle of Tylenol and a glass of water. I gratefully took both then laid back on the pillow.\n\n\"See. I'm being good.\"\n\n\"For once,\" he replied. Jeez, what did that mean? He moved across the room and settled in the chair, looking for all the world like he had no intention of rising again until morning.\n\n\"Don't you have someone to punish?\" I muttered.\n\n\"Not tonight, unless you're planning on giving me any more lip.\"\n\nI fell silent, but I couldn't stay that way for long. After all, this was the most talkative he'd ever been and I had questions I wanted answered. \"Why did you do it?\"\n\n\"You'll have to be more specific,\" he replied quietly.\n\n\"Why did you put that app on my phone?\"\n\n\"Keep that ice on your face.\" He was quiet for a moment, and I thought he wasn't going to answer my question, but then he spoke again. \"When I saw you in that bar, that first night, you looked like a victim.\"\n\n\"What?\"\n\n\"Ice,\" he said sternly. \"I picked you out as my victim. I'm a predator. It's what I do.\"\n\n\"You mean like a serial killer?\" I stared at him with wide eyes. He rolled his.\n\n\"More like a serial fucker. For me, control is a part of arousal. One might even say a necessary part; the greater the control, the greater the arousal, the more satisfying the climax. I saw in you someone who would be easy to control.\"\n\n\"Oh,\" I said softly. \"So the app was to control me?\" I couldn't quite make sense of that.\n\n\"No. After spending time with you, I realized you were exactly as I suspected. For you, being controlled is a part of arousal. You would defy me so that I would exert even more control.\"\n\n\"I wasn't trying to defy you,\" I protested. \"Your rules are too hard to follow.\"\n\nHe chuckled. \"Not for others. Your body betrays your rational mind.\"\n\n\"That doesn't make sense. If I want to be controlled, why would I defy you?\"\n\n\"You're an addict. You want more and more. You're the perfect submissive.\"\n\n\"No I'm not,\" I snapped. \"And I still don't understand how the app fits in. I didn't even realize it was there.\"\n\n\"Because it was easy for me to recognize you as a victim, waiting for someone like me to come along and prey on you. If it was easy for me, it would be easy for other predators, too. I found myself wanting to protect you from them. Or maybe just to keep you all to myself.\" He shrugged. \"I kept track of when you were someplace where you were vulnerable.\"\n\nI scoffed. \"Like a Chinese restaurant?\"\n\nHe leaned forward in the chair. \"Predators have to feed. I was hungry and you are a most satisfying meal.\"\n\nA chill ran through me at his words. There was no emotion in his voice, like he had come to accept himself as some kind of monster a long time ago. \"So all that talk about making me a strong, bold woman...\"\n\nHe shrugged again and sat back. \"Sometimes you have to hit bottom before you realize that you've been falling. You can't become something else until you see yourself for what you are right now. I'm more than happy to take you all the way to the bottom. It's what I live for. Ice! On your face. Now!\"\n\nAnd just like that, I did it. \"So obedient,\" that obnoxious inner voice said.\n\nHe reached up on the wall behind him and hit the light switch. The room plunged into darkness. End of conversation, apparently.\n\nSometime during the night, I awoke to find him nestling a new ice pack against my cheek. When I started to ask him a question, though, he gave me the \"hush\" command. I was too sleepy to argue. By morning, he was gone. Apparently, he decided I wasn't on my death bed any more. I moped around the apartment all day on Sunday. My bruised cheek was already starting to turn various colors. I found and deleted the tattletale app on my cell phone. I debated changing my number, too, but it seemed like such a hassle. I removed the ropes he had tied to the corners of my bed, but then I tossed them in my closet instead of throwing them away. I'm still not sure why.\n\nOn Monday, I called in sick. Even the best makeup job wasn't going to cover the bruise and I sure as hell didn't want to have to talk about it to anyone. By Wednesday, I was out of food. I did what I could with makeup and dug out an old pair of sunglasses with oversized lenses. I hit the green grocer across the street, the little butcher shop down the block and then the convenience store for everything else. My arms were loaded when I got back to my apartment building and my stomach was growling. I trudged up the steps hoping the doorman was at his post so I wouldn't have to wrestle with the heavy door. He was, and there must have been another tenant behind me, because I was vaguely aware that he continued to hold the door after I was through. By some miracle, the elevator was waiting for me. I was trying to see around the bulky bag cradled in my arm to make sure I hit the right floor button when a hand reached over and pushed it for me.\n\n\"Thank you,\" I started to say, turning to see which neighbor was riding up with me. It was him. \"How did you get in?\" I demanded.\n\nHe shrugged. \"Your doorman must have assumed we were together. In fact, he seemed rather annoyed that I wasn't helping you with your bags.\"\n\n\"Why are you here?\"\n\nHe looked at me and licked his lips. \"I'm hungry.\"\n\nI shook my head. \"I told you. It's just too intense for me.\" He took one of the bags from me. \"Stop it, you're not coming in.\"\n\n\"You haven't been to work all week.\"\n\n\"Jesus, you're still stalking me?\"\n\n\"I suspect you haven't returned any of your friends calls, either.\"\n\nI stomped off the elevator and dropped a bag on the floor to fish my keys out of my purse. He followed and stood patiently behind me. As soon as I had the door open, I spun around and planted my palm against his chest. \"No means no. I don't consent anymore. I thought about what you said and I'm not going to be your love-sick obedient little slave anymore.\"\n\n\"Sub,\" he corrected calmly. \"Slave is different. And you haven't changed. Otherwise, you would have gone to work and held your head high. You would have answered your friends' calls and dared them to question your actions.\"\n\n\"How do you know I didn't,\" I said with a toss of my head.\n\n\"I spoke with them.\"\n\n\"What?\" I screamed then cringed hoping none of my neighbors was home. He didn't fail to notice and a smile touched his lips.\n\nHe started forward and I realized there was no way I had the strength to hold him back. \"You need me,\" he said quietly. \"You can't change without me. If you don't change, you will continue to be the victim, the preyed upon. And most of the predators out there are not so... chivalrous as I am.\" Slowly, but inexorably he was pressing his way over the threshold of my door and I was retreating helplessly before him. When he was fully inside my apartment, he smiled broadly. \"You should have slammed the door in my face. Why didn't you?\"\n\nMy hand dropped from his chest and I turned away to put my bags in the kitchen. A moment later, he was there with the rest of the bags. \"Because you're not strong enough?\" he continued. \"Because there was no place to run away and hide? Because you want me to control you? Because you're already wet just thinking about what I might do to you this time?\"\n\n\"Stop it.\" I tried to sound forceful, but it just came out pleading.\n\n\"You are wet. I can smell it. Enhanced predatory senses.\" He tapped his nose.\n\nHe had me trapped behind the kitchen bar, not physically restraining me, but to get past him would require a whole lot of bodily contact in that tiny space, and damn it, he was right about the wetness. Much more of his closeness, and I was sure it would show right through my jeans. He put his hands behind his back, moving closer, leaning down to bring his mouth next to my ear, his breath falling on my neck. \"We can help each other, cherie.\"\n\nI shook my head, my eyes squeezed tight shut. \"Don't,\" I whispered. It sounded like begging. It was begging.\n\n\"Your lips say don't, but your pussy says 'fill me.' Which should I listen to, hmmm? I think your pussy is more honest, don't you? Look at me.\" He reached out with just a finger and tilted my chin up. His lips brushed mine, so softly, I thought at first it had been my imagination. Then again, at the corner, just the lower lip, the tip of my nose. I kept my eyes shut. If I couldn't see it, then it wasn't real. His lips brushed my eyelids, then my mouth again. And so help me, I stretched up to increase the contact, but he pulled away. I'm sure he was smiling, but I refused to open my eyes. I couldn't be held responsible if I couldn't see what was happening. What I was giving in to.\n\nI trembled. I was lost and he knew it. Still he tormented me with the feather light brush of his lips. My jaw, my ear, my forehead, always moving quickly away if I tried to increase the contact. His lips were at my ear again, and he whispered, \"Say 'Please, Sir.'\" I heard a soft sob, and realized it had come from me. His lips brushed down the column of my neck, down past my collarbone, following the line of my sternum. When he reached the neck of my t-shirt, he continued down, lips to fabric. I wanted to tear off my shirt so I could feel those lips on my skin again. The layer of fabric between lips and flesh may as well have been a wall. Then I felt the gentle touch on my nipple, through shirt and bra. It was barely perceptible yet as agonizing as a nip of teeth would have been. Now I was positive that he was smiling when his mouth returned to my ear and whispered, \"Say 'Please, Sir,'\" yet again.\n\nI don't remember doing it, but at some point I had backed up against the wall between counter and kitchen bar. My hands were flat against it. He reached for the hem of my shirt. I could feel his fingers brushing against my skin, just above the top of my jeans. He pulled upward ever so slowly. My belly was exposed to him, then my bra, until he reached my armpits and could go no further. Yet again, he leaned in and whispered in my ear, \"Say 'Please, Sir.'\" \n\nGod help me, I raised my hands above my head and I whispered back, \"Please, Sir.\" \n\nMy tee shirt was whipped off and flung aside in one swift movement. Then he went to work on my bra by sucking and biting at my nipples through the fabric. I arched my back, obviously begging for more but he gave me no choice. Either I took matters into my own hands and removed my bra, or I begged him to do it with a 'Please, Sir.' He was making me not just consent to, but actually beg for everything he did to me. And yet, knowing that gave no steel to my spine. I thrust my breasts toward him and said, \"Please, Sir.\" I actually heard a soft chuckle then as he freed my breasts from confinement in record time. He spent time with each breast, sucking the nipple to hardness, then flicking with his powerful tongue and finally nipping and pulling until I was gasping from the combination of pain and pleasure. When I was sure I could stand no more, he suddenly knelt and began sucking at the crotch of my jeans, drawing my juices through the cotton and spreading my wetness even further.\n\nI thought I would go out of my mind. The faint stimulation of my clit was even more torturous than hard rubbing would have been. Like a mirage of water in the desert, I craved the contact of his tongue, but it was always just out of reach. Desperate, I unbuttoned my jeans and tried to shove them down, but his hands caught my wrists. \"Ask,\" he commanded.\n\n\"Please, Sir,\" I whined, writhing against the wall, and instantly he yanked my jeans down about my ankles, but then his tongue was torturing me through the fabric of my panties. He sucked at the moisture and teased my outer lips with his tongue, but my clit was raging with unmet need. I couldn't spread my legs to give him better access, because of the jeans around my ankles. I was sure that was his intent. I was almost sobbing when I begged with another, \"Please, Sir.\" \n\nThis time, his actions were slow and meticulous. He drew my panties down with painfully slow precision, and his tongue didn't return until they were wrapped about my ankles. I was gasping for air like a fish out of water by the time his tongue slid between my pussy lips and found my clit. Once there, it teased for only a moment before he pulled back.\n\n\"Is this what you want?\" he asked.\n\nI heard myself saying, \"Yes, yes! Please, Sir.\"\n\n\"Is this what you need?\" he continued.\n\n\"Yes, oh, God, yes! Please, Sir, please.\" I couldn't believe the desperation in my voice.\n\n\"Do I know what you want, what you need?\" he asked.\n\n\"Yes, Sir. You're the only one who knows. Please, Sir. Help me!\"\n\n\"Will you ever deny me again?\"\n\n\"No, never,\" I screamed. \"Please,\" I wailed.\n\nSuddenly I was on my back on the floor. My jeans were still tangled about my ankles, but he had spread my knees wide and his tongue was working my clit in ways I had never conceived. I screamed as I came, but he simply bore down even more ferociously and I thought I would die for sure as wave after wave of orgasm struck. It seemed as if his tongue left my clit in the same instant that his cock plunged deep into my pussy. I think I screamed again, or maybe I was still hearing the echoes of earlier. His weight on top of me, pushing my knees down even closer to the floor was almost unbearable. Apparently, it wasn't working for him either, because he pulled out almost as suddenly as he'd entered me.\n\n\"Hands and knees, now!\" he commanded. When I didn't move fast enough, he yanked one knee over to the other one and smacked my ass hard. I yelled some obscenity and wondered if I was going to have any voice left by tomorrow. But I was moving and it only took one more swat for me to be in a position that satisfied him. He plunged inside again, then lifted me bodily to adjust my position even as he was balls deep in my pussy. I was pushing back against him with all my strength even though he couldn't possibly have been deeper. Then he was stroking, almost angrily, and I was pushing back, needing more, like there was some part of me that he wasn't reaching. Then suddenly, both of his thumbs were in my ass, his fingers gripping my cheeks so tightly I knew there would be bruises. And I was whole. I opened my mouth to scream but no sound came out, or perhaps it was beyond human hearing. It seemed that he would never end, and that my orgasm couldn't end until his began. Somehow, impossibly, he pumped faster and faster, his balls beating my oversensitive clit into submission just as the force of his personality was beating my weak will into submission. And in that moment, I didn't care.\n\nI awoke much later that afternoon, naked on my bed. There was a bottle of Tylenol and a glass of water on my nightstand. I gulped them gratefully."
    ],
    "authorname": "Chimera44",
    "tags": [
        "reluctant",
        "stalking",
        "anal stimulation",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/breaking-my-own-rules-ch-03"
}