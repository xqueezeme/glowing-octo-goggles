{
    "title": "The Porn Shoot Ch. 04",
    "pages": [
        "I bolt up with a sudden desperate breath, the details of the horrible nightmare that roused me instantaneously forgotten. My mouth is parched, my head throbbing, my eyes barely able to open at all. Struggling against the searing sunlight, everything is hazy, a bitter grunt escaping my mouth as I lift a hand up over my face. Fuck the fucking sun! I spread my fingers wide enough to see my other hand clenching a sheet, suddenly realizing that I have absolutely no idea where I am or how I got here. \n\nAt least I'm not waking up in the fucking drunk tank. Not this time! Fuck it, I feel so awful I'm just going to pass out and sleep some more. And then the worst possibility imaginable crosses my mind, my foggy brain screaming his name. No, I couldn't have. I couldn't have. \n\nI instantly force my fingers wider, my eyelids steadily giving up their resistance, and discover that I'm lying in my own room. Retreating back into my pillow, I let out the most blissful exhale of my life. Pulling the sheet back over myself, I wonder what the fuck happened last night, sighing loudly as my eyes close again and I recognize that I've suffered yet another blackout. I need to quit drinking. I need to fucking give it up. I feel like I'm about to piss the bed, and I'm desperate to guzzle at least a whole gallon of water, but I still can't summon the will to move, to face the blistering light again, knowing that I'm at least safe in my own bed. Shit, I'm still fucking buzzed too! If I opened my eyes and looked around, the room would be spinning--I'm fucking spinning lying here right now even though I'm completely still. What the fuck did I do last night? \n\nI already know that it's a lost cause to try to recall how a night I can barely remember in the first place ended, having traversed that empty path countless times before. Who I talked to, the ways I might have embarrassed myself, that was all forever forgotten after I crossed that certain point of drunkenness; I'll never recall any of that unless someone who was more sober than I was eventually fills me in. And that's a tough task when I can't even remember who I might have talked to last night. \n\nI'm such a fuck-up. No wonder my mom wouldn't give me more money. What do I do the second I get paid, when I desperately need the cash to pay my rent? I go piss a good chunk of it away. Shit, how much did I fucking spending last night? I reach for my phone on the nightstand, the place I always leave it when I pass out, but my hand just hits the bare wood. There's nothing there. God damn it. \n\nWhatever, I'm still drunk right now. I probably passed out with my phone still in my pocket. Reaching underneath the sheet, my hands grazing my bare thighs, I realize I'm not wearing anything at all. My left hand hits the head of my half-hard dick, and it's only that solid because I desperately need to piss. \n\nThen I hear a gentle sigh, my sheet rippling as someone else manipulates it. Fuck. Fuck! What did I do last night? Kyle. His name washes over me again, still drunk or not. What the fuck did I do last night? What if it's him lying next to me in my bed? \n\nI don't know who's there and I'm scared as shit to find out, so I half-cover my face struggling to open my eyes against the light again, trying to see the person who's there next to me. If it's Kyle--no, I couldn't have. I tossed his number into the trash. I went out and I drank, drank, and drank. There's no way I came back to my apartment last night to find his number. It's not Kyle, no way. I wouldn't have done that. I couldn't have possibly done that blackout drunk. \n\nWhen I lift my hand high enough to actually see the person next to me, I'm relieved to find long brown hair, the girl I must have picked up facing toward the wall. Not Kyle. Of course it's not Kyle. I'm so relieved I smirk and laugh, but she doesn't stir. Did we fuck? I have no idea if we fucked, I don't remember her name or anything else about her right now, but she needs to fucking leave. I've suffered enough in the last 24 hours. \n\nI cough loudly, but she doesn't budge. Go figure, if I'm still this wasted I probably bought this random chick enough booze to ensure she was completely trashed too. I violently yank the sheet, but the girl still doesn't move. Fuck it, time to be more extreme. Now I rip the sheet away, forcing it out from underneath her, and she finally stirs, her body slowly rolling over toward mine. \n\n\"Hey,\" I say loudly, mustering all the enthusiasm I can despite my miserable condition. \"Morning!\" I'm such a fucking dick, and this girl is actually smoking hot, but she can't stay here right now. \n\nHer eyes shut and slowly blink open again. \"I'm so tired,\" she complains, her voice raspy. \n\nToo bad, bitch. \"Sorry, but I have to get up for work,\" I lie. \n\nShe sighs and fumbles for her phone. At least she knows where she fucking left hers. \"It's 7:47,\" she mumbles after peering at the screen.\n\nWho cares what time it is? She needs to go. \"Yeah, I'm really sorry, but I'm scheduled to clean up for opening today,\" I lie again.\n\nThe girl covers her eyes with a hand. \"What?\" she says like she's shocked. \"You said you were off today. You promised we were going to get brunch.\" \n\nI'm a fucking moron. \"I totally forgot about my shift,\" I say, trying to sound sincere. \"My boss just called and I'm already late.\" \n\nShe uncovers her eyes and looks straight into mine, a hint of suspicion obvious. \"You found your phone?\" \n\n\"Yeah,\" I answer instantly, silently panicking that I might have actually lost it in the course of the drunken night. How else could she know that it was missing? \"Yeah, I found it.\" \n\nHer head hits the pillow again, her eyes closing. \"You still owe me a brunch,\" she mutters in her raspy voice. \"But it's fine, you can call the Uber.\" \n\nGod damn it. What else did I fucking promise? \"Call the Uber?\" \n\nNow the girl looks at me like she's disgusted. \"You said you would pay for the Uber back to the house if I came back with you last night.\"\n\nYeah, of course I did, and now I don't actually know where my fucking phone is. \"Oh, yeah--but my debit card is locked,\" I say as convincingly as I can. \"I spent so much last night the bank thought it was fraud. I have to call them when they open today.\" \n\nShe sighs and slightly shakes her head, \"I told you not to get bottle service,\" she mumbles. \"I was already so drunk.\" \n\nFuck my life. Whatever, I'll have to deal with that later. \"Yeah, once I get started--hey, I really do have to get going though. Can you call that Uber?\" I climb out of the bed still completely naked, scanning the carpet next to the nightstand. No phone.\n\nThe girl groans, her eyes closing again. \"Can't I just sleep some more and let myself out later?\"\n\n\"Hey, I'm sorry, but I'm really not comfortable with that,\" I say as I'm reaching into the pockets of my shorts on the floor, finding them empty aside from my wallet. \"You know, we just met--\" \n\n\"Fine,\" she angrily interrupts, lifting her phone up and tapping on the screen. She starts groggily rising up with the phone in her hand, naked except for a lacey white bra. \n\nNormally this is a moment when I'd say fuck it, take everything I'd just said back, and throw her down on the bed. Instead I turn away as she's peeling her clothes off the bedroom carpet and putting them back on. But I'm hungover. I'm so hungover. That's all it is. If I had the energy I would be destroying her pussy right now. \n\n\"You're a real fucking asshole,\" she mutters just before walking past me toward the kitchen. \n\nWhy the fuck am I letting this hot woman just walk away? I trail after her, suddenly feeling desperate to save face as she's grabbing her purse off the counter and starting to trudge toward the front door. \"Hey,\" I offer authoritatively, \"come to Sports this weekend and you can have whatever you want on me. Maybe stick around until closing?\" I smile as her head cranes back to me, that look of disgust planted on her face again. \"Maybe we can get that brunch then?\" \n\nShe scoffs as she slips her feet into a pair of flats, opening the door and facing me. \"You didn't even have sheets on your bed, you couldn't get hard, and you passed out on top of me while you were trying. And now you're kicking me out of your apartment at 8:00 AM after promising me brunch and a ride home? Go fuck yourself, Jamie.\" \n\nI'm so stunned I can't form words as she walks out and slams the door shut behind her. \n\nShit. \"Well, she's not wrong,\" I mumble to myself in the now silent apartment. \"I am a real fucking asshole.\" I let out a loud defeated sigh and finally pour myself a glass of water, immediately gulping it all down. I'm so exhausted I don't bother walking back to the bathroom, just whipping my dick into the kitchen sink and letting a seemingly endless torrent of hot piss fly. \n\nI grab another glass of water and settle my naked body on the couch, propping my head against the cushion. I'll never remember everything I did last night, but maybe I can at least retrieve enough fragments to figure out what happened to my fucking phone. \n\nI had walked over to the Tap Room, the closest bar to my apartment, and I immediately recognized the bartender, Mitch, as a guy who frequently comes into Sports. We'd served each other before, and we'd always been generous. Last night he was charging me a buck for everything I ordered, and I was tipping him as well as he tipped me when I was on the other side. I was drinking pretty slowly for a few hours, not wanting to abuse his generosity and happy to be any level of fucked up after what I'd done that day. We were bragging to each other about our sexual exploits as the crowd steadily grew, even if he didn't understand that I was desperate to reassure myself that I'm not a fucking fag. And then the shift changed, a new bartender who I didn't know charging me full price for everything. Whatever, I'd just made $750. I felt like I could afford to have some fun. \n\nI kept ordering drinks and eventually I was liquored up enough to hit on every decent-looking girl in the bar. I was buying tons of drinks for women who quickly wandered away. They could tell I was a fucking desperate mess and it was still way too early for any of them to settle for that. I was doing shots with a new girl, not the same one I'd woken up with, who I must have spent at least an hour talking to, and that's where the film runs out. I have no idea what fucking happened after that, no idea how long I was out, no idea when I finally made it home.\n\nThe Tap Room is the most logical place to try looking for my phone, and I know they're serving brunch already. When I try to lift myself up off the couch, I can't even summon the will to move. I feel like a fucking idiot, and I'm so unbelievably humiliated. I couldn't even get my dick hard? I fell asleep on top of her? Obviously that was the booze. I've done plenty of drunk fucking, but blackout drunk fucking? I'm sure it's happened before, and I'm sure I had the exact same problem. Who could possibly achieve a raging hard on when they're that wasted? \n\nFucking Kyle. Fuck Kyle. I should have just sold my laptop and spent the rest of the semester getting shit done in the library. I should have dropped Bob Howard's business card in the trash the second he'd pressed it into my fingers. Fucking disgusting old man. Fucking Kyle. Fucking...\n\n***\n\nWhen I wake up, I still feel like shit, maybe even a little worse now that the previous night's buzz has completely dissipated. Instinctively reaching around for my phone, I quickly remember that I'm a total fuck-up and still have no clue where it is. God damn it. I sigh as I squint my eyes trying to read the clock on the microwave. 12:17. The temptation to take another long nap is overwhelming, but I know I need to be responsible for a change. Actually responsible. I'm definitely in no position to replace my fucking phone right now. \n\nAfter a few more glasses of water and dropping another load of piss down the kitchen sink, I decide to skip showering. Who cares what anyone thinks of me right now? I'm fucking trash anyway. I put on some of my laziest clothes and plod over to the Tap Room like I'm being forced to relive a horrible crime. The sunlight, the traffic, the people loudly talking everywhere, it's all a miserable, grating torture. Why am I constantly subjecting myself to living my life this way? \n\nI wander into the bar finding the place strangely illuminated and staged for brunch, bizarrely serene compared to the usual cacophony. \n\n\"How many?\" a petite blond hostess asks. \"Or did you just want to sit at the bar?\" she adds a second later, presumably after she'd taken a moment to actually size me up. \n\n\"Yeah, I, uh, think I might have lost my phone here last night?\" I stumble to say, miserable that I'm being forced to speak to another human being right now. \n\nThere's a subtle smile on her face, the kind that betrays she's already heard a story from some other employee about the missing phone. \"I think the bartender has one if you want to check with him,\" she suggests, not bothering to point the way. \n\n\"Thanks,\" I mutter, striding past the tables to the huge bar on the back wall. \n\n\"Jamie!\" \n\nIt's Mitch, the familiar face who I'd shared the conscious part of the night with. \"Hey, man,\" I greet listlessly. \n\nHe grins, reaching behind the bar and pulling out a phone. \"You leave something here last night?\" \n\nI grab it hopefully from his hand and see my lock screen, looking at Mitch in disbelief. \"How did you even know?\" \n\nThe bartender starts laughing hysterically. \"You left your bill on top of it when you paid your last tab, you fucking drunk.\" \n\n\"Shit,\" I mumble. \"Thanks, man.\" I start to turn away but I can tell there's something else he wants to say. \n\n\"Dude,\" Mitch starts slyly, lowering his voice. \"So what's her name? Does she ever come in?\" \n\n\"Well,\" I stumble, assuming he thinks I must have hooked up, \"I, uh, met her here, right?\" \n\nHe smirks and shakes his head. \"Not the one you bagged last night. The hot slut you were ranting about to Josh. You were saying she's the best fuck you've ever had, and I know you've been around.\" \n\nThis fucking day gets worse and worse. What the fuck was I even talking about? I wasn't in my right mind, obviously. \"I'll point her out next time I have the chance,\" I pretend to promise, struggling to smile even though I want to vomit. \n\n\"Hey, I'm not asking to share!\" Mitch jokes. \"I just want to get a look at her!\" \n\n\"Yeah, we'll see about that. Thanks again, man!\" I turn away before he has the chance to say anything else, speeding out of the place despite my crippling hangover. \n\nI settle on a bench that's on a sidewalk right next to the bar and hold my phone up, seeing that I have a voicemail. I don't immediately recognize the number, but within seconds I realize who it belongs to: Bob Howard. Which horrible news do I want first? My bank balance after a night of unbridled depravity or Bob yelling at me for the way I'd handled the cum shot with Logan or Kyle or whoever the fuck he is? Fuck it. I might as well see what the old man has to say. I start playing the message. \n\n\"Hey, Jamie,\" Bob greets warmly. \"This is Bob from Campus. It's currently Sunday morning, hope you're having a great day.\"\n\nThere was an obnoxiously pregnant pause. Get to the god damn fucking point, Bob. Add to the long, long and constantly growing list of the shit that I screw up. \n\n\"I just wanted to give you a call to let you know that I watched some of the raw footage you guys shot on Saturday,\" he continues. \"You were absolutely fantastic with Logan, absolutely fantastic, a total natural--I'm going to be honest with you, Jamie, I think you're one of the best new guys we've cast all year.\"\n\nI can't even believe what I'm hearing. \n\n\"I would really love to have you back to film some more scenes with us,\" Bob says excitedly. \"And we can definitely discuss bumping your rate up if you can deliver like that for me again.\"\n\nI start laughing to myself on the sidewalk like a fucking crazy person. Did I finally do something right in my life? \n\n\"So, great job with that shoot,\" Bob compliments, \"and please, please give me a call back if you're interested in working with us some more and we can definitely discuss the details. Looking forward to hearing back from you, Jamie. Enjoy the rest of your day.\" \n\nThe messages ends with a click and I feel more conflicted about everything than I have all day. Whatever, I don't have time to think about that. I'm being responsible now. I open my banking app, bracing myself to see the transactions from last night. Shit. I'd spent $300, half of it on bottle service, and the tips haven't even posted yet. I'm going to need more money, and I'm going to need it fucking fast. I am such a fucking moron. \n\nWhile all the other hungover people gleefully enjoy their brunch food and mimosas, I walk the short distance back to my apartment wondering if I can put myself through another one of Bob's porn shoots. I'm fucking good at it, right? I was \"fantastic\" in Bob's words, one of their best new guys of the year. And he wants to pay me more to do it? Maybe I just need rules going forward. Work will be work, and that's that. No hanging out with anyone else off set, no expensive drunken existential crises. Just work, just performing with my best bartender persona, showing off my great physique, and collecting the fat check. \n\nStepping back into my apartment, I instantly strip off my clothes and settle back on the couch. I still feel awful, but I start touching my own body, rubbing my hands over my pecs, down my faint abs, down my huge thighs. I'm hot as fuck. Who wouldn't want to see me naked? Why shouldn't I take full advantage of being able to make vastly more money than I could make from the bar? Doing that job doesn't have to change anything about who I am. I can be like every other straight guy who works at Campus, putting in a great performance to take home my cash and then fucking all the chicks I want. It's just like being a bartender. I almost never want to actually fuck the people I'm serving drinks to, but I'll flirt with all of them all night long to collect their tips.\n\nPorn is just another service industry. Smile, bear it, act like you're having a great time. I'm fucking good at that. I'm a fucking natural.\n\n***\n\nI passed out naked on my couch yet again, waking up 30 minutes before I was supposed to clock in for my Sunday shift. Whatever, that's the great thing about living so close to my job. After a quick shower, struggling to wash away all the humiliation and shame of the day, I donned a black Sports tank and a gray pair of gym shorts, rushing out my front door and easily punching in on time. After eight hours of naps and an absurd amount of water, I was close to 100%, even if I was starving. I made that up slipping into the kitchen all night, feasting on everything the customers had sent back. Who knew a bunch of drunks could be so fucking picky? \n\nBefore I knew it, 2:00 AM had arrived, closing time, all the lights turning up and the blaring music going silent as the Sports staff started the task of cleaning up all the raucous debauchery a rowdy crowd of college kids can inflict. I did a bunch of shots with my coworkers, something we always do when we're finally alone and rendering the place spotless for the next afternoon. My manager even did a round with me. \n\nAnd now I'm finally trudging home with a nice buzz and $100 in my pocket, barely tired since I'd spent most of the last 24 hours sleeping. I'm broke as fuck, still likely to be late on the rent, but Bob had dangled a desperately needed lifeline in my face. Fucking another dude to get your shit together isn't the worst thing in the world. It's better than pissing away $300 flipping out about it. Fuck that.\n\nWalking into my apartment and kicking my shoes off, I settle down on the couch where I'd spent most of the day, propping my feet up on the coffee table. Within a few minutes of mindless phone scrolling I realize how insanely horny I am. I'd cum just twice in the span of a week, probably a personal record since I'd first discovered the magnificent pleasure of jacking off. ",
        "My hand begins absentmindedly tugging at my dick through my shorts, my deprived length quickly rising to its full throbbing mast. I'm so ridiculously fucking horny. I start thinking about the girl I'd woken up next to, the one brief conscious glimpse I'd had of her naked body, but that doesn't work at all. A more potent image suddenly invades my mind. \n\nI remember Kyle being right here on this couch, his smooth toned legs pressed against my hairy thighs as his tight ass greedily sank down on my whole eight inches, swallowing me up so effortlessly. I think of the way he'd passionately kissed me as our bodies were grinding together, as he vigorously rode me better than any chick ever had. \n\nTipsy and not desperate to prove something to myself, I recognize that I'm brutally hard at my own volition reliving that afternoon with him, pumping my dick even harder thinking about the way we'd fucked. And god damn it, there's no fucking Viagra to blame. Maybe it is all way more complicated than I've been trying to make it. I can't control what my fucking dick responds to! Who knows, maybe the novelty of fucking another guy is what made it so hot; maybe that will completely subside after I've done it a few times and the idea of seeking it out will go back to being unfathomable. \n\nWhat the fuck is wrong with me? For a minute that idea takes hold again. Why is my dick so solid remembering banging another dude? But it is what it is. I liked fucking Kyle. I really, really liked fucking Kyle. Where did pretending I didn't enjoy it get me? Blackout drunk, $300 in debt, some rightfully pissed off woman telling me to go fuck myself. Shit, what's good about any of that? Nothing!\n\nWhy do I keep thinking he's so pretty? I can't get him out of my head. He was so nice to me, so genuine, and I treated him like shit even though I'm the one who pursued him! Well, what else is new? That seems to be the way I always operate, female and apparently male too. What the fuck is wrong with me? Shit, it seems to be me. I'm a fucking asshole. Why do I act like this with other people? I can't even explain it to myself. Apparently I need some fucking counseling. \n\nI know I have his phone number still sitting crumpled up in my trash and the temptation steadily grows to dig it out. As soon as Mitch recounted his friend saying that I'd ranted about some girl who was the best sex of my life, I knew I must have been talking about Kyle. Who else could it be? And if alcohol is truth serum, that was the fucking truth when I declared it to some stranger blackout drunk. I threw Kyle away and mourned the decision within hours because I have some obnoxious hang-ups about who I want to be and what I'm \"supposed\" to like. \n\nFuck it. I have to call him. I jump off my couch, wandering to the trash can and staring down into the contents. There's only one crumpled up piece of paper there, right on the surface. I pluck it out and unfold it. \n\nKyle, his phone number scribbled across the little page, an offer to reach out. I sigh plugging the digits into my phone, pressing call without giving myself a chance to hesitate. Thank god he doesn't know who's calling because he'd probably just decline it if he did.\n\nThe line keeps ringing and I suddenly realize it's probably way too late to be calling someone on a Sunday. What the fuck am I doing? I should just hang up. \n\n\"Hello?\" he finally answers. \n\nShit, I was seconds away from hitting voicemail and thought I was in the clear. \"Uh, hey,\" I say awkwardly, starting to pace around my kitchen. \n\n\"Who is this?\" Kyle demands.\n\n\"Jamie.\" \n\n\"You know it's like 3:00 in the morning, right?\" he says after a few seconds of silence, sounding slightly pissed.\n\nI shouldn't have fucking called him. \"Shit, I just got off work. Sorry if I woke you up.\" \n\nKyle laughs. \"No, I'm at a party. Hold on.\" \n\nI can't hear the telltale signs of a party in the background, but at least he's awake. \n\n\"Alright, I'm outside now,\" he says. \n\n\"Sorry if I woke you up,\" I repeat.\n\n\"I just said I'm at a party. Are you drunk right now?\" \n\n\"Well, yeah, a little,\" I admit. \n\n\"So why are you calling me drunk at 3:00 in the morning?\" Kyle asks like he thinks this is just a booty call. \n\nI don't know what the fuck to say. \"Uh, I just, um--I don't know.\" \n\n\"You were a dick, Jamie. I'm not going to roll over every time you feel like admitting you want my ass.\"\n\nI can't read him at all right now. He seems to be all over the place. \"I'm really sorry,\" I whisper into my phone. \"Seriously.\" \n\nKyle scoffs. \"Yeah, you're sorry until you cum in my ass again. And then you'll go back to being an asshole, right?\" \n\nWhat the fuck am I supposed to say? I can't even form words. \n\n\"We should have kept this professional from the beginning,\" he mumbles. \"I've let his happen before--you know, there's a reason Bob doesn't want us talking. We never should have met up off set.\" \n\nFuck. I threw his number in the garbage and now I feel like he's throwing me there too. Why am I even calling him? What the fuck am I trying to do? I already burned the bridge.\n\n\"You there?\" Kyle asks, frustration evident in his voice. \n\n\"Sorry,\" I mutter, covering my eyes with my hand like I'm not seeing him in my mind. \n\n\"I mean, I know there must be something going on if you're calling me at least. Right?\" \n\n\"Yeah,\" I agree. \"There's definitely something going on.\" I wander back to my couch, splaying out and settling down. \n\n\"I know,\" Kyle says a little more sympathetically. \"But I've been down this road before, you know? Do you have any idea what it's like when a guy throws you out and makes you feel that way?\" \n\nI think of the way I'd treated him the evening after our shoot, the way I'd treated the unfortunate girl whose name I still don't even know the morning after; I think of all the women I've treated that way, like objects, like convenient means to an end. I have no idea what it feels like. I always get rid of other people before they have the chance to get rid of me. \n\n\"You're there, right?\"\n\n\"Yeah,\" I answer. \"Sorry. I've been thinking about stuff like that. I've been thinking about a lot of stuff. I don't know why I do it.\" I pause for a second, instantly recognizing that isn't the truth at all. \"I don't even like myself, man. Honestly. I don't like myself at all. I never give anyone the chance to realize they don't like me either.\" \n\n\"Well,\" Kyle starts, letting the word hang for awhile. \"I thought you were a really cool guy, honestly. I mean...obviously. I've only hung out with a few of the guys I did a scene with.\"\n\n\"I really am sorry for being a dick,\" I say as sincerely as I can. \"I'm so fucking tired of being a dick. Really.\"\n\n\"Thanks, Jamie. Hey...\"\n\nThere's silence on the other end for a few seconds. \"Yeah?\" \n\n\"Do you want to talk about all this stuff in person maybe?\" Kyle asks. \n\nIn an instant my dick is rock hard. \"In person?\" \n\n\"Well, I'm literally three blocks away from your place right now,\" he says, his voice slightly hesitant. \"Or maybe we should do that when we're both sober?\" \n\n\"I'm better at telling the truth when I'm not,\" I quip. \n\nKyle laughs. \"We would just be talking, though. That's all.\" \n\nI close my eyes and start stroking my dick through my gym shorts imagining his pretty face, his smooth tanned skin, his beautiful pink hole. \"If you don't come on to me I won't come on to you.\"\n\n\"Are you saying you want to come on to me again?\"\n\n\"Dude, so fucking badly,\" I admit, grasping my shaft and opening my eyes to see a huge spot of precum soaked through the fabric of my shorts.\n\n\"Then we definitely need to talk about that,\" Kyle says insistently. \"Let me tell my friends I'm leaving and I'll head your way.\" \n\nA massive grin spreads across my face. \"Sounds good, man. Tell me when you're here and I'll buzz you in.\" \n\n\"Ok, see you in like five minutes. Bye.\" \n\nThe call ends, and for a regretful second I feel like I just made a huge mistake inviting him over. What the fuck is wrong with me? I'm not gay! But my cock is so insanely hard thinking about Kyle. Fuck it. Fuck it! Sex is just sex! If I'm going to do more scenes for Bob, if other guys are going to turn me on the way Kyle had, I have to confront that maybe I'm not 100% straight. And who fucking cares? I just want to be happy. I pull my dick out and stroke like a madman remembering the way I'd fucked Kyle on this couch, letting myself admit that I'd enjoyed it. The minutes tick by and then he texts that he's here. After a couple more minutes, I hear a soft knock at my door, jumping up to let him in. \n\n\"Hey,\" Kyle greets, sounding a little tipsy himself, a huge smile on his face like he's really happy to be seeing me again. \n\nHe's so fucking pretty. He's wearing a gray t-shirt and jeans, his blond hair styled exactly the same way it was for the shoot. I smirk at him, his blue eyes meeting mine. \"Glad you could make it.\" How the fuck am I supposed to repress my urges? \n\nKyle's gaze quickly shoots to the rigid shaft that's obvious in my gym shorts, and he stares lustfully for a few seconds before looking back up at my face. \"What have you been doing?\" he asks even though he already knows the answer. \n\n\"Thinking about you,\" I say. I'm not even trying to be flirty, but I can't help myself. All I want to do right now is grab him and shove my tongue down his throat again. Who the fuck cares what it means? Fuck it! Sex is just sex!\n\nKyle laughs, his bright blue eyes lighting up. \"So...should we sit down and talk?\" \n\nI motion to the couch. \"Yeah, have a seat!\" \n\nWe both sit down, positioning ourselves closer than we probably should, the sexual tension almost explosive. I have no idea what I'm supposed to say. Should I be apologizing to him again for acting like an asshole? Kyle doesn't say anything either, just wearing that same sheepish smile he'd borne in this exact same spot the day before. \"You know, this was your idea, man,\" I finally prompt him, playfully tapping his shoulder because I'm desperate to touch him.\n\nHe jolts at the momentary contact and laughs again, looking into my eyes. \"You're making it really, really hard to stick to what I said on the phone.\"\n\nI know he wants me too. Fuck it. I grab Kyle's hand, locking our fingers together tightly. \"Are you sure you want to stick to it?\" \n\nHe hesitates for a moment. \"Well, I know what I want,\" he whispers, squeezing my hand. \"Are you sure you do?\" \n\nI let Kyle go and reach my hand around his head, pulling his smooth face toward mine, our lips meeting in one tender kiss. Sharing that with him again right now, I know I need more. I want to spend the whole fucking night kissing him. \"Feel how hard my dick is right now,\" I whisper, our mouths just an inch apart, my breath against his skin. \n\nKyle grasps the thick eight inches through my shorts, moaning softly into me as he starts to stroke my length. \n\n\"Definitely not the Viagra this time,\" I murmur. \"Must just be you.\"\n\nHe moans again as he plunges his tongue into my mouth, our hands all over each other as we begin ravenously making out. When Kyle pulls away, he rips my Sports tank top off, yanking his shirt off too as he climbs on top of me, his legs pressed against my thighs. Our mouths collide together again like we've both been lusting to experience this moment for so much longer than just a single day, our tongues forcefully struggling to press even deeper inside each other. \n\n\"This is so fucking hot,\" I pant when Kyle finally comes up for air. Who gives a fuck about labels when being with someone feels like this? Fuck it! At least I'll fucking remember this!\n\nHe grins, his whole face flushed and transfixed with lust. \"You're so fucking hot,\" he whispers, starting to grind his butt into my dick through our clothes. \n\nI smile too, gripping Kyle's ass with my hands and pulling him into my crotch as he moves up and down. \"You want that big dick again?\" I ask, my voice low, authoritative, hungry. My balls are so fucking full. \n\n\"You know I do,\" he says eagerly, the intense desire obvious in his eyes. \n\n\"Then take the rest of my clothes off,\" I command with a cocky smirk. \n\nKyle leaps out of my lap, hooking his fingers underneath either side of the waistband and urgently yanking my shorts and boxers down in one fell swoop. My rock hard dick is sticking straight up, the head already slick with the precum that had been steadily dribbling out. He looks in awe at it from in between my legs, like it's just as mesmerizing as it was every other time he'd seen it, wrapping his slender hand around my warm, pulsing shaft. He nuzzles his face against my sack, breathing deeply as his tongue probes my balls. \"I can tell you just got off work,\" Kyle says when he pulls away. \"You smell so fucking manly right now.\" \n\nI grin knowing that he likes my scent, and when Kyle starts to press his mouth toward my dick, I hold a single finger up above it. \"Not yet!\" I tease him, desperate to see his smooth ass again. \"You need to lose those clothes first.\" \n\nHe rises up in front of me, his little pecs and ridiculously chiseled abs already on display, slowly and seductively unbuttoning his jeans. \n\nI grip my thick shaft and start stroking as I watch him gingerly slide the pants down his hairless thighs, revealing a low-waisted white pair of Calvin Klein briefs that contrast beautifully with his deeply tanned skin. \"Nice,\" I hiss, pumping my dick harder. \"Now turn around and peel them off.\"\n\nWhen Kyle changes positions, he squats down in my lap, rubbing my dick against the white fabric concealing his ass cheeks. He slowly slides the briefs down, exposing the two hairless globes I'd grown obsessed with at Bob's mansion, the head of my cock sliding against his crack. \n\nThis feels so fucking good. This feels right. Who the fuck cares? I grab his beautiful butt with both my hands, digging my fingers into his supple skin, guiding his ass up and down my length. \"Dude, fuck the blowjob,\" I mutter. \n\nKyle twists his head back looking worried, probably nervous that I've suddenly changed my mind about what we're doing, but that definitely isn't true. His ass is so fucking sexy that I need to have it right fucking now. \n\nI wrap my hands around Kyle's waist and kiss up his back to reassure him, forcing him upright again as I stand up behind him, slapping his stunning butt a few times with my thick 8 inches. He'd mentioned that doggy is his favorite position, so I turn him around, pushing him down on the couch so that his arms are up on top of the cushions, his feet dangling off. \n\nHe arches his back, pointing his ass up toward me, the perfectly smooth mounds spreading to expose his tight pink hole.\n\nDrinking in that magnificent sight, I'm desperate to taste him again, dropping down to my knees and pushing my face between his smooth cheeks. I start lapping my tongue against his silky slit, eagerly massaging it as I listen to his moans of pleasure. \n\n\"Fuck yeah,\" Kyle murmurs from the cushion. \"Get that pussy nice and wet for your big fucking dick.\"\n\nThat word triggers me again, my dick growing even harder than it is. I'm already throbbing, my balls so full and desperate for relief, but that word makes my length even more rigid, even more determined to destroy Kyle's tight butt. He doesn't have an asshole, just a sweet pink gash of a pussy that exists to be filled up by men. I lick more forcefully, using my hands to spread Kyle's cheeks even wider as he moans more enthusiastically. I drive my tongue into the tight ring, trying to push my way inside him, wishing he was still leaking my seed like he was the day before. \n\n\"Fuck me!\" Kyle begs after a couple of minutes, his face desperately turning back, the hunger obvious in his blue eyes. \"I need to feel your dick inside me again right now!\"\n\nI want to eat him out all night, to keep tasting that sweet hairless pussy between his legs, but I'm aching to be inside Kyle just as much as he's pleading for it. \"You're ready for this dick?\" I ask, standing up and slapping it against his pink slit.\n\n\"Yeah!\" he answers. \"Give me that fucking dick!\" \n\nI spit on my cock a few times, rubbing the saliva all over my shaft, grabbing one of Kyle's hips while my other hand guides my rigid length into his slick, warm opening. \n\n\"Shit!\" Kyle yells the second I finally press inside him, his ass quickly darting away from me. \"It's too much! You're so fucking huge!\" \n\nI'd totally forgotten the way I'd slowly warmed him up when we first fucked. \"Sorry,\" I whisper, suddenly nervous that I'd hurt him. \n\nKyle's head turns to look at me again, his pleading eyes finding mine. \"I can do it. Just give me a few fingers first. I can fucking take it.\" \n\nI get back on my knees right in front of Kyle's smooth butt, still marveling at how perfectly pink his hole is and stealing another lick, pushing my tongue slightly further than I'd been able to manage before. \n\n\"Oh fuck,\" he moans. \"Get my pussy so fucking wet for you. Loosen me up so I can take that whole massive cock.\" \n\nGod fucking damn he's so hot. I spit into his sweet pink slit again, drawing my face back and rubbing a finger against his slick hole, gradually pressing it inside him. Kyle gasps like it's my whole dick, but after a few seconds I easily slide a second finger in too. \n\n\"Yeah!\" he groans. \"Stretch me out. Get me ready. I want you to fucking fill me up, Jamie!\" \n\nHearing him say my name turns me on so much. I slap his ass with my free hand. \"You need this big dick destroying your ass, don't you?\"\n\n\"Fuck yes!\" he whimpers. \"Fucking destroy my ass!\" \n\nStraight, gay, bi, who the fuck cares? I'm so turned on I can barely resist stuffing my whole length inside of Kyle right fucking now. I shove a third finger in and he groans loudly, but his ass easily accommodates it. He's ready to take my cock. I withdraw my fingers, standing up again and positioning my thick shaft against Kyle's hairless hole. \n\n\"Yeah,\" he encourages, his voice desperate. \"Give it to me!\" \n\nI press the head of my dick into Kyle's butt again, his insides easily giving way this time, spreading open for my eight inches. He feels tighter than he's ever felt, like his hole has totally reverted to its natural state after a day without penetration. \n\n\"Fuck!\" he yells deliriously when I'm just halfway in. \"Fuck yeah! Fucking take it! Fuck me! Use me!\" \n\n\"Fucking slut,\" I grunt as I slide the rest of my length inside of him, the last inches effortlessly disappearing until my pubes are resting against Kyle's butt. \n\nHe moans and groans and swears adjusting to my massive length bottomed out inside of him again, his hole cradling my dick. \"Your fucking slut,\" he finally says urgently. \n\n\"You want to be my slut?\" I challenge, totally lost in the pleasure of the moment as I start thrusting my length in and out of his ass. \"Your pussy should be able to take this big dick with no warm up at all.\" \n\n\"Fucking train me!\" Kyle begs, his blue eyes wild when his head twists back. \"Make me take this big fucking dick all the time!\" \n\nShit! He's such a fucking slut! I'm so turned on I have to pause my assault, waiting a few seconds before I start sawing in and out of his hairless globes again. His ass is clenching down on my shaft, gripping me so tightly as I barrel in and out of him. I know Kyle must be jerking off. He's fucking enjoying this as much as I am. \"Going to shoot your load when I fucking breed you again?\" I ask, drops of sweat dripping off my forehead and landing on his back. \n\n\"Yeah!\" he yells between ecstatic moans. \"You feel so fucking good!\" \n\n\"Fuck, man,\" I grunt, his tight ass squeezing my dick hard again. \"Shit. Fuck.\" I keep pummeling his butt, viciously slamming my eight inches in and out of him. \"Your fucking pussy is going to suck the cum out of me.\"\n\n\"Yeah?\" Kyle whimpers back, his hole gripping harder than it had all night. \"You going to fill that pussy up?\" ",
        "\"Fuck yes,\" I answer, barely able to stop myself from cumming as my dick effortlessly glides in and out of his hole. \"You want me to fucking fill that pussy up again?\" \n\n\"Fill me up!\" he enthusiastically shouts back. \"Load that pussy up! Fucking shoot that cum inside me, Jamie!\" \n\nLiterally a second after he says my name, I bury my dick to the hilt, digging my fingers hard into Kyle's hips and finally letting go. I roar so loudly, so primally, the sounds unlike anything I've ever uttered before as my semen pours into Kyle's butt. Fuck it. Fuck it! This is so good! This is what I fucking need! I'm panting, breathless, my dick still squirting inside him when the orgasm finally subsides. I'm still pumping in and out of Kyle's ass, barely able to believe how incredible it feels. I slap his smooth butt a final time, letting my softening dick slip out. \n\n\"Wow,\" Kyle murmurs from the couch cushion.\n\nFucking wow. The white globs of my cum start spilling out the second after I pull out of his hole, the warm jizz quickly streaking down his slit and smooth balls. I slap his cheeks again. \"Taste it,\" I insist, still feeling totally dominant, still wanting his mouth around my cock. \n\nKyle instantly turns around, positioning himself at my dick and eagerly taking it into his mouth. \n\nToo eagerly. \"Easy,\" I whisper, still sensitive after my orgasm. \"Just taste that load I dumped inside you.\" \n\nHe moans and slurps on my soft dick less intensely, quickly pulling off of it. \"That was amazing,\" he says, his blue eyes looking into mine, his blond hair a mess. \n\n\"Yeah,\" I say back, still relishing in my release with Kyle's face at my cock, my cum now lodged in both his holes. \n\nHe suddenly moves away, urgently kneeling down on the floor and searching for the white Calvin Klein briefs he'd discarded during his strip tease.\n\nI know he's scared, and he should be, because I'm a fucking asshole. But I'm not panicking. Not yet. So I fucked the pretty gay dude again? So fucking what? I grab Kyle's arm, pulling him up, forcing him to face me. He looks fucking terrified and I immediately feel awful. \"Do you have to leave?\" I ask. \n\nHe looks nervous as fuck and I know I deserve that. \"Well, I was planning to head out,\" Kyle says. \"I have class tomorrow.\" \n\nI feel like he's kicking himself out before I can even have the chance. I bend down to peck his lips, tasting a hint of my own cum. \"Weren't we supposed to talk tonight?\" \n\nHe smiles. His blue eyes look up at me like I've grown. \"You're not tired?\" Logan asks.\n\n\"I am,\" I answer, finally succumbing to the combination of my obnoxious shenanigans, a shift at the bar, and what I'd just expended with Kyle. \"But there is a bed right down the hall. Unless you really need to head back tonight?\"\n\nKyle shakes his head and I take his hand, leading him to my bedroom, both of us still completely naked. We get comfortable beside each other, nestling in my sheets. At least this time I'm passing out with someone I'll actually remember, someone I actually like. God he's fucking pretty. Fuck it. \n\n\"This is so weird,\" Kyle whispers into my ear.\n\nBy now I'm already on the verge of passing out. \"What's weird?\" I groggily ask.\n\n\"I didn't think I was ever going to talk to you again yesterday. Now I'm sleeping next to you.\" \n\n\"Yeah,\" I mumble, cradling up next to him, enveloping his small frame against mine and loving the way his warm body feels. \"How well was my life working out before? Fuck it. Fuck everything.\" \n\n\"You have so much going for you, Jamie,\" Kyle whispers back. \"You're tall, you're muscular, you're smart.\" \n\nI chuckle at that. \"No, I'm a fucking dumbass,\" I say. \"Total fucking dumbass.\" I have so many things people think they want, but I feel like I have nothing at all. \n\nHe runs his fingers through my hair. \"You're still figuring everything out,\" Kyle murmurs into my ear. \"There's nothing wrong with that.\"\n\nThat's definitely the fucking truth right now. I have so much to figure out. \"Let's just sleep,\" I decide.\n\nKyle doesn't say anything else. He's probably afraid to say anything else. He's gotten a taste of how fucked up I am and I've done everything possible to drive him away from me, but he's here right now, his smooth skin against mine. Fuck it. I feel good about myself for the first time in a long time. I did something right for once. I'm sleeping next to another dude, yeah, but who fucking cares? Fuck it. Seriously, fuck it. I literally don't even remember sleeping next to the last girl I brought home. At least I'll actually remember this. \n\nWho the fuck am I? Less than a day ago I'd dragged some smoking hot girl here with false promises and passed out on top of her not even able to get hard. Now I have the ridiculously pretty gay guy sleeping next to me with a huge load of my cum planted in his ass. I don't fucking know, and maybe I'll wake up tomorrow and finally panic that I did this again. But right now...god, this feels so fucking nice.\n\n \n"
    ],
    "authorname": "brycemanning",
    "tags": [
        "anal sex",
        "gay",
        "college",
        "straight guy",
        "rimming"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-porn-shoot-ch-04"
}