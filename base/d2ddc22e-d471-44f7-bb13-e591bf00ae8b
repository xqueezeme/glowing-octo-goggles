{
    "title": "In Love with Lori Ch. 05",
    "pages": [
        "This is the last part of this particular part of the story, which I started out with every intention of dashing-off in a few weeks; more than a year later I finally crossed the last 'T' and dotted the last 'i', which serves me right for being so optimistic! From this point forward, Lori will pick up the thread and tell the tale from her unique perspective, so thank you for sticking with it as the tale unfolds!\n\nAs usual, my thanks go to Michael for liking this story enough to keep me at it, and Bonnie for being patient with me, and to everyone else who also liked this story and waited patiently for me to finish it.\n\nI had great fun writing this, and to those who really want to know, the story Lori is physically almost a perfect double of the real one, my fabulous wife, but that's the only physical thing they share in common; story Lori's phenomenal appetites are entirely grounded in this story, and nowhere else, I'm sorry to say!\n\nThis segment follows on directly from Chapter 4, so I'd advise new readers to take that in first, to save themselves a mountain of confusion.\n\nAs before, I'd like to remind the reader that this is not reality, it's my made-up world, but you're more than welcome to roll-up your pants, suspend disbelief, and join me for a paddle; who knows, you might even like it!\n\nIf you like it, please rate it, if you didn't, please tell me why.\n\nbeachbum1958\n\n*****\n\nBack in the village, in the safety of her sprawling old house, Aunt Sybil was understanding, welcoming, and sympathetic, her motherliness making Lori break down in floods of tears, that and delayed shock, so Jimmy, Rosie, and I sat in the kitchen with our coffee while Sybil put her in one of the bedrooms and generally fussed over her. She rejoined us after about 20 minutes.\n\n\"Well she's asleep, David, and you could have told me she's expecting, you know, count yourself lucky I don't smack you across the back of your head! If you'd said something I'd never have let you take her back to that creepy horror-show; really, David, the very idea, I mean, what on earth were you thinking? She's dog-tired, poor thing, she had hardly any rest last night, and then the shock this morning, well...anyway, let her rest for a few hours, and you can take us out to dinner tonight as your penance for dropping her unprepared into that horrible place. In the meantime, breakfast is going to be a little sparse unless you'd like to pop over to the shops, Rosie...?\"\n\nRosie grinned and pulled Jimmy away from the table, 'to escort her' the hundred yards or so to the village grocery store. Sybil smiled after her, then turned to me when she and Jimmy had left.\n\n\"I'm glad she's met someone at last; after that idiot dumped her for that empty-headed so-called 'model', I thought the poor girl was never going out again. Young James seems suitably smitten with her...\"\n\nI heard the question in her voice, and tried to avoid answering it, umm'ing and ahh'ing like an idiot; Rosie's business was her business, and I wasn't going to stick my tuppence-worth in, no sir, been there, done that, got the scars...\n\nSybil smiled at my hedging.\n\n\"I know where she spent the night last night, Davey, I'm not senile yet, you know. What I want to know is whether or not this young man is just playing with her or he means to stick around.\"\n\nI thought I probably knew the answer to that one.\n\n\"Aunt Sybil, as far as I know Jimmy's sticking around; he works for me, well, Lori, and I couldn't help but notice that he can't seem to take his eyes off Rosie; that's all I can say, but it seems like a good start...\"\n\nSybil smiled and patted my hand.\n\n\"Then we'll leave it there; you have good instincts dear, just like your father, and your Uncle Jerry, so if you feel good about him, then so will I; Daddy was a Royal Marine, and he turned out just fine. James seems like a very nice young man. And speak of the devil...\"\n\nRosie and Jimmy came in just then, with eggs, bread, bacon, orange juice, the usual breakfast essentials, and the some letters, mostly for Sybil, but one for me, from Boston.\n\nI tore it open excitedly, and yes, it was from Sophie. I read it through, then grinned and passed it over to Sybil. She read it and smiled as well.\n\n\"How wonderful, darling, Lori will be so pleased.\"\n\nI was so pleased that nothing would do but that I had to run upstairs and wake her. She looked so angelic, so young and vulnerable lying there fast asleep, barely breathing, so I gently kissed her awake, licking her lips and giving her time to rouse.\n\n\"Davey, what...?\" she smiled blurrily, still more asleep than awake.\n\n\"Good news, baby-girl, great news. Sophie's coming, look at this!\"\n\nLori snatched the letter from me and quickly scanned it, tears brimming in her eyes, tears of happiness, her lips moving as she read through it again, then reached up for me and pulled me down for a quick kiss.\n\n\"Oh Davey, she's going to be here in just a few weeks, I can't believe it, it's only been a few days but I miss her so much, it feels like forever since I saw her last, now I can relax. She must have sent this right after we left; I knew we should have waited a few days...\"\n\nShe read through it one more time, then folded it and slid it under the pillow, smiling happily. I lay down next to her and wiped the tears off her cheek while she stroked my face.\n\n\"She's so much like mom, Davey, it's uncanny; everything about her screams \"mom!\" at me, it's like having mom back when she's around. Maybe I'm getting a second chance, a chance to have my mom back; if that's the case, I'm not going to let a second go to waste.\"\n\nI smiled and held her hand, and stroked her hair until she dropped off again, that happy smile still on her lips when I left.\n\nWe'd just made short work of breakfast when there came from outside the throb of an immensely powerful car. Rosie looked up and grinned.\n\n\"Looks like all the family's here today.\"\n\nThe sound of the back door opening was followed by a voice calling out.\n\n\"Rosie! Aunt Sybil? Anyone home? Come out, come out, wherever you are!\"\n\n\"In here, dears!\" called out Sybil, and two tall men, a little older than me, but with the Denham identity stamped all over them, tramped into the kitchen.\n\n\"Hello dears, pull up a pew,\" smiled Sybil. \"David, meet Richard, and the pretty one over there is Hugo Denham-Grant, Sophie's sons. Boys, this is your cousin, David Denham.\"\n\nThe two of them came over to shake hands, looking at me curiously.\n\n\"Hello David, Richard, pleased to meetcha.\" smiled Richard; his handshake was firm and definite, and I decided I liked him; he looked an awful lot like Uncle Richard, and a lot like my father, they both did. Hugo shook hands with me as well and gratefully accepted the mug of tea handed him by Rosie, tweaking her ear as he did.\n\n\"So you're the much-maligned David Denham, sole owner and proprietor of Hill House; Aunt Sybil says you had a run-in with Bella the Beast yesterday, sorry Rosie, I hope you gave her both barrels?\"\n\nI grinned back at his infectious grin.\n\n\"I certainly did; she came looking for a fight, instead she got an earful and an order to go away and stay away; I don't know why she persists in demanding that dreadful place; if she asked nicely I'd probably give it to her...\"\n\nHugo looked sideways at me at that.\n\n\"Chrissake don't do that, David! All that land? The first thing she and that arch-bitch Maude will do is sell it for re-development; that's been their plan all along; 50 acres of prime development land in the middle of a Green-Belt zone? She'll think Christmas has come early, and so will the other developers once the word gets out. I don't know if you've been keeping current with land prices in this part of the world, so let me clue you in; around here, one acre of development land with Outline Planning Consent is worth something under a million quid, that's why those two scheming harridans are so keen to get their hands on the place. Denham Hall and the village are out of the way and off the developer radar, I think we should keep it that way. I know there's no English Heritage listing on the place, even they think that eyesore has no historical, cultural, or architectural merit, so why don't you just tear it down and rebuild it the way you want?\"\n\nRichard was nodding as Hugo spoke.\n\n\"He's right, you know; once they've granted development access to Denham Hall, the rest of the area will follow; precedent will have been set, and the planning committee will bow to pressure from the developers. My advice is, leave it as it is, or pull it down and rebuild it, but don't sell up or give it away. Bella will probably drop dead soon, although I personally believe she'd survive an Apache attack, World War 3 and a direct meteorite strike, just like the cockroach she is. Maude doesn't have the brains to pull-off any schemes by herself; she's all ambition and no ability, she barely knows what day of the week it is on any given day. With Bella out of the way, Maude will have to try and marry those horrible daughters of hers into money.\"\n\nHe turned and saw Jimmy for the first time.\n\n\"I do apologise, I never saw you there, I was so fascinated meeting yet another Denham. I'm Richard, this is Hugo, you are...?\n\nJimmy grinned at his tone, and introduced himself. Richard noted the way Rosie slipped her arm through Jimmy's and winked at her before grinning at Jimmy. Just then Lori walked in.\n\n\"What's all the noise, baby, it woke me...oh!\"\n\nRichard and Hugo both spun and stared at her, while Lori blushed under their combined stares.\n\n\"Richard, Hugo, this is my wife, Lori. Lori, these are my cousins, Richard and Hugo, Uncle Richard's sons.\"\n\nThe brothers were looking sandbagged, and I couldn't blame them; Lori had elected to wear a figure-hugging top and her skin-tight leather jeans, complete with her silver-heeled cowboy boots, and she looked cute and wholesome, yet devastatingly sexy, like a Playboy centrefold before she starts the strip.\n\nLori came and stood next to me, her arms around my waist, looking from face to face and back at me.\n\n\"Davey, they look just like you; my God, they could be your big brothers...\" she breathed.\n\nRichard was the first to recover.\n\n\"Lori, hello, I'm Richard. Mother said you were...striking, she didn't say you were her double, I mean, look at you, bloody hell! Are you sure you're not our long-lost sister or something?\"\n\nLori grinned, her beautiful violet eyes sparkling as the two of them admired her. Hugo recovered himself enough to also greet her and shake hands, before turning to nudge his brother.\n\n\"And to think we've been working our way through Estonia's finest; maybe we should have followed David here to America if they grow them like that over there!\"\n\nLori blushed at the compliments, and giggled when Richard asked her if she had any sisters or cousins she was willing to sacrifice to the cause.\n\n\"Mother said you were from Iowa, methinks we'll shortly be finding we have important business to contract over there; who knows, maybe we'll find a couple of black-haired, blue-eyed Iowa knockouts of our own.\"\n\n\"I'm so glad I met you both,\" she laughed, \"Aunt Sophie was right, I think we're going to get along just fine; did you know David even has your names?\"\n\nThey both looked blank until Lori elucidated.\n\n\"David's full name is David Richard Hugo Denham; he was named after your father and his brother, just like you, so you see, he's a close part of you two as well; it's no wonder Aunt Sophie and Uncle Richard took such a liking to him!\"\n\nBoth men looked pleased, and Richard grinned at me.\n\n\"She's right you know; my middle name's David, after your father, I assume. Well, well! Now all we have to do is wait until Father and Mother return home, and the whole wedding thing can get into full swing. Mother said she's organising the whole thing; you have no idea what you've let yourselves in for; truly, may God have mercy on your souls...\"\n\nHugo decided to chime in.\n\n\"Mother also told us about the baby, congrats by the way, cousin, and I'd like to thank you both for turning up the heat and tightening the screws even further. Once Mother gets her hands on that baby, she's going to be relentless; I can see it now, both of us drugged, clubbed senseless, and chained to the altar while she marries each of us off to some knock-kneed, mouth-breathing, horsey-type called Brenda, or Susannah, or Lucinda, perish the thought, complete with bad skin, bad breath, buck-teeth, big feet, and reeking of saddle-soap and horse liniment, but from an impeccable family; the monastery might be a kinder fate...\"\n\nRichard was nodding in agreement, a big grin creasing his face.\n\n\"Three months ago Mother decided to do a little long-distance matchmaking with some random friend's daughter, and suddenly I'm fielding this girl, name of Tallulah Bartlett-DeVere, a made-up name if I ever heard one, who looked exactly like she'd been cursed by the 'My Little Pony' fairy. I kid you not, I've never had anyone look at me with their teeth before; the girl had so many teeth her mouth was jammed permanently open; it was frightening, like staring at a bloody marble cemetery. I swear to God, if she ever manages to close her mouth fully she's going to bite herself in the forehead! Really, if I wanted a wife who reeked permanently of horses I'd marry some steppe nomad, not Tallulah and her teeth. No, I think I'll stick to Ukrainian so-called models for now; at least they'll happily hitch their knickers back up, accept a Chanel goodie-bag, and bugger off into the sunset, never to be seen again!\"\n\nLori, Rosie, and Sybil were laughing helplessly by the time they'd finished. I was frankly astonished at how quickly and easily I'd slipped into this side of my family; Richard and Hugo were bantering and ribbing us as though we'd known them all our lives, and I was glad Lori had met them; they really were the better side of the Denham clan. Her obvious attachment to Sophie was working for her; the boys obviously adored their mother, and so they were completely taken with her, finally ending-up preparing to arm wrestle to see who got to be godfather of the baby...\n\nLori broke that up by averring that as it would be impossible and unfair to choose between them, both of them would be godfathers, earning a pleased hug from both of them. One day, I'd ask Aunt Sophie's permission to tell them just how closely related to me they actually were; that Uncle Richard was my father's half-brother, even though he was supposedly unaware of that fact, which made the two of them my first-cousins, along with Rosie absolutely the closest family I had (after Lori, of course, but I was never going to reveal that particular fact to anyone...)\n\nDuring my conversation with my cousins the fact that we were house-hunting came up, and Richard had the number of an Estate Agent who he actually trusted, the man who'd arranged the purchase of his own house. Lori was adamant that she wanted to live near Sophie and Aunt Sybil, as she was going to need all the help she could get, but Richard didn't think that was a problem.\n\n\"This guy has properties all over the county, so he's bound to have a few near where the parents are going to be living, just give him a call, go and see him, and give him your wish-list; if he hasn't got the place you want on his books, he'll find it and persuade the owners to sell; I promise you, he's that good.\"\n\nWe sat around for a while longer, chatting about Lori's parents, both the boys offering her their condolences when they heard about mother and Charlie's passing. Both Lori and I had to tread carefully so as not to tip them off about our actual relationship, instead giving them the cover story we'd prepared, that Lori was a school friend and former girlfriend I'd met again while in Iowa for mother's funeral; it was a thin story, with more holes than an Agatha Christie murder mystery, and Richard gave me a very old-fashioned look when I sidestepped some of his questions about mother and my step-father, but it got me off the subject, much to my relief.\n\nHugo was curious what we'd do with Denham Hall, and I confessed I was stumped; I wanted to pull the creepy eyesore down and maybe build holiday cottages or something, anything to keep the developers at bay, but Lori was unconvinced; in her opinion, the place had stood for over 300 years, it deserved to stay up and in place, if only to serve as a reminder and an object lesson for future generations on how not to build a country retreat...\n\nHugo eventually took Jimmy aside and gave him some locations where Lori might want to start looking for her dream house while Richard teased and ribbed Rosie about her new man, the teasing revealing just how fond of her he really was; Rosie had been my best friend when I was small, almost like a sister, we were both roughly the same age, and that bond had started to re-establish over the last day or so. In light of what Sybil had told us about her former fianc\u00e9e, I was glad to see she and Jimmy were becoming closer and more attached with every passing hour; the attraction between them was plain and obvious, and I was pleased for her.\n\nEventually, the brothers had to leave; they both had business to attend to in London they'd delayed in order that they could meet Lori and me, which I appreciated, and so, with hugs for Lori and Rosie, a handshake for Jimmy and me, and a kiss for Aunt Sybil, they left us to our own devices.\n\nNow that Jimmy had a list of places that should yield some interesting properties, as well as details of Richard's pet realtor, we had some calls to make; I to let St. Giles Hospital know I'd be back on staff from the following day, and Lori to make an appointment to see the realtor and start plotting-out her assault on the Oxfordshire property market. I noticed she was looking tired after making her call, and I was certainly feeling the effects of a good breakfast after a disturbed night with little actual rest, so Rosie captured Jimmy to take him around and show him some of the local sights (and possibly the inside of a haystack or two...) while Lori and I retired to catch up on a little sleep.\n\nIn fact, though, tired as I was, sleep was the last thing on my mind; the sight of Lori in that clingy top and those skin-tight leather jeans outlining every wondrous curve of her spectacular arse was giving me ideas far above their station, and I was feeling the need for a little one-on-one with my beautiful wife.\n\nLori seemed to be feeling the same way; her walk had an additional sway, her hips had a little extra tilt to them, and her lovely bum cheeks seemed just that little bit more pouty, and when I tore my eyes away from them, it was to meet her frank gaze as she caught me ogling all her lovely, juicy, wobbly bits.\n\n\"No prizes for guessing what you want, Darling Boy...\" she grinned, making me grin in turn at her use of mother's favourite name for me. I reached for her and pulled her closer, sticking my tongue in her ear to make her cringe and giggle while I squeezed those taut cheeks through the glove leather of her jeans.\n\n\"Bedtime, Mrs. Loretta Denham, I prescribe a couple of injections to help you sleep, I think I should administer them as soon as possible...\" I breathed in her ear, Lori undulating against me the whole time.\n\n\"Why Doctor Denham, you aren't planning on seducing l'il 'ole me, are you? I'll have you know, I'm a respectable married woman!\" she smiled back, her voice that sexy, breathy whisper guaranteed to turn me into a walking erection in a blink of an eye. She obviously felt it, grinding her mons pubis against the suddenly unruly bulge in my trousers as she licked and lightly kissed my lips, teasing me with her nearness.\n\n\"Land sakes, Doctor Denham, is that a stethoscope in your pocket, or do you just have a big ole hard-on for me?\" she husked, grabbing and gently squeezing my balls as she rubbed her lovely bubblies against my chest; I could feel her stiff nipples through the material of her top and my shirt, so I knew she was building a head of steam, if all went well she'd pop that particular cork while I was in the saddle, a thought that made me hustle her upstairs as fast as we could; suddenly I had a burning urge to strip my girl and jam something hot, stiff and friendly inside her, and I knew she wouldn't be too particular about where, that was for certain.",
        "Sybil had given us the end bedroom, conveniently situated at the opposite end of the L-shaped house from her own, so we had reasonable privacy; the bedroom door was thick, heavy oak, adding even more sound-proofing, which was useful, given Lori's propensity for screaming out my name (and other things) while in the throes of passion...\n\nEven as I was shutting the door behind me, Lori was attacking my shirt, popping the buttons while I unbuckled and dropped my slacks. Lori got tired of trying to pop my shirt buttons, resorting to yanking my shirt over my head and throwing it behind her as her hand dived inside my shorts to find and squeeze her favourite plaything.\n\nMy hands were equally busy, fumbling with the button and zipper of her leather jeans, popping the waistband then sliding inside to cup and squeeze her warm satiny backside. I raised an eyebrow and grinned at her when I discovered she wasn't wearing a thong, as I'd assumed, or indeed panties of any description, my cock stiffening even further at the thought of her being commando while surrounded by family and friends...\n\nI spun her round and slid my hands up under her top to squeeze and tease her lovely firm puppies, her nipples stiff and straining under my fingers. Lori groaned as I squeezed them lightly, making them even more stiff, it that were possible.\n\n\"God, yes, Davey, that's so nice, do it some more, gently, baby, ooohhh...yess...\" she murmured, pushing her jeans down so she could press her firm, tight, curvaceous, wonderfully womanly bum into my groin, trapping my cock in the cleft between her cheeks; no flat-as-a- teenage boy bum for me, if I wanted a girl with no curves I'd be dating a stick insect, not this scenic, sexy, perfect specimen of mature femininity I was married to!\n\n\"Like that, baby?\" she murmured, and as I licked her ear in affirmation, she reached back and slid my shorts half way down my thighs, freeing my cock to press between her naked cheeks, then once again doing that slow rise and fall she did so well, masturbating me between the cheeks of her beautiful arse.\n\nI can only take so much of her teasing me like this; I can never let go of the fact that she's an amazingly beautiful woman, and the knowledge that she's mine has a powerful aphrodisiac effect on me, so any teasing and foreplay she indulges in first time round is of necessity going to be short-lived, and what she was doing right now was yanking my testosterone levels up to eardrum-bursting levels.\n\nI enjoyed the feel of her muscular bum massaging and rubbing my cock as she slid up and down against me, but human flesh has its limits, and when it comes to Lori, I have a fairly low threshold of foreplay before I have to shove myself into her and fuck her like a wild man, something she knows all too well.\n\nShe could feel my cock twitching as my own level of arousal climbed, and just when I thought I reached the point where I was going to have to yank her jeans all the way off and plough into her, she spun round and dropped to her knees, taking my cock into her mouth and licking the end while simultaneously jabbing a sharp fingernail momentarily into my perineum; that pulled me back from the brink, believe me! So now she'd pulled me back from the edge, she concentrated on taking me there again, her mouth a warm wet delight as she sucked and licked me expertly.\n\nMy knees were trembling with the effort of holding me upright; while I wanted this delightful torture to continue, I also wanted to slip between her smooth thighs and bury myself deep in her most secret places; I wanted to fuck her so badly right then it was untrue, and Lori knew exactly what she was doing as she built me up to a fever pitch.\n\nAt last, her hot, wet mouth pulled away from me, and she looked up at me, winking as she grinned.\n\n\"That should guarantee some fireworks, Darling Boy, happy now? Now, will you please just fuck me really hard, Davey, I need my beauty sleep and I like the way you tranquilise me, so get to it...\"\n\nTo hear is to obey, and as we were already mostly naked, kicking off what was left was the work of a moment, saving me time that I could profitably spend sticking bits of me into conveniently shaped bits of her. As I dragged her down on top of me, Lori grinned and rubbed noses with me.\n\n\"Three months ago you'd almost forgotten about me, I was just the scrawny kid sister you abandoned, and now you've married me, dragged me half a world away from my home, knocked me up, and scared the living shit out of me; I think I'll keep you, you make life interesting, Denham, I'll give you that.\"\n\nI responded by grabbing hold of her spectacular buttocks and pulling them apart as I ground my steely cock against her damp pussy, at the same time slipping a finger into her tight little rusty bullet-hole, the sensation making her gasp lightly, then smile knowingly at me with one eyebrow raised, doing a perfect 'Charlie' at me.\n\n\"I didn't abandon you, wench; I asked about you every time I called for eight years, and you always refused to speak to me, or has that just slipped your extremely selective memory? Anyhoo, you wanted to get knocked-up, remember? I was just happy to be of service. As for the scaring, sorry about that, but now perhaps you finally understand why I loathe and avoid that decrepit dump!\"\n\nLori grinned at that, and ground herself against me, the feel of her hot, wet labia against the underside of my cock doing all sorts of things to my head. Lori saw the blissed-out expression on my face and grinned again, her amazing violet eyes sparkling with humour, happiness, and a good helping of sheer, unbridled, 'fuck me now' animal lust.\n\nShe ground against me a couple more times, just to make sure I got the message, then sat upright as she straddled me, lifting up to slide me into her succulent wet peach of a pussy, the feeling as she tightened around me making me twitch and almost blow my balls there and then.\n\n\"Like that, baby?\" she cooed, leaning down to lick my lips and pulling away with a grin as I tried to kiss her back, so I had to content myself with holding and gently squeezing her beautiful breasts and outstandingly stiff nipples. As soon as I squeezed them her eyes widened, and I realised they were starting to become sensitive, so I stopped, instead sliding my hands down her torso to hold and squeeze her taut cheeks instead, my hands revelling in the silky smooth taut, rounded firmness of her delightful bottom.\n\nThe perfectly sculpted hillocks of horniness fitted my hands as though made for me, and in my mind they were, everything about her conforming perfectly to my ideal of Goddess/Wife/Female Perfection/Woman of My Dreams, all reinforced by those two firm, muscular handfuls flexing and straining as she writhed and ground on top of me.\n\nLori began to pump a little faster against me, her pussy squeezing me rhythmically now, and that tell-tale pink flush creeping down her throat and spreading across her chest and shoulders told me she was close, only a little more would push her over the edge, so I gave her some assistance.\n\nAs she ground against me, I began pumping back up to meet her thrusts, her eyes closing as orgasm hovered in the wings, her hips moving even faster now as she ground and gyrated above me, gasping every time I pumped back up as she ground down on me.\n\nHer orgasm hit her like a body-blow, her eyes squeezing shut as her whole body shuddered and trembled on me, her thighs locking against my midriff as her hands cupped and massaged her breasts. I could feel the waves of her orgasm as they pulsed and battered through her, every least sensation transmitted down into my body and calling to me to join her; how I held off I don't know; even my stock selection of repulsive mental images kept in reserve to slow or push orgasm back, (images of Margaret Thatcher, Idi Amin naked, Hilary Clinton in a micro-bikini, Colonel Gadaffi puckering up for a kiss) weren't working too well, and I resorted to gritting my teeth and mentally reciting the bones of the skeleton to try and take my mind off the sight of all that feminine gorgeousness trembling and gasping above me.\n\nIt worked, and as Lori slumped down on top of me, heart hammering and her body twitching as mini-shocks rolled and rippled through her, I still hadn't succumbed to my own orgasm, but I had a plan to fix that! Lori eventually raised herself up again to look at me, her face and neck still flushed so adorably, sexily, from her recent orgasm.\n\n\"What about you baby, what's wrong, you didn't...?\"\n\nI grinned at her and licked her chin as I playfully pulled her bum cheeks apart, pulling her anus open.\n\n\"Ooooh, naughty!\" she squeaked, and grinned down at me, \"I know what you want, you dirty little beast, how can I stop you, I'm completely under the spell of your big ole pussy-hammer, Doctor Denham! Daddy warned me there'd be days like this, I should have listened to him...\" she lisped at me, making me grin even wider.\n\nLori sat up on me, her pussy squeezing and pulsing around my cock, still embedded to the hilt in her tight wet succulence, and raised up higher to allow me to slide out and lie along my belly, glistening wetly. Now she leaned back down and kissed me, then seemed to think about it, and kissed me again, then again, until our lips were locked together, our tongues fencing and twining around each other's. My hands squeezed and massaged her tight bum, pulling her cheeks open while she slid a finger alternately along the wet crease of her pussy and slid it into the tight little knot of her anus. While she was lubricating her tight hole, I kept hold of her bum cheeks, pulling them apart to stretch her as she carefully lubricated herself with her own copious juices.\n\nWhen she was ready, Lori again sat upright, and raised herself up slightly, and taking hold of my by now bone-hard cock, rubbed the lubricant seeping from me over her pussy before once more impaling herself on me, but I knew she was just lubricating me. She once again rose up, allowing me to slide out of her, and, holding me steady against her tight little bum-hole, slowly slid me into her. Her eyes widened as my girth stretched her anus open, the head pressing against her ring. A few seconds of pressure, and suddenly I \"popped\" in past the ring, Lori giving a gasping yelp as I did so, then slowly slid into the depths of her taut, muscular bum as she finished impaling herself on me.\n\n\"Christ, Davey!\" she gasped, \"I thought I told you to stop feeding this thing, that was a real effort, whoo!\" she grinned, leaning down to lightly lick my lips.\n\n\"I told you, Princess, I only feed him blue-eyed Iowa brunettes.\" I grinned, and Lori grinned at that.\n\n\"Then he's getting too much exercise, the boy is definitely bulking-up...\" she grinned, and reached behind herself to gently squeeze my balls, sending a sudden zing of pleasure through me.\n\nOnce she'd adjusted to my size, she began slowly pumping herself on me again, squeezing me rhythmically with her rectal muscles while she rocked back and forth on top of me. I reached for her delectable breasts and, remembering her earlier sensitivity, stroked her nipples with fine, feather-like strokes, making her gasp and smile as her nipples stood up stiff and proud, and noticeable darker than before, the coral pinkness now tinged a deeper red; she was becoming a mother, and the thought stiffened me even further.\n\nLori noticed my increased arousal, her eyes widening as I took hold even faster in her tight passage, filling her even more. The sight of her gyrating above me, the feel of her deliciously stiff nipples against my questing fingers, all combined to push me higher and higher with each passing second. Once again that flush spread down her neck and throat, telling me that my girl was close, and when she leaned down and glued her lips to mine as my hands took hold of her glorious bum, I couldn't hold back any longer.\n\nMy cock wedged tight inside her rectum as it began twitching and convulsing, hosing what felt like endless jets of boiling hot spunk deep into the heart of her as her rectum squeezed me tightly, like a hand rippling along my entire length. Lori squealed as she came hard, the feel of her cervix fluttering inside her and beating against my cock as it lay embedded in her rectal passage sending me off in another frenzied volley of spraying spunk as I came like never before, the spunk bolting out of me in what felt like a never ending series of convulsions.\n\nAt last I had no more spunk to give her, the torrent of sperm finally ending as little more than a sticky trickle as my body gave up my last reserves of semen for her. Lori slumped back down on me, her heart thundering with the force of her orgasm, and my hands just naturally dropped back down to her perfect bum, holding her against me until her storm passed and her heartbeat slowed to a more normal tempo.\n\nAs my cock relaxed, it finally slipped out of her, and I rolled over onto my side, taking her with me, so we were now lying face-to-face on our sides, my arms around her. Lori looked up into my eyes, and, somewhat blearily, grinned up at me.\n\n\"That was wonderful, Darling Boy; I knew I made the right choice! I was only kidding earlier when I said you'd abandoned me; I know you didn't, you just had to go so you could be you, and I'm so happy you came back, even if we had to lose mom and daddy to find each other. I love you, baby, I love this baby you've given me, and we're going to have lots more, here, surrounded by family, our family. She's coming home, baby, she's so much like mom, I feel like I'm getting mom back, I'm so happy!\"\n\nShe smiled happily, more tears gathering in the corners of her eyes, tears I was happy to lick away for her, making her giggle. I went to kiss her again, but she put her finger to my lips.\n\n\"When you left, after that whole scene at Des Moines International, mom was like a zombie for weeks; every time she looked at your picture she'd start crying, and daddy was no better; he took all the pictures of you and put them in his study so mom wouldn't have to see them all the time, then he'd shut himself away in there for hours on end, and sometimes I'd peek in and he'd be sitting there staring into space with tears running down his cheeks; they both missed you so much.\"\n\nShe paused, her glorious eyes distant as she looked back over the last few months.\n\n\"I'm sorry you weren't here when daddy died, Davey, it wasn't your fault, you weren't to know he had a bad heart, he never told any of us, one day he was here, the next he was gone, just like that.\"\n\nShe looked deep into my eyes, and tapped me gently on the tip of my nose, a smile fluttering on her lips even as her beautiful eyes sparkled with more unshed tears.\n\n\"He was so proud of you, Davey, never forget that, proud of the fact that you'd gone out into the world to be who you were supposed to be; he admired that, he said you were just like your daddy, and he knew you'd succeed. Mom was okay with it all after a while, she even took your pictures from the study and put them back out around the house. I made a mess of it, though, Davey, I handled it really badly.\"\n\nI went to interrupt her, not really needing to know any of this now, not now that we were together, married, and starting a family, but Lori waved me back to silence.\n\n\"I need to tell you this, Davey, I should have right from the start, but I guess with the funerals, then moving to Maine, it all kinda got lost in the shuffle. So here goes. I missed you so much every day, it was like someone was boring a hole through the middle of me. Every time I saw your picture it was like another sharp little stab inside me, and it got worse every day; I never knew how much I needed you until you were gone, and when you never came back, I got angry, then angrier.\"\n\nShe paused, obviously gathering her thoughts.\n\n\"It didn't help that you were more and more gorgeous every time I saw a new picture of you, even though I always thought you were gorgeous; it all made sense to me when I saw that picture you sent daddy, of you with your rowing team at school; it all clicked into place then; I was thirteen, and I realised I was in love with my big brother, I always had been, and it repulsed me; I honestly thought I was some kind of sick pervert, to be feeling like that about my own big brother, but try as I might, I couldn't get it to go away. Over the years, I dated, I had boyfriends, but none of them were you, and I couldn't bring myself to try and pretend any of them was you. When you finally did come home, and I met you at the airport, twenty-four years old and already a qualified doctor, you looked so lost, so apprehensive, so scared, but so damned beautiful, all I wanted to do was kiss you madly and tell you how I felt, but that guilt was still there, and all that anger, too.\"\n\nShe stopped to wipe her eyes and kiss me gently,\n\n\"Mom knew, or guessed, how I felt, she even sat down with me once and tried to talk to me about it, and I didn't want to listen to what she had to say, but she told me anyway. She said that these things have a way of working themselves out, and that whatever happened, she'd always be there for me. That was the end of the conversation, but I guess what I'm trying to say is, I don't think mom would have been an enemy, you know what I mean?\"\n\nShe smiled gently, a faraway expression on her face.\n\n\"And now Sophie's dropped into the picture, and she's so much like mom, the way she thinks, the way she expresses herself, I really do feel like mom's come back. Now it feels like I'm getting a second chance to share with her what she wanted most of all; for me to be happy. Mom died knowing how unhappy I was, and she couldn't do anything about it, and I will carry that guilt around forever, that I wouldn't let her in far enough to try and help me, because I was still ashamed of how I felt about you.\n\nShe paused to knuckle her eyes, before continuing.\n\n\"All that time we spent at the house in Bar Harbor, before that night, all that crying I was doing, most of it was me crying over you as I convinced myself that I was never going to have what I wanted most of all; to be owned and wanted by you the way the way I wanted to own you, to have your heart for myself forever. I just wanted you to know all this Davey, I need you to know that you were always the only man I ever wanted, that it was you that healed that great big wound in my heart, and that I've been in love with you since I was five years old.\"\n\nTwo tears escaped and ran down her cheeks, tears I gladly wiped away for her. Lori reached up and gently tapped the end of my chin.\n\n\"I was always yours, Darling Boy, but getting you to see that was the hardest thing I ever did in my life; stripping off and seducing you didn't come easy, but I guess I thought if I didn't do it while I had you to myself, eventually you'd leave and I'd be stuck in limbo forever, pining for you, and unable to want anyone else.\"\n\nShe paused, another tear slowly running down her cheek.\n\n\"All those things we did, all the stuff I did with you, it was the first time for me; I only knew how to do what we did from watching porn movies with my girlfriends. You were my first, Davey, I only ever wanted you, and there was no-one else I was ever going to be with, only you.\n\nI looked at her in consternation; I'd taken her virginity! How could I have been so crass? I'd just assumed she was...experienced, that was the impression she gave me...\n\n\"Baby-girl, I'm sorry, I didn't know...\" I began, but she cut me off.\n\n\"You weren't supposed to know, baby, that was the whole point; I hoped you'd think I was looking for fun only, and you'd have no guilt when you left me again, and hopefully I'd be pregnant. You weren't supposed to fall in love with me, I never seriously planned for that to happen, I never thought it could, even though I'd been hoping for that very thing since I was thirteen years old!\"",
        "I was intrigued, in spite of myself.\n\n\"So that business with the no-underwear and stripping off in the sitting room, that was all an act?\"\n\nLori smiled wistfully.\n\n\"I know I came on like some slutty adventuress, all that stuff about my adventures and not exactly being pure as the driven snow, I thought that was what you wanted, that you were a man of the world, that you'd been places; you lived in one of the greatest cities in the world, you were a sophisticate. How could you ever be interested in a small-town corn-country girl, so I invented Lori the Slut, the worldly Tramp with a Mission, just for you, and you bought it, but I never thought you'd fall in love with me. I only wanted to seduce you, to have you just the once, so I could at least have your baby when you left me again. So now you know; falling into bed with you back in Maine wasn't some passing attraction, or just the need of the moment, it was all part of my cunning, Lex Luthor-like plot to get you in thrall to me forever, or at least long enough for me to catch your baby!\"\n\nI grinned at that, Lori grinning back at me through her tears, her glorious deep-blue eyes windows into her soul indeed, and all I saw in there was love for me, and the absolute truth as she opened her heart to me. I smiled again as I kissed her gently, pulling her closer to me to feel her wondrous body pressed tightly to mine.\n\n\"Lori, baby-girl, that first night we were together, that's when I finally knew I'd always loved you, too.\" I said, kissing and nibbling her lips as I spoke. \"You may have sprung a trap on me, but I walked into it with my eyes wide-open, and I was never so glad to be caught in my entire life. I'm glad you decided to share your life with me, because I couldn't have one without you; I love you, Loretta Cavenham Keene-Denham!\"\n\nLori smiled happily, and snuggled down against me, her arm around my waist as she held herself against me. Her breathing gradually slowed and deepened as she fell asleep again with a small smile on her lips. I was tired, but not sleepy, so, after a short internal debate, slid out of bed and padded down the corridor to the bathroom to have a shower, which, considering what we'd been doing, was probably a good idea. The hot water calmed and relaxed me, and once I was dried off properly, I set my alarm for 6:30 that evening and slid back into bed for a few hours of proper, restful sleep with the most beautiful girl in the world.\n\nDinner was an enjoyable and relaxing time with my family, something I'd almost forgotten in all the loss and major upheavals in our lives over the last few months. Lori had been hesitant about going out in public, in case someone tipped-off the tabloids where the \"Unknown American Beauty!\" was laying low, but Sybil put her mind at ease on that score.\n\n\"Darling, the people in this village have no wish to play host to the maggots from the media, they have quite enough of that over in Chipping Norton, where all those dreadful people congregate like some sort of cult, pricing the locals out of the area, building vulgar, 'Tudor-style' mansions with swimming pools, private cinema's, bowling alleys and helipads, cavorting around naked in hot-tubs, and generally behaving as though having excessive, un-earned wealth is somehow a license to behave like pigs at a trough, so no-one here is going to let slip even a whisper to the press that the mystery American girl who floored that talentless little tick is anywhere in the vicinity, I can assure you.\"\n\nHer breezy confidence buoyed Lori up, and dismissed any misgivings she may have had; also, Jimmy was going to be there, and Rosie had given him permission to get creative with anyone who tried to disturb our dinner...\n\nSybil was right; the locals studiously avoided giving Lori more than a passing glance and a nodded greeting, and while there was a certain amount of competition between the waiters to get to serve her, as she was looking outstandingly good in a slinky black minidress and teetering heels, there was none of that nonsense that had marred our last evening out in London.\n\nAfter dinner we adjourned for drinks to the pub across the street from the restaurant, a lovely old half-timbered building dating from the 1630's, where the locals were bewitched by Lori's accent and her appreciation of good beer and a good dirty joke.\n\nJimmy fell in with several old squaddies from the Royal Marines, men who'd fought in Korea, Malaya, Suez, and Kenya, and spent most of the evening swapping soldier stories with the old war-horses of the village. By the time we left, we were locals, part of the village, although Lori was the subject of a certain amount of surreptitious ogling from some of the younger men of the village, something she took in her stride, and no-one overstepped any bounds, so we had a very pleasant and convivial evening.\n\nBy the time we walked back to my aunt's house, I was definitely feeling the urge; Lori had been giving me secret little smiles and lingering looks all evening, and walking beside her in the late evening cool, our hips bumping as we walked, all I could smell was her, that lovely Christmassy scent that only I seemed to be able to smell, spicy and sweet, like nutmeg and mace, and candied fruit, with tones of spun sugar and vanilla, and it was driving me mad. Lori knew my moods, she could almost read my mind, and she knew I was building up to a major ravishment assault. Her knowing grin and seductive sway to her hips did nothing to damp me down either...\n\nWhen we got back indoors, Lori and I declined the offer of a nightcap, pleading tiredness. Aunt Sybil didn't look in the least bit convinced, and with Rosie winking at me behind her mother's back, it was all we could do to keep our faces straight as we said our goodnights and made our way to our room. As soon as I closed the door, Lori slid her arms around my neck and kissed me long, slow, and meaningfully, and if I wasn't at full-stretch before, I certainly was now.\n\n\"Darling Boy, your family are wonderful; your aunt is just the loveliest lady alive, Rosie is a complete peach, and the boys are adorable, and they look just like you, all major plus points, baby. I'm so glad I'm a Denham now!\"\n\nI was glad too, especially as my hands had somehow found themselves firmly parked on her beauteous backside, and it was no hardship at all from me to grab hold and pull her against my throbbing erection, nibbling on her neck and smooth throat as I did so. Lori in turn rubbed her mound firmly against me, obviously as ready for me as I was for her, and stepped away from me for a second to shrug out of her clinging dress and stand before me, smiling invitingly, dressed in just her heels and wispy panties, a tiny little lace confection expressly designed to be ripped-off, hopefully with my teeth...\n\nAs I drank her in all over again, she deftly unbuckled my belt and undid my trousers, allowing me to kick them of as she tugged my shirt over my head and dropped it on the floor, smiling as I hurriedly tugged off my shoes and socks, just my tented briefs remaining, all that stood between me and my deeply fuckable sister-wife. Lori moved back in for the kill, one arm around my neck as she kissed me like an amorous cyclone, sucking the breath and mental acuity out of me with one sandbag kiss, while the other hand dived inside the waistband of my briefs to squeeze my straining cock, sending and electric tingle up my front, down my back and across the floor. My own hands zeroed-in on their favourite target, her firm, globular, quivering arse, the globes of her cheeks feeling just right after an evening of aching to get my hands round them and my tongue up between them.\n\nAs I groped her bum, I edged her backwards, until we collapsed onto the bed, with me on top of her. Lori giggled as my stiff cock nudged her pussy, and then gasped as I deliberately rubbed against her again.\n\n\"Oh yes, thank you sir, please may I have another!\" she giggled, then moaned as I deliberately rubbed myself against her as hard as I could, scraping my cock across her panty-clad pussy.\n\n\"Now you've started something, you dirty, dirty boy, so you better finish it...\" she giggled softly as she nibbled my ear. I was already contemplating an extended assault on all her juicy, jiggly bits, but Lori brought me up short.\n\n\"Not too much fun and games, stud, not tonight; you have to be out of here at 7 o'clock tomorrow morning and be back at the hospital all fresh, eager and raring to go, with your happy, shiny morning face, not looking like you just dragged yourself out of the Whore-Pits of Babylon, so take it easy; I'll be here when you get back, and every evening, I promise.\"\n\nHaving said her piece, she grabbed my piece, so I retaliated by slipping my fingers into the warm crease of her bum and tickling her cute little rosebud. Lori jumped as she tried not to shriek, which was my cue to yank her panties off and slide down the bed to munch a while on my favourite sweet treat, her delicious little pussy. Lori purred like a cat as I lapped at her smooth outer lips, jumping and twitching as I skimmed over her hooded clitoris, a small smile playing on her lips as she realised I'd be back there shortly, after I'd shoved my tongue in some intriguingly tasty places!\n\nAs I kissed and gently lapped at her, I wallowed in her essence; that lovely, spicy, musky, almost gingerbread aroma that she has that makes me think of Christmas, and holidays, and fruitcakes and spices; my girl really was the most delicious sweet-treat, and I could eat her for hours. Lori however, had other ideas.\n\nAs I licked at her labia, she wriggled until her pussy was almost flat against my mouth, so of course, I bored-in, prising her labia apart to slip my tongue into her. As I did, I felt her labia swelling as she responded to what I was doing, her rich smell intensifying as her excitement rose, driving me even deeper into her. By now, Lori was mewing softly as she tried to push her clitoris near my insistent tongue, and I'd deliberately resisted doing just that to push her even higher; now she was where I wanted her to be.\n\nHer thighs spread wider as I moved up, sliding my hands under her to cup and squeeze her fabulous bum cheeks, the muscles flexing as she slowly rubbed her pussy against my mouth, my tongue probing and licking her, with her eyes closed and her lower lip trembling as she hovered on the brink of orgasm. At last, I couldn't stand it any longer, and licked and sucked her hard little clitoris, rubbing the stiff little pearl with my tongue, wallowing in the flood of sweetly fragrant juices that poured from her as I ate her pussy.\n\nI went back to pushing my tongue into her, licking her inner lips, enjoying the taste of her, until, as I rubbed her clitoris with the pad of my thumb, I pushed my tongue deep into her tight little anus.\n\nLori screamed as she came, a flood of her juices pouring over my mouth and chin as she threshed under me, her anus twitching in concert with her convulsing pussy as her orgasm blazed and battered its way through her. I held her as she gradually came down from that place, nibbling her throat and neck as she murmured and twitched against me, kissing her soft lips, and lightly running my tongue around her areolas to avoid scratching her sensitive nipples. Lori gradually began responding, her hands fluttering over my body, eventually rediscovering my throbbing cock.\n\n\"Oooh yes, I remember this!\" she breathed, squeezing and fisting my shaft, setting the crown tingling with my sudden and urgent need to fuck her.\n\n\"Your turn, Davey!\" she grinned, looking up at me as she slid her hands around my neck, her legs drifting open as I lowered myself onto my elbows. Lori reached down to find and aim me properly, rubbing the head slowly over her sopping wet pussy, the heat making me even more desperate to be inside her. At last she had me aimed where she wanted me, and I slowly slid myself into my darling wife. Lori gasped as I stretched her open once again.\n\nWe humped and hammered at each other for what seemed like hours; I was desperate to come, but also wanted this to last; I love making love to her, I love the feel of her as she melts against me, I love the wet, slippery heat, I love the feel of her soft, supple skin as she thrusts and strains against me, and I loved the unhallowed thrill of fucking my sister after making her my wife!\n\nAs we hammered and pounded, Lori abruptly stopped, and just as suddenly pushed me away.\n\n\"No, Davey, no...wait...not like this...\"\n\nI pulled back in surprise, then grinned as she draped her knees over my shoulders so she was bent nearly double, both her tight little holes clearly on display.\n\n\"Take your pick, baby; dealer's choice!\" she grinned, her eyebrow raising as I pushed forward and pressed my cockhead against her tight little back door.\n\n\"I should have known!\" she grinned, pulling her cheeks apart to stretch her hole open. I slipped into her pussy again, taking a couple of strokes to lubricate myself, then withdrew and pushed against her anal entrance.\n\nI slid into her in one easy, slow glide, Lori gasping as she encouraged me.\n\n\"That's...that's it, baby, oooh yess, like that, like that...yess...\" she muttered as I slid all the way into her depths.\n\nOnce I was all the way in, I paused to let her get her breath. Once she signalled she was ready, I began that slow in and out she loved so much (and me, too!), pumping her arse full of my cock as we humped and hammered each other once again, this time fucking my sister/wife in such a depraved but immensely enjoyable way.\n\nNow that I knew her secret sexual history (that before I'd come home she'd never actually had one) I could reflect that on the fact that my own experience of anal sex, while limited to a few scattered occasions with fellow medical students and nurses who'd felt like taking a walk up the Hershey Highway with me, was actually far more extensive than hers; she'd led me to believe she'd seen and done everything, so I'd have no compunction about falling into bed with her; the reality was that everything she knew was what she'd seen on the screen, but I like to think I'd since provided her with an enhanced post-graduate experience of the act since then.\n\nWhile a small part of my mind (a VERY small part; Lori usually managed to occupy all my available head-space) thought about what we were doing, the rest of me was enjoying with deep gusto what we were doing. The sight of my gorgeous sister, her glorious eyes shut tight and her lip caught between her teeth as she hunched her pelvis up to take me all the way in every time I plunged down into her, the feel of her tight anus clamped around my thrusting cock, the sight of her midnight hair spread across the pillows in a fragrant filigree of fine strands, her firm, protruding breasts and straining nipples, all combined into one immensely horny whole; it was only by sheer willpower that I didn't just empty myself into her and slump down like a dead man.\n\nTo make it even better, rounding-off the sensory feast, as it were, her delightful, warm, spicy, sweet scent surrounded and covered me, telling me, as if I needed to be reminded, just who it was who was here with me, loving me so completely and so well.\n\nLori came first, a hissing groan escaping from her as her anus tightened in sympathy with her convulsing pussy, the sight, sound, and feel of my sister/wife, her anus gripping me so tightly as she came, all these sensations at once were too much for me, tipping me over the edge. I came with something between a groan and a shout of delight as my spunk burst out of me, the rippling of her tight rectum milking me like a tightly squeezing fist, dragging the spunk out me in long, satisfying spurts to paint and drench her insides.\n\nThe feel of me spraying her bowels with my sperm set her off again, and once again orgasm gripped her in a wave of pleasure, making her grit her teeth as her body hummed and quivered with the sensations rocketing around inside her.\n\nI finally emptied out, slumping down beside her and pulling her close with what was probably the last shreds of strength left in my body. As I kissed her, her eyes were already closing in satisfied sleep, and I pulled the covers up over us, clamped my hands firmly around her lovely, pneumatic bum cheeks, and passed out, finally fucked to a standstill.\n\n*\n\nBright and early I was up and ready to venture back into the world of cardiothoracic medicine; I let Lori sleep on, she looked so adorable asleep, and if I'd disturbed her I'd have had to 'tranquilize' her all over again, and I just didn't have the strength...\n\nWhen I found my way back downstairs, there was Jimmy, also looking bright and shiny, waiting to take me into London; I thought there was a mistake, I'd only needed a lift to the nearest train station, where I'd be able to hop a commuter train to Marylebone, but apparently, Lori had given him explicit instructions to take me to Saint Giles, and pick me up again in the evening.\n\nSo off we went. As I was getting chauffeured in style, rather than cattle-trucking with the rest of the morning-misery crew on a commuter train into London, we were well ahead of schedule, so we stopped at a greasy spoon Jimmy knew and recommended and had an enormous full English breakfast, the kind of fry-up that would have infuriated Lori if she'd seen Jimmy and me shovelling it away. We tucked into bacon, sausage, mushrooms, fried eggs and fried bread like it was going out of fashion, all swilled down with Greasy-Spoon tea, stewed until it was red and almost thick enough to stand a spoon upright in; it's a wonder Jimmy's skin and mine wasn't bright red from all that tannin by the time we'd finished, but it was so good, just the thing to put the final polish on the morning.\n\nWhen I arrived at the hospital, Jimmy grinningly insisted on doing the whole 'Bowing The young Master Out Of The Car', family-retainer thing, and I went along with it just to wind-up the Senior Surgical Registrar, who was standing open-mouthed in the car-park watching as I stepped out of a chauffeured limousine and grandly swept past him. I stalked into the Surgical Assessment Unit with my nose in the air while Jimmy bowed and tugged his forelock like a good little chauffeur; oh, it was fun to slap that old snob as I ignored him completely!\n\nJimmy was picking me up that evening, as instructed by his boss (Lori), but his day until then was going to be fully occupied, ferrying Lori and Rosie around from place to place to view the properties Richard's pet realtor had fallen over himself to arrange, once he'd twigged that Lori had a full shopping list and absolutely no upper limit when it came to her dream home.\n\nI spent the day happily slipping back into the routine of rounds, surgical review boards, re-calendaring, and generally immersing myself once more in the role and responsibilities of the most junior surgeon on the cardiothoracic surgical team. The hospital was able to re-schedule my preparations and pre-exam surgical practice for my registration to sit the membership examination for the Royal College of Surgeons, my final hurdle to qualifying in my chosen field, so my day was hectic, full, and fully involving.\n\nLori's day had been just as full, as she was bursting to tell me when I finally stepped out of the car that evening. She'd toured around a large chunk of unspoilt, rural Oxfordshire, looking at and discarding one property after another, for a variety of reasons, but she wasn't in a burning rush to buy, we had time, and resources, for her to look around properly until she found the exact house she wanted. She'd fallen in love with Oxfordshire, with the rural peace and rustic charm of the place, and had another list of appointments to view the following day, and the day after, and the day after that, until she found her perfect nest.",
        "She could see I was tired after a long day of getting back into the busy swing of a major London hospital, so that night, rather than leap frenziedly on me, she seduced me slowly and subtly. When we retired to bed, she walked around our room as she gradually disrobed, appealing flashes of her in varying stages of undress clicking through my mind, her voice low and sultry as she described the places she'd seen, all the while slowly, artfully, revealing more and more of her spectacular body, until I was quivering with a mixture of lust, desire, and juvenile horniness. When she sensed I was near explosion point, she climbed on the bed on all fours, her eyes fixed on mine, wearing only her tight little panties.\n\n\"Are you very tired, baby?\" she cooed, her mouth saying one thing but her expression saying something else entirely, and, without waiting for an answer, she pulled the bedclothes down to reveal my truly stupefying erection, hardened to something like solid bone by her cock-teasing little pantomime.\n\n\"Oooh, is that for me?\" she asked, wide-eyed, while she batted her sooty lashes at me in a display of innocence that was all the more electrifying because I knew what a dirty little bundle of horny fun my wife was. That and the way she leaned forward to slip her lips over the end of my straining cock and lick as she gave a gentle suck. As she did so, she looked up at me, again, all wide-eyed innocence, and gave me the dirtiest wink I'd ever seen in a wide catalogue of dirty winks from her to date!\n\nMy resistance (such as it was...) crumbled, and I pulled her to me, kissing her as I slipped my hands down her waist to hold and squeeze her marvellous bum, sliding them down the backs of her gossamer panties and pulling the cheeks apart so I could rub her little rosebud with a probing, questing finger. Lori squealed into my mouth and lightly bit my bottom lip.\n\n\"Dirty boy!\" she murmured, grinning like a cat as she scratched my scrotum gently. Our eyes met, mutual need immediately apparent, and she sat up, tugged her panties down and off, and turned around to straddle me as she dipped her head down to once more take me in her mouth. This of course brought her wonderfully scenic pussy, and equally intriguing little pucker, into full view, the sight of both tight little havens of happiness stiffening my cock even further in her hot mouth. Even as I gazed in rapt wonder at my sister's succulent little treats, I could see her pussy lips darkening as they began to engorge, and the scent of her arousal began to waft over me, strong, sweet, spicy and delicious.\n\nWithout further ado, I pulled her close enough to reach her sweetness with my tongue and lips, lapping her from clitoris to anus with my flattened tongue, and as I engaged her in \"oral-genital congress\", as my textbooks so quaintly put it, I rolled her off me and onto our sides, so we were now in a classic \"69\", my face buried between her thighs as she sucked my cock while massaging my balls.\n\nWe played like that for a while, whether hours or minutes I neither knew nor cared; all I was aware of was the pleasure from the heat and suction of her talented mouth, and the taste and wet succulence of her juicy peach, the feel of her smooth, firm skin as I held her to me, and her delicious, alluring scent. I knew it was all pheromones, sex triggers flicking switches in my Limbic system, but I didn't care; all I knew was she was mine, and this was how I wanted her, and how she wanted me.\n\nEventually, after an orgasm or ten, Lori surfaced, looking alluring and ready for some proper all-in wrestling, giving me that look, the one that says \"buckle-up, now it gets bumpy!\"\n\nShe crawled up beside me and planted her lips on mine, kissing me like a friendly tornado, that kiss sucking the wit and will-power out of me and setting me up for what she wanted to do next. As we kissed, she slid on top of me, slipping her thighs on either side of me as my hands curled around her delectable bum, instinctively pulling the two halves of that succulent peach apart, making her giggle and wriggle delightfully on top of me.\n\n\"Later, baby, right now, I want to do this...\"\n\nWith that, she slid herself onto my throbbing cock, her breath hissing as I stretched her open again. Lori leaned down to kiss me, her mane of hair falling over her shoulder and brushing my face and chest like a sweet-scented net. As she began to slowly, insistently gyrate on me, rubbing the head of my cock against her cervix, I reached up and once again held those magnificent, perfect breasts, lightly brushing her sensitive nipples and making her gasp and grin at me.\n\n\"Like that baby, yesss, like that, oooh yesss!\" she murmured as I slowly pumped against her, fondling and squeezing her breasts as I did, lightly grazing the nipples and making her jump and catch her breath each time I did it.\n\nI could see her neck and shoulders flushing pink in the glow from the lamp, her movements against me quickening as orgasm approached, her eyes closed and the pulse-beat fluttering in her throat all giveaways that she was nearly there.\n\nAs our movements together became more frenzied, with her grinding her pussy against me ever harder and faster, I slid my finger into her tight, puckered little anus and pumped in and out of her in time to my cock inside her, the dual sensations finally tipping her over the edge.\n\nLori screamed as her pussy convulsed around me, the sudden delicious constriction almost sending me into my own ecstatic explosion, but I held back, even if I had to grit my teeth and think of Joan Rivers in a slingshot monokini (an instant passion-killer if there ever was one...) to do it; I had a feeling she had something special in mind for me.\n\nAt last, my darling slumped down on me, her heart thudding and her pussy rhythmically clenching and releasing me as she came down and slowly came back to reality. As always, it was a joy to hold her close to me, to feel her soft lips in the hollow of my neck, to run my hands over her smooth, satiny skin and feel the life and vitality sparkling in every square inch of her, and to surround myself and bask in her lovely warm, sweet, spicy aroma.\n\nOnce she got her breath back, and her heart-rate back down to something approaching normal, she raised her head to kiss me lightly and nip at my bottom lip.\n\n\"How about you Davey, how about a little something, just for you...?\" she smiled, a knowing look in her eyes, and nipped my lip again.\n\n\"Just like mom, baby!\" she whispered, sitting up and shaking out her hair, the sight of her raking her hair while she shook it out, and all the interesting ripples and jiggles that accompanied the act rearing my cock up even stiffer than it had been, if that were possible.\n\nI knew what she wanted to do, (and so did I, oh yes!) and when she pointed at her toiletries bag I passed it to her, from whence she took out a tube of KY Jelly.\n\n\"You know what to do, you dirty-minded, butt-reaming little ass-rapist!\" she grinned at me as she handed me the tube, then turned and presented her magnificent bum to me; I was half minded to forget the lube and just bite those inviting cheeks as much as I could, but instead I took a finger-full of the lubricant and rubbed it in and around my next hiding place, sliding first one then two fingers into her tightest hole, opening and stretching her for what was coming next. Lori sighed and wriggled, her pink anus winking at me as she flexed her hole, tempting me with the delights of her arse.\n\n\"Get a move on, you butt-goblin, you've got an early start again tomorrow, and I haven't got all night; just fuck my ass, Davey, now!\"\n\nNever one to let a lady down, I knelt behind her, lightly rubbing her smooth, lubricated hole. Lori sighed and pulled a couple of pillows under her midriff and lay across them, presenting her uptilted rear to me in a very tempting manner.\n\n\"Now, Denham...!\" she growled, so I leaned down and pushed my cock into her tight little pussy, Lori hissing as I filled her up again, pumping few times to lubricate myself nicely with her own tasty juices, then withdrew and placed the tip at the entrance to her tight little bum.\n\n\"Now or never, baby-girl, tell me now and we can do something else!\" I teased, knowing she wanted this almost more than I did.\n\n\"Daviddd...!\" she hissed warningly, and I grinned as I slowly but inexorably slid my rigid cock deep into her tight anus in one long smooth glide.\n\n\"Oh Jesus God, that's tight!\" she gasped, \"I was right, that fucking thing's getting bigger by the day! What the fuck are you feeding it?\"\n\nI had to grin as I began to slide back out again, Lori gasping and humping her bum up against me as I slowly withdrew, trying to keep me embedded in her tight, hot little bottom.\n\n\"All I feed him is a certain blue-eyed Iowa brunette, that's what he's partial to, I thought you knew this?\" I whispered as I shoved my way back in again, Lori gasping and once more humping up against me, engulfing my cock with her tight bum hole as she slowly gyrated her hips, effectively stirring me around inside her, and grinning even as she gasped with every thrust from me.\n\n\"You are so full of shit, English-Boy!\" she giggled, \"I've said this before, and I'm saying it again now; you just like ramming that thing into my ass with no warning, you butt-raping little pervert! My daddy was right; I should have listened to him!\"\n\nI forbore to comment, as I was enjoying myself far too much; despite her protestations, the sinewy contractions and flexing of her anal tube was giving away her enjoyment of what we were doing here, and I was rapidly losing the power of speech as I concentrated on pumping my painfully erect cock in and out of her hot, velvety canal.\n\nI slid my hands under her ribcage and cupped her magnificent tits, my palms lightly brushing her highly sensitive nipples, but it was enough to make her anus tighten as she bucked underneath me.\n\n\"Oh God, Davey, that felt so good, do it again!\" she gasped, and so, as I slid my cock out of her arse and shoved it back in again, I flicked and lightly grazed her nipples, making her groan and shudder under me.\n\nThe end had to come soon; neither one of us could stand this level of stimulation for long. As I gently squeezed her lovely firm tits I felt that low-level tingling behind the base of my cock and in the pit of my stomach, and Lori convulsed as her orgasm swept through her, her anus clamping down tightly on me as her pussy shuddered in sympathy with her cervix as it beat against the thin walls separating it from where I was embedded.\n\nThe pressure on my cock, like a hot velvet vice squeezing me along my whole length all at once, was enough to tip me over the edge, and I came like the night express, spunk blasting out of me in what felt like endless streams, spraying the insides of her anal tube and coating her bowels with my tribute.\n\nThe feel of me launching my spunk-assault on her bowels set her off again, and Lori screamed my name as she came again, the rippling of her anal tube milking me of every last drop of my male essence. I rolled to one side, still embedded in her to the hilt, taking her with me, and held her close as she shuddered and twitched as aftershocks rippled and died away inside her, her heart thumping in concert with mine as we both slowly recovered from our lovemaking. I slowly shrank and slipped from her, and Lori rolled over to face me, her top lip sheened with sweat, and her sweet, spicy aroma surrounding me like a cloud.\n\n\"Okay, baby, playtime's over now,\" she grinned, \"you have to be up and away early tomorrow, Jimmy's taking you, so get some sleep in the car as well.\"\n\nI nuzzled her as she pulled the covers up over us, already nearly asleep, yawning hugely as she turned and spooned against me, her last comment already blurry with sleep but still sending me to sleep with a grin on my face.\n\n\"If you stop off along the way and have another huge fried breakfast, I swear to God I will deep-fry your dick and make you eat it with an onion mayo dip. If you're hungry, buy a salad. And that goes for Jimmy, too...\"\n\n*\n\nAnd so that settled into our routine as we marked time waiting for Aunt Sophie and Uncle Richard. Lori spent day after day combing the Oxfordshire wilds for the perfect house, one that ticked all her boxes, while I worked my way back though the curriculum and surgical rota, doing my level best to catch-up and get my preparations in place for my final and most important qualifying examination, for membership of the Royal College of Surgeons.\n\nIn the meantime, Lori had her list, and she was adamant about keeping to that list, too; if she was going to settle down and raise kids, she wanted the perfect house to do it in, and she wasn't prepared to compromise. Poor Jimmy found himself criss-crossing the county with Rosie, following up leads and hints that she and Lori had unearthed, splitting his time between ferrying around the Memsahib, and deliberately doing his \"faithful old Family Retainer\" act every time he took me to work or collected me in the evening.\n\nThe senior registrars either grinned at his act, or fumed that a pipsqueak junior surgeon was being bowed in and out of a limousine like the young master returning to the manor, envy mixing with class outrage. Jimmy knew exactly what he was doing, but he was more afraid of Lori than he was of me, and he had his orders; I tell you, that girl has a warped sense of humour sometimes...\n\nAt last, Lori found her house, and it was in the same village Sophie and Richard lived, of all places, Little Brooking; why was I not surprised...\n\nThe village was one of those chocolate-boxy sort of places, 16th century black and white half timbered houses with thatched roofs and picturesque shutters, village green with cute little pub, apple and pear orchards disappearing off into the distance; the whole place was almost painfully twee and whimsical. Luckily, the house she'd set her sights on was an old vicarage, dating from the latter part of the 18th century, brick-built, with a Welsh slate roof, and beautiful golden Cotswold sandstone quoins; it satisfied all her basic requirements in that it was structurally sound, had recently been renovated and updated, but sympathetically, leaving all the period elements untouched, by someone with their eye out for a buyer just like her, and large but not unmanageable gardens with a one-acre apple orchard and a herb garden, a vegetable patch, and a small duck pond.\n\nThere was also an adjoining paddock where a pair of elderly donkeys lived in happy amity with a retired shire horse named Tiny, which was a misnomer if I ever heard one; he was bloody massive, the last time I'd seen something that big it had four flat feet and a trunk...\n\nOne of the conditions of sale was that the new owners had to take full ownership and responsibility for those three moth-eaten nags; Lori of course agreed to the asking price without a flicker of her eyelid, with the seller sighing as she realised she could have faked a bidding war and upped the price and Lori would have paid it anyway, again without a flicker; she knew the signs of true love when she saw them...\n\nThere was also a pair of cottages on the property, built by the original owner of the vicarage as additional family accommodation. The present owner had renovated them when the main house was done, and was currently using them as summer holiday rentals, but Lori had her own plans for them.\n\nThe sale was laughably easy; with no other buyers bidding for the property, and the owner moving abroad, all we had to wait for was the Land Registry title-search and various other legal niceties, but with Lori's deep pockets and apparently inexhaustible cash reserves, our solicitor fell over himself to push things along; as it was a cash sale, with a banker's draft for the vendor, and a cheque for the Stamp-Duty that Lori handed him without a murmur, and the fact there was no mortgage to arrange, no bank fees, bridging-loans, or deposits to secure, it only took a matter of weeks, rather than the several months these kinds of things could take, and suddenly, we owned our dream house (or at least Lori's, and it had better be mine...)\n\nIn the midst of all this, Sophie and Richard finally came home. Lori had been ticking off the calendar, counting-down the days, until suddenly, the day dawned. She was a bag of nerves, alternately pacing and muttering and trembling and crying; the tension wasn't good for her, and definitely not for the baby, and so, to try and relax her, I suggested we take a leisurely drive to Heathrow Airport and collect my aunt and uncle. Lori jumped at it, insisting we leave now, now, now!\n\nSo we did, even though we were several hours too early; Lori wanted to be there in case their flight was early (fat chance) and there was no-one there to meet them...\n\nLori fidgeted the entire way there, while Jimmy sat with his face carefully blank and expressionless; he'd suggested we stop and have lunch, as there were several hours before their flight was due in, and Lori nearly bit his head off, so, being a good soldier who knew when to fight and when to back-off, he shut his mouth, exchanged glances with me that spoke volumes, and set to the task of ferrying us to Heathrow Terminal 3. Rosie had gone over to their house, to open it up and air it a little, even though the housekeeping service was supposed to have been doing just that, and to wait there for her favourite aunt and uncle.\n\nOnce at the airport, Lori was free to let her need to fret have full reign, and so Jimmy made himself scarce while I hugged and held my baby close as she alternated between crying and trembling; none of this was good for her, or the baby, but she seemed to have a deep-seated need to do it, so I held her while she got all her nerves and jitters out of the way.\n\nAt last, I heard their flight arrival announced, and so did Lori, because suddenly her jitters stepped-up another notch, and I found myself wishing they'd just get here, before she actually imploded; she was trembling so fast she was just a Lori-shaped blur, people were beginning to stare, possibly wondering if she was some sort of avant-garde street theatre...\n\nJust when it seemed she was ready to implode for real, out they came. All I heard was a low growling sound, and suddenly Lori and Sophie were in each other's arms, both of them in floods of tears, and hugging so tight you couldn't have got the thinnest sheet of paper between them. All I could hear was a sort of high-speed gabbling from the two of them. Richard shared a bemused look with me while Lori and my aunt continued their reunion at some higher level of communication, something involving incoherent squeaking interspersed with Lori repeating 'mom, mom' over and over while Sophie stroked her hair .\n\n\"Hello David, it's good to see you again, young feller!\" grinned Richard, before being sidetracked as Lori grabbed him with her free hand and hugged him in a neck-breaker, pleasure and embarrassment warring for a second on his genial features. He gently disengaged himself and shook hands warmly with me.\n\n\"It's good to be home at last, David, I think I'm going to enjoy having a rose garden I won't have to leave when I get posted again. Also, your aunt and your dear girl, at last they've got each other back; you've absolutely no idea what it's been like these last few weeks, David, no idea at all! You aunt has been like a bear with a sore head ever since she came back from Bar Harbor, I didn't dare stick my head in a room in case she bit it off. At last she has her precious \"daughter-girl\" back, so now I can relax instead of creeping around like a bloody criminal!\"\n\nSophie and Lori finally managed to descend back to earth, Sophie hugging me warmly and kissing my cheek in a motherly sort of way, while Lori hugged Richard properly, her face buried in his shoulder while she cried softly, with Richard patting her back gently as he whispered to her. I got a little teary myself as I realised just how deeply my girl had imprinted on these two fine people. In her mind and heart they'd become her parents, and her love for them was plain to see, and having them back was probably the best thing for her right now. ",
        "As I watched Lori reconnect with Sophie and Richard I suddenly realised that if Sophie was now her mother, then in some indefinable but very real way she was mine too; if Lori felt that she had Mother back, then maybe she did, which meant I did too; the idea stunned me. I finally got it, now it all made sense; now, with a sudden cognitive flash of insight I saw what Lori had been seeing and feeling all along. Now I knew who we were, who this was family that we had become, and where we were going.\n\nJimmy appeared and loaded their luggage onto a pair of trolleys, and he pushed one while I pushed the other down to the car park. Sophie raised an eyebrow at the limousine, but said nothing while we loaded the luggage, saving it for when we were on the road. Once we were underway, Jimmy rolled up the privacy screen, sensing that there was family-stuff coming, and he didn't need to hear it. Once the screen was up, Sophie raised that eyebrow again.\n\n\"A chauffeur, David? Really? I thought you were above such things!\"\n\nLori glanced up from where she was huddled between Richard and Sophie, with Sophie's arm wrapped possessively around her.\n\n\"It's not like that, mo...Aunt Sophie, we had a little trouble in London, and Jimmy took care of it, so David gave him a job looking after me when he's not around, and the car came with him. He's a lovely man, Rosie's completely smitten with him, and Jimmy's fallen for Rosie in a big way; ask him if you don't believe me.\"\n\nSophie caught the change as Lori so very nearly called her \"mom\", her eyes shining again as she looked fondly down at her.\n\n\"All right, darling girl, I know I'm probably going to regret this, but what exactly happened that you should need a bodyguard?\"\n\nLori told her the story about that idiot in the restaurant, and the fracas outside, and how he'd been a minor TV celebrity, which hadn't stopped Jimmy from shredding him with a well-aimed head-butt and a kick in the plums that still made mine twinge whenever I thought about it. Of course, the resultant press furore had forced us to do a runner and hole up a long way from civilisation, in Denham Hall, far from any press intrusion. Sophie grimaced at that, her look disapproving.\n\n\"You took this poor girl, in her condition, to that dreadful place? David, only jet lag and good manners prevents me from giving you such a slap right now! The very idea!\"\n\nRichard was grinning at me behind his hand, and I had to look away to bite down my own grin as Lori winked at me, stuck out her tongue, and snuggled even closer to her protector. I could see a long and deep involvement with my aunt and uncle looming, and something told me I'd better start learning about roses, it looked like Richard and I were going to be spending a lot of time in each other's company...\n\nSophie leaned across and pressed the privacy button, and waited until the screen lowered before speaking to Jimmy.\n\n\"Young man, I understand I have you to thank for rescuing this lovely girl from some TV vermin. Loretta tells me you work for her, and that you're doing a good job, and also that you seem to be forming an attachment with my niece, Rosamund. I hope you're a serious-minded young man?\"\n\nJimmy gulped and nodded; Sophie was a formidable lady, and I was quite tickled at the sight of a man who'd charged sniper nests in Sarajevo and infiltrated gun emplacements in Iraq actually sweating at her slightly raised eyebrow. Richard eventually took pity on him.\n\n\"What my wife is trying to say, in her own inimitable way, is that Rosie is one of her favourites, and she's curious to know what your intentions are. Speak up, young feller, it's all family here.\"\n\nJimmy looked sideways at me, straightened-up at my wink, but kept his eyes firmly on the road ahead as he drove.\n\n\"Rosie...Rosamund and me, we have an, an understanding. I respect her, and would like to take things further, when she's ready, and I'm able to support a wife and ...and family. I fully intend to one day ask her to be my wife, when the time is right!\"\n\nHe flicked a glance at the rear-view mirror, to see Sophie smiling slightly.\n\n\"Good answer, a very good answer, you may be just what she needs! I think under the circumstances we can dispense with the formalities; Rosamund calls my husband and I Uncle Richard and Aunt Sophie, if you are to join this family, I would expect you to do the same.\"\n\nNow Jimmy looked really alarmed.\n\n\"Yes of course, Mrs...I mean Aunt...I mean...!\" he stuttered, completely unnerved by Sophie, who looked across at me and grinned, suddenly looking more like Lori than ever.\n\nI reached over and patted his shoulder.\n\n\"Relax Jimmy, you passed! Aunt Sybil likes you, Aunt Sophie likes you, I doubt you care what Maude or Bella think of you, and best of all, Rosie likes you, you're in!\"\n\nJimmy didn't say another word all the way back, but he looked a lot less terrified under the sheen of perspiration on his face. When we arrived at the house, Richard, and Hugo were waiting at the gate to greet their parents, both of them with their arms around a smiling Rosie. Once the kisses and hugs had been exchanged, Sophie took Lori and Rosie by the arm and piloted them into the house, while Jimmy, the boys, and I unloaded the luggage and trundled it into the house.\n\nSophie and the girls were closeted in the drawing room, so Richard, Hugo, and I sat and had a cold beer, while Jimmy had a coke as he was driving. We chatted about my work at St. Giles, the boys discussed the progress of their plan to hook themselves \"an American stunner, just like yours, Davey, plans are afoot, old chap!\", and ribbed Jimmy about his romance with Rosie, roaring with laughter at his discomfort when Sophie had turned her blowtorch on him in the car.\n\n\"I tried to warn you, I did, really! Mother is an absolute terror when she forgets she's a doting parent, better check to see if she didn't bite your leg off when you weren't looking!\" grinned Hugo, \"Of course, it's your turn next, Davey; right now they're in there plotting and planning, sealing your fate, blocking all exits, and setting dozens of little ankle-traps for the unwary; you had your chance, Davey, now she's got hold of both of you, the moment of doom approacheth!\"\n\n\"Stop frightening the lads,\" grinned Uncle Richard from the doorway, dressed in casual clothes now and looking less like a senior diplomat and more like a dad. He poured himself a scotch, and came and sat with us, looking intently at me.\n\n\"David, the boys are only joking, but there's an element of truth here; your aunt is meticulous, detail-oriented, and really quite...forceful once she gets the bit between her teeth,\" he grinned at his understatement, as did I, once again marvelling at how much like my Grandfather he looked, and how much he reminded me of my father, what I remembered of him, anyway. He held his scotch up to the light for a moment, then took a sip as he collected his thoughts.\n\n\"You told me once how busy you were going to be getting back into training at your hospital, but woe betide you if your schedule interferes with Sophie's arrangements. She won't say anything, but Sophie can do more damage with a carefully aimed eyebrow than most people can do with a wild left-hook, so make sure you leave enough flexibility in your schedule to accommodate hers. She and Lori are very close now, as close as mother and daughter, so if you do anything that she perceives as a slight to that lovely girl, you'll have her on you like an avenging angel. Be warned, and watch out for the danger signals; you'll soon learn what they are...\"\n\nAt that point, the door opened and the ladies came in from their plotting session in the Drawing Room, Lori looking radiant, Rosie smiling widely, and Sophie looking very pleased with herself.\n\nAs we all stood, waiting for the ladies to be seated, Rosie slipped up to Jimmy's side and whispered something to him. He looked startled, but took her hand and allowed her to lead him outside. I grinned at the little by-play, and at Sophie and Lori's smug looks.\n\n\"Mother, what have you done?\" grinned Hugo, while Richard leaned back and saluted her with his beer.\n\n\"Mother, you've got that \"look\" again, the one you get when you set me up with some friend's daughter; what have you done now?\"\n\nSophie looked positively angelic.\n\n\"I? Nothing, nothing at all, just mentioned to Rosie what she needs to tell that young man of hers, and before you start accusing me of meddling, she was already going to do it, so unruffle yourselves! Now, I have important things to arrange, dears, so make yourselves useful, or make yourselves scarce, go on, shoo.\"\n\nRichard and Hugo tipped back their beers, as did I, and I made to follow them into the garden, to be stopped by my aunt.\n\n\"Not you, young man, this is your wedding too, so pay attention!\"\n\nUncle Richard grinned at me behind her back, tipped his scotch in salute at me, and slipped out into the garden after the boys. Sophie took my arm, and slipped her arm through Lori's, and the three of us stepped into the garden through the French double-doors.\n\nSophie looked around appreciatively at the garden.\n\n\"I did so love coming back here whenever we could, I always loved this garden, it will be nice to live here permanently; England in the summer, what a heavenly thought!\"\n\nI grinned as she strolled arm in arm with us along the patio, watching Uncle Richard and his sons examine the state of the rosebushes. Sophie stopped in front of a bower, smiling at her memories.\n\n\"I used to sit here with your Great-Aunt Louisa, Richard's dear mother, and we'd talk about the family, about David, your father. This is where Louisa told me about her brother and her, about her own beloved David, your grandfather, about your uncle Richard, and poor Hugo, how devastated she was when he died so tragically young, just a young boy. She once told me she used to pray that somehow the universe would change, that things would turn around so she could have the one thing she wanted, her David to be her husband, and to have been your father's mother. Her husband drank himself to death with the money your grandfather gave him to marry Louisa and save her from scandal, but that man, he was rotten to the core; he never let poor Louisa forget he wasn't Richard's father, that he was well aware who Richard's real father was. He made her life a misery, always blackmailing her to keep her secret.\"\n\nShe stopped to dab at her eyes, Lori following her.\n\n\"Your grandfather paid up without a murmur, of course, he loved his sister far too much to let her secret become known. At least you managed to have what Louisa and her brother could never have had, David, so be grateful for each other, children, give thanks every day, because you'll never know how bad it could have been.\"\n\nSophie dabbed at her eyes again, then pecked me on the cheek.\n\n\"I so envy you, both of you! You're starting out all new and fresh and young, the world really is at your feet, just make sure you appreciate and enjoy it. You're lucky to have a girl like Loretta, dear, someone who adores you as much as she does, and you Loretta, I've seen how David can't take his eyes off you, you did well to have someone as caring as him so smitten with you. Both of you, you're going to be just fine, I can see it now.\"\n\nShe slid her fingertips along Lori's cheek, brushed an errant hair back and smiled happily at her.\n\n\"I was thinking the third week of September, in the chapel at Kings, where your father was married, David, and where I married your uncle Richard, too; it's sort of a family tradition now, what do you think, dear?\"\n\nUncle Richard's warning was still echoing in my mind, so I agreed; I was already married to my darling sister, this wedding was for Lori to have her dream wedding in a flower-decked church, something she'd once confessed to me in an unguarded moment, and I would agree to anything for my beautiful sister-wife.\n\n\"Good, now that's settled, it's been a long flight, and your uncle and I are tired, so take this dear girl out somewhere and lavish attention on her, I think I need a long, hot soak, and a nice long sleep, so I'll see you tomorrow, children. Oh, and David, I'll be taking Loretta away from you for a while tomorrow, we're going shopping, find something useful to do while we're gone, there's a dear...\"\n\nSophie walked us to the gate, where Jimmy and Rosie were waiting for us, and once again pecked me on the cheek, hugged Lori, and waved us off as Jimmy pulled away for the drive back to Sybil's house. Once there, Rosie decided she needed to go shopping in Bicester, so Jimmy sat her in the back so she could arrive at the Designer Outlet Village in style, leaving us with an empty house, Sybil having gone to London to meet with her agent. So now we had a great big empty house all to ourselves, what to do, what to do...\n\nLori solved that by moulding herself against me and running her fingers over my rapidly expanding cock.\n\n\"What shall we do, Davey, there's just you and me here in this big ole house, however shall we pass the time?\"\n\nShe looked at me so innocently, her eyes big and blue, and utterly guileless, but with a spark of true depravity burning way down deep inside; my girl had a plan, and it would almost certainly involve nakedness and much stickiness. Little David reared-up and filled her hand at the thought.\n\n\"That's what I like, a man who knows what he wants!\" she grinned, nipping my chin as she squeezed me briefly, stiffening me even further, if that was possible, \"Let's go, baby, I want to play doctors and trollops, and you do it so well!\"\n\nWith that, she led me into the house, my eyes once again drawn to the sweet curves and tight quiver of her spectacular arse in the form fitting sun-dress she'd chosen to wear. I checked for VPL, none was visible, good, it meant I got to eat without all that tedious business of tearing her panties off...\n\nLori caught the direction of my stare, grinned, and twitched her delectable bum-cheeks even more, causing many, many impure thoughts to zing through my brain and latch onto my cock; oh yes, when I got her naked, she'd find out what kind of games I wanted to play! As she led me through our bedroom door, I leaned back against the door and slid my arms around her waist, pulling her to me. Lori squealed as I slid my hands up to cup and squeeze her lovely firm lady-lumps, the nipples already hard and poking through the stretched-tight material of her sun dress.\n\nI dipped down and kissed her neck while I squeezed her breasts, rolling her taut nipples between my fingertips under the tight material, and Lori groaned, pushing her wonderful backside against my throbbing cock, capturing me in the cleft between her sculpted buttocks. Now it was my turn to groan as she slid her hand onto the back of my neck to support herself, and rose and fell on her toes, rubbing my engorged cock as it lay in the cleft of her spectacular arse.\n\nAs I leaned down to nibble and lick her perfect neck some more, Lori giggled and reached behind to squeeze my cock.\n\n\"We can stand here all day, or we can do...other stuff, baby, your choice!\" she murmured, making it crystal clear just what kind of \"other stuff\" she'd rather be doing.\n\nI took the hint, and reached for the zipper on her dress, sliding it down in one move and allowing her creamy, satin-smooth back to fall into my clutches. Lori giggled again as I kissed the back of her neck and slid my hands inside her dress to hold and squeeze her luscious breasts again, while her delicate, delicious scent surrounded me, making me hunger for her all over again.\n\n\"Help me get this thing off, Davey!\" she grinned, so I pulled as she squirmed, her bum cheeks wobbling fetchingly as she shimmied the dress off, to stand completely naked before me. Every time I see my wife naked it's like a new experience for me; I never tire of seeing her clear, flawless skin, her rounded, spectacular, showpiece bum, those incredible protuberant 36C breasts with her fat, coral-pink nipples, now beginning to darken to a deeper rose, part of the changes to her body as her pregnancy progressed, and the secret place between her legs, the lips glistening with her honey and just begging for a lick. Lori put her hands behind her head and did a slow spin, grinning all the while to show she knew exactly what she was doing to me.\n\n\"Well, Davey, do you still like what you see?\" she taunted me, her eyes dancing with mischief, knowing exactly what effect she was having on me. The sight of all that delicious female flesh was too much, and with an almost animal growl, I lunged for her bearing her backwards and onto the bed. I landed on top of her, being careful to take my weight on my forearms and knees, Lori giggling and shrieking as I licked, nibbled, tickled and lapped at her with my tongue.\n\nWe played for a few minutes, enjoying the play before other needs intruded, and I found myself wondering all over again how I'd managed to trap such a delicious, divine, utterly beautiful young woman. As I took her all in, I slid down so I could lick and suck her deliciously stiff nipples, gently running the flat of my tongue over the sensitive little points of flesh. Lori's nipples were becoming very sensitive, so I left off before I actively made her too sore to continue, concentrating instead on kissing a line down her midriff, past and inside her ticklish little navel, until my tongue found the top of her slit.\n\nLori bucked and sighed as I slid my tongue-tip inside her crease, teasing the hood of her clitoris before poking my tongue into her opening, making her sigh and wriggle against me. I wriggled my tongue inside her, then slowly pulled it out and lapped at her slit, once again marvelling at her tangy sweetness, and her spicy, Christmas scent, full rich, aromatic and sweet, redolent of plum pudding and mulled, spiced wine, with a background scent altogether more human, primitive and alluring.\n\nLori moved and murmured under me as I worked my way down, until my tongue-tip was probing at her tight little rectum, the sensation as I slowly pushed my way into her little knot almost overwhelmingly sexy; Suddenly I wanted to be shoving my distended cock in this particular hole; if I did it right, she'd beg me to bugger her, the way she liked it so much.\n\nLori sighed happily again and lifted her hips to ease my access to her little rusty bullet hole, holding my head lightly and twining her fingers in my hair as I lapped and licked at her tight-spot, slowly pushing my tongue-tip further into her with every pass until I was in her as far as I could go, rimming her as deeply as she'd ever been rimmed before.\n\nLori began pulling my face closer into her, trying to get more of me inside her, so I obliged. Pulling my tongue back out of her, I once again fastened my lips on her clitoris, sucking the hard little nub and making her thresh around under me, as her juices poured out of her. I slid up over her, kissed her gently, lifting her legs so her lovely little rosebud was looking right at me, took my cock and pressed it against her. Lori took over, taking hold me and aiming properly, and then nodded, so I began to slide slowly but unstoppably into her tight arse.\n\nLori gasped and grinned up at me as I slid into her.\n\n\"You dirty, perverted little bum-fucker, that's all you ever want to do these days, I have other holes too, you know!\"\n\nI grinned back down at her, not at all put off my stride by her words, especially as I could see she didn't mean any of them. I stuck my tongue out at her, and leaned down to nip the end of her nose.\n\n\"Before you start going all \"you are such a pervert\" on me, Mrs. Loretta Keene-Denham, just remember one thing, you hot little fuck-muffin wife of mine; it was you who started all this; it was you who asked me to fuck you in your arse, you showed me how to do it properly, I discovered I liked it, so I am your creation, missus Frankenstein, and the price you pay for being such a cock-obsessed little smart-arse is you get to spend the rest of your life with my tongue, my fingers, or my fat-boy shoved up your Strada Cioccolato, and if you don't like it, go complain to the universe, I'm sure it will listen to you, go \"Oh, Sorry, Is this better?\" and rearrange things so you get your own way!\"",
        "Lori stuck her tongue out and grinned at me, that slow, unutterably dirty grin she gets when she's hatching something, or something mad, bad, and nasty but nice has occurred to her. She began humping back at me, digging in her heels and pushing back against me, taking me in even deeper, even as she began pulsing her rectum around me, the sensation not unlike fingers squeezing and rippling along the entire length of my cock. She began to hitch and gasp as I humped madly, ramming my cock into her as hard as I could while she met me thrust for thrust.\n\nWe couldn't keep this up for long, no humans could, and I came with a shout of release as I sprayed what felt like an endless amount of hot sperm deep into her bowels. Lori screamed as her own orgasm hit her, the rippling in her rectum now an unstoppable, rhythmic milking sensation, dragging my own orgasm out and chiming with her as I pumped stream after steam of my sperm into her.\n\nWe slumped down, completely wrung out, Lori holding me tightly as she trembled and shuddered against me with the aftershocks of her orgasm. My cock finally softened enough to slip from her, Lori murmuring and burrowing against me as her own orgasmic tremors and aftershock died away. After a while, I could feel her fingers on my chest as she tapped me, something she does when she's thinking about something.\n\n\"Do you mean what you said earlier, Doctor-Man? About the rest of my life, I mean?\"\n\nI grinned back, sure I knew where she was going with this, well, this time anyway.\n\n\"Every day, if you want, my darling baby-girl, as many times as I can, that I promise you, although, as you pointed out, you have other holes too; I fully intend to keep them all fully occupied too!\"\n\nLori smirked.\n\n\"Done! I want that in our wedding vows, I want a promise of a daily good ole-fashioned Iowa back-country ass-fuck, so you better make it happen, or I'll make good on my promise to yank your leg off, whittle it into a cock and use it on myself if I have to!\"\n\nI raised an eyebrow at her.\n\n\"Darling-Girl, just how the fuck am I going to make a promise like that in a church full of people? If I try that, I promise you, Sophie will have me finely minced and rendered down into compost for Richard's rosebushes! Try something else, anything but that!\"\n\nShe looked up at me with huge, sad, puppy-dog eyes, and a heartlessly quivering lip, before:\n\n\"I thought you loved me!\"\" she pouted, \" if you did, you would!\" came trotting out of her mouth. She did it: she actually played the 'you would if you loved me' guilt-card. I had to grin, especially as I could see just how insincere she was at that moment. I wasn't about to let this go without a fight, though; I mean...\n\n\"Alright, how about I solemnly swear, here and now, on that ring on your finger, to hump your rump every day, for the rest of our married life? Does that satisfy Madame?\n\nLori looked at me with the devil in her eyes and that irresistible smile on her perfect lips.\n\n\"Okay Davey, that will be enough for me; you've never broken a promise you swore on mummy-bum, so swear now!\"\n\nGrinning at the reminder of our childhood, I made the promise I knew I was compelled to keep.\n\n\"Darling Lori, I swear on mummy-bum I will always cram your crevice as and when you demand it, forever and ever, amen. Is that good enough, you tiresome trollop?\"\n\nLori grinned at that, her eyes softening.\n\n\"Just as long as I'm always your trollop, darling boy!\" she murmured.\n\n\"Always and forever, beautiful girl!\" I promised, kissing her as she sleepily stretched and hugged me close.\n\n\"First ultrasound tomorrow, baby, I'm excited, will they be able to tell us if it's a boy or a girl?\" she asked, her eye cocked hopefully at me.\n\n\"Not likely, baby-girl, not at only 14 weeks, but we will be able to see and hear the foetal heartbeat.\"\n\nLori smiled happily.\n\n\"I'm having your baby...!\" she murmured, trailing off as she fell asleep. I watched her for a while, enthralled, as always, by her flawless, porcelain skin, her red lips, and her hair, black and glossy as a raven's wing. Charlie always told us with a perfectly straight face that Lori's hair came from his ancestor, a full-blooded Kiowa war-chief, something a small boy from England took in with wide-eyed acceptance; my little sister was a Red-Indian princess! When I got older, of course, I worked it out for myself; Charlie's family originally came from Savannah, Georgia; not too many Kiowa there, but still, when I looked at that mass of lustrous black hair, Charlie's tall-tales about Lori's ancestry were almost believable.\n\nWatching over her, drinking her in, congratulating myself on capturing a true Georgia peach, and feeling her warmth against me, I eventually fell asleep, and dreamed of mother and my father, posing for that painting in the study at Denham Hall.\n\nThe ultrasound scan at the hospital in Oxford was just as I expected; what I didn't plan on was the surge of emotion when I saw my baby's heart for the first time; just a tiny little dot thrilling away in the shadows on the screen, but suddenly there was my child, and with that came a surge of almost overwhelming protectiveness, my parental instincts suddenly clicking into high gear. Lori listened to the high-speed chatter of the baby's heartbeat with tears on her cheeks, holding my hand so tight I thought she'd break my fingers.\n\nNow the reality of what we were, and what we were becoming drove home; we were going to be parents, and everything we did from now on had to be for the good of our child; it was a sobering, but welcome thought. It was one of those defining moments for me, the instant when we finally became true grown-ups.\n\nThe high lasted all the way back to Sybil's house, where suddenly our good spirits were dashed by the sight of Bella once more lurking, like a turd at a stop-sign, probably come back to pile more venom on now that she'd had the opportunity to think of something choice to say. Lori looked at me and grinned, raring for the opportunity to deal with her this time, so what could I do? I gave her her head, of course...\n\n\"David Denham, I have a here a court order allowing me to take immediate vacant possession of Denham Hall and all its environs, I do hope we can make this transition amicably?\" she leered unpleasantly, triumph written all over her face, making her look more than ever like a cat licking shit off a nettle.\n\n\"Let me see that, please!\" asked Lori sweetly, and the old trout handed it over with much bad grace. Lori scanned through it with one raised eyebrow, then looked up and smiled brightly at her.\n\n\"Well, it certainly all seems to be in order,\" at which Bella tried to take it back, but Lori held it out of her reach. \"except for this one, small, teeny little clause here, where you've declared yourself to be the owner of record. Now, dear Aunt Bella, we all know that's just a teeny, tiny little fib, or perhaps I should say a great big fat juicy lie, as we happen to have a stack of deeds, endowments and charters four feet high showing that David is clearly the only legal owner of Denham Hall, so once again you've 'used a false instrument to gain a monetary advantage', that is the correct phrase isn't it, David darling?\"\n\nI grinned and nodded.\n\n\"Absolutely correct, darling girl! Do go on!\"\n\nLori smiled sweetly at her and pretended to look through the document again.\n\n\"Fraud is such a sly little crime, isn't it, Bella dear, especially when perpetrated by one's own family? Not that you are actually part of this family, of course, and I happen to know that dear David's trustee's are positively straining at the leash to have you tossed in the pokey after the last time you tried this; imagine how they'll rub their hands in glee when they get this, and they will, be assured of that!\"\n\nLori stopped to let that sink in.\n\n\"And by the way, Bella, and this should worry you, the magistrate who signed this is not going to look favourably on the nasty, lying, devious, disgustingly greedy old woman who involved him in her scheme to defraud a family member out of their inheritance, and committed perjury by swearing under oath that she was making a true statement, knowing it was actually a lie.\"\n\nLori looked at her pityingly.\n\n\"If you had just waited, David would have made provision for you; he's not like you, and he feels a strong sense of responsibility for his family, no matter how obnoxious they are, plus of course he loves Rosie dearly, and unfortunately, through no fault of her own, she is your granddaughter, so he would have done that for you for Rosie's sake. You should have waited, Bella, perhaps you might have been pleasantly surprised, but this, this made sure that nothing will be forthcoming. Way to shoot yourself in the foot, honey! Now, you're making no friends here, so why don't I keep this safe for my husband while you climb back on your broomstick and head back into the West, I'm sure your flying monkeys must be missing you!\"\n\nBella's face was a picture, but I'm not sure of what, as she drew herself up to her full height, spun on her heel, and stumped away. Sybil and Rosie came out then, and linked arms with Lori as they watched Bella disappear into the distance, where Maude's car once again waited for her.\n\nMy aunt nudged Lori and grinned at her.\n\n\"You know, dear, I still have my great-grandfather's old elephant gun; if you like, you can take a pot-shot at her, it has three barrels, if you miss her with one barrel you've still got the other two!\"\n\n*\n\nBack inside the house, Lori had an announcement to make.\n\n\"Aunt Sybil, Davey and I think it's time we struck out on our own. The house in Little Brooking has been surveyed and there's no issues, so I want to start getting moved-in; the stuff from back home will go nicely in there; all my stuff, my mom & daddy's stuff is already in storage in Oxford, so I think it's time we stopped imposing on you and got our own house settled. Thank you so much for helping us settle down, and for making us feel so at-home with you, Aunt Sybil, but now I think it's time to be in our own home, instead of cluttering-up yours. I know you need your privacy as much as we do, and much as I've loved living here in the middle of Davey's family, I think it's time to go.\"\n\nAunt Sybil was smiling through all of this.\n\n\"I agree, dear; you two, and the one who's coming along, need your own home now, and even though I'll miss you, you're still only a short way away. It was lovely having you here, and it will be nice having family close by again; now that Richard and Sophie are back for good, and with you here, this part of the world will once more be a Denham enclave.\"\n\nLori also had a surprise for Rosie.\n\n\"Rosie, I know how much you mean to Davey, and I know you and Jimmy are planning to get married one day, so Davey and I have a little gift for you; call it an early wedding present. The two cottages next to the house are of no use to us, we have all the space we'll ever need in the main house, and more, and I know you and Jimmy want a place of your own, so please accept Stone Cottage and Rose Cottage as a gift from Davey and me. With just a little work, they can be turned into one larger house, whether you do that is up to you. We love you and Jimmy, and we want you both near us, so now you will be, in a home of your own, if you want it. And don't worry; when Adam has finished university, there will be something for him, too, a gift from Davey and me in memory of his Uncle Jerry.\"\n\nRosie was wide-eyed with astonishment, as was Jimmy, both of them speechless. Rosie got up and walked over to me, hugging me harder than Lori ever had.\n\n\"Thank you, Robin Hood!\" she murmured. I hugged my favourite cousin and playmate just as enthusiastically; I may have been gone a long time, but most of my earliest memories revolved around Rosie and her parents, and she was the closest thing I'd ever had to a sister before Lori came along. I wanted her and Jimmy to be happy and secure, in their own home somewhere near, as I knew Lori needed her, and I knew for certain the baby would need his or her Aunt Rosie in days to come. Perhaps all that money in those trust funds could be of some use to the entire family, not just me, as my father had intended; times change, after all.\n\n*\n\nEpilogue.\n\nLori and I were married formally in the stately, cathedral-like gothic chapel of Kings College, my father's old college at Cambridge University, two months after Sophie returned to England. As she'd promised, Aunt Sophie sat on the Bride's side and wept almost theatrically, along with Aunt Sybil, and Uncle Richard gave Lori away as though he was handing me the rarest of Stradivarius violins, his face beaming with paternal pride when he placed her hand in mine, before scowling at me like I was some incipient rapist about to deflower his pristine little girl, just as Aunt Sophie had predicted so long ago...\n\nRichard Junior and Hugo, along with two of my oldest friends from school, Harry Waterfield and Andrew Edgeworth stood with me as my groomsmen, while the fourth member of our quartet from school-days, Jack Cameron, was my Best Man, while Jimmy acted as Usher. Rosie, my cousin, my childhood playmate and best friend, was Lori's Maid of Honour, and two of Lori's childhood friends from Des Moines were her bridesmaids, but more about them later... \n\nOur first child, a gorgeous, golden-haired little boy with Lori's arresting blue-violet eyes, was born 4 months later, almost to the day. It really looks to me like Lori's plan to catch a baby worked, in the best possible way; it got me the most beautiful girl in the world, and she gave me a beautiful son, who looks amazingly like me when I was that age; maybe that's a good sign.\n\nCharlie is over a year old, now, and Lori is pregnant again, with a girl this time, and we live in our elderly, rambling dream house, complete with big, comforting fireplaces, warm chimney corners, reassuringly solid polished wood floors and an abundance of interesting little rooms to explore and get lost in, big friendly dogs, a duck pond and apple orchard, and a paddock with two mild-mannered little donkeys and a gentle giant called Tiny who occupies a large part of Lori's heart.\n\nThankfully the house is not too far from the hospital in Oxford where I now work as a consultant surgeon on the Cardiothoracic surgical intervention team. Jimmy and Rosie and their baby live a minute away in their own sprawling, comfortable conversion of the two redundant cottages on the piece of land we bought; my favourite cousin and her husband, and the cutest little girl in the world, secure in their own home, and close-by when we need them. They're my family, too, after all, and I feel better for having them near; Jimmy even added \"Denham\" on to his name so little Gemma would always carry the family name, along with his own, a compliment to Lori and me that won't be forgotten.\n\nWe live a simple life, my salary is more than enough for our needs, and I have all I could ever want right there when I get home from work. I have no intention of missing out on a second of my children's lives, so work takes a back seat to Lori and our boy, plus the daughter to-be, little Sophie when she finally gets here.\n\nUncle Richard is de-facto head of the family and arbiter of all disputes, not that there are any; he and Aunt Sophie live not far from us, and Charlie thinks they're his grand-parents; he calls them \"Gampa\" and \"Nana\"; they both dote on Lori, and she feels like she has parents again; she even calls Sophie 'Mom', and Richard is 'Papa'. Charlie is really their property, I only get to see him fleetingly on weekends, as he seems to spend most weekends either sleeping at his grandparents' house, or perched on Sophie's hip as she carts him around, apparently afraid to let him out of her sight for even a second.\n\nIf we have a fight, which is very rare, I must admit, Lori goes to see Richard and weeps on his shoulder, and before I know it, I'm having a father/son chat with him while Lori stands to one side smirking, but I have to be honest, he is scrupulously fair in his dealings with us, refusing to take sides and encouraging us instead to kiss and make up, something I find extremely easy to do. It's immensely comforting to have family of their calibre to fall back on when we need it. Sophie is still the most formidable lady I've ever met, I'm just constantly grateful she's on our side, because I really can't contemplate the sheer awfulness of having her as an adversary.\n\nLori and Sophie have a business together, organising weddings and country-house events, and they've browbeaten, terrorized, cajoled, and emotionally blackmailed poor Jimmy into working with them, or for them, I'm not sure which; I do know that Sophie scares him pale; this from a man who once strangled a Rottweiler attack dog in Sarajevo with one hand, while simultaneously shooting the shit out of the sniper-nest it was guarding with a Glock and a single clip of ammo in the other hand.\n\nThey pay him well, though, and so they should, considering the hoops they make that poor man jump through. At least he has Rosie and the baby to make up for being continuously terrorized by Aunt Sophie, and of course the fact Sophie absolutely dotes on baby Gemma and Rosie goes a long way toward keeping him sweet, plus he also adores Lori, and would walk through the fire for her; Richard was right; Ladies Who Organise are the best sort to have around.\n\nJimmy also runs a very successful holiday cottage business, having renovated all the cottages on the Denham Hall grounds, and built a few more to take advantage of the rolling scenic views of the Oxfordshire plain. He stays scrupulously far away from the hall itself, though; memories of what we saw there ensure he gives the place a very wide berth.\n\nMy cousins Hugo and Richard are both godfathers to Charlie; he's the apple of their eye, they even installed super hi-tech child-seats in their Aston Martin's so they can take him joy-riding, which gave Lori some serious concerns, but a stern word from Aunt Sophie seems to have curbed their urge to see how thrilled they can make him...\n\nBoth of them have already staked claims on Sophie, when she eventually chooses to make her grand entrance, so our children will be growing up surrounded by family who dote on them and adore Lori.\n\nAll that money in those trust funds is staying there; perhaps one day Charlie and Sophie and any other brothers and sisters, or other family will need it; I don't, I'm perfectly content to live here, like this, with my family around me; if Charlie taught me anything growing-up, it was that hard work and the fruits of your own labour are the best reward of all; I didn't earn that money, it was set aside to ease my life, but my life is perfect just the way it is, so maybe the kids will think of something worthwhile to do with it when they grow up.\n\nLori and I have agreed on one thing though; they're not finding out about it until they're legally adults; Lori doesn't want them growing up entitled, trust-fund brats, so they'll have to have a plan for their lives before they get anything from those funds. That's that pragmatic mid-Western work-ethic showing through, something Charlie and mother would have been proud of.\n\nDenham Hall is still in a state of near collapse; Lori's concerned that the family stuff in there will get damaged or lost, and is having the place stripped and everything put in storage; it's taking time, though, because there's such a lot of stuff in that huge, sprawling neo-gothic madhouse, and nobody will work there after dark, I wonder why...?\n\nI never wanted that scary place, and the thought of living there after what happened still fills me with an overwhelming urge to be somewhere else entirely. We offered the paintings to the National Portrait Gallery, but they took one look at my villainous ancestors, shuddered, and politely declined.",
        "We loaned the cars to the National Motor Museum, except for my great-grandfather's Bentley; we gave that to Uncle Richard, as it's his grandfather's car, and he is the oldest son of my grandfather, it felt right that he should have it; I think father would have liked that it went to his big brother and boyhood best friend. My father's and Charlie's motorcycles stayed with us, though; there are some things I will never let go of.\n\nMaybe the kids will do something about that ugly place in the fullness of time; I won't. English Heritage and The National Trust have both hinted that, as the place has no architectural, historic or aesthetic significance, public funds really wouldn't stretch to buying up and shoring up that hideous relic, and as the number of potential buyers could be counted on the fingers of one foot, they'd look the other way if we 'accidently' demolished that hideous eyesore, hmmm...\n\nIn the meantime, neither Lori or I have any urge to build another monument to bad taste like that place; our egos will never be that bloated, and with Lori's good, straight-shooting Iowa morality and common-sense to guide them, I don't think our kids will either.\n\nRichard and Hugo did attempt to cook up a \"Business Trip\" to Des Moines, and they asked Lori for the numbers of some of her friends; at first she was outraged; she wasn't pimping-out her school friends for those two, family or not, and she let them know it in no uncertain terms; Richard and Hugo were silently awestruck as Mount Lori erupted, but after she'd calmed down, they apologised and asked her properly to introduce them to some nice girls of her acquaintance, as they wanted to meet real girls, with real values, just like her, etc, etc. I learned a lesson that day in the fine and delicate art of buttering-up from two masters of the art, remind me to shake their hands, once they wash all the grease off...\n\nAs it happens, two of Lori's friends from Des Moines, girls I'd known since they were out of diapers were Lori's bridesmaids, Sara and Josie, and Richard and Hugo's jaws hit the floor with a resounding 'clang!' when they saw those girls. They may not have looked like Lori, but they came from the same kind of background, they'd known Lori and me all their lives, they had the same accent, attitudes and outlook as my Lori, and my two playboy cousins fell like a piano down a mountainside.\n\nAunt Sophie is of course busily gleefully planning the weddings. Good old Richard and Hugo; at last, two pairs of green eyes tempted them head-first into the noose their mother's been dangling in front of them for years, but you know what? I don't think they care...\n\nMy life with Lori is loving and rewarding, and we have immense fun as a family, so perhaps keeping it in the family really was my best move, ever!\n\n (Jack Cameron and Andrew Edgeworth and their wives appear in 'Shining Girl', and Harry Waterfield and his sister-wife, Sai Fong appear in 'All I Ever Wanted')"
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother",
        "sister",
        "incest novella",
        "oral sex",
        "anal sex",
        "wedding",
        "england"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/in-love-with-lori-ch-05-1"
}