{
    "title": "At His Majesty's Pleasure Ch. 13",
    "pages": [
        "Authors: Don't forget - if you'd like to participate in the last chapter's comment game, you still have a couple of days to submit words there! \n\n*****\n\nThe King handed her into the carriage, and Alais climbed up accordingly - no small feat, given the long train of silk and gemstones she had to arrange behind her. It was here, unfortunately, that her thoughts began to drift to the hollow and forlorn emptiness which should have been her stomach.\n\nIndeed, the stomach in question grumbled in protest when she settled into the beast of the carriage, her arms gracefully (surreptitiously) laying over her abdomen as though this would suffice to block the sound out. Maybe - maybe he hadn't heard. These things were always noisier to one's own ears than to the company around them. Still, she swallowed hungrily, annoyed with her complacency that morning. The handmaidens had watered her properly so at least dehydration was the least of her worries, but the extent of her breakfast consisted of a modest biscuit about the size of her fist. She suspected they had forgotten because there had been so much to do with the dress and the hair. Or perhaps, as (literally) unappetizing as the hunger pangs might be, they thought this would help her retain her figure?\n\n\"Yes, we shouldn't keep your people waiting,\" she echoed distractedly, not quite listening to what he was saying as she gazed listlessly out into the courtyard. The shape of that hedge was beginning to remind her of a muffin. \n\nOnce they finished seating themselves, the carriage was off, trundling merrily out of the courtyard at a modest pace.The grinding of the wheels served to camouflage further irritable complaints from her stomach, at least.\n\n\"What if they don't like me? Will tomatoes be thrown?\" she wondered aloud. She would have preferred something with more substance to eat, but flying tomatoes would do.\n\nThe King laughed, as he leaned back and made himself comfortable - an easy feat, considering the plush and velvety seat that cushioned them. \"They wouldn't dare,\" he said, as he curled an arm about her, drawing her close - mindful of all the layers and lace while he did. \"I'm sure you'll entrance them.\" \n\nThe heavy wheels were soon not the only source of noise - behind them, the rest of the procession sounded, each carriage compounding the last, and even at this distance, the distant cry of the crowds could be made out. And that was to say nothing of the professional noise-makers, those trumpet- and percussion- wielding marchers that preceded them in three colorful lines. As soon as they emerged from the castle proper, they began their job in earnest, and loud brass and heavy drumming echoed into the sky.\n\nA full bevy of the Chevaliers rode with them too, their density such that every which side was protected by horse and steel. The one she had mentally nicknamed Milktoast was riding at the forefront, bearing the royal banner: a tiger rampant, surmounted of a blue bendlet and black bordure. \n\n\"What do they know of me?\" she asked, having to raise her voice to be heard above the din.\n\n\"Very little.\" He spoke into her ear, instead of competing with the music. \"Except that I was apparently enamored enough to steal you away. I think they're under the impression that it was very romantic.\" He grinned at the thought, as if finding it infinitely amusing. \"Touching, isn't it?\"\n\nThey were moving past the bridge now, and all its gibbetted glory. True to his word, Edmure was no longer one of the denizens. She fidgeted uncomfortably, ever so slightly, but she did (in a kernel in the uttermost back of her mind) appreciate the absence of her former betrothed. So he was able to keep promises.\n\nShe wasn't given much time to contemplate, for they were already moving on, past bridge and its horrors and toward the open gates.\n\nThe din of the city hit first (raucous yelling and excited chatter), and then the smell (pungent with the aromas of spice and perfume that characterized a market). And then, as they emerged from the gate, the sight of Obsivia's people bore down upon them - waves and waves of them, bunched along the sides of the road, men and women and children (and children on men's shoulders). With all of them clamoring to lay their eyes on the new Queen, it was a wonder that the road was not blocked, but the King seemed to have accounted for that in advance: more guards lined the streets so that the carriages had a clear path forward.\n\nThe trumpeting fanfare at the forefront was soon joined in by the myriad cries of \"Long live the King!\" and \"Long live the Queen!\" and \"WHY ARE WE CHEERING, PAPA?\" and so on and so forth. They were the people of his capitol, closest to him in proximity, so of course they would love him most. \n\nDuring her first journey through the city all those days ago, she supposed she might not have afforded it the proper attention it deserved. Now, she had no recourse but to recognize it for the breathing and clamoring pandemonium it was; there was almost too much to look at, too many faces and too many insistently waving hands. Still, her new city was captivating, in its way. \n\nThe first flower to reach their chariot (a daisy, bright and yellow) struck her squarely on the nose. Many of the less fortunate buds struck ground shy of the carriage wheels, others bouncing off the armor of their escort.\n\nAlais lifted the daisy off her garments and squinted at it. I can't eat this, she couldn't help but think, and instead tucked it behind her ear as a show of her acceptance of their - gifts. No later than that did the head of a rouge carnation land upon her lap, other petals eventually fluttering their way over her hair.\n\nThe King gazed down complacently at his people, looking magnanimous and (annoyingly) handsome as he waved at them. Of course he would enjoy the attention, she thought.\n\nAs for herself, she did not allow a single crack in her queenly airs of decorum and grace. She wondered if she was as beautiful and worthy and radiant as imagination and hearsay (which she was sure had run rampant by now with all the propaganda) - but so far she was hailed by choruses of cheers, which could only mean she was playing her part. Even if on the inside, Alais was closer to crying and whining and rolling about on the bottom of the carriage in unqueenly tears. She was so hungry.\n\nThis didn't stop her from smiling amiably at the blurring sea of heads below. \"I'm assuming they'll be given a feast of their own?\" It would explain a great deal more of their collective joy.\n\n\"No, I'm hardly so cruel. They've already been fed,\" replied the King blithely. He pointed out the uniformed servants in the distance, still pushing their carts about at the fringes of the crowd - with glorious tubs of sizzling sustenance. The flowers must have been supplied too.\n\nHe picked off a stray rose, snapping the stem rather absently (of course destruction would occur to him in an idle state) and tossing it over to join the rest. \"But I'm sure,\" he continued, smirking, \"their good cheer could only arise from admiration of the new Queen.\"\n\nTwo young boys looked up at them, wielding dual drumsticks in each hand, and as the carriage passed, one took a particularly majestic bite out of his leftmost. When they noticed her helpless gaze upon them, she wiggled her fingers in a pleasant little wave, and one of the attentive guards seemed to take this as a cue to toss the child a coin. All well and good - but that wafting scent was nothing short of cruel.\n\nHad she married anyone else (and in less bizarre circumstances), she might have simply told him that she was feeling a tad peckish. Seeing as this was Alexander, she was instead filled with a discomfiting mixture of irrational uncertainty and even less rational pride. Maybe he would arrange something small for her (although it was never small), maybe he wouldn't. Maybe he would taunt her in his cavalier way, maybe he would be kind. Maybe he would think nothing of it, exactly opposite to how she was assuredly overthinking to the point of excess. It was all very difficult.\n\nAnd thus, with her circular and unresolved rationale, Alais persisted in her endeavor to display no weakness, to be beyond reproach, for this apparently very important day.\n\n\"There - you recognize the temple?\" said the King, interrupted her reverie. The towering spire loomed in the distance, but slowly, they made their way forward, past the deafening cheers and tantalizing scents.\n\n\"I remember,\" she returned, softly but still in her pretense of blissfully sound spirits. \"Oh, is the ring still stuck to the floor?\"\n\n\"No,\" said the King, chuckling. \"It was, fortunately, excavated. Let us hope you are not so...excitable this time.\"\n\nStrengthened by food and drink (as she was not), the peasants continued to be impressively loud, even as the carriages rolled out of the city proper and toward the enclosed pathways of the temple district. At least the trumpeters and drummers had since quieted.\n\nBefore long, they reached the Temple of Feros, its austere architecture as foreboding and cheerless as before. The King disembarked first, helping her off the from the elevated height of the (excessive) carriage, and from there, they parted ways, her ladies-in-waiting swarming about her, on cue, to usher her into a preparatory chamber.\n\nThe ceremony, which the King had described as a \"passing formality,\" was far more elaborate and extravagant than that phrase warranted, and certainly on an exponentially grander scale then the secret wedding they'd had some days ago. Of course, the entire temple this time was populated, crammed full of silk-clad nobles and their considerable retinues, and a proportionately larger squad of knights to guard them (or guard against them, probably). The collection of candles and incense sadly stayed constant, likely because of safety concerns (though they were probably still something of a fire hazard), but not much other excess remained constrained: full, grand banners of his House had been draped across every unused wall, a dozen feral tigers brooding above them; from somewhere or another, a bountiful set of statues and exotic-looking plants had been inexplicably scattered liberally through the area; and the priest wore his full regalia, along with a backdrop of some thirty monks that persisted in low, steady chanting. It was a good thing that the temple was so large.\n\nMuch of the actual ceremony remained the same. The priest recited a passage that was only slightly longer, and they pronounced the equivalent vows thereafter. When they exchanged rings, the King looked at her with something of a smirk, as if recollecting the last time they had done so and she had calamitously lost her grip. \n\nThis time, she was far more poised. She even managed to smile at him as she slid the ring over his finger, for the benefit of their audience.\n\nAnd when he tilted her chin up and brushed his lips over hers, it was at least not as unfamiliar as before - even if he kissed her like he was claiming her, even if he had a way of stealing her breath all the same. When he drew away, a knowing look in his eyes, there was accompanying applause thundering from the temple floor.\n\nThere was comfort in knowing what her Obsivian coronation was to next entail - that was, no comfort whatsoever. For once, she might have preferred remaining in the dark about the ceremonial execution to come... Well, no. To dread of it was still preferable to being surprised.\n\nShe knelt onto the ground and lowered her head, just as her ladies-in-waiting had instructed. The length of her gown pooled about her, trails of it even overflowing down the steps from the altar. Her knees pressed snugly against the rug that had been laid there for that purpose.\n\nThen her ears picked up a faint clinking of chains from behind, and Alais inhaled sharply.\n\nShe looked back to the metallic contraption that rested on the dais before. It bore a remarkable resemblance to a pillory of some kind, with holes for securing the head and hands - except that it was mounted over an ornate basin. That must be where they were intent on dragging the poor prisoner. \n\nIndeed, seeming to understand its purpose (and his own), the prisoner bucked and struggled, in a frenzied kind of fear, such that his chains rattled all the more over the stone steps of the temple. Collared, head shaved, and flailing with animalistic instinct, he really did look the part of a sacrificial creature of some sort, so removed was he from those who looked upon him (his simple loincloth contrasted jarringly with all the finery). This was not helped by the cloth stuffed in his mouth, which rendered his speech nothing more than incomprehensible protests.\n\nWhere before, their noble audience was unanimous in applause, there was a little more variation in their reaction here. Most were detached; such occurrences seemed to be common, and her new countrymen even seem to affix some sort of sacredness to their performance. But she did catch a few who seemed uneasy, and even a few who averted their gaze. \n\nThe King, of course, looked entirely calm about the affair. At his gesture, the knights forced the hapless man down and snapped the contraption closed, so that his neck and hands were snugly trapped. \n\n\"Harrgh!\" The muffled cry sounded suspiciously like a plea for help. \n\nUndeterred, the priest spoke smoothly over this, reciting some passage about the cleansing property of the blood and the holy sacrifice they hoped to offer Feros. As his words slowed, echoed by the ominous chanting of the monks behind him, he unsheathed a ceremonial knife and, with a low bow, presented it to the King.\n\nWith the same detached manner - as if he had done this a hundred times before - the King grabbed hold of the collar and twisted it up to expose the vulnerable flesh beneath. He lowered the blade.\n\nOn cue, the prisoner struggled all the more, his eyes flickering from one face to the next in the vain hope that one might be his savior.\n\nAlais lowered her gaze. Sensations that were cold, frozen, and numbed over began to stitch in her chest. She felt the wrongness of this - of this needless waste of a human life - and yet her knees were firmly fixed to the rug. If it truly meant something to her, would she not have risen from her spot, or at the very least expressed her disapproval (whatever good that would do)?\n\nNothing. The hand slid back onto her luxuriantly dressed lap, and she waited for the crying, and later the blood-curdling gurgling, to fill her ears. Indeed, the blood spilled beautifully into the basin - not that she had the best of views with her eyes now pinned to her lap.\n\nBy the time the ritual was finished, her body language was a notch more frigid than that queenly serenity she'd determined to emulate before. She could rationalize the sacrifice away anyway she liked; for example, public executions were a universally common practice, and who was she to disparage this supposed Obsivian... tradition when it was no better or worse but for the ceremony of it? If anything (she thought with black humor), was it not an efficient use of resources both to punish a criminal and channel his life force towards religious blessings? \n\nBut that didn't stop the act itself from unsettling her, when it was being performed before her very eyes - as a princess, she had been relatively secluded from such acts of violence during her life in Vvaria. She was not yet accustomed to violence, as so many of her countrymen seemed. And that the King - her husband - had killed a man so casually, as if it were no more unusual than the exchange of rings moments beforehand...\n\nThe prisoner was still now, body sagged against the metallic pilloy. She could see the red in stark contrast against the pale, ever paler, skin - seeping through in lovely rivulets down the basin and drawing intricate lines across the ground.\n\nThere was something symbolic to the affair ... and Alais was still not entirely adjusted to witnessing skin being torn without it stirring some sort of visceral reaction. \n\nSwallowing, she looked away. A bowing servant was offering the King a bowl of water, which he made use of in ridding himself of residual splatters. Once he was cleansed, he nodded in satisfaction and the servant retreated, only to be replaced by the priest, who bore the Queen's crown upon a plump red pillow.\n\nHe approached, and, quite gently, lowered the crown to her bowed head, before offering his hand to her, indicating she could rise.\n\nA few shaky exhales, heaving and uneven, was all it took to regain some semblance of composure. Fast and light breathing fluttered from her lips, and her hands dropped, slowly, once more to fall over her stomach (which was still roiling for a different reason). Previously she hadn't thought herself capable of feeling both sickness and hunger at the same time.\n\n\"And with the blood of this humble sacrifice, we ask that Feros bless Her Majesty's reign, and watch over us all,\" concluded the priest. \"Long live the Queen.\"\n\n\"Long live the Queen,\" repeated the King, smoothly, and the rest of the congregation echoed this, the chorus of voices mingling the words.\n\nHe reached for her hand, taking stock of her fingers firmly, and began leading her down the aisle. The retinue of knights and ladies in waiting followed, at a safe distance, as did the eyes of their audience. Only after they emerged outside, and the doors closed behind them, could the faint sounds of conversation and gossip be heard behind.\n\nPerturbed as she was, she did not fight against his grip as her feet attempted to follow in his lead. Unfortunately, there was still quite a lot of material underneath said feet. On the best of days, she could scarcely manage the mass. Recovering from such an event, her steps were uneven. She nearly fell over him, once or twice; at certain points her feet falling right over his to avoid toppling onto the ground altogether.\n\nThe carriage awaited them. The King helped her up, as before, his manner actually quite patient; when she stumbled, he only steadied her with a touch that could be described as gentle, though he did look amused.\n\n\"Perhaps I should simply carry you the rest of the way,\" he remarked. Of course, it would be a quip he would make, after that bloody display.\n\n\"Who was he?\" she asked. She hadn't before, out of some need to create a mental detachment from the situation. Now, suddenly, curiosity festered.\n\n\"A monk,\" returned the King. \"Or, at least, he used to be. He was Brother Galen's assistant, and helped our intrepid assassin assume his fake identity - and dispose of the real brother.\" He nodded to the carriage driver, who snapped the reigns in response and sent them on their way once more.\n\nThe carriage rolled along, this time taking a less traversed path, so as to avoid the same crowds (though the attention of some peasants could not be wholly avoided).\n\n\"I thought my choice rather poetic,\" he continued, as he lounged back in his seat. \n\nConscious of weight newly vested upon her head, her hand lifted to adjust it this way and that whenever she could feel the balance on the brink of sliding askew. The thing was heavier than any diadem, circlet, or laughably stereotypical princesses' tiara she was accustomed to. \"What do you mean?\"\n\n\"He abandoned his vows and his piety, in perpetrating treason. Now I have returned him to religion, in making holy use of his life.\" He glanced sidelong at her, with a smirk, as if to say 'Am I not generous?' \n\nAlais wrinkled her nose at his humor. But she wrapped both hands, albeit still tentative in nature, around his. It was always easiest to look for distractions, and what was a more proper distraction than her persona of adoration? \"He deserved it, then.\"\n\nThe King allowed her to envelop her hands around his, and shifted so that he grasped her fingers in turn. \"Of course. I think I was even merciful, in not subjecting him to a slower death.\"",
        "\"Why didn't you?\" she questioned. Mercy was an odd look on him.\n\n\"He provided me with some information,\" he replied. \"After some...encouragement on my part, of course.\"\n\nDid he mean to sound ominous, or was that just his natural state of being?\n\nHe seemed to sense that her discomfort had not entirely left her. \"You seem troubled. Surely treason is punished with equal severity in Vvaria?\"\n\n\"Of course.\" Her hands shifted over, and under, his. \"But it's a different thing to see death so - openly, here.\" What was this, the third man he'd murdered now, since she'd fallen under his care? And that was only counting those she'd witnessed personally. \"It takes time for one to become accustomed.\"\n\nThey'd left the district of the temples, and were moving swiftly past the outskirts of the marketplace. This time, the long trail of carriages behind them would wait - it was only his personal guard and her ladies-in-waiting to advance first. Clusters of peasants gathered here and there to gawk and shout blessings at them, and one or two even had residual flowers to launch in her direction. A particularly portly woman was still gnawing on a bone.\n\n\"Ah yes. Vvaria protects the delicate sensibilities of its noble ladies,\" the King said, with a wry smile. \"A shame. But I know you are adaptable. Soon, you may be dismantling men yourself, and I will be the appalled one.\" He chuckled.\n\n\"You, appalled? I don't know if that's possible,\" she teased, dipping her head against his palm just in time for their audience to reappear. \n\nShe should not have been able to appear so light-hearted after witnessing the death of a man firsthand. Was she getting callous already? And was that such a bad thing, if she was to survive in this new world?\n\nThe portly woman and her bone had not escaped her notice, even during this distracted state. Alais swallowed a quiet lump that had gathered in the back of her mouth, and she slid away from him, again, this time to mask the continued rumblings of her stomach. Her arm braced almost too casually against the side of the carriage, as she rested her cheek against her palm.\n\nThe King followed her gaze to the inauspiciously-placed peasant. \"I suspect something else is plaguing you.\"\n\nShe glanced at him for a fleeting second before trailing her gaze back to the side of the carriage. \"It's nothing monumental.\"\n\nHe raised his eyebrows at her. \"If so, then surely you can speak to it.\"\n\n\"I suppose, in the rush of everything,\" she finally relented, \"I'd skipped breakfast.\"\n\nThe King blinked at her, for a moment. Then he laughed. \n\nShe swatted his knee with a dainty, frilly, and laced up sleeve in recompense. \"How is that funny!\"\n\n\"Oh, poor Alais,\" he said, once he had managed to quiet his mirth - though something of it lingered in his grin. \"Had I but known. You must have been hungry this whole morning - but why didn't you say anything?\"\n\nHe gestured over one of his knights, instructing him to procure some fresh muffins from the passing bakery.\n\n\"There wasn't -\" What was a reasonable excuse for her failings in communication. \"Time.\" Good enough.\n\n\"And how very callous, my lady. Here you are, so upset by the death of - \" He paused - the name of the prisoner seemed to have actually escaped him. How horrid, she thought. Did he kill so many people that he couldn't be bothered to remember them all? He cleared his throat. \"So upset by the death of that conspirator, and not a minute later but you're instead occupied with your own hunger.\"\n\n\"I can't control my body's needs,\" she retorted. She paused, for upon reflection, the words could be interpreted in another way that had nothing to do with appetite (for food). \n\nIt did not escape the King either, for his smile grew wider, with mischief. His arm, which had settled around her waist, gave a little squeeze. \"So I've noticed.\"\n\nShe colored slightly, but went on, \"Therefore, there's nothing callous about it.\"\n\n\"Oh, but to be so fickle. How can I hope for you to mourn me, should I meet with an untimely fate? You would concern yourself more with breakfast, perhaps.\" More humor, this time halfway at his own expense. There was something satirical to his smirking that suggested he knew better - that she was as likely to mourn him as he was of feeling remotely sorry for taking that monk's life.\n\n\"Do you really expect I'll outlive you?\" she asked, one arm pressed against her abdomen while the other pinned her crown against her hair, dark humor for dark humor. It was well-established that he had a temper, and he was no stranger to violent impulses. And he had already disposed of at least one lover before.\n\nHis brows rose - looking rather surprised by this bleak outlook, cloaked in humor as it was. \n\nBy this time, the knight had returned with the procured spoils, which he duly handed over. The muffins were still hot to the touch, freshly forged. \"They're not much,\" said the King, \"but they should tide you over to the feast. We wouldn't want to spoil your appetite.\"\n\nAlais took the wrapped bundle in her hand, feeling the warmth of the pastry seeping through the cloth. \"This is more than enough, thank you.\" With the way she looked at him then (it might have been her relief above all), it wouldn't have been a far stretch at all, for the unassuming bystander, perhaps, to deduce that she was, as a matter of fact, in love.\n\n\"You really were hungry,\" he remarked, laughing. Returning to their previous topic, he continued, \"In any case, is it so improbable that you should outlive me? Doubtless you've heard how often I am away at war. Perhaps you'll be lucky and I'll lose one day.\" The way he said it was perfectly humorous - arrogant bastard that he was, the concept of defeat did not seem grounded in reality.\n\n\"If you think so,\" she mused, daring to tilt her head toward him so that the crown began to shift, again, to one side of her head, not truly minding the firmness of his build resting close. He was so grievously handsome. \"Do you still enjoy a good wager? If I die before you\" (and for whatever reason, like childbirth, for instance; it wasn't worth declaring that said reason might also be his temperament) \"I'd like the words 'I told you so', engraved on my tombstone.\"\n\n\"Well, I think that's rather cruel of you,\" said the King, chuckling at the prospect. Idly, he reached for her crown, adjusting the golden ornament so that it was no longer askew; as usual he had no reservations about the casual invasion of her personal space. \"Would I not be devastated enough by the loss? And on top of that, you would have me put in my place? You have no sense of mercy, Alais.\"\n\nIn the midst of unwrapping a muffin in dainty, careful maneuvers - conscientious (and fussy) enough not to let a single crumb drop - her hands stilled momentarily as she head shifted curiously against him. \"No,\" she said. \"I think you'd move right along. Capture yourself a new princess with new objective gains, and the cycle repeats itself until there are no more princesses left.\"\n\nThere should have been something intrinsically wistful or melancholic about this. Instead, she affected what she hoped to be an eerily serene expression, and took a nip of the pastry almost immediately after she'd unveiled it.\n\n\"Do you really think me so indifferent?\" He laughed, appraising her indifferent expression. \"I think you're underestimating my attachment. I would certainly mourn, high and low.\"\n\nAlais took another happy (and still very dainty) bite out of her much overdue breakfast, and gave him a suspicious peer. \n\nIndeed, he could not seemed to help his awful joke. \"After all, the Vale of Stars would be a very great loss to me.\" \n\nMore laughter - the King always had a way of amusing himself. \"No, I jest, of course.\" He leaned down to kiss her lightly on the cheek, feeling the muffin-bulge there. \"How could I replace you?\" His expression turned mildly satirical, though it at least it wasn't malicious. \"After all, are we not in love?\" \n\nAlais squirmed from him as she otherwise chewed merrily away, wrinkling her nose at the muffin-bulge kiss. Please, no public displays of affection while she was eating. Emitting a faint, delicately close-mouthed sound of protest, she batted at his face - still under the pretense of disgusting, playful affection.\n\nHer immaculate manners allowed for speech only after a successful swallow, at which point she contended, \"If I recall correctly, the vow was for me to love you. Your teasing is a little lacklustre if I'm not entitled to your love in the first place.\" \n\nHer resulting smile managed to appear innocent and shrewd all at once. It was quite all right, if he didn't love her; even before the great shadow of King Alexander encroached upon her everything, she never expected to be vested in a marriage filled with fairytale romance and true love. In that respect, this wasn't that much of a disappointment.\n\nBut could they ever carry on some semblance of friendship? Was this friendly teasing? Or was this more like...playing with a pet, for him?\n\n\"Oh? And perhaps I have vowed to love you as well. Perhaps your charms were too much for me to resist,\" the King return, in the same light tone. He smirked. \"Do you not feel my love for you? Have I not treated you especially well?\"\n\nThere was no questioning the playfulness behind these words, though she could not gauge how much of his sentiment was serious. She suspected he had actually been treating her well, relative to his standards. If the sad reality was that the experience of the last week were a reflection of the King on his best behavior, she wondered what he was like at his worst.\n\nMore traveling, more clatters of hooves, more peasants that gawked at them from down below. The temple was but a speck in the distance now, the palace looming back into view. \n\n\"You're aware there will be more violence during the feast?\" he thought to remark.\n\n\"Oh. Yes, the handmaidens mentioned.\" It all seemed so excessive, but who was she to question tradition. \"I know gladiators will be fighting, in my honor.\"\n\n\"Yes, gladiators. Though the more technical name would be bride berserkers, in this context,\" he informed her. \"Or wedding warriors, as the northerners like to say.\"\n\nA bizarre name, but it hardly took away from the bliss that was muffins. She pondered over the terminology, a faint frown curving her lips as she chewed in silence.\n\n\"I see.\" She sounded reluctant in her understanding, though the muffin helped her keep her peace. \"Do you know invented the term bride berserkers?\"\n\n\"I don't know that any one person was the author,\" he responded. He paused briefly to toss a coin to some beggars in the street. \"As with many things, it was a custom passed down from generation to generation.\" He considered. \"Of course, predating that, our ancestors favored displays of magic - or, at least, purported magic. In those eras, it was bride bedazzlers who ruled the day.\"\n\n\"Magic battles sound so much more interesting,\" she endeavored to say. The muffin had taken off much of the nervous edge, though the smoothness of the gesture did waver with all the subtleness of a blink. \"I'm so disappointed now.\" \n\n\"I know this must be all very foreign to you,\" he said. His hand, so much larger and rougher than her own, gave a little squeeze, that was probably meant to be reassuring. \"And I appreciate your good humor in all this.\"\n\nThis sentiment certainly sounded friendly, though his manner could be better characterized as charming rather than heartfelt. Similarly, despite his overall magnanimity, there was something of a condescending texture that could not be shaken from his tone - not that that was unusual, or unique to her. Neither was it exactly surprising. But it was important for her to remember the distinction.\n\nThe King smiled, as the castle rose up ahead of them. \"For now, let us try to appreciate the bride berserkers, magicless though they may be.\"\n\n*\n\nAs a surprise to no one, the feast was an extravagant affair. Some restraint had had to be exercised with respect to the temple, which was necessarily a place of somber propriety, but not so here, in the great ballroom, in which frivolity and excess was to be particularly indulged. The innards of the building were wide and cavernous, even larger than the King's bedroom (at least slightly more justified given its function), and easily housed the three hundred especial guests that were privileged enough to have tables on the ground floor proper. Hundreds more - lesser nobles and fourthborns - could peer out from the balcony seats, if they so desired, though they were far removed from the splendor of the royal presence.\n\nSuch royal presence was honored, of course, with an elevated seating and central table, arranged so that they faced their audience. There was a rather substantial gap between royalty and subjects - a cordoned off square with expansive space. For dancing later, probably. Or the ceremonial battle.\n\nPresently it was being used for...gladiator viewing. Alais had no other way to characterize what was before them: ten stalwart warriors stood upon a raised table, awaiting appraisal. Each wore only a loincloth and bared the rest of their bodies for all to see - oiled as they were, their muscles glistened with a visible sheen. At least, unlike the other slaves, they remained uncollared.\n\nThe aristocracy milled about, examining each selection and chattering amongst themselves. Occasionally, she heard a stray giggle or two as a noblewoman pointed out some bicep or another to her friends.\n\n\"Your Majesty will choose one of them to represent you as your champion,\" reminded Fiona helpfully, at her side.\n\n\"And the more foes your champion vanquishes before he is defeated,\" added Eleanor, \"the more fortune you shall have upon your wedding.\"\n\nShe had dismissed all of her handmaidens save these two, as a show of generosity that they might enjoy themselves instead of attending to her. Her choice in picking the remainder was not difficult - Fiona seemed hungry to prove herself, and Eleanor's somber professionalism suggested she would find more solace in her job than cavorting around.\n\n\"Before he is defeated?\" echoed Alais. \"What if he wins?\"\n\nEleanor shook her head. \"It is unlikely he will be the last man standing. Once you distinguish a champion, you have given all the others a common target. The one who strikes him down wins fame and notoriety for himself.\"\n\n\"I see,\" said Alais. She wondered that the contest wasn't staged - surely they could give incentive to the other competitors to allow the champion to prevail, and therefore win a supposed \"blessing\" for the marriage? But she supposed even Obsivians would not trifle with what they perceived to be holy rituals.\n\n\"How will I know who to choose?\" she continued, pursing her lips. \"I know nothing of these men.\" \n\nShe wasn't naturally superstitious, especially when it came to foreign superstitions (and Obsivia still seemed foreign, even if she was now technically Queen). She did not imagine her marriage would really win a blessing based on the fighting prowess of a gladiator - and what good would a blessing do, considering her husband? But she had the sense not to make too terrible an impression on her subjects, and she therefore decided she ought to make a respectable choice. These Obsivians did seem to care an awful lot about their violent games.\n\n\"No one does, Your Majesty,\" said Eleanor. \"These are men who've never fought in the Arena of Thorns - the capital. They come from distant parts of the Kingdom, little known to all who might be here. It is said that every Queen will allow fate to guide her, rather than knowledge.\"\n\nLuck was what that translated to, in Alais's mind. And perhaps a dash of intuition. But mostly luck. \n\n\"Your Majesty needn't worry,\" soothed Fiona. \"As long as your champion vanquishes one or two foes, it is considered a good omen.\"\n\nAlais nodded agreeably. \"We should get a better look, then. I won't have fate hampered.\"\n\nAs they came closer, she could see a thin nobleman stationed at very end of the gladiator ensemble, hands clasped behind him and observing the proceedings. He saw their approach at once, turning to greet them. \"Best of the best, are they not? Each of these fine gladiators are easily worth ten common soldiers on the battlefield - perhaps more! And today, they fight in your honor.\"\n\nHe was as tall as he was thin, she noted, with a strong nose and a shrewd gleam in his eyes.\n\n\"Ah, forgive my manners, Your Majesty,\" he added, bowing low. \"I am Lord Bartholomew Bosephius Wellington the IV - at your service. I am certain your husband would have introduced us, had he not become preoccupied with matters of state.\"\n\nThey both glanced toward the opposing side of the room, where the King appeared to be in conversation with a knight of some sort.\n\n\"I hope the ballroom isn't about to become the centerstage of another of his wars,\" she returned lightly, which was met by an easy smile from the man. \"Well met, Lord Bartholomew. Are you experienced with gladiators?\"\n\n\"I am indeed. Though I serve the King primarily as his Inquisitor, I do dabble in the sport, you could say. These ten men were handpicked by me,\" he said, gesturing over his wares grandly. \"I look forward to seeing your choice of champion from among them.\"\n\nInquisitor, was it? It sounded unsavory - the kind of position that probably warranted torture, if she was right about the King's policies on inquiring. But he was being civil to her, and she had no reason to make more enemies than she needed.\n\n\"Thank you,\" she said, summoning a smile. \"I will endeavor to choose wisely.\"\n\nShe left Bartholomew in favor of his exhibits, Fiona and Eleanor still following closely at her side.\n\nThe first gladiator was also the largest by far - a hulking behemoth that looked more bear than man. His height was only amplified by the table he stood upon, in the most unnecessary of ways; his muscles bulged obscenely underneath his unruly hair.\n\nFiona hovered a little further back, for which Alais could not entirely blame her. He looked quite savage. \n\nWasn't she supposed to speak to them? She looked up (far up) into the man's eyes. \"What is your name?\"\n\nThe gladiator thumped a fist to his chest. \"I am Titus Caprarius,\" he declared, his voice a throaty rumble. \"Allow me to be your champion!\"\n\nHis wide-set eyes and dreadlocked hair did not suggest an Obsivian heritage. They must have given him the name.\n\n\"Why should I choose you?\" she questioned him.\n\n\"Because I am strongest of all before you, Your Majesty,\" answered Titus. \"These are the hands that have crushed the skulls of man and beast alike. And they shall crush my foes, on this day.\"\n\nIt might have been bluster, but the man's sheer mass spoke for itself. Titus. Certainly an option.\n\nAlais and her handmaidens continued down the line, It was a little uncomfortable interacting with men who were barely clothed, their muscled chests gleaming down on her one after another. (Though part of her was not entirely...reluctant to eye some of their figures.) Such displays of flesh felt improper, but these Obsivians seemed to look upon their slaves as mere objects - to them, perhaps it was no more unusual than observing well-sculpted (well-oiled) statues. At least the other nobles cleared out of her way, even if she spied a couple observing her with curious eyes.\n\nThe other discomfort came from how the gladiators prostrated themselves before her. They were of different heights and builds, their tongues shaped with different accents, but one thing seemed universal: each man offered himself up zealously - so zealously she wondered what kind of reward awaited them should they win the contest as her choice. She schooled herself in composure, though - this was not dissimilar to knights jousting in her honor, and of that she'd had more than enough experience, as the sole princess of a kingdom.",
        "Her inquiry was the same for every man.\n\n\"Why should I choose you?\"\n\n\"Because I am quickest. My blade moves faster than any mortal eye can follow, every swing a viper's strike. Allow me to represent Your Majesty!\"\n\n\"And you?\"\n\n\"Because I've endured more than any man here, Your Majesty. In my lifetime I have weathered two wars and more battles than I can count. This fight will not be any different.\"\n\n\"And you?\" \n\n\"Because I know the value of hard labor, Your Majesty! I practice day and night to hone my body, striving to rid myself of its imperfections. No other man here has trained half as hard, nor desires victory more.\"\n\n\"And you?\"\n\n\"Because I'll win.\"\n\nAlais blinked. They had come to the last gladiator in the lineup, and none before him had been so succinct. \n\nThe brown-eyed man with matching locks tied behind his head grinned at her in a friendly fashion, shrugging (almost apologetically) as if he could not help but state the truth. He was taller than average, but certainly smaller than Titus; his build was lithe and muscular, but seemingly no more so than his competitors, his skin bronzed from the sun. Was it mere bravado? She studied him, but found nothing in his countenance that suggested self-importance - on the contrary, he appeared markedly more relaxed than his impassioned cohorts.\n\nShe arched her brow at him. \"Your name?\"\n\n\"Septimus Marius Marcellus,\" he answered. His accent emphasized the consonants with a distinctly northern flavor, and indeed, his hair was kept long in the Naician tradition. At Eleanor's affronted look, he cleared his throat. \"Your Majesty.\"\n\n\"And what makes you think you'll win, then?\"\n\n\"Never lost a fight.\"\n\nThe gladiator next to him - a Tullus Lestia - snorted in disbelief. He only ventured to speak, however, when Alais turned to him. \"It only takes a look at him to see the lie, Your Majesty. He has little by way of scars.\"\n\nIt was true. Septimus bore only a few faint marks, whitened from the passage of time, in contrast to the heavy scarring of the other gladiators.\n\nSeptimus only grinned again, though, appearing unruffled. (He seemed oddly cheerful for a person in his position.) \"Rather makes it all the more impressive, doesn't it?\"\n\nAlais raised her bejeweled hand to cover a laugh. \"Did you run from your fights, perhaps?\" she said, with some light cheek. \"I suppose there is no losing if no battles were to be had in the first place.\"\n\nBelatedly, she thought this might have come off as more insulting than intended, when her target was a gladiator - were not fighting and honor the most important things in their lives? \n\nSeptimus was surprised, but he laughed as amiably as before. \"Wouldn't that be yet more impressive? Being able to flee the arena - now that would be quite a feat.\"\n\nAlais gave him another look over, squinting a little. \"I suppose. Well, you've given me a lot to think about. I suppose I'll just go and - reflect some more, then.\"\n\nHer handmaidens followed her as she stepped away.\n\nFiona was quick to speak. \"I don't like him, Your Majesty. He does not appear to be taking this seriously.\"\n\n\"Perhaps not,\" said Alais. \"But that is not necessarily a fault.\"\n\nFiona frowned, but was interrupted as the thin figure of Bartholomew converged on them. \"Has Your Majesty made a decision?\" he cheerily inquired. \"By all means!\"\n\nAlais hesitated, looking back at the row of gladiators. Titus would be the safe choice. Titus made dwarves of everyone else. Titus could probably crush her if he stepped hard enough (that was to say, not very hard at all). But there was Septimus and his simple confidence - a confidence that seemed to somehow weigh more than all the fervent promises the other gladiators threw at her. She was reminded of an old adage: the man who bellows loudest of his power is the one least powerful.\n\nHe could have been arrogant, of course, or worse, a fool. But he did not appear to have the disposition of either. Alais generally prided herself in her readings of people (with the one major exception of a charming 'Duke Adrian'), and her intuition here was to believe him. Besides, he was by far the most... even-tempered of them, and that had to count for something, right?\n\n\"Yes,\" she answered, making up her mind. \"I choose Septimus - the one at the very end there.\"\n\nBartholomew's brows shot up, so high she thought they might be in danger of retreating into his hairline. \"Ah, I see. Are you certain, Your Majesty? Would you not consider, say, Titus?\" he gestured at the beast of a man. \"Sometimes there is no shame in the obvious choice.\"\n\nEleanor frowned vaguely. \"Begging your pardon, my lord, but is not the Queen to remain uninfluenced by others in this choice?\"\n\n\"Oh, of course, of course. No influence intended. I merely meant to make sure she is certain. You see...\" Bartholomew sighed, but continued, \"Septimus was something of a last minute addition, and I did not subject him to the same, ah, rigors as the others. I would not want Your Majesty's champion to perform poorly as a result of this inadvertent oversight. So due to the risk, perhaps another - \"\n\n\"What's this about an oversight?\" \n\nThe King had returned, his discussion concluded. Her handmaidens stepped aside as drew before them, towering over her and Bartholomew alike.\n\nBartholomew looked unpleasantly surprised. She noticed how his fingers twitched, before he clasped his hands loosely behind his back. \"Poor choice of words on my part, Your Majesty,\" he said, making to offer a conciliatory smile. \"I merely meant that Septimus is less experienced in a formal arena than the others, and I have not had a chance to witness him in such a setting. I had not imagined that Her Majesty might choose - \"\n\n\"I was under the impression that you selected the finest of warriors, Bartholomew,\" said the King. \"What was it that you kept saying - each of these gladiators is worth ten of my soldiers?\" He spoke mildly, even casually, but this did not have a calming effect on the other man. \"I hope you haven't been misrepresenting the quality of your stock.\"\n\n\"Not at all,\" said Bartholomew, quickly. \"Septimus here is the greatest of warriors. A diamond among rocks! I had seen him fight, in passing, and the sight was so inspiring that I made purchase immediately. Such form! Such agility! It is only he is relatively new to the arena, and therefore a risk - \"\n\n\"Risk is inherent in this tradition,\" said the King breezily. \"Have him declared champion.\" He turned his smile on Alais, the expression a little wry. \"I want to see if my wife has brought a blessing upon us.\"\n\n\"Very - very well,\" said Bartholomew, unable to protest further in the face of this command. \n\nShe did pity him, a little. If her champion performed poorly, she had an idea of whom it would reflect on.\n\nStill, Batholomew's previous reluctance disappeared as he stepped atop the raised table. \"My lords and ladies! The Queen has chosen her champion!\" he declared. Taking the hand of the grinning Septimus, he raised it high before them all. \"I give you - Septimus Marius Marcellus!\"\n\n*\n\nAs preparations were made for the battle, all took to their assigned seating upon the royal table. She and the King were given the positions of honor, of course, at the very center. There were also those she was already acquainted with: Princess Adeline and her two sons sat to the King's right. A seat and setting had also been ceremonially reserved for Prince Cassius, though the King's brother was not in attendance. The absentee Prince even had a plate and chalice arranged for him, and so forlorn was the sight that even Alais found herself missing his company. She had liked Cassius, from what little she remembered of him.\n\nBut most of her new family were strangers to her and required introduction. There was, first of all, Adeline's husband, a Duke Randall of Skepye. Randall was a handsome and friendly enough fellow, younger than she expected, and seemed happy to defer to the opinions of his wife. There was also Duke Boris, the King's paternal uncle, a man of heavyset proportions and substantial size (and more substantial thirst for wine). Countess Lucille was, in comparison, a thinly drawn lady, frail and fair, and it was no surprise that she was the King's aunt from the other side of the family. Their dispositions could also not be more different; whereas Boris was generous with his hearty laughter, Lucille's face seemed permanently fixed in a slightly sour pout. Lucille's son made up the last of the table - a Count Gavin, of tall and shapely build with hair of gold like his mother, though remarkably more good-humored than she. Besides being the King's cousin, he also introduced himself as the Spymaster.\n\n\"The battle isn't to the death, right?\" questioned Alais, once they'd all settled in. It had taken her handmaidens some careful wrangling to fan the long train of her gown around her. She didn't doubt the effect was flattering, but it did make it more difficult to move without disturbing the delicate arrangement; she settled for sitting quite still.\n\n\"Death is not necessarily required,\" said the King, \"on this occasion.\" \n\nThis didn't explain much, but fortunately Count Gavin was more forthcoming. \"Incapacitation or surrender is enough,\" he explained. \"Though it is not uncommon for injuries to be grievous, given the - shall we say - passion of the fighters.\" He offered a smile. \"Though I'm sure your champion will be hardy enough to weather the onslaught, and earn the blessings of the Gods for his troubles.\"\n\nAlais felt a seed of discomfort lodge in her stomach. She had barely met Septimus, but he was oddly likable - he did not deserve to die because she had singled him out as a target for the others. He had claimed he could win, but what if he was a fool?\n\nDuke Boris chortled into his drink. \"Ah! How fickle our Gods are, to award lifelong happiness on the flip of a coin,\" he said, jovially blasphemous. \"Eh?\"\n\nThe King didn't seem to take offense; he only smiled rather indulgently. \"I like to think it is more than the flip of a coin, Uncle,\" he replied. \"I have faith in our Queen's intuition.\"\n\n\"Very much so!\" contributed Randall.\n\nAs usual, she couldn't tell if the King was being serious. \n\nFrom her high perch, she could see the gladiators being stationed at different corners of the makeshift fighting pit (the cleared out space that had previously been the viewing area). Their noble guests had returned to their seating on the other side - the rest must have filtered in in the meantime, for not a single of the three hundred seats remained empty, so far as she could see. She felt many sets of eyes upon her, and could only be grateful that most of them were too far away to observe for certain.\n\nAlais looked away in time to see Titus testing the heft of what looked to be a sword as large as she was tall. Septimus was a few feet away, looking calm as ever (she wondered again how he could not even be slightly nervous). Each of them was being distributed a weapon and shield; she noted the distinct absence of armor.\n\n\"At least they all seemed very eager, these...\" She was about to say gladiators, but recollected the formal name for the occasion. \"These bride berserkers. Are they - \"\n\n\"'Bride berserkers,' was it?\" inquired Boris. He laughed in a jolly fashion, as he poured more wine into her goblet. \"Ah, I have not heard that one yet! Your Majesty has a knack for names. Bride berserkers, indeed they are. Ohoho!\"\n\n\"It does have a certain ring to it, doesn't it? Do you often come up with such inspired names?\" said the King, innocently.\n\nBut he was the one who has said that that was the name of - oh. Her confusion must have lasted for a fraction of a second before a quickly dawning realization nearly compelled her to flush. It was only a light-hearted, casual flustering compared to the events of their shared nights, but the lapse in her composure could be felt to a keen sense nonetheless. Her eyes lowered to her plate for a moment, before she centered herself with a breath.\n\nOf all the childish pranks... She looked to the the King, who raised his eyebrows at her, as if he'd had absolutely no share in the appellation himself. He was clearly amused though, and not at all ashamed.\n\nIf she had to be honest with herself, it was a little funny. And the mischief of it was boyish in a way that was almost disarming. \n\nToward Boris, she directed a soft-humored smile, even a laugh which might have passed for congenial. In spite of all his teasings, he was vaguely reminiscent of a fat saint who bestowed presents to well-behaving children during the Yuletide. It was almost impossible to be cross with him. Was he really from the same family that spawned the King?\n\nSpeaking of which, her gaze cooled noticeably as it flitted back toward her husband on the other side of her, lips falling back into a humorless line. \"Actually,\" she started, squinting at him incredulously. \"It was His Majesty who thought of it. Either he does not recall his Majestic ingenuity, or he's making fun of me.\"\n\n\"Alexander, you're terrible,\" said Adeline, from his other side. She bounced little Edward on her lap, trying to quiet his protests of hunger. She flashed a smile at her sister-in-law. \"You shouldn't tease poor Alais so!\"\n\nWhen her head ducked forward to catch the Princess' smile a bit farther off to the side, Alais smiled in turn, the sweetness in her returning all at once. \"He also came up with wedding warriors.\" Personally, Alais liked Bride Berserkers a touch more.\n\nThe King was smirking, not looking too miffed that she had turned it back to him. \"Yes, I'm the guilty culprit,\" he conceded. \"I certainly apologize for leading you astray. But, to be fair, you were the one who believed me.\"\n\n\"Terrible,\" muttered Alais. \n\nHer gaze wandered, absentmindedly distracted by a frantic waving from one of the nearer tables of nobles.\n\nIt was Duchess Evangeline of Toussaint, she who was mistress of poor Ser Emille and all those other knights who'd futilely attempted rescues. She had the glisten of weeping in her eyes as she waved her bright purple handkerchief with particular vigor. Alais stared back, before finally managing to wiggle her hands (with some semblance of gracefulness) in return. In the middle distance, Evangeline touched her heart with her sleeve - and blew back a tearful kiss. Perhaps one that was meant to be taken as a blessing of some sort.\n\n\"You invited my cousin?\" she heard herself ask, almost baffled by the sight - as though she didn't quite believe what she was saying. \"Why is she crying?\"\n\n\"Oh, yes,\" the King recollected, following her gaze to the cousin in question. He looked amused. \"Are you not delighted to see her? I thought you must have been close, given the persistent dedication of her knights to your rescue. I half-expected her to bring a full squadron to the feast.\"\n\n\"That isn't what I was worried about,\" murmured Alais, sinking into her seat with a resigned expression. Knowing Evangeline, the true gravity of...just about everything about this marriage (and about their presence in Obsivia overall) would be lost on her utterly. It was, in a sense, also a bit of a hidden blessing, so perhaps she'd been the best choice after all.\n\nThose who were keen of hearing might have picked up the distant cries of the Toussaint table from all the rest: in particular, Evangeline's \"My little girl is all grown up!\" and the various consolations of \"There there...\" humming out from her accompanying ladies and lords.\n\n\"I say,\" said Boris, the sight of the delicately sobbing Duchess having quite taken him aback. He was quite tall - a trait that seemed to run in Alexander's family - which allowed him to peer quite easily over the heads of all these lesser nobles, at the Pearl of Toussaint that glimmered past them. He lowered his goblet for the first time since he sat down (there had been nothing uncivil in his introductions, and to the contrary he had been openly friendly, but his attentions had been quickly claimed by the fine wines before them). But now, he only had eyes for one. \"I say. But what is ailing that handsome woman, that she weeps so? She must care deeply for Your Majesty?\"\n\nThe Duchess was on the more curvaceous side of 'handsome,' with full cheeks and a fuller set of bosoms to match. \n\n\"A rather effusive display,\" sniffed Countess Lucille.\n\n\"She is a very...\" Alais considered how to put it. \"Sensitive woman.\"\n\nHere, their conversation dwindled, as Bartholomew once again took command of the stage. \"My lords and ladies!\" He looked upon the sea of nobles before him, and then above in the balconies. \"You are about to feast your eyes upon the clash of titans! Behold! Before you stands your fighters - each with the might of ten men, and the courage of twenty! Taken from the farthest reaches of the kingdom, and all brought before you on this auspicious day!\"\n\nHe turned to gesture grandly at the ten warriors situated within.\n\n\"I give you... Titus!\"\n\nA smattering of claps sounded, as Titus heaved his sword into the air and rattled it with a roar.\n\n\"Tullus!\"\n\nMore claps.\n\n\"Gallio! Kaeso! Everard! Gnaeus! Ulric! Alethius! Steris!\"\n\nBartholomew paused, with dramatic intention. \"And finally, the Queen's chosen champion - Septimus!\"\n\nSeptimus stepped forward, throwing his arms high and grinning broadly at the applauding audience. When he looked to the royal table - to her - his grin seemed, if possible, to grow even wider.\n\n\"In honor of King Alexander and Queen Alais, the glory of Obsivia, and the Gods themselves!\" Here, Bartholomew bowed deferentially towards them. \"May the battle be as magnificent as this day's joyous union.\"\n\nJoyous indeed, though Alais dryly.\n\nAs he stepped aside, the crowds quieted and the gladiators settled into fighting stances. She caught a flash of unease on Bartholomew's features once the performance was over and he was back to the side - clearly anxious that his handpicked men perform as promised. \n\nA thick tension settled over the room, and she could spy a few of the lower aristocracy craning their necks for a better view.\n\nThe King took a casual sip from his chalice, before setting it aside. \n\n\"Begin,\" he commanded.\n\nAt once, Titus bellowed and charged in the direction of Septimus, weapon at the ready. He wasn't the only one, either - others converged with the same intent, singling out the champion the way her handmaidens had forewarned.\n\nBut Septimus was not waiting for them. He shifted into motion himself, clashing his shield into his first attacker as he went - as the man stumbled back, he rammed the pommel of his sword toward the other's temple in one fluid movement. Gasps sounded from the crowd, as well as light applause.\n\n\"Such swiftness,\" Randall remarked, leaning forward in his seat.\n\nAlais was inclined to agree. She knew little of swordplay (and less of gladiator-style battle), but still she could tell that Septimus was possessed of an uncanny speed; even as his opponent fell, he had already sidestepped to surge forward. But could it be enough, when he was surrounded on all sides?\n\nTullus was next, but Septimus merely evaded his blows and slipped past him. Two more assailants were given the same treatment - he barrelled past without engagement, at one point dropping to a roll to avoid contact.\n\n\"What is he doing?\" said Duke Gavin, curiously. \"He does not fight?\"\n\nLucille tittered. \"Perhaps our 'champion' grows fearful.\"\n\n\"No,\" said the King. He watched the proceedings with a thoughtful eye. \"He grows cunning.\"\n\nLucille furrowed her brows in confusion, but it only took Alais a moment longer to trace Septimus's intended destination and reach an understanding of her own. \n\nOnce he reached the eastern end of the room, he righted himself immediately, shifting into a defensive position with the wall at his back.",
        "\"Oho!\" declared Boris. \"Protecting from a rear attack! Of course!\"\n\nIt made sense. The risk for a single combatant against many was always to be surrounded and outflanked, and he drastically increased his chances for survival if he was able to make use of a natural barrier.\n\nThe first two combatants to reach the champion were dispatched with startling ease. Septimus's sword danced and feinted, taking a vicious slice of a man's stomach in the process; nimbly, he weaved out of the reach of another attacking, ducking under the swing to hammer his shield into his opponent's knee. Both toppled within moments of each other, and Septimus was already on the move, sword up in time to meet the next onslaught.\n\nApplause rang from the seated nobles, and more than a few were now on their feet.\n\n\"Incredible!\" boomed Boris. It must have been, for his goblet, for once, remained on the table as he stared at the sight of Septimus doing battle with three more gladiators. \"I've never seen such dexterity. He moves as if water!\"\n\nIndeed, Septimus's instincts appeared to be almost unnatural. He was constantly countering every attack, forever dodging at just the right moment. In fighting three opponents, he used the space and their numbers to his advantage - he was continually moving along the wall, forcing them to make obstacles of each other as they attempted to keep pace. \n\nBy this time, he had withdrawn far enough to stake out a corner, thus further limiting the ability of his opponents to attack on different sides. A few contenders were kept at bay, unable to attack with others blocking their vantage. As it turned out, some were more impatient than others.\n\nA sickening cry rang out from the improvised arena as the mighty Titus rid himself of one obstacle - with the efficacy of a hammer, his sword cut clean through another gladiator's forearm. The wounded man attempted to flee, blood streaming gloriously from his stump, and slipped on the puddle of his own making. \n\nAnd oh. Oh, that was a lot of blood. \n\nAlais looked away from the (literally) disarmed man, unsure if she could stomach the sight of more. But what she managed to avoid witnessing with her eyes, she could hear: the sickening sounds of flesh being cleaved from flesh. Bones breaking. Smashing. Below the table, her legs were on the brink of squirming underneath the mass of her wedding skirts. \n\nIt seemed to go on forever, and still, no one else at the royal table appeared remotely bothered. The King's detached interest was no surprise, but it felt eerie to see his manner echoed. Duke Randall had leaned in toward the Princess, and seemed to be noting to her points of interest in the battle. (\"Can you believe it - he may actually win!\" she heard). At least the children had been taken away. Lucille was muttering unimpressed commentary to her son. In the distance, she could see Bartholomew sporting a grin from ear to ear.\n\n\"This must all be very...much for you,\" Duke Boris said to her, consolingly - the effect only slightly lost by the slightly loud quality of his (probably intoxicated) voice. \"And for...hrm.\" His eyes wandered, none too subtly, to the Pearl of Toussaint. \"It is unfortunate that - the Duchess' husband is not, ah, here to console her?\" Circumspection was evidently not his forte.\n\n\"The Duchess is...\" Alais glanced at the Duke critically, for a heartbeat, her brows knitting together in response to his oh so subtle cues, but the brunt of her attention seemed ostensibly vested in the fine craftsmanship of her chalice. \"... A widow. Spring fever, I think it was.\"\n\n\"Tragic,\" muttered Boris, not convincingly at all. \"Very tragic.\" He coughed. \"You must not think me -\" His voice broke off, distracted by the view before him. \"Ah! To use his own hand?!\"\n\nUnable to help herself, Alais looked up. \n\nA grotesque vision swam before her: heaps of fallen men were now clustered here and there upon the ground, some moaning and others utterly still. A few, ghastly enough, were missing entire appendages altogether, including a crippled Tellus not far from their table.\n\nOnly two remained: Titus and Septimus. She saw what Boris was speaking of - Titus had grasped Septimus's blade with his bare hand. Blood flowed steadily from the wound, but Titus seemed indifferent to it. As she watched, he tightened his fist and used it to pull Septimus toward him, hefting forward his own weapon to strike.\n\nBut rather than attempt to wrestle for the sword, Septimus simply released his grip. Grunting, Titus stumbled back, two blades in hand.\n\n\"Is he not done for now?\" Lucille looked faintly irritated, as if the champion's survival so far was somehow a personal affront to her. \"He is disarmed.\"\n\n\"Have a little faith, Mother,\" said Gavin, more gamely.\n\nSeptimus backpedaled, far out of the reach of Titus's weapons. The giant man clambered after him, swinging the dual blades wildly - but he was heavier and slower, and his target too quick on his feet. Septimus circled him deftly; whenever Titus seem to find a rhythm, he would unexpectedly reverse direction and leave him frustrated. He was tiring him out.\n\nAfter a few rounds of this, it was clear even to Alais's unpracticed eye that Titus was getting sloppy - whether from fatigue or impatience. He was making wider swipes, leaving more of himself unprotected.\n\nThen, as Titus jabbed his sword forward, Septimus suddenly dropped and swept his foot in an arc, taking advantage of the giant's forward momentum to trip him. Even as the larger man fell, he grabbed hold of his wrist, twisting so that pain forced the grip to loosen. By the time Titus recovered, a blade was pointed at his throat.\n\nTitus panted for breath, staring up at the sword and its wielder. Both eyed each other for several long seconds. Finally, Titus grunted, \"Yield.\"\n\nAt once, Septimus's features relaxed into a friendly grin. He shifted the sword away, offering a hand to the other man - which went ignored, for Titus pulled himself up with a resentful look in his eye. This did not, however, dampen the victor's spirits at all, and he turned and bowed with exaggerated deepness toward the royal table.\n\nA hushed silence fell over the crowd.\n\nThen applause thundered out, so loudly that Alais felt the tremors of it in the very table. \n\nBelatedly, she began clapping as well. She felt like she was catching her breath herself, even though she hadn't remotely participated in the fight. Violence aside, it had been so...so close. She had not been certain until the last moment that her champion would survive, and that he had ultimately prevailed was a terrible relief. She was already responsible for enough unnecessary deaths, wasn't she? (She hoped the knights of Toussaint would halt their rescuing efforts now that their Duchess had actually participated in the wedding.)\n\n\"Incredible,\" Gavin was saying. He clapped heartily, shaking his head. \"A champion victorious. When was the last time that happened? More than a century ago, I wager?\"\n\n\"An inspiring display!\" agreed Randall. He looked to the King. \"The Gods must have truly blessed your marriage, to make it so.\"\n\n\"Yes, a fine choice of champion it was,\" said the King. He applauded lightly, appearing well-entertained by the battle. His gaze drifted to her, however. \"I did not know my Queen had an eye for such things.\"\n\n\"I don't,\" answered Alais automatically. She did not know anything about gladiators or swordplay at all. She knew people though, and it was a little gratifying to see that she had not misread Septimus - that she had been proven correct, despite Bartholomew's misgivings. Perhaps fate had grand plans for her after all.\n\nEven she had not anticipated the degree of his skill, though. He must have had some Gods-given talent, this Septimus - she did not need the excited chatter of the nobles or the commentary of her royal family to know this. She had seen it with her own eyes. \n\nShe turned back to the King, all sweet humility as she continued, \"It was luck.\"\n\nThe King smiled. \"Oh, I doubt it.\"\n\n\"Truly, I have seen nothing like it before,\" uttered Boris. He chortled, glancing at his nephew. \"Well, except the King's own performance at that Midsummer Tourney. But perhaps he's even as good as you, eh?\"\n\n\"The man is naturally gifted,\" the King allowed. A smirk crossed his lips. \"But not that gifted.\"\n\nThe applause was finally dying down, fading to smatters here and there. Bartholomew retook the stage, all his worries turned to glee. \"The Gods have spoken!\"\n\nSeptimus was bloodied and exhausted, but it was clear he enjoyed the attention all the same. His grin was irrepressible, and when he looked to her direction, it was with an expression of gratefulness.\n\nBartholomew took hold of Septimus's arm, raising it high above. \"The Queen's champion has triumphed!\"\n\n*****\n\nAuthors: Next time (read this is a trailer voice) - a surprise guest at the wedding! Jealousy from more than one corner! And something that teases out Alexander's cruel side!? Don't miss it! "
    ],
    "authorname": "lady_temily",
    "tags": [
        "medieval",
        "historical",
        "royalty",
        "reluctance",
        "straight",
        "control",
        "gladiator",
        "reluctant",
        "submissive",
        "dominance"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/at-his-majestys-pleasure-ch-13"
}