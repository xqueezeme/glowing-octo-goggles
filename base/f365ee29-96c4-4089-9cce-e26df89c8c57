{
    "title": "What The Cat Dragged In Ch. 11",
    "pages": [
        "Every time I read the comments you leave, I'm so thrilled to find people passionately involved in this story. \n\nThank you for taking the time to read, to vote and to comment. psyche b\n\n11. Reunion Behaviors\n\nCreed waved a nearly empty beer bottle at the older of the two waitresses. The young blonde appeared a few minutes later with a full bottle and leaned over, giving him a good look at her implant-enhanced cleavage. For the fourth time since he arrived, he took the beer without giving her a second glance. He figured one of these times she'd get the goddamn message. \n\nFucking frail. He was so used to her sweet scents and the way she moved with unconscious, sensual grace that anything less than that seemed to be nowhere near good enough to be worth the energy of a fuck, much less a fuck and kill. He had other things on his mind anyway. \n\n\"You want something?\" He asked the lingering whore.\n\n\"Just wondering if you wanted anything...else?\" She grinned and pulled the neckline of the shirt open even more.\n\nHe didn't bother looking. \"Nope.\"\n\nThe whore was more silicone than brains. She grabbed a chair from a nearby table and sat down. \"Cause I mean it looks like your date didn't show.\" She reached out to stroke the back of his hand. He waited for her to almost get there. \"And I thought that-\" \n\nHe grasped her hand, one claw digging into her palm just hard enough to draw a blood and terror. The look of shock was priceless. He grinned, showing his fangs. \"Don't even fuckin' think about screaming, cunt. 'Cause if you do, I'll tear through your goddamn hand before your fat ass bouncer can figure out what's going on.\" His tone was perfectly conversational.\n\nShe whimpered, her tears sending streaks of eyeliner down her face. \"Let go!\" Her voice was a deliciously terrified whine in the noisy room.\n\n\"I will, and when I do you're going to get up and you're going to walk that filthy pussy of yours back across the room and you're gonna stay there. If you don't, you'll be lucky if someone finds your corpse in a pool of your own fucking blood.\" He smiled and dug a little deeper into her hand, just to emphasize the point. Then he let her go.\n\nApparently she still had two functioning brain cells because she got up and trotted across the crowded room, cradling her bleeding hand.\n\nHe heard a familiar laugh from behind him. \"Still got a way with the ladies, huh Creed?\" He didn't need to turn around to see who it was.\n\nJoe fucking Demmer. Blast from the past didn't even begin to cover it.\n\n\"Funny, I didn't see any 'lady', just a whore being led around by her cunt.\" He licked the blood off of his thumb, then took a long pull of his beer.\n\nThe last time he'd seen Joe Demmer, he'd been a tall, broad, bull of a man who could stand his ground with any other human and some mutants. Age hadn't done much to change his looks or how he carried himself. \"Want a beer?\" Creed asked.\n\nHe sat down across from Creed. \"Sure.\"\n\nThe older waitress brought it. Creed could smell her fear, but she shot him a dirty look anyway. He grinned at her. \n\n\"Seems like you haven't changed much.\" The wrinkles around his eyes and mouth animated his whole face when he smiled. In contrast, his eyes were sharply appraising.\n\n\"Why waste time fuckin' around with perfection?\"\n\nThe smile stayed, but it still didn't fully reach his eyes. \"You never had any use for socializing. What's this really about?\"\n\nCreed chuckled. \"Always one to get right to the point. We got someone in common.\" He pulled his phone out of his coat and found the picture of the frail putting away groceries. He would have had to look real close to tell it was the same girl he'd left naked, satisfied and sore in his bed. He held the phone up so Joe could see the image. For a long minute the old man just stared.\n\nThe rest of the smile faded. \"What did you do to her?\" The words practically dripped with rage.\n\n\"Nothin'.\"\n\n\"Bullshit! She's looks like she's been through hell!\"\n\nHe gave a bored little shrug. \"That's how she looked a few weeks after I found her.\" He took the phone back and found another picture. This one had been taken only a week before he left. She was in the mall, replacing some of the clothing he'd shredded.\n\nCreed saw the surprise flicker across Joe's face. \"Found her?\" \n\n\"Found her.\" He repeated. \"This was her a couple weeks ago.\" He held the phone up again. The Joe Demmer he knew never tipped his fucking hand. That hadn't changed with time either. The only thing that gave away the wave of relief that washed over the old man was his scent. He took the phone away again.\n\n\"She tell you I'd pay you?\" Joe asked.\n\n\"She didn't tell me anything, 'cept that she trusted you. I ain't so sure if you deserve that yet.\" He took a long swallow of beer.\n\nJoe's eyes narrowed just slightly. It was a tiny flicker that betrayed the depth of the old man's incredulity. \"You almost sound like you-\"\n\n\"She's mine,\" he finished with a little growl. \"I fuckin' protect what's mine. More'n I can say for you.\"\n\n\"You just watch your goddamn mouth.\" The rage had reached Joe's eyes; his voice was a barely audible hiss. \"I don't give a shit who you are or how big you are, you don't know a goddamn thing about what I tried to do for those kids!\"\n\nCreed almost smiled. He could see where the frail got her mouth from. \"You care to educate me then?\"\n\nJoe glanced around. They were in a far corner of the room, away from the activity of the bar and small dance floor. The secluded space was as private as one could find in a public place. \"I tried.\" He didn't look at Creed when he spoke. \"I figure I was too damn old, or I'd been out of the game for too damn long. Maybe it was both.\"\n\n\"Didn't have the balls for it?\" Creed smirked.\n\nHe ignored the jab. \"Never have been a fancy shot, but my aim is still dead on. He was supposed to be alone that first time, but the kids were with him. It was almost like the bastard fucking knew and I wasn't about to expose the kids to that. The second time he never showed where he was supposed to be. The third time I got too desperate and sloppy and he caught me lurking around. He didn't have enough to go to the authorities, so he threatened my wife instead.\"\n\n\"So you gave up?\"\n\n\"Hell no! I told him to go fuck himself. When him or one of his cronies started taking pot shots at Anna I started looking for someone to do the job for me. Course by that time all of my contacts were either off the radar or as old as me. I didn't know any of Carl's contacts-\"\n\n\"Carl?\" Another bell went off in Creed's head.\n\n\"My son. Kelly's father. You ever meet him?\"\n\n\"Don't think so.\"\n\nJoe nodded slightly. \"Anyway, he and I never talked about work in any kind of detail, so that didn't do me a damn bit of good anyway. The courts were no help in getting the kids out of there. It got to a point where Anna couldn't take it anymore and so I did my best to make us disappear.\"\n\n\"You did a pretty damn good job of that.\"\n\nA little smile teased at the corner of Joe's mouth. \"Always was my specialty, hiding in plain sight.\" That little flicker of a smile was extinguished. \"I told myself that if we were out of the picture, he would ease up on the kids.\"\n\nCreed rolled his eyes. \"Well that's a steaming pile of shit.\"\n\n\"I fuckin' know that! It gave Anna something to hold on to though.\" He looked up, his eyes locked with Creed's. \"She belongs with me, she's my blood.\"\n\nHe finished the beer. \"Ain't gonna happen.\" He got up and tossed some cash on the table. Joe was on his feet quickly. \n\nHe grabbed Creed's arm. \"Goddammit you ain't gonna just show me a couple of pictures and walk away!\"\n\nThe feral growled dangerously. \"You're gonna take your fuckin' hand off me or you're gonna lose it.\"\n\nJoe didn't flinch. \"Think that scares me?\"\n\n\"I really don't give a shit.\" Creed's eyes were locked with Joe's. His claws were extended. \"You gonna take your hand off me or am I gonna tell the frail that I had to rip off her grandfather's arm because he was being a jackass?\"\n\nSurprise flickered through Joe's eyes. He let go. \"You're going to tell her you found me?\"\n\nCreed rolled his eyes. \"You ask the same kinda dumbass questions she does sometimes.\" He pushed past the old man, leaving him standing in the dim room.\n\n*~*~*~*~*~*\n\nCreed walked in to the comfortable but lifeless apartment, fully intending to sleep. He'd picked up one more job for the way back through, but that wouldn't amount to any more than a pit stop along the way. He showered, getting the stink of the bar off of his skin, then got into bed. A half an hour later he was still laying there, staring up at the dark ceiling and he was getting pissed off about it.\n\nIt was all the frail's fault. She was the one who got him used to the way she smelled. She was the one who sighed in her sleep and snuggled against him. He'd make her fucking pay when he got home. He threw the blankets off and started getting his shit together. Laying there wasn't doing him a goddamn bit of good.\n\n*~*~*~*~*~*\n\nKelly stared down at the knitting in her hands, as if it was unfamiliar to her. Victor had been gone nearly a week and, as time passed, she slept less and less. It was making daily life almost unbearable.\n\nIn the beginning, Kelly thought she would never get used to being so close to Victor on a daily basis. In some ways, being so close to him was still unnerving. He could spend the better part of the day communicating in growls and cold stares. She was never quite sure what would upset him and, if he was upset, what he would do with that anger. There were times when she was certain he'd hit her, but he took out his frustration on some object in the house instead. Other times the cuts and bruises he gave her were signs of his affection. She'd come to accept both of those things as just a part of life with Victor. \n\nConlon was another matter. He was polite. He did his best to make small talk during meals or in the evenings. He made sure to ask if there was anywhere she wanted or needed to go. He'd even talked her into going out to dinner a couple of times. All of it was very pleasant on the surface, but it was all just surface. \n\nVictor didn't fly his emotions like a flag, but they would flicker across his face and body. His mouth would twitch or his eyes would soften for just a moment. Sometimes the set of his shoulders would change, or the ever-present tension in his jaw would relax for a minute or two. She didn't want someone to take Victor's place, she was sure there wasn't anyone on the planet -- human or mutant -- who could manage that. She had hoped she would at least get more comfortable with Conlon as the days went on, or that he would get more comfortable with her. So far, whatever wall that existed between them was still firmly in place. Maybe she would get used to it, like she'd gotten used to Victor. Maybe it would just take longer. Maybe if he wasn't always carrying that damn gun he wore on his belt she wouldn't be so uneasy around him.\n\nEven if she and Conlon became best friends, it wouldn't fill the achy emptiness she felt. She missed Victor's growling impatience, the profanity he salted through the most ordinary statements and a thousand other little things she had barely noticed until they were gone. She felt his absence most at night. When the lights were on, he expected her to keep to her own side of the bed. Once he turned the lights off, he always drew her close, and she slept snuggled against his side, her bare skin against his, the world held at bay by his solid muscle and sharp claws.\n\nOf course, she also missed the sex. The ache between her legs was getting every bit as intense as the ache in her heart the last few days. She'd tried to relieve it herself, but it hadn't even come close to being what she needed.\n\n\"Kelly?\" \n\nShe glanced up at Conlon. His features were arranged to show concern, this time there was just a spark of it in his eyes as well. \"What?\"\n\n\"You've just been sitting there staring into space for the past half hour. Are you alright?\"\n\nShe managed a small smile. \"I guess I'm just a little tired. I think I'll go to bed.\"\n\n\"Good idea.\" An empty smile. \"Sleep well.\"\n\nShe responded with an equally insincere smile. \"Thanks, you too.\"\n\nKelly made sure she had her phone and then went upstairs, locking the door behind her. She hoped she would be tired enough to actually sleep. Even if she didn't sleep, she could toss and turn in private.\n\n*~*~*~*~*~*\n\nIt was coming up on nine-thirty when he walked into the house and face to face with the barrel of a handgun. He rolled his eyes. \"Put that damn thing away.\" He punched in the code to silence the beeping alarm.\n\nConlon did as he was told. \"Wasn't sure it was you.\"\n\n\"Somebody else have the master gate codes?\"\n\n\"Call me overcautious.\"\n\nEven in the dim light Creed could see that Conlon had two nearly healed black eyes. He recognized the pattern of bruising as a broken nose. \"What the fuck happened to your face?\"\n\nConlon looked downright embarrassed. \"Nothing, I just-\"\n\n\"She hit you, didn't she?\" He couldn't suppress a grin. The smaller mutant looked away. \"Told you she was scrappy.\" \n\n\"You didn't tell me she paces all night and when she does sleep she has nightmares. You also didn't tell me not to try and bring her out of one because she comes up swinging.\" Conlon was angry and embarrassed.\n\nCreed shrugged. \"So what the fuck do you want? Combat pay? Given your chosen profession I thought you could manage a skinny frail.\"\n\n\"Give her a few lessons, you won't need me.\"\n\nCreed smirked. \"Where is she?\"\n\n\"Den. Probably still sleeping.\"\n\n\"Still?\" His eyes narrowed.\n\n\"She fell asleep around seven and I'll be damned if I'm going to try and wake her up again.\" \n\nHe stared at the smaller mutant for a minute. \"Get your shit together.\" Conlon disappeared into the small, downstairs guest room. Creed walked silently into the den. The fire was low and she was curled up in the large chair next to it, her head resting on the padded arm. She was covered with the throw from the back of the sofa. One foot stuck out from under the blanket, he recognized the pink and purple socks she'd been working on before he left. Her phone was clasped lightly in her hand. Even in the dim light he could see the dark circles exhaustion had etched under her eyes.\n\nHe stepped closer and took in her scent, but it wasn't the sweet fragrance he was hoping for. Even though she was deeply sleeping, anxiety was written in the tension lines on her face. The tang of it holding the sweet aroma hostage for the moment. His fingers itched to move a lock of her hair that had fallen over her face. The gesture was likely to wake her and he didn't want to do that until Conlon was gone. For the moment, he satisfied himself with the inhaling her scent deeply. This time he noticed that there was still the barest undertone of his own scent present. The corner of his mouth twitched into a little smile. He turned and exited the room silently. \n\nConlon was just entering the hall as well; Creed waved him into the kitchen and got a beer out for himself. He tossed a set of keys at the smaller mutant. Conlon reciprocated with the keys to the Escalade, then hesitated.\n\n\"What?\" Creed asked.\n\n\"Nothing.\"\n\n\"Second half of your payment will be in your account by five tomorrow,\" Creed said. It was as close to a 'thank you' as he was prepared to give. Conlon nodded and walked out the door. Creed changed the house alarm codes and waited until the truck was through the gate before changing that code too. \n\nHe grinned and walked back toward the den. Time for the big, bad animal to wake up a scrappy little frail.\n\n*~*~*~*~*~*\n\nKelly wasn't sure what woke her at first, but whatever it was, she tried to ignore it. For a long moment, that seemed to be working. Maybe she had imagined whatever it was all along. She was drifting off again when she felt someone stroking her cheek. Conlon was the only other person in the house. Fear brought her fully awake; she scrambled to sit up in the chair. It took her a moment to process that it wasn't Conlon standing in front of her.\n\n\"Victor?\"\n\n\"'F I say no, you gonna try and break my nose too?\" He smirked.\n\nKelly smiled and managed a little shrug. \"Not right now. My hand still hurts.\" She pulled her right hand out from under the blanket; her knuckles were swollen and covered in a large purple-black bruise. He grabbed it carefully, and started manipulating her fingers. Kelly winced.\n\n\"Lucky you didn't break your fucking hand too.\" He positioned her hand carefully, so that her palm was facing him, her fingers folded down. \"If you hit him again, use the heel of your hand.\" He moved his grip to her wrist and pulled her down with him.  \n\n\"Wasn't like I planned it, I just reacted.\" Her fingers wandered over the firm muscles of his stomach. The warm, musky scent she'd missed so much in the last week and a half was making her head spin.\n\n\"Reacted to what?\" He sliced through the threads holding one of the buttons on her shirt. Then he moved on to the next one. \n\n\"I didn't recognize him for a minute.\" Kelly hesitantly fingered one of his buttons, waiting for some reproach. When none came, she opened the button and then the one below it. She nuzzled the mat of hair that came into view.\n\nA deep purr rumbled from his chest. \"Got bold while I was away, didn't you frail?\" He abandoned the buttons of her shirt and started tearing through fabric.\n\n\"Missed you.\" Embolded further by his pleasure sounds, Kelly finished with the buttons on his shirt, her fingertips sliding inside. \"Missed how you smell, how you taste.\" She placed a soft, sucking kiss on his skin, her tongue moving over it. \n\nHis claws dug painfully into her shoulder. For a moment she froze, unsure if he was angry or enjoying her ministrations. When her fingertips grazed the hard bulge in his jeans, she knew it was the latter. Despite the pain in her shoulder, the flavor of his skin was starting a fire in her lower tummy. She fumbled with his belt and the front of his pants, finally succeeding in freeing his thick erection from the confines of his clothing.\n\nKelly's mouth moved lower, exploring the defined muscles on his stomach while one hand stroked the length of his shaft. She was certain that he would stop her at any moment. He had never allowed her to touch him before, though he had never explained why. Her heart started to beat faster when her tongue dipped below his navel. She could taste the salty sweat on his skin and the organ in her hand pulsed. \n\nAt first, she took his low growl as encouragement, but then he pushed her away hard enough to send her head into one of the wooden chair legs. \n\n\"Who's in control here?\" He grabbed her ankle and pulled her roughly into the center of the room, his claws making short work of the clothing she still had on. \n\n\"You are, but-\"\n\nHis claws pressed into her belly. \"But what?\" His voice was low and dangerous.\n\nKelly arched her back, further exposing her vulnerable midsection to him. \"I love it when you use your mouth on me; I wanted to give you the same thing.\" She lay there, exposed and trembling beneath him for what seemed like hours. The hint of some unfamiliar blend of emotions flickered across his face. She was still trying to work them out when he moved forward quickly, his claws digging in, just at the edge of breaking her skin. Kelly let out a strangled little whimper.\n\n\"Love those little whimpers, frail. Love how you smell when you're scared.\" He bit her lower lip hard enough to draw another little whimper. \"Scared and wet.\"\n\nHe maintained the pressure on her stomach, but raked his claws downward, toward her mound. Without thinking, Kelly opened her legs wider. The stinging fire abated to a hot reminder of his touch when he took his hand away. One claw barely touched her skin as it continued down to barely tease her delicate folds. His mouth was on hers again, his tongue teasing her lips.",
        "\"Been a long time since you screamed for me. Hasn't it?\" \n\nKelly almost didn't hear him. She was too preoccupied with how the deadly weapon between her legs was terrifying her and driving her toward orgasm at the same time as it teased her clenching entrance.\n\n\"Well?\" The talon tapped with just a bit more force, sending electric jolts of commingled pleasure and fear through her body.\n\n\"Y-yes.\" She managed.\n\nHe went back to barely touching her slick folds. His intense eyes on her face. \"Yes what?\"\n\n\"Yes, it's been...been a long time since I sc-screamed for you.\" She wanted more. Ached for it.\n\nHe grinned dangerously. \"Gonna fix that, frail.\"\n\nWithout warning he shifted and slammed his entire length into her. Kelly did scream, and for a terrified moment she struggled to avoid the agonizing invasion. He put one hand on her neck, his thumb resting on her throat. The pressure was minimal, but she stopped struggling immediately. It didn't stop her tears or her whimpers, though.\n\n\"Still so fucking tight.\" He withdrew almost completely and drove into her again. She screamed again, but this time she wrapped her legs around his waist.\n\nHe started to move with a forceful rhythm. Kelly retreated into herself to the place she could only find when he was taking her. The deep pleasure, the pain, the fear, the need, it all made sense for those few minutes when he was inside her. She didn't have to try to explain it to herself; she could just experience it all and let it drive her toward the release she ached for. \n\nHis movements became harder, faster. Her release was a shock when it hit, her legs wrapped tighter around him. He unwrapped them and pushed them back, spreading her wide and making use of her trembling body.\n\nKelly felt another intense wave engulf her consciousness. His roar of release was all that broke through.\n\n*~*~*~*~*~*\n\nThe air around them was perfumed with thick blood, fear, release and her sweet scent. He swept his tongue over one of the long scratches on her abdomen. Fucking frail. He could get along anywhere he wanted in the world. He'd been shot, stabbed, beaten and a hundred other things he'd forced himself to forget. None of it had ever made him lose control for very long. None of it ever would. None of it had done jack shit to prepare him for her, either.\n\nThe frail was trembling under him. He recognized the swallowed whimpers of pain. He gently pinched and rolled her right nipple. This time, the little whimpers were louder, but pain was balanced with pleasure. She stroked the back of his head and the nape of his neck as his tongue moved. The unconscious touch sent warm droplets of pleasure trickling down his spine. If her hands could do that to the back of his neck, he wondered what her mouth could do to his cock. \n\nIt couldn't be on her terms. He couldn't let her see him that needy, that vulnerable, just because she decided she wanted it. The alpha in him would never bow to that. Still, he was halfway hard just thinking about it. He'd let her use her mouth. As long as she did it on his terms, under his control. His tongue stroke the wounds again. He'd give her a little time to recover first though.\n\n*~*~*~*~*~*\n\nKelly lay on her side with Victor behind her. His hands moved over her hip and thigh and occasionally around to gently tease the scabbed over scratches on her tummy. His lips and teeth moved over her neck and shoulder, the careful nips breaking the skin from time to time. There was something strangely soothing about it. Kelly sighed contentedly.\n\nShe felt his low growl as much as she heard it. \"Think you like that, frail.\"\n\n\"I do.\"\n\nHe chuckled. \"Somethin' else.\" He nipped a little harder this time, sending a shudder through her.\n\n\"Wait.\" She put her hand over his, stroking it softly.\n\n\"What?\"\n\n\"I'm cold, let me get a blanket.\"\n\n\"You're always too damn cold.\" He grabbed her blanket from the chair and wrapped her in it. Then he settled behind her again.\n\n\"You're always too warm.\" She smiled over her shoulder.\n\nThe corner of his mouth twitched. \"If you weren't so fucking skinny you wouldn't be cold all the damn time.\"\n\n\"Must be all the exercise I get.\" She relaxed against his chest.\n\n\"You got plenty of rest while I was gone and you're gonna spend the next few days sitting on your ass in the truck.\"\n\nKelly turned quickly, the blanket held over her breasts. \"Are we leaving here?\"\n\n\"For awhile.\" He tugged the cover away and pulled her close again, so that her skin was against his.\n\n\"How long?\"\n\nHe shrugged. \"How long you wanna spend with your grandparents?\"\n\nIt took a long moment for her to register what he'd said. \"You found them? While you were gone?\"\n\n\"Nah, found 'em before I left. Made sure they were okay when I was gone.\"\n\nKelly couldn't believe what she was hearing, she pulled away from him. Anger settled like a hard knot in her chest. \"They're my family! Of course they're-\"\n\n\"Your mother is your family too. You wanna give her a call? Maybe set up a lunch date?\" He advanced on her, his eyes cold.\n\n\"It's not the same!\"\n\n\"Bullshit it's not!\" He grabbed her wrist and dragged her close, his face inches from hers. \"From what I know, your family is a pretty fucked up bunch and people don't get that fucked up on their own. Somebody nurtures it in 'em and nobody does that like the people you come from.\" His jaw was tight, his claws partially extended, digging into her wrist.\n\nKelly started to tremble, her wide eyes locked on his. \"I-I'm sorry.\" Her voice was barely above a whisper.\n\n\"What was that?\" He cocked his head.\n\n\"I'm sorry.\" She managed to speak a little louder. \"I didn't think of it that way.\"\n\nHe gave a derisive snort and shoved her away. He got up, found her phone and tossed it at her. \"Call 'em. I'll give you the number.\"\n\n\"It's late-\"\n\n\"Yeah, and if you don't you're not gonna get any fuckin' sleep and neither am I.\" He found his phone and read off the number. "
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "blood",
        "reunion sex",
        "biting"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-11"
}