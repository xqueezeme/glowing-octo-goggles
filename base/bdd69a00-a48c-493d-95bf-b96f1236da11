{
    "title": "Warts & All Ch. 02",
    "pages": [
        "This story takes place in the early eighties. It is a work of fiction but as in previous stories it is based on some real events and some characters I have known. It is a story about truth and consequences, love and infidelity. There is very little sex in this story.\n\n*\n\n\"Yes?\" I said into the phone somewhat abruptly. I was annoyed at the interruption even though I had been expecting it all morning. \n\nI had been deep in thought about Jason, Jessie and Allie. They were now the most important part of my life. And figuring out how to shield them from the consequences of what had happened was now my biggest priority.\n\n\"Phil, this is Jack.\"\n\n\"Yes, Jack?\" I responded without enthusiasm.\n\n\"What's going on there? Sally was here at the house when her mom and I got home from church. She is crying her eyes out and says she is afraid to go home.\" Jack said forcefully, nearly shouting.\n\nI looked at my watch. It was almost one o'clock, nearly fourteen hours after I had left Rochester Hills.\n\n\"I don't know what I could have done to make her feel that way.\" I said deadpan. \n\n\"She says you got violent with a couple of friends of Debbie's the two of them ran into last night. Hurt them bad.\"\n\n\"Hurt them! They are lucky I didn't kill them.\" I said sarcastically.\n\n\"Phil! What the hell? That doesn't sound like you!\"\n\nI thought for a minute about how to respond to that statement. Finally I just asked a question of my own. \"Did Sally tell you where this altercation occurred?\" \n\n\"She said it was outside a restaurant down near Rochester Hills.\"\n\nSo she was trying to spin this. Well, her family, her story.\n\n\"Sally is your daughter, so I guess it must be the truth.\" I said slowly.\n\nThere was silence on the phone and I could sense Jack was trying to digest all this.\n\n\"Phil, I'm going to bring Sally home. I want to know what's going on. We need to talk.\"\n\n\"No problem, I wasn't planning on going anywhere.\" \n\nJack hung up abruptly but not before I heard in the background, \"No daddy no!\" I sighed. She isn't going to make this easy I thought.\n\nI was sitting at the kitchen table, looking at some old photos and mementos that had been in my shoebox and working on my second beer when they pulled in.\n\nJack strode into the kitchen with Sally behind him pulling at his arm. \n\n\"Please Daddy, let ... let us work this out. Phil and I need to be alone.\"\n\nI stared at Sally closely. She was without makeup, hair undone and eyes red and swollen. She was trembling like she had a severe case of nerves. She refused to return my look as she held onto her Dad's arm and tried to steer him back toward the door.  \n\nBut Jack refused to be steered. Jack planted himself in front of the kitchen table and stared at me. Silently he looked at me and the Ka-bar knife sitting on the table next to my beer. Finally he said, \"Okay, Phil. What's going on?\"\n\nI looked at Sally and said mockingly, \"Yeah, Sally. Tell your Dad what's going on.\"\n\nShe turned to me and said fiercely \"Shut up Phil! You and I can straighten this all out\", her voice commanded but her eyes were pleading with me.\n\nPissed off that she thought this could all be fixed if only we could be alone. Or that she thought she could manipulate me, I decided to be as honest as she was being deceitful. And it was she that brought her parents into this.\n\nI looked Jack dead in the eyes, \"It turns out Sally and her boss Debbie had a couple of playmates they like to get together with when they were out of town. I found out and objected. Rather forcefully I have to admit.\" I said more tactfully than she deserved.\n\nSally gasped and backed up and sat on one of the kitchen chairs.\n\nJack looked at me in disbelief. \"No Phil, Sally wouldn't do that. I don't believe you.\"\n\nI thought about that for a minute then I turned back to Sally and said, \"Take off your clothes, Sally.\"\n\n\"Wha ...what?\" She said confused.\n\n\"You heard me. What's the matter? Your Dad has seen you without clothes before. It won't shock him.\"\n\nSally just stared at me in disbelief and didn't budge. Jack just shook his head like he couldn't believe what he was hearing.\n\nI shrugged and said \"Okay Sally. How about this? Take off your blouse, just the blouse, nothing else.\"\n\nAgain Sally didn't move but got this terrified look on her face. \n\nJack started to get angry with me and said, \"That's enough Phil. Now you are being cruel and disrespectful.\" \n\nI looked from Sally to Jack and back to Sally again. I felt the anger overcoming my feelings of pain and sadness.\n\n\"Cruel and disrespectful you say? Not even close, Jack. I will tell you what's cruel and disrespectful. If Sally would take her clothes off you would see what I saw last night in her hotel room. Whisker burns around her breasts and inner thighs, and a hickey above her right nipple. Put there by another man.\" I stated in a voice devoid of emotion.\n\nJack quickly swiveled around to look at Sally. From the frightened look on Sally's face, it was obvious I was telling the truth. Suddenly Jack slumped in his chair like his spine could no longer support him \n\nJack's expression crumpled and he put his face into his hands and whispered, \"Oh God, this will kill your mother.\"\n\nSally turned pale and her eyes started to tear up, \"Please Daddy, don't tell Mom. We can work this out Phil, can't we? Please, Phil, please!\" She begged.\n\nI sat silently, rearranging old photos, fiddling with the mementoes from my old shoebox. Remembering another time when I was hurt beyond belief. \n\nAfter a few minutes Jack straightened up and wiped his eyes. He looked at me without expression. \"What are you going to do, Phil?\" He asked as tears continued to run down Sally's face.\n\nI sat there thinking about that question for a few minutes. \n\nFinally I said slowly, \"I never told either of you about Vietnam or Ripcord.\"\n\nI sighed, \"Hell, I never told anyone about Ripcord. Not even my therapist.'\n\nI waved at the pile of stuff on the table. \"Isn't it ironic Jack, that your generation puts your military memorabilia up on the mantle for display and admiration, my generation puts our reminders in a shoebox and hides it in the bottom of a drawer. Why is that?\" I said rhetorically.\n\nI picked up a faded photo of two tanned bareheaded skinny young guys in baggy jungle fatigues with dog tags hanging around their necks. Grinning at the camera like Vietnam was a boy scout outing. Was I ever that young? I certainly felt old now.\n\nI dropped the photo on the table in between Jack and Sally and starting talking conversationally like I was speaking or maybe even lecturing to strangers. \n\n\"Jase and I were dropped onto Ripcord in May of 1971, just one more firebase in a succession of firebases our battery had been assigned to. We would airlift in the howitzers, set up; conduct fire missions for a month or two to support the grunts humping through the jungle and then move on to another one. We had been in 'Nam for six months and had another six months before we would rotate home.\"\n\n\"But this time it was different. We were set down on a denuded ridgeline surrounded by some of the densest, most forbidding jungle we had ever seen overlooking the A Shau Valley near the border with Laos. The valley was bad news for the U.S. military. In previous years it had been the scene of several bloody battles that generated a lot of casualties. \n\nFire Support Base Ripcord was intended to support four battalions of the 101st Airborne who were beating the bush in the mountains on each side of the A Shau trying to prevent the North Vietnamese Army from infiltrating to the coast from the Ho Chi Minh trail. What a joke that turned out to be.\n\nThe firebase consisted of our gun battery of one-five-fives, one battery of one-oh-fives, a mortar platoon and a company of supporting infantry for perimeter security. We had two landing pads for choppers and a few ash and trash detachments, probably no more than four hundred of us at any one time. \n\nPractically the entire firebase was underground, in bunkers, trenches and tunnels. Later towards the end of the battle we found out we were surrounded by upwards of twelve thousand regular North Vietnamese Army troops.\"\n\nI looked at Jack sadly, \"Does that remind you of something, Jack? Like your Marines at Chosin Reservoir?'\n\nJack nodded slowly and got this far away look as if he was remembering another time and another place. \n\nI paused for a few minutes as I gathered my thoughts and my memories. \"The first six weeks or so weren't so bad, at least for us. But the grunts being combat assaulted onto the hilltops all around us were catching hell.\n\nWe were firing support missions for them almost constantly. And choppers were coming in and going out dawn till dusk. But as far as incoming we were only taking an occasional sniper round or automatic weapons burst. But the choppers were drawing increasingly heavy anti-aircraft fire when they made their approaches to our landing pads.\n\nOn July 1st that all changed. We were mortared for the first time just after seven a.m. that morning. That first week the NVA were firing an average of twenty to thirty rounds of sixty and eighty-one millimeter mortars at us daily. Then they started to throw the big stuff, one hundred and twenty millimeter mortars, big weapons that had never been brought below the DMZ before.\n\nThe bad thing was that, between winds blowing down the valley, and the sounds of choppers and outgoing artillery, most times you couldn't hear the incoming. That first week I got caught running from the mess bunker to the Fire Direction Control bunker when a mortar shell blast blew me off my feet. I jumped to my feet and made it the FDC bunker in minimum time.\n\nAs I huddled against the wall, trying to catch my breath, Jase looked up from his desk and said nonchalantly 'Shit Phil, you're bleeding.'\n\nSure enough, in my rush to get to where I was going I had left my bunker without my flak vest. I never made that mistake again. I had caught a piece of shrapnel just under my right shoulder blade. When I got to the aid station, the surgeon took one look at it and decided just to be safe to medavac me to Camp Evans, our supply base to have it extracted.\n\nWithin an hour I was on my way. They got it out without a problem but they decided I had a concussion and wanted to keep me for a couple of days for observation. By the time I got back to Ripcord, anyone who showed their faces topside had a better than even chance of getting peppered with shrapnel.\n\nThe days wore on and the bombardment got heavier and heavier. Not only mortars but direct fire rocket propelled grenades and recoilless rifles. Before the end we were taking seventy, eighty rounds a day. We started taking more and more casualties. \n\nOur guns were in constant action. The muzzles of our howitzers were pointed almost straight up as we were firing at targets so close. The batteries would fire through their basic loads in three-four hours. The Chinooks, heavy lift supply choppers, would fly in with pallets of ammo hanging from slings taking NVA fifty-one caliber fire all the way. They would unhook without landing and takeoff with all the speed they could muster.\n\nThen anyone not otherwise engaged would swarm to the landing pad and start humping shells and boxes of powder charges to the batteries. I picked up another half dozen minor shrapnel wounds on one of those details. Between the stresses of constant shelling, doing our regular jobs and humping ammo for the guns when not otherwise occupied, we were always exhausted. \n\nThere was a constant stream of gunships, F-4 Phantoms and even B-52's conducting air strikes in the hills all around us. Smoke drifting over the firebase from the shelling and occasional clouds of CS tear gas the NVA liked to throw at us made the air stink.\n\nAnd after July 8th when the dinks were first spotted in the wire we were on alert almost every night. We all knew it was only a matter of time before the NVA made an assault on the perimeter. We were all edgy just waiting for it to happen.\n\nAs the shelling continued day after day we started to take serious causalities. Morale declined as the feeling descended on us that we were being abandoned here. Before it was all over we would suffer over five hundred killed or wounded. At least a dozen times I was detailed to carry body bags or stretchers to the chopper pad for evac.\n\nOn July 18th, the worst thing that could happen did. A Chinook bringing in a load of howitzer shells took fire and crashed. Right on top of the one-oh-five battery and their ammo supply point. The place went up like a roman candle. The explosions and fires went on for hours. All six guns were destroyed with several killed and a couple of dozen wounded. We were all shell shocked.\"\n\nI looked at Jack with tears running down my face. \"When the Chinook crashed many of us rushed to the battery to try to help. A few of the wounded were burned when the aviation gas caught on fire. Jase and I reached down to pick up one gunner and put him on a stretcher when the skin on his arm I was holding came off in my hand.\"\n\nI shook my head, \"That and the smell of burning flesh I will never forget.\" I whispered.\n\nJack nodded at me with a grim look on his face and Sally had a look of horror on hers.\n\nI took a deep breath and continued. \"We all knew the place couldn't hold but the brass couldn't see that. All they saw was an opportunity to hurt the enemy. After all we had nearly four regiments of NVA all gathered in one place!\" I said bitterly.\n\n\"A couple of nights later we were called out on alert again. We were taking automatic weapons fire from all around the perimeter as well as the usual shelling. Jase and I manned an M-60 machine gun in a slit trench in front of the FDC bunker in case of an all out assault. Our mortar platoon was putting up aerial flares constantly to light up the wire and our infantry company was returning fire to the edge of the jungle. Gunships would fly over every few minutes and fire up suspected NVA positions with rockets or mini-guns.\n\nUsually Jase and I didn't bother to return fire because there was a three man infantry position about twenty, thirty yards in front of us. And returning fire usually drew unwanted attention to our location. This night the infantry were popping up and firing M-79 grenades and automatic weapons towards the bush almost constantly. Occasionally they would receive a burst of tracer fire from the jungle in return.\n\nThen a salvo of one-twenty millimeter mortar shells bracketed the infantry position in front of us. Jase and I dove to the bottom of our trench as the ground shook. Dazed we finally peeked over the edge of our position and saw that the infantry trench was all caved in. No one was crawling out of it.\n\nWe scrambled to get the sixty positioned and Jase started returning fire as I fed him the belted ammo. Our platoon sergeant came crawling up and we told him what had happened to the infantry and that we were going to need more ammo. He nodded and crouched as low as he could and sped off towards the tactical operations center. \n\nWe had just gotten down to our last belt when suddenly I heard a burst from an M-16 and I felt like a baseball bat had been taken to my back and thighs. I collapsed against the edge of the trench and found myself looking into Jase's eyes. There was blood all over the front of him and me and the M-60. \n\nA round had gone through the back of his neck and came out his throat. Unable to move I saw the awareness in his eyes as he realized what had happened to him. He moved his lips trying to speak, but nothing came out. I reached for his hand and he squeezed it once and then I watched the light go out of his eyes and I knew he was dead.\"\n\nI looked up at Jack and Sally but I really didn't see them. Tears were running down my face. \"My best friend in the world was dead, my brother in all but name. I felt alone, so alone.\" I said brokenly.\n\nI wiped my eyes and tried to compose myself. I could hear Sally sniffling. Whether it was for Jase or her own predicament I couldn't tell.\n\nFinally I continued, \"I struggled to turn my head to look behind me. Standing about ten feet in front of the FDC bunker and pointing an M-16 toward us was Corporal Tran. Tran was one of the Kit Carson scouts attached to the 101st. The scouts were mostly made up of North Vietnamese deserters who decided for whatever reason they were on the wrong side. \n\nTran had pretty good English and sometimes acted as an interpreter when the infantry took prisoners or recovered documents from the enemy dead. He had taken shelter in our bunker a couple of times when we were being shelled and we had shared a few meals. One night Jase had started to teach him to play poker just for the hell of it.\n\nMany of the scouts got flaky when things got tense if they thought there was a chance they could be captured. They knew if that happened the only thing waiting for them was a bullet in the head. Most of them had been locked up in one of the bunkers several days earlier as the siege progressed and their behavior got more and more suspect. None of us trusted them.\n\nI don't know if Tran just got scared or if he was an infiltrator for the NVA. I guess it didn't matter. Tran had fired a whole clip at Jase and me. I took a couple of rounds in the back but the flak jacket saved me from everything but a couple of busted ribs and a massive contusion. One round did go through the back of my thigh but it missed the bone. \n\nI felt myself starting to slip into shock as the realization hit me that Jase was really gone and I had been shot. I fought unconsciousness as I knew if I passed out I would likely die. I started telling myself to get mad, to focus on the enemy and getting even. As the anger started to build, my vision took on a crimson tinge and I could feel a killing rage taking over my mind. Tran saw me moving and he tried to fire at me again, fortunately he had already emptied his clip. I slumped down and played dead. \n\nTran must have thought I was done for as he dropped the rifle and jumped over our trench. He started waving a flashlight and screaming in Vietnamese at the jungle on the other side of the wire. I struggled to get up on my knees to see what he was doing. A rocket propelled grenade, leaving a distinctive corkscrew smoke trail came out of the bush narrowly missing him and me and exploded behind us. He was jumping up and down, waving that light like a madman almost foaming at the mouth.\n\nIn the light of the flares I saw three distinct shapes, wearing khakis and pith helmets, detach themselves from the edge of the jungle and sprint for the wire. As they got closer, I could see the distinctive satchel charges suspended from their necks and the AK-50 carbines they carried in their hands which marked them as sappers. \n\nI yanked at the M-60 that was under Jase. It was slippery with blood and I could barely stand upright but I managed to lift it up and point it in their direction. I knew I had to stop them before they could blow a hole through the wire. I managed to fire two long bursts before the belt was empty.\n\nI don't know if I hit them but the three sappers went down as Tran whirled around and stared at me in shock. He screamed at me, spittle flying out of his mouth and scrabbled for the machete hanging from his web belt. Most of the scouts carried them for cutting through the jungle when out on patrol.\n\nI was just able to get my good leg up on the lip of the trench and pushed off as Tran rushed me. I dropped the M-60 and managed to slide my knife out of my belt sheath and get it in front of me. I ducked under the machete he was swinging wildly and we came together face to face. I felt my knife slip into him below the beltline and saw his eyes open wide as he realized what I'd done.\n\nIt didn't seem to weaken him much as he continued to slam the hilt of the machete against my head, screaming continually all the while that we were locked in that killing embrace. I finally pulled the knife out and he stumbled backward pulling me down on top of him.",
        "Nearly unconscious, with blood streaming from my scalp wounds and into my eyes, I found myself straddling his chest as he struggled to push me off and get at me with the machete. With one final effort I grabbed him by the throat with my left hand and raised the knife above my head with my right and plunged it into his left eye all the way up to the hilt. He screamed, convulsed once and was still. I just sat there, gasping for breath, holding his throat and the knife feeling the warm blood gush over my hands.\n\nI don't how long I sat there. With the flickering light from the flares floating down and the noise of mortar shells exploding; the tracers going by close overhead and the howitzers banging away; and with the smell of cordite, blood and burning debris in my nostrils, I felt like I was lost in hell. \n\nSuddenly Eric, my platoon sergeant was pulling me by one arm, and Lieutenant Dixon, our FDC officer was pulling the other. I hung onto the knife like my life depended on it as they started dragging me backwards as Dixon was screaming at me to get back to the bunker, that the 'fast movers' were coming in to napalm our perimeter and we were too close to the wire.\"\n\nI paused in my narration and took a sip of my beer and pushed around the three Purple Heart medals lying on the table with the tip of the knife. Idly I would arrange them in one sequence than another. Jack and Sally were silent, barely breathing. I couldn't look at either of them.\n\nFinally I continued, \"About that time I passed out. I woke up in the Medical bunker hooked up to an IV and the battalion surgeon and one of the medics working on me. The doc told me I would probably live and that they would medavac me out as soon as they could get choppers in, come daylight.\n\nThey finally got me out around noon which was a miracle. Every chopper coming in was taking heavy fire. Two had already been shot down. The chopper I was on took several rounds including one that took down the crew chief. But that morning before I left, the decision had been made to evacuate Ripcord. I found out later they got everyone out on the 21st then bombed the hell out of it.\"\n\nI shrugged, \"Not that it mattered to me anymore. I was on a plane to a hospital in Japan within twenty-four hours.\n\nI spent a week there. Then I was transferred to Walter Reed for another month. While I was there some Colonel who probably had never heard of Ripcord came around passing out medals. They gave me this for killing my enemies.\" \n\nI reached into the box and pulled out a piece of red, white and blue silk with a silver star attached and dropped it on the table next to the purple hearts. It was identical to the one that was in the shadow box on Jack's mantle.\n\n\"The doctors fixed me up pretty good and I was told that after a couple of months of rehab I would be fine.\"\n\nI shook my head, \"But I wasn't fine. Not mentally at least. I had nightmares every night and would wake up screaming. I couldn't get the sounds of incoming, or the smells, or the look of the faces of the dead and wounded out of my head. \n\nI had missed Jase's funeral but made it home on leave before being sent on to Ft. Sill. The first thing I did was to go see Jase's Mom and Dad. It was the hardest thing I had ever done. They wanted to know all about Vietnam and what we were doing there and how Jase had died. But the one question they didn't ask was 'why had I survived and he hadn't?'\"\n\nI paused and said quietly, \"It was the same question I asked myself nearly every day.\"\n\nI stared off into space, thinking about this dark time in my life. \"I was in therapy but still I felt myself retreating from the world. I didn't want to see anyone or speak to anyone. I did the minimum I needed to do at Ft. Sill to keep everyone happy. \n\nI lost myself in some college drafting classes so I wouldn't have to socialize with any of the other guys after hours. When the time came to get out of the Army I moved back in with my parents and continued going to school. Not because I really cared about it but because I didn't know what else to do.\"\n\nI looked up and into Sally's eyes and all the pain, the hurt and the anguish from the previous night nearly blinded me. \"And then I met Sally.\" I whispered.\n\nShe stifled a sob, dropped her gaze to the table and refused to look at me. \n\n\"You brought me back to the real world. You were happy and totally interested in everyone and the world around you, and you were beautiful, inside and out. Everything I felt I wasn't. And you made me want to know you. You made me want to really live again and gave me a vision of what my life could be like. And I fell in love with you. You saved me. And you gave me three wonderful kids. For that I will always be grateful.\" I said wistfully.\n\nWe sat there unmoving for several minutes. Jack finally cleared his throat and said quietly, \"What now, Phil?\"\n\nWearily I turned my head and looked at him. \"Jack, I have been betrayed twice in my life. Both times I lost my best friend.\" I stated simply.\n\nSally dropped her face into her hands and started weeping, whispering, \"No, no, no.\"\n\nThe three of us sat there quietly, Sally sobbing, both Jack and I with tears in our eyes. Jack said quietly, \"Are you sure Phil? Do you want to throw everything away on a single mistake?\"\n\nSally looked up with a glimmer of desperate hope in her eyes. \n\nI knew what I had to say would put a stake through our marriage, but I couldn't let the lie stand.\n\nI shook my head and looked at him, \"A single mistake Jack? It wasn't a single mistake. I found out last night that Sally has been cheating on me for nearly two years. And it was with more than one man.\"\n\nSally gasped, closed her eyes, shook her head in despair and slumped back into her chair even paler than she was before.\n\nI looked at her curiously, \"John didn't tell you Sally? That he confessed to everything?\"\n\nI turned to Jack, \"Does that answer your question?\" I said.\n\nJack slowly stood up, and looked at Sally sadly, \"You are my daughter and I have to love you. But I have lost all respect for you. Your behavior is ...\" Jack stopped at a loss for words and just shook his head. Sally reached toward him with one hand wanting to touch him but he pulled away.\n\nHe turned to me and said firmly, \"Phil, you didn't deserve this. You do what you have to do. But please don't hurt her. I couldn't sit still for that.\"\n\n\"No Jack, I'm pretty much past that.\" I said sadly.\n\n\"But if it makes you feel better, take this with you.\" And I slipped the knife back into its sheath and handed it to him. \n\nSilently Jack accepted it and turned towards the door; shoulders slumped, no doubt wondering how he was going to tell Emily.\n\nAs the door closed behind him, the phone rang but neither one of us even looked at it. We just sat there, not moving, not speaking and not looking at each other. The ringing finally stopped making the silence even more deafening. \n\nFinally, I said staring off into space, \"I expected the cops to show up this morning with you, not your father.\" \n\nSally winced at that and said stumblingly. \"We, uh Debbie and I convinced them to make up a story about being assaulted outside a bar. We hoped if they kept it quiet you wouldn't call their wives.\"\n\nI thought about that for a moment and realized I was home free. No way they could change their story now and be believed. For a second I felt a weight lifted off my shoulders until I remembered that everything else was crashing all around me.\n\nI just grunted, and said, \"So where are they now?\"\n\nSally cleared her throat and fidgeted in her chair. \"They are still in the hospital for observation. You hurt them, hurt them bad. John has a broken nose, cheekbone and ribs. Craig has a dislocated jaw, a couple of broken teeth and a concussion.\" \n\nI said bluntly, \"Don't forget their balls Sally.\"\n\nSally looked up at me some fear and trepidation in her eyes, \"No, no, you did them some serious damage down there.\"\n\nShe hesitated for a moment, \"I never knew you to be violent, Phil. Did you have to do that?\"\n\nI looked at her in disbelief. \"Are you defending those assholes?\" I said sarcastically.\n\nBefore she could answer the phone rang again. \"You should answer that, it's probably for you.\" I said and got up and walked to the bathroom.\n\nI washed my face and looked at myself in the mirror. My eyes were red and swollen. I looked like I felt, old and haggard, older than my age anyway. It had been a mostly sleepless night. \n\nI wandered back into the kitchen. Sally was just standing there looking at the phone in her hand. Slowly she hung it up and collapsed back into one of the kitchen chairs. As I sat back down she said without looking at me, \"Did you have too? Did you have to tell Debbie's husband?\n\nI shrugged and said, \"Why shouldn't I share the pain?\"\n\n\"He, he already called John and Craig's wives. And he kicked Debbie out of the house. She is going to have to hire a lawyer just to see her own daughter.\"\n\nShe started crying again and mumbling, \"Shit, shit, shit ...\"\n\nShe looked up at me and said with tears streaming down her face, \"And she fired me. She said everything was my fault ...\"\n\nI laughed bitterly, \"Oh that's just great. Tell me Sally, just who introduced you to John and Craig anyway? It was Debbie wasn't it?\"\n\nIn between sniffling, Sally said, \"How, how did you know?\"\n\n\"You know when I told Josh this morning what you and Debbie were up to last night; he didn't want to believe me. Called me a 'liar' and accused me of trying to break up his marriage. But as soon as I said John Harrison's name he changed his tune. He turned pale as a ghost and started swearing like a sailor. I think it was probably the first time he ever got mad in his life.\"\n\n\"You told me years ago that this was Debbie's second marriage and she was estranged from her parents. It seems that Debbie has a sister who lives upstate that she never sees either. About a year ago Josh was doing an audit of a company up there and one of the people he worked with turned out to be Sarah, Debbie's sister. Sarah had known Debbie had married again and Josh knew Debbie had a sister but they had never met. Anyway they hit it off and one night before he finished the audit Sarah invited him to have dinner with her and Dave, her husband.\n\nShe had quite a story to tell. It seems that her husband Dave had been Debbie's first husband. Dave and Debbie started dating in college. They dated for two years until Debbie graduated and then they got married. About on their one year anniversary Dave found out Debbie was having an affair. He also found out that Debbie had been cheating on him for their entire relationship. \n\nHe threw her out and filed for divorce. Debbie and her parents had a falling out over it too. Then Dave and Sarah became an item and they ended up getting married. They have a couple of kids now and seem very happy. Of course Debbie had never told Josh about any of this. And guess who Debbie was having an affair with during her first marriage? Surprise! It was John Harrison!\"\n\nI stopped and Sally just stared at me in shock. \n\n\"Oh yeah, so when I mentioned John's name Josh started putting together bits and pieces of things and realized Debbie had been doing to him what you did to me for their entire marriage. No wonder he kicked her to the street!\" \n\n\"And like Josh, I wonder just how long you have been screwing around on me.\" I said vehemently. \n\nSally started crying again and said, \"Oh god, Phil, it was just John and Craig, and only on our shopping trips! Please believe me! I never, ever even thought about someone else until Debbie started talking about it before our first shopping trip.\"\n\nShe sat there, twisting a handkerchief in her fingers, alternating crying and pleading. \"Please Phil; I don't know how I got where I am now. I felt like I woke up from a dream or maybe a nightmare when I opened that bathroom door and saw you standing there.\"\n\nI didn't say anything just looked at her grimly.\n\nEncouraged she started talking fast, almost babbling. \n\n\"I ... I knew Debbie liked to play around back before we even started our shopping trips. She talked about it like it was the most fun she ever had during her marriage. \n\nBut I didn't expect her to hook up with anyone on our trip. I was totally surprised when John showed up at the restaurant and Debbie introduced him to me. She explained that she knew John from back in high school and he just happened to be in the area. I suspected that wasn't true but didn't say anything.\"\n\nShe paused, bit her lip and looked away. \"John...John was at his charming best that night. Flirting, dancing with both of us, complimenting me a lot. I had a couple of more drinks than I was used to and when his hands wandered a little out on the dance floor I pretended not to notice.\n\nLater when we returned to the hotel, Debbie went with John. He had booked the room next to ours. I knew then that Debbie had set this up. The hotel we were in was an older one with thin walls. I could hear them having sex most of the night. Debbie was quite vocal. Listening to them really got me going.\"\n\n\"I guess that explains why you were so horny when you got home that Sunday doesn't it.\" I said disgustedly.\n\nSally hung her head and nodded. She wiped her eyes and continued. \"John was gone the next morning. We went to breakfast and Debbie gave me a blow by blow account of their night together. She raved about him all the way home.\n\nOver the next few months, as usual Debbie and I had lunch together a couple of times a week at work. She would often mention John and how much fun she had being with him and how great the sex was. That was when I first heard about his wart. Debbie laughingly told me I had to try it out once because she couldn't explain it.\n\nAt first I just laughed her off. But the more she talked about it the more the idea stuck in my mind. A few months later when the next opportunity to go shopping came around, Debbie confided that John was really interested in being with me and she wouldn't mind if I wanted to be with him. I kind of laughed it off but I asked her what she would do if I did that. She said that John had a friend, Craig who would come along and keep her company. I didn't say no and I don't know why. I told her I would think about it but I didn't think I could do it.\"\n\nSally looked at me and I just stared back at her without expression. \"I ...I knew it was wrong Phil, but the idea got into my head that I could do this and no one would know.\"\n\nSally looked away again and said, \"That Saturday night John and Craig showed up at the restaurant. We had dinner and a few drinks then went to a nightclub. We kind of paired off and I was with John. By that time I had had enough to drink and had convinced myself that nothing bad would come of it. Everyone was having a great time. Later when we went back to the motel John and I just naturally went to our room and Debbie and Craig went to theirs.\"\n\nSally's stopped talking and just stared at her hands.\n\nFinally I said with contempt, \"So, was it everything you thought it would be?\"\n\nSally looked at me with tears in her eyes, \"It, it was okay. It wasn't any better than what you and I have. What made it so hot was that it was so wrong, and it was with someone new and I could pretend to be someone else.\"\n\n\"What you are saying it was better than okay, he got you off so much you forgot about your husband waiting at home. Your husband who was taking care of your kids out of love for you so you could have that time alone!\" I said bitterly.\n\nSally choked back a sob and looked away again, \"Yes.\" She whispered.\n\n\"And how do you explain Craig, wife of mine?\" I said sarcastically.\n\nWithout looking at me, she said \"After a couple of trips sleeping with John, Debbie joked she was starting to miss him. I didn't think too much about it but the next trip when we paired off I ended up dancing most of the night with Craig. Later at the motel Craig came to my room and he and I spent the night together. It...it didn't seem like a big deal.\n\nThen, a couple of trips later, John and Craig switched in the middle of the night. I didn't realize it at first until late at night I woke up and realized the man making love to me wasn't the man who I started with.\"\n\nSally looked at me with sadness, \"It seemed like I was two different people living in two different worlds. I love our life together, you, me and the kids. But I was hooked on those weekends away. I thought I could have both and you would never find out. How stupid could I be?\"\n\n\"Damn stupid I think.\" I said in agreement.\n\n\"Then after you saw me in the motel, I looked at myself in the mirror and I realized what I had become.\" She whispered almost to herself.\n\nI stood up and looked down at her, \"Interesting story, Sally. Too bad it doesn't have a happy ending. Or maybe it does -- for you. I am going after the kids. \n\nTonight after Allie goes to sleep you and I will sit down with Jason and Jessie and tell them their parents are going to live apart. I think Allie is too young to understand yet. We won't tell them the real reason why. And I will do everything in my power to minimize the trauma to them. I will sleep on the couch in the basement until I can make other arrangements.\"\n\nSally screamed at me as I started to walk away, \"Phil, my god! It was a mistake! I love you. Don't do this, please!\"\n\nI turned and said \"And why shouldn't I?\" \n\nSally weeping uncontrollably said, \"It was only three, four nights a year. I never saw John and Craig or anyone outside of those weekends. Please Phil, I'm begging you, can't you forgive me and let me make it right?\"\n\n\"Forgive you Sally? Forgive you for three or four nights a year becoming a slut for other men? For giving away what I cherished most in the world, yourself? Forgive you for destroying my trust in you? Forgive you for destroying my belief that you and I belonged to each other and no one else?\" I said with sadness.\n\n\"And how would you make it right? Can you go back in time and start over? This time can you not fuck John? And not fuck Craig? Because that is what it would take to make it right.\" I said tiredly.\n\nI stood there silently, looking around the kitchen, family photos on the wall, the kid's pictures and papers stuck on the refrigerator, Allie's booster seat in the corner, all the things that made this house a home. I shook my head trying to clear it.\n\n\"I spent most of last night awake asking myself how I would feel about you in six months, in a year or in five years. I'm sure someday I will be able to forgive you. What I can't do is ever forget. \n\nNot in a year, nor five years or even ten. Every time I see you I will think of last night, every time I hear your voice I will think of last night and every time I hear your name mentioned I will remember last night.\" I said with a catch in my voice.\n\nWith tears in my eyes I said, \"That, Sally, is what I can't live with.\"\n\nI stood there not moving, thinking sadly about the future, barely aware of Sally, rocking back and forth in her chair, alternately sobbing and crying, 'no, please god no'.\n\nAfter a few minutes I said softly, \"Can you answer me one question Sally?\"\n\nShe looked up at me with empty eyes, like a condemned prisoner who knew there would be no commutation.\n\n\"You lost the man who loved you most in the world. \n\nYou lost the respect of your parents, the respect of my parents and the respect of your husband. \n\nYou lost your job. \n\nAnd someday you will have to explain to our children why you broke up our family.\"\n\n\"Was it worth it?\"\n\nAfter a minute of silence broken only by Sally's muted sobs, I turned and slowly walked out the door.\n\n*\n\nThe End"
    ],
    "authorname": "itmgr2010",
    "tags": [
        "cheating wife",
        "divorce",
        "consequences",
        "infidelity"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/warts-and-all-ch-02"
}