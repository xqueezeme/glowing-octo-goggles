{
    "title": "Becoming Her Wife Ch. 10",
    "pages": [
        "The Conclusion\n\nWe pulled back into Tahiti the following Sunday to refuel and fill all the tanks. The four of us went to the club that night. I was once more dressed in a corset and wearing my chastity belt. Josie took great pleasure in tanning my backside then showing it off to any one that cared to look. Once we were back at the house she took me as she had done on the first night we went to the club, but this time she made sure to undo my restraints before we went to sleep. \n\nWe went back out to sea two days later for more diving. On the third of July we had dinner with the governor of Tahiti. On the Fourth we went to the barbecue at the American embassy. On the fifth we flew out to spend a week in Australia and to go diving off the Great Barrier Reef. \n\nAfter Australia we flew to Germany to do some shopping. The shopping had nothing to do with cloths. The four of us went shopping for domination gear that the Germans were well known for producing. We then flew on to France for actual cloths shopping before we flew to Josie's mother's island in the Bahamas. \n\nWe arrived three days earlier then the rest of Josie's sisters. All three of those days were spent looking for a boat that Josie could buy and use for diving. In the end she didn't find anything that she considered acceptable. So she decided that after the time we spend with her sisters we would go to Miami to have a boat built to her specifications. \n\nThe swing club met on the first Saturday of August. Josie and I were allowed to join instantly thanks to her sister's recommendation and seeing that Jolene was a member of the board. I thought the initiation fee was quite high, a hundred thousand per couple but Josie didn't bat an eye as she had me write out the check. \n\nEach day the ten of us, Jill Jim Josie and her three sisters and their husbands would travel to the island the swing club owned and we would sit around the pool or in the bar socializing with the other couples. Sometimes Josie would find a woman that she was attracted to. We would go to their room and have sex with them for a few hours before rejoining her sisters for lunch or whatever. \n\nJosie never felt attracted to any of the men though she would have sex with them as well. We had to make sure that the couple was bisexual seeing not all were. \n\nAt night there was always dancing mostly to recorded music though on the weekend we did have live bands. The first Friday night was a beauty pageant. Where all the guys that cross-dressed, dressed up as women. The competition was tight between two others and myself. In the end I was the first runner up. Josie said that it was because the one that won was married to the president of the club. \n\nDuring the day just about everyone went around nude with the exception of the guys that cross-dressed. They would wear bathing suits or something else that would hide the fact they were really men. At night in the dinning room and at the dance hall you were required to wear cloths. Everyone dressed to the nines. \n\nJosie and I would always go to someone's room when we were going to have sex with them. Though it wasn't uncommon to see two or more people having sex at the pool or on a lounge chair beside the pool. Josie though this was a little too open. Even though we were nude most of the time she thought sex was not something to share with anyone that passed by. \n\nEven though I knew that Josie would be having sex with whom ever she wanted. I was always uneasy when we would first enter a room. Until I saw how beautiful she looked when she was riding some one else's cock. Josie made it a point to always be on top. If the guy did like it he could find someone else. Very few went looking for someone else.\n\nMostly she would please the women while I pleased the man. Sometimes she would do the man while I did his mate though this never felt quite right. No other woman was as in control as my Josie was. Toward the end of the second weeks we stayed mostly to ourselves except when Josie would get the urge to eat pussy of some woman, then we would wind up in their room. \n\nThe last night the club met was dom. and sub night. Each sub was graded on the amount of restraint that was used on them. As well as how much control each Dommie had on their sub. \n\nJosie was extremely edgy the day of the competition. When I asked what her problem was she said, \"I don't think we should enter the competition tonight. You know how competitive I am and you know I hate to lose. I'm afraid what I may do to you in order to win.\" \n\n\"I trust you with all my heart.\" I told her then I said, \"I also trust you to win. Do what you must. I can take what ever you dish out.\" \n\n\"Are you sure it might get pretty intense. I've enjoyed our bondage sessions, I think you have too. I don't want you to fear them.\" She told me. \n\n\"I've enjoyed them too, I just don't want to lose again. I still think I made a better women the other one did.\" I told her. \n\nJosie laughed and said, \"I thought you looked better too. I thought you were a little more upset with losing that competition then you showed. Just so you know how much this may hurt you.\" \n\n\"I understand and I won't fail you.\" I told her. Josie nodded her head but I could see she was still worried. Nothing more was said for the rest of the day. \n\nJosie and I shared a late lunch before we started to get dressed. We showered together then I applied my sluttish make up. Once my hair was pulled back into the tightest French braid I could get it I put on my stockings and knee high boots. \n\nThese boots were new ones that we had purchased in Germany. They had a seven-inch spike heel. With the length of the heel it caused me to virtually stand on my toes. I had tried them on when Josie bought them and twice more since then. I found it extremely hard to walk in them. They laced up the front and they compressed my feet. Josie said if I didn't want to wear the boots, she wouldn't force me, knowing how painful they were. I knew that the first part of the competition was judged on how restrained you sub was and I want to get all the points I could before Josie had to show how much control she had on me. \n\nNext came the stiff leather corset that compressed my waist from its normal twenty-six inches to twenty-two inches or less, depending on how much I had eaten that day. Since I had eaten very little I would be closer to twenty inches. \n\nJosie then put the collapsing butt plug up my ass and the restraining sleeve on my cock. Next she put on the chastity belt as tight as she could before locking it into place. I then attached the garters to my stockings. \n\n\"That will do for now. I'll finish locking you up when we get to the club. One last time, are you sure you want to do this. I will not be angry if you don't want to do this.\" Josie asked I could see she was still worried. \n\n\"I only want to please you my Mistress.\" I told her, Josie kissed me hard on the mouth. \n\nWe walked out to the living room and found all of Josie sisters and their husbands waiting for us. Once Jolene saw what I was wearing she came to us and asked. \n\n\"Are you two sure you want to do this. I love spanking Robert's bottom, but I would never enter this competition with him.\" We both nodded our heads \n\nWe took Jolene's thirty-foot speedboat over to the club's island. Once we were on solid ground Josie installed my headgear and shoved in the new penis gag that we had gotten in Germany. This one was twice the size of the first one I had worn. It filled my mouth completely, causing my cheeks to bulge out with its thickness. The locks were then installed to keep it in place. A lock was then attached to my boots at the knee, causing my knees to stay together. \n\nA leather mitten was then put on both my hands and locked into place. To put these on I had to bawl my hands into fists. This prevented me from being able to jerk someone off. Josie did not want a repeat of my first visit to the club on Tahiti. She then put a leather wrist cuff on each wrist and attached them to my chastity belt, this time the chain holding them was much shorter. \n\nWalking in these boots was hard and made harder yet by the sand. Josie attached a leash to my collar and pulled me along behind her. Thankfully she didn't try to walk too fast as I could only move my feet a half step in front of me due to my knees being locked together. \n\nOnce we were inside the club we went to the registration desk. The woman behind the desk was one of the board members and a judge for tonight's competition. \"Since you two are new to the club you get to go last. This way you can see what will be expected of you. If you feel you can't go on please don't feel you have to. We understand that some people think they're tough dommies until they see a real one at work. Now here is the rules of do's and don'ts if you break the rules you will be disqualified.\" She told Josie, completely ignoring me, then she handed Josie a slip of paper. There was one line typed on the paper. \n\nJosie looked at the sheet of paper as she walked away from the judge with out a word to me. I followed behind her as she went to find her sisters. Once we found where her sisters were sitting Josie snapped her fingers and pointed to the floor. I did my best to go to my knees for her gracefully, but in the end I crashed to my knees hard. It's not easy trying to kneel when your knees are locked together and your hands are locked to your sides. I didn't know how I was going to stand up with out Josie's help. After hearing my ungraceful fall to my knees Josie leaned over and said she was sorry and that she loved me.\n\nThen to her sister Jolene she said, \"These are silliest rules, there's only one. Don't draw blood, what the hell does that mean?\" \n\n\"It means if you beat your slave too hard and you cut her and she bleeds you are disqualified. That's the only rule otherwise you're free to do anything you wish.\" \n\nWhen the competition started the first contestant was made to crawl on hands and knees to the stage by her Master. She wasn't bound and gagged as I was. She had on a leather corset that left her breast exposed. Her boots were similar to my own. Her mouth was held open by an o-ring gag. \n\nWhen the judges inspected her they checked each orifice. After the inspection they started writing on a clipboard then told the master to proceed. \n\nThe Master tied her down to a crossbeam so that her ass was exposed. The master then started to beat her bottom with a paddle. He's beating were not that severe, well not near as bad as Josie had beaten me. When we started hearing a garbled scream coming from the slave's mouth he stopped hitting her. This caused the Judges to write on their clipboard. The Master released his slave from the crossbeam. She went to her knees and looked up at her Master. The Master open his leather pants pulled out his cock and peed into his slave's mouth. \n\nI felt Josie cringe next to me for she found this act disgusting. What really caught my eye was the fact that two of the judges also turned away. After this act the Master indicated that he was done. The judges thanked him then called for the next contestant. \n\nThe next two contestants were male subs with female Mistresses. The first slave was bound and gagged though not as sever as I was. The second was gagged but not bound. Each wore a butt plug even though one was dressed as a man while the other was dressed as a woman. \n\nBoth Mistresses hit their slaves with paddles though the second one did seem to enjoy it. The first seem to enjoy it but she wasn't putting all her power into it. Neither slave seemed to be in much pain. The first Mistress did seem to take great pleasure in screaming at her slave what a worthless slave he was. I didn't know how the judges were scoring the competition, but so far I didn't see much if anything to worry about. \n\nThe next two contestants were two Masters with female subs. The first Master strolled to the stage as if he had already won the competition. There was a small amount of applause for him and his sub. \n\nHis slave was wearing a pair of laced up boots with extremely long heels. I thought that mine were longer but I couldn't be sure. I saw that her knees were not locked together as she crawled behind her master. You could see that there was a butt plug in her bottom and she was also wearing a chastity belt. In her mouth was a very large red ball gag and her eyes were blindfolded. \n\nWhen the master stopped in front of the Judges table he told his slave to heel. The girl sat back on her heel and waited for the next command of her master. When the judges asked her to stand she didn't move till her master commanded her to stand. Once the judges were done with their inspection the master was given permission to proceed. \n\nThe Master then attached a set of nipple clamps to slave. I could see that this cause the slave some discomfort seeing that she rose up on her toes but settled down quickly. Then he hung a large weight from the chain that was attached to the nipple clamps. \n\nThe master then strapped her down to the crossbeam. He picked up a leather paddle and started to spank her bottom. You could see that he was really enjoying himself as he laid into his slave. You could see discomfort in his slave's face though not a sound came from her. \n\nAfter fifty or so slaps of the paddle the master put it down then picked up a small cat of nine tails. He then proceeded to hit her bottom as well as her thighs with the cat. After thirty lashes of the cat you could see her hands clinch into fist on each slap, but still she made not a peep. After the cat had landed forty times the Master released his slave. She went immediately to her knees and hugged her Masters thigh. \n\nDuring the competition Josie's foot had started to twitch back and forth. Like the tail of a cat that was ready to fight. Now her foot was moving faster and she couldn't seem to sit still. This told me she was either very excited or very nervous. I had never seen her like this; she has always been cool and collective. \n\nAs the next master was coming on to the stage and the last was leaving you could see an exchange of word between the two. Obviously you could see that theses two were rivals in this competition. Both slaves looked exactly alike as if they were twins. Both wore the same costume right down to the blindfold and ball gag. \n\nThis Master and slave couple went thought the same inspection as the others did. He applied nipple clamps like his predecessor did and the heavy weight as well. He laid into his slave as with a vengeance with the paddle. The only difference between the two was once the second one was done with the paddle he picked up a bamboo rod. \n\nI knew that this was called a cane. It was made of bamboo and was extremely flexible. As Josie had demonstrated to me once and only once it was extremely painful. If the wielder wasn't careful they could cause serious damage to the slave and easily break the skin.\n\nEveryone watched in awe as the Master slapped his slave with the cane four times. On the fifth time one of the judges called a stop and inspected the slave's bottom. \n\n\"I'm sorry Frances you are disqualified. You know our rules, no blood is to be drawn.\" The judge told the Master. \n\nThe Master looked to where the judge had pointed and there was a slight drop of blood on her right cheek. You could see that the master was quite upset with the turn of events. He knew he had gone too far and that caused him to be disqualified. The master removed his slave from the crossbeam and helped her off the stage as Josie and I was called up. \n\nOnce on the stage the judges started their inspection. They tried to push their finger into my bottom and my mouth. One even tried to pull out my butt plug slightly. When it didn't come out she told Josie she was impressed. Once the inspection was over one of the male judges said \n\n\"Are you both sure you want to continue? No one will say anything against either of you if you pull out now.\" \n\nJosie looked at me and asked, \"Do you want to continue? If you shake your head no then we will stop here. It's up to you my love.\" \n\nI wanted so desperately to say I was willing to do, as she wanted, but all I could do was nodded my head yes. The Judge told Josie to continue. First she unlocked my hands and strapped them to the top of the crossbeam. My knees were left locked together. Josie went over to the table that held the implements of punishment.\n\nThere was an array of whips, paddles, straps and canes. Josie looked over the implements with a steady hand as if she was looking over a record collection. Her hand lightly touched the bamboo cane as I tried hard not to cringe. She knew from experience that if you were going to use a cane and you didn't want to draw blood, you should use it first. That was were the last contestant had made his mistake. \n\nJosie had told me after using the cane on me just once she would never use one on me again. I hoped that she would live up to her promise. She was good to her word, but in the heat of competition I was never sure if she would keep her word. In the end she picked up a vented paddle to start with.\n\nNormally Josie would talk to me as she paddled my bottom. Tonight though she went straight to work bring my ass to a bright red glow. At first there was only pain as each slap of the paddle landed on one cheek or the other. Slowly the pain turned into pleasure as the warm glow spread from my ass to the rest of my body. By the fifteenth slap of the paddle there was only pleasure, the pain was long gone. By the thirtieth slap my mind was in a fog as my bottom pressed back for each slap. \n\nJosie later told me she had hit me fifty times though I don't remember much past thirty. Josie placed the paddle onto the table then once more looked over the selection before her. At first I thought she was going to use the cat, but then she chose a two-foot riding crop. \n\nShe came to me and looked into my eyes. She wanted to see where I was mentally. Just one look told her I was in that place between conciseness and unconscious, the place where all things were pleasant. I saw that Josie was in much the same place. \n\n\"You know I love don't you?\" She asked in a voice so low that only the judges and I could hear. I nodded my head. \n\nThat was the only word we exchanged before I felt the stinging fire of the first slap of the crop. At first I wanted to scream into the gag, but I knew that would be marked against us. I swallowed the scream as I did each one after that till I was once more unable to feel the pain. After thirty slaps from the crop Josie threw the whip on to the table. She then bent over and unlocked the lock holding my knees together. She stood and unlocked the chastity belt releasing my cock and balls. \n\nWhen she released my hands one of the judges stood and said, \"Thank you mistress.\"\n\n\"I'm not done yet. I still have some time left don't I?\" Josie asked instantly. \n\n\"Yes of cause you do Mistress I just though you were done. Please continue.\" \n\nJosie spun me around and pushed me back on to the crossbeam. The pain I felt at that instant was almost too much of me control my screams. I just managed to swallow it down before it escaped. Josie then reattached my hands to the upper crossbeam and my feet to the lower. Once my legs were spread wide my cock sprang up hard and ready. Josie moved what was left of the belt out of the way and removed the sheath from my cock. She then unlocked the chinstrap from my collar and removed the gag from my mouth. \n\nJosie picked up the cat of nine and said, \"My pet I'm going to use this on you cock and balls next, its up to you if I continue. What do you say should I continue.\" \n\nAt first I was taken aback. This wasn't something we had ever tried before. I had no idea for much this would hurt or if it would cause any real damage. I did hear the sound of awe that came from the audience when Josie had asked the question. I knew if we could pull this off, we would win easily as long as she didn't draw blood. ",
        "\"Mistress I am only here for your pleasure.\" I told her in answer. \n\n\"Then you willing submit to my desire to flog your penis and testicles?\" She asked \n\n\"If that is what you desire then it is my desire to submit to you in this as in all things.\" I told her \n\n\"Gag in or out my pet.\" She asked \n\n\"In my Mistress I wouldn't want to bother you if I couldn't control myself.\" \n\nJosie forced the gag once more into my mouth then attached the lock for the chinstrap to my collar. She stood between my spread legs and flicked the cat at my groin. The ends of the cat snapped at my cock with stinging pain. It felt like some one had just stabbed me with several needles. The next flick of the cat brought fire to my groin, as did the next three. After that Josie seem to control the cat better and each time she flicked at me the tails would wrap around my cock and ball in almost a lover caress. By the tenth flick it felt like she was jerking my cock off. By the fifteenth I felt like I was going to cum any second. Josie must have seen this as she stopped and placed the cat onto the table. \n\nJosie turned to the judge's table and said, \"As you have seen my slave is willing to do anything for my pleasure. Now I will demonstrate the control I have on his body.\" \n\nJosie then walked over to me and pulled out from her cleavage what looked like a condom with a six-inch clear plastic tube attached to the tip. She stretched out the condom and snapped it onto the head of my cock. This alone nearly sent me over the top. Josie then stepped away from me and said with her hand on her hips. \n\n\"You love me don't you my pet?\" I nodded me head enthusiastically. \"Then cum for me my pet cum for me now.\" She told me \n\nThe only thing that was holding back my orgasm was my wish not to displease her. Once I had her permission I relaxed my will power and instantly my orgasm ripped through me. I nearly passed out as the pressure in my balls released the pent up cum. It quickly filled the tip of the condom and started to go up the tube before my orgasm subsided. \n\nThe look in Josie's eyes was one I will never forget. She looked like she had just climaxed as well. Her eyes glazed over as she watched cum filling the condom on her command. We couldn't take our eyes off each other till I had stopped cuming. When we did finally look away we saw everyone on his or her feet applauding. \n\nJosie quickly removed the condom and hooked the tube up to the penis gag and ordered me to suck it clean. Which I did while she reinstalled my chastity belt. She removed the cleaned condom as the applause die down. We were about to leave the stage when one of the judges called the room to order and said. \n\n\"Mistress please wait one moment. Jason would you please come up to the stage.\" The judge asked \n\nThe gentleman that had the first blindfolded slave came up to the stage with his slave in tow. By now she had her ball gag and blindfold removed. Once he was on the stage the judge said. \"Jason the committee has unanimously award you the second place prize. I know it's not what you were hoping for.\" \n\n\"No it's not Fred but I wouldn't be much of a man if I didn't recognize when I've been out done. I have never been able to make my slave cum on command.\" Jason told everyone. \n\n\"Mistress Josie the committee awards you first place and the title Queen Dommie of the Summer Rendezvous.\" He told her before putting a crown on Josie's head. It wasn't an expensive crown, I thought Josie looked wonderful with it. \n\nIt took us awhile to make our way back to the table where Josie sisters were waiting. Once there the three sisters pulled Josie and I in to a big family hug as Cathy and Susie squealed in our ears. Champagne was brought to the table and every one had a glass. I sipped mine though up a straw and through my penis gag. \n\n\"Josie I think you can release Nikki now, at lease take the gag out so she can drink properly.\" Jolene told her. \n\n\"She going to stay just like that till I can get her back to the house.\" Josie told her. I could see Josie was highly excited and was biting at the bit to get me back in our bedroom for some serious fucking. I knew my ass was going to be filled with her strap-on once we got back. To tell the truth I couldn't wait it's been a few weeks since she took me like this. Though I like being fucked by men, when Josie does it it's always seems special. When I'm bound and gagged its even more special. \n\nIt took Josie a while till she finally convinced Robert to take us back in the boat. I never felt so vulnerable then I did that night on the way back to the house. I knew if the boat capsized or we hit something I could drown with my hands bound to my sides and my legs locked together. I knew I would have to talk to Josie about this once I was free. \n\nBack at the house Josie took me straight to our bedroom. She had me kneeing on the bed and her strap-on was up my ass before Robert had turned the boat back to the club. Josie rode me for over an hour, as she seemed to have a constant orgasm. I experienced more then my share of them as well thought I didn't actually cum. \n\nOnce again I woke bound and gagged but this time Jose was still firmly inside me. I still love waking up with her strap-on in my ass. We showered and I filled her mouth as she sucked me dry. \n\nBy noon we were on our way to Miami. We spent a week in Miami so Josie could find a boat builder that she could trust. Then we flew to Jamaica and had my breast implants put in. We finally got back to Oakland on the first day of the regular season of football. \n\nI spend the next ten-months in school learning every thing a good hostess should know. Josie worked almost non-stop between getting the house built and having her boat built, not to mention her buying and selling stock and business on the Internet. \n\nAs far as the football betting goes I still lose more then I win. This doesn't bother me because Josie always makes losing so much fun. We have spent a lot more time in her playroom thanks to my losing. \n\nSince returning from our honeymoon Josie has not had sex with any other man except me. She still enjoys sex with other women and she allows me to have sex with both men and women when the opportunity arises. She says as far as her having sex with men she can't find anyone that satisfies her the way I do. On the average she submits to me two or three times a week where I call the shots. Though I'm the one in control I never abuse my power. I will always make sure she is satisfied, my pleasure is secondary. \n\nThat brings me back to where I started this story. The new house is done thankfully and tonight is Josie and my first year anniversary. So tonight we have a lot to celebrate. Our house warning is tonight plus the anniversary and to top that off. Josie going to announce that she is three months pregnant with our first baby. Amazingly none of her family has a clue. \n\nSo back to my question how I wound up in this predicament. All I can say it was pure luck."
    ],
    "authorname": "Scribler",
    "tags": [
        "judge told",
        "knees locked",
        "top josie",
        "house josie",
        "club met",
        "wearing chastity",
        "table josie",
        "sisters husbands",
        "slap paddle",
        "josie looked"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/becoming-her-wife-ch-10"
}