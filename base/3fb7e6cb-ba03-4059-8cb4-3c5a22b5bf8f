{
    "title": "Curtis Woodman Ch. 03",
    "pages": [
        "I did my best with an idea that came to me; it took these three chapters to get it out there. Thank you Hal1, you're a star. My thanks as always to those who stand behind me, so that I can take the blame. You all take time out of your lives to help me and for that I really appreciate it. To those of you about to read this, please enjoy. We did our best.\n\nPlease note. This is a story.\n\nIt came from my head and not from any history books. It's a story. \n\n*******\n\n\"I fucked up the last time Curtis, I know I did, and every time I tried to correct that mistake, I went and made another. So, I'm asking for another go. The girls, hell the whole boat club have offered to look after Becky tonight. I want you to show me your scars and in return, I'll show you mine.\"\n\nIt was the first time I had seen her bite her lip, her cheeks went a slight pink color as well. Ruth's hand slowly came to my cheek and rested there. Her eyes seemed on the verge of panic.\n\n\"I can absolutely guarantee, I'm a consenting adult Curtis. Please give US a chance.\"\n\n*******\n\nRuth came back almost twenty minutes later. Her beautiful face had an almost scarlet tinge to it. I stood from my seat and joined her as she was standing at the bottom of the steps on the cabin's floor, her arms out and her facial features telling me she most definitely needed a hug.\n\n\"God that was embarrassing, they all know what we're doing Curtis. The amount of 'good lucks and see you both for a late breakfasts' I got on the way back here.\"\n\nI just hugged her a little tighter; she couldn't see me smile that way. \n\nI even thought I was offering her a lifeline when I said. \"If you want to leave this for another time?\"\n\nHer hands came to my chest and she pushed back. The panic came first, followed by a little anger, that I had even suggested it. \n\nI held up my hands in surrender. \"Ruth you had the look of the hunted on your face by the time you got back here. I was just giving you a way out.\"\n\nThankfully she listened to what I had just said, and a smile slowly came to her lips. I made her a coffee and we sat on the couch. Her hands went around the cup and her legs lifted off the floor and went onto the couch as her body slid sideways onto me, and my waiting arm went over her shoulder, while her head rested against me.\n\n\"Well, that's not happening. I've waited a long time for this and used up a lot of favors with the women folk around here as well. Not to mention it would take one heck of a crowbar to get Becky away from Sarah and Gil's boat tonight.\"\n\nShe took a sip of her coffee and continued. \"You've also set a president: they promised to take her to her favorite drive-thru for breakfast as well.\"\n\nShe giggled for a moment. \"I still don't know where she learned that fist-pump thing, but she used it when she heard us talking about the morning.\"\n\nHer knuckles started to go white, and I figured that anxiety was setting in; it was time to take over since she had pulled us both this far. I held out my hand and gently took her cup from her. Other than a quick sip, she hadn't drunk any of it, so it was nothing more than a prop for her. It went on the table next to me before Ruth straightened up on the couch and watched as I sat my phone down and tapped it a couple of times. Soft music emanated from its speaker.\n\nThen I turned and offered her my hand, she smiled and graciously accepted. We slowly shuffled around the room in each other's arms as I listened to the music, and Ruth had the side of her head resting snugly against my shoulder, doing the same. I gave her another moment and then stopped dancing, unclasped our hands, and took a step back. She watched but said nothing, so I lifted her blouse over her head. When her head appeared, she had the biggest smile I had ever seen on her. \n\nRuth watched as I dropped her blouse on the floor, then looked at me and said. \"My turn.\"\n\nHer hands instantly went to my t-shirt. I held my hands away and bent my knees a little. She lifted my shirt over my head and tossed it behind her. Her eyes were fun to watch; she took a moment to look at my chest, and I took a moment to watch as her chest just kept going up and down in that bra of hers. \n\nRuth's eyes were slowly becoming carnal, and her hands seemed to move of their own volition. My hand came out and my fingers went to her bra and grasp the part between both cups. I smiled and the devil in me made me pull her to me. Her hands came up and around my neck. We kissed. My hands found another mission as they went around her body and unsnapped the clasp holding her bra together. \n\nHer lips parted from mine and she sucked in air before looking me directly in the eyes. \"Their isn't a pretty way to say this Curtis. When I step back, take a good look because once my bra hits the floor so will your pants and my mouth will be around your cock. Please don't hold my head; I have a bite instinct that will get me, even with you, if you do that.\" \n\nHer eyes shone just then, and her grin turned just a little evil. \"Feel free to rest your hands on my shoulders if you start to feel faint while I'm down there though.\"\n\nI'm sure the whole boat club heard me laugh right about then. \n\nRuth teased, she tormented, and then suddenly moved her hands to the back of my thighs and suddenly pulled. What was still on the outside slipped into her mouth and the bulbous head of my dick felt the tightness of her throat as she had all of me in her mouth. \n\nIt took every ounce of willpower I had left in me not to lose everything just then. I also made use of her offer and held onto her shoulders. Her throat seemed to do some sort of motion and my cock answered its call. That's when I emptied everything in me, down her throat. As the last pulse faded, her hands moved to the front of my legs and pushed. Ruth gasped for breath as her mouth cleared my cock. Saliva and cum dribbled from her mouth as large gulps of air were pulled into her body causing her chest to heave.\n\nI looked down at her; she looked up at me with the biggest smile I had so far ever seen on her. The carnal part of my brain looked at her and fell in love with her even more. With her clothes on, she was my ideal woman. When she got naked, there was just no stopping her. I started to think that she knew what she wanted, and if you didn't keep up, she would find a real way of taking it from you. \n\nThat thought was confirmed when she said. \"I love doing that, but one day I'm going to take it too far. You any good at mouth to mouth?\"\n\nMy smile got bigger as I said. \"Qualified medic; trained to take a bullet and stick my tongue as far down my partner's throat as she will allow me.\"\n\nAs I helped her up, all I heard was. \"Well, that's good to know.\"\n\nShe went over my shoulder then, her hands beating the small of my back. \"Great, I'm in love with a he-man that goes all gorilla on me and drags his woman by the hair to his bed and has his wicked way with her.\"\n\nThe only thing Ruth heard in reply was. \"No, that's what's planned for tomorrow night.\"\n\nShe was still laughing as I gently placed her onto the bed. Instinctively her legs parted, and I knelt in the space between them. I looked, and then placed my palm over her sex; Ruth let out a slow moan and tried to push her mons tighter into my palm. When I looked at her face she just stared right back with exactly the same expression on her face as mine. \n\nI felt I had to voice my thoughts first. \"I love you. There will be times I won't be able to tell you that as often as I may want to, but I love you. You hold my heart Ruth, and I never thought I would have the opportunity of ever saying that to someone; but I'm saying it to you, because it's real.\"\n\nMy thumb pressed into the folds of her pussy lips and a louder moan escaped Ruth. Her hips came up and more of my thumb got soaked in her escaping juices. \n\n\"Since we're saying our vows early, then here goes.\" Ruth pulled air into her lungs and some escaped as another moan, causing her eyelids to flutter. \"So many times, you have touched my heart. I fought against it in the beginning, but I've watched you with Becky and she is a great reader of people. We both know she owns us both, and over time I've come to love you with all my heart. I feel safe with you. I know I can share me with you and you're never going to judge or reject that person I had to hide from so many others. So, to echo something you just said to me, I return to you with so much feeling. I love you; you hold my heart Curtis.\"\n\nMy thumb left her clit and her eyes widened when I seemed to have taken her toy away. Both my hands went under her ass and held her hips as I both lifted and pulled her towards me, she gave out a little giggle until my mouth attached itself to her pussy. Her legs moved to my shoulders and she tried to pull even more of me into her.\n\nAlternating between my tongue's travels between her pussy lips and her clit that quickly came out of hiding to join the party. Poor Ruth tried to hide her screams by pulling a pillow over her head. I managed to hide my smile while still drinking from the well that kept on giving. Ruth grabbed the pillow and launched it across the room.\n\n\"Fuck it, the whole boat club are going to hear me with what you're doing to me, so I just don't care anymore.\" \n\nI crawled up to kneel by her hips. Her hand found my hardness and she hung on and I dove back in, she quickly moved her hand to hold onto my shoulder, as I sent her into her scream zone yet again. As she came down from that one, her hands pushed against me, forcing me to let her go and her sweat soaked body moved up the bed. I laid over her. \n\nHer hands held my head, her eyes were on fire, and she said. \"You're sleeping on the wet side, now fuck me.\"\n\nI buried my tongue once again down her throat Her moan tried to get out and our tongues just meshed together. It wasn't a fight for supremacy, just Ruth tasting what was leaking out of her, and another moan forced itself out of her throat when she did.\n\nHer hand once again wrapped itself around my cock and when our lips parted, she was panting. \"Please Curtis, I've waited, God I've waited. But I need it and I need it now.\"\n\nThe head of my dick, via Ruth's hand was rubbing up and down her pussy lips, so I gently pushed forward. When her hand stopped any further movement, she quickly got it out of the way, and I slid all the way into her. Her eyes went up and seemed to disappear into her head. I worried about that until the smile replaced my concern and eased my worries. \n\nAs I rested her ass once again on the bed those breasts of hers seemed to want some attention. We had a cool day a few days ago and her braless tits showed me that her nipples sure can extend behind that t-shirt of hers when it's cool. I wanted to see how far they went with my lips wrapped around them.\n\nMy mouth descended on her right nipple, and I sucked it in like my life depended on it. The gasp, then the groan was only separated by Ruth placing her hands behind my head and forcing more of her breast into my wide-open mouth.\n\n\"Oh my God, I can see you're laying the groundwork, honey. Oh, we are going to have so much fun for the rest of our lives.\"\n\nI learned that it's easier to just go with the flow; because at times like this, if you dare to stop what you're doing to answer her, then you just get the look: the one all us males know and dread. Besides, I was resigning myself to the fact that Ruth was a talker during sex, and to me, that had so many advantages. \n\nI sucked on her breast, her nipple went rock hard and when I swirled my tongue around it, then it got wetter and harder. I also made sure I gently nibbled on it, on its way out as well. When the right nipple popped out of my lips, Ruth moved so the left one was now available for my attention and her vocal cords once again moaned to the rhythm of my tongue on her very erect nipple.\n\nAs I moved down her body, I counted and kissed every rib that came into view. I even had to go back and count again when I hit a sensitive spot and Ruth erupted into giggles. She would then adjust her position and her hands came into play when they ended up on my shoulders to push me further south. By the time I had finished with her navel, her arousal was so fresh that it was all my nostrils could pick up, so I knew she was ready for another round. \n\nHer inner thighs were soaking, she was even laying on the damp part of the bed and just didn't care. My fingers went to her pussy lips and parted them. The deepest guttural moan I have ever heard came from the top part of the bed; my fingers felt it just before my face was covered in her orgasm. Something in my brain just snapped and I went after that liquid of life, like a starved man to a full meal.\n\nRuth screamed, she bucked and bounced around the bed, and all that did was feed more of her orgasm through her body, and her juices just kept flowing. In desperation, her heels dug into the bed and her hands went to my shoulders, both trying to force me away from her growing sensitive area. As her body came down one last time, my tongue went out and from her crinkled rose, through her pussy lips and over her hood, I gathered all that was offered and stored it.\n\nWhen she was gasping for breath, I leant up and kissed her, sharing us in the process. Her hand went around my neck and pulled me closer to her and our tongues rested against each other. \n\nAfter a moment, our lips parted, I adjusted my position, so I wasn't placing too much weight on her and ended up cuddled into her side, listening to her pant and wheeze and moan.\n\n\"You are one sick fuck, you know that, right?\" Then through a fit of giggles, she added. \"But you're my sick fuck and I loved it.\"\n\n*******\n\nWhen Ruth woke and gently eased herself away from me, she wrapped herself in a dressing gown, and put the kettle on to boil. Her first instinct was to make two coffees and rejoin Curtis in bed. The sun peeking over the clubhouse and the blue skies beyond, changed that thought. With her coffee now made, she went out, pulled a foldaway chair open and just sat listening to the sounds of ducks on the water. Even glimpsing a swan as it hustled its three young ones along the canal.\n\n\"I didn't expect to see you for another few hours.\"\n\nRuth almost dropped her cup; her meandering thoughts were pulled to the here and now by her friend. Sarah sat on the edge of the boat, cast a quick glance into the boat and smiled back at Ruth when she didn't see anyone below.\n\n\"Well?\" Said Sarah.\n\nRuth went scarlet and hid behind the cup in her hands on the pretext of getting ready to take a sip. \"A lady never tells.\"\n\nA giggle was shared by them both. Sarah was close to twenty years older than Ruth, and yet both had become fast friends from the very day Ruth and Becky came to the boat club. The conversation between them dropped in volume from then on.\n\n\"I'm oozing allot of love at the moment, Sarah.\"\n\nSarah looked down between her friend's legs and let out a little giggle. Ruth rolled her eyes, leaned over and playfully slapped her friend.\n\n\"I speak four languages fluently and I'm stumbling over Basic English. I still struggle with innuendo.\"\n\nBoth friends giggled like schoolgirls. \n\nRuth finally paused, her eyes took on a faraway look, and she seemed to wince, before her features returned to normal. Sarah and Gil had been the only people that Ruth had trusted enough to share a glimpse into her life. It was only with Curtis's permission did she even include an abridged version of the attempted kidnapping back home in that conversation. \n\nIt was then that they both realized why Ruth had bought the boat club. Both Sarah and Gil had also watched from a polite distance as her now friend and her daughter then fell in love, not only with the loner who owned the Keyleigh Ortiz, but also the boat club.\n\n\"There have been a lot of 'what if's' just to get us here Sarah. From his friend's wife dying and his own insistence that he go to a funeral thousands of miles away, to those men attempting to kidnap Becky.\"\n\nOne hand left her cup and did a slow wide arc over the view of the boat club from both their positions on the boat, before she added. \"To this.\"\n\nHer pause made Sarah wonder if she was going to add to her statement, she didn't have to wait long.\n\n\"Curtis said something to me last night and I repeated it to him because I believe it, and I'm going to say the same to you because I've seen that same look between you and Gil. He holds my heart Sarah. I love him so much.\"\n\n*******\n\nI woke alone, quickly looked around and then rolled over to the edge of the bed and pulled my trousers on and then picked up my shirt on the way out. It wasn't until I stood at the bottom of the stairs to look up did my ears figure out those odd noises: Sarah and Ruth were in a best friend's hug and having a quiet cry between them. Thinking it wise to just take a quiet step back and make some noise by the coffee cups while getting myself a coffee.\n\nThey had parted by the time I took the three steps up, to join them. \n\nThey both seemed to watch me as I sat on the edge of the boat and said. \"I know you've been married before, so do you want a big wedding or just a quiet and cozy one?\"\n\nSarah placed her hands over her mouth, the squeal still managed to escape though. Ruth dropped her cup and launched herself at me. All those years of training were wasted at that moment. I had just managed to grab her before the momentum she was carrying sent us both over the side and into the canal. When we surfaced, we were lip locked.\n\nAfter showers and dry clothes, I decided I should be more formal, so went down on one knee in front of Ruth, Becky, Sarah and Gil. Ruth followed me to the floor before saying yes. Being a guy, I learned quickly just to say 'yes dear' when it came to marriage ceremonies. Ruth wanted the boat club to be her venue, much to the delight of the ladies of the committee. The women spent time getting a license to hold the wedding there and it was perpetual motion from then on. \n\nFreddy, my best man also told me that once Ruth decided on what I was to wear, dry clean it and lock it away and ready. The one question I had held off from asking had now come to claim space in my thoughts once again, so I asked Ruth in one of those few quiet moments if she wanted me in uniform?\n\nWith mischief in her eyes, she held my hand and said. \"But honey, security consultants don't wear uniforms.\"\n\nWe hugged then and I did actually breathe a sigh of relief. That was one heap of paperwork and questions that didn't need answering.\n\nThe committee set about putting the marquee up a few weeks early. Between all the wives the food was sorted by who was making what, although Sarah insisted all food receipts went to her for repayment. Both Ruth and Sarah didn't want any of the wives out of pocket and the home cooked stuff tasted better than the corporate any day, the kitchen in the newly built clubhouse was going to get its first real workout, both in the build up to the wedding and on wedding day as well. \n\nRuth wanted the day to be surrounded by friends, the Unit and their families came, as well as members of the boat club. \n\n*******\n\nAlmost a year later...\n\nIt was still dark when Ruth suddenly woke and then winced as the pain slammed into her; the events of the last few minutes carried even more pain. Then it all came back to her, more so when she looked towards the driver's side of the vehicle. The smell of petrol was everywhere and she visibly shuddered. \n\nAs best as she could see, Curtis was bleeding from his forehead. The force he struck the steering wheel put him out and Ruth breathed a sigh of relief; her man wouldn't hurt if he were unconscious. She couldn't move too much either. Pain screamed at her body to be still. She thanked the Gods that her bag was still within reach. Ruth slowly pushed her fingers into it and pulled her cellphone out. Even that much effort had almost exhausted her, but they both needed help.",
        "Her thumb across the sensor on her cell unlocked it. \n\nShe managed to say, \"Call Maggie.\" and used the few seconds the cellphone searched and dialed Maggie's number to close her eyes and try to force her body to relax, even if that only lasted a few seconds. Ruth coughed, blood now rested on her lap and across her phone.\n\nMaggie's happy go lucky voice left the cell phone via the speaker. \"Hey Ruth, I was just getting dinner ready for my man, what's up?\" \n\n\"Maggie, we need help. Ambushed, Curtis is bleeding badly. Struggling to stay conscious myself.\"\n\nHer friend's gasp came clearly over the speaker before Maggie screamed down the phone. \"STOP TALKING.\" The officer's wife came out in Maggie just then and Ruth thanked the Gods. \"Ruth honey, let us do all the work from here okay? You just stay focused on breathing, stay calm. But don't you dare cut this call off.\"\n\nRuth found herself meekly saying, \"Okay\" to her friend.\n\nShe heard her friend take a deep breath. \"Ruth, do you have any idea where you are?\"\n\nHer eyes slowly scanned the area for anything she could recognize. Frustration built within her when nothing seemed familiar. She was lost.\n\n\"I'm sorry Maggie; Curtis wouldn't let me out of the foot well, until he felt it safe to do so. He kept taking turn after turn. I just don't recognize anything other than the big tree he ran into.\"\n\nRuth vaguely heard the odd word that Maggie was saying to her husband and just as vaguely heard bits and pieces of activity in the background. Her eyes were heavy; she knew that if she lost consciousness now, both stood no chance of surviving this.\n\n\"Ruth? Ruth listen too me; Freddy is going to ping both Curtis's and your phone. You need to tell me if you hear it ping. Stay awake Ruth, this is important.\"\n\nShe nodded in agreement of what she was being asked to do, then smiled at the fact that no one would see her nod.\n\n\"Okay Maggie, will try.\"\n\nFor such a long time all she could hear was the sound of night activity returning to where the now wrecked car had ended up. The ping was there, she heard it. Tears rolled down her cheeks, her friends would come soon, Curtis would survive, but she still desperately prayed for the life of her unborn child.\n\n\"I heard it Maggie, I heard it.\"\n\n\"Ruth, listen to me. Armed Police officers are on their way to you now; ambulance and fire are close behind.\"\n\n\"NO. Keep them away Maggie; they were armed officers when they pulled us over. Curtis smelled a rat and sped away. We should already be dead now if it wasn't for my husband. I have Curtis's gun in my hand Maggie, they turn up, they die with us.\"\n\nAll Ruth heard was Maggie pulling the phone from her ear and instinctively placing her hand over the phone. Odd words could be heard but muffled and distant.\n\nThe voice was calm, but Ruth could feel the sadness barely held in check behind it. \"Ruth. Freddy wants to know if you have ever been told the Units authentication code?\"\n\nHer mind was in such a mess. It hurt so much to concentrate, she felt something trickle down and over her lips, she let go of the gun resting on her lap, to wipe the blood from her face. Then from that furthest point in her memory a small light drifted to the front of her thoughts, she smiled and wanted so much the kiss her husband for sharing that one word with her.\n\n\"Yes Maggie, it begins with B.\"\n\nThe relief in Maggie's voice reached across the distance between them. She heard her cry in relief. \"Yes, it does. Freddy is on the phone to the officers on their way to you Ruth. They won't relinquish their firearms, but the lead officer will call out that word as he approaches you. Do you understand Ruth?\" \n\nIt was time to be honest with her friend. \"Maggie?\"\n\n\"Yes Ruth?\"\n\nRuth tried so hard to suppress a sob and failed. \"Maggie. I can't feel our baby anymore.\"\n\n*******\n\nFreddy phoned the boss and relayed all that he knew, including Ruth's doubts on the survival of the baby. Stay at home texts were sent to each member of the Unit, the Prime Minister was woken three hours later and given the news. He phoned the boss for more information and got very little in return. The Police had cordoned off the scene of the ambush and the crash site, lights were raised to tree height, turning the crime scene into daylight and forensics got involved.\n\nThe hospital was ordered to initially place husband and wife in the same room. The staff were told it was for joint moral support, but the fact an armed Police Officer stood outside the door from the very beginning told everybody a different story. \n\nMaggie swung by the boat club. On the insistence of Freddy, Ashley was armed and by her side when she picked up Becky from Sarah and Gil before meeting her husband at the Unit's building. The stay-at-home texts meant little to nothing to the people of the Unit once they had found out their boss and his wife were in hospital. Two of the wives drew the short straws and babysat the whole group of children while the rest followed their husbands into the Unit's building. \n\nFreddy sat them all down and broke the news properly, and then answered their questions as best he could, until one of the wives asked how the baby was doing? That's when the husband in Freddy overrode the second in command.\n\n\"At the moment, we just don't know. All we are being told is that the next five hours or so, are critical. Ruth is having blood taken out of her and put back, in almost hourly slots; she's been scanned, prodded and poked by various members of the hospital staff. So if you're of a religious persuasion, I suggest you stick your hands together and pray like you never have before.\" \n\nThe wives understood. They stood and kissed their husband before saying goodbye. Each of the wives knew they may not see their menfolk again until this was over. One of their own was down; they would all stop to pick him and his wife up.\n\n*******\n\nMaggie's hand was being crushed, but she gladly ignored the pain for the sheer joy of seeing her friend smile for the first time since all this had happened. The pad once again slid over Ruth's baby bump and stopped as the scan recorded her child move into a more comfortable position.\n\nThe tests were still hourly, but a new word was entered into the conversation now: Hope.\n\nArmed with a picture of her baby, Maggie wheeled Ruth into Intensive care. Curtis was still listed as critical. The tubes going in and out of him could attest to that being true. The constant ping and zig zag lines on the machines keeping him alive so his body could rest and recover kept Maggie's attention, while Ruth placed the baby picture on the cabinet beside his bed. She spent a moment or two on the angle of the picture. If he woke, she wanted it to be the first thing her husband would see. \n\nThe Prime Minister sent for General Brownlow. The General's car pulled into Downing Street and he was ushered directly into the Prime Ministers private quarters. An hour later his car left and was pointed in the direction of the Unit's barracks.\n\nFreddy was just placing the phone back onto the cradle when the General's car pulled up outside the building. He got to the door as the general was taking the steps two at a time, a civilian followed him.\n\n\"Freddy, please find JoJo. We will meet you both in your office.\" \n\nHe didn't wait for Freddy's salute so didn't return it when Freddy had his hand halfway to his forehead. Ten minutes later both Freddy and JoJo came into his office, this time salutes were made and exchanged. \n\n\"JoJo, when I finish talking, go and get changed into civilian. I'm sending you back to 12th Intel. They have been told to render any help you ask for. If you get any problems, then phone me, and if I can't shut down the moron that gets in your way, I will call the Prime Minister.\"\n\n\"Yes Sir.\"\n\nGeneral Brownlow then leaned his head towards the civilian standing against the wall of the office.\n\n\"This is Mister McFarland of MI6. His going with you. His counterpart at MI5 will meet you both at 12th Intel's barracks. You have one order, and it comes personally from the Prime Minister. Find the people that ambushed Curtis and his wife. Find out where they are in the world now and report that information directly to me. You will NOT phone, but you will come to me and tell me. Am I very clear on this Lieutenant Carmichael?\"\n\nJoJo stood as stiff as a board, then saluted the General and with a \"Yes Sir.\" Then added. \"Sir, request permission to visit and speak to Ruth Woodman.\"\n\nThe MI6 man uncrossed his arms and placed his hands into his pockets. His interest in the conversation now peaked.\n\nThe General looked closely at JoJo; she wasn't backing down.\n\n\"Why?\"\n\nJoJo lowered her head towards the general and looked directly at him; her voice remained clipped as she spoke. \"She's a living breathing witness, Sir. I could spend days if not weeks looking in the wrong direction for these people. I know Ruth Woodman will have a clue to who these people are, locked in her head. To find these people and quickly, I need that, what may be to her, insignificant piece of information.\"\n\nThe General looked at Mister McFarland and he nodded his head. General Brownlow then looked at JoJo and did the same. JoJo then turned and left the room; McFarland detached himself from the wall and followed JoJo.\n\nThe General's attention was now directed at Freddy. \"My apologies Freddy, I'm not trying to step on your toes, but the Prime Minister is absolutely livid about this. He wants to know if the attack was directed at Curtis or his wife.\"\n\nThe pause was only so he could let out a breath before he added. \"And on British soil as well.\"\n\nThis time he leaned back in Freddy's chair and said. \"He also wants to know why Curtis had a loaded weapon on him in the first place.\"\n\nFreddy was silently simmering; this finally left him no choice. \"Might I remind you Sir, if Curtis wasn't carrying, then they both would be dead right now. The reason was because his wife had told Curtis that she felt she was being followed. Curtis notified me he was taking his Sig from the armory and he and his wife went over the route she traveled this evening to see if anything jogged her memory. We both know how that worked out for them, don't we Sir?\"\n\nGeneral Brownlow let out a sigh, and then leaned forward to rest his arms on the desk. \"I get the feeling, the body count on this is going to be high, isn't it Freddy?\"\n\nThe tension left Freddy, more so when the General waved at the seat in front of his own desk. \n\nFreddy sat looking directly at the general and said. \"I think it will Sir. I'm already having trouble holding the men back, as well as the wives.\" Freddy shook his head. \"I've never seen anything like it, Sir. They effectively threw their men out of the house and told them not to come back until this is settled. To them, Sir, because someone took pot shots at Ruth, they have all taken it personally.\" \n\nGeneral Brownlow nodded his head, then stood. Freddy did the same and followed the general out of the building, both stood by his car.\n\n\"I will do my best to keep the Prime Minister off your back. We need to give JoJo time, something that isn't in abundance at the moment, we both know that. They botched the killing of either one or both of them; my gut tells me they're ducking for cover and pulling a fail-safe alibi up behind them.\"\n\nHe watched Freddy nod his head in agreement. The longer this went on, the safer the people who ambushed Ruth and Curtis would be, not to mention the person who paid them to do it. \n\n\"Have the press got ahold of this yet, Sir?\"\n\nFreddy watched the General visibly shudder. \"God no, that's all we need. The Prime Minister, with the help of the Home Office, have placed a D notice on this straight away. The Police Commissioner has been told this falls under the official secrets act. He's been briefed, of course, and he's only trickling certain parts of this nightmare down to his own senior officers. It's the gun battle at the ambush site; forensics are still counting the damned shell casings.\"\n\nThe General had his hand on the car door before he turned and looked once again at Freddy.\n\n\"I've seen pictures of Curtis's car. How either one of them are still alive is a true-blue miracle.\" The general moved to get into the car and then stopped; he turned once again to Freddy. \"A lot of the rounds penetrated Curtis's side of the vehicle; he was keeping him and the car between them and his wife. Says allot about the man, don't you think?\"\n\nFreddy agreed with the General. Both Maggie and he had watched from the sidelines as the romance stuttered, but with the aid of that little girl, it blossomed and took on a real life of its own. Curtis was a changed man now he not only had a wife, but a family as well. As the General had already pointed out, he would put his own life on the line to keep both his girls safe, not to mention the growing life inside her.\n\nJoJo and Mister McFarland came out minutes later. JoJo dropped her bag and as she hugged her boss, she whispered so McFarland couldn't hear her. \n\n\"I'll find them boss. They made this personal, now it's our turn to make it very personal.\"\n\nFreddy watched as their car moved away from the building, Ashley joined him as the car left the camp. After a moment, they both went back inside. \n\nIt would be some weeks before anyone would hear from or see JoJo again.\n\n*******\n\nThe private jet landed at ten in the morning, the orders for it were unusual but not uncommon. The car that was to meet the jet had arrived an hour before hand. Other than security at the gate, no one had seen the driver, and no one even knew if there was more than one person in the car due to the tinted windows.\n\nSecurity told the driver where to park, and it just sat and waited. No one got out and the windows were never lowered. \n\nWhen the jet came to a halt and the engines finally came to a stop, the car moved away from its position and pulled up alongside the jet. One person got out of the jet, carrying an overnight bag and sat in the seat next to the driver. As the car pulled away a fuel tanker pulled up and re-fueled the jet. Within the hour the jet had left British airspace and wasn't seen again at the Royal Air Force base.\n\nBase security lifted the gate as the car approached; it turned right and joined the traffic. Both the men went back into the security hut where an officer stood waiting for them.\n\n\"Nothing happened for the last two hours, you have all been on duty and seen nothing out of the ordinary. This guard duty has been as boring as yesterday's, and the day before that. Are we clear on this gentleman?\"\n\nAs one voice, the words \"Yes Sir\" rang out in the room.\n\nThe officer dismissed the airmen and left. They stood and looked at each other for a moment before shrugging their shoulders. \n\nOne of the security detail said, as he sat on his bunk. \"I had one of these last year, turns out it was some fancy pop star trying to avoid the press and some awkward questions about her boyfriend's taste in men.\"\n\nThe rest of the group laughed and orders for tea and coffee, and who wanted sugar took over the conversation. The lone plane was nothing more than a fading memory by the time their replacements arrived; it wasn't even mentioned in the handover. \n\n*******\n\nFreddy was leaning against the door frame of the building; security had phoned ahead and told him that his vehicle had returned. It stopped outside and Freddy smiled as a familiar face once again graced the building. \n\nFreddy shook his hand. \"It's good to have you back Rick, I just wish it was under better circumstances.\"\n\nAlthough Rick knew the way, he let Freddy lead. Nothing was said until both got back to his office, and even then, it was general chatter until they both had a coffee in their hands.\n\nIt was only when they both sat down that Freddy said. \"My apologies for not letting you know about Curtis, Rick. But we're all under orders here at the moment. To be honest, even I didn't know you were coming until four hours before your flight landed.\" \n\nThey both heard the door and looked up; JoJo was standing with her back to the now closed door. This was the first time Freddy had seen her in almost two months. She looked pale. JoJo's cheek bones were more pronounced than usual. Her eyes had a shade about them that left little doubt that she hadn't slept, or generally looked after herself too well in that time. \n\n\"Thank you for coming Halo. I need your help.\"\n\nBoth men were out of their seats and now either side of JoJo as her knees started to give out on her. \n\nFreddy pulled the door open and yelled, \"MAGGIE\" down the corridor, before both men helped JoJo to one of the seats. The already half open door flew open so swiftly that it crashed against the wall, with Maggie standing in the open space, and Ashley standing behind her. We all watched as JoJo pulled on Rick's sleeve, until his eyes met hers. \n\n\"I have a plan Rick, but I need you here with me. We can do this Rick, but I can't get it past Brownlow. He says it's ridiculous and won't even take it to the Prime Minister. We have to show him Rick. We've done this before so I know we can again, but he simply won't believe we can do it.\"\n\nMaggie looked at her husband and nodded to him. Freddy reached under JoJo and took her weight in his arms, confirming his own worries. JoJo placed her arms around her boss's neck and sobbed tears born of frustration, and bone aching tiredness. Maggie took the lead and already had her cot ready when Freddy came in with her.\n\nHe turned and left as Maggie and Ashley were pulling clothes off of JoJo, who was now asleep in their arms. Maggie joined her husband in his office an hour later. She did nothing more than walk in and sit on his lap. Nothing sexual, she just needed the closeness that this position gave her.\n\n\"Between Ashley and I, we bed bathed her. I got Bradley to bring any energy drinks and meals he had in his medical bag, or anything that would be considered a secret stash in this place. Bradly took one look at her and wanted to put her out for the day at least. I think JoJo would have killed him if he had done that, so we settled on sticking high energy meals and drinks into her when she wakes.\"\n\nFreddy nodded his head in agreement with his wife; he did wonder what the General was playing at. Any plan, no matter how ridiculous, should at least be tossed onto the table. With the whole group looking at it, and even chipping things in, many a plan has turned from stupid to workable when the right people look at it from every angle.\n\nBut for now, all they could all do was wait. JoJo had her plan in her head. It was everybody's decision that they let her sleep. Rick went to the hospital to see Curtis and found Ruth by his bedside with Becky on her lap, or rather, her knees since the baby bump was allot further along now.\n\nRuth's face lit up when Rick knocked and then entered \"Hey Rick, it's been awhile.\"\n\nBefore he could answer an older couple came into the room as well. The woman looked real closely at Rick. He smiled and thought 'momma bear' as the man called out to Becky that it was time to leave now. Rick knelt as Becky closed in on him and they hugged really tight.\n\n\"They hurt my daddy uncle Rick, they hurt him real bad.\"\n\nWith three girls of his own it still didn't stop his heart ache for the little girl in his arms pain.\n\n\"Your daddies in the right place to get better, Munchkin.\"\n\nThe older woman looked at the man more closely. Becky had only ever allowed Curtis to call her Munchkin, and Sarah had now heard one other, that she had never met before, call her by that very name: a name that Becky would rebuke anyone other than Curtis to call her.\n\n\"I love it here Uncle Rick. I love my boat and all my friends, but if they keep hurting my daddy, then momma will want to move away again. Make them stop hurting daddy Uncle Rick, make them please.\"",
        "Even with the lump in his throat, he answered Becky as best he could.\n\n\"That's why I'm here, Munchkin. But you need to give me a little time to find them and tell them, okay?\"\n\nBecky nodded her head, gave Rick a quick hug and a kiss on the cheek. She waved at her mom as she sat staring at her, before sliding her hand into Sarah's and all three left the room.\n\nRuth watched through the open door as all three walked down the corridor. Her own hand grasping that of her husband.\n\n\"Well, I'll be damned. That's the most she's said about all this since she found out that Curtis was in hospital.\"\n\n\"The resilience of children Ruth. They see and seem to know more than they let on. When we think we're protecting them by not telling them something, all we're doing is making ourselves look like idiots.\"\n\nRuth nodded but held her husband's hand just a little tighter, knowing that when he's better, she's going to have the same conversation with him that she had just had with Rick. Her gaze once again rested on her husband and her hand holding his, ever so gently.\n\n\"I know what he does Rick, but I share with the other wives every fear when they leave until they come back. Then I see it all close up and personal. When those fake Police Officers ambushed us, he had me in the car and was taking the bullets for me.\"\n\nRuth's gaze finally left her husband and she glanced towards the door before she looked towards Rick once again. \n\n\"I hear JoJo is back, I know that's why you're here as well. Find them Rick, hurt them as bad as they have hurt my husband. I place my husband on top of any situation that could be deemed a fair fight, but these cowards ambushed us to gain the upper hand.\"\n\nThe emotion of the moment was taking its toll on her and she stood, Rick did as well, and both hugged. Her emotions finally tipped her towards a torrent of tears, not three feet from his best friend and her husband. \n\nRick stayed until Ruth had calmed; not an easy thing to do, when you consider her husband was still fighting for his own life just a few feet away from them both.\n\nWithout being asked, Ruth told him of that day; starting from the afternoon of shopping, then the journey home, and the nagging feeling that wouldn't leave her. The phone call to Curtis to talk about those feelings, and Curtis telling her he would be leaving the camp now. They would both go over the route she had taken in the hope that something else would jog her memory. \n\nLittle did either of them know just how up close and personal that journey would become. All Ruth could remember was being stopped by blue lights in the mirror. The Police Officer that walked up to the car that late autumn evening, and Curtis suddenly stiffening in his seat. The conversation was neutral to begin with, but Curtis's attention was on something on the officer's hand, a tattoo that was just as strange as it was fierce looking.\n\nCurtis's conversation went from English to French halfway through and the Police Officer answered Curtis's question in French. When he realized his mistake, he reached for his sidearm. Curtis had already got his own Sig in his hand and had placed the car into reverse. When Curtis yelled that she was to crawl into the foot-well, she did as she was told. The gun battle raged over her head.\n\n\"It was the stopping talking to him mid-sentence and then continuing in French that started all this Rick.\"\n\nRick turned all this over in his mind. In the end he decided he needed to talk to Freddy and JoJo before he could voice his own doubts about all this. He hugged Ruth and told her he would see her again, real soon.\n\n*******\n\n\"One of the group is French.\"\n\nJoJo looked at him, then shook her head. \n\n\"No, he's not, he was born a Belgium national. He joined the French Foreign Legion at eighteen, did fifteen years in the Legion, married a French girl, but that didn't last.\"\n\nRick looked long and hard at JoJo. Something just didn't fit right into this conversation, so he tried another tack, hoping his hunch was wrong.\n\n\"Ruth says he mumbles, talks gibberish, although she catches the odd Russian word in there as well.\"\n\nJoJo went back to typing on the laptop in front of her. After a few seconds of frantic activity, her fingers stopped, and she once again turned her attention back to Rick.\n\n\"It's not gibberish, it is actually Russian. Two of the group are ex-Spetsnaz.\"\n\nJoJo turned her attention to them both and said, \"Somehow, he realized who the Belgium guy was. When he did that, he also knew who the others were and why they were in the process of slowly surrounding the car. He had his wife in the car, so Curtis did what he had to, to get them both out of there.\" \n\nFreddy leaned forward in his seat, hoping against hope that what his instincts were telling him, were wrong. Finally, Rick gave voice to both their thoughts.\n\n\"How long have you had a bug in Curtis's room?\"\n\nJoJo resumed typing, but both heard her say that the bug was in place while he was still in initial surgery. To emphasize her point, her hand pulled her hair back and pulled a flesh-colored bud from her ear. She placed it on a silver tray that had a wire connecting it to her laptop for power, and soft singing came from the tray. Ruth was singing a lullaby to her husband, over twenty miles away, and yet the sound made it feel like she was actually in the room.\n\nRick's eyes never left JoJo's. \"So, you can take the girl out of 12th Intel. But you can't take 12th Intel out of the girl.\"\n\nBoth suddenly stood, catching Freddy off guard for the briefest of seconds.\n\n\"Stand down. BOTH of you.\"\n\nThe pause was only because both parties hadn't quite finished weighing up the other.\n\n\"So help me I will fucking shoot you both and claim it was an accident if you both don't sit the fuck down.\"\n\nThey sat; both weren't happy about even doing that much.\n\n\"Rick, I'm going with JoJo on this one. Short of having someone sit in the corner of the room every day and night, it's the only non-invasive way I can think of doing this.\"\n\nTo fend off any argument from Rick, Freddy turned to JoJo and asked who else had access to the listening device.\n\nJoJo answered but kept her eyes locked on Rick. \"Just me, I have a blocker on the frequency so no one can eaves drop, and I will know if anyone even attempts too.\" \n\nStill not satisfied with her answer, Freddy tried another question.\n\n\"So, who authorized the bugging of Curtis's room?\"\n\nJoJo still had her eyes on Rick. To her, he was still the main threat in this room.\n\n\"General Brownlow authorized it. The Home Office signed off on it and 12th Intel supplied the manpower and equipment to get it all up and running.\"\n\nThis time she looked directly at Freddy and said. \"I just couldn't get near Ruth, Freddy. She was barely holding it together herself when I got to the hospital that day. Any questions I asked her, she seemed to flinch like I was going to pull a gun out and shoot her. I've known her almost as long as Curtis has, but right now, she trusts no one but the couple who used to own the boat club and Maggie.\" \n\nHer gaze once again rested on Rick, this time her tone had softened. \"I'm Unit, from the day I walked onto that rifle range and joined the others, I've been Unit. My Background is 12th Intelligence Regiment, so what? Want me to talk about each and every person's involvement in other regiments before they came to the Unit? The sole purpose of the bug in his room is to find out what he knows and with as little impact on Ruth as possible, so we can find those that did this.\"\n\nThe lullaby had finished now, and Ruth could be heard talking about Becky's day at school and the boat club. \n\nJoJo placed the bud back in her ear and continued. \"I promised myself that I would never allow these secrets out and I aim to keep that promise. I have what I need Rick. I know who these people are, but it's now down to you and me to convince General Brownlow that we can kill these people without any collateral damage.\"\n\n*******\n\nThe base commander got his orders delivered to him via a courier who waited in the outer office until the base commander would see him. He was also under orders that, if the commander took longer than twenty minutes to receive his orders, the courier was to contact General Brownlow. He handed them over and saluted the officer, then left the office. The Base commander wasn't expecting anything like this. No traffic on any channel left him feeling that anything was wrong, until the lone motorbike rider came onto RAF Billingly at 0800 that morning and handed him this ticking time bomb. \n\nTo make matters worse, the signature at the bottom of the page was that of the Prime Minister himself. He pulled his phone closer to him and made a few calls. By the time he had replaced his phone on his desk from talking to a close friend, who walks the corridors of power in Whitehall, his own phone rang as his hand moved away from it. The number was withheld and that worried him. His phone blocked these types of calls, and yet his phone lit up and rang while still not displaying any number. \n\n\"Hello?\"\n\n\"Good morning. Just so we are both on the same hymn sheet, do you recognize my voice?\"\n\nThe base commander stiffened, his mind already filling with dread, then said. \"Yes, Prime Minister.\"\n\n\"Splendid, splendid.\" Then the voice went a little colder. \"I have just sent for Wing Commander Chadwick. I expect him to be here within the hour. In that same hour, I expect you to summon your second-in-command and hand him the document that was delivered to you this morning. Once you have done that you will phone my office, my secretary will be expecting your call. All she wants to hear is the estimated time of your arrival at my office in Parliament.\"\n\nAs worried for his career as he was, he still managed to say, \"Yes Prime Minister\" to the voice on the phone.\n\nThe voice from afar barely contained the anger in his voice. \"How dare you discuss such a sensitive document with anyone other than your second-in-command. Even with my signature on that document, your crass action could well have threatened the security of a very sensitive operation. I'll deal with Wing Commander Chadwick when he gets here. I look forward to seeing you real soon as well.\" \n\nThe phone went silent, not even a click to let him know if anyone had put the phone down. He summoned his second-in-command, sat him down and watched as he read the document he had placed in front of him. Another time perhaps, he would have smiled at the frown he had when he finished reading it.\n\n\"It's real. We are to close the airfield to all traffic. If anything leaves here, it goes somewhere else until we open the airfield again. We double the guards, and other than a group that will be arriving here tomorrow, no one is permitted in. Not even supplies for the kitchens, so make sure they have enough to last. All activities around the base are to be cut back to a minimum, again until said group has left.\" \n\nIt was then the base commander stood, his second in command followed his lead. \"I'm going to London to explain to the Prime Minister why I have done nothing with regards to this order since I had it in my hands four hours ago.\"\n\nHe looked at his friend and second-in-command. He was heaping a great deal onto his shoulders right now and all of his own doing. He felt for the man in front of him. At least going to face the Prime Minister himself, kept his friend out of the wrath of their own boss.\n\n\"James, make this order happen. Do whatever these people want but keep our people away from them as much as you can. The Prime Minister is watching everything that's happening and also not happening.\" He paused as he mentally looked over his options. \"I may see you before we lock down for this group, or I may even be back afterwards to pack up and be transferred to an Igloo at the South Pole.\"\n\nHis second-in-Command saluted and left. The base commander looked out over the base from his window and did indeed wonder if he would see this sight again. He picked up the phone and dialed. The Prime Minister's secretary gave him the location and time to appear in front of the Prime Minister. When she asked if there was anything else she could help him with, he smiled and thought about asking if he would still have a career at the end of his conversation with him.\n\n*******\n\nThe view from the Control Tower was stunning, only one person was in the tower. He was sitting at some control panel when Lewis came up the stairs. The airman quickly stood, he wasn't sure if he should stand at attention or just wait and see what happened; his name badge had \"Donaldson\" on it. \n\nLewis went up to him and held out his hand. \"Since we're going to be here all day, we may as well be introduced. Call me Lewis, everyone else does.\"\n\nDonaldson shook on it, but Lewis could almost see the questions hovering in the background.\n\n\"All I need you to do is monitor the radio traffic. If anything wants to land here, then I will take over. Other than that, just deal with things like everyone's on leave.\"\n\nDonaldson nodded, and then looked at Lewis once again, trying so hard to find anything that would note the man's rank, or even regiment. Speculation was rife on the base, even more so when they turned up and yet the Base Commander was still absent.\n\nFeeling ever so slightly brave he said. \"Sir, are you SAS?\"\n\nLewis laughed, and then shook his head, as he sat next to the airman.\n\n\"Gosh no. I'm married.\"\n\nDonaldson looked at him as confused as he was when the conversation started. \n\nLewis was sitting on one of the spare seats and rolled it closer to Donaldson, then said, \"My wife asked me once if I ever wanted to do SAS selection. When I said I hadn't thought about it, but probably not. Her reply was that's good, it means I don't have to break your leg.\"\n\nLewis then roared with laughter, yet Donaldson couldn't see the joke.\n\nSeeing the confusion on the young man's face, he added that when he met his wife he was already in the army. Before she would marry him she was adamant that SHE didn't join the army, HE did, and although she would follow him the ends of the earth, she wanted him back when it was time to leave the army.\n\n\"In a sense, we have both made my career choices. She's happy and tells me every single day I'm with her. True love, don't you think?\"\n\nFeeling just as confused Donaldson simply added. \"But Sir, who are you?\"\n\nA hardness came to Lewis's face and the young airman winced.\n\n\"I'm a figment of your imagination. In a few hours I simply won't be here, and our paths won't ever cross again. The longer you're in the forces, the more anomalies like me you will meet; and, for the sake of your sanity, and of course, your promotional prospects, you should forget us about as soon as we leave.\"\n\nAlthough Donaldson was only just starting his third year in the RAF, he understood a warning, even when it was veiled like that.\n\nFor the next hour, and although he desperately tried not to look too often, the main activity of these people was centered on the runway. One man walked almost the full length, then turned and pointed something back down the runway. Moments later he sprayed a line onto the tarmac and walked back. Twenty minutes later a vehicle then drove to the line and four men started stacking sandbags the other side of the line.\n\nWooden cutouts of figures were then placed on the line and sandbags held them in position. Another person set up cameras off of the runway, looking directly at the wooden figures. He took a moment to focus the cameras and then gave the thumbs up to one of the group. One guy gave each of wooden figures a kick. When they didn't move, he got back into the vehicle with the rest and drove back down the runway.\n\nDonaldson had watched all of this from his elevated position in the control tower. His mouth hung further and further open. Then realization came to him. \n\n\"Sir.\"\n\n\"Yes?\"\n\n\"Sir, I know the full length of this runway, we all have to, to work up here. That's over a thousand yards your people have just measured.\"\n\nLewis's hand went to the side of his head, his hand now covered his ear, he was clearly listening to something. With an almost invisible nod he looked once again at Donaldson.\n\n\"Please check your radar, and everything else that's switched on up here. Is anything circling? Are we expecting or even not expecting anything that's heading in this direction?\"\n\nDonaldson went all professional as his eyes and hands worked two, sometimes three consoles almost simultaneously. Lewis was impressed, more so when Donaldson finally looked at him and confirmed that all was clear.\n\nMoments later the four wooden targets were taking hit after hit.\n\nDonaldson stood and leaned over the equipment in front of him as he watched for a moment, he even lent on one terminal so he could look down to the end of the runway, to see if the group had moved from their original position, then turned to Lewis.\n\nWith a still stunned expression on his face and said. \"But that's over a thousand yards.\"\n\nHe then reached for the binoculars resting against the window. A hand came from behind and held onto his wrist.\n\nThe voice near his ear wasn't more than a whisper but carried with it a chill that made Donaldson very, very afraid. \n\n\"Put them down son, sit in your seat and you're now going to ignore everything that's going on out there and your total concentration is going to be in here. We're both on the same page right now, aren't we Stuart Donaldson?\" \n\nDonaldson gave a very meek \"Yes Sir.\"\n\nLewis watched his friend with interest, although both had stopped looking out of the window. The constant noise of rounds hitting each of the wooden targets for almost an hour continued. Donaldson would cast a glance at the targets, but soon returned his attention back to the banks of equipment in the tower. Everything stayed green. Although radio chatter could be heard, none of it was intended for the RAF base, so it was ignored. Radar was still watching aircraft in the air, but they were all commercial and followed their own flight plan.\n\nOn the hour, the firing stopped, the vehicle came back and dismantled everything and placed it all in the vehicle. Two of the men even took brooms to the sand that had escaped through the holes of the sandbags and brushed it off the tarmac before returning to the vehicle and driving back to the end of the runway. \n\nLewis once again placed his hand against his ear and that almost invisible nod occurred again. \n\n\"Well, it's been fun talking to you. I suggest you stick around until your relief arrives. Bye now.\"\n\nLewis turned and walked to the stairs, waved once, and descended the stairs. Leaving Donaldson looking at the man who was leaving and wondering just what the hell just happened, other than the obvious that is.\n\n*******\n\nThe Unit arrived back at their barracks early evening. The General came in his own car to the airbase, so he arrived a few minutes behind the main group. The only item that left the vehicle for now, were the four wooden targets. Freddy told his people to lean them against the corridor wall, outside his office. \n\nGeneral Brownlow paused as he was initially about to pass them, to look more closely, rather than through the high-powered binoculars he had been watching them through this afternoon. He gently shook his head and thought 'if he hadn't been there, he would never have believed it'. He watched as Freddy made a big scene of walking a thousand yards along the runway; he even electronically measured it to be sure. Then, as Freddy was walking back down the runway, the General pushed them all back another fifty. \n\nNow, he was looking at something that only a handful of people in the world could achieve and with far more sophisticated weapons than the Unit had brought with them. ",
        "When Lieutenant Carmichael spoke to him about who these people were, where they had ambushed Curtis and his wife, and the best way to deal with them, he had dismissed her original plan as nothing more than wanting revenge and was willing to hype up the Unit's credentials to make that happen.\n\nNow, as he stood in the corridor, looking and even counting the holes and also the grouping, he had to admit that he owed her one heck of an apology. His own eyes took in the proof of what she had said to him ten days ago and that he had dismissed out of hand. General Brownlow's final thought just before he entered Freddy's office was that it was time to let these people loose. Then the office door opened.\n\nHe watched the three people that started all this. \"I want the tape you made; I want the Prime Minister to see this. I think he's getting his money's worth with you people. As for me, you have my blessing. Get a plan together and phone me when it's ready. I can't have you wandering into Downing Street, so you are taking it to Chequers with you.\" \n\nThis time he looked directly at Freddy before saying. \"And Freddy, from insertion to extraction, please.\" \n\nJoJo stood and handed the General a copy of the tape. He looked really hard at her before saying. \"You have my apologies, Lieutenant Carmichael. I should have realized that if you couldn't have done it, then the idea wouldn't have come out of your head.\"\n\nGeneral Brownlow nodded to all in the room. He left as they were all about to stand. \n\nThree civilians came to the gates of Chequers two days later. Security was as thorough as always and a few minutes later they were escorted into the library. The Prime Minister stood, along with General Brownlow. \n\nThey all looked at JoJo, it was her operation, so she had the floor.\n\n\"The target was Ruth Woodman, Sir. Her family is old money. The men in charge marry off the women in the family almost like barter chips or leads into other businesses they want to branch into. Then Ruth was born. Her IQ is on par with many if not all of the heads of the family.\"\n\nThey experimented with her. She was an oddity and they wanted to see just how much they could heap on her before she broke, and she didn't break. Her college courses ranged from computer to business courses. By year three she was acing every course with an A and often with the words, 'Exceeds expectation' on her test sheets. By the time the senior members of the family took real notice of Ruth, she was worth millions and all her own money, none of it connected to the family. She made sure that every business she started had no ties to her families' companies.\n\nIt was then she committed the ultimate betrayal, she married outside the family influence. When the senior members decided it was time to pay attention, they zeroed in on her husband. To her, he was moving to the dark side, so she divorced him and the iron clad pre-nup came into force, leaving him pretty much with nothing more than his wardrobe and his car. Ruth of course kept Becky and continued to keep them both out of the influence of her family. \n\nThe Prime Minister was totally focused on JoJo. Although she kept to the facts, she also brought the dealings of her family into all this: but something was missing. After all they had left her alone all these years, so, why now? \n\nJoJo next statement to the Prime minister answered his thoughts.\n\n\"It seems Sir, that Ruth Woodman, has been playing the long game. Her own businesses have been very profitable and yet she shows none of it. She re-invests and all arms of her business are up to date technology and staffing wise, but as soon as profits are announced and taxes are paid, the remaining profits are moved.\"\n\nThe people at the meeting reached the same conclusion just as JoJo announced it. The family elders finally figured it out before Ruth could accomplish her goal. She has been secretly buying shares in the family companies and doing it so slowly and through ghost companies and brokers etcetera, that no flags were raised.\n\nJoJo closed the file in front of her and looked closely at the Prime Minister.\n\n\"Sir, she is days away from forcing a hostile takeover of the family companies, with the voting stock she has, she can remove all the old men of the family in one go. That's why she was the target.\" \n\nSilence came to the room, only the guy mowing the lawn could be heard inside the Library. The Prime minister stood; everyone else did as well before he waved at them to remain seated. He walked over to the window and watched the gardener for a moment, his own thoughts on too many facts.\n\n\"Freddy, what's the status of Curtis's wounds?\"\n\n\"Severe, Sir. Three bullets penetrated his leg, two into his pelvic, and one in the stomach. Had the fake officer used anything other than his handgun, Curtis would be dead by now. The shots went through the cars skin absorbed a great deal of the force of the rounds, and the fact that Curtis was returning fire shocked them so much that the rest of the rounds were just in the general direction while they all ducked for cover.\"\n\nFreddy paused while he remembered his last conversation with the doctors. \"They want to keep him in an induced coma. Although the doctors immediately went in and repaired the damage to his internal organs. They decided his leg wounds can wait until they have the abdominal infection under control. The induced coma will keep his extreme pain away and give his body time to fight the infection and help build up his strength to withstand the surgery on his leg. His body has been damaged many times before, so he heals a little slower and the risk of further infection is really high. From what I have been told, they want to take it one step at a time to get it right.\" \n\nIt was decision time, and they all knew it. \n\n\"General Brownlow has gone into detail with me about your plan; I've seen the video he came with as well. I must say I'm impressed, and for a civilian that's saying something. I've always left Curtis alone to do his thing, even when I've had to loan you all out on occasions.\"\n\nThe Prime Minister turned to look at them all from the window. \"These people have to be stopped for so many reasons, other than the obvious ones.\"\n\nHis stare was on the man next to the seat he had just vacated. \n\n\"General, the Unit has my authorization. Please extend the Unit every support you can.\" \n\n\"Yes, Prime Minister.\"\n\n\"Thank you, gentlemen that will be all, and Lieutenant Carmichael.\"\n\n\"Yes, Prime Minister?\"\n\n\"Thank you. Curtis has been right about you all along.\"\n\nUnsure what to say, JoJo looked at Freddy for guidance, he just shrugged his shoulders. They left as a group, closing the library door behind them. His secretary came in moments later; she had been with the prime minister for years and knew the signs.\n\n\"Janis, please send flowers to the hospital, put my wife's maiden name on them please. Curtis will understand when he wakes up and reads the card.\"\n\nA simple, \"Yes, Prime Minister.\" Was heard a second before the library door was being pulled towards her.\n\nJanis closed the door, made a couple of calls, and got the Prime Minister another half an hour he would have asked for. When the three civilians left, all walked to the car with purpose, they had been given the go-ahead. \n\n*******\n\nEvery member of the Unit sat and waited for JoJo to begin. Each knew bits of the plan, and of course, rumor control was cranked up to maximum, but it was now time for JoJo to brief them all.\n\nShe stood ramrod straight, then coughed into her hand once, before saying, \"Unaccustomed as I am to speaking....\"\n\nThat blatant lie came straight out of left field and caught Freddy totally by surprise. He roared with laughter; the rest weren't that far behind. That one statement also had the desired effect that JoJo was looking for. It was now time to get down to business.\n\n\"These four men are the most dangerous people we are likely to meet in our time as the Unit. They are killers, born to it and thrive on it. They don't care about collateral damage if it means they can escape. Their loyalty is to themselves and no one else. That's why they are so dangerous. A human shield is nothing to these people.\"\n\nJoJo clicked on her remote and all four faces of the men they were going to visit came onto the screen, she briefly went into some history of each of them and just as slowly each of the team realized that these men looked on the lives of others as a commodity and something to gain advantage from.\n\nA building came onto the screen, then an aerial shot of the same building. \"This is where they all live, it's a fortress. It would take many men and tanks to get inside, even then they would have to deal with the booby-traps. I managed to find a police report of a burglar who had delusions of grandeur and thought he could steal from the folks who live there.\" \n\nJoJo stopped, waited for each of the people in that room to look at her and then clicked her remote again. Five bodies were in the picture, all of those in that room winced at the condition of each of the bodies.\n\n\"That's how the police found the burglar and his family the next day, his neighbors heard nothing, and it was warm that evening, so everyone's windows were open all evening.\"\n\nShe let the picture stand for only a few moments; the next picture was a field.\n\n\"This is their Achilles heel. Although they have a gym in that mansion of theirs, almost every afternoon they are home they take one truck to the middle of this field, and both sunbathe and do physical fitness exercises. The truck is bullet proof and also has its own arsenal of weapons.\"\n\nAnother click of the remote in her hand showed an aerial view of a vehicle in the middle of the field, four dots could be seen as well. JoJo's finger made a shadow against the white board she was using. Her finger went in a wide circle.\n\n\"They always pick the same spot. Not even the Villagers go there when they know the Horsemen are due. From there to any cover in that field is between eight hundred to a thousand yards of open field. They can enjoy their relaxation time and literally see anyone coming.\" \n\nAgain, she stopped, partly to let her information be absorbed and to see the lights come on, as one by one, they all now fully understood why Halo Two-Five was in on the briefing.\n\n\"They started small, but they are no longer small, they own the town they live in and also most of the officials that run it for them. They ship in women from the bigger cities, and between them and their flunkies, they have a ball that lasts between three to five days.\"\n\nJoJo went on to add, that they don't muddy the water around them. The women folk are safe in the village, and all but the thief have been treated well. The thief and his family were the example. A case of 'leave us alone and we'll leave you alone'. They look after the village, so crime is now non-existent; they leave the population alone and pay the people in charge really well to live there. \n\n\"The downside of course is that any new folks that come to the village, they know about it almost instantly. This is the perfect hideaway for these people. They are untouchable and the folks look on these four as protection.\"\n\nHer eyes scanned every single person in the room.\n\n\"We get one shot at these folks. If even one of these people survives, then each of us and our families will all be looking over our shoulder for the rest of our lives. When we step on the plane, it's going to be us against them; I know who I'm putting my money on.\"\n\nThe next hour JoJo went into detail on what the Unit needed to do on the ground. She then broke it down to individuals and then the extraction phase. Eventually, with every pertinent question asked and answered, Freddy dismissed the Unit, some stayed to talk amongst themselves, others left to go home and start packing. The wives knew, they could see it in their partners eyes as they came through the door.\n\nBoth Freddy and JoJo found General Brownlow resting on one of the chairs in Freddy's office. JoJo closed the door and Freddy went and sat behind his desk.\n\n\"I got here just as you started your briefing. I didn't want to be a distraction, so I waited.\"\n\nHis hand went down to the briefcase beside him, pulled out a file, and placed it on Freddy's desk.\n\n\"Your instinct came up trumps once again, Lieutenant Carmichael. A sister, she now resides in America, I've been in touch with a C.I.A friend of mine. It is a little complicated, so I suggest you read the file first. You have a video conference call with General Moore in three hours, so get what you can from the file first and then decide. If she's what you want and the General is onboard with this, then your flight leaves at six. \n\nWhen the General handed her the file, JoJo immediately opened it, she skimmed through some pages and stopped to read in detail others. Finally closing it to read everything in full later. \n\nBoth could tell that the General had something on his mind; it still took a moment for him to say anything.\n\n\"JoJo, I've backed you on this mission with everything you've asked for; but, I still have my doubts about the Unit's insertion.\"\n\nShe nodded; to Freddy it was clear that these two had had more than one conversation about this. He watched as JoJo sat across from the General and then rested against the back of his own chair as she said. \"It's the moons phase we need, Sir. We simply don't have time for practice drills on anything other than the stuff we have already done and our past training.\"\n\nJoJo then turned and pulled a folder closer to herself, the same folder that she had used at the briefing. \"We need to go on this full moon sir; after that we have to wait for the next cycle. In that time, we may lose them if they have another job planned. Getting Joan Hernandez involved will mean I have to get General Moore on board so I can get his authorization to finish her training early.\" \n\nGeneral Brownlow nodded but still pressed his point when he said. \"It all has a sense of urgency about it. Don't get me wrong, the plan on paper has me convinced it will work, but it's the rush we are putting on everything that has me on edge.\"\n\nJoJo wasn't slighted in the least. \"With all due respect, Sir, between all three of us we have gone over this plan and know it in our sleep. The only thing I can think to say is what Curtis has said to me and I'm sure to others in the Unit from time to time.\"\n\nWhat she said next made Freddy wince and the General look at her with even more concern. \"There is a reason we are called 'the Unit', Sir.\"\n\n*******\n\nJoan Hernandez lead from the beginning, she had mastered every obstacle with relative ease. She was a full five seconds in front of any of her group as Joan crossed the line. She stood up-right, pulling oxygen deep into her lungs. Her instructor was there, she always was, but it was the woman standing beside her that intrigued Joan. \n\nAs more of the group crossed the line, the group's instructor directed them away from the two women that were now staring at each other. \n\nJoJo turned towards Joan and said. \"Come with me please.\"\n\nThe accent was New York; Joan had spent a year there when she came to this country. Yet looking closely at this woman had her own internal instincts screaming at her that something was off about this stranger. \n\nShe still stood her ground. \"I've done nothing wrong.\"\n\nJoJo continued to walk towards the vehicle parked at the edge of the assault course. She didn't even look Joan's way as she started the vehicle and as the vehicle moved slightly, ready to pull away. Joan panicked and looked at her drill instructor, who quickly tilted her head in the direction of the woman, she even pointed to the car. \n\nJoan couldn't see much of her drill instructors face, but the tight jaw told her that if she didn't get to that car and outta here, her drill instructor would sure make her suffer for it. Joan ran in front of the vehicle, causing JoJo to slam on the breaks. The pause in action was barely seconds before JoJo felt the passenger door open and close again.\n\n\"And if I hadn't got in this vehicle?\"\n\nJoJo continued to drive off the training ground, pausing only to allow security to open the gate before pulling onto the highway.\n\n\"Then you would have missed the chance you've been itching for, for the last few years, to seek vengeance on the men who slaughtered your sister and her children.\" \n\nThe pain behind her eyes was real, from the day she escaped her home village and came to this country, running from the Four Horsemen, the dealers in death, the men who turned up at her sister's house and killed every living person there. Every day she thanked the gods that her bus was late, although she didn't feel that way when she turned the street corner as the Four Horsemen came out of her sister's house.\n\nIt was only that primeval instinct that was given to us while the dinosaurs walked the Earth, which made her immediately stop and step back into the shadows. She heard them laughing among themselves and then talk in a language she had never heard before that kept her against the shadows. Only when Joan heard doors to a vehicle close and an engine start did she look harder down the poorly lit street. The headlights came on and the vehicle moved away and in the direction of the old Foreign Legion outpost that the Four Horsemen had bought and spent so much money making it impregnable again.\n\nJoan took a deep breath and hesitantly walked to her sister's house. The radio was still playing soft music, in contrast to the sight that Joan was greeted with. Manuel was laying face down in the hallway and Joan had to bite hard on her hand when the slowly swinging light in the hallway touched his beaten form. She leaped over his body and into the kitchen; the condition of the bodies of every member of her family would give her nightmares for months to come.\n\nEven though her mind demanded it, her own heart knew it was a futile exercise in hope as she checked everyone for any sign of life in her sister and the little ones. After confirming that she was all that was left, Joan sat and cried. It still took her now damaged mind precious time to listen to that fight or flight instinct.\n\nWhen the Four Horsemen found out that they had missed the one remaining occupant of her sister's house, she knew they would be back. The town was already in fear of the Horsemen; those they couldn't buy, disappeared. When word of this got out, and it would. The Horsemen owned the town; those that were in power were already being paid by them. Rumor was strong that the Four Horsemen had heavily bribed those men and put them in power to do the bidding of the Horsemen, over those that they had grown up alongside.\n\nWhen her tears had dried, she packed just enough to travel very light. Joan took the money that her sister had put aside and also the money that Manuel had hidden from his wife, kissed each of the little ones and her sister. Kicking Manuel as she passed his body in the hallway for even thinking he could get away with stealing from the Horsemen.\n\nWhen she managed to get to America, she found a job and kept away from any groups that would have once lived in not only her old country, but anything close to the village she had just run from. That one job quickly led to another and slightly more money, then another until she could afford to apply to be a citizen. She moved from New York and headed further into the country. She devoted any spare time to learning to be a good citizen, to be granted the one thing that would eventually let her be able to lower her guard, if only for a moment.\n\nWith her papers in her hand, Joan walked across the street and into the arms of a recruiting Sargent, handing him her papers and asking where to sign.\n\nJoan watched the scenery pass them by as the car sped along the highway. Feeling the need to break the silence in the car, she said. \"But, what about my training?\"",
        "JoJo looked across at her and smiled. \"You're done, when you get back you will already be on the books. The only thing you're going to miss out on is final parade. In the eyes of the Marine Corps, the time spent on this assignment qualifies you.\" \n\nJoan looked hard at the woman. She wasn't using the correct terminology for any of the events leading up to her becoming a Marine. She clearly wasn't a Marine and yet her drill Sergeant called her Ma'am. \n\nFor some time, all both women did was stare out the window. Joan noticed the sign for the airport but didn't comment. The vehicle went in via one of the less used entrances and pulled up at hanger six. Both women got out and Joan followed behind, watching and trying to anticipate if needed. The hanger held a private jet and even that looked small compared to the size of the hanger. JoJo walked towards one of the offices at the far end. As Joan followed, she could already hear soft music coming from inside.\n\nAs Joan entered three men sat on chairs around the only desk in the office. Two she didn't recognize, the third instinctively made her stand ramrod straight to attention.\n\n\"At ease Marine.\"\n\nGeneral Moore had been to boot camp to watch the new recruits only yesterday. Officially he told everyone he was just passing through. Joan knew that was now a lie. She did stand at ease though, after all, this was General Moore.\n\nThe General looked towards the two men sitting, they nodded, and both stood to follow JoJo out of the office, closing the door as they did.\n\nHer eyes never left the wall in front of her, she heard the General sit on the edge of the desk, Joan had to will herself to breathe.\n\n\"Over the years my Marines have had associations with groups like the one you're going to be with for now Marine. I've read your file; I've also read the one you hide from everyone as well.\"\n\nEven at ease, she couldn't stop her body from shaking. She had done her best, she was going to be a Marine and now she felt like that was going to be snatched away from her.\n\n\"These folks need you, Marine, and it's only because I read the file you hide from everyone that I'm allowing you to end your course short to join them.\"\n\nJoan felt his presence; he was standing right next to her.\n\nGeneral Moore shortened even this small distance to whisper in her ear. \"The Four Horseman have to be stopped; these people plan to do that. You will assist in any way they ask. Make us proud, Marine.\"\n\nThe Marine within her took a step back as her emotions tore through her soul. The tears ran down her cheeks unchecked. For so long now, she had run and hidden from the Four Horsemen. Only joining up the when the Recruitment Sergeant mentioned the Marines did she feel even a glimmer of hope that she no longer had to hide from the men of death, they had taken so many innocent souls from her life, because they could. \n\nShe turned to look at the General, the stern features that everyone sees, had left him. Only the man and father stood next to her. She understood that she was being given a prize like no other, Joan could now fulfill the promise she had made to her sister and the innocent little ones. Whose lives were ended, just to set an example to others in the village.\n\nEven though her emotions felt like the sea crashing against a rock in the ocean, Joan Hernandez was still a Marine. The \"Sir, yes Sir.\" Came out barely above a whisper, but the emotions attached to it carried with it her total gratitude towards her boss. In an unguarded moment that even she didn't see coming, two other words escaped her lips. \"Thank you.\"\n\nGeneral Moore nodded his head, the smile briefly crossed his lips as he walked past Joan Hernandez and out the door. Joan watched through the office window as he stopped to talk to the woman who came to Boot Camp. She nodded and shook his hand before the General left the hanger. \n\n*******\n\nFreddy watched from his office window as the Unit came out of the building, Joan Hernandez keeping close to Ashley as the team jogged over to the camp's assault course. His office door clicked shut and Freddy turned to see JoJo getting ready to sit in front of his desk.\n\n\"We need to talk.\"\n\nFreddy sat and watched JoJo. She was leading on this, so he left it to her to start the conversation. The time it was taking her to find a way into the conversation was amusing, so he gave her a helping hand.\n\n\"Let me guess, Rick?\"\n\nShe nodded in agreement. \"With the time constraints that we are up against and pulling Joan away from Boot Camp before she was finished, I'm going to have to change the plan.\"\n\nFreddy shook his head, JoJo just looked confused.\n\n\"I pulled Rick's file. I know when he last did a Halo jump. He kept his mouth shut when you put a Halo jump into the plan because he, like all of us, wants this plan to succeed.\"\n\nJoJo winced when Freddy told her the date of his last jump and then swore. She could see the plan falling apart before her very eyes. She desperately needed Rick there, but not if there was a greater chance of him being nothing more than a dent in the ground when he did get there. \n\nFreddy let the war going on in JoJo's head go on for just a while longer before he put his own suggestion forward.\n\n\"We both know that those two people are what this plan hinges on: Joan and Rick. Change our insertion to a higher altitude, higher opening jump. That will give us all a slower drop and we wouldn't need Joan and Ashley at the field as backup. So, give Joan the grand entrance she wants but is too polite to ask for it. She's a big girl JoJo, she can take care of herself.\"\n\nJoJo opened her mouth, but Freddy put up his hand to finish his own thoughts.\n\n\"Bring her in on the late morning bus. The Horsemen will be at the field when the bus comes into the village. With the area being predominantly Catholic, they will let Joan pay her last respects to her sister and the children before they drag her in front of the Horsemen. Ashley can take care of whoever they put on her as a shadow.\"\n\nFreddy could see her start to smile.\n\n\"It's a win, win. You get Rick at the field in one piece and Joan gets the revenge she wants even though she knows she has to be a decoy for a few hours.\"\n\n\"I wouldn't want to call her a decoy.\"\n\nFreddy shrugged and then added. \"Not to her face maybe, but she's not stupid. You need the whole village to be looking towards Joan and not at the field, at least until the shooting starts that is.\" \n\n*******\n\nIt was 0315 according to Freddy's watch, the sound of the aircraft engines meant that conversation between the Unit was impossible. The red light flickered, and the interior light went dim. In five minutes, the tail of the aircraft would open, and the Unit would leave. He watched them all once again check the equipment strapped to their bodies; the only one taking his time was Rick. \n\nFreddy's thoughts went back to the plan, he had even offered to organize a couple of high altitude, high opening (Halo) jumps to get Rick up to speed. He reminded everyone in the room at the time that it was like riding a bicycle, although none of them could see them riding bikes at the speed they would be dropping from the sky.\n\nWhat amazed Freddy was actually sitting Rick down and telling him that for security reasons, they couldn't call him Halo Two-Five over the radio. To Rick that was his name, his security blanket, and lucky charm all rolled into one. It took him two cups of coffee, but he buckled in the end and accepted a number designation instead.\n\nThe lights flickered once again and for the last time, every member of the Unit ran their hands over every pocket, strap and fastener attached to them. Freddy heard the jump master shout over the wind rushing in; his whole body had turned red from the light above him. He held up his hand and when the light then flicked to green, then the concentration in the aircraft was total. Once both lights went out, every member of the Unit left the plane.\n\nEarlier, Freddy had pulled two of the team to one side and detailed them to look after Rick on the way down. All three knew that if he ever found out that he was being ghosted, all hell would break lose. But jumping in daytime was one thing, at night meant having faith in the technology strapped to your body, that would let you know what was going on around you, not to mention that big solid thing rushing up to meet you. \n\nThe moon was full; it was both a good and bad thing. The sky was clear of cloud and very little breeze. They couldn't have hoped for a better time to do this. Freddy cast a glance behind him and quickly counted the stack as they descended. No one heard his relief when the body count was correct. He turned to concentrate on the compass strapped in front of him, leaving the team to keep the line and not wander off. His mind now totally on the compass, the contours and terrain in front of him as well as also relying on the skill of his team to keep its formation.\n\nHe saw the moon reflect off the river and quickly glanced at the compass. He could almost taste the relief in his mouth as he adjusted his course accordingly. Anticipating the fork in the river and turning right, the full moon continued to act as his guide as the stack slowly descended. The river forked once again, and again Freddy turned onto the right-hand fork. The village's lights could be seen in the distance, and then the trees parted to become one huge field. Freddy pulled on his chute and the stack turned and came to rest in the middle of the field.\n\n*******\n\nThe name of the next village appeared on the roadside signpost as Joan looked out the window. The bus protested loudly as the driver once again attempted a seamless gear change and failed. They had grown numb to the sounds of protest coming from the engine and gearbox as it slowly ambled it way across the countryside. She knew one day she would see that sign again, she never envisioned she would see it with such a destructive force as her shadow. Out of instinct she looked once again at her watch, it was constantly drilled into her at the many briefings, it was all about timing.\n\nWith such a closed in community, everyone knew each other, strangers were looked on with distrust. Even the Horsemen were not wanted in the beginning. Then they started spending money, and the village once again prospered, and the younger ones saw hope. The older men of the village urged caution, until one of the most vocal of voices was found one morning at the bottom of his stairs; his neck broken in the fall, or so the police chief said. \n\nJoan stepped off the bus, a small suitcase as her only luggage. Two others stepped off as well. One went about his business, and the Muslim woman in the Burka crossed the street; the wheels of her suitcase making a rumbling noise along the sidewalk. Joan walked to the police station and entered. Slowly the room fell into a lull as recognition came to all in the room. She walked over to the desk and stared at her cousin; the look of uncertainty crossed his features.\n\n\"I'm here to see the grave of my sister and the little ones. I will be here for two hours until the bus returns to take me back to the city. Once I board the bus, I will never return. Do I have your permission to do just that?\" \n\nSweat started to accumulate across her cousin's brow as he looked uncertainly over her shoulder. It was then she heard another person answer her question.\n\n\"Go and see the grave of the thief's wife if you wish but be back here in an hour. We will want to have a sit-down talk when you're done.\"\n\nShe felt herself blush her training kept her mouth shut. She continued to stare at her cousin but nodded her head and then turned to leave. The police chief still standing in the middle of the room.\n\nThe sneer let her know he wasn't finished. \"Leave your suitcase, just in case you have intentions of skipping out again like you did the last time.\" \n\nJoan squeezed the handle tightly and felt a faint click in the palm of her hand. Turned and placed it on the counter in front of her cousin. He lifted it off the counter and placed it on the floor beside him. She then walked out of the police station and towards the graveyard that was situated on a slightly elevated hill at the end of village.\n\n*******\n\nThe Police chief went to his office to phone the Horsemen's number, his hand was already on the receiver before he paused. It was noon, they would be leaving for the training field, if they hadn't already. He knew they enjoyed these few hours. \n\nThen he smiled, she wasn't going anywhere, Manuel was keeping an eye on her, all the way to the cemetery and would then bring her back here, in handcuffs if he had to. He would personally take her to the Horsemen when they were finished later that afternoon. His imagination grew at the treasure he would have in his hands later and the rewards the Horsemen would heap on him at the next party. His pants became tight as his thoughts turned to Maria, the new addition to the girls who came from the city. \n\nYes! When he walks into the Four Horsemen's place later this afternoon, with Joan Hernandez in handcuffs, standing beside him, they would reward him, and Maria would be his for the whole night. He wouldn't have to share a girl like he has had to before when he displeased the Horsemen. \n\nHe leaned back in his seat, yawned and closed his eyes. His mind opened up that fantasy of wishes in his head, dreaming of Maria and those tight thighs. The Police Chief yawned once again as the gas slowly leaked from the suitcase on the floor by the police officer's desk. They would sleep uninterrupted; after all, no one in the village voluntarily went into the police station since the Horsemen now owned everyone inside the building.\n\n*******\n\nAs Joan Hernandez knelt by the graveside of her sister and the little ones. She prayed for forgiveness, that her sister understood that she had to leave. \n\nBut she was back now. \"And vengeance shall be ours my sister.\"\n\nTwo fingers came to her lips and then touched her sister's headstone. A tear left her eye, and her lips replaced her fingers. \n\n\"I have to go now my sister, its killing time.\"\n\nJoan stood and turned to look at the Woman in a Burka. Her head-cover was off and folded into her belt as she opened the suitcase and started to put a stand together, then attach a scope to it. She then tossed a Sig at Joan, who caught and checked it with trained ease. Her combat training instantly came to her; she scanned the cemetery for anyone and anything that moved, lived or breathed. Other than the now sleeping Manuel, now resting against one of the headstones, the place was empty. She was a Marine; she was looking after her comrade. \n\nBoth women looked at their watches and smiled. Ashley looked through the scope once more, and when she was satisfied, nodded to the woman standing next to her. Ashley then handed Joan the remote, and a wave of emotions came to her. The pain of leaving her sister and little ones, living in almost secrecy so she could earn enough to be eligible to be a citizen, and enduring the marine training. It had all led to this. Joan once more looked over the treetops at the fortress where the Horsemen lived and planned. \n\nShe pressed button on the remote, the building was now marked with an invisible guiding light. The drone quickly picked up the signal and the rocket followed the invisible light. The first rocket hit the building twenty seconds later. The second wasn't really needed since the ammunition the Four Horsemen had stored there had also ignited but it came anyway. The building had to burn completely into the ground. Whatever secrets the Horsemen had in there, had to die with them. The second rocket's incendiary load speeded up that process.\n\nThe Four Horsemen turned in unison towards the sound of the explosions. Alexie turned even further when the first shot from Rick caught him in the chest and he went down. The shout went out between them and handguns appeared. They all eyed up the distance between them and the safety of the armored vehicle, and the open ground they would have to cross when they attempted such a move. Peter turned to the other two to shout, he lurched back and rested on the grass, the green grass now turning red around his head.\n\nWith the last two Horsemen now back-to-back, they spotted the figures walking closer and closer. All five of them walking towards them in a loose circle surrounding them, still out of range, unless they could get to the weapons in the armored vehicle. Anton shouted a curse in Russian at the figures walking towards them, demanding that they meet him like men and not cowards.\n\nThose were the last words he spoke, two shots passed through him spinning him on the spot like a ballerina on speed. The last of the Horsemen made a show of dropping his gun and stepping two paces back before kneeling on the ground with his hands behind his neck. One of the men walking towards him placed his hand behind his own back and pulled out a smoke grenade, pulled the pin and dropping it on the ground. The others followed suit and a ring of smoke obscured everyone within it.\n\nJoJo and Rick stripped down their rifles and placed them in backpacks. Preferring the stairs to the building's only lift, that looked like it may or may not work, dependent on a whim. JoJo had donned a baseball cap, to go with her sunglasses and sweats, then jogged over the road and onto the field and into the smoke as the last of the shots rang out over the sports field. The engine of the bulletproof vehicle now rumbling in idle, just waiting for JoJo to jump aboard before it once again roared and sped over to the other side of the field where Rick was waiting.\n\nAs the vehicle drove through the village, the place was deserted. The people of this village learned long ago that if you're a witness to what the Horsemen do, then your life span decreased to seconds.\n\nAshley had disassembled the equipment that marked the building for the drone strike and placed it all into the now unfolded backpack along with her burka, the jogging pants and tight sports shirt now keeping her cool. Ashley and Joan ran down the hill, Manuel's was the only vehicle parked in the car park. He was either to lazy to walk to the cemetery or keen to get Joan back to the Police Station when she was done saying goodbye. \n\nThey waited at the car park, when the Horsemen's vehicle turned up, two of the team joined Joan and Ashley. Both vehicles left the Village just as the sounds the complaining engine and gearbox of the bus once again passed the cemetery gates. \n\n*******\n\nGeneral Brownlow lead the debrief. It was blunt and to the point. Every one of the Four Horsemen was now dead. The place they once called home was nothing but a burned-out hole in the ground.\n\nRick and Freddy went to see Curtis. Rick stayed with Curtis while Freddy went for a walk with Ruth. They stopped down the corridor and Freddy sat Ruth down.\n\n\"They're dead Ruth, every single one of them.\" \n\nHis hand came out and instinctively hers followed, expecting Freddy to drop something into the palm of her hand. A flash drive came to rest.\n\n\"The last to live was the one with the tattoo on his hand. He told us that what happened at the ambush site had them unprepared. They were lied to.\"\n\nFreddy's head nodded towards the drive.\n\n\"That is every detail about the hit. From the name of the person who hired them to the bank the money came from. Two of the Four had doubts about this hit and expressed them to the others, they were overridden in favor of the money they were offered for the job and so they took it.\" \n\nThe one remaining Horseman admitted that they took the job at face value and did not do any research of their own. They were told that the husband was nothing more than a security consultant. The contact even sneered when he said that much. ",
        "Ruth knew then who the contact was that the Horsemen had spoken too. Grandpa Zeek spat at Ruth's feet when she said she was marrying again. When Zeek asked if he was more educated than the last husband, Ruth had told him what Curtis had first told her, she even remembered that she smiled when she said the Curtis was a security consultant. Grandpa Zeek had to take one his pills to lower his blood pressure.\n\nWhen the ambush went down and the husband was in the car, they envisioned nothing but a jumped-up security guard with a posh title. When his hand came into sight holding a Sig and when Curtis fought back, it shook them all. \n\n\"He admitted, Ruth, had they even had a suspicion that Curtis wasn't a soft target, they would have hosed the whole car down with automatic fire. It was the total contempt the contact had for Curtis that probably saved both your lives.\"\n\nFreddy once again pointed at the flash drive in her hand and said. \"When they figured out who you really where and who Curtis was, they knew it was only a matter of time before we came for them, so he gave us that to give to you.\" \n\nRuth looked at it with total distrust. She had to fight the urge to throw it into the trash. A hand rested on her arm and Ruth looked at Freddy, he was smiling.\n\n\"I gave it to JoJo, Ruth. She took it to friends of hers who play with these sorts of toys. It will open normally, Ruth. There is no spyware or anything that is going to make you have a really bad day. Only the money trail and the proof that the elders of your family conspired to have you killed and Becky returned to them in the States.\"\n\nTears formed in the corners of her eyes, hope perhaps.\n\n\"With that you can take back the family companies Ruth.\"\n\n*******\n\nA Year and a half later...\n\nI looked out over the boat club from the apartment window above the clubhouse. It was our home for now; I was still healing, although I'm told that the limp will never leave me. I struggle to get onto a boat. As for following Munchkin onto the roof, well maybe in a year or so, dependent on the next round of physio. \n\n\"Daddy, Mom just phoned from the airport.\"\n\nBecky was told by her mom that she needed to do her homework before we took the boat out. Of course, with Ruth at the airport and heading back to the States for a couple of weeks, she wouldn't know that we took the boat out first and she did her homework before going to bed.\n\n\"I'll get the Ortiz ready, and you get Hope ready.\"\n\nThe conspiratorial tone was amusing. Ruth knew what we were doing, Sarah would have told her if her own maternal instincts hadn't kicked in already.\n\n\"Ok Munchkin, but no taking her socks off this time okay? She's still too young.\"\n\nI watched her eyes roll; I swear she learned that from JoJo.\n\n\"But Daddy, she has to learn, when you're on the deck, you do so in bare feet.\"\n\n\"Munchkin, she's just turned a year old. I think we can give her another couple of years before we take her down that route, who knows, she may not even like boats.\"\n\nBecky's jaw genuinely dropped in shock and her eyes went real wide.\n\n\"Don't like boats? Daddy, are you sure you and Mommy picked up the right baby from the hospital on the way out?\"\n\nShe must have heard me laughing as she left the apartment. It was my day off. I had officially retired from the Unit now. I'm just too banged up to pass another physical. I swear I saw Ruth do a fist pump when I told the family that.\n\nMy ex-boss tried to promote Freddy and he went over his head and went to visit General Brownlow. That could have cost his career, but fortunately, I had already had a conversation with God's Brother. We are an unusual bunch; the rules only apply to us when we need them to. God's Brother and I had our own conversation. JoJo now runs the Unit.\n\nFreddy's turn in command while I was still in hospital was enough for him. He had found his niche within the Unit. He just loved administration; he was the oil that kept the Unit going. Taking the lead for awhile was fine, but Freddy was one of life's second in commands. He thrived on what others, like me, ran from, paperwork.\n\nJoJo was a ball of fire when she found out that Freddy and I had put her name forward to take command of the Unit. She actually threatened to shoot me when she found out. It took Maggie and Ruth to sit her down and tell her that this was what had been planned between Freddy and I all along. I stayed just long enough for JoJo to finally catch on.\n\nThe Keyleigh Ortiz roared into life and after placing Hope out of the breeze, I cast off and Keyleigh pulled away from the mooring. The two women on the Becky Ortiz waved as they sunbathed. It was an interesting conversation I had with JoJo, she said she would only take the job if Ashley and her could move out of my boat and buy Becky's. An eavesdropping Becky screamed 'deal' before I had a chance to draw breath and refuse. \n\nBecky wasn't stupid; she went to her mom and said that if JoJo and Ashley bought her boat, she would still have all her friends nearby. She is a very forward-thinking daughter. In retaliation for her thoughtfulness, I offered to leave the canal boat to her in my will. That boat, in a round about way had brought us all together after all, so it did seem logical to keep her in the family.\n\nFor now, our two daughters and I stay in England. Ruth goes back to run her company as well as the family one. With generations of dominance from the old men, who are mostly facing trial and major jail time, it's taking time for the family to get used to the freedom they have now. Ruth is waiting for planning permission to convert two of the rooms from the apartment into an office. Once that's done, her travel with be cut in half. \n\nSarah and Gil flat out refuse to retire, and I thank them daily for that commitment. I get my hands dirty along with Gil now, helping out around the club, hence my day off. \n\nAs we gently motor passed the clubhouse, Becky is already setting up a chair and pulling her socks off. Hope is wrapped up tight and fast asleep next to me.\n\nThe End.\n\n \n"
    ],
    "authorname": "markelly",
    "tags": [
        "boat club",
        "wedding",
        "unit",
        "intelligence",
        "hope",
        "keyleigh ortiz"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/curtis-woodman-ch-03"
}