{
    "title": "Two Hundred Dollars Ch. 05",
    "pages": [
        "175 Dollars\n\nBailey crawled out of bed on Monday at a leisurely pace. The basement floor brought her the cold bite of autumn, prompting her to wrap her dark blue robe around herself and head to the kitchen to turn on the coffee maker. With that vital process begun, she walked a few steps past her bedroom door to adjust the thermostat. She could hear Kent already awake and working, but he'd have never thought to warm up the apartment. Most boys, in Bailey's opinion, had a real chip on their shoulders about enduring cold weather as if it didn't exist.\n\nShe shrugged it off as she returned to the kitchen and wait for her coffee. As they had the day off for Thanksgiving, she could take it even easier than her normal lazy Monday morning pace and let the place warm up as slowly as it pleased.\n\nMaybe because he smelled the coffee, Kent came out of his bedroom, already looking wide awake.\n\n\"What time is it?\" Bailey asked him.\n\n\"Nine thirty,\" Kent started heating a skillet in preparation to scramble himself a couple of eggs.\n\n\"How come you aren't home for the long weekend?\"\n\n\"Money,\" Kent admitted, now setting up the toaster with two slices of bread and pressing the lever down. \"That's a long bus ride to see my parents for two days. I'll see them all at Christmas. You?\"\n\n\"My parents are off visiting my brother in B.C.,\" Bailey twisted her lips. \"So I'm stuck here.\"\n\nKent grimaced at that. British Columbia, while lovely, sat half a country away from their present location, with three provinces and a lot of wheat in between.\n\nHe added a bit of oil to the frying pan, waving his hand over it to check for heat.\n\n\"You want anything while I'm here?\" he asked.\n\nBailey shook her head, \"I'll just do my coffee, for now, thanks.\"\n\nThe coffee machine started dripping out its dark salvation while Kent cracked his eggs in a bowl and scrambled them with a fork.\n\nLeaning over the small pot of coffee, Bailey inhaled the scent of her fresh brew and felt invigorated. She had cleared up the matter of Laura's intrusion to her satisfaction and needed to keep her forward momentum.\n\n\"How long have you been awake?\" she asked Kent, noting he appeared fully dressed in jeans and t-shirt.\n\n\"Couple hours,\" he admitted, pouring his eggs in the frying pan and achieving a satisfying sizzle. \"Shit tonne of work to do for that stupid group project.\"\n\nBailey poured her coffee into her mug and sat down at the table, curling her body around the mug's warmth.\n\n\"You'll need a break at some point, though,\" she let her voice trail off.\n\nKent smiled, \"No doubt.\"\n\n\"I was thinking of having a nice dinner, actually,\" Bailey put in. \"Pick up one of those pre-roasted chickens at the grocery store? Maybe some fries too.\"\n\n\"Oh,\" Kent nodded thoughtfully. \"I mean, hell, I can mash potatoes. I'm not completely useless in the kitchen.\"\n\nHis toast popped just as he poured his scrambled eggs out onto his plate. He dropped the plate on the table across from Bailey and went to the fridge to fetch milk and jam. Once the toast was covered in a spread of strawberry jam, he settled in.\n\n\"Shouldn't there be vegetables or something?\" Kent asked, digging into his breakfast.\n\n\"Yeah. I hear those are good for you,\" Bailey nodded sarcastically. She sipped her coffee and added, \"Whenever we get hungry, we can head down to the grocery store and pick something up?\"\n\nKent swallowed a mouthful before replaying, \"Sounds great. We'll split the bill?\"\n\nBailey nodded, watching Kent demolish his breakfast. \"Do you even stop to breathe?\"\n\n\"Studying burns a lot of calories,\" he spoke around a mouthful of food.\n\nShe didn't get halfway through her cup of coffee before he finished his entire breakfast. With a raised eyebrow, she watched Kent rinse his plate off and stick it in the dishwasher.\n\n\"Just, uh, pop by whenever,\" Kent said. \"I'll be working in my room all day.\"\n\n\"Right,\" Bailey agreed, her eyes half lidded.\n\n=============================\n\nSeveral quiet hours passed. Kent, knowing that Bailey hadn't got her brain in gear yet, concentrated entirely on his project work. The jackasses in his group surely hadn't done their part of the work and he knew too much of it would fall on him.\n\nMy kingdom for competent coworkers, his brain cried out. Someday I'll get out of school. Someday.\n\nThe clock in the corner of his computer screen read exactly 12:00 when Bailey came into his room. For some reason, Kent had expected her to have changed into her standard blue jeans and t-shirt, but he found her leaning against his door frame with her dark blue bath robe still wrapped around her.\n\n\"Hey,\" she said.\n\n\"Yes,\" he drawled back.\n\n\"Kinda special day today,\" Bailey began.\n\nKent shrugged, \"I suppose.\"\n\n\"I have an idea,\" she said. \"A proposal, if you will.\"\n\n\"I will entertain your proposal, as always,\" Kent kept his voice officious and distant.\n\nBailey inhaled.\n\n\"Okay, here goes,\" she said, \"It's pretty warm in here.\"\n\nKent raised a finger as if to object, before lowered it calmly, \"Agreeing so far.\"\n\n\"And the landlords upstairs are gone, and so is Carson.\"\n\n\"These are all statements of fact.\"\n\n\"So I was going to put three tick marks in the box,\" Bailey jerked a thumb over her shoulder, \"If you'll do it a bit differently.\"\n\n\"How so?\"\n\nBailey loosened the ties on her robe and opened the front of it to him. First, as it opened at the top, he saw the loose blue sweater she wore on the top of her body. Then, as the rest of the robe opened, she revealed that she'd covered the lower half of her body with only a blue pair of athletically styled panties.\n\n\"The deal is,\" she explained as she slipped the robe off her shoulders and hung it over her forearm, \"I spend the whole day, just like this -- except when we go outside -- and you can take your spankings... whenever... you... want.\"\n\n\"Fifteen spankings,\" Kent replied. \"Whenever I want.\"\n\n\"Twelve,\" she corrected. \"That's the deal. I get a discount for, um -\"\n\n\"Putting on a show?\"\n\n\"Yes,\" Bailey seized on that, \"for putting on a show and for, let's say, letting you surprise me.\"\n\nKent took a very deep breath, scanning her from bare feet to hips before looking her in the eyes.\n\n\"Can I see the back?\" he asked, nodding at the little blue panties.\n\nBailey tilted her head and rolled her eyes, but still turned around in the doorway, sticking her hips out just a little in his direction. Kent noted that while the panties weren't thong-like at the back, they had a nice inward curve that worked well with her thin frame.\n\nShe remained facing away from him as she spoke over her shoulder, \"I can change which panties I'm wearing, if you really care. Now do we have a deal?\"\n\n\"Will you change them every time I spank you?\"\n\nBailey sucked in a breath, \"If -- if you want, I'll go through my whole wardrobe.\"\n\n\"Deal.\"\n\nShe immediately reached out for the marker and made three tick marks on the board.\n\n\"Do you want to do any right now?\" Bailey spoke without moving.\n\n\"I think I'll do two now,\" Kent stood up and approached her, laying his striking hand on her left cheek.\n\n\"Don't tell me,\" she chided instantly.\n\n\"Pardon?\" he shook his head as if he hadn't heard her clearly.\n\nBaily stammered a moment. \"I mean, you don't have to tell me how many or when. That's why I get a discount. Because you can just do it whenever.\"\n\n\"Oka-ay,\" Kent replied. \"So you don't want a warning?\"\n\nBailey turned her head away from him, sighing and looking up at the ceiling, \"I'm going to know you're there. You're not a fucking ninja.\"\n\nHe slapped her left cheek good and hard.\n\n\"Yow!\" she cried out, much louder than she usually did. \"One.\"\n\nHe struck the right cheek immediately after, even harder.\n\n\"Ha! Christ!\" she screeched out. \"Two.\"\n\n\"Done for now,\" he told her, pushing her out the door via the hand that cupped her cheek. \"I'm going to head out to the grocery store.\"\n\n\"The chicken'll get cold if you buy it now,\" Bailey put her free hand on her hip as she turned to frown at him.\n\n\"I'll get everything but the chicken,\" Kent pointed out, \"We can get the chicken right before we eat, but I need to boil the potatoes and mash them ahead of time, never mind whatever else I find.\"\n\n\"Oh, right,\" Bailey agreed, eyeing his spanking hand. \"I'll see you later.\"\n\n\"You'll change while I'm gone?\"\n\n\"Of course. A deal's a deal,\" she replied.\n\n=============================\n\nBailey went back to her room and waited for Kent to leave, her body shaking with impatience. When she finally heard the outer door close, she came back into the hallway and walked to his room. With an involuntary exhalation that forced her eyes closed, she slipped off her panties. Holding them between the thumb and forefinger of her left hand, she lifted them up and hung them over the corner of his whiteboard.\n\nHer left hand then braced against the door frame as she began panting.\n\nAny time, she gasped, closing her eyes again, he can do it any time.\n\nUntil then, everything had gone according to her schedule. But this day, she had handed it over to him. He could just come up behind her at any time and slap her ass.\n\nBailey felt her knees collapsing as her toes turned inward. Her right hand dove between her legs, pressing down on her sex. She moaned, stretching her left arm up along the door frame and pressing her shoulder to the wall.\n\nMaybe he'll warn me. Maybe he won't, her lungs pushed out another involuntary breath, leaving her gasping for air. Maybe he'll grab my hip to hold me still. Maybe he won't.\n\nShe squeezed her thighs together, trapping her hand inside, her middle finger probing between her lips.\n\nIt's entirely possible, she mused as she squirmed, half-naked in his doorway, that he'll just come up behind me in the kitchen and... slap... my... ass!\n\nCringing as her body convulsed, Bailey sank to her knees, barely keeping herself upright, crying out loud to the empty apartment.\n\nSome thirty seconds later, she recovered enough to wipe sweat from her brow and sit back with her butt on her heels. She took two very deep breaths.\n\nGlad that's out of my system.\n\nBailey had already decided, by virtue of her promise, she would keep her end of the bargain by making herself available the whole evening. That clearly meant leaving her door open, forcing her to control herself for the rest of the evening. She'd thought it a thrilling idea when she'd come up with it, but now worried if she could go the whole night without masturbating.\n\nOr at least until he's done ten more spankings.\n\nShe got up very carefully, her legs still a little weak, and walked down to her bedroom to fetch a new pair of panties.\n\nI think I'll do a thong next.\n\n=============================\n\nAs the local grocery lay next to the cafe, it didn't take long for Kent to hustle back and forth with a small sack of potatoes and a bag of frozen vegetables.\n\nI can probably manage to cook this without fucking it up too much, he thought as he tried to open the door and found it locked.\n\nMakes sense, if she's wandering around half naked.\n\nKent patted his pockets and realized he'd left his keys at home. He hadn't thought to lock the door, but given that the deal he'd made with Bailey required her to prance around in her underwear, it made sense that she had secured their place.\n\nMaybe running out so quickly after spanking your roommate wasn't such a bright idea, he realized. Or you would have thought of that yourself.\n\nHe rapped on the door gently, rebuking himself inside his head for the lack of patience that had led to this situation.\n\nIt took less than a minute before he saw Bailey's head poking through the little window in the door. She held up a cautionary finger, petitioning him to wait a moment, before she unlocked the door. Understanding her entirely, he waited until her footfalls on the stairway faded away before he opened the door.\n\nMore wisely, he locked it behind him.\n\n\"Is it closed?\" Bailey asked from around the corner.\n\n\"Yeah, sorry.\"\n\n\"It's alright,\" she said, only a note of worry in her voice as she poked her head around the corner, \"But you locked it again?\"\n\n\"Yeah.\"\n\nShe put one bare leg around the corner of the wall that separated the stairway from the little laundry cupboard. From where Kent stood, he couldn't even see what she wore below the waist, only a whole lot of naked thigh with her sweater covering the waistband of her panties -- assuming she wore any.\n\nAs he shifted the bags so he had one in each hand to make his way down the stairs, Bailey waited patiently at the bottom. She closed her eyes and inhaled sharply as he stepped off the last stair onto the basement floor.\n\nKent lifted the bags in his arms and bumped the ice cold bag of mixed vegetables against her cheek.\n\nBailey yelped, \"Bastard!\" and felt goosebumps searing up and down her body.\n\n=============================\n\nShe hadn't expected that. While she'd had the apartment to herself, she'd reconciled with the fact that she had ten spankings to contend with before she could have some time to herself. After staring upward at the summit of that unscalable mountain of patience, she'd eventually accepted it.\n\nBut now this torture?\n\nShe also had to contend with hours of non-spankings?\n\nSon of a bitch.\n\nBailey shivered, not entirely because of the ice he'd bounced off her cheeks, and watched Kent walk down the hall to put his vegetables and potatoes in the kitchen.\n\nHe's not going to spank me.\n\nWith a nervous sigh, she walked down the hall to her bedroom and sat at her desk. Hours waited between this moment and dinner, and she had to spend them like this, waiting for him.\n\nWaiting on his pleasure. Isn't that how the harem girls say it?\n\nShe had a feeling they said it like that.\n\nListening carefully, she heard Kent load the freezer and thump the potatoes down on the counter. His footsteps whisked across the floor, growing louder, approaching her door.\n\nThe sound stopped at her doorway, but Bailey didn't turn her head. Did she hope too much?\n\nHe moved inside her bedroom, coming for her.\n\nBailey felt her heart pounding in her chest, her breathing accelerated as if she'd found herself in a mad, dashing race.\n\nWhat could she do?\n\nShe rose out of her chair, leaving her hands beside her keyboard, and leaned over her desk, letting him see the white thong he'd so loved. Bailey felt more than heard his presence, looming behind her, shifting to her left.\n\nSometimes he laid a hand on her first, letting her know where he'd strike, but he didn't do that this time. Instead, the moment she locked her knees straight, just as she inhaled, he struck her right cheek, hard and low.\n\n\"Ha!\", she yelped, loud and high, enjoying the exhilaration of making so much noise, knowing no one could hear her but Kent. \"Three.\"\n\nThe fourth strike came hard on the heels of her third, hitting her left cheek low.\n\n\"Four!\" she screeched.\n\nShe waited, saying nothing as Kent rested his hand on her lower back, wondering if he'd do a third.\n\nInstead, his hand caressed her cheeks, top to bottom and all around, and then left her stinging flesh. She never turned to make eye contact, just letting him leave her room. Bailey didn't move from her position until she heard his desk chair squeak.\n\nShe then slipped out her panties and selected the next pair, a more plain, traditional black pair. Quietly, she crept along the hallway to his room, the white thong in her hand.\n\nKent looked up when she stood in the doorway. He watched her hang the thong on his whiteboard, next to the blue pair already hanging there. She saw his well contained reaction, a simple raising of his eyebrow, a subtle mark of appreciation.\n\nBailey smirked at him, trying to maintain a condescending attitude, and turned on her heel to walk back to her bedroom.\n\n=============================\n\nKent's afternoon began to take on a surreal aspect the longer it went. While he hammered away at his homework like a mythical dwarven miner, the thought of Bailey waiting in the next room constantly intruded upon his thoughts.\n\nWhat are you going to do? he asked himself. You only have 8 spankings left for the day. You'll want to save those for later.\n\nHe felt the gripping force of logic on his brain. Eight spankings divided over roughly eight hours required some calculation. If he waited two hours, focused on his work, he could just walk into her room and lay two more on her taut little cheeks.\n\nBut I could wait longer, do more at once.\n\nKent considered the possibility of walking in, doing one spanking, and walking back out.\n\nConcentrate on your homework.\n\nFor a moment, he thought it might be better to just walking in there, take her over his lap, and lay all eight slaps on one cheek. Leave her red and sore for dinner.\n\nNo. Don't ruin it. That's not how she wants it and, as much as this is my money, it is her ass here, so she definitely gets some say in the matter.\n\nThe tension in his chest continued to build.\n\n=============================\n\nBy 4pm, another gnawing sensation starting eating away at him, and it came from neither the bulging urge in his groin, nor the thumping madness in his chest. Hunger, finally, had arrived.\n\nHe walked past Bailey's room, consciously forcing his hunger to override any other desire, and reached the kitchen. He dumped about half the mixed frozen vegetables into one of their two pots, added a bit of water, and set the burner to maximum. He half filled the second pot and placed it on the next burner, turning it on too.\n\nPeeling potatoes didn't count for much fun, but he could do it quickly. A rough chopping job followed and the 'cubes', if you could call them that, found themselves in the second pot.\n\nThat took care of everything but the chicken.\n\nHe went back to his room and tapped away on his computer for a while until her heard the water boiling. The vegetables he could just drain and turn off, but the potatoes he had to drain and mash. He sighed, adding milk and butter to smooth it out and then started mashing.\n\nKent breathed deeply and exhaled slowly to build patience into his voice.\n\n\"Hey, Bailey?\"\n\n\"Yes,\" she squeaked back instantly.\n\n\"You hungry yet?\"\n\nA long pause followed this.\n\n\"Sure,\" she replied. \"I'll, uh, get dressed then?\"\n\nThe implication of her question floated in the air between them. Should she put on her jeans now or... wait?\n\n\"Yeah,\" Kent replied.\n\nSomehow, a completely silent note of disappointment drifted to him, carried on the emotional air currents swirling between kitchen and bedroom.\n\nBailey appeared in the hallway, still without pants on, looked at him and walked the other way. Kent followed her, grabbed his jacket from his room, slipped into his sneakers and caught up to her at the bottom of the stairs.\n\nHe hadn't noticed before, having occupied his mind with bumping her cheeks with the freezing bag of groceries, but she'd left her jeans folded up on the laundry machine, presumably in preparation for this outing.\n\nBy the time he got to her, she'd already pulled her jeans on and had started buckling them.\n\n\"Y'know,\" he said, \"Before we go...\"\n\nHe didn't have to say anything more. She silently undid the button on her jeans and pushed the waistband back down to expose her cheeks and her black panties.\n\nAs soon as she cleared the way, he slapped her left cheek, eliciting a long, low groan.\n\n\"Five,\" she breathed a moment later. \"Any more?\"\n\n\"That's good for now.\"\n\nShe started to pull her jeans back up but paused with her cheeks half exposed. \"Should I change now?\"\n\n\"Huh?\"",
        "\"You wanted me to change panties after every spanking.\"\n\n\"Wait 'til we get back,\" Kent answered. \"I'm starving.\"\n\n\"I hear that,\" Bailey hitched up her jeans quickly. \"Getting lightheaded.\"\n\nThey moved up the stairs, zipping up their jackets tightly and left the apartment.\n\n\"How much was your stuff?\" Bailey asked as the cold air hit her face.\n\n\"Four fifty,\" he answered. \"But I didn't use all the potatoes.\"\n\n\"We'll split it anyway,\" Bailey confirmed. \"Just make sure we share the rest.\"\n\n\"Right.\"\n\n=============================\n\nThey walked across the street and, with a polite nudge, Bailey got them headed for the small park that allowed them a shortcut to the grocery store. She didn't care to cut through the place late at night, but as long as she had Kent and they had daylight, she didn't mind.\n\nWalking felt awkward and she couldn't figure out why. They kept bumping into each other when they moved, as if they'd only learned how to use their feet yesterday. Bumbling along like this, trying to figure which one of them owned the clumsiness, they came to a narrow spot in the path she'd chosen.\n\nKent stopped there, letting her go first, but after she passed through, he stayed behind, causing her to stop and look back at him, perforce catching him staring at her ass.\n\nBailey's eyes widened and felt a shiver.\n\n\"Here?\" she asked.\n\n\"What?\" Kent's eyebrows rose.\n\n\"It's cold,\" she pointed out.\n\n\"And you're standing still,\" he replied, making a palms-up gesture in her direction.\n\nShe looked around in a partial panic. No one else visibly lingered in the park, at least from her vantage behind the trees that lined the narrow path. Could she do this? A thrill rode up her spine. Yes. Yes, she could.\n\nQuick as possible, she unbuttoned her jeans and nervously turned around, pushing them down only as far as they needed to go.\n\n\"I-\"\n\n\"Fast, just one, okay?\" Bailey felt panic leeching into her voice.\n\n\"Alright,\" Kent's voice sounded breathless too.\n\nAnxiety and surprise had exactly the right effect on Kent. He struck her right cheek, dead centre, with a hard slap. The silence of the late October afternoon amplified the sound throughout the entire park and, as she pulled her jeans sharply back up over her cheeks, she realized the coldness of her flesh had amplified the stinging pain as well.\n\nShe gasped out, \"Six.\"\n\nWith both of them panting, they continued on their way to the grocery store.\n\n=============================\n\nKent had to give Bailey credit for one thing: she could smoothly transition from the absurdity as asking for a spanking in a public park to carrying on a normal conversation in a heartbeat.\n\nAlthough the logical part his brain had trouble cranking back up after an event like that, he spent most of the journey to the store and back trying to figure out how he'd ended up delivering that slap.\n\nIndeed, he had paused to let her travel through the narrow space between a series of cedar bushes. Then she'd turned back to him and complained about the cold. He had made a little gesture with his hand, a sort of upturned-palm pushing-you-forward sort of motion which Bailey had somehow interpreted as an indication he wanted to spank her.\n\nMaybe that's just the mood she was in?\n\nEither way, Kent recognized that he had consumed half the spankings she'd promised him for the night and he didn't want to use up anymore until they got back to their apartment.\n\nThat said, when they got back to the apartment, Bailey went down the stairs first, carrying a small bag of freshly baked rolls. Kent followed her, carefully holding the container with its pre-roasted chicken with both hands. Upon reaching the bottom of the stairs, she handed over the rolls as she shucked off her boots and immediately stripped out of her jeans.\n\n\"Deal's a deal,\" she pointed out.\n\n\"Right,\" Kent breathed, his eyes unavoidably drawn to Bailey's long, bare legs.\n\nShe walked down the hallway to her bedroom without removing her jacket, it's hem only half-covering her cheeks, and closed her door.\n\nKent shook himself and, still clasping both chicken and bag of rolls, moved down the hall towards the kitchen. As he passed Bailey's room, she opened her door and came out again. Their eyes met, briefly, before he noticed that she'd discarded her jacket and changed her panties. The black, wide-cut pair she held in her hand, while a lacier blue pair graced her body.\n\nWith a slight exhale and an upward tic of her chin, she walked past him, to his bedroom and carefully hung the black pair up with the others on his white board.\n\n\"Alright, then,\" Kent realized he'd been standing in the hallway, staring, and decided to continue to the kitchen.\n\nBailey disappeared back into her bedroom.\n\nAs Kent quickly laid out plates and utensils at the little table, a couple of tea towels for the still warm pots with vegetables and potatoes, Bailey came out again, now wearing the lacy, red panties she'd once lent to Laura.\n\n\"Huh?\" he asked, holding an extra large metal spoon he'd taken for the vegetables and a wooden spoon for the mashed potatoes.\n\n\"I was supposed to change every time, right?\" she asked. \"So I had to change twice.\"\n\n\"Oh.\"\n\nBailey looked at his hands and inhaled.\n\n\"You won't run out of panties?\"\n\n\"Should be okay,\" she said as she took a seat at the table. A shiver raced through her body when her bare flesh touched the chair.\n\nThey took turns serving the food onto their own plates and started eating.\n\n\"Good idea with the buns,\" Kent pointed out.\n\nHe felt something different inside him though, eating this way, with Bailey partially naked across from him. He ate slowly, more carefully, as if the sexual tension in the air used up so much of his energy that he couldn't devote very much to feeding himself.\n\nBailey, he noted, seemed to eat the same way, although he'd never really paid attention to the way she ate before. A small part of his mind noted that it made sense. Even as they made small talk about school projects and holidays and such, she knew she had to be ready at any moment.\n\nKent took a deep breath, knowing he couldn't eat anymore without breaking the tension.\n\n\"Should we do a couple?\" he asked.\n\n\"Mm-hm\", Bailey nodded in quick, jerky motion like she'd been waiting for him to ask, and stood up. \"Where?\"\n\nThe kitchen didn't leave them a lot of room for options, with the table crammed into the only space available. Bailey stood at the end of the table and braced herself against it, her upper body over top of the central plates of food.\n\n\"Good?\" she asked.\n\n\"Hm.\"\n\nShe looked back over her left shoulder at him, nervous with anticipation, \"What?\"\n\n\"Maybe put your knee up?\"\n\n\"Where?\"\n\nKent pointed at the kitchen counter on her right. She inhaled as she looked over that side of her body, then shifted over and lifted her right leg up to set her bent knee on the counter.\n\n\"Good now?\" she sounded irritated.\n\n\"Perfect,\" Kent said, taking a moment to admire how much of her he could see with her legs ninety degrees apart.\n\nHer orientation pulled the red lace taut against her cheeks from where it flowed smoothly underneath her body. From this position, her left cheek didn't really recommend itself as a target, but the right she flexed and exhibited temptingly.\n\nKent laid his hand on her tightly clenched rear, feeling her shiver with trepidation.\n\nWhen he struck her, she shrieked loud enough people might hear outside. \"Seven!\"\n\nHe pulled his hand back and slapped her left cheek again, eliciting a louder, \"Eight!\"\n\n\"Good,\" he announced, and returned to his seat.\n\nBailey exhaled with relief, still bent over their table of food, and slowly righted herself. Her shoulders relaxed then, and she quickly popped off to her bedroom. When she returned, bouncing and visibly more at peace with herself, Kent saw that she had switched to a black thong.\n\nWith a bit more energy and dedication, they dove into their food. Conversation flowed more freely as well, as if the spanking had broken open a dam of awkwardness across the table.\n\nAt the conclusion of dinner, they cleaned up the table, put away the food and started on the dishes. Kent started washing while Bailey walked back and forth across the small space and packed up the food. He glanced over just once as she leaned over the table to wipe it clean, burying the thin strand of material between her cheeks, then went back to focusing on his dishes, knowing he only had four spankings left this evening.\n\nWith most of the work done, Bailey started drying dishes off the rack. The very last thing he washed was the wooden spoon, which, as the drying rack lay empty, he handed directly to her. She dried it with the dish towel and their eyes met.\n\nKent raised a confused eyebrow, wondering what she meant by staring at him like this. Bailey replied by looking down at the wooden spoon and back at him. She sucked in her lips, bit down on them and gave a jerky little nod as she handed the dried spoon back to him.\n\n\"I-\" he started to say, but she had already put her hands on the counter and stuck her hips out.\n\nHe hesitated, but moved around behind her. They'd done a lot of spankings over the past few weeks. Some he had delivered on her bare ass, some over her pants. Sometimes she bent over, sometimes she lay in his lap.\n\nBut he had always used his hand. Now, out of nowhere, Bailey offered him this.\n\n\"You sure?\"\n\n\"Mh-hm,\" she nodded.\n\nKent had no real idea how much the spoon might hurt. While it didn't have a lot of heft to it, the tiny size of its surface would mean that it would focus all of his energy into a very small amount of her flesh.\n\nHe touched it to the thickest part of her rear, in the middle of her right cheek, figuring that if the force applied turned out way more than he expected, at least she had the most padding there.\n\nBailey inhaled and held her breath, which Kent took for all the cue he could expect.\n\nWith a careful backstroke which barely bent his elbow, he drew the spoon back and, with a quick flick of his wrist, brought it down on her cheek.\n\nA puff of breath escaped through Bailey's mouth, followed by a slight snort through her nose.\n\n\"I'm not counting that,\" she said. \"If I wanted pity, I'd go somewhere else.\"\n\n\"Fine,\" he said, wound up harder and slapped with the spoon.\n\nThis time she hissed, sucking air in through her teeth.\n\n\"Ha,\" Bailey exhaled after a moment, \"Nine.\"\n\n\"Wow,\" Kent remarked.\n\n\"What?\"\n\n\"The mark it left on you,\" Kent admired the little red ellipse.\n\nBailey tried to twist around but grew clearly frustrated that she couldn't get a good look. \"I need to see,\" she said urgently and hopped off to her bedroom.\n\nKent followed her, still carrying the spoon, and found her with her right side facing the mirror she'd left leaning up against the wall, examining her cheek.\n\n\"That is a weird mark,\" she said. \"Normally, it's just this sort of generic redness.\"\n\n\"Yeah,\" Kent admired both the mark and the protruding hip pose she'd adopted to examine it.\n\n\"Well?\" Bailey asked.\n\n\"What?\"\n\nShe nodded at the wooden spoon, \"Do the other side?\"\n\n\"Oh, right, yeah,\" Kent said.\n\nBailey rotated so her left side faced the mirror. Kent concluded, based on the intensity of her gaze, that she wanted to see everything happen. He consequently came around the far side of her body and reached over her back to lay the wooden spoon on her left cheek. As he touched her skin, she inhaled and bit her lip, her eyes entirely focused on her own body.\n\nTrying to match the same force he'd used before, he wound up and brought the spoon down on her cheek with a loud, sharp smack.\n\nBailey winced, closing her eyes and groaning as her knees partially gave out.\n\n\"Ten,\" she whispered.\n\nA tense moment followed, as she opened her eyes slowly and looked at the mark he had left.\n\n\"Good for now?\" she asked.\n\n\"Mh-hm,\" Kent nodded, watching her looking at herself in the mirror, turning side to side.\n\nBailey straightened finally, eyeing the wooden spoon.\n\n\"Well,\" she said, \"that was... different.\"\n\n\"Yeah,\" Kent turned it over in his hand, \"I think I prefer the bare hand, though.\"\n\nBailey nodded, snatching the spoon from him a little too quickily, \"I'll just put this way, then.\"\n\n\"Sure,\" Kent watched her walk past and followed her out of the room.\n\n\"Later,\" she waved over her shoulder.\n\nBy the time he got back to his desk, walking slightly awkwardly, Bailey came in behind him. She hung her sixth pair of panties up on his board and consequently had changed into a lacy blue pair.\n\n\"This is my last pair,\" she said. \"And I'm not walkin' around naked.\"\n\nKent checked the clock in the corner of his computer screen, \"I still got a few hours.\"\n\nBailey nodded, biting very slightly at her lower lip. \"Right.\"\n\nShe walked out of the room, giving him a delightful view of the two angry red ovals on her cheeks.\n\n=============================\n\nBailey sat down at her desk very carefully. She counted herself fortunate that Kent had used the spoon on her upper part of her rear. By leaning forward, the sore flesh didn't touch the seat of her chair.\n\nReaching back with her right hand, she let the coolness of her fingertips sooth her tender flesh. She couldn't say for sure if the sudden, stinging shock of the spoon did more for her, or if the coolness after the pain did the trick, but a surge from inside her rushed down her spine and she squeezed her thighs together.\n\nShe pushed her left hand down between her legs and felt her eyes blur. Bailey didn't care right then that she'd left the door open. Kent surely meant to wait at least an hour or so before collecting the last of his due.\n\nHer body started to slouch and, unaware of her fragile state, she let the sore spots on her cheeks touch the fabric of her chair.\n\n\"Ha!\" she whispered, sitting bolt upright.\n\nDammit, she cursed inside, feeling the spell break. It's better to wait anyhow. What if he came by and saw me playing with myself?\n\n=============================\n\nBailey had so deeply ensconced herself in her homework that she felt a pang of surprise when Kent showed up at her door.\n\n\"Hey,\" he said, his voice a little slow and his eyes bleary.\n\nA faint smile lay across his lips as he leaned his right shoulder against her door frame.\n\n\"Oh, hey,\" she felt her heart flutter, her eyes involuntarily tracing down the muscles of his right arm to his hand.\n\nShe counselled herself to patience, waving him into the room with a tired arm. He nodded in thanks, passing behind her chair as she rotated in the opposite direction, always enjoying the thrill of having him out of her sight, somewhere behind her. For a moment, Bailey listened to the swish of his jeans as he walked, until he reached her bed and leaned back on it.\n\n\"You busy, too?\" he asked.\n\n\"Yeah, got a lot to catch up on,\" she agreed. \"This shit never ends.\"\n\nKent, propped up on her bed with his arms behind him, looked up at the ceiling and puffed out his chest through his white t-shirt in a long, heavy sigh.\n\n\"Yeah, that.\"\n\n\"You still bitching about that group project?\" she scolded him.\n\nKent laughed, \"I was about to. But, thanks.\"\n\nBailey smirked, \"Better.\"\n\n\"Christ, how long until we're done?\" he asked, looking at the ceiling again.\n\n\"Assuming you mean school,\" she replied. \"We've got three more semesters.\"\n\nKent rubbed the bridge of his nose.\n\n\"For the other thing,\" she said. \"We have two more spankings. If you, y'know, have stopped feeling sorry for yourself.\"<br >\"Alright, alright,\" Kent acquiesced, patting his lap. \"Get your ass over here.\"\n\nIn his lap, Bailey tried not to wilt. And the lights are still at full brightness.\n\nShe had needed full lighting to do her homework and Kent hadn't thought to dim the lights on his way in. On the other hand, he'd seen her in her panties all day long, so she shouldn't let it bother her that much.\n\nBailey put her hands on the bed to his left, then climbed up with her knees on the other side of his body. She arched her back and lifted her hips up as high as she could, bending more than ninety degrees at her waist, feeling her muscles stretching down the back of her legs.\n\nThis left everything from her knees up to her lower back tight. It meant her muscles wouldn't offer any give when he spanked her.\n\nKent's right hand caressed her cheeks, raising frail little hairs down her legs and up her spine. His fingertips found the spot on her right cheek where the spoon had left its mark. Then his palm rested there too, his fingers splayed out.\n\nShe mostly suppressed a moan when she realized he'd chosen that as his target.\n\nKent inhaled as if to speak, probably intending to ask, as he always did, if she considered herself prepared, but he must have remembered the arrangement by that point: she got a discount in exchange for yielding to him the element of surprise.\n\nWaiting patiently, she steadied her breathing, feeling his hand move away from her flesh. He could strike any time, so she kept her head turned away and closed her eyes, concentrating on inhaling and exhaling without any attempt to steel herself for -\n\nHis hand slapped her rear without warning, shaking her whole body and the bed with it.\n\nBailey groaned without thinking about it. \"Eleven,\" she muttered, mostly into the pillow.\n\nIn her mind, his hand hovered in the air behind her, looking for a place to lash out. If only she'd thought to angle the mirror properly, she'd be able to watch it happen.\n\nBut I don't want to watch. It's supposed to be a surprise.\n\nThe last strike landed at the exact same place, with the same amount of force, taking out the last of his payment from already reddened flesh.\n\n\"Twelve,\" she moaned, lowering her hips and stretching her body out so her panty-clad not-so-private parts settled over the erection that strained at his jeans.\n\nKent, perforce, rested his hand on her abused right cheek, gently rubbing it in circles. Bailey let the motion move her whole body, exaggerating the effect so that she ground against him. Even through his jeans, she felt where his manhood pressed at her, shifting herself around with the motion of his massage so the stiffness poked her where she needed it.\n\nGiven the strength of his 'massage', mashing her body down into his lap, it seemed perfectly reasonable to let out a low moan of approval. They could both pretend it had to do with the massage and not the fact that the stiffness of his jeans, backed by his rock hard penis, rubbed against her lips over her clitoris.\n\nShe parted her legs just a little, not so obviously, but enough to make a better poke.\n\nIt's not my pillow, but it'll do.\n\n\"Mm-hm,\" she encouraged gently, and pushed her face down into her pillow.\n\nBailey felt her orgasm on its way, no more or less avoidable than an ocean wave cresting and breaking across a beach. Even if Kent stopped all motion now, her body would probably carry through.\n\nBut he didn't stop. Instead, his pressed even harder into her sore flesh, grating at the reddest part of her cheek, grinding their genitals together at this unorthodox and altogether pleasurable angle.\n\nBailey moaned into her pillow as her body seized up. If Kent still thought she made such noises out of appreciation for the massage, he had to be dumber than a sack of textbooks. Heedless of how obvious her orgasm had to be, she rode out the pulsing of her vaginal muscles and eventually turned her face aside from the pillow.\n\nAlongside her own panting, she heard Kent taking deep, relaxing breaths.\n\n\"Mm,\" she murmured, indicating with a twitch she wanted to get up.\n\nHe seemed to have figured this out already, as he'd eased up on the massage, and he let her stand.\n\n\"Good for the night?\" he asked.",
        "\"Three dollars should cover me,\" she replied.\n\nMoving gingerly, he stood up and walked awkwardly to the door.\n\nBailey, watching him go, wondered if he'd even noticed her orgasm. It seemed like he ought to have cast her some kind of accusatory look, or some half-insulting comment, but he merely left after quietly saying, \"Good night.\"\n\n=============================\n\nKent returned to his room, locked his door, and immediately stripped out of his jeans. His jizz hadn't yet leaked through his shorts to stain the pants, so he owed his cotton boxers a vote of thanks for that. He wiped himself clean, grabbed a clean pair of shorts and, after checking the coast was clear, stepped across to the washroom with a towel around his waist so he could properly wash himself off.\n\nThat was certainly something.\n\nHad Bailey noticed his orgasm? Sure, it had been hidden behind a thick layer of denim, but shouldn't she have noticed the way he twitched? She'd buried her face in the pillow, thoroughly enjoying the way he massaged her sore cheeks. But he'd enjoyed spanking her, and then feeling her up afterwards, way too much for his own willpower.\n\nAs orgasms went, that one counted as one of the better ones in his young life.\n\nHow could she not have noticed?"
    ],
    "authorname": "xtorch",
    "tags": [
        "spanking",
        "stripping",
        "nudity",
        "payment",
        "exhibition",
        "orgasm",
        "masturbation"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/two-hundred-dollars-ch-05"
}