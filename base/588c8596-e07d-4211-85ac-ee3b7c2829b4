{
    "title": "\u00c6gir's Wife Ch. 06",
    "pages": [
        "Once more Kirst sat alone in the break room. She stared at her chicken salad that she had picked up at the corner shop on the way to work. The morning had gotten off to a worse start than the night before had ended. \n\nBjorn was up and gone before she even woke up. He never did that. He always woke her up gently with a kiss and smile. Her chest tightened as she thought about all that had transpired. Not just yesterday, but in the past year. \n\nHad it been just last year that she had sat at this same table, giddy with excitement at their messages? Sven's messages, she had thought at the time. \"Oh, Sven,\" she whispered as she pushed the unpalatable greens and cardboard chicken away. \n\n\"Who is Sven?\" \n\nShe inhaled and forced a smile, though she doubted that she could fool Roz for much longer, but she had to try. \"Bjorn's oldest brother,\" she stuck as close to the truth as she could.\n\nRoz nodded her head as she took the seat across from her at the table. \"In-laws. Know that is trouble I can understand.\" She pushed the plastic bowl back towards her, \"Is he as hot as the other two?\"\n\nKirsty was too tired to argue with her friend over eating, so she picked up the fork and began playing at moving the food about as she delayed. How did she answer that one? Sven had never had Bjorn's raw masculine beauty. Or Mikael's darker good looks. \n\nAnd at forty, time and the sea had taken their toll, but from the moment she had first seen that photograph on his profile, there was something about the man that had drawn her. Those piercing blue eyes that jumped out at you, held your attention and did funny things to your tummy with their intensity. \n\nShe screwed her face up in a grimace as she pushed the bowl away once more. The mild nausea that she had battled for weeks seemed to have grown into a storm. She closed her eyes and inhaled, trying to calm her tummy. \n\nShe was on the edge of tears again too just at the thought of the man. She had learned the hard way how difficult it was to cry and vomit, but she feared that was exactly what she was about to do...if she did not get her emotions back under control. \n\nBut had they been? In the year since that first message, she had been on an emotional roller coaster of incredible highs, deep lows, twists and turns that threatened to throw her from the ride of life. After a lifetime of just doing what everyone else expected...including bottling her emotions...it had been both a thrill and frightening. \n\nA cold paper towel was pressed to the back of her neck as she opened her eyes and turned to see Roz standing next to her. \"Ta,\" the shortened British version of 'thank you' was all she could manage at that moment. \n\n\"So is it official?\" Her friend's smile was tight and Kirsty could see the woman's pain just beneath the surface, \"Are you pregnant?\"\n\nShe shook her head, \"We still don't know. In all the...\" What did she say...chaos, confusion, pain? \"I have not had the chance to get a test from the chemist yet.\"\n\nHer friend nodded as she picked up the practically untouched food off of the table and tossed it into the bin. She walked back over to the table and pulled Kirsty's chair back, \"Ain't you a lucky girl, working in a hospital? And with a best friend, who knows a wonderful ultra sound tech, let's go, girl.\"\n\nKirsty shook her head, \"No, really, I shouldn't. This is something...well, I should wait for Bjorn. Pick up a home pregnancy test and if it is positive...shouldn't that be something we do together? The baby's first ultrasound?\" Her hand unconsciously went to her tummy as she felt it revolt and roll slightly with gas now too.\n\nBut after almost six years as friends, she should have realized how futile that was. Roz pulled her to her feet and dragged her out of the break room proclaiming, \"I'll video the whole damned thing on your phone for you to show him tonight.\"\n\nKirsty thought about protesting, but the truth was that she wanted to know. One way or the other as Roz led her down the hall. Then she could re-group. Perhaps find that logical side of her brain that seemed to have been on hiatus for the past year. Get on with her life. Their life. Come up with a plan. Any plan. \n\nSo why did all of that sound so hollow? And why did something that she had wanted for so long seem... Less than she had hoped for? She loved Bjorn. She should be ecstatic to be carrying his baby...if she even was. But all she could think was...I love Mikael too. \n\nA pain pierced her side as she thought of him. Yes, damn him, she loved Sven too. Damn the man to Helveti as the elevator closed and her friend smiled at her through her own pain that was written on her face. Life was not fair sometimes. \n\n***\n\nBjorn checked the time on his phone...again. He had left the apartment early, thinking he would get to work before the office filled up. Perhaps have a few moments alone to think, try to figure out what now. It was not the old fort that Mikael had built him, but there were not many places he could go in the city to find peace and solitude.\n\nHell, even the peace garden in the park where they took Monika near their apartment was usually overrun with loud teenagers, who had been pushed from the swings and playgrounds, by adults who told them they were too old to play, that it was for 'little' kids. Or worse yet...the homeless. He still could not get used to that. How could any society call themselves civilized when their mentally ill were forced to live on the streets?\n\nAny hope of even a few moments of solitude had been futile as he arrived at the station to find that the trains were not running...because someone had thrown themselves or been pushed under one. \n\nHe shook his head. He could almost understand that sense of futility. Only a few months in this madness and he felt like he was losing his mind. Now this latest disaster with Greta...and a baby? \n\nShit, he had forgotten to pick up a pregnancy test. Now he was running late. It would have to wait until he got home. He promised himself that no matter what he would leave the office at five. No more late nights for a while. \n\nAs the doors opened at the next stop, he noticed a heavily pregnant woman get on, holding the hand of a toddler. He frowned. Would that be Kirsty in a few months? Though their apartment was close enough for her to walk or take a bus if she were running late, still there would always be times when they needed to travel by Tube. \n\nThe carriage was even more packed today than usual of course. He had given up his seat for an elderly lady five stops back. He spotted a young man, probably in his teens, bobbing his head to music that was so loud that even with ear phones Bjorn could hear it three feet away. \n\nHe reached over and tapped the kids on his shoulder softly. The boy looked up with an angry scowl, \"What's your fucking problem, old man?\"\n\nHe drew back slightly at the harsh comment, but counted backwards from a million while he plastered a fake smile on his face. When he could finally speak without malice, \"How about offering your seat to the pregnant lady with the child over there?\" he said motioning with his head to where the woman and child clutched to the pole, rocking back and forth with each jolt of the carriage.\n\nThe teen shook his head and spat at him, \"Fuck you. If the bitch wants to breed that's her business. I don't give my seat up for no one. Equal rights, asshole.\"\n\nBjorn gripped the bar above his head tighter to keep from punching the little punk. He knew one hit would not be enough to release the anger and frustration boiling inside of him now. He had not resorted to physical violence...well, except against his brothers...since that day. But he was certainly tempted. \n\nThe older woman for whom he had given up his seat reached out her withered hand, \"It's all right, young man. I am getting off at the next stop,\" she said as she rose slowly from her seat. Bjorn used his body to actually block access to the space as he waved to young mother. She smiled weakly and dragged the child the short distance. \n\nShe nodded her gratitude and she practically fell onto the hard seat, gathering the child onto what little lap she had left. \"Thank you,\" she whispered as she looked down sheepishly.\n\nThe older woman patted the child's head, \"Yes, well dear, I am afraid there are not many gentlemen left in this world.\" She turned to Bjorn as he noticed the tears gathering in the younger woman's eyes. He grabbed the handkerchief out of his suit pocket and pressed it into her hand as the smile on the elderly woman's face broadened, \"Thank you, young man. Please give your mother my compliments on raising such a fine son,\" she said as the train came to a stop. \n\nBjorn used his size to clear a path to the door for the woman. He needed to get as far as he could from that little shit anyway. Honestly, if he did not have a teleconference with Singapore in fifteen minutes, he would have just gotten off a couple of stops early and walked, perhaps cooled off a bit. \n\nAs it was his mind could not stop playing it all over in his mind. What were they doing here? They did not belong. He missed the sea so damned much. It was not even like his 'generous' salary went all that far. Their standard of living had actually been better on the Holding. \n\nHe sighed as his shoulders slumped, but if she was pregnant, he dared not take her back. Not until after the baby was born at least. He would not risk her health or the child's. No, they were stuck here...probably for another year at least. \n\nHe yearned just for the smell of the sea, a soft breeze off of Njord's kingdom. Perhaps he would rent a car for the day and take Kirsty and Monika to the beach this weekend. Not that that helped much since this was just Monday and the whole week was getting off to a crappy start. \n\n\"Fuck,\" he cursed under his breath as he remembered that Kirsty's mother had texted on Saturday wanting to reschedule their monthly brunch. Nancy Dickens was barely tolerable when he was in a good mood, he dared not think about facing her in this one. But perhaps things would improve during the week. \n\nHe smiled as the train doors opened at his stop. He noticed the young man, who had refused to give up his seat shove his way towards the door. Bjorn grinned as he put out his foot at the last moment. The little shit almost toppled onto the platform. A couple of people cheered and several others cracked noticeable smiles, including the young mother as her gaze met his with gratitude. \n\nHe returned her smile as he exited the carriage, reminding himself to definitely pick up a home pregnancy test on the way home. He knew he should be more excited. So why could he not see this baby as the blessing it was?\n\n***\n\nKirsty shifted uncomfortably on the hard plastic covered table. The paper beneath her crinkled as she moved. \n\nThe woman that Roz had introduced as Crystal frowned as she felt around her abdomen, \"Are you absolutely certain about your dates?\"\n\nKirsty held out her hand and Roz passed her phone to her, beginning instead to video with her own mobile. Since her periods had never been totally regular, she had always tracked them. She had been using this app for close to two years, looking for any pattern, in hopes that once she and Raj were settled it would make conceiving easier. \n\nShe opened it and nodded, \"Yes, April sixth,\" she found it hard to suppress the smile as she remembered how thankful she had been that it waited until the Sunday after Mikael had gone back to the ship before starting. She sighed as she felt almost a physical pang in her side at the thought.\n\nThe woman's frown deepened, \"Was it a regular period?\"\n\nKirsty shook her head, \"Not really. It was barely more than spotting for a few days. But my periods have never been that normal.\"\n\n\"And before that?\"\n\nKirsty frowned as her tummy turned over. She could hardly forget that date, \"February 18th,\" she replied without consulting her app. \n\nIt had been her first day back at work. She had gone into the loo to cry that once again there would be no baby. It had all seemed so final then. And even now, she choked back tears as the woman shook her head.\n\n\"That's better.\" Her forehead creased a bit as she pushed especially hard just above Kirsty's belly button, \"Was that one normal? Well, normal for you anyway.\"\n\nKirsty frowned as she opened the app again just to verify her memory. She shook her head, \"Not really. It was just three days of spotting too. And usually I get really bad cramps. The past couple of times though I haven't. Thankfully.\" \n\nKirsty brushed the tears from the corner of her eyes with the back of her hand, \"Things have been a bit...stressful lately. I just figured that was the reason for it all.\" \n\nThe woman smiled and nodded, \"Maybe. So when was your last really heavy period?\"\n\nKirsty checked the app once more, \"Mid-January, the nineteenth.\"\n\nThe technician smiled and typed something onto the screen. \"Is everything all right, Crystal?\" Roz inquired.\n\nThe woman reached out her hand and squeezed Roz's hand reassuringly, \"Relax. Nothing serious. There just might be some discrepancy with how far long your friend is. That is all.\"\n\nKirsty smiled as her heart beat just a tiny bit faster. As illogical as it was, some part of her almost hoped that there was. As troublesome as it could be, she held onto the tiny glimmer of hope that perhaps Mikael too was competing in the 'sperm wars' as he had called it.\n\nKirsty and Roz stared at one another as the woman typed away, \"So does that mean she is definitely pregnant?\" Roz asked\n\nCrystal smiled, \"Nothing is definite...just yet. But the probability is pretty high.\" She smiled at Kirsty then as she held up a long white wand and a tube of jelly, \"Ready to find out for sure?\"\n\nRoz squealed and held up her phone, aimed right at Kirsty's bare midriff. \"Okay, go ahead now.\"\n\nKirsty inhaled and braced herself for whatever was to come. \n\n***\n\nMikael looked up from his cup of morning coffee as Sven entered the tiny galley. After being up half the night thinking about her and then finally falling asleep with his head on his desk, this day had gotten off to a horrendous start. \n\nThey had barely made open waters when a storm had blown through, making the seas some of the roughest they had ever seen. His brother at the helm was probably the only thing that had kept them from capsizing. \n\nToo bad the man did not know women half as well as he knew Njord and Ran. Sven only nodded as he poured his own cup of strong, black coffee and shook his head as \u00c6gir's Captive rolled a bit too much with one of the residual large waves. \n\nHis brother took the seat across from him rather than head towards his cabin down the hallway. They drank in silence for a few moments before he spoke, \"I will finish the cabin when we get back.\"\n\nMikael nodded uncertain what to say. Sven had not moved back into his bedroom at the Holding since they left. Not that he blamed him. He wished like hell he had somewhere else to sleep. \n\nHis mother had steadfastly refused to move back in, saying that she had not been the bride in a very long time. Besides why would she give up a warm spot next to his father for that monstrosity of bed all alone most nights. \n\nSo he was the one that slept all alone on the second floor that had once teemed with life of his brothers, his daughter...and his wife. \n\nHe swallowed the almost cold, bitter liquid as he reminded himself that she was not...not anymore. Bjorn's wife. Bjorn's new baby. \"She might be pregnant you know,\" why those words spilled from his lips he did not know.\n\nThe almost painful look and quick intake of breath from his elder brother should have brought more satisfaction than it did. But they were not, \"Seems little brother got the job done that we could not,\" he instantly regretted the bitter words as Sven stood and walked back to the counter. \n\nSven stood with his back to him for a long moment before pouring another cup of coffee. When he finally turned back to face him, his face was a dark and unreadable mask, \"I'll finish Niflheimr when we get home,\" was all the man said as he picked up his cup of freshly poured coffee and this time did walk down the hall to his cabin.\n\nThe cabin where she had stayed during that first crossing after they kidnapped her. The cabin where Mikael had first tasted her sweetness. Her blood and her delectable little cunt. If he concentrated very hard he could almost hear her sweet cries as she came on his tongue. He cursed his cock that was hardening inside his pants. \n\nWhat had happened? What had gone wrong? How had they lost her? And they had lost her. \n\nHe cursed as he stood from the table and poured himself another cup of hot black coffee to take with him to the bridge. The helm was his for a few hours. \n\nHe remembered how that had once brought him such comfort, but nothing did any more. He missed his baby girl. He missed his little brother. And he missed her. \n\n\"Lilla gumman,\" he sighed resignedly. \n\n***\n\nSven tossed and turned in his bed. He was bone tired after one of the biggest tests of his life. He should be exhausted and his body was. His mind though could not stop thinking...about her. \n\nHe swore he could smell her sweetness on the pillow. Though he had long since changed the sheets from their last encounter here on the boat...when she had come so willingly to him. He chuckled, more like she had taken him. \n\nHe felt like an elephant was sitting on his chest. He could barely breathe. The pain that sliced through him was deeper than anything he could have imagined. \n\nHow? How had they come to this? \n\nHis own stupidity. His. \n\nAnd now it was too late. Not only had Bjorn taken her back to the very job that he had been so worried about, but now there was a new baby tying them to that world even more. Bjorn's baby. A child that might never know its true inheritance...the sea. \n\nAnd it was all his fault. He turned over and punched the pillow, more out of frustration than any vain attempt to find a comfortable position. He was wise enough to know that he would never again have that, because the only comfort he had ever known in this world was in her arms. \n\n\"Kirsten,\" he whispered though he knew that she could not hear him a thousand miles and another lifetime away.\n\n***\n\nThe technician smiled, \"This is going to be cold,\" she warned, but her words did not prepare Kirsty for the slimy wetness that pooled just below her belly button. \n\nBoom...boom...boom...boom. The sound of drums beating quickly and loudly filled the tiny curtained off space as the technician reached over and turned a dial quietening the noise a bit, but it could still be heard in the background, \"Is that?\" Kirsty barely dared to breath as the wand pressed deeper into her abdomen as Crystal began moving it around her stomach.\n\nShe nodded her head with a smile. \"Yes, that's your...\" she paused and pressed the instrument even harder just above her pubic bone. \"That's your little girl's heart beat.\"\n\nKirsty shook her head. It had been years since her anatomy and physiology course in uni, but that made no sense. If she remembered correctly, you could not tell a baby's sex using ultra sound before eighteen weeks? But perhaps her information was out of date? \"But how can you tell it's a girl? Isn't it way to soon.\"\n\nThe woman opened her mouth to answer, but then she frowned and closed it. Her face scrunched tightly in concentration as she studied the screen to her side. \n\nKirsty's heart beat faster. Something was wrong with her baby. Suddenly nothing else mattered as her vision clouded over. \n\nRoz noticed and dropped the phone, \"What is it, Crystal?\" She could hear the alarm in her friend's voice and they reached out for one another at the same time. \n\nThe woman turned and her smile was tight but it was a genuine one nonetheless, \"Don't panic. It is nothing serious, but I do need Doctor Patek's opinion. I won't be gone long.\" She stood and turned off the monitor. Looking right at Roz, she added, \"I mean it...do not worry, understand me?\"",
        "Roz sighed and nodded at the other woman as she squeezed Kirsty's hand, \"We'll try, I promise.\"\n\nKirsty squeezed her friend's hand even tighter, regretting that she had allowed the woman to pressure her into this position. Them actually. She knew how hard this must be for Roz. She was beginning to suspect how her friend had come to know the other woman. \n\nAs if to confirm that assessment, Roz smiled weakly, \"I trust her,\" she squeezed Kirsty's hand tighter though the smile did not reach her remarkable cat like eyes.\n\n***\n\nBjorn shifted nervously from foot to foot as the train jostled along. Even though the carriage was practically empty this time of day, he had chosen to stand. He was too full of nervous energy to sit. \n\nThe message from Roz had been cryptic, 'Get your sweet buns home NOW.' Though he had sent a dozen or more texts during the ten-minute walk from his office to the station, there had been no reply. Perhaps there would be one waiting when he got off at the next stop.\n\nBut even that seemed to be taking longer than usual. Damn, why did he have to work so far from their flat? He could not call it home...it would never be that. \n\nThen again any place that she was should have been all he needed. Except...sometimes it felt like all of this was crashing in on him. Stifling and choking the life from him. He had barely been able to concentrate during the meeting this morning...and had gotten his ass chewed out for it. One mistake? One fucking mistake and he got screamed and yelled at. \n\nThe train came to a stop and he was out the door before it even fully opened. He took the stairs two at a time, not even bothering to wait for the elevator. He was slightly winded by the time he climbed the three or four flights. What was happening to him? Too much time sitting at a desk. The only exercise he got was the occasional trip to the park with Monika. \n\nThat did not fucking matter now though. He checked the phone again but there were no texts from Roz or Kirsty. Just three from work. He shook his head, let someone else deal with it. The damned company had managed before he started working there and they would when he... When he what? Went home? \n\nHe debated calling Roz or Kirsty, but the apartment was only a five-minute walk from the station. So he turned in that direction determined to make it in three. \n\nNo, if his wife was pregnant, then going home was not an option. \n\nHis mind was awash in all the worst case scenarios that could have prompted Roz's text. Had something happened to Kirsty? Was something wrong with the baby? If there even was a baby...though he was almost certain there was. \n\nHe increased his pace from a power walk to an actual jog. Only the stares of those passing him on the busy street kept him from breaking into a sprint as his fears grew in proportion in his fertile imagination. \n\nWhen he reached their building, he did run up the stairs two and three at a time. He was so nervous that he fumbled a bit getting his key into the lock, but it finally gave way and he opened the door to be hit squarely upside the head.\n\n\"Consent! You arrogant, pompous sons of bitches. C-O-N-S-E-N-T! Safe! Sane! Consensual!\" Their friend screamed as she kept beating him about the head with her open hands. \"No one ever teach you assholes that?\"\n\nShe stepped back as he put up his hands, \"You fucking kidnapped her! Kidnapped! I should call the god damned police.\"\n\nBjorn's shoulders slumped at Roz's words. Maybe they deserved everything that had happened to them? Could prison really be all that worse?\n\nYeah, yeah, it could. Any place without her would be living hell. He felt the tightness in his chest as he remembered that was exactly what Mikael was enduring. Not just their wife, but his child as well. How had it come to this?\n\n\"Is she okay? That's all that matters,\" he replied and he meant it. Prison...even if something had happened to their baby...none of it mattered except that his wife was all right. He tried to push past Roz but her short, curvy form blocked his path to the bedroom. \"Kirsty?\" he called out.\n\n\"Shhh, you asswipe. She just fell asleep a couple of minutes ago. After crying her eyes out for over an hour about how much she missed Mikael...and this Sven jackass. I want an hour alone with that bastard with my floggers and whips,\" her words revealing that his wife had finally come totally clean about their situation.\n\nHe could empathize with her about getting his oldest brother on the end of his floggers...but not for fun. More than once he had thought about stripping the skin from his back. He would certainly love to see Roz have a go at Sven.\n\nHe shook his head. Kirsty was all that mattered. \"Is she okay?\" he asked again with a heavy sigh as he collapsed on the couch.\n\n\"If you mean physically? Then yes. Considering she is almost six months pregnant with twin girls that she does not who fathered, she is better than to be expected.\"\n\n\"Wait. What did you say?\" he stammered in confusion.\n\n\"Let me draw you a picture, boy genius,\" she said with a dark scowl and her hands planted firmly on her wide hips that blocked his path to the one thing on this earth that mattered most to him. \"Your wife was pregnant when you brought her back here. Those little girls could be any of the three of yours. And for some fucking insane reason that is as much a relief to her as it is a big problem.\" \n\nBjorn dropped back against the couch so hard that he actually felt the wood beneath the layers of padding. Twins? Little girls? Pregnant before they left the Holding? It all swam inside his mind. \n\nHe did not even give a damn as he felt the tears coursing down his cheeks. Crying in front of the woman was the least of his problems. \"What the fuck are we going to doing now?\"\n\n***\n\nKirsty swallowed back more tears as she opened her eyes. She looked about their tiny bedroom with disappointment. It was not like she actually expected to find herself back in her room at the Holding. Safely cocooned between Bjorn and Sven with Mikael smiling down at her in love. \n\nHer hand went to her tummy as she chuckled. She supposed it could be worse, if not for Bjorn she could have ended up on that stupid reality television show about women who did not know they were pregnant until they went into labor. \n\nAs if to confirm her thoughts one of the girls fluttered a bit. What she had assumed for the past few days was gas, she had learned was actually her babies' first movements.\n\nShe had to admit it all still seemed surreal. The one thing she had wanted most...a baby. Times two. And as problematic as it might or might not be, she really was happy that these little girls were theirs. And that was how she thought of it. Though biologically she knew that was not possibly, more importantly in her heart and mind, they were. \n\nShe sighed heavily, which brought her back to one thing, \"We will go home. I will take you back there.\"\n\n\"Of course, we will,\" Bjorn filled the doorway. \"I thought I heard you moving about a bit. Roz and I called Georgia to pick Monika up from school. They are all at the park now.\" \n\nHis smile was forced as he continued, \"I just hope that Roz tones things down enough not to scare the poor girl to death. The big mouthed Domme meets the wide-eyed innocent virgin may sounds like a hot porn, but... \" \n\nShe chuckled as she held out her hand to him, remembering her own first encounter with Roz's brash and completely unfiltered truth. But her friend as well as that popular book that made the headlines had been her first exposure to the lifestyle...and her own submissive nature. Though the casual nature of both had never appealed to her as much as Raquel Graffen's stories did. \n\nHe took her hand and brought it to his soft lips, \"I'm sorry.\" He shook his head and his hair that he had released from the ponytail at the back of his neck fluttered about his masculine features, taking her breath away as he sat on the bed next to her.\n\nHis other hand slipped beneath the duvet to move slowly over her tummy through the thin layer of cotton that was his shirt. He shook his head, \"Guess I was not imagining it.\"\n\n\"Imagining what?\" she asked with a frown, realising for the first time that perhaps this husband, the one who had chosen her, her first ally there, would not be as happy to learn that he must share paternity of their baby...babies...with his brothers. \n\n\"Last night, when you were on the cross and I ran my hands over your tummy, I would have sworn I felt the baby move,\" he whispered without taking his eyes off her stomach.\n\nShe chuckled, \"Yeah, I have been feeling tiny flutters for a few days now.\" She blushed, \"I thought it was gas.\"\n\nHe laughed but it was incredibly tight and forced. \"Are you okay? I mean really.\"\n\nShe reached out and squeezed his hand on her tummy, \"The doctor says everything is perfect with them and me, Bjorn. So relax.\"\n\nHe nodded his head, \"But still, twins? Wow.\" He frowned, \"I promise you, Kirsty, we will take the girls home. You have my word on that, even if I have to take both Mikael and Sven to the fighting fields. I don't want any of them growing up all cooped up here in the city.\" \n\nHe chuckled, \"As a little boy, I used to hate going into town because of all the taunting, but I swear one time on the playground here and I realized how idyllic my childhood really was. These princesses will have full run of the Holding just like I did when I was little. Monika misses it, you know,\" he sighed as he looked down.\n\n\"But Kirsty, not right away. After they are born. I can't take that risk with them or especially you. I know you said the doctor assured you that everything was fine, but still there are no guarantees, especially with something as complicated as twins.\" \n\nHe looked up at last, his eyes glistened with moisture as he pleaded, \"Please, I need you here with the best medical care available. Not over a hundred of kilometers from the nearest hospital and hundreds more from the specialist care that you and they need.\"\n\nShe sighed as she shook her head. She had known this was coming. She remembered the irrational and self-imposed guilt that he had felt when he learned of his mother's difficulties with his own birth. But even knowing that, she felt torn. \n\nStaying here for the next four and a half months denied Mikael and Sven the opportunity to bond with these babies...to watch them grow, feel them kick, be part of the whole process. \n\n\"And what about Mikael? Sven?\" she whispered.\n\nHis face tightened instantly, \"Sven can go to Helveti. He does not deserve to be part of their lives at all.\"\n\nShe squeezed his hand and gently brushed hair back from his face, \"He has made mistakes, but so have we all. And to deny him access to our babies is not fair, Bjorn. You know that.\"\n\nHe nodded reluctantly, \"And Mikael has been through so much already. Missing not just you but Monika.\" He looked just like that little boy must have as he brought her hand back to his lips and pressed it tightly, \"I know that, but he was there with Greta when she was pregnant with Monika. Maybe he can visit more, be here when the babies are born? But I need you safe. Please understand, Kirsty, please.\"\n\nShe nodded her head reluctantly, though she was not ready to accede this point to him. Still, all of this was new to them. Going from the possibility that she might be pregnant at long last by her 'husband' to being almost half way through her pregnancy with twin girls by her husbands...all in the space of a single day was a bit...overwhelming. \n\n\"Oh my sweet Freyja, we have to tell them,\" she whispered as she looked up at him.\n\nHe nodded his head slowly, \"Mikael. I'll tell him tonight when we speak.\"\n\nShe chuckled as she reached for her tablet, \"So that is who you talk to every night after I go to bed. I was worried you had some cyber slut on the side.\" She powered it up and opened the messaging app. \"But then I guess we have both been keeping our secrets since coming here, haven't we?\" \n\nThe screen popped up almost instantly, as his image and voice filled the small space. \"I wasn't sure if you had forgiven me yet, elskling.\" Mikael's smile broadened as he sighed, \"I am so glad that you did.\"\n\nShe shook her head and scowled, \"Oh, don't think you are getting off that easy, Sir. I owe you big time for this one. And your brat is making plans already.\" \n\nHe chuckled, \"I would expect nothing less from her.\"\n\nShe turned the tablet that had been Sven's Christmas present to her so that Mikael could see Bjorn as well, he frowned, \"Hey, little brother, what are you doing home this time of day?\"\n\n\"Don't worry. I did enough of that on the way home,\" Bjorn chuckled. \"It is just that we have some news to share with you.\"\n\nMikael's smile was incredibly tight and forced, \"I think I know what it is. And congratulations to you both. I am happy for you.\"\n\nKirsty shook her head, \"Well, you have half of it right. Yes, I am pregnant, Mikael. Eighteen or nineteen weeks along.\"\n\nShe giggled as she watched him trying to do the math in his head, \"Yes, that means I was pregnant already when we left.\"\n\nHe heard his quick intake of breath, \"So the baby could be...\"\n\n\"The babies,\" she corrected. \"Twins. Little girls.\"\n\n\"That means they could be any of ours?\" he asked.\n\n\"A bit more complicated even than that. They are fraternal, not identical, which means that they could have different fathers,\" she explained. \n\nHe shook his head, \"Is that really possible? I mean I thought...well,\" he stammered.\n\nBjorn chuckled at his brother's sudden discomfort. \"Yes, usually, when an egg is fertilized it immediately puts up a force field of sorts. But in this case, Kirsty produced two eggs. And if you remember, dear brother, there was ample opportunity at least once for all three of our sperms to be present in her body within a rather short period of time.\"\n\nKirsty could not stifle the girlish giggle at how red Mikael's face turned at the reminder of their one night of complete unity. \"Oh,\" was his only reply for a long moment before he shook his head, \"So what do we do now? I, for one, do not want my children growing up without me.\"\n\n\"Our children,\" Kirsty firmly injected, staring from one husband to the other. \"This silly game of guessing and claiming ends with these little girls. These babies are our babies.\" She inhaled and girded herself for the battle that she knew she was about to wage, \"All of our babies.\"\n\nMikael frowned but nodded reluctantly. Bjorn on the other hand shook his head violently, \"No, I told you, he gave up all claims to these children when he attacked you. Again. Sven will have no part in their lives or ours from here on out, I mean it.\"\n\nShe placed her hand on his shoulder, \"It does not work that way. This is family. Our family. Our babies. Or do I need to cut you both off again?\" she chuckled at the reminder of the time when their little girl's had most likely been conceived. \n\nJust her luck to have ovulated so close to the one time that she had enjoyed all three of their attentions in the space of a few hours. Her own jaw had dropped wide open when the doctor had after carefully examining her dates and the ultrasound given her a window for conception. \n\nAnd right in the middle of that was that night...and she knew in her heart when her daughters had been made...in love. The one moment in her whole fucking life when she felt most loved, wanted and complete. \n\nDamn it, she was a daughter of Freyja, the goddess of not only love, sex and fertility but of war. And she was going to fight to have that again...with all of them. Though she had no idea how. \n\nShe sighed and shook her head, perhaps if the babies or even one of them had been his coveted son, she could have used that like bait with Sven. She pushed that thought aside too. \n\nThat was another thing that was about to change...primogeniture did not even rule her countries monarchy anymore. It sure as hell was not going to determine her children's futures...any of them. \n\nThe sea was as much her girls' inheritance as it were any sons she might have one day. After all, they worshipped the goddess Ran right alongside Njord. So it was only right that her daughters have the choice to fish alongside their brothers...or not. \n\nBut one fight at a time, \"So how do we tell him?\" she asked the question that hung like the proverbial pink elephant in the room.\n\n***\n\nSven felt the stabbing pain in his chest as he stood frozen outside the crew cabin. He had used a minor note in the log book as an excuse to seek Mikael out. Seek out his brother at the time when he knew he would be online with her. Stupidly, he had hoped to overhear even a few words of her sweet voice. \n\nBut this was not what he expected. \n\nNot only was she really pregnant, but with twins. And there was every possibility that one or both were his. \n\nHe closed his eyes as if he could actually conjure that afternoon up again. The way she had touched him, tasted, moved on him. He was hard and throbbing instantly just remembering it. The very idea that in that moment he had given her life was enough to almost make him cum inside his jeans.\n\nHe smiled, maybe the fact that they were little girls and not the hoped for sons should have taken some of the joy from this moment. But it did not. He could almost picture them. Adorable little things with strawberry blond hair, blue eyes and their mother's freckles. His girls...\n\nAnd her body was already ripening and burgeoning with new life. When did babies start to move anyway? The idea that he would not get to watch her body change and grow with life, feel his babies move inside her, be part of this was more punishment than even he deserved. \n\nHe heard their mumbled good-byes and promises to talk again soon. To figure out how to handle him. \n\nHe would settle that one now as he stepped without knocking into the room. He saw Mikael's shocked gaze as he looked up from the tablet. He did not wait for the question, \"I heard,\" was all he said.\n\nMikael nodded his head and opened his mouth as if to say something, but he was not giving them that chance either, \"I will finish Niflheimr when we get back. Then we will bring them home.\"\n\nMikael shook his head, \"Bjorn wants to wait until the babies are born. Wants her near the best medical care.\"\n\nSven frowned, of course it made sense. \"Are there problems? With her? The babies?\"\n\nHe began to breathe again when Mikael shook his head, \"No, the doctor says they are perfectly healthy.\"\n\n\"Then they come home. We can stay in Oslow or Helsinki those last couple of weeks...as you did with Greta.\" He knew he was pushing things, knew that Mikael had every right to hate him for these past few months...especially now. \"I need you on my side on this one,\" he admitted reluctantly.\n\nThe silence was deafening as he waited for his brother to speak. What he would do if Mikael sided with Bjorn again he was not certain? Perhaps their mother could talk some sense into his baby brother, but he was not sure. A unified front would be much stronger.\n\nAt last, Mikael nodded his head, \"All right, but only because I know it is what she wants. I still have not forgiven you.\"\n\n\"Me either honestly. But right now the only thing that is important is bringing our girls home...all of them. Even if we have to fucking capture them again. They will come home to the Holding where they belong.\"\n\n***\n\nSven sat atop the roof of Niflheimr. They had been back two days and he had barely stopped long enough to eat a bit of the food that his mother brought him each evening. It was late now. The light at its weakest. He should probably get down and grab some sleep, start fresh in the morning. He was just so incredibly close to finishing. A few more shingles and it would be secure enough to be habitable. \n\nThen they could go after them. Bring her home. Bring them home. He had sworn Mikael to secrecy. She and Bjorn still did not know that he was aware of her pregnancy...of its implications. He wanted to keep it that way until he showed up at their apartment. ",
        "And if he could not convince Bjorn, then he meant it...they would kidnap her. Again. He was sure that baby brother would be right behind. Hell, he would probably be waiting for them when they docked on the Holding. He laughed as he imagined the look of rage on his baby brother's handsome face. \n\nHe reached down for the final shingle. He winced as he felt another sharp pain shoot up his arm and into his shoulder. His head swam and he struggled to breath. He toppled from his perch and fell the two stories to the hard ground below. \n\nPain sliced through him. He fought it back though his head pounded and swam. He fought nausea but lost in the end as he rolled just enough to vomit into the grass next to him. He could no longer even tell where the pain originated. That elephant on his chest was back...and it had brought friends this time.\n\nBut his legs too hurt...though that word was much too weak to describe the agony that was his whole lower body. He tried to focus through the fuzzy fog that encompassed his brain. Finally, he was able to make out his leg...twisted at an odd angle. The bone protruded and blood was pooling on the ground beneath him. \n\nHe turned and wretched again into the grass as wave after wave of pain washed over him. This sea was rougher than the one they had faced that day. And as he did then, his only thought was...\n\n\"Kirsten, \u00c6 \u00e6lske d\u00e6,\" as the darkness took him."
    ],
    "authorname": "Tara Cox",
    "tags": [
        "non-erotic",
        "love",
        "romance",
        "domination",
        "submission",
        "pregnancy",
        "master",
        "polyamory",
        "polyandry"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ashgirs-wife-ch-06"
}