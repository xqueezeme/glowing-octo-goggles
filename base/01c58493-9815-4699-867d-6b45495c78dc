{
    "title": "Wheels In Motion Ch. 03",
    "pages": [
        "*** This series was awarded the Most Literary/Genre Transcending award in the . Thank you to all my readers and all who voted. ***\n\nHello friend. Welcome to Chapter Three of my Wheels In Motion series.\n\nIf you haven't read Chapters One and Two, oh boy, are you going to be lost from the get-go. I mean, why would you want to do that to yourself? Go on, practice some self-care and catch up on the story. I'll be here when you get done.\n\nSpecial Thanks to my beta-readers, ArmyGal33 and Salandar, and my amazing editor, AwkwardMD. You'd be reading a lesser work without their efforts.\n\n~~ Arlington, Virginia, April ~~\n\nLIZ\n\n\"I have to go. Goodbye Liz.\"\n\nI wanted to say something to keep her there, to keep my friend talking to me, but Addison interrupted me by leaning down and gently taking my face in her hands. Then, before I realized what she was doing, she was kissing me on the lips.\n\nI hadn't been kissed by anyone in over a year, and I'd never been kissed by a woman. I didn't know how to react. In the first place, I'd had about two seconds to come to grips with Addison professing her feelings for me, feelings that were decidedly not what I thought our relationship had been based on. Secondly, the moment her lips touched mine, my mind went blank. The few times in my life I'd contemplated the idea of kissing a woman, I'd always assumed that it would be a nothing event for me, like kissing a sister or something.\n\nIt was not nothing.\n\nAs her lips touched mine, I felt a shock go through me; a little zing! Like the first time you kissed a cute boy in junior high, or when you'd been dating a new someone for a while but had been holding off, waiting to make the first kiss that much better.\n\nI opened my eyes and she held my face for a brief moment, unwilling to let me look away. Then she stepped around me and ran down the escalator into the Metro.\n\n\"Addison, wait!\" I yelled after her.\n\nI turned my chair towards the elevator down into the Metro station and saw a prominent \"Out of Service\" sign hanging on the doors. I cursed, then turned back to the steps.\n\n\"Addison, come back!\" I used my 'command voice', something I'd learned from Jo that I'd employed during emergencies in the back of a thundering Blackhawk. It echoed back at me from the stairwell. \"Addison! Addison! Goddammit Addison, get back here! You can't just run away after dropping that on me!\"\n\nWhen I heard the sound of the Metro train moving out of the station, I knew she was gone.\n\n~~ Tenleytown, Washington DC ~~\n\nADDISON\n\nI'd managed to stop crying by the time I got to Metro Center and had to change trains to the Red Line. Two different people asked me if I was okay. Six stops later I was in Tenleytown, and walked the last five blocks from the Metro to my apartment building. As soon as I'd come up above ground my phone lit up. A voicemail from Liz plus a slew of text messages. I didn't read any of them before deleting them.\n\nOpening the door to my darkened second floor walk-up, I chose not to turn on the lights and instead sat on my couch, clutching a throw pillow to my stomach and staring at the patterns the street lights outside threw across my tiny living room and kitchen. I'd never felt so empty.\n\nI'd done the right thing. Had I done the right thing? I'd fallen in love with Liz, with a straight woman. Had I fallen in love? I couldn't really say that I'd ever really been in love before. Would I know if I was in love? Could it have been just a stupid crush I could have gotten over if I'd kept my mouth shut?\n\nThere I was, all of twenty-nine years old, and still wasn't even sure if I'd ever been in love. I knew I was gay--there was no doubt of that--but since coming out in college I'd gone through a string of relationships with none lasting more than a year. I'd dated several women of whom I'd thought, \"This is someone I could date for a while.\" I'm not certain I'd ever had the reflexive thought, \"I could spend the rest of my life growing old with this woman.\"\n\nI closed my eyes and let myself picture it. Growing old with Liz. Sharing an apartment with her, planning vacations to faraway places together, cooking dinner for her when she got off work at the hospital and came home to me, trying to tease her in the morning while we got ready for work, her always getting the best of me no matter how hard I tried, having kids...\n\nThe last thought brought me up short. I'd always been deeply ambivalent about having kids. I was pretty sure that I didn't want to have one myself, and I was unsure about the idea of having a partner who wanted kids. But Liz had spoken about it on several occasions. While babysitting Kat and Megan's daughter, she'd said she wanted a kid as great as Caitlyn. After we'd spoken to Jo and Jill about their new baby, Liz had gone on and on about how she couldn't wait to babysit for them to get some snuggle time with little Eric.\n\nI pictured myself sitting on the side of a hospital bed, stroking Liz's arm while she held our newborn in her arms, a look of tired accomplishment on her face, and felt a smile on my own face for the first time since I'd run out of the bar. The realization made the smile vanish in a heartbeat, replaced by more tears.\n\nIt wasn't a question; I had definitely fallen in love with Liz.\n\nWhich presented me with a whole different question. Why had I let myself? I knew goddamn well she was straight. I'd already felt the hurt from that first night when she'd told me, almost as if embarrassed, like she needed to apologize to me for not being gay.\n\nI kept thinking back to my other relationships, ones I'd sabotaged in one way or another. Why did I let myself fall in love, maybe for the first time, with someone whom I absolutely knew nothing would ever happen?\n\nI sighed loudly into my empty apartment. \"You're a fucking coward, Addie, that's why,\" I said into the silence, \"Falling in love with someone who's never going to be available is the safe way to npt have to deal with something serious.\"\n\nI went into my kitchen and opened a rarely used cabinet to find the black cylinder of the Hendrick's Gin bottle by feel in the dark. Then I reached into the next cabinet, pulled out a drinking glass, and filled it halfway without bothering to mix it with vermouth, or even ice. I took a large gulp and hissed at the sting in my throat, then walked back to the sofa and picked up my phone. Six more new texts. I unlocked my phone, went into my messaging app and swiped Liz's texts into the trash without reading them as tears ran down my cheeks and dripped off my chin. I walked into the bathroom and turned on the light, blinking at the harsh brightness until my eyes stopped protesting.\n\nI mis-clicked when I tried to back out of the messenger app, and opened the contacts list on my phone. Liz was at the top of my favorites. I noticed Viv's name, three spots down, below Amber and my parents.\n\nViv. Christ.\n\nMy little epiphany tonight put that relationship in a new light as well. I realized I needed to tell Viv about this. I owed her that much. I didn't want to use her, and she deserved to hear it from me, in person, why she probably shouldn't see me anymore. It crushed me a little to know that I was probably going to hurt her by telling her the truth, that I couldn't return any feelings she had for me since I was heartbroken over a straight woman. It wouldn't be fair to her. Wouldn't be fair to date anyone, not until I was over Liz. And that, I thought, might take a while.\n\nMy phone buzzed in my hand and I saw another text notification from Liz. I stared at it while taking another swallow from my glass. I already ached, missing her. I opened Liz's contact page and scrolled down. My thumb hovered over the 'block this caller' button for a long time. I looked up, staring at myself in the mirror for a moment, then looked back down and pressed the button. The text banner at the top of the screen immediately vanished.\n\nI set the phone and my glass down next to the sink, and leaned on the counter with both hands, regarding my reflection.\n\n\"It's time to make some changes, Addie,\" I said to the mirror. \"You need to figure out what the fuck you're doing with your life.\"\n\nI didn't know what exactly I needed to do, just that I needed to change. I'd let myself go down a very unhealthy road. I stood up and flicked my dreadlocks back off my shoulder, then frowned at myself.\n\n\"If you're going to make changes, no time like the present, girl.\"\n\nI knelt down, opened the cabinet door under my sink and started rummaging around to see if I had what I needed.\n\n~~ George Washington Hospital, Washington DC ~~\n\nLIZ\n\nIt was busier than normal for a Wednesday. I'd been playing catch-up for a couple hours and was looking forward to getting a moment for a shot of caffeine to recharge. I was sitting at the computer at the nurse's station trying to quickly finish typing in my patient notes when I caught a flash of royal blue out of that corner of my eye and looked up to see Jo, walking down the hallway towards me wearing her flight suit with the Virginia State Life-Flight patch on the shoulder.\n\n\"S'up Liz?\" she asked, slapping me on the shoulder.\n\n\"Oh hey, how's it going? Did you bring in that MVA just now? Dr. Rivers is working that case in One if you want to check on it.\" While Jo worked for the state of Virginia, she occasionally flew patients to GW or other DC hospitals, based on proximity of the accident or the available capacity of the various ERs in the area.\n\n\"Nah, it's cool. My flight medics said they didn't think the vic was likely to kick off once we got her here. A ton of broken bones, pretty good concussion and maybe a mild pneumothorax, but she should make it. This lady was screaming loud enough for me to hear her in the pilot's seat through my headphones and over the rotors. You know better than me; if it's really dire, they're not making any noise. I actually wanted to check on a guy I flew in from that pile-up on the GW Parkway up near Potomac on Sunday. I wasn't sure if he was going to make it.\"\n\n\"Oh, gotcha. Know his name?\" I pulled the keyboard back to me and started tapping at keys.\n\n\"John Smith, if you can believe it. I know that isn't very helpful but it's all I got. We came in on Sunday around two-thirty in the afternoon.\"\n\n\"That helps enough. Smith... Smith... here we go. Looks like he was admitted, so he made it. They moved him out of the ICU into room 426 this morning if you want to go upstairs and check on him.\"\n\n\"Nah, I just wanted to see if he was alive. We had to shock him twice on the flight over. I'll tell the crew he lived, they'll be happy to hear it. You got time to hit Starbucks with me? I told everyone I'd hook 'em up with go-juice before we dusted off.\"\n\nI looked down the hall and saw Kat walking towards us with an armful of charts. \"Hey Kat, do I have time for a ten-minute break?\"\n\nShe looked through the charts in her hands. \"Let's see... nope, nope, nope... nothing dire. Go ahead and I'll text you if we need you back.\"\n\n\"I'll bring you a mocha,\" I said with a smile.\n\n\"See, stuff like that is why we're always willing to cover for you. Nice to see you, Jo,\" she said, nodding at her and continuing down the hall.\n\n\"You too,\" Jo called after her, and then we headed towards the Starbucks in front of the hospital next to the Foggy Bottom metro station. \"So, what happened Saturday? I never saw you again. You guys left before the break?\n\n\"We... yeah, we left.\" At least fifty feet of hallway passed beneath my wheels before I continued. \"Addison had a personal thing and had to go home.\"\n\n\"She did, huh? So, you guys bailed out together?\"\n\n\"Yeah, I decided since she needed to go I'd ride the Metro home with her. Called it an early night since I had a twenty-four hour shift the next day.\"\n\n\"Okay, well we're going to play again in three weeks. Some festival out in Reston if you guys can make it. I'll text you the deets.\" Jo hesitated. \"She, uh, she seems pretty cool. How long have you known her?\"\n\n\"A couple of months. I don't know if she'll come again. No offense, but I think you guys are more my jam than hers.\"\n\n\"What?! How dare she!\" she said. I gave her the side-eye and she chuckled. \"I'm not offended. We're not for everyone. No band is, and the ones who try to be usually just end up sucking.\"\n\nThere was a mercifully short line at the Starbucks. Normally, that time of the afternoon, I'd expect to have to queue up behind a hoard of hospital staff, students and state department people, but apparently that was our lucky day.\n\nJo ordered four different drinks, reading off a little scrap of paper she pulled out of her breast pocket, including her usual gigantic black iced coffee with extra sweetener. I added a mocha for Kat and my usual, a venti flat white with two extra shots, then paid for everything with the Starbucks app on my watch before Jo could offer her card to the barista.\n\n\"Thanks. You didn't have to buy coffee for my whole crew.\"\n\n\"Didn't do it out of altruism. I'm gonna make you carry Kat's mocha because I only have the one spot,\" I said, gesturing to the cup holder attached to the side of my chair.\n\nThey gave us our drinks. Jo put her four in a drink carrier, then took a Sharpie out of one of the pen holders sewn into the sleeve of her flight suit and jotted down initials on the lid of each cup. Then she picked up the drink carrier in one hand and the cup for Kat in her other as we headed back.\n\n\"You're limping,\" I said. \"You break that thing again?\" I nodded down at her leg. When we'd been shot down together in Afghanistan, she'd caught a high caliber round through her ankle and had lost her left leg from the calf down. She had a prosthetic foot, though it wasn't noticeable to the casual observer.\n\n\"No, I probably just jumped on it too many times at the show Saturday. I need to take it back to Reed for an adjustment. Fortunately, I already have an appointment next week. Also, I was up pacing with Eric for three hours last night trying to get him back to sleep. The poor kid has a tooth coming in.\"\n\n\"Already? Sheesh, the kid's an early bloomer, isn't he?\"\n\n\"Yeah he--\"\n\nJo was interrupted by her phone just as we got back to the E.R. \"Shit, here take this.\" She handed me Kat's mocha and pulled her phone out of her thigh pocket, juggling her drink carrier and holding the phone up to her ear. \"Go. ... Ok, I'll be there in sixty seconds. Get her spun up.\" She put the phone back in her pocket. \"I gotta run, crash on Richmond Highway down by Alexandria. We're up.\"\n\n\"Okay, Chief. Tell Jill I said 'hi' and give Eric a snuggle for me.\"\n\n\"You got it. Tell Addison I enjoyed seeing her again! We should get together outside of a show sometime.\"\n\n\"Right,\" I whispered to myself, as Jo took off. \"Tell Addison.\" After a moment I shook my head and headed into the E.R. I wedged the mocha in between my legs to hold it, and as I rolled up to the nurse's station I handed it to Kat.\n\nAngel saw it and protested, \"Hey where's mine?\"\n\n\"Sorry, dude. Kat covered for me this time. I'll make sure you get a chance to cover next time.\"\n\nDr. Andrews walked up to the desk to put a chart in the discharge rack, and we exchanged a nod of greeting.\n\n\"Right,\" Angel said with a grin, \"and I'll make sure you get the next 'foreign object stuck in an anus' case.\"\n\n\"What else is new? I always end up with the shitty cases,\" I retorted.\n\nKat did a spit take, nearly choking on her coffee. \"Jesus, Liz! Warn a girl before you drop a stinker like that!\"\n\nI grinned at her. \"I just said it so Angel wouldn't feel like an ass for not getting a coffee.\"\n\n\"We've suddenly gone down a dark hole,\" Angel said, laughing.\n\n\"This conversation has gone in the toilet and smells from end-to-end,\" Dr. Andrews chimed in, without even cracking a smile. \"I'm leaving before I become the butt of a joke, and I'm taking this gastroenteritis case to wipe the stain off me.\" He pulled a chart out of the rack and headed off towards Exam Four. There was a moment of stunned silence, then Kat, Angel, and I dissolved into howling laughter.\n\n\"I will say, Liz, you've done a hell of a job whipping Jimmy into shape,\" Kat said, wiping a tear away from the corner of her eye.\n\n\"Yeah, he's coming along nicely.\" I took a long drink of my coffee and set the cup back in the holder on my chair, then took a chart out of the intake rack and scanned the notes. \"Uh, hey guys, this will sound weird but if we get any domestic violence cases today, can you pull them for me?\"\n\n\"Really? You hate those,\" Kat said.\n\n\"I know, just... please, if you don't mind? Send them my way today if we get any.\"\n\n\"Yeah, no problem,\" said Angel. I saw them exchange a look as I turned my chair and headed down the hall to get back to work.\n\n~~ Adams Morgan, Washington DC ~~\n\nADDISON\n\nLooking over the ledge of the rooftop deck of the Roofer's Union, I could see all of Eighteenth Street in Adams Morgan stretched out three floors below me. I was lost in thought as I waited for Viv to meet me. I wasn't looking forward to this conversation.\n\nI'd spent the last week re-examining what I wanted out of life, where I wanted to be, and more importantly, how I'd gotten to this place I was in. While considering ways I might get a fresh start I'd briefly considered quitting my job and moving back to Wisconsin, but had discarded that idea as too extreme. I was doing good work at Lampedo, and I wasn't ready to give that up yet. Besides, if I was going to make that move, I felt I should put in more than just a week's thought about it.\n\nInstead, I'd just asked for some personal time off. I spent the week either playing hermit in my apartment or walking around by myself in different areas of DC, enjoying the spring weather and appreciating all the neighborhoods and sights I knew I'd miss desperately if I gave in to the urge to run home.\n\nMy brain was still spinning its wheels in the sand when my eyes suddenly alighted on a familiar form strolling down the street. Viv was wearing a sleeveless shirt with no jacket in the warm afternoon sun. I guessed that was her preferred look when the weather allowed, to show off the full sleeve of tattoos on her right arm. I smiled at the thought. At first, I'd found it a little off-putting. I wasn't one for a lot of tattoos, but hers had grown on me the two times I'd seen her.\n\nI'd suggested meeting in the middle of the day, hoping that there would be fewer people in the bar. I'd been mostly successful in my goal, as the rooftop bar was sparsely filled. I picked up my phone and texted her.\n\n(Addison) Hey girl, I see you.\n\nI set my phone down and looked out at the street again. She paused and pulled out her phone, looking at the screen. Then she looked up, shielding her eyes from the sun with one hand. I waved and after a moment I saw her pick me out, wave back, and then resume walking towards me while tapping at her screen. My stomach turned flips while I waited. My phone buzzed and I looked at the screen.\n\n(Viv) Nice to be seen! Be there in five.\n\nShe appeared on the rooftop a few minutes later and I watched her scan the patio, her face clouding over with confusion. I waved again to get her attention. I saw her give a little shake, as if something had startled her, then she walked over, saying, \"Holy crap, Addison, I didn't recognize you at all! What did you do?\" She ran a hand though my hair before kissing me then sitting down across from me. I ran my hand through my hair as well.\n\n\"I just decided it was time for a change, that's all.\"\n\nThe night I'd left Liz at the top of the escalator, I hadn't had what I'd needed under my sink, and had ended up running out to the twenty-four-hour CVS in my neighborhood. It had taken an entire bottle of conditioner, and two hours in the shower, to comb out all my dreadlocks. I'd had to cut off about half their length too, but now my hair was back to its natural state; fine and straight. It better showed my Scandinavian heritage, the blonde almost white now that it was loose for the first time since before law school. I hadn't needed a salon since I'd moved to DC, so I'd picked one at random off Yelp and gotten my first haircut in five years, shortening my hair to just above my shoulders. I'd briefly considered going for a bob cut with a length near my chin, but had decided that was too much too soon.",
        "\"That's one hell of a change! It's going to take some time to get used to but... I think I like it!\" she said.\n\nI sighed inwardly. I'd had a small hope she'd hate it. It might have made this easier. The waiter showed up and dropped off two drinks. Viv looked at me with a raised eyebrow.\n\n\"Ordering drinks for me again?\"\n\n\"Yeah, I took a chance.\"\n\n\"I'm sure I'll love it.\" She picked up hers, took a big sip, loudly smacked her lips and said, \"I love it.\" I couldn't help but laugh, she really could be cute. I took a small sip of mine then nervously looked around.\n\n\"Uh oh,\" she said, leaning back in her chair.\n\n\"What?\" I asked.\n\n\"This has 'the talk' written all over it,\" she said.\n\n\"I'm not sure what you mean?\" I knew exactly what she meant. Crap, she'd put me immediately off-balance by seeing through me so quickly.\n\nShe looked around. \"Half-empty restaurant, middle of the day on Saturday. You're nervous as hell. Meeting me here instead of at the Metro. You have a drink all ready for me. So... is today the day you tell me that I'm not really your type, or maybe we should see other people? Am I too young for you? Go ahead, rip the band-aid off.\"\n\nJesus, she had my number. For someone about whom I kept finding myself thinking she was a little naive or young, she'd read me like a book.\n\n\"It's not like that. Well... it's a little like that. It's something like that.\"\n\nShe leaned forward and took my hand over the table. \"Addison, whatever it is, just tell me. We've only been on two dates, okay? We aren't married or anything.\"\n\n\"One date. I told you buying me a pick-up drink at the League didn't count.\"\n\nShe snorted. \"Then this is our second date right here, I win. Now spill.\"\n\nI took another sip of my drink. Then a bigger one.\n\n\"Okay. Okay, you know my friend Liz I told you about?\"\n\n\"The doctor? Yeah, what about her?\"\n\n\"Well, over the weekend I realized I'd kind of... I'd, well, I... Christ, this is hard.\" I finished my drink in a long gulp while Viv sipped patiently at hers. With a little bit more liquid courage, the words rushed out of me. \"I realized this weekend that I'd fallen in love with her and I've been sitting around waiting for her to realize it.\"\n\nViv gave a slight snort into her drink and quickly leaned forward, raising her free hand to catch the drops of alcohol on her chin that she'd coughed out. She set her drink back down and cleared her throat. \"Didn't you tell me she's straight?\"\n\n\"She is,\" I said.\n\n\"Okay, so... what?\"\n\n\"I just... I realized I've been waiting for her, which is fucking stupid. And now that I realized it, I'm done with that. I need to be done with that. But I've given myself a lot of hurt and I know it's going to take me awhile to get over it.\"\n\n\"Okay... and?\" She caught the waiter's eye, held up two fingers and pointed at our glasses.\n\n\"What do you mean 'and'?\"\n\n\"I mean, 'and'? Why are you so stressed about telling me this?\"\n\n\"Well... because, Viv. I like you and I don't want to hurt you. And I know I'm really not in a good place over this whole thing, and it wouldn't be fair to you if we--\"\n\n\"Hang on,\" she said, interrupting me. \"Like I said, we've been on two dates. No, miss smarty-pants, don't correct me, this is our second date. But a couple things: one, I can already tell, we aren't ever going to settle down in a nice house in the suburbs with two-point-four dogs despite your speech to me the other night.\"\n\n\"I think you mean kids.\"\n\n\"I meant what I said, I'm not a rug-rat person. But while you and I get along, and you're way hot, we're too different. Not like oil and water. More like... a jet fighter and a little Cessna airplane.\"\n\nI arched an eyebrow at her. \"Who's the jet fighter in this scenario?\"\n\n\"You can make that call for yourself. Anyway, the second thing is, as I told you, I just got over a breakup myself. And to be honest, I haven't been sure if I want to dive into something serious. I like you Addison, I like you a lot, but you and I aren't going to grow old together.\"\n\nI felt my eyes widen. She was channeling my own thoughts about her. We sat in silence for a while, my mind racing. After what seemed like minutes, I started to speak, but was interrupted by the waiter delivering our next round. I picked up my fresh drink and took a big swallow, but didn't say anything. Viv waited, but getting nothing from me, she continued.\n\n\"So, you want to 'let me down gently' because you're hung up on the straight girl, and you don't want to hurt me while you get over her.\" I nodded. \"Okay, don't worry, you won't. Now, if you're too messed up over the straight girl--\"\n\n\"Can we please stop calling her 'the straight-girl'?\" I said, irritably.\n\n\"I'm sorry. Look Addison, if you're too hung up on Liz and need to be alone and beat yourself up for a while, it's cool. I'll miss hanging out with you, but no hard feelings.\" She took a sip of her own. \"But... if you feel like you'd like to have a fellow lesbian to go do date-y things with sometimes while you mend your broken heart, I'm offering my services no strings attached.\"\n\nShe picked up her drink again and leaned back in her chair, regarding me. My mind was swirling. This was not at all how I thought this conversation would go. I thought it would be over. Better for her. Maybe not better for me, though. She was right--our worlds were too far apart--but we got along pretty well as far as casual hanging out. Did I want to spend the next few months doing nothing but working and sitting in my apartment gazing at my navel? Would going out and being social help speed up processing my feelings for Liz? And...\n\n\"So, what would you get out of this?\" I asked her.\n\n\"Well, since we're being honest, I want that third date.\"\n\n\"What?\" I said, confused.\n\nShe grinned wolfishly at me, raking a glance over my body and said \"You said you pretty much never go home with someone before the third date. This is the second date. I want a shot at least one more.\"\n\nI steadily met her gaze and lifted my drink to my lips again.\n\nI barely had time to pull the key out of the lock of my apartment door before Viv pushed me inside, slammed it shut behind us and pressed me up against the inside of the door, her face buried in my neck, kissing and licking at the hollow above my collarbone. I dropped my bag to the floor as I gasped and wrapped my arms around her. I brought my hand up to where I would normally grab a fistful of hair and found only her smooth neck, leading up into the bristles of the short buzz cut on the sides and back of her head. I'd never actually been with a woman with such a butch haircut, but it was a little thrilling. I grabbed the longer, spiky hair on top and pulled her head up to kiss me. Her tongue was insistent in my mouth, her arms strong as they wrapped around me.\n\nShe pulled back and looked slowly up and down my body.\n\n\"What?\" I asked, as she hesitated.\n\n\"If we knew each other a little better, I'd know if this was a favorite of yours.\"\n\nI looked down. I was wearing a simple white linen blouse. I looked in her eyes and instinctively knew what she was thinking.\n\n\"Not a favorite. Maybe going to the donation pile soon,\" I said breathlessly.\n\nShe smiled and said, \"Good,\" then grabbed the collar with both hands and roughly tore it open, sending buttons bouncing across the hardwood floor. I shivered as she slipped the shirt down my shoulders and ran her hands over the skin of my stomach and sides, cupping my breasts.\n\n\"Which way to the bedroom?\" she asked, not taking her eyes off my satin and lace bra.\n\n\"No bedroom. Couch,\" I gasped.\n\n\"Nice,\" she said, whirling me around and pushing me back towards my sofa. I fell onto it and looked up as Viv yanked her shirt over her head, leaving her in a black sports bra and jeans. She knelt down, pulled off my shoes then reached up to unfasten the button on my slacks. She'd gotten them down to my knees when I grabbed her hand.\n\n\"This is moving way faster than I normally go,\" I said, chest heaving.\n\n\"Is that a bad thing?\" she asked me.\n\n\"Yes. No. I'm not sure, I--\"\n\nShe interrupted me by leaning down over my body to kiss me again, her breasts rubbing against mine, making my nipples even harder than they already had been.\n\nI reached up and grabbed her face with both hands, my tongue chasing hers. One of her hands slid down my stomach and I moaned into her mouth as she smoothly reached into the waistband of my panties. I gasped and threw my head back when her fingers slid over my clit, then plunged into me with a soft, wet sound. I whimpered while her fingers glided in and out, and feebly tried to kick my pants the rest of the way off. She took mercy on me, reaching down with her free hand to help pull my pants off, and then tossed them over her shoulder before sending my underwear flying after them. She kissed me again, her free hand reaching under my back. I felt her move her fingers in a practiced motion and then my bra was suddenly loose on my breasts. She pulled it off and threw it after the rest of my clothes.\n\nAs she continued to plunge two fingers into me she pushed my legs further apart with her other hand, and then lowered herself down between them. Looking down the length of my body at her, as the late afternoon sunlight streamed in the windows to make my pale skin glow, I'd never felt more exposed, or more naked, in my life. I'd never gone this far with a woman whom I'd only met three times, much less in the middle of the afternoon. I was normally more of an after-dark-in-the-bedroom kind of girl. It made the excitement that much more intense. I wasn't at all sure this was the best idea, but the last vestiges of my hesitance were swept away as Viv stared straight into my eyes while she delivered a long, slow lick, parting my lips with her tongue, then swirling it on top of my clit.\n\n\"Ah, ah, ah, ah!\" As her tongue added to the pleasure her fingers were giving me, I heard the soft, staccato sounds coming from my mouth. Almost of their own volition, my knees started raising up by inches, in time with the beat of my short cries, until they were almost pressed to my chest. My legs started to shake and I grabbed my knees, holding them tight. Viv sped up her pace, her eyes still on mine, the V-shape of my thighs framing her face as I watched. The volume of my cries rose, filling my apartment, until I suddenly went silent, holding my breath as the shaking of my legs increased violently while she took me to the precipice. Then I screamed as I hurtled over the edge.\n\nShe straightened up on her knees, fingers slowly stroking in and out of me while I came down from my climax, and grinned at me. She wiped the back of her other hand across her chin, which was slick with my juices.\n\n\"That was pretty good for round one,\" she said, \"Ready for round two?\"\n\nSometime later, I lay in my bed, watching Viv's naked back slowly rising and falling with her breathing as she slept. The quilt was pulled down below the small of her back, and the rise of her hips peeked out from under the covers. I took a moment to more closely examine the tattoo on her right arm. It was an intricate web of delicate vines and flowers, almost completely black and white, starting at her wrist, winding the entire way up her arm, and spreading a few inches from her shoulder onto her back. On her shoulder, a woman's face peeked out from the flowers. The eyes of the woman were the pale blue of robin's eggs, the only color ink other than black in the entire piece of artwork. The woman's face was familiar and I realized it was a similar, but older version of Viv's face, with a wide, kindly face surrounded by a mass of lush, black hair that blended into the vines.\n\nI raised my hand and gently stroked my knuckles along the soft skin on her back, while I turned my head to look out my bedroom windows at the blood red sky of what looked to be a gorgeous sunset. I allowed myself a self-satisfied smile. I felt that I'd acquitted myself well in my efforts to match Viv's sexual exuberance over the last several hours. The fact it had been the first time I'd had sex in over six months had probably helped me keep up with her.\n\nI sensed her stir and looked back as she opened her eyes.\n\n\"Hey babe,\" she whispered, in a sleepy voice. \"How you doin'?\"\n\n\"Good, you?\"\n\n\"Mmmm, I'm good.\" She smiled at me while I continued to stroke her back. \"So, think this friends-with-benefits situation is going to work for you?\"\n\nI had no idea if it was going to work for me. Casual sex was not normally a tool in my bag. And even though I knew we didn't have a long-term future, I already felt a possessiveness toward her, fostered in the last couple hours of our carnal activities.\n\nUnbidden, visions of Liz sprang into my mind, causing a sharp pang in my gut, as I recalled how delicious her naked back had looked at the spa. My rebellious brain pictured Liz lying here naked next to me instead of Viv and I had to fight not to draw in a sharp breath. No, I was pretty sure this friends-with-benefits thing was going to be a fucking disaster, that I was using it to run away from dealing with my feelings.\n\n\"Working fine so far,\" I said.\n\n\"Great,\" Viv said, smiling as she raised up on her elbow. \"Ready for round five then?\"\n\n~~ George Washington Hospital, Washington DC, May ~~\n\nLIZ\n\nThe eight-year-old girl in Exam Five was putting on an incredibly brave face, holding back tears as I gently manipulated her wrist.\n\n\"Okay, this might hurt just a teensy bit, sweetheart. Are you ready?\" I asked her.\n\n\"Y-yes,\" she said and nodded.\n\nI took one more look at her x-ray on the exam room monitor, then looked down at her arm and slowly, but firmly pulled her wrist towards me while holding her elbow.\n\n\"Ow! O-w-w-w-w! Ow-ow--... wait! It doesn't hurt as much now!\" she exclaimed, as I felt the ends of the bones line up and relaxed my grip.\n\n\"Right, I put your bones back where they belong so it shouldn't hurt as much. Don't move it, okay?\" I said, gently laying her arm on a pillow I'd placed in her lap.\n\n\"That was neat! Could I have done that myself? Then I could have kept climbing with Cindy instead of coming to the hospital!\"\n\nHer dad shook his head and sighed. \"Leslie, you're going to be the death of me. Why can't you play with dolls or something instead of climbing trees.\"\n\nI shot him a look out of the corner of my eye. He had the good sense to look a little embarrassed.\n\n\"It takes a lot of school to learn to do this, Leslie, but if a person studies hard and gets good grades then they can learn to be a doctor too. And then they can help people who get hurt, like I do.\"\n\n\"I want to do that!\"\n\n\"Great, then you can come work with me! That sounds like so much fun!\" I smiled at her, then turned to the tray of supplies Angel had brought me. \"Now, you can have your choice of colors for your cast,\" I said, holding up three rolls of neon colored fiberglass wrapping, \"Pink, blue or green. What'll it be?\"\n\nShe looked down at the neon green steel tubing forming the frame of my wheelchair, then pointed at one of the balls of wrapping with her good hand. \"I want green!\"\n\nI laughed and said, \"You got it!\" and set about wrapping her wrist in a green cast.\n\nI rolled into the doctor's lounge a few minutes later and headed for the big leather sofa.\n\n\"Thanks for taking that one. I still haven't gotten the knack of keeping kids calm,\" said Dr. Andrews from one end of the couch. I slipped off my chair onto the other end, carefully lifted my feet up onto the cushions between us with my hands, and then leaned back against the overstuffed arm.\n\n\"No worries, it'll come. It just takes practice like anything else. You've gotten to be almost as good as me at doing IV sticks after a not great start.\"\n\nHe snorted at that.\n\n\"If we'd been busy, you'd just have had to bite the bullet and do it. But, since I hadn't had a case in over an hour, I didn't mind.\"\n\nHe put his feet up on the coffee table, crossed his ankles, and sipped at his steaming mug of coffee. \"This might be the slowest Friday night I've ever worked since I started here,\" he mused.\n\nI glared at him.\n\n\"What?\" he asked.\n\n\"Thanks a lot, Jimmy. Now that you've said that, we're going to get crushed. I'm expecting three MVAs and a heart attack to roll in the door in the next twenty minutes now.\"\n\nHe laughed. \"You know, I really love how you always use 'roll' anytime anyone else would say 'walk'.\"\n\nI blinked. \"Huh, I had no idea I did that.\"\n\n\"Yup, I've noticed it since that one time when--\" He was interrupted by Angel poking his head in the door.\n\n\"Hey, we got a mid-thirties female, superficial stab wound to the triceps in Three.\"\n\nJimmy looked at me and took his feet off the table, \"I'll go, you just got settled.\"\n\n\"Hang on. Is it a DV case?\"\n\nHe grimaced. \"Yeah. Officer Martinez is with her.\"\n\n\"I'll take it,\" I said, heaving my butt back onto my chair.\n\nJimmy raised his eyebrows at me. \"You sure? You hate domestic violence cases.\"\n\n\"Yeah, I got it.\"\n\nI'd had an unbelievable streak of good luck (or bad luck, depending on what my real desired outcome was) and there hadn't been a single domestic violence case on any of my shifts in the three weeks since Addison had left me sitting at the top of the Metro escalator. Since that night, she'd apparently blocked my number. All my texts went undelivered and my calls went straight to a recording that said the requested number couldn't receive calls from me.\n\nMaybe I'd finally have the chance to confront her about what had happened. Officer Martinez was standing outside Exam Three on her cell phone. I rolled up to her with the chart in my lap as she hung up.\n\n\"Hey Gloria,\" I greeted her.\n\n\"Hey Doc, how's it going?\"\n\n\"The usual.\" Then, in a quieter voice, I added, \"Did LWLS get called in for this one?\"\n\n\"Yeah, I just got off the phone with them,\" she said, in an equally quiet voice. She tilted her head towards the curtained area behind her. \"Mrs. Jackson here is pretty pissed. This is the first time her husband has actually laid hands on her.\" She grinned at me. \"She told me she's going to go divorce, restraining order, criminal charges, the whole shooting match. I recommended she get a legal advocate here tonight to get things started even if she's going to hire a private attorney later.\"\n\n\"Okay, thanks.\" I rolled into Exam Three to find that Mrs. Jackson was indeed pissed.\n\nRather than the usual scared, cowed woman I was used to dealing with in a domestic violence case, I found Mrs. Jackson was livid and ready to use any means available to show her husband how badly he'd fucked up. It was refreshing to see. He'd gotten drunk (they were almost always drunk) and during an argument in their kitchen he'd thought it a good idea to gesture with a knife from the knife block next to the stove to make his point that he was the man and should be listened to. When he'd made a threatening gesture to her, he'd misjudged the distance and accidentally plunged the point an inch into her arm.\n\nI flushed the wound, gave her a suture to close the small puncture and a prescription for antibiotics. After printing out aftercare instructions for her and wishing her the best of luck, I rolled down the hallway to the nurse's station to enter my patient notes, while keeping an eye on the door into the E.R.\n\nI was still sitting there twenty minutes later, pretending to peck at the keyboard, when the receptionist buzzed in a woman wearing a black suit, carrying a briefcase.\n\n\"You have got to be shitting me!\" I exclaimed.\n\nMegan looked embarrassed. \"Hi Liz. Listen, I--\"\n\n\"Did she quit or some stupid shit like that?!\" I said, my voice rising.\n\n\"Okay, you need to get a grip. I have to go see my client, then I'll come talk to you.\"\n\nI looked at her for a long moment then said curtly, \"I'll be in the lounge.\"",
        "I sat in my chair in the lounge, impatiently drumming my fingers on my leg for almost thirty minutes. After the first five, Jimmy had gotten uncomfortable and left to go find busy work elsewhere.\n\nThe second she walked through the door, I said, \"Spill it Megan. What the fuck is going on?\" I said without preamble.\n\n\"Okay, first of all, you need to chill out. Whatever's happening isn't my fault and getting pissed at me is only going to get me to walk out of here because I'm not going to put up with you aiming that shit at me.\"\n\nI took a deep breath. \"Sorry.\"\n\nShe sat down in the arm chair across from me, and met my gaze coolly. \"Okay. So, no, Addison didn't quit. She took a week of personal time and when she came back, she asked MJ to transfer her to another hospital.\"\n\n\"Did she say why?\"\n\n\"No, and MJ spent a long time trying unsuccessfully to get that out of her. She insisted it had nothing to do with being mistreated or unwelcome here, but she 'just needed a change'. MJ said it might take a few weeks to set up, and Addison said it wasn't negotiable, that either she wasn't going to come back here or she was going to resign.\"\n\n\"Fuck,\" I breathed out. \"That's kind of dramatic.\"\n\n\"Yeah, Liz, it is and MJ was really pissed, and if you can explain what's going on to me I'd appreciate it.\"\n\n\"So, what happened after that?\" I said, avoiding her question.\n\n\"Well, she's turning into a great attorney and has been really committed to LWLS and our mission. MJ didn't want to lose her, regardless of how pissed she was at her for pulling this peremptory bullshit, so she switched her over to Howard University Hospital. Our lawyer there is moving to Cleveland to be nearer to his wife's parents this month, so we needed someone there anyway. Myself and a couple other lawyers are covering the on-call here until we can figure out a permanent replacement.\"\n\nI sat lost in thought, staring at the floor.\n\n\"Liz...\" She touched me on the arm to get my attention. \"What happened?\"\n\n\"I don't know. We were having a day out, and she suddenly got upset and left and now she won't talk to me. That's all I know.\"\n\nShe stared at my face for a long time. \"That's... all you know? Really?\"\n\nI huffed out an aggravated breath. \"That's all I know that I'm willing to talk about until I have a conversation with Addison, okay?\"\n\nShe leaned back in her chair. \"Sure, that's fine. But you sound really mad about something, and I think you know exactly what's going on. If she won't talk to you, you should talk to someone about it. Me, or Kat, or one of your other friends... Someone.\" She waved a hand at me to indicate the entire mess I had going on. \"You're clearly, massively, pissed off, and you clearly know what happened, and it clearly was a big deal to Addison. This seems like the sort of thing you shouldn't keep bottled up.\"\n\n\"I don't need to talk to anyone,\" I said.\n\nShe sighed, stood, and picked up her briefcase. \"Just be aware that I've known you for a year and a half and I've never, ever seen you lose your shit. You're the most equanimous person I've ever met. I have never seen anything get to you like this. You're really close to losing your shit right now.\"\n\n\"I'm fine, Megan. Thanks for talking to me.\"\n\nShe hesitated a moment longer, then said, \"You should come have dinner with us soon. Cait loves seeing you.\"\n\n\"I'd like that too.\"\n\nShe gave me a final, flat stare before turning to go. After Megan was gone, I sat alone in the lounge, my brain going in circles. She fucking threatened to quit to avoid seeing me again? I still couldn't wrap my brain around how fast things had gone from perfectly fine to this shit-show. She was in love with me, she'd said. In love with me. It just didn't track... did it? We'd been up front about this since the first night we'd hung out. How? When?\n\nIt's not like... I mean I did feel a connection to her that was deeper than most of my friends, except maybe Jo but I'd gone to war with her. Jo was like a big sister to me. With Addison, our connection had developed so fast it had been a little frightening. But... love? And was she physically attracted to me too? To me? That was an obvious answer. The way she'd kissed me left little doubt. After my two fairly unsuccessful relationships since I'd been relegated to a wheelchair, I'd started to wonder if anyone would ever really be attracted to me again. But... you don't kiss someone like she'd kissed me unless you really want them. That kiss...\n\nI'd thought about that kiss constantly since then. The electric feeling, when her lips had touched mine. The smell of her hair around my face. Her soft hands on my cheeks. I had never been attracted sexually to another woman, but... was I attracted to her? I didn't think I was. Was I? The shock of her lips on mine... That hadn't felt like a sisterly kiss. Not to me, anyway.\n\nI closed my eyes and pictured Addison. Her beautiful blonde dreadlocks, her pale green eyes. If I imagined myself in bed with her, naked with her, would I be filled with revulsion or...? I called up the memory of that last day together, when she'd arranged massages for us, and tried to recall the image of her creamy white shoulders above her towel as she'd helped me up onto the table and...\n\nJimmy stuck his head in the door, interrupting my reverie. \"Yo, Liz, two MVAs on the way in. One ten minutes out on Life-Flight and one that's pulling into the ambulance bay right now!\"\n\nI sighed in frustration as I started wheeling towards the door. \"God dammit, Jimmy. I told you this was going to happen. You can't tempt fate like that.\"\n\n~~ Logan Circle, Washington DC, May ~~\n\nADDISON\n\nI managed to get a table right away at Number Nine, a rare feat for a Saturday night, and ordered a Logan Beauty, one of my favorite gin concoctions on their menu. I always tended to arrive early to everything, and I'd beaten Viv to the bar tonight. The DJ had started a set and his thumping tunes filled the bar as couples here and there danced together.\n\nI had just taken my first sip and set my glass down on the table when I felt an arm snake around my neck from behind. I recognized Viv's scent as she kissed the top of my ear, making me jump.\n\n\"Hey babe,\" she said, then plopped down in the seat next to me.\n\n\"Hi. How was work?\" I asked.\n\n\"Oh, you know, drive the train to Greenbelt. Turn around and drive the train back to Branch Avenue. Repeat for six hours. Nothing exciting, how was your Saturday?\"\n\n\"It was fine, nothing exciting either. Puttered around the condo. Donated some clothes that didn't bring me any joy.\"\n\nThe waiter came by to see if Viv needed a drink. She looked at me.\n\n\"What?\" I asked.\n\n\"You aren't going to order a fancy drink for me? I'm hurt. The magic is over.\"\n\nI blushed a little. \"Oh, right, sorry. Bring her a Sweet Heat, please,\" I said to the waiter.\n\n\"Sweet Heat, huh? Is that the name of the drink, or what we're gonna do later?\"\n\n\"Shhh!\" I said, looking around.\n\nShe smiled a tolerant smile. \"Babe, we're two women sitting together in a gay bar, and I've got this haircut,\" she said, pointing at her head. \"Pretty sure anyone who looks at us for two seconds is going to assume we're going to go home tonight and get naked and horizontal. Or... naked and vertical. I don't know what you might be in the mood for.\"\n\n\"Viv!\"\n\n\"What?\"\n\nI looked around some more. \"The fact I let you jump me on our second date notwithstanding, I'm really not that open you know. You really knocked me back on my heels when you kissed me at The League right there in front of god and the whole bar when we met.\"\n\nShe looked around conspiratorially then said in a low voice, \"So you're saying that despite the fact that after we have a fun night out tonight, and after I take you back to your apartment and make you scream like I did the last time, you still want to me to keep it less than obvious to the casual observer?\" She wiggled her eyebrows at me in an exaggerated fashion and I couldn't help but laugh.\n\n\"Something like that,\" I said. The waitress delivered her drink and we toasted each other. \"I do have a question about our... relationship,\" I said, setting my glass down. She raised her eyebrows but said nothing so I continued. \"You said if I want a lesbian friend to do date-y things you'd fill in.\"\n\n\"That sounds like what I said, sure.\"\n\n\"Does that mean, well... are you expecting that anytime we get together it's for sex? Or not just for sex, but that's we'll have sex every time? Because I like to do a lot of things that don't necessarily involve getting naked and horizontal. Or naked and vertical.\"\n\n\"No, I don't expect sex every time. But I mean, I kinda thought one of the reasons you hooked up with me was because you weren't up for any emotional attachments while you get over the straight girl. Sorry! Get over Liz\" She added, as she saw my face cloud up. \"If you want to go do some date-y thing and then say goodnight with a peck on the lips, or hell even a handshake, I'm fine with that too. We don't have to go to your apartment every time.\"\n\nI laughed. \"Why always my apartment? Why are we never going to go to your apartment?\"\n\n\"Because, I live in Springfield at the end of the Blue line, and it would take an hour to get there from here. And I have two roommates and thin walls. WMATA doesn't pay that great you know. I mean if you want to go to my place to get down, we can, but you'd have to be okay with an audience.\"\n\n\"Uh, no, I think I've made myself clear on how comfortable I am with public displays of affection. Putting on a sex show for your roommates might be a tad over that line for me.\"\n\n\"Right,\" she said and raised her glass to me. \"Here's to private sex then.\"\n\nI clinked my glass to hers.\n\n\"So. Does all this mean we are or aren't going to your place tonight?\"\n\n\"Let's not decide that upfront. Why don't we have a date-y night and see where it goes.\"\n\n\"Sounds good to me.\" The DJ segued into some slower tunes, and the bouncing couples either headed to the bar or bathrooms to take a break or moved into each other's arms to slow dance. Viv stood up and offered me her hand. \"Shall we?\"\n\n\"Shall we what?\"\n\n\"You said you liked doing date-y things,\" she said, taking my hand and pulling me to my feet. \"Slow dancing is pretty date-y.\"\n\n\"Yes, it is,\" I said. She wrapped her arms around me and leaned in, her cheek on mine as we started swaying back and forth. I sighed and leaned into her. Truth be told, I love to slow dance, and I hadn't in a really long time. Well, no, I'd slow danced with Liz, hadn't I? My heart stabbed at me again, as I remembered the feeling of sitting in Liz's lap while she rocked her chair back and forth, leaning my head on her hair, her arms around me. I shook myself. \"Quit that shit, Addie!\" I thought.\n\nViv pulled back and looked in my eyes. \"Everything okay?\" she said.\n\n\"Yeah, all good,\" I said, pulling her back to me. She slid her hands into the back pockets of my jeans and I found I didn't mind. I nuzzled my cheek into the short hair on the side of her head. She smelled totally different from Liz. I hoped she'd help me get over that stupid mistake. But then... that's not what she and I were doing either, was it? This wasn't a relationship, this was just...\n\nGoddamn it, Addie, I thought. Are you trading in one stupid mistake for another?\n\n~~ George Washington Hospital, Washington DC, May ~~\n\nLIZ\n\nMy shift was supposed to have ended an hour earlier, but I was wrist-deep in a seventeen-year old's abdomen.\n\n\"Mmm, si, very nice,\" Dr. Salvatore said, peering into the cavity as I removed the swollen appendix I'd just clamped off and cut out.\n\n\"Thank you, Doctor,\" I said. I cauterized the area, handed the cautery tool back to my nurse-assistant who had then handed me forceps holding a pre-threaded needle and I began closing, suturing the underlying muscle layer I'd cut through while exposing the site.\n\n\"You know, Elizabeth, you really should consider applying for the surgery residency position opening in my department this fall. You are quite the natural.\"\n\n\"Thanks Dr. Salvatore, but I'm not sure leaning forward in this chair like this for an eight-hour surgery would be a pleasant day at work. An appendectomy is one thing, doing an aortic dissection might cripple me more than I already am.\"\n\n\"You've started the closing, Elizabeth, I think you can call me Ernesto now.\"\n\nI laughed without looking up. \"Ernesto, then. I wish this kid's parents had taken him to his doctor two days ago. They would have caught this earlier so we would have had time to do this laparoscopically instead of having to open him up in the E.R.\"\n\n\"Never underestimate the ability of a teenager to ignore pain when going to the doctor would be inconvenient for their social life, Elizabeth. So, if you are going to break my heart and eschew the surgery track, what do you have in mind?\"\n\n\"I'll be staying in the E.R.\"\n\n\"Ah, you've grown addicted to the long hours and stretches of boredom relieved by moments of panic and sheer terror.\"\n\n\"Pretty much. Plus, I like training the baby docs.\"\n\n\"Well those are hard spots to come by. I'm glad GW was smart enough to snap you up. I would hate for us to miss out on your talents.\"\n\nI snipped off the thread and looked up, surprised. \"Thank you. That means a lot coming from you.\"\n\n\"Well-earned, Elizabeth,\" he said, waving a hand at me, \"Anytime I'm 'supervising' you, I know I'm merely here to watch someone perform a job well. Now, I know you were to leave before this chamaco arrived, so go. Leave now.\" He made shooing motions at me with both hands as he left the O.R.\n\nThe nurses helped me back my chair down the ramp off the short platform I used for surgery and I made sure to thank all the O.R. personnel for their work then wearily made my way out into the hallway.\n\nAs I came out the door, a man almost crashed into me.\n\n\"Oh, sorry. I didn't see you down there,\" he said.\n\nI managed not to roll my eyes at him, not that he would have noticed with his phone about six inches from his face. \"No worries,\" I replied, and tried to roll around him to the locker room.\n\n\"I'm trying to find, uh, Exam Six?\" He was young, in his late twenties, wearing a dark suit and carrying a briefcase.\n\n\"I'm sorry, who are you? How did you get back here anyway?\"\n\n\"Oh, sorry,\" he said with an apologetic smile. Then, finally, he put his phone away. \"I'm Alan Reiger. I'm an attorney with Lampedo Women's Legal Services?\" He held up a hospital ID with his photo on the front. \"I've just been assigned to GW and I have my first client meeting tonight. It says my client is in Exam Six.\"\n\nSo, this was Addison's replacement. I cringed inwardly, barely suppressing the urge to snap at him.\n\n\"Welcome aboard. I'm Dr. Charles. Go down that hallway, take the first left, then the second left. Six will be on your right.\"\n\n\"Thank you so much! I'm sure I'll see you around since you work here.\"\n\n\"Yeah, you'll probably see me a lot.\"\n\n\"Thanks for your help,\" he said and walked away down the hall.\n\nI watched him turn the corner and sighed. Three weeks ago, that would have been an opportunity to see Addison, and maybe go get something to eat with her after she'd finished with her client. I shook my head and rolled across the hall and into the locker room.\n\nI checked the weather app on my watch and, seeing that it was almost sunset and had started to get cool outside, I grabbed my favorite GW fleece pullover out of my locker before closing the door and refastening the padlock. I was pulling it over my head when Kat came in and started collecting her stuff from her locker.\n\n\"Weren't you supposed to get off an hour ago?\" she asked.\n\n\"Yeah. Emergency appendectomy right as my shift ended.\"\n\n\"Ouch. C'mon, I'll walk to the Metro with you,\" she said.\n\nAs we came out of the hospital, we both paused to admire the sunset and take deep breaths of the sweet spring air, oblivious to the crowds of students and commuters pushing past us.\n\n\"I wish the E.R. had windows,\" Kat said, \"I hate working all day in a cave.\"\n\n\"Me too,\" I said.\n\nShe walked a dozen steps toward the elevator down to the Metro station before she realized I wasn't following her. She turned around and came back to where I still was staring at the sunset. \"Liz? Are you okay?\"\n\n\"Yeah, fine,\" I said, but I heard the hoarseness in my voice that belied my words.\n\n\"What's wrong?\"\n\nI felt the beginnings of a tear in one eye and rubbed it away with a finger.\n\n\"Do you want to talk about it?\" she asked.\n\n\"I don't know. Maybe.\"\n\n\"Wow, okay.\"\n\nI sniffed, and then laughed. \"'Wow'? Really?\"\n\n\"Sorry. You've never been the 'I need to talk' kind of person.\"\n\n\"Well... I'm dealing with some shit and I think you might be the only person I know who can give me good advice.\"\n\n\"Okay, hang on a sec.\" She pulled out her phone and made a call. \"Hey babe. Yeah, I just got off. ... Yeah, it was a good day, but listen, would you mind handling dinner and homework tonight? No, everything's fine. ... Liz wants to grab a drink with me and I'd like to hang with her for a bit. ... Um, okay, I'll let you know. If I stay out too late I'll take an \u00dcber. Okay. ... Tell Cait I love her, and give her a kiss for me. No video games until her homework's done. ... Sorry, I know you know. ... Okay, love you too, Megs.\" She hung up, hitched her bag up on her shoulder and said \"Hall pass obtained. Where do you want to go?\"\n\nAn hour later we were sitting at Circa across the street from the hospital. We'd claimed a quiet table in a corner and were picking at the remains of a plate of their tuna poke nachos, my Guinness half-gone. Kat had opted for iced tea.\n\n\"...and then she leaned down and kissed me and--\"\n\n\"Whoa, she kissed you?\" Kat exclaimed.\n\n\"Yeah, grabbed my face and laid one right on me.\"\n\n\"Wow.\"\n\n\"Right? Then she sprinted down the Metro escalator and I haven't seen or talked to her since.\"\n\n\"Wow.\"\n\n\"You know, you've hardly said anything but 'wow' the whole time I've been talking,\" I said.\n\n\"Well, that's a pretty 'wow' story. So... that's when she stopped coming to the hospital for work?\"\n\n\"Yeah.\" I drained the last of my beer. \"She told her boss to reassign her immediately or she'd quit.\n\n\"Holy crap!\"\n\n\"Yeah.\"\n\n\"And you haven't talked to her at all?\"\n\n\"No. She blocked my number that night, so I can't call or text her. I've sent her some emails but haven't gotten any answer to those either.\"\n\n\"That really sucks Liz, I'm sorry.\"\n\n\"So, what do I do?\"\n\n\"What do you mean 'what do you do'? That sounds like a crappy way for a friendship to end but you can't make her not fall for you. She's going to need time to get over it. She may never want to be friends again.\"\n\n\"But...\" I trailed off, unsure how to say what I wanted to say next.\n\n\"But what?\"\n\n\"Okay, this is going to be pretty personal and if you don't want to answer please tell me to shut the fuck up.\"\n\n\"C'mon. The stuff you and I go through together on a daily basis? I mean you actually served in a war so forgive the expression, but I feel like you and I have been in a foxhole together for the last eighteen months. You can talk to me about anything, okay?\"\n\nI felt dubious, but took a deep breath then said, \"Okay. I know this embarrasses you anytime Megan says it, but she's mentioned a few times that when you two met you thought you were straight, and--\"\n\n\"Wait! Are you interested in her?!\" she exclaimed.\n\nI felt my cheeks heat up. \"I don't know! I've never thought about women like that before! Not having her around anymore feels like she's left a hole in my life and I don't know how to fill it and...\"\n\n\"...and?\"\n\n\"And that kiss was something. I'm not saying 'hey, I'm gay now!' But when she kissed me, I felt something.\" A brief pause before I added, \"I keep thinking about it too. And... and the connection that grew between her and me those few months... I'd never felt that close to anyone in my life. Even Jo, and we went through some shit.\"",
        "Kat leaned back and blew out a long breath. \"Wh-o-o-o. Well, you're full of surprises tonight. So, what are you asking me?\"\n\nThe words came out in a rush, and once I started they just kept coming. \"Were you straight when you and Megan started dating? Or did you think that but you were wrong? How did you come around to wanting to be with her? How did you get your brain around it? What happened? How did you go from being straight to being married to Megan?\"\n\nShe looked away and silence stretched out between us.\n\nFinally, I said, \"Shit, I'm sorry I asked. I know this has to be crazy personal for you, so let's just--\"\n\n\"It's kind of a long story, Liz,\" she said, interrupting me.\n\nI looked at her, struggling to maintain an impassive expression.\n\nShe sighed, then she stopped a server who was passing by our table. \"Did I see the drink special tonight was a melon margarita?\"\n\n\"Yes ma'am,\" said the college-aged girl, \"we use Repositivo tequila and hand-squeezed melon pur\u00e9e with--\"\n\n\"That's great, please bring me one of those, then bring me another exactly fifteen minutes after that, and keep 'em coming. Thank you.\" She turned back to me and rolled her eyes. \"I can't believe she just 'ma'am-ed' me. Okay. I'll tell you my story, but you're buying me as many drinks as I want, for as long as it takes, and then you're paying for my \u00dcber home. Deal?\"\n\nI tried and failed to suppress a smile. \"It's a deal.\"\n\nTo Be Continued... In the upcoming 'Twas The Night Before... - Chapter 2!\n\nComing soon, to a laptop/tablet/phone near you!\n\nIf you haven't read my series, Hard Landing, there is a playlist called 'The Set List', a collection of songs performed by The Rotors, available on Spotify. The link to the playlist can be found in the 'CONTACT' tab of my author page. I always appreciate getting follows on my playlist."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "broken heart",
        "disabled",
        "gay",
        "gay romance",
        "lesbian",
        "lesbian romance",
        "love story",
        "romance",
        "wheelchair"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/wheels-in-motion-ch-03"
}