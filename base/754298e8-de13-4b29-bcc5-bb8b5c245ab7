{
    "title": "An Old Coach Remembers",
    "pages": [
        "God, I hated the draft. I loved coaching baseball \u2013 showing young men how to play the game, watching as they grasped the concepts, and seeing the joy on their faces as the incomprehensible becomes known. Watching boys transition to young men, both in terms of baseball and life brought indescribable joy to this lowly coach. Each year, these young men became MY boys if only for the summer. But for the summer they were mine as surely as if I had sired each and every one of them. But before we bonded, before we learned together, before we played the game \u2013 there was the draft.\n\nIn coaching youth baseball, you come into the season with a nucleus of returning ball players. However, having lost some from the previous season due to age restrictions and family moves, each team must replenish and refill their roster. This is accomplished through a long day of tryouts followed by a draft.\n\nEach year we had thirty to forty 13 year old boys who had 3 hours to get the attention of the coaches. Each young man got to demonstrate his skills: each got to shag fly balls in the outfield, field ground balls in the infield and demonstrate his ability to throw and catch by playing catch. Finally, each ballplayer got three swings, THREE, to show off his hitting ability! Oh, by the way, all these demonstration stations were happening at the same time!\n\nNeedless to say, tryouts were frustrating for all involved. The players knew they didn't have the time to show what they could do. The coaches couldn't keep up with what was going on all around them and the parents felt their sons were getting shortchanged.\n\nAfter a break for lunch, the coaches reconvened for the draft. Drafting was as follows: the order of the draft was simple - the last place team from the previous year drafted first, the second to last picked next, and so on until last year's champion drafted, completing the first round. This was repeated in each subsequent round until a team announced that they had a full roster of 13 ballplayers. The draft would then continue without the team that was full. As each team's roster was filled out, the number of teams still drafting became less and less until we run out of ballplayers to draft or each team was filled out.\n\nIf there were undrafted players left over after all the rosters were full, we would go back to the original draft order until all players were drafted. Simple, huh?\n\nThis particular year we needed 5 players to fill out our roster, which happened to be one more than any other team needed. That meant that after every other team had fulfilled their roster requirements, we were still one short. Coincidentally, there was still one undrafted player. That's how we came to draft Tim Conrad.\n\nWe had a good bunch of returning ball players. We had four 15 year old's and four 14 year old's. Additionally, we had a secret weapon in the draft. My assistant coach's brother-in-law had coached the 11/12 year old's last year and had provided us with profiles on all the kids moving up this year. Because of this we felt that we had had a very good draft. We coaches really believed that we had a team that could compete for the championship that year. On top of that we were very comfortable that we had a quality bunch of young men. We coaches firmly believed that the lessons learned from playing baseball would carry over to life. We were steadfast in our belief that helping to mold our boys into honorable young men was more important than winning, although we would always strive to win each and every game \u2013 just not at the expense of our honor and integrity.\n\nThat leads into the first official act of our season. Each year, after the draft but before our first practice, we coaches hosted a \"Meet and Greet\" for the parents. This was an opportunity for we coaches to meet the parents of our boys. The parents got to meet the men that would be center of their boy's life for the next couple of months and we coaches were able to let the parents know what we expected from the boys, as well as what we expected from the parents. This second set of expectations sometimes surprised the parents because they never thought that we coaches would make demands on their time and behavior the way we did.\n\nThe first and foremost thing we expect from the parents was their support of what and how we taught our ballplayers. One of the hardest things to overcome as a coach is a parent telling his or her son that the coach is wrong and that their son should disregard what his coach says. We have always said that if the parent has a question or concern, the issue should be discussed with the coaches first.\n\nThe second major requirement we demanded of the parents was that they should always root for our team but NEVER root against our opposition. I always made the point that if a parent on an opposing team ever tried to harass or bully one of my boys, I would have the parent removed from the park. I wouldn't allow my kids to be harassed and I won't permit our parents to harass players on other teams. With very few exceptions, over the years I never had a problem with the parents. \n\nSimilarly, we had a few requirements for our players. For one, we would not tolerate teasing, harassing or otherwise making life uncomfortable for their teammates. We are a team, and we coaches expect our players to rally together and offer encouragement rather than criticize. We expect our team to root for each other, support each other and stick up for one another. \n\nAnother hard and fast rule that we had was that if one came to practice he played in the games. In our league it was not mandatory that every player on the roster play in each game. However, we coaches felt strongly that if the players made the effort to come to practice, that they should be rewarded by playing. This team rule sometime caused some grumbling from a few (a very few) parents that thought that we might have risked losing some of our games by playing someone they thought shouldn't have been played in a close or important game. However, I was firm in my belief that if someone made the commitment to come to all the practices and worked hard to be a part of the team, then that individual was going to play. \n\nAll in all, our parent get-togethers were a good way to kick off the season; both parents and coaches began the season on the same page and lines of communication were established to move into the season.\n\nWe were well into this season's Meet and Greet when a mother introduced herself to me as the mother of Tim Conrad. To be honest, I remembered that Tim had been the last boy selected by us simply because he was the last player available, but for the life of me I couldn't remember him or anything about him. We hadn't met as a team and Tim, to that point was just a name on our roster.\n\nTim's mother, whose name was Sherry, wanted to talk to me about Tim but felt that this was not the time or place. As the next day was Saturday I suggested that we meet at IHOP for breakfast. Sherry indicated that this was OK and so the next morning at 9am I was sitting across from Ms. Sherry Conrad.\n\nSherry proceeded to tell me about her son, Tim and what her hopes were for her son for the upcoming season.\n\nTim lived at home with his mother and younger sister. It turns out that Tim was a very talented violinist \u2013 to the point of being considered a child prodigy. Even at the age of 13, Tim was being closely watched and even recruited by several music conservatories throughout the country. Sherry was a single mom having divorced Tim's father several years before. Tim's Dad played no part in Tim's life.\n\nSherry was concerned that Tim had no male influence in his life. Furthermore, because of the time involved with violin practice he didn't have many friends. He was, what might be called today, a geek. A violin geek, but a geek nonetheless. It was Sherry's hope that by playing baseball, Tim might make some friends heading into high school and maybe develop some interests outside the world of music.\n\nSherry was working two jobs to support herself and her children, so her time was very restricted. She expressed to me her worry over getting Tim to practice two evenings a week. Picking him up after practice was no problem as she was off work by then and getting to games was no issue as Sherry had committed to being at his games even if she had to take off work. I liked her commitment to her family and asked her where she lived. When she told me I realized her house was somewhat on my way, so I told her I could pick Tim up my way to practice. Sherry was thankful and told me that would work out great. She also told me that she would bring juice and fruit for the team for after practice. I told her I thought that was a great trade. We parted as friends.\n\nPractice started and it became apparent that our initial assessment was correct. We had the makings of very good team. Of our eight returning players, we had two pitchers and five returning starting-position players. We had openings at second and third base and could use another pitcher. After the first week of practice we felt that we had found our second and third basemen from among our 13yr olds. Further-more, we felt we had found our third pitcher as well as someone who could compete for an outfield position.\n\nWe felt everyone on the team could play and contribute \u2013 with the exception of Tim. Tim had never played ball. It appeared that Tim had never thrown a ball or swung a bat, much less ever hit a baseball. Tim showed up for practice with the only baseball glove that the family owned, a relic from Sherry's Dad's playing days in the 1940's. The glove had big fat fingers and no webbing. You caught the ball in the palm of the glove or you didn't catch it \u2013 period. I gave Tim my glove to practice with until his mom could get him an acceptable baseball glove. Sherry was embarrassed for Tim and expressed to me that she didn't know what kind of glove to get. Would I help? So I bought Tim a glove for which Sherry reimbursed me.\n\nFor the time being, we didn't worry about a position for Tim. We concentrated on the basics of learning to throw, catch and hit. Much of the time while the rest of the team was running drills, Tim was playing catch with one or the other of our pitchers. He took batting practice with the rest of the team, but the learning curve was steep. Tim was frustrated and embarrassed, but with some pride, I never heard any negative words from his teammates. I would work with Tim before practice, but the team demanded my time during practice. He was improving but it was a slow process.\n\nOne of our coaches expressed his concern for Tim's safety in the field. After watching Tim miss yet another thrown ball, this one hitting him in the face, I had to agree. As the first game approached, I had a conversation with our centerfielder and second baseman about Tim. I told them that I was going to honor my commitment to Tim, as well as all the team, to play Tim because he had been at all our practices and had worked hard. I told Rocky, our centerfielder, to shade toward Tim in right field when Tim was in the game and for Jack, our second baseman to be sure to run way out into right field for any relay. I told them to be sure they were there to help Tim but not to do his job for him. Nothing would be more devastating to Tim, not even getting hit by a fly ball, than for one of his teammates to push him out of the way to make a play. I was happy to see that they understood what I was talking about.\n\nThe season started out a little slow for us. We split our first four games mainly because we were still learning to play as a team. After a close win in our fifth game, I called the team together after the game for a short meeting. I asked them what was wrong; we had won but they were all acting like someone had run over their dog. \n\nRocky stood up, and speaking for the team said, \"Coach the team we beat was a really bad team and we just barely beat them. What's wrong with us? I know we're better than how we've played up 'till now.\"\n\nI crossed my arms and looked into the eyes of each of my boys. Each boy, without exception, looked back at me with eyes that expressed hope and confidence that I, the Great Coach Anders, had the answer to all their problems. Boy, they were in for a surprise!\n\nAfter several moments of studying my boys, I waved out at the field and asked, \"Tell me something; are you having fun out there? Because baseball is a game and games should be fun. Make no mistake, until you start getting paid to play ball, it's just a game. Once you start getting paid it becomes a business and you should take it serious. Until then it's just a game; enjoy it!\"\n\nTheir looks of admiration and confidence in their coach changed dramatically to ones that universally expressed the opinion that their coach had lost his mind.\n\n\"Of course,\" I added with a twinkle in my eyes \"it's always more fun when you win.\"\n\nThe team visibly relaxed and a few even chucked at my joke.\n\n\"Listen, you are great ballplayers and are coming together as a team. Lighten up and do the things you all know how to do. Have fun and play the game! Ok, Practice on Tuesday, see you then.\"\n\nWith that we broke up and each boy ran to meet his parents. I smiled because while each of my boys was struggling to become a man, watching each run into the arms of their respective mother, made me realize that they were all still boys.\n\nI don't know what happened; I believe it was my speech, but after that day something happened. We started winning and winning and winning. The whole team came together and you could feel the joy and intensity with which they played. They became so close that each player knew instinctively what the other was going to do before he did it. \n\nAll except Tim. Tim played one inning in the field and came to the plate once each game. Through the first eight games Tim struck out six times and walked twice. He hadn't even hit a foul ball. In the field, Tim had five errors in the same eight games. However, I was starting to notice improvement. At bat, Tim was starting to swing the bat with some sense of purpose. He hadn't made contact yet but I was starting to believe that the moment was coming. In the field, Tim was doing something that I wish some of his teammates would do. While he still had trouble catching the ball, Tim made sure to get in front of the ball not letting it get past him. He may not catch the ball, but he did knock it down preventing runners from getting extra bases. Some of his teammates still played \"'ole ball\". You know, they would stand to the side, wave their glove at the ball as it went by and yell \"'Ole!\"\n\nIt was in our ninth game that it happened. Tim was at the plate. Their pitcher, a right hander, wound up and threw a belt high fast-ball right down the middle of the plate. Tim took a big swing and made absolutely perfect contact. Unfortunately, his swing was a little late and his hot line drive came directly at me in the coach's box at first base. I made the catch barehanded more out of self-preservation than anything else, but I did manage to make it look routine.\n\nSimultaneously, as I made the catch, I heard a scream from the stands \"MY GOD HE HIT IT! GREAT HIT TIMMY!\" You can guess who was responsible for that outburst.\n\nTim had taken a couple of steps down the first base line and was looking at me when he heard his Mom. I'm not sure I've ever seen a face turn as red as Tim's was at that moment. I came down the line and while putting my arm around his shoulders told him, \"Don't let it bother you; that's what mothers do. Hell, my mother still does it to me. Start worrying when they stop embarrassing you. Now go back and straighten that hit out.\"\n\nOn the very next pitch, Tim took another big swing. This time he was on time, but instead of making solid contact, he topped the ball. It was perfect. Their pitcher naturally fell off toward first base with his follow-through. The shortstop and third-baseman, knowing who was up and knowing Tim always swung late were playing well back and not really paying attention. What Tim hit was a slow roller toward shortstop that died just past the pitcher's mound. Tim was standing on first base before anyone even picked up the ball.\n\nSherry screamed again, \"MY GOD HE GOT A HIT! WAY TO GO TIMMY!\"\n\nI walked up to Tim and remarked, \"That had to be the sorriest excuse for a hit I have ever seen. Way to go Son.\"\n\nTim looked at me with the most innocent face I have ever seen and replied, \"That was just as I planned it Coach.\"\n\nThe season went on. With three games left we were in first place by two games with a record of 11 and 2. That's right, since game four we hadn't lost.\n\nGame fourteen was against one of the poorer teams but going into the bottom of the eighth we were only ahead by a score of 3 to 1. \n\nTim was in right field for the eighth. Our pitcher, Greg, was having a poor day. He had already walked 3 men through the first seven innings and proceeded to walk the leadoff hitter in the eighth. The next man up hit a long fly ball to the right field and Tim was not able to catch up to it. Rocky, backing up his teammate, managed to hold the hitter to a double but the runner on base scored. 3 to 2.\n\nThe next hitter hit a long home run deep over the left field fence, setting off an alarm as the ball bounced off someone's car hood. Oops! We were now down 4 to 3 with only our ninth inning to go. We went quietly 1, 2, 3, and lost for the first time in eight games. More importantly, we were now in first place by only one game with two games to play.\n\nAs we were leaving the field, Rocky Morrison's dad corralled me complaining bitterly about my decision to play Tim in such a close and important game. I listened to him vent for a few minutes, absently watching his son talking intently to a despondent Tim.\n\nAs Mr. Morrison wound down, it was now my turn to talk. \"Mr. Morrison, I need to tell you a few things. First of all, on this team we win as a team and we lose as a team. There is no one individual on the team, or on any other baseball team that can win or lose all by himself. Yes, Tim misplayed that flyball and it cost us run. But I ask you, 'Why were we in the position, against a poorer team, that one play would have made a difference?' That was just one play in a nine-inning game. \n\n\"Secondly, there is no one who works harder day in and day out than Tim Conrad. That includes your son Rocky who may be the best natural talent I have ever seen. Tim has the respect of his teammates and deserves to play, and By God, he will play! \n\n\"Look at your son. Do you know what he is doing? While we have been talking, Rocky has been talking to Tim, reassuring him of what I just told you. He's telling him that we win as a team and we lose as a team. Mr. Morrison, you would do well to pay attention to your son; he knows this game better than you ever will. If you ever do anything right during the rest of your life, make sure that you tell Rocky how much you love him and how proud of him you are.\n\n\"See you at our next game.\"\n\nWe won our next game which set up our final game against, coincidentally, the team with the second best record. If we win, we win the championship. If we lose, we have to play a one game playoff to determine the season champ.\n\nThe game was close all the way. They took the lead early on a walk, a stolen base and a single to left field. The one to nothing lead held to the sixth inning when Les, our leftfielder singled and Rocky followed with the longest home run I have ever seen. It was still going up as it went over the left-center field wall. It even went over the cars parked beyond the fence! We were up two to one.\n\nThe score held until their half of the ninth inning. With one out, they coaxed a walk and the runner immediately stole second base. One out and a man on second. At bat was a right-hand hitter who was known for diving at the ball and hitting it to right field. Tim was in right field.",
        "I looked out to right field and saw that Tim knew who was at bat and was playing only twenty to twenty-five steps from the right field line. Rocky was also positioned way into right centerfield. Without being told my team had positioned themselves exactly where I wanted them. \n\nSure enough, on the second pitch the hitter dove in to a pitch and hit a line drive curving toward the right field foul line. Tim took off at a dead run to his left. At the same time the runner broke for third. The other team's third base coach, anticipating the ball falling was waving the runner home. \n\nI watched helplessly as Tim closed on the falling drive. At the last minute, Tim seemed to lurch forward. I hesitated to call it a dive, but the result was the same. Tim was laid out parallel to the ground, his glove stretched out as wide as he could get it. The ball hit in his glove inches above the ground and stuck! Tim had caught the ball. Tim came back to earth landing face first. As he quickly came to his knees facing the foul line, I could see his nose bleeding and his mouth full of sod. Spinning counter clockwise, Tim came around to throw a perfect strike to Jack who made a perfect hop/skip relay to second base completing the double play. Game Over! We Win! \n\nI never saw that though. I was transfixed by the play Tim had just made. As he completed his turn to throw the ball in, all I could see was blood and snot flying as he spun. That and the big mouthful of green grass hanging out his mouth. This was maybe the most spectacular play I had ever witnessed. As I continued to watch, I saw Rocky come charging in from center field. He immediately positioned his six foot 180 lb. frame in front of Tim, a move I realized was made to clean up Tim's face and to give Tim a few moments to compose himself. In case you've never been hit hard in the nose, let me tell you, there will be tears \u2013 either from the pain or from the damage to the sinuses. Rocky, God bless him, was giving Tim a moment so he could face his teammates and the rest of the crowd with pride and dignity.\n\nAfter a moment, Rocky and Tim were jumping up and down like they had just won a championship. Wait a minute \u2013 they had! Jack and Robert, our first baseman, reached them first, but the rest of the team was not far behind. I turned to look at the stands and saw Sherry and three other moms trying to climb the fence. They were definitely in \"Mommy mode.\" I smiled, shook my head \"no\" and indicated the gate six feet away. They abandoned the imposing four foot chain link fence and rushed through the gate. They were only the first as the stands quickly emptied onto the field. \n\nLooking to the top row I saw Mr. Morrison standing, and hollering at the top of his lungs. He saw me and gave me a thumbs up.\n\nAfter checking to be sure Tim was OK, Sherry came up to me and gave me a big hug, whispering in my ear \"Thank you.\" Her tears were bigger than Tim's. God, I love this game.\n\nA couple of weeks later, we had our awards banquet. This was an opportunity for all the players and their families to get together one last time before the season was officially over. Every player got introduced by his coach and given a framed certificate of appreciation. The top two teams got trophies. We didn't normally give out individual awards, but this year, my team led by Rocky insisted we present Tim an award for the \"Most Improved\". Unbeknownst to me, someone had saved the bloodstained baseball from the final play of the season. Each of Tim's teammates had signed the ball leaving space for the coaches to sign. Rocky came up to me and asked that I say a few words as I presented the ball to Tim.\n\nSo, after recognizing all my young men and giving them their individual trophies, I began: \"My boys, and make no mistake, they are MY boys, asked me to make this presentation to one of their own. While I don't normally like to give individual awards to players in a team sport, this one time I agree. Baseball is a team sport and I've said many times \u2013 you win as a team, and you lose as a team.\"\n\nAs I uttered that phrase, my boys loudly joined in. I couldn't be more proud. Funny, I must have gotten something in my eye. I had to stop and rub it for a second.\n\nAfter a moment I continued, \"Everyone has something at which they are especially good. In Rocky's case, I fully expect him to accomplish great things in the world of sports. Jack has a great analytical mind and Robert has a special gift when it comes to interacting with people. As they say, he could sell ice cream to Eskimos. \n\n\"Tim Conrad is a wonderful violinist, maybe the best I've ever heard. Of course, that's probably not saying much, because until I heard Tim play I thought the best violinist I had ever heard was the guy who played \"The Devil Went Down to Georgia\". I've since been told that's not violin, that's fiddle playing.\"\n\nOnce the laughter at my expense died down, I went on. \"Tim has the ability to make his violin talk to you. It can weep, express indescribable joy or relieve all the tension in your body better than any massage. The first time I heard Tim play, I stood in the wings transfixed. I never knew music could be so riveting.\"\n\nLooking down at my boys, I saw surprise that I had heard Tim play. \"Don't look so surprised, I snuck into orchestra practice, just as I keep in touch with all of you and your activities. You make me proud, each and every one of you. Anyway, Tim's talent is his ability with the violin.\"\n\n\"This year, Tim came out to play baseball, a game to which he had never been exposed. It was a difficult time as he had to learn a new game from scratch, a game that all of you had been playing for years. In addition, he had to meet what was to be his new teammates. He was the outsider trying to prove that he belonged on this team and was deserving of the respect of his teammates. He accomplished that by working hard, never complaining or making excuses. \n\n\"Tim, your teammates recognize your efforts and in an effort to show you how much they think of you, they have put together this award which they aptly named \"The Award for Most Improved\". This is the ball you caught to secure our championship. You can still see your blood on it. It has been signed by the whole team \u2013 coaches and teammates.\"\n\nAs Tim came up and accepted his award, I said, \"Tim, thank you for being our friend, teammate and of course, my son. We are all very proud of you.\"\n\nI looked out into the crowd and saw Sherry silently weeping. I was happy for her.\n\nEpilogue\n\nIt's now twenty years later. All my boys from that team are now in their early to mid-thirties. Somehow, a bond was formed by the members of that team; a bond that is just as strong today as it was twenty years ago. Individually, they get together several times a year for birthdays, weddings, even a funeral or two. But for the last several years, since Rocky retired (yes, Rocky went on to play pro ball until a knee injury forced him to retire), we all met at his place for a Fourth of July celebration. It is always fun to see each of my boys and catch up on what's going on in their lives. \n\nAll my boys have been successful. Included in the group are 2 lawyers, a judge, a doctor, a dentist and a teacher. Three military officers (a colonel, master sergeant and gunnery sergeant), a chief of police, a builder and an owner of a furniture store completed the mix. Oh yeah, we also have the most sought-after violinist in the country.\n\nThis year, as the celebration for the Fourth of July approached, I received an invitation from Tim to come to Boston for the Fourth of July performance of the Boston Pops featuring none other than Tim Conrad. Tim had reserved a block of fifty and wanted his whole extended family to be there for him. Needless to say, the whole team was there.\n\nWhat a gathering. The years seemed to roll away as we caught up and reminisced in the lobby before the performance. I was introduced to new wives and cuddled new babies. I was with my boys and it felt great. Sherry Conrad came up to me, kissed me on the cheek and told me I would be sitting with her. \n\nFinally, we were ushered into the hall and shown our seats. We settled in for what we were sure would be a fantastic performance. We weren't disappointed. They put on a rousing show featuring all the patriotic songs one would expect from a July Fourth show. \n\nJust as we thought we were coming to the end of the show, Tim stepped up to the microphone to thank everyone for coming, especially his family, gesturing toward us with his bow. He said they had two more songs they wanted to perform and would segue from one into the other.\n\nWith that Tim went back to his place in front of the orchestra, rosined up his bow and dove right into \"The Devil Went Down to Georgia\". When Tim recited the line, \"My name is Timmy, and I know it may be a sin, but I'll take your bet you son of a bitch because I'm the best there's ever been\", our whole group went wild. The emotion spread throughout the whole concert hall. Everyone was out of their seats, waving their arms and singing along. It was a real hoot to see the Boston Pops orchestra in their penguin suits hamming it up as the devil's band.\n\nTrue to his word, just as the last echoes of the song died down, Tim, alone, began playing \"Take Me Out to the Ball Game\". As the song came hauntingly off the strings of his violin, everyone in the hall began singing the words to the greatest song in sports. \n\nHowever, I've got to say the people in Boston don't know the right words to the song. Everyone knows the proper wording is \"root, root, root for the Cubbies...\" not \"root, root, root for the home team\" as they sang it. Oh well, maybe they'll learn when the Cubs win the World Series!"
    ],
    "authorname": "Jeff_Thomas",
    "tags": [
        "baseball",
        "coming of age"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/an-old-coach-remembers"
}